hello everybody and welcome back so in this video i'm going to share with you the fastest and most effective way to learn a new programming language now the reason i'm making this video is because so often people jump into these huge courses online right maybe they're buying some course maybe they're looking at you know like a 10 hour long youtube video maybe they're going and reading all the documentation or buying textbooks just to learn a new programming language now i'm here to tell you that is completely unnecessary and although there is some value in doing that and of course you're going to learn more than maybe from spending an hour trying to practice the programming language if you're just looking to get up and running as fast as possible you want to understand the main concepts and kind of learn as you go then following the technique that i'm going to share with you in this video is a much better use of your time and is definitely going to lead to you having a better understanding of the language that you're using so with that being said let's go ahead and get started and i'll talk to you about the fastest and most effective way to learn a new programming life now as we all know being a developer involves constantly learning and developing new skills personally though this is one of my favorite parts of this field because learning something new is always energizing and it leads to personal growth now the sponsor of this video which is x team takes this learning and growing very seriously and is committed to helping its employees do so x team is an 100 remote company that supplies brands and businesses with access to extraordinary development teams developers at x team work with big brands like riot games fox coinbase and many others the x team culture revolves around freedom and letting their developers live energized xteam empowers their developers by funding their learning and growth and providing opportunities for you to pursue your passions the developers that work for x team get to roam all over the world while staying at their hacker houses that are located in some of the most beautiful locations x team also hosts three month long seasons that are filled with challenges rewards and games to inspire and energize you finally x team provides all its developers with 2500 a year to spend on doing whatever you love and keeping you energized start working as a remote developer today by hitting the link in the description so i'm about to share with you some concrete steps and kind of a procedure or process that you can follow to learn a new programming language quickly now the goal of this process or procedure is going to be to make this as time efficient as possible and to focus on your understanding and not your memorization of specific concepts or syntax so that leads me right into the first point the first thing that i always do whenever i'm learning a new programming language and this may seem strange but what i do is learn about why this programming language is unique or different from ones that i already know now of course this means you already have to know a programming language you can still apply the formula that i'm about to tell you if you don't but of course this video really is geared towards people that already have you know programming fundamentals and know at least one programming language but the reason i do this is because i want to very clearly at the beginning of this kind of learning process understand what i actually need to learn i want to know what the core differences are i want to understand why i would use javascript and not python i want to understand why this language is maybe superior in some ways is not superior and of course i want to know some basic features of it like is this a typed language is it dynamic do i have to compile this is it an interpreter all of these basic things are what i want to start off with so i have an idea of what i'm getting myself into and what i'm about to have to learn the next thing i do after i kind of get a general sense of what this language is i understand the uses and the main differences between the one that i know is i go to some official documentation or i go to some really extensive tutorial or guide something that has a table of contents for this language i look for something that's like as big as i can find and then i quickly skim through the table of contents the reason i do this is because i want to see immediately if there's anything in this language any keywords any features maybe something that i haven't seen in a programming language i already know that's the first thing that i do for example if i'm learning python and i come from a different programming language well something that might stand out to me is say like list comprehensions or the fact that i can like define a function inside of another function just a bunch of things that say you can't do in another programming language but that you can do in this one so i'll go through the table of contents i'll figure out all this stuff that i don't yet know or that i've never seen before and i'll write it down and that is not going to be where i start but those are going to be the things that i need to focus on and then i'm going to spend more time learning because i don't already know them from the previous language the next thing that i'll do so we're moving on to step three here we had step one and step two already is i will go and i will find some course some tutorial something that can give me a general overview something that's fast say like under an hour of the programming language now i might watch a youtube video i might go find like a nice article or maybe a tutor like interactive tutorial or something and i'll spend about an hour usually not more than that just going through following along and trying to get a sense of what this language is like and just kind of a general introduction so that is my step three is go find some resource that's about an hour long maybe an hour and a half and just kind of follow along with it and just get a sense of what this language is now as soon as i've done that so i figured out the main differences i know kind of the main uses of this language and then i have a general sense of it from some tutorial or video i'll immediately open up a website say like leak code or algo expert or some place that i can practice really easy programming problems the reason for this is i want to immediately take anything i know about this language and just start trying it just start practicing and just start seeing you know how i can actually use these language features and usually what that does is it immediately points out to me what i don't yet understand about this language and what makes a lot of sense maybe i have my programming fundamentals down so i know how to do the for loops and i'll do the if statements i have to cross check with some syntax on a website or with a quick google search but this is going to expose to me immediately the stuff that i need to focus on and what i should learn next so i'll spend maybe about an hour doing that or however long i feel is reasonable and i've got some good practice in and then i'll say okay so when i was doing this i noticed that i really didn't understand this concept this one was a bit confusing i had a lot of trouble with this syntax let me go look that up now and figure out what those things are so now i'll have a list you know maybe of like 10 things that i don't really understand and that i want to look up so i'll look up those specific things figure them out and then again go back to the programming problems and practice them and this is the loop that i will continue to do until i get somewhat comfortable with the language once i'm comfortable with this language and i'm like okay i have a grasp of it i understand the basic syntax i feel like i could write a program in this maybe i need a bit of help but generally it makes sense immediately i pick some kind of project something small maybe like an hour and a half two hours and just dive in and i just try to make that project now i know this seems overwhelming and people are going to be like oh i don't have a project idea you can make whatever excuse you want but just go look up some template project project ideas whatever you want and just start trying to make something this is great because you're going to learn an enormous amount when you're in this project and if you already have a basic understanding you should be able to get enough done if you pick a simple enough project that you can just kind of look things up on the side and just find the information that you need and honestly you can do all of this in one day i know that sounds like a lot but let's say you said today you know i'm learning python or i'm learning go i'm learning javascript all the stuff that i just said realistically you should be able to do in a day's work so say eight hours and then you can come back tomorrow after a good night's sleep you know continue to work on the project and look things up and that should give you a really good fundamental understanding of the language and you should be ready to pick up some more more advanced concepts you should have a decent understanding and you will have actually practiced a lot of this stuff and not just heard about it from someone else so really that is the procedure i'm gonna summarize it here one more time so the first step is to understand the fundamental differences between this language that you're learning and some language that you already know figure out the basic features of this language is it typed is it dynamic do i need to compile this what does my dev environment need to look like what is this used for what is this not used for understand all of those things and then you move on to step two which is finding some resource some official documentation or some large guide that can give you a kind of summary or table of contents of all of the different main language features again the point of this is to go through that table of contents and find all of the things that you've never seen before or that don't make any sense and that you're definitely going to need to learn and kind of keep track of those make a list and have them ready so that when you move further in the language you know that that's what i need to move on to next and that's what i should learn next after you've done that you have an idea of all of the main things that you kind of don't already know or that you think are going to be challenging find some resource that can give you a really quick and good overview of the language so go on youtube find some hour long course find a crash course a speed course go find some you know article or something quick on the internet that you can read through in about an hour and just get a good understanding and kind of grasp of what this language looks like some of you know the styles of writing it and all of those different things after you do that immediately hop on to lead code hop onto algo expert some website that you can practice programming problems on and just start doing easy or medium programming problems whatever your current like skill level is on those websites or whatever you think you can do just go ahead and start practicing those and this will immediately expose to you the gaps in your knowledge and the things that you really understand and that you really don't understand you can keep track of these things but you'll probably just remember them anyways and then after you've done a good amount of practice go through your list of things you don't know yet and just start learning those specific things this should be easy because these should be small different things right and they should just take you a few minutes a quick google search maybe you know a 10 15 minute video and you can kind of go through these things and after you learn one you can go back to that cycle where you practice it and then you figure out okay did i get that or not learn it again and back and back and forth so you're cycling through practicing learning a concept practicing learning a concept so on and so forth finally once you feel somewhat comfortable with the language you've got some practice in and you feel like you could maybe write a program then you go ahead and you actually jump into making your first programming project in this language now hopefully you've learned enough at this point where you can just pick something simple and you can kind of have a high degree of confidence you'll at least be able to finish it right and of course when you're going through you're probably going to forget a lot of stuff there's going to be stuff you need to look up and things you don't need to do but this will be great because you're actually going to be applying everything you've learned into a project and you're going to be learning stuff as you go and kind of cross cross referencing say some of the resources you looked at and the code that you're currently writing after that you should have a really good grasp of this language and now it's just time to learn about all those things that maybe you've never seen before are more complex and then after that you really should pretty much be done now of course this is the basics this is the fundamentals this get you up and running nice and quick this is not going to teach you every single advanced feature in the language but this is what i'll do especially if i want to learn a programming language fast and fairly effectively so that has been my guide and kind of my tips for picking up a programming language quickly and effectively i would love to hear what you guys think about this in the comments down below is there any tips that you agree with disagree with is there any advice you would give people please do let me know and with that being said if you enjoyed make sure you leave a like subscribe to the channel and of course i will see you again in another youtube video you