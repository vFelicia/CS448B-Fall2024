hey guys and welcome back to another Kibby tutorial so quick refresher on what we did last time is we pretty much set up this GUI using the Cavey language now I'm assuming something you probably realize some of the issues we might run into now so for example if I want to click this button or I want to type something in here and I want to get this information how do we do this we knew how to do it from Python code but with Cavey language there's no way for us to reference these variables especially when we want to do something with them logically from our actual Python code so that's what I'm gonna be showing you guys how to do today we're gonna be doing that using something called object properties and then IDs for some of the widgets you can think of it similar to IDs for like CSS classes or like spans and divs like all that stuff okay you know you have class and ID but anyways if you don't know that don't worry I'm gonna be going through how to do it all right now so in the KB language and I just have the same file I have last time again all this code will be up on Tech with Tim net under the kV or Kibby tutorials but what we need to do is we need to set up some variables now these variables are gonna represent something called object properties and we'll talk about what that is a bit later but essentially it's a way for us to access our values from within the class and you'll see how that works but we're gonna do them discuss a name name and email email because these are the two pieces of information that I likely want right and I'll be showing how we can actually bind this button to a function as well and all that these are the names we want right we want this text input and we want this text input so we're gonna declare what these are known as our global variables because while they're inside the class so name is gonna point to the ID name and email is gonna point to the ID email now you can make these difference you could make this email 3 it doesn't matter for simplicity I'm gonna make these two names the same ok so what I'm gonna do now is I'm gonna set some IDs for my text inputs so for this text input I'm gonna say the ID is gonna be equal to name and I again see how we have name here that's what you have to put and then for this other text input I'm gonna say ID is you know now just note right if I change this to email like with a bunch of L's this still sustains as email because this is going to point to the d and then we're gonna be able to access this from within our code I know it's weird kind of how that works but you guys will see that in a second ok so that's all I have to do for right now in this kV file I'm just setting IDs for my text inputs so name and email and these reference each other so email is going to reference email name is gonna reference name and you'll see how that works here so what I need to actually do is need to import something of course you got always gotta import stuff to sent essentially we're gonna say from Q dot properties I believe it's a capital P properties maybe one second guys I'll have a look here ok so I believe it's from Kibby dub properties we're gonna import object property I don't know why that wasn't coming out for me it always glitches out I don't know Fanny was key we're gonna do that from Q dot properties import object property when we're gonna do in our class now and I'll explain how all this works but essentially we're going to say name equals object property and then in here we're just gonna put enum and we're just gonna set this up as blank for right now because when we initially create this class so when we build it there will be no actual object property until it reads the kv file and looks at that so we have to initialize it as none to start and then it will be given a value after so say email equals object property none now note write this name and this email need to be the same as what these are so name and email because it was gonna sync up and find each other right so that's how we're gonna do that so for Python for our Python code these are the same for our IDs these are the same okay I hope that makes sense ever okay so we have our object properties now so this should actually be let's just test it and make sure we didn't make any mistakes to get rid of this pass now and see if we're running into any errors or not no okay so everything's working fine so now what do we have to do so I want to now bind this button right that we have here so that when we click it we get the same thing as we got last time and it prints out the text input for our email and our name right so how can we do that well if we remember the property for button to get like what happens when you press it was on underscore press okay so on press is gonna have to link to something now what is that well we need to create a method inside of our grid class here that is gonna be that on press method but we need to call so let's do that we'll say define I'll just call it BTN for button okay and remember we need to give one parameter here which is instance so take self and instance and we need this instance parameter and we'll talk about that in a second actually we might not need that we might not need this instance we'll see okay so we're gonna leave it out for right now because I'm just thinking about something anyways okay so what we're gonna do in here now is we want to get the name we want to get the text for this and we're gonna print that to the screen oh this is actually very straightforward it's exactly what we did last time so let's say name and then s we don't need that we new comma and then name dot txt right and then what we can do is we can say email and then we can say email dot txt or dot txt like that now I know these are not popping up it's because I think to add this self here because we're referencing the variables for the class but these are gonna be class variables which are going to store name and email so we can reference them in here by just doing self dot name text and then self dot email dot txt and let's actually go back now to our kv file and what we're gonna change here now is we're gonna say BTN like this now the thing is we can't just do this because if we do that but it's actually gonna happen is we're gonna look in this entire like file for a function that's called BTN not a method so what we need to do if that happens if we want to look inside here for the method is we actually have to say root BTN now the reason this works is because if you look right the root widget is my grid so for referencing root then we can reference all of the methods and all the attributes that are within that so let's try this and see if it works ok so if I click this you can see it says name email and obviously they're blanks I say hello I let's just do Tim gmail.com submit and you can see now we're getting hello and email Tim at gmail.com and that is working just like we had planned for it to work before right so now obviously if I wanted to clear those very straightforward we can do the same thing we did before self thought dot TX dot txt always do txt equals blank rank I don't know why that happened and it will say self that email a dot dot text equals blank ok and let's run this and just make sure everything's working here so much type hello and I click Submit you can see that it's clearing it now obviously right that's because we linked up this name and this email to be an object property when we read this Cavey file we found name we find found email we look for the IDS in here we linked all those up together so now we can reference our text input with those simple object properties of name and email and that is essentially how you do that obviously when we were calling the button what we did is we just use a root BTN because we're referencing first this widget and then the method button and yes so remember I was saying you had to put instance in here you don't actually have to do that and that's you don't need to know why if we were to do something like this and he said deef define button here then we would have to give it an instance because when we call what do you call it root dot button what's gonna happen is we're gonna pass an instance automatically into this this method that you don't actually see happening right if you know anything about objectoriented programming so I just want to try this and no promises that this is gonna work because I haven't tried this yet but I want to create a method here or sorry a function here and I want to try to call this function instead of this method so if I want to do that I would think you would just do this root you just do BTN right and we'll see if this works let's see name button is not to fund yeah so I think if I do something like cap BTN this might work but I could be wrong my app object has a hatchery button yeah so right it we can't actually do it with this function I thought we were gonna be able to do that but I guess I'm incorrect I assumed we could probably put like define BTN in here and then if we called app BTN that would work um but anyways I've shown you guys now how you're supposed to actually do this with the methods so just fall with that method I just want to test that the other one's gonna work um and yeah so that's essentially been it for this tutorial in the next tutorials we can get into some more advanced stuff this is just showing you because from now on I'm gonna be writing everything in this Cavey file so I want you guys to understand I'm doing why I'm doing it how we can link things up and now we're ready to get into some more advanced things do some more graphic stuff we're gonna do some drawing well maybe make a game you know I'm not sure exactly what's gonna happen but it will be good so if you guys enjoyed the video please make sure you leave a like and subscribe to the channel and I will see you again in the next one