hello everybody and welcome to video 2 in this linux for programmers tutorial series in this video what we're going to be doing is talking about common linux commands and how the linux file system actually works so let's go ahead and get started after a quick word from lenode which is the sponsor of this video simplify your infrastructure and cut your cloud bills in half with node's linux virtual machines develop deploy and scale your modern applications faster and easier using lenode lenode is a great company as i said i've been using them for well over two years now i trust them they have great support and i've never had an issue using lenovo so i can highly recommend them you guys should definitely check them out and use the link in the description if you have not already created a lenode account anyways one last reminder here from lenode is that if you have not already please sign up for these five videos so if you want to see these five videos which are the ending videos in this series and in my opinion the more interesting ones they will be live on youtube but probably not for a little bit if you want to see them immediately as soon as i finish editing them and uploading them then go ahead and register on this page it will let you know when they are ready to go and then you can have access them immediately before they are posted live to youtube and one last thing there is a quick guide you can follow along with for this video it does not cover everything that i'm going to talk about but it does cover kind of the ending commands that i'm going to go through in terms of how to find files i'll leave a link to that in the description in case you are interested all right so let's go ahead and get started you can see that i've signed in to my virtual server right here i went through how to do this in the previous video so check that one out if you are not currently on this step and the first thing that i want to talk to you about is a very common command which is ls now ls stands for list and this is going to list the contents of the current working directory now what is the current working directory well in fact to explain that i'm just going to start by explaining what this entire line actually means so this line right here that you're going to see a ton as we go through this video says root at localhost colon tilde and then the number sign or the pound side now root right here simply stands for your user or the user that is signed into this linux machine so in this case we signed in as the root user then the at sign is simply signifying that the thing after is going to be the location you are signed into we are currently signed into localhost although oftentimes this will say the ip address of your server then it's going to say colon colon simply signifies that we're ending this like roots at localhost thing and then afterwards is going to show you the current working directory now our current working directory is actually tilde what this pound sign means is okay you are now ready to start writing commands after this pound sign so it's just the delimiter between your working directory and the user uh that's signed into this machine so anyways tilde stands for our user's home directory so every single user and we can have multiple users on our linux device we'll have a home directory and for each user it will be in a different place but the tilde will mean you are in that user's home directory so right now we're in the root users home directory so when i type ls this is going to print out the contents of the user's home directory so when i do this i type ls you see that we get snap test1 tim.txt and you won't see these files i've created them previously just for this tutorial but it's just showing you all of the things in this directory now i want to talk to you about another common command that we're going to have to use to be able to start explaining how this file system actually works so now we know how to list out files but how do we actually navigate this file system how do i move out of this home directory how do i get into the folder test one or the folder snap or look at this file tim.txt well to do this we use what's known as cd now cd stands for change directory you simply type cd and then the path that you want to go to or the directory that you want to move into so if i would like to get inside of the test 1 directory what i can do is type cd test 1 then press enter and this will change my working directory to be tilde which is my user's home folder and then test 1. now inside of here we can check the contents of this folder so if i type ls notice we see that there's a folder called test2 so if i want to uh cd into this folder i can type cd test2 and now i can check the contents of this directory so now i type ls and notice this is where the file tim.txt is located now there's also a tim.txt inside of this main folder here so don't get fooled there's two tim.txt files but anyways i want to show you how that works so now we're inside of the test2 folder we see that tim.txt is here there's no more folders to go into so how can we move back out or how can we move to the upper level directory or the parent directory of test2 well to do that we can use cd again but instead of having the name of the directory we simply type dot dot now dot dot stands for go it to the parent directory one dot stands for the current directory two dot stands for the parent directory now don't get confused three dots does not bring you up another directory above that in fact if you want to move up two directory levels what you would type is cd dot dot slash dot dot this is just delimiting this and telling you yes i want to go to the parent of this parent so if i type cd dot dot this brings me to test one if i type cd dot dot again this brings me back to the user's home folder all right so now let's do something crazy let's type cd dot dot again and let's move into what we're going to call the root file system directory now the official name of this directory is the root directory but it's kind of confusing because there is technically a directory called root so when you just see a slash here this means you are in the highest possible directory so this is where everything is going to be stored and in fact if i type ls you can see that everything is here so we actually have all of the directories that are contained on this linux machine now again slash is just the main upper level file system directory everything is stored inside of this directory there might be a few exceptions to that but that's getting outside of the scope of this tutorial anyways you can see there's a bunch of folders here i just want to talk to you about some of the main ones and what they mean because they're kind of important to understand so i'm just going to quickly go through some of the important folders here give you a quick you know one or two sentence definition of what they are and then we'll move forward into some more interesting things so bin the bean directory simply contains user executable files that's all i need to say about that one the boot directory simply contains files that are required to boot the operating system the dev directory stores things related to uh hardware devices that are connected to this machine so not drivers but just information about hardware devices etc contains the local system configuration files for the host computer slash home is the home directory storage for user files so this is where it gets a little bit confusing where i need to give a bit of an explanation but the home folder is actually where all of our users home folders are going to be stored now it's weird because we have this home folder but this home folder is not actually the home folder for our users so in fact if i cd into not whom but into home and i type ls you notice that we don't see a root folder the reason we don't see a root folder is because the root user is a very special user in linux it is kind of like your super user it is the administrator in the sentence and in fact the home folder for the root user is located in a different place from all of the other users it's located in the root file system and then slash root but if we were to have another user on our machine so let's say we have the user named tim or the user named joe or whatever then we would see folders inside of this home folder that were called tim and joe and those folders would be those users home folders so slash home slash the user name is where users home folders are located except for the root user they had to make that confusing for us anyways hopefully that's clear but that is what the home folder is for user files essentially then we have slash lib this contains library files that are required to boot the system so similar to slash boot we have slash media this is where we're going to mount external and removable media devices celica usb we have mnt this is where you would mount uh temporarily i believe yeah i believe it's temporarily file systems i'm not going to get into that because that's kind of confusing slash opt this is optional files i don't really need to talk about that anymore we already talked about slash root slash sbin this stores binary files these are actually system binary files and they are executables used for the system administrator we have slash tmp this simply stores temporary files anything inside of this folder can be deleted at a moment's notice there are actually no notice whatsoever it could just be deleted at any point in time so don't store something in here that you want to permanently store slash usr this is used for shareable readonly files so for all users they can look inside of there and this includes executable files and stuff like that slash var this is going to be used by a lot of database software and this stores variable data files not really much more to talk about there now of course there's some more folders i didn't talk about not that important you can look them up if you want but those are the main ones anyways now that we know that let's go in to our users home folder now remember for our user that's going to be root although for other users it would be located in the home folder so we'll cd into root shows the tilde which means this is our home folder and now let's learn how we can actually make some new files and folders and all of that and in fact before we do that i'm going to show you my favorite command which is actually the clear command this is pretty straightforward you can guess what it does when you type clear it simply clears the contents of the screen so that one's useful i'm going to probably use that a lot through this tutorial series just to clean up some stuff on the screen in fact before i get into the next command there's a few keyboard shortcuts that are going to be really useful for you guys to know the first one is tab so when you're trying to change directories or just trying to type out a directory if you know what it starts with but you don't want to type out the entire directory and you know it's relatively unique in the sense that there's not like a bunch of directories that have a very similar name to it what you can do is type out the first few letters or even just the first letter of the directory name so if i type cd and then te and hit tab notice it's able to auto complete this directory name because there's no other directory that starts with te in fact if i were to just type t and press tab it's also to auto complete it's also able to auto complete that as well so this is very useful whenever you're trying to type out directories try pressing tab after you type a few letters and it should just auto complete it for you another useful one is the up arrow key this will cycle through all of the commands that you've previously used and then the down arrow key will go in the opposite direction so you can see that you can just look at those very easily um the the side arrow keys you can use to kind of like modify things on the current line you can't actually use the mouse to like move your cursor around on the line so just keep that in mind when you're on the command line pretty much everything comes as input from the keyboard so anyways now let's look at another command and this is going to be to make a new directory so right now type ls you can see we have test1 and tim.txt let's go ahead and make a new directory inside of this folder or inside of our working directory and let's call this uh test2 why not or to make it simpler we could just call it like a b something like that but to make a new directory the command is mk der pretty straightforward stands for make directory and you simply type the name of the directory afterwards so we could type mkdir a we do that now if i type ls we see we have a directory called a so let's cd into a now let's make another directory let's just call this one b now we can ls we see we have b now we can go back into the root directory and that is how you make a directory pretty straightforward next i'm going to show you how we can make a file so this method i'm going to show you right now will make an empty file i'll show you how to add contents to the file afterwards but this one is just for an empty file so if you want to make an empty file and oftentimes you actually do want to do this you can use the command called touch you simply do touch and then the name of the file usually you don't want to include any spaces or special characters in your file name so i'm going to say touch and then we'll just say new file dot txt like that if i do this type ls notice we now have new file.txt popping up as one of the contents for this directory now i'm going to show you another command this one is really straightforward it's called pwd this prints the current working directory so when i do that notice we get slash root that is equivalent to the tilde because again the tilde represents that we are in this user's home directory which is slash root now if i want to make a file or sorry not make a file if i want to read a file what i can do is use a command called cats now cat stands for concatenate actually does many different things i'm going to show you a few examples in a second but if i want to just read a file i can type cat and then the name of the file so in this case let's say i want to read tim.txt i can type cat and then tim.txt and notice it tells me that the output of this file or the contents of this file sorry is hello my name is tim now if i try to read the file we just made so new file.txt notice we get nothing because well there was no contents in that file so how do we add contents to that file very good question i'm going to show you now we can also use cat to do this so if we want to add contents to a file and in fact this is actually going to concatenate or add to the end of the file what we do is we type cat then we type two of these so you can call them arrows or greater than signs or less than signs or whatever you want and then the name of the file that we want to add something to so if i want to add some contents to new file.txt i say cat two of those little symbols then new file.txt notice it brings my cursor to the next line but does not terminate this command and now it's prompting me to actually type something so i'm just gonna say this is a new file now that i've done that i can press enter and notice that when i press enter nothing happens so how do i actually stop this you know how do i get this command or get this cursor to stop running well you just kind of have to know this but the thing that you're going to do is type control d so you're gonna use that shortcut that will end this and then it will add those contents so whatever you typed on these lines to that file so now after you've typed control d to terminate that you're gonna type cat and then the name of the file that you want to read the contents of new file.txt notice we get this is a new file now just to show you if i go ahead and add some more stuff to new files so let's just add last line and then we do ctrl d and then we run this again notice it's going to concatenate to the end of the file and not override the file so that is the basics of cast that's how you read with cat that's how you write contents into a file also if the file does not currently exist so let's say cat new file one we also could write directly into a file if it doesn't exist so cat and then the two arrows and then new file1.txt it's going to put the cursor up again now i can just type you know new stuff ctrl d and we should see that is going to write into this file all right so now we can read this file so cat new file and then one dot txt and notice we get new stuff inside of that file so there's some more stuff that you can do with cats in fact one of the most common things is to concatenate the contents of one file to another so let's actually concatenate the contents of new file one to a new file to do this we're going to say cat then we're going to save the file that we want to take the contents from so this file won't change so we'll say new file1.txt then those two little arrows again and then the file we want to add this to so we're going to say new file dot txt go ahead and press enter that's going to run that for us and now we can cycle through our commands we can read new file and notice it added the contents of new file 1 to the end of new file 2. so there's some more stuff that you can do with cats but that is kind of the basics and that's all i'll show for right now so before we move any further i need to quickly thank the other sponsor of this video which is algo expert algo expert is the best platform to use when preparing for your software engineering coding interviews and alongside their algo expert product they also have a product called system expert which is used to prepare for system design interviews and learn how to build largescale systems so get started using algo expert today by hitting the link in the description using the discount code tech with tim for a discount on the platform next thing that i want to show you is the mv command this stands for move so this is how you actually move a file this one is really straightforward you simply say move and then the file name or even the directory name if you want to move an entire directory and then to the location you want to move it to so in this case i want to move new file dot txt and i want to move this to in fact did we make a folder here i think we made the folder called a yeah we did so let's move it to a so mv new file.txt and then a like that press enter and now if i ls notice that new file is gone by cd into a i type ls we see that new file.txt is inside of there so that's the basics for moving you can also move multiple files at the same time you can say move and then what file do we have here tim.txt and new file1.txt we want to move this into a or sorry we actually we need to go back a directory to do this so cd.dot and then move new file1.txt and tim.txt to the folder a if we do this this should work type ls notice all those are gone cd into a ls and all of them are there awesome so now that we have that i'm going to show you the copy command so if we wanted to copy a file we're inside of a let's say we want to copy tim.txt we're going to say cp tim.txt again this stands for copy and then the name of the new file that we want to copy this to so let's just say copied.txt press enter ls and now notice we have a file called copy.txt and if we read this with cat so copy.txt we see hello my name is tim is the contents of that file awesome so now we have learned how to create new files how to create new folders let's learn how to delete them so to delete a file there's a command called rm this stands for remove there's a few different options here but the basic is to simply just type rm and then the name of the file that you want to delete now rm is specifically used for files although there is a flag we can pass to this to delete folders now to delete the files what i'll show first let's say we want to delete that copied file say rmcopy.txt now we type ls and boom that file is gone now let's say you are a little bit nervous to be deleting something you don't want to just delete right away maybe you want confirmation you could type rm hyphen i this stands for interactive and what this will do is prompt you if you want to delete the file so now notice it says cannot remove copy.txt no such file directory oh that's because we already deleted it but let's try to delete say tim.txt so rm hyphen i tim.txt it's going to say remove regular file tim.txt if you type y and press enter it will remove it if you type anything else it will not now when we ls notice that file is gone all right so now i will show you how we can actually remove some more things as well so let's say we want to remove a folder so we have this folder b right we cd into b and ls notice there's nothing inside of ls so let's cd out and now let's delete this b folder so to delete this folder i can't simply type rmb if i do this says cannot remove b because it's a directory so to remove a directory what you need to type is rm and then one or two different things so if the directory is empty you can type rm hyphen d this stands for directory and then that will delete this directory b since it's empty this will work but if it is not empty then you also need to delete the contents of the directory itself so you would need to type rm hyphen r and then the name of the directory now hyphen r stands for recursive and this means recursively delete everything inside of this directory so this is a dangerous command be careful when you run this but it will delete everything inside of b and b itself if there's something inside of b right but since b is empty we can just type rm hyphen db and then it will delete that directory type ls notice b is gone so that is how you remove directories and that is how you remove files using rm uh there's also a command rm dir rmdir is identical to rm hyphen d so this will just remove an empty directory for you rmdir cannot remove a directory that has any contents inside of it to do that you would need to use rm hyphen r i know this is a lot but there's just a lot of information and of course i'm not showing all of the details of these commands just the ones that i think you need to know all right so now that we know how to remove directories i'm going to quickly show you how we can remove something using pattern matching so we have these two files new file one and new file dot txt let's say we had like 25 million text files obviously i don't want to remove all of them by typing in all their individual names maybe i don't even know all their individual names you know i type ls my screen takes like 10 minutes to fill it all so if you want to remove everything that has a certain pattern so in this example every single test file you can use what's known as pattern matching now there's more advanced patterns than the one i'm going to show you here you can do something like rmstar.tx and the star simply means for anything and the star simply means anything so anything.txt i'm going to delete that's literally what this means i could also do something like you know test dot star and this means remove test dot and then any file extension for test so let's do star dot txt and now notice i type ls all of my files are gone so that's a good way to remove all of the files that have a certain pattern you would also do something like star.star and that would literally remove all files and just not remove any directories all right so the last two things that i want to show you are the locate command and the find command these are very useful when you're searching the file system for a certain file and you don't know if it exists or not okay so i lied i was going to show you the locate command but i'm actually going to skip that one for now i'm going to throw that in a later video because it takes a little bit of explanation i'm going to show you a different command though called the find command these two commands essentially do the same thing they just work a little bit different and have a different efficiency associated with them so the find command will search for a specific uh file or specific directory whatever you end up typing in your current working directory now you also can declare a different directory to search in but if you want to search in the current directory what you type is find dot hyphen name standing for i want to search for the name of a file and then the name that you're looking for so in this case let's say i'm looking for the file name a dot txt if i do that notice it shows me now where a dot txt is located from my current directory so it's saying okay go into the slash a folder there's one called a.txt there's also one right here called a.txt before this i created a bunch of files just so we could do this all right so now let's say i want to find a b txt great now let's say i want to find all txt files well let's do asterisks.txt and sorry that's my bad when you use pattern matching you actually need to put these in quotation marks so this will work now but whenever you use an asterisk or some special character in the name you need to just put it in quotes when you're using the find command that's a small detail but notice that now this works finds all my text files and notice i created a bunch of just random text files with these names so anyways that is kind of the basics of the find command there's also another one that's interesting this is the one that omits uh capitals so notice that if i were to say actually let me go back here if i were to look for a dot txt i don't find anything right but now if i change this flag here from name to i name this means don't consider capitals so look for any case so if i say find dot hyphen i name a dot txt now it's going to find the a dot txts that are lower case because it's not considering the case now that is how you look for files and how you ignore the case the last thing i'll show you is how you look for directories so let's say we're going to do find we're going to do hyphen type and then we're going to type d which stands for directory then we're going to say hyphen name then we're going to type the name of the directory again you don't need to memorize this you can look up this kind of stuff but just trying to show you the basics here so find dot hyphen type d hyphen name we're looking for a directory let's find directory called a notice we find one right there now i don't think i i think i delete that b directory so i don't think we're going to find it but that is the basics of the find command and actually with that i'm going to conclude this video so this was kind of a high level overview of linux as a whole how the file system works the basic commands and just how to be kind of comfortable navigating around and doing basic things of course there is a lot more to know as i'm going to cover in this series but hopefully this gave you a really good start and even after just watching this video you should be a little bit more comfortable dealing with the command line system or command line machine so anyways if you guys enjoyed make sure you have a like subscribe to the channel and i will see you in the next youtube video you