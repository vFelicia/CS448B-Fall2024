hey guys and welcome back to another YouTube video so it's gonna be the eighth video in my PI game programming series I just want to start off by apologizing for not posting recently it's been about four or five days without a post and not just because I've been very busy I haven't had an opportunity to record any videos no excuses though I'm gonna get right back into things and be posting more videos this week I'm trying to record a bunch tonight so that I have some in case I missed future uploads so sorry about the late video here but I'm bringing out for you guys now so in this video what I'm going to be doing is I'm going to be showing you something pretty useful and something you've seen a lot of different games now I did mention in my last video I was in this in this next tutorial that what we were gonna do is we're gonna make it so that our character could collide with the Goblin now I haven't forgotten about that but we're gonna put that on pause right now I'm gonna do that in the next video because what I wanted to do is give our goblin a little bit of a health bar so now that we have our bullets colliding let's not stop there let's give our goblin a health bar and then we can diminish his health every time he gets hit by a bullet but maybe 10 points 20 points whatever or a percentage doesn't matter and then I want to give us some a little bit of score up in the top right hand corner here so we can keep track of how many times our bullet has hit the Goblin just to add a little bit more to this quoteunquote game now if you guys are expecting this to be like a full fledge like platforming game whatever that's not the point of these series the point is to just show you different tips and different ways of programming small games so that you can bring that into making whatever game you guys want to make because I can't possibly do a tutorial on the game that every single person would want to make so I'm just gonna do it like this and then hopefully you guys can learn from this and we'll be able to make your own games in the future so let's get right into the video then so the first thing we need to do if we're gonna be giving actually let's start with the score because this is fairly easy is we need to display something on the screen so in that top right hand corner that I was talking about we want to display for example maybe a number yeah we're gonna do a number of what your score is now you guys can increment this however you want but for the score we're gonna have to keep track of how many times our gaulden is hit so we're just going to make a variable up at the top of our program I'm gonna set it equal to zero and you can call whatever you want I'm gonna call mine score now we have this little function here called hit now this is what happens every time our Goblin gets hit so we're gonna leave this right now we're gonna do something else in this but pretty much once our Goblin is hit so a certain amount of times we're gonna make him disappear and this I'm gonna do later so stick around for that let's go down into here and this is where we call that hit method so every time that our bullet runs into our goblin which we do here we run this goblin dot hit method and then we delete the bullet right so in here doesn't matter where but just in the little if statement we're just gonna increment our score because this means we hit the goblin so we can add one to the score now that we have our score and we're incrementing it we need to draw it onto the screen so this is where things are a little bit different and I'm gonna be showing you something new so if we want to draw something like text which is what we want onto the screen in Python there's a certain way we can do that in PI and PI games sorry not Python we first need to create a font variable so do that kitten call whatever you like I'm just gonna call mine font because I'm only gonna be using one but if you had multiple fonts in your program you'd probably want to get name one like big font small font italic et cetera whatever you wanted there and then we're gonna take PI game don't font don't sys flaunt like this stands for system font make sure you have these capitals here and then in here you're gonna type in the name of your font I'm just gonna use Comic Sans if you want a list of the fonts you can just go on the internet and search high game fonts and they'll come up with all of them there's a ton of different ones but if you know the name of the font just try it in there and they'll probably work , and then how big the font is we're gonna do our size 30 and then if you wanted your font to be bold which I do we're gonna just going to type true and then if you wanted it to be italicized afterwards you could type true as well so this is your bold and this is your truth alright and your italicized sorry now if you don't care about those you want to leave them empty you can just either leave it so like this it's not gonna be bullets not gonna be italicized but I just want mine to be bold so I'm gonna type true right here alright now we have our font object um and now we need to render some font so the next thing we need to do is we're gonna go in our redraw game window function I'm just gonna do text here it's a new variable we're going to set it equal to font so the variable that we just created here dot render now this is doing exactly what it says it's gonna be rendering new text so that it's ready to be put onto the screen pretty much the way this works is you put a string in here with like a color and stuff and then it's gonna create a your it's gonna turn it into a surface which you can then blit on to the screen just like we were plating an image we're gonna be bleeding the the surface or the text onto the screen so I'm gonna do score space plus and then our variables score so that we get it all in one nice string here then we need the color or actually we don't need the color we just need to put one here don't ask me why you need to do that you just need to do that put a 1 here and then we're gonna put our color so in this case I'm just gonna make one block or maybe we'll make it oh yeah I will make it black why not block like that and then now that we've created the font here we've rendered it turned into a surface we can now draw it on the screen using the same thing we did for our images so we're gonna do wind up lit we're going to put text in here and then the position in this case I'm going to do 390 for the X and simply 10 for the Y and that should hopefully give it to us and about the top righthand corner of the screen now if I run the program we get a quick issue here must be string not int I ran into it and this is the issue here sorry so where we have our score we should you put string around it that's because we can't add an integer to a string my bad so go ahead and fix that get around the program and there we go we get score it looks pretty good in my opinion up in the top right hand corner you can see when I hit my goblin it is incremented and it keeps going up and that's very good so that's the start of the video so now let's get into the health bar so the score is great now we want to turn to the health bar portion so pretty much the way I want the health writer look you guys can change it if you want so I wanted to be hovering on top of the Goblin and then I want it to move with the Goblin and then we're just gonna have it so it's gonna be all green and every time you hit him section of red is gonna fill in or like a section of green is gonna go away if that makes sense so the first thing we can do actually is if you see we have these red boxes around our characters we can go ahead and get rid of those for right now because we were just using them in the other videos to check the hitbox of our characters so we get rid of those wherever we have our draw method so this guy is in my enemy here I'm just gonna comment it out in case I want to use it later and then where's our player he's up here we can comment that out as well so that way we're not going to see those ugly red boxes on our screen floating around and now the next step is we're going to draw our health bar so to do this I'm pretty much just going to use two rectangles and we need to change some ink but I'm going to do that in a second so to to draw two rectangles we do the same thing we were doing before which you can do pygame dot draw dot rect we're gonna start with the window and color the first rectangle we're gonna draw is gonna be green like that or it's gonna be red sorry and then we're gonna do our Rex which is gonna be equal to our hip box now if I just use the X&Y of the character you remember it's different than the hitbox coordinates we're just gonna use our hip box I'm just copy this down we're gonna do selfthought hip box like this the first coordinate which is gonna be our hip box X which we already found would be the closest to where our character actually is selfthought hitbox the Y and then we are going to do we're gonna have to move this one up remember because if we just do the the Y then it's gonna be drawn underneath because it's the top left coordinate so we're gonna just move this up by like let's say 20 pixels maybe and then we need our width and our height now our width is gonna be set by us I'm just gonna make it 50 and the height against could be set by us it's gonna be about 10 now I'm just gonna copy all this like that I'm gonna paste it down below and I'm gonna change this color to green and then we're gonna move to the next step so we can change the green in this hip box and you'll see how we do that the way we're going to do is just by changing the width of it so that it moves to the left yeah hopefully that makes sense now before we can move on any further we need to create two new attributes for our enemy in here so to do this we're just gonna we're gonna do the first one's gonna be health so obviously if we're using a health bar we're gonna need to keep track of the health on our character I'm gonna give my character health of 10 it doesn't really matter what you give it up to you really and brandnew self thought visible here now you'll see why we're gonna do this and yet near the end of the video but pretty much we're gonna say once his health is done we're gonna make him invisible and then we're gonna delete him so that we no longer see him on the screen because obviously if he has no health then he shouldn't be alive he shouldn't be on the screen or we can play some animation of him like falling over or whatever you guys want to do with that now we're gonna go down here and we're gonna say once he gets hit well that means we're gonna have to reduce his health so we're gonna subtract one from his health but the thing is what if his health is already zero so we need to first check that we have to say if selfthought health is greater than zero then we're gonna subtract one from health otherwise we are simply gonna set him to not visible anymore selfthought visible equals false and let me make sure I made this true oops we need to make this true otherwise this isn't gonna work and he's not gonna be seen right away so set that to true sorry now one last thing in our draw method here we only want to draw our character if he's visible right so underneath his self thought move here just gonna go we're gonna say if self thought visible so if our character is visible then we will draw him on to the screen and we will draw his hitbox otherwise we're not gonna bother drawing him pretty straightforward there all right so now we have our two rectangles and I'm gonna show you what happens if I run the program so go ahead we'll save that uh oops pi game is not defined just a typo there fix that now we can run the program and you can see that's nothing is showing up above our character or actually we have the green bar showing up but if I hit my character you can see it's not turning red now that's because I haven't changed the health Bartle right so once we hit him we need to modify the health bar in some way so that it looks like it's going down so we're gonna do that now all right so first of all let's just change this green actually because it's actually really difficult to see on our green background it's gonna make it a bit of a darker green hopefully that'll help us see it a bit and now we're gonna go to our width so our width is this third thing in the rectangle here now we're not gonna bother changing this one because this is gonna be the red back the background and the green is gonna be what's moving slowly down on it right and now we're gonna say we're gonna have to subtract from this whip a little bit complex but try to follow along so you know 50 minus and all the brackets I do here are very important just for order of operations and now what we're gonna do is we're gonna find the like how much we need to move it down each time it gets hit so to do this we're gonna do 50 divided by 10 she's gonna give us an answer of 5 but I'm trying to leave it like this so you can see it right now so 50 divided by 10 in brackets again x and now we're gonna do another set of brackets 10 because this is the overall health that we're going to start with subtract our our health now like that so now what's gonna happen is we're gonna get 5 right so I'll put 5 in here now so it makes more sense 5 we don't need the brackets there I'm gonna multiply it by 10 minus self dot health so now when we do that I'll give you a quick example here if our health is 10 that means we have 10 minus 10 which gives us 0 and 5 times zero zero so 50 minus zero gives us a full health bar for our health is nine meaning we've been hit one time we're gonna have 10 minus 9 equals 1 1 times 5 50 minus 5 that gives us 45 which now gives us a 9 out of 10 for the health bar so we'll illustrate this just by running the program now we can see we have a little darker green here it's easier to see and as we hit our character you can see his health bar diminishes it keeps going down until eventually we get to the point he has no more health left now this is a slight glitch because we've hit him 10 times you hit him one more time you can see he disappears because he had just a sliver of health left so we want to fix this um pretty much this just meant he had to get hit 11 times before he died it's pretty easy all you have to do is just changes health to nine and then everything will work there but then you have to change this to like four point seven five I think um anyways that's been the tutorial for today we've gone over the hip box and we've gone over the score some pretty useful things you'd be surprised how many times you want to use something like this hip box maybe Fitness if it's just for like counting down the time like say you have a game and it takes 30 seconds to run like one round then you'd have up here you'd have one rectangle as a background and another rectangle that would continually shrink as the time God uh right that's how they do loading bars pretty much if you remember that like Windows Vista or like Windows 7 loading bar where you have the bar here and it slowly just moves down or slowly moves up that's how they do it with the little rectangles may be a bit more advanced but yeah so if you guys enjoyed the tutorial and it helped you out please help me out by leaving a like and subscribing and I'll see you again in the next video