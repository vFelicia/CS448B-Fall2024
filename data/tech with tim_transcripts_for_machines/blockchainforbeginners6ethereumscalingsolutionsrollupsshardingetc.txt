hello everybody and welcome to the sixth and final video in this blockchain for beginners tutorial series in this video i'm going to talk to you about ethereum scaling solutions specifically solutions on layer one and on layer two and of course i'll describe what layer one and layer two mean now the reason we need ethereum scaling solutions is because as you've seen through this series ethereum can be quite slow and the number of transactions that it can handle per second is very very small now this means it takes a really long time for us to actually submit a transaction to the blockchain and have that processed and validated and if we want to be using a smart contract to perform computations that can take a really long time as well or be infeasible based on the amount of say iterations we need to do within a for loop or something along those lines so there's tons of reasons why we need better scalability on ethereum and fortunately there's many different solutions so with that said we'll go ahead and get into the video but i do want to thank cartesi for sponsoring this video and this series they're an awesome company that have been helping me come up with all of the content for this series and they're actually working on a bunch of layer two blockchain solutions right now and trying to make the blockchain more accessible and scalable for developers so definitely check them out from the link in the description they have a ton of detailed articles on a lot of the stuff i'm going to go over in this video and i do just want to quickly mention here in the intro that this is going to be very high level i'm not going to get into a ton of technical explanations about these different solutions i just want to give you an introduction to them and then encourage you to research and learn more anyways let's start talking about the difference between layer 1 and layer 2 solutions so in blockchain world and in this video you're going to see the terms layer 1 and layer two a lot now layer one is referring to the blockchain network itself so the actual ethereum main network and layer two is referring to stuff built on top of that network so when we talk about increasing the scalability of ethereum when we're referring to layer one we're talking about actually modifying the underlying blockchain technology so changing the architecture increasing the block size decreasing the block size whatever the solution is going to be it's going to be right on ethereum and that's something that we can't really directly modify ourself the people that are working on ethereum would have to actually change then we have layer two layer two is referring to solutions we build on top of the block chain so we're not touching layer one we're not modifying the ethereum network we're doing stuff on top of this to increase the scalability so of course i'll get into those different solutions but again on layer two we're relying on layer one to give us the security and aspects of the blockchain but we're not actually gonna be modifying that underlying technology and that underlying architecture hopefully that is clear now what i want to do is talk to you about something known as the scalability trilemma which has to do with the different aspects of a blockchain that we want to have and that we need to consider when we're picking different blockchain solutions so the scalability trilemma is essentially a triangle i'll put a photo up on the screen where each vertex or point is one of the properties or aspects of a blockchain that we like to have so here we have security decentralization and scalability now broadly speaking what this says is that whenever we implement a solution we end up lacking in one of the areas of this triangle so one of these points for example if we implement a solution that has great security and great decentralization typically we're going to have worse scalability where if we implement something with great scalability and great security we may have worse decentralization now this is not always the case there is some solutions that are great in all three of these areas but this is something that we want to think about when we're actually talking about different blockchain solutions so does this increase decentralization does it decrease decentralization what are the pros and the cons and the tradeoffs as it relates to the scalability trilemma now before we go any further i do really want to define scalability as well as security and decentralization just to make sure we know those terms so when we're talking about scalability the common thing to refer to as it relates to blockchains is transactions per second or transaction throughput now that is one of the areas of scalability that we're concerned with but we're also concerned with data scalability as well as computation scalability so when we were building smart contracts one of the big issues there was we don't want to store a ton of data and we can't do too many computations in the smart contract because of the cost on the ethereum network and the time it takes to actually process those so keep that in mind as we go through this video it's not just the number of transactions it's also computations and data on the blockchain now as we go to decentralization that's really referring to the centralization of power or in this case the lack of centralization of power so the example i always like to use is a bank a bank is an example of a central institution or organization they have you know a few executives or a few board members that really control what the bank can do they have investors they have government interests whatever it's very very centralized the people that use a bank don't control what the bank is able to do and what control they have of your money it's the bank itself very central that controls all of them so hopefully that makes a bit of sense now when we talk about blockchain we want everything to be decentralized so there's not one person one institution or maybe a few people or a few institutions that have control over the network ideally we want millions of computers or thousands of computers around the world to be running and securing this network so we're less prone to hacks less prone to corruption and all those other things that can happen when you have central power and central you know authority of something so hopefully that makes a little bit of sense then we're talking about security this is pretty straightforward but how secure is the network how easy is it to be hacked how uh sure can we be that this transaction is valid when it's posted on the blockchain ledger all of those types of things relate to security all right so that is the scalability dilemma keep this in mind as we go through the rest of this video now i'm going to start talking to you about layer 1 solutions now i'm not going to spend too much time here because we don't have much control over layer 1 solutions we can't really build a layer 1 solution because we don't have control of the ethereum network regardless though i will talk about why we would want a layer 1 solution so why would we actually want to improve ethereum well as i'm sure many of you are aware ethereum is relatively slow so we're talking about scalability it only does about 15 transactions per second and in contrast to something like visa that can do upwards of about 60 000 that's really really slow and that makes it infeasible for a ton of different applications especially something like being the global currency right if we wanted everyone to be using ethereum for their daytoday transactions well that would take a really long time because we would have to be waiting hours maybe even days for a transaction to go through because we can only do 15 per second now in terms of computations as well we've seen when we're working with smart contracts we're really limited in what computations we can't do we probably can't implement any advanced data structures and algorithms we can't store too much information and we can't do too many iterations without it costing us a ton of money on the blockchain so that is kind of the reason we would want to improve ethereum because of those lack of scalability issues now ethereum is very decentralized and is very secure so we're not super concerned with those two aspects we just really want the scalability to increase without hurting the decentralization and hurting the security anyways let's talk about the layer 1 solutions so currently ethereum is actually working on a layer 1 solution which they're calling ethereum 2.0 this is going to be a complete change to the architecture and the algorithm used for ethereum so i'm sure many of you have heard of this before they've been working on it for a really long time and it should be out relatively soon but they're going to be changing from proof of work to proof of stake now i'm not going to discuss the differences here or get into kind of a debate about which is better but that is what they're doing they're changing the main algorithm from proof of work to proof of stake and ideally they're going to be bringing the transaction through put from about 15 transactions per second to upwards of a hundred thousand transactions per second now i cannot confirm this these are just the rumors and what i've heard online and seen when looking at the project anyways that is kind of what they're doing now in ethereum 2.0 they're doing a few other things one of the main things that they're adding is something called sharding so sharding is really this process of taking a large piece of data and splitting it horizontally into smaller pieces of data which can be handled by multiple computers at the exact same time so to put this simply imagine i have one piece of data and this piece of data can only be processed by one computer at a time well it's going to be slower to process that data than if i split this data into say 64 chunks or 120 chunks or whatever the number of chunks is going to be and allow 120 computers 2 000 computers whatever the number is to process these smaller pieces of data at the exact same time so that's exactly what ethereum is aiming to do take the large piece of data split it into multiple smaller pieces of data and then allow for parallel processing and to drastically increase the number of transactions per second in fact this is a similar thing that many large companies do and many large databases do to increase the efficiency or increase the scalability of their systems so this is not just something that's done in blockchain this is done generally in computer science and i would encourage you to read more about it and look it up if you're interested in exactly how sharding works so with that said that's going to wrap up our layer 1 solutions now i'm going to talk about the layer 2 solutions so as a reminder layer 2 solutions are simply solutions built on top of ethereum so they rely on the ethereum network and they do not modify it and they aim to increase the scalability while again still keeping the decentralization and security aspect so that said let's talk about some different layer two solutions now the solutions that we have are things like state channels side chains and then rollups now i'm actually going to start with side chains so i probably should list it in the other order what a side chain is is essentially another blockchain network that has a different architecture than the ethereum network and makes it better for scalability so what a side chain actually does is it links to the ethereum main network it makes it very easy to transfer assets between the two different chains now typically side chains are going to be much smaller they're going to have less validators they may have smaller block sizes and this does actually decrease the security and the decentralization of the side chain but it drastically increases the scalability because now rather than me sending a transaction to ethereum i'm going to send it to a side chain and then the side chain can kind of link up with the ethereum main network and allow me to transfer the assets between the two networks very very quickly or very easily at minimum so an example of a side chain would be something like polygon i'll put up an image on the screen these are controversial and there's a lot of reasons why you may not want to use a side chain but again the basic reasoning here is rather than using the ethereum network we're going to use a completely entirely different blockchain network that's going to be somewhat linked to the ethereum main network which allows us to take the smart contracts running on the side chain and very easily port them over to the ethereum main network while still maintaining all of the data all of the assets and all of the information essentially that was posted to the sign chain network hopefully that makes a bit of sense but those are side chains so the next solution that i'm going to introduce to you is something known as state channels now i just want to emphasize before doing that again i'm bringing this to you at a very very high level there's a lot of details and nuance with all of these solutions and you really should do some research and look at these more before actually trying to implement them or use them for your decentralized applications so please keep that in mind this is a very very general introduction anyways state channels to explain the usefulness of state channels i want to introduce to you a problem of making a decentralized application so if we wanted to make a decentralized app we want this to be some type of game maybe a game like chess right well this game requires many state changes now we know when we make a decentralized application we're going to have a smart contract the smart contract handles the state of our application if we're talking about chess it would need to store the state of the board so if we want to play a game of chess on the ethereum network what we would have to do is send transactions to the smart contract to update the state after every single move was played now at least in the chess games that i play they're like five minutes long we're three minutes long and we make moves every few seconds right so i make a move my opponent makes a move and every time that would happen if we were running this on ethereum we would need to submit a transaction to the network however the next player can't make a move until that transaction is verified and the state has been updated in the smart contract and we know that that can take a really long time to happen so that makes it infeasible for us to play a game that has very rapid state changes hopefully that makes sense but you would be sitting there waiting 30 minutes an hour for the transaction to be finalized before the next player would be able to move and while that completely defeats the purpose of like a quick game of chess or something along those lines so this is where we introduce state channels so the idea here between state channels is that if we have a ton of micro transactions or many transactions that are going to be occurring in a short period of time rather than doing them on the blockchain we're going to take them off the blockchain and do them in a secure way that can later be verified by the blockchain so estate channel is essentially a communication channel a peertopeer messaging channel where me and someone else who are participating in for example some type of game are going to be sending signed messages to and from each other with the state of the game so if we're playing a game of chess i'm going to be sending a message that's signed by me to my opponent saying i made this move and then they're going to send me a message that signed said i made this move and we're both going to be verifying the state is correct at each point in time by signing these messages hopefully that makes a bit of sense now the way that this works is we're first going to send a transaction to a smart contract sitting on layer 1 to open up the state channel once the state channel has been opened we're going to do all of our transactions the micro quick ones off the blockchain they will happen almost instantly then at the end of the game we're going to send one transaction to the smart contract with the final state and we're going to say hey we finished the game and then the smart contract is essentially going to verify the state is correct and there's a lot of stuff that goes on to do that i won't really talk about how that works and if we were playing for say one ethereum so whoever wins the chess game gets one ethereum then that ethereum would be transferred and we would have had to kind of stake that at the beginning of the game so hopefully that makes a bit of sense but typically state channels allow for us to have very fast transactions they make it very cheap because we don't have to pay gas fees when we're doing this off the blockchain we just have that first and last transaction that require the gas fee to open the state channel and to close the state channel and typically they do allow for the same security and decentralization however you may have the security be slightly decreased depending on the way that you're verifying the states and what you're doing between the blockchain and the off chain or between layer one and layer two again i don't wanna get into this too much those are stage channels very useful when you have a ton of micro transactions that need to be performed very very quickly so now we are moving on to the final solution i have in this video which is rollups now before i get into those i do want to mention that cartesi actually implements a ton of layer 2 solutions and makes it really easy for developers like yourself to use these solutions without having a full understanding of how they work and what's going on behind the scenes cartesia is working on operating systems libraries modules packages frameworks all of the stuff you could imagine is going to make it easier for you as a developer to use these types of solutions that are really complicated on a lower level so make sure you check them out from the link in the description anyways let me talk about roll ups here and i will also mention that cartesi has a ton of articles that explain this stuff more in depth if you're interested again reference them from the link in the description so a rule up is essentially an idea that we're going to take all of the transaction execution so the computations associated with the transaction and perform those off the blockchain while posting transaction data to the blockchain on layer 1. so the basic concept behind rollups is that it's very expensive to perform computations on the blockchain it can also be very time consuming so rather than do them on the blockchain let's perform our transaction execution off of the blockchain and then post the transaction data to layer one and have a smart contract on layer one so on the blockchain that can validate that the execution that we did off the blockchain was indeed correct now i know that's confusing but essentially we're taking the time consuming operations and computations performing them off the blockchain and then posting all the data to the blockchain where we can then validate that it is correct and we can use the properties of the blockchain to store the data now another advantage of the rollups is that what they can do is they can bundle multiple transactions maybe hundreds or thousands of transactions into one smaller transaction and then post that to layer one so rather than having the user have to send a thousand transactions directly to a smart contract which costs a lot takes a lot of time we're going to send it to whatever is rolling up these transactions it's going to kind of bundle them all together and then send one transaction to the blockchain that contains all of the data that it needs or the state change that's going to be made so before i can go any further because i do want to give you some more detail here i will mention that there's some different types of rollups so we have optimistic rollups and pessimistic ropes now i'm going to start with optimistic rollups now i do want to add here that the blockchain community currently considers rollups to be one of the most promising solutions for scaling ethereum and the reason for that is that they allow you to scale the computations and throughput of the network without compromising on security and decentralization so using that in combination with sharding which allows you to scale the data on the network really gives you the best of both worlds and allows you to scale ethereum and all three of the areas that we talked about so sharding scales the data and the rollups allow us to scale the computations as well as the throughputs of the transactions per second so you're likely going to be hearing a lot more about rollups in the future and maybe even using them yourself and if you were to pay attention to any of the solutions in this video this would be the one that i recommend so when we talk about optimistic rollups what we're really referring to is that the smart contract that's sitting on layer one is assuming that any of the transactions sent to it are valid so any of the state changes that are made any of the transaction data we just assume that's valid and that it's not malicious now this allows for us to have very quick transactions and to perform faster computations off the blockchain because we don't have to prove that everything is correct however this does mean that someone could submit a malicious transaction now there is incentives put in place to make sure that people do not submit malicious transactions for example there may be something like staking ethereum so whenever people are dealing with rollups you may have to stake some ethereum that says hey i'm going to be a good actor i'm not going to submit any malicious transactions or state data and if you do that so if you are malicious your stake could get slashed that could be the incentive or deincentive from performing poorly or having bad behavior on the network hopefully that makes a bit of sense but the idea here is that we're assuming everything is correct now if someone does do something that is not correct or is invalid or malicious or whatever anyone can submit something known as a fraud proof now this fraud proof essentially says i believe that this state is incorrect i believe that someone did something malicious go and verify that it's not or go and verify that they did indeed do something malicious so that's what's called it's a fraud proof this puts the smart contract into a specific mode where it's going to go and validate that all of the transactions and data that are sent is actually correct and if they are not correct it's going to punish whoever submitted the incorrect transaction hopefully that makes a bit of sense but that is optimistic rollups again just really think about the fact that an optimistic rollup is assuming everything is correct and it's only doing a validation if someone submits a fraud proof all right moving on now to pessimistic rollups now pessimistic rollups are kind of the opposite of optimistic roles in a pessimistic rollup you cannot submit or update the state of a smart contract unless you submit something known as a validity proof now this proof is a specific cryptographic proof i'm not going to really talk about exactly how it works but essentially off the blockchain when you're performing all of your computations you also need to compute this proof and then this proof is sent to the smart contract and you can only submit or update the state story of the smart contract if you have this proof alongside it now the only real issue with these type of proofs though is that they can be inviable to compute for really complex transactions so these are time consuming and difficult for a computer to come up with these cryptographic proofs and so if you're doing anything that's too complex it can be inviable to come up with one of these proofs and in that situation you need to use an optimistic rollup now the reason you would use one of these proofs though is because this limits the amount of data that the smart contract needs to hold because all it needs to do is hold a state because it can only update the state if it has a valid proof i understand it's a little bit confusing but in the optimistic rollup scenario it's holding all of the transaction data and it's only doing a verification when a fraud proof is sent so it is time consuming when you send the fraud proof but ideally you're not having that happen very often whereas in a pessimistic scenario here the smart contract is holding much less data it's just storing the state and it's only updating that state when you submit the proof this means it's really easy for the smart contract to validate that everything is correct however it takes more time off the blockchain to be able to submit these state changes because you need to perform this validity proof and sometimes this validity proof can be inviable to compute alright so that's pretty much all i can share with you related to roll up so getting into too much detail again i want to emphasize this at a very high level there's a ton of stuff that i skipped over and omitted in this video with that said i'm going to start wrapping it up here another massive thank you to cartesi for sponsoring this video and this series make sure you check them out from the link in the description they have all kinds of articles very smart people there that are implementing these types of layer two solutions and are trying to make it much easier for you and me to develop decentralized applications without the huge issues or limitations of ethereum that we looked at in some previous videos i hope you guys enjoyed this series if you did make sure you leave a like subscribe to the channel please leave a comment down below and let me know if you want to see more blockchain on this channel because i'm hoping to do some more series in the future and with that said i will see you in another youtube video you