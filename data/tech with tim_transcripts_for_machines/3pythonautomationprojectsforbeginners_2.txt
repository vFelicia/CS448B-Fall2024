hello everybody and welcome to another youtube video in today's video i'm going to be sharing with you three python automation projects for beginners now these are simple python projects that are meant to show you a real world use case of python so even if you don't end up using these for automation you will learn a lot and you'll learn specifically some standard libraries as well as how to interact with apis and a few other things that you probably don't know as a beginner python programmer with that said for all of these projects i'm going to assume you have a basic understanding of python so maybe you know about for loops you know about if statements you know about variables just the very basics i'll explain everything in as much depth as possible and hopefully after following along you'll have three completed automation projects with that said let me list out the projects and then we'll get into them so the first project we're going to work on is a multiclipboard this is a program that's going to allow you to actually store multiple things on your clipboard at the same time you'll see how that works when i demo it in a second then we are going to work on a weather api application so this is going to allow you to get the weather of any city in the world as well as the temperature and some other information like that and then lastly we are going to work on a program that allows you to send an email in python so three pretty useful things you can learn how to do again even if you don't use these projects they will teach you a lot with that said let's go ahead and get into it after a quick word from our sponsor before we dive in i need to thank ltm designer for sponsoring this video ltm designer is the world's most trusted pcb design system that enables engineers to effortlessly connect with every facet of the electronics design process ltm designer has used 35 years of innovation and development to create a truly unifying design environment that makes it the most used pcb design solution on the market ltm designer provides an intuitive and powerful interface that lets you design pcbs rapidly while interacting and collaborating with your mechanical designers the interface provides a photo realistic 3d environment collaboration and synchronization with tools including solidworks ptc creo and autodesk inventor realistic rigid flex designs multiboard assembly and much more ltm designer is the most popular ecad tool and electronics design software and you can get started with it today for free by pressing the link in the description and registering for a free trial thanks again to altium designer for sponsoring this video and now let's dive in all right so let's go ahead and get started now i just want to run you through my environment here so you understand the different tools that i'm using right now i have visual studio code open this is a free code editor that you can write python code in you do not need to use this in fact you can use anything that you'd like so long as you understand how to use the tool and how to run your python code if you don't already have something to write python code in i would recommend vs code you also can just use the standard idle application that comes with python when you install that by default great now i'm going to be using python version 3.9 for this video you can use any version of python that is 3.6 or above so just make sure it's 3.6 or above you really should be using that version anyways because the other ones are quite old at this point in time all right so with that said let's get into this first application here this first project which is going to be the multiclipboard now the idea behind this application is to be able to store multiple things on your clipboard right so the clipboard is when you copy and paste stuff currently you only have access to kind of one save slot so you copy something paste it and then when you copy something else it's going to override what you already have now the idea here is to build an application that allows us to store multiple things from our clipboard and then easily load all those things to our clipboard so essentially we have a multiclipboard now it's not going to be as seamless as you know a bunch of keyboard shortcuts but you'll see how it works here as i demo the project so i actually am in a different folder not the one that i have open in vs code where i have a working version of this application and the way it works is you run python multiclipboard.pi this is the name of the file and then you pass a command now the command can be add or sorry not add save load or list so what i'm going to do right now is i'm going to type save and it's going to ask me a key to save this data under now the data is whatever is currently on my clipboard so whatever i've copied previously so what i'm going to do here is just say test and now it's going to say data saved now if i want to view all of the different pieces of data or all of the clipboard items that i have in this application i'm going to pass the command list and you're going to see that i have a key test associated with email message that's what i had on my clipboard you can see here if i paste that's what it is email message right so that's why it's saved there i also have f and that corresponds with an ethereum address anyways let's now use this to actually load a key so what i'm going to do is pass load and now it's going to ask me a key to load the data from so i'm going to type in f and when i do this now my clipboard has that on it so it's controlling your clipboard and it's going to take what you have on the clipboard and save it or change what's on your clipboard to be whatever the key is that you passed hopefully that makes sense this is a pretty useful thing to do and of course i will demonstrate how we do that so that said what we're going to want to do here is open up a new python file this is called multiclipboard.pi you can call it whatever you'd want and just open it in a folder or someplace on your computer that you know the location of it because we're going to have to actually run the python code from the command line rather than hitting this nice run button if we just hit the run button it's not going to work as we expected although i can show you kind of a workaround in case you don't know how to run it from the console okay so we have multiclipboard.pi now the first thing i want to do in here is just import a few modules and then talk to you about how we actually accept kind of keyword arguments or command line arguments from our python script so i'm going to import the module sys i'm also going to import the module clipboard now this is built into the python standard library which means you don't actually need to install any of these modules they already exist i'm also going to import something called json now the idea here is i want to actually store all of these clipboard items in a file so the file i'm going to use is a json file and i'll talk to you about how a json file is kind of formatted in a minute for now though let's have a look at how we use the clipboard module because it's very straightforward so what i can actually do is say data is equal to clipboard dot and then let me just reference my cheat sheet here and i'm going to go with paste now what paste does is exactly what it sounds like it's going to paste the data from your clipboard to this data variable so let's just print out data and notice that if i paste right now this is the data that i have on my clipboard and when i run my code here by hitting this run button you'll see that it should just print out what's on my clipboard so easy enough that's how you actually get the data from a user's clipboard use clipboard.paste now to actually save data to the user's clipboard you do the following do clipboard like this dot and then i believe this is copy and i'm just going to put something like abc okay so i'm just going to say clipboard.copyabc i'm going to run this and then i'm just going to paste and notice now that i have abc on my clipboard so there you go you've just learned how to use the clipboard module okay so now that we've looked at that what i want to do next is show you how we can run this python script directly from a command line so using the python command rather than actually hitting a button so this is something that might be a little bit difficult if you haven't done this before i'm going to try to explain it in as many ways as possible and if you know how to do this maybe just fast forward a minute or two in the video and you'll get to the point we actually start writing the rest of the code anyways the point is i don't want to be able to hit this button i want to actually run the code from my command line now the command line is your terminal or your command prompt if you're on mac or linux it's going to be your terminal if you're on windows it's going to be your command prompt now if you're working in vs code this is really easy for you all you have to do is kind of open up this bottom window here which you can get from just dragging from the bottom and you'll see that you should have either a terminal or a command prompt open depending on your operating system now this here kind of to the left of this angled bracket is the path that your terminal or command prompt is currently in now you want this path to be the same location where your python file is so notice i have users tim tutorial and then if i type the command der this is actually going to show me all of the stuff that's in this folder and well what's inside of here is multiclipboard.pi if you're on mac or linux you could type ls and then that would show you all of the files as well anyways the point of me showing you that is that i'm currently in the correct location where my python file is and that allows me to actually directly access this file and run the python command with it so i can say python multiclipboard.pi and run the file now i'm going to show you how to get here if you're not already here you're not working in vs code so if that's the case first you want to figure out where your your file actually is right so you can do that by going to your finder or going to your windows explorer i know where mine is mine is on this pc it's in c drive it's in users tim and then i have a folder here called tutorial uh i gotta find where this is all right so i've just opened the folder here i just had to search for it for a little bit anyways i have this tutorial folder and you notice this is where my multiclipboard python file is now again if you are on mac or linux or windows whatever just open up in finder or open up in windows explorer this location and then look for the path of this file if you're on windows it's really easy you should see it right in this search bar and you can just copy it directly so ctrl c if you're on mac you might need to right click click on something like get info and then it should show you the path to this file you just want the location of it now once you have that location what you can do is open up your command prompt or open up your terminal so just by going to maybe the windows bar and typing command prompt or if you're on mac you're going to go to the spotlight search and type for terminal linux you should be able to open the terminal and what you want to do i can actually just do this directly here is type in the command cd this stands for change directory and then you want to paste in the path to where your python file is so in this case this is my path and what cd again change directory so i'm going to change into this directory so cd into this right now so now i'm inside of tutorial and now that i'm here i'm able to use the python command to actually run my python file which i will now show you so hopefully at this point in time you've been able to get into the correct directory there's not really much more that i can explain you might have to look it up on a different video or kind of go to stack overflow or something but at this point we can actually run our python file using the python command so i can type python and then the name of my file notice i don't have to type the same the whole thing i can just type in m ul and then hit tab it completes the whole file name and then when i do that it will actually run the python file now if you're on mac or linux you'll likely have to use the python3 command so python3 multiclipboard.pi and this should work now notice i'm getting an error here because i'm on windows but try python or python3 and then that will actually run your python file okay again can't really explain that much more you need to be able to open and run your python file from the command line either terminal or command prompt again the way you do that is you change the directory into the directory where your python file is you can find the location of that by going to finder or windows explorer and then you type the command cd space and then whatever that full location is and it should bring you to that directory where you can then run the python file now the whole reason why we need to do that is because we're passing command line arguments to our python file when we run it i'm going to show you how we do that now so the way that we actually can pass command line arguments to our python file is we do something like python multiclipboard.pi and then like you saw me do we pass for example the command test or the command save now how do i actually access those in python well that's why we have the sys module import so what i'm going to do here is just print out sys dot and then this is going to be arg v now arg v is going to give you all of the command line arguments that are passed alongside when you run this python file so anything that comes after multiclipboard actually this will be passed as well so i'm going to save this now i'm just going to type test hello world like this and when i hit enter here notice it's going to give me a list that's containing all of the stuff that i passed after the keyword python so this is how you access the different command command line arguments hopefully that makes sense but that's what we're going to use for this tool so i need it to explain it now if i want to access say just test or just hello or just world maybe all the ones that come after this name right here there's a few ways to do that the first thing i could do is take a slice so i could say one colon which means now i'm not going to include the first element right here but i'll include the rest of them so now if i run this so let's just run the same command notice now i just get test and hello world awesome so for our application we only want to accept one command after the multiclipboard upir after the python file name so to do that we are going to write an if statement that checks if the user has passed exactly one command so i'm going to say if and actually yeah i'm going to say if the len of sys.rgv is equal to 2. now the reason i'm checking if it's 2 is because i'm going to have the name of my python file and then the name of the command so it needs to be exactly two command line arguments if this is the case then i want to get the second argument so i'm going to say my command is equal to sys.rgv at index one right because i'm accepting the second argument which is going to be the first index in the list then i'm going to print out my command okay so let's run this now when i do this notice now that my command is test that's exactly what i want once i get the different commands and i can start actually handling them and just to clarify here in case i didn't mention this the multiclipboard.pi again let's name my python file what i have named right here if you named your python file something different you're going to change multiclipboard.pi to whatever you named your python file if you named it test you're going to do test if you named it main you're going to do main hopefully that is clear okay so we have the command now and what i want to do is i want to check if the command is equal to the three commands that we're going to allow which is going to be save load and list so i'm going to say if the command is equal to save then we can do something for now we'll just print save but we will actually save something we're going to say alif the command is equal to load then what we want to do is we want to load something and don't worry i'll pause you guys can copy all this down and i'll say lf command is equal to list then i want to print list and then otherwise i'm going to say print and we'll just type unknown command okay nice what am i doing wrong here awesome okay so now i'm handling the different commands that we can type in if you type one that we don't know we're gonna do unknown command now the way that this is working in case you're not familiar with the if statements is we're checking if the command is equal to these different strings i think that's pretty straightforward whatever's in the indented block is going to happen if the condition here which is just checking for equality is true now the elif says that i'm only going to check this right here so this condition if this one was false so if the command wasn't save i'll check if it's load if it wasn't load i'll check if it's list and if it wasn't save load or list then i will print out unknown command nice now one other thing i'd like to do is make it so that if you don't type in exactly two arguments then you get an error message that says please type in a command or something like that right so say print please pass exactly one command okay so now you get an error message if you don't type in exactly two which is really one command because one includes the python file name okay so now that we've done that what i want to do is figure out how i'm actually going to store these commands and as i mentioned we're going to use a json file to do that so i'm going to make a new file and i'm going to call this clipboard dot json and i realized i said we were saving commands no we're not saving commands we're going to be saving things that are on our clipboard now a json file is very similar to a python dictionary and it allows us to store key value pairs so inside of the json file we can have something like key and then have it associated with some value now this is again very familiar or very similar to a python dictionary and we're going to use the json file to store all of the keys and all of the values where each key is a clipboard item or a clipboard key and each value is what was actually on the clipboard right that we were associated with that key so hopefully that makes a bit of sense but this is the basic kind of syntax for json you have double quotation marks for your key name you do a colon and then you can store some different values we're just going to be storing strings but you could store numbers you could store booleans notice that there's no capital here it's just going to be a lowercase for the true you could store arrays or lists like this you can store other json objects json is really cool and i actually have a video on json it's either live now or going live soon anyways you can check my channel and see if that's up right now okay so this is our clipboard file i'm actually gonna delete this for now because we're going to create this from code but i just wanted to show you kind of the json syntax and why we're going to use that to store our data so now that we've looked at that i want to write a function that's able to create a json file for us and one that's able to read a json file for us so let's create one first so i'm going to say define i'm going to say save and let's just call items like that now inside of save items what i want to take in is a file path now the file path is where i want to save this essentially and then i want to take in some data and the data is going to be well the data that i want to save to this file now what i'm going to do is i'm going to open a file so i'm going to say with open i'm going to put file path as the file that i want to open because we're going to pass that as a parameter to the function and i'm then going to put this in r mode now r stands for read so i'm going to be sorry i want this to be w mode good job i said that because w stands for write this means i'm going to override this file if it already exists or i'm going to create a new one so i'm going to say with open file path w i'm going to put as f essentially that just means that f is going to store whatever i've opened right here and then here what i can do is use the json library to actually dump some data to a file which you're going to see right now so i'm going to say json.dump and i'm going to dump the data to the file f and that's as easy as it is to actually save data to a json file so let's just look at what this is doing we've defined a function the name of the function is save items if you're unfamiliar with functions you call them by writing the name of the function and then passing the corresponding parameters so these are two pieces of data that we need to pass so i could pass something like test.json and then since json is very similar to a python dictionary the data that i'm going to pass here is just going to be a python dictionary so i'm going to pass some key associated with some value right this is just a kind of a dummy function call so you can see how this works anyways that's what i'm passing so i'm saying save items the name of the file is test.json then we have our key and value in a python dictionary so that's our data then what i do is i say with open i'm opening the file path which is test.json in w mode which means i'm going to create a new file or override an existing file if it's there so just pretty much recreate it but empty anything that's currently inside of it i'm going to open this as the variable f then i'm going to say json.dump what this will do is write the python dictionary as a json object to this file so i'm going to dump the data to the file f and then it will create the file for us so let's just run the code and you'll see that this should work so i'm just going to run it like that it gives me unknown command that's fine but notice test.json was created and it wrote key and value inside of here hopefully that makes sense but that is how you write json data and now that we have this file we're going to use it to actually load the keys and values so the clipboard items that we've saved so now that we created this what i'm going to do is write another function that's going to read the json file for us so i'm going to say define load json i'm going to take in a file path and what i want to do here is i want to open the file path this time i'm going to open it in r mode which stands for read i'm going to open it as f and i'm going to say that my data is equal to json.load and i'm going to load f okay so i'm just loading in this file now what's going to happen is going to read this file and it's going to give me the python dictionary a representation of this json data in case i didn't mention it json stands for javascript object notation it's just a specific file type that you can use in pretty much all types of applications it's very standard specifically when you're working with things like apis which we're actually going to see later so then from here i'm going to return my data this is going to be a python dictionary i'm going to access that inside of here when i'm kind of loading and saving my different clipboard items okay all right so now we know how to save items we know how to load our json so i'm actually just going to make this load items because that probably makes more sense so now that we have our two functions here that are able to read and write the data what i want to do is utilize them so let's start by actually writing the save command now the save command needs to take whatever is currently on our clipboard and save it as a key in our dictionary or i guess in this case in our json file now for now let me just delete this json file because we don't actually need this one so the first thing i need to do when you want to save something is i need to prompt you to type in a key and that key is what i'm going to use in the dictionary to be associated with your clipboard item so i'm going to say key is equal to input input allows the user to actually type something in right so i'm going to say enter a key like that okay now that we have the key what i'm going to do is i'm going to say that my data at key is equal to and then this is going to be clipboard and uh let's type it all out dot paste right because paste is how you get what's currently on the clipboard then after this i'm going to say save underscore items i'm going to pass a file path which i'll define in a second and then i'm going to pass my data and my data is going to be the variable data now some of you may have noticed i don't yet have the variable data defined so what i need to do up here is say data is equal to and then this is going to be load items and i'm going to load the json file here now i need to create a variable that stores the name of my json file so i'm going to say saved underscore data like this is equal to and then we'll call this file clipboard.json okay clipboard.json like that so let's put save data inside of here and let's put saved data here all right so what i've done is just made a variable it's going to store the name of where i want to save my data essentially the first thing i'm going to do is load all of my items or load my data so i actually could maybe rename this load data that's probably going to make more sense so let's rename these okay data and data so i'm going to attempt to load this file right here that's now going to give me a python dictionary that contains whatever the data is inside of there so now if you type in save we're going to ask you for a key we're going to then store inside of this data dictionary the key associated with whatever the value is that's on your clipboard then we're going to call save data and that's now going to rewrite this file and save all of that data persistently great okay hopefully this is making a little bit of sense now one thing that i do want to mention here is that when i try to load this data we're actually going to get an error if the file that we're trying to load doesn't exist now the file we're trying to load is clipboard.json right now that file doesn't exist so we have two options we can create the file and we can just give it some kind of default value so essentially put nothing inside of it or we can kind of handle the error where this file doesn't exist which is what i would prefer to do so here i'm going to write a try now a try something that you can use when you're not sure if a line of code or a section of code is going to execute or not without an error so i'm going to say try i'm going to try to do all of this and then i'm going to write an accept statement and the accept is essentially going to be entered if what i tried to do in here failed so if an exception was raised if an error happened when i was doing this then we're going to go inside of the accept block and i'm just going to return in empty dictionary like this so essentially we're going to try to load this file if this file doesn't exist then i'm going to return an empty dictionary and that's that's really all we need to do hopefully that makes sense but that's what we're doing in that function okay so now the save command should actually work so before we go any further let's try that out so let me just get out all this here so let's now run the command python this is going to be multiclipboard.pi and let's try to save what's currently on our clipboard okay so it's going to say enter a key for now let's just go with python as our key and if we go to clipboard.json now we can see that we have python and then nothing was on our clipboard so it just had an empty string there you go the save is working all right now i just want to print something out here that says data saved just so that we have a little bit of output for our user okay so data saved nice now let's do load so if i want to load something this is actually pretty straightforward the first thing i need to do is ask the user for a key for the data that they want to load i need to make sure that key exists in the dictionary and if it does i'll give them the data if it doesn't then i need to return an error message so i'm going to go here i'm going to say let's actually just do the same thing here key equals enter key i'm going to say if the key is in data actually i'm going to say if the key is not in data no you know what no we'll go if key and data so if the key is in the dictionary so we actually have a key that they typed in here then what we will do is say clipboard dot and then this is gonna be copy and we're gonna copy data at key otherwise we're going to print key does not exist okay and then i'm going to print a message here and say print data copied to clipboard okay well let's add a period so quickly recap here we asked them to enter a key we're going to check if this key exists in the dictionary this is a very simple way to do that say if key and data if the key is in the data then i'm going to say clipboard.copy data key so i'm going to access what the value of that key is in the dictionary and copy it to their clipboard i'll print out the data is copied to clipboard otherwise i'll print key does not exist great so now we can actually try to load this so let's run this command with save let me copy something first so let's copy this let's run this command with save let's go test okay so our data was saved now let's run this with load let's type in python okay data copy to clipboard when i paste there's nothing there great now let's run this again let's type in test and now when i paste notice i have what i actually stored in the multiclipboard okay hopefully that is all good now the last thing that we need to do is the list command the list command is very straightforward all we're going to do is print out the dictionary where we're going to print out the different keys in the dictionary up to you how you want to do this but i am just going to print out data now when i do that it's just going to give me all of the keys and all of the values so i can see what's in my multiclip so let's run this now and let's go with list and when i do that notice i get python associated with nothing and test associated with clipboard.copy now one feature you may want to add to this program here is the ability to delete a key i'm going to leave that to you guys as kind of say homework if you want to do that it's pretty straightforward but i'm not going to implement in this project because i don't really even see a huge value in deleting because what happens is if you want to override a key that already exists you just type the same key and it will override the key that's already on the clipboard right that's the way that we've implemented so with that said that's going to wrap up this first project i apologize if this was a little bit slow for some of you but i'm not sure the exact audience is going to be watching this so i just want to make sure it's accessible as possible to everyone right so kind of over explaining rather than underexplaining that's the motto that i usually go with anyways that's how it works to do a quick summary we import our modules here we have our saved data variable that has clipboard.json that's just the name of the file we're going to use to store the multiclipboard we have our two functions here that are able to write or sorry yeah write the json file and read the json file we're then going to make sure that we have exactly two command line arguments one being the name of the python file the next being the command that we want to run we're going to grab what that command is we're going to load our data from the json file we're going to say if the command is equal to save then we want them to enter a key we're going to get what's from their clipboard and save it in our dictionary we're then going to save that persistently to the json file if they type in load same thing we want a key we're going to check if the key is in the dictionary if it is then we are going to take whatever the value is and put that on the user's clipboard otherwise we'll tell them key doesn't exist and if they type in list then we're just going to print out what the data is all of this code will be available from the link in the description now we're going to move on to project number two all right so now we're moving on to project number two now in this project i'm going to show you how to work with an api an api is an application programming interface now this is a resource on the web that's either going to give us some data or allow us to send a request to it and then modify some information you've probably heard of apis before we're going to work with a very simple one here that's going to give us data about weather right so weather information for any city in the world pretty useful and again even if you don't really care about the weather aspect of this i'd still follow along because it shows you how to work with apis and you can take this knowledge and apply it to pretty much any api say you want to get maybe the scores of a hockey game or something same type of thing as what you're going to do here to get that information okay so now that we've talked about that i'm not going to demo the project because i think i explained it well enough we're going to go to this website i'll leave a link to it in the description because this is the api it's completely free that we're going to be using for this project now you do need to create an account on this website it's just going to require an email address no credit card or anything like that and when you create an account it should give you an api key now i'll show you how to get to the api key if you don't notice it that's the main thing that we're going to be looking for once you have the api key you pretty much can get off this website so notice here that i've signed in with an account and when you click on this in the top right it says my services my api keys just click on my api keys here and then it should show you your key now you can click on the copy button and grab the key uh or no sorry that's edit api key but you should be able to just grab it like this and copy it or generate a new one anyways you want the key so copy your key and don't share this one with anyone else i'm going to delete the account before i post this video so i don't really care but we're going to go to our python file i've just made a new one called weather and i'm going to type in api key is equal to and then i'm going to paste the api key in like this once you have the api key we don't really need to use this website anymore although i will show you how we look at the different apis and kind of interact with them so if i go back to the api page here and notice we have current weather data there's a bunch of other apis that you can look at as well so hourly forecast one call api whatever i'm just going to do the current weather data so i'm going to click on the api documentation and it's going to show us here how we actually call this api so you can read through this again this link is in the description you can find this page i just want to show you this is the documentation and this is essentially how i figured out how to do this okay so now that we have the api key what we actually need to do is install a module in python which allows us to send a request to this api now this module very fittingly is called request and i'm going to show you how to install it so you need to open up a command prompt or a terminal depending on your operating system and in the command prompt doesn't matter the location you don't need to get in a specific directory just type in the following command pip install and then request like this now when you do that it should install the request module for you however i know a lot of you are going to have an issue with this command if you do have an issue try the following command pip 3 install request if that command doesn't work try python hyphen m pip install request if that doesn't work try python 3 hyphen m pip install request and if none of those work i'll leave two videos on the screen showing you how to fix this command just follow along with those videos and they will go through okay so at this point in time i'm going to assume that you have successfully installed the request module and if you have then you can go to your python file and you can import requests now a request is essentially what it says it's a request for some type of data a request to do something and we're going to be hitting what's known as an endpoint essentially a url on some remote server so on the internet that's going to give us some data or update some database in this case we're just going to be getting some data we're going to be getting the weather data so the first thing that we need to know to be able to send a request is where we are sending the request to so we're going to say the base url is equal to and then i'm going to copy this in again this code will be available in the description but i'm sure you could probably just write it out this is going to be http colon slash api.openweathermap.org data 2.5 weather okay this is the endpoint the url that we want to hit and we're going to send what's known as some query parameters these are things that we send alongside this base url telling it what data we want so essentially what city we want to get the weather data from so once we have our ap api key and we have our base url we now need to get the city for our weather data so i'm going to ask user to enter that so i'm going to say city is equal to input i'm going to say enter a city name okay now not every city is going to work but i think there's over 200 000 cities that are stored in this api database and you can read the documentation if you want to look at the specific cities but most big ones that you would know hopefully should work here okay so once we have the city what i need to do is actually build kind of a url that looks similar to this that includes the city and my api key in it to be able to send the request so what i'm going to do is say that my request underscore url is equal to i'm going to use an f string now an f string allows you to directly embed variables and expressions inside of a string this is only available in python version 3.6 and above but i can do something like place curly braces and then type base url now when i do this it's going to paste the value of base url directly inside of this string and then allow me to add other string characters like an equal sign here which is quite nice so i'm going to say base url question mark i'm then going to say app underscore id uh no it's going to be app with no space id i'm going to look at my cheat sheet here this is going to be equal to my api key okay and then i'm going to put an n sign and then a q is equal to and then this is going to be inside of curly braces my city now let me just close this here so the way this works is we have our base url we then are passing along our api key as what's known as a query parameter that's anything that comes after the question mark and then i'm putting in ampersand because i'm going to pass another query parameter which is q funny enough q stands for query and for the query i put a city and that means i'm going to look for the data associated with the city that the user types in hopefully that makes sense but this is the url that we want to hit now we actually need to send a request to this url now whenever we send a request there's different types of requests we have a put request a post request a delete request these are all forms of http requests so basically you know the standard internet requests we want to send a get request because we're retrieving data so what we're going to do is say that data or actually we'll say the response is equal to request.get and then we're just going to call the request url okay so what this is going to do is use the request module the one that we installed to send a get request to this url it's going to then give us a response and the response is going to contain some data that data is going to be the information associated with our city however this response may have an error there's a potential that maybe there was an issue with our url maybe our api keys expired or something along those lines so we want to check to make sure this response was successful before we try to get the data or the payload that was kind of returned to us so what i'm going to do is check the status code of this response now a status code of 200 means that this response was successful you may be familiar with the status code of say 404 i believe that's not found right maybe 400 that stands for bad request there's a ton of different status codes out there but 200 means okay or successful so we're going to check to make sure it was successful now if it wasn't successful then i'm going to print an error occurred okay and inside of here when we are successful what i want to do is get the data associated with this response now remember we looked at json in the previous project well the data is going to be returned to us as json conveniently so i'm going to say that my data is equal to response.json so this is something you can use on the response object this will give you the json data as a python dictionary and for now we can just print this out and see if this works okay so we went through a lot there let's run the code and see if this is going to work so we're going to run enter a city name i'm going to go with new york okay and then notice it gives me a bunch of data associated with new york now let's see if i can make this a bit larger okay that's better and we can see here that we have the weather we have main we have all of these keys it's kind of hard to read but we have coordinates associated with this python dictionary weather associated with a list now this list contains a bunch of different data i'm trying to figure out where it ends okay it ends right here we have base we have main main is associated with the temperature the feels like so we need to kind of look at this response here and figure out how we want to access the different elements from it now i want to get the weather so i want the description where it says overcast for example and i also want the temperature now the way i get the weather is access the weather key and then i access the first element in this list which is just this right here right because we have a list then if i want the temperature i need to access main and i need to access the key temperature so let's go ahead and do that so the first thing i'll get is the weather so say the weather is equal to data at weather okay so now we can print out weather like that and then i will say that the temperature is am i spelling this correctly is equal to data at and remember this was the main key and then the next key we wanted after that was temp and then i can print out the temperature like that okay so let's try this now and see if what we're getting so when i run this i'm going to type in let's just go with new york again and we get a list so i need to access the first element in here and then i get the temperature in kelvin and if i want to convert that to celsius i need to subtract 273.15 i believe that's the conversion i'll i'll do that in a second anyways now we need to get the correct thing for temperature so i accessed the temperature key but it gave me a list so i now want to access the first element in the list and then i want to access the description so let's do that so i'm going to access element wait sorry this is for weather my bad i want to access zero and then i want to access the description okay so let's paste that like that and then for the temperature i'm just going to subtract 273.15 i may be incorrect but i believe that's the conversion to celsius okay so let's run this one more time now when i type in my city let's go with new york and i get the description of broken clouds and then i get kind of some very long number here right 2.68 so what i'm going to do now is just round this i'm also going to write celsius we'll do a bit of formatting to make this look nicer and then that'll pretty much wrap up this project so now that we have the temperature let's round this to the nearest two decimal places okay so just to get rid of all those uh extra decimals that we had and then for the weather that's fine for now however i do want to print out kind of like weather is this right rather than just printing out what it is so now what i'm going to do is i'm going to say print i'm going to say the weather and then comma and i'll print out the weather and then i'm going to print and i'll say the temperature and then this is going to be equal to the temperature and sell see us like that okay just so we know the unit great so let's run this now it's going to ask us for a city name let's just go with boston i know that actually is that going to work let's see if that's going to work okay it does work we get overcast clouds then we get 1.14 celsius nice there we go okay so that is this project we could run this a few more times and see if this works for some other cities let's go with tokyo okay we have a few clouds 5.27 degrees celsius you guys can mess around with this but i think this will work for most of the major cities that you guys would know this is all the code that is how you work with an api that is this project there's some more data that you can access i'll let you guys look at that you can just print out the data variable here and then you'll see all of the different keys hope this was helpful let's go on to project number three alright so now we're moving on to the third and final project which is sending an email in python now this is really just a lot of syntax using the builtin python libraries to send an email of course i will explain it all to you i do want to mention though that i'm showing you the most basic usage of this so sending an html or plain text email if you want to attach files if you want to send to multiple people if you want to do you know all the kind of advanced email stuff you may want to do you're going to have to look up some other documentation or maybe find another tutorial online this is really just meant to show you the basics and kind of get you introduced to sending emails with python it would take me a very long time to go through all of the different possibilities when it comes to sending emails now i'm going to show you specifically how to send an email from a gmail account so make kind of a dummy gmail account if you want you can use your own account that's fine however you do need to modify one setting when you make the gmail account i'm just going to get to that page right now and i'll show you what it is so i'm in my google account this is kind of a dummy email that i use for youtube videos live streams that type of stuff now what you want to do here is click on manage your google account that's how i've gotten to this page and then go to security and you should see something that says less secure app access now you need to check this to on if you don't have this on then it's not going to allow python to actually send an email so again you want to go to your google account settings or manage your google account however you get there you want to click on security and you wanna make sure this is on if it's not on you're not gonna be able to send an email okay nice now i have my inbox open here just so we can see the different emails obviously you can see i was messing around previously sending some emails from python okay so let's close that let's go here now let's start writing some code and send an email with python so to do this we need to import a few python modules now i just want to note that i'm going to be looking at my cheat sheet over here because i can't memorize all of this so if you see me looking in this direction that's what i'm doing just looking at some other code so i can copy it in so the first thing that we want to import here is the smtp lib we also want to import ssl for the secure socket layer and then we are going to say from email dot message import and this is going to be email message like so now all of these are built into python so you don't need to install them so they should just work again though make sure you're using python version 3.6 and above if you're not then this import here will probably give you some errors okay so let's start coding out some of the things that we we know we're going to need for an email so a subject a recipient a sender a body and then i guess we're going to need the password for the user who wants to send the email so let's go with uh subject is equal to and let's say email from python of course make this whatever you want let's go with the body of the email equal to this is a test email from python okay exclamation point let's go with the sender underscore email this is going to be equal to whatever email address that you have so in my case it is code racer live stream app at gmail.com now i'm just going to send this email to myself but it will work to send it to anyone else that you want they don't have to have the secure app you can send the email to anyone it's just that if you want to send from an email you need to have the secure app or less secure apps on i think that makes sense okay let's say receiver did i spell this incorrectly looks like i did okay receiver email will be the same email and then is there anything else that we need yes we need a password so for the password i'm just gonna say input and then enter a password like this now you can put the password in plain text here in the code if you want not necessarily the best practice to do that but the reason why i'm doing a little input field is because i'm just going to cut out the the part of the video when i enter the password so that you guys do not actually see what my password is for this email okay so there we go we have subject body sender email receiver email and password now what we actually need to do is build the email and the way we're going to build that is by using the email message then i'll show you how to send the email so i'm going to say that my message is equal to an email message we need to instantiate this class right here now that we do that we need to kind of enter a few fields so i'm going to say message and then from notice this is kind of in a dictionary format is going to be equal to and then this is going to be the sender email we're going to say message to and this is going to be equal to the receiver email and then we're going to say message and this is going to be the subject i believe is going to be equal to the subject okay there we go now when we want to actually set content for the email so the body of the email essentially what we do is the following we say message dot set underscore content and then we pass in here the body okay so i'm going to do body now i'm going to show you how to send html emails in a second so you can format them nicely and have bolding and styling and whatever but for now we're just going to send plain text and then we'll get to html okay so we've actually done most of the work here next we need to say context is equal to ssl dot and then this is going to be create underscore default context so the reason why i'm doing this is because when we connect to gmail we need a secure connection so i can't really explain this much more in depth but what this is going to do is give us a context for a secure connection that we can use when we're actually using the smtp library and connecting to the gmail server because we don't have our own mail server here we're connecting just to the default gmail one and again we need ssl to do that hopefully that makes a tiny bit of sense you don't really have to understand all of this you can still send an email if you don't know what one or two of the lines of code does okay continuing here i'm going to say with smtp lib dot and this is going to be in all capitals smtp and then underscore ssl so we're connecting with the secure socket layer what i'm going to do is put in the server that i want to connect to which is smtp.gmail.com now the port for connection which is the argument here is going to be 465 and then the context is going to be equal to the context that we just defined we're going to say this is as the server okay so all we're doing right now is connecting to uh what the heck did i do something wrong here sm sorry let me just fix the spelling smtp loop there we go all we're doing here to continue is just connecting to the gmail server and again we need to do this in a secure way that's why we're using ssl okay so now that we've connected what we're going to do is use the server to log into our email account so then we can send an email so we're going to say server dot login yeah i think login is what we need and we're going to do the sender underscore email and then the password that the user typed in okay so now that we are logged into the server we actually can read emails i'm not going to show you how to do that but that is possible we also can send emails now to send emails is pretty easy we're going to say send mail like that and we're going to do the sender email we're going to have the receiver underscore email and then we're going to have message and we're going to do as underscore string so the reason why we need to do as string here is because we need to convert the message object that we were kind of building up here into a string so that we can then send this as a string email now again i'll show you how to do html in one second but for now write all of this out i'm sure some of this doesn't quite make sense but this is kind of the best explanation i can give you without going too in depth on how to send an email with python now we can test this out but i just want to do a little bit of output here so i'm going to print say sending email and then i'm going to print after here success okay just so that we know when this is finished because it could take a second or two to actually send the email so let's just space this out a bit and now let's run this code i will type in my password and blur that and then we'll see if this works so i'm going to enter my password it's going to blur out so hopefully you guys cannot see this editors please make sure you blur this gonna hit enter sending email success okay now the only way to actually test if this works is to go to the email inbox i'm gonna go here and refresh notice i just got an email it says email from python that's subject and then this is a test email from python awesome we successfully sent an email from python very good now we want to do html so to do html is actually fairly straightforward let me just have a look here and see exactly how i did this before alright so to do html we are going to first create the html that we want to send now because i'm lazy i'm just going to copy this in so this is my html notice that i'm just having an h1 tag which is equal to the subject and then i have a p tag which is equal to the body those are the two variables up here i'm using a multiline f string again only available in python 3.6 and what i want to do now is rather than setting the content here i'm going to say message dot and this is going to be add underscore alternative and i'm going to pass html and i'm going to say subtype is equal to html now this is adding an alternative thing rather than just like plain text content we're adding html content so now hopefully we should actually be sending email with html okay now of course i need to define the subtype as html stating that this is going to be html because i can add other types of things like files for example binary whatever to the email okay so i'm going to save this now and let's run the code let me type in my password again editors make sure you blur this okay sending email success so let's now go to our inbox and that's not my inbox this is my inbox let's see if this works okay refresh when i come in here notice we get our beautifully formatted html we have our h1 tag and we have our p tag and of course if you know html you can make this look a lot nicer but that was all i wanted to show you for uh sending an html email okay so this is the finished code here i'll kind of scroll through it slowly so you guys can have a look again all of this will be available in the description and with that said i am going to end the video here now i do want to remind you that i do have a course called programming expert dot io it goes over a lot of the python syntax that you would have seen here if you were confused at all about this syntax you just want to learn more about python get into more advanced programming definitely check that course out you can use the discount code tim go to programming expert dot io slash tim with that said i will end the video here again i hope you guys enjoyed if you want to see more videos like this please leave a comment down below subscribe to the channel and i hope to see you in another one