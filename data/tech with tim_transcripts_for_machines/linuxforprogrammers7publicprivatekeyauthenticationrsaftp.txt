hello everybody and welcome to another video in this linux for programmers tutorial series in this video what we'll be doing is talking about public and private key authentication for our server so making it so we no longer need to type in the password for our user but instead we are automatically authenticated using this special method which is kind of a key pairing which i'll discuss more as we get into that we'll also be talking about how to access our file from ftp so how we can use the file transfer protocol to transfer files to and from our server so that's what we're going to be going through in this video let's get into it after a quick word from lenode which is the sponsor of this video and this series now as i've said many times now lenode is one of the best companies to use when hosting a website domain or personal project they have all kinds of integrations specifically for programmers like deep support for kubernetes and other developer things like docker the node just makes it really easy to spin up servers i've been using them for about two years i have literally zero complaints and whenever anything goes wrong or i need help i reach out to their customer support team which is active 24 hours a day seven days a week 365 days a year so claim your 100 free credit towards the node by clicking that link in the description now before we move forward a reminder to sign up for the last five videos in this tutorial series you know where to go but there is a link in the description you can register with your name and email and then you will be notified when these videos are available on this platform lastly there is a guide for this video this is actually a very helpful guide especially if you just want more information about the stuff that i'm talking about here link will be in the description all right so let's dive in the first thing that i'm going to do is i'm actually going to show you how to on mac set up this rsa key pair and log into your server using public and private key authentication we'll talk about this more after i hop onto the mac then after that we'll go through windows then we'll talk about the ftp there'll be some time stamps in the description so you can kind of fast forward and look at the relevant sections for you anyways let's go over to the mac so i'm here on the mac what we're going to do now is set up an rsa key pair which is simply a public and private key now in case you're confused what's going to happen here is we're going to generate the public and private key we're going to store the public key on our server we're going to store the private key on this machine now what's going to happen is when we sign into our linux machine after we set up this public and private key all we'll need to do is pass the private key to our machine and in fact we won't have to do this our like operating system will just automatically do this for us and then it will compare the public key and the private key together and if there is a match then it will authenticate us and let us sign in this is typically a more secure way to do things because if you have just a standard passphrase to sign into your computer or sign into your machine that is vulnerable to brute force attacks i can say personally one of my servers was actually hacked with the brute force approach so typically after you do this what you will do is you will disable password login so you can only log in with a public and private key pair i'm not going to show you how to disable the login in this video it's pretty easy to do so i'll let you look that up if that's something that you want to do but this will at least show you how to set up the public and private key authentication and just make your life a little bit easier when signing into your server anyways i've gone through a lot here but let's just dive in so the first thing we're going to do is see if we already have a public and private key pairing on this machine now the reason we need to do this is because if we do we don't want to override this so we're going to type ls and then tilde slash then dot ssh and then slash and after that id under rs sorry not under but underscore rsa and then an asterisk what this is going to do is search for all of the private and public key pairings on our machine we're looking in the home directory of our user and again this is specific to mac this isn't going to work on windows and we see the dot ssh folder and then we have two files id underscore rsa and id underscore rsa.pub for you chances are you don't have any of these files if you don't just continue on with the rest of the video now if you do have these two files do not do the following step that i'm like don't write the next line that i'm going to write the reason you don't want to write this line is because this line is going to generate these two files now if you generate these two files and two already exist you're going to override them if you override them you're going to lose your private and public key which means you will lose access to any machine that requires this public and private key so again do not write this line if you have any ids here or any public and private key already installed on your machine if you don't have anything so you type this command and you don't see anything popping up then you can write the following line i just want to make sure that's really clear because i don't want any of you guys to lose access to any of your linux machines so what we're going to type after this assuming that we don't have these two files again is ssh hyphen and then key gen and then hyphen b and then 4096. what this is going to do is generate these two files the private and public key it's going to store them in our ssh directory and then with the two following file names you can see right here by adding this hyphen b 4096 we're increasing the amount of bits or the amount of bytes that we're going to use for our keys just so that it's more secure so we bumped it up to 4096 as opposed to i believe the default which is 2048. anyways we're going to press enter what this is going to do is generate the public and private key and now we have the option to encrypt our private key or to save it to a different file so if you want to save it to a different file then that's fine you're not going to override these two files right here so you could say id underscore rsa1 or id underscore rsa whatever you don't even have to call it id rsa you can call it whatever you want if you just hit enter which is what i'm going to do by default it's going to tell you do you want to override the file that already exists if it exists if it doesn't it will just save to this file name id underscore rsa so i'm going to override my file because i actually don't care about these ones this was just testing before the video and then it's going to ask me if i want to enter a passphrase now a passphrase is different than a password what the passphrase will do is decrypt your key so that it can be sent to the server so typically you want to have a passphrase just so that if someone gets access to your private key they're not able to access your server unless they know the passphrase so i'm just going to make my passphrase like one two three four something really basic but again you would obviously make this more secure all right so now our passphrase is in and we've generated our key now again to check where this key is well it's just going to be in your dot ssh folder and then you can run this command and well you'll see it pop up you also could just cd into the dot ssh folder in the user's home directory and on mac tilde again represents the home directory just like on linux now if you already had a key file stored so you already had your id underscore rsa and iot underscore rsa.pub you don't need to generate a new one you can just use that same key file for your server so you can use the same key file for multiple machines now is that recommended i'm not quite sure that's up to you do you want to use the same one or not i mean that's kind of your preference but if you want to use the same one you don't need to generate a new one if you want to use a different one when you type that command just be very careful and make sure you select a different file name for the key and you know what that file name is because that's going to be important in this step okay so now that we have this we're actually going to ssh into our machine and add this key to it so to add this key to our linux machine we're going to type the following ssh hyphen copy and then hyphen id and then we're going to put the username at and then the server ip address so i'm going to say root at and then 172.105.25.135. now your ip address is obviously going to be different but you're probably going to sign in as the root user unless you want to use one of the other users you've created so anyways we'll say ssh copy id and then the user that you want to add this key for so i'm going to add this for the root user but typically you add this for a other user on your machine you don't usually add these public private keys for the root user but we're just going to do it for this video and then you press enter now what this is going to do is it's going to copy your public key to your linux machine so it's going to ask you for the password for the root user so type in your root user password or whatever other user you use to sign in here press enter and after you do that all of a sudden uh the private and public key will be active on this machine so you will now be able to sign into your linux machine without entering a password rather you'll enter the passphrase to decrypt your private key now i know this is a lot of information just to reiterate here typically you don't do this for the root user i'm just doing it for the root user for this video just because it's easier and i forget the other users that i've created to be honest with you but usually you would create a new user it would be a pseudo user so you would add it to the sudo group then you would do this for that user anyways i just wanted to make sure that's clear that traditionally this is not done for the root user so anyways now we've added that key so what we're going to do next is we're going to see how we actually sign into the machine now so now on mac to actually get into this device we're going to say ssh and then our username so root and then whatever the server i p address is so actually i'll just copy this right here and remove the copy id so ssh root and then at and when we do this it's going to ask us for the passphrase for our private key which is stored in this file so you type in the passphrase to decrypt it and then it should just automatically log you in to the server so now notice i didn't have to type in a password i used the public and private key pair to sign it so that's how that works and that's the point of using this public private key is now you don't need a password to sign into the device you simply just have this key stored locally on your machine and that's automatically passed to the linux machine when you sign in then what you would do after this is you would remove the ability to sign in with a password from this machine so that the only way you can get access to this linux device is if you have that private key anyways again i'm not going to show you how to deactivate that but that is what you would traditionally do now let's head over to the windows machine and i'll show you how to do this there now we'll move on in one second but i need to quickly thank the other sponsor of this video which is algo expert algo expert is the best platform to use when preparing for your software engineering coding interviews they have a data structures crash course a mock interviews feature and over 115 coding interview questions some of which are taught by me get started using algox for today by hitting the link in the description and using the code tech with tim for a discount on the platform all right so now i'm back here on windows i'm going to show you how we can do the same thing except on windows unfortunately windows doesn't have as nice of commands to do this so it's a little bit more involved but still not too complicated anyways there's gonna be a link in the description for this software called puttygen now what this software is going to allow us to do is generate a public and private key pair that is specific for putty so we're going to use putty to sign in obviously as we've been doing this whole time and specifically we're going to use a putty private and public key pair so putty gen generates this for us so go to the link in the description and just scroll down to kind of the middle of the page and you should see an msi installer for putty and then if you keep going you should see puttygen a piece of software popping up right here so where you see puttygen you're going to download the 64bit or 32bit uh depending on what operating system you're on and again it's only going to work on windows this method all right so now i'm just going to download this to my desktop and then we'll run puttygen.exe so we run puttygen.exe and we can see that it says no key and there's a button called generate so what we're going to do first is we're going to change the size of our private key or our key in general sorry to be 4096. so let's change this to 4096 and make sure that rsa is selected that's the type of key that we want now what we're going to do is we're going to press generate and when we press generate it's going to say generate some randomness by moving the mouse around the blank area so literally just move your mouse around and that's how you're going to generate the random key which i think is hilarious but that's how you do it just move the key around so now it says that we have our public key and we should also have a private key as well what we can do is enter our passphrase so again this is just to encrypt the key so i believe this has to be at minimum five digits so i'm going to enter one two three four five and then what we're going to do is save the public key and save the private key so i'm going to save the public key it's going to ask me where i want to save it now it's important that when we save what is this the public key we save this as a dot txt file now you'll see why in a second but anyways just save this as a txt file so we're going to say public hyphen key or whatever we want to call it and then dot txt i'm just going to save this on my desktop and in fact you know let me make a folder here and i'll just call this tutorial and there we go we'll save it inside of here okay so there we go we have our public key saved and now we want to save our private key so when we save the private key notice that the file extension is ppk make sure you keep the ppk we need that as the file extension for this now we can again name this whatever we want i'll just say private hyphen key and click save all right so now that all that's done i've saved the two keys what i'm going to do is i'm going to first navigate to those so desktop and then tutorial and i have my keys right here so we'll just leave this kind of open on the side of our screen and now i'm going to open up putty so let's open up putty and what we're going to do is we're going to load our session so we'll load tutorial like this and then we're going to go to the connection tab in putty we're going to go to ssh we're going to expand ssh and go to auth and then inside of auth we are going to select our private key file so where it says private key file for authentication we're going to press browse we're going to look for it on our machine so this is in desktop tutorial private key so we're going to press open now this is why we have to have the ppk extension because this is specific for putty a putty private key is what that stands for all right so now that we've done that we're going to go back to our session we're going to press save on tutorial so that we save this private key with our session so now every time we open the session the private key will automatically be passed so that we don't need to do it manually all right so now we're going to load this session or open this session so let's open it and it's going to ask us to log in so we're going to log in as we normally would we're going to log in as root it's going to say that our key was refused that's fine because we don't have the public key yet on the server for this machine then we're going to type in the password so i'll type in my root password all right so i'm now signed into my linux machine what we're going to do now is we're going to add the public key to this machine now you need to make sure you follow these steps precisely because you can mess this up very easily and if you already did this on mac and i guess if for some reason you're following along with windows a lot of these commands you're not going to have to type now if you're just doing this on windows unfortunately we don't have these nice commands like we have on mac to just automatically add this so there's a bit more work that we need to do but anyways we're inside of the server now what we're going to do is we're going to first check and see if we currently have a dot ssh folder in the user's home directory so by default we're in the user's home directory we're going to try to cd into the dot ssh folder so if this works this means you have a dot ssh folder you can skip the step that i'm about to do so if that doesn't work though and you don't have an ssh folder you need to make one so you're going to say mkdir and then dot ssh so you're going to make a new folder called.ssh once you've made this new folder again i'm not making it because i already have one you're going to cd into it so cd into dot ssh once you're inside of dot ssh you're going to make a new file this new file is going to store your uh public key so you're going to say touch and then the name of the file in which this case it is authorized keys so touch authorized keys only if you didn't have this ssh folder already if you already have this ssh folder do not do this okay so now we make this authorized keys file once we make this authorized keys file what we need to do is cd out of this folder so cd dot dot and we now need to set the permissions for this folder and for this file the reason we need to do this is when you log in using your ssh keys well these folders and files just need to have set permissions i'm not a linux expert enough to explain exactly why we need all these permissions but this is just what you need to do just trust me this is the proper permissions you need to set so what we're going to type now is chmod and then plus so sorry a plus and then rwx and then comma g minus rwx and then o minus rwx and this is going to be for the dot slash dot ssh folder now you can just do dot ssh as well and it would be helpful if you spell ssh correctly and you're going to set this permission for this folder again only do these steps if when you first logged in here you didn't have the ssh folder and you didn't have that file that i told you to create so run this command and then after you run this command you're going to run another command so you're now going to cd into this folder so cdn2.ssh after you set the permissions that i just defined and you're now going to set the permissions for the authorized keys file so now you're going to say chmod and then a plus rwx then u minus x and then g minus r w x and then o minus r w x so you're just setting very specific permissions for who can access read and execute this file so do this then press enter set this for this file so the file sorry we should type the file out is going to be authorized keys and once you've done this now you're good we now need to add the public key to this file so again all the stuff i just showed you you're only doing if you didn't have this ssh folder when you first logged into this machine okay so chmod a plus rdbx u minus x g minus rwx o minus rwx authorized keys run that command okay now that we have the permissions set for this file and if you're on mac and you're still watching this just by default mac does this for you so you didn't need to do it now we need to add our public key to this file so we're going to say nano and then authorized keys now nano is just a text editor on linux it's going to open up this file now notice that i have a key inside of this file the reason i have this key is this is the ssh key from my mac when i just added it now you won't have this you'll likely just have nothing in this file because it's an empty file what you're going to do is you're going to go and find your public key that you saved in the text file and you're going to copy it not the comment just the key so you don't want the comment or the end or anything inside of the the hyphens here so we're going to take this key we're going to go to putty and we're simply going to paste it in now to paste this you actually right click with your mouse so you right click it like that and it should paste it into this file so now that this is pasted in we're going to go actually before this key sorry we should have done this before uh and oops i just want to go to the beginning of this line here and i need to preface all this with ssh hyphen rsa so ssh hyphen rsa and then whatever your key is now i'm hoping this is all on one line uh this needs to all be on one line i don't know why the text file copied this into multiple lines but unfortunately you are going to have to put this all in one line so maybe you can be more clever than me and not do it the way that i'm doing but uh you need to make sure there's no escape characters here and i'm just gonna fast forward through me putting this on one line but make sure it's on a single line all right so now it's all on one line once it's all on one line i apologize about that guys we're just going to save so control s and then control x and now you have this public key in your server so now what you need to do is need to log out and then you can log back in and you should just automatically be authorized because you've done this correctly and you added the public key so now we can log out or we can exit and what i will do is go back to putty so let me go now back to putty here and inside of putty i'm going to load tutorial now notice when i load tutorial if i go to ssh and then off my private key file is saved that's why we saved that before anyways now i will open and when i open i can type in my username and it should just automatically authenticate me so it says authenticating with public key and then passphrase for key is this so what i'm going to say is my passphrase and now it should log me in it logs me in and we are all good so now we have our public and private key authentication set up next i'm going to show you how to access this server over ftp so using a file transfer protocol first thing you need to download an ftp client you can pick whatever you want i'm just going to go with filezilla because it's kind of the most known and it works on mac and windows it's actually not my favorite ftp clients i usually use win scp but that's only for windows so i didn't want to use that in this video in case any of you guys are on mac so anyways go download filezilla i'll leave a link to in the description or whatever ftp client you want for that matter and then open it up so i've got uh filezilla right here and i'll just show you how to use filezilla to connect your server and i'll show you what an ftp client kind of looks like so let's make this full screen i'm going to put in my server ip address now i'll be back i'm just going to grab that all right so i've got the ip address in here then you're going to type in your username you type in the password as well so type in the root password and then put port 22 in here and just press quick connect now this will work if you have the user password enabled on your machine again you can disable this i'm not going to show that in this video though and if you just press quick connect you should sign into your machine and now you can actually see all the files on your machine that are accessible for this root user so now you could manually delete them like i can just delete the file i can add a new file i can also drag files from my machine which is on the left hand side of the screen here over onto my linux machine this is a really easy way to take files and transfer them to the device or transfer them to the linux machine and from the linux machine you can drag files and transfer them back to your local machine so that's ftp super straightforward also show you how to use your public private key from ftp so to do that in filezilla you need to go to where is it here uh there's somewhere that says settings i believe it's server uh so let's let's disconnect first actually and let me try to find the settings here because there is something to do so if you go in edit actually and you press settings then what you can do is you can go to sftp and in sftp you can add your key file so i'm going to add my key file i'm going to find this i believe this is on my desktop so desktop tutorial and private key i'm going to add that here and then that should be good so i'm going to press ok now and now when i access my server i should be able to just put in the username port 22 and connect using the private key so now it asks me for the passphrase for this key so notice i didn't put in the password for the root user and what i will do is just put in the passphrase and press ok and then it should sign me into the server just like before and there you go we're signed in using the public private key so that's actually all i wanted to cover in this video i hope this was helpful to you after this you should probably disable the password authentication or login for your server again i apologize i'm not showing that but i just think it's something that you guys can find on your own if you want to do it it's really simple and i don't want to do it for my server because i still would like to be able to log in with my password so i don't want to go through all the steps in this video anyways i hope you guys found this useful if you did make sure to leave a like subscribe to the channel and i will see you in another youtube video