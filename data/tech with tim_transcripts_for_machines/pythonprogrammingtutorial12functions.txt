hey guys welcome back to another video this is the 12th video in my Python Programming series and today we're going to be talking about functions so this is a function up here um we're going to talk more about the syntax and what a function does but it's first important to understand what is a function well if you're in math you know that a function pretty much you pass it an x value and then it does something to that x value and you get a y value back well it's a similar idea here in Python except there's different types of functions that can do different things so the first function I've just written right here um pretty much I've named it add two and what happens is we give it an x value and then it simply returns x + 2 now this doesn't have to make sense to you right now I just want to show an example of what a function looks like so if we wanted to make our own function what we would type is we type DF this is stands for definition um and then the function name so maybe in this case I want to do another math related function so I'll do subtract two and oops two as a word and then I'm going to put two brackets and inside of the brackets we're going to put something that's called a parameter so in this case I can name it anything I want I'm going to put number in here and then I'm going to do a colon click enter it should tab me in one space and I'm simply going to return X or sorry number minus 2 now I'm I'll talk about what all this really does um a little bit later but I just want to give some examples so now if we want to call our function or we want to actually use these functions we have to do something we can't just leave it like this I'll show you if I run this right now nothing's going to happen what we actually have to do is we have to do a um call statement so what I can do is I can do add to and then in here we have a parameter X but what's actually going to happen is I have to give add to a number because we're going to add two to that number and it's going to be returned so let's say 7 now you'll see what's going to happen here uh I'll run it quickly and nothing prints out to the screen that's simply because we haven't printed anything what actually happens is in this add to call statement we have it sets x equal to 7 so it comes up here and it says okay we're going to add two to 7 so we have X here we add to and then we're going to return that back down here so pretty much we call this function and it returns it right here now I have to set this equal to a variable or simply print it out to the screen so I'll set it equal to a variable right now so I'll say new number is equal to add to 7 and now if I print out new number like this we get nine okay so that that's how that works all right now what about subtract two so we can do the same thing here with seven so we do subtract two we'll leave seven in here for number and you'll see we get five so that works correctly now I can do it again I could do 12 and we get 10 and maybe I could even change what I want to do in these functions so this one's called add two but maybe I wanted to add two to X and then I wanted to square it so then I would do that and then if we go back to the add two so I'm going to put 12 + 2^ 2 which would be 14 s which will be a pretty big number which will give us 196 just like that so you can kind of see um and understand how these functions are working they have a parameter this is what that's called up here so a variable name I could do X I could do y I could do Zed doesn't matter I can do any letter I want any name I want um it makes sense to call it something that makes sense in terms of the function so here x works fine but if I was doing a string so maybe we want to write another function let's let's do another function here and we'll do Define and we'll call we'll say print string and now inside of here I'm just going to put string like that as our parameter name and then we're simply just going to print the string to the screen so now what actually happens is instead of setting something equal to a variable all I have to do is I have to do print string this is my call statement and then in here I'm going to give it a string so I'm just going to type hello and you'll see if we run the function we get hello and we didn't print it down here we just printed it from the function so I know I've gone kind of fast but the easiest way to understand the functions are to show examples of them and how they're working pretty much there's a parameter I'm going to give the parameter I'm in the argument of the call statement so this in the definition of the function is called a parameter and in the call statement in between the brackets it's called an argument um so those are just some key words now I can actually use these functions as many times as I want so I can print string again and I could print my name is Tim just like that and you'll see it should do it twice yeah there we go so that's why these functions are extremely useful because say for example I'm wrting a big program and I know that I would need to do a certain thing multiple times well I don't want to have to constantly write it out um in the main line of my program here when I can just have a function that's going to do it for me and all I have to do is call that function using a simple call statement like this so we haven't really done many big programs yet where functions make sense but you'll see when you start programming that you're going to be using a lot of functions um to do things because you're going to be repeating code um now these are very basic functions we have subtract two add two but you can have like physics functions for example if I know I'm need to find the uh acceleration of an object then maybe I would make another function here and I do Define excel I'll just do like that uh short form and then I'll put in mass and the force like that so you see I can actually have more than one um parameter I can have two parameters here and I'm going to say a is equal to mass * Force I know that's not correct but we could do something like that mass time force and then I could return the variable a and now if I called my Excel function and I printed that to the screen well that would give me what the acceleration would be right um so that those are just some examples of why functions are extremely useful well we're going to talk more about functions I'll do a more advanced tutorial um a little later on but this is just an introduction so that you can hopefully understand how they work pretty much you have if you're writing a function you have the defa keyword um you have the function name so this case it's highlighted in blue so I did add to then you have brackets and say for example when we do a function we can actually do one without a parameter so I could do Define to do something and in here I could simply print high right I don't need to have any parameters that just means when I call this function so do something I don't put anything inside of the brackets right we just do this and we see hi hello my name is Tim right um so yeah it doesn't have to have parameters it can have multiple parameters um if for example in this acceleration function you have multiple parameters that means that when you call the function so I'll do an example here then you're going to have to put two numbers in or two strings so I do two comma 5 like that and we'll print this to this to the screen because we don't print in that function so we can see what we're getting so yeah we get hi hello my name is Tim and then 10 right so acceleration 25 okay um so yeah that's just the basics of functions we're going to talk more about them uh in more in depth later but just try to understand how they work and yeah so if you like the video please like And subscribe and I will see you again later