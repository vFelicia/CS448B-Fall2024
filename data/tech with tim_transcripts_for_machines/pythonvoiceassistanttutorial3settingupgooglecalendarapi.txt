hey guys and welcome back so in today's video what we're gonna be doing is setting up a Google Calendar API or I guess just working with the Google Calendar API for our voices system so I saw a lot of comments on the previous videos saying that you guys want some kind of calendar support so whether that be you know asking the bot for your next event in the day or adding an event or changing something and whatever it is we're gonna add a few of those different functions in here the first thing that we need to do in what this video is kind of gonna be dedicated to is just getting set up with this API now fortunately for us Google actually writes a ton of really helpful kind of QuickStart tutorials on how to use this so we're just gonna follow along with this today I mean it's pretty straightforward and you could probably figure it out without actually watching the video if you just want to read through this but for anyone running into any issues I'm gonna walk you through it step by step here so the first thing we need to do is go to this link here that I'm gonna have in the description down below and you're gonna make sure that you sign in to the correct Google account now I know for me I have a bunch of different Google accounts for this tutorial I'm just using one that's like a random one that I just created because you guys are gonna actually see my credentials while I do this now what I'm gonna do here and start by turning on the Google Calendar API and we're gonna do is click enable the Google Calendar API and for you guys if this your first time working with like Google developer console or whatever this is called it may ask you to create an application all you need to do is just give it some kind of name I just named mine like test or tutorial or Python or whatever you want and then go ahead and click Next and it should bring you a page that looks like this from here we're gonna download our client configuration which is gonna come in the form of a JSON file in the bottom left hand corner of our screen this just stores the information that we need to sign in on and authenticate with Google which we need to do every time we actually want to activate this API and start using it from Python now what we're gonna do here with this credentials JSON is we're gonna put it in the working directory of our Python script so hopefully you guys know where that is I have to find mine which I believe is here I was already testing this out so I'm gonna delete that one and just drag in I guess I have to put these like splitscreen and just drag in my credentials here so make sure that's in the same directory as your main DUP Python whatever file you were using for the last video okay so now that we've done that we can move on to step two which is installing the pip modules which is Google auth Lib and the Python API so what this is gonna do is just you know allow you to authenticate and all of that and we're gonna get through this code in a second that tells you how to do that so I'm just gonna copy this I can open up the command prompt window and I'm gonna type this by just hitting Enter now obviously I already have this all installed as you guys can see here that's all you need to do again make sure you're in the right virtual environment and that pip is working correctly and then you know if you already have this installed because of this upgrade here it's gonna upgrade to the newest version which is obviously what we want okay awesome so now that we have that we're actually kind of almost done setting this up but we just need to actually copy all of this code from the web page here and run it somewhat within our scripts we're gonna do a little bit of refactoring here we're gonna copy this we're gonna open up our Python script from the previous videos which looks something like this yours might look a little bit different and then we're just gonna kind of paste this code in and refactor it a little bit so I'm just gonna put it at the bottom of my screen here and what I'm gonna do is just kind of start moving some of these import statements up against the top of our program so I'm gonna copy all of these and make sure you actually paste them above all of these import statements because whenever you import the future module you actually need to have that at the beginning of your program here so make sure you have that all the way up at the top so all of these go before you know OS time and all the other imports you did in the previous video next I'm gonna take scopes here and that comment I guess and just throw it up at the top of my program here because I like to have it's like all my global variables defined at the top then what I'm gonna do is kind of just clean up some of these comments here that I don't actually really need and just get rid of them here okay so now I'm gonna kind of talk about what this code does and we're actually gonna run the program but I'm else we're just gonna get rid of this little bit here that says text equals get audio if hello and text because for right now we don't actually want that so clean up some of these indentation and then we should be good to actually test this out okay so what this script is actually gonna do that we just downloaded is it's gonna create kind of like a local cache of your credentials so that every time you sign into Google you don't need to do what we're about to do so what this does is uses the pickle module to actually open up your credentials which is from that JSON file and then log you in to Google what you guys gonna see in a second save kind of that token information and all of that so that every time we run this we don't need to re kind of I guess what is it like validate ourselves re sign in which actually ends up taking a little bit of time so let's actually just run this now by the way to run something sub line text I've been hitting control B give this a second and you can see it's actually gonna pop up this here to sign into your Google accounts now I've blurred my other ones out but I'm gonna do use this test send email account that I made a while ago that doesn't have anything important on it and it's gonna say this app isn't verified what we actually need to do is click on advanced and click go to QuickStart I know it says it's unsafe but it's not just because you're opening it from Python and it doesn't think that it's a valid program so now what I'm gonna do is click on allow this to view my calendars but I can also allow them and actually wait I think that's it yeah so we'll do that and we will hit allow so now we are actually giving that app that we just use a Python script access to view our calendars so we'll go ahead and click allow there and now you can see it says the authentication flow has completed you may close this window awesome so there we go and now we are actually authenticated and ready to go okay so I had a quick bug there because I don't think I've waited long enough but essentially what should happen is after you authenticate yourself the first time so you run the program what it does is it generates a pickle file which actually looks like this of token pickle which stores that credential information so now every time after when we run the program what ends up happening is we actually don't need to go through that kind of web browser thing where we sign into the account and click allow it should just automatically authenticate us and then actually print out the ten upcoming events that we have now that's what this bottom part is doing here when we get the time and we have this if statements down here this part up here is doing all of your kind of credentials and logging in all right so we're gonna do now is just refactor this code a little bit so it works better for our actual use and then we're gonna get into some specific applications of Google Calendar like actually using this bot to ask you know what is the next event or do I have an event on Thursday in the next video but what I need to do here is kind of split up this function into two and what I want to do is have one function that authenticates the user and that happens before the bot even really starts running kind of in the main script so that that way we don't have to wait for this token file to be generated before we actually want to run this voice assistant and start speaking to it the next function I'm gonna have is what's gonna actually get the events for us and so what we're pretty much gonna do is just split this into two I'm gonna show you how to do that pretty easily so I'm gonna start by renaming this main function to authenticate underscore and Google now I could do calendar as well but I think that's pretty straightforward right now and what I'm gonna do is actually add a return statement comma in the middle here that says return service so what we're gonna do is have this function run at the beginning of our program and return to us a service that contains the Google calendar for our user so or I guess for us in this case then what we're going to do is create another function here so after this return statement that's gonna be called gets underscore events and what we're gonna do in here is put two parameters so the first one is gonna be n and the second one is gonna be service now what n is gonna do is be the amount of events we want to get and service is going to be well the service that was returned to us from authenticate Google so that way we can just pass through this service and pass through the number of events we want to get and we are able to do that so what I'm gonna do is start by in the main line of my program just calling authenticate Google and that's actually going to be equal to service so service equals authenticate Google and since we're returning the service that contains the calendar with all the events we can store that in a variable here and whenever we call yet events we can simply pass it through so anyways we're not done with get events yet what we're gonna do is just change wherever it says 1000 essentially to say n so that this will be kind of more dynamic and be able to get any amount of events that we want so I'm gonna make this print statement and F string and put in here n so it stands for it getting the upcoming end events which will be how many we pass through and then what I'm gonna do is change max results here to be n so now what's gonna happen is we're only gonna get however many events we pass through to the parameter so now I'm simply gonna say get underscore events here I'm gonna pass in n as like just say two in this case and then service will pass in there as well and now what I'm gonna do is just run this program and see if everything is working now apparently when I run this on sub line text it takes like a really long time so I'll fast forward until it actually shows it but you can run it through command prompt and usually it runs way faster okay so there we are you can see that we have now these two events that came up so these are the first two that show up in my calendar so test event and then Thursday event and that is pretty much how this works now obviously we're gonna make this more advanced in the next video and actually use the voice assistant to trigger this and give us the information and read it out to us but for now that should hopefully give you enough to look maybe play with a little bit and figure out how to do things we already know how to check if the user has said specific things you can probably match that up and read out some of these events and all of that so with that being said if you guys enjoyed make sure you leave a like and subscribe to the channel and as always if you have any ideas for the rest of the series please leave them in the comments down below as I was always looking for those