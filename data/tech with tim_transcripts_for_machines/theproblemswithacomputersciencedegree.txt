hello everybody and welcome back so my name is Tim and I am a second year computer science major what are we doing in this video is talking about the fundamental issues with the computer science or software engineering degree now the reason I'm making this video is because it's the year 2020 you know the stem hype is real everyone and anyone is learning to program and changing into these stem and kind of science and tech related fields with the kind of idea that they're going to graduate and make a ton of money or get an awesome job now that's definitely possible and no hundreds of thousands of people are doing just that but you might not be the person that's going to be able to achieve that now I'm not trying to do this to be you know like de motivating but I really think you guys should listen to this video if you're someone that's maybe not super passionate about computer science or software engineering but it's jumping into this field so anyways let's go ahead and get started and talk about the problems with the computer science or software engineering degree now the first problem with computer science or software engineering is the lack of applicable skills or workplace skills now what I mean by this is essentially what you learn in your computer science degree is completely different than what you're going to end up doing at whatever job you end up working at now you might say this about every degree but this is specifically important for computer science because a lot of times when you go to get a job not only is it required that you have a computer science degree but it's required that you know or familiar with or have worked with a certain degree of key technologies or tools or even programming languages now universities are kind of you know famous for teaching outdated and older content and that's one of the main problems here so what you really need to do if you're in university is be learning these skills in your spare time now this actually leads me nicely into the sponsor of today's video which is simply learned I need to thank simply learn for sponsoring this video and giving you all a discount on their data science master's course that's been codeveloped with IBM this course is comprised of six full courses covering key technologies like our SAS Python tableau Hadoop and spark while working through this course he'll develop 15 reallife projects and master over 30 indemand skills you will work with advanced analytics tools such as pandas use data collection tools like Apache HBase and learn ETL tools like hive Pig and scoop by purchasing this course you'll have lifetime access to all the course content and lecture receive 1200 USD worth of IBM cloud credits and have access to the IBM cloud platforms like IBM Watson for 24/7 practice upon completion will receive certificates from IBM and simply learn to testify to your skills as an expert in data science click the link in the description to get started so what I just showed you guys is not simply learned kind of add is an example of something you can do to learn these skills now that obviously is a little bit more extreme that's a huge massive course it's gonna teach you a ton of different things but just go and read through any different job postings if you're in computer science or software engineering and you know thinking about getting a job soon and start looking at the requirements that you need you know you need to know SQL you need to know frontend development you need to know this framework needs to know these three languages there's a lot of things that you're not going to have learned in a traditional computer science degree where you may be only covered two or three lane languages you didn't do with framework you haven't made an Android application and most of the jobs for computer science that are not these crazy high tech positions are very specific you need to be a developer in a very specific specific domain you need to know exactly what you're doing in a specific area or technology and other than you know kind of crappy entry level like automation and testing jobs you have to have these skills to get that job so this is the first issue with computer science is that a lot of the skills that you're learning throughout this degree like one compared to other degrees you're not actually gonna be able to bring and apply to your job and you're gonna have to learn new ones now this is totally fine but this is something you need to consider if you're jumping into this degree that a lot of the time you're gonna have to spend your spare time learning new modules learning new technologies you can't merely just do your degree and then expect it to jump out there and go get an amazing job there's a lot of extra work that goes into it and if you're not passionate about computer science chances are you're not gonna want to do that work alright so point number two is very similar to point number one but I think it's you know important enough to put an emphasis on it what you're learning in your classes most likely is already outdated technology now what I mean by that is I have a class for example where I'm looking at PowerPoint slides in my lab that were created in 2011 2010 right when the version of Windows isn't even the same on the utor they're showing you the example with than it is on my laptop or whatever right so that's just another big issue with computer science and education in general when it comes to fields that are growing so quickly like this they can't keep up right by the time they create a good curriculum for a specific technology tool or even just concept there's already something out that's better than it and this is a huge issue and kind of de motivating when it comes to computer science is that a lot of what you are learning in this degree is really outdated technology it's stuff that you know it's kind of cool to learn but there might be like 10 companies still using it right there's just really old stuff and you know I'm sure this isn't yesterday if you go to a top to your computer science school but if you're in kind of like a decentralized a dated curriculum I mean we know how quickly the education system moves and that's just something to think about is that you might not be working on you know the coolest newest stuff and if you are that's a luxury right I've been like I've used some software from like 2006 I think in some of my labs that doesn't even work they no longer have support for it you can't even download it on your home computer because it only works for Windows XP or Windows 7 so just something to consider it's a really outdated field and what this means is that you know like I said before you're gonna have to do a lot of work to learn these new frameworks and modules on your own time and that better mean that you know you enjoy computer science and you like learning that because if you don't that is really just gonna be hell for you you're gonna consider that almost another class right just to get a job and to learn a new skill but if you're into computer science and you're passionate about it you know that shouldn't be an issue that might be something that's even interesting to you you're gonna learn some older tack okay and then you're also gonna learn that new stuff and use your experience from the older tech to maybe learn that and get better with it so anyways that is a point number two so on to point number three which is the fact that computer science is extremely theoretical and when I say extremely I genuinely mean extremely you don't really realize how much math and theory and kind of background goes into computer science until you're in the degree like I am I have taken what is it Abhiyan 20 courses now so I've done 15 I'm enrolled in five and of those courses I believe I've ridden code and actually done development in six of them that number I need to factcheck because I'm not a hundred percent sure but that is like my estimate of how many classes I've actually done any development in computer science now as I get older and as I go into my third and fourth years there will be more programming and more computer science II kind of classes but this is something to consider that a lot of what you are learning in this degree is a very theoretical that's not to say that it's not important thing you don't need to know it but there's a lot of times where you kind of lose the fact that you're not applying this to a real life project you're not you know putting this into work you're not writing code to model this you're just you know on paper doing stuff by hand and it just is a little bit too motivating ask someone who's really into development and likes doing computer science stuff you don't get to see where do I actually use this you know where why am i learning all this math and all this background because you never really apply it and that's another issue that I have personally with the degree is they're teaching us these really useful skills like you know discrete mathematics and linear algebra but unless you really go out of your way you're not seeing this applied in the discipline like you should be now this might be a little bit different for software engineering because I know software engineering is more of a handson degree than Computer Sciences but a point that I wanted to make because this field is very very theoretical a lot of what you're doing is just you know proofs and math and you know some people like that I'm okay with it but I would like to see this applied more in the field and see like where am I actually gonna use this proof in math when it comes to developing code and you know in like a workplace environment so the last point I want to make here is about money now let's not lie to ourselves here a lot of us have probably gone into the computer science or software engineering field because of the opportunity to make a lot of money now there's a lot of different ways to do this in software engineering and computer science but all I'm going to say is you're not going to do that by just doing one of these degrees just getting one of these degrees is enough to get you like a decent entrylevel job where you're probably gonna be making in Canada where I live and you guys can do the conversion rate like 70 grand a year 65 grand a year and you know that's a very high starting salary but for what you did to get this degree that's not probably what you're looking for out of it there's a lot of other degrees that you can do that allow you know some better career developments and better just are easier and cheaper in general that can make you that kind of money or that you can at least get to that kind of money fairly quickly computer science can be extremely lucrative if you get into one of these toptier companies like Google Microsoft Amazon Facebook whatever but if you're not there you're not going to be seeing these crazy high salaries that you know you're seeing all around the board you were hearing people and you know making 200k as an entry level engineer well that's because they're very good at what they do right you know they've a landed that job they've probably been working all throughout university building a portfolio and learning these new skills and if you're not that person don't expect you're gonna be getting salaries like that right you need to really apply yourself in this domain to make it worth your time and to be successful and that's something that this whole video is kind of been covering is the fact that this is a field that's changing so rapidly and so quickly that if you're not willing to keep up and continually be learning and kind of moving through this then you're not going to be successful in the field at least in my opinion now I urge you guys to go out there and prove me wrong and go just get a computer science degree and do nothing else and you know go work at Google and Amazon that'd be awesome I'd be you know thrilled to hear that but the reality is that that's probably not going to happen and if you're kind of you know playing the odds here if you're looking to get a computer science degree then you better commit to the fact that you're gonna be doing a lot of work outside of school and that you're passionate enough about this that you're okay to do that right because the whole thing is here a lot of people jump in when they're not passionate they don't enjoy the degree they're just doing it for the money and then you know they end up switching dropping and all that an appointed name and make here is the fact that this degree is difficult you know this isn't something anyone can just go and do we'll walk in the park you need to be you know smart enough you need to have the passion and you need to put in the work to get the results that you want so anyways that has been my thoughts on the problems with a computer science degree I understand a lot of these deal with the education system in general and that these will apply to other degrees as well but I just think it's so important in computer science that you're constantly learning outside of the degree that you're keeping your skills sharp and you're keeping uptodate with the newer technologies because if you're not then you're gonna fall behind so anything that has been it I hope you guys enjoyed if you did leave a like subscribe to the channel and let me know what other videos you'd like to see coming up in the future