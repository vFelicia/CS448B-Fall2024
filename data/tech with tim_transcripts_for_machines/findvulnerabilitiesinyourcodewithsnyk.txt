hello everybody and welcome to another youtube video so in today's video i'll be covering an important topic which is security in python now oftentimes we're writing code in python we're using packages that come from pi pi so something like flask or django now those are great but there's actually no security review that's required before these packages get uploaded to pipe and that means a lot of times when you're writing code you actually are using packages that have vulnerabilities in them in fact about 48 of python projects have security vulnerabilities and on average of those projects that have vulnerabilities they have over 30 vulnerabilities in them now fortunately about 87 of those vulnerabilities have a known fix and in this video i'm going to show you an awesome tool called sneak that can help us detect the vulnerabilities on our code and then fix them so with that said let's dive in so as i mentioned in this video we're going to be using a tool called sneak now sneak is the sponsor of this video i do need to disclose that however like all sponsored videos on this channel i only do them if i think that the product platform technology whatever it is is genuinely useful and you guys can find some value from it and well this is no exception so i'm just going to spend a minute here talking about what sneak actually does then i'm going to show you the complete setup process which is relatively simple i'll run sneak on a few vulnerable applications then i'll show you some of its integrations related to github related to pycharm and all the other stuff it can really do so you can kind of think of sneak like grammarly for your code what it does is it scans your code reads through it and tells you if you have any vulnerabilities specifically in a lot of your packages right a lot of the dependencies that you're using now it doesn't really check dependencies it can also check docker containers infrastructure code and a few other things and it doesn't just work in python it works in a bunch of other languages as well and one of the great things with sneak is that it integrates with pycharm a few other editors and also has an integration with github so you can actually link and connect your github repositories and sneak can automatically put up pull requests to fix any vulnerabilities that you have so almost all of the vulnerabilities that it will show you it will actually give you recommendations on how to fix those vulnerabilities which is really what makes this product useful if it just told you the vulnerabilities that's not super super helpful but it actually tells you how to go about fixing them so with that said let's get started with sneak again you can click the links in the description to check it out but the first thing i'm going to do here is i'm just going to create an account on the website which is necessary then i'm going to download the cli the command line interface tool and run you through some of the basic commands that it has so as i was saying step one here is to create an account do that from the link in the description i've already created an account and since i've created an account what i'm going to do is press log in and it's going to bring me to the sneak dashboard now you can see here that's already showing me some of the vulnerabilities i have in my different github repositories that i've linked here and also some of the projects i've opened on my computer previously i'm not going to focus on this right now you guys can kind of mess around and just see exactly what it can do and it should walk you through kind of the basic setup process which is relatively simple the only thing i'd recommend you do is connect your github account with sneak that'll just make things a lot easier anyways once we've made our account with sneak what we want to do is install the cli uh i guess it's just called the cli the sneak cli this is kind of the tool that works on the command line interface now i'll leave this link in the description as well this is a different link than the first one but there's multiple ways to install this cli tool so i'm going to install it using npm but you can install it with prebuilt binaries with a container with home brew or with the windows scope package manager again the link for this will be in the description so i'm going to use npm this is probably the easiest way at least from what i can read here and to use npm you're going to need nodejs so first if you don't already have it go and install node.js i'll leave this link in the description as well and then what you're going to do is copy this command right here npm install hyphen g hyphen g standing for global and then sneak so if you're on mac or windows it should be the same thing install node.js open up your command prompt or terminal paste in this command run it and that should install the cli tools for sneak all right so i already had sneak installed but you can see that it just updated i guess there was a new version since i last installed it and now that we've installed these sneak cli tools what we need to do is authenticate ourselves with sneak so to do this is quite simple you simply type sneak and then auth and it should bring up a web page that gets you to connect your sneak account with uh your cli tool so here you just press authenticate and then there you go it says it's authenticated and we can create a snapshot of our project by running sneak monitor i'll go through what that command does in a minute okay so when i come back here it says your account has been authenticated so what i'm going to do now is actually open up a vulnerable python project and show you what sneak can do and all of the vulnerabilities it finds all right so i just opened up the application in pycharm that i'm going to be testing sneak with now this is designed by the sneak team and it's an intentionally vulnerable python application called pygo so i've got the github repository open i'll leave this link in the description as well in case you want to mess around with it but essentially this is a django application it has a few different vulnerabilities in it and we're just going to see how well sneak actually identifies them and picks them up when i run the command in pycharm now i've already done all the setup stuff to be able to run this application we don't really need to run it i'm just trying to show you the vulnerabilities so i'm going to skip over those steps if you guys want to run it you can follow the steps here it's pretty straightforward all right so pygo that's what i'm using you can see i have it open here and this actually has a docker file which we'll be testing later on as well as just your standard kind of python environment and so i haven't ran this with docker i've just ran it by installing the python packages that i need or set it up by installing the python packages that i need so the reason i'm using pycharm here is actually because sneak has a plugin slash extension for pycharm so i'm going to quickly show you how to install that in case you want it and then of course i'll run through the cli commands so you can see i have the sneak extension down here it's kind of highlighted in the bottom bar well if you want to install that in pycharm you go to file you go to settings you go to plugins and then you type in sneak and while you can see it right here i already have it installed there you go that's as easy as that is now i'm just going to quickly pop up the sneak plugin here and show you kind of how it works so you can see we have critical high medium and low as the kind of filters for the severity of the different vulnerabilities i can find and well if i want to run the scan i can simply press run scan it's going to scan my project and it's going to show me all of the vulnerabilities so let's give this a second to run once it's finished i'll be back and we'll walk through the vulnerabilities all right so there we go we can see we got 10 vulnerabilities here one critical three high three medium and three low i'll press on to a few of them and you can kind of see we have this issue with web cache poisoning we have improper input validation and then it's showing us where these issues are actually fixed so it says okay fixed in django whatever versions these are it was introduced in these versions here and then down here you can see this little overview it gives you a description of django and then a description of the actual vulnerability and kind of how you can fix that vulnerability so you may have noticed as i was doing this scan that the code security and code quality down here say disabled for your organization now i'm going to quickly show you how we can enable those you should be able to enable them when you first set up sneak but in case you didn't and you need to reenable them later what you can do is open up the plugin window go to the kind of wrench here which is the sneak settings it will bring you to this page and notice you can't even check these two boxes and that's because it's disabled by my organization and the organization is kind of the account i created when i first signed up with sneak so what i'm going to do is press on this hyperlink here it's going to bring me to a web page and notice here there's this little uh kind of window that says enable sneak code so what i'm going to do is enable sneak code save this and it says after being enabled you must import or reimport projects to scan them okay makes sense so let me close this window here and now notice how i can check code security and code quality so i'm going to check both of those press apply and then ok and now i'm going to rescan my project and see if it gives me any security or quality issues so let's scan this once it's done i'll be right back all right so the scan has now finished and notice that i have 18 vulnerabilities for code security and i have uh what is it code quality i have two issues right here in app.pi and view stop pi i won't go through all of these but let's just have a look at one and see if it gives me any fixes uh so if i go to something like this sensitive cookie in https session without secure attribute notice it kind of gives me a description right the cookie secure flag is set to false that actually tells me what the fix would be here so it says this issue is fixed in 18 projects here are three example files then i can click through them and kind of see what the change would actually be and how i will fix that security issue now let's just have a look at code quality here and see what we get app.hi missing close for open add close or use a with block okay nice so it's saying i didn't close the file that i had opened so i need to close that that's always a nice thing to have caught for you all right so that's how you enable the code security and code quality checks now what i'm going to do is show you some of the sneak cli commands that don't involve this plugin because we're not always going to be using this plugin when we're working with sneak so i'm going to open up the terminal here i'll zoom in so you guys can read this actually let's see can i make this any larger okay not right now and i'll just show you the sneak cli commands so it's pretty basic we already authenticated with sneak off the next one we can run is sneak and then test and what this will do is again scan the application and show you any vulnerabilities so sneak test let's run that and let's wait for the output all right so there we go the command has finished and you can see it found one issue two vulnerable paths says issues to fix my upgrading dependency so this is one of the issues we can actually fix it says there's an sql injection this is a new high severity vulnerability gives you a link to where you can actually read about it and then it says this is in django 3.1.12 it was introduced by that and uh one other path then it tells us the way that we can fix this is by upgrading django to 3.1.13 so let's actually go ahead and try that and see if that removes the vulnerability so i'm going to go to requirements.txt i'm going to go to django i'm just going to change that to 0.3 it says package requirement is not satisfied okay i'll just install the requirement once that's done we'll re rerun the command story and see if this worked all right the package has been installed let me rerun sneak test and let's see what our output is this time ideally we should no longer see that vulnerability because well we fixed it and there you go tested 32 dependencies for known issues no vulnerable paths found and that is obviously because well we fixed the the issue the vulnerability okay now the next command i'm going to show you here is called sneak monitor now this one is a little bit different but when i type this what's actually going to happen is my project that i'm working on here locally is kind of going to get scanned and uploaded to the sneak ui or the sneak platform anyways it's easier for me to show you but when i run sneak monitor if i spell sneak correctly you're going to see that it gives me a url and that url has all of the information related to kind of the current snapshot and time of this project and its vulnerabilities so it says it's going to be monitoring this now on the sneak ui or the sneak platform and if i go here and i open up this url so let's go ahead and open it you can see that i have my pi go project this is locally on my machine it's monitoring it it says the snapshot was taken a few seconds ago i can retest it by actually pressing right here on the ui and that will retest it on my local machine which is pretty cool obviously assuming i have internet connection and then when i go here it's saying okay there's no issues found and then it can actually show me the entire dependency tree of this application so there you go that was just kind of a quick view at what sneak monitor does so the command you're going to be running a lot is probably sneak test and then you run sneak monitor if you want to actually take a snapshot of the project have it uploaded to the ui and then well be monitored by the actual sneak platform alright so now that i've showed you the basic sneak cli commands the ones that are most popular that you're going to be using most of the time i'm going to quickly show you how you can test infrastructure code and your docker images or docker files using sneak so i'm what i'm going to do here is go inside of this infrastructure folder you can see this is application load balancer folder and to give you a quick summary of what this is this project here can be deployed out to aws to a load balancer and there's some python code that's written that actually generates a template that is kind of the configuration for the load balancer on aws so here application load balancer we have this app.pi file and then inside of the cd cdk cdk.out folder this uses aws cdk you can see there's this loadbalancerstack.template.json that's generated from this python code so what sneak allows you to do is test this stuff before you go and deploy it to make sure you don't have any misconfigurations in your templates or yeah your configurations for your load balancer in this case so the way you actually go test this is you go to your terminal you change into the infrastructure directory you go into the application load balancer directory and then you run the following command this is sneak i ac so infrastructure as code then test then followed by the path to the template that you want to test so in this case i want to test this template so this is in cd key cdkstory.out slash and then load balancer stack dot template dot json so let's run this it's going to take a second and it's going to show us if there's any security misconfigurations in this template all right so just ran you can see that we actually found nine issues here and if i go here it shows me all of them right so i believe the ones highlighted in gray are low severity low severity we have mediums medium severity ones here i'm not really going to talk about exactly what these are but i just want to show you in case you're someone who is deploying stuff to aws or wherever it may be that you can test your code before you deploy it obviously to make sure you're not deploying something that potentially has some security issues with it all right one thing i will quickly mention is this also is deployed or uses kubernetes so there's a bunch of kubernetes configuration or yaml files here you can also use sneak to test those i'll refer you the documentation if you would like to do that and the last thing i will now show you is how you can test your docker files and docker images using sneak so i've not actually ran this application with docker i've not pulled a docker container or anything like that so what i'm going to do is actually show you a website this is a part of sneak it's called sneak advisor and what this lets you do i got to find it right here is actually look at different docker images and find any vulnerabilities in them and also gives you recommended alternative docker images that are better for your use case so in this case we can see that we have the python 3.8 docker image well it's telling us that in this image right here we have 30 high severity issues 53 medium and 270 low severity issues the last update was one day ago and it's 339 megabytes obviously not the most ideal thing in the world also shows us the stars and the number of downloads jesus that is that's a lot of downloads but what it does here is it shows us what we can use instead that's going to be more secure and also slimmer right so has less space or less uh yeah less storage less space whatever you want to call it so in this case we can see we have two recommended alternatives python 3.9.6 and then this is 43.5 megabytes and then python 3.10.0 before slim which is 43.6 megabytes we can click into these we can see their vulnerabilities as well but they are more secure and smaller so we may consider using that instead of python version 3.8 if we were going to run this with docker but i didn't even run it with docker so there you go that's how you can do this this is sneak advisor everything i show you i will have linked in the description all right so i've now showed you how we can test our sneak application the basic code using sneak test and sneak monitor how we can test the infrastructure i briefly mentioned you can check kubernetes kubernetes related stuff as well and then finally i showed you how we can look at the docker stuff now there is some cli commands that you can use for kubernetes and for docker again i'll refer you the documentation all links in the description if you want to see what those are but of course you can also just use sneak advisor the website that i just showed you to look at you know vulnerabilities in the docker image all right so what i'm going to do now is i'm going to head over to github but first i'll actually go to my sneak dashboard and i'm going to show you how sneak integrates with github so you may recall at the beginning of the video i mentioned that sneak can automatically fix issues for you now the way it actually does that is when you link a github repositories to sneak it can actually put a pull request up that will automatically fix the vulnerability issues so i'm going to show you exactly how that works now the first thing we need to do is connect our sneak account with github i've already done that i assume you would have done that as well then we need to add a github project to sneak so click on add project from the sneak dashboard click on github and then you can look at all of your different repositories so i've already added a few repositories here i'm going to try to find one let's go with flask web app tutorial and let's see if there's any vulnerabilities in here then we can have sneak put a pull request up to fix all right let's give it a second here it's just scanning this once it's done scanning i'll see if we can fix any vulnerabilities all right so fortunately that one didn't have any vulnerabilities kind of failed for my example but let me just connect a different github repository here and see if we can find one that does have some issues with it all right so i finally found a project that has some vulnerabilities in it that sneak can fix it's the coronavirus voice assistant i'll click into it here and notice it says i can fix these vulnerabilities so the vulnerability is in url lib3 but if i want to fix this i can press on the fix vulnerabilities button and what this should do is bring up a page that actually opens a new poll request for me that automatically fixes this issue in my github repository so there we are we can see that this is the page right here it says open a fix pr so let me go ahead and press on that and then let's have a look at the pr that sneak actually puts up so it's redirected me here to my github repository we can see in pull requests it has created a new one here so sneak has created this pr to fix one or more vulnerable packages uh in this pip dependencies of this project goes through gives me a warning shows me what is actually happening gives me a ton of detail here and then obviously i'm the owner of this so i could merge this pull request in so let's go ahead and do that and let's see if this now fixes the vulnerabilities i mean it should so if i go to files change we can see all it does is change the version of url lib to make it one that doesn't have those vulnerabilities in it and well i wouldn't have known that was an issue unless i was using sneak so i think with that said i'm going to end the video here there's a lot more that you can do with sneak and i would highly recommend you check it out again you can do that from the link in the description that has kind of been a general overview of how the product slash platform works and really how it can help you find and fix vulnerabilities in your code of course sneak works for other programming languages as well this video is kind of more focused on python because i know that's what a lot of you guys write in and what i write in most of the time so with that said if you guys enjoyed make sure to leave a like subscribe to the channel one last thanks to sneak for sponsoring this video and i will see you in another one you