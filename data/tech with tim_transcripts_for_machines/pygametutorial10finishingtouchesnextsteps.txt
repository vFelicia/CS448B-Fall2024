hey guys and welcome back to another YouTube video so in today's video I'm going to be doing the tenth and final video in my PI game programming series or tutorials and in today's video we're gonna be talking about finishing up the game fixing a few bugs that I've discovered since the last video and that you guys have probably found as well if you've been running the program and we're gonna be talking about what the next steps are and what we can expect to see from here and where we can go after having knowledge that we've learned from this tutorial so first of all if you guys have made it all the way to video 10 and are watching this give yourself a pat on the back that's very impressive that you've been able to sit through 10 10 to 15 minute long videos and you've now created something that's pretty impressive as a first game or just a starter a project to start a learn high game so if you've been able to understand even just some of what I've shown in here then that's a really good sign and you guys are gonna be able to create more advanced games later on by following more tutorial guides so I'm gonna be doing so pretty much I'm just gonna start off right now by fixing a few bugs and I'll show those bugs to you right now and this is what happens when you're developing games so when you develop games you're gonna notice that you can't possibly think of every scenario that's gonna happen for example a bug that's in this game is while I'm jumping if I hit the Goblin you'll see that our character goes down below the screen now the first thing we need to do to fix this bug is to figure out why it's happening now the reason that this bug happens and it took me about a few minutes to figure it out is because while we're in midair what ends up happening is we run the player hit method here right which resets our Y to ground level so for 10 now after we reset the y we don't stop jumping meaning that although our character doesn't appear as though they are moving downwards from jumping the jump code that we have in our while loop that moves our character downwards Hank it's like let's see here somewhere down here yeah so if man is jumping it's still moving our character downwards so we move it to 410 and then since we're still jumping we move down another like 50 pixels which makes our character head just barely visible at the bottom of the screen so the way to fix this just to go into our man dot hip method which is I believe right here and just at the very beginning we're gonna say self dot is jump is equal to false and I'm going to say self dot jump count I'm just gonna reset that to the original value which we had of ten I believe still would check that yep so jump count is 10 and is jump equal to false so this way it just got stopped our jump so that we shouldn't be going down so let's test this and just make sure that it's working alright just give me a second here so let's wait for them to come back jump up and there we go so you can see now our character does not go below the screen we'll test it one more time to make sure it's working and everything seems to be okay now another bug I ran into I'm gonna have to show you quickly here is once the Goblin disappears watch this I'm just gonna run around and you see it's still collides with the gulp and so although we can't see the gulp than he actually is running around right now he should hit me in just about a second now yeah because he's over there so we need to make sure that our character is not able to collide with the Goblin while the Goblin is well destroyed right so once we kill him obviously we don't want to still be able to collide with him because right now what what ends up happening is we just make the enemy invisible we don't actually like remove it from the screen so it's still moving around in the background we just can't see it so it's pretty easy to fix this we're just gonna go down to where we have the collision between our Goblin and our player and we're going to create another if loop up here if statement or just gonna say if goblin I believe that's what I called him yep thought visible equals equals true there we go we can indent all this just by hitting tabs that should work there we go and now it's only going to allow the collision between the two characters if the Goblin is visible now I'm just going to double check to make sure that is the property I used visible yes so now we can see if I around the program let's make sure this is working I'm just gonna oops just gotta make sure we kill this Galvin first and then we can see that now that the golden is invisible I can clearly run across the screen and I'm not no longer colliding with the gaulden because well we destroyed you right so that's a quick fix at a plug now the other bug I noticed was the score up here so once this becomes a negative number it starts to move off the screen now this is a really easy fix all I'm gonna do for this is simply just move where we're drawing the the text so if we go to our redraw game window function believe that's where we draw the text all I'm gonna do is just move it back and the X by a boat let's say like 40 50 pixels maybe and now if we draw it and we get hit you can see that it's gonna say negative 5 and it's no longer going off the screen now you guys can play with that if you want to move it closer to the right close to the left etc and yeah so that's about it for the bugs that I found I'm sure there's probably a few more that you guys can think of for right now that's all we've got so now I'm just gonna go in and talk about next steps so pretty much the next steps for us and for this program is to now create a more original game or to create just better games in general so this was kind of not really a game more it's just a starter project just to kind of learn some of the different attributes of Pi game and how it works so how two objects can collide with each other how we can have sound effects play how we can have bullets shooting out of a character so I really tried to make it pretty diverse in the way that I showed well how to use a class how to use methods so that you guys if you wanted to create your own game you would have the tools to do so from just using this tutorial series that I've done here so that's why if you're looking at the game now you're kind of like well in 10 videos we didn't really accomplish too much this isn't really a great game I don't want to show this to my friends whatever but all I'm trying to do here was just show you the different tools that you could use so what I'm gonna be doing on this channel is I'm going to be posting way more specific videos now so now that I have this general tutorial series done I think I'm going to be doing a video on for example how to code hi our pacman in pagi how to code like a shooter game so like you know if you I'm not sure if you guys know the asteroid asteroids game I'm not sure what it's called you have a little plane that comes here and enemies shoot down and come down the screen and you have to shoot them before they hit you or the edge of the screen I'm gonna be showing how to do videos like that and then for all these videos what I'm going to be doing is I'm just gonna sit down and record them all in one sitting so I'll record like an hour hour and a half and then I'll break that up into two or three videos and I'll post them within a few days so that way unlike this series where you guys had to wait for a long time to see the videos they'll come out right away so you can follow along with them instantly so if you guys want to see videos like that make sure you subscribe to the channel and you hit the like button on this video and if you have any ideas on games that you want to see how to program and I see a popular vote if you guys see anything down in the comments below and you want to see a video not too make sure you like the comment because I obviously want to be making videos that you guys want to watch and that you guys want to learn how to do so if you have any ideas make sure you leave them down below and that's been it for this video so I'll see you guys in the next tutorial series