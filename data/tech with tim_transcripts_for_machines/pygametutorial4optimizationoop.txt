hi guys and welcome back to another YouTube video so this is the fourth video in my PI game programming series and in today's video we're going to be going over optimization so pretty much if you remember from the last tutorial we have our little guy here he walks around the screen jumps up in the air and he's got a nice little animation and everything looks pretty good he can jump and run and if we get to the border of the screen here he stops like so now this is all great but if we look at our code here everything seems to look fine everything looks pretty clean but as we continue on with our game this is gonna become very very messy so for our purposes right now just with a very small game we just have a character running around the screen this doesn't seem like it's an issue but as we move forward we want to make sure that everything is neat and compact so that we can make sure our game runs smoothly and everything is clean and we're able to access everything again so in today's video what I'm going to be doing is pretty much changing this into an object orientated approach now it is to be noted that everything you can do object orientated you can do without that so for example right now we have an on object oriented approach to a game where we have a bunch of variables up here and these define our character and these are pretty much the attributes or the characteristics of our character now what we're going to do is we're just gonna put them into a class so that we're gonna be able to access them easier it's gonna look a lot cleaner and we're gonna be able to clean up this redraw game window function which is gonna become Messier as we move on with our program now you guys are gonna be mad at me because I'm gonna be telling you to change a lot of stuff that we already have but trust me it's worth it it's very important and this needs to be done in order for us to get to a better game and to move forward with the tutorials now if you don't want to do this you like I don't want to type it I already have this all pretty much I'll just just go down to my github link down below download the file and you can skip to the next tutorial if you really don't want to understand how all that works that's fine it's not too complex if you already understand classes and objects just go download that however if you don't understand that and you want to understand why we're making this class and how everything works I'm going to be talking about it in depth here so stick around for the video in that case okay so let's get started so the first thing we need to do is we need to actually a class called art well we'll call it player in this case we're gonna take class player inside here you can take object you don't have to do this I just like to do it and then we're gonna create our initialization function like so now again if you don't know how classes and objects work I do have a tutorial on this in my PI game program or in just my Python programming series so you might want to go check that one out first okay so now we're gonna make so we have to type in X Y width height to define our character and in here we'll just do self that x equals LX selfthought y equals y oops and then we'll have selfthought width equals width and self dot height equals height like so okay so these are four main characteristics but remember we do actually need to put in the rest of these variables here because we're going to use those as well inside of our class so we're gonna just do self Dogville set that equal to five do self dot is jump set that equal to false self that jump count set this one equal to ten again we're pretty much just copying whatever we have here and we're putting self before it so that it's an attribute of the class so and self dot write equals write or it was false re and then last one self thought walk count equals do like so so now that we have these in here we can delete these variables here and already our program is looking a little bit cleaner we've got rid of a bunch of the global variables there and now they're all an attribute of the class so now another thing that we're gonna have to do here since we've gotten rid of those global variables is we're gonna have to change a lot of stuff in here so the first thing is you need to create an instance of our character so this instance is going to be what we use to reference for example as X is y and they're gonna it's gonna create all these default values on our character the same thing as if we had just had typed this all this outside as a global variable like we had before so in this case I'm just gonna call my my character man you can give him a name and give me Billy whatever you want whatever you want to call them and just make them an instance of the player class and you have to give them an XY width and height so in this case we'll just give them an X of 300 maybe a wife or 10 and then we need 64 and 64 because that's the dimension of our sprite now after we do this we're gonna have to change a lot of variables in here so I know this is really annoying and it's gonna take a long time but pretty much just go to wherever you see a variable that would have been a global variable before that we changed or not should be it's gonna put man don't before it yes I know this is tedious but trust me it is important and we do need to do this I apologize that I didn't just do it object orientated right away but I want to show you guys that we can do it in pull both approaches in both ways and for a small game it might not make sense to make things as an object but for a large game like the one that we're gonna probably be doing here where we're gonna have multiple objects multiple classes we don't want to clog up our while loop with a ton of and we don't have a ton of global variables it's going to make it harder and you'll see what I mean when we go into creating a block in the next tutorial we don't want to have a ton of variables for each of those blocks pretty much we just want to have attributes attached to a class so we're just gonna keep going through this we should be close to done now I definitely probably missed one of these man's before something so if when we run the program it crashes don't get mad at me blue man but why Amanda jump count save them here man and man now let's just do a quick check through here to see if we forgot anything we look to be okay for right now and yeah I think we're okay so we're gonna go ahead we're gonna run the program here we're gonna make sure that everything is working okay and we've gotten here named walk count is not defined okay so I forgot to do the function here of course so again in here we're just uh we're actually gonna change this to self because we're gonna do something cool with this function so rather than having all this checking inside here let's just check it inside of the character so I'm just going to copy all this code right here so I just cut it out and then inside of our character here we're gonna have a method that we're gonna define as drop so pretty much now whenever we want to draw our character all we have to do is just call player dot draw where man draw give it the what he call it the argument of the window and then we can do all of this in here except so it cleans up our function because we're gonna be drawing a lot more stuff inside of this function so we don't have unnecessary code in there now again in here we're gonna have to make these all self I know it's annoying but we're gonna have to change all these things itself we can leave this walk left variable up at the top that's fine and we'll just keep changing everything and I promise you this is important otherwise it would be making guys do it so self self and we're almost done selftaught ex selftaught why now I mean II just need to go in here and we're gonna call man dot draw when we can get rid of this global right here and we should be all good let's run the program draw takes one positional argument I forgot something here my apologies we need the cell and let's run the program alright there we go and you can see we have the exact same result as last time except now all of our code is clean and ready for more stuff to be added to it so pretty much I'll go through it quickly because I know I went kind of fast through that what we've done essentially is we've just put everything into a class so this is our player class and again this could be used for multiple players so for example if you were gonna do a multiplayer game you probably wouldn't make a global variable outside of the class like here and you'd say like X 1 X 2 y 1 y 2 is jump one is jump 2 you got the point we don't want to do that because that's gonna use a ton of different variables here and it's gonna be a lot of typing and especially if we're gonna have something like blocks so we're going to be jumping over top of or enemies possibly we don't want to make a ton of different variables for each individual enemy when we can just use a class and just create a new instance of that class so here we have our player class we have all of the attributes the same as the variables we have before and now we have this little draw method which essentially just does the exact same thing we had inside of here except now it can be accessed a lot easier by just calling man draw again this is where we instantiate the class or the objects you can create you can change this if you want to whatever position and yeah we've just changed everything to men so I know this was tedious and this was kind of a waste of a tutorial video in my opinion but this really did need to be done I just want to show you guys that we can't do it in two different ways so no matter how you make a game there will be people out there watching tutorials that are gonna make games doing the way we did before where you just have x1 or you have X Y all the different variables and you don't use any classes and that's perfectly fine but as soon as we start moving into large games and more complex games we definitely do need to use these classes as it just makes everything a lot cleaner so yeah I hope you guys enjoyed this tutorial if you did please leave a like and subscribe and I'll see you again in the next video