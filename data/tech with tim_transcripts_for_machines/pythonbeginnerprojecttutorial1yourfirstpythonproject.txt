hello everyone and welcome to a brand new Python tutorial series so in this series I'm going to be teaching you the basics and fundamentals of a Python programming language and we're going to immediately be applying those into our own project slash game so the idea behind this series is that not only do I want to teach you these concepts but I want us to actually apply them into a project so we can see where they're used and how we use them so at the end of this series you will have a complete finished game that you will be able to show off and the way that we're gonna be making this game makes it really extendable and flexible so you can add your own stuff and really customize it as we go through so before I say anything else let me just note that this tutorial series is really for complete beginners this is for people looking to get up and running in Python as fast as possible and in these next three videos we're gonna be learning a bunch of different skills and syntax and then by the end we're gonna have that complete project so let me show you an example of what this project could look like keep in mind this is just like kind of a smaller version of what it might be this is very flexible and we might make it a little bit different as we go through so let me run this and the type of project that we're really making here is a tune your own adventure game now in my opinion this is one of the best projects you can work on as a beginner because of how flexible it really is so let me just show you what it is and then you guys should get an idea pretty quickly of why this is a great project to work on so you can see it says welcome to my first game what is your name I'm gonna put Tim what is your age let's put 19 and says you are old enough to play do you want to play let's type yes so as you were starting with 10 health alright let's play first choice left or right let's decide to go left you can see that what's kind of happening here is these first steps we're just setting up in the game but now it's gonna give me a bunch of decisions to make and based on what I choose at previous steps it'll give me different decisions so I decide to go left here it says nice you follow the path and reach a lake you swim across or go around what do we think do we go across or go around let's go across so I go across says you manage to get across but you were bit by a fish and lost five health you notice a house in a river which do you go to the river or the house so let's decide to go to the river and let's see you fell in the river and you lost so hopefully that gives you an idea of how this works let me run it one more time and I'll show you that there's different options that will pop up based on where you decide to go so Tim 19 yes you were starting with 10 health let's play if I decided to go write notice that immediately I just lose right so there's all these different paths and kind of decision trees and branches that we can go down and it makes this game really cool because it's pretty simple to create obviously for beginners that's what we're gonna be doing but it's also really cool and really flexible and you can kind of make whatever you want out of it so with that being said we need to get our coding environment set up here fortunately for us we're actually gonna be using a platform called rep lit so it's rappelled i Tissot repl ite this is an online browserbased coding environment and I'm just gonna walk us through how we can actually set this environment up and get started right away without having to download or install any software so as I mentioned we're gonna be using an online coding platform called repli'd so it's spelt repl dot i t that is the website URL i will link that in the description as well but this is a free browserbased coding environment so what that means is that the only prerequisite for this series is that you have a browser and you have internet connection and it doesn't really matter what that browser is in fact you can actually do all of what I'm gonna be showing you on your phone so that's really cool you can do on an iPad any mobile devices which usually you wouldn't be able to do so what is replic well really it's just an online browserbased IDE now you don't need to know what IDE stands for what this allows us to do is just get up and running really quickly we don't need to install or download anything and we can just pick a programming language and start coding so I'm gonna walk us through this platform and show us how we can get started but I just want to pitch a few the features for this platform because first of all it's free and I think it's a really cool thing to use especially if you're beginner and you just want to get started really quickly so you can see that the feature list is kind of here it has an inbrowser IDE so that's what I'm talking about with that coding environment it has realtime collaboration which means you can actually invite someone to your project and you guys can work on the same code at the same time which is really cool and as github integration I'm gonna talk about that because most of you probably don't know github if you're following this tutorial 50plus languages again that's pretty cool so you can write in whatever you want you can host and deploy applications there's a bunch of tutorials and learning resources on this site there's team plans and then api's and plugins you might not know some of these things so don't worry about them but let's actually get started and create our first rebel so to get started you need to go to this link and obviously sign up if you don't have an account or log in so I'm gonna log in but when you sign up it's gonna ask you to input your favorite programming language I would recommend you to select Python it doesn't matter but that's just something that you will have to go through to get this set up so I'm gonna sign in to my account and then we'll be right back and talk about the actual platform itself so I just signed into my repli'd account and now I'm kind of on the home page here I just wanted to walk you through some of the features and kind of things that this site has that you may not know about or that you might actually want to use so the first thing I want to say is that if you just want to get started the fastest way to do that is just a hip create a wrap so you can see there's Python HTML CSS JavaScript Java these are the languages I selected it's my favorite programming languages and to get started just press one of them and it will boot you up right into that online coding environment otherwise you can go to the new repla tap here and there's like a bunch of different ways on this site to make new projects which are kind of called rebels but this is how you can do it as well now other than that there's actually a ton of other things this site has that aren't involved in kind of a coding environment side of things so first of all if I go to this talk tab here you can see there's actually a little bit of a kind of community space here so there's a I want to call this almost like a mini forum there's a few different tabs here so there's some announcements there's challenges tutorials right you can look at all these different things which I think are pretty cool and of course you can make your own post and then if we actually go here and we select on our little logo you can see that's my little drawn picture of me and I go to profile this is actually where all of your apples will stay and where you can kind of have a little portfolio to show off all the stuff that you've done so at the end of this kind of tutorial series you're gonna have a project right here on your portfolio that you can just link to and show off to whoever you want so you don't have to actually send them the code you could just send them a link to your Apple or to your profile and it's kind of a little portfolio that shows off the stuff that you've done and I think that's pretty cool and a really easy way to kind of share your work with other people of course if I go back to the home page you can even see it says explore transfer people have worked on and get some inspiration motivation whatever and then if you want to learn of course follow along with some tutorials so the last thing I'll say is that if you're interested in working with some frameworks repla also has that as well so you can see that there is some game development frameworks one of my personal favorites which is PI game here and then there's GUI development so to kinter that's a Python module Java swing I just want to show that there is some modules and graphics libraries you can use on here which are pretty cool and then of course my rattles when you start creating projects this is kind of your storage space so the reason I wanted to point this out is because usually when you work on a coding project you're doing it locally that means say you're out you don't have access to your computer and you want to work on it while you're kind of out of luck with repli'd all of this stuff stores right on the website so it's pretty easy to just sign in on your phone or sign in on your laptop or whatever other device and just start working on your project right away so anyways I think that goes gone through some of the core features of this site there is of course a few more but let's actually get started and create our first rappeling first project so I'm gonna go here to new rattle and I'm gonna select Python and give this a name now the name that I'm gonna give mine is first game feel free to name yours whatever you'd like and then just notice that this will be a public repple which means it'll show up on your profile and everyone can see it if you want to go for private rebels that is kind of a premium feature but I wouldn't worry about that we're not making anything that we care if someone steals so let's go create rebel and so let's boot up into our first environment and I'll just talk about some of the pains and kind of what exists in here so you guys know what I'm working with as we go through this series so there's a bunch of different things to talk about I'll go through them quite quickly the first thing is you can see this pane on the side is kind of like your menu bar right so you have this little dropdown list this toggle is the menu I believe okay yeah so that's the other menu and then you have files version control packages debugger and settings if you know what those are great you'll appreciate all of these I'm not going to talk about them in depth the first one is files so files is where you can make your Python files for our project we're just gonna have one file but sometimes you'll have multiple files sometimes you'll have some kind of project directory so some folders some other files inside of there so that's how you kind of navigate that with this tab here you can just create them by doing that then what we have is settings so settings is what I like to go into right away whenever I boot up a new editor and just modify it a bit you can see I've actually already changed my settings from light mode which is this to dark mode I just prefer dark mode but you guys are welcome to use whatever you like you can also change the layout from side to side to stacked I like side to side better to do this but again all preference font size you can change that to huge you can change that to normal whatever you want indent type same thing not a big deal I usually go indent size of four this is default too and then other than that I think that's about it you can turn off the auto completion if you want from code intelligence but those are the basic settings next we have the two panes here so you can see I'm toggling this bar just by hitting on the same kind of logo here and now we have the coding environment on the left hand side of my screen and our Python console or shell on the right hand side so this shell on the right hand side or console whatever you want to call it is where our code will actually run so we'll write our code over here on the left so maybe we'll do something I'm just showing you a really quick example like print hello and when I press this Rodney button up here it will actually execute whatever code I wrote here and show it in the console but another cool thing with this console is you can clear it just by hitting that button and then you can actually write Python code inside of here so I can do something like print hello right inside of here and this won't execute directly inside of here and we're gonna use this later in the series so with that being said I'm gonna change this back to dark mode I think we're pretty much ready to start coding so let's actually get into it and kind of start the tutorial all right so the first important thing that we need to understand is how we can actually print things and get things to show up in the console so before remember how when I ran the code we would see some kind of output right it said like do you want to play the game or it would tell us some kind of message so how do we actually go ahead and do that well the first command we're gonna learn in python is known as print so all of the things I'm about to show you are pretty much called syntax syntax is really like the grammar of a programming language it's like where does the period go where do we have parenthesis it's just the structure the way that we write the if you hear me use the word of syntax that's what that means but the syntax to print something out in Python is really simple we just put print we put an open parenthesis and a closed parenthesis and then inside of the print statement we put a set of single or double quotation marks and inside of these quotation marks whatever we want to print to the screen so you can think of it as like we're printing a quote right if you wanted to say that although this is gonna be referred to as something else that I'll talk about in a second and whatever is inside of these quotation marks that text will just show up in the console so if I say hello world the classic first program then let's run and we get hello world popping up in the console so this is the easiest way to print something out there's a bunch of other ways we can use this statement but again it's just print open parentheses and then you need these these double quotation marks or single quotation marks it doesn't matter which one but make sure the set is obviously the same so you don't go like single quotation mark double quotation mark that won't work and then whatever inside of here that you want to print out so let's apply this now immediately into our project like I said the first thing we want to do in our chooseyourownadventure game is probably introduce the user whoever's playing to the game right so what I'm gonna say is welcome oops if I could type welcome to my first game now you guys can obviously put whatever you want inside of here I'm just gonna say welcome to my first game maybe you want to be more creative input the name of your came although we might not even know what that is yet but don't worry we can always go back and change that all right so print welcome to my first game great so that is the print now what I need to talk about is variables and data types you know this is a really important concept now this is gonna be a little bit more theoretical it's hard to apply this but we definitely need to understand this so inside of Python we kind of have four main types of information or data so in our programming languages we have data right that's information that we're maybe going to store that we're gonna pass around that we're gonna manipulate if you think of an application where we're just counting so we're just counting up well we're gonna have to have some notion of like what the counts out right that would be an example of data that we're gonna store in our program there's lots of examples of this but these this data that we have has different data types and there's kind of four main ones that we need to cover so the first one is screen the second one is int then we have float and then we have bool now a string which is represented by STR I'll actually just type out string here so you can see it fully is anything wrapped inside of double quotation marks or single quotation marks so like below is an example of a string hi is an example of a string 989 is an example of a string anything that's inside of double or single quotation marks is a string and strings are just a collection of characters they're just text right and usually we're gonna use strings just to print stuff out to the console there's a bunch of other use cases of them of course but for now that's what we can kind of think of as strings next we have int now intz are any whole number so just the number they're not wrapped in quotation marks or anything like that just any whole number it could be negative as well that's totally fine it could be a really big number any whole number that does not have any decimal points is an int otherwise known as an integer so that kind of follows our understanding from math so hopefully that one makes sense next we have float now a float is any number that has a floating decimal point so if I have something like 6.0 that's a float because we have a decimal point and then something after we have a number like 7.5 that's a float negative 9.8 that's a float and negative 100 point o again if float so even if it's a dot o which technically is still a whole number right because 100 o is a whole number if it has this decimal point anywhere it's considered a float and lastly we have a boolean a boolean is one of two values true or false so these two exact things that I typed nothing different about them so the capital T and the capital F is very important if you see one of these two things and you can see they're kind of highlighting in blue telling us their fancy fancy thing in the language and those are boolean so I'll leave this and what I'm gonna call a comment which is actually interesting to show you guys so if I do three quotation marks and then I do another three quotation marks like this this is actually what represents a comment or a multiline comment inside of Python this isn't super important to understand but what this means is that whatever I wrap inside of these triple quotation marks and I can put these anywhere I want this will just be ignored by my program so right now we're gonna print this right and that's gonna work fine but if I were to wrap this inside of triple quotation marks we can see it kind of gets commented out and now that means our program is just gonna ignore whatever's inside of these sets of triple quotation marks so if I run my program I no longer am printing that out and there's actually another way to make a comment as well and that's to use a pound sign and what this does is simply comment at one line so we're just comments out whatever comes after it on the line this sometimes is useful if you just want to comment at one line not a whole block of code like I've done here so I'll leave this down a little bit at the bottom of the screen and now will actually start writing a bit more code so there we go we understand datatypes now we need to talk about variables so variables are essentially a way of storing data now you can think of a variable like in math right where we had like x equals five x equals seven that's a really similar way that they work here in programming and to make a variable just show you a few examples it's quite easy you simply pick a name for your variable in this case let's say X you put an equal sign and on the right hand side you put some data type or you assign it equal to another variable or some other things that we'll talk about later but essentially you put something on the righthand side that you want to be stored in the variable so in this case maybe I want my variable X to store an int which is the value five awesome there we go that's all I need to do to make a variable X that stores the value five now if I actually go ahead and write another print statement here which is totally valid we can write as many print statements as we want what's gonna happen now is we're gonna print welcome to my first game we're gonna read the next line because we do read code top to bottom most times other than certain circumstances but you can think that when we execute the program we read from the top so left to right top to bottom that's just the way it works so then we do this we set X equal to five and now what I'm gonna do is actually print X now notice that I didn't surround X in quotation marks the reason I didn't surround it in quotation marks is because it's a variable so a variable is actually something that I can print totally fine right inside of the print statement because I'm not trying to print out the letter X I'm trying to print out whatever the value is that's stored in the variable X so in this case I'm gonna print out five because x equals five so if I run this let's have a look welcome to my first game five awesome there we go we now kind of understand variables so of course I can store other things in variables too I could store the value true right this would be considered a boolean or a bool let's have a look at this now so now we print out true and that's kind of the basics on variables they can store things so you set a variable name equal to something there's a few rules with our variables the first has to do with their naming so when we create a variable all we kind of have to do is just type something out and set it equal to something else but the thing that we type out or the variable name has to follow these rules it can only contain lowercase and uppercase letters underscores and numbers so it cannot contain any special characters other than an underscore and it cannot start with a number so something like hello one is totally valid hello one equals nine awesome hello one underscore totally balanced but as soon as I go one hello note you can see we're getting this red squiggly line not allowed we cannot start a variable with a number but I can go ahead and do something like that that's fine I can put a number in between just follow those rules and typically you don't really use numbers in your variable names you're just gonna use some text maybe uppercase and lowercase letters and in Python if you want to do a space because there's no spaces allowed in variable names just use an underscore so something like hello underscore world this is the convention for making variables you separate anything that's kind of two words using an underscore so let's say hello equals nine right and then we can print out hello and we'd get the value not now of course we can make a lot of other variables too we can say the variable yes equals and maybe it's equal to the string hello I can actually use something crazy and say hello equals yes now what that's saying is that hello this variable hello is equal to whatever is stored in the variable yes so in this case Hello will be equal to hello funny right but that's how that will work so we can assign variables to other very we can do something like hello equals hello +9 totally thought and in fact what I'm gonna do now excuse me is I'm gonna try to actually show you how we can ask the user for some input and store what they type in in a variable so now we're on to the next part which is getting user input so to get user input what that means is that in the console here we're gonna let the user type something in because right now if I run this you see that it says welcome to my first game and then the program kind of just ends after that ideally I would like to ask the user what their name is and store that in a variable so let's go ahead and do that I'll just print it out and then I'll talk about how this actually works so I'm gonna make a variable called name the reason I've called it name is because it's going to store my user's name and usually we want to name our variable something that are meaningful and I've set that equal to input and inside of this here I'm gonna put a string that is the question I want to ask the user so what is your name question mark now notice I did a little space at the end try to think of why I would have done this space in just a second but just keep in mind I did do this space just remember that so now what I'm gonna show you is what happens when I run this program so let me move this over here let's zoom in welcome to my first game what is your name let me type Tim all right so I type Tim and notice that here the cursor is going and I can type stuff right into the console that's because I used this input key so what this says if I have input and then I put what's known as a prompt inside of here then whenever we read this line of codes when our program actually reads this it will say okay print this out and then wait for the user to hit enter so let them type something whenever after we print this out so on the same line as what is your name and then as soon as they hit enter we're actually gonna take whatever they typed and we're gonna store it in the variable name so if I type Tim like that what actually ends up happening and I go off the zoom back out here is that the variable name is gonna be equal to Tim because I typed Tim and then if I type Joe the variable name is gonna be equal to Joe because I typed Joe so to prove that's you let me print out a name because we can print out variables right so this variable should equal the name we and then let's just print it out so let's have a look what is your name Tim and there we go a prints out Tim now notice I'm not just lying to you here if I type Jo it prints up Jo so we are grabbing and storing the user's name by using this input tag now the next thing I actually want to grab from the user is their age we're gonna do a cool thing here that make sure there's certain age before we let them play the game so let's say age equals input and then what do you guys think we should put inside of here well have a think about it for a second because I am about to start typing pause if you need to but I'm gonna put what is your age and now what's gonna happen is we're gonna ask the user for their name then we're gonna ask the user for their age and they're gonna type both of those values in so let's run this and let's say what is your name Tim what is your age 19 boom stops there we go now age will store 19 and name will store Tim so if I want to show you those two things what I can do is actually print them out and I'm gonna show you the last thing kind of for this video is how we print out multiple things on the same line so let's say I wanted to say something like hello Tim you are 19 right so I want to print their name and then I want to print their age and I want to combine that with a few other words just to kind of welcome the user well how do I do that there's a few different ways to do it but the way that I'm going to show you is kind of the most common and it's something like this essentially you can separate anything that you want to print on the same line with a bunch of commas so I can do something like hello comma name and what this will do is print out the string hello that we've already talked about we understand we can print out this and we'll show the text then we'll print out whatever the variable name is so whatever is stored inside of there and this comma will automatically put a space in between so hello space name where name will be equal to whatever we typed in then I can say hello Tim you are and then I'll put age comma years old like that and there we go that's all we need to do to print out hello whatever their name is you are whatever their ages years old so we've just separated them by commas and now it'll print all those things out so let's have a look here let's go Tim 19 hello Tim you are 19 years old and let's say actually let's just leave it like that for now and I think with that being said that's pretty much all I need to cover for this first video so I hope that you guys are getting a little bit excited about this I know we haven't gotten too far yet but these things will start to accelerate and get faster and faster and faster I just really need to give you guys the basics before we can jump in too deep so in the next video we're gonna actually do a lot more stuff we're gonna actually get the game starting to function hopefully talk a bit about conditions and some arithmetic and then of course in the final video we'll be wrapping up the game doing all the finishing touches and doing a lot more work so if you guys enjoyed make sure you leave a like subscribe and of course stay tuned for the next videos in this series