hey guys and welcome to the continuation of a series that I did a long time ago on my channel which essentially programming problems and solutions now some people have been recommending me to do these so I'm hoping to get at least one of these out per week so if you guys are not subscribed to the channel please make sure you do that if you want to see these programming problems now this video is gonna be pretty straightforward pretty basic set of problems I'm on this website coding bat comm and they have a bunch of Java and Python problems so I'm gonna try to work through and the entire warmup section here of these problems you can see I've already done some of these other ones and once I finish that which hopefully I can get done either in this video or like in two videos then we'll move on to some more difficult problems but I want to make sure that people that are beginners on my channel or maybe even intermediate see kind of how you go about solving a problem like this and then we can work forward into more advanced problems again I recommend you guys just go on coding bat and try these problems for yourself as well I mean I'm giving you the solutions they have the solutions but why you would watch me as opposed to just hit show the solution is I'm actually gonna explain through and talk about why I'm doing what I'm doing and once we get into some more advanced problems I'm not gonna be using this website anymore because they don't really have any crazy difficult stuff which is what I want to get into later on in this channel I want to do some like AP computer science stuff some pathfinding some problems it might take us a while to figure out which I think will be fun and exciting so with that being said let's get right into warmup I'm gonna do as many of these as I can and like let's say 10 15 minutes and yeah let's get going so this one is called string x and essentially given a string you just have to print it out however many times it tells you so uh I mean this is really straightforward Python as a method that just does this and all we're gonna do is literally just return STR M is multiplied by n and you can see that what that does is just multiply the strings you get hihihi like it just that's pretty trivial so next one I don't know if this is the pace we're gonna be able keep the whole time okay so this one's straight pretty straightforward as well it says given a string and a nonnegative in 10 will say that the front of the string is the first three characters or whatever is there so if there's less than three characters that like whatever's there we're gonna return n copies to the front so this is again really straightforward there's a bit there's another thing we have to add here is a check first of all you just have to say if the land of STR is less than one that are less than one my saying one less than three and we're going to say copy equals mr. G blank like that and we'll say copy equals STR I guess the entire thing so we can just do that we are able to copy equals STR and we'll say else what we'll say this will say copy equals STR 2 3 so it's going to 0 1 2 not include a 3 which means we're gonna get the first 3 characters of the string and then we're gonna do is return copy multiplied by n let's try that and there we go so essentially really quickly what I did here was I just create a blank string called copy this is the string that we're going to copy an amount of times and what I did is I said well if the length of this string is less than 3 then copy is gonna be the entire string because it could be 1 2 3 or 0 characters like you can see the examples here if it's not then what we'll do is we'll get the first 3 characters a copy just using the slice operator which gives us index 0 1 2 and we're just gonna multiply it by n using the builtin Python method and there we go so next problem and what time we got 3 minutes sweet okay so given a string return a new string made of every other character starting with the first so hello leads yields a cello all right guys I didn't think these were gonna be that easy but essentially all we're gonna do here is just return STR colon colon 2 and this should give us every other character let's try that and there we go so what this does again slice operator if you don't understand the slice to operator let me know and I'll explain it in like another video but I do have I think some Python tutorials on my channel to explain what this does but essentially this is just gonna step over every other character and give us well all the correct answers all right next question warmup to string explosion give it a non empty string like code return a string like C ko okay so you get first second third okay so we might actually have to use a loop for this one which will be new so we're gonna do the first character then the second character okay so let's say new STR this is just gonna hold the string that we're gonna return we're gonna loop through the length of I guess I don't need to squiggly brackets or that I've been coding a Java too much I'm going to say 4x in range the length of string what we're gonna do is we're gonna same new string plus plus equals everyone say new string equals new string plus STR X plus 1 now what this is gonna do is it's gonna start at the first character and go to the X plus 1 character so for our first loop it's gonna give us the first character of our string so let's say we're working with code here which is C for the second loop it's going to give us Co like that for the third loop it's gonna give us Co D and then the fourth one is gonna give us Co de which will in turn make our string and then we can just do return new STR let's try that and there we go pretty straightforward on that one just really basic for loop here there's other ways to do this but this is probably the simplest let's actually see what their solution is yeah exactly they did exactly what I did so there you go okay next next problem okay last to give it a string return the count to the number of times that a substring length to appears in that string and L so as the last two characters of the string I don't understand the last part let's see here so hi xxx high yields 1 we won't count the end substring ok so we're saying if that appears at the end in Dec or don't is it don't count the last one or just don't count okay so I just add a second I should read through this quickly one more time I think I understand it now but essentially what we're doing is we're actually just getting the last two characters as a string we're saying that's the substring we're gonna look for and then we see how many times it appears in the rest of the string so that's pretty straightforward to do all we actually have to do is just get well first of all the last two characters if they exist so the first crews gonna say if the length of our string is it's a there's gonna be at least two characters it does not but let's just say if the length of our string is greater than 2 greater than or equal to 2 then what we'll do is we'll say last equals and then we'll say STR and then negative 2 to the end and that should give us the last two characters of the string else we're simply just gonna return zero because well they it would only appear zero so actually we'll return zero if it's two as well because that means it couldn't appear actually if it's if it's uh if it's three two will return zero otherwise so like if we don't return zero then what we're gonna do is just look for last so to find last we can literally just count it then subtract one so we'll just say count equals STR dot count last and then minus one and then return count now I don't know if this is gonna work but let's see okay so we run into an issue so maybe I just misunderstood the problem here so this should be two apparently I don't know why that should be two let's OB cuz it appears X X and then X X like that maybe and it's only counting it as like appearing once possibly space we just use a for loop to do this then instead of using the count method that's the only thing I can think is the issue here so let's just do for I in range the length of STR 2 actually because we're not gonna do the last two elements then what we'll simply do is we'll say if I suppose say like check STR equals Str I plus STR I plus 1 which will just give us this one and the next one so this should actually be minus three I believe then what we're gonna do is we're gonna say if check STR equals equals last count plus equals one and we'll put count up here and then we'll just return count and that should be correct let's see still what is the issue with this one should be two we're getting one oh I guess that's because so it's not but don't count the last two characters which okay so let's just do this then maybe that'll work yeah there we go okay so essentially this just needs to be negative two because on a string of length four that was gonna work okay so yes this is how you do it essentially what we're doing is we're first just making sure that Stringer's at least like three cuz if it's not then that means that actually there should be greater than or equal to yeah I think that's so yeah it's still gonna work greater than or equal to because if it's an no out greater than that well then we know that it can't appear more than one time and we're gonna get rid of the last occurrence anyways right that makes sense otherwise we're so if like this is not the case we're just gonna return zero and then what we're gonna do is we're literally just gonna count how many times the substring appears so we'll look through the string we'll get the first letter so like we'll start by looking at H and I so we'll go H I and then we'll look at H and then we'll look at X X and then we'll look at X H and just compare that to the last string which is well hi and see how many times that occurs and then since we're not even bothering to look at the last two characters of our string we don't even have to subtract from the count because we're not gonna end up counting this last substring anyways I hope that makes sense let's go to the next one and depending on how long this takes maybe we'll say this is the last one okay so given an array events actually incorrect that is gonna be a list of intz but uh let's keep going return the number of nines in the array okay I mean that's just alright let's let's return nums count nine and there we go I don't know why that's one we're obviously doing another one as well okay so array front nine given an array of instruments in the array is nine the array may be less than four elements okay so let's just say first of all let's do two cases so one case is the length is at least for another cases length is less than four so the first case is well if the Len of nums is greater than don't know how I mess that up greater than or equal to four then we'll just say check is equal to and then we'll say nums for now otherwise we'll do is we'll say the check is equal to nums and then what we're gonna do is literally just count one more time so we'll say return num stop count nine and this will count the amount of nines in the first four elements of our array or list okay so let's try that what is it true numbers count 9 how Oh what is it oh sorry the array is if one of the first four elements in the array is not okay so that's right that's just my bad on reading the question incorrectly there I will say we'll get the count so I'll just say like I don't know how that was like count equals and then check dot count 9 and then return count greater than equal to 1 okay do that there you go so now we're getting true and false I was just returning the account I wasn't returning true or false that's what we got that wrong and we might be able to do one more let's keep going I guess array 1 2 3 so given an array of in certain truth the sequence of numbers 1 2 3 appear in the array somewhere ok so if we can find like 1 2 3 then that's correct so 1 2 3 all right so to do this is a little bit more complicated but shouldn't be that difficult to do we're just gonna do one for loop and just look through the first three elements and then the next three elements and the next three and to see if they're equal to 1 2 3 so to do this we will say first of all we'll just do a quick check actually we'll see we'll say found equals false and at the end here we'll just return found and then we're gonna do a for loop and I say for I in range and then the length of our array which will be nums minus 2 and the reason we do minus 2 is because we want to get to essentially the third last element which will be here and then check if it's 1 2 3 now there's no point in checking this element because well we can't check like two three and then blank right there's just there's no way it could be 1 2 3 cos only two elements left so if we haven't found it by then there's no point in checking the last two elements so that's what we do minus 2 so that'll mean rather than getting to here we'll get just 2 here and then we'll be able to check the last two so now we're gonna say is well I'll just do a little list here this might just be easier to check and we'll literally just say nums i nums I plus 1 and nums I plus 2 and we'll say that's equal to like sequence and I will say if the sequence so if sequence is equal to and we can just type it out 1 2 3 then just return I mean we could return true or we can say like found equals true and then just break this loop that's probably that works as well let's try this and see if that works running code invalid syntax line 7 what did I do wrong numbers items I plus 1 if so that needs to be two equal signs my bad guys let's try that and there we go so essentially the way this one works really easy use again we're just gonna loop through and we're gonna check like 1 2 3 and then we're gonna go 1 2 3 and I'm gonna go 1 2 3 and we do that by going index I index i + 1 index i + 2 + number it's going to compare that to the sequence we're looking for which is 1 2 3 and if that's true we'll say found which is up here is equal to true we'll break out of this loop because if we found it what's the point of continuing to loop return found and there we go so I think we're getting to about the 15minute mark now so I'm gonna wrap the video up here let me know what you guys thought of this I know I went kind of fast through some of these problems and I weren't expecting them to be that simple in the next videos we will definitely be doing some more complicated problems with a bit more of an explanation behind them but I just want to reintroduce this series please let me know what you guys think that I really want to hear your feedback down below and if that being said I will see you in the next video