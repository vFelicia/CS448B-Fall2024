so for today's video I wanted to do something different and I wanted to address kind of the younger generation of programmers and talk about some of the obstacles I faced when I was learning programming as a kid and how you can kind of get past that and continue to develop your skills without having a strong background in kind of just computer science and mathematical topics in general now personally I started learning programming when I was 12 years old so I've been doing this for a really long time I have a lot of experience self learning and kind of self teaching and now I'm at the point where I'm teaching programming on this channel so I just have a few tips for you guys I just want to kind of tell you you know some of the obstacles that I know you're gonna run into because I've run into them myself and how you can overcome those and just get better and better and better and how you should be spending your time as you know a young programmer so I just want to make this clear that when I talk about young programmers I'm kind of thinking about people that are under the age of 18 now I know that if you're 23 or 24 you're definitely still young if you're a programmer but what I'm talking about in this video is really gonna relate more to people that are much younger in high school elementary school level trying to get into programming and trying to figure out you know how do we learn this and how do I do this now I know for me when I was younger a massive obstacle was just trying to understand these concepts and I think what really benefited me was taking things slow and this is gonna be kind of my tip number one to you guys don't worry about rushing through different concepts don't worry if you don't understand something on the first time you have to remember that what you were teaching yourself and what you're learning right now is stuff that they don't teach until first or second year university there's stuff that I was doing when I was 13 years old that we are just learning now and I'm my second year of university so remember that these concepts are difficult they're meant to be challenging and you really need to take your time and make sure you understand them before you just blaze through and learn other things and this kind of brings me into my next point which is just keep going slow and really build a strong foundation the important thing to do when you're a kid and you're learning and picking up programming from the beginning is making sure that you don't have gaps in your knowledge and that you build a really strong foundation before you start moving up into some more advanced concepts a lot of people will look at the really basic programming stuff and say this is too easy it's fine I know to do this and just kind of whiz through and go into really advanced concepts and if you're capable of doing that that's great but really make sure that you understand the basics because if you don't get the basics and you try to go to the advance it's just gonna be a massive headache and you'll probably just end up giving up on those concepts that you could have learned if you spent more time mastering the basics so make sure you master the basics take your time and don't worry if it's taking you a long time to learn things if you got to watch a video three four times to get a concept down that's totally fine and that's exactly what I did when I was younger so look at my channel look what I know now and I can tell you when I was twelve you think I was a good programmer no I had no idea what I was doing and like even the most basic stuff was challenging for me and I had to really test myself and learn it as I went on alright so you feel like you've mastered the basics you know you have a little bit of confidence you can solve some basic problems maybe you've made a few basic a little application some hello worlds all of that what now well this is where I'm gonna recommend that you guys really explore the field of programming now I know when I was younger I made a big mistake and I stuck to one kind of route I fought that when I started learning programming what I really wanted to do was web development and I learned HTML I learned CSS I learned JavaScript and I learned PHP and I started just focusing on websites and I started to realize that I really didn't like web development and this is what I've been spending the past year year and a half two years of my time learning how to do creating basic website setting up databases doing some linking and now I'm 14 and I'm sitting here and I'm like I don't like friend and web design I don't like doing this and I really wish that when I was younger I kind of taken a step back and looked at some of the different things you can do with programming and this is my massive recommendation to you if you guys are young and you still have time make sure that you know you kind of think about the different areas of programming and think about what you really want to do I would definitely recommend trying you know Web Design trying a bit of backend trying maybe a little bit more of a difficult language and just kind of dipping your feet in the water in different areas and figuring out what it is you really like cuz you're not gonna know until you try and especially if you're younger chances are you've maybe only been introduced to one programming language or one kind of thing to do in the programming language when the reality is there's so much more so you know spend some time one day just looking at some different things you can do with programming and see if maybe you want to try something for the next week or the next two weeks and see if that's what you really want to do and this is super beneficial because it kind of gives just a domain knowledge and all of these different little areas and then that allows you to kind of jump in and out figure out what the best tool is to do for a specific project what you should be learning and what you really want to be learning because what it comes down to when you're young is you're doing this for fun are you doing this because you really love it and that's why I was doing it when I was younger and that's why I still do it today I genuinely really like programming when I sit in front of the computer and I get dialed in I can create a project and see my work on the computer it's super rewarding feeling to me and that's why you guys should be doing this so make sure that whatever you're doing you're having fun doing it and if you're not enjoying one concept don't give up on programming try something else and kind of dip your feet around and figure out what it is you really want to do now another obstacle that I know a lot of you guys run into is when you're trying to do things with algorithms now algorithm seems like a really fancy word and a lot of people don't know what it means essentially it's just a set of instructions but you're gonna get to a point where you kind of get to an intermediate or advanced level of programming and whatever programming language it is that you're using and you start to talk about some more mathematical concepts so you start to start seeing things that have equations and have math and have symbols that maybe you've never seen before I just wanted to kind of make a disclaimer I just let you guys know that there's two main kind of sides of programming and of computer science there's one side that's more of this software engineering side and there's one side that's more of the computer science field a lot of people don't know this and I didn't really notice that much until I got to university and now I'm majoring in computer science but the computer science side of things is way more problemsolving logical thinking algorithm analysis mathematics whereas software engineering is probably what most of you guys are doing which is creating projects building a website talking about the design patterns the way of doing things and way more of you know kind of the practical applying things and creating projects then the theory based stuff which is computer science so I just want to make you guys aware of these two kind of fields and I wanted to recommend that you kind of get a taste of both of them because you might actually end up liking one better than the other I know for myself I'm kind of a mix between the two because I'm pretty good at math and I actually like doing algorithm analysis and design but I also really like applying stuff into projects and bringing those algorithms to life whereas a lot of you guys may not be the best at math and I just I don't want you to get scared when you see this side of computer science which inevitably you'll run into which is really just math and problem solving and advanced concepts with equations you don't necessarily need to learn all of that to be a good programmer and that's what I just wanted to make clear is that there's these two kind of sides and you should explore both of them and kind of see what it one you like best but don't be scared if you're not the best at both sides if you're really good at software development and creating projects and programming stick with that that's more than fine and when you get to a point you need to know this you'll be taught it and you'll be able to figure it out but if you like problemsolving and you like math and you like analysis then you should look more into some computer science II topics where you're kind of learning about algorithms and data structures and design because that'll help you a lot when you get to your university courses in computer science if that's where you're choosing to take so I just wanted to say to wrap up this video that if you guys are a young programmer usually you know under 18 and you really do enjoy programming and you like learning it and you like teaching yourself at on the side or doing it in your spare time you're so far ahead of everyone else that's trying to get into the programming game I can tell you from experience I'm a university student most people that take computer science are going to software engineering have never programmed before in their life or if they have they've only done very basic things if you plan on going into software engineering or computer science or some kind of tack related field and you've been learning programming already you're going to be miles ahead and regardless of how much you know if you have any background you're already ahead my first year programming class is genuinely something I could have taught it was that simple it was that basic and there was nothing in that class that I didn't already know so thank you guys for watching I hope you enjoyed this video I'd love to hear how old are you guys let me know when you started learning programming some of the obstacles that you've ran into and we'll have a chat in the comments down below but with that being said I will see you guys in another