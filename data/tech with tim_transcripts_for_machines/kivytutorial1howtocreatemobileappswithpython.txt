hey guys and welcome to the first Python Kibby tutorial so in today's video and I guess the rest of the videos in the series really going through using the Python module Kibby now if you're not sure and you don't know what that is essentially Kibby is a crossplatform compatible GUI development kit and I know that was kind of like a long definition but essentially it allows us to you create graphical user interfaces that work on not only Windows but Mac Linux iOS and Android so that means that all of our applications are scalable for all those platforms and we have to do very minimal when we're whatdoyoucallit releasing for different platforms which is really nice and allows us to develop superscared scalable applications that we can use on basically everything and for you those of you guys that want to create like apps and stuff like for your phone you can do it with this using Python so we have to install Kibby before we can start using it so essentially I'm just on a kivi website right now and we can do this using pip pretty standard I'm gonna show you how to do it on Windows but if you want to do this on Mac or you wanna do it on some other platform if you go to the kitty website and I'll leave the link in description you go to installation and then you actually this is probably not the best one to do so let's just go to kitty org okay go to download and then just choose your your operating system you can see the Raspberry Pi Android like they have all this kind of stuff OS X Windows probably the most popular I'm gonna go installation on Windows and then I'm actually just gonna copy these commands to install Kibby so what I'm gonna do is I'm gonna go to command prompt now what I need you guys to first off start by typing and see if this works is just type pip on whatever system whatever OS you're working on so a type pip now if this doesn't work for you or you get like pip is not a command watch this really quickly if it did you're you're great just fast forward like a minute into the video and I'll show you what we're gonna do with this so if this didn't work for you what you need to do is you need to go to just type uninstall on in stall like add or remove programs alright and then we're gonna go down here and we're gonna find Python okay so wherever Python is I'm assuming you already have it installed as a Python three point seven point one this is the version I'm using currently supported by Kibby you go to modify get a click yes and then you're gonna go and you're gonna click on modify here and you're gonna just select pip so it should be unselected you're gonna select that and hit next now once you do that it's going to install pip and add it to your path which means you'll be able to do the next steps that I'm about to show so I've already done that so I'm gonna cancel that but that's how you can just quickly allow make pip work on your system ok so now we have pip we're going to do is we're gonna follow the steps on the website so the first one is ensure you have the latest Pip and wheel so I'm literally just gonna copy this command and what do you call it and just type it in here so python m pip install if for some reason this python m doesn't work you can just try pip install and that should work for you so let's run this and see I've already done this so it says requirements already uptodate but for you guys it's probably an install some things okay the next thing you need to do is install the kivi dependencies so again I'm just gonna copy these and just literally paste them into my command prompt and just see if these work and I'll have all these in the description and also on my website Tech with Tim dawn net so that you guys can go through this so if you'd rather go through like a quick textbased version what you can do is just go to my website and I have the entire tutorial written out as a guide on there so tech with Tim done that if you want to see that okay so again requirement already satisfied but I'm just going through what you guys need to do because this needs to use a bunch of different dependencies to actually work okay so now we're gonna go to this one so python pip and still kv depth angle alright we'll use that requirement already satisfied but again this is what you guys need to go through and we don't need to install this last one here we just need to install Kibby so we'll do pip em pip install Kitty and again I already have this installed so that should be working now last thing if you guys don't already have PI game installed what you need to do is just type pip install PI game like this okay and now again I already have it installed but it should go through and install these things so if you guys have any issues with this please leave a comment I'll try to help you out but essentially what I've just done here is I've installed all the dependencies for Kibby which means I just went to their website and I just copied these things and again how I got here was I went to cubed org and then I just clicked on the download button went to Windows and then I just copied all these things and paste them command prompt and hit enter so you guys should be able to do that again leave a comment I'll try to help you out if anything is wrong with that okay so now we can close that I guess and we'll actually start to get working here in Kibby so I'm gonna be using PyCharm for my where I write all my code but if you guys are using the standard IDL e which comes with pythons just any basic install all this will work so again if you were working with that you can just go to new file create a new file and just you can type the exact same code nothing to be writing in PyCharm I just like this IDE better and it's easier to use that so I'm gonna use it so the first thing we need to do is going to import Kibby and we're gonna see if this works so essentially I already have a configuration here to run if you don't know how to do that I have some PI trim tutorials that can show you but I'm gonna click run and see if we get any errors so I'll come here and guys if you see this red text is perfectly fine this is just info right more kind of warning stuff if you're doing this that's fine just make sure that this actually runs and you don't get any errors okay so if some text comes out that's fine just make sure it's not error if you're using ideally to test this what you're gonna do is you're just gonna go import Kivi like this now it's not gonna work because I'm doing kind of a different way of doing this but this should work for you guys if you've just done what I showed you okay okay so import Kibby next thing we need to do is actually from Kibby dots APB so app we're gonna import and in this case ring do all capitals app now kitty actually works based on object oriented program now if you guys don't know anything about object oriented programming you don't understand classes inheritance I'm gonna recommend you probably learn that first because a lot of this stuff is gonna have to do with that and if you don't know that it could be a bit confusing so I do up tutorials on my channel going through object oriented programming in Python they're about an hour long and I'll teach you everything you need to know so I'll leave a link to that as well but you guys should definitely learn that if you haven't already so now what we're gonna do is we're gonna create a class I'm gonna call this my app okay it's gonna inherit from app now essentially what this is gonna do is it means we're gonna take all the properties that have already been written for us from Kibby from this app class we're gonna use them inside our class my app now the only thing we need to actually write in this class is to find build okay and then I think self is actually all we need and what all we're gonna do here is we're just gonna return something and that is what we're gonna get to now so what we also have to do now is we have to import like our widgets and our labels and all that from Kibby so these are the things that we're gonna draw on to our screen um the things we're gonna use and they've already been created for us from Kibby but we just need to import them so that we can reference them directly so what we're gonna do is we do from Kitty dot what do you call it label or not dot UI X dot label we're going to import and then with a capital label now you should be seeing a trend here all the file names have all lower cases so whenever we're importing something we're gonna import from UI X which is actually a folder we're gonna input import the label python module and then we're gonna import the class label from that module so that now what we're gonna do inside of this app here is we're just gonna type return label and inside the label it takes a parameter of text and that's gonna be obviously what text our label is so I'm gonna say text equals and I'm here tech with Tim like that okay so we have defined build and return label tech with Tim now the reason that we don't need an initialization here so if you've ever used classes before you'll see that we do it define underscore underscore and it's underscore underscore the reason we don't need that is because by the leaving it out this is gonna default call the constructor of our main app class the one we're inheriting from so essentially we're gonna automatically call the inheritor for this or the constructor for this and then it's going to build our like frame and everything for us and then when we call this build we can actually just create the application so the last thing we need to do to actually see our app and run it if we just have to do this and I'll talk about what just doing it in a second so if underscore underscore name underscore underscore equals equals then under square I think it's this our underscore main underscore underscore what we're gonna do is we're just gonna run our app and the way we do that is we're gonna say my app and then brackets make sure you include those brackets otherwise it's talking to work dot run okay so let's quickly just deconstruct what we've actually done so we've imported the main app now this class from kibby's what allows us to build an actual window it's gonna do all the graphics for us it's gonna do all that really lowlevel stuff for us and we're just gonna inherit that in our own class my app now that means when we call my app got run notice that we didn't create a run method here we didn't do like define run right the reason that we're able to do this is because inside of this app class that we can't see right now but it does exist there is a run method and that run method what it's gonna do is it's gonna configure all the graphics it's gonna get everything set up and it's going to run our app now when we do build what's gonna happen is this is what is going to like be the main interface for our applications when we're just returning a label somewhere inside of this app class it's it's calling this build method right or it's calling yeah this build method and it's asking for what do we need to put inside the window and it's gonna give a label that says the text Tech with ten so our app class is going to set that up it's gonna draw the label out to the screen and then when we're running this right we're gonna see it on the screen so let's go ahead and run this and see if it's working awesome so we get a window that says tech with Tim now notice right away if I resize this window make it whatever size I want you actually see the caesareans being kind of difficult here that our label automatically adjusts now this is amazing because this means essentially that we can just allow this to go out on any platform right away and it's automatically gonna be sized dynamically to whatever we're on so say we go fullscreen you can see this automatically just goes right in the middle if I go back it goes like that so this is gonna work on all platforms and that's the amazing thing with Kibby that allows us to do that so easily so that is I think all I'm going to do for this tutorial if you have any trouble setting up Kibby please don't hesitate to contact me either in the comments draining my discord server or on Twitter if you guys enjoyed the video please make sure you leave a like and subscribe and I'll see you again in the next one