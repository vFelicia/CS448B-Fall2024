hey guys and welcome back to another YouTube video so in today's video I'm continuing with my pot game programming series and we're gonna be moving on to the ninth tutorial so in this tutorial what I'm gonna be showing you is how to add sound effects and how to add music and we're also going to do the collision between the two characters so just as we have the bullets colliding with our our goblin and we have little health bar going there now we're gonna have our man colliding with our goblin and we're gonna have something happen when well when they collide so what I want to start with is the sounds so in PI game we're able to have something called music and then sound effects so the music is gonna continually play in the background and our sound effects are gonna play when we call them so I just want to show you to start here I'm going to get my my folder here that I store my game in I've downloaded a few sound effects here so I have these two dot wav files so this bullet and this hit and then I have where's the other one here this is my music dot mp3 so in PI game the sound effect files have to be dot wav and your music files can be either WAV or mp3 now what we're going to be doing here is we're just gonna pretty much have it all around the program so that whenever you shoot the bullet you're gonna hear a sound effect and then whenever the bullet hits the go of them you're gonna hear the sound effect and then in the background I'm gonna have music playing the whole time so let's get started with that if you guys want to download those files that I just showed you go ahead and go down in the description below and click on the link it says github and then there's a link and on the github there it'll have all my all my files so I'll even have this tutorial file that once this is done be and finished and you guys can download all the images and all the music and all the stuff from there so first what we need to do is you need to load in our sound so just like we load in our images at the top here we're gonna create a new variable I'm going to call mine bullet sound and what we need to do here now it's just PI game dot mixer dot sound now inside of here all we're gonna do is just type the name of our sound effect so mine I called bullet wav straightforward pretty easy the next one we're gonna be doing is we have to do the hit sound so I'm just gonna do hit sound equals PI game dot mixer dot sound and then in here we just put hit dot WAV now for our music it's slightly different but it's still similar so I'm just going to label my music make this equal to PI game dot mixer dog music dot load like that and then in here same thing the name bar file so I think I called my music dot mp3 all right so now to play our sounds all we need to do it's very very easy it's just the name of the sound so whatever we have our variable called here don't play like that and then when you do that it's gonna play the sound however long it is and yeah it's pretty straightforward for the music to play our music continuously what we need to do is need to do PI game dot mixer dot music dog play I believe and then in here negative one let me just check to make sure that's right it's something along the lines of that yeah so that's exactly how you do it PI game mixer dot music play and this negative one here is gonna continuously play it so even when the song ends I think mine is like three minutes it's just gonna continue they play alright so we've got our sounds loaded in now it's time to play the sound so our bullet sound we're gonna play whenever we shoot the bullet so we're gonna scroll all the way down here until when we're hitting this space bar which should be shooting our bullet here I'm just gonna do bullet sound table play and then when our call band gets hit we're gonna play that hit marker sound so I'm just gonna do it in here I'm gonna do hit sound door play like that and there we go so now if I run the program here hopefully you guys can hear it it's not too loud for you you can hear the music in the background and then what I'm shooting my bullet you should hear that sound and when we hit the gold when you hear that sound as well now the sounds are slightly delayed but it's nothing to worry but we can fix that in another video it's nothing that I'm too concerned about right now okay so now we've got the music in defects that's pretty easy let's move on to the two characters colliding with each other so before I even go into this loop and start doing the collision like we did with the bullets I want to add a new method to our player character or to our player class so our player class if your members at the top of the program here what I'm gonna do is I'm just going to define and just like we had with goblin I'm gonna define hit as a new method so this is what's gonna happen when our goblin is hit so I want to start with this or when our player collides with the Goblin story so you guys can do whatever you'd like in this class personally what I'm gonna do is just how my character gets reset so he's gonna move back over to the left side of the screen I'm just gonna subtract 10 from our score so if you remember in the last tutorial in the top right hand corner I have our score and that just goes up as you hit the Goblin pretty easy so to do this what I'm gonna do first of all is just change my character's x and y now our X I'm gonna set equal to 60 in the Y I believe I started out 410 so we're gonna leave him on the same plane now after we reset that what we also need to reset is his walking so that it doesn't look like he's like mid stride as he gets reset so walk count equals zero not wall count walk count like that and there we go and now what I want to do after I reset him is I want to have a pause so maybe for about a second where it shows on the screen what just happened so you got some feedback rather than our character just flying over to the left and nothing else happening I want to pop up on the screen saying like negative 10 from score like you got hit so to do this just like we drew text on the screen before I'm gonna create a new font object to create font 1 equals PI game dot font s sys font and here we're just gonna use Comic Sans m/s again or Comic Sans we'll use and then we'll have a size let's do 100 this time because gonna be fairly large now we're gonna render a text object here so it's gonna be say text equals font 1 dot render and then I'm just gonna do negative 10 like just showing you simply that you've just lost ten points you know what maybe we'll make it five tens a little bit much one and that our color in this case it's gonna be just red because red is bad you got hit and then we're gonna draw that on the screen so wind up lit and then in here we're just gonna put text comma and then now what I'm gonna do is I want to draw it in the very center of the screen so okay I'm gonna give you a second to think about how I would do this using just a little bit of math rather than hard coding a number and how would we get this to go in the middle of the screen okay so I've given you a second pause the video if you still want to continue thinking about it the way that we do this is by taking the width of the screen so if the width of our screen say for example is this like this long we divide it by two so now we're in the middle of our screen right here so this is where we are if the if this line of text is our screen then what we need to do is we need to find the width of our text object and we need to divide that by two so that we done know our xcoordinate because of our text object is this long then we needed starting X to be over here right we can't just put it in the middle of the screen otherwise the width of the text is gonna continue to move over and you'll see what I mean here so what I'm gonna do is I'm just gonna take our number the width restrooms just 500 I'm gonna divide it by two so that gives us 250 so you can either leave like that you can just write 250 and then you're gonna subtract from that I just like to put in brackets just to make it easier to see here we're gonna do text dot get underscore width this is a builtin method in my game so you can use this on any text object divided by two so that should put it right in the middle of the screen for us and then for the y coordinate you guys can decide if you want to do the same thing here with the y coordinate to put it in the middle of the screen or you can just type in a number I usually just put like 200 since the width for our screen is 480 so then it's gonna show up near the middle if you want to do the same thing here just substitute this with whatever the height of your screen is and then dot get height and it'll do the same thing for you and put in the middle then we're gonna do PI game dot display dot update like that and then after this what to do is I want to pause so if I had just do this what's gonna end up happening is we're gonna see negative ten flash on the screen really quickly and then it's gonna disappear so I want to pause for a certain amount of time so it gives the second for the user to see what's actually happened so I'm going to set a variable I'm going to set this equal to zero I equals zero and say well I is less than 100 like that and then in here I'm gonna do pygame dot time dot delay and then we're gonna put ten right there so if you do the quick math you're what's gonna end up happening is after our increment I otherwise we're gonna be stuck in an infinite loop there is every time that we go through this while loop we're delaying ten seconds so if we do 100 times 10 this isn't secondstory this is like a thousand is one second so 0.1 milliseconds maybe and we're going to be multiplying by this so we should delay for a decent one time you know what I'm actually just gonna make this like three hundred to make sure we see it on the screen and then in here as well I want to make sure that while we're delaying we can still exit out of our screen so if I leave this delay then you'll see what happens is for like one or two seconds that it's on the screen if I try to click the X button it's not going to it's not gonna work it's gonna wait until the delay is done and then it's gonna work but I don't want that I want us to still be able to exit the game so I'm gonna do for event in PI game dot event get and I'm just gonna do if event type equals equals PI game don't quit same thing we've done down below and one of the first tutorials we're just going to say I equals 301 and then we're gonna say PI game dot quick like this alright so now we've done that we've created our method what we need to do now is the collision between our goblin and our character so we're gonna go down here and if you remember we've already done collision between the bullet and the goblin so what I'm gonna do here just to save us a bit of time is I'm just gonna copy this whole little statement I have here ctrl C and then at the top of our program I'm gonna paste it in like that now the indentation might be a little bit off it's not too hard to fix there we go and I'm just gonna start replacing all my bullet with with my man so for our first line what we're gonna do here is we're just gonna start with man and now remember we're not gonna use why we're gonna use the hitbox because that's what we've already defined as the correct coordinates for our four hip locks for a new man doll one we don't need this radius anymore because that's already the furthest left position and then here we're gonna do man dot hitbox and again it's gonna be one plus on the radius man dot hitbox and this is gonna be three that's our last coordinate our height same thing here with the we're gonna just do man dawn hitbox zero I'm gonna say plus man dot hitbox2 that's gonna be our width I get a space here fix that and then here we're it's the same thing we're just gonna replace this all with man dot hitbox zero now that should be everything so now inside here we're not gonna have hit sound play because we don't have a sound effect for one the two collide right now so we're gonna get rid of that and then instead of goblin dot hit it's gonna be man dot hit and our score we're gonna subtract would I say five and then we're gonna get rid of this over here now we can run our program and see if everything is working and there we go you can see we have our sound effects going maybe you thought you probably hearing it comin to my speaker here and we have pretty good collision you can watch here there we go so obviously it's not perfect but that's the best view yet and you can see it delays on the screen for a few seconds now I will note I will let you guys know that depending on fast your computer is the delay is gonna be different so you can see my delay is about one two three about three or four seconds I fear on a slower machine it's probably gonna be longer and the reason for that is if I come back up to this line over here these we're just using a while loop right so it's pretty much how quickly our while loop can go through all 300 of these iterations so yes we do delay inside of it but with having iterations like this it's gonna be slightly off it's not a perfect timing mechanism I just using this to show you a way that you can delay the game without delaying controls and you know what I mean if you ever tried to lay the game by just using this say for example if we just did delay 1000 and then I clicked with my left mouse button then when the delay was over the mouse left mouse button would click so even if I wasn't clicking it at that point it would send the command to the computer saying it was clicked and you're gonna see weird stuff happening with your game all right so that's been the ninth tutorial in my PI game programming series if you guys did enjoy please make sure you leave a like and subscribe and I'll see you again in the next and last video