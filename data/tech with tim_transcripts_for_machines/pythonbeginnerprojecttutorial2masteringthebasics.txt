hello everyone and welcome back so in this tutorial we're gonna be continuing with what we did in the previous tutorial working towards a project and learning the fundamentals and basics of the Python programming language if you have not seen the first video in this series please go do check that one out beforehand as we're gonna be building on kind of what we've worked on already so you can see where we've left off with the code we had before I got rid of some of the comments I had below and we've just left this now and what this program does at this point is just welcomes us to the game asks us for our name and age and then prints out the name and age of the user so whoever typed about it now what I want to do here and there's a few things we're gonna have to learn to be able to do this is check if the user is old enough to play our game so I want to check if they are you know older than 18 or maybe this game is pg13 or something right that's what I want to make sure that they're the correct age before we actually prompt them you know do you want to play so before we let them start playing we want to check that they're older than a certain age so how do we actually do that well that leads me to an important thing called conditions so first we need to talk a little bit about arithmetic so arithmetic is just math there's four main operators in or not four sorry there's actually more than four there are some main operators inside of Python that allow us to do arithmetic arithmetic it's just math right so we have the asterisk the star the plus the minus and the modulus now there's also a double slash to which we'll talk about very briefly and these are important these are the operators from math operations so the asterisks is multiplication the slash the forward slash is division the plus is addition obviously the minus is subtraction the percent sign is actually modulus which gets us the remainder of a division I'll show you and the double slash stands for integer division so these are the main operators that we can use and I just want to show you how we can do some basic math on just so you have that skill if you need to use it we may not use it in this kind of project but it is something important so I figured I'd show it so let's say we have the variable x equals 9 and y equals 8 what do I do if I want to add x and y well I could do X plus y right that technically would add them but I want to store that addition somewhere else so just something important to understand is that when you do something like X plus y this does not assign X to 17 it might make sense right if you say oh XP you might be saying like Oh add Y to X I could understand why that may seem logical to some people but this doesn't really work in programming what I do this all that happens is this gives me a value 17 but it doesn't get stored anywhere so what I need to do if I wanted to say add the value Y to the variable X is do something like x equals x plus y now I'm going to say the variable X is equal to whatever the previous value of X was plus y that will actually do that addition for me now same thing if I do this so plus equals is a shortcut for what I just showed you the people that made Python know that a common operation is to add one variable to another so rather than having to rewrite you know x equals x plus y you can just do X plus equals Y which stands for X is equal to the addition of X plus y right that's pretty much what that's doing so that will assign the value of 17 to X if you did something like that now when you're doing arithmetic the order of operations apply so let's say I have a variable is that and I said Zed is equal to 9 times or not 9 times 8 X Asterix y plus y well the order of operations that we know will follow which means this multiplication will happen before this addition now let's say we didn't want that and we wanted to you know change the order of operations well we could use parentheses like we would in any other map or any other programming language or math or whatever and then this will follow so we will do the parentheses first now these are the common operations right so this is multiplication that's division now I'll just show you the kind of two or three ones that you might not know so the exponential operator which actually haven't shown it is the two asterisks so when you do two asterisks that stands for raise to the power so X raised to the power of y plus y so whatever that would be so 16 I guess and then the other two operators I wanted to show you where the mod operator and the integer operator so the mod operator what this does is get the remainder after division so if I say X mod y this is actually equal to 1 now the reason this is equal to 1 is because the way you do this is you say okay how many times does 8 go into 9 how many times it goes in one time Folie right it goes in one full time what is the remainder what after you take that eight out of the nine well it's 1 right so if you do 9 divided by 8 you get one point something but really it's one remainder one that's the way you can think of it so like if I had say 5 and 2 then the mod again would be 1 because you say how many times does 2 go into 5 well it goes in 2 times okay so what is that that's 4 let's take 4 out of 5 okay what's the remainder now well there's one left so that's remainder 1 it's pretty straightforward that's how that works whenever you do something mod 1 obviously the remainder is going to be 0 because 5 can be divided by 1 perfectly fine and if I did something like 0 mod 1 then that would be equal to 0 because 0 does not go into 1 at all so what's the remainder 0 I hope that makes sense that's the mod operator for you it's not super important so I won't spend too much time on it and then we have the integer division so integer division is two slashes and this is kind of the opposite of mod it doesn't give you the remainder after division it gives you the whole number division or the whole number quotient is what it's called so if I do 5 divided by 2 how many times does 2 evenly go into 5 well it goes in twice so the integer division of X by Y is going to be 2 right and then if I change this to 7 same thing so how many times does 2 go into 7 well it goes in 3 times so the integer integer division would be 3 that is the basics of those mathematical operators just in case you need to use them I felt they're important to show now with those operators there's also a bunch of other operators too we have a less than we have a greater than we have a less than or equal to a greater than or equal to is equal to and are not equal to now these are what are known as our comparison operators and this is how we actually check equality between different things you know you might imagine that it's actually pretty important for us to for example check if someone is older than a certain age so if we wanted to check if the person's age was older than 14 we would have to use one of these operators to do that now this is where we start talking about boolean's I'm trying not to go too fast here but again I really do want to get to the project but some of these things are pretty fundamental to go through so actually can I type in here let me just see if this works ah perfect so I'll actually do some stuff in the console for us and don't worry I'll zoom in quite a bit so you guys can see this all right so zoom zoom zoom okay and now I'm just gonna do a few examples of what we call conditions or boolean expressions so remember I showed you that type before that was bool right um that doesn't matter that you see that but it was a bool and those were the values true or false right so when we use these conditional operators so that greater than that less than the less than or equal to the greater than or equal to that is equal to them not equal to when we use those whatever we put on the left hand side and the right hand side will be compared using that operator and we'll either get a true or false value so if I said something and this is like a really common example 3 is less than 4 well what do you think right if I tell you this is going to be either true or false so it's gonna be one of those boolean types what do you think this would be well of course that's true because 3 is indeed less than 4 right and then if I just watch us switch this around I say 3 greater than 4 well we get false because 3 is not greater than 4 so this is the basics on how these conditional operators work and I can do something like you know 45 less than or equal to 45 now is this true or false well that's true because the way that this works is it checks if the value on the left hand side is less than or equal to this value right and that's kind of the basics on how some of these things work now let me see can i clear there we go awesome let's hit enter here and see if we can start typing now the important ones that we want to go through though are comparing for equality that's something we want to do a lot of time so comparing numbers using the less than and greater than signs that's pretty easy I think that makes sense to most of you you know it's either true or false so you can read it and pretty well figure it out but sometimes when we have checking for equality it can be a little bit different so if I have something like 5 equals equals 5 what this is what this says is is 5 equal to 5 so what I did before right when we made a variable we could do something like x equals 5 and that is an assignment that means we're signing 5 to the value X but if I go x equals equals 5 what I'm asking is is like is X equal to 5 the two equal sign is like a question mark almost like is this true give me the result whereas the 1 equal sign is an assignment you're telling X that yes it is equal to 5 so if I say x equals equals 5 we get the value true right and in fact what I can do is make a variable called Y let's say y equals 5 and I can say x equals equals y and we'll get true all that happens when I use the variables here is that we'll just check what their values so we've assigned their values here and it will compare their values and tell me if that's true or false so that is the very basics of how we can use that equality so equals equals and then there's one more which is the not equals 2 and what this does is tell us if two values are not the same so whatever the result of the two equal sign would be it's just reverse so in this case X is equal to Y so since they're not equal to each other or since they are equal to each other then not equal two will give us false right so if we look at false it says no these actually are equal to each other so we're getting false for the not equal to operator I hope that makes sense now lastly we can compare strings right so I can do something like hello equals equals hello and boom that works fine that's totally true but what happens if I try to do this hello equals five note we cannot assert not hello equals five hello equals equals five what am I saying we get the value false right so we could when we compare different types like an int and a string together obviously those aren't going to be the same and what if I actually go ahead and do something like this five equals equals five well that's false to so even though these values are technically the same since this is a string and this is an int we're gonna get false so that's very important that when we're checking things they are the same type because if they're not then we're gonna get errors like this where they might actually be the same value but it's not showing up as the same value so I'm hoping this is making sense of course we're going to go through more examples but last thing I'll show you is that when I do like Hello equals equals hello do we thing this is gonna be equal or not if you have a look at it yes no what do you think let's run this we get false so whenever there's any capital letters that really matters so just make sure you understand that the types really matter and the capitalization matters as well and I'm gonna show you ways that we can deal with that because you could imagine like if we're checking to see if the user types something and we want them if they type it in with a capital letter or not with a capital letter we still want that to work right we still want to check and see that that value is is what we want it to be equal to so anyways that was kind of the theory that we needed to go through now let's get it into the project and start working on it apologize if that was longer than and then anticipated all right so what does I want to do I wanted to check if the users age was over a certain value so what I need to do is I need to write an expression that pretty much checks if age is greater than you know some some value right so let's first of all check this let's print and we're actually gonna go and we're gonna say is underscore older so I make a variable called is older I'm gonna set that equal to H and we'll say age greater or equal to 18 so what this is gonna do is it's going to assign whatever the value of this expression is so this will either be true or false to the variable is older and then I'll print is underscore older just like that so this will just tell us true or false and let's actually have a look at what we get here because it might surprise you a bit so let's run this and let's have a look it will begin so let's go name tim age 19 and we get a bunch of red text this is our first red text that we've seen so this is an error message I did this purposely and I want us to read what actually happened here and see what line had happened at so that we understand what happens when we get an error message so if you see this red text don't worry it just means you've done something wrong uh you know could be able it definitely is your fault because you typed it but you can definitely figure out what's wrong just by reading through this error message quite easily so you can see it says trace back most recent call last you know don't worry about this gibberish if it doesn't make sense that's fine what you're really looking for here is the line number the actual line where this thing went wrong and then what the error was so in this case it says file main dot PI so that's the file we're working in line seven so line seven this is the expression so is older equals age greater than or equal to 18 and then type error greater than or equal to is not supported between instance of string and int so what that actually means is that this age variable here is a string and this here on the right hand side is an int so I cannot compare if the string like cuz imagine if I had a string like you know hello I can't say hello greater than or equal to 18 that doesn't make any sense I can't do that and since age is a string we can't do that but what it why is ages string didn't I type in nineteen that's weird well by default whenever you type something in using input it automatically comes in as a string so even though I typed in nineteen like this and I didn't put the do quotation marks around it it automatically looks like this inside of my program that's just the way it works because this input doesn't know what we're gonna type right so it has to just assume it's gonna be a string because a string can hold anything inside of it so long as this wrapped in the quotation marks so that's why we have to do that so anyways that's what we do and yeah so we now need to actually find a way that we can convert this age to an integer so we need to take that string value and we need to convert it to an int so that we can actually compare these two things so the way that I do that is I write int and then I wrap the variable age with this int so I say int open bracket close bracket around age now that says whatever this ages is so whatever number this age is because in this case it's a string that's 19 let's just strip out the number from that so get rid of the quotation marks and make this an int value so now if I say is older equals the int value of whatever the ages so take those quotation marks away just make it an integer and check if that's greater than or equal to 18 so that's this will work now so let's actually have a look at this so what is your name Tim what's your age 19 hello Tim you are 19 years old and then it says true so that totally worked and that was fine we were able to convert the string that we typed in into a number so just keep that in mind if you're asking a user to type in a number then you want to make sure you convert whatever they typed in to an integer so that you want to compare it or you want to use it it's actually an integer value and there's another way to do this I can type int around the input statement up here and the reason this works is because this is pretty much doing the exact same thing we're doing down here except now we're gonna actually assign an integer value to the age variable rather than just convert the age variable later on to an int so it takes the input whatever the user types in and then immediately just converts it right into an integer and now I can remove this and this will still work because this is being converted to an integer immediately so let's run this one so what is your name Tim what is your age 19 and now we get hello Tim you're 19 years old true all right so we've covered a lot of stuff there's one more thing to go through and this will be kind of the most exciting thing we do so far so I'm excited to do it and this is called the if statement so right now we just printed true but ideally you know I want to give the user some different messages based on if they're old enough or not right I don't want to just print out true so how do I do that well this is where we use the if statement so you've seen that we make these little conditions right by using these conditional operators and these are either true or false now the reason we use these is because we can use them inside of an if statement so actually what I can do is I don't need brackets but I'm gonna remove this variable is older and I'm gonna take this age greater than 18 and I'm just gonna kind of code something out and then I'll talk about how this works oops if we could get this type in right you are old enough okay so what this is saying is this is an if statement what the if statement does is says if the condition here is true do this that's as simple as it is you literally read it like plain English you write the key word if so IIF you write some condition here whatever you want to check but this needs to compare or it needs to be true or false so this needs to evaluate to true or false and then you put a colon it's important you add the colon then down here you do a tab right so you tab in so one in debt level and whatever's inside of this indented block underneath the if statement will happen if this condition is true if it's not true it will simply skip whatever's indented and just keep moving on in the program so I'll just show you because I'm gonna print this twice just so that this makes sense so I'll print this two times so now if the age is greater than equal to 18 we'll print you're old enough twice so let's run this and let's go ahead was your name Tim what is your age 19 hello Tim you're 19 years old you are old enough you are old enough so that is exactly how that works now there's one more component to show to this and I think that was easy enough hopefully that makes sense it's just if you write some condition here and then if that condition is true you go ahead and you do whatever is in this block now what about if they're not older than 18 right so if I run this again and I say what is your name Tim 19 hello Tim you're in uh well I should I should have selected an age that was younger let's do Tim 17 hello Tim you're 17 years old what if I want to tell them that they're not old enough to play well I could do another if statement right I could do if age is less than 18 and then I could print that out but it's actually an easier way to do this and this is using an else so this else statement kind of combines with the if and whenever you write an if you have the option you don't have to but it's up to you if you want to put an else statement afterwards that tells you what to do if this condition is not true so essentially this is saying if this is true do this otherwise do this and now we're gonna put another indented statement and we're gonna say you are not old enough to play da so let's try this now and just see how this works oh let's go Tim let's go 17 and now it says slow Tim you're 17 years old you are not old enough to play whereas before it told us we were old enough to play so that is the basics of the if statement so we have the if and the else now I'll show you one more thing with the if statement and then we'll kind of start the very beginning of our game and then continue the rest of it in the next one but we've almost learned pretty much everything we need to know so now we're gonna go else if so Ellis if is another statement that we can use and the way that this works is essentially we're checking for one more thing so let's say we had three options right maybe if they were younger than 14 they just couldn't play if they were older than 14 but they had a parent with them they're a lot to play and if they're older than 19 they could play alone maybe those are the three options we have so what I could actually do is I could change this around a bit I can say if age is greater than or equal to 18 you're old enough to play then I could say Alice if so if this isn't true but this is true so what I put here age is greater than or equal to 14 and then what I can do is print you can play with supervision or something supervision okay so now what I'm saying is what is this sorry not else if this should be L if I'm coding another language here sorry not else if L if L if' apologize about that but L if then you put the condition and then whatever you put any indented block below that will happen if this is not true but this is true so I hope that makes sense but it goes like you know check this if it's true do this and skip the rest of it and then if this is not true check this if this is true do this skip the rest of it if this is not true go into the else and do this that is kind of the way that this works and you can actually put multiple L if statements underneath each other so you can do if L if L if L if/elif/else and these again are all optional but just remember that the else always comes at the end the elif's go in between and that you can have as many of them as you want but you don't need to so that's an important thing but let's just have a look at what happens now and say what is your name Tim what is your age let's do 15 and now it says slow Tim you're 15 years old you can play it with supervision so that is the basics of the if/elif/else now let me scrap this actually I want to scrap this but I'll get rid of the else F and let's leave it at this for now cuz it's gonna say okay actually we'll add one more thing to finish it up if age is greater than or equal to 18 print you are old enough to play and now what I wanted you to wrap this up is ask them a question do you want to play so if they're old enough to play let's ask them if they want to play and let's do that inside of here so only if they're older than 18 and they're old enough to play then I will ask them if they want to play otherwise I'm not going to so inside this if statement I'm actually going to say you know wants underscore too underscore play you can name this variable anything you want I just like to make mine descriptive and I'll say input do you want oops do you want to play now I'm doing this space here just so that when they start typing and I forgot to mention sis in the last video when they start typing I doesn't get squished right beside the text so I just add a space afterwards and it makes a little bit nicer but wants to play equals input do you want to play and now I'm gonna check if they want to play so I'm gonna say if and I watched you said wants to play equals equals yes so if what they type in is equal to yes then print let's play exclamation point so I know that was a lot let me zoom out a bit here just so we can read this a little bit easier and now let's run this program for the last time before we wrap up this video so what is your name Tim what is your age 18 hello Tim you're 18 years old you're old enough to play you want to play let's type yes and it says let's play awesome let's run this one more time what is your name Tim what is your age let's go younger than this time so let's go 17 hello Tim you're 17 years old you are not old enough to play so I hope this is starting to make sense but I'll just give you a really quick summary so we welcome the user we asked them for their name and their age we convert their age right away to a number so that we can actually compare it later on we then say hello whatever their name is you are whatever their ages years old we then check how old they are if they're older than 18 we tell them they're old enough to play and then we ask them if they want to play if they say yeah so if they type in the string yes we print and let's play otherwise we tell them they're not old enough to play and that is the very beginning of our game and I hope you can see what's kind of gonna happen here in the future right so when they want to play now what I'm gonna do is inside of here I'm gonna ask them their first question so I'm gonna say okay you know your first decision is do you want to go left or right or will make something up and we're gonna keep kind of chaining inwards and nesting if statements together just to make all these blocks with all these different decisions and you're gonna see it's gonna get pretty intricate pretty quickly but I think is pretty cool and right now you've learned almost everything you need to know to make this full game so with that being said that's gonna be this video as always I hope you guys enjoyed if you did make sure they like subscribe and I will see you in the next one