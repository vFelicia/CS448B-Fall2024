hey guys and welcome back to another Raspberry Pi video now in today's video what I'm gonna be doing is showing you how to stream data using Python sockets so purely with Python code there's nothing else that we need to install on our Raspberry Pi all we need to do is just use this Python code that I'm gonna give you guys so you can view live image data from any machine that you want and it doesn't obviously have to be that Raspberry Pi itself because let's be honest what's the point of just having our Raspberry Pi camera if we can't view it from anywhere else so to do this what you're gonna do is first of all just download the code that I have in the description now this code is written by Raspberry Pi I've done some slight modifications to it to make it work a little bit better but other than that just download that code and it's gonna have what's known as a server script and a client script now before I move too far let me show you guys how this works you can get idea of what we're about to do so I'm just gonna run the server script here which is actually on the machine that's gonna be accepting the image data and then on my Raspberry Pi here I'm gonna run the client script and wait for that to load for one second and now if we just give this client and server a second to connect you can see that we're seeing this live image data from our Raspberry Pi now it's still laying about a second and you can see that it's pretty slow in the FPS I'm gonna talk about why and how you might speed that up and all of that fun stuff in just a second so I don't want to run this anymore so I'm just gonna go to tools cancel build and now let's talk about how to set this up so first of all we're want we want to get on the machine that we're gonna be accepting the image data from so whatever computer this is and you're gonna put the server PI script on it now what we're gonna do is first of all just modify the script a little bit to work for your computer so what we're gonna do is install some Python packages and then figure out what IP address we're gonna use for this server so we're gonna start by doing pip install and now hello and the reason I'm doing this is because I need to install some Python modules that will allow this script to run and the two modules we need our pillow and matplotlib now if you already have these installed go ahead and move forward but you probably don't so go ahead and run this command in your command prompt this stands for a package installer Python I believe or Python installer packages something like that and hit enter if I do that's now I already have this satisfied so it song and do anything but for you guys you should see a little loading bar and it should install that now after this we're gonna do pip install Matt's plot lib and this is what we're gonna use to actually view the image now you can view the image however you'd like for me I found that plot lib was just the easiest so that's what I'm gonna use now once you've done that you should be good to go if you're having issues with your pip and you're getting pip is unrecognized command I'm gonna leave a card to a video in the top right hand corner right now that's gonna show you how to install pip now I know it's gonna look like the wrong video because it talks about Pi game but watch to that video and it shows you how to fix your pip now after you've done that we're gonna type ipconfig in our console here in our command prompt and it should pop up something that looks like this now what we're looking for here is our ipv4 address now this is the address or you might have an ipv6 one as well it should look something like this 192.168.1.1 five nine except this one five nine it'll be different depending on what computer you're on you might also have one that looks like 10.10 Don something what we're gonna do is just copy this address and we're gonna use this as our server address now this is if we're gonna be working on our local network which means that your Raspberry Pi is on the same network as your computer that's trying to connect to it now if you're not working on your local network what you're gonna do is go to the internet and you're gonna search my IP like that like my public IP whatever it is and I'm gonna take that value and you're gonna use that for the rest of the tutorial I'm not gonna search this because I don't want to get ddosed by you guys but go ahead search my IP address it'll give it to you and then that way you can use that as a server address so you can see that mine's already punched in here but right here we're just gonna put in the server address so where it's a server socket dump bind and that's all we need to do from this computer now time to go over to the Raspberry Pi so let's load that up now so on the Raspberry Pi we are gonna need this um what do you call it this client script that we've downloaded as well so find some way to get it over to the Raspberry Pi however you need to do that and what you're gonna paste that same address that you put on the server script into here now if you're on your local network again it should be something like this so one nine one nine two or like a 10.10 or something like that if you're on you're just like Internet in general not local network then it's gonna be some arbitrary number right so now that we've done that it's actually time to start streaming the data it's as easy as that we'll go through how the script works in a second but what you're gonna want to do is go to your main computer so one that's gonna be accepting the images and run the script now to do this you're gonna whatever editor using just run the script so for me it's controlled be gonna wait a second and you shouldn't see any output because we haven't yet connected the Raspberry Pi so this is gonna wait for a connection and just be running in the background idle until eventually we connect so if we go to a Raspberry Pi now and we run this client script so I'm just gonna click f5 to do this now you should see in about a few seconds it connects and it's ready to go so now you can see we're getting some outputs as image is verified which essentially is just telling us that this image is actually working or we're getting it through and then we can see our live feed like this now I'm gonna go through the script and explain to you how it works so you get an idea of how you can modify it and play with it by yourself but that's all you need to do to view the live feed and the great thing with this is all your image data is coming in through Python code which means you can draw things on it you can add things to it you can turn it around you do whatever you want with it rather than getting a live feed from some other kind of you know area right so what I'm gonna do essentially is just walk you guys through this so this first part here is setting up what's known as the socket now a socket is how incoming connections are gonna connect to this machine and essentially what's gonna happen and you need either you need to be on some kind of network obviously for this to work he's gonna set up a port that's looking for connections and then the other script that we have is going to connect to them now once we accept a connection we're gonna create a file object that's readable which means we're gonna look for a file and read it and the other script is actually going to write to a file now what we're gonna do here is just run a while loop that's gonna constantly grab information from this file and that information is going to be our binary image data so what we're gonna do is use this which we're going to use a struct and I'm talking about how this works to essentially unpack our information take it into our code we're gonna make sure that we're actually getting image data and if we're not so if not image data we're gonna break and get out of this while loop we're gonna turn this into bytes io which is just kind of like a streaming thing we're gonna write to this bytes IO which is like a streaming thing the stuff that we read from our connection then what we're gonna do is we're gonna seek the beginning of this stream which is this bytes iostream again I'm not going to talk about this stuff too much we're gonna open up the image that's there and then what we're gonna do is try to display this image using matplotlib and that's what this part does right here now after this we're just printing out to make sure that our image is indeed working and then finally so if we break out of this loop or something goes wrong in this try statement we're just gonna close the connection and close the server and that's how easy this service script is now now over to our Raspberry Pi so if we go to our Raspberry Pi and I'm just gonna make this fullscreen like that will read through this script now we're just gonna import all the stuff at the beginning similar as to before we're gonna set up a socket and we're going to set up the connection so again using our IP address and port 8000 that's just a default port can change that if you'd like and now we're gonna create a file object on our socket essentially but instead of reading we are going to write to it and that's what WB stands for I believe this stands for right bytes now what we're gonna do is try to open up our PI camera and this is where you're gonna set up your resolution and if you need to flip the camera which I've done using a vertical flip you can set your resolution right here so I have mine at 500 by 480 now notice that the smaller your resolution the faster your image is going to come in so if you try to set this at 1080p it's gonna take a lot longer to stream this image data to the other computer because it's essentially sending eight times the bytes at least I'm pretty sure that's what it works out too if you go to 1080p from this or something like that so anyways the smaller your resolution the faster the image you get but obviously the lowest quality now down here what we're gonna do is actually just set up a timer and what we were doing this is because we're only going to run the stream for 60 seconds now if you don't want to on the stream for a limited amount of time which is what I'm doing you can simply remove this line of code right here which says if time time start is greater than 60 and essentially what this is doing is checking to see if the stream has been running for over 60 seconds if it does it just closes it I just have that there to make sure I don't have like the stream infinitely going but again you guys can remove that if you like and change that to be whatever time you want now in here what we're doing is simply writing to a file object which is a bytes stream I'm not gonna talk about how that really works using the continuous capture from our camera and then we're just kind of doing some stuff with the stream here writing it to the connection and then again here if we get any issues we're going to close the connection and close the socket and that is essentially how this works so this is a cool way to stream image data I know that it's not super fast FPS but it's really useful because you get the actual image in Python code which is what a lot of other tutorials don't show you how to do again most of this code is right from the Raspberry Pi documentation I've just modified it slightly like only a few lines really and just kind of walked you guys through it so you understand how this works so with that being said I hope you guys enjoyed this video I hope you can start streaming your Raspberry Pi camera information and I'd be interested to know what you guys are doing with this so let me know in the comment down below