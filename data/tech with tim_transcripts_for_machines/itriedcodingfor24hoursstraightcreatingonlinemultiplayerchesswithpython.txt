so the footage you're about to watch is actually from the livestream I did while creating this project if you'd like to see any of the raw footage in the first twelve hours of me programming this with no cuts you guys can check that out in the link in the description since I was cooking an online game I needed to program the client and a server the first half of my stream was dedicated to creating the client which meant making the game of chess fully functioning and working the first hour of the stream was dedicated to setting up the project this mat determining what classes and what objects I was going to need and then I started programming and working to get the images showing up on the screen this was pretty straightforward all I had to do was resize the images and then focus on doing a dynamic placement for each of the chess pieces next I went to work on selecting and moving pieces now this was a bit more difficult as I had to determine the correct movement for all of the different chess pieces and that meant looking at the pieces around each piece and determining which spaces were a valid move and which were not you can see the valve moves marked by the little red dots that I was drawing to test out the program after about three hours I was able to select and move pieces now most of the movement for my chess pieces were working but I was still having a few issues with pieces like the Queen and the rooks the next hour was spent working on capturing pieces and adding a few other improvements to as you can see there's still quite a bit of work that need to be done the next two hours you spent debugging and improving the movement I made quite a bit of progress but we still ran into one very frustrating issue I started to take a break for movement and move on to new timers implementing the timer's was pretty straightforward all I had to do was just determine which player was moving and then subtract from that players time accordingly the next thing I did after this was trying to implement a function to check if one of the kings was in check or in checkmate this went okay but I was still having a lot of issues with this here you are about to see one of the largest issues I was running into well code in this program when moving the Queen and checking the king from a certain position who would allow the King to move into a checked position now I was having a lot of trouble figuring out why this was and eventually had to give up on the problem until one of my viewers was actually able to help me out and send me some modified code for the next hour I added a menu screen and continued to keep up it's worth noting that at this point of encoding for about seven hours with no breaks and the mind was starting to get a little bit tainted once the client was above 99% complete with only a few bugs left I decided to move on to networking I was going to look back at the client later and see if I could get a fresh perspective on some of the issues I couldn't fix after about eight hours of programming it was time to start networking now this was quite difficult as I had no experience with Linux fortunately for me centex was able to help me out by walking me through how to set up a very basic Linux server I was using sockets and threading to handle multiple connections to my server after about two hours of messing around the server and setting things up getting my dependencies going I finally was able to connect to the server and send information to and from the clients at this point in the stream I'd been programming for about 10 hours and my efficiency was starting to decrease exponentially after finally figuring out the server and setting it up properly it was time to connect my two game clients to the server this was fairly easy as I already knew how to connect things to the server but sending information was a massive headache after about two hours of trial and error I determined that the best way to send information would be to store the state of the board on the server and to send string data from the client to the server stating which move had been made and to update the board appropriately the other clients would constantly ask for information from the server and would be given the board object that would have been updated from the server the rest of the stream was spent debugging and adding features keep in mind had been programming for well over 12 hours and he was really starting to take a toll on my mind especially my efficiency hey guys I hope you enjoyed the little timelapse I put together for you guys essentially what I'm showing you right now is just the completed version of the game this is what I was able to finish within 18 hours of streaming now unfortunately YouTube does not actually save more than 12 hours of a stream so I ended up streaming for 18 hours and then I had to stop just because I was mentally exhausted I was fine to stay awake but just I really couldn't think of it anything and essentially all my productivity was just down the drain so this is what I was able to complete though fully functioning online multiplayer chess game only supports one game running at a time which means only two people can be playing so that's something I want to add in the future having multiple games running simultaneously I also want to add the ability to have what do you call it like you can add friends and you can create a chess account and I want to make this like a fullscale like kind of professional like I don't know desktop app or whatnot but I think this was pretty cool I'm pretty proud of myself being able to complete this in 18 hours that was a crazy stream I never imagined myself doing something like that but I have to say I had so much fun obviously there was some points where I ran into some issues and some troubles but once I got past that it was just a really genuinely good time I had an awesome time spending it with you guys and being able to hear your questions and just chat with you and I'll definitely be doing something like this in the future so if you guys want to see some more stuff like this some more long coding live streams maybe not 24 hours but maybe we'll do like 12 or something then make sure you guys to subscribe to the channel and you know let me know if there's something that you want to see in the future with that being said all of this code is available on github I will have that link in the description for any of you that want to play around in this project and yeah if you guys enjoyed the video please make sure you hit the like button and obviously subscribe to the channel for more awesome content