hello everybody and welcome to the first ever QA on this channel so you guys asked me so many different questions and I wanted to make sure I could answer as many as possible so what I actually did was filmed an hourlong podcast where I pretty much just answered questions the entire time so that's all my second YouTube channel called time' with tim that's where i'm posting weekly podcast episodes and some clips and fun stuff like that so definitely check that out but in here what I've done is compiled the most popular questions the ones that I thought I had the best answers to and put them in this shorter video that you guys can listen to here on my main channel tech with Tim now the other person you're gonna see in this video is my brother his name is Noah he's 17 I believe and he just asked me a bunch of questions from Twitter YouTube just so it was more of a conversational tone to the video not just me you know reading the question answering it I figured that would be better but anyways let me know what you guys think leave a comment down below and I hope you guys enjoyed this Q&A can you give us a list of coding projects to try during the quarantine okay so I'm not gonna give you list on this podcast because I literally have said coding projects so much like I get asked this is the most asked question by far on my youtube channel just anywhere like give me projects work and I need ideas I need inspiration I have like six or seven YouTube videos that are literally titled five beginner Python projects five intermediate Python projects five machine learning and AI projects five coding projects to work on during the quarantine like I have a video labeled that so uh you know you guys can go watch those and I guarantee you you will have some inspiration or some ideas for something to work on awesome alright the next question is actually one that I'm kind of curious about as well so the subscribers saying if you didn't take up coding if you didn't go into computer science what profession would you have pursued yeah so this is an interesting one I've thought about this before I would like to say something like aerospace engineering or something like that something to do with like rocket spaceships like you know studying like extraterrestrial life like getting you know like what you mom uh skis doing for example with SpaceX and all of that like that really interests me like I would love to work at that company or any you know elong company for that matter and I've just always been really interested in exploring the possibilities beyond like human life like I like talking about that stuff I like thinking about the idea of you know aliens and of making these mass engineering projects that can take us to other planets so I can say that when I was younger potentially doing something like that that's probably what I would do I don't know if I would necessarily be in school doing that I don't know if I'd be an aerospace engineer an aerospace engineering just means like designing rocket ships and stuff like that that's my basic understanding of it at least but it's something I definitely would you know want to pursue and that I do look into like I'll read physics documents one of my roommates is a physics major like we have conversations all the time because I'm just really interested in how things work why they work and exploring like space and what's not on earth and what's above us that we don't yet know about so yeah awesome all right next question comes from Miguel here it's kind of a long one how do you learn a new language or framework do you watch tutorials go through the documents or do you make a project and you google what you need like as you're going through and then he's also wondering if you're currently making any projects with all this free time that we have during the kovat situation yeah sure so um I get asked this a lot like how do I learn things cuz all clearly you know I have a domain knowledge of programming Python modules how do I actually get into them and start learning them for me uh I've kind of at the point where I'm pretty good at learning now this seems like a weird thing to say but the more you learn the more you go it on your own and teach yourself things the better you get at doing that right and you learn very quickly how do you learn and you understand the resources you should use to learn the fastest and most effective way for me what I do specifically and I'm not recommending this I'm just telling you what I do is really just skim through documentation and try things out I have somewhat of an ability maybe it's unique I don't know where I can just kind of look at things and almost immediately understand and be able to use them like I can read through the flask documentation and after reading through the flask documentation have a really good understanding of how flask works and be able to start explaining certain aspects of it so what I'll usually do because I like a 20 minute video is it not something I'm usually gonna watch unless I'm struggling with a topic is go to like blog posts documentation finds things that are brief but that explained well and just read through them and then build kind of an understanding of the topic in my own head find areas that I don't quite understand and then reinforce those so let's say I'm learning you know the kitty module I'll go to the KB documentation I'll look at first of all the examples I have I'll seek it what examples have they done using Kibby that I think I could digest I'll skim through the code I'll read through it and try to have a general overview of what the language is from there I'll try to break down k it seems like there's these different things then I'll go to the documentation page and I'll start learning the things that I want to learn so I'll say okay I probably don't care about that I don't care about that this seems useful that seems useful let's learn not read through the documentation have a Python window open on the right hand side of my screen try some different things try some things that aren't in the documentation and then from there I kind of just understand it and I kind of just know what to do but that has come with me reading you know thousands of page of pages of documentation watching tons of videos like going through so many different things under stuck the point where I know what my brain needs to learn information and I just give it that and it's hard to tell you you know advice on how to learn a new modular topic for most people it's gonna be watching a video and hearing someone explain it but for someone like me who's done that so much it's just really easy to go to some kind of textbased document skim through it really quickly pick up the information I need and you don't conceptualize that and understand the topic alright so the next one coming from YouTube as well what will you suggest to the beginners who are stuck in the tutorial hell alright so tutorial how this is a common one I think this one was uploaded quite a bit and yeah so this is a tough one so a lot of people and I'm just gonna kind of summarize what I mean by tutorial Helen what I think this person is saying is when you you can program but you can only do so when you're following along with a guide or following along with the tutorial video and what happens is you know you've been learning programming for three months but your idea of learning programming is just watching a ton tutorials copying and pasting the code and not really retaining anything just like copying stuff down so how do you get out of that is what he's asking again that's tough the way that I recommend doing that is working on projects now a lot of people get upset at me when I say this circle I don't know what to work on I'm not good enough to work on projects and that's where I say why does it matter I'm like you need to make a full scale web app no do you need to completely finish a project no the idea being start something independently and get as much done as you can and figure things out as you go you're gonna realize like you like a lot of people say well it's too overwhelming like look they think of a project and like well I don't know how to do that like and they don't even start just start literally just started that's that's my tip just start doing something you don't need to finish it you don't need to look at the project and say well I don't know how to do this this this and this look at a project that you want to complete and say I know how to do this I'm okay at that I'm not sure about this area so let's start with what I do know let's finish that aspect and then let's start looking things up and building the rest of the project from there that you don't know how to do and that's what I've personally done that's how I learned a lot of things is I learn the basics from tutorials and then I pick some project something really simple it could be tictactoe you know it doesn't need to be these massive huge projects and just start working on them and as soon as I hit a road bump I take a step back and I look up exactly what I need for that road bump learn it and then I never forget that because I've applied that to the project I've applied my learning and now you know I'm stepping out of the tutorial hell or what I'm doing is I'm taking the value and the information from that tutorial and applying it to something and that's what you need to do and if you want ideas for projects I have all kinds of videos I really have like five or six videos that just talk about Python projects to work on so please just work on projects work on something another good way you could try to do this is even working on programming problems like going to a site like leak code and trying to do easy problems that will allow you at least to start thinking cuz what you want to really train yourself to do is be able to think not just how to write the code down which is what I think a lot of people get lost with programming is a lot more about how your brain functions and tackles problems then it is about actually just typing the code out in you know a word doc you manner in an IDE or something like that so that's my tips for that awesome all right next question coming from Victor here he says hey Tim I'm a 15 year old programmer and not sure what I should do next I've been coding for half a year and I feel alright in Python and I'm wondering what I should do next some say that it's a good idea to learn C but I don't know what do you think what what did you do at that age what should I do next so this is gonna go back to something I talked about earlier do things that you find are fun do stuff that you want to do I mean like it's great to go online and to even ask me a question like that what should you do next but I think at an age like that what you really should be doing is solidifying the fundamentals and doing things that you find are fun like this is the time in your life where no one's telling you what to program you don't have any what you might but you probably don't have any like programming assignments you probably have a lot of free time so do some stuff that you like you know enjoy yourself program get into it if I just literally like killed myself doing programming questions when I was young like 1516 and was just preparing for the Microsoft interview the Google interview the whole time I probably wouldn't be programming right now or I wouldn't like it as much because it's just you know you put yourself through hell doing stuff you don't like so don't focus right now when you're 15 like it is great to think about the future and what you should learn but don't focus on like hey what language do I need to do next like how should I do this focus on doing things you enjoy so if you enjoy learning a new language or you want to get back into the journey of like being a beginner in C and you know really learning the fundamentals and understanding how I guess like a more complex language works then sure go ahead and do that but if you're someone who wants to make games if you want to experiment with AI and m/l like do that you know if you want to do web development do something like that so that's my advice to you figure out what you like and if you don't like something taste a few different things try C for a week then try JavaScript for a week and then try making a website like try all these different things that's what I did when I was your age I tried app development I tried websites I tried a I I tried games I tried literally everything until I found what I liked and that is what I would recommend to you awesome all right so next question also coming from YouTube another top comment how did you learn machine learning and neural network on your own and what are the resources that you use specifically for those yeah so that's a good question um this is hard because I've been learning this over a really long time where like in my spare time I'll just read up a little bit about neural networks or just you know understand a little bit more I started learning getting really into machine learning in like the end of grade 12 like beginning of first year and the way I learned this was fundamentally from being a good programmer because I was a good programmer the only things I need to tackle when I want to start learning those was just the math and just understanding what these things do and there's all kinds of resource online like literally what I would do is read Wikipedia articles and Wikipedia pages they discuss how a neural network operates for me I'd much rather take like a short text article I guess what Kapiti is not sure but just take some article read skim it get the valuable information and then pick specific topics from that article that I want to learn more about and research them so I can't really give you like a formal guide on like yeah this is how I learned machine learning and AI but what I did it was just took baby steps towards I said okay so what do I need to do for machine learning and AI all right here's some Python modules that do it let's check what tutorials they have on their website because that's probably a good method or a good like you know order to go in in terms of learning topics so I go to like the SK learn website and I would say all right there's like you know linear regression clustering kmeans like these different topics I would say all right let's try to learn those and then one by one I would look those topics up understand what they do from like small like articles just randomly online there's no no one centralized resource here and then as soon as I felt comfortable that I understood them I would apply the algorithm in Python use one of those modules and then move on to the next one and that's just what I did and like something like neural networks for example a complex topic that was me over a few months just casually in my spare time reading Wikipedia articles there's a long car at I have okay let's you know watch a short video on what a neural network is and how it works and over time hearing a bunch of different people talk about it and having all these different resources that I've looked at allows me to compile a really good knowledge of how these things work because I'm getting perspectives from all over the place not just one resource so I can't give you one specific resource I can't say this is the best place to learn neural networks I will say my channel has a lot of resources that should at least introduce you to them but that is how I got into and how I learn it and really how I learn anything is just casually my spare time looking at things trying to come up with myself like build a curriculum for myself on what I need to learn and then diving into that curriculum and learning topic by topic in bit by bit like little parts until I can compile all that together and understand the topic as a whole so that's yeah my how I got into that how did Microsoft hire you how did they know about you and what was the interview like sure so how did Microsoft hire you those question one okay so how did they hire me that's kind of an interesting phrased question but essentially I got an interview like somewhat through YouTube so someone through my from Microsoft actually reached out to me for an unrelated matter like they hire me for a job they just wanted to ask me a few questions about my youtube channel and my preference in terms of actually I des so why I wasn't using BS code in my videos so I responded to them eventually at the end of like a long email chain we had a really good conversation I said hey do you know any recruiters he said yeah hooked me up with one of them past the interviews and that's how I got a job at Microsoft how are the interviews the interviews were tough I won't lie the first interview I had on the phone was very easy super trivial problem even like a beginner programmer should hopefully be able to understand and explain and do the problem that I had but the onsite interviews I had so I had three of those so one phone screen and three onsite interviews we're definitely tough the first question I had was like you know a medium based question again I've talked about this a ton in other podcast as well but just like a medium programming question something you should have been prepared for it which I was which I answered pretty easily second question I had was like kind of a design question so designing minesweeper that was not a difficult problem but it was more of a design problem so it was how do you approach that how do you create the classes what is your thought process more than getting like a specific answer someone was interesting I thought I mean I did well in that interview things went well and then the last interview I had was the hardest one by far I know people say like oh you know if someone says they got a leak code hard for their interview it was actually a medium I promise you guys the question I got was a difficult question like I rank it as a leak code hard if it was on algo expert head ranked it as a very hard question I can't share it with you because the person who asked it to me has like this is their own question they've created so I can't tell you about that specific question or what it was but it was like a recursive some kind of recursive algorithm that was just very tough to implement so anyways that was how my interviews were they were stressful it was three in a row and they're each an hour so I had like you know two or three minute break between the interviews I so just imagine you know speaking and writing out code on the whiteboard for that amount of time you know gets stressful but I was well prepared did well and obviously you know I got hired so I think that answered all the questions oh yeah he actually has two more oh wow okay yeah yeah three parts so could you recommend some resources about Python not only documentation and courses but also about practice okay so resources for Python this one is always interesting because some people think I just like a library in my house and I just read like amazing crazy amounts of Python books I really don't read many books at all I've started doing that more now I understand the value behind that in terms of resources for me I've always just been someone who just went and figured stuff out like for me I learned how to make iOS ops when I was like 15 not by ever watching an iOS tutorial but by literally just booting up Xcode and then whatever I needed to do something just looking up specifically how to do that Python was similar I mean I learned that in high school through a formal class but I also just did I think it's called code Academy to learn the very basics so that's usually what I'll do is I'll watch like a tutorial series in two x speed or go through like a quick language recap or something like that just because I'm so good now at picking up languages I know the fundamentals so well that I don't need you know like a five hour course to teach me a language I just need to see the syntax and then practice it so I can't really recommend you any resources I mean like online is literally what I say just if you want to learn something just google it find resources that work well for you because it's different for everyone so I'm sorry if I can't give you more help with that but that's my way of learning things it's just going online finding resources that I find it valuable for me that aren't necessarily valuable for you and I know my style of learning really well so I can pick that out really easily but my resources are probably not gonna be the same thing that you would want to use if you were starting right from the very beginning I mean unless you're just watching like my tutorial videos or something like that