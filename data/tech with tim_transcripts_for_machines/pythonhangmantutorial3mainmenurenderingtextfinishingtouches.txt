hello everybody and welcome back to part three of the hangman PI game tutorial series in this video we're gonna be finishing up this game so we're gonna be adding of course the text to the screen that shows what letters we've guessed so far how long the word is we need to display that we're gonna handle if the user as one or if they've lost and then we'll do a few small cosmetic changes just to make this look a little bit nicer so with that being said the first thing I want to do is I want to actually implement now some kind of word that we're gonna be guessing because obviously right now all we have is a bunch of letters you can see I've been pressing them here and that's all they do we we don't have any real idea of actually making a guess the hangman guy doesn't even add any limbs or anything like that so we need to do that so let's actually get started and with our first step I'm gonna go here to game variables and I'm gonna defined the word that I want to use for this game now I will show you guys later on how we can randomly generate some words or how we can pick from a random or pick a random word from a list of words but for now let's just go with one word this will be easier and next what I'm gonna do under here is I'm gonna say guest so I'm gonna put guests like that equals a blank list now this is gonna represent what letters we've guessed so far and the reason we want to do this is because we want to keep track of what letters we've already guessed so that we can accurately display this word the idea behind this is that given a word like this right we can't just print developer on the screen what we actually need to do is we need to print something that tells us how many letters are in this word and shows us the letters we've guessed so far so really like let's say we had the letter D inside of this list then what we would want to show is we want to show D and then a bunch of underscores and that many underscores would be the rest of the letters in developer so that's what we're gonna try to show on the screen we're gonna try to space this word out first of all so it's easier to see because if you just put a bunch of underscores combined you don't know how many letters that is obviously right and then from there the user will be able to see what the word is and how many letters they've guessed so far so hopefully that makes sense but regardless we have these two variables let's define them you can make this word whatever you want by the way it doesn't matter just make sure it's all capitals and we'll go down here into our draw loop and I'll make a comment I'm gonna say draw word and we're gonna set up a for loop and start drawing some words so the first thing I'm going to say is display underscore word equals a blank string we're gonna be building a string here so essentially this is what's going to store our translation of this word developer into what it should really be displayed on the screen alright so display word equals blank string we're gonna say for letter in word so we can actually loop through all of the letters in this word so every loop they'll be a different character that will be stored in letter and what we're gonna do is we're gonna check if that letter is inside of guest so essentially have we guessed this letter yet if we have let's display it otherwise let's not so if letter in and let's see if it gives me gas here so if letter in guest then what we'll do is we'll say display word plus equals and we'll put the letters will say letter plus and then a space the reason we're doing a space and let me bring this out here sorry is because the next letter that we draw we want it to be spaced out by one so we're just gonna attack on that space at the end so that when we build this string let's say that first one it was D then it would go D and it would be a space afterwards okay anyway so if that's not true so if the letter is not in guest if we haven't guessed it yet then we're not going to display it so what we're gonna say is display word plus equals and we're actually gonna do underscore space so here same thing again we tack on that space at the end but instead of actually putting a letter we'll just put an underscore as kind of a blank like we don't know what this is yet because we haven't guessed it and then finally all we need to do is actually render this word and display it on the screen so I actually want to see what font I'm using for this I think we're just gonna use letter font actually let me see here one second guys I'm actually gonna go ahead and make a new font story so let's go to font here and let's call this word underscore font and it's actually gonna be the exact same as this except it's just gonna have a different size so I'm gonna make this a bit bigger I'm gonna make that 60 just so it shows up a little bit more all right so now we're gonna go down here and we're gonna say text ya Texas fine equals word fonts dot render and then inside of here we're gonna render the display word antialiasing 1 and then what color do we want to render this with well this is gonna be black like that all right so now we have this rendered and now all we need to do is actually draw this text on the screen so we're gonna say wind up blitz we're gonna say text and we need to pick where this is gonna go now we're just gonna hard code this position because it's not super important that it's like perfectly Center in fact it won't be perfectly Center so I'm gonna put this out 400 200 now keep in mind that if you have a word that's really long you might need to shrink your font size a little bit so this is where we have to be careful this could technically go off the screen if our word was really long but for our word here it shouldn't be a problem so in fact with that if we finished that what I think we can do is refresh now and we should be able to see this actually popping up on the screen once this loads up and perfect you see that we can actually see this showing up right here so we have all the underscores there's a little space between them so we can actually differentiate how many characters are in this word and now what we need to do is make it so when we actually press one of these letters it gets added into the guest letter so that this updates in fact let me just show you before we even do that let's go to guest and let's put just the character D inside of there and let's rerun this and let's see what this looks like and there you go D is showing up and let's go ahead and add the character e into guest letters and keep in mind it doesn't actually have to be an order doesn't matter where they are so we can actually just add D like that let's see what this looks like now and perfect it's showing us all of the ease so we're confident this is working and now all we need to do is add those guest letters into this guest list so we're gonna go down here and I'm gonna go to where were we checking collision right down here so this is you know we collided if this if statement is true so inside of here now what I'm gonna do is simply append this letter into the guess letters so we're gonna say guests like that dot append and here we will simply put ltr' which will actually be the character the letter that we're looking at in this collision loop so hopefully you remember that from before so now let's actually run this and so I didn't mean to exit out of full screen and you'll see that when I press on these buttons it actually activates for the word and it works pretty nicely so let's let's look here all right so let's go deep and look D shows up when I actually press that let me try V boom shows up when I press that P shows up l that's oh that is in the word M that's not in the word so it doesn't show up so there we go that is the basics to actually getting this to show up so let's just see what happens now if I actually put all of the correct letters in here where's the R boom we can see the entire word so awesome so that's working now we need to check what happens when we actually have made the entire word and we also need to check if we click on a wrong letter we need to add 1 to this hangman guy right so he gets another lip so first of all let's go to where we have hangman status and let's change this back to 0 or 1 or actually let's see is 0 an option here I think it was let's just run this one more time and see what zero looks like awesome yeah so no limbs and now what we want to do is make it so that if we guess an incorrect letter we increase this so to do that we're gonna go down here and what guessed letter dot append that's totally fine we'll leave that here and we'll say if LTR in word that's as easy as it is or actually sorry if LTR not in word so essentially if we guess the letter that is not in the word it's pretty straightforward to read then all we'll do is we'll say hangman status plus equals 1 there we go and this should do the job so now it's how to run one more time and let's see what happens when we guess a letter that is not in the word all right so let me guess F and boom we can see that now the hangman guy has limbs added to him when we guess one that is not in the word but if we guess a valid letter it doesn't get at it and that is all that's necessary to actually now have this game pretty much be functioning I mean if you think of it now this game is actually fully functioning except for the fact that we need to handle it when we win and and we lose so to handle this is actually pretty straightforward what we're gonna do is inside of this while loop here so outside of this massive four loop which by the way we usually don't want to have this many levels of indentation but for our game it's pretty simple it's pretty small so I'm okay with doing that what we're gonna do outside of this for loop now is check if the user won so to check if the user one is actually pretty straightforward all we have to do is see if all of the letters in guest letters are in the ER sorry if all of the letters in our word are in the guest letters if that's true then we won the game so what we're gonna do is we're simply gonna go here we're gonna say four letter in word if letter not in word then what we're gonna do is I'm gonna set a variable up here that says 1 equals true and if the letters not in word then we're gonna say 1 equals false and we're going to break now oops I did this wrong sorry letter not in guest not word and what this is saying essentially is that we have this boolean variable called one we're gonna loop through all of the letters in our word and we're gonna see if this letter is not in the guest letters if it's not in the guest letters we're gonna set one equal to false and we're gonna break out of this for loop so the break keyword simply says wherever we are in this loop just immediately exit so just go down to the end of the 4th that's what it says and that's as straightforward as it is right because what will happen here is that if this never happened so if we loop through every letter in our word and all of these letters are actually in guest then one will never be set to fall so it will stay true so then all we have to do here is say if one like that and then we can do whatever we want to do in this case I'm just gonna print one now won't change this so we do something else but this is as easy as it is to check if we actually want it's not the most efficient way to do this there is better code that we can write but for our purposes this is totally fine I'm not worried about making the most efficient program in the world we just want something that functions and this does the job so there we go alright so now that we have that the next thing I want to do is check if we lost so this is actually really easy all we have to do is simply say if hangman status equals equals and I believe the maximum status is 6 so when you have full limbs I think that yeah I think 6 is correct if you have full limbs and that means you lost that that's pretty much it if you get to the point where you have all your hangman limbs filled up then you lost so that's all we need to do an inside of here will actually display some stuff and we'll draw things on the screen but for now let's just see if this actually works and if we get those print statements triggering so let's run this here and let's see if we can win and if we can lose all right so de let's go for the win first so de VL o P and where are we looking is there E oh I just need the are awesome and boom it just prints one a bunch of times right and that's as easy as it is now of course when we win we don't want to just keep constantly printing that we want to reset the game or do something like that so I'm gonna start by just putting a break here and what this is gonna do is just jump us out of this while loop which essentially will just quit the game now of course that's not what we want right now but putting a break inside of here is a decent start and you'll see why in a second so now let's just make sure that the loss is working before we go too far and I do have that break statement so now it should only actually print out one time so let's move that and let's just click a bunch of letters here and see if we can lose and there we go boom we just lost right it just quit the screen and you can see it printed lost okay so now let's actually pop up some text on the screen and let the user know what happened rather than just immediately quitting the game so what we're gonna do is we are going to go in here and we are simply going to render some font in the middle of the screen that says hey you lost or hey you want or whatever it was so to do this I'm simply gonna say text equals and then well I guess we'll do word font which is one we've already defined it's out render and we'll say u1 exclamation point and then that's gonna be one we'll put that in the color black and all we'll do now is just draw this on the screen so we'll simply say win blitz texts then we're gonna put this right in the middle of the screen do we remember how to do that well the equation we've used is width minus text dot get underscore width over two so I believe this is actually with over two yeah so this should be with / sorry text get underscore width / I think that's right if I'm not messing this up and then that's gonna be height over two text dot gets underscore height over 2 again could have made a mistake here and this should be sorry a comma not a period but that should display it on the screen and then all I'm gonna do is save my game dot display is not popping up okay by game dot display dot update so that updates the screen and actually before we do all of this the first thing I'm gonna do is I'm gonna say when dot fill and we're gonna fill this simply with the color white so we just override everything that was on the screen and then we draw this font on the screen and we update the display and finally what we do is we delay so we're gonna say pygame dot time dot delay I think this is how you do it yeah pygame got time delay we'll see if that's correct and I'm gonna delay for three seconds so what pygame time delay does is essentially tell us hey just don't do anything for three seconds which means we'll see this text on the screen for three seconds so let's see if this works I could have messed something up here with the syntax but let's give it a shot okay so let me go and it looks like I didn't mess anything up at least I think we'll see and let's see if we can win here so dvl Oh are we need like that and we need a P where is the P awesome and then it displays you one for three seconds and wait and then it quits the game so you one works fine so all we need to do is to pretty much copy this code for you lose right now what I'm actually gonna do is since this is gonna be pretty much the exact same for you lost I'm gonna put this into a function now I've been trying to avoid using too many functions just because this is a beginner series and I don't want to go too far into complicated things but I think this will be easy enough that we can pick it up and we have enough time to explain it so I'm going to say define Display underscore message so essentially let's show whatever message is the parameter message so I'm just gonna paste all this into this function and don't worry I'll explain what this is doing in a second but you should hopefully see right away why this is pretty valuable to do so what I'm gonna do is replace u1 here with message which I've put inside of this function as what's known as a parameter so let me do that first and let me explain what this does so this is a function and essentially what this means is we can reuse this multiple times so just like we've been calling draw a bunch of times from within our while loop because every time the while loop runs we call it draw we're gonna do the same thing with display message whenever we win or whenever we lose now message what I'm doing here is essentially saying that every time when I call this function I need to pass some value for message now in this case we're gonna pass a string and what I'm gonna do if I call display message is I'm going to do display message and I'm gonna actually put whatever I want to display so if I put u1 then what will happen if we put this in all capitals here is that message will be equal to u1 so when we come into this function and we render font we're gonna render the message which is you want and then let's say we call this another time and we change this text to say you've lost then in that instance it will render you lost and it will just do the same thing that's what I'm trying to get out here with that function so this is known as a parameter and we pass a value to the function that this parameter will hold and you can think of it as a variable like message will be equal to whatever we pass in okay so now that we understand that what I'm gonna do is go inside of if one here and simply type display message and then inside of here I'm just gonna put you one exclamation point now let's copy this and let's go down to you lost and let's just change the message to say you lost so now it will do the exact same thing in one and lost except we'll just display a different message so that immediately cleans all this code up so nicely it means that we can reuse this without having to keep copying and pasting all of this code all over the program and that's one of the reasons I made this draw function2 is just to keep everything kind of contained in where it's actually happening right because if we took all this code out of the function and we just put it inside of this main while loop you can see it's gonna start getting really messy really quickly and there's gonna be a lot of clutter just everywhere so let's run this and let's see if this is working all right so de let's actually try to lose here see if that works and you lost there we go now what we can do if we'd like as well is before we go ahead and start drawing over the entire screen maybe we'll delay for about one second so that the user can actually see what happened so let's do that let's go up into display message where if I can find this function let's take our PI game time delay let's delay for one second so if I didn't mention this this is milliseconds inside of here so if you put 1000 that's one second so that's the easiest way to determine if you wanted to do like a bunch of seconds or a few minutes just multiplied a thousand by however many I guess minutes or sorry seconds that you want to do this for so now we have a onesecond delay which means we'll wait one second before we draw all of this stuff and that should be working fine now the next thing that I want to do is actually display a kind of title font at the top that says something and then we'll talk about actually randomly changing this word which is pretty easy to do so the first thing I'm gonna do is make a title font I'm gonna say title underscore font equals and we're gonna copy this and I'm just gonna make it ten bigger so I'm gonna make it 70 now inside of my draw we'll just always draw some kind of title that says something in my case I'm gonna draw a developer hangman but you're welcome to draw whatever you want so I'm gonna say draw title I'm gonna say text equals and in this case we're gonna say title font dot render I'm gonna say developer hangman we're gonna go one and we're gonna go with the color black like that and then to draw this we're gonna say win da bullet text and we need to put this in some location I want this to be centered so I'm gonna do the same thing with the X that I usually do so I'm going to say width over two minus texts get underscore width over two and then for the height I want it to be really close to the top of the screen so I'm just gonna make it at 20 pixels and we can modify this height if we find it's too lower it's too hot so that's all we need to do to draw the title so let's have a look at what the title looks like now and apologize if I'm going quickly but we have covered a lot of this stuff now so I think it's okay to kind of skip through it a little bit so let's look at this and now we see developer hangman immediately in my opinion this looks a lot nicer already we have our word and then you can go ahead and we can see that all this is functioning and let's see what happens if we lose and it says boom you lost there you go so that is the basics of this game now of course there's a few other things we can add what I will do now is show you how we can randomly select words this is actually really easy to do all we have to do is make a list called words and just put in whatever words you want in all capitals so I'm just gonna say hello I'm gonna say Python I'm gonna say hi game notice that I called it developer hangman so actually let's do hello world or something like that actually we haven't really implemented it so we can do words with spaces I don't know if we'll have enough time to do that so I'm just gonna ignore the spaces for now so rather than hello world of gold Python Pi game let's do IDE let's do rapid IT because that's the platform that we're working on so let's just go rep lit like that and I think that should be good for now so all we have to do actually if we want to randomly select one of the words from this word list every time we boot the program is go up to the top in our imports we're going to import a module called random and you're gonna see how really easy this is to actually do so we have the random module now let's go to where a word is defined so I believe that's right here and rather than having developer what I'll do is I'll say words are sorry random dot choice words and all this does is it randomly selects one of the words from the words list and just puts it into the word variable so that's what random dot choice does is it looks at a list and it just randomly selects one element from it so now let's run this and see what word we get once have a look and well it's only three words or three letters sorry so I believe that's probably gonna be IDE and there we go we won now I'm realizing that there's a small bug and that when we actually press the you one thing we don't get to see the last letter show up so what I'm gonna do is I'm actually gonna take this you won and you lost and I'm gonna put it this is actually a decent question here that what we should do hmm because I don't want to display the idea that I'm getting at sorry guys if I'm just mumbling here is that I want to actually see what happens before we just show you know you want are you lost cuz right now it just kind of skips actually showing that last letter and I would like to be able to see that so the way that we're gonna have to do that is to make sure that we actually redraw the screen again before we display this message so that we can actually see what's changed so what I'm gonna do is before I display the messages here I'm actually just gonna take this draw loop and I'm going to put it below this for loop so I mean I leave the for loop up here but right here I'm gonna put drop the reason for this is now when we click on something we will update the screen immediately and then we will do this so we will actually be able to see the change rather than drawing first and then waiting till the next loop to update so hopefully that makes sense but let's run it now and see if this looks much better all right so now we got a different word again random I don't know what this one is let's guess some letters II actually don't remember what I put for all of the words here let's go eh okay um let's go T no you so let's just try to lose here then and notice oh gee worked there okay let's go okay and then we see the last limb and then we lost so now this is working properly all right so the last thing to really discuss is how we can make it so that when we lose it doesn't just quit the game we can restart the game now unfortunately this is a little bit more difficult than I would like and it kind of requires you asking like do you want to play the game setting up a main menu so what I'm gonna do is kind of leave this as a challenge for you guys if you want to this out yourself but I will give you a kind of some hints the first thing you're gonna want to likely do is put this while loop here into its own function so you're gonna want to do this something like define main like that you know take all of this code put it into a function you're gonna take this PI game quit and leave it actually at the end of the program and right before this you're gonna call me so now if I actually do this everything should will work fine except some of these variables here that you see I will need to put inside of this loops and I like FPS clock we're gonna have to take those that we define there and define them inside of this function so again this is optional you guys don't have to do this we pretty much finished the game I just want to show you how we can go ahead and do this now again something like this this hangman status notice how I'm getting a red squiggly and is saying oh you don't have access to that now this isn't the best way to do this but for games it's fine we can use what's known as the global keyword this isn't best practice but it's totally fine for this game and we just write global hangman status and now what this allows us to do is treat this variable like a global variable and be able to access it from within this loop that's what that lets us do and you'll actually notice that now that I've put this inside of a function I add a global and I added my three variables in here I can press run and let's see what happens and everything works as it normally would work and there's nothing wrong so we successfully just translated this into a function now the reason I'm saying this is because what you can do is you can make a while loop outside of here and you can say well true run at this main loop now what this essentially will do is just keep running this while loop infinitely and the only way you'll be able to quit is actually if you completely quit the Python program so what I usually like to do is inside of this while loop I like to put something that says would you like to play and wait for them to press any button on their mouse and you we've seen how to do that you can do a four event loop in here so you as a four event in PI game event get just like we've done inside of here you can copy that into here you can see if they press anything on their mouse and then you can go ahead and actually run this main function which will start the game now after you run that main function though what you'll need to do is reset a few variables so you're gonna have to repack for example the hangman status you're gonna have to choose another word and you're gonna have to reset this guest variable list so this isn't the easiest thing in the world to do but it's definitely very doable and that's why I'm kind of leaving as a challenge because I don't want to go through doing all of it right now but hopefully that gives you enough of an idea to the point where if you want to do this you can so last thing I'm gonna do is just zoom all the way out here and show you guys kind of all this code or show you most of it just by slowly scrolling through so if you need to see anything again you can see all of it here but that has pretty much been at for this hangman Pi game tutorial series we've got a fully functioning hangman game I think it works pretty well you can customize that however you like you can make longer words bigger words you can change the color of the buttons and hopefully I've taught you guys enough about Pi game that you feel confident to go out and make your own little games so with that being said that has been the end of this series if you did enjoy please do make sure you leave a like subscribe to the channel and of course let me know what else you want to see in future videos in the comments down below