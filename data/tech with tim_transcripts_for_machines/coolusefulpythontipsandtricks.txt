hey guys and welcome back to another YouTube video in today's video I'm doing kind of a part two to my tips and tricks video that I did about a week ago and I'm gonna be showing you some more advanced tips and tricks that you can use in Python again just to reiterate these are mostly specific to Python and you cannot use these in other programming languages although that being said these will save you a lot of time so make sure you stick around and watch all of them as I guarantee at least one or two of them you will find extremely useful on for something that's in your use case a lot of this stuff is for more advanced programmers that being said still stick around if you're a beginner because you'll probably learn a little bit and see some new tricks but you might not see the use case for it unless you rights may be more advanced programs to say okay so let's get started I'm just gonna copy out I have another file open just to save us a bit of time here I have two lists a and B now the problem we want to solve here is we want to find the intersection between a and B so like what elements are the same in each of the lists now we could go through a for loop we can check every element here with every element in here but that takes too long I don't want to write a for loop so let's use this trick so first of all we're gonna use something called a set and a set is just it's kind like a list just a different type of list in a way in Python that has some cool methods for it and one of the methods it has is intersection so you don't need to import anything all you have to type is set a so whatever the first set is and then dot intersection with on any other iterable item so for example a list a dictionary another set those are all things you can put in this intersection parameter here so if I run the program you can see we get three and a and those are the common items between the set that's really useful and then if you wanted to you could convert this into a list do whatever you want with it okay so the next one I'm just gonna again copy another list to save a some time like this and I have this thing called import itertools which is a really useful module in Python I'm going to be doing some tutorials on that later on it allows you to just implement some cool things and save you a lot of time so what I want to do is I want you to get a new list that has all these elements in it and I want to look something like this like that okay now if you know how to do this you know that this is a little bit difficult you could write like a recursive algorithm to do this you could do it with four loops but it is a little bit difficult and you if you throw something like this in there it could make it a bit harder as well so let's go ahead and just use this trick so I'm gonna say new a is equal to list I'm just going to convert this into a list so we can see it in our tools dot chain dot from underscore kitchen oops so you spell it it's a rouble okay and then I can simply print to the screen new way now this is something I might want to write down because it's probably hard to remember but you're importing inner tools and you're gonna go do chained dog from iterable and all this is gonna do is simply break this list into one list so I'll show you it gives me 1 2 3 4 5 6 I didn't have to write a bunch of for loops or anything like that just to note if I did do something like this and I put like a 7 so an on interval item in this main list that's gonna crash our program so it has to be consistent in terms of that working I hope that makes sense you guys can play around with it if you want to learn more about it okay this one is really useful if you're coding like problems I want to say like programming problems as well at the time they're gonna ask you to like the first integer is gonna be how many inputs you're about to receive and then there's gonna be spaced by one and then you're gonna you're gonna want to break that into lists so for example like it's gonna tell you that in the console you're gonna have it be expected like 20 input separated by commas and you want to put that into a list or something like that so this will just do it for you you'll see you how exactly works once I started typing it in here and if you don't know how any of these functions and stuff work that I'm using currently I have tutorials on my channel that are advanced or intermediate Python programming tutorials and they kind of go through all this more indepth because I'm just going to skim right now I'm showing you how you more use it rather than how it works okay so pretty much what this does is it's gonna get input so us typing in the console and it's gonna split it so by space so we're gonna space things out and then what is simply gonna do is convert that into an integer and then it's gonna put it into a list and return that value so typically the way that you do this did you use a for loop and then you'd convert things into integers and then you append them into a list this just makes it a lot easier so now it's gonna ask me a type stuff in so did one for sixty seven eight nine zero like that and then you could see I get a list of all of these elements and I just separated each of them by space so it knew it was a new element if you want to have them separated by like a comma I change the split to a comma you can do something like one two three four and then I get again one two three four in a list form okay so let's just comment these okes I don't have to type that in every time that I run the next ones okay this one's really useful as well it's gonna be using swing called collections so from collections import counter like this okay should I create a new list say my list is equal to 1 2 3 4 and I'm simply gonna print countering my list I'll just show you what this does and then we'll kind of go through it so pretty much what it does is it's gonna give you a dictionary of a key value pair so for example in my list I have the element 1 it occurs one time my list I have the element to it occurs one time in my list I have a home in 3 occurs one time four so on again if I do something like this I'm just add a bunch of floors in here just to show you how this works then you can see now I have four it occurs four times one and actually orders them by most occurrences as it goes to the list which is really useful so rather than if you wanted to count all of like the A's and all of the B's and all the C's in a list you could use a for loop you can say if element equals a add one to the very odd one to the list or the dictionary a this just does it all for you using this handy little thing called counter which I'm be doing some tutorials on on my channel later because it is really useful how this little counter thing works and again you have to import counter from collections which is a built in module in Python you don't have to install anything ok this next one is really cool too so I'm just gonna make two more lists here 4 5 6 and this is the zip function so I'll show you how it works in terms of a for look and not kind of go through it more depth than just a second so pretty much what this sketch is gonna do is it's gonna combine our two lists together and I just gotta finish typing this and then I can come talk about it ok so what does zip function is gonna do is it's going to allow us to sum these two elements or each element of the list together just a lot easier so what zip actually does is it takes as many iterative items that you want so like a list a tuple a dictionary is set and then it's gonna combined elements together so it's gonna give and it's gonna return a tuple that looks something like this 1 4 and then it's gonna return another 2 book the next time we go through it and it's gonna give me something like 2 5 and then we'll give me another one and I'll give me 3 and 6 so when I say for I J in zip a B what its first doing is it's giving me 1 and 4 and then it's giving me 2 and 5 then it's giving me 3 and 6 so I is gonna be assigned to 1 J is gonna be assigned to 4 and then I can add those up so you might be able to see the use case for this if you program a lot and you can see how exactly how it works so I have my 1 in 4 equals 5 my 2 and 5 equals 7 3 and 6 equals 9 and this is really useful to use especially in a for loop because you can combine multiple things together and I could even if I wanted to if I had like a I'll just stay a I could say a oops 1 like this so I would get the first element and then I would get the rest of the list like that and you can do things like that with the zip function kind of play around with it and you can figure out exactly how they work so I'm just gonna delete this now because I don't want to have it running all the time ok so this is my last one and this one is probably the coolest one I saved it for last for that reason so I'm gonna make a list here it has a bunch of word tonight you can see a few of them repeat Tim hello hi so on and what I want to do is I want to count the most occurrences of a word so which word occurs the most in my list so again you could go the long route through it you could figure out all the unique words in the list and then you could count them and organize them and then sort them and see which one appears that most but what if I asked you I want to see like ranked which ones occur the most well then you'd say you can use the counter but what if I say I want to see the top two names that appear in list then you would use the method that I'm about to show you down make a new variable called words duck count is equal to our counter which I showed just above words and that means a top underscore three because I or in this case we'll do two I guess because I was using that before words underscore count dot most underscore common two and so sprint top three to the screen or top to the screen okay so this reads pretty well just like English it does exactly kind of what you would think it does so we have a variable called words count it's gonna get the count of all of the different words here in our list and I already went through that how that works and then now we want the top two words in our list so we're gonna use this count which is I believe a set or a dictionary you could check that if I wanted to in fact let's check this to see what type it actually is the type of words underscore the count it might be its own type we'll see it actually has a method on it called most common which is extremely useful and you probably don't see this in any other programming language and then you just put how many of the most common elements you want so in this case I want to so we're gonna print to the screen okay so it is its own type class collection and it's gonna give me Tim which occurs three times and high which occurs two times so not only does it just tell me the ones that occur the most it actually tells me how many times they occur which is really useful on information that you might so let's just do most common for which I believe is how many different words actually have and we say Tim hi hello goodbye and I believe for these ones since I've put four and there's other words that occur just one time like cool it's just gonna give me the ones that occurred first in the list it's kind of intuitive like that's how you'd think it works I do most common one then it just gives me a list and it's just as Tim which occurs three times like that anyways that has been it for this tips and tricks video I hope you guys learned something and you can apply some of the stuff that I showed in here to some of your programs if you ever forget any of this stuff just come back to the video and have a look at it I'm actually gonna post a link in the description which is like a paste bin thing that has like a little document a little Python document that has all this stuff in here that I've been coding so that you guys can just copy and paste it into your own program you don't have to worry about memorizing anything anyways that's been it for this video make sure you guys leave a like and subscribe and I will see you again in the next one