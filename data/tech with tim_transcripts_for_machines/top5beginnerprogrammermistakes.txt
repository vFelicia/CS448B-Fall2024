so it's no secret that learning to code is something that's quite difficult a lot of people have trouble with it they give up they can't get far enough into it to find it interesting and it's just something that a lot of people are trying to get into nowadays but can't get past those beginner levels now what I'm gonna do in this video is talk to you about the top 5 beginner programming mistakes I see and how you can stop making those mistakes and continue learning to code and keep that motivation I know it's really hard when you're getting stuck you can't move past something you don't know what to learn next and you run into the mistakes that I'm gonna talk about here so if you can avoid those you're gonna become a better developer just by learning more about coding and hopefully get past some of these obstacles that maybe are holding you back so with that being said let's go ahead and get into the top 5 beginner programming mistakes after a quick word from our sponsor I need to thank simply learned for sponsoring this video and introduce you to their full stack Java developer master program which is designed to feed a master both front and backend Java technologies simply learns blended learning model brings classroom learning experience online with its worldclass LMS it combines instructorled training selfpaced learning and personalized mentoring to provide an immersive learning experience with over 350 hours of indepth training you learn basic and advanced web development while using frameworks and tools like angular spring boot hibernate and MVC you'll also learn how to use JavaScript jQuery and nodejs to make beautiful and interactive websites if you need any help along the way you can enroll in live classes that are offered multiple days a week for each section of this course to master the over 30 indemand skills taught in this course you'll also work through 4 major projects where you'll build entire full stack applications start your journey becoming a master of Java technologies in the web development today by hitting the link in the description all right so let me start by give me a little bit of background in some context into myself so you understand where I'm getting some of this information from so my name is Tim I'm 19 most of you know that I'm actually a fulltime student and I've been teaching coding since I was 15 years old so I started programming myself when I was 12 but when I was 15 I was working on a summer camp summer camp as a stem program coordinator I worked there for three years and I was in charge of running a coding specialty that focused on teaching fundamental Python Pro gramming two kids aged 10 to 15 years old I've also been teaching coding on this YouTube channel for the past two or three years I've taught hundreds of thousands of people basic Python programming as well as advanced concepts and let's just say you know I talk to a lot of beginner Python programmers I've done private tutoring I just I have a wealth of kind of knowledge and expertise especially in teaching beginner concepts in programming so with that being said let's get into mistake number one the first and probably the most important mistake I see people making all the time is memorizing and not understanding now what I mean by that is when you learn something new the tendency for a lot of courses a lot of people they're in traditional education programs is just to memorize something just to think of how they can replicate it on a test replicate it in some environment and not truly understand exactly why something works now when programming as you'll notice as you get more advanced into it it really is so just conceptually important to understand exactly what you're doing and why it works what you're doing rather than just memorizing snippets of code and pasting things in I see this so commonly with beginners that they'll take for example X a piece of code that I wrote right and they'll just paste it in some random part in their program and they know what it does they know the input and the output but they don't understand or have any idea why now why this becomes an issue is because when something goes wrong or this code does not perform the way you expected you have absolutely no idea how to fix it why it works or even what the heck is going on so you need to as a beginner really be focusing on especially as a beginner why something works and understanding every single component to some piece of code or to some tutorial or whatever it is that you're learning before you go ahead and use that or move on now it is okay sometimes to use a little piece of code if you don't fully understand why it's working but for fundamental things like understanding a for loop understanding if statements prints strings things like that that are fundamental to a programming language you need to understand why they work exactly and not memorize it whatsoever programming has absolutely zero memorization to it what ends up happening is you will just memorizing those topics because you understand them so well and you've used them enough times so a lot a very common mistake is people try to memorize syntax they try to memorize specific algorithms or pieces of code you don't want to memorize something you want to understand why it works because if you have that you have the understanding you can very easily replicate that in whatever way that may be right so really focus on understanding something and not memorizing something that's the mistake I see so commonly people copying pasting things and that really just hinders your learning and doesn't let you go anywhere so mistake number two is closely related to mistake number one and this is do not skip the fundamentals or I guess the mistake version of that would be skipping the fundamentals so the common mistake that I see is people decide to jump into the deep end before they learn how to swim that's the analogy I like to give you for example jumping into machine learning after learning coding for two weeks that is an example of skipping the fundamentals in my opinion it should take you a month to maybe three months to really nail if you're a brand new programmer the fundamentals of programming and what I mean by that is understanding how to solve very basic problems understanding for loops if you know conditions the basic fundamental concepts that apply in almost every programming language you need to know before you start getting into these more complex specific domains now that's my opinion but this is a huge mistake I see and what discourages a lot of people from getting into program they do like a weak course on code Academy of Python they don't really understand half of the stuff that's been taught there they've just copied and pasted code and they're like well I learned the Python programming language let's go ahead and try to build you know the next Google a I like or deepmind or whatever it's called no no no please do not do that if you really want to get good at programming if you really want to excel and this is gonna speed up your process I guarantee you make sure you nail the fundamentals like you do so much fundamental programming solving really basic problems working on a few mini projects on the side making sure you understand all these concepts that are built into the standard language you're learning before you go ahead and start working with frameworks and and more advanced things that assume you have this understanding it literally is like what I described at the beginning you cannot jump into the deep end of the pool if you don't know how to swim if you do you're just gonna freak out and try to get out as fast as possible and that's what happens with a lot of beginners you know they want to get into programming because they hear the salaries or they hear you know what cool stuff you can do with AI or they want to make 3d games and make a bunch of money but they don't want to put in the work to learn the fundamentals and by the time they get to the stuff that's interesting they can't do it because they don't have that fundamental knowledge so you know go ahead and suffer through which I don't really consider suffering maysun some may suffer through those beginning maybe more boring things because if you really truly understand what they are you will be able to learn any other programming you know concept topic whatever it is that you want because you'll have that really strong foundation already built so this next mistake is a big one and it is not having fun now it's unfortunate but I see so often with beginner programmers especially those that are my age that are students they just get stuck in this hole where what they do is they just like slave away every day learning new programming topics you know like every day they just want to be as efficient as possible and just learn something new and make sure they're learning and doing the most practical things possible and you know they're not wasting time making stupid games they're working on things they're gonna put on that resume and that they want to show or put on the App Store and you know that's great I'm not judging those kind of people but I can tell you that this gets old fast and you want to make sure that when you're starting programming at least you're working on things that to you are enjoyable like say there's some stupid game that you know no one likes but you really enjoyed and you want to try to recreate it or make some small version of it or something like that do that it doesn't matter if it's not practical it doesn't matter if someone else is gonna you know look at your code and be like what is that do stuff that you enjoy programming is fun and to really get good at programming I honestly believe you need to enjoy what you're doing I don't know how you can sit for like two or three days in a row and just grind do the same thing and learn new concepts unless you really thoroughly enjoy doing that you should at least take some time each day to do some programming that you enjoy right if you're gonna be learning program every day I don't know what your schedule is but the idea here is just make sure you enjoy what you're doing because you don't want your passion to fade away from programming such an amazing field because you're just slaving away and trying to do the most practical things possible and this applies to I feel every aspect of life you know you don't want to suck yourself into a career where you're just there because you just want to get the job and you want to get the paycheck at the end of the day you want to be doing something that you thoroughly enjoy so make sure that when you're learning to code especially you know you're taking that time you're taking a few days maybe a weekend to work on things that you enjoy to keep your passion for this amazing field programming alive right that's how I've been able to program for so long since I was 12 years old and it hasn't got tiring yet because I take the time to do things that aren't that practical but that I find really cool and that I enjoy and I work on those projects that you know some people may consider a waste of time because they're not going on my resume but for me that's just another way to practice coding in an environment doing something that I enjoy so keep that in mind you want to have fun the best way to become a better programmer is to work on all kinds of projects that you enjoy and just you know keep that passion alive for something that I'm sure most people enjoy when they start and then as they get into it more and more you know that passion fades when they're just grinding and slaving away and not doing the enjoyable fun programming things that they want to do so the next mistake you're gonna want to avoid is getting stuck in what I call tutorial hell now what I mean by this is you're someone who every day when they wake up you know they really want to learn coding they're getting into it they're beginner but all they do is watch tutorial coding YouTube videos or watch tutorial videos or go through a course they don't ever do anything on their own now I understand it's overwhelming you know to jump into your own big projects and start working on it when you're a beginner but what you really need to be doing is at least applying the skills that you're learning from these tutorial videos on your own you cannot just have everyday someone holding your hand and walking you through different code concepts because even for me I can watch really advanced math lectures or really advanced topics and yeah that makes a lot of sense like that's cool I totally get what he's doing but then as soon as I get given the same problem and I don't have that video as a reference I'm lost I have no idea what to do is all I've actually done is understood what someone else has done I haven't applied that in my own way right like you can't go to a math exam after just watching all the lectures unless you know you're some nextlevel genius which I'm sure some of you guys are out there without having ever actually done a practice math question right and that's the idea here is that tutorial videos are great great don't get me wrong I make a ton them I literally make a living from supplying tutorial videos online but you want to make sure that after you've launched a few after you have a general understanding you try to apply that on your own because that's when you're gonna realize the gaps in your knowledge and you're gonna be able to learn a lot more you know use selfregulating yourself and saying hey you know I actually don't understand how to do this maybe I should go back and watch it again or maybe I should slowly reference some of these documentation pages and try to really nail this topic down by myself that's gonna help you a ton and as a beginner you need to make sure you're doing that you cannot be stuck in tutorial Hell where you've done six months of learning coding but all that has been is really just watching other people code on a screen it's a lot different when you're on your own and there's not someone holding your hand so this last mistake is probably the biggest reason I see people get discouraged easily or quick coding and that is comparing yourselves to others it is almost never fair to compare yourself in your current skill level to someone else because everyone has a different story everyone has a different journey everyone is different IQ levels and Nate abilities you cannot as a programmer especially a beginner look at someone that's Jewish like look at me who's 19 for example you cannot compare yourself to other people and say well he knows it I can't figure it out I guess I'm just not good at coding I'm gonna stop and that's what I see so often especially on my videos a lot of people will comment and say man you make me feel like crap because you're 19 and you're better than me and I'm 22 I'm like dude you cannot compare yourself to me I am a very completely different person than you are you know not many people learn coding for fun when they're 12 years old so please do yourself a favor and do not compare yourself to other programmers to other people everyone is different this applies to almost everything and the last thing you want to be doing is getting discouraged because you know you were classmate who picked up coding two months later than you is now better than you maybe he did more work maybe he's just naturally smarter right there's just you cannot do that everyone has their different abilities their different skill level and you cannot let yourself get discouraged by comparing yourself to others chances are you're better at something than someone else chances are someone looks up to you for some specific reason because you are better at a specific topic everyone has their skills their strengths and their weaknesses and the best thing you can do for yourself is be selfaware and understand what level you're at and what you need to do to get better so please do not watch other people programs don't look at peers friends other people and compare yourself to them that is the easiest way to just get discouraged get sad get upset and think your progress is not as good as it should be trust me the best thing to do is be selfaware understand what you need to work on and focus solely on yourself not comparing yourself to other people now obviously there's some exceptions here don't get me wrong but a general rule of thumb especially for you guys that are beginners they probably aren't jumping into the job market just yet that's the last thing you want to do is be comparing yourself to others especially those that are better than you because that's just an instant source of demotivation and that's the last thing you need when you're starting again to programming and really starting to get good and into the intermediate levels so with that being said that has been the five biggest programming mistakes I see from beginners do you guys agree with these mistakes is there any other mistakes you see from beginner programmers maybe yourself if you have any questions any comments please do leave them down below and with that being said that has been this video so if you guys enjoyed make sure you leave a like subscribe to the channel and I will see you guys in another YouTube video