hello and welcome so in this video I'm gonna be talking about hash maps or like Java Maps the reason I say it like that is because there's a few different implementations of maps similar as to how there's different implementations of lists and like array lists and all that stuff so Maps if you're coming from Python like me you can think of them as dictionaries and I'm gonna be talking about three different types of maps so a hash map a tree map and what was the last one I got it written down here linked hash map sorry just forgot about that one so pretty much a map is known as a key value pair in any other languages they're typically called dictionaries or hash tables or hash maps or whatnot okay so to create a map and I'm just gonna do this and then we'll talk about exactly what it does I'm just gonna create a map M it's gonna equal two new hash map like this okay and this is your simple syntax now too you have to import this so I'm just gonna import java.util so just by clicking on it and we have to import map as well so we'll import the map there so you see it'll it's all coming up now for us okay so now that we have that I want to talk about exactly what a map is now a map like I said is a key value pair meaning that it's similar to like a list in an array in the sense that you can index things but instead of indexing them by numbers you index them by keys now keys can be anything that you want a key could be a string a key could be an array actually I'm not sure if it could be an array but it could be a string it could be a number it can be a char it can be a float what like pretty much wherever you want can be the key and that key links us to a value so the easiest way to kind of demonstrate this is just to do it and then to talk about what's really happening so to put a new value into a hash map or into a map what you do is you have to specify eight key and a value so you type whatever the name of your map is in this case m dot put and then you need to put a key and a value so in this case for my key I'm gonna type Tim and it is gonna lead to they value five so I typed Tim and then the value is five so I put that in there and now I'll just show you what it looks like if we print this out to the screen because I think it will give us a decent representation system DUP what am I saying system.out.println sir he has a little tired today and we will print em and see what we get so in this case you can say we haz see this so curly braces says Tim is equal to five meaning that if we're to index Tim we get the value 5 now how do we do that so how do we actually get a value based on a key the way we can do this is if you put square brackets next to your map actually you can't do like that this probably thought we have to MDOT and then get sorry I'm still used to the Python syntax here guys we type M dot gets okay and then we put the key in here so in this case I'm gonna put Tim as my key and well you should already be predicting what we're gonna get out to the screen in this case we get the value five and not is because the key Tim leads us to the value five now to put another thing into our map we can do this right so we do Tim we could do like Joe and Joe doesn't have to point to a number they could point to another string and that string could be like I don't know X okay and we can just do whatever we want like we can have the the key one and or the key 11 and the key 11 points to nine nine nine okay and now if I just print em out you'll see that we don't get any issues and that this works fine we get Joe equals x Tim equals five eleven equals nine nine nine okay now this is an extremely fast data set meaning or data type whatever you want to call it meaning that everything from adding to removing to overriding to getting happens in constant time now again like I talked to it in my sets video you don't really have to understand what that means but if you do that's great and just know that this does happen in constant time now I'm gonna show a I just will show the tree map and the what was the other map it talked about linked hash map first and then we can kind of talk about the differences between them so with a hash map as opposed to the other type of Maps I'm going to show you this one does not retain an order so all of these maps can only contain unique elements or unique keys meaning that if I try to add another key so I try to add a lot I try to add this to be 998 instead of adding another key that's equal to 11 we're simply overriding this already existing key that is 11 so in this case you can see that we overwrite it and we get 998 you cannot have two of the same keys existing in the map but you can have two of the same values if you'd like to okay so sorry that kind of got me off track but that was important to understand so this hash map does not guarantee the order in which we add things in so you can see that I added Timman then I had a Joe and then I added 11 and it's showing me Joe Tim and 11 now this is not any kind of sorted order because how do we sort numbers and strings and all that stuff together it's not in the order that we added it in so what order is it in well it is in no order and that is why this hash map is extremely fast because it does not keep track of the order of elements when they go in so just know that if you're trying to like look through the map because you can iterate through maps and I'm gonna show you that in a second it doesn't keep it in the correct order okay now the next map that were going to talk about is the tree map okay now this tree map is what we're gonna have imported of course is similar to the tree list or the tree set or whatever one I showed you in the other video in that when we add things in it's actually gonna keep it in a sorted order so if I run this I'm actually curious to see what kind of sort we're gonna get okay so we don't get anything so that's that's actually a good area to run into whenever we're using a tree map the types that we add to the map have to be the same meaning that the keys have to be the same data type at least I'm pretty sure so I'm just gonna see if I remove this if this is gonna work for us yes so in that case we do get in a sorted order we get Joe and then we get Tim because obviously J is before T and that's what it's gonna sort strings so if I try to put like an a value in here so it's yeah it's even sure I need key value I'll literally just put like a is equal to B and I guess we can't set equal we have to say comma ah what's our air semicolon I always forget in those aren't I okay so we run this there we go so you see we get a first because obviously a will its first letter in the alphabet so that's going to show up before Jo and before Tim so that sorts the order for us and that means that the data types for the keys that we pass in have to be the same so we could use numbers we can use strings using whatever diets hope you want their shop to be completely the same for that map now the other type is a linked hash map and what this does is it's similar to a list in that it keeps the same order that you add things into it so in this case if I print out m you can see we get Tim Jo and then a and that's because it's actually gonna maintain the order in which we added elements so it's gonna say Tim that was first element so that's gonna be the first thing that we show and then Jo that's gonna be the first thing and then a or a second and then a this is gonna be the third thing because that's the order in which we added them in and those are the only main differences other than like the speed of which these things run out that you have to kind of understand right now okay and typically whenever you do anything you're just gonna be using a hash map you don't really need like a linked hash map or a tree hash map or tree map whatever it's called for any of the stuff that we're gonna be doing right now so what I'm gonna do now is I'm just gonna show you a few methods how we can kind of clear the maps how we can like remove elements and some useful things you might want to do so what we can do to get all of the key value so to get like a certain key value we can say actually I'll just show this one first what we can actually do is just cool things that are gonna be really useful to you and dot contains value so this isn't C this method contains values not available for type map hmm interesting match contains value object yeah so we just have to put some in there okay so m dot contains value and then in here we're just gonna put like any value on so in this case B so what this is gonna do is it is actually going to check for us if this value exists in map and remember the values are always these second elements here and they are linked up or like attached to the key so it's gonna tell us if B exists now we can do the same thing with keys and the keys are more useful and I'll show you why in a second contains key in this case for the key I could put like contains the key five right and that will give us a true or false value similar to what we're doing with sets and lists in the video okay now the recent keys are more useful is because if I try to do something like and don't get and I put the key let's say five well the key five does not exist the value five exists but the key five does not exist so watch what happens when I run the program em not get five actually let's just see what this is printing out to us because I'm curious if this is gonna crash for us or not let's let's see here I'm not getting five no yeah so this isn't gonna actually crash for us if we try to get a what do you call it a key that does not exist in the map but it's gonna return us a null value because this key does not exist in the map that's actually interesting I didn't know that in Python if you try to get a key from map or from a dictionary and it doesn't exist you actually get an error so that's interesting to know anyways I guess another method I could show is let's see here don't values so what this is gonna do is it actually just prints out all of the values in the map so if I copy this and I simply print it down here we get M values and in this case it'll just give me X B and five which are all these and you can see it gives me that in no particular order it's important to remember values let's see if there's any other ones we can use we can use clear so I just got a text document beside because I always forget all these to show you I always forget which ones so m dot clear obviously this is just gonna remove everything from the what you call it the map so we get an empty map and I believe the last one is is empty and this one like that's is simply just gonna tell us if the map is empty or if it's not empty now how much time we have ten minutes so I actually I am NOT going to show you an example of using these maps but if you want to think about this and maybe try programming this yourself using the maps that I just showed you be good exercise and that is given a string or like an array of characters count all of those characters into a map so have a key that's equal to let's say the letter and then the value for that key is equal to the how many times that letter occurs or how many times that character occurs and try to do that yourself and if you're able to accomplish that well then you're definitely learning and you're understanding the stuff that I'm explaining so anyways that's been it for this video if you guys enjoyed please make sure you leave a like and subscribe and I will see you again in the next one