hey guys and welcome back to another Java programming tutorial so in today's video we are going to be introducing objectoriented programming and talking about what objects are and getting a little bit into classes and methods so I think the first thing to really talk about is what is an object so an object essentially is just an instance of a certain data type so we know we have data types like in strings bulls scanners like all kinds of different things that we can use like a ray list hash table hash list whatever a hash map all that stuff okay and those are all known as data types right where classes if you want to say that so whenever we create an instance by doing something like this like scanner SC equals new scanner essentially what we're doing is pointing this variable SC to an ER object okay and whenever we create any kind of variable selectors type like int x equals 5 we're essentially saying X is equal to an int object of value 5 okay and these objects are what allow us to have different properties for different data types so you know how we can add integers together or how we can do like dot parse int on on strings and we can have like a bunch of different methods and stuff those are all specific to the type of object that we're using so for example we can see here I have the scanner object right so SC is equal to a new scanner object this taking system not in as an argument okay so we can only use this dot next method on SC because it is a scanner type if I try to do X dot next and I do a little semicolon here you can see that we're getting can't invoke next method on primitive type int because well that method doesn't exist for int okay and that's like a really basic way to kind of understand what objects are essentially whenever we're creating a new variable so like even just doing like string like STR equals hello what we're doing is we're saying well STR is actually equal to a string object with the value alone and because our based on the different types of objects we have different properties different attributes things we can do with the methods we can call and that's just kind of important under you'll see more how we create like objects and whatnot that are specific to like classes that we're gonna make in later videos okay so it'll all start to come together but just now kind of know that when I'm calling things objects essentially that's like you have a variable of a certain type and it's equal to something you're creating an object of that type okay that's all we can have to understand for now so now let's talk about methods so some of you may already understand what methods are because I think I went through a very brief like explanation of them in previous videos but essentially methods or anything that you call on an object or on an instance of an object so just to clarify when instances when were creating a variable like this of a new scanner object we can say that we're creating FC is now an object like a scanner object or we can say SC is a new instance of scanner of like the type of scanner and those kind of are interchangeable so if I say instance instead of object they're very similar okay so just bear with me on that so anyways when we call this daunt next method we call it on the lake variable right so that's that's pointing to our scanner object so our scanner object allows us to use this method again I showed you before if I tried to call that on for example the variable X that was like an integer that doesn't work because that object doesn't have that method associated with it so a method is anything really that's just like a dot and then whatever the method name is and typically brackets for example if we had like an array like say we have or let's do actually a string so we're just gonna take another string probably shouldn't delete uno these but that's okay we'll say string H equals hello and I can do something like H dot length and this is a method that simply returns to us the length of the string and again this works on our object which is a string but it's not going to work on our SC because well what is the length of a scanner so if I type that you can see that we're getting this red line here and that's obviously not giving us anything because this length method is not defined for a scanner type so that's kind of a bit about like how we call methods and you guys have already seen a lot of different examples of methods that we can use on different objects and different data types okay and same thing when I say like data types an object data types are kind of like what the object is created off of and you'll see that more in in future videos just want to clarify in case anyone's kind of confused okay so how can we create our own methods well currently since we don't really know anything about classes we're gonna be creating methods inside of this main class okay now this main class is special because it is it contains this method and remember I was telling you guys at the beginning this method automatically runs whenever we run the program well that's different than other methods we're gonna have in classes we create in future videos so it's a bit hard to explain this method per se but this is a method because a method is typically anything that sits inside of a class and the class is what's going to define like our data types so scanner in Java we can't see it right now there's actually somewhere that says public class scanner and inside of that scanner class so if you do like brackets like this it has a ton of different methods a ton of different attributes that we can use by calling them from within this function okay so if we want to create our own method within this main class what we can do and this is just the default way that we're gonna do it for now I'm gonna show you why we use certain keywords and stuff in future videos but it's a bit advanced right now we're something n type public static okay and then whatever return type we want which we'll talk about in a second so let's get I'm gonna do void and then the name of our method so in this case I'm going to say hey like Tim okay so we have a public static void tim has zero parameters again talk about that in a second and then it's gonna do something in here in this case I'm just gonna say system dot out dot println and we'll just say when you call it it just says Tim like that okay so what I've essentially done here is create a static method that we can call from anywhere within this class okay and actually outside of the class as well so what we need to do to call this method from inside this class is we can literally just type the method names in this case my type Tim and I put a semicolon like that and we around the program you see that we get is it running one second here sorry okay so I figured out why it wasn't working because we had this scx coming in here so I'm just gonna comment that out for right now and we will run this one more time and you can see that we get Tim to the screen now I know I didn't really explain what this is or how this worked but essentially what I've done here is I've created kind of like a function okay and it's known as a method but in other programming languages you might see this as a function and this void keyword what this means here is it returns nothing okay because in functions we can actually return values which I'm going to show or sorry functions methods we can return values which I'm going to show you in just a second so this stands for we are going to not return anything we're just gonna do something in here so in this case we're just printing something to the screen all right now we have Tim and this is the name of our method and that's what we call here to trigger this to run right so if I wanted to pass some information to Tim so say I wanted to print whatever string I passed to Tim well what I would do in here is I would type string and then let's just say STR like that and now this means that whenever we call this Tim method we have to actually pass it one piece of information and that piece of information has to be a string okay so I'm gonna show you right here so I type STR put 10 and I put 10 in here like this okay and we run the program now we see we're printing out Tim if I change this like with a bunch of MS you can see if we run this we're getting Tim now the way that this works is this is called a parameter so STR is a parameter of type string and that means that whenever we call this function we have to type in arguments and what arguments are is what the parameter is going to be when we get to the the method so anything that goes in here in the call statement which is what this is known as we're we're like triggering the method to run is known as an argument okay so Tim is an argument when we call this what's happening is we're passing Tim as STR so now it's saying like STR equals Tim like the head or whatever the string is okay and then we're simply going to print to the screen whatever it is that we were passed so in this case Tim right now we can actually do multiple parameters as well so if I wanted to do another parameter I wanted to pass two pieces of information every time we call this function I would say maybe int and X okay and now it means that I have to pass not only a string but I have to pass an int so that means we have to type an integer here in this case I'm gonna do for what I'm gonna do now you're going to say four and we'll say int I and we'll say I is less than X I will say I plus plus we're just going to print this that many times okay so let's see here boom okay so system dot out dot print line what's we're begin here initialized variable I've got to do that sorry okay so now we pass an int and we pass a string and what we're going to do is simply print this as many times as like the int that we typed in okay so you can see that now we get ten four times to the screen and that's how that works so we have arguments in here the two arguments are Tim and four and then we have our parameters which are STR and X and when we pass our information and STR gets equal to Tim and X gets equal to four okay and then in here we can now use those values by referencing STR and X like I've done so okay so I hope that makes sense now in terms of this public static I'm gonna talk about this in the next video for right now all this means is that you can call this not on an instance of the class which is kind of what we're doing here when we're just calling Tim okay because we don't have any object that's like a class main which you'll see in the next video okay so that's kind of how we can create our own methods again we can create methods that return things so that's what I wanted to talk about now so all I'm gonna do is when you create another method and I'm gonna say this is public static and in this case I want to return an integer value to whoever's calling this okay or wherever this is being called so I'm gonna type int because this is what I'm gonna return and the function is gonna give back to us and the methods gonna give back to us and I'm gonna say add two as the name and we're simply going to take an integer X as our one parameter here see what the issue is here method must return yeah okay so you can see is already giving us a red line saying that we have to return a value in this method because we typed in the fact that we were going to turn an int okay that's what I'm gonna do here is I'm simply going to turn X plus 2 and what this is doing now semicolon is it's just taking a value X and it's adding to do it and it's returning the value to our program wherever we call it so let's just do something up here and show you how this is working so I'm going to say system dot out dot println and here I'm something I'm type add 2 and then give it a number in this case 6 now you can probably guess what this is going to give us but essentially what's happening here is we're calling add 2 we're giving it the value 6 so our argument is 6 it's coming in here and the parameter X is now set equal to 6 we're going to return so back to wherever we called this X plus 2 in this case 8 so we get 8 here as a value and we go boom and we bring it up here and now this little line is equal to 8 so we're gonna print it to the screen and you can see that we get 8 as a value like that now obviously in methods like this you're probably gonna do some more advanced things than just adding to that shows you how we can return values and I'll do one last example of returning maybe like a string down here so public static string okay and we'll just say STR as their name because I don't really know what to do and we'll take a string X ok and then in here we have to return a string value so what we could do is we could return X plus and an exclamation point but I think I need to put that in double quotation marks like that so what we're doing now is we're adding an exclamation point to the end of our string and we're returning that so if I call STR here okay so we'll I don't know why keeps doing with my brackets we'll do STR and then inside our brackets we'll give it hi it should return to us high with an exclamation point and indeed it does and yeah that's kind of how methods work basically and in our the next video we're gonna be talking about classes and creating our own kind of data types and moving forward and that's we're gonna continue be doing with the rest of the tutorial series so if you guys enjoyed the video it helped you out please make sure you leave a like and subscribe and I will see you in the next one