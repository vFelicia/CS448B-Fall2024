hey guys welcome back to another Kibby tutorial so in today's video we're gonna be going through something called float layout now float layout is really nice layout as it's meant kind of before better dynamically sized screens and and widgets and layouts and whatnot so the grid layout was nice but there was a few issues with that in terms of resize ability and things might overlap and I'm sure you guys might have found them if you were playing with them so a float layout is really a better layout to use if you're gonna be making this it's gonna run on all different kind of operating systems especially like phones and like Android apps and iPhone apps and whatnot float l√©o it's probably a bit better to use so you can see I've actually deleted everything essentially other than kind of the main aspect of our program made my kv files now empty and we're just gonna get we're going to start right from the beginning and just kind of mess around with float layout so what we need to do when we use float layout is obviously import that's will do qbw x dot float layout and then import float layout now instead of creating a class and doing all that that we did last time let's just return a new flow layout and then that's actually all we need to do from within our Python script and we can move over to our kv file which will be what we're working with for the rest of the video so you can see that right we created a new float layout and that's we're returning if you remember in the last videos I'd had something like this like widgets okay now this is actually what's known as a parent tag now I didn't mention on the last video but this is what it's known as and this is the the parent to whatever any of these properties are gonna be down here right so for example when we assign maybe the size to widgets that means that the entire all of those widgets got resized to fit inside of our container or anything that we put inside of here like a button was applied it was added to our widgets class right so what we're gonna do here is instead of using widgets we can use the like the actual widget that we want to to use or to add to or whatnot so in this case I can literally just type float layout and this means now that whenever I create anything in here it will apply to not only this float layout but any float layout that I create in this program so if for some reason I had like a float layout inside of a float layout everything in that float layout would have the same properties as what's gonna be in this tag and you guys will see that in just a second so what I'm gonna do in here let me create two buttons will do this really basically I'm just gonna make one button that says attacked with and then if you guys can guess what the other button is gonna say if you did not guess it is gonna say Tim all right so tech with and then Tim now this is great but I want to show you what else we can do so just like I created this kind of parent tag for a float layout I can create a parent tag for something like a button so you'll see you guys will see more how this works if you're confused in just a second so button and what I'm gonna do in here is I'm gonna do something like font size and we'll just 840 and I'll do color and this would be the text color and color is actually in something called RGB a yeah RGB a so red green blue alpha now what this means is that your text properties I believe have to be between the value of negative 1 and 1 someone correct me if I'm wrong on that but I believe it's negative 1 and 1 or 0 and 1 pretty sure negative 101 though so if I want to create like I don't know what this text is gonna give me you'd have to look it up to figure out what these colors actually are I'm just gonna do 0.3 0.6 and 0.7 and then I'll just put one as my alpha value because I want this to actually show up now alpha is a little bit different than opacity but I'm not gonna talk about the differences right now okay so anyways this is what we do now since we define these two properties here in button what this means is since this is the parent tag for button all other buttons will have these properties so for example this this button will have a font size of 40 and a color of this and this button will have that as well if I added any other buttons they would as well gain those properties and have access to those properties okay so let's run this now and let's just see what we're actually getting on the screen okay so we're getting a button that fills the entire screen you can see obviously it has a different color now this is obviously not ideal but this is working in terms of what we did so let's close this and let's talk about now how we can actually change the position and the size of these buttons so when we're using float layout the nice thing about it is allows us obviously use dynamic placement so rather than doing something we might have done in previous videos would be like pause and then we give it an XY so maybe like 40 50 we can't do that but what we should do is use something called position underscore hint now what this means is this kind of it's funny how the way they actually we're did it here hinting at what the position will be so this has six what he called keys then you notice that I put these because it's actually it's a dictionary it has the key X Y not width and height it has top bottom so bottom and then it has left and right as well okay so left and right like so okay so XY top bottom left right now these kinda don't work how you might assume you might think you put like actual number here like X and it's like 50 um no all of these actually take values between 0 & 1 and you can kind of think of it as like the degree of maybe X or the degree of Y or how much talk miss you have or how much bottom this you have and we'll talk about how we do this but let's actually let's get rid of a few these tags I just want to use X and top for right now so we'll do X and we'll just retype top and it's better just to show an example so for X again between 0 & 1 so let's think about it for a second if I wanted to move my button to the right and this value is between 0 & 1 what is the value I'd probably use to move it right well if we know and I don't know if I've actually talked about it the coordinate system in KB starts at the bottom lefthand corner of the screen which means that 0 0 is the bottom left so this is different from a lot of programming languages where the 0 0 is the top lefthand corner right so if I want to move to the right and 0 is the left then I would have to add to the X so I'm gonna do 0.5 here which stands for 50% X which means that I'm going to move 50% to the right which should essentially have me so I'm the bottom left of my button is in the middle of the screen okay so now for top so I want this to be at the very top so again if we're seeing zr0 is at the bottom what would we do to make it go up to the top well we need to add that yvalue so I'm gonna put one here and the reason this is gonna work is because the way that the top property works is actually references the what do you call it the top left of our object because for example if I made this one you would think that the bottom lefthand corner of our button would go above the screen that means we wouldn't be able to see the button right but no the way top works is it references the top of our button which is actually nice which allows us just to do one to make go up to the top of the screen so let's just mess with this for now let's run this and I forgot to do this one second so the reason we're still seeing both of them is because I haven't defined a size for our buttons and because I didn't define a size it means they just take up the entire container so what we need to do is need to define the size now a similar thing for size we can do something called sock size pause Wow okay size hint I don't know what I just typed there just completely ignore that size underscore hint and then here we're going to have not a dictionary we're gonna have two values between 0 & 1 which is you're gonna stand for the width and the height and again this is gonna be like relatives like a percentage so if I wanted them to be for example 0.3 so 30% width and let's say 50% height this is what I would do and let's just run this and see if we actually if I did this correctly and now you can see that indeed we're getting a well with that 0.3 so 30% of whatever the container it's in so these buttons beside each other would take up 60% of this entire float layout I hope that makes sense and you can see that now our button tech width has moved to start out 50% of the X right and then at the top it's it's all the way at the top so now just notice right away that if I start resizing this window that everything is moving and changing sizes as well and you'll notice that even though the text is getting cut off because of the font size none of these buttons are staying exactly where they are they're not overlapping and this is why we want to use something like a float layout okay so we can do stuff like that so you already can see the major advantage to it so the Sun you do the size hint right so the percentages position hands same thing obviously we can mess with position hit for this other button but what I want to do is talk about how we can actually change properties of the button based on a state so our button has I believe three states and I think one of the states is like normal so like meeting it's just it just they're like it's not being clicked and I believe I have to look actually the other one the other state would be down one of them I think there's another one which is like hover or click or whatnot so down is gonna mean that we're clicking on the button so if we wanted to for example change the text this button when we're clicking on it well what we can actually do is we can do that from within here so let's do it with this Tim button and let's say text is Tim if okay when I say if and then what actually to do is sorry set an ID here something I say ID BTN okay and I say if BTN dot state equals equals normal okay and then what I'm going to say is I'm gonna say Alice and then I'll define the text I want it to be in this case we saved out okay so if it is not in the normal state it's in any other state we're gonna change the text down so now watch what happens so Tim button right here okay so I'm hovering nothing is happening watch what happens when I click you can see that I'm holding down the mouse by the way right now it goes to down it might be hard to see because of the color but it does indeed change now we can use this kind of property to do anything we want for example I can say let's do background color okay and this is gonna be like 0.3 0.4 0.4 actually let's try that point five one if BTN state equals equals normal okay if I type normal correctly so now let's watch what happens UFO person unexpected okay maybe we can't do that unless I have to do something like this like these brackets let's see no okay so we actually can't do that but you see what I mean in terms of the text how we can change that property so maybe colors but different we have to do that from inside of our witty code our actual logic but if I change the background color you can see that our background there is indeed changing and obviously when I click on it now it's a little easier to see that it says down so ignore what I just did but essentially you guys get the point now I'll show you quickly how we can we'll just mess around with this a bit kind of show exactly how all this works so for example if you wanted to make R and you know what let's do it with this one so let's do pause underscore hint okay and we'll just do Y and let's give this a Y of like let's say 30% okay and let's just see what this does now so now we give this a y of 30% you can see that now Tim has moved up on the screen 30% now notice that the Y right again it's working from the bottom left so we're gonna draw here 30% where some people might say well this looks like we're drawing from the top left or what not okay so just notice how that works so essentially this is a float layout you can see how nice we can resize things and kind of play with them and they just dynamically change for us and yeah so in the next video where I think I'm going to go through getting touch input will mess with flow a little bit more make like a nicer looking GUI but for now that's gonna be it if you guys enjoyed the video please make sure you like and subscribe and I will see you again in another video