hello everybody and welcome to another youtube video so in today's video i'm going to show you how to get past some common problems and issues when you're using selenium now a while ago i made a selenium tutorial series i probably made this about a year and a half ago i'll leave a link to it in the description but what selenium is is a framework that allows you to automate your browser so you can automatically click on things you can download things you can scrape stuff off of websites you can just automate pretty much any task you can make a bot that buys you you know a new shirt or a pair of sneakers or whatever it is that you would normally do as a human in the browser you can automate that with selenium however a lot of websites have advanced security and they can detect when you're using selenium and a lot of you left comments on that series saying that you couldn't get past certain fields or forms or you were running into errors where you were being detected as a bot so in this video i'm going to show you how to get past that and how you can use selenium without the websites knowing that you are a bot and without being limited in specific features so we'll get into that in a second but i first want to give you a demo of this problem actually happening so i have a regular selenium script in front of me you can see i'm importing all my webdriver stuff and what this script actually does is it opens up alibaba and it tries to sign in and then actually search for a product and buy it however you're going to see that when i try to sign in here it actually doesn't let me because it says that my device is a bot or it's not a recognized machine or something along those lines so let me go ahead and run the code here and show you the error that we're going to get so let's run let me just make this full screen so we can see it and now watch what's going to happen so my code is going to automatically close the popup it's going to click the join button it's going to try to sign in with google and then as soon as i try to sign in here it's going to tell me that this browser or app may not be secure so it says try using a different browser if you're already using a supported browser you can try again to sign in so i'm not able to get past this google signin because this can actually detect that i am using selenium and using a bot so in this video i'm going to show you how to get past this specifically but what i'm going to show you how to do should work for any other bot detection security and allow you really to use selenium freely without any restrictions so with that said let's go ahead and get started all right so to be able to get past these restrictions with selenium what we're gonna do is use a piece of software called camellio now camilo is the sponsor of this video but what this platform allows you to do is actually spoof and change your browser fingerprint change your ip address by using something like a proxy and essentially hide the fact that you are a bot and make it appear as though you are a real human user interacting with the website it's a really awesome platform i'm going to show you all of the features in it in a second but essentially what this means is that you can use selenium the exact same way you would have before there's just a few setup steps beforehand where you're going to create a camellio browser instance and you're going to use that to actually interact with the website rather than the regular chrome driver or firefox driver or whatever driver you would have used again all this is going to do is change the browser fingerprint and allow you to kind of change your location language all of that kind of stuff such that you can interact with a website without the website knowing that you are a bot or that you are using selenium so the first thing that we're going to have to do here is we're going to have to make an account on camellia now camellio is paid software i already have a paid account with them but if you want to get access to the software for free then what you can do is just reach out to them i'll leave a link to their website in the description you can request a free trial and if you say that you came from my video then they should give you a free trial and you'll be able to access the platform for a few days or whatever it is that they end up giving you anyways you can do that to try it out before you actually have to pay for anything so what we're going to do is make an account of course i already have an account and once you sign in then what you can do is just go to downloads so i'm going to go to downloads here and then what we want to do is install the camilo installer now camellia works for all kinds of other things as well this isn't just for selenium and you'll note here that they have a mobile installer as well we're not going to deal with that in this video we just want the desktop installer so this is for windows i'm going to click on the download link it's going to download i'm going to run through the installer and then i will have camellio installed now i already have it installed on my computer so i'm just going to open up the program and then we'll go from there all right so i've just opened the camellio application now the way that i've opened this is i've just ran through the installer i've then just typed in camellio ran the app signed into my account and then i was brought to a page that looked like this this is their graphical user interface now inside of here you can actually create browser instances you can create things known as profiles and this allows you to actually open up the browser manually go through and use the browser from say a different location or from a different device or operating system well i'm going to kind of talk to you about how all this stuff works so every time that you go to a website you're going to have a fingerprint associated with your browser now this fingerprint is just data about the machine that you're on the operating system that you're using the browser that you have open your ip address your location your time zone all of this type of stuff now the reason why this fingerprint is going to be kind of passed on to the website is because it needs to know what location you're from mostly what language you're speaking all of these other things so we can actually verify if it wants to allow you to go on the website right so there's a ton of different websites that just don't let you browse them if you're from a different country or maybe they're blocked into certain regions you guys know what i'm talking about for example like us netflix has a lot more movies and shows than canadian netflix does and you can't access us netflix unless you are in the us now how do you think it knows you're in the u.s well it uses your browser fingerprint anyways here in camellio you can change that fingerprint so you can make it look like you're browsing from a different country you can give yourself a different ip address by connecting to a proxy and you can very easily switch between different browser profiles that you set up yourself so say right now you want to connect from like mexico to a website you can do that and then very easily you can load another profile and connect from say the united states or some other random country so for now let's set up a camellio profile look at kind of how that works and how we just use the browser manually and then we'll connect it with selenium so from this interface here i'm just going to click on new profile and what this is going to allow me to do is set up a camellio profile by selecting a device operating system browser and language so for now i want to have a desktop device not a mobile device for the operating system i'm just going to go with windows and then for the browser i'm going to go with chrome of course you can do edge and firefox as well and then for the language i want this to be english okay so we can see we have desktop win32 windows 10 chrome 95 english so i'm going to select this there should be a ton of different options here that you can go through all right so now i'm brought to this page where i can configure some settings for my profile now of course you guys can read through these they're pretty straightforward but you can change things like the time zone the geo location you can connect to a proxy and actually that's what we're going to do right now so whenever you're using camellio you should really be connecting to a proxy this is going to allow you to actually hide your geolocation if you don't connect to a proxy you're going to be using your regular ip address and so websites will actually know that you are from a certain part of the world now this is still not going to be able to detect that you are a bot because camellia will change the fingerprint of the browser but you do need to connect to a proxy if you want to change where you're showing up from so what region in the world you're browsing from so what i'm going to do is go to http here in proxy and now i'm going to show you how we can actually set up a proxy and then use that inside of here when we're connecting or creating a profile with camellia so the proxy that i want to use for this video is actually called bright data where it's from bright data which is a website that i'm going to go to now and start talking about all right so i'm here on the bright data website now this is simply a proxy provider they have all different types of proxies from data center proxies isp proxies residential proxies rotating proxies whatever you can imagine they probably have on here anyways this is paid as well but you can sign up for a free trial and get access to five or ten dollars in free credit if you want to follow along with this video anyways i'll leave a link to the description and what you're going to have to do is make an account sign up for the free trial get the credit and then what you can do is go to your user dashboard so i'm going to go to my user dashboard here the first thing i want to do is just go to proxies and just show you the different options and talk about which one we're going to use so we have mobile shared residential shared data center shared isp regular isp and then unblocked now i won't go through them in detail but what we're going to use here is just the shared residential proxy now what this is a rotating proxy that actually uses a real ip address from a real device so this means you really cannot get banned because you're actually using a legitimate device the only issue you might have here is that other people could be using this ip address as well that's why it's shared anyways the residential is probably the one that you want to use it's also relatively cheap however you could use a data center proxy an isp proxy mobile proxy really depends on your use case and you can read all about the different use cases for these right on the bright data website anyways i want to use the shared residential proxy so what i'm going to do is go here to api and integrations go to proxy and web unlocker api and then what i want to do is select the shared residential proxy right here now first i just have to click on other software you can use these proxies from you know shell node java all the other options they have but since we're going to be plugging this into camellio we just hit other software okay so we're going to go shared residential now what we need to do is pick a country and we want to make sure this country is going to match with the country we chose for the profile of our camellio profile so i'm going to go united states for the destination site you can leave this but it doesn't really matter i'm just going to make it empty and then for an example i mean getting started is fine you could use something else but we're just going to leave getting started and for root we don't need to actually select anything so really just select the type of proxy and then the exit node country and what it's going to do is actually give you all the information you need right here so it says this is the proxy this is the port this is the user and this is the password now what this proxy address will actually do is give you the rotating proxy which means your ip address will change every so often based on usage and a bunch of other factors that i really am not qualified to talk about anyways point is we now have our login information so we're going to use this right inside of camellia okay so i've just split the screen here so we can see all the information as well as the camillo ui so what i want to do is go to where it says proxy hit on http and then for the ip or host name i'm just going to copy this right here okay so i'm going to copy this in for the port we will use this port and then for authentication we're going to check this we're going to put in our username as well as our password so let's go username password like this okay paste and then hit test proxy now when we do that we should see that we get proxy works successfully loaded blah blah blah anyways that means we are good to go so what i'm going to do here is just check on ok and now we have connected the proxy to this profile okay so now our profile is created and we can go ahead and start it so i'm going to click on the start button and we're going to see this should open the chrome browser for us and i'm just going to show you that i'm actually located in the united states here i mean like the proxies united states my actual location is canada so when i go to you know what's my p or where's my location you're going to see that it's showing me in the united states even though i'm actually located in canada so notice it's not even telling me where in the united states it just says you are in the united states that is false i'm currently in canada now if we do something like what's my ip let's see what we're getting here this is the ip this is not actually my public ip address of course i wouldn't show this to you but i'm just proving to you that we are actually spoofing our location and okay here it's saying we're in massachusetts or close to rhode island or something like that anyways it doesn't really matter just wanted to show you that we are actually kind of spoofing the ip address and we are now able to use this browser as if we were browsing from the united states okay so let me close this we don't need this anymore okay so now that this is closed what i'm going to do is actually save this profile because i want to connect to this profile from selenium now you don't have to do this you can actually make a new pro profile from code but we are going to be able to load a profile in so what i'm going to do is go here and click on save as and i'm going to save this as just test.melio inside of my chameleo folder which is where i have all of the camellia code i'm going to use for this tutorial okay so i saved it test.camelio and then if i wanted to load it in so if i reran this application and i wanted to load this profile in again i would just click on browse here i would find the profile i would click to it and open it up and then i would be good to go now these profiles are really cool because they actually save cookie and session data as well which means if you say sign in to google or sign into some website and then you save the profile the next time you load it you're still going to be signed in so anything that you do in the browser it will actually save that's kind of the power of the profiles now of course you can make multiple profiles open profiles i'm sure you guys can figure that out i don't need to explain that anymore now what i'm going to do is hop over to sublime text and i'm going to start showing you how we can actually use camellio to automate the browser alright so now we're actually going to connect python to camellio but before we do that i quickly want to explain how camellio actually works so when you run camellio the graphical user interface what it does is it actually exposes a rest api now this is a local rest api and in fact if i go to a browser tab here and i go to this location you can see that we can actually view all of the endpoints for this api on our local host now the reason i can see this is because i'm currently running camellio if i wasn't running it i wouldn't be able to see this now what we're going to do is we're going to install the python package for camellio which just is a wrapper that interacts with the rest api so it just makes our life a lot easier but if you wanted to you could manually send http commands to localhost colon 5050 and then you could interact with camellia now camellio also has a package for nuget and for npm so if you're working with any net technologies or javascript then it's also very easy to interact with this rest api now the last thing i will mention here is that we actually can run this rest api without having this graphical user interface open now the way we're going to do that is we're going to open up our command prompt and we're going to type in the following command so i'm just going to copy in the path to my camellio cli tool so this is actually the path you guys can go to the appropriate path on your own machine so users slash whatever your username is where you install camilo app data local programs camellio and then slash and then you're going to run the camellio cli dot and then exe now this is actually going to run the command line interface for you which will expose the rest api and allow you to view logging information when you're actually interacting with camellia so if i hit enter here you're gonna see it started this on this port but the application startup failed now the reason it failed is because i need to pass a username and password for authentication when i actually start this so what you need to do is say username or actually i believe it's not username i believe it's email is equal to and then your email and then you say password is equal to your password now of course i can't show you my email and password so i'm going to type these in and run this and then i'll show you how it works all right so i'm now running the cli tool i'm just going to have my editors actually blur out my email here and my password so you guys don't see it but the point is i've now authenticated successfully by passing email equals and then my email and password equals and then my password and now of course if i refresh this page here you're going to see this still works because well the rest api is still running so now that we have this running from the command line interface we also could run it from the graphical user interface doesn't really matter what i'm going to do is install the python package which is called camellio.localapi clocked so i can just copy this command here pip install camillo local api clients i'm going to open up a new command prompt here so let's just run this like here i'm going to insert this command and hit enter now for some reason this pip command doesn't work for you you may not have pip installed in your system path i will leave two videos on the screen that show you how to fix that you also can just try doing the following python and then hyphen m pip install and the camellio.local api client anyways i'm assuming that you guys know how to do that but i just want to show that in case okay so now that we have this installed what we can actually do is finally go to our python code and we can start actually connecting with camellia alright so now i'm actually inside of the code that i showed you at the very beginning of the video that wasn't working and didn't allow us to sign into google what we're going to do is simply refactor this using camellio and getting a web driver from our camellio profile now we're actually going to start by creating a brand new profile from code then i'll show you how to load and save profiles so i'm not really going to explain all of this code here this is just regular selenium code this is not a tutorial on selenium but if you do want to learn selenium and understand how all of this works then what you can do is go to the series that i have on selenium i will put it on the screen and leave it in the description i will also leave all of this code on github and i'll link to that in the description as well as the documentation for camellio in case you get confused when we go through this anyways now that we have camellio installed what i want to do is go up here and start importing some stuff from camellio that we need so as a reminder what we're going to do here is start by creating a new profile from code and then we're going to load that profile use it get access to its web driver and you're going to see that what we had before that wasn't working now hopefully should be working all right so the first thing we're going to do is say from and then this is going to be camellio and dot local underscore api underscore client dot and then local api client again we're going to import the camellio and then this is going to be the local api client now after that we're going to say from camellio this will be dot local api client again except this time it's going to be builder underscore four underscore create underscore profile like that and then we're going to import the builder for create profile now let me just look at my cheat sheet here to make sure this is correct looks good i believe that's all we need for right now so now that we have both of those what i'm going to do is actually remove my web driver here because i no longer need to use the selenium webdriver i'm going to use the camellia webdriver so i'm going to start by defining the base url of the rest api for camellio so i'm going to say camellio and then this will be underscore base underscore url is equal to and then this is going to be localhost colon5050 like that that is where camellio is hosted currently and you need to have camellia running either the cli or the graphical user interface for this to actually work so keep that in mind you need it running in the background otherwise this will not work again either the graphical user interface or the cli so now that i have this what i'm going to do is say my client is equal to and then this is going to be the camellio local api client and i'm going to pass to this the camellio base url and then this should initialize camellia so now i have clients and what i can do is actually search for a base profile and then create a new instance of that base profile so all of this documentation will be linked in the description what i'm going to say is my base underscore profiles is equal to client dot and then this is going to be search and i believe this is base profiles we're going to say base underscore profiles like that what this is going to do is look through the base default profiles the one that we saw on camillo in the graphical user interface and we're going to search for ones that meet some specific criteria sort so what we want here is the device underscore type to be equal to and then this is going to be a desktop like that this is actually going to be lowercase and then for the browser i believe we just say browser like that underscore product actually is going to be equal to and then just chrome so this is going to give us the result for all of the base profiles that have a device of desktop and the product of chrome now for me to have this be valid i just need to add in these right here okay so now we should have access to all of the base profiles and what i want to do is create a new profile based on this base profile or based on one of these base profiles all right so on the next line down i'm going to say the create underscore profile underscore request if we could type this properly is equal to builder for create profile i'm going to do a backslash then dot and this is going to be i guess base or from underscore base underscore profile okay then we're going to pass the base profiles at index 0 dot id the idea here is that this is going to give us a list of profiles all of them that match this criteria there's some other keywords you can pass again i'll leave the documentation in the description anyways we don't really care we just want to get any of them to match this criteria so we'll get the very first one we'll get the id of it and we'll pass that to here for the builder for create profile anyways after this i'm going to do a backslash i'm going to say dot and this is going to be set underscore recommended and then not features but this is actually going to be defaults like that then we're going to do a backslash again and then say dot build okay next we are going to say the profile is equal to and this is going to be client dot and i believe this is just create profile and we're going to pass as the body here the create profile request so what this is going to be here is actually the request for the profile that we want to create we then need to send that request by calling create profile so create profile is actually going to call the rest api that's running it's going to create the profile then it's going to return it to us inside of this profile variable we don't really need to understand how all of this works because we have this nice wrapper that we can use but that's kind of what this is doing okay let me just look at my cheat sheet make sure i didn't mess anything up looks like we are all good for right now and now that we have created the profile the next thing that i want to do is actually get access to the web driver from the profile so i'm going to start by saying options is equal to webdriver dot and then this is going to be chrome options like this now if you want to find where i'm using this web driver i'm just importing it from selenium so of course you're going to need selenium installed as well to follow along with this i kind of assume at this point you all have selenium otherwise i'm not sure why you'd be watching this tutorial anyways we're going to have options equal to webdriver.chrome options then what we're going to do is say options.add and this is going to be underscore experimental underscore option and we're going to say inside of here that the camellio colon and then this is going to be profile id comma and we're going to pass the profile dot id so a little bit strange but we're just pretty much telling this web driver to use camillo so we're saying camilo profile id when we pass the profile d that will be substituted in here and well then we'll have the correct web driver options now what we're going to do is say driver is equal to webdriver dot and then remote and what we're going to do is make our command x executor so let's say command executor like that equal to and then this is going to be fstring inside of here we're going to say camellio and then this is going to be the underscore base underscore url slash and then web driver and then we're going to say the options is equal to options of course we need a comma and i don't think we need backslashes actually i think this is good okay so there we go obviously i don't have all of this memorized i'm just reading this right from the camellia documentation again i'm going to keep saying it is in the description okay so let's just run through what we did here because i understand this is a lot of code so what we did is define the base url of camellio just where it's running like the local api right so it's running on localhost port 5050. then we are creating a client pretty straightforward remember we imported these two things right here next we're saying the base profiles is equal to client.search based profiles we're searching for the device type of desktop and the browser product of chrome we could also search by language and by i believe operating system as well anyways we then have create profile request so we're saying builder for create profile dot from base profile base profile zero so just getting the first one and the id of it we're setting the recommended defaults and then building this request then we're going to say profile is equal to client.gradeprofile pass in the body here which is going to be the request this will then give us the profile now that the profile is created what we need to do is make a web driver that uses this profile so this here webdriver again this is coming right from selenium so we're saying options webdriver.com options we're going to add an experimental option this is going to tell the web driver to use camellio then when we run the webdriver we're going to set webdriver.remote we're going to pass the command executor as the base url so our kind of local host api client slash webdriver and then the options equal to the options this will then return to us an actual web driver that uses camellio so now i don't need to mess with the rest of my code at all because it's using a variable called driver so now i'm just going to be using my regular web driver here from camellia hopefully that makes sense but at this point in time that's really all you need to know to use a camilo profile now just use this driver object here as your web driver and you will have your browser fingerprint changed and you shouldn't be detected as a bot alright so i was about to just run the code but after reading through this quickly i realized there's a few minor mistakes so let's just go ahead and fix those quickly so first we're going to go to our import statement here and notice how i was kind of thrown off that these were the same name so local api client twice well they actually aren't i just read it incorrectly this is going to be camellio and then underscore local api client so make that change in the first import statement my apologies also we need to change this from all capital on api to a lower case for p and i which means we also need to change that here another error that we had is i had from base profile here this is actually going to be for base profile so let's fix that and one thing that i forgot to do was start my profile so after we create the profile it's not yet started i actually need to start it and the way i start it is client dot and then start underscore profile and i just pass the profile dot id like this okay we should be good to go now again my apologies on those mistakes but that's what happens when you're programming now fingers crossed let's run the code and see if this works all right so we can see that we have loaded up aliexpress here we should hopefully close the popup it's going to click on the join button sign in with google it's going to bring us to this page we're going to enter our information here and we should be good to go here once this closes let's see all right so we are now back on alibaba it searches for rtx 3060s which is what i have the script actually doing and then notice it shows us all of these options okay so let's make this larger here and there we go we are good to go so that is how this works right using camellia we were able to sign in whereas when we were using just regular selenium it didn't allow us to do so so that's as easy as it is to get started with uh camellio now what i want to show you how to do is how to save a profile and how to load a profile because a lot of times as soon as you kind of do all of this tedious stuff signing in whatever you want to save your browser information your cookies all of that data and then load that in another time so let's go ahead and do that all right so i've just pulled up the documentation for actually saving the profile for camellio now what i'm going to do is just copy in some of the stuff here to save us a bit of time so we need this import right here to save the profile notice there's a save profile request so i'm going to copy that in we'll put that at the top of our code right here let's go back to this which is right here and we can see that to save the profile we first need to actually stop it which is something that i haven't done yet so we'll look at that in a second then we're going to grab the path where we want to save the profile to and we're going to use the save profile request so let me just copy all this and then we'll kind of walk through this step by step so after all of our stuff is done here what i'm going to do is i'm going to stop my profile now my profile is stored in profile so it's fine to say client.profile and then stop the profile id then what we need to do here is actually generate the path where we want to save this file to now this involves me importing os so let's do this actually os is already imported so i don't need to do that anyways we have os imported so this is going to get the directory name and the path of where the current file is and then we're going to save this as test2 dot camellio because we have test already saved in this directory anyways then we're going to say result is equal to client.save profile pass the profile id we want to save and the save profile request which just takes in the path and says where on our system we want to save this then what this does just print out profile has been saved to and then the result of here dot last known path so we can run this one more time and actually while i run this this time i want to open up the cli and show you that we're actually going to see kind of the logs and information happening here while this runs so let's just split this on the screen i didn't mean to minimize that let's turn this over here so as this runs you're going to see you know information occurs on here it says profile with id has been started successful received web driver connection and then as soon as we save and uh i guess stop the profile you're gonna see that in here as well okay so let's give it a second this part takes a few seconds to run all right so we can see here that the profile with id has been stopped successfully and then profile with id has been saved what i will do is open up my windows explorer and show you this file alright so i now have my windows explorer open notice i have a bunch of files inside of here and while test2 was just saved at this time when i'm actually recording video anyways what i'm going to do now is show you how we can load a profile so rather than having to go through all these steps of actually creating a profile from a base profile we're just going to load a profile from a file let's do that now so again i've just opened up the camellio documentation we can just copy and paste a few things in here so i'm going to copy in the load profile request import statement so let's put that up here before i copy anything else let me just delete a few things here so i don't need to create a profile i don't need to search the base profiles so i can get rid of all of this and for now i'm just going to say profile is equal to none and then we're going to load it in in a minute now i also don't want to save this profile anymore so i'm going to get rid of all of this right here okay but we will stop the profile so now let's go back to our documentation which is right here and let's find where we load in a profile looks like we do it right here so we're going to say profile is equal to client dot load profile turns out we're actually going to need this path so i'll copy that in in a second so i'm going to say profile is equal to this start profile that's fine we can start the profile and i need to copy in this path variable right here okay so let's do this we're going to say path is equal to this this time i'm going to access the test profile the reason for that is i want to access the profile that we created at the beginning of the video that's connected to the proxy then i'm going to say profile is equal to client.load profile the body will be equal to load profile request we'll pass the path which we defined right here and then i'm going to say client dot start profile we're going to get the web driver and we're going to do everything we did before pretty straightforward let's go ahead and run this and see if this works alright so i've just split the windows here so we have both the cli tool as well as the web browser now i'm gonna let the program run through here and then i'll confirm with you if it's successful or not in a second all right so we've just got past the google signin now it's actually closing this page as we know this takes a while so once this is done loading and it redirects us then i will be right back okay so it's redirected us back just searched for rtx 3060 looks like it has been successful let's make this larger we can see we're seeing some different graphics cards then of course the program is going to close because now we are finished anyways that is how you actually load a profile and then execute that with camellia now the last thing i want to show you here is that if we actually go to the camellio user interface we're going to see that all of the profiles we've created and loaded as we've been kind of doing this from code are actually going to show up on our ui so notice we have all of these different profiles here a bunch of them we created from the base profiles when we were originally kind of testing and running this application then we have test.camelia which we've loaded in right and then we have a bunch of other unsaved profiles and test2.camelio which we actually manually saved from the code so i just wanted to show you that they show up in the user interface as well all right so now that we've looked at that example the last thing i want to show you how to do is how to connect to a proxy from code so i showed you previously that we can load up the graphical user interface create a new profile and then connect to the proxy however that means we had to load the profile like this to be able to actually use it so sometimes instead you want to make a new profile from code and then directly add the proxy so i'm going to show you how to do that now we're going to use camillo obviously you can connect to a proxy with selenium however you're severely limited because you can't pass authentication information so you can't pass an email you can't pass a password and so it makes it pretty useless if you have an authenticated proxy like we do anyways let's go ahead and get into this so what i'm going to do is open up this documentation here and what i need to do now is create a new profile so i'm just going to copy this we've already seen this here we have base profiles great profile request and then profile i'm going to copy all of this in and simply replace these two lines right here okay so now rather than loading a profile we're going to be creating a new one again we've already seen how to do this the only difference is now we have this dot set proxy method now notice here we're using server so we're setting up the proxy server so i need to import this which i'm going to get from right here so i'm going to steal this import from camillo.localapi models dot server underscore pi three import serv again this documentation will be linked in the description you can very easily find that example anyways we now have this imported so this should all work and what we can do here is connect all different types of proxies so we can connect to a sox5 proxy http or https now the proxy that i'm going to use is from bright data and this is going to be http so what i'm going to do now is go to bright data which is right here i'm going to copy in this information into these fields and then i will be right back all right so i've now filled in all my proxy credentials you can see i have my secret my id my port and my host and now i should actually be good to just run this code and see if this works again the only change we've made to connect to a proxy is we've just called dot set proxy make sure you do this import though because you need to import server we then define server we put the type of the proxy and we passed all of our credentials and a login information for the proxy okay so i should be good to run this i'm going to go ahead and run once this is loaded i will show you if it is working or not alright so it looks like the web driver has loaded you can see it's open in front of me right now now i'm going to let it run through this script and then once it's finished i will confirm with you that it is indeed working okay so it has now redirected us back to aliexpress we got through the google signin and we can see that it has searched for rtx 3060 and everything is all good okay it actually closes that because now we are finished with the program and there you go we have now completed connecting to a proxy from code all right so with that said i'm pretty much going to wrap up the video here there's not really much more that i can mention another massive thank you to camellio for sponsoring this video and i hope this helps you guys get past some selenium restrictions with that said if you enjoyed make sure to leave a like subscribe to the channel and i will see you in another one you