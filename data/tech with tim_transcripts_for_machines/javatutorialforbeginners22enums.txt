hey guys and welcome back to another Java programming tutorial in today's video we're gonna be going over enums now enums are pretty much a collection of constants that we can reference and then we can do things with those constants and they are pretty cool and just make your code more readable and yeah you guys will see when we go through the video so the first step is to create an enum now to do that is similar to creating a class or an interface or whatever go to your package rightclick we're gonna click new and then enum so for you know I'm just gonna name mine hmm actually I'm just gonna name mine level because you'll see why just make sense for this example so again the syntax here is public enum level rather than like class or interface or whatever right so in here is where we're gonna define our constants okay now this is really useful because we don't have to do like public static int whatever like the name like we can literally just type whatever value we want our constant to be and typically it's a string so in my case I'm gonna go for level I'm gonna go in all caps you don't have to go in all caps when I go high medium and low okay now these are the three constants on this store in my level Eitam so we have high medium low and yeah that's literally all I'm gonna do right now for my enum it just means we have three constants that we can reference from level and these the three and obviously you can do as many as you want and just keep going with commas on and I think you can put them on the same line as well it just makes it more readable if you do them like other lines okay so if you have three constants now I'm gonna show you how we can actually use this email and you'll start to understand how it works so to use this enum we have to create a new instance of it so to do this I'm going to say level and we'll say lvl equals new actually I think it's like this it was level dot and yeah so we say high low and medium so Mike Easler just pick a low and I'll put a semicolon and now you can see it's all showing up in different colors and this is working fine so now that we have this as a constant we can do certain things with it right so typically you might want to check what value your constant is so like what value is level so we can obviously use these in an if statement like so so if I said if LVL you equals equals and they're like it's the level dot and it'll start out low I guess and we'll just work our way up to high and you'd say L if our elseif and we'll say lvl equals equals and then level dots and medium okay we'll do something in there and then finally else cuz if it's not lower medium it must be high then we'll just use me here so in this case we'll just say system dot out dot println and we're gonna print level for all of them cuz I want to show what this does okay Oh what the heck did I just do there okay anyways wait now we're just printing level each time and actually we just run this down and see what happens so you see we get low so when we print out level it's simply just gonna print like whatever the constant is that we have and that's because it has a go to string method builtin so we can convert these into a string and I'll show you what I mean by that so pretty much say we wanted to get this cuz right now like it's not a string it's not an int it's not a bullion we don't really know what type it is it's just like in level it gets an enum so to actually get this as a string value if we wanted to do something with it or store it we can use dot to string so if I say string I will say II yen why not why not we'll say is equal to lv l dot to string and that's just going to convert this to a string for us and then we can do all our string operations or whatnot with that alright so let's say get it to a string now another really useful thing that enums is we actually get all the different values of enums and print that to the screen so i do system dot out dot println and I believe the way we do this is your level dot values yes there we are so we go level dot values and if we hit that where we type that in you're gonna see when we run this now it gives us well it is actually giving us an array with the values so when we try to print that we're getting like you know the memory address of it so once we have these values so make sure you're just gonna store this in an array so that we can then iterate through it and print them out what I'm gonna do is we'll sit level array and this is the way you have to do it I will say ARR is equal to and then level values okay so that's working fine so we're going to do now is which is create a quick for loop so and I'll show you how we can loop through all the different values so say for e1 which would be s level level e and then we'll say in ARR what we'll do is we'll simply just print out e okay so system print out e and then we can see all the different constants that we're gonna get so let's go here and you see we get high medium low and then just print slow again just because we're doing this Latif statement here okay and that's how you can loop through all the different values so that's really cool but you might say okay well that's cool Tim but is this really that useful like we just have these constants well there's a few other things that we can do inside of this you know get add some methods and some instructors as well so that these constants actually point to certain values kind of similar to like a hash table or hash map that I showed you before so the way that we can do that is we need to create first of all a variable that's gonna be private so in this case I'm gonna say private and I'll say actually int level lvl Dom okay so this is gonna just be a private value that's just gonna store the value of each of these so like low medium high the value of all these levels so to set this value what we need to do is you need to create a constructor for our edom and you'll see how this works in a second so I'm just gonna say public level int and then num okay and in here what are we getting here remove invalid modifiers legal modifier for you know make it right only private discriminate just do this private sorry my bad private because we're just gonna call it on here you'll see in a second private level internet and we're just gonna say this dot LVO num is equal to num okay there we go so now what I can actually do is you see how these are highlighting in red so since this is a private constructor that means we're gonna define this variable based on what constant we choose for the enum so I'm gonna put brackets here and I'm going to define high as three medium as two and low as one now what this is gonna do is it's gonna keep our same constants of high medium and low but when we create a new constant it's gonna activate this constructor of level and it's gonna set this level num equal to whatever value we put in the bracket search so in this case three two one we could obviously have multiple what do you call parameters here and then we can have multiple arguments here and we can have a ton of different values and yeah so the only issue is since this value is private we're gonna need a way to access it from our main here because that's probably we're gonna want to use it so that means we're gonna have to create a few methods well change that level mom and to get that level numb so we've done this before but actually I don't think I can do a public and we'll see if we can public gets level and then in here we'll simply return yes this is gonna need to be an int public into get level we'll simply return this LVL num okay yeah so that doesn't work fine I just can't do a public constructor okay so this is just gonna give us the level num if we call get level on our you know okay now to change this I would he call it level num what I'm gonna do is I'm going to do sex LVO and instead of having interior just going to be a void okay and all we're gonna say is this thought allele none is equal to num and then we're gonna put in here in num okay perfect so now what we're doing is we have a way to not only get the level num but to change it so now let's try using this out in our main and see how this works so I'm just gonna get rid of all this stuff because we don't need this for right now so right now we have our level and it's leveled out low so to actually get the value of this level we can use something called get value of or we can use that method that we had here so in this case I'm going to say get level so what I'll do is I'll say system dot out dot println and in here we'll say lvl dot and then what was the thing we were using get level like this so now if we print this out to the screen we should be getting one and indeed we are we're getting so now I want to show you this thing it's called get value of okay and is it its value every get value if I'm not sure we'll see so I'm pretty sure if we do something like this level dot value of yes that is exactly what it is and then we pick our we type in whatever the enum is so in this case we could say hello it's gonna give us let's see what's the issue here okay yeah so the issues I just got to put this in string I just forgot about that so I do the level dot get value of and say I put a string in here so like say someone was typing in and into the computer and they type in a string rain you want to pass this in to get value if we see what's we're actually gonna get is we get low right because that is the value of this string in enum although it's not a string it can like determine that okay so that's what value of is used for I can't really give you any good examples of them because I really know any good examples of using value of but for any of you that might see some use in it I figured I would show it to you so I guess we can do an example now just setting the level just to make sure that all of that is working I say lvl dot set level in this case let's say five and then let's just grab this again actually and we can delete this R up here and now I'm just simply going to print out go lvl dot yeah level and just make sure that everything is changing and working fine and there we go we get the level of five so that is how we can use items pretty much they're used for when you want to have a collection of different constants maybe you want to loop through see what those constants are and it just makes a code kind of readable right because we have level got low and then that low can point to like five to one whatever and that's all stored within our enum right here obviously you can have as many enums as you want and you'll really see the use of them further on in job but when you're creating like larger programs okay so anyways that has been it for this video if you guys enjoyed please make sure you leave a like and subscribe I will see you again in another video