hello everyone and welcome back so in this video we're continuing from where we left off and we're continuing to work on our game so fortunately for us we've actually learned a lot of the topics we need to know to be able to kind of complete this game and make it a lot more interesting and fun to play but there is a few more things we're going to learn just at the beginning of this and kind of apply them in but it'll be a lot more working on the project then it will be actually learning the theoretical concepts if you've not seen the previous two videos in this series please do go check those out first though that's kind of a prerequisite for this with that being said let's get started so the first thing I'm gonna do is just kind of recap us from the last day and just kind of run this program and see what we actually have so far so we know where we're going from here so welcome to my first game what is your name my name is Tim what is your age 19 hello Tim you were 19 years old you're old enough to play do you want to play let's type yes like that and boom it says let's play awesome now I just want to show you a case that we may not have considered yet so if I do Tim 19 and do you want to play now what happens if I do something like this so why capital e s well I'll give you guys an opportunity to take a look at it if we have our condition here right so we say wants to play equals input do you want to play and we say if wants to play equals yes let's play so do we think when I type Y with a capital e and then s that this is gonna work well no it's not so if I do this it actually doesn't this if statement is not true this condition is not true and therefore this doesn't run so how can I actually go about and fix that well this is the first thing that I wanted to show you and that I guarantee you guys will find very useful for the rest of this kind of game and anything in the future there is this method and it's called a method this isn't it's not that important you not to understand what that means called dot lower so it actually looks like this dot lower and I'm typing it in the correct place here but what this does is it takes any string and immediately converts it into lower cases so all lower cases it takes any letters it has and just put it puts it to lower case so this is really useful because what we can do is we can take the input that we typed in immediately convert it all into lower cases and now when we want to check for equality it doesn't matter what capitalization we used in the string it will still be true because it'll just automatically go to lowercase so we could type capital e and that will still this condition will be true and we'll still do let's play so in fact let me show you so notice I just put dot lower here and guess what there's actually another method called dot upper that we can use as well and upper will make it all uppercase so if we wanted to do this and make this all uppercase and then make this dot upper same thing right so I'm hoping this is making sense but essentially whatever you're gonna compare here is gonna have to be an all lowercase or all uppercase and that's going to correspond to whether you use dot lower or dot upper all right so let's run this now and let's see what we get so what is your name Tim what is your age 19 do you want to play y es okay so we have a capital y and a capital s and let's play that still works fine so that's cool I think that's an important method to know that's pretty quick so I just want to show that to you guys and now let's actually start building a game let's start making something cool and then we'll implement like maybe a health there's some other interesting things into our game that I didn't have in the demo game so the first thing we want to do is actually I'm gonna add an else statement here and I'm just gonna print SIA dot dot dot so if they don't want to play will simply tell them you know goodbye like see you later and then inside of here if they want to play so notice I'm nesting all these things but I think there's an if and else inside of another if statement and that's totally fine because all the if statement says as well if this is true do whatever is indented and here we are and then inside here this if statement says if this is true do whatever is indented right so we go ahead and do that so what I'm gonna do in here now is I'm gonna ask another question and this will be the first decision that we want to make so I don't know what I want to make it I think I'm gonna go with the classic do you want to go left or right just as our first kind of path but you guys can make this whatever you want to feel free at this point to kind of change around some of the stuff that I'm doing and make it your own so long as you understand what's happening so I'm gonna say left underscore or underscore right equals input first choice dot dots left or right now it might be a good idea in your game to put brackets at the end of your answer and just put inside of the brackets what the user should type so left or right because technically right they might not know like they might type I want to go laughter I want to go right so it might be a good idea to just put brackets inside of the prompt just so they kind of know what options they have like what they can actually type right and then what I'm gonna do after this is I'm gonna check if left underscore or underscore right is equal to left this will be my correct decision if I go left then what we'll do is we'll print something or we'll do something otherwise well we'll just print out to the screen you fell down and lost dot that dot you can see I'm not super creative when it comes to making these games but the idea is I'm just trying to show you how the paths work so this is like if they lose if they decide to go right or they type anything other than left then we'll print out you fell down and lost otherwise if they go left then what I'll ask them is another question so say okay if they go left they're going the right direction so let's ask them another question awesome and in fact inside of Ellis I don't even have to make them lose I could ask them another question in here too right we could make it as confusing as complicated as we want and make it really hard for the user to figure out what way they're kind of going so they have to play the game a bunch of times so anyways let's go here inside of left and let's say I'm just gonna put ans that's short form for answer that's what I usually end up doing as we get longer and longer rather than making these variable names but I'm gonna say ans equals input nice you follow the path and reach a like dot da do you swim across or go around question mark and then inside of here I'm gonna put across as the answer right is that across I don't think you need to see so across or around just telling them what they can type in right and now I'm gonna have to zoom out a little bit just so we can read oh that's better okay and now inside of here what I'm gonna do is I'm going to check what their answer was right something if an S is equal to and maybe will say that going across was the correct answer actually it looks like going around was the correct answer so if a NS equals around then we'll do something and then we'll say L if so I'm actually gonna switch it up here just to show you something else l if Jew to Jew I like an S equals equals a cross and then else so the reason I've done this is because what I actually want to do right now is I want to make it so that if they type a cross or they type around both options are correct they can go both way but both ways will lead them to different types of decisions right so we'll get asked now different questions inside of here but if they don't type around or a cross right then I want them to lose so I'm just gonna go down here and say print you lost again I don't have really good like you know lose messages but that's totally fine and then inside of here in around what I'm actually gonna say is that one of these options is better than the other so here is where I'm gonna implement something that I hope is you guys will appreciate because it is a little bit more complicated but I want to show you how we can do something like this if they decide to go across the lake I'm gonna kind of make up a story and say they got bit by something and they lose health and maybe we'll put something inside of here that checks you know what their health is so if their health goes lower than zero then they lose right then they lose the game completely I think that'll be interesting to do so let's do something like that so if I want to keep track of health right and maybe we set them off with like default health of won or default health of ten or something and they lose health we'll need a variable to store their health and then we'll need to subtract from that variable so what I'm gonna do is on line seven I'm gonna make a variable called health I'm gonna set that equal to ten so they could technically have ten health and we'll tell them how much help they start with and how much help they lose so maybe to start we'll print out you are starting with and then in this case comma the number and then comma health so you are starting with ten health that will print out ten the reason I put health here instead of ten is because if I change this number maybe I change it later to fifteen twenty something like that I want this to autumn update I don't want to have to rewrite the number two times it's better just to have it stored in one place so that's why I've done that so we've defined they have a help and we'll say if a NS equals around then you know whatever if a NS equals across then we'll print something else in fact actually what we can do is something cool here and I'm gonna get rid of the else and just just change this a bit so I'm gonna say print and inside of here I'm gonna put you went around and reach the other side of the lake and then here I'll print you managed to get across but we're bit by a fish I don't know let's just say that you were bit by fish and lost five health so I'm gonna tell them that they lost five health here and then what I'm gonna do is because they lost health and I'll put some periods here is I will say health equals five so we'll just you know remove five health from their health so now they only have five health and now what we can do down here is we can ask them another question right and we can keep going and in fact what I'll do now is I'll pause and we'll run this just to see what we're at right now and then I'll just kind of keep going and just coding out my version of the game just showing you guys some different cool things that we can do and hopefully you guys take this upon yourself to make your own cool game right and change the paths and decisions and this will be like really good template for you to figure out what to do so let's run this and let's go what is your name so my name is Tim I'm 19 hello Tim you're 19 years old you're starting with 10 health you're old enough to play do you want to play so actually maybe I should put the health somewhere else so this is great so I tested it I realized something was wrong so now I only want to tell them how much help they have right if their will do than 18 so in fact let's get rid of this you know telling them what they are I don't need that anymore and then after we ask them do you want to play we'll print out you were starting with 10 health let's play and we can leave the health defined up here doesn't matter where we have it but we're just put it here so that we can access it throughout all of the stuff down here great so let's run this down then let's zoom in a bit says what is your name Tim what is your age 19 you're old enough to play do you want to play yes you were starting with 10 health let's play first choice left or right so where should we go let's go left nice you follow the path and reach a lake do you want to swim across or go around let's go across and it says you manage to get across but you were bit by fish and lost 5 health so you can see that the game is actually working right and we'll run it one more time just to test it another path so Tim 19 you're old enough to play do you want to play yes first choice left or right let's go right you fell down and lost boom so the game is functioning okay so let's keep going and let's add some more stuff into this so health equals 5 so now there are five health now what I'm gonna do here is we'll have to do something to check if they are lower than zero health right so they'll be at some point where they could potentially lose all their health and if they're at lower than zero health or their ads your health and we'll have to tell them that they lost so that's gonna be interesting to do actually but first let's just ask another question so let's say an us equals input an insight here what do we want them to do next maybe I'll tell them that I'm gonna go take an example from my previous game I'll say you see a river and you see a house do you go to the river or do you follow the house right or other way around she go towards the house would you follow the river okay you notice a house and a river which do you go to and then again I'll give them what they need to type in here just to make it easy so say River slash house and make sure we add a space here in between the question mark and the end of the quote just so there's a a space one I'm actually typing it in and now let's check if an s equals equals in this case house then we'll do something else we'll do something else so what I'm actually gonna say here this will be kind of an interesting little twist to this game I wasn't even thinking about adding is if they decide to go the river we'll just tell them that they like fell in the river and they lost okay and then if they go towards the house we'll tell them that they went towards the house but they lost five health because like the guy at the house hit them or something I don't know I'm trying not to be too too violent in these answers but the idea being that I want it to make I want to make it so that they can get past this but if they decide to go across it will actually end up being the wrong decision because they lose five health right and then down here they lose another five so they'll lose the game I hope that makes sense but you'll see as I start coding it so if an S equals house then what we'll set is we'll say print you and you go to the house go to the house and I greeted oops by the owner duck duck he doesn't like you and you lose five went all right we'll just go with that we don't need any more deeper explanations I will say health minus equals five so we're removing five health again that's equivalent to help equals health minus five so whatever the value of health is we'll subtract five from it the reason I wouldn't just set health the fiber I wouldn't just set it to zero is because we don't know if they lost five health above here so we need to make sure we just subtract that value and then else we'll print down here you fell in the river and lost dot dot dot okay so now what we'll do after this right so you can kind of see the way that I'm actually let's see here managed to get across so now actually inside of this if statement sorry I'm just trying to think of what we're actually gonna do here on line 30 I'm gonna check if their health is lower than zero so if they have lower than two your health because this will be the first point in the game where they could potentially be at zero health if they lost it twice then we'll tell them that they lost otherwise we'll keep going right and then maybe we'll wrap up the game with one more path or something so we'll say if health is less than or equal to zero then what we'll do is we'll print you now have zero health and we don't need a comma and you lose the game dot dot dot all right so there we go you lost the game actually we'll just do and you've lost the game all right so if their health is lower than zero they lose otherwise then inside of here we'll save prints you have survived tutt tutt's you in I don't know we'll just say that they win at that point and I'll show you how we can have some more cool things do all right so that pretty much wraps it up let's test this game a few times and make sure that everything is working fine and then we'll add anything we need to so what is your name Tim let's actually test one if I go like 14 you're not allowed to play okay so let's go again Tim 19 yes first choice left her right let's go left nice you followed the path and reach a lake to you swim across you go around let's go let's cross you man she had a cross but you were bit by a fish and lost five help you notice a house in a river which do you go to the river the house let's go to the river and you fell in the river and lost okay let's try a few more paths I just want to make sure this works but I hope you guys understand the point of this right is to go down like all these different branching paths and you know if you make a bad decision at the beginning you're gonna have to keep going down all the routes until you realize that oh no I should have gone right instead of left right so you can make these really intricate and a lot of people that I've taught to do this before have made really cool games they're like hundreds of lines of code that take you a really long time to actually figure out so I think it's pretty interesting okay but first choice left or right let's go left nice you follow the path and reach a lake do you swim across or go around let's actually go across and let's test out this health stuff so we go across and then says you notice a house and river so let's go to the house says you go to the house and you are greeted whoops I should probably spell that right by the owner he doesn't like you and you lose five fealty you know you now have zero health and you lost the game right so you didn't technically lose because you went to the what is it because you went to the house it's just you lost because you lost five health right now I'll show you the example where if we don't lose five health at the first step we can actually survive by going to the house so what is your name Tim what is your age 19 do you want to play yes let's play first choice left or right so let's go left let's say nice you follow let's go around this time you want around reach the other side of the lake you notice a house and remember wish you go to let's go to the house and you go to the help and you're greeted by the owner he doesn't like you need lose five health you survive you win so even though we lost five health we still won because in the previous step we didn't lose five health so I hope that me showing you the health thing gave you some ideas for some stuff that you can do what you also can do is you can acts you can do something like let the user pick a weapon or something right so a cool example and I'll just talk about some kind of addons now because we're kind of wrapping up the video anyways you could do something like you can start by asking them what weapon you want so you could say you know weapon equals input pick a weapon question mark or pick a weapon cool and then your options could be something like sword I don't know maybe like a baton I'm trying not to be too violent and I don't know let's go something like taser right so you can tell them to pick one of these weapons and then based on the weapon they pick you can say oh well if they have this weapon then they're able to get past this obstacle if they don't have this weapon then they can't so what you would do if you want to check something like that is you'd say if weapon equals equals whatever it equals and if it equals that then boom they're good to go right and they can continue on now the last thing we'll show you because we have one minute left kind of before I'm planning on wrapping this up is how you can actually check multiple things on the same line now I'm just gonna kind of introduce this to you guys because then you can kind of look at it yourself it's pretty easy there's these things called and and or now and and or are ways that we can chain conditions together I'm not gonna explain them in depth but if you do something like true or false the result of this is true the reason this is true is because when you have an or this pretty much says look at the left side look at the right side if one of them are true the whole thing is true so if you go ahead and do something like you know X aha let's alright I say like five equals five seven equals equals eight then this would be true right because this condition is true this condition is false so since one of them is true the whole thing is true now contrasting that with and so when you do and what the does is it checks if both of the things on the left and right hand side are true if they are the whole thing is true if they're not it's false so in this case this would be false because one of them is false but if I change this to be like seven equals equals seven then this is true so you can use this and and or to actually chain conditions together so you could check like inside of here if left or right and you know weapon equals equals whatever you can do something like that OOP so I put this in the wrong if left left or right equals equals left oops and weapon equals equals whatever it equals right inside of here then this whole thing will work so you can check if this whole condition is true or false and then execute an if statement based on that so with that being said I think that's pretty much it I'm gonna zoom out here so you guys can have a look at all of the code at once I understand this maybe isn't mobile friendly but at least now you can kind of see what we've actually created and I really hope that throughout this series you guys have learned something about Python you've learned kind of the basics of the language and if and else and I've given you enough knowledge that you now feel a little bit confident to go out there and make some kind of cool game I will say there's a ton more stuff you can do with this there's a lot more things to learn but again the focus of this series was around building a project and I really hope that this helped you do that so with that being said and that has been int I hope you guys enjoyed if you did make sure you leave a like subscribe and I will see you in another YouTube video