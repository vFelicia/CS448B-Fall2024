hey guys and welcome back from their django tutorial now I know I said I was gonna be doing that custom user models here but the thing is to do what I wanted to do I actually don't need to use those and they're way like they're they kind of over complicated so I figured we'll just do it the prop is the proper way or the way you're supposed to do it and then if you guys need to look up how to do custom user models it's not like super hard but just go online there's a few decent tutorials for that because I don't think I'm gonna cover that in that series unless you guys really want that and you leave that as a comment down below but anyways the goal of this video is to make specific todo lists for specific users so that when different users log into the website they see different todo lists just like you know if you're on Facebook you're gonna see different posts like stuff like that right so it's gonna be a little bit more custom to each user and obviously they can save their own todo lists and I'll be saved just for them and other people shouldn't be able to view that so what I'm gonna do and I need to do this is inside of our model stop pie file inside of our main application I'm going to just add a foreign key to todo list which is user and then that way our users will have a todo list set where we can view all of the the different todo list with that user so to do this I need to start by importing our user model so to get that I'm gonna say from Django dot contrib dot off dot models import user with a capital u now what I'll do is just add a foreign key I'm just gonna copy this and just change the names here instead of todolist we'll say user and we'll do user right here so have user model stop foreign key so now we're just saying that essentially every two ulis we create will be linked to some kind of user awesome so now what we need to do is actually make some migrations in our file so that we're gonna update our database accordingly to that now you shouldn't run into any issues doing this it should just like create the migrations for you but if for some reason this doesn't work what you need to do is delete all of your database files so delete your database file delete all of the everything inside of your migrations folder in including the pie cache but not being knit top pythons and that goes for all of your migration folders so any migration folder delete everything except this in knit pie and then anywhere you see a pie cache folder delete that and that'll allow you to do the migrations after that so now that we've done that so what do we need to do next well now when we created todo lists things are a little bit different so this is where we're creating a todo list and what we're doing to do that is just creating new to do this and saving in the database but now we need to save the todo list to a specific user so to do that what we're gonna do is we're gonna say response dot user dot todolist underscore set now I don't know if this is gonna have to be capital or not so I'll have to play with that in a second but I think it should just be like that dot create and in this case we'll give a name to our todo list and we'll say the name is gonna be equal to n now I believe this is how you created I'm gonna look to see how we created the item yeah so that is it's a similar way so we'll test this to see if that's working but this should now be saving our todo list to a specific user now we can still access our todo list by doing the slash ID of those todo lists but we're gonna probably modify this a little bit so that you're only able to access todo lists that are yours so that'll mean we'll look at the ID and we'll see if that's in the user set and if it is then we'll show that otherwise we'll say like you don't have access to this todo list or something but let's first just make sure that we can create them ok so another thing that I'm gonna do actually is we've created this if I go to templates we've created no we have not created but in our based on HTML sorry guys we have this slash view here right and this originally I think I have it linking to to just a test stuff but what I want to do is actually make this go to a list of all of our different todo lists so I've created this slash you so now what I'm gonna do is I'm going to add a URL inside of our URLs here that it's gonna be slash view and what slash you will do is it'll bring us to a list of all of our todo lists so I'm just gonna say the function name will be view the link will be viewed and the name will be view and then what we'll do is we'll create a new I guess function inside of you stop hi and we'll say define view response and then what we're gonna do is we're gonna return a render of in this case we'll say response view and main / review dot HTML and then we'll pass in nothing as the context so now we've done all that we actually need to create a view template so I'm just gonna make a new file and I'm gonna save this as view dot HTML and I'm just gonna extend this from the base template so extend space dot main / paste HTML and then we will add our blocks so we need that block for the title so I'll say block title like that and then and the block so % % and block and then inside here I guess we'll just do like view and then we can copy this and just change the name to two content so con content like that and then inside of here what I'm gonna do is I'm just gonna create a for loop that's gonna loop through all of the different todo lists for our user and display them it'll be very very basic but we can obviously modify it later so let's add a for loop so say for and in this case TD which is stanford to do list in this case user dot to do list underscore set then what we'll do is we'll end the for loop and and for and then in here we're gonna create some links to all of our todo lists and display them into some little paragraph tags so I'm just gonna say P and in this case we'll add the name of our todo list nice we'll add a link here so we'll say a will say href equals in this case slash and we'll say TD dot ID and then we will end not a tag so slash a and then and the P tag / P and here we'll just put the name of our todo list which in this case is simply going to be TD dot name alright so that should display all of our todo lists and just like a standard on an home like list kind of form we could make it look nicer but for now we're just gonna go with that and yeah and then we should be able to click on them to access those todo lists so let me see if this is actually working so let's run server any errors let's see no errors so let's now go back to here and say I'm going to create let's just go to the home page and let's go to view okay so if you are not writing issues wherever it's not see anything so now let's try to create a todo list so if I say Tim create new and we run into an area you know attribute todo list underscore scent I thought that was gonna happen so let me see now if we need to add the Capitol's to that or not so inside views todo list underscore set maybe that's the issue I don't know we'll see though and then I guess we're gonna have to change inside of our view dot HTML file to be capitals as well now if this doesn't work I'll quickly do a little bit of research and figure this out but let's try it now and let's go back to slash create can continue has no attribute to do list underscore sets all right I'll be back in one second guys with the proper attribute name for that alright I am back and with a ton of errors that I had to fix so essentially one of the first errors is we need to go here and change this to be user dot to do list dot all because I was trying to loop through something that's not iterable cuz this is a different object so just to put this all here you don't need the brackets after and leave this as lowercase to do list and then we need to do is go to models and we need to add these two fields to our for a key so we've to say related name we're gonna find this as to do list and then no equals true now essentially the related name is gonna be the way we access this from the related object which is user so we just change that to do list we say no equals true and then what we're gonna have to do save that is make migrations you know python man shop I make migrations Python managed up hi migrate you do that you should be set and then the last thing we have to change is inside view stop hi is what I've done here is I've created a new todo list so I said T equals todo list name equals n exactly what we had before same thing with saving the todo list except now I said response dot user dot todo list dot add T and then we can still link back to that ID because that ID is perfectly valid it still exists so we can see that and everything works fine so that is the fixes that's what we need to do remember that once you change these this models file by adding the related name and the nil equals true you need to make migrations to save those changes and then rerun the server so I'll show you now what it looks like so essentially you can see I have two todo lists say hello when I go I can add items to the todo list so let's say like item one add item there you go we can check it we can save it all that fun stuff if I go to view um it should be showing me this but for some reason that's not happening um let's see here let me try logging out and log you back in so let's say slash logout let's say slash login let's go Tim password sign in you and there we go we can see that we have now these popping up so we have to be logged in to be seeing these if we are not logged in we are obviously not gonna see anything because we don't have any of these so now let's try to create another account and add some of our todo lists to that account and then see if it's different than what we have before so let's say we'll be making a let's say the email is Bob detect with Tim net let's say the password is the password I've been using consistently and there we go let's hit register alright so we don't need to save that but now let's go to view and we're still seeing hello twice which is interesting to me obits because we're not logged in to that account so let's do slash login and then what we'll do here is we'll say Bob and password and login and go to view and obviously there nothing there so let's create a new todo list let's go new list create lists let's go to view and now we can see that we have new list showing up and that is working now I'm sure this is fairly buggy but this gives you an idea of how you can add things to specific users so you can see them on the webpage now obviously we can make it so that you can't view other people's todo list cuz for example if I go / I can view the hello todo list even though that's not mine so we'll quickly do that and then I guess we'll probably wrap up after that so let's go to index here now and let's quickly say we'll get the todo list objects will get so we get the todo list as an object and we'll just see if that todo list is in the users list if it's not then we'll just you know get out of that we won't let this happen otherwise we'll do whatever we already have so we'll simply just say if in this case response dot user dots I guess todo list all like that but we'll say if LS in that then this is valid otherwise so we'll tap all of this and otherwise we'll simply just return we can either give an error or we could just like not let them go to this page and to do that we can just link maybe to the home page or something if they try to do that so I mean you guys can pick what you want to do there but I guess I'll just gonna ring link to our home page here so we'll just link to home dot HTML and we'll just say in this case where she maybe that's instead of going to home let's go to view dot HTML because then that way they can view their todo list so maybe that makes more sense so now let's try this so let's try to go to to now refresh and you can see that now it's simply bringing us a new list because well that's not our todo list so if I go to three you can see new list is valid because that's our todo list so we're able to view that now this is probably not the most secure way to actually like hide information just would like this if statement and all that but I mean you guys can mess with that if you want and this is a very very basic example so anyways that is kind of an int for how to add the todo list to specific users how to see that I know the login and logout system isn't super smoothly right now but you can obviously add that on the side my main goal with these tutorials was to give you guys kind of the starting blocks on how to do things ideas on how to go about stuff I really can't show you possibly everything because it's an infinite amount of stuff but you can do with Django and with that being said I will hopefully be doing a deployment tutorial soon it probably won't be for the next few days but at some point I definitely will do one and I encourage you guys to remind me and get on me if I'm not doing a deployment one because I will do that at some point and that has kind of been it for the actual writing code and all of this of the Django tutorial so I hope you guys enjoyed if you have any questions or future videos you'd like to see please let me know in the comments down below and I guess I'll see you in the next video