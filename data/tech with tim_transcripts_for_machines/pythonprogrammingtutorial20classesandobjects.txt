hey guys welcome back to another video this is the 20th video in my Python programming series and today we're going to be talking about objects and a little bit about classes in the next video we'll go more into depth with classes talk about creating our own classes and how we can use them but today we just have to understand what objects are before we can move on to that topic okay so what is an object well I'm sure you've heard of an object before and when you think of objects you think of something so usually something you can hold just something pretty much an object is something right something tangible maybe is what you think of well in Python pretty much everything we do here a lot of it is objects so any variable that we create is actually an object so I create X and I make it equal to the string string well if I print out what type this string is so print amount of you type X well it's actually an object of the class string and we've seen the classes before we may not have understood what they are but yeah then if we do why if we set that equal to 23 now if we print out the type of Y what do you think the class is for this if you can remember back well it is an integer so it is an object of the class integer now why is this important why do we care about objects well objects have certain attributes so an attribute is something we can do with the object so just like we cannot add a string to a number so we can't add a string to an integer if I try to do X plus y I will say like Z equals odd and we should get an error here we'll see yeah we get an error because we can't convert int into string implicitly and just like we have certain methods that we can use on different objects so for example if I try to do this so I try to print out y dot count now if you remember count just pretty much counts how many letters are in a string or in a list like this I'm going to count one we get an error there as well and we say the in object so object like we're talking about has no attribute called count but if I change this to X then it works and it gives us zero right because the string object does have an attribute called count so these attributes so all these little dot things here you know we add dot find count dot index lots of different dots dots trip all those things can be used on either strings or on integers now I've only shown string one so far but there are some ones that we can use on integers and they have different properties and attributes based on what type of object they are same thing if we create another variable and we'll just call this one boow and we'll make it equal to true right we can't do Buddha count it's not going to work because there's no attribute on the object of a boolean to do that right the bula object has no attribute of count so yeah I hope you understand that right now everything is an object and based on what type of object it is it has different attributes now those attributes can be simply variables they can be methods lots of different things you don't to understand that right now I just wanted to get that out there so pretty much when we do this why don't or this X dot count here we're actually calling a method on X so whenever we put a dot and then a name so we had dot string count all these dots trip all those those are called methods so they're built into the class and we can use them on an object of that class so I hope that makes sense er right now it's different than if we made a function so you know we made the function func maybe and we printed coming to the screen now instead of putting so we'll just print a low whenever we call func instead of doing like X dot func that wouldn't work right all we did to call the function was we put func like that right and if we run the program here oh we get an error just because I didn't put anything here but we'll get rid of that if we run the program we see we get hello right so we didn't do a name and then a dot we just called the function like this so functions and methods are different it's just important to understand the difference between the function and the method I hope I've kind of explained that a little bit we'll talk more about the methods in the next video when we do more on classes okay so more about objects here pretty much whenever we create any type of variable we create it as an object right so this X object has a all these different methods on it right so it has dot Strip dot count find the integer object has some different methods that we can use on it as well I don't really know a lot of the methods for integers but if you go on the Python website and you look it up you can I'm sure you can find it same thing with the boolean class right there's lots of different things on there so now that we've been talking about classes so much let's do a brief introduction on what a class really is so what does a class look like well in the Python documentation there's a ton of different classes so every data type has its own class so for example a class might look like this so class and I'm just going to make this one I'm going to call it number and then inside of it there's a few things these are the methods that we create inside of the class so they look just like functions except they're inside of a class block like this and they look just like this and then we'll just do we don't need anything for their define let's call print or just call display as this one so I'm just making this one up here this method up here is built into Python I'll talk about what that does in a second so define display I'm going to put an X there and then I'm just going to say print X and then in here I'm simply going to do let's just do self dot var is equal to 24 okay so I know I just did some things that seemed pretty random to you but pretty much what I did is I just created a class just so that we can use it as an example to show you how another class works so let's pretend this number here is actually an integer okay so let's say that this is the integer class in Python now this initialization statement the sites without Stanford underscore underscore an its underscore underscore and this self in the bracket I actually need to do this in here as well is mandatory in order to get the method to work so we do need to have this self inside of the brackets it always has to be there okay so we've we've done that and then let's pretend that's the initialization right for the integer class so when we create this new object of an integer what actually happens is it sets a variable inside of the class equal to 23 so here since I have 23 it would make this 23 so let's just put this to 23 like that okay and then it has something called methods that can be called on the function so why not if I were to do Y dot display and then inside of here I need to give it a value so if I put like 21 then it would display 21 to the screen I hope that makes sense that's the method part of the thing now when I just create this Y variable and I create a new class of number here or of into whatever we're saying it is then it's automatically going to do this in it so I don't have to do y dot underscore underscore in it it's automatically going to do this one whenever we create a new function so let's just let's just give an example here let's do it let's do numbers so we're just going to make a new variable so let's call num equal to number and then inside of the brackets we don't have to give it anything because in here I don't have a parameter now if I had another parameter in here other than self so for example I did something like num then I would have to give a number in this to allow it to work so let's do that self R is equal to num and we'll talk about what self dot bar is in a minute okay so then I've created that now if I try to print out num to the screen we'll see something we'll see something interesting so we get main dot number object at this location now this is a bunch of gibberish means nothing to me really than the look it's the location in memory on your computer of where this object is stored so whatever whatever that means to you guys but yeah that's the location in memory of where it's stored and I just wanted you to see that it pretty much is creating an object's of the class number so rather than creating a object of the class enter the class string we're creating an object of our own class that we've just made in our program called number now what do we want to do here well why don't we try calling a method on our new class so we use the name so do num dot display and now we need to give it a parameter in here so I'm going to do something that may seem kind of confusing to you guys but just carry around just follow along I'm going to do num dot VAR in this bracket and when we run it like this we get 23 so let's talk about what happened so pretty much this display method it takes one parameter of X this self I'm just ignore it it just needs to be in there to make this work and the parameter that I'm passing it is num var now up here in this initialization statement so when I actually ran this this little line of code here it ran this now it created a variable inside of the class number called var now this variable is global inside of this so it's not fully global but its global and all the functions that are inside of this class can see it now that's because I put a little self a self and then a period beside the variable if I had just done VAR dot none like this you'll see what happens we actually get an error here because we can't see that variable so we have to put the self before it like this to make it global like that um so yeah I know I've kind of gone quickly today I just wanted to give you a brief example hopefully got you guys to understand a little bit about it in the next video I'm going to talk more in depth about classes we're going to create our own classes and we're going to see some examples of why classes are useful so that's been my video today on objects and classes I know it's been kind of all over the place but if you enjoyed please like and subscribe and I'll see you again tomorrow we'll talk more about classes