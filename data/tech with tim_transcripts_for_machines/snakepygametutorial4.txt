and then after that what else do we need for cube I don't think we actually need anything else I think that's all we need oh I'm gonna change the color that's what I want to do we change the color equal to green so red green blue 255 for green so that it shows up in this visible on the screen and now what I'm gonna do down here in this while loop is I'm gonna say snack I'm gonna check if our the head of our snake has hit the the stack and if it has we're gonna add another part to the body of the snake otherwise we're not gonna do that right and then we're gonna generate a new snack and so entrence just gonna say if s dot body 0 dot paws and this is gonna be the head right because we have it ordered I don't need those brackets is equal to snack dot pause and remember these are both cube objects that's works fine because we're gonna be tuples then what we're gonna do is we're something to say s dot add cube which is a method that we have there that we haven't actually written yet and we're going to say snack is now equal to well a new cube so I'm just gonna copy this and paste it here so all we're doing is now generating a new cube for snack I'm sure I could put something in that like change it but this is just a way that works ok so now that we've done that we should be able to move around the screen and get the snack but we need to code in the add snack method here which I believe I have here or add Q so the odd cube is pretty straightforward we just have to figure out where we're adding that snack or wherever adding that cube I don't know why I keep calling it snack to the list so what we're going to do the math figure we're the tailless and we want to add it after that tail so tail is equal to self dot body negative one the last element in that list I'm going to say dxdy which again is going to be our direction X Direction Y I'm just sorting it shredding it here it's gonna be tail dot turn X and tail dot turn Y like this now again you can do some two lines I'm just doing it like this because it's faster and now I'm gonna copy something in and just go through exactly what this does okay so pretty much huh this looks complicated but all its gonna be doing is checking what direction that we're currently moving in like the head of the cube or the tail actually of the cube is moving in so that we can then make sure that when we add that cube we know where to add it so if we're adding it like to the right of the cube to the left of the cube above it below it and we can give it the correct direction to be moving in so pretty much what we do here is we just say we're gonna append a new cube to our body and its position if we're moving to the right which in here we are because DX equals 1 is 1 less than the x position of that tail so whatever the last cube is 1 less than that and that's so that we don't add a cube per se to the right when we're moving to the right and then we're just gonna have overlapping cubes and you're not gonna be able to see them right same thing down here if we're moving down that means or not down sorry for moving left that means we need to add the cube to the right side so one plus that tail the exposition of the tail of the cube of the snake sorry so that we can have it in the proper position right and the same thing here with x and y or with y so that when we're moving up or we're moving down then we add it above otherwise to be move we put it below sorry I just stumbled through that because there was a lot of different words they're very similar anyways what we need to do now is simply set the direction for that cube so that we added it in if we just left it like that it wouldn't be moving anywhere so we're using to change that to the current direction of that tail so whatever the tail is moving that's where this new cube is gonna be moving in that direction so were just gonna say self dot body negative 1 dot turn x equals DX and then same thing down here except we're gonna change this with y during y equals dy and that again it's just the where our tail is moving at that current moment okay so now that we've got all that done it's time to see what syntax error we get next name Rose is parameter and global hmm one second I've actually never even ran into that error Oh global rose as okay so let's just make this our and let's change this to be mmm one second yeah we can just get rid of this and this should work there you so now you can move around like this the only issue is our snack is not being generated on the screen and I don't know why that is exactly happening oh it's because we're not drawing the snack that's why so now I'm just a global snack up here believe that's what I called it and I'm simply just gonna say snack dot draw like that and I got to give it a surface so let's give a surface let's run and error named snack is not defined it's cuz I didn't global it down here so it's global bat okay so now we have the snack it's on the screen and you can see that when we collect it we have that cube added to the end of our snake and that pretty much is almost the game done so all we need to do now is write that reset method and then we need to just simply check like when we loop so great now the snake can go through each other through itself and you can see we have a huge error when the snake can code through itself so we need to make sure that when we hit ourselves we like end the game and we need to write that message well so method as well so to do this again I'm just gonna copy in this for loop and then we'll kind of go through from there so it's moving here okay so for X and range the length of s dot body we're gonna say s stop body X which is gonna be we're just looping through every cube in our snake body we're checking that if the position is in a list of all the positions after that works that's how we're checking the collision if you want to do it your own way go ahead but this is the way that I like to do okay so now what I'm gonna do is I just want to print the console like there's score just so that I know this versus score oops and then we'll just say plus is the length of s dot body but this is gonna have to be converted to a string unless I put a comma like that so let's just do it like that and then I am going to simply display a message box a message box like this message underscore box we can have a subject and we have content and we will do that in just a second because I haven't yet actually coded that and then we're gonna reset our snake by just doing s dot reset and this is gonna take a position which is gonna be our starting position again 10 10 and then we're gonna break out of this for loop because if we collided once we don't really care if we collide it again and go back and we continue the game with a snake that has length 1 now okay so our reset this is pretty straightforward all I'm doing in this reset is I am just gonna get rid of our turns I'm gonna get rid of our body and I'm just gonna change like the direction X and the direction Y so maybe it's faster I just copied in and you guys can just copy this out so pretty much all I'm doing is I'm setting a new head which is going to be equal to again like whatever position we give in because we can move it at a different position if we wanted to I'm clearing self dot body which is an ax class variable here and then I'm adding head I'm setting turns equal to blank Direction x is 0 Direction Y is set to 1 against that we start moving and you can see it's pretty much exactly what I have typed out here except I'm just resetting the turn system okay so now that we've done that all we need to code is message box so this one's pretty easy um you can see up here just in case you haven't looked yet I import tkinter SDK and then from deacon cherry import message box now this is how you create a message box in a PI game and this is how you create one that actually shows up on top of the screen and that doesn't like float kind of below it or doesn't show up right away if you want to say that so just watch this is extremely useful to use in other programs too if you if you copy out this function and then you just drag it into other one so attributes topmost column true what this simply does is we're creating a route oops which is not route EK its route equal to TK TK which is gonna be a new tkinter window we're making sure that this window is going to be on top of anything so if we have like a bunch of different windows open it just comes up on witches will be not I'm just gonna simply make this window now invisible and I'll explain how this works in a second and then from this message box what do you call it method class whatever guess a message box let's show info and we're gonna do subject and content and this just takes it takes a few more parameters as well if you want but pretty much this just shows info given whatever subject we type in and whatever content we have and now I'm gonna say try root destroy like that except oops pops and don't ask me what this does because honestly I don't know but it just works so pretty much it shows his message books and I'm actually pretty sure the way that this works is it constantly keeps trying to destroy the message books until eventually you click the X button and then it actually can I think it's like something like that so anyways not secret message books and with that we all we need to do is add a subject and contents or insight you lost and our message will be play again doctored up let's run the program for the last time and make sure everything is working so there we go I just need to get my snake to a length that is a large enough to the point where I can actually hit myself oh okay and there so pretty much we ran into an air hmm what is the air I spelled attributes wrong that is lovely I run into let's run back up here attributes attributes out routes where do I even make this function I must have scrolled path it alright here we go and I believe that's correct let's try this now so I'm actually just gonna go see if I can there we go okay so we get a message says you lost play again and the reason I died there by the way is because while I was moving right I moved left so technically the head of my snake actually ran into another part of it so it says you lost play again and you can make that say exactly you want and then we can see that our guy just continues to move so on so anyways I know that a lot of this has been kind of confusing some of the stuffs been all over the place but this was coding snake in Python I tried to explain everything as best I could if there's anything that you want further clarification on it's maybe something that's confusing leave a comment down below and I'll be sure to get back to you with an answer other than that if you guys enjoyed the video please make sure you leave a like and subscribe and I will see you again in the next one