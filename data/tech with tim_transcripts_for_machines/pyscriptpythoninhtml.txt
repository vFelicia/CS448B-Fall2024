so i'm a little bit late to the party here but i figured today i'd share with you my thoughts on pi script and run you through a few quick demos of how you actually use this in your html code now if you're unfamiliar with pi script this is something that is brand new from what i know it came out a few months ago and i just heard about it actually a few weeks ago hence why i'm making the video now and this lets you pretty much inject python code and run it in the browser in your html document now you can import python files you can import python modules you can do stuff like display a matplotlib graph like directly on the html page you can generate random numbers you can get values from input fields or change document tags it's pretty cool even in the very early and alpha stage that it's in right now and i think it's something we can hopefully look forward to in the future with that said though let me just hop over to visual studio code i'll give you a few quick demos hopefully you'll get a sense of what this can do and i'd love to hear your thoughts on pi script in the comments down below so before we get into the video i will mention that if you don't already know python you should check out programmingexpert.io from the link in the description this is a course that i created with the algo expert team in my opinion it's one of the best resources to learn how to code and get to a software engineering level as fast as possible it teaches python go and a bunch of other skills like software engineering tools software design etc if you guys want check it out from the link in the description and use discount code tim so i'm here in visual studio code you can see i have an html document right here and then on the side of my screen i have that html document open so i can actually view kind of the contents of the page now to use pi script is super simple all you have to do is inject these two lines of code or place these two lines of code into the head tag of your document you can get them right from the pi script website which i'll leave in the description and you actually don't need the style sheet but some of the output from this pie script tag looks weird and it gets restyled with this sheet so you can remove this if you want i'll just leave it in for now really all you need is this script here and it lets you actually use this pie script tag and start writing some python code so right away you can see that what i'm doing is printing hello world now since i'm doing that that's actually the output from this tag and then it's showing up here on the page and then i'm also just writing to an html tag so i have a p tag with id equal to text then i'm saying pi script dot right i'm writing to the uh i guess what do you call it elements or document element with uh id text and then i'm writing x plus one x is zero and so i get one so pretty simple but that's the basics of pi script this is how you use it you don't need to install anything you literally just put this script thing in the head of your tag and then it works i'll show you a few other demos here but in case you're wondering how i get this to live update i'm using something called live server here it's an extension and visual studio code so that i don't actually have to keep refreshing this page every time i make a change it just updates over here so anyways that is the most simple demo i can give you that is pi script that's as easy as it is to get started with it and the next thing i'll show you is using like numpy importing a python module etc so i've just loaded up another example here and you can see that i'm actually viewing a scatter plot that i created with matplotlib now this example is actually directly from the pi script documentation but you can see that what i'm doing here is actually using the contents from a local python file that i have and i'm also declaring the different modules that i'm going to be using inside of this python script so not all of the modules are supported but right now numpy map plot lib most of your common python modules do actually work with pi script so i can do something like create a matplotlib plot so here i'm importing matplotlib i'm importing a function from this data.pi file that i have in the same directory and then i'm just creating a plot and just outputting that now the way i'm outputting that is by writing the name of the plot and by doing that inside of the pi script tag it actually shows up on the screen now if i were to say comment this out uh then i believe that's gonna go away and let's see here and if it loads you can see that this is again in a very early stage this does take actually a really long time to work then it goes away okay now here i've just said that the output is going to be plot which means whatever the output of this pi script tag is goes to this div so it's going inside of there and the reason i'm able to use these modules is because i declared them inside of pi e and v right i put numpy matplotlib and then i have a local module so i said paths and then dot slash data.pi now i'm able to actually use this file and then i can do whatever i want inside of here now one thing to note is that inside of your pi script code you can actually use javascript code so i can just go console like this dot log and let's just say hello now you have to be careful when you save this because the auto formatter i have one enabled it will like mess up all your python code but now if i go to inspect and i go to the console we should see that we get a hello once this actually loads up okay so let's give it a second here to finish and there you go we can see we get hello we have our plot showing up here and yeah any valid javascript code just works inside of here with your python code so there you go that is example two let me load up one more all right so i've just loaded up example number three and here i've created a random number guessing game where i've used almost all just python code to do this inside of pi script so let's just try this i can say one two three four five and okay i got it in five guesses so correct you took five guesses and it says guess the number in range one to ten and then i can restart and there you go so i'm interacting with the dom elements i'm changing uh different fields like i'm changing the zero to one two three etc and i'm getting the value from this input field and then linking a python function to the press of a button so i'll show you how we do that of course i have my script here notice i uh or noticed sorry i did not put the style sheet if i put the style sheet it makes my uh forum look all weird so i just remove the style sheet i don't need it there and then what i've done is created a little i guess form or i guess the document elements whatever you want to call this where i have guess the random number number of guesses that i'm displaying i have an input field and then two buttons and a place where i am showing the result so what i need to do for this to work here is i actually needed to link the button presses here to a python function and the way that you do that is using these two modules so you have to create a proxy between a javascript event to a python function call sounds complicated but it's really not that bad so i have from js import document from whatever this module name is import create proxy and then i'm importing brand so i just create a random number here at the top i have guesses equal to zero i'm sure you guys can read this python code yourself but i just global numbering guesses yes that's bad practice but i just wanted to show you how this works and then i create a new number if you restart and i reset the guesses to zero while clearing what i'd written on the screen so i clear the result and then rewrite this back to number of guesses here now down here what i actually needed to do is again create this proxy so i say my guess proxy is equal to create proxy and then i put inside of here guess now guess is the function that i want to create the proxy for so i'm putting the name of my python function and i say my guess button is equal to document.getelementbyid and then guess button the reason i can do that is because i'm saying from js import document and then i get access to that element then i'm going to say guessbutton.add event listener just like i would in javascript i'm listening on click and then what i'm gonna do is call the guest proxy so since i've created the proxy it will then actually call the guest function and run that python code same thing for the restart proxy and the restart button it's just changed to be the id of the restart button yeah we can look in here so i have global guesses guesses plus equals one i then get the input field so to do that you just have element you put the name of or the id of the element and then dot element to access that and i say text is equal to imp.value just to get the value from that input field i then clear the input value and i'm checking if the text which is this right here is equal to the number that uh we created the random number right uh if it is then i'm going to say okay you've got that correct with number of guesses otherwise i'm going to write wrong and then no matter what i am going to write an updated number of guesses so there you go that is it for creating a random number guessing game i know this seems pretty trivial and pretty easy to you guys but i just wanted to show you kind of what you can do with pi script in a really short video and give you a quick introduction to this cool thing so now that we've looked at the demo let me just share with you my thoughts quickly i think that this is cool right and that's really the best way for me to describe it i don't think it's very useful but it definitely is interesting i had fun kind of playing with it for 20 minutes before this video and if i was going to do something really simple or maybe i was teaching a beginner how to program and we wanted to create a basic user interface or something along those lines then pi script seems like kind of a cool way to go for example here i created a random number guessing game where you actually have buttons to press you have an input field and you saw it was relatively simple it was what you know 20 lines of code or something like that whereas if i were to do this just in standard python i wouldn't really have a user interface i'd just have the terminal and it wouldn't be as interactive as or as interesting maybe for a beginner to see kind of what they've created so that's really where i see the value here when you're learning how to program this could be cool because now you can actually visualize what you're doing in a web browser and kind of mix a bit of html with your python code but beyond that again i just can't really see myself writing python code in the browser as opposed to just writing javascript if this does get better if it gets faster if it has more features i'll definitely try it again and maybe create some cool projects with pyscript but for now i think this is really more of i don't want to say a gimmick but just kind of a cool thing that you can do it's probably useful for learning and you know some of you guys are probably going to try this out after just because you think it's interesting beyond that though i wouldn't use this in production code and in fact it actually says on the pi script website do not use this in production uh because it's very alpha it's very slow it's kind of you know like clunky in a sense and it has a long way to go anyways though i think this is interesting if you guys want to see some videos on pi script in the future then let me know i wouldn't be opposed to making a few kind of beginner projects with pi script with a nice user interface maybe some javascript or css animations or something like that that could be triggered from python maybe that's something cool that we can do on the channel let me know your thoughts in the comments down below with that said though i'm going to wrap it up here if you guys enjoyed make sure to leave a like subscribe to the channel and i will see you in the next one you