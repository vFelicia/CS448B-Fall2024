hey guys and welcome back to another YouTube video so in today's video I'm going to be doing a tutorial on coding tictactoe in Python now this is going to be a text based game not a graphical based game but it's going to introduce us to AI on a really simple level so this your first time dealing with any type of artificial intelligence it's definitely a good tutorial to follow and even if you just want to make a cool little tictactoe game then definitely stick around for the tutorial and watch so what I'm gonna be doing is I'm gonna be walking through all of the code how everything works and typing it out with you guys stepbystep so I'm just gonna give you an example of what the game is gonna look like because I've already got it coded I'm just gonna retype everything go through everything in detail so it asks you to choose a position that you want to place in X and two pieces so what we're gonna do is we're gonna say the user always goes first and we have a 1 to 9 grid here so 1 2 3 4 5 6 7 8 9 choose your position I'm just gonna say to can see our computer picks where they want to go and then we can get to choose our position again in this case I'm gonna go 5 we are blocked where else should we go now 6 like that and then I'm just gonna see if the computer will take the winning move which it should I'll go 9 it says when this time do you want to play again and then we can proceed to play again if we'd like to and that is pretty much what the game is gonna look like once we're done so I don't know if this is going to be multiple tutorials or not it depends on how long it takes me to do this I asked mate it's probably on take close to maybe an hour cuz I coded it in like 40 minutes so if I would need to explain everything it's gonna take a bit longer um so just bear with me if it's multiple tutorials you know what I'm try to break it into maybe two or three videos okay so what I want to do to start is I already have all of my main functions written out and this is what I like to do to start my programs just so I make sure I don't forget anything and so I know what I need each section of code to be doing so insert letter should say space space is free print board is winner player move called can't move computer whatever select random don't need to count moves do I is board full and then main so you guys can take a second to copy these out or you can just write them as I start filling them in so the first thing we need to do when we're coating a tictactoe game is we need a board so this is what's gonna store our X's and O's for the program so I'm just gonna populate this board list with 4x in range 10 now the reason I'm saying 10 instead of 9 is because I want to have one leading space in my list so if I have a list like this I want it to look like this and then so on so I want this to always be empty because when I ask the user to input a number or position they're giving me from 1 to 9 they're not giving me from 0 to 8 so I just want to leave this here so that it makes things simpler throw the rest of the program you'll understand what I mean if you don't get it right now so the next thing I want to do is I just want to start filling in some of these functions with really basic code so insert letter this is gonna do exactly what it says it's just gonna insert the letter into our board list so I'm just gonna say board pause equals letter really simple so whenever we want to insert a letter we call this we give it the letter wheel and insert and then the position where we are inserting that letter space is free what this one is gonna do is they're just gonna check if the space that we'd like to insert something into is free or if it's not free so if it already has an X or an already has a no this is really easy I'm just gonna return and then we say board pause equals equals blank space like that now that's just gonna give us a true or false value because that's a boolean condition and now print board so we want to print out our board in like a goodlooking way so that the user can actually see what's going on so bear with me for this one it's kind of annoying to print this out just follow along with what I type here I have my other window open so I'm just gonna copy that to make sure I don't mess everything up straight line straight line that needs another space yeah it does and there we go and then I need to go print space plus board 1 plus and this is gonna be embedded like that plus 4 2 plus plus 3 oops that is a 3 plus and there is no plus again there you just go stored 3 ok now after that I need to print this again so I'm just gonna copy that should just copy the whole thing that's right going to print 10 dashes like this 1 2 3 4 5 6 7 8 9 10 actually one more I think or yeah 11 I believe that's 11 dashes or maybe I just miscounted I don't know whatever that is that somebody needs to print then I'm gonna reprint this it's about pasting that they're gonna copy this and just change the numbers in here so we're printing the next row so in this case contains up to 4 5 6 like so we're gonna copy what we just wrote here print this afterwards and then we only have two more lines left we're gonna print this again changing the numbers why don't we start at 7 8 & 9 and then we're going to finish off with one more of these like that now I know that's extremely tedious to print but that's the only time we're ever gonna have to do it and that's why we make a function so that we don't have to type this a bunch of times we can just call it so that should work if I notice that I did anything wrong I'll go back in the program and fix it for you guys and make sure I let you know that that looks good to me okay so we have insert letters spaces free and print board now what I want to do is I want to run into our next function here which is is winter now we're just gonna check in this function if this stands for board by the way in the stands for letter if we have a winner based on the current board now this if one again is an another tedious one to do I'm just getting these out of the way at the beginning but pretty much we're just gonna have to check if every single line on the board is populated with the letter so we're gonna say return and we're gonna just do brackets like this and I say Bo I know it's a weird name for that for it which just sense your board equals equals L e & v o8 this equals L U and V o.9 because equals le so this we've just officially done our first row I'm going from bottom to top so seven eight nine if that's full we have a row there is indeed a winner let me say or and I'm just gonna go down to the next line just so things are a little bit cleaner you say bo4 equals equals e le and bo5 please le and beo6 equals equals le or and then same thing again down here vo 1 equals equals le and video to physicals le and not in the brackets there don't know what I did there oops square bracket goes back over here my bad and bo3 equals equals le or and we'll go the next one I suppose I could probably just copy this so we've done three rows now we have seven eight nine four five six and one two three so those are our rows going across now we need to do our rows going down so to go down we're gonna say if Bo one goes equals le and Bo four equals equals L e & v o7o is equals le and now or and again I'm just gonna copy this cuz I think it's gonna save some time if I copy it a few times and just change it so now we need you to say two five and eight I believe five eight and then this one is going to be three six and nine and now all that is left to do is our diagonals so I'll copy this one more time and our diagonals are one five and nine and two one more time we have three five and seven no is it seven yes it is okay and that should be about right now again if I notice that anything's around here I'm gonna change it later but I think I did everything correctly for that so that's the tedious stuff out of the way and now we can move down to our main function so already we've written insert letter spaces free print board and is winner all of these are really simple what this is just gonna do is it's gonna check each position in the grid so it's gonna say four which would be second row first column and then five which would be second row second column second row third column so on and if those are all full then we have a winner and then it's gonna return that as either true or false based on if this condition holds true so now in our main this is where we're actually gonna be executing the functions and the commands so what we want to do in here is I'm just print like a little welcome message welcome to tictactoe exclamation point you can put whatever else you want in there if you want to explain the game I'm not gonna bother just gonna go ahead and say welcome to tictactoe and then after that we're going to print our board up and just show them what the board looks like so they can then see like one two three four five six seven eight nine for example and now I'm gonna start my main loop I'm just gonna say wow true like so and then in here is where we are going to write all of our commands so I'm actually just gonna start filling them in now and then the functions that we haven't yet written we'll go ahead and we'll write those so actually instead of true what I'm gonna say here if if if not is board full and then we're going to pass it board because if our board is full then that means that we tied the game so we don't want to continue with our we want to move to the next command which is gonna be down here we're going to say if bored part if is bored pull like that bored then we're gonna print to the screen tie game like so because there's no more spaces left to move so the game is tied and we can print simply print that out at the bottom there all right now in here so if the board is not full we want to execute our commands where we're going to check we're gonna do a player move and then we're gonna do a computer move and we're gonna check to see whether each of them win so in here I'm going to say if not is winner board with oh and I'll explain us in one second once I've just finished writing it then we're gonna do a play roof like that and then we're gonna print it like so so what this is is gonna be doing right now is we're going to check to see if the computer has one since our computer's gonna be O's and we're gonna be X's we're first gonna check we're gonna say if we check and we say that the board is full we have a straight line of OS well there's no point in doing a player move on because O's already won so in that case we write an else here and we're just gonna print to the screen um I'm gonna say story coma and then I'm shooting a backslash to second Drive is O's one this time like that because that means that the board was full of O's they won there's no point of doing a player move so let's let the player know that and then move on and then from here I'm gonna break and what break is gonna do is it's gonna break us out of this while loop so we can though then go to continue and ask the player do they want to play again because we're not gonna continue going through the loop if we already determined a winner right so now I'm going to write a similar thing for the computer so I'm just going to copy this paste it down here and in this case now I'm gonna check to see if the player won so what happens here is we said if the computer one we're gonna say Cerrillos one this time we're gonna break the program in this case we're going to say if the player won because they just moved up here then we're gonna say story x1 this time or in this case since it's a player we'll say X is X is 1 this time good job because we're rewarding the player for doing good job in winning the game except in here we're gonna change a few things um once we get into like the actual sequence of the computer move but for now just gonna change this to can't move like that and we'll come back to this and and finish that later okay so now we've used this player move function and we've also used this is board full function but we haven't yet finished writing these functions out so the first thing I'm going to do is is board full and again what this is gonna do is just going to return true or false if the board is full so a really easy way to do this is we have our board variable up at the top that has a bunch of blank spaces in it or X's and O's right so if we have more than two or or more than one blank spaces then our board is not full because we started with that blank space that's always gonna be blank at the beginning but if there's another one that means there's one more position that we could move so we're gonna just say if the board dot count blank space like that is greater than 1 return true else and then we return false nice and simple like that now you might say well if it's not easy why don't we just type it in here the whole point is that we never want to repeat code when we're writing so if I'm even think I'm gonna use this two maybe three times it just makes sense to put it in a function it's also easier just to read your code like that so you say well not is board full so if the board is full like you know exactly what it means and for someone else reading it it just makes more sense to do that so now we're gonna go to player moves so we've done this is board full and in player move this is where things get a little bit more calm but not too bad so what we want to do here is we want to just make another loop because we don't want to move through the program unless the player gives us a valid answer so just follow along with me here ball run and now I'm just gonna say move equals input I'm gonna ask the user where they want to move so I'm just going to say please select a position to place and X like so and I'm just gonna put this in quotation marks and you can just get these by doing a little backslash like that and then do like a comma or else put in brackets one to nine so they know what I'm expecting as possible answer now what I want to do is I'm gonna run a try and accept statement I'm just to make sure that they are giving us a number because for example if the user were to type 8 where they typed it like that then I would throw an error and we don't want our program to crash we want to catch that error so that we can then move forward with the program ask the user again type another will and type another one until they give us valid input so say try and then hear me to say move equals in to move because if they try to give us something that's a string for example like hello then obviously you can't into that so it's just gonna crash and it'll go to our except statement which I'm going to write there and get into in a second after that I want to make sure that our the move that they type in is within the range so if for example they typed a move like 28 well what the heck does 28 mean to us it means nothing they need to type something between 1 and 9 so to check that we just say if move is greater than 0 and is less than 10 then we're good and we'll go to the next check that we need to do so now that we have valid input so they've given us a number between 1 and 9 it's all good now we need to make sure that where they're moving isn't already occupied and that's where the is space free or space is free function comes in so again in here I'm just gonna say if space oops is free and I'll put move in there then what we'll do is we're gonna say Ron equals false because now in this case we no longer need to keep running this input because they've given us valid input the space is free it's a number between 1 and 9 and we're gonna insert it into our table and remember we did and our will just say insert letter here insert letter function that we do at the beginning our letter is gonna be X cos its player and the position is going to be moved where they wanted to move like that now if these things aren't good what we want to do is we want to tell the user what's wrong with their input so our first else statement is going to be out here and what it's going to check is where it is gonna say if the move was a valid number but it wasn't in between the range let's tell them that let's say print please insert or please type a number within the range like so little exclamation point and then our other else statement was in here and this one says space is free like we're gonna say sorry comma this space is occupied like that now we need to do our final exception here whatever print statement and in this case we're just gonna say please type a number because if we couldn't int it then we're gonna move into the accept and that's because they didn't type a number we couldn't int it and that's pretty much grabbing our player move for us and that's all we really need for the player move function so now that we've finished that let's go through and just kind of summary what we've done so we've created a board we filled it up with a bunch of blank spaces and then we've made our insert letter function which is going to insert a letter into our board we've checked if the space is free by writing space is free function we have another function that's going to print the board so it looks proper on the screen we have a function that checks if one of our players is a winner or not we're at the computer's winner we have a function that grabs our player move sure that they give us valid input and then we have we can see if the board is full and then in here we go through the sequence of do a player move then do a computer move and we're checking if one of them wins throughout though