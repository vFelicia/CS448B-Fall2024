hello everyone I'm Ola and this is coding is for girls recently I showed you how to read and write files in Python and I think it's about time to do something useful with this knowledge programming is all about automating boring things and the thing we will build today is amazing example of that so today and in my next video because that will be probably too long for just one film we will build a program that will read data from spreadsheet or Excel that contains names emails and some other information and we will use this data to generate custommade emails for every person and then send it to the people isn't that exciting today we will focus on daytime spreadsheets and will try to fit it to pilot and script and then generate custom emails for every person from the spreadsheet please mind that we will try to keep things very simple here so we will skip most of the edge cases and error handling but in a description below I have a example list of things that you might consider if you want to extend this program first we need a spreadsheet I use Google Mail and Google Drive quite a lot so I will use that if you have OpenOffice spreadsheets or Excel you can do exactly the same thing I will open a spreadsheet I have on my Google Drive as you can see I have some data here names emails there are fictional emails if you are curious if the person was accepted to the workshop or not their code name and their language what we want to do here is to save data from this file in a way that will be the best for Python and the easiest solution is to use CSV which is acronym for comma separated values I will choose file download as comma separated values now I have it saved on my machine I will now move the file to desktop and rename it so it's called applications dot CSV if you open the file right now you will notice that every row in the table from the spreadsheet is a separate line in this file and each value from the cell is separated from other values with color and yet this is why it's called comma separated values okay so we have data so first step is to open this file and read in bayson and if you watched my previous video you already know how to do that as always link that the video is in the description below let's open code editor and create a new Python script I will call it read a title to py first we want to open the file which is saved we store the file in csv underscore file variable and we'll open the file using open now we will type the name of the file application is Delta CSB then we will simply read the file linebyline for a row in csv file column and then print row finally after we printed all rows we want to close the file csv file dot close okay this is our base let's save and give it a go in console let's buy a Python free read date out of the py okay this is a good we read all the lines time to split each line into separate values the values from the spreadsheet cells and to do that we will use something that Python standard library or sundered module CSV provides us if you want to learn a little bit more make sure to check Python documentation about CSV model first we need to import the model we do that by typing at the beginning of the file import CSV now we will use csv reader this is a part of Python standard library that will help us read all values and split them as they were originally in cells let's start the reader in the variable called CSV reader now we will type equals and let's create the reader CSV reader in parentheses we will give the file which is opened so CSV file and then in argument delimiter we'll specify what character in our file tells us which value is in which cell here it is comma now let's replace CSV file here with CSV reader let's save the file and try it in console PI don't reread theta dot Phi as you can see we no longer have a simple line of text displayed as it was in the file now the data is split into lists like in a table from the spreadsheet this is very neat but here is the row that contains table headers and we don't really want these values at all we'd rather keep them and we can do that like this next from CSV Reader after we create the reader it just goes to the next line so we skip the first row completely now let's save and run again python free reach theta dot py this time we don't have header row anymore this is cool okay so we have data but I think the very nice thing to do here is to take this data and feed it to different variables so we know that this is email this is the name of the person this is the information about code name and so on and so on and there is a nice convenient way in python to do that in just one line i haven't showed that to you yet so now it's the time so now we have the list and we want to have number of our goals that stores values from this list and to do that we just type the names of the variables and we separate them with commas so we'll have name comma email comma and so on equals and then the list okay it might sound a little bit weird so let's see that in action so we want to give names for all variables from the list so we want to store each value from the list in separate variable we have name first now we'll type come up then email now after comma we'll have a the person is accepted then coach name and finally language of the person now we type equals and our list stored in variable row we can now print all these values like this print name email accepted coach and language let's save and try it python free read data py yeah it worked nicely now every value is stored in separate variable so the only thing that left is to generate email either acceptance email or rejection email depending on the value in accepted column so let's type if accepted equals yes we'll have emailed for accepted so for now I will just type message equals accepted else message equals rejected okay but we want something more than just text accepted or rejected in the email we actually want text that will use name of the person make the code name and generate some personalized message for every person so let's go to the top of the file and after imports will define templates for our emails we will start with acceptance one and now we will use special kind of variable here it called constant it is pretty much the normal variable and the difference between normal variable and constant is that the value for it never changes while program is running and the convention is to name it using only capital letters so in our scenario rule type accepted message now we will create a text with multiple lines and Python allows us to do that if we use triple quotes like this okay now let's type the message hi now let's use curly brackets to indicate that will inject value here remember we can do that if we use format method for strings now we will type we are thrilled to let you know that you are accepted to our programming workshop your code is curly braket again can't wait to see you there Thank You workshop organizers ok so now it's time for rejection email template so we'll type rejected message triple quotes hi placeholder we are very sorry to let you know that due to a big number of applications we couldn't hit you at the workshop this time we hope to see you next time thank you workshop organizers we will now use these values inside the if statement here if the person was accepted we will use accepted message and we will inject name and coach named using format method so we'll type message equals accepted message dot format name code and in else branch we will use rejected message dot format and this time we just need the name of the person finally let's print all the values we'll do that with print so we'll have print send email to placeholder dot format email then print email content and in separate line print message let's say the file and check if the script works Python free rich data dot pi yay it worked and we have all emails printed if you take a closer look you will see that each email has correct name and counter name injected in a correct place in email for example here when it was protected so the email say so but civil was accepted and we have her code name here Hana that is properly amazing which took data from spreadsheet and we generated something custom for each row from this data this is exactly what is programming all about automating tasks but before we will finish this video I will show you some small things that we can do better and this is just a minor thing to do but I always like to show you the best ways to do things so the thing with false is when you open them you need to remember to close them after you are done with them but I usually forget that and to prevent that comes with syntax that helps you so instead of opening files and then remembering about closing it we're going to start with open file us and we'll give name and then we'll create the block and inside this block the file will be open and when the block is finished Python will automatically close it for us we will remove the line that opens the file and replace it with with open applications dot CSV as CSV file colon now we'll take everything else in the file and indent it so it is inside the block and finally we can delete line that closes the file it's not needed anymore this syntax is equivalent to what we're doing before but it's slightly more readable let's save it and try and console if that still works it is that's good the only remaining thing now is to actually send emails but this is a topic for my next video and every time I record video for you I really really hope that it will be just five minute but in the end it never happens it's never five minutes it's always ten twelve fifteen and it takes ages to edit so I decided to talk more about email sending in Python in a separate video so if you want to learn how to do that and you want to learn how to program with me make sure to subscribe this channel and stay tuned have a lovely day and see you