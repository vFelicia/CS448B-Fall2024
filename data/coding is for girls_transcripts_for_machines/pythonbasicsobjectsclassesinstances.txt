hello everyone I'm Ola and this is coding is for girls so far we're talking about python basic syntax without even mentioning objects and classes and I think it's about time to change it this episode will be very complicated because classes and objects are something that is not very straightforward it's one of the things that once you understand the concept it's quite natural and easy however when you see that for a first time in your life it's kind of weird if you haven't seen my previous videos about reading from CSV files and sending emails I think it's a very good idea to check them out now because I will use these programs as a base for today's episode to show you how to deal with classes and objects in Python so far we've described everything line by line in our program we don't really have any connection between what our program does with what data represent in fact the data has no real meaning what we did so far is called procedural programming and is one of computer science programming paradigms however there is another Paradigm that is very interesting to learn and this one is is called objectoriented programming the problem with writing software is the fact that it's extremely complex to think about every possibility and relation in your program it is so much easier to split problem into smaller pieces and focus at one part at a time this way you build your program from smaller chunks that are much easier to grasp and these chunks are called objects objects combine State and behavior this concept is somehow closer to the way people think we associate things with what they can do how they behave and what we can do with them when dealing with objects in programming languages we talk about two concepts classes and instances a class is an abstraction or a definition of a given thing you can think about it as a cookie cutter that gives the shape of the cookie but it is not a cookie itself an instance or an object is a concrete thing is a cookie made with a cookie cutter it exists and can interact with other instances in your program if you watch my videos about reading from CSV files and sending emails you know that we're using as a starting point a spreadsheet that contained information about Workshop applicants The Columns there defined our class representing applicant it told us that applicant need to have certain attributes name email address if they are accepted or not who is their coach and what is their native language and each row in this spreadsheet was an instance we had Alice Eve and maray they all fit into more general idea of Workshop applicant defined in columns but they have all data filled in each cell let's open our program that we created last time when we were talking about sending emails and see how we can modify it to introduce object and classes here we've been reading rows from CSV file row by row with data of applicants and then we're sending emails to them let's see if we can create applicant model out of the each row from the CSV file so far we were storing every value from cells in each row in one of the variables name email accepted coach and language these values are a clear candidates to be properties of our new object so our first step will be creating applicant class with the following properties name email accepted cach and language let's talk a little bit about synx in Python to start a class definition we need to start line with the special keyword class then similar to The Way We defined function we need a unique name for for our class in this scenario we will use applicant and please note that we are starting with capital letter this is a convention in Python and we should follow that finally we type colum and we can start the block definition of the class now we can Define either properties that are same for every single instance of this class or Define something called Methods method is a special function that works with the given object normal fun function can be used anywhere in your program however the method need to have existing object and instance on which it works in Python the first argument of the method is a current instance typically we call it s and we can use it inside our method to access data stored in our object in Python there are also methods that are very special their name usually start with to scores and this is because normal people do not name things starting with underscore so this is just in case one which we start with is called underscore underscore init underscore underscore and it's used when we create and initialize the instance of the class and it will be useful right now for us to pass values from our CSV files to store them in the object it will be easy to see that in the example let's open the screen script from previous video where we sent emails to people from the spreadsheet let's say the file as classes. puy now in this line we were reading values from CSV file and we stored them in variables what we would like to do here is to take these values and put them inside the object we will start with defining the class then so just before with statement we will start defining class for the applicant we will type class applicant column now we will Define init method what we would like to do is to get all variables from the CSV files name email and so on and store them inside the object we will start defining method but typing def which indicate it's a function please note that this function is indented that means it is inside block defined by class and it will therefore be a method of the class now we t type name of the method so underscore underscore init underscore uncore we Open brackets and as I mentioned previously the first argument should be a reference to the current object and we call it self then we will provide all arguments which we would normally pass to any function here we will type name email accepted coach and language now we type column starting a block of a method what we would like to do here is make sure that we store all data we just passed as arguments as objects properties we do that as follows we type self. name equals name that means that current object will store name from CSV file in the property called name let's do the similar thing with email self. email equals email now we would like to store information if the applicant was accepted or not however in CSV file we store this as a text either yes or no but in our Python program what makes more sense is to store this value as a bleen true or false this way we don't need to add everywhere if accepted equals yes then do something make sure to check my video about bulen values if next steps feels like magic here inside object would like to store property called accepted that contains ban value calculated from value inside accepted argument so we will type if accepted equals equals yes column then inside in the block will type self. accepted equals true and then else self accepted equals false now we can store values of the code and language like this self. coach equals coach and self. language equals language okay let's save and go back to the line where we read values from CSV file here we will create instance of the applicant with data from the particular row we will store it in variable called applicant and then we type equals and we will create an instance by writing name of the class so applicant open parenthesis and here we will pass arguments our init function expects all except the first one called self as it is an instance itself and python automatically added for us name email accepted coach and language all values just read from CS buau this line takes a class applicant and creates an instance of the object applicant class is our cookie cutter and this line is actually creating our cookie now we created something that is a separate entity an instance okay but what we can do with applicant I mentioned that objects are binding data with behavior so what we could do here is to extract the logic that is responsible for generating email subject and content and put it inside our newly created applicant object we will create two methods on applicant one will be called prepare email subject and will generate as the subject for the email the second one will be called prepare email message and will generate the content of the email inside applicant class will will Define the first method as follows Dev prepare email subject Open brackets self so the instance of applicant and then close brackets and column now it's time to return the value of the subject depending on the fact if the current applicant was accepted or not we will type then if self. accepted column and if the person was accepted we will type return Workshop application accepted but if the person was not accepted and self accepted is false we will return Workshop application not this time okay time to Define second method def prepare email message Open brackets self close brackets and column and the logic will be similar but this time will use the code that generated content if self. accepted return accepted messages format self. name self coach as you can see we are using values stored inside our object and we access them by using self Dot and the name of the property here self. name and self. Coach so the remaining bit here is to return the message if the person was rejected so here we will type return rejected message. format self. name okay let's see how we can modify our code to actually use these newly defined methods inside for Loop we will replace this whole e El statement with the calls to our new methods we will do subject equals applicant as we are storing the instance of the current applicant inv variable applicant Dot and the name of the method so prepare email subject then we open and close parentheses now let's do the similar thing with the email message we'll store in variable message the following applicant. prepare email message open and close parentheses now email message will use values we calculated inside applicant object methods nice okay let's save and see if our program still works as before we will go to console and type python free classes. piy uhoh something is wrong we just got the following error SMTP leap. SMTP authentication code it is something that some of you encountered when working with my previous video about sending emails this error is Gmail specific and to fix that we would need to make sure that less secure apps are enabled in Gmail and I want to say thank thank you to the viewers who pointed out that this is the issue and they were helping others to fix the same bug to fix the problem we'll need to go to this page when being logged in as an account we want to send emails from google.com setting security less secure apps and click turn on that's it I will place the link in the description below once again make sure to use account that is created just for testing purposes now let's check if the program works now Python 3 classes dop okay it finished let's check if we got any emails and yes it worked so far we learn how to create class in Python and how to instantiate it we also learn how to create methods that can be used later on in our program on the instance as a last step today I want us to do a small refactoring of the code it will make our code cleaner and I think it's all always good to try to find places where we can refactor code and make it easier to understand now we are doing two different things in the same for Loop we are reading from the CSV file and we are sending email but since we created objects from the CSV rows there is no need to keep it together anymore the current solution is also not good from the logic point of view if we had error in data in the third row of our spreadsheet our program would go and read the first to applicants and send emails to them and when reading the third row there will be error our python script will stop and none of other applicants will get any email next time we run the script the first two people who already get an email would get the same email second time this is not good and I think it's much better to keep reading from the CSV file and sending email separate things what we could do is reading the applicant first and then after that's finished send emails to every applicant we read this way if the reading of the CSV file failed in any of the rows we haven't sent emails to any of applicants and we are safe to try our program once again we will achieve that by creating two separate functions first one will be called read applicants which will open CS file read all the rows and create applicants out of each row and return the list of created applicants the second function will be called send Workshop emails which will take list of the applicants and will generate and send emails to people let's start with read applicants function before the with statement we will type def read applicants open and close parentheses column then we need a list in which we will be adding all applicants we are about to create we will type applicants equals open and close Square parentheses we started as an empty list and we will be appending applicants as we go now we will copy the code that opens and reads CSV file with statement the creation of applicant instance now we would like to add newly created applicant to the applicants list we will do that like this applicants dot app and in parentheses applicant finally after we are done with the for Loop we want to return the list of created applicants return applicants now we can write this applicants equals read applicants and applicants variable will have a list of applicants right inside read applicants function we can now pass this list to the second function we want to create send Workshop emails we will start by defining the function here def send Workshop emails open parenthesis applicants close parenthesis and column now what we want to do is open SMTP connection so let's copy paste this lines from SMTP to login and at the end we should copy the bit that closes the connection as well so SMTP do quit now before it we want to send emails to every applicant and for that we need a for loop again so four applicant in applicants column and now we can copy paste this bit from subject to send mail and paste it here there is one more thing missing here in send Workshop emails in the line where we send the email we no longer has a variable called email if we try to leave it like this we will end up having a name error when we try to run the script so how to access the email of the applicant then previously we store it in a property email on the applicant class so all we need to do is to use it here to access we will tell applicant. email that's it okay we can now delete all old codes from we statement to closing sntp and after this line applicants equals read applicants we can simply call send Workshop emails function like this send Workshop emails and we'll pass applicants as an argument let's save and see if it still works as before so python free classes top yes it's a success that was a lot to take in if you're still confused and you're not sure how classes objects and instances work please do not desper this is a very complex concept and it takes time to grasp it you'll need practice and experience before this concept start to to be familiar for you and there is a whole academic Tory behind classes and objects but to be honest it's not needed to make use of this technique and we will be using more and more classes and objects in the future okay so let's recap objects help us to build program from the smaller pieces we Define classes to describe general behavior and we instantiate with a concrete object with the individual data I hope you had found learning about objects today and if you want to learn how to program with me make sure to subscribe this Channel and stay tuned have a lovely day and see you