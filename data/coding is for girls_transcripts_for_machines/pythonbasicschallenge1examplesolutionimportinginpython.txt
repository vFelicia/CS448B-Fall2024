hello everyone I'm all now and this is building is for girls today as promised I will show you an example solution for one of the challenges I gave you in one of my previous videos if you don't know what I'm talking about make sure to look at the link in the description below first let's remind what the first challenge was all about we wanted a program that will first ask you to provide a number of interests then wait for you to type the number and then click enter take this volume and convert it into centimeters and finally print answer number interest is the number of centimeters where you replace number and result with the calculated values for example for two interest we would have two interest is 5.08 centimeters and to remind you bonus points were for handling errors and incorrect types for example if the user typed some text for example the name Ola instead of the number okay let's start the code I create the file called unit stat file and save it on my desktop first we need to print the message asking user to provide a number of interest and then store it somewhere for example in variable interest okay so let's type interest equals input hopefully you remember that input is a Python function that allows reading what user types and storing the value if you want if you don't know what it's all about make sure to check my previous video python basics user input and dealing with errors then we type provide a number of images next thing we would like to calculate is how many centimeters the given number of engines in quality one inch is to the point 54 centimeter so we have to multiply a number we got from the user by 2.54 so we will print the result as interest plus the text interest is then + and the value in variable interest multiplied by 2.54 and then text centimeters okay let's try to run our program in console so we type python 3 units to the PI there is an error but why well the error is type error saying that we cannot multiply sequence by non end of type float as I told you in one of my previous video input function invite and return text not number so we need to make sure that we change somehow the text containing number into the real number in python and we can do that by using Python function named load and take this number and then multiply it by 2.54 let's do this right now we will wrap a variable interest in to float function like this now let's save file and run it in console now now we cannot display the value because we need text this is so annoying although we successfully converted our user input into number and made all the calculations to get number of centimeters now if we want to display it in print function we expect to have text so we need to take the calculated value and change it into text by using Python function named STR ok so let's wrap float interest multiple 2.54 with STR function now let's save the file and run it in console we type python 3 units at 5 now it worked but let's make our code a little bit nicer more beautiful and more readable because it's a little bit ugly now let's take this bit so now images multiple 2.54 and store it in a variable so the code is more readable let's call the variable cm from centimeters okay that's better and it still works nicely what we did is separating the calculation of number of centimeters from displaying that but we can go one step further and use feyten building method called format I know I haven't talked about it yet but I cannot resist introducing something new let's take a quick look at the Python documentation about this method it says that format performs a string formatting operation the string on which this method is called can contain literal text or replacement filter delimiter by curly braces each replacement field contains either the numeric index of the positional argument or the name of the keyword argument returns a copy of a string where each replacement field is replaced with a string value of the corresponding argument okay that was a little bit confusing even for me and I know how format method works but in the end it means that we have a text with some kind of placeholders here and there and then we provide the values for these placeholders at the very end and we use curly brackets to mark the places we want to put some values from our variables I like to think about format method like having some kind of template for example if I write an invitation or the letter I want to send to many people I have pretty much the same text and I just want to put a different address and name to each invitation and the name and address are this placeholders this curly brackets in format and the text of the invitation is the text we are running the format with so when we use format method we first write the text and to mark all the places where we want to inject the value our placeholders with the curly brackets and then use dot format and in parentheses would provide all the arguments on the variables we want to put into our holder's okay let's see it in action let's turn to print in our program first we want to have a number of images this will need a placeholder so we type curly brackets and then we type in just s and we want to display number of centimeter so we will need another placeholder finally we add centimeters then we take our whole text and after it adopt and type format that means we call method format on this text now in parentheses will provide interests and centimeters re apples remembering about correct order have you noticed that we no longer need to transform variable that stores centimeters to text using STR method format method is smart enough to do it for us so we don't need to remember about it every single time let's make our code even preacher we can take the inner part in print and store it in that separate variable so it's even more readable let's call it message and remember about naming your variables in a meaningful way this will expose to every person who read your code what was the intent of the code and it makes it much much easier to read okay but the question is can we make our code even nicer well of course we can let's take this line centimeters equals float inches multiple 2.54 and create a nice freezable functions after that all you can ask why we actually need function here the code is good enough it works so why we would like to do that imagine that we have two different files that want to do my very same thing but slightly different let's create a file named units PL dot v and let's save it in the same folder I'm saving it on desktop this program will do pretty much the same but instead of displaying all messages in English we will use polish I will type input with this messages like for they live sunny and then if I would like to calculate the number I would need to copy the whole thing again like this changing only the text but this is not that nice and in case we have 100 different files with 100 different languages that does pretty much the same and we somehow made a mistake and instead of multiplying by 2.54 we would multiply by 2.56 and we will realize that there is an error we'll need to go to every single file out of 100 and fix it this is not good and computer scientists don't like to repeat themselves but we can be smarter we can create a separate file we can call it a unit function Spotify and move the curve that calculates the value and make the function out of that and we use that in every single file who would like to have so in the unit 5 and units PL dot 5 let's create the file unit functions that fire them and save it on desktop inside we will define the function let's call it inches to centimeters and we wanted to return the calculation now when we go back to units PL dot fire file instead of centimeter variable in print we will call that created function with interest we get from the user let's save and run it in console Oh when we run it the program breaks saying that the function is not defined and this is true because in this file units PL dot 5 there is no function called interest centimeters but the thing is that feyten allows you to share the code between files yes we can let by 2 node to look into unit functions dot fire file and take the function which is defined we do that by using construction from name of the file we want to avert something import and then the name of the thing we want to import so in our scenario we'll have from unit functions import into centimeters where our unit functions is the name of the file we are importing our function from and please note that we are not typing dot py extension here at all typically when we use from import construction we place it at the very beginning of the file so let's do it here so we are typing from unit functions in our interest to centimeters we can also go back to our units file and use very same from import construction to use the same function here this way we can have different programs that shares the same thing isn't it awesome now let's see if it works let's go to the console and run vital 3 units PL to the PI it works the same is with units but what if we move our unit functions file to some other folder for example we will call it functions I will create a folder in console so in a desktop i will do m Kadir functions and now i will move the file by typing MV unit functions functions so I moved unit functions file to functions subfolder now when we try to run the program we get new error which is no model named unit functions so how we can access that now well python obviously has a way to do that and it allows that by adding the name of the founder before the name of the file and connected all with dot so in our scenario we'll have from functions dot unit functions in for interest centimeters let's fix our files then now when we run it again everything works of course using from import structure is more complicated when you have the file that is further away in some other folder but I won't cover it today because that's the topic for a separate video but you should be very proud of yourself because you just learn how to share your power between different files and different programs and this is really awesome now let's make our program even nicer remember in the video where I talk about all the challenges I told you that it would be really nice and this is for bonus points to make sure that program does not crash when you provide the value that is not a number for example if we run the program and instead of typing the number will type hola first let's look how our program caves when we do that now so we go to the console and type Python 3 units dot 5 and now we type hola and click enter we get a value error I hope you remember my video about handling errors and exceptions and who will use now try except Clause we learned in the video and make sure that we display some a very nice message to user when the error occurs let's open our unit file and add try exact Clause these two lines will be in a block now after try then we type accept and the name of the error we want to handle in this scenario its value error and then in this block we specify what we want to display to the user when they made a mistake for example message it is not a correct number let's try it now in the console let's type hola and it looks very nice now okay so time for last improvement if we want to have the same try except Clause also in Polish version we need to add all the code and messages around it and once again it looks very similar so is there a way to extracted into function that we can use in both scenarios if you would compare what's the difference between Polish and English version we would realize that the only difference is their messages once in English and once in Polish so let's try to extract the separate function that we can use in both files we will open our unit functions file and we will copy paste whole thing from units from reading the input to printing the error message we wanted as a function so we need to type that and give it a name for example convert interests and all the code that we copy pasted should be invented so it is inside this function now when we look here only these parts provide number of images interest is sounding centimeters and it is not a correct number should be different depending on the language we are using so let's change them in two variables that we provide when running this function we can call it prompt message message and error message and replace text with them like this now let's go back to unit 5 and invert this function we can import next thing in the same from import statement by doing it after the comma now instead of this whole code we'll simply call the function which is defined in the unit functions file like this convert interest and then in parentheses we will provide three arguments first was message prompt which is provide number of inches than message number interest is number of centimeters and finally error message in this scenario it is not the correct number let's see if it works let's go to the console and type Python 3 units dot 5 yes it does now it's time to change or as computer scientists say refactor the unit's PL file we replace the code with convert interest and provide all three messages in Polish so what I either study you lost Ally to either sentimental and Kanye's new one yay it works you extracted the code and now you can create any number of files with different languages and reuse that simply by providing different messages in different languages isn't that amazing not small thing in our files is that we no longer use interest centimeters explicitly in the units and units PL files it is used but only inside convert interests which is in the same file as interest to centimeters so the import of interest centimeters is not needed anymore and we can remove it from units and units PL files I hope you had fun watching how I try to implement the challenge and that you enjoy looking how I try step by step improve my code as I already mentioned it's called refactoring and it's something that programmers are doing every day refactoring is about making code more robust more readable and containing less errors there is still the second challenge so if you haven't done it yet hurry up I placed the link to the video where I talked about both challenges in the description below so make sure to check it out I hope that he had fun today and you've learned something new I know it was kind of sneaky to add new things like format method and importing stuff but I really couldn't resist showing you something new but obviously it was not needed to write the program so I hope that you will forgive me let me know in the comments what was the hardest part of the challenge and don't forget about second challenge I will post a video with the example solution very very soon so if you want to learn how to program with me make sure to subscribe this channel and stay tuned have a lovely day see you