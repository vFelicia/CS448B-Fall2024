hello everyone I'm Ola and this is Goen for girls it's Christmas time I'm totally one of the oh my God oh my God it's Christmas type of person and I couldn't imagine not making a Christmas special for you on this channel when I think about Christmas one of the very first things I think about is Christmas tree no surprise then that today I decided to talk about trees not necessarily Christmas trees but computer science trees when you learn how to program at some point you will need to learn very basics of computer science as a science and in that moment you will learn about two very important things algorithms and data structors these two things are more abstract mathematical and more formal way to solve problems with computers on this level it does not really matter if you program in Python C hcll Java or any other programming language because talking about algorithms and data structures you go One Step Above the real world problems and instead of solving one particular problem you have you try to solve all the similar problems at once creating a recite to solve all of them in fact I know quite a few computer scientists that program on piece of paper so not using the real programming language but using some kind of programming asira called soda code and they solve more General problems but let's go back to our trees there is a number of different data structures out there but wait what is a data structure well data structure is something that helps us store and organize our data so we can access that very quickly imagine that you go to the library and you want to find certain book if the books lie around without any organization then finding the one you are interested in is super hard but if your library has all books sorted alphabetically finding the one you are interested in is much easier the same is with data structures they help you to organize your data and keep them in order okay so once we know what is a data structure we can move to talk about trees first why they are called trees well because when you draw them they look a little bit like tree but upside down the idea of the tree is that you have here iicle structure for example if you think about all the directories you have on your computer they are in a tree structure the most top directory on your computer is a tree root and root directory has many subdirectories and those subdirectories has other subdirectories and so forth and so forth let's say we are in directory named Ola this directory contains desktop documents download Library pictures then desktop has folder docs and and my stuff Library folder has accounts calendars cookies and favorites then each of the folders has subfolders and files and so on and so on it already looks like a tree but upside down so we already know what is a tree as a data structure but what makes a tree a tree tree consists of nodes if we look at the directories on your computer then each directory is a Noe and these nodes have to be organized in a here hicle structure I think I used word here hickle like 10 times already there are different kinds of tree and there are different socalled implementations of trees but today we will not talk about all of the details because there is no time it's Christmas anyway okay so time to learn some special names and keywords that are very important when talking about trees in computer science on the very top we have a root this is the highest node in the whole here hey you can think about them as a boss well in this scenario it's just a star then we have a descendant or children all notes Here ornaments on our Christmas tree are siblings to each other our ornaments on the first level could be par of the new notes on Next Level well it's kind of similar with a gical tree and similarly to that we have a concept of of ancestor for this note a star is an ancestor also the immediate parent is also an ancestor finally when we go down our Christmas tree we will reach last layer of decorations these are called leaves they have no children and they are the youngest generation probably the Christmas tree analogic is not the best one because it does not emphasize the fact that all the nodes are connected in a certain way but honestly I couldn't resist having a Christmas tree on one of my episodes and I think Christmas tree analogy would work if we simply make our Christmas tree invisible and to make it hold its Christmas tree shape we'll need to connect all the ornaments with strings the strings that connect parents with children in our scenario ornaments are called edges but what if the ornament has more than one parent like we would like to add an extra support and make this decoration be connected with two parent nodes well this is not a tree anymore but there's a name for it in computer science it's called graph okay we know the basics but where are we using the trees are they any useful first it's perfect to represent any hierarchical data imagine how easy it is to represent SP link this way it's so intuitive and so easy or the company hierarchy with the boss as a root trees are also very useful when it comes to searching if each note contains some information and there is a certain way in which the tree was created so you know that things with' given properties are in a certain part of the tree then finding a thing that you are interested in It's relatively easy and quite fast like in a big library for example if you want to read a Harry Potter book you enter the library your root you find a room that contains books that have outter surnames starting from P to Z then you find a bookcase that contains books with outs from R to S and then you find the Shelf with outer starting with r and then you'll find your book this is exactly the trace structure and it is much more efficient than trying to check every single book in the library there there are so many places in programming and computer science where trees are used for example in 3D video games trees might be used to calculate what should be displayed for you they are also used in compression so if you have files like jpex or MP3 then probably some trees were involved when creating this files there is so much more about trees and honestly my first scenario for this episode was so long that I would probably spend whole week just recording that and there will be like 10 videos but I have to leave it for now because it's Christmas and I really want to spend some time with my family friends okay so time to sum up we learned that there is something called data structures in computer science and it's something more abstract more formal and this is the level on which we start to notice that this is actually the science in computer science then we learned about trees as a data structures trees are hercal structures with nodes one roote the most top one parent ancestors and leaves they are connected with edges our string connecting parent with children finally we briefly talked about where trees are used I know it's a little bit theoretical but if you are interested and like me you think it's something elegant and fascinating go ahead and bro in the internet and learn more about it it's really really beautiful thing also if you feel lucky you can try to implement your tree using things we already covered in previous episodes it won't be super elegant but it's possible and if you're up to challenge just go ahead experiment and don't be afraid to use internet in this case too but for now have a wonderful Christmas if you celebrate it and if you don't just have a wonderful day time if you want to learn how to program make sure to subscribe my channel and stay tuned have a lovely day and Merry Christmas