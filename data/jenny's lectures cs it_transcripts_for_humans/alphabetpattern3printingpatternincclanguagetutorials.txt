With timestamps:

00:00 - in the series of learning programming in
00:01 - ca we are discussing printing pattern
00:03 - programs in c so in this video i'll talk
00:04 - about how to print this pattern
00:06 - this alphabetic pattern right we'll see
00:09 - the logic on this whiteboard then i'll
00:10 - show the output on my laptop using vs
00:12 - code editor
00:12 - so i have discussed this kind of pattern
00:14 - in the previous video also there we have
00:16 - printed what a in second line also a b
00:19 - then abc abcd like this right now this
00:22 - is a little bit different from the
00:24 - previous pattern so first
00:26 - please check out the previous video then
00:27 - come to this video you will get it
00:29 - better now
00:30 - after checking out the previous video
00:32 - then you will get it better
00:33 - but here we are printing a in second
00:35 - line bb
00:36 - then c cc then d4 times then e5 times
00:39 - like this you can print multiple lines
00:41 - here i am taking only five lines
00:43 - right now if you want to take 5 10
00:46 - 15 lines then that also i'll show you
00:49 - when we'll discuss it on my laptop
00:50 - first you have to do you have to analyze
00:52 - the pattern and you have to divide it
00:54 - into number of rows and columns
00:56 - with the very first thing right now how
00:59 - many rows are there in this
01:01 - one two three four five rooms so i loop
01:04 - the outer loop would be
01:06 - run from one to five right so first
01:09 - thing the outer loop would be i is equal
01:11 - to 1 i less than equal to
01:12 - 5 and i plus plus right now
01:16 - within this outer loop inner loop would
01:18 - be
01:20 - to print these values means that would
01:22 - be responsible for these columns
01:24 - that is one two three four five that is
01:27 - j loop would be responsible for actual
01:29 - printing the inner loop
01:31 - right but now see
01:34 - when i value is one j is executing only
01:36 - one time when i value is two j is
01:38 - executing two times when i value
01:40 - three j is executing only three times
01:42 - because we are printing only in three
01:43 - columns these two are
01:45 - only space this is what trailing space
01:48 - we we
01:48 - don't have to print the trailing space
01:50 - right if the leading space is there
01:53 - means spaces before the the printing of
01:56 - these
01:57 - alphabets that should be taken care
02:00 - right that we will print that those kind
02:03 - of pattern also we'll discuss in
02:04 - separate video
02:05 - now see i hope you are getting my point
02:08 - now now
02:09 - inner loop would be executed from j is
02:12 - equal to 1 and j less than equal to what
02:15 - i right i hope you are getting this
02:18 - relation
02:18 - y j less than equal to i and j plus plus
02:22 - right now in inner loop what we will
02:25 - print
02:26 - now in printf see if i write this
02:30 - in a in a computer memory how this a
02:33 - value would be stored
02:35 - character system sky character system a
02:37 - is equal to equivalent to 65
02:40 - and that would be converted into binary
02:42 - and that obviously binary numbers are
02:44 - stored in computer memory only zeros and
02:45 - one
02:46 - computer can understand right so if i
02:50 - if i write it something like this 65 66
02:53 - 66
02:54 - 67 because c would be 67
02:57 - then 68 and then 69.
03:05 - right this is a b c d e like this
03:08 - 70 71 like this right sky values of
03:11 - these abcd's
03:12 - capital a b c ds small a b c ds are
03:15 - having different sky values
03:16 - now we have to print something like this
03:18 - now in first line 65 then 66 67 like
03:22 - like this but we are not printing actual
03:24 - integer value we are printing character
03:25 - values to print a character what should
03:27 - be the
03:28 - format specifier in printf percentage c
03:31 - you will not write here percentage d you
03:32 - will write percentage c
03:34 - right because we are not printing in
03:35 - teaser we are printing character
03:38 - now what you will print here this
03:41 - is a little bit different from the
03:43 - previous case
03:44 - here also we have only i and j or you
03:47 - can
03:47 - use some numbers you can some you can do
03:50 - some addition multiplication division
03:52 - you have to find out what
03:54 - you will you can write here right
03:57 - so now what i can print here
04:00 - if i write here something like this
04:03 - like 64 plus
04:07 - i or you can write i plus 64.
04:11 - it's up to you right and semicolon
04:15 - fine now that's it and in the outer loop
04:19 - what we will write post slash n sorry
04:21 - for the new line operator
04:22 - and that's it right now let me write on
04:25 - this program
04:26 - see see first of all i value becomes
04:29 - 1 would be initialized with 1 1 less
04:31 - than equal to 5 yes condition 2 will
04:33 - enter here
04:34 - now j would be initialized with 1 1 less
04:36 - than equal to y value is 1 yes condition
04:38 - 2 will enter here
04:40 - now printer percentage is 64 plus i 64
04:43 - plus i value is 1
04:46 - 65 65 means you cannot print 65 because
04:50 - here format specifies percentage c
04:52 - means you should you should print means
04:55 - you have to print
04:56 - alphabet and corresponding to 65
04:58 - alphabet is capital a
05:00 - so now capital a would be printed right
05:03 - j plus plus j becomes 2 is this
05:05 - condition true now no exit from the loop
05:07 - slash n means control will be in the
05:08 - next
05:09 - line right now i plus plus i becomes 2
05:12 - now
05:13 - condition true 2 less than equal to 5
05:14 - yes we will enter again here
05:16 - j would be again initialized with 1
05:19 - now 1 less than equal to i value is now
05:22 - 2
05:23 - yes condition 2 will again enter here
05:25 - now 64
05:26 - plus i 64 plus 2
05:30 - that is 66 corresponding to 66 we have
05:34 - character b b would be printed now
05:37 - j plus plus j is 2 2 less than equal to
05:40 - 2 yes condition 2 again enter here again
05:42 - what will print 64 plus
05:44 - i i value still 2 means 66
05:47 - again b will be printed in the previous
05:50 - video we have
05:51 - written what 64 plus j
05:54 - because first time you are printing a
05:57 - then b right then first time
06:00 - j is 1 then 64 plus 1 second time
06:04 - 64 plus 2 right that is 66
06:07 - that is why a b would be printed in that
06:09 - case but here we are writing
06:12 - i only because same character we are
06:14 - printing b
06:15 - and b same character we are printing c
06:18 - right so we cannot write down here j
06:20 - because j would be what
06:22 - first of all 1 then 2 then 3 so in 64
06:26 - first of all 1 would be added then 2
06:27 - then 3 but we don't want this
06:29 - we want only same character that is c
06:32 - so in 64 if we add the value of i
06:36 - 3 because in the third for the third row
06:39 - i value is same for this column also for
06:42 - this for this also
06:44 - so if we add i in 64 then every time
06:47 - when jlu would be repeated
06:49 - what same value would be added
06:52 - that is 3 and every time c would be
06:55 - printed
06:56 - right so i hope you got my point now why
06:58 - i am writing 64 plus i here
07:00 - now what j value is 2 again b would be
07:03 - printed j value is 3
07:04 - not condition not true exit from the
07:06 - loop and in the new line
07:08 - now i plus plus i becomes 3 condition 2
07:10 - will again enter here and this
07:12 - process would be repeat how many times 5
07:14 - times right
07:15 - when i value becomes six condition not
07:17 - preview exit from the outer loop
07:20 - and five rows would be printed here
07:23 - i hope you got it now let me show you
07:25 - the output on my laptop using vs code
07:27 - editor
07:28 - so now let me create another file for
07:30 - this
07:34 - alphabet pattern three dot c right and
07:37 - this is actually same as the previous
07:39 - one
07:40 - so i'm i mean it's a little bit
07:42 - different so am just copying the
07:44 - previous code here the
07:46 - pattern one code here
07:49 - and whatever change you will do that i
07:51 - will show you here just to
07:52 - you know save the time let me just clear
07:55 - this terminal first of all
07:56 - the previous output now see in the first
07:59 - row i want to print a
08:01 - in second row b and b only then c c c
08:03 - only not abc
08:04 - right so for that what you have to
08:06 - change the outer loop would be same
08:09 - the inner loop condition would be same
08:11 - but here what we will print
08:12 - here rather than j plus 64 we are
08:15 - printing what
08:16 - i plus 64 because j value is changing
08:20 - 1 to 3 but i want only same character
08:22 - like b
08:23 - in second row c in third row that is why
08:25 - an i value would be
08:27 - same for those iterations
08:30 - right so that is why i am writing here i
08:32 - and let me just run this
08:38 - how many rows you want to print five see
08:41 - i guess this water pattern you need
08:44 - right now let me just run this again
08:46 - for uh 12 number of rows
08:50 - see
08:53 - i hope now you would have to print this
08:54 - pattern
08:57 - and if we run 4 how many
09:00 - suppose 30 number of rows here
09:03 - alphabets are only 26 but we are
09:05 - printing 30 rows here
09:08 - now till 26 it is printing alphabets
09:11 - till z and after that it is printing
09:15 - the characters which is corresponding to
09:18 - the sky value which is computed
09:20 - by i plus 64 right
09:23 - so this these are the characters that
09:26 - are printed here
09:28 - now i hope you got these printing
09:29 - pattern programs
09:31 - so i hope you got it now i'll see you in
09:33 - the next video with a new part until
09:34 - then bye bye take

Cleaned transcript:

in the series of learning programming in ca we are discussing printing pattern programs in c so in this video i'll talk about how to print this pattern this alphabetic pattern right we'll see the logic on this whiteboard then i'll show the output on my laptop using vs code editor so i have discussed this kind of pattern in the previous video also there we have printed what a in second line also a b then abc abcd like this right now this is a little bit different from the previous pattern so first please check out the previous video then come to this video you will get it better now after checking out the previous video then you will get it better but here we are printing a in second line bb then c cc then d4 times then e5 times like this you can print multiple lines here i am taking only five lines right now if you want to take 5 10 15 lines then that also i'll show you when we'll discuss it on my laptop first you have to do you have to analyze the pattern and you have to divide it into number of rows and columns with the very first thing right now how many rows are there in this one two three four five rooms so i loop the outer loop would be run from one to five right so first thing the outer loop would be i is equal to 1 i less than equal to 5 and i plus plus right now within this outer loop inner loop would be to print these values means that would be responsible for these columns that is one two three four five that is j loop would be responsible for actual printing the inner loop right but now see when i value is one j is executing only one time when i value is two j is executing two times when i value three j is executing only three times because we are printing only in three columns these two are only space this is what trailing space we we don't have to print the trailing space right if the leading space is there means spaces before the the printing of these alphabets that should be taken care right that we will print that those kind of pattern also we'll discuss in separate video now see i hope you are getting my point now now inner loop would be executed from j is equal to 1 and j less than equal to what i right i hope you are getting this relation y j less than equal to i and j plus plus right now in inner loop what we will print now in printf see if i write this in a in a computer memory how this a value would be stored character system sky character system a is equal to equivalent to 65 and that would be converted into binary and that obviously binary numbers are stored in computer memory only zeros and one computer can understand right so if i if i write it something like this 65 66 66 67 because c would be 67 then 68 and then 69. right this is a b c d e like this 70 71 like this right sky values of these abcd's capital a b c ds small a b c ds are having different sky values now we have to print something like this now in first line 65 then 66 67 like like this but we are not printing actual integer value we are printing character values to print a character what should be the format specifier in printf percentage c you will not write here percentage d you will write percentage c right because we are not printing in teaser we are printing character now what you will print here this is a little bit different from the previous case here also we have only i and j or you can use some numbers you can some you can do some addition multiplication division you have to find out what you will you can write here right so now what i can print here if i write here something like this like 64 plus i or you can write i plus 64. it's up to you right and semicolon fine now that's it and in the outer loop what we will write post slash n sorry for the new line operator and that's it right now let me write on this program see see first of all i value becomes 1 would be initialized with 1 1 less than equal to 5 yes condition 2 will enter here now j would be initialized with 1 1 less than equal to y value is 1 yes condition 2 will enter here now printer percentage is 64 plus i 64 plus i value is 1 65 65 means you cannot print 65 because here format specifies percentage c means you should you should print means you have to print alphabet and corresponding to 65 alphabet is capital a so now capital a would be printed right j plus plus j becomes 2 is this condition true now no exit from the loop slash n means control will be in the next line right now i plus plus i becomes 2 now condition true 2 less than equal to 5 yes we will enter again here j would be again initialized with 1 now 1 less than equal to i value is now 2 yes condition 2 will again enter here now 64 plus i 64 plus 2 that is 66 corresponding to 66 we have character b b would be printed now j plus plus j is 2 2 less than equal to 2 yes condition 2 again enter here again what will print 64 plus i i value still 2 means 66 again b will be printed in the previous video we have written what 64 plus j because first time you are printing a then b right then first time j is 1 then 64 plus 1 second time 64 plus 2 right that is 66 that is why a b would be printed in that case but here we are writing i only because same character we are printing b and b same character we are printing c right so we cannot write down here j because j would be what first of all 1 then 2 then 3 so in 64 first of all 1 would be added then 2 then 3 but we don't want this we want only same character that is c so in 64 if we add the value of i 3 because in the third for the third row i value is same for this column also for this for this also so if we add i in 64 then every time when jlu would be repeated what same value would be added that is 3 and every time c would be printed right so i hope you got my point now why i am writing 64 plus i here now what j value is 2 again b would be printed j value is 3 not condition not true exit from the loop and in the new line now i plus plus i becomes 3 condition 2 will again enter here and this process would be repeat how many times 5 times right when i value becomes six condition not preview exit from the outer loop and five rows would be printed here i hope you got it now let me show you the output on my laptop using vs code editor so now let me create another file for this alphabet pattern three dot c right and this is actually same as the previous one so i'm i mean it's a little bit different so am just copying the previous code here the pattern one code here and whatever change you will do that i will show you here just to you know save the time let me just clear this terminal first of all the previous output now see in the first row i want to print a in second row b and b only then c c c only not abc right so for that what you have to change the outer loop would be same the inner loop condition would be same but here what we will print here rather than j plus 64 we are printing what i plus 64 because j value is changing 1 to 3 but i want only same character like b in second row c in third row that is why an i value would be same for those iterations right so that is why i am writing here i and let me just run this how many rows you want to print five see i guess this water pattern you need right now let me just run this again for uh 12 number of rows see i hope now you would have to print this pattern and if we run 4 how many suppose 30 number of rows here alphabets are only 26 but we are printing 30 rows here now till 26 it is printing alphabets till z and after that it is printing the characters which is corresponding to the sky value which is computed by i plus 64 right so this these are the characters that are printed here now i hope you got these printing pattern programs so i hope you got it now i'll see you in the next video with a new part until then bye bye take
