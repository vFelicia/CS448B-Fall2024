With timestamps:

00:00 - so in the series of learning c plus plus
00:01 - programming language we are discussing
00:03 - data types in c plus plus we have
00:04 - discussed intent flow data type now
00:06 - we'll see the next is character data
00:08 - type in c plus plus so in this video
00:10 - we'll talk about this thing all the
00:11 - points about character data type like
00:13 - how characters are stored the size of
00:15 - the character area type
00:16 - everything we will discuss with the help
00:18 - of a program i will show you practical
00:19 - also right now before that just want to
00:22 - ask you one thing if you guys are
00:24 - preparing for placements or if you guys
00:26 - will be preparing for placements then
00:28 - one subject which is really very
00:30 - important for interview point of view is
00:33 - data structure and algorithm
00:35 - in every interview technical round of
00:37 - you know in every company they ask this
00:39 - question from this subject data
00:41 - structure and algorithm
00:43 - so you need to practice questions on dsa
00:45 - and algorithms right you have to you
00:47 - know prepare a complete roadmap
00:49 - to prepare for dsa but the question is
00:52 - from where you can prepare from where
00:54 - you can practice the questions
00:56 - of data structure and algorithm
00:58 - so
00:59 - there is one platform geeks4geeks that
01:01 - you will get a lots of questions on each
01:05 - topic like in data structure you can say
01:07 - arrays stack link list or you can search
01:10 - more topics
01:11 - on each topic topic wise you will get
01:13 - list of questions so you can practice
01:15 - this thing from here for algorithm also
01:17 - searching algorithm sorting algorithm
01:19 - you will get many questions on this
01:23 - site
01:24 - but if you want to prepare specific
01:26 - company wise interview problems then
01:29 - also you will get here that thing
01:32 - you can select any company like amazon
01:34 - samsung or microsoft you can click on
01:36 - that and you will find out the list of
01:38 - questions that would be asked in the
01:40 - interview of those companies so company
01:43 - specific entry problems also you will
01:45 - get here you can practice those problems
01:47 - here and these you know problems are of
01:50 - good standard they have listed down all
01:52 - the no problems from basic to advanced
01:55 - level
01:56 - so i think it would be good resource for
01:59 - you guys to prepare your data structure
02:01 - and algorithm to practice data structure
02:02 - and algorithm questions
02:05 - so the link of this website i'll put in
02:07 - the description box of this video you
02:09 - just go to that link and you will get
02:11 - these questions right up according to
02:13 - your convenience you can select the
02:15 - topic or the company and you can prepare
02:18 - you can practice those questions
02:19 - so all the relevant links and details
02:21 - will find in the description box of this
02:22 - video you can go and check out now let's
02:24 - see what is cad airline so
02:26 - it take
02:28 - it takes one byte of memory means eight
02:30 - bits
02:31 - to store
02:33 - you see in the next last video we have
02:34 - discussed one video like in shortened
02:37 - and data modifiers are also there short
02:40 - long unsigned and signed so two data
02:42 - modifiers you can use with cash that is
02:43 - signed and unsigned no short and long
02:46 - you can use with cap
02:48 - right so the short end was having size
02:51 - two bytes and cad is taking one byte of
02:53 - memory so this is you can say the
02:55 - smallest one eight bits
02:57 - right so you can uh the maximum number
03:00 - and minimum number you can store
03:03 - in this is what there are eight bits in
03:05 - every bit you put zero zero zero so the
03:08 - minimum number is zero and the maximum
03:10 - one maximum is in all the eight bits
03:12 - store one one one one so that would be
03:14 - 255
03:16 - 255 is nothing but 2 raised to the power
03:18 - 8 minus 1
03:20 - right this is for unsigned care
03:25 - the range
03:26 - and for signed care the range is
03:29 - minus 128 to 127
03:33 - it's nothing but minus 2 raised to the
03:35 - power 7 2 2 raised to the power 7 minus
03:37 - 1
03:39 - y 2 raised to the power 7 bits because 1
03:40 - bit is for sine that must be whether
03:44 - it's negative or positive remaining
03:45 - seven bits are used to store the number
03:47 - see why we are
03:49 - we are the logic for getting this thing
03:50 - and this thing we have discussed
03:52 - that and when we were discussing the
03:54 - interior type the range of india type
03:56 - the same logic you have to put here and
03:58 - you will get the range here so this is
04:00 - for unsigned range unsigned care this is
04:02 - for
04:03 - signed cap now see
04:05 - this basically cad data type is used to
04:07 - store characters like abcd small abcd
04:10 - capital abcd and small numbers also
04:13 - integer value
04:14 - right
04:16 - so see
04:18 - when you write a program the computer
04:20 - can't understand
04:21 - high level language english language
04:23 - whatever in whatever language you write
04:24 - the program computer is not able to
04:26 - understand that thing that would be
04:27 - converted into zeros and ones binary
04:29 - form right and that computer can
04:31 - understand now if suppose we want to
04:33 - store something like this in a program
04:35 - we have int a is equal to 10
04:37 - so this 10 also
04:38 - is
04:39 - integer value so that would be converted
04:41 - into binary with numeric system
04:43 - right we have a numeric system so this
04:45 - 10 would be 1 0 1 0
04:47 - now that would be stored in computer
04:48 - memory
04:49 - right
04:50 - but how this character like we have a
04:54 - we have a we have the symbol dollar we
04:56 - have
04:57 - hash
04:58 - how these letters and symbols have to be
05:00 - stored to be converted into binary see
05:04 - if a compute
05:05 - if a number is the integer we can use
05:08 - numeric system and we can convert into
05:10 - binary but how these symbols and
05:12 - characters can be converted into binary
05:15 - these are not in this uh integer form
05:19 - right
05:20 - so for for this thing we have character
05:23 - system
05:26 - right
05:26 - you can google how many character
05:28 - systems are there there are list of
05:30 - character systems you will get without
05:31 - but the famous one is sky character
05:33 - system we use american standard code for
05:37 - information interchange sky table this
05:40 - is the sky table and mainly character
05:42 - system were introduced mainly for
05:45 - computer programming languages
05:48 - one characteristics using one character
05:50 - system one entire language can be
05:52 - converted into integer form right like
05:55 - you can see in sky
05:57 - we have capital abcd for each character
05:59 - we have in numeric value integer value
06:01 - for capital a we have 65 or small a we
06:03 - have 97 like this so one complete
06:06 - language can be converted into
06:08 - integer form and once you get integer
06:10 - number using numeric system we can
06:12 - convert that integer into binary form
06:15 - and that's how we store these characters
06:18 - or alphabet or you know digits or
06:20 - symbols into binary form
06:23 - using character system
06:25 - these are characters are stored same as
06:27 - integers are stored in the computer
06:28 - memory
06:29 - right these are nothing but
06:32 - numeric using sky uh
06:34 - system sky core
06:36 - they are
06:37 - converted into by you can say integer
06:38 - number integer form numeric form and
06:41 - then binary and then stored in the
06:42 - computer memory
06:44 - right let's see in sky table from 0 to
06:47 - 31
06:48 - first 32
06:51 - characters are
06:52 - unprintable you cannot print these
06:54 - things these are just commands right
06:57 - after 3232 is for space after 32 from 33
07:01 - you
07:02 - get
07:03 - the letters the capital abcd small abcd
07:07 - uh the numbers 0 to 9 and some symbols
07:10 - as you can see in the table so how we
07:12 - can use this carrier type with the help
07:14 - of a program let me just show you first
07:16 - of all
07:17 - for that thing you have to remember
07:18 - these circles same here here also we
07:21 - have circles signed and unsigned
07:23 - so signed
07:25 - for signed care we have 0 1 2 up to 127
07:30 - and minus 1 minus 2 till minus 120
07:34 - 8 minus 127
07:37 - this value
07:38 - and for
07:39 - unsigned care we have
07:43 - 0 1 2 up to
07:46 - 255
07:48 - here we have 250 4 250
07:52 - 3
07:53 - so whenever we print when you write a
07:55 - program you have to you know keep in
07:56 - mind these circles
08:00 - and see
08:01 - this is what sky was american standard
08:03 - code for information interchange but
08:05 - it's not like that only americans are in
08:06 - the world there are many other languages
08:08 - also right
08:10 - other people also exist in this
08:12 - uh you know world
08:14 - so other languages are also there
08:17 - those languages have this special
08:19 - symbols
08:20 - those symbols are not in this
08:23 - sky table
08:24 - so for those symbols for those languages
08:27 - we use which table
08:29 - unicode table
08:32 - right
08:34 - and for unicode table to represent a
08:36 - character or a symbol which is in
08:38 - unicode table another type is used that
08:41 - is because
08:43 - in that table we have
08:46 - many many many characters many symbols
08:50 - and using character we have only eight
08:53 - bits so maximum we can
08:55 - represent up to 255 characters
08:59 - see if you uh do the plus of
09:02 - small letters 25 26
09:05 - 26 capital letters then 0 to 9 numbers
09:08 - then some
09:10 - those symbols
09:11 - then those the sum of these are less
09:14 - than 255 right so that's why care is
09:16 - sufficient to represent that language
09:19 - right
09:20 - but we have multiple languages in the
09:22 - world many characters are there many
09:24 - symbols are there russian language and
09:26 - many languages right
09:28 - so care is not sufficient to represent
09:30 - those those characters or symbols right
09:33 - so the characters are symbols that are
09:35 - in unicode table that would
09:37 - the which data type is used to represent
09:40 - those thing
09:41 - w care underscore t
09:44 - this is not in c this is in c plus plus
09:46 - so that thing also will discuss in next
09:47 - video this take actually two bytes means
09:51 - 16 bits right so using 16 bits you can
09:55 - see how many
09:57 - characters we can represent two series
09:59 - power sixteen minus one zero to two
10:00 - raise for sixteen minus one
10:02 - that is more than this
10:04 - this thing right so this thing will
10:06 - discuss about this data we'll discuss
10:08 - the next video let me just show you now
10:09 - one example or you can say program of
10:12 - cadet okay so we have created a file
10:15 - care underscore dt.cpp now there we have
10:18 - uh header io stream voltage then using
10:20 - name space std then in main we are
10:23 - declaring
10:24 - a cad data type
10:26 - cat suppose i am taking a variable
10:30 - name care ch equal to
10:33 - now whatever you will write in single
10:35 - code that will be considered as a
10:37 - character so in single quote i am
10:38 - suppose simply i am writing a you know
10:41 - this is character right and semicolon
10:44 - and if you don't write any data modifier
10:46 - before the scan then it would be
10:48 - considered as
10:49 - signed character it will take both
10:52 - positive value and negative value right
10:55 - so now let
10:57 - let's just print this c out and i am
11:00 - just printing on
11:02 - ch
11:05 - and this is for
11:07 - endl i am printing now what it will
11:09 - print simply it will print simple answer
11:12 - is it will print a
11:13 - small a because we have stored this
11:15 - small a
11:17 - right and small a is stored
11:20 - half converted into first of all the
11:22 - individual form that is 97 97 converted
11:24 - into binary and that would be stored in
11:26 - memory so this we get 9 7 here sorry a
11:30 - here but if you want to get
11:32 - that integer value of this a like a sky
11:34 - value then how that also you can get how
11:37 - you have to type cast this thing before
11:39 - the ch just type cast
11:41 - and
11:42 - end
11:45 - because we want to print the
11:48 - what
11:49 - into value right so this is typecasting
11:51 - don't worry we'll discuss this type
11:53 - casting everything
11:54 - in the later video in detail
11:56 - but just i just want to show you this
11:59 - thing so just have to print in bracket
12:00 - end that's it
12:02 - and it will print the integer value of
12:04 - this a is 97 so it will print 97 as you
12:07 - can see right
12:08 - now see
12:10 - if
12:11 - i store here
12:13 - 2
12:15 - 2 is also a character now i am
12:18 - suppose
12:19 - int you are taking
12:21 - and what it will print right now see it
12:23 - is printing 50
12:25 - because 2 it is taking as a character
12:27 - and in sky table as you can refer in
12:30 - this sky table corresponding to 2 the
12:32 - decimal or the you can see the numeric
12:34 - value integer value is 50. so it is
12:36 - printing 50.
12:38 - right
12:39 - but if you want to print
12:42 - simply this character
12:44 - not the corresponding sky value so you
12:46 - no need to type classes simply print ch
12:49 - the name of the variable it will print 2
12:52 - right
12:53 - so
12:54 - and see
12:56 - rather than this
12:57 - code mark single quotation mark if i
13:00 - simply
13:02 - store integer value 2
13:05 - what it will print
13:06 - now it will print
13:08 - see what it is printing
13:12 - any garbage value or any symbol
13:15 - right
13:16 - because the character
13:19 - corresponding to this 2 in the sky table
13:21 - is i have told you from 0 to 31 those
13:24 - are
13:25 - unprintable characters these are just
13:27 - commands so it is printing anything
13:29 - right now if i
13:31 - write down here
13:32 - 32 or suppose
13:35 - if i print
13:36 - type cast it
13:38 - using this
13:40 - end
13:42 - then what it will print it will print
13:44 - now it is printing 2.
13:47 - the integer value it is printing
13:49 - right
13:50 - 2 is what integer we are not putting it
13:53 - into
13:54 - that
13:55 - what you can say single code
13:57 - right
13:58 - so simply integer value it is printing
14:00 - that is 2
14:02 - now see if i print here 32 32 is for
14:06 - space
14:07 - right
14:08 - so what it will print it will print
14:10 - nothing
14:12 - see it is printing nothing because it is
14:14 - for space
14:15 - right and now if i
14:18 - store 33
14:20 - so 33 for 33 what it will print
14:23 - exclamatory symbol it is printing you
14:25 - can refer to the sky table right
14:28 - now it is for signed
14:31 - it is signed care now if i print the
14:33 - range is from minus 128 to 127
14:37 - so if i take here 128
14:41 - plus 128
14:43 - see what happened what it will print
14:45 - see it is printing this symbol
14:47 - for this you can refer to the extended
14:50 - sky table
14:51 - for 128 this is the symbol right and if
14:55 - i
14:56 - write here 156
14:59 - and then print
15:02 - then what it will print this symbol it
15:04 - will print for 1
15:06 - 156
15:08 - if you print
15:10 - the int value means type cast into int
15:14 - it into int
15:15 - so with
15:16 - what it will print it is not printing
15:18 - 120 156 it will print minus 100 y
15:21 - because of that circle in that circle
15:24 - signed circle
15:25 - from 0 to 127
15:27 - after 127
15:29 - minus 128 means 129
15:32 - means minus 128
15:34 - 130 means minus
15:36 - 127
15:38 - like this
15:39 - then minus 1 means 255
15:42 - right so that is why somewhere minus 100
15:45 - would be there
15:47 - and uh for that 156 numbering is there
15:50 - so 2 you can get to that circle or if
15:52 - you are getting confused then simply 128
15:54 - let us take this example for 128 it
15:57 - should print minus 128 because after 127
16:00 - we get 128 but for 128 in the circle we
16:03 - have minus 128 right
16:06 - so see it will print minus 128
16:09 - right so you have to keep in mind that
16:10 - circle
16:12 - like in c we will we are printing using
16:14 - percentage uh c the character value
16:16 - percent is b the
16:18 - integer value right but here you have to
16:20 - type cast it like int we have done
16:24 - so this is how you can store
16:26 - the values if i take
16:29 - 255
16:31 - here
16:33 - and i am not printing the into value
16:35 - simply what symbol is
16:37 - there for 1 255
16:39 - it is simply the delete command so it
16:41 - will print nothing see it is printing
16:43 - nothing
16:44 - right
16:45 - and if you want to check out the limit
16:47 - like minimum limit and maximum limit of
16:49 - these so there is one header file
16:55 - limits dot h
16:56 - right
16:58 - you can just press ctrl and click limits
17:00 - dot h
17:03 - and see here you will get the limit
17:06 - see
17:08 - hash define character byte 8 bytes right
17:12 - signed care minimum minus 128 signed
17:15 - care maximum 127 unsigned care maximum
17:18 - 255
17:19 - like this in limits dot h they have
17:21 - limit of for int also for short also
17:23 - over long also for long long also
17:28 - and see these are
17:30 - you can say the variables the macros
17:32 - hash define this thing simply in your
17:34 - program if you see out this thing as hrt
17:37 - underscore mix you will get this value
17:39 - you can try out this thing you can use
17:41 - these
17:42 - variables in your program also like
17:45 - if you want to use this s care
17:47 - underscore min it will give you minus
17:50 - 128 let me just show you one example
17:53 - c out
17:55 - s
17:56 - care
17:57 - c
17:58 - underscore min
18:03 - so it will print
18:05 - the limit is
18:07 - sorry the minimum limit is minus 128
18:11 - see it is printing minus 128 right
18:15 - and 255 we are taking so that is for
18:16 - delete so it is not printing anything
18:18 - for this character
18:19 - but you have to use the same symbol
18:22 - so you can check out these you can you
18:24 - know explore these header files also
18:26 - what are this in this header files
18:29 - so
18:30 - if you are confused like
18:32 - the range of these integers short and
18:35 - care you can just check out the limits
18:37 - dot header file and there you will get
18:39 - the range
18:40 - right so i hope cad data type is clear
18:43 - to you guys if you have any doubt you
18:44 - can ask me in comment section now in the
18:46 - next video we will see wpair underscore
18:48 - c this white character the state eye so
18:50 - that's the next video till then bye
18:57 - you

Cleaned transcript:

so in the series of learning c plus plus programming language we are discussing data types in c plus plus we have discussed intent flow data type now we'll see the next is character data type in c plus plus so in this video we'll talk about this thing all the points about character data type like how characters are stored the size of the character area type everything we will discuss with the help of a program i will show you practical also right now before that just want to ask you one thing if you guys are preparing for placements or if you guys will be preparing for placements then one subject which is really very important for interview point of view is data structure and algorithm in every interview technical round of you know in every company they ask this question from this subject data structure and algorithm so you need to practice questions on dsa and algorithms right you have to you know prepare a complete roadmap to prepare for dsa but the question is from where you can prepare from where you can practice the questions of data structure and algorithm so there is one platform geeks4geeks that you will get a lots of questions on each topic like in data structure you can say arrays stack link list or you can search more topics on each topic topic wise you will get list of questions so you can practice this thing from here for algorithm also searching algorithm sorting algorithm you will get many questions on this site but if you want to prepare specific company wise interview problems then also you will get here that thing you can select any company like amazon samsung or microsoft you can click on that and you will find out the list of questions that would be asked in the interview of those companies so company specific entry problems also you will get here you can practice those problems here and these you know problems are of good standard they have listed down all the no problems from basic to advanced level so i think it would be good resource for you guys to prepare your data structure and algorithm to practice data structure and algorithm questions so the link of this website i'll put in the description box of this video you just go to that link and you will get these questions right up according to your convenience you can select the topic or the company and you can prepare you can practice those questions so all the relevant links and details will find in the description box of this video you can go and check out now let's see what is cad airline so it take it takes one byte of memory means eight bits to store you see in the next last video we have discussed one video like in shortened and data modifiers are also there short long unsigned and signed so two data modifiers you can use with cash that is signed and unsigned no short and long you can use with cap right so the short end was having size two bytes and cad is taking one byte of memory so this is you can say the smallest one eight bits right so you can uh the maximum number and minimum number you can store in this is what there are eight bits in every bit you put zero zero zero so the minimum number is zero and the maximum one maximum is in all the eight bits store one one one one so that would be 255 255 is nothing but 2 raised to the power 8 minus 1 right this is for unsigned care the range and for signed care the range is minus 128 to 127 it's nothing but minus 2 raised to the power 7 2 2 raised to the power 7 minus 1 y 2 raised to the power 7 bits because 1 bit is for sine that must be whether it's negative or positive remaining seven bits are used to store the number see why we are we are the logic for getting this thing and this thing we have discussed that and when we were discussing the interior type the range of india type the same logic you have to put here and you will get the range here so this is for unsigned range unsigned care this is for signed cap now see this basically cad data type is used to store characters like abcd small abcd capital abcd and small numbers also integer value right so see when you write a program the computer can't understand high level language english language whatever in whatever language you write the program computer is not able to understand that thing that would be converted into zeros and ones binary form right and that computer can understand now if suppose we want to store something like this in a program we have int a is equal to 10 so this 10 also is integer value so that would be converted into binary with numeric system right we have a numeric system so this 10 would be 1 0 1 0 now that would be stored in computer memory right but how this character like we have a we have a we have the symbol dollar we have hash how these letters and symbols have to be stored to be converted into binary see if a compute if a number is the integer we can use numeric system and we can convert into binary but how these symbols and characters can be converted into binary these are not in this uh integer form right so for for this thing we have character system right you can google how many character systems are there there are list of character systems you will get without but the famous one is sky character system we use american standard code for information interchange sky table this is the sky table and mainly character system were introduced mainly for computer programming languages one characteristics using one character system one entire language can be converted into integer form right like you can see in sky we have capital abcd for each character we have in numeric value integer value for capital a we have 65 or small a we have 97 like this so one complete language can be converted into integer form and once you get integer number using numeric system we can convert that integer into binary form and that's how we store these characters or alphabet or you know digits or symbols into binary form using character system these are characters are stored same as integers are stored in the computer memory right these are nothing but numeric using sky uh system sky core they are converted into by you can say integer number integer form numeric form and then binary and then stored in the computer memory right let's see in sky table from 0 to 31 first 32 characters are unprintable you cannot print these things these are just commands right after 3232 is for space after 32 from 33 you get the letters the capital abcd small abcd uh the numbers 0 to 9 and some symbols as you can see in the table so how we can use this carrier type with the help of a program let me just show you first of all for that thing you have to remember these circles same here here also we have circles signed and unsigned so signed for signed care we have 0 1 2 up to 127 and minus 1 minus 2 till minus 120 8 minus 127 this value and for unsigned care we have 0 1 2 up to 255 here we have 250 4 250 3 so whenever we print when you write a program you have to you know keep in mind these circles and see this is what sky was american standard code for information interchange but it's not like that only americans are in the world there are many other languages also right other people also exist in this uh you know world so other languages are also there those languages have this special symbols those symbols are not in this sky table so for those symbols for those languages we use which table unicode table right and for unicode table to represent a character or a symbol which is in unicode table another type is used that is because in that table we have many many many characters many symbols and using character we have only eight bits so maximum we can represent up to 255 characters see if you uh do the plus of small letters 25 26 26 capital letters then 0 to 9 numbers then some those symbols then those the sum of these are less than 255 right so that's why care is sufficient to represent that language right but we have multiple languages in the world many characters are there many symbols are there russian language and many languages right so care is not sufficient to represent those those characters or symbols right so the characters are symbols that are in unicode table that would the which data type is used to represent those thing w care underscore t this is not in c this is in c plus plus so that thing also will discuss in next video this take actually two bytes means 16 bits right so using 16 bits you can see how many characters we can represent two series power sixteen minus one zero to two raise for sixteen minus one that is more than this this thing right so this thing will discuss about this data we'll discuss the next video let me just show you now one example or you can say program of cadet okay so we have created a file care underscore dt.cpp now there we have uh header io stream voltage then using name space std then in main we are declaring a cad data type cat suppose i am taking a variable name care ch equal to now whatever you will write in single code that will be considered as a character so in single quote i am suppose simply i am writing a you know this is character right and semicolon and if you don't write any data modifier before the scan then it would be considered as signed character it will take both positive value and negative value right so now let let's just print this c out and i am just printing on ch and this is for endl i am printing now what it will print simply it will print simple answer is it will print a small a because we have stored this small a right and small a is stored half converted into first of all the individual form that is 97 97 converted into binary and that would be stored in memory so this we get 9 7 here sorry a here but if you want to get that integer value of this a like a sky value then how that also you can get how you have to type cast this thing before the ch just type cast and end because we want to print the what into value right so this is typecasting don't worry we'll discuss this type casting everything in the later video in detail but just i just want to show you this thing so just have to print in bracket end that's it and it will print the integer value of this a is 97 so it will print 97 as you can see right now see if i store here 2 2 is also a character now i am suppose int you are taking and what it will print right now see it is printing 50 because 2 it is taking as a character and in sky table as you can refer in this sky table corresponding to 2 the decimal or the you can see the numeric value integer value is 50. so it is printing 50. right but if you want to print simply this character not the corresponding sky value so you no need to type classes simply print ch the name of the variable it will print 2 right so and see rather than this code mark single quotation mark if i simply store integer value 2 what it will print now it will print see what it is printing any garbage value or any symbol right because the character corresponding to this 2 in the sky table is i have told you from 0 to 31 those are unprintable characters these are just commands so it is printing anything right now if i write down here 32 or suppose if i print type cast it using this end then what it will print it will print now it is printing 2. the integer value it is printing right 2 is what integer we are not putting it into that what you can say single code right so simply integer value it is printing that is 2 now see if i print here 32 32 is for space right so what it will print it will print nothing see it is printing nothing because it is for space right and now if i store 33 so 33 for 33 what it will print exclamatory symbol it is printing you can refer to the sky table right now it is for signed it is signed care now if i print the range is from minus 128 to 127 so if i take here 128 plus 128 see what happened what it will print see it is printing this symbol for this you can refer to the extended sky table for 128 this is the symbol right and if i write here 156 and then print then what it will print this symbol it will print for 1 156 if you print the int value means type cast into int it into int so with what it will print it is not printing 120 156 it will print minus 100 y because of that circle in that circle signed circle from 0 to 127 after 127 minus 128 means 129 means minus 128 130 means minus 127 like this then minus 1 means 255 right so that is why somewhere minus 100 would be there and uh for that 156 numbering is there so 2 you can get to that circle or if you are getting confused then simply 128 let us take this example for 128 it should print minus 128 because after 127 we get 128 but for 128 in the circle we have minus 128 right so see it will print minus 128 right so you have to keep in mind that circle like in c we will we are printing using percentage uh c the character value percent is b the integer value right but here you have to type cast it like int we have done so this is how you can store the values if i take 255 here and i am not printing the into value simply what symbol is there for 1 255 it is simply the delete command so it will print nothing see it is printing nothing right and if you want to check out the limit like minimum limit and maximum limit of these so there is one header file limits dot h right you can just press ctrl and click limits dot h and see here you will get the limit see hash define character byte 8 bytes right signed care minimum minus 128 signed care maximum 127 unsigned care maximum 255 like this in limits dot h they have limit of for int also for short also over long also for long long also and see these are you can say the variables the macros hash define this thing simply in your program if you see out this thing as hrt underscore mix you will get this value you can try out this thing you can use these variables in your program also like if you want to use this s care underscore min it will give you minus 128 let me just show you one example c out s care c underscore min so it will print the limit is sorry the minimum limit is minus 128 see it is printing minus 128 right and 255 we are taking so that is for delete so it is not printing anything for this character but you have to use the same symbol so you can check out these you can you know explore these header files also what are this in this header files so if you are confused like the range of these integers short and care you can just check out the limits dot header file and there you will get the range right so i hope cad data type is clear to you guys if you have any doubt you can ask me in comment section now in the next video we will see wpair underscore c this white character the state eye so that's the next video till then bye you
