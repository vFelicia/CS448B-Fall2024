With timestamps:

00:00 - okay so in the series of learning Python
00:02 - programming language we are working on a
00:04 - project we are creating Hangman game
00:06 - right so in the previous video we have
00:09 - seen we have created a flowchart how we
00:12 - are going to proceed
00:13 - right flowchart of this Hangman Project
00:16 - I'm not saying that this is the only way
00:19 - whatever you will we will discuss here
00:20 - this is the only way to create this
00:22 - project there can be multiple ways this
00:24 - is only one way
00:25 - right so better to keep that flowchart
00:28 - with you I have mine right now first
00:31 - thing in flowchart was you have to now
00:34 - we are going to create that project we
00:35 - will write down the code right so first
00:38 - task was to generate a random word
00:41 - because one player is going to guess a
00:43 - word right so now we are human beings we
00:45 - have brain so we can guess any word but
00:49 - what computer will guess you have to
00:50 - tell you have to give like maybe a list
00:54 - of you can say a list of names
00:57 - from those names yeah computer can pick
01:00 - or can generate or you can say can guess
01:02 - a random word
01:04 - yeah that is fine
01:06 - so let's do this
01:09 - okay so let's create a new project sorry
01:12 - new file here
01:15 - Hangman game hangman underscore game Dot
01:19 - py
01:21 - right
01:23 - so here
01:25 - okay we are going to you know generate
01:27 - our computer will generate a random word
01:29 - from our list so obviously you have to
01:31 - import random module first just
01:33 - import random module right okay so we
01:37 - have imported random module now
01:39 - we will give a list to this
01:41 - computer like we can say
01:45 - word
01:48 - or list
01:50 - okay suppose we have right now only we
01:53 - have given only three words Apple
01:55 - beautiful and potato so computer can
01:57 - guess only or can generate any random
01:59 - word from these only from these three
02:01 - only right so our main task is how to
02:04 - generate a first simple task is subtask
02:07 - as you can say generate a random word
02:10 - from this list we have a we know we have
02:12 - a function choice
02:15 - so in random module we have a function
02:17 - random Dot
02:19 - choice
02:21 - this will pick any random item from the
02:25 - list right we have discussed this thing
02:27 - when we are discussing list and random
02:29 - module so here you just have to pass the
02:32 - name of the list word list and that word
02:35 - we will be storing in
02:38 - like
02:39 - a variable chosen chosen word
02:43 - right there we have stored this one
02:47 - so if you want to print that chosen word
02:49 - you can print like print chosen word let
02:52 - me just run this and I'll show you see
02:54 - at first it has chosen Apple maybe it
02:58 - will run this this time potato so first
03:00 - task is complete subtask generate a
03:03 - random word right now obviously we will
03:05 - not show the user this word
03:08 - the second player you know will not show
03:11 - the second player this word we will just
03:12 - show the blank spaces as many blank
03:15 - spaces as the letters in this word so
03:17 - now second task is you have to generate
03:19 - rather than p-o-t-a-t-o here should be
03:22 - dash dash dash dash something like this
03:23 - how many dashes one two three four five
03:25 - six dashes so you have to
03:29 - put dashes here right what we can do now
03:32 - okay second task is this so let's
03:35 - perform the second sub task here
03:38 - just take a empty list
03:41 - like suppose
03:44 - display
03:47 - we are taking a empty list right so for
03:51 - each potato for each letter
03:53 - we have to put a dash so for each letter
03:57 - for p then O then T then like this so
03:59 - just run a for Loop four
04:02 - suppose letter in
04:06 - this chosen word potato is chosen word
04:09 - for each lettering chosen word we will
04:12 - just add in this display
04:15 - equal to
04:17 - this Dash
04:20 - for each letter we will add Dash so
04:23 - first chosen word is supposed potato so
04:25 - in letter we have p p in chosen word yes
04:28 - condition true you will enter here now
04:30 - display is an empty list so one dash
04:33 - would be added now o would be assigned
04:36 - to this letter again condition true
04:37 - again enter here now one more Dash would
04:40 - be assigned to this list like this one
04:42 - two three four five six dashes would be
04:45 - assigned right or second way to or okay
04:49 - I will discuss second way later let's
04:52 - just print this display
04:56 - right we cannot modify this chosen word
04:59 - because obviously we have guessed that
05:01 - chosen word so uh next empty list will
05:04 - take and that will modify that list only
05:07 - right
05:09 - so now print a display let's run this
05:12 - see apple
05:14 - and one two three four five five dashes
05:17 - are there
05:18 - yeah two sub tasks we have completed
05:20 - till now right
05:22 - okay now another way to write down this
05:25 - for Loop is what because we have created
05:27 - this letter
05:29 - but we are not doing anything with this
05:30 - letter
05:32 - right
05:34 - so rather than this what we can do we
05:37 - can use a range function also here
05:39 - rather than chosen word we can do like
05:42 - we can do range
05:46 - till
05:48 - length of that chosen word right so find
05:51 - out the length of
05:53 - chosen word
05:55 - right and any variable we can take for
05:57 - suppose I in range
06:00 - length of the chosen length of the
06:02 - chosen word suppose potato is the chosen
06:04 - word so length is what one two three
06:06 - four five six
06:07 - length is six
06:10 - so this range will generate 0 1 2 3 4 5
06:14 - number right now first and I 0 will be
06:18 - assigned five times this Loop sorry
06:21 - sixth time this Loop would be iterated
06:22 - and six dashes would be added to the
06:25 - stress plane so using range also we can
06:27 - do this thing
06:29 - right
06:30 - okay two ways are there to write down
06:32 - this for Loop okay the next subtask is
06:35 - what now you have to ask from the user
06:38 - guess a letter okay
06:41 - let's
06:42 - obviously we will take input from the
06:44 - user using input function input yes
06:47 - letter and whatever it will user will
06:51 - guess you will
06:53 - just put that into a variable name guest
06:56 - letter guest letter right
07:00 - now
07:01 - after guessing the letter check if that
07:04 - guest letter is in that chosen word or
07:07 - not
07:08 - yes suppose this chosen word is what
07:12 - we have
07:13 - apple right and the guess we have
07:17 - guessed a letter
07:20 - um suppose here we have input
07:22 - R so first R would be compared with this
07:26 - a then P then again P then L then e
07:30 - to every single letter of this chosen
07:33 - word r would be compared right so
07:36 - now write down a condition if
07:40 - okay not if obviously you have to for
07:44 - every we will compare this r with every
07:47 - letter in the chosen word so for for
07:50 - that you have to again write down a for
07:52 - Loop four
07:54 - letter
07:56 - in
07:58 - chosen word
08:00 - this is not the final version of this
08:02 - project
08:03 - I'm going to change this one
08:06 - just for your better understanding one
08:08 - by one I am doing this for letter in
08:11 - chosen word right
08:14 - if the chosen word is suppose here a
08:17 - double b l e so first a would be
08:20 - assigned to this letter so we'll check
08:22 - if if
08:24 - this letter equal to equal to
08:28 - guest letter the user have guessed that
08:30 - letter
08:31 - if this is the case then suppose simply
08:35 - we will print
08:38 - match
08:41 - right
08:43 - or we will print like else no match
08:49 - right okay let's run this and I'll show
08:51 - you what output you will get here
08:53 - see the apple is the chosen word one two
08:57 - three four five spaces are there now to
08:59 - ask guests a letter I am guessing X
09:02 - C
09:04 - it will compare with every letter of
09:07 - Apple first letter Nomad second letter
09:09 - no match third no match no match no
09:11 - because else would be obviously this
09:13 - else would be executed
09:16 - here if the the the chosen word is Apple
09:19 - then five times because five letters are
09:21 - there right okay let's run this again
09:25 - and if I guess a
09:28 - then C
09:30 - this time what is potato so a a is at
09:34 - this place yes so at this place it will
09:37 - it will
09:38 - first no match no match no match then
09:41 - match because a is at this place then no
09:44 - match no match right
09:46 - okay
09:48 - you got you got it right
09:51 - but obviously that is not what I what we
09:53 - want because
09:55 - this is what only one time we are
09:58 - guessing the letter
09:59 - but we want to guess the letter again
10:01 - and again what is the stopping condition
10:04 - for this game
10:06 - all the blanks are filled or if you are
10:09 - out of Lights
10:10 - right
10:11 - suppose first thing okay
10:16 - lives
10:17 - that thing so lives I have told you
10:20 - let's consider live we have six
10:23 - right so let's take a variable lives is
10:26 - equal to 6 first
10:29 - right
10:30 - so we will we are going to put this for
10:32 - Loop this guess sorry this ah this this
10:36 - one
10:37 - input or guess a letter into a loop
10:41 - so we don't know how many how many times
10:43 - this Loop would be iterated how many
10:45 - times this we have to guess the letter
10:48 - maybe if there is a letter apple and we
10:51 - only find that correct word
10:55 - in five attempts only a double PL or
10:57 - four times only or next time if the user
11:00 - maybe are guessing the letter A then X
11:02 - then something like this and the loop
11:05 - would be treated 10 times or 15 times
11:06 - you don't know the number of iterations
11:09 - so for this kind of thing we use while
11:12 - loop is better in these situations
11:15 - why but what condition we will put here
11:19 - when this while loop will stop
11:23 - okay we have two condition
11:25 - so for that also we have to put
11:27 - something like we sometimes we take any
11:30 - Special Value
11:33 - right or we take some Flags right so
11:37 - let's take a variable end of game
11:42 - or let's take a variable
11:45 - game over
11:48 - game over first just
11:52 - because game is not over yet so before
11:54 - while loop we just you know initialize
11:57 - this game or variable to false okay it
11:59 - should be capital f
12:01 - alse right now in while loop we will
12:04 - take while
12:06 - not
12:08 - game over
12:10 - while not game over because game over
12:13 - variable is false so at game over is
12:15 - false means not false means true
12:18 - okay so while true
12:21 - right while true means obviously true so
12:23 - we'll enter here
12:26 - now
12:28 - oh you have to put in while loop we have
12:30 - to put all these things
12:34 - in an indented block
12:36 - right so okay so now this is our
12:40 - indented block
12:42 - now while not game over so we have about
12:45 - this condition okay now somewhere we
12:47 - have to flip this variable game over to
12:51 - True here
12:53 - if that is true if game over becomes
12:56 - true means next time next iteration game
12:58 - over is true no true means false and
13:01 - exit from the loop now when you will
13:03 - flip that game over to true there are
13:06 - two conditions those condition you have
13:07 - to put
13:09 - so first thing
13:10 - okay we are going to guess this letter
13:14 - and then obviously we will not print
13:17 - match here we have to
13:20 - rather than that dash at that specific
13:23 - position we have to put that letter
13:24 - right
13:26 - if apple is chosen word and we have
13:29 - guest
13:31 - p
13:32 - so it will show the user next time like
13:36 - Dash then P then P then the stash and
13:42 - dash something like this right
13:46 - because at correct position you have to
13:48 - insert this p and three dashes are still
13:51 - remaining
13:52 - so how you will put that guest letter or
13:55 - that letter in this display in this this
13:58 - one
13:59 - for that you have to be aware about the
14:03 - position of that letter 0 1 2 3 4 like
14:06 - this right
14:08 - so for letter in chosen word this would
14:10 - not work here you have to
14:14 - put a for Loop for position like for
14:17 - position
14:19 - in
14:21 - not chosen word in then we will because
14:25 - range will give range will give you you
14:27 - will give you the number zero one two
14:29 - three four and that's exactly one
14:30 - because index is 0 1 2 3 4 like this
14:33 - so better use range function range tell
14:38 - length of the chosen word right
14:42 - okay if chosen what is Apple then length
14:46 - would be 5 then 0 1 0 1 2 3 and 4 like
14:51 - this range will generate indexes are the
14:54 - 0 1 2 3 4 right
14:58 - now position is 0 but to compare the
15:02 - letters obviously we have to get the
15:04 - letter at that position
15:06 - so in position now we have 0 so at 0
15:09 - which letter we have so you have to get
15:11 - that letter right so first of all get
15:14 - the letter
15:16 - right
15:17 - now at this point of time letter is
15:20 - equal to
15:23 - chosen word and
15:26 - just pass the index position
15:30 - so if position is 0 so the zero will be
15:33 - passed chosen word 0 chosen word 0 is a
15:36 - so a would be assigned to this letter
15:38 - now we can compare letter is a guest
15:41 - letter is suppose P so we can compare at
15:44 - this point of time right and if it is a
15:47 - match so rather than printing this match
15:49 - we have to do what
15:52 - we have to do in display
15:55 - at that particular position
15:59 - we have to put our
16:00 - guest letter
16:03 - right so at this because displays are
16:07 - that displays this list that will show
16:10 - to the user dash dash dash dash so
16:12 - obviously in display only at that
16:14 - particular position we are going to
16:17 - you know put that here may be guest
16:19 - letter or the letter because if both are
16:21 - same then it doesn't matter you are
16:23 - writing here the guest letter or the
16:25 - letter which variable you are using I
16:27 - hope you go till now but in else we
16:30 - cannot write
16:31 - no match
16:33 - because
16:35 - in else if you do like if letter is not
16:37 - matching in that case you will lose a
16:40 - life in flowchart you can say if no
16:42 - letter is not matching then lose a life
16:44 - so suppose if you here do loser life
16:48 - means lives
16:51 - minus one life is six so we'll do like
16:53 - minus 1 that is 5.
16:56 - but this is not correct way why so
16:59 - because this else would be
17:03 - executed if the letter is Apple
17:06 - if the supposed gas chosen word is Apple
17:11 - and now you have entered suppose uh the
17:14 - guess guest letter is not P it's X
17:18 - right so here we have Dash and dash
17:21 - okay
17:23 - if this is X
17:25 - so guess letter is x for position in
17:27 - range this chosen word position is zero
17:30 - at a zeroth position we have a so letter
17:32 - becomes a a is equal to a if letter is a
17:35 - then a is equal to is equal to guest
17:37 - letter now here we have a is our actual
17:40 - letter equal to equal to guest letter is
17:42 - x is it true no means else part would be
17:46 - executed so here suppose life is 5 so
17:50 - life becomes
17:51 - life was six so life becomes five right
17:54 - but still we are in this for Loop
17:56 - because next time one would be assigned
17:58 - to this position
18:00 - now chosen word position one at position
18:03 - word in chosen word we have P so in
18:05 - letter now we have P so again check P
18:07 - equal to equal to best letter so rather
18:09 - than a at this point next iteration we
18:11 - have p p equal to equal to X
18:13 - no so again else would be executed and
18:16 - this point at here life becomes now 4.
18:21 - so we have guessed only one time x and
18:24 - for the one guess only this Loop the
18:28 - cell should be executed like five times
18:30 - so next time becomes three then two then
18:34 - one and then we are out of lives we have
18:36 - guessed only one time and we are out of
18:38 - like one six lives are going no
18:41 - it shouldn't be like this so in else we
18:43 - cannot write down life minus minus lives
18:46 - minus minus
18:47 - right because for only one wrong guess
18:51 - we should lose only one lie
18:55 - not for every lettering we'll check and
18:58 - we are going to lose a life no
19:00 - right I hope you are getting my point
19:02 - so we cannot write down this else here
19:05 - so this will not work
19:08 - ah outside of four Loop you outside of
19:11 - for Loop you have to write down this
19:13 - line so
19:14 - check if if
19:17 - that guest letter
19:21 - is not in chosen word you will put this
19:24 - condition if
19:26 - our guest letter not
19:30 - sorry
19:33 - not in
19:37 - chosen word
19:39 - you know these operators in and not in
19:41 - membership operator we have discussed
19:42 - right
19:43 - so not in chosen word in that case we
19:47 - can do lives
19:50 - now from that live we can take one life
19:52 - so life is equal to live minus one
19:55 - that is correct now only one time this
19:58 - will be executed for every wrong guess
20:02 - right
20:04 - so okay how it will work I guess you
20:07 - know because we have discussed these
20:08 - operators live minus 1.
20:11 - okay now live we have decreased the
20:13 - lives now see the flowchart there after
20:17 - losing your life again one condition is
20:19 - there if you are out of life or not so
20:22 - say within this if only you have to put
20:25 - one condition if
20:28 - lives equal to equal to zero
20:31 - means you are out of lives means you
20:33 - have to exit means game over so here is
20:36 - the right point to flip
20:39 - this variable game over equal to
20:43 - true because at starting it would false
20:45 - Now flip it to true
20:48 - right
20:50 - and you can just print a message like
20:52 - print
20:54 - you
20:55 - lose
20:58 - okay one is this condition
21:01 - no need to write down any else part now
21:03 - second condition for game over is what
21:05 - if all the blank are filled if you have
21:09 - guessed all the right letters then
21:12 - obviously all the blanks are filled a
21:14 - double p l e
21:15 - now it doesn't matter you are out of
21:18 - lives or not game over and it will print
21:20 - you win that is winning condition so
21:23 - save with same indentation
21:25 - with this four with this 4 if and here
21:30 - you will write down one more condition
21:32 - if if
21:36 - blanks these blanks
21:41 - sorry blanks these dashes
21:46 - not in
21:49 - display
21:52 - if this the blanks blank is what
21:55 - obviously you will put this thing in a
21:57 - quotation mark
21:59 - it's a string you can say not in display
22:02 - because display is obviously the list
22:04 - where we have the empty list like we
22:07 - have the blank spaces so in display if
22:09 - we do not have any blank spaces if no
22:12 - dashes then obviously you have guessed
22:15 - all the correct letters
22:17 - so
22:19 - game over so here also we will flip that
22:22 - will change this
22:25 - game over uh that variable is equal to
22:30 - true and you can simply print here
22:36 - you win
22:38 - let's run this and see what output you
22:40 - are getting we know guess letter is
22:42 - potato so guess a letter
22:44 - I am guessing p
22:46 - okay it is not displaying like at the
22:48 - correct position P because we haven't
22:50 - displayed this thing so let's just stop
22:53 - this first
22:55 - and for this also you can print like
22:57 - print
23:00 - display
23:04 - because after if the if the letter is
23:07 - correct then just put that letter into
23:09 - the position and
23:11 - display that thing display that list
23:14 - okay so let's display that
23:18 - list and let's run this
23:21 - see potato so let's guess p
23:24 - okay P should be shown here but it is
23:27 - not filling our blank space with this
23:29 - correct letter there is something wrong
23:31 - let's stop this and see what is wrong
23:33 - here there should be something wrong
23:35 - here see we are checking if the letter
23:38 - is equal to guest letter then display
23:39 - position okay it should be equal to only
23:42 - one equal to no double equal to right
23:45 - here assignment is what 1 equal to only
23:48 - equal to guess letter one more thing
23:51 - we will be considering like our each
23:53 - word in uh small letters so better to
23:56 - convert if by default by chance you
23:59 - enter by mistake enter capital letter so
24:01 - convert that into lower letter so input
24:03 - guess a letter dot lower it will convert
24:05 - that letter into lowercase letter
24:07 - now let's run this
24:09 - Apple suppose I am entering capital a
24:13 - so see it will convert into small a and
24:16 - it will put that a here
24:18 - so now just
24:21 - wrong guesses one wrong guess
24:24 - nothing would be
24:26 - you know inserted in this blank Z
24:30 - second round guess
24:33 - third
24:34 - then
24:36 - four
24:37 - then 5 only one life is remaining
24:41 - e
24:43 - this is last
24:45 - last one
24:47 - okay e is not wrong s e is there so one
24:50 - last t
24:53 - you lose because we are having only six
24:55 - lives but it is not showing us it's
24:58 - showing us the hangman image
25:01 - right we are not getting like how many
25:04 - lives we are still remaining so let's
25:06 - just do this
25:07 - see I have I have the stages hangman
25:11 - stages dot py file and there I have a
25:15 - list
25:16 - and I have these figures see this is the
25:18 - complete hangman
25:20 - so at zeroth index of this list I have
25:23 - complete hangman so I have just
25:25 - corresponded this something like this if
25:27 - lives are remaining 0 0 means
25:31 - at zeroth index I have having complete
25:34 - hangman drone so game over if lives are
25:37 - remaining is one so at one index of this
25:41 - list I am having a hangman with only one
25:43 - leg so one leg is still there one life
25:45 - is still there like this I have done six
25:48 - hangman
25:50 - images
25:52 - see At Last At sixth index
25:55 - there is no hangman no part of no body
25:58 - part of that hangman means we are having
26:00 - six lives complete Six Lives right so I
26:03 - you have to show this thing
26:06 - to the user
26:08 - the this this file how to show this
26:12 - thing
26:13 - stage is this list I want to access
26:17 - right so if stages and I pass at index 0
26:22 - means this image would be shown
26:25 - right if stage is one then this image
26:29 - would be shown
26:30 - right so now see
26:34 - if you want to you know use that choice
26:38 - function from random modules and then
26:40 - you have to import this random module so
26:43 - same you have to first of all import
26:46 - that module hangman dot stages this file
26:50 - this file we have to import right now
26:54 - I want to show the stages so at last
26:57 - within while loop only
27:00 - with the same indentation I am just
27:02 - going to print I'm just going to you
27:05 - know that access those stages that list
27:08 - from hangman stages so first if you use
27:11 - that choice function from random module
27:13 - you have to use first of all the name of
27:14 - the module random dot choice so the hair
27:17 - name of our module or that file is what
27:19 - hangman
27:21 - stages
27:23 - dot in that file I have a list stages
27:26 - stages
27:28 - and just pass a variable here
27:31 - for index just pass the variable lives
27:34 - right so if zero lives are remaining so
27:37 - 0 would be passed here and the complete
27:39 - hangman picture would be drawn if one
27:41 - life is remaining so one would be passed
27:42 - here and
27:43 - the one at one index of that list what
27:46 - is only one leg that handman would be
27:49 - drawn okay let's run this here
27:52 - see
27:54 - beautiful
27:55 - so B that is correct means we have six
28:00 - lives
28:01 - P this is also correct means no body
28:05 - part of the hangman is drawn we have all
28:07 - the six lives suppose
28:09 - Q
28:11 - so head would be drawn because one wrong
28:13 - guess is there suppose
28:15 - R second wrongest means body would be
28:18 - drawn okay
28:21 - R again r
28:23 - again a wrong guess
28:26 - again what one part
28:30 - P again wrong is n again wrong is one
28:35 - more wrong is and you are gone
28:36 - M again a wrong s and complete hangman
28:40 - would be drawn and you lose that's it
28:43 - game over
28:45 - okay
28:47 - now see I have this list only because
28:50 - this whatever list you will provide it
28:52 - will choose from these three words only
28:55 - so let's provide
28:57 - more words
28:59 - so I have a word file here Word file dot
29:02 - py although I'm not having many words
29:05 - so you just first create your database
29:07 - word find of having like 50 words or
29:10 - maybe 70 words 100 words so I'm having
29:13 - these words
29:14 - so this list I want to access in my
29:16 - project how to access first of all you
29:18 - have to import
29:20 - that file import what is the name of the
29:23 - file
29:24 - word file.py so Word file now
29:28 - this random dot choice this word list I
29:31 - am not providing this word list here
29:33 - anymore just comment this out
29:35 - from
29:37 - the word
29:39 - file this
29:41 - one I want to access that words
29:45 - that list words see the name of the file
29:47 - is Word file and here I have this list
29:49 - words and within this words I am having
29:52 - these words multiple words many words so
29:55 - I want to access those words right let's
29:59 - send this this time
30:01 - see this time attitude
30:03 - so w wrong is a
30:07 - t
30:08 - U
30:10 - d
30:13 - and E
30:15 - one is remaining
30:18 - I
30:20 - see now
30:22 - we have lost only one life but still
30:24 - game is over and you win because there
30:26 - is no blank space in this display now
30:30 - right two conditions we have given for
30:32 - game over so you win
30:34 - I guess now you got this
30:37 - now you can modify this project
30:38 - according to yourself
30:41 - maybe you want like whenever you run
30:43 - then the the previous output should be
30:47 - cleared so for that also you can write
30:49 - down any function
30:50 - so I hope you got this working of this
30:53 - project
30:54 - there's not you know it's not like that
30:57 - this is the only way to create this
30:58 - project there can be multiple ways so
31:00 - this is just a hint for you guys now you
31:03 - can modify this thing according to
31:04 - yourself
31:06 - so
31:08 - if you want to take a screenshot of this
31:10 - thing
31:11 - so that is all about our Hangman Project
31:14 - I hope you got this project if not
31:18 - please write down this code here you
31:21 - know on your paper then dry run this
31:23 - take that flowchart according to that
31:25 - one by one write down the code and
31:28 - understand this project right don't just
31:31 - skip this video although it's simple one
31:33 - it's for beginners one but you have to
31:35 - understand then only we will move to the
31:37 - complex ones right so that's it for this
31:40 - video and I will see you in the next
31:41 - video till then bye take care

Cleaned transcript:

okay so in the series of learning Python programming language we are working on a project we are creating Hangman game right so in the previous video we have seen we have created a flowchart how we are going to proceed right flowchart of this Hangman Project I'm not saying that this is the only way whatever you will we will discuss here this is the only way to create this project there can be multiple ways this is only one way right so better to keep that flowchart with you I have mine right now first thing in flowchart was you have to now we are going to create that project we will write down the code right so first task was to generate a random word because one player is going to guess a word right so now we are human beings we have brain so we can guess any word but what computer will guess you have to tell you have to give like maybe a list of you can say a list of names from those names yeah computer can pick or can generate or you can say can guess a random word yeah that is fine so let's do this okay so let's create a new project sorry new file here Hangman game hangman underscore game Dot py right so here okay we are going to you know generate our computer will generate a random word from our list so obviously you have to import random module first just import random module right okay so we have imported random module now we will give a list to this computer like we can say word or list okay suppose we have right now only we have given only three words Apple beautiful and potato so computer can guess only or can generate any random word from these only from these three only right so our main task is how to generate a first simple task is subtask as you can say generate a random word from this list we have a we know we have a function choice so in random module we have a function random Dot choice this will pick any random item from the list right we have discussed this thing when we are discussing list and random module so here you just have to pass the name of the list word list and that word we will be storing in like a variable chosen chosen word right there we have stored this one so if you want to print that chosen word you can print like print chosen word let me just run this and I'll show you see at first it has chosen Apple maybe it will run this this time potato so first task is complete subtask generate a random word right now obviously we will not show the user this word the second player you know will not show the second player this word we will just show the blank spaces as many blank spaces as the letters in this word so now second task is you have to generate rather than potato here should be dash dash dash dash something like this how many dashes one two three four five six dashes so you have to put dashes here right what we can do now okay second task is this so let's perform the second sub task here just take a empty list like suppose display we are taking a empty list right so for each potato for each letter we have to put a dash so for each letter for p then O then T then like this so just run a for Loop four suppose letter in this chosen word potato is chosen word for each lettering chosen word we will just add in this display equal to this Dash for each letter we will add Dash so first chosen word is supposed potato so in letter we have p p in chosen word yes condition true you will enter here now display is an empty list so one dash would be added now o would be assigned to this letter again condition true again enter here now one more Dash would be assigned to this list like this one two three four five six dashes would be assigned right or second way to or okay I will discuss second way later let's just print this display right we cannot modify this chosen word because obviously we have guessed that chosen word so uh next empty list will take and that will modify that list only right so now print a display let's run this see apple and one two three four five five dashes are there yeah two sub tasks we have completed till now right okay now another way to write down this for Loop is what because we have created this letter but we are not doing anything with this letter right so rather than this what we can do we can use a range function also here rather than chosen word we can do like we can do range till length of that chosen word right so find out the length of chosen word right and any variable we can take for suppose I in range length of the chosen length of the chosen word suppose potato is the chosen word so length is what one two three four five six length is six so this range will generate 0 1 2 3 4 5 number right now first and I 0 will be assigned five times this Loop sorry sixth time this Loop would be iterated and six dashes would be added to the stress plane so using range also we can do this thing right okay two ways are there to write down this for Loop okay the next subtask is what now you have to ask from the user guess a letter okay let's obviously we will take input from the user using input function input yes letter and whatever it will user will guess you will just put that into a variable name guest letter guest letter right now after guessing the letter check if that guest letter is in that chosen word or not yes suppose this chosen word is what we have apple right and the guess we have guessed a letter um suppose here we have input R so first R would be compared with this a then P then again P then L then e to every single letter of this chosen word r would be compared right so now write down a condition if okay not if obviously you have to for every we will compare this r with every letter in the chosen word so for for that you have to again write down a for Loop four letter in chosen word this is not the final version of this project I'm going to change this one just for your better understanding one by one I am doing this for letter in chosen word right if the chosen word is suppose here a double b l e so first a would be assigned to this letter so we'll check if if this letter equal to equal to guest letter the user have guessed that letter if this is the case then suppose simply we will print match right or we will print like else no match right okay let's run this and I'll show you what output you will get here see the apple is the chosen word one two three four five spaces are there now to ask guests a letter I am guessing X C it will compare with every letter of Apple first letter Nomad second letter no match third no match no match no because else would be obviously this else would be executed here if the the the chosen word is Apple then five times because five letters are there right okay let's run this again and if I guess a then C this time what is potato so a a is at this place yes so at this place it will it will first no match no match no match then match because a is at this place then no match no match right okay you got you got it right but obviously that is not what I what we want because this is what only one time we are guessing the letter but we want to guess the letter again and again what is the stopping condition for this game all the blanks are filled or if you are out of Lights right suppose first thing okay lives that thing so lives I have told you let's consider live we have six right so let's take a variable lives is equal to 6 first right so we will we are going to put this for Loop this guess sorry this ah this this one input or guess a letter into a loop so we don't know how many how many times this Loop would be iterated how many times this we have to guess the letter maybe if there is a letter apple and we only find that correct word in five attempts only a double PL or four times only or next time if the user maybe are guessing the letter A then X then something like this and the loop would be treated 10 times or 15 times you don't know the number of iterations so for this kind of thing we use while loop is better in these situations why but what condition we will put here when this while loop will stop okay we have two condition so for that also we have to put something like we sometimes we take any Special Value right or we take some Flags right so let's take a variable end of game or let's take a variable game over game over first just because game is not over yet so before while loop we just you know initialize this game or variable to false okay it should be capital f alse right now in while loop we will take while not game over while not game over because game over variable is false so at game over is false means not false means true okay so while true right while true means obviously true so we'll enter here now oh you have to put in while loop we have to put all these things in an indented block right so okay so now this is our indented block now while not game over so we have about this condition okay now somewhere we have to flip this variable game over to True here if that is true if game over becomes true means next time next iteration game over is true no true means false and exit from the loop now when you will flip that game over to true there are two conditions those condition you have to put so first thing okay we are going to guess this letter and then obviously we will not print match here we have to rather than that dash at that specific position we have to put that letter right if apple is chosen word and we have guest p so it will show the user next time like Dash then P then P then the stash and dash something like this right because at correct position you have to insert this p and three dashes are still remaining so how you will put that guest letter or that letter in this display in this this one for that you have to be aware about the position of that letter 0 1 2 3 4 like this right so for letter in chosen word this would not work here you have to put a for Loop for position like for position in not chosen word in then we will because range will give range will give you you will give you the number zero one two three four and that's exactly one because index is 0 1 2 3 4 like this so better use range function range tell length of the chosen word right okay if chosen what is Apple then length would be 5 then 0 1 0 1 2 3 and 4 like this range will generate indexes are the 0 1 2 3 4 right now position is 0 but to compare the letters obviously we have to get the letter at that position so in position now we have 0 so at 0 which letter we have so you have to get that letter right so first of all get the letter right now at this point of time letter is equal to chosen word and just pass the index position so if position is 0 so the zero will be passed chosen word 0 chosen word 0 is a so a would be assigned to this letter now we can compare letter is a guest letter is suppose P so we can compare at this point of time right and if it is a match so rather than printing this match we have to do what we have to do in display at that particular position we have to put our guest letter right so at this because displays are that displays this list that will show to the user dash dash dash dash so obviously in display only at that particular position we are going to you know put that here may be guest letter or the letter because if both are same then it doesn't matter you are writing here the guest letter or the letter which variable you are using I hope you go till now but in else we cannot write no match because in else if you do like if letter is not matching in that case you will lose a life in flowchart you can say if no letter is not matching then lose a life so suppose if you here do loser life means lives minus one life is six so we'll do like minus 1 that is 5. but this is not correct way why so because this else would be executed if the letter is Apple if the supposed gas chosen word is Apple and now you have entered suppose uh the guess guest letter is not P it's X right so here we have Dash and dash okay if this is X so guess letter is x for position in range this chosen word position is zero at a zeroth position we have a so letter becomes a a is equal to a if letter is a then a is equal to is equal to guest letter now here we have a is our actual letter equal to equal to guest letter is x is it true no means else part would be executed so here suppose life is 5 so life becomes life was six so life becomes five right but still we are in this for Loop because next time one would be assigned to this position now chosen word position one at position word in chosen word we have P so in letter now we have P so again check P equal to equal to best letter so rather than a at this point next iteration we have p p equal to equal to X no so again else would be executed and this point at here life becomes now 4. so we have guessed only one time x and for the one guess only this Loop the cell should be executed like five times so next time becomes three then two then one and then we are out of lives we have guessed only one time and we are out of like one six lives are going no it shouldn't be like this so in else we cannot write down life minus minus lives minus minus right because for only one wrong guess we should lose only one lie not for every lettering we'll check and we are going to lose a life no right I hope you are getting my point so we cannot write down this else here so this will not work ah outside of four Loop you outside of for Loop you have to write down this line so check if if that guest letter is not in chosen word you will put this condition if our guest letter not sorry not in chosen word you know these operators in and not in membership operator we have discussed right so not in chosen word in that case we can do lives now from that live we can take one life so life is equal to live minus one that is correct now only one time this will be executed for every wrong guess right so okay how it will work I guess you know because we have discussed these operators live minus 1. okay now live we have decreased the lives now see the flowchart there after losing your life again one condition is there if you are out of life or not so say within this if only you have to put one condition if lives equal to equal to zero means you are out of lives means you have to exit means game over so here is the right point to flip this variable game over equal to true because at starting it would false Now flip it to true right and you can just print a message like print you lose okay one is this condition no need to write down any else part now second condition for game over is what if all the blank are filled if you have guessed all the right letters then obviously all the blanks are filled a double p l e now it doesn't matter you are out of lives or not game over and it will print you win that is winning condition so save with same indentation with this four with this 4 if and here you will write down one more condition if if blanks these blanks sorry blanks these dashes not in display if this the blanks blank is what obviously you will put this thing in a quotation mark it's a string you can say not in display because display is obviously the list where we have the empty list like we have the blank spaces so in display if we do not have any blank spaces if no dashes then obviously you have guessed all the correct letters so game over so here also we will flip that will change this game over uh that variable is equal to true and you can simply print here you win let's run this and see what output you are getting we know guess letter is potato so guess a letter I am guessing p okay it is not displaying like at the correct position P because we haven't displayed this thing so let's just stop this first and for this also you can print like print display because after if the if the letter is correct then just put that letter into the position and display that thing display that list okay so let's display that list and let's run this see potato so let's guess p okay P should be shown here but it is not filling our blank space with this correct letter there is something wrong let's stop this and see what is wrong here there should be something wrong here see we are checking if the letter is equal to guest letter then display position okay it should be equal to only one equal to no double equal to right here assignment is what 1 equal to only equal to guess letter one more thing we will be considering like our each word in uh small letters so better to convert if by default by chance you enter by mistake enter capital letter so convert that into lower letter so input guess a letter dot lower it will convert that letter into lowercase letter now let's run this Apple suppose I am entering capital a so see it will convert into small a and it will put that a here so now just wrong guesses one wrong guess nothing would be you know inserted in this blank Z second round guess third then four then 5 only one life is remaining e this is last last one okay e is not wrong s e is there so one last t you lose because we are having only six lives but it is not showing us it's showing us the hangman image right we are not getting like how many lives we are still remaining so let's just do this see I have I have the stages hangman stages dot py file and there I have a list and I have these figures see this is the complete hangman so at zeroth index of this list I have complete hangman so I have just corresponded this something like this if lives are remaining 0 0 means at zeroth index I have having complete hangman drone so game over if lives are remaining is one so at one index of this list I am having a hangman with only one leg so one leg is still there one life is still there like this I have done six hangman images see At Last At sixth index there is no hangman no part of no body part of that hangman means we are having six lives complete Six Lives right so I you have to show this thing to the user the this this file how to show this thing stage is this list I want to access right so if stages and I pass at index 0 means this image would be shown right if stage is one then this image would be shown right so now see if you want to you know use that choice function from random modules and then you have to import this random module so same you have to first of all import that module hangman dot stages this file this file we have to import right now I want to show the stages so at last within while loop only with the same indentation I am just going to print I'm just going to you know that access those stages that list from hangman stages so first if you use that choice function from random module you have to use first of all the name of the module random dot choice so the hair name of our module or that file is what hangman stages dot in that file I have a list stages stages and just pass a variable here for index just pass the variable lives right so if zero lives are remaining so 0 would be passed here and the complete hangman picture would be drawn if one life is remaining so one would be passed here and the one at one index of that list what is only one leg that handman would be drawn okay let's run this here see beautiful so B that is correct means we have six lives P this is also correct means no body part of the hangman is drawn we have all the six lives suppose Q so head would be drawn because one wrong guess is there suppose R second wrongest means body would be drawn okay R again r again a wrong guess again what one part P again wrong is n again wrong is one more wrong is and you are gone M again a wrong s and complete hangman would be drawn and you lose that's it game over okay now see I have this list only because this whatever list you will provide it will choose from these three words only so let's provide more words so I have a word file here Word file dot py although I'm not having many words so you just first create your database word find of having like 50 words or maybe 70 words 100 words so I'm having these words so this list I want to access in my project how to access first of all you have to import that file import what is the name of the file word file.py so Word file now this random dot choice this word list I am not providing this word list here anymore just comment this out from the word file this one I want to access that words that list words see the name of the file is Word file and here I have this list words and within this words I am having these words multiple words many words so I want to access those words right let's send this this time see this time attitude so w wrong is a t U d and E one is remaining I see now we have lost only one life but still game is over and you win because there is no blank space in this display now right two conditions we have given for game over so you win I guess now you got this now you can modify this project according to yourself maybe you want like whenever you run then the the previous output should be cleared so for that also you can write down any function so I hope you got this working of this project there's not you know it's not like that this is the only way to create this project there can be multiple ways so this is just a hint for you guys now you can modify this thing according to yourself so if you want to take a screenshot of this thing so that is all about our Hangman Project I hope you got this project if not please write down this code here you know on your paper then dry run this take that flowchart according to that one by one write down the code and understand this project right don't just skip this video although it's simple one it's for beginners one but you have to understand then only we will move to the complex ones right so that's it for this video and I will see you in the next video till then bye take care
