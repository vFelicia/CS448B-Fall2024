With timestamps:

00:00 - so i'm going to start a course on
00:01 - programming in c language and this is
00:03 - the first video so i'm going to discuss
00:05 - some basic things in this video
00:07 - like what is need of programming why do
00:09 - you write programs what is need of
00:10 - writing these programs what is need of
00:12 - programming languages and then we will
00:14 - come to c language right so now let us
00:17 - discuss what is need of programming why
00:18 - do you write programs see
00:21 - computer is what it's you can say
00:22 - machine or you can say general purpose
00:24 - machine the use of computer is what
00:26 - which can be which can perform any task
00:28 - any computational task not any task any
00:31 - computational task it can perform right
00:35 - but how do you communicate with computer
00:37 - like suppose if you want to add two
00:39 - numbers then it's not like that you will
00:42 - say hey computer i want to add two
00:44 - numbers four and five so tell me what is
00:46 - the addition of four and five
00:48 - no
00:49 - computer will not understand your
00:51 - language
00:52 - so now what you will do
00:54 - we will write some instructions you can
00:56 - say sequence of instructions and we will
00:58 - give those sequence or set of
01:00 - instructions to computer
01:02 - and then according to that computer will
01:04 - perform your task right
01:07 - so those set of instruction or what
01:09 - program sequence of instructions are
01:11 - what programs right that is why if you
01:14 - want that your computer will perform
01:16 - some task for you you have to write
01:17 - programs right that is why we need to
01:20 - write programs fine
01:22 - but now see
01:23 - the language of computer is what
01:25 - binary language i hope everybody knows 0
01:27 - and 1 computer can understand only
01:29 - 0 and 1 binary
01:32 - so
01:33 - if you write like if you write
01:35 - instructions in english language in the
01:37 - language or in any language computer
01:39 - will not understand
01:41 - then
01:42 - what we will do that also will discuss
01:44 - how that language how that program will
01:46 - be converted into zero and when and then
01:48 - computer will perform your task fine so
01:50 - basically you can say what computer run
01:53 - by programs computer is nothing without
01:56 - programs it cannot do anything without
01:57 - programs
01:59 - when you purchase a new laptop or
02:00 - computer that has already you know many
02:03 - programs are already there in uh that
02:05 - program so you can sorry in your
02:07 - computer like some system programs
02:10 - application programs or you must have
02:12 - heard about system software's
02:13 - application software software is what
02:15 - definitely it is a set of programs right
02:18 - so system programs means what they are
02:20 - going to manage that system resources
02:23 - they are going to manage the hardware
02:25 - and application programs or application
02:27 - softwares are what
02:29 - they are basically used to perform your
02:31 - task your favorite task like um web
02:34 - browser is application software
02:36 - and text editor in which you you can
02:39 - edit you can write text you can edit
02:41 - text ms office that is also a
02:43 - application software right but suppose
02:46 - if you want computer to perform
02:49 - your task any specific task according to
02:51 - that you have to write your own program
02:54 - and you have to submit that program you
02:56 - have to give that program to computer
02:58 - and then computer will understand your
03:00 - program or you can say those sequence of
03:02 - instructions and according to that will
03:04 - give you some output
03:06 - right so now how do you write programs
03:08 - like it's not like in simple english
03:10 - language you will write programs and
03:12 - submit to computer no it is not going to
03:14 - understand
03:16 - so for that thing we need programming
03:18 - languages right see when we communicate
03:20 - with each other
03:22 - like if i want to communicate with you
03:24 - then the languages may be english hindi
03:26 - right
03:27 - so and for communication what first of
03:30 - all you need to understand the the
03:32 - alphabets first we we uh
03:34 - study what abcd and then words
03:38 - then we frame sentences by using
03:40 - grammars and all right and then we
03:42 - communicate then we frame sentences and
03:44 - then we communicate with each other
03:46 - same thing in language also you need to
03:49 - learn
03:50 - something before before writing the
03:52 - programs like
03:54 - the characters
03:55 - character set of that language keywords
03:57 - and
03:58 - some syntaxes and some rules right and
04:01 - then we can write programs and then we
04:03 - can interact with computers
04:05 - right
04:06 - but the point here is what computer can
04:08 - understand only 0 and 1 and you are
04:10 - writing programs in what
04:12 - if suppose c language we take example of
04:15 - c language then definitely we are not
04:17 - going to write like 0 1 0 0 1 suppose i
04:20 - write this one
04:21 - this is a bunch of 0's and 1 but we are
04:23 - not able to understand what is meaning
04:25 - of this thing
04:26 - right but maybe computer can understand
04:28 - obviously commuter will understand
04:30 - because it is language of computer
04:32 - right
04:33 - so we write what hash include studio dot
04:36 - touch hash include corneo dot then word
04:38 - main then
04:39 - integer a b
04:41 - a b then printf scanf and everything
04:44 - so
04:45 - that
04:46 - program first of all have to be
04:48 - converted into
04:50 - this language machine language zero and
04:53 - one form
04:54 - and then computer will
04:56 - execute your program or more
04:58 - specifically i would say cpu
05:03 - because it is what processor central
05:06 - processing unit
05:07 - this is processor this is you can say
05:08 - heart of computer the calculation the
05:11 - computation the task which you are going
05:13 - you need to perform on computer that is
05:15 - going to be performed by cpu more
05:18 - specifically if i will say
05:20 - then cpu will give you
05:22 - output right so if you write
05:24 - program in this format this is what
05:26 - machine level language i hope you have
05:28 - heard about machine level languages
05:30 - assembly level languages then high level
05:32 - languages or low level languages middle
05:33 - level languages right but we will uh
05:36 - generally prefer to call high level
05:38 - languages right high level languages
05:40 - means the c c plus plus java these are
05:43 - understandable by human because if we
05:46 - write this if we see at this code
05:49 - then we are not going we will not
05:50 - understand what is this so this is
05:52 - machine level
05:53 - language right but before invention of
05:56 - these high level languages they used to
05:58 - write programs in this format see you
06:00 - can imagine how tough it was at that
06:03 - time
06:04 - to write program in this language
06:06 - machine language because see
06:08 - and this is what this is according to
06:10 - you know
06:11 - those uh cpu architecture some set of
06:13 - specifications are there which some
06:15 - architecture is there which cpu follows
06:18 - uh i think you will you or maybe you
06:21 - have studied the subject co a computer
06:23 - organization and architecture in that
06:25 - you must have studied those
06:26 - architectures right
06:29 - so according to those specification
06:30 - those arc architecture of the cpu this
06:34 - code will differ
06:35 - it means it is machine dependent in one
06:38 - computer
06:39 - the same program like addition of two
06:41 - numbers let us suppose uh
06:44 - in at one cpu
06:45 - right
06:46 - suppose according to the cpu
06:48 - architecture of the specifications the
06:50 - instruction can be given in 20 bits like
06:53 - 20 bits right
06:54 - and first 4 bit are for
06:57 - operator i hope everybody know like i
06:59 - suppose i am writing 1 plus 2
07:01 - 1 and 2 these are operands and plus is
07:03 - operator here we write as op code
07:06 - suppose these first 4 bits are for this
07:08 - class to indicate this plus and
07:11 - suppose here plus
07:12 - i'll write like 0 0 1 0 0 0 1 0
07:17 - so computer will understand
07:19 - that this is for plus
07:22 - that he has to perform plus operation
07:24 - right and then next 8 bits are for 1
07:27 - this operand and next eight bit are for
07:29 - second operand we will write these two
07:32 - operands into binary form right
07:35 - like zero zero zero seven zeros and one
07:38 - and two how you will write
07:40 - this is two in binary form so that we
07:42 - will write here and when we submit this
07:44 - instruction then
07:46 - the cpu will perform addition on one on
07:49 - one and two and it will give you the
07:51 - result right and suppose
07:53 - the according to the specification of
07:55 - cpu to second processor
07:59 - may be there
08:01 - plus
08:02 - is 0 0 0 1
08:05 - right or maybe the length of the
08:07 - instruction is something else not 20
08:09 - bits
08:10 - so
08:11 - it's not easy to write programs in
08:13 - machine language because it is dependent
08:15 - on
08:16 - that machine to machine so it is not the
08:19 - programs are not portable in one machine
08:21 - if you are writing program for edition
08:23 - then again you have to write rewrite
08:25 - that program for second machine it's not
08:27 - like that the same program will run on
08:29 - second machine
08:30 - that is very difficult then
08:32 - assembly level languages come
08:34 - these levels will discuss in a separate
08:37 - video with more details and after that
08:39 - high level languages come to overcome
08:41 - these limitations to add portability
08:43 - concept so that one program on one
08:46 - machine we write and that program can
08:48 - easily be ported to second machine means
08:51 - we can
08:52 - we can run that program same program on
08:54 - second machine also without any
08:56 - modification or maybe you can say with
08:58 - few modifications
09:00 - right so now let us discuss what is c
09:02 - language
09:03 - see it was developed by dennis ritchie
09:05 - in 1972 where bell laboratories the
09:09 - headquarter of these bell labs are where
09:12 - in new jersey u.s right
09:14 - and it is before c the language was
09:16 - developed b language
09:19 - so you can say c is what successor of b
09:22 - language it was developed by uh
09:24 - ken thompson right why c language was
09:27 - developed at that time basically the
09:30 - main purpose was
09:32 - to uh you know uh
09:34 - write operating system that is unix
09:36 - operating system
09:37 - that was already written in b language
09:40 - but there was some limitations so to
09:42 - overcome those limitations because c was
09:45 - more powerful than b language right
09:48 - so they used
09:50 - to
09:51 - write the kernel of unix operating
09:53 - system they used this language c
09:56 - language so c is basically you can say
09:58 - it's a system programming languages
09:59 - language many softwares have been
10:01 - written in c language oracle android the
10:05 - core libraries of android was written in
10:07 - c language
10:08 - major part of web browser is written in
10:11 - c language device drivers written in c
10:14 - language and unix operating system so c
10:17 - is you can say the most popular
10:18 - programming language and during 1980s c
10:22 - was the most widely used programming
10:25 - language
10:26 - and in 1989 it was standardized by ansi
10:30 - that is why uh after that it is called a
10:33 - nsic
10:34 - and see
10:35 - how the computer is going to understand
10:37 - what whatever we will write in c
10:39 - language because here it is not machine
10:41 - level language here we are not going to
10:42 - write the bunch of zeros and ones right
10:45 - so first of all the program that you
10:47 - will write in c language that is to be
10:49 - converted into that object uh file or
10:53 - object code or you can say that machine
10:55 - code zeros and ones and who is going to
10:57 - convert it compiler
11:00 - that is why it is known as compiled
11:02 - language right and the program is ah
11:05 - written like the name of the program is
11:07 - abc suppose and the extension of c
11:09 - program is
11:11 - dot c right so uh the compiler is going
11:14 - to convert it into that obj file object
11:17 - code machine level code and then
11:19 - the cpu will run this
11:22 - program the whole process we are going
11:23 - to discuss in a separate video like the
11:26 - basic the execution how the program is
11:27 - going to be executed when it is going to
11:29 - be converted in object file by
11:32 - whom and what is the role of that linker
11:34 - and loader and executable file when
11:37 - executable file will be
11:39 - formed and
11:40 - then
11:41 - how you will get the output that also
11:43 - will discuss in a separate video the
11:45 - complete process one more ah thing is
11:47 - interpreter and the main task of
11:49 - interpreter is also
11:51 - to convert this program high level
11:53 - program into object code but the
11:55 - difference will see in a separate video
11:57 - so now that's it for this video now i'm
11:59 - going to see in the next video till then
12:00 - bye take

Cleaned transcript:

so i'm going to start a course on programming in c language and this is the first video so i'm going to discuss some basic things in this video like what is need of programming why do you write programs what is need of writing these programs what is need of programming languages and then we will come to c language right so now let us discuss what is need of programming why do you write programs see computer is what it's you can say machine or you can say general purpose machine the use of computer is what which can be which can perform any task any computational task not any task any computational task it can perform right but how do you communicate with computer like suppose if you want to add two numbers then it's not like that you will say hey computer i want to add two numbers four and five so tell me what is the addition of four and five no computer will not understand your language so now what you will do we will write some instructions you can say sequence of instructions and we will give those sequence or set of instructions to computer and then according to that computer will perform your task right so those set of instruction or what program sequence of instructions are what programs right that is why if you want that your computer will perform some task for you you have to write programs right that is why we need to write programs fine but now see the language of computer is what binary language i hope everybody knows 0 and 1 computer can understand only 0 and 1 binary so if you write like if you write instructions in english language in the language or in any language computer will not understand then what we will do that also will discuss how that language how that program will be converted into zero and when and then computer will perform your task fine so basically you can say what computer run by programs computer is nothing without programs it cannot do anything without programs when you purchase a new laptop or computer that has already you know many programs are already there in uh that program so you can sorry in your computer like some system programs application programs or you must have heard about system software's application software software is what definitely it is a set of programs right so system programs means what they are going to manage that system resources they are going to manage the hardware and application programs or application softwares are what they are basically used to perform your task your favorite task like um web browser is application software and text editor in which you you can edit you can write text you can edit text ms office that is also a application software right but suppose if you want computer to perform your task any specific task according to that you have to write your own program and you have to submit that program you have to give that program to computer and then computer will understand your program or you can say those sequence of instructions and according to that will give you some output right so now how do you write programs like it's not like in simple english language you will write programs and submit to computer no it is not going to understand so for that thing we need programming languages right see when we communicate with each other like if i want to communicate with you then the languages may be english hindi right so and for communication what first of all you need to understand the the alphabets first we we uh study what abcd and then words then we frame sentences by using grammars and all right and then we communicate then we frame sentences and then we communicate with each other same thing in language also you need to learn something before before writing the programs like the characters character set of that language keywords and some syntaxes and some rules right and then we can write programs and then we can interact with computers right but the point here is what computer can understand only 0 and 1 and you are writing programs in what if suppose c language we take example of c language then definitely we are not going to write like 0 1 0 0 1 suppose i write this one this is a bunch of 0's and 1 but we are not able to understand what is meaning of this thing right but maybe computer can understand obviously commuter will understand because it is language of computer right so we write what hash include studio dot touch hash include corneo dot then word main then integer a b a b then printf scanf and everything so that program first of all have to be converted into this language machine language zero and one form and then computer will execute your program or more specifically i would say cpu because it is what processor central processing unit this is processor this is you can say heart of computer the calculation the computation the task which you are going you need to perform on computer that is going to be performed by cpu more specifically if i will say then cpu will give you output right so if you write program in this format this is what machine level language i hope you have heard about machine level languages assembly level languages then high level languages or low level languages middle level languages right but we will uh generally prefer to call high level languages right high level languages means the c c plus plus java these are understandable by human because if we write this if we see at this code then we are not going we will not understand what is this so this is machine level language right but before invention of these high level languages they used to write programs in this format see you can imagine how tough it was at that time to write program in this language machine language because see and this is what this is according to you know those uh cpu architecture some set of specifications are there which some architecture is there which cpu follows uh i think you will you or maybe you have studied the subject co a computer organization and architecture in that you must have studied those architectures right so according to those specification those arc architecture of the cpu this code will differ it means it is machine dependent in one computer the same program like addition of two numbers let us suppose uh in at one cpu right suppose according to the cpu architecture of the specifications the instruction can be given in 20 bits like 20 bits right and first 4 bit are for operator i hope everybody know like i suppose i am writing 1 plus 2 1 and 2 these are operands and plus is operator here we write as op code suppose these first 4 bits are for this class to indicate this plus and suppose here plus i'll write like 0 0 1 0 0 0 1 0 so computer will understand that this is for plus that he has to perform plus operation right and then next 8 bits are for 1 this operand and next eight bit are for second operand we will write these two operands into binary form right like zero zero zero seven zeros and one and two how you will write this is two in binary form so that we will write here and when we submit this instruction then the cpu will perform addition on one on one and two and it will give you the result right and suppose the according to the specification of cpu to second processor may be there plus is 0 0 0 1 right or maybe the length of the instruction is something else not 20 bits so it's not easy to write programs in machine language because it is dependent on that machine to machine so it is not the programs are not portable in one machine if you are writing program for edition then again you have to write rewrite that program for second machine it's not like that the same program will run on second machine that is very difficult then assembly level languages come these levels will discuss in a separate video with more details and after that high level languages come to overcome these limitations to add portability concept so that one program on one machine we write and that program can easily be ported to second machine means we can we can run that program same program on second machine also without any modification or maybe you can say with few modifications right so now let us discuss what is c language see it was developed by dennis ritchie in 1972 where bell laboratories the headquarter of these bell labs are where in new jersey u.s right and it is before c the language was developed b language so you can say c is what successor of b language it was developed by uh ken thompson right why c language was developed at that time basically the main purpose was to uh you know uh write operating system that is unix operating system that was already written in b language but there was some limitations so to overcome those limitations because c was more powerful than b language right so they used to write the kernel of unix operating system they used this language c language so c is basically you can say it's a system programming languages language many softwares have been written in c language oracle android the core libraries of android was written in c language major part of web browser is written in c language device drivers written in c language and unix operating system so c is you can say the most popular programming language and during 1980s c was the most widely used programming language and in 1989 it was standardized by ansi that is why uh after that it is called a nsic and see how the computer is going to understand what whatever we will write in c language because here it is not machine level language here we are not going to write the bunch of zeros and ones right so first of all the program that you will write in c language that is to be converted into that object uh file or object code or you can say that machine code zeros and ones and who is going to convert it compiler that is why it is known as compiled language right and the program is ah written like the name of the program is abc suppose and the extension of c program is dot c right so uh the compiler is going to convert it into that obj file object code machine level code and then the cpu will run this program the whole process we are going to discuss in a separate video like the basic the execution how the program is going to be executed when it is going to be converted in object file by whom and what is the role of that linker and loader and executable file when executable file will be formed and then how you will get the output that also will discuss in a separate video the complete process one more ah thing is interpreter and the main task of interpreter is also to convert this program high level program into object code but the difference will see in a separate video so now that's it for this video now i'm going to see in the next video till then bye take
