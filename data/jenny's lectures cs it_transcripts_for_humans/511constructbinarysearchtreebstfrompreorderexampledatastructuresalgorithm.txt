With timestamps:

00:00 - hi guys welcome back in this video I'm
00:02 - going to discuss with you how to
00:04 - construct a binary search tree when only
00:07 - either pre-order is given or postorder
00:10 - is given fine
00:12 - okay so let us start suppose the
00:14 - question is you're supposed to construct
00:16 - a binary search tree and the pre-order
00:19 - traversal of that trick is given only
00:21 - the pre-order traversal of that trace
00:23 - given okay either the question would be
00:25 - it would be asked he find out the
00:28 - inorder traversal of this tree or to
00:30 - find out the postorder traversal of this
00:32 - tree or construct a binary search tree
00:34 - using this preorder traversal take care
00:38 - three questions you have been asked fine
00:41 - you know de Traverse we'll find out
00:42 - corner post order traversal find out
00:44 - Cornell you're supposed to construct a
00:46 - binary search tree fine okay now only
00:49 - pre-order is given now but epithet order
00:52 - traversal is first of all route would be
00:54 - traversed then left and then right fine
00:57 - now how to find out in order traversal
00:59 - of this tree inorder traversal would be
01:05 - C in order of binary search tree would
01:09 - always be in ascending order sorted data
01:13 - wouldn't be there take care data would
01:15 - be ascending order I'm just talking
01:18 - about this binary search tree I'm not
01:20 - asking about I'm not telling about any
01:23 - binary tree
01:24 - okay this condition is true for only
01:25 - binary search tree the inorder traversal
01:28 - of a binary search tree would always be
01:32 - give you the data in ascending order
01:34 - fine
01:35 - now C preorder is given so obviously we
01:38 - have the data of that tree now find out
01:40 - that in order in order would be data
01:42 - would be in ascending order so just
01:45 - arrange the data five after five we have
01:49 - 16 17 18 19 20 60 70 n you define okay
02:01 - this would be the inorder traversal of
02:03 - this mind research tree having this
02:06 - preorder okay and everybody knows the
02:09 - inorder traversal is first left part
02:11 - would be true
02:13 - then root and then right sub-tree of
02:16 - that first of all this left subtree then
02:21 - root and then right supreme fine now
02:24 - construct a binary search tree we have
02:26 - in order we have pre-order okay now see
02:30 - first step is you are supposed to find
02:33 - out first of all the root but should be
02:35 - the root of that BST fine
02:39 - the root of kaha say find out curseth o
02:41 - from pre-order only because the first
02:43 - element would be true yeah happy root
02:45 - yoga in the middle of this one so we
02:47 - can't say he left makan saga right in
02:49 - the cones over kuru toga
02:50 - so you'll find out the root from the
02:52 - pre-order see this 20 would be root
02:56 - because first one is rude then left and
02:58 - then right
02:59 - so 20 would be root of our subtree I'm
03:05 - going to right here at this place and
03:09 - mark 20 in in order here we have 20 fine
03:16 - so this one is root and to the left of
03:22 - this route to the left of this root we
03:24 - have left subtree and right make up
03:26 - right subtree so this would be left
03:31 - subtree or left part and this would be
03:33 - right path 20k left may upkeep on
03:37 - console is sub 3 over 5 16 17 18 and 19
03:42 - and to the right of 20 you would have 60
03:46 - 70 and 85 fine now either
03:52 - first of all you can go to the left or
03:54 - right now construct thus this train from
03:57 - this suppose we are going to the left
03:59 - subtree now we are having 5 16 17 18 and
04:03 - 19 you can see 5 16 17 18 and 19
04:06 - this is left subtree okay now what do I
04:09 - have to do is out of these numbers you
04:13 - can find out the number in pre-order
04:16 - with just which number is coming first
04:18 - out of these numbers see 16 is coming
04:22 - first 5 is after 16 17 is also after 18
04:25 - is also after and I
04:26 - is also after 16 top of these numbers 16
04:31 - is coming first in the pre-order fine so
04:36 - to this left subgrade to this left
04:38 - subtree 16 would be rude fine the tree
04:44 - would be 20 here's 16 out of this
04:49 - subtree 16 would be root because 16 is
04:52 - coming first and to the left of 16 we
04:54 - have 5 and to the right of 16 we have 17
04:58 - 18 and 19 17 18 and 19 fine and to the
05:08 - right of this one we have 60 70 and 85
05:13 - okay now see this one is root now to the
05:18 - left we have only five two five here
05:22 - though I'm making here next after five
05:24 - only we have one number two taking here
05:26 - next is coming that is five the five
05:28 - would be root the article problem
05:30 - Houdini now check out of this sub tree
05:34 - out of 17 18 and 19 fine
05:38 - check out which number is coming first
05:40 - in this pre-order out of 17 18 and 19
05:43 - which one is coming first 18 because 17
05:47 - is after 18 19 is after 18 so 17 is
05:50 - coming sorry 18 is coming first so for
05:53 - this subtree 18 would be root and to the
05:58 - left of 18 we have 17 to the right of 18
06:01 - we have 19 so this would be updated as
06:08 - 18 would be root here we have left 17
06:12 - here we have right 19 because root he
06:17 - left me up my left subtree ogres make
06:19 - our upper right subtree fine okay now we
06:25 - have already done with this left subtree
06:26 - yet Ravitch can now go to this right
06:30 - subtree of this 20 60 70 and 85 here we
06:34 - can't say which one would be the root
06:36 - which one would do in the left node and
06:38 - which one would be the right one
06:40 - so yeh kaisa Petacchi lega from this
06:42 - pre-order now to 60 70 and 85 which
06:46 - number is coming first in this pre-order
06:49 - check out the 60 60 is coming first 70s
06:55 - after 60 85 is also after 60 so this 60
06:59 - would become the rule the number which
07:02 - come first in this pre-order that would
07:06 - become the route this is the rule out of
07:08 - these 360 would be rude fine and 60
07:19 - would be the road okay and 60 K now
07:23 - check out it in order 60 K write Omega
07:25 - has 70 and 80 the root K make yoga root
07:28 - K the wrong way that would be right
07:30 - sub-tree 66 GK right may open a passage
07:37 - 70 and 85 check out any nodal C 60 K
07:43 - right may both happening 60 hum a pataga
07:47 - 60 would be the route and from this one
07:49 - we can say route here item a job' hoga
07:52 - that would be right subtree of that
07:54 - route 60 k right making over 70 and 85
07:57 - now out of these two we cannot say which
08:00 - one is route so you can say potentially
08:01 - aha may we would check out we have to
08:04 - check out this pre-order thought of
08:06 - these two numbers which is coming first
08:08 - 85 85 is coming first but if I could be
08:13 - the route now see 85 is rude
08:16 - so route a left may seventies to the
08:19 - left of this route right this would be
08:22 - the root k left make out the left
08:24 - subtree so 85 would be the route or SK
08:30 - left make our graph come 70
08:36 - hi so this is your binary search tree
08:43 - you can create BST when only pre-order
08:46 - is given so in next video I am going to
08:50 - discuss with you how to construct a BS
08:52 - tree if post order is given fine till
08:56 - then bye bye
08:56 - take care

Cleaned transcript:

hi guys welcome back in this video I'm going to discuss with you how to construct a binary search tree when only either preorder is given or postorder is given fine okay so let us start suppose the question is you're supposed to construct a binary search tree and the preorder traversal of that trick is given only the preorder traversal of that trace given okay either the question would be it would be asked he find out the inorder traversal of this tree or to find out the postorder traversal of this tree or construct a binary search tree using this preorder traversal take care three questions you have been asked fine you know de Traverse we'll find out corner post order traversal find out Cornell you're supposed to construct a binary search tree fine okay now only preorder is given now but epithet order traversal is first of all route would be traversed then left and then right fine now how to find out in order traversal of this tree inorder traversal would be C in order of binary search tree would always be in ascending order sorted data wouldn't be there take care data would be ascending order I'm just talking about this binary search tree I'm not asking about I'm not telling about any binary tree okay this condition is true for only binary search tree the inorder traversal of a binary search tree would always be give you the data in ascending order fine now C preorder is given so obviously we have the data of that tree now find out that in order in order would be data would be in ascending order so just arrange the data five after five we have 16 17 18 19 20 60 70 n you define okay this would be the inorder traversal of this mind research tree having this preorder okay and everybody knows the inorder traversal is first left part would be true then root and then right subtree of that first of all this left subtree then root and then right supreme fine now construct a binary search tree we have in order we have preorder okay now see first step is you are supposed to find out first of all the root but should be the root of that BST fine the root of kaha say find out curseth o from preorder only because the first element would be true yeah happy root yoga in the middle of this one so we can't say he left makan saga right in the cones over kuru toga so you'll find out the root from the preorder see this 20 would be root because first one is rude then left and then right so 20 would be root of our subtree I'm going to right here at this place and mark 20 in in order here we have 20 fine so this one is root and to the left of this route to the left of this root we have left subtree and right make up right subtree so this would be left subtree or left part and this would be right path 20k left may upkeep on console is sub 3 over 5 16 17 18 and 19 and to the right of 20 you would have 60 70 and 85 fine now either first of all you can go to the left or right now construct thus this train from this suppose we are going to the left subtree now we are having 5 16 17 18 and 19 you can see 5 16 17 18 and 19 this is left subtree okay now what do I have to do is out of these numbers you can find out the number in preorder with just which number is coming first out of these numbers see 16 is coming first 5 is after 16 17 is also after 18 is also after and I is also after 16 top of these numbers 16 is coming first in the preorder fine so to this left subgrade to this left subtree 16 would be rude fine the tree would be 20 here's 16 out of this subtree 16 would be root because 16 is coming first and to the left of 16 we have 5 and to the right of 16 we have 17 18 and 19 17 18 and 19 fine and to the right of this one we have 60 70 and 85 okay now see this one is root now to the left we have only five two five here though I'm making here next after five only we have one number two taking here next is coming that is five the five would be root the article problem Houdini now check out of this sub tree out of 17 18 and 19 fine check out which number is coming first in this preorder out of 17 18 and 19 which one is coming first 18 because 17 is after 18 19 is after 18 so 17 is coming sorry 18 is coming first so for this subtree 18 would be root and to the left of 18 we have 17 to the right of 18 we have 19 so this would be updated as 18 would be root here we have left 17 here we have right 19 because root he left me up my left subtree ogres make our upper right subtree fine okay now we have already done with this left subtree yet Ravitch can now go to this right subtree of this 20 60 70 and 85 here we can't say which one would be the root which one would do in the left node and which one would be the right one so yeh kaisa Petacchi lega from this preorder now to 60 70 and 85 which number is coming first in this preorder check out the 60 60 is coming first 70s after 60 85 is also after 60 so this 60 would become the rule the number which come first in this preorder that would become the route this is the rule out of these 360 would be rude fine and 60 would be the road okay and 60 K now check out it in order 60 K write Omega has 70 and 80 the root K make yoga root K the wrong way that would be right subtree 66 GK right may open a passage 70 and 85 check out any nodal C 60 K right may both happening 60 hum a pataga 60 would be the route and from this one we can say route here item a job' hoga that would be right subtree of that route 60 k right making over 70 and 85 now out of these two we cannot say which one is route so you can say potentially aha may we would check out we have to check out this preorder thought of these two numbers which is coming first 85 85 is coming first but if I could be the route now see 85 is rude so route a left may seventies to the left of this route right this would be the root k left make out the left subtree so 85 would be the route or SK left make our graph come 70 hi so this is your binary search tree you can create BST when only preorder is given so in next video I am going to discuss with you how to construct a BS tree if post order is given fine till then bye bye take care
