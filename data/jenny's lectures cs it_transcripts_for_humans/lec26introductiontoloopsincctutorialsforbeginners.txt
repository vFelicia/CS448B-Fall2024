With timestamps:

00:00 - so in the series of learning c plus plus
00:01 - programming language we are discussing
00:03 - control structures in c plus plus
00:05 - basically three type of control
00:06 - structure sequential selection and
00:09 - iteration right or you can say
00:10 - repetition
00:12 - fine
00:13 - sequential means nothing but a simple
00:14 - program you are writing and one by one
00:16 - in sequence all the statements are going
00:17 - to be executed simple program selection
00:19 - means
00:20 - you have some choices and based on some
00:22 - condition you have to select
00:24 - from those choices those are selection
00:27 - statements like if if else else if
00:29 - letter switch case statements these we
00:31 - have discussed now next is iteration or
00:33 - you can say repetition repetitive
00:35 - statements those are loops iterations
00:38 - means or repetition means you are
00:39 - repeating same task again and again that
00:42 - is repetition so those things we can
00:44 - achieve we can implement in programming
00:45 - with the help of loops
00:47 - right
00:48 - so what are those loops that thing we
00:50 - are going to start from this video so in
00:51 - this video we will be discussing some
00:52 - introduction to loops basics like what
00:54 - is loop and why you need loops that
00:56 - thing is very important why you need
00:58 - loops right and what are loops what are
01:01 - you know basic categories of loops two
01:03 - basic categories right and basic
01:06 - scenarios how you know loops is to be
01:08 - executed
01:10 - some important points general points
01:11 - basic points about loops we'll be
01:13 - discussing in this video then in later
01:15 - videos one by one we'll be discussing
01:16 - types of loops right
01:18 - so we'll be discussing that thing here
01:20 - with the help of real life example as
01:21 - well as with help of a program right
01:25 - now before i just want to tell you one
01:26 - thing on geeks4geeks there is an event
01:29 - going on uh known as interview series
01:32 - in this uh series in this event every
01:35 - sunday seven pm seven pm they conduct
01:39 - a contest you can participate in this
01:41 - contest every sunday to prepare for your
01:43 - coding interview rounds for top tech
01:46 - companies and the next contest will be
01:48 - on 28th of august
01:49 - and what is the pattern of the contest
01:52 - three questions you will get a time
01:53 - limit would be 90 minutes and marks it
01:56 - is of 100 marks and after the contest
01:58 - you will get editorial video means a
02:00 - solution video where you can you know
02:03 - see the solutions also of those three
02:05 - questions that was in that contest and
02:08 - the language supported for this contest
02:10 - is c plus plus java and python and plus
02:12 - there is five percent penalty for each
02:14 - row submission so before
02:15 - uh submission please compile and test
02:18 - again against the sample test cases and
02:20 - then only submit your answer right and
02:24 - you will get two week bits for
02:25 - participating in this contest and you
02:27 - can also you know redeem these uh bits
02:30 - on that reward page so all the relevant
02:32 - links and details you will find in the
02:33 - description box of this video you can go
02:35 - and check out now let's see
02:38 - what are loops and why we need loops see
02:42 - uh real life example is
02:44 - whenever you play any song so there are
02:46 - some you know options for you guys like
02:49 - one in that corner something like this
02:53 - in loop
02:54 - means
02:55 - shuffle in loop these kind of things
02:57 - means the same song would be
03:00 - played again and again that same song
03:02 - would be
03:03 - repeated that is in loop right so if you
03:06 - are doing same task again and again that
03:09 - is you can say you are in loop or that
03:11 - is you means you are repeating the same
03:13 - task again and again
03:16 - means suppose uh you want to print
03:18 - simple example you have taken like you
03:20 - have print hello world on the screen so
03:22 - what you have written
03:24 - c out
03:25 - simply hello world
03:27 - that's it
03:29 - obviously header files and all you have
03:30 - to write down main function and all but
03:32 - the main thing is you have to write this
03:34 - thing c out
03:35 - output and this is what you can say for
03:37 - outputting something on the screen in c
03:40 - plus we use c out
03:42 - this object
03:43 - hello world now on the output screen one
03:46 - time hello world would be printed
03:49 - now i would say i want to print two
03:51 - times hello world
03:54 - simple what you will do see out one more
03:57 - time you will write hello world
04:02 - although it would be the same line if
04:03 - you want to do in a different line you
04:05 - can just
04:07 - put a slash new line operator or you can
04:09 - just put handle
04:10 - manipulator at the end here right
04:13 - two times it will be print now i i want
04:15 - to ask you to print hello world five
04:17 - time on the screen
04:18 - means you will say
04:20 - means you can write down this
04:22 - line five time in your program but if i
04:24 - say
04:25 - print this hello world thousand times
04:28 - can you write thousand times this line
04:30 - in your program is it a good idea no way
04:34 - so is it possible that we write only
04:36 - once this line in your in our program
04:39 - and we are able to print thousand times
04:42 - hello world on the output screen
04:44 - yes it is possible with the help of
04:47 - loops
04:48 - you can use loops and the same time
04:51 - sorry the this one line you can write
04:54 - down this line in loop right
04:56 - okay there are multiple loops the syntax
04:58 - is also different i am not going to
04:59 - discuss the syntax of each loop here
05:02 - simple just write down loop syntax here
05:06 - how to write down loop that also will be
05:08 - discussing one by one simply write down
05:09 - that loop syntax whatever loop you are
05:11 - using and in that loop one line you can
05:14 - write down that's it no need to write
05:16 - down this line again and again
05:21 - and
05:22 - if you want to print five times that is
05:24 - also possible if you want to print
05:25 - thousand times suppose i want to print
05:27 - hundred times
05:31 - so
05:32 - in loop you have to tell
05:34 - obviously we have to tell how many times
05:35 - you want to print
05:37 - when to terminate 100 times
05:40 - right if i want to print 100 times this
05:43 - so i have to tell
05:45 - this
05:46 - with the help of that program i have to
05:48 - tell the compiler
05:50 - like let's start from 1
05:52 - and till
05:53 - 100
05:55 - print
05:56 - as soon as 100 times this has printed
05:59 - stop
06:01 - so mainly you have to tell
06:03 - from where to start
06:06 - from one suppose you are starting
06:09 - from where to start
06:10 - the like you can say initialization of
06:12 - loop second thing
06:14 - where to end
06:16 - where to terminate means termination
06:18 - condition
06:20 - right two things
06:22 - and then third thing is what like one
06:25 - then two
06:26 - obviously
06:27 - there is someone who is counting suppose
06:29 - i am counting one time i have printed
06:32 - then second time third fourth fifth but
06:34 - obviously manually we are not counting
06:36 - there on the screen we have to put
06:38 - something automatically that would be
06:40 - incremented like one two three four five
06:42 - whenever it reaches to ten sorry hundred
06:45 - stop
06:47 - so some update type of thing we have to
06:49 - give
06:51 - maybe through a variable or something
06:52 - like this
06:54 - right so three basic things in loop
06:57 - whenever you write down the loop syntax
06:58 - three basic basic things are there one
07:00 - is initialization
07:05 - second is condition
07:07 - or you can say
07:09 - termination condition
07:15 - and third thing is uh update
07:18 - update like increment or decrement
07:21 - obviously updating like one two three
07:23 - four five this kind of thing three basic
07:25 - things are there right
07:28 - so means
07:29 - when we use loops or why we need loops
07:32 - in which situation
07:34 - if you want to execute a statement or
07:36 - set of statements
07:38 - in this case we are executing only one
07:40 - statement but there can be set of
07:42 - statements multiple statements like in
07:44 - loop you can write one two three four
07:45 - five as many statement as i as i want
07:49 - so if you want to execute
07:50 - a statement or a group of statement
07:53 - multiple times
07:55 - then we use loops
07:57 - i hope you got the idea
07:59 - right
08:00 - and what are the benefits of using loop
08:03 - if you want to print 100 times hello
08:05 - world one way is 100 times you have to
08:07 - write down this line one way is using
08:09 - loop you can do which one is better it
08:11 - is time saving as well as space saving
08:15 - there would be less
08:16 - lines of code if you
08:18 - use loops rather than the first approach
08:22 - right so these are some you can say
08:24 - benefits of using loops
08:26 - right it will save your time space will
08:28 - be saved lines of code would be less
08:31 - program would be more readable
08:33 - maintainable
08:34 - rather than writing this line 100 times
08:36 - obviously one time if we write then that
08:38 - program would be more readable
08:41 - if i have written a program any other is
08:44 - you know looking at my program yours you
08:46 - can easily understand
08:48 - it more maintainable more readable
08:50 - program would be there
08:51 - you can say a good looking program is
08:53 - there
08:54 - if you use loops
08:56 - if you don't use loop
08:58 - and the first approach will follow that
08:59 - would be you know it's kind of a bad
09:01 - practice of writing programs
09:03 - right that is why we use loops and when
09:06 - we use when you want to execute a
09:07 - statement or group of statement multiple
09:09 - times
09:09 - then we use loops
09:11 - right and three basic things are there
09:13 - in every loop initialization condition
09:15 - you have to tell where to stop from
09:17 - where to start and update
09:19 - right
09:20 - like if your mom say like go to
09:23 - supermarket and buy oranges
09:25 - then you come to home then again
09:27 - your mom say go to supermarket and buy
09:29 - apple again you will go and come to home
09:32 - after buying apple then again your mom
09:35 - will say like go and buy
09:37 - bread
09:38 - same task bread then butter then some
09:41 - vegetable like ladyfinger or bitter
09:43 - gourd these kind of things
09:45 - right means you are again and again
09:46 - going to supermarket for one item then
09:49 - come back for second item you go to
09:50 - supermarket then come back you are in
09:52 - blue
09:53 - right second approach is you just ask
09:55 - your mom to list them
09:57 - all the items in a list
09:59 - like one
10:02 - oranges then apples
10:05 - these kind of things suppose 15 items
10:08 - are there you take this list go to
10:09 - supermarket
10:11 - then
10:12 - just check first buy your oranges then
10:14 - second apple then third fourth fifth is
10:16 - six whenever you reach to fifteenth item
10:19 - you buy that item stop that is
10:20 - termination condition
10:22 - go to billing counter and come to home
10:24 - right that is a good idea
10:27 - right so obviously from where to start
10:28 - you have to start like first thing is
10:30 - written orange is like first one you
10:32 - have to start from where this is
10:33 - initialization you where you will end
10:36 - when you will stop buying
10:38 - when you have reached to the last item
10:40 - in your list you have bought the last
10:42 - item in your list then you are going to
10:44 - stop
10:46 - right and one thing obviously you update
10:48 - means you are you are in this case you
10:50 - are manually checking you are the
10:51 - updater only like this thing okay second
10:54 - third fourth fifth this kind of thing
10:56 - in programming
10:58 - obviously we are not manually we cannot
11:00 - update we cannot check for second
11:02 - therefore like like this so you have to
11:03 - take some variable
11:05 - you have to update that variable right
11:08 - how to write down this thing properly in
11:09 - syntax that also will be discussing but
11:11 - i hope the general idea is clear to you
11:13 - guys right about loops now mainly loops
11:16 - are categorized into
11:18 - you can say two categories
11:20 - entry controlled loop and exit control
11:23 - loop
11:24 - now entry controlled loop means what
11:27 - see
11:28 - whenever you go to any
11:30 - you can say whenever you go to metro
11:34 - then before boarding a metro
11:36 - you are being checked
11:38 - right your luggage and you
11:41 - if you are okay you don't have any
11:43 - suspicious item you are ready to go that
11:46 - is you can say entry control that entry
11:48 - on entry also they are checking they
11:50 - have some condition like you cannot uh
11:53 - board a metro with the knife
11:56 - right so if you have a knife
11:58 - this is some conditions are there some
11:59 - items are restricted
12:01 - so if those items are available in your
12:03 - bag or with you you are not allowed to
12:05 - enter that is the condition right that
12:07 - is entry controlled thing at entry also
12:11 - at entry only they are checking you
12:13 - exit control means suppose
12:16 - uh
12:17 - there is supermarket more supermarket
12:19 - near my house so whenever i have to buy
12:21 - some vegetable foods i go to there
12:23 - at entry they are not going to check but
12:25 - at exit they check the bill and the
12:27 - items i about if both are matching it's
12:30 - okay both are not matching some required
12:32 - action would be taken
12:34 - so that kind of thing is exit controlled
12:36 - at exit condition is being checked
12:39 - so in loops same two things
12:41 - entry control loops i hope
12:44 - you can relate this thing entry control
12:47 - that
12:48 - exit control
12:49 - now if you have understood understood
12:52 - this two things you can just let me know
12:54 - in comment section some real life
12:55 - example of entry controlled and exit
12:57 - control other than whatever i have given
13:00 - to you two examples right
13:01 - now entry control means
13:04 - first condition would be checked in a
13:06 - program like this is the condition
13:08 - if condition is true
13:10 - then only you can enter
13:13 - into the body of the loop
13:15 - if condition is false
13:18 - then out of the loop like in metro you
13:20 - have some suspicious you cannot enter
13:23 - into the metro
13:24 - right
13:25 - or maybe they'll take that thing from
13:27 - you guys like one time
13:29 - in my bag there was a knife so
13:32 - i was not allowed to enter so i
13:35 - put my knife out there
13:37 - then i boarded the metro okay apart from
13:41 - that
13:42 - this this is entry control now body of
13:45 - the loop now some update expression
13:46 - would be there and again condition would
13:48 - be checked again body of the loop if
13:50 - that is true in false exit from the loop
13:53 - this is type of entry control exit
13:55 - control means
13:56 - at first you will enter into the body of
13:59 - loop at first only you will not check
14:01 - the condition like i go to supermarket i
14:03 - enter into supermarket without any
14:05 - checking
14:06 - right whenever you after body of the
14:08 - loop
14:10 - then condition would be checked
14:15 - now if condition is true then again some
14:18 - update obviously update kind of thing is
14:20 - there update expression would be there
14:22 - and then again body of the loop if
14:24 - condition is false out of the loop
14:28 - right this is you can say exit
14:31 - controlled loop flow chart of exit
14:34 - control this is entry control i hope you
14:36 - can clearly see the difference between
14:38 - these two
14:39 - right now basically we have four loops
14:41 - like four
14:42 - while do while one more is in c plus
14:45 - plus we have
14:48 - range for loop range based you can say
14:51 - range based for loop
14:54 - this is something like for each loop in
14:56 - other programming language like in
14:57 - javasci i think we have
14:59 - sorry for each loop
15:01 - so exactly same as that thing but heavy
15:03 - known as it is known as range based for
15:05 - loop for loop range based for loop while
15:07 - loop two while loop right
15:10 - so these loops will be discussing one by
15:12 - one in later videos now
15:15 - so now i'll see you in the next video
15:16 - till then bye take care

Cleaned transcript:

so in the series of learning c plus plus programming language we are discussing control structures in c plus plus basically three type of control structure sequential selection and iteration right or you can say repetition fine sequential means nothing but a simple program you are writing and one by one in sequence all the statements are going to be executed simple program selection means you have some choices and based on some condition you have to select from those choices those are selection statements like if if else else if letter switch case statements these we have discussed now next is iteration or you can say repetition repetitive statements those are loops iterations means or repetition means you are repeating same task again and again that is repetition so those things we can achieve we can implement in programming with the help of loops right so what are those loops that thing we are going to start from this video so in this video we will be discussing some introduction to loops basics like what is loop and why you need loops that thing is very important why you need loops right and what are loops what are you know basic categories of loops two basic categories right and basic scenarios how you know loops is to be executed some important points general points basic points about loops we'll be discussing in this video then in later videos one by one we'll be discussing types of loops right so we'll be discussing that thing here with the help of real life example as well as with help of a program right now before i just want to tell you one thing on geeks4geeks there is an event going on uh known as interview series in this uh series in this event every sunday seven pm seven pm they conduct a contest you can participate in this contest every sunday to prepare for your coding interview rounds for top tech companies and the next contest will be on 28th of august and what is the pattern of the contest three questions you will get a time limit would be 90 minutes and marks it is of 100 marks and after the contest you will get editorial video means a solution video where you can you know see the solutions also of those three questions that was in that contest and the language supported for this contest is c plus plus java and python and plus there is five percent penalty for each row submission so before uh submission please compile and test again against the sample test cases and then only submit your answer right and you will get two week bits for participating in this contest and you can also you know redeem these uh bits on that reward page so all the relevant links and details you will find in the description box of this video you can go and check out now let's see what are loops and why we need loops see uh real life example is whenever you play any song so there are some you know options for you guys like one in that corner something like this in loop means shuffle in loop these kind of things means the same song would be played again and again that same song would be repeated that is in loop right so if you are doing same task again and again that is you can say you are in loop or that is you means you are repeating the same task again and again means suppose uh you want to print simple example you have taken like you have print hello world on the screen so what you have written c out simply hello world that's it obviously header files and all you have to write down main function and all but the main thing is you have to write this thing c out output and this is what you can say for outputting something on the screen in c plus we use c out this object hello world now on the output screen one time hello world would be printed now i would say i want to print two times hello world simple what you will do see out one more time you will write hello world although it would be the same line if you want to do in a different line you can just put a slash new line operator or you can just put handle manipulator at the end here right two times it will be print now i i want to ask you to print hello world five time on the screen means you will say means you can write down this line five time in your program but if i say print this hello world thousand times can you write thousand times this line in your program is it a good idea no way so is it possible that we write only once this line in your in our program and we are able to print thousand times hello world on the output screen yes it is possible with the help of loops you can use loops and the same time sorry the this one line you can write down this line in loop right okay there are multiple loops the syntax is also different i am not going to discuss the syntax of each loop here simple just write down loop syntax here how to write down loop that also will be discussing one by one simply write down that loop syntax whatever loop you are using and in that loop one line you can write down that's it no need to write down this line again and again and if you want to print five times that is also possible if you want to print thousand times suppose i want to print hundred times so in loop you have to tell obviously we have to tell how many times you want to print when to terminate 100 times right if i want to print 100 times this so i have to tell this with the help of that program i have to tell the compiler like let's start from 1 and till 100 print as soon as 100 times this has printed stop so mainly you have to tell from where to start from one suppose you are starting from where to start the like you can say initialization of loop second thing where to end where to terminate means termination condition right two things and then third thing is what like one then two obviously there is someone who is counting suppose i am counting one time i have printed then second time third fourth fifth but obviously manually we are not counting there on the screen we have to put something automatically that would be incremented like one two three four five whenever it reaches to ten sorry hundred stop so some update type of thing we have to give maybe through a variable or something like this right so three basic things in loop whenever you write down the loop syntax three basic basic things are there one is initialization second is condition or you can say termination condition and third thing is uh update update like increment or decrement obviously updating like one two three four five this kind of thing three basic things are there right so means when we use loops or why we need loops in which situation if you want to execute a statement or set of statements in this case we are executing only one statement but there can be set of statements multiple statements like in loop you can write one two three four five as many statement as i as i want so if you want to execute a statement or a group of statement multiple times then we use loops i hope you got the idea right and what are the benefits of using loop if you want to print 100 times hello world one way is 100 times you have to write down this line one way is using loop you can do which one is better it is time saving as well as space saving there would be less lines of code if you use loops rather than the first approach right so these are some you can say benefits of using loops right it will save your time space will be saved lines of code would be less program would be more readable maintainable rather than writing this line 100 times obviously one time if we write then that program would be more readable if i have written a program any other is you know looking at my program yours you can easily understand it more maintainable more readable program would be there you can say a good looking program is there if you use loops if you don't use loop and the first approach will follow that would be you know it's kind of a bad practice of writing programs right that is why we use loops and when we use when you want to execute a statement or group of statement multiple times then we use loops right and three basic things are there in every loop initialization condition you have to tell where to stop from where to start and update right like if your mom say like go to supermarket and buy oranges then you come to home then again your mom say go to supermarket and buy apple again you will go and come to home after buying apple then again your mom will say like go and buy bread same task bread then butter then some vegetable like ladyfinger or bitter gourd these kind of things right means you are again and again going to supermarket for one item then come back for second item you go to supermarket then come back you are in blue right second approach is you just ask your mom to list them all the items in a list like one oranges then apples these kind of things suppose 15 items are there you take this list go to supermarket then just check first buy your oranges then second apple then third fourth fifth is six whenever you reach to fifteenth item you buy that item stop that is termination condition go to billing counter and come to home right that is a good idea right so obviously from where to start you have to start like first thing is written orange is like first one you have to start from where this is initialization you where you will end when you will stop buying when you have reached to the last item in your list you have bought the last item in your list then you are going to stop right and one thing obviously you update means you are you are in this case you are manually checking you are the updater only like this thing okay second third fourth fifth this kind of thing in programming obviously we are not manually we cannot update we cannot check for second therefore like like this so you have to take some variable you have to update that variable right how to write down this thing properly in syntax that also will be discussing but i hope the general idea is clear to you guys right about loops now mainly loops are categorized into you can say two categories entry controlled loop and exit control loop now entry controlled loop means what see whenever you go to any you can say whenever you go to metro then before boarding a metro you are being checked right your luggage and you if you are okay you don't have any suspicious item you are ready to go that is you can say entry control that entry on entry also they are checking they have some condition like you cannot uh board a metro with the knife right so if you have a knife this is some conditions are there some items are restricted so if those items are available in your bag or with you you are not allowed to enter that is the condition right that is entry controlled thing at entry also at entry only they are checking you exit control means suppose uh there is supermarket more supermarket near my house so whenever i have to buy some vegetable foods i go to there at entry they are not going to check but at exit they check the bill and the items i about if both are matching it's okay both are not matching some required action would be taken so that kind of thing is exit controlled at exit condition is being checked so in loops same two things entry control loops i hope you can relate this thing entry control that exit control now if you have understood understood this two things you can just let me know in comment section some real life example of entry controlled and exit control other than whatever i have given to you two examples right now entry control means first condition would be checked in a program like this is the condition if condition is true then only you can enter into the body of the loop if condition is false then out of the loop like in metro you have some suspicious you cannot enter into the metro right or maybe they'll take that thing from you guys like one time in my bag there was a knife so i was not allowed to enter so i put my knife out there then i boarded the metro okay apart from that this this is entry control now body of the loop now some update expression would be there and again condition would be checked again body of the loop if that is true in false exit from the loop this is type of entry control exit control means at first you will enter into the body of loop at first only you will not check the condition like i go to supermarket i enter into supermarket without any checking right whenever you after body of the loop then condition would be checked now if condition is true then again some update obviously update kind of thing is there update expression would be there and then again body of the loop if condition is false out of the loop right this is you can say exit controlled loop flow chart of exit control this is entry control i hope you can clearly see the difference between these two right now basically we have four loops like four while do while one more is in c plus plus we have range for loop range based you can say range based for loop this is something like for each loop in other programming language like in javasci i think we have sorry for each loop so exactly same as that thing but heavy known as it is known as range based for loop for loop range based for loop while loop two while loop right so these loops will be discussing one by one in later videos now so now i'll see you in the next video till then bye take care
