With timestamps:

00:00 - hey everyone I hope you all are safe and
00:02 - doing good so in the series of learning
00:03 - Python programming language in the
00:05 - previous video we have seen how to add
00:07 - methods to your class right so now till
00:10 - now we have discussed how to create your
00:12 - class how to create object of that class
00:14 - how to add attributes and how to add
00:17 - methods to the class right now based on
00:20 - that whatever you have learned till now
00:23 - based on that we'll be doing one
00:24 - exercise in this video right and after
00:26 - that in further videos we will continue
00:28 - with the advanced concepts right of
00:30 - object-oriented programming right right
00:33 - so the question is that is very simple
00:36 - one you have to calculate area of circle
00:40 - and circumference of circle area and
00:43 - circumference of circle
00:45 - right and that you will use
00:48 - which approach you'll use object
00:50 - oriented programming approach means you
00:52 - have to create class objects and then
00:55 - you have to find out the area and
00:56 - circumference of circle yeah although
00:59 - you can do this
01:01 - without using this classes and object
01:03 - concept but that is different one VR
01:05 - now we are focusing on OB concept so
01:08 - given a simple example we will do with
01:10 - the help of classes and object concept
01:12 - right then only you will you know you'll
01:15 - be it will be easy for you to understand
01:17 - the concept and it will be easy for you
01:19 - to apply these Concepts to a larger
01:21 - project
01:22 - right okay now just pause the video and
01:25 - try to find out the area and circle
01:28 - circumference of a circle
01:30 - right
01:32 - okay so I hope you have done this
01:34 - uh this project sorry this exercise
01:38 - so let's create a new file like Circle
01:41 - exercise dot p y and we are creating a
01:46 - class first
01:48 - and the name of the class is circle with
01:50 - C Capital right
01:53 - so let's take this init function and
01:55 - what you need for area and circumference
01:58 - one we need pi and one we need is like
02:01 - radius
02:03 - right
02:04 - so Pi is we know
02:06 - for all the circles pi value is same
02:08 - 3.14 so I have told you one concept that
02:12 - is class object attribute right
02:15 - outside of this init function we Define
02:17 - that attribute so Pi is equal to 3.14 so
02:21 - here Pi is our
02:23 - class object attributes so for all the
02:26 - objects you created for every instance
02:29 - you create from this class the pi value
02:31 - would be same 3.14 that is why I am
02:34 - taking this as a class object attribute
02:36 - and what we you need is radius so let's
02:39 - take a parameter
02:41 - radius
02:45 - so self Dot
02:49 - attribute name I'm taking same as
02:51 - parameter name you can take different
02:52 - name also self dot radius equal to and
02:55 - whatever the value of this parameter
02:58 - whatever whatever value pass as an
03:00 - argument that would be assigned to
03:04 - the self dot radius this attribute right
03:07 - so see as you can see here we have
03:08 - radius because we have a parameter named
03:11 - radius from there we will get the value
03:13 - radius right or you can simply here put
03:16 - R if you put here r
03:19 - then yes you should put R so this and
03:24 - this
03:25 - the name should be save this name cell
03:28 - node after you know self load after this
03:31 - you take any attribute name right so I'm
03:34 - just taking
03:36 - now let's define a function
03:39 - circumference
03:45 - right and what is the formula
03:48 - of circumference 2 pi r so the formula
03:52 - is 2
03:53 - into pi value so pi value means
03:57 - you cannot directly write down here Pi
03:59 - if you write down here Pi directly Pi
04:01 - into radius so radius is obviously the
04:06 - attribute of the circle
04:08 - so how to access self Dot
04:11 - radius right maybe you think Pi is class
04:14 - object attribute so no need to write
04:16 - down cell so whatever the circumference
04:18 - we will
04:20 - let's store this in a circum variable
04:23 - and let's return
04:27 - this variable return
04:31 - whatever the value or rather than two
04:33 - lines in single line also we can write
04:35 - down this thing rather than this line
04:36 - just remove this and here only just
04:39 - write down
04:42 - that is also fine return 2 into Pi into
04:44 - self root radius right maybe you think
04:47 - it's right let's see
04:49 - now let's create obviously an object
04:51 - suppose Circle one I am creating is
04:54 - equal to the name of the classes Circle
04:58 - this is the way you create and you need
05:00 - to pass what one parameter radius so I
05:03 - am passing here 4.
05:06 - and I'm just printing because this
05:09 - function is returning the value
05:12 - so if
05:13 - how you will call this function
05:15 - circumference or better to
05:18 - name this get circumference
05:21 - right
05:22 - how we will call this on this on this
05:25 - instance of this class the name of the
05:27 - instance the name of the object Circle
05:28 - one dot
05:31 - get circumference right so whatever it
05:34 - will return either you can store that in
05:36 - a variable and then you can print that
05:37 - variable
05:38 - otherwise in one line only you can do
05:41 - that task and simply write down here
05:42 - print print whatever it will return that
05:46 - would be printed
05:48 - I hope it's right but it's not let's run
05:50 - this and I will show you what error you
05:52 - will get here see
05:55 - in line number eight here we are calling
05:57 - this
05:58 - method and
06:00 - see not function we'll call these
06:02 - methods right now this method is in line
06:05 - number six in line number
06:07 - eight we are calling and in line number
06:09 - six
06:10 - we are defining this function this
06:13 - method so name Pi is not defined
06:16 - although Pi is a class object attribute
06:19 - it would be same the value of pi would
06:22 - be same for each you can say object
06:26 - but
06:27 - when you call this get circumference
06:31 - using this
06:33 - object Circle one don't get
06:35 - circumference dot this
06:38 - so I need Pi for this circle
06:41 - and Pi for this circle how you can get
06:44 - using
06:45 - self load pi
06:48 - right self toad Pi now let's run this
06:52 - see 25.12
06:56 - right
06:58 - if I say if I write something like this
07:00 - if you provide default value like radius
07:02 - is equal to maybe 5.
07:05 - or maybe like six
07:08 - so here if you do not provide
07:11 - any argument then also it's fine because
07:14 - by default radius is equal to 6 so it
07:16 - will take radius 6 and it will give you
07:19 - the result
07:20 - right and if you provide any value like
07:23 - 4 I am providing then it will override
07:25 - this value 6 now this time I am
07:27 - providing the value 4 so radius would be
07:29 - equivalent to 4 now so see the answer is
07:32 - 25.12 right so this is also fine
07:36 - right this I hope you got why I'm
07:39 - writing yourself dot PI right if I
07:42 - create another Circle
07:44 - and for this the value of uh what we can
07:48 - say
07:49 - this radius is 14.
07:52 - so now on Circle 2
07:55 - let's
07:56 - call this function get circumference
08:00 - and whatever
08:02 - it will return we are going to print
08:04 - that thing
08:06 - right so let's run this now we will get
08:09 - two circumference
08:11 - 87.92 25.12
08:14 - right
08:15 - so when you are calling this function on
08:17 - Circle 2 then it will it will it is you
08:20 - know
08:21 - pointing to self growth pi means pi
08:24 - value for the circle and at this point
08:26 - of time pi value for Circle one that is
08:27 - why we are writing cell dot Pi cell dot
08:29 - Pi not just Pi one more thing rather
08:31 - than cell group Pi if Pi is a class
08:33 - object attribute right then somewhere it
08:36 - is also written rather than self we can
08:38 - write down the name of the class Circle
08:41 - dot pi
08:43 - that is also fine let's run this
08:45 - and see we will get the result
08:48 - so like why we are writing this one
08:51 - Circle dot Pi because it will
08:53 - differentiate
08:54 - if anybody will see like I have I'm
08:57 - having 50
08:58 - maybe methods
09:00 - in my class
09:02 - so wherever you will write the class
09:03 - name dot any variable name then yeah he
09:07 - or she will have an idea like this is in
09:09 - class object attribute and the value of
09:11 - this object is same for every instance
09:13 - thanks
09:15 - so that is why we it's better to write
09:17 - if you are using a class object
09:19 - attribute better to access that
09:21 - attribute with the help of name of the
09:22 - class or self node Pi which we can write
09:25 - that is also fine
09:26 - and one more thing for area also same
09:29 - you can create another method right
09:32 - so like def get area and all so this
09:36 - thing is your assignment you need to do
09:39 - right you have to define a function get
09:41 - area and you include that thing another
09:43 - way is just I want to show you like I am
09:47 - passing here only one parameter radius
09:49 - all right it's not like that if you are
09:51 - passing only one parameter then that
09:53 - reviewed for the object or the attribute
09:55 - in this class would be only one and if I
09:58 - pass here two parameter then two
10:00 - attribute no I am passing only one
10:02 - parameter but still
10:04 - attribute of the object can be more like
10:07 - area so self load area
10:11 - I'm creating another attribute self note
10:14 - area equal to now area is pi R square
10:16 - right so pi
10:20 - not Pi we will write like
10:23 - Circle dot Pi because it's class object
10:25 - attribute pi
10:27 - R square so no no need to write cell
10:29 - plot radius self load radius because
10:33 - we are simply taking the value from this
10:35 - parameter radius so simply here write
10:37 - down radius
10:45 - Pi R square radius into radius right so
10:48 - if you here want to print the area as
10:51 - well see
10:53 - Circle one
10:55 - two now as you can see
10:57 - we can access this radius pi and area as
11:01 - well as and obviously here see can you
11:04 - see this pink round pink circle and here
11:07 - we have it an m means this is what
11:09 - method and it is what method and this F
11:13 - f is like maybe you said these are
11:15 - attributes so it should be a here but f
11:17 - means like it is in yellow then these
11:19 - are fields
11:21 - okay
11:22 - so these are radius Pi area these are
11:24 - Fields okay
11:26 - now I can access this area
11:29 - Circle one root areas element let's run
11:32 - this
11:33 - so this is what this is the area of the
11:36 - circle 50. right
11:38 - or if you want to print like this like
11:41 - this using a string we can write down
11:43 - this thing so let's run this and now see
11:45 - it's a comparison of circle one is this
11:47 - circle two is this and the area of
11:48 - circle one is 50 like this right
11:51 - so now one assignment for you is you
11:54 - need to find out area of a rectangle
11:56 - right that is your assignment like this
11:59 - you can you know do some exercises like
12:02 - area of square rectangle or triangle or
12:04 - any other things
12:06 - right these things you can try but from
12:08 - my side your assignment is you have to
12:10 - find out area of rectangle you can write
12:11 - down that logic in comment section
12:14 - fine so now I think that's it about like
12:17 - the basics of methods and all I hope you
12:20 - got the idea of attribute methods class
12:23 - object self keyword class object
12:25 - attribute init function and all how to
12:28 - define a method and all right how to
12:30 - access the methods and attributes of a
12:33 - class with the help of object right so
12:36 - now I'll see you in the next video bye
12:37 - take care

Cleaned transcript:

hey everyone I hope you all are safe and doing good so in the series of learning Python programming language in the previous video we have seen how to add methods to your class right so now till now we have discussed how to create your class how to create object of that class how to add attributes and how to add methods to the class right now based on that whatever you have learned till now based on that we'll be doing one exercise in this video right and after that in further videos we will continue with the advanced concepts right of objectoriented programming right right so the question is that is very simple one you have to calculate area of circle and circumference of circle area and circumference of circle right and that you will use which approach you'll use object oriented programming approach means you have to create class objects and then you have to find out the area and circumference of circle yeah although you can do this without using this classes and object concept but that is different one VR now we are focusing on OB concept so given a simple example we will do with the help of classes and object concept right then only you will you know you'll be it will be easy for you to understand the concept and it will be easy for you to apply these Concepts to a larger project right okay now just pause the video and try to find out the area and circle circumference of a circle right okay so I hope you have done this uh this project sorry this exercise so let's create a new file like Circle exercise dot p y and we are creating a class first and the name of the class is circle with C Capital right so let's take this init function and what you need for area and circumference one we need pi and one we need is like radius right so Pi is we know for all the circles pi value is same 3.14 so I have told you one concept that is class object attribute right outside of this init function we Define that attribute so Pi is equal to 3.14 so here Pi is our class object attributes so for all the objects you created for every instance you create from this class the pi value would be same 3.14 that is why I am taking this as a class object attribute and what we you need is radius so let's take a parameter radius so self Dot attribute name I'm taking same as parameter name you can take different name also self dot radius equal to and whatever the value of this parameter whatever whatever value pass as an argument that would be assigned to the self dot radius this attribute right so see as you can see here we have radius because we have a parameter named radius from there we will get the value radius right or you can simply here put R if you put here r then yes you should put R so this and this the name should be save this name cell node after you know self load after this you take any attribute name right so I'm just taking now let's define a function circumference right and what is the formula of circumference 2 pi r so the formula is 2 into pi value so pi value means you cannot directly write down here Pi if you write down here Pi directly Pi into radius so radius is obviously the attribute of the circle so how to access self Dot radius right maybe you think Pi is class object attribute so no need to write down cell so whatever the circumference we will let's store this in a circum variable and let's return this variable return whatever the value or rather than two lines in single line also we can write down this thing rather than this line just remove this and here only just write down that is also fine return 2 into Pi into self root radius right maybe you think it's right let's see now let's create obviously an object suppose Circle one I am creating is equal to the name of the classes Circle this is the way you create and you need to pass what one parameter radius so I am passing here 4. and I'm just printing because this function is returning the value so if how you will call this function circumference or better to name this get circumference right how we will call this on this on this instance of this class the name of the instance the name of the object Circle one dot get circumference right so whatever it will return either you can store that in a variable and then you can print that variable otherwise in one line only you can do that task and simply write down here print print whatever it will return that would be printed I hope it's right but it's not let's run this and I will show you what error you will get here see in line number eight here we are calling this method and see not function we'll call these methods right now this method is in line number six in line number eight we are calling and in line number six we are defining this function this method so name Pi is not defined although Pi is a class object attribute it would be same the value of pi would be same for each you can say object but when you call this get circumference using this object Circle one don't get circumference dot this so I need Pi for this circle and Pi for this circle how you can get using self load pi right self toad Pi now let's run this see 25.12 right if I say if I write something like this if you provide default value like radius is equal to maybe 5. or maybe like six so here if you do not provide any argument then also it's fine because by default radius is equal to 6 so it will take radius 6 and it will give you the result right and if you provide any value like 4 I am providing then it will override this value 6 now this time I am providing the value 4 so radius would be equivalent to 4 now so see the answer is 25.12 right so this is also fine right this I hope you got why I'm writing yourself dot PI right if I create another Circle and for this the value of uh what we can say this radius is 14. so now on Circle 2 let's call this function get circumference and whatever it will return we are going to print that thing right so let's run this now we will get two circumference 87.92 25.12 right so when you are calling this function on Circle 2 then it will it will it is you know pointing to self growth pi means pi value for the circle and at this point of time pi value for Circle one that is why we are writing cell dot Pi cell dot Pi not just Pi one more thing rather than cell group Pi if Pi is a class object attribute right then somewhere it is also written rather than self we can write down the name of the class Circle dot pi that is also fine let's run this and see we will get the result so like why we are writing this one Circle dot Pi because it will differentiate if anybody will see like I have I'm having 50 maybe methods in my class so wherever you will write the class name dot any variable name then yeah he or she will have an idea like this is in class object attribute and the value of this object is same for every instance thanks so that is why we it's better to write if you are using a class object attribute better to access that attribute with the help of name of the class or self node Pi which we can write that is also fine and one more thing for area also same you can create another method right so like def get area and all so this thing is your assignment you need to do right you have to define a function get area and you include that thing another way is just I want to show you like I am passing here only one parameter radius all right it's not like that if you are passing only one parameter then that reviewed for the object or the attribute in this class would be only one and if I pass here two parameter then two attribute no I am passing only one parameter but still attribute of the object can be more like area so self load area I'm creating another attribute self note area equal to now area is pi R square right so pi not Pi we will write like Circle dot Pi because it's class object attribute pi R square so no no need to write cell plot radius self load radius because we are simply taking the value from this parameter radius so simply here write down radius Pi R square radius into radius right so if you here want to print the area as well see Circle one two now as you can see we can access this radius pi and area as well as and obviously here see can you see this pink round pink circle and here we have it an m means this is what method and it is what method and this F f is like maybe you said these are attributes so it should be a here but f means like it is in yellow then these are fields okay so these are radius Pi area these are Fields okay now I can access this area Circle one root areas element let's run this so this is what this is the area of the circle 50. right or if you want to print like this like this using a string we can write down this thing so let's run this and now see it's a comparison of circle one is this circle two is this and the area of circle one is 50 like this right so now one assignment for you is you need to find out area of a rectangle right that is your assignment like this you can you know do some exercises like area of square rectangle or triangle or any other things right these things you can try but from my side your assignment is you have to find out area of rectangle you can write down that logic in comment section fine so now I think that's it about like the basics of methods and all I hope you got the idea of attribute methods class object self keyword class object attribute init function and all how to define a method and all right how to access the methods and attributes of a class with the help of object right so now I'll see you in the next video bye take care
