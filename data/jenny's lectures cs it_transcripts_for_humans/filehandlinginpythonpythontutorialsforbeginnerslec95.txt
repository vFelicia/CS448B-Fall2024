With timestamps:

00:00 - hey everyone I hope you are safe and
00:01 - doing good so in the series of learning
00:03 - Python programming language we have
00:05 - discussed inheritance Concept in python
00:07 - in the previous video we have seen
00:08 - diamond shape problem in Python right
00:10 - and how to solve that problem in Python
00:12 - right now the next topic is file
00:15 - handling in Python so this thing we will
00:16 - see in this video and basically what I'm
00:18 - going to cover first why why you need
00:22 - file handling because till now we have
00:24 - done many thing in you know python we
00:27 - are we have written many programs we
00:28 - have done many projects and why the need
00:30 - of this New Concept
00:33 - right even if we are able to make
00:35 - project in Python then why this file
00:37 - handling concept so this thing is very
00:39 - important so first whenever you if
00:42 - you're a teacher so whenever you want to
00:43 - teach a New Concept if you are a student
00:45 - you want to learn A New Concept the
00:47 - first thing you need to clear is what
00:49 - why you need this concept right so first
00:52 - thing we'll see in this video why even
00:53 - if we need files why we need file
00:55 - handling concept second thing what now
00:57 - what is file handling what are files
01:00 - write this thing then how how we are
01:03 - going to implement file handling in part
01:06 - so these three things we'll see in this
01:08 - video right so almost everything about
01:10 - file handling so this video is going to
01:12 - be a little bit lengthy right it's like
01:14 - you can say file handling in one video
01:16 - that kind of video right okay now why
01:19 - why you need file handling see whenever
01:22 - you run a program then what is the
01:24 - process see we have we have Ram
01:32 - and we have
01:34 - disk hard disk this is a permanent
01:36 - memory known volatile right so when you
01:39 - are whenever you want to run a program
01:42 - then that program would be first loaded
01:44 - into
01:45 - main memory right so suppose let's take
01:47 - simple example addition of two number so
01:50 - this is our console and
01:53 - we will take two number and like one and
01:56 - two and addition is three
01:58 - so addition of two number so that
02:00 - program would be first loaded when you
02:01 - want to execute that program into main
02:03 - memory right so the values whatever
02:06 - value you will take from console and the
02:08 - output that is three that is everything
02:11 - is in main memory right so we take input
02:14 - from console we just print something the
02:16 - output on console using variables right
02:19 - till now we have seen that thing
02:21 - and once you close that application once
02:23 - you close this program
02:25 - everything is gone
02:28 - whatever data you have worked on you
02:31 - have worked upon in this program
02:33 - addition of two number that is gone now
02:35 - right because that was a non-volatile
02:38 - memory RAM memory right now what if you
02:42 - want to store this data permanently
02:45 - okay that is just a simple example why
02:48 - you need to store like these two numbers
02:50 - and addition of these two numbers that
02:51 - is just a simple example I just want to
02:53 - just I just want to clear the logic if
02:56 - in some situation you want to store the
02:58 - data on which data you have worked
03:00 - previously in that program or the output
03:01 - of the previous program the previous you
03:04 - know uh whenever you run that program
03:07 - previously if you want to store that
03:09 - thing permanently so where you need to
03:12 - store obviously in disk
03:14 - hard disk
03:16 - so here Files come into picture using
03:19 - files we can store that data permanently
03:21 - on disk and here the file handling
03:24 - concept comes into picture second reason
03:26 - is if you want to work upon a large
03:29 - amount of data suppose if you want to
03:31 - input a large amount of data so
03:33 - obviously that is not possible with the
03:35 - help of console from console like you
03:37 - just write down the data you just give
03:40 - input that amount of data using console
03:44 - that would be a tedious task so what we
03:46 - can do suppose that data is stored in a
03:48 - file so we can directly fetch the file
03:51 - from the hard disk so that pile would
03:54 - act as input
03:57 - right this file is having a large amount
04:00 - of data so we can directly fetch this
04:01 - file and that would be as input inner
04:04 - program rather than just typing that
04:05 - amount of data third thing obviously Ram
04:08 - is limited amount of memory right so if
04:11 - you want to display a large amount of
04:13 - data that is also sometime not possible
04:15 - with help of console so we store that
04:17 - data in a file directly right on hard
04:22 - disk and we can view that file
04:25 - right if you want to display large
04:27 - amount of data data so that is also not
04:29 - possible on Console because of limited
04:31 - space limited RAM memory so we can store
04:34 - that data into
04:36 - the into disk
04:38 - with the help of files so these are some
04:41 - reasons we need files we need file
04:43 - handling right so file is simply what
04:47 - it's just a sequence of bytes just
04:52 - sequence of bytes
04:54 - where you will store data permanently on
04:59 - secondary map your own hard disk or you
05:02 - can say file is simply a container or we
05:04 - can say file is simply a named memory
05:06 - location where you want to store the
05:08 - data permanently using that you want to
05:11 - store data permanently on disk
05:14 - simple and managing of these files is
05:19 - known as file handling
05:21 - like open this file read data from this
05:25 - file write data into that file closing a
05:28 - file right these kind of operations we
05:31 - will do so that thing to manage the
05:34 - files to do these operations that thing
05:36 - is known as file hanging so now I hope
05:39 - you got the reason chance of this
05:41 - question why file handling concept right
05:43 - I have told you mainly three reasons
05:46 - also we have seen what is a file and
05:48 - what is file handling now
05:52 - in file handling
05:53 - okay before that types of file basically
05:56 - two types of file text file and binary
06:00 - file
06:02 - this file as the name suggests it will
06:03 - store data in human readable form means
06:06 - it is a sequence of like alphabets
06:07 - characters numbers those are text files
06:10 - we can directly open these file into
06:12 - with the help of text editor and we can
06:14 - read whatever is there in that file like
06:16 - the extension is dot txt file dot CSV
06:21 - file like dot py file these are text
06:24 - files
06:26 - place now binary files so binary files
06:30 - contains known human readable characters
06:33 - and symbol we cannot read those file
06:36 - directly we cannot open these file in
06:37 - text editor right those are binary file
06:40 - and these are used to store images
06:42 - audios videos zip files compressed files
06:47 - and executable files these are binary
06:49 - files okay
06:51 - these are having a special type of
06:54 - coding which we cannot directly read
06:55 - which a human cannot directly read like
06:58 - in text files
07:00 - right so these are two types of file
07:02 - text and binary on both the files we are
07:05 - going to work in this video with the
07:06 - help of program I'll show you right how
07:09 - to open a text file binary file how to
07:11 - read a text file how to read a binary
07:13 - file how to write a text file how to
07:15 - write a binary file with the help of no
07:17 - image will do this thing right okay now
07:20 - first thing
07:22 - if you want to do basically some
07:25 - operations on files are
07:27 - open read write and close these are
07:33 - mainly four operations but there are
07:35 - many more operations as well like tell
07:38 - operation C corporation many operations
07:39 - so mainly these four operations right so
07:43 - first of all you need to open a file
07:46 - right if you do any other operation like
07:49 - if you want to read and something from
07:51 - that file
07:52 - first thing obviously you need to open
07:54 - that file suppose like this I have this
07:56 - file
07:58 - like I have this file
08:00 - notes file so if you want to read
08:01 - something from this file first I have to
08:03 - open this file right same thing we need
08:06 - to do in case of program if you want to
08:08 - write something then also first of all
08:10 - you have to open this file then I can
08:12 - write right and once Reading Writing on
08:16 - or any you know operation I want to
08:18 - perform are done then I'll close this
08:20 - file so this closing is also very
08:22 - important because whenever you open the
08:24 - file and read and write then some memory
08:27 - would be allocated to these five objects
08:29 - and all so you have to close that pilot
08:32 - class to free that memory so that that
08:34 - memory can be used by some other process
08:37 - right okay now how to open the file
08:42 - first
08:43 - syntax is what
08:46 - to use this open function this is
08:48 - inbuilt no need to import anything right
08:50 - and mainly two parameters you need to
08:53 - give first is the file name
08:56 - right and then next is
08:59 - the more in which mode you want to open
09:01 - this file
09:03 - and this open function will return you
09:05 - can say a file Handler or you can say
09:08 - an object so that we will store in a
09:10 - variable suppose file object this is
09:13 - going to return object
09:15 - so if you want to do any operation on
09:18 - this file Reading Writing or anything or
09:20 - closing the file with the help of this
09:22 - file object we will do or file Handler
09:26 - this means file Handler or maybe file
09:29 - pointer if this is a file so this is
09:32 - basically pointing to this file it's
09:34 - just a pointer to this file
09:36 - like if I want to read the file then
09:39 - from where I want to read that file so
09:41 - this pointer will show me from where I
09:43 - can read the file
09:44 - if you want to write the file
09:47 - write something in the file then this
09:49 - pointer will show like from at which
09:52 - position I can write the file like this
09:55 - so this file Handler or the file pointer
09:58 - is very important so whenever you open
10:00 - this file this open function will return
10:01 - that pointer for that if you read write
10:04 - then we will do all the things with this
10:07 - this pointer over this file object or
10:09 - you can say with this file Handler
10:11 - right now what are these modes the
10:15 - excess modes means in which mode you
10:18 - want to open this file what type of
10:19 - operation you want to perform on that
10:21 - file that could be decided according to
10:24 - the mode according to that only you will
10:27 - open that file in that particular mode
10:29 - so basically six type of mode
10:32 - read write append
10:36 - right and then R plus W plus a plus
10:40 - don't worry I'll discuss this thing
10:43 - practically with program right
10:46 - so R means it will open the file in read
10:49 - mode write means
10:52 - in right mode means if you want to write
10:54 - something in that file a means append
10:56 - mode append means see right or append
10:59 - are different
11:01 - right append means you want to add
11:04 - something at the end of the file
11:06 - if there is some text in the file
11:08 - suppose I have a file
11:10 - and here I am having hi so append means
11:13 - at the last of the file I want to add
11:15 - something this is appending here
11:18 - means after this text from here I want
11:21 - to add something
11:22 - R Plus for both read and write W plus is
11:26 - also for read and write a plus is also
11:28 - for like read or you can say a read and
11:31 - append but obviously what is different
11:33 - between R plus and WS that would be
11:35 - cleared when we take one example but I
11:37 - hope the theory is clear to you guys
11:39 - right now let's see these different
11:42 - modes with the help of program
11:44 - okay so let's first create a new file
11:49 - let's name it file handling Dot py
11:52 - okay
11:54 - so first thing obviously you need to
11:56 - open a file if you want to read or write
11:58 - something in that file so how to open I
12:00 - have told you a syntaxi I have we have
12:03 - this function this is built-in function
12:04 - so no need to import anything open and
12:06 - what you need to pass the file name and
12:08 - mode and obviously some extra parameter
12:11 - also but right now the main two things
12:13 - you need to focus is file name and mode
12:16 - you need to pass
12:17 - so
12:19 - what file name I'll pass because I don't
12:22 - have any file right now
12:24 - so if you want to first of all create a
12:27 - file for that also we have something
12:30 - we have X mode or we have right mode as
12:33 - well that also will create a file but
12:35 - let's discuss first X more so just name
12:39 - a file suppose file one
12:42 - I want to create this file and Dot txt
12:47 - and after that comma mode I want to give
12:51 - X in single code to double quote you can
12:53 - give this thing right
12:55 - and then whatever this open will return
12:58 - at that file object or the file Handler
13:00 - that I'm going to store in
13:02 - suppose F1
13:05 - 4 5 1 f 1 5
13:08 - pointer or file Handler
13:10 - okay let's run this and see what will
13:13 - happen
13:15 - let's run this see nothing would be
13:17 - shown
13:18 - so the main mode of this x is to create
13:20 - a file name of the file is file one so
13:24 - let's say this file has been created or
13:26 - not
13:26 - see here in this we have this file 1.txt
13:31 - and if you open this file we have
13:33 - nothing in this file right so X is used
13:36 - to create a file but the problem with X
13:38 - is what if you want to create again this
13:40 - file the same file with the same name
13:42 - then it will give error so the same
13:46 - program file 1.txt if I want to run
13:49 - again let's run this
13:51 - you will get an error see file exist
13:54 - error file exist this file one already
13:57 - exists so you cannot create a new file
14:00 - with the same file name so this is the
14:02 - problem with this X
14:04 - so if you are sure that this file
14:06 - doesn't exist
14:08 - here then you can use x but if you are
14:11 - not sure that this file exists or not
14:12 - you can use right mode how to use write
14:15 - that also I'll show you
14:16 - okay now basically we have created this
14:19 - file file one row txt but there is
14:20 - nothing in this file right
14:23 - so if suppose I write something in this
14:26 - file like hi so this is I have written
14:28 - like hi I am Jenny and we are discussing
14:30 - file handling in Python 2 line I have
14:32 - written in this file so now I want to
14:34 - read the file
14:36 - so in which mode you need to open the
14:38 - file name and mode you should give r
14:43 - so see what is the SAR mode different
14:46 - types of mode are more this R mode will
14:48 - open the file in Grid mode you cannot
14:50 - write something and the file Handler or
14:53 - the file pointer exist at the beginning
14:57 - of the file at the beginning of the file
15:00 - next point is it raises it will give an
15:02 - input output error if the file does not
15:05 - exist right
15:06 - and it is also the by default mode for
15:09 - opening the file so this is our mode
15:11 - okay now let's see this is this has
15:14 - opened this file it will not print
15:16 - anything see it will not print anything
15:18 - but this has opened the file open means
15:20 - this F1 is now a five pointer profile
15:23 - object that is pointing at the beginning
15:25 - of this file
15:27 - at the beginning means here high at H at
15:30 - H it is pointing at H now the file
15:32 - pointer so if you want to read the
15:34 - content then we have a function read so
15:38 - how you can use that function F1 Dot
15:42 - read and whatever you will read the
15:45 - content suppose I'm going to store in a
15:47 - variable data
15:49 - and then I am going to
15:51 - print this data right let's run this
15:56 - see hi I'm Jenny and we are discussing
15:59 - file Landing in Python so whatever the
16:01 - content
16:02 - was in that file that was on our console
16:04 - now so we have fetched the data from
16:06 - that file right this is how you can read
16:08 - the file but this is by default also so
16:10 - if you do not write down this excess
16:13 - mode and if you simply write this file
16:16 - name then by default the mode would be
16:18 - considered as read mode so if I run this
16:20 - then also
16:22 - the same output you will get right but
16:25 - if this file does not exist suppose I am
16:28 - writing R here and if this
16:31 - I am giving a file underscore the name
16:34 - underscore 2 so we know this file does
16:36 - not exist here right so it will give
16:39 - error let's run this
16:41 - see file not found error
16:44 - in line number one
16:46 - in line number one
16:48 - here file to row text no such file or
16:51 - directory so if file don't exist it will
16:53 - give a array right so this is what read
16:57 - mode
16:58 - next is you cannot write you cannot
17:01 - perform the right operation in this mode
17:03 - right if you want to write something in
17:05 - that in this file or in any file then we
17:09 - open the file into
17:11 - W mode that is right name
17:14 - okay now let's first read what is Right
17:17 - mode c r plus we will see later right
17:20 - mode this will open the file in right
17:23 - mode only right we cannot read
17:26 - the data from the file if you open the
17:28 - file in write mode
17:30 - it overwrite the file if file already
17:33 - exists if file already exists then it
17:35 - will override the content of the
17:36 - filament it means it will erase the
17:38 - content of the file and then
17:40 - whatever you will write that it will
17:43 - write the new content it will write in
17:45 - that file or it will create a new file
17:47 - if file doesn't exist right and where is
17:50 - the position of file Handler the file
17:52 - Handler exists at the beginning so this
17:54 - is what right mode
17:56 - this file to
17:59 - does not exist let's just comment out
18:03 - all this we know this file 2 does not
18:04 - exist and we are opening this in right
18:06 - mode so it does not exist it will create
18:08 - a new file let's run this
18:11 - obviously do not print anything but now
18:13 - we have
18:14 - this file too
18:17 - a new file there is nothing in this file
18:19 - right so if file does not exist you will
18:21 - not give any error it will create a new
18:22 - file right but if file already exists
18:25 - suppose I want to open file one file one
18:28 - already exists right and see
18:32 - in file one
18:34 - I am having this content so this will be
18:37 - erased
18:39 - right
18:41 - this will be erased
18:43 - when you open the file into write more
18:45 - the previous content would be erased and
18:47 - new content whatever you will write that
18:49 - would be added so let's see open this
18:51 - file one
18:53 - right now I have this thing
18:55 - in right mode
18:58 - obviously it will not show anything but
19:01 - let's see now file one see now there is
19:04 - nothing in file one
19:09 - now I want to add something
19:12 - I want to write something so just call
19:14 - write function on the file Handler F1
19:17 - dot right
19:19 - what you want to write let's write down
19:22 - something like
19:30 - this I want right welcome to Jenny's
19:32 - lectures so F1 dot right the file
19:34 - content is at the beginning so from the
19:36 - beginning it will write so welcome to
19:38 - Jenny's lectures right
19:41 - let's run this
19:42 - obviously if you are not reading
19:44 - anything from the file so it will not
19:45 - show anything but whenever you see this
19:49 - file now file 1.txt see welcome to
19:52 - Jenny's lectures this is written welcome
19:54 - to Jenny's lecture and previous content
19:56 - was erased right
19:58 - okay so this is what right if you want
20:01 - to access suppose if you want to access
20:03 - like let's read the content whatever
20:05 - this in this file so simply print and
20:11 - call this read function it will give
20:14 - error see
20:16 - unsupported operation not readable means
20:19 - we are opening this file into right mode
20:21 - so it will open the file in right mode
20:23 - only read operation would not be
20:25 - supported right so this is right mode
20:28 - now open the file into R plus mode R
20:31 - plus means it will open the file in both
20:33 - read and write mode
20:35 - right
20:37 - but okay let's first I'll show you see
20:40 - this is R plus more open the file in
20:42 - both read and write mode and what is
20:45 - where is the file Handler file Handler
20:47 - exists at the beginning plus if I don't
20:50 - take doesn't exist it will give error
20:53 - it will not create a new file right so
20:55 - this is R plus more you can just note
20:58 - down this thing okay let's
21:00 - do this R Plus
21:04 - so
21:05 - if
21:06 - file don't exist suppose I want to exist
21:09 - I want to open file 3. so obviously it
21:11 - will give error
21:15 - let's just comment down these line first
21:18 - and let's run this
21:20 - so if I don't doesn't exist R plus will
21:23 - give error no such pylo directory exists
21:25 - file 3.txt in line number one where we
21:27 - are opening this one right
21:30 - so let's open the file file one
21:32 - file1.txt in our plus mode both read and
21:35 - write
21:37 - the file Handler or the cursor would be
21:40 - at the beginning right now it will open
21:43 - like it will not give any error see
21:47 - obviously it is not printing anything
21:48 - but it is not giving any error right
21:50 - because file one already exists welcome
21:53 - to Jenny's lectures with the content in
21:55 - the file
21:56 - so R plus is not going to erase the
21:58 - previous content unlike W mode
22:01 - okay now first
22:04 - why we need this R plus mode basically
22:07 - if first you need to
22:10 - read then write
22:13 - in R plus mode first the processor
22:15 - should be read and write so
22:19 - read let's read the content of this file
22:23 - just print F1 dot read and after that I
22:27 - want to write something
22:28 - so let's
22:31 - fry down here this is python course
22:33 - right I want to write this thing so both
22:38 - read and write we are doing the same
22:41 - right let's run this
22:44 - so first we are reading
22:47 - so welcome to Jenny's lectures because
22:49 - in file one we are having welcome to
22:51 - Jenny's lectures
22:53 - right then we are writing this is python
22:56 - course so see in the file now we are
23:00 - having
23:01 - this is Jenny's lectures and this is
23:03 - python course
23:05 - it is only printing welcome to Jenny's
23:07 - lectures and after that it is adding
23:09 - here this is python pose
23:12 - okay
23:13 - now the thing is
23:15 - first I want to write
23:18 - let's write first
23:19 - what will happen
23:21 - so because obviously both read and write
23:23 - we can do so I want to write first then
23:26 - I I want to read okay let's see F1 Dot
23:30 - right and just I want to write hi that's
23:33 - it
23:34 - and then
23:36 - I want to print F1 dot whatever the
23:39 - content in the file
23:41 - what do you think what it will print
23:43 - pause the video and think about this
23:49 - let's run this
23:52 - see it is what it is printing lcom two
23:56 - Jenny's lectures this is python course
24:01 - why so because first it will open the
24:04 - file in R plus mode so at first the
24:07 - cursor would be at the beginning
24:09 - previously file was
24:12 - w-e-l-c-o-m-e welcome this was the file
24:17 - welcome right so cursor was at the
24:20 - beginning
24:21 - okay
24:23 - now because in R plus more when you open
24:25 - the cursor would be at the beginning now
24:26 - I want to write h i high so cursor is at
24:30 - the beginning so it will write H here I
24:33 - here it will
24:36 - h i so w would be erased h i so if you
24:39 - want to modify the content then open
24:41 - this file open the file in Applause
24:45 - is here
24:47 - now from here I want to read next is
24:50 - read F1 dot read so F1 is at this
24:54 - position now and so it will read from
24:56 - this position only so it will print this
24:58 - line only
24:59 - not h i
25:00 - I hope you got the working of this R
25:03 - plus more
25:04 - that is what I was saying first read the
25:06 - content if you want to read what is in
25:08 - the file the first read then write
25:10 - because first if you will write then it
25:12 - will modify the previous content
25:14 - hey
25:15 - so
25:16 - wherever if you want to modify this file
25:18 - like a large file and two or three line
25:21 - I want to modify right then just move
25:25 - the file pointer to the particular
25:27 - position and then you can just override
25:29 - that content only if you want to do this
25:32 - kind of thing then you open the file in
25:34 - applus mode
25:35 - how you can move the cursor we have a
25:37 - seek
25:38 - operation right so if you want to find
25:42 - out where is the file pointer the
25:43 - position then we have a
25:45 - we have a function 10 so F1 Dot
25:50 - l
25:52 - after printing after writing also I want
25:55 - to
25:56 - print this if one the position here and
26:00 - after reading as well I want to
26:04 - find out the
26:06 - position of the file pointer 3 time so
26:09 - let's run this
26:13 - let's just do again
26:16 - welcome to Jenny's lectures and this is
26:18 - python code this is our file now I want
26:20 - to write down high and I want to read
26:23 - then the position of the
26:26 - cursor so at first
26:28 - see the file pointer was at zero
26:30 - position at first after opening right
26:34 - once you have written high now it is at
26:37 - second position
26:38 - right 0
26:41 - at zero position then one and add two
26:43 - position at two here was the cursor
26:46 - then after reading this content
26:49 - after reading after that the file
26:52 - pointer position is at 48 means in the
26:56 - last here after reading this thing
27:01 - at last it will be at 48th position
27:03 - right so this is how you can just if you
27:06 - want to find out the position of the
27:08 - cursor or the file pointer you can just
27:09 - use this method so this is R plus mode
27:12 - and first if you read and then if you
27:15 - write then first if you read then you
27:18 - read from here and the cursor would be
27:20 - at last and then if you write then
27:23 - it would be something like append
27:25 - because we are writing at the end of the
27:27 - file so it's like appending in the file
27:29 - okay so this is R plus mode now we have
27:32 - W plus mode so what is difference
27:35 - between R plus and W plus let's see
27:37 - first W plus
27:39 - see this is W plus mode
27:41 - it will open the file in both read and
27:43 - write okay same as R plus but and as
27:47 - well as the file Handler exists at the
27:49 - beginning of the file okay same
27:51 - it overwrite the previous content if the
27:55 - file already exists then it will
27:57 - overwrite the previous content right
28:00 - and if I don't think doesn't exist it
28:02 - will create a new file
28:04 - right
28:06 - so in overwritten in this concept it is
28:09 - different from R plus more R plus more
28:11 - if I don't exist it will create it will
28:14 - show an error but if W plus mode if I
28:16 - don't doesn't exist it will create a new
28:18 - file and it will override the previous
28:20 - content if file exists right
28:23 - let's see
28:24 - so we are opening this file file one in
28:27 - now in
28:28 - W plus mode
28:31 - so if file don't exist suppose file 4.
28:34 - this file don't exist let's just comment
28:37 - out these things
28:40 - so it will create a new file file 4.
28:43 - no output but we have a file 4 right
28:48 - and yeah at last better to use first
28:52 - close F1 Dot close
28:54 - this thing is important right
28:57 - okay
28:59 - now already existed file I want to open
29:02 - so file one so right now in file one I
29:05 - have this thing suppose I have welcome
29:08 - to Jenny's lectures and this is python
29:10 - course so if you open this file in wplus
29:13 - mode it will open in both ingredient
29:14 - right what but previous content would be
29:16 - erased so now in this file see I have
29:18 - this content once I run the score and
29:22 - after that I'll show you the file one
29:23 - then there would be nothing see
29:26 - just run this
29:28 - nothing will be shown here but if I want
29:30 - to check file one see there is nothing
29:31 - in this file previous was erased means
29:34 - it was overwritten now now
29:36 - obviously if you want to read anything
29:38 - there is nothing in the file so
29:42 - first thing is what should be the
29:44 - process first write then read and in R
29:47 - plus it was first read then write that
29:50 - was the you can say exact or you can see
29:53 - the correct process of reading and
29:55 - writing
29:55 - right now first write something in this
29:58 - file so how to write F1 Dot
30:02 - we have an operation right and I just
30:05 - want to write here hi
30:07 - and welcome that's it
30:09 - right
30:10 - now I want to read so and see two time I
30:13 - want to write F1 dot write High welcome
30:15 - F1 dot right this is python course and
30:17 - then data then I'm reading the data
30:20 - okay because obviously both we can do
30:23 - read and write let's run this
30:27 - see it is not
30:30 - printing any output so this is
30:33 - you know where the student most of the
30:35 - student get confused we are reading the
30:38 - data and obviously W classes for both
30:40 - reading and writing but still it is not
30:42 - showing anything what is the reason this
30:45 - point is very important
30:47 - see
30:48 - okay let's see this file one do we have
30:51 - any data yes hi welcome this is python
30:55 - course
30:56 - so see high welcome and this is python
30:59 - course but it is not printing anything
31:01 - why so the problem is
31:04 - see let's first check out the position
31:07 - of this thing
31:10 - position of the file pointer using F10
31:13 - so
31:15 - first
31:17 - after opening the file check the
31:20 - position then writing High welcome check
31:22 - the position
31:26 - right then after writing this again we
31:30 - are going to check the position
31:32 - then after reading the data
31:35 - or after printing the data check the
31:38 - position right let's just delete these
31:41 - things
31:45 - so this is our program basically
31:48 - right
31:49 - fourth time we are checking the position
31:51 - let's run this
31:53 - see only position it is printing no data
31:56 - first it was at zeroth position at first
31:59 - obviously the five pointer was at
32:03 - in the beginning
32:04 - when you open this file means here in
32:07 - the beginning right now
32:10 - we are writing High welcome
32:12 - so at first there was nothing in that
32:14 - file then High welcome was
32:17 - added High welcome was written in the
32:19 - file and after writing this the position
32:22 - of the file is at
32:25 - 10 10 number 10 position so one two
32:28 - three four five six seven eight nine ten
32:31 - after e
32:33 - which is from zeroth if the position
32:35 - would be started so here was the
32:38 - file pointer After High welcome
32:41 - then we have written this is python
32:43 - course after writing this again we are
32:45 - printing then after writing this the
32:47 - position of the file pointer was at 31
32:50 - 31 is here at the end right
32:53 - now we are reading the data but position
32:56 - of the file pointer is here and after
32:59 - this there is nothing in the file
33:02 - that is why it is not showing anything
33:03 - what it will read
33:06 - so to read the data you have to move the
33:08 - position the file pointer the file
33:10 - Handler again at the beginning
33:14 - then you can read so for that also we
33:17 - have a function
33:18 - so after writing this just
33:22 - here I am
33:25 - moving the that file pointer we have a
33:28 - function
33:29 - seek and add 0.
33:33 - obviously you have to pass a offset and
33:35 - from where you want to move two types of
33:38 - two arguments basically but that also
33:41 - will see later when we discuss seek
33:43 - function in detail right now just pass
33:46 - zero means at the beginning I want to
33:49 - move right now it will show
33:53 - see
33:54 - hi welcome this is python course and
33:57 - the position of the you can say
34:02 - file Handler now after moving
34:06 - this cursor again I want to print
34:10 - where is my file pointer where is my
34:13 - file Handler let's run this see after
34:16 - moving after here once it was at 31st it
34:19 - was again now at zeroth position at
34:22 - zeroth position because we have used
34:24 - this seek operation seek function right
34:27 - now it is printing everything so this is
34:30 - how you can read in W plus mode right I
34:34 - hope now you got the answer of your
34:37 - problem right and this is very common
34:40 - problem
34:41 - students see because this is both for
34:44 - reading and writing we are writing we
34:45 - are reading but it is not showing
34:46 - anything on the console why it is not
34:48 - showing I have told you the reason okay
34:51 - this was W plus
34:53 - next is
34:55 - append mode a is comment out this thing
34:58 - and
35:00 - we will again open this
35:03 - F1 Dot
35:06 - sorry
35:07 - F1 equal to
35:10 - open and file name is now first let me
35:14 - just show you what is append mode see it
35:16 - open the file in append or you can say
35:18 - right mode but obviously write an append
35:20 - a difference right means
35:22 - it will erase the previous content the
35:24 - cursor would be at the beginning or
35:25 - anywhere you can write using the C
35:28 - corporation we can move the file pointer
35:30 - in any way you can write append means by
35:32 - default it is going to append means at
35:35 - the end of the file
35:36 - right so the file Handler exists at the
35:40 - end of the file the previously written
35:43 - file
35:44 - here the difference and if file already
35:46 - exists then at the end of the cursor
35:50 - would be at the end of the file the file
35:51 - Handler if doesn't exist it will create
35:53 - a new file right
35:56 - and the newly written data will be added
35:58 - at the end of the file this is a pen
36:00 - mode so file one file one is we are
36:02 - having data in file one hi welcome this
36:04 - is python course
36:05 - right if there is no such file suppose I
36:08 - just want I just have deleted this
36:11 - file to as well as file four so there is
36:16 - only file one
36:18 - so let's open file two there is no such
36:21 - file in file two let's run this
36:24 - it will not give any error and see now
36:26 - we have file 2.
36:28 - this is a file file right so if your
36:31 - file is not there then you can create a
36:32 - new file but if file is already there
36:34 - like file one okay now
36:37 - just open this inner pen mode and let's
36:39 - write down something F1 dot right and
36:43 - I just want to write like hello students
36:46 - okay let's run this
36:48 - see it will not show anything but
36:50 - in file one I have now hi welcome this
36:53 - is python course and hello students
36:55 - append append means at the end because
36:58 - the file pointer was at the end and from
37:00 - here it will add hello students right
37:04 - but it will only open in the append mode
37:07 - on read mode if you want to sorry write
37:09 - mode if you want to read
37:12 - then we'll give error unsupported
37:14 - operation it's not readable
37:17 - in append mode you can only append you
37:19 - can only write at the end of the file if
37:21 - I don't take this it will create a new
37:23 - file right
37:24 - okay
37:25 - now let's
37:27 - do this a plus node let's open this in a
37:30 - plus mode a plus means both append and
37:33 - re
37:35 - right
37:36 - now
37:39 - first if if you read if I do not append
37:43 - anything if I don't write anything and
37:45 - because I have told you file one already
37:47 - exists in five align I have like hello
37:50 - students so let's just remove hello
37:52 - students
37:54 - and this is our hi welcome this is
37:58 - python code this is our file OneNote txt
37:59 - right I want to read this because I've
38:02 - told you in append mode it will open the
38:04 - file both in
38:05 - read and append mode
38:07 - so maybe you think let's read what is
38:09 - the content then I will append it right
38:12 - okay let's read F1 dot read
38:15 - it will not show anything see
38:18 - this is again a problem
38:21 - there is no error but it is not showing
38:23 - anything and why so and yeah in file
38:26 - when we have content hi welcome this is
38:28 - python course
38:29 - see a plus mode is what when you open
38:32 - this file in a plus model in a mode
38:34 - append mode the cursor or the file
38:35 - pointer is at the end of the file means
38:38 - at the end means here
38:41 - and from here you want to read so
38:45 - obviously after this there is nothing in
38:47 - this file so what it will show nothing
38:50 - if you want to check after opening let's
38:53 - just print the
38:56 - where is that position of that that
38:59 - file pointer see at 33rd position
39:03 - means here
39:05 - and the last so how you can read
39:08 - anything right what is a plus more it
39:11 - will open the file both in append and
39:14 - read mode append or you can say write
39:16 - and read more file Handler exists at the
39:19 - end of the file
39:20 - if file already exist or it will create
39:22 - a new file if file doesn't exist right
39:25 - but it will not erase the previous
39:27 - content unlike W plus mode W plus series
39:30 - is the previous content or you can say
39:32 - it will overwritten the previous con
39:33 - overwrite the previous content
39:36 - so directly if you want to read
39:39 - just move
39:42 - this cursor at zeroth position now it
39:45 - will work fine see first at all the 33
39:49 - but we have used the C corporation and
39:51 - then High welcome in this python force
39:53 - that is fine right now if you want to
39:57 - you can say write something
40:00 - so let's write F1 Dot right
40:03 - Jenny's lectures
40:05 - right let's run this
40:08 - okay this is printing this thing but in
40:10 - file we are having
40:11 - hi welcome this is Jenny's lectures at
40:15 - the end because we are appending cursor
40:18 - was here right so I hope you got all the
40:21 - six type of modes but now if I have a
40:24 - binary file suppose I am having a text
40:26 - sorry image
40:29 - let's have an image so
40:32 - this is an my image one dot jpg this is
40:35 - in this project in this project only
40:38 - right if your file is not in this
40:41 - project here in this directory where you
40:42 - are working your python directory if it
40:44 - is supposing desktop that you have to
40:47 - provide the complete path here
40:50 - like
40:52 - this a file name is
40:55 - my file underscore desk dot txt this
40:59 - file I have on desktop so directly I
41:01 - cannot use my file underscore decks.txt
41:04 - see
41:06 - let's just comment out this line
41:09 - see I want to open this my file
41:10 - underscore Tech desk dot txt in read
41:13 - mode this file is on my desktop so let's
41:16 - run this and it will give an error see
41:20 - in line number 16 you are opening this
41:23 - file and no such file or directory file
41:26 - not found
41:27 - right so if you want to open this thing
41:29 - then you have to give the complete path
41:32 - like this
41:35 - like this the complete path
41:38 - now we can open this file in any mode if
41:42 - you want to open like in read append or
41:43 - anything
41:44 - let's run this
41:47 - C and in that file I was having only
41:50 - High I at first and then I avoided
41:53 - Jenny's lectures I was previous content
41:56 - in this file and now I have added
41:58 - Jenny's lectures
42:01 - I was previous content and then I have
42:03 - added I avoid Jenny's lectures right so
42:05 - this is why you have to give the
42:06 - complete path if you want to access the
42:07 - file which is outside of this directory
42:09 - right now let's have an image I am
42:12 - having my like this image my image one
42:14 - dot jpg this is my image
42:16 - right this is my image file in this
42:19 - project only in this path only right
42:22 - now if I want to read this thing so
42:25 - let's just
42:31 - my image one load jpg and let's just
42:34 - read this
42:36 - nothing else I want to do
42:40 - okay
42:43 - in read mode and then
42:48 - I want to read the content of this image
42:51 - what do you think what it will print
42:53 - let's see
42:55 - safe okay it is giving this error
42:59 - Unicode decoder okay because
43:02 - that the mode is for binary file it is
43:05 - RB R was only for text file RB WB R plus
43:09 - RB plus WB plus these were was for this
43:13 - is for this is the access mode to open
43:15 - binary files right so RB let's run this
43:19 - see what you are getting here
43:22 - this is something we are not getting
43:24 - anything because this is binary file
43:26 - we are not able to read what is this
43:30 - so if I want to
43:33 - move this file this image into another
43:39 - image file only I want to show that
43:41 - thing so
43:42 - I can take like F1
43:44 - is equal to open and
43:50 - my image 2.
43:54 - sorry jpg and that I'm going to store in
43:58 - WB mode means right mode I want to write
44:01 - this image into here
44:03 - right
44:04 - so
44:06 - just use for Loop for I in F1
44:10 - for in F1
44:13 - right
44:15 - just write in sorry let's take obviously
44:19 - you have to take second pointer F2
44:21 - so F2 dot right
44:24 - and whatever is this in this I
44:28 - so whatever we are getting from F1
44:31 - that data we are just writing that into
44:34 - F2
44:35 - okay so we are creating another a second
44:38 - image
44:40 - let's comment out this thing and let's
44:42 - run this
44:43 - obviously it will not show anything but
44:45 - it has created a image to file C my
44:48 - image to node jpg if you open this now
44:51 - you are getting the same image that was
44:53 - in my image one my image one my image
44:57 - two same image so like this you can also
45:00 - work on binary files right this thing
45:03 - you can try but the mode is different
45:05 - rbw will be like this okay this thing
45:07 - also you can try
45:09 - so this says what all about is file
45:12 - handling the modes and T still operation
45:15 - till and see if operation and all the
45:17 - different type of operation and all the
45:18 - type of modes I hope you heard this
45:20 - right so just practice this thing with
45:24 - different different examples
45:26 - so I hope you got the file handling
45:27 - Concept in Python so now I'll see you in
45:29 - the next video till then bye take care

Cleaned transcript:

hey everyone I hope you are safe and doing good so in the series of learning Python programming language we have discussed inheritance Concept in python in the previous video we have seen diamond shape problem in Python right and how to solve that problem in Python right now the next topic is file handling in Python so this thing we will see in this video and basically what I'm going to cover first why why you need file handling because till now we have done many thing in you know python we are we have written many programs we have done many projects and why the need of this New Concept right even if we are able to make project in Python then why this file handling concept so this thing is very important so first whenever you if you're a teacher so whenever you want to teach a New Concept if you are a student you want to learn A New Concept the first thing you need to clear is what why you need this concept right so first thing we'll see in this video why even if we need files why we need file handling concept second thing what now what is file handling what are files write this thing then how how we are going to implement file handling in part so these three things we'll see in this video right so almost everything about file handling so this video is going to be a little bit lengthy right it's like you can say file handling in one video that kind of video right okay now why why you need file handling see whenever you run a program then what is the process see we have we have Ram and we have disk hard disk this is a permanent memory known volatile right so when you are whenever you want to run a program then that program would be first loaded into main memory right so suppose let's take simple example addition of two number so this is our console and we will take two number and like one and two and addition is three so addition of two number so that program would be first loaded when you want to execute that program into main memory right so the values whatever value you will take from console and the output that is three that is everything is in main memory right so we take input from console we just print something the output on console using variables right till now we have seen that thing and once you close that application once you close this program everything is gone whatever data you have worked on you have worked upon in this program addition of two number that is gone now right because that was a nonvolatile memory RAM memory right now what if you want to store this data permanently okay that is just a simple example why you need to store like these two numbers and addition of these two numbers that is just a simple example I just want to just I just want to clear the logic if in some situation you want to store the data on which data you have worked previously in that program or the output of the previous program the previous you know uh whenever you run that program previously if you want to store that thing permanently so where you need to store obviously in disk hard disk so here Files come into picture using files we can store that data permanently on disk and here the file handling concept comes into picture second reason is if you want to work upon a large amount of data suppose if you want to input a large amount of data so obviously that is not possible with the help of console from console like you just write down the data you just give input that amount of data using console that would be a tedious task so what we can do suppose that data is stored in a file so we can directly fetch the file from the hard disk so that pile would act as input right this file is having a large amount of data so we can directly fetch this file and that would be as input inner program rather than just typing that amount of data third thing obviously Ram is limited amount of memory right so if you want to display a large amount of data that is also sometime not possible with help of console so we store that data in a file directly right on hard disk and we can view that file right if you want to display large amount of data data so that is also not possible on Console because of limited space limited RAM memory so we can store that data into the into disk with the help of files so these are some reasons we need files we need file handling right so file is simply what it's just a sequence of bytes just sequence of bytes where you will store data permanently on secondary map your own hard disk or you can say file is simply a container or we can say file is simply a named memory location where you want to store the data permanently using that you want to store data permanently on disk simple and managing of these files is known as file handling like open this file read data from this file write data into that file closing a file right these kind of operations we will do so that thing to manage the files to do these operations that thing is known as file hanging so now I hope you got the reason chance of this question why file handling concept right I have told you mainly three reasons also we have seen what is a file and what is file handling now in file handling okay before that types of file basically two types of file text file and binary file this file as the name suggests it will store data in human readable form means it is a sequence of like alphabets characters numbers those are text files we can directly open these file into with the help of text editor and we can read whatever is there in that file like the extension is dot txt file dot CSV file like dot py file these are text files place now binary files so binary files contains known human readable characters and symbol we cannot read those file directly we cannot open these file in text editor right those are binary file and these are used to store images audios videos zip files compressed files and executable files these are binary files okay these are having a special type of coding which we cannot directly read which a human cannot directly read like in text files right so these are two types of file text and binary on both the files we are going to work in this video with the help of program I'll show you right how to open a text file binary file how to read a text file how to read a binary file how to write a text file how to write a binary file with the help of no image will do this thing right okay now first thing if you want to do basically some operations on files are open read write and close these are mainly four operations but there are many more operations as well like tell operation C corporation many operations so mainly these four operations right so first of all you need to open a file right if you do any other operation like if you want to read and something from that file first thing obviously you need to open that file suppose like this I have this file like I have this file notes file so if you want to read something from this file first I have to open this file right same thing we need to do in case of program if you want to write something then also first of all you have to open this file then I can write right and once Reading Writing on or any you know operation I want to perform are done then I'll close this file so this closing is also very important because whenever you open the file and read and write then some memory would be allocated to these five objects and all so you have to close that pilot class to free that memory so that that memory can be used by some other process right okay now how to open the file first syntax is what to use this open function this is inbuilt no need to import anything right and mainly two parameters you need to give first is the file name right and then next is the more in which mode you want to open this file and this open function will return you can say a file Handler or you can say an object so that we will store in a variable suppose file object this is going to return object so if you want to do any operation on this file Reading Writing or anything or closing the file with the help of this file object we will do or file Handler this means file Handler or maybe file pointer if this is a file so this is basically pointing to this file it's just a pointer to this file like if I want to read the file then from where I want to read that file so this pointer will show me from where I can read the file if you want to write the file write something in the file then this pointer will show like from at which position I can write the file like this so this file Handler or the file pointer is very important so whenever you open this file this open function will return that pointer for that if you read write then we will do all the things with this this pointer over this file object or you can say with this file Handler right now what are these modes the excess modes means in which mode you want to open this file what type of operation you want to perform on that file that could be decided according to the mode according to that only you will open that file in that particular mode so basically six type of mode read write append right and then R plus W plus a plus don't worry I'll discuss this thing practically with program right so R means it will open the file in read mode write means in right mode means if you want to write something in that file a means append mode append means see right or append are different right append means you want to add something at the end of the file if there is some text in the file suppose I have a file and here I am having hi so append means at the last of the file I want to add something this is appending here means after this text from here I want to add something R Plus for both read and write W plus is also for read and write a plus is also for like read or you can say a read and append but obviously what is different between R plus and WS that would be cleared when we take one example but I hope the theory is clear to you guys right now let's see these different modes with the help of program okay so let's first create a new file let's name it file handling Dot py okay so first thing obviously you need to open a file if you want to read or write something in that file so how to open I have told you a syntaxi I have we have this function this is builtin function so no need to import anything open and what you need to pass the file name and mode and obviously some extra parameter also but right now the main two things you need to focus is file name and mode you need to pass so what file name I'll pass because I don't have any file right now so if you want to first of all create a file for that also we have something we have X mode or we have right mode as well that also will create a file but let's discuss first X more so just name a file suppose file one I want to create this file and Dot txt and after that comma mode I want to give X in single code to double quote you can give this thing right and then whatever this open will return at that file object or the file Handler that I'm going to store in suppose F1 4 5 1 f 1 5 pointer or file Handler okay let's run this and see what will happen let's run this see nothing would be shown so the main mode of this x is to create a file name of the file is file one so let's say this file has been created or not see here in this we have this file 1.txt and if you open this file we have nothing in this file right so X is used to create a file but the problem with X is what if you want to create again this file the same file with the same name then it will give error so the same program file 1.txt if I want to run again let's run this you will get an error see file exist error file exist this file one already exists so you cannot create a new file with the same file name so this is the problem with this X so if you are sure that this file doesn't exist here then you can use x but if you are not sure that this file exists or not you can use right mode how to use write that also I'll show you okay now basically we have created this file file one row txt but there is nothing in this file right so if suppose I write something in this file like hi so this is I have written like hi I am Jenny and we are discussing file handling in Python 2 line I have written in this file so now I want to read the file so in which mode you need to open the file name and mode you should give r so see what is the SAR mode different types of mode are more this R mode will open the file in Grid mode you cannot write something and the file Handler or the file pointer exist at the beginning of the file at the beginning of the file next point is it raises it will give an input output error if the file does not exist right and it is also the by default mode for opening the file so this is our mode okay now let's see this is this has opened this file it will not print anything see it will not print anything but this has opened the file open means this F1 is now a five pointer profile object that is pointing at the beginning of this file at the beginning means here high at H at H it is pointing at H now the file pointer so if you want to read the content then we have a function read so how you can use that function F1 Dot read and whatever you will read the content suppose I'm going to store in a variable data and then I am going to print this data right let's run this see hi I'm Jenny and we are discussing file Landing in Python so whatever the content was in that file that was on our console now so we have fetched the data from that file right this is how you can read the file but this is by default also so if you do not write down this excess mode and if you simply write this file name then by default the mode would be considered as read mode so if I run this then also the same output you will get right but if this file does not exist suppose I am writing R here and if this I am giving a file underscore the name underscore 2 so we know this file does not exist here right so it will give error let's run this see file not found error in line number one in line number one here file to row text no such file or directory so if file don't exist it will give a array right so this is what read mode next is you cannot write you cannot perform the right operation in this mode right if you want to write something in that in this file or in any file then we open the file into W mode that is right name okay now let's first read what is Right mode c r plus we will see later right mode this will open the file in right mode only right we cannot read the data from the file if you open the file in write mode it overwrite the file if file already exists if file already exists then it will override the content of the filament it means it will erase the content of the file and then whatever you will write that it will write the new content it will write in that file or it will create a new file if file doesn't exist right and where is the position of file Handler the file Handler exists at the beginning so this is what right mode this file to does not exist let's just comment out all this we know this file 2 does not exist and we are opening this in right mode so it does not exist it will create a new file let's run this obviously do not print anything but now we have this file too a new file there is nothing in this file right so if file does not exist you will not give any error it will create a new file right but if file already exists suppose I want to open file one file one already exists right and see in file one I am having this content so this will be erased right this will be erased when you open the file into write more the previous content would be erased and new content whatever you will write that would be added so let's see open this file one right now I have this thing in right mode obviously it will not show anything but let's see now file one see now there is nothing in file one now I want to add something I want to write something so just call write function on the file Handler F1 dot right what you want to write let's write down something like this I want right welcome to Jenny's lectures so F1 dot right the file content is at the beginning so from the beginning it will write so welcome to Jenny's lectures right let's run this obviously if you are not reading anything from the file so it will not show anything but whenever you see this file now file 1.txt see welcome to Jenny's lectures this is written welcome to Jenny's lecture and previous content was erased right okay so this is what right if you want to access suppose if you want to access like let's read the content whatever this in this file so simply print and call this read function it will give error see unsupported operation not readable means we are opening this file into right mode so it will open the file in right mode only read operation would not be supported right so this is right mode now open the file into R plus mode R plus means it will open the file in both read and write mode right but okay let's first I'll show you see this is R plus more open the file in both read and write mode and what is where is the file Handler file Handler exists at the beginning plus if I don't take doesn't exist it will give error it will not create a new file right so this is R plus more you can just note down this thing okay let's do this R Plus so if file don't exist suppose I want to exist I want to open file 3. so obviously it will give error let's just comment down these line first and let's run this so if I don't doesn't exist R plus will give error no such pylo directory exists file 3.txt in line number one where we are opening this one right so let's open the file file one file1.txt in our plus mode both read and write the file Handler or the cursor would be at the beginning right now it will open like it will not give any error see obviously it is not printing anything but it is not giving any error right because file one already exists welcome to Jenny's lectures with the content in the file so R plus is not going to erase the previous content unlike W mode okay now first why we need this R plus mode basically if first you need to read then write in R plus mode first the processor should be read and write so read let's read the content of this file just print F1 dot read and after that I want to write something so let's fry down here this is python course right I want to write this thing so both read and write we are doing the same right let's run this so first we are reading so welcome to Jenny's lectures because in file one we are having welcome to Jenny's lectures right then we are writing this is python course so see in the file now we are having this is Jenny's lectures and this is python course it is only printing welcome to Jenny's lectures and after that it is adding here this is python pose okay now the thing is first I want to write let's write first what will happen so because obviously both read and write we can do so I want to write first then I I want to read okay let's see F1 Dot right and just I want to write hi that's it and then I want to print F1 dot whatever the content in the file what do you think what it will print pause the video and think about this let's run this see it is what it is printing lcom two Jenny's lectures this is python course why so because first it will open the file in R plus mode so at first the cursor would be at the beginning previously file was welcome welcome this was the file welcome right so cursor was at the beginning okay now because in R plus more when you open the cursor would be at the beginning now I want to write h i high so cursor is at the beginning so it will write H here I here it will h i so w would be erased h i so if you want to modify the content then open this file open the file in Applause is here now from here I want to read next is read F1 dot read so F1 is at this position now and so it will read from this position only so it will print this line only not h i I hope you got the working of this R plus more that is what I was saying first read the content if you want to read what is in the file the first read then write because first if you will write then it will modify the previous content hey so wherever if you want to modify this file like a large file and two or three line I want to modify right then just move the file pointer to the particular position and then you can just override that content only if you want to do this kind of thing then you open the file in applus mode how you can move the cursor we have a seek operation right so if you want to find out where is the file pointer the position then we have a we have a function 10 so F1 Dot l after printing after writing also I want to print this if one the position here and after reading as well I want to find out the position of the file pointer 3 time so let's run this let's just do again welcome to Jenny's lectures and this is python code this is our file now I want to write down high and I want to read then the position of the cursor so at first see the file pointer was at zero position at first after opening right once you have written high now it is at second position right 0 at zero position then one and add two position at two here was the cursor then after reading this content after reading after that the file pointer position is at 48 means in the last here after reading this thing at last it will be at 48th position right so this is how you can just if you want to find out the position of the cursor or the file pointer you can just use this method so this is R plus mode and first if you read and then if you write then first if you read then you read from here and the cursor would be at last and then if you write then it would be something like append because we are writing at the end of the file so it's like appending in the file okay so this is R plus mode now we have W plus mode so what is difference between R plus and W plus let's see first W plus see this is W plus mode it will open the file in both read and write okay same as R plus but and as well as the file Handler exists at the beginning of the file okay same it overwrite the previous content if the file already exists then it will overwrite the previous content right and if I don't think doesn't exist it will create a new file right so in overwritten in this concept it is different from R plus more R plus more if I don't exist it will create it will show an error but if W plus mode if I don't doesn't exist it will create a new file and it will override the previous content if file exists right let's see so we are opening this file file one in now in W plus mode so if file don't exist suppose file 4. this file don't exist let's just comment out these things so it will create a new file file 4. no output but we have a file 4 right and yeah at last better to use first close F1 Dot close this thing is important right okay now already existed file I want to open so file one so right now in file one I have this thing suppose I have welcome to Jenny's lectures and this is python course so if you open this file in wplus mode it will open in both ingredient right what but previous content would be erased so now in this file see I have this content once I run the score and after that I'll show you the file one then there would be nothing see just run this nothing will be shown here but if I want to check file one see there is nothing in this file previous was erased means it was overwritten now now obviously if you want to read anything there is nothing in the file so first thing is what should be the process first write then read and in R plus it was first read then write that was the you can say exact or you can see the correct process of reading and writing right now first write something in this file so how to write F1 Dot we have an operation right and I just want to write here hi and welcome that's it right now I want to read so and see two time I want to write F1 dot write High welcome F1 dot right this is python course and then data then I'm reading the data okay because obviously both we can do read and write let's run this see it is not printing any output so this is you know where the student most of the student get confused we are reading the data and obviously W classes for both reading and writing but still it is not showing anything what is the reason this point is very important see okay let's see this file one do we have any data yes hi welcome this is python course so see high welcome and this is python course but it is not printing anything why so the problem is see let's first check out the position of this thing position of the file pointer using F10 so first after opening the file check the position then writing High welcome check the position right then after writing this again we are going to check the position then after reading the data or after printing the data check the position right let's just delete these things so this is our program basically right fourth time we are checking the position let's run this see only position it is printing no data first it was at zeroth position at first obviously the five pointer was at in the beginning when you open this file means here in the beginning right now we are writing High welcome so at first there was nothing in that file then High welcome was added High welcome was written in the file and after writing this the position of the file is at 10 10 number 10 position so one two three four five six seven eight nine ten after e which is from zeroth if the position would be started so here was the file pointer After High welcome then we have written this is python course after writing this again we are printing then after writing this the position of the file pointer was at 31 31 is here at the end right now we are reading the data but position of the file pointer is here and after this there is nothing in the file that is why it is not showing anything what it will read so to read the data you have to move the position the file pointer the file Handler again at the beginning then you can read so for that also we have a function so after writing this just here I am moving the that file pointer we have a function seek and add 0. obviously you have to pass a offset and from where you want to move two types of two arguments basically but that also will see later when we discuss seek function in detail right now just pass zero means at the beginning I want to move right now it will show see hi welcome this is python course and the position of the you can say file Handler now after moving this cursor again I want to print where is my file pointer where is my file Handler let's run this see after moving after here once it was at 31st it was again now at zeroth position at zeroth position because we have used this seek operation seek function right now it is printing everything so this is how you can read in W plus mode right I hope now you got the answer of your problem right and this is very common problem students see because this is both for reading and writing we are writing we are reading but it is not showing anything on the console why it is not showing I have told you the reason okay this was W plus next is append mode a is comment out this thing and we will again open this F1 Dot sorry F1 equal to open and file name is now first let me just show you what is append mode see it open the file in append or you can say right mode but obviously write an append a difference right means it will erase the previous content the cursor would be at the beginning or anywhere you can write using the C corporation we can move the file pointer in any way you can write append means by default it is going to append means at the end of the file right so the file Handler exists at the end of the file the previously written file here the difference and if file already exists then at the end of the cursor would be at the end of the file the file Handler if doesn't exist it will create a new file right and the newly written data will be added at the end of the file this is a pen mode so file one file one is we are having data in file one hi welcome this is python course right if there is no such file suppose I just want I just have deleted this file to as well as file four so there is only file one so let's open file two there is no such file in file two let's run this it will not give any error and see now we have file 2. this is a file file right so if your file is not there then you can create a new file but if file is already there like file one okay now just open this inner pen mode and let's write down something F1 dot right and I just want to write like hello students okay let's run this see it will not show anything but in file one I have now hi welcome this is python course and hello students append append means at the end because the file pointer was at the end and from here it will add hello students right but it will only open in the append mode on read mode if you want to sorry write mode if you want to read then we'll give error unsupported operation it's not readable in append mode you can only append you can only write at the end of the file if I don't take this it will create a new file right okay now let's do this a plus node let's open this in a plus mode a plus means both append and re right now first if if you read if I do not append anything if I don't write anything and because I have told you file one already exists in five align I have like hello students so let's just remove hello students and this is our hi welcome this is python code this is our file OneNote txt right I want to read this because I've told you in append mode it will open the file both in read and append mode so maybe you think let's read what is the content then I will append it right okay let's read F1 dot read it will not show anything see this is again a problem there is no error but it is not showing anything and why so and yeah in file when we have content hi welcome this is python course see a plus mode is what when you open this file in a plus model in a mode append mode the cursor or the file pointer is at the end of the file means at the end means here and from here you want to read so obviously after this there is nothing in this file so what it will show nothing if you want to check after opening let's just print the where is that position of that that file pointer see at 33rd position means here and the last so how you can read anything right what is a plus more it will open the file both in append and read mode append or you can say write and read more file Handler exists at the end of the file if file already exist or it will create a new file if file doesn't exist right but it will not erase the previous content unlike W plus mode W plus series is the previous content or you can say it will overwritten the previous con overwrite the previous content so directly if you want to read just move this cursor at zeroth position now it will work fine see first at all the 33 but we have used the C corporation and then High welcome in this python force that is fine right now if you want to you can say write something so let's write F1 Dot right Jenny's lectures right let's run this okay this is printing this thing but in file we are having hi welcome this is Jenny's lectures at the end because we are appending cursor was here right so I hope you got all the six type of modes but now if I have a binary file suppose I am having a text sorry image let's have an image so this is an my image one dot jpg this is in this project in this project only right if your file is not in this project here in this directory where you are working your python directory if it is supposing desktop that you have to provide the complete path here like this a file name is my file underscore desk dot txt this file I have on desktop so directly I cannot use my file underscore decks.txt see let's just comment out this line see I want to open this my file underscore Tech desk dot txt in read mode this file is on my desktop so let's run this and it will give an error see in line number 16 you are opening this file and no such file or directory file not found right so if you want to open this thing then you have to give the complete path like this like this the complete path now we can open this file in any mode if you want to open like in read append or anything let's run this C and in that file I was having only High I at first and then I avoided Jenny's lectures I was previous content in this file and now I have added Jenny's lectures I was previous content and then I have added I avoid Jenny's lectures right so this is why you have to give the complete path if you want to access the file which is outside of this directory right now let's have an image I am having my like this image my image one dot jpg this is my image right this is my image file in this project only in this path only right now if I want to read this thing so let's just my image one load jpg and let's just read this nothing else I want to do okay in read mode and then I want to read the content of this image what do you think what it will print let's see safe okay it is giving this error Unicode decoder okay because that the mode is for binary file it is RB R was only for text file RB WB R plus RB plus WB plus these were was for this is for this is the access mode to open binary files right so RB let's run this see what you are getting here this is something we are not getting anything because this is binary file we are not able to read what is this so if I want to move this file this image into another image file only I want to show that thing so I can take like F1 is equal to open and my image 2. sorry jpg and that I'm going to store in WB mode means right mode I want to write this image into here right so just use for Loop for I in F1 for in F1 right just write in sorry let's take obviously you have to take second pointer F2 so F2 dot right and whatever is this in this I so whatever we are getting from F1 that data we are just writing that into F2 okay so we are creating another a second image let's comment out this thing and let's run this obviously it will not show anything but it has created a image to file C my image to node jpg if you open this now you are getting the same image that was in my image one my image one my image two same image so like this you can also work on binary files right this thing you can try but the mode is different rbw will be like this okay this thing also you can try so this says what all about is file handling the modes and T still operation till and see if operation and all the different type of operation and all the type of modes I hope you heard this right so just practice this thing with different different examples so I hope you got the file handling Concept in Python so now I'll see you in the next video till then bye take care
