With timestamps:

00:00 - in the series of learning programming in
00:01 - c we are discussing strings in C we are
00:03 - we have discussed some theory about
00:05 - string like what is a string scanf get
00:08 - print puts uh these points about string
00:11 - right and also a program simple program
00:13 - how to read a string and how to print a
00:15 - string right now in this video we'll
00:16 - talk about what how to find out length
00:19 - of a string using predefined function
00:22 - predefined function is what St Str Len
00:25 - to find out length of a string
00:28 - predefined the name m c predefined means
00:31 - it's already defined the meaning of this
00:33 - is already defined right where it is in
00:37 - header file which is string do H header
00:40 - file string do H so if you want to use
00:44 - any predefined function regarding string
00:46 - we have to include which header file
00:47 - string. see in a program we include
00:50 - stdio.h right why so because there we
00:53 - have you know uh declared which function
00:56 - print F scan F and we are using those
00:58 - function in our program so that is why
01:00 - we are including s do before uh in our
01:03 - program so if you you want to use these
01:05 - kind of function predefined function of
01:07 - string you have to include which header
01:08 - file string. in program so we'll use
01:11 - this predefined function as well as
01:12 - you'll find out length of a string
01:14 - without using this uh predefined
01:17 - function we will write down our own
01:18 - logic right
01:21 - see suppose I'm taking this
01:24 - string I'm taking this string JN so and
01:27 - obviously at last in the string we must
01:30 - have what a null character this is what
01:32 - end of string so this is string we have
01:35 - now length of this string is what seven
01:37 - 1 2 3 4 5 6 7 seven characters we have
01:41 - that is length means how many characters
01:42 - you have in the string Here length means
01:45 - we are not including this null character
01:48 - it is not part of string it is you can
01:50 - say it indicates end of string right so
01:54 - string length St Str Len will find
01:56 - length of the string excluding what null
01:59 - character Vector because it's not you
02:01 - know length of a string it's not string
02:04 - it is end of string so here it should
02:06 - return
02:07 - seven right this is length of string so
02:10 - first of all we'll write how obviously
02:13 - you include what one more header file
02:16 - that is string
02:19 - do because that function whatever we are
02:22 - using St strn that is declared in this
02:24 - heter file right so now first of all we
02:28 - will read a string so first so declare a
02:30 - string suppose uh uh care name and
02:34 - length here I'm specifying 30 right and
02:41 - see whenever
02:47 - you run the program it should ask enter
02:50 - name and I'm getting I'm not using scanf
02:53 - I'm using uh gets gets name
02:58 - right now find out out length of the
03:00 - string see how to use that function St r
03:03 - l n this is the
03:05 - function and the parameter we pass means
03:09 - it accept what the string or you can say
03:12 - pointer to the string or here simply you
03:15 - will write what this name of the string
03:17 - name of the string is name only name
03:19 - just pass name it is also pointer right
03:24 - why so because name is containing
03:27 - what is containing supp address is th000
03:31 - address would be you know in EXA decimal
03:32 - form I'm just you know taking it for a
03:34 - Simplicity purpose so 0 1,000 and 1 then
03:38 - 2 then 3 then four 5 6 something like
03:42 - this and we are having how space for 30
03:45 - characters so beyond this also we have
03:47 - till
03:50 - 1229 but we we we are only going to
03:52 - store JY that's it so this is end of
03:55 - string and the complete is till uh 30
03:58 - character that is character array so in
04:00 - name we have Base
04:01 - address or you can say the address of
04:03 - the first bite that is thousand so
04:06 - obviously name is acting as a pointer
04:08 - right so here it accept this function
04:11 - accept what how how they have you know
04:14 - written this predefined this how they
04:17 - have defined this function or you can
04:18 - say that prototype of this function is
04:20 - what the name of the function
04:23 - here St Str Len here it is accepting
04:27 - what care sorry uh
04:32 - pointer pointer to string string is what
04:35 - the name of the string and obviously
04:37 - name is what pointer that is why here
04:39 - I'm passing only name and what it will
04:42 - return integer value or more
04:44 - specifically more precisely if I say
04:46 - then unsigned into Val it return
04:50 - unsigned into
04:52 - Val y un signed obviously length of the
04:56 - string cannot be negative number length
04:59 - would always be positive
05:02 - number right so that is why it is
05:05 - unsigned in so the return type of this
05:08 - is or you can say the data type of this
05:10 - s strn function is what unsigned
05:13 - int
05:15 - right or maybe somewhere it is written
05:17 - like size underscore T that is nothing
05:20 - but consigned in right so this is you
05:23 - can see a prototype of this function and
05:25 - here they have written the logic for
05:26 - stln and this is already you know
05:28 - defined and and whatever the meaning
05:30 - that is written in string doed so we
05:32 - don't have to bother about the code of
05:36 - this stn function because it is already
05:38 - written in string.h right and we are
05:40 - including this file so compiler will
05:42 - automatically refer to this header file
05:44 - to find out the meaning of St strn and
05:47 - we'll simply just return the whatever
05:49 - the length of the string right so we
05:52 - don't have to take care about this
05:56 - definition of this St
05:58 - stren so pass the name of the string and
06:00 - it will return unsigned int value right
06:04 - and that value we are going to store in
06:06 - an suppose uh integer variable suppose
06:09 - I'm taking integer variable count here
06:12 - I'm going to store so first of all we
06:13 - have to declare this thing here right so
06:16 - I'm declaring int count or you can
06:19 - declare here here unsigned int more
06:22 - precisely unsigned int and I'm going to
06:25 - initialize it with zero so whatever the
06:28 - string length it would be in
06:29 - and simply now you can print print
06:32 - F and you can write string length is
06:36 - here what you will use the specifier
06:38 - percentage s or D obviously percentage D
06:43 - because we are uh you know printing
06:45 - length length is what integer percentage
06:47 - D and
06:50 - count and that's
06:52 - it we will get the output count if you
06:55 - are entering string JY you will get
06:57 - seven if you are entering J like
07:01 - this yes it can take this input because
07:04 - we are using getus so now the length
07:06 - would be
07:08 - 14 space is also you can say would be
07:12 - counted in length of the string so 7 8 9
07:15 - 10 11 12 13
07:17 - 14 excluding n character so I think if
07:21 - you use predefined function that is very
07:23 - simple to find out length of the string
07:24 - nothing is there right but second
07:28 - variant is if you don't use use this St
07:30 - Str Len function then we have to write
07:32 - down our own logic so we are not using
07:35 - this function means you have to count
07:38 - the number of characters in The
07:40 - String
07:42 - right so till what till you find you
07:47 - find uh that null
07:50 - character until you find null character
07:53 - you have to count you have to count
07:56 - number of character in the string that's
07:58 - it
08:00 - so character by character means count is
08:04 - zero once we find first character J then
08:07 - count should be one then if we you know
08:11 - then next Traverse this a then count
08:13 - should be+ one next + 1 + 1 + 1 till you
08:19 - find null character right so we are
08:22 - increasing this count or you can see we
08:25 - are traversing this string till here so
08:27 - we are using obviously we have to use
08:28 - for Loop
08:29 - uh sorry Loop either four while or do
08:31 - while it's up to you you can use any
08:33 - Loop so here I'm using the condition is
08:36 - while while name is what name of the
08:39 - string is name and now I'm accessing
08:42 - individual character so name of I I'm
08:45 - providing index also index zero then we
08:48 - will switch to first index then second
08:50 - then third then fourth fifth and sixth
08:52 - and then seventh right if name of I not
08:56 - equal to
08:58 - null see null is character so I'm
09:00 - providing in single
09:03 - quote while name of I not equal to null
09:08 - till then we will count we will do count
09:10 - Plus+ we will increase the count count
09:14 - Plus+ right and obviously we are taking
09:17 - I so I is for for this index so index is
09:21 - also first zero then one then two it is
09:23 - also increasing so we have to do I ++
09:26 - also obviously name of zero then first
09:29 - in second and third like
09:31 - this and that's it and after this y Loop
09:35 - you can print print F percentage D
09:39 - and count and before using I we have
09:44 - to declare this I here in is in I
09:48 - right so see now the working of this
09:51 - let's try in this suppose I'm entering
09:53 - it's asking enter name I'm entering jti
09:55 - only right gets name j has been stored
09:58 - now while name of I now I is what first
10:01 - I is what we are initializing I first
10:04 - zero see y Loop the syntax of using Y
10:06 - Loop is what
10:08 - initialization then in while loop we we
10:10 - write condition then within this while
10:12 - loop we are using increment and
10:13 - decrement three parts are there in Loops
10:15 - in four Loop all the three parts are
10:18 - within at the same uh you know location
10:20 - at the same place but here three
10:21 - different places so I zero
10:26 - C here we have count and i 0 0 at
10:30 - starting name of
10:32 - zero excess name of zero name we are
10:36 - providing the know that what address so
10:39 - name of zero is what this one J is J
10:41 - equal to null character no okay it
10:45 - condition is true because it's not equal
10:49 - we enter here count Plus+ count becomes
10:51 - one I ++ I becomes
10:53 - one now I becomes one again check here
10:58 - name of now I I is
10:59 - one name of I name of one one this one
11:03 - is this null character no count Plus+ I
11:07 - ++ again I ++ now I is two name of two
11:11 - is y is null character no condition true
11:14 - Count Plus+ I ++ now name of three index
11:19 - is three it is also not null character
11:22 - count Plus+ I ++ now name of fourth
11:26 - index not null character again enter in
11:29 - this Loop count Plus+ I
11:32 - ++ now name of five not equal to null
11:35 - character yes true enter into this count
11:38 - Plus+ I ++ now name of six yes condition
11:43 - true Count Plus+ i++ now seven name of
11:47 - seven now see name of at the seventh
11:49 - index yes it is null character so the
11:53 - condition is not
11:54 - true right so that is why we are not
11:58 - going to enter into this Loop exit from
12:00 - the loop and whatever the statement you
12:03 - have written outside of the this Loop
12:05 - you know just after this Loop that would
12:08 - be printed so here I'm printing
12:09 - percentage D count count value is seven
12:11 - so seven would be printed and the length
12:14 - is seven only and if you store jti space
12:17 - Kat then at seventh position we are
12:20 - having space so space is also not null
12:22 - character SK value of space is no not
12:26 - equal to SK value of this null character
12:28 - SK value of null is zero SK SK value of
12:30 - space is something different so that is
12:32 - not true right so again enter here count
12:35 - plus plus count becomes 8 so till 14 it
12:39 - will print till kri I after that it will
12:42 - stop so I hope you got both the
12:44 - Logics right now let me show you this
12:47 - thing on my
12:51 - laptop so now let me create one file for
12:54 - you and I'm
12:55 - taking name
12:57 - String
12:59 - length string length do c
13:05 - right header file and also will include
13:12 - what string do H this header file
13:15 - because we will use it should be string
13:18 - do
13:19 - H
13:22 - right in Main and here what first of all
13:27 - we are taking a string suppose I'm
13:29 - taking name uh name of the string is
13:30 - name and length is 30 right and int
13:37 - count one variable as well as I is equal
13:41 - to Z two we are taking right and
13:46 - here I'm asking enter
13:50 - name we'll take input using gets so here
13:54 - just pass the name of the string that is
13:57 - name that's it now let me just uh use
14:00 - that function
14:04 - First St Str
14:06 - Len and here what it will accept pointer
14:09 - to the string and pointer is obviously
14:11 - name is name of the string is also it's
14:14 - an internal pointer it acts as a
14:16 - constant pointer to the string passing
14:20 - name and uh that's it and just we are
14:26 - printing length of the string
14:31 - length of the string
14:34 - is sorry percentage
14:36 - D and uh
14:42 - count right and if you want to print
14:45 - string then you can use
14:48 - Pest and name so it will print string
14:52 - also and the length of the string also
14:54 - now let me run this program it should
14:56 - ask first enter name
14:59 - right and see it is asking enter name
15:02 - I'm just
15:03 - providing
15:05 - jti katri space k so see it is first of
15:09 - all printing the string and the length
15:11 - of the string is 14 right in the next
15:14 - line we are not using any slash but
15:15 - still it is giving output in the next
15:17 - line length of the string because put we
15:19 - are using put it will automatically you
15:21 - know add new line at the end of the
15:23 - output right next output would be in the
15:26 - next line so I hope you got string or
15:29 - more specifically if you want you can
15:30 - specify it in not int count unsigned int
15:34 - because obviously we know that data type
15:37 - of this s in function is what and sign
15:39 - in it will always return positive value
15:41 - no no no negative value so now we will
15:43 - see we will not use this St Str
15:46 - Len and now we use our own logic so here
15:51 - I'm writing while
15:53 - L
15:55 - while name of high
15:59 - sorry name of
16:01 - I not equal
16:04 - to
16:06 - what null
16:10 - character
16:12 - right till then we will do count
16:16 - Plus+ and we also increase index I ++
16:21 - and after complet completion of this
16:23 - while loop we will just print length of
16:25 - the string length of the string is C out
16:27 - and we are also you printing a name like
16:30 - the string also so I think that's it let
16:34 - me just run this for
16:36 - you and see it is asking enter
16:39 - name Janti katri and see it is first of
16:43 - all printing JY and the length of the
16:45 - string is
16:46 - 14 so without using uh predefined
16:50 - function also you can write down your
16:51 - own logic right so in this case if
16:53 - you're not using stln no need to include
16:56 - this string.h header file
16:59 - you can remove this right so now the
17:02 - next video see that's for more pred
17:04 - function and we'll see the program also
17:05 - now I'll see in the next video till then
17:06 - bye-bye take care

Cleaned transcript:

in the series of learning programming in c we are discussing strings in C we are we have discussed some theory about string like what is a string scanf get print puts uh these points about string right and also a program simple program how to read a string and how to print a string right now in this video we'll talk about what how to find out length of a string using predefined function predefined function is what St Str Len to find out length of a string predefined the name m c predefined means it's already defined the meaning of this is already defined right where it is in header file which is string do H header file string do H so if you want to use any predefined function regarding string we have to include which header file string. see in a program we include stdio.h right why so because there we have you know uh declared which function print F scan F and we are using those function in our program so that is why we are including s do before uh in our program so if you you want to use these kind of function predefined function of string you have to include which header file string. in program so we'll use this predefined function as well as you'll find out length of a string without using this uh predefined function we will write down our own logic right see suppose I'm taking this string I'm taking this string JN so and obviously at last in the string we must have what a null character this is what end of string so this is string we have now length of this string is what seven 1 2 3 4 5 6 7 seven characters we have that is length means how many characters you have in the string Here length means we are not including this null character it is not part of string it is you can say it indicates end of string right so string length St Str Len will find length of the string excluding what null character Vector because it's not you know length of a string it's not string it is end of string so here it should return seven right this is length of string so first of all we'll write how obviously you include what one more header file that is string do because that function whatever we are using St strn that is declared in this heter file right so now first of all we will read a string so first so declare a string suppose uh uh care name and length here I'm specifying 30 right and see whenever you run the program it should ask enter name and I'm getting I'm not using scanf I'm using uh gets gets name right now find out out length of the string see how to use that function St r l n this is the function and the parameter we pass means it accept what the string or you can say pointer to the string or here simply you will write what this name of the string name of the string is name only name just pass name it is also pointer right why so because name is containing what is containing supp address is th000 address would be you know in EXA decimal form I'm just you know taking it for a Simplicity purpose so 0 1,000 and 1 then 2 then 3 then four 5 6 something like this and we are having how space for 30 characters so beyond this also we have till 1229 but we we we are only going to store JY that's it so this is end of string and the complete is till uh 30 character that is character array so in name we have Base address or you can say the address of the first bite that is thousand so obviously name is acting as a pointer right so here it accept this function accept what how how they have you know written this predefined this how they have defined this function or you can say that prototype of this function is what the name of the function here St Str Len here it is accepting what care sorry uh pointer pointer to string string is what the name of the string and obviously name is what pointer that is why here I'm passing only name and what it will return integer value or more specifically more precisely if I say then unsigned into Val it return unsigned into Val y un signed obviously length of the string cannot be negative number length would always be positive number right so that is why it is unsigned in so the return type of this is or you can say the data type of this s strn function is what unsigned int right or maybe somewhere it is written like size underscore T that is nothing but consigned in right so this is you can see a prototype of this function and here they have written the logic for stln and this is already you know defined and and whatever the meaning that is written in string doed so we don't have to bother about the code of this stn function because it is already written in string.h right and we are including this file so compiler will automatically refer to this header file to find out the meaning of St strn and we'll simply just return the whatever the length of the string right so we don't have to take care about this definition of this St stren so pass the name of the string and it will return unsigned int value right and that value we are going to store in an suppose uh integer variable suppose I'm taking integer variable count here I'm going to store so first of all we have to declare this thing here right so I'm declaring int count or you can declare here here unsigned int more precisely unsigned int and I'm going to initialize it with zero so whatever the string length it would be in and simply now you can print print F and you can write string length is here what you will use the specifier percentage s or D obviously percentage D because we are uh you know printing length length is what integer percentage D and count and that's it we will get the output count if you are entering string JY you will get seven if you are entering J like this yes it can take this input because we are using getus so now the length would be 14 space is also you can say would be counted in length of the string so 7 8 9 10 11 12 13 14 excluding n character so I think if you use predefined function that is very simple to find out length of the string nothing is there right but second variant is if you don't use use this St Str Len function then we have to write down our own logic so we are not using this function means you have to count the number of characters in The String right so till what till you find you find uh that null character until you find null character you have to count you have to count number of character in the string that's it so character by character means count is zero once we find first character J then count should be one then if we you know then next Traverse this a then count should be+ one next + 1 + 1 + 1 till you find null character right so we are increasing this count or you can see we are traversing this string till here so we are using obviously we have to use for Loop uh sorry Loop either four while or do while it's up to you you can use any Loop so here I'm using the condition is while while name is what name of the string is name and now I'm accessing individual character so name of I I'm providing index also index zero then we will switch to first index then second then third then fourth fifth and sixth and then seventh right if name of I not equal to null see null is character so I'm providing in single quote while name of I not equal to null till then we will count we will do count Plus+ we will increase the count count Plus+ right and obviously we are taking I so I is for for this index so index is also first zero then one then two it is also increasing so we have to do I ++ also obviously name of zero then first in second and third like this and that's it and after this y Loop you can print print F percentage D and count and before using I we have to declare this I here in is in I right so see now the working of this let's try in this suppose I'm entering it's asking enter name I'm entering jti only right gets name j has been stored now while name of I now I is what first I is what we are initializing I first zero see y Loop the syntax of using Y Loop is what initialization then in while loop we we write condition then within this while loop we are using increment and decrement three parts are there in Loops in four Loop all the three parts are within at the same uh you know location at the same place but here three different places so I zero C here we have count and i 0 0 at starting name of zero excess name of zero name we are providing the know that what address so name of zero is what this one J is J equal to null character no okay it condition is true because it's not equal we enter here count Plus+ count becomes one I ++ I becomes one now I becomes one again check here name of now I I is one name of I name of one one this one is this null character no count Plus+ I ++ again I ++ now I is two name of two is y is null character no condition true Count Plus+ I ++ now name of three index is three it is also not null character count Plus+ I ++ now name of fourth index not null character again enter in this Loop count Plus+ I ++ now name of five not equal to null character yes true enter into this count Plus+ I ++ now name of six yes condition true Count Plus+ i++ now seven name of seven now see name of at the seventh index yes it is null character so the condition is not true right so that is why we are not going to enter into this Loop exit from the loop and whatever the statement you have written outside of the this Loop you know just after this Loop that would be printed so here I'm printing percentage D count count value is seven so seven would be printed and the length is seven only and if you store jti space Kat then at seventh position we are having space so space is also not null character SK value of space is no not equal to SK value of this null character SK value of null is zero SK SK value of space is something different so that is not true right so again enter here count plus plus count becomes 8 so till 14 it will print till kri I after that it will stop so I hope you got both the Logics right now let me show you this thing on my laptop so now let me create one file for you and I'm taking name String length string length do c right header file and also will include what string do H this header file because we will use it should be string do H right in Main and here what first of all we are taking a string suppose I'm taking name uh name of the string is name and length is 30 right and int count one variable as well as I is equal to Z two we are taking right and here I'm asking enter name we'll take input using gets so here just pass the name of the string that is name that's it now let me just uh use that function First St Str Len and here what it will accept pointer to the string and pointer is obviously name is name of the string is also it's an internal pointer it acts as a constant pointer to the string passing name and uh that's it and just we are printing length of the string length of the string is sorry percentage D and uh count right and if you want to print string then you can use Pest and name so it will print string also and the length of the string also now let me run this program it should ask first enter name right and see it is asking enter name I'm just providing jti katri space k so see it is first of all printing the string and the length of the string is 14 right in the next line we are not using any slash but still it is giving output in the next line length of the string because put we are using put it will automatically you know add new line at the end of the output right next output would be in the next line so I hope you got string or more specifically if you want you can specify it in not int count unsigned int because obviously we know that data type of this s in function is what and sign in it will always return positive value no no no negative value so now we will see we will not use this St Str Len and now we use our own logic so here I'm writing while L while name of high sorry name of I not equal to what null character right till then we will do count Plus+ and we also increase index I ++ and after complet completion of this while loop we will just print length of the string length of the string is C out and we are also you printing a name like the string also so I think that's it let me just run this for you and see it is asking enter name Janti katri and see it is first of all printing JY and the length of the string is 14 so without using uh predefined function also you can write down your own logic right so in this case if you're not using stln no need to include this string.h header file you can remove this right so now the next video see that's for more pred function and we'll see the program also now I'll see in the next video till then byebye take care
