With timestamps:

00:00 - in this lecture i am going to talk about
00:01 - analysis of algorithm i am going to
00:03 - divide this topic into multiple videos
00:06 - to describe this topic properly with
00:08 - multiple examples right so
00:11 - in this analysis of algorithm we are
00:12 - going to discuss why we analyze
00:14 - algorithms what are the factors
00:16 - including here means factors required
00:19 - to analyze an algorithm right and
00:22 - types of analysis right and how to
00:24 - analyze an algorithm with proper
00:26 - examples
00:27 - right and in this topic we
00:30 - will also discuss asymptotic notations
00:33 - so this topic
00:34 - is very helpful for the placement point
00:35 - of view as well as for
00:37 - gate and ugc net point of view
00:40 - now before proceeding i want to update
00:42 - csir ugc net aspirin that for you guys
00:45 - uh there is a free test series going on
00:48 - on an academy
00:49 - named an academy championship for csir
00:52 - ugc
00:53 - net they conduct free live mock test on
00:56 - every sunday
00:57 - right and if you give that test then all
01:00 - india ranking of that
01:01 - test would be given but it's okay if you
01:04 - are not able to
01:05 - give that live test then you can write
01:08 - the test
01:08 - even after the test is the live test is
01:11 - over
01:12 - after that also you can take the test
01:14 - right and the test contains
01:16 - uh three sections with general aptitude
01:18 - as well
01:19 - for all the subjects fine plus one more
01:22 - point is what
01:22 - these tests have been reviewed by the
01:25 - most experienced
01:26 - educators right and after each
01:30 - mock test session that paper analysis
01:34 - is also being done by the top educators
01:38 - and what is the benefit of this paper
01:39 - analysis
01:41 - in this case you will easily get to know
01:42 - how to solve the problems
01:44 - as well as you will get to know your
01:47 - area of improvement
01:48 - so you can enroll for this test series
01:50 - freely and
01:51 - this test series would be uh till 15th
01:54 - of november
01:55 - i'll give you the link and all the
01:57 - details in the description box of this
01:59 - video
01:59 - you can check out there now back to the
02:01 - topic here we will discuss
02:03 - type of analysis two types of analysis
02:06 - priority analysis and posterity analysis
02:08 - we are going to see the difference
02:09 - between these two
02:10 - now see as the name suggests priory
02:13 - means you can say pre
02:14 - and this is post postwary means post
02:17 - it's before and
02:18 - after before something and after
02:20 - something right so this is analysis of
02:23 - an algorithm
02:24 - right so this type of analysis priority
02:26 - analysis is done
02:28 - prior or you can say before execution of
02:30 - that algorithm
02:32 - right and this is done after execution
02:35 - of that algorithm on a specific system
02:38 - now if you have a doubt that how to run
02:40 - an algorithm on a machine we
02:42 - generally we run programs yeah right
02:44 - means here
02:45 - analysis after running it on a system
02:47 - means what
02:48 - the selected algorithm will be
02:50 - implemented using any programming
02:52 - language
02:53 - and that after that we are going to run
02:55 - that uh
02:56 - implementation part of that program onto
02:58 - a specific system
03:00 - right and then we analyze that thing
03:03 - this is called
03:04 - posterior analysis and directly if we
03:08 - analyze the algorithm before running it
03:10 - then that is called prior
03:11 - analysis see i hope you know why do we
03:13 - analysis of algorithm
03:15 - because to solve a simple problem there
03:17 - can be multiple algorithms
03:19 - like to find out shortest path there are
03:21 - multiple algorithms
03:22 - now we want to find out the best
03:24 - algorithm right so obviously we have to
03:26 - analyze all those algorithms and we
03:28 - choose which is
03:29 - which is the best one for us right that
03:32 - is why we
03:33 - analyze the algorithm and how we analyze
03:36 - algorithm the factors are what based on
03:38 - many factors are there but
03:39 - most popular factors in computer science
03:41 - are what generally we use
03:43 - time and space time and space you can
03:46 - say memory how much memory that
03:47 - algorithm takes
03:48 - and how much time now suppose if we run
03:51 - a program on
03:52 - pentium 4 processor and one program on
03:56 - i3
03:56 - and one on i7 then definitely the output
04:00 - would be or you can say the time taken
04:01 - by those processors
04:02 - by the same program would be different
04:05 - different on each machine
04:06 - like maybe for pentium 4 it takes 10
04:09 - milliseconds for i3 it is taking 7
04:11 - millisecond
04:12 - and for i7 it is taking only two
04:14 - milliseconds
04:16 - right so it depends this analysis
04:19 - depends on what
04:20 - the configuration of the system means it
04:23 - varies from system to system
04:25 - and it is also dependent on programming
04:28 - language
04:29 - like ah if you write a program in c then
04:31 - that would if you run that that would
04:33 - take
04:33 - ah some some time for execution and c
04:36 - plus plus if you write the same program
04:38 - and exude then that would take
04:39 - different time because as you know the c
04:41 - plus plus is a faster language
04:43 - right so it is dependent on many factors
04:46 - the analysis
04:47 - so it changes from system to system
04:50 - right so we can say it is not that much
04:53 - effective
04:54 - right the value depends it varies every
04:57 - time
04:58 - but this is hardware independent
05:05 - as well as programming language and
05:06 - processor independent
05:08 - right so if you write an algorithm if
05:11 - you do priority analysis
05:12 - then the result would be same whether
05:15 - it's on pentium 4 you have written on
05:17 - pentium 4 processor i3 i7 or on
05:20 - any system right this is programming
05:23 - language independent
05:24 - why so because obviously to write an
05:26 - algorithm we don't use programming
05:27 - language
05:28 - right simple natural language we use and
05:31 - then just
05:31 - by seeing that those steps we analyze
05:35 - though that algorithm that is called
05:36 - priority analysis so
05:39 - generally in industries this type of
05:41 - analysis
05:42 - is not done right and why so we can see
05:46 - if those people are developing any
05:48 - software for any user
05:50 - right so they cannot analyze that
05:53 - algorithm by running it
05:54 - why so because they are using different
05:57 - configuration uh
05:58 - systems then the user and user is
06:00 - obviously user is
06:01 - using some system that those
06:03 - configuration is different from
06:05 - those industry people they are using
06:07 - right so that's why in industry
06:09 - generally priority analysis
06:10 - is being done right because independent
06:12 - it is independent on the system
06:14 - specifications
06:15 - right here we are uh getting what
06:18 - exact values right like the time taken
06:21 - is what 10 milliseconds seven
06:22 - millisecond or two milliseconds so these
06:24 - are exact values
06:26 - and it will give it is not giving the
06:28 - actual statistics it will give
06:30 - approximate
06:31 - right in terms of time function and
06:34 - space function or you can say in terms
06:35 - of time complexity and space complexity
06:38 - so see here time complexity is not this
06:40 - one
06:41 - many students get confused in this topic
06:43 - in this
06:44 - point like time complexity is what the
06:46 - time taken
06:47 - to run a program no the time taken is
06:50 - what this is what
06:51 - execution time it's not time complexity
06:54 - time complexity is different thing that
06:55 - we'll discuss in next video with proper
06:57 - example
06:58 - right so we can say here we analyze
07:00 - approximate analysis
07:02 - done ah there are time function and
07:04 - space functions
07:05 - right and it is dependent on what
07:09 - the number of times statements in the
07:12 - algorithms are being executed
07:14 - right now how we analyze the algorithm
07:17 - with
07:18 - you know this count number of statements
07:20 - right how many times the number of
07:21 - statements have been executed right
07:23 - that thing will discuss with proper
07:25 - example but in later videos
07:27 - so see here we get the results actual
07:30 - results like
07:31 - 10 milliseconds so like this right but
07:34 - here
07:35 - we generally do this analysis using
07:38 - asymptotic notations and what are these
07:41 - notations
07:43 - that thing also will discuss in later
07:44 - videos this you can say it's a type of
07:46 - theoretical analysis of algorithm and
07:48 - this you can say
07:49 - it is empirical uh analysis of an
07:51 - algorithm right
07:52 - so these are some differences between
07:53 - priori and posterior analysis
07:56 - so that's it for this video in the next
07:57 - video i will discuss first of all what
07:59 - is time complexity and space complexity
08:01 - and then we discuss
08:02 - how to calculate or how to analyze an
08:05 - algorithm how to find out time
08:06 - complexity
08:07 - and space complexity of an algorithm
08:09 - right so now i'm going to see in the
08:11 - next video till then bye take

Cleaned transcript:

in this lecture i am going to talk about analysis of algorithm i am going to divide this topic into multiple videos to describe this topic properly with multiple examples right so in this analysis of algorithm we are going to discuss why we analyze algorithms what are the factors including here means factors required to analyze an algorithm right and types of analysis right and how to analyze an algorithm with proper examples right and in this topic we will also discuss asymptotic notations so this topic is very helpful for the placement point of view as well as for gate and ugc net point of view now before proceeding i want to update csir ugc net aspirin that for you guys uh there is a free test series going on on an academy named an academy championship for csir ugc net they conduct free live mock test on every sunday right and if you give that test then all india ranking of that test would be given but it's okay if you are not able to give that live test then you can write the test even after the test is the live test is over after that also you can take the test right and the test contains uh three sections with general aptitude as well for all the subjects fine plus one more point is what these tests have been reviewed by the most experienced educators right and after each mock test session that paper analysis is also being done by the top educators and what is the benefit of this paper analysis in this case you will easily get to know how to solve the problems as well as you will get to know your area of improvement so you can enroll for this test series freely and this test series would be uh till 15th of november i'll give you the link and all the details in the description box of this video you can check out there now back to the topic here we will discuss type of analysis two types of analysis priority analysis and posterity analysis we are going to see the difference between these two now see as the name suggests priory means you can say pre and this is post postwary means post it's before and after before something and after something right so this is analysis of an algorithm right so this type of analysis priority analysis is done prior or you can say before execution of that algorithm right and this is done after execution of that algorithm on a specific system now if you have a doubt that how to run an algorithm on a machine we generally we run programs yeah right means here analysis after running it on a system means what the selected algorithm will be implemented using any programming language and that after that we are going to run that uh implementation part of that program onto a specific system right and then we analyze that thing this is called posterior analysis and directly if we analyze the algorithm before running it then that is called prior analysis see i hope you know why do we analysis of algorithm because to solve a simple problem there can be multiple algorithms like to find out shortest path there are multiple algorithms now we want to find out the best algorithm right so obviously we have to analyze all those algorithms and we choose which is which is the best one for us right that is why we analyze the algorithm and how we analyze algorithm the factors are what based on many factors are there but most popular factors in computer science are what generally we use time and space time and space you can say memory how much memory that algorithm takes and how much time now suppose if we run a program on pentium 4 processor and one program on i3 and one on i7 then definitely the output would be or you can say the time taken by those processors by the same program would be different different on each machine like maybe for pentium 4 it takes 10 milliseconds for i3 it is taking 7 millisecond and for i7 it is taking only two milliseconds right so it depends this analysis depends on what the configuration of the system means it varies from system to system and it is also dependent on programming language like ah if you write a program in c then that would if you run that that would take ah some some time for execution and c plus plus if you write the same program and exude then that would take different time because as you know the c plus plus is a faster language right so it is dependent on many factors the analysis so it changes from system to system right so we can say it is not that much effective right the value depends it varies every time but this is hardware independent as well as programming language and processor independent right so if you write an algorithm if you do priority analysis then the result would be same whether it's on pentium 4 you have written on pentium 4 processor i3 i7 or on any system right this is programming language independent why so because obviously to write an algorithm we don't use programming language right simple natural language we use and then just by seeing that those steps we analyze though that algorithm that is called priority analysis so generally in industries this type of analysis is not done right and why so we can see if those people are developing any software for any user right so they cannot analyze that algorithm by running it why so because they are using different configuration uh systems then the user and user is obviously user is using some system that those configuration is different from those industry people they are using right so that's why in industry generally priority analysis is being done right because independent it is independent on the system specifications right here we are uh getting what exact values right like the time taken is what 10 milliseconds seven millisecond or two milliseconds so these are exact values and it will give it is not giving the actual statistics it will give approximate right in terms of time function and space function or you can say in terms of time complexity and space complexity so see here time complexity is not this one many students get confused in this topic in this point like time complexity is what the time taken to run a program no the time taken is what this is what execution time it's not time complexity time complexity is different thing that we'll discuss in next video with proper example right so we can say here we analyze approximate analysis done ah there are time function and space functions right and it is dependent on what the number of times statements in the algorithms are being executed right now how we analyze the algorithm with you know this count number of statements right how many times the number of statements have been executed right that thing will discuss with proper example but in later videos so see here we get the results actual results like 10 milliseconds so like this right but here we generally do this analysis using asymptotic notations and what are these notations that thing also will discuss in later videos this you can say it's a type of theoretical analysis of algorithm and this you can say it is empirical uh analysis of an algorithm right so these are some differences between priori and posterior analysis so that's it for this video in the next video i will discuss first of all what is time complexity and space complexity and then we discuss how to calculate or how to analyze an algorithm how to find out time complexity and space complexity of an algorithm right so now i'm going to see in the next video till then bye take
