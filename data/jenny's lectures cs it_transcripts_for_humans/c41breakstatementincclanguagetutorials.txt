With timestamps:

00:00 - in the series of learning programming in
00:02 - c we have discussed Loops in C for while
00:04 - and do while loop in the previous video
00:06 - I have talked about proper the
00:07 - differences among these three Loops four
00:09 - while and doy Loop right now we are left
00:13 - with two most important topics or you
00:15 - can say that control statements in C
00:18 - break and continue these are very
00:19 - important in C these are control
00:22 - statements or you can say these are
00:23 - break and continue these are what
00:25 - keywords in C and keywords we always
00:28 - write in small letters that is why we
00:30 - write break and continue in small
00:31 - letters if you write in capital letter
00:33 - then it will give you error these are
00:35 - also known as control statements right
00:37 - why we use now in this video I'll talk
00:39 - about break statements and see
00:41 - everything about break statement why we
00:42 - use break statement in your in our
00:44 - program when to use these statements
00:46 - right and we will see with the help of a
00:48 - program also like when you use break
00:51 - statement in your program then then what
00:53 - what process what how the program would
00:55 - be executed what output you will get
00:57 - right and we'll also see some important
00:59 - important points about this break
01:01 - statement so now what is break in C it
01:03 - is a control statement in C or you can
01:06 - say break is a keyword in C that is why
01:08 - we write in in in small letters right
01:11 - and if you want to exit from the loop
01:14 - early then we use break statement that
01:17 - whatever I'm saying uh that you will
01:19 - come to know that you will get it better
01:21 - when I'll write a program right now you
01:24 - need to take care one more thing about
01:26 - break you can use this break with loops
01:29 - and and switch statement this thing I
01:32 - have discussed you can watch that video
01:34 - in the side button how to use break in
01:36 - switch statement and when you use breake
01:38 - in switch then what is the meaning of
01:41 - using breake in switch statement this
01:43 - thing we have already discussed now we
01:44 - will discuss how to use this breake in
01:47 - Loops see we can use break within Loop
01:50 - or switch it means if you in any program
01:54 - if you use it uh suppose within if else
01:57 - block no Loop and no switch is there
02:00 - then it will give you error if in a
02:02 - simple program suppose addition of two
02:03 - numbers and there you are writing just
02:05 - break then then it will give you error
02:09 - right so you can use this within Loops
02:11 - either within Loops or switch that you
02:14 - need to take care right and small letter
02:17 - you have to write it in small letters
02:19 - now have to use it in Loops when
02:23 - whenever a
02:25 - break keyword will be encountered in
02:28 - that Loop then control will
02:31 - automatically exit from the loop right
02:35 - and what statement would be executed the
02:37 - statement you write immediately after
02:40 - the loop those statements would be
02:42 - executed right now whatever I'm saying
02:45 - let us discuss it with the help of a
02:46 - program suppose a program is uh I want
02:50 - to enter some integers right like it
02:54 - will ask you the program will ask you
02:56 - enter integer I'm entering one then two
03:00 - then five then six then seven right
03:03 - suppose I want to execute this program
03:05 - only five times means I want to know I
03:08 - want that user should enter only five
03:10 - numbers and then it will print some of
03:13 - all these five numbers right here it
03:15 - will print some of these five
03:17 - numbers right and I want one condition I
03:20 - want to put if the user enter any
03:24 - negative number suppose minus one-2 or
03:26 - any negative
03:28 - number at that time it is going to exit
03:31 - from the loop means after that once you
03:35 - enter negative number see I want to know
03:39 - uh that user should enter five numbers
03:41 - suppose I'm entering one then two then
03:44 - minus 5 then it will not ask for two
03:48 - other entries it will exit from the loop
03:50 - and it will print some of these two
03:52 - numbers only 2 + 1 3 right so this I
03:57 - want to implement in a program
04:01 - I know how many iterations exactly five
04:03 - iterations I want means exactly I want
04:05 - user should enter five numbers so I know
04:07 - exactly how many iterations five
04:09 - iterations so here we can use four Loop
04:12 - right we can we'll also write up this
04:15 - program with Y Loop first of all write
04:16 - down this with four Loop see now first
04:19 - we will take any number any variable
04:23 - where we are going to take these numbers
04:25 - and I variable for this Loop now I'm
04:28 - writing a four for I is equal to 1
04:32 - initialization I less than equal to 5
04:35 - and I
04:37 - ++ five number I want now here in this
04:41 - I'm ask asking from the user enter a
04:44 - number and I'm take I'm going to take
04:46 - the input with scanf I hope you know
04:50 - percentage D what you write percentage D
04:52 - and address of where I want I'll store
04:55 - this in this variable a right now
05:00 - if the user enter any negative number
05:02 - you have to put this condition also so
05:04 - now what I can write here if this a is
05:08 - because number is going to store in this
05:10 - variable so now the a is negative now so
05:13 - a is less than zero if a is less than
05:17 - zero then simply write down break within
05:22 - this if you can use curly braces also
05:25 - but I'm only writing within the if I'm
05:28 - only writing break that is one step
05:29 - statement so no need to write down these
05:31 - curly braces just for reability purpose
05:33 - I'm writing curly braces break is within
05:35 - this if otherwise it will print sum so
05:39 - one more variable I'm taking sum and sum
05:43 - plus a right otherwise it is it is going
05:46 - to repeat till 5 right and after that
05:50 - I'll print the
05:52 - sum percentage D and
05:56 - sum that's it right and here also uh if
05:59 - you you will not declare the sum it will
06:00 - give you error and at starting I'm
06:02 - initializing this with the zero because
06:04 - sometimes it will take some garbage
06:05 - value at starting and after that it will
06:07 - add these numbers or it will give you
06:09 - some other output so better to
06:11 - initialize the sum with zero right now I
06:15 - hope you can write down those uh header
06:17 - files and void main I'm not writing the
06:19 - complete program now control will go the
06:21 - first line to the main function so in
06:24 - memory we have declared three
06:27 - variables right and in Su I have zero
06:30 - Within These we don't have anything now
06:31 - for loop I is equal to 1 so I is 1 I
06:34 - less than equal to 5 yes condition is
06:36 - true control will enter into this Loop
06:37 - now on output screen suppose this is
06:39 - your output screen what you will get the
06:43 - message enter a number now enter a
06:45 - number suppose I'm entering one right so
06:48 - now scan F I have entered number one it
06:52 - is going to check this condition is this
06:53 - a because in a now I have one is 1 less
06:57 - than zero no so it is not going to ENT
06:59 - enter into this four Loop so it will go
07:01 - to this statement sum is equal to sum
07:04 - plus a now sum is 0 0 + 1 is one so now
07:08 - in sum that value would be assigned to
07:10 - sum now sum becomes one right now we we
07:15 - are not going to exit from the loop now
07:17 - what I ++ now I becomes two condition is
07:20 - true again enter into this loop again it
07:23 - will ask enter a number now suppose you
07:26 - are entering number two or I'm entering
07:28 - number five
07:30 - is this condition true no so again sum
07:33 - plus a would be assigned to sum now sum
07:36 - is 1 now a is
07:39 - five now 5 + 1 is 6 so that would be
07:42 - assigned to sum that is sum becomes now
07:44 - six again I ++ right now again I ++ is
07:49 - now three so three is less than five so
07:52 - it will ask again enter a number and now
07:54 - suppose I'm entering number two right so
07:56 - two is not less than zero so program gr
07:59 - will run till five so five time it will
08:02 - ask again suppose I value is five so
08:05 - five times it will ask right and uh we
08:09 - have again I ++ 6 6 is not less than
08:13 - five so it will out of the loop it will
08:14 - go out of the loop out of the loop we
08:16 - have written print F sum sum it is going
08:18 - to print now what is sum of these
08:20 - numbers 18 so now it will print what 18
08:24 - right now see suppose here after
08:30 - entering these three numbers whenever it
08:32 - will ask enter a number I'm entering
08:34 - minus
08:36 - 10 now see minus 10 it is going to check
08:39 - this condition a is less than zero in a
08:41 - I have now minus 10
08:44 - right is this less than zero yes it is
08:48 - true now it is going to enter into this
08:50 - if statement now in if we have written
08:52 - break break
08:54 - means it will throw you out from the
08:57 - loop from any Loop you have you have
09:00 - written this in for Loop so it is going
09:03 - to throw you out from this for Loop so
09:05 - here once break is encountered directly
09:08 - control will go out of the loop it is
09:11 - not going to execute any other statement
09:14 - which is written after this break in
09:16 - this Loop so now it is going to print
09:18 - just sum sum is what sum of these three
09:21 - numbers only right and what is
09:24 - this8 eight is it it is going to print
09:27 - so now I hope you know I want that Loop
09:30 - should be executed till five times but
09:32 - this is what early exit from the
09:34 - loop only three times this is going to
09:37 - be executed after that it is going to be
09:39 - out of the loop that is why if you want
09:42 - early exit from the loop then we use
09:44 - break statement one uses this one second
09:46 - one is we don't know how many times I
09:49 - want to uh execute this Loop infinite
09:52 - times maybe uh at one time I just want
09:55 - to enter five numbers and print the sum
09:58 - maybe second time time I want to sum 10
10:00 - numbers maybe third time I want to sum
10:03 - 15 numbers I don't want I don't uh you
10:05 - know know the exactly the number of
10:08 - iterations right so in that case we
10:10 - cannot use for loop it's better to use
10:13 - while loop right yeah we can use for
10:15 - Loop no need to put any condition then
10:18 - it would be at what infinite Loop and
10:20 - using break you can uh break this loop
10:23 - at any time but in this case we use
10:25 - better to use while loop so let us see
10:27 - that program so here I'm taking two
10:29 - variable because this would be an
10:30 - infinite Loop so I'm not taking any uh
10:33 - that uh variable for the loop like I or
10:35 - i++ I'm not doing any i+ Plus or I minus
10:37 - minus because it should be an infinite
10:39 - Loop right while one this condition is
10:41 - true so it will ask from the user enter
10:43 - a number so I'm going to enter suppose
10:45 - one now in a I have one is a less than
10:49 - zero no so it is sum plus a sum is zero
10:53 - this is 1 0 + 1 is 1 so it is going to
10:55 - assign into this sum that is sum becomes
10:57 - now one again
10:59 - again it will check the condition while
11:01 - one because it is always true again it
11:03 - will ask a number and suppose I'm
11:05 - entering suppose two is this condition
11:07 - true no so sum plus a now a is 2 2 + 1 3
11:12 - so that would be a sign is in sum right
11:15 - in finite time it is going to ask you 10
11:19 - 15 uh 20 100 times until you enter a
11:23 - negative number suppose I'm I'm after
11:26 - entering two third time it will ask you
11:28 - enter number and there I'm entering
11:30 - minus 5 this condition is true a is less
11:33 - than zero yes now it will execute this
11:36 - break statement break means it will
11:38 - throw you out from the loop this is Body
11:41 - Of The Loop so the control will
11:43 - immediately will go where the statements
11:47 - which is written immediately after the
11:49 - loop we have written this printf sum is
11:51 - equal to percentage D sum so it is going
11:53 - to print three next time maybe you can
11:57 - enter 10 numbers and after that you can
11:59 - enter negative number if you will not
12:01 - enter negative number then it is not
12:03 - going to end right it is going to be an
12:06 - infinite Loop because you have done hard
12:08 - coding here while one this is always
12:10 - true so to break this one you have to
12:14 - enter a negative number at that time it
12:16 - will print the sum of the numbers you
12:18 - have entered 5 10 or 15 numbers right
12:21 - you can write down this with do while
12:23 - also that say that is what exercise for
12:26 - you you have to write down this program
12:28 - with do while
12:29 - and you can write down that program you
12:31 - can copy paste that program in comment
12:33 - box section or you can uh send me that
12:36 - program on my Instagram account also
12:38 - Instagram messages also right so now I
12:40 - hope you got what is this meaning of
12:42 - using break statement in C right in some
12:46 - programs when we write programs later
12:49 - then we will ask after executing
12:51 - something we will ask do you want to
12:53 - continue and if continue uh then press y
12:56 - if don't want to continue press n and
12:58 - and if you have pressed n or if suppose
13:00 - you have pressed zero then it will uh go
13:03 - out of the loop it will exit from the
13:05 - loop in that case you will we will use
13:07 - breake statement right so what is the
13:09 - meaning of using break breake statement
13:11 - I hope you know now it is clear to you
13:13 - we can only use this with loops or
13:16 - switch we can we cannot use with if and
13:18 - else here see don't say that ma'am
13:21 - within this if you are using breake yeah
13:23 - with this if I'm using brake But
13:25 - ultimately this breake is what within
13:28 - this Loop if you will not write any Loop
13:31 - and if you are simply writing if and
13:33 - there if you're writing break then it
13:34 - will give you error so I think that's it
13:36 - about break if you have any doubt in
13:37 - this break then you can ask me in
13:39 - comment section so now in next video
13:40 - I'll talk about continue statement in C
13:42 - so now I'll see you in the next video
13:43 - till then bye-bye take
13:49 - care

Cleaned transcript:

in the series of learning programming in c we have discussed Loops in C for while and do while loop in the previous video I have talked about proper the differences among these three Loops four while and doy Loop right now we are left with two most important topics or you can say that control statements in C break and continue these are very important in C these are control statements or you can say these are break and continue these are what keywords in C and keywords we always write in small letters that is why we write break and continue in small letters if you write in capital letter then it will give you error these are also known as control statements right why we use now in this video I'll talk about break statements and see everything about break statement why we use break statement in your in our program when to use these statements right and we will see with the help of a program also like when you use break statement in your program then then what what process what how the program would be executed what output you will get right and we'll also see some important important points about this break statement so now what is break in C it is a control statement in C or you can say break is a keyword in C that is why we write in in in small letters right and if you want to exit from the loop early then we use break statement that whatever I'm saying uh that you will come to know that you will get it better when I'll write a program right now you need to take care one more thing about break you can use this break with loops and and switch statement this thing I have discussed you can watch that video in the side button how to use break in switch statement and when you use breake in switch then what is the meaning of using breake in switch statement this thing we have already discussed now we will discuss how to use this breake in Loops see we can use break within Loop or switch it means if you in any program if you use it uh suppose within if else block no Loop and no switch is there then it will give you error if in a simple program suppose addition of two numbers and there you are writing just break then then it will give you error right so you can use this within Loops either within Loops or switch that you need to take care right and small letter you have to write it in small letters now have to use it in Loops when whenever a break keyword will be encountered in that Loop then control will automatically exit from the loop right and what statement would be executed the statement you write immediately after the loop those statements would be executed right now whatever I'm saying let us discuss it with the help of a program suppose a program is uh I want to enter some integers right like it will ask you the program will ask you enter integer I'm entering one then two then five then six then seven right suppose I want to execute this program only five times means I want to know I want that user should enter only five numbers and then it will print some of all these five numbers right here it will print some of these five numbers right and I want one condition I want to put if the user enter any negative number suppose minus one2 or any negative number at that time it is going to exit from the loop means after that once you enter negative number see I want to know uh that user should enter five numbers suppose I'm entering one then two then minus 5 then it will not ask for two other entries it will exit from the loop and it will print some of these two numbers only 2 + 1 3 right so this I want to implement in a program I know how many iterations exactly five iterations I want means exactly I want user should enter five numbers so I know exactly how many iterations five iterations so here we can use four Loop right we can we'll also write up this program with Y Loop first of all write down this with four Loop see now first we will take any number any variable where we are going to take these numbers and I variable for this Loop now I'm writing a four for I is equal to 1 initialization I less than equal to 5 and I ++ five number I want now here in this I'm ask asking from the user enter a number and I'm take I'm going to take the input with scanf I hope you know percentage D what you write percentage D and address of where I want I'll store this in this variable a right now if the user enter any negative number you have to put this condition also so now what I can write here if this a is because number is going to store in this variable so now the a is negative now so a is less than zero if a is less than zero then simply write down break within this if you can use curly braces also but I'm only writing within the if I'm only writing break that is one step statement so no need to write down these curly braces just for reability purpose I'm writing curly braces break is within this if otherwise it will print sum so one more variable I'm taking sum and sum plus a right otherwise it is it is going to repeat till 5 right and after that I'll print the sum percentage D and sum that's it right and here also uh if you you will not declare the sum it will give you error and at starting I'm initializing this with the zero because sometimes it will take some garbage value at starting and after that it will add these numbers or it will give you some other output so better to initialize the sum with zero right now I hope you can write down those uh header files and void main I'm not writing the complete program now control will go the first line to the main function so in memory we have declared three variables right and in Su I have zero Within These we don't have anything now for loop I is equal to 1 so I is 1 I less than equal to 5 yes condition is true control will enter into this Loop now on output screen suppose this is your output screen what you will get the message enter a number now enter a number suppose I'm entering one right so now scan F I have entered number one it is going to check this condition is this a because in a now I have one is 1 less than zero no so it is not going to ENT enter into this four Loop so it will go to this statement sum is equal to sum plus a now sum is 0 0 + 1 is one so now in sum that value would be assigned to sum now sum becomes one right now we we are not going to exit from the loop now what I ++ now I becomes two condition is true again enter into this loop again it will ask enter a number now suppose you are entering number two or I'm entering number five is this condition true no so again sum plus a would be assigned to sum now sum is 1 now a is five now 5 + 1 is 6 so that would be assigned to sum that is sum becomes now six again I ++ right now again I ++ is now three so three is less than five so it will ask again enter a number and now suppose I'm entering number two right so two is not less than zero so program gr will run till five so five time it will ask again suppose I value is five so five times it will ask right and uh we have again I ++ 6 6 is not less than five so it will out of the loop it will go out of the loop out of the loop we have written print F sum sum it is going to print now what is sum of these numbers 18 so now it will print what 18 right now see suppose here after entering these three numbers whenever it will ask enter a number I'm entering minus 10 now see minus 10 it is going to check this condition a is less than zero in a I have now minus 10 right is this less than zero yes it is true now it is going to enter into this if statement now in if we have written break break means it will throw you out from the loop from any Loop you have you have written this in for Loop so it is going to throw you out from this for Loop so here once break is encountered directly control will go out of the loop it is not going to execute any other statement which is written after this break in this Loop so now it is going to print just sum sum is what sum of these three numbers only right and what is this8 eight is it it is going to print so now I hope you know I want that Loop should be executed till five times but this is what early exit from the loop only three times this is going to be executed after that it is going to be out of the loop that is why if you want early exit from the loop then we use break statement one uses this one second one is we don't know how many times I want to uh execute this Loop infinite times maybe uh at one time I just want to enter five numbers and print the sum maybe second time time I want to sum 10 numbers maybe third time I want to sum 15 numbers I don't want I don't uh you know know the exactly the number of iterations right so in that case we cannot use for loop it's better to use while loop right yeah we can use for Loop no need to put any condition then it would be at what infinite Loop and using break you can uh break this loop at any time but in this case we use better to use while loop so let us see that program so here I'm taking two variable because this would be an infinite Loop so I'm not taking any uh that uh variable for the loop like I or i++ I'm not doing any i+ Plus or I minus minus because it should be an infinite Loop right while one this condition is true so it will ask from the user enter a number so I'm going to enter suppose one now in a I have one is a less than zero no so it is sum plus a sum is zero this is 1 0 + 1 is 1 so it is going to assign into this sum that is sum becomes now one again again it will check the condition while one because it is always true again it will ask a number and suppose I'm entering suppose two is this condition true no so sum plus a now a is 2 2 + 1 3 so that would be a sign is in sum right in finite time it is going to ask you 10 15 uh 20 100 times until you enter a negative number suppose I'm I'm after entering two third time it will ask you enter number and there I'm entering minus 5 this condition is true a is less than zero yes now it will execute this break statement break means it will throw you out from the loop this is Body Of The Loop so the control will immediately will go where the statements which is written immediately after the loop we have written this printf sum is equal to percentage D sum so it is going to print three next time maybe you can enter 10 numbers and after that you can enter negative number if you will not enter negative number then it is not going to end right it is going to be an infinite Loop because you have done hard coding here while one this is always true so to break this one you have to enter a negative number at that time it will print the sum of the numbers you have entered 5 10 or 15 numbers right you can write down this with do while also that say that is what exercise for you you have to write down this program with do while and you can write down that program you can copy paste that program in comment box section or you can uh send me that program on my Instagram account also Instagram messages also right so now I hope you got what is this meaning of using break statement in C right in some programs when we write programs later then we will ask after executing something we will ask do you want to continue and if continue uh then press y if don't want to continue press n and and if you have pressed n or if suppose you have pressed zero then it will uh go out of the loop it will exit from the loop in that case you will we will use breake statement right so what is the meaning of using break breake statement I hope you know now it is clear to you we can only use this with loops or switch we can we cannot use with if and else here see don't say that ma'am within this if you are using breake yeah with this if I'm using brake But ultimately this breake is what within this Loop if you will not write any Loop and if you are simply writing if and there if you're writing break then it will give you error so I think that's it about break if you have any doubt in this break then you can ask me in comment section so now in next video I'll talk about continue statement in C so now I'll see you in the next video till then byebye take care
