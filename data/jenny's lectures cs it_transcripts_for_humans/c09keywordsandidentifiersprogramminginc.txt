With timestamps:

00:00 - in the series of learning programming in
00:02 - c today in this video i am going to talk
00:04 - about identifiers and keywords we have
00:07 - already discussed what are constants
00:09 - types of constants what are variables in
00:11 - c language now we will see what are
00:13 - keywords and see what are identifiers in
00:15 - c because sometimes um they can ask you
00:17 - an exam like a difference between
00:19 - identifier and
00:20 - keyword so we will see the difference
00:22 - also and some other important points
00:24 - also about keywords and identifiers
00:27 - right
00:28 - here i am talking about a nsic american
00:30 - national standard institute because a
00:33 - nsi has standardized c in 1989. i have
00:37 - already discussed this in the
00:39 - first video when we were discussing
00:41 - introduction to programming and
00:42 - introduction to c language right so now
00:45 - first of all we'll discuss about
00:46 - keywords
00:48 - in c
00:49 - we have 32 keywords now what are these
00:51 - keywords see keywords are some reserved
00:54 - words you can say keywords or reserved
00:56 - words or predefined words
00:59 - see in
01:00 - see we have predefined functions like
01:02 - printf printf means that is already been
01:05 - defined in the c library and to include
01:08 - that thing to
01:10 - tell the meaning of that printf to
01:11 - compiler we include what header file
01:13 - hash include stdio.h right because the
01:16 - meaning of that printf is already
01:18 - defined in that library
01:20 - right we cannot change that meaning
01:23 - same way there are some words also
01:25 - meanings are already defined
01:28 - in c
01:29 - right so those words are called keywords
01:32 - reserved words predefined words and how
01:35 - many keywords are there in c 32 keywords
01:38 - in a and s i c there are 32 keywords
01:41 - right
01:42 - now see
01:43 - what is use of keywords in c c when you
01:46 - write a program we will we write what
01:48 - instructions program is what sequence of
01:50 - instructions we write some instructions
01:53 - some declaration instruction arithmetic
01:55 - instructions or many instructions
01:57 - so to form those instructions
02:00 - we use keywords we use identifiers
02:03 - we will discuss later when we'll see
02:04 - programs like these are keywords these
02:06 - are identifier yeah i'll give some
02:08 - example also in this video but you can
02:10 - say keywords are basic building blocks
02:13 - for writing a c program for building
02:16 - basic building blocks for writing
02:17 - instructions in a c program
02:20 - like 32 keywords so some examples are
02:23 - like int
02:24 - int is what a keyword
02:26 - this meaning is already defined like it
02:28 - is an integer data type data it is for
02:31 - data type
02:32 - float it is also a keyword
02:34 - we cannot change their meanings
02:37 - and here we can say break
02:40 - go to
02:41 - these are keywords if
02:44 - for
02:45 - continue
02:48 - while
02:49 - do
02:50 - so these are some keywords i have
02:52 - written i haven't written all the 32
02:54 - keywords but you don't have to remember
02:56 - like
02:56 - at this time at this point of time like
02:58 - these are 32 keywords yeah you can
03:00 - remember some keywords but when we will
03:02 - be familiar with the programming in c
03:04 - when we'll see later videos when we used
03:07 - to write down programs then
03:08 - automatically you will come to know
03:10 - these are keywords you don't have to
03:11 - memorize you just just have to
03:13 - understand when we will write a program
03:15 - but yeah these are some you can say few
03:17 - keywords and every keyword is having
03:19 - their own meaning
03:22 - the meaning i'll tell you uh
03:24 - when we'll discuss the program when
03:26 - we'll write programs at that time we'll
03:28 - discuss what is meaning of this double
03:30 - what is meaning of continue why i am
03:31 - writing for why we are writing go to
03:33 - statement why you are writing switch
03:35 - statement that will discuss so every
03:37 - keyword is having its own meaning and
03:40 - keywords cannot be used as identifiers
03:44 - yeah and if i will discuss then you will
03:46 - come to know this point in previous
03:47 - video i have told you when we were
03:48 - discussing variables in c the rules you
03:51 - cannot use keyword
03:53 - as a variable name
03:55 - right so that's exactly i want to say
03:57 - here keywords cannot be used as as
03:59 - identifiers right so they are having
04:01 - fixed meanings and their meaning cannot
04:03 - be changed during the program you cannot
04:05 - change their meaning fine
04:08 - and keywords are see you can see here
04:10 - all the keywords are in
04:13 - small letters c c is what case sensitive
04:16 - here you write in and you write like
04:19 - int
04:21 - intent these are having different
04:23 - meaning you cannot write like this
04:26 - keyword you can all you can always write
04:29 - keyword in small words or i would rather
04:32 - say it is must to write keywords in your
04:35 - program when you write when you use
04:37 - keywords in program it is must to write
04:39 - keywords in lowercase letters see all
04:41 - the keywords are in lowercase letters
04:43 - right
04:44 - now let us see what are identifiers
04:46 - identifiers are
04:48 - these are predefined reserved words
04:51 - identifier
04:52 - refers to a name of a variable function
04:55 - arrays structure union right see
04:58 - identifier as the name suggest i had to
05:00 - identify something
05:02 - if someone has to identify me means you
05:04 - can say my identity is my name
05:08 - you can call my name that is you can say
05:10 - identifier for me so when we use
05:12 - variables in various variables in a
05:14 - program functions so those are having
05:15 - their names also that is why we call as
05:18 - the name of a variable is identifier
05:20 - name of a function we refer as
05:21 - identifier name of any array structure
05:24 - union because those are user defined we
05:26 - define their names that is why these are
05:29 - known as identifiers and
05:32 - if user defined their names if these are
05:35 - user defined words then obviously there
05:37 - should be some rule
05:39 - for these to define identifier to write
05:41 - identifier
05:43 - to construct the name of identifier and
05:45 - what are those rules first rule is
05:48 - identifier consists of you can say a
05:50 - sequence of letters and numbers and
05:53 - underscore is also allowed no other
05:56 - special symbols are allowed in
05:57 - identifier
05:59 - right suppose i am writing here like
06:01 - this
06:02 - sum
06:04 - yeah this is an identifier this is name
06:06 - of a variable
06:07 - so this is valid
06:09 - it is having only letters
06:11 - sum
06:13 - one two this is also valid it is having
06:15 - letters and digits only that is also
06:17 - allowed underscore is also allowed if i
06:19 - write some underscore 12 this is also
06:21 - allowed and the first letter of an
06:24 - identifier is always
06:27 - beer you can say this alphabet or
06:29 - underscore is also allowed in some
06:31 - compilers so this is valid this is valid
06:34 - but you write 1 2 sum this is invalid
06:36 - because the first letter is
06:38 - what number this is not allowed
06:41 - right
06:42 - next you can say any special symbol is
06:44 - also not allowed like you cannot say
06:45 - dollar sum
06:46 - you cannot write some dollar dwell
06:50 - you cannot write some space 12 this is
06:52 - invalid this is invalid this is invalid
06:54 - right
06:55 - yeah but this is valid
06:57 - you have to tell me this is valid or not
06:59 - underscore sum underscore 12
07:03 - and one is
07:04 - sum
07:05 - two underscore are there
07:07 - continuous and two l
07:10 - these two
07:12 - you have to tell me in comment box this
07:14 - is allowed or not right
07:16 - next is what keywords cannot be used as
07:19 - identifiers we can we cannot use like
07:22 - int
07:23 - and here i'm using
07:25 - uh suppose float
07:28 - you can use int a a is name of variable
07:30 - that is fine this is identifier this is
07:33 - what keyword this is keyword but here in
07:35 - declaration we cannot use another
07:37 - keyword this is invalid
07:39 - right
07:40 - next is the length of identifier
07:43 - is what ah
07:45 - according to this ansi
07:49 - 31 characters first 31 characters are
07:52 - significant right and here we can use
07:55 - uppercase letter as well as lowercase
07:57 - letters in keywords we can only use
08:00 - lowercase letters no uppercase letters
08:02 - are allowed
08:03 - but here
08:04 - uppercase and lowercase letters are
08:06 - treated differently like if you are
08:09 - writing sum and you are writing s-u-m
08:12 - this is different this is different if
08:13 - you are writing s-u-m
08:15 - this is also different these are three
08:16 - names
08:17 - right
08:18 - and if you write down a name like this
08:21 - are referred as name of function also so
08:23 - you can also write if you are creating a
08:25 - function sum
08:26 - how to declare a function how to initial
08:29 - how to define it that will discuss in
08:31 - later videos so you can also write like
08:34 - this
08:35 - sum and angular bracket this is what
08:37 - function
08:38 - or if you i want to write down the data
08:40 - type that also you can write this is
08:42 - what you can say declaration of a
08:43 - function yeah this is also identifier
08:46 - and this is what keyword word is also a
08:47 - keyword right
08:51 - and suppose if you write sum
08:54 - dot 12 this is also invalid identifier
08:58 - if you write add the rate sum this is
09:00 - also invalid if you write like this one
09:03 - if i write like this
09:05 - in brackets i am writing sum this is
09:08 - also invalid not allowed and if you
09:11 - write like
09:13 - average this is valid you can say
09:15 - department or you can say department
09:18 - name this is also valid but if you write
09:20 - like this
09:22 - department
09:24 - hyphen
09:25 - name this is not underscore this is
09:27 - invalid this is you can say hyphen so
09:29 - this is not allowed
09:31 - if you uh write like
09:33 - here percentage
09:35 - max this is also invalid i hope you got
09:38 - now the basic idea about identifiers and
09:40 - keywords so i hope uh you can also write
09:43 - down the differences between identifier
09:45 - and keywords because i have already
09:47 - discussed what are the differences here
09:49 - fine and if you want me to provide notes
09:52 - then you can also tell me in the comment
09:53 - box i'll put the notes like the pdf file
09:57 - of the notes in the description box of
09:58 - every video or maybe in a separate video
10:01 - so now in the next video we are going to
10:03 - discuss what are data types in c so i'll
10:06 - see in the next video till then bye take
10:07 - care

Cleaned transcript:

in the series of learning programming in c today in this video i am going to talk about identifiers and keywords we have already discussed what are constants types of constants what are variables in c language now we will see what are keywords and see what are identifiers in c because sometimes um they can ask you an exam like a difference between identifier and keyword so we will see the difference also and some other important points also about keywords and identifiers right here i am talking about a nsic american national standard institute because a nsi has standardized c in 1989. i have already discussed this in the first video when we were discussing introduction to programming and introduction to c language right so now first of all we'll discuss about keywords in c we have 32 keywords now what are these keywords see keywords are some reserved words you can say keywords or reserved words or predefined words see in see we have predefined functions like printf printf means that is already been defined in the c library and to include that thing to tell the meaning of that printf to compiler we include what header file hash include stdio.h right because the meaning of that printf is already defined in that library right we cannot change that meaning same way there are some words also meanings are already defined in c right so those words are called keywords reserved words predefined words and how many keywords are there in c 32 keywords in a and s i c there are 32 keywords right now see what is use of keywords in c c when you write a program we will we write what instructions program is what sequence of instructions we write some instructions some declaration instruction arithmetic instructions or many instructions so to form those instructions we use keywords we use identifiers we will discuss later when we'll see programs like these are keywords these are identifier yeah i'll give some example also in this video but you can say keywords are basic building blocks for writing a c program for building basic building blocks for writing instructions in a c program like 32 keywords so some examples are like int int is what a keyword this meaning is already defined like it is an integer data type data it is for data type float it is also a keyword we cannot change their meanings and here we can say break go to these are keywords if for continue while do so these are some keywords i have written i haven't written all the 32 keywords but you don't have to remember like at this time at this point of time like these are 32 keywords yeah you can remember some keywords but when we will be familiar with the programming in c when we'll see later videos when we used to write down programs then automatically you will come to know these are keywords you don't have to memorize you just just have to understand when we will write a program but yeah these are some you can say few keywords and every keyword is having their own meaning the meaning i'll tell you uh when we'll discuss the program when we'll write programs at that time we'll discuss what is meaning of this double what is meaning of continue why i am writing for why we are writing go to statement why you are writing switch statement that will discuss so every keyword is having its own meaning and keywords cannot be used as identifiers yeah and if i will discuss then you will come to know this point in previous video i have told you when we were discussing variables in c the rules you cannot use keyword as a variable name right so that's exactly i want to say here keywords cannot be used as as identifiers right so they are having fixed meanings and their meaning cannot be changed during the program you cannot change their meaning fine and keywords are see you can see here all the keywords are in small letters c c is what case sensitive here you write in and you write like int intent these are having different meaning you cannot write like this keyword you can all you can always write keyword in small words or i would rather say it is must to write keywords in your program when you write when you use keywords in program it is must to write keywords in lowercase letters see all the keywords are in lowercase letters right now let us see what are identifiers identifiers are these are predefined reserved words identifier refers to a name of a variable function arrays structure union right see identifier as the name suggest i had to identify something if someone has to identify me means you can say my identity is my name you can call my name that is you can say identifier for me so when we use variables in various variables in a program functions so those are having their names also that is why we call as the name of a variable is identifier name of a function we refer as identifier name of any array structure union because those are user defined we define their names that is why these are known as identifiers and if user defined their names if these are user defined words then obviously there should be some rule for these to define identifier to write identifier to construct the name of identifier and what are those rules first rule is identifier consists of you can say a sequence of letters and numbers and underscore is also allowed no other special symbols are allowed in identifier right suppose i am writing here like this sum yeah this is an identifier this is name of a variable so this is valid it is having only letters sum one two this is also valid it is having letters and digits only that is also allowed underscore is also allowed if i write some underscore 12 this is also allowed and the first letter of an identifier is always beer you can say this alphabet or underscore is also allowed in some compilers so this is valid this is valid but you write 1 2 sum this is invalid because the first letter is what number this is not allowed right next you can say any special symbol is also not allowed like you cannot say dollar sum you cannot write some dollar dwell you cannot write some space 12 this is invalid this is invalid this is invalid right yeah but this is valid you have to tell me this is valid or not underscore sum underscore 12 and one is sum two underscore are there continuous and two l these two you have to tell me in comment box this is allowed or not right next is what keywords cannot be used as identifiers we can we cannot use like int and here i'm using uh suppose float you can use int a a is name of variable that is fine this is identifier this is what keyword this is keyword but here in declaration we cannot use another keyword this is invalid right next is the length of identifier is what ah according to this ansi 31 characters first 31 characters are significant right and here we can use uppercase letter as well as lowercase letters in keywords we can only use lowercase letters no uppercase letters are allowed but here uppercase and lowercase letters are treated differently like if you are writing sum and you are writing sum this is different this is different if you are writing sum this is also different these are three names right and if you write down a name like this are referred as name of function also so you can also write if you are creating a function sum how to declare a function how to initial how to define it that will discuss in later videos so you can also write like this sum and angular bracket this is what function or if you i want to write down the data type that also you can write this is what you can say declaration of a function yeah this is also identifier and this is what keyword word is also a keyword right and suppose if you write sum dot 12 this is also invalid identifier if you write add the rate sum this is also invalid if you write like this one if i write like this in brackets i am writing sum this is also invalid not allowed and if you write like average this is valid you can say department or you can say department name this is also valid but if you write like this department hyphen name this is not underscore this is invalid this is you can say hyphen so this is not allowed if you uh write like here percentage max this is also invalid i hope you got now the basic idea about identifiers and keywords so i hope uh you can also write down the differences between identifier and keywords because i have already discussed what are the differences here fine and if you want me to provide notes then you can also tell me in the comment box i'll put the notes like the pdf file of the notes in the description box of every video or maybe in a separate video so now in the next video we are going to discuss what are data types in c so i'll see in the next video till then bye take care
