With timestamps:

00:00 - hi guys welcome back today's topic is
00:02 - dice try algorithm so in this video I'm
00:05 - going to discuss with you the working
00:07 - principle of my algorithm and then what
00:09 - are the drawbacks of this algorithm okay
00:12 - so the extra algorithm is basically
00:14 - single source shortest path problem
00:21 - singles single source shortest path
00:24 - problem see the name suggests single
00:27 - source in this algorithm one source is
00:30 - given you're supposed to ask to find out
00:33 - the shortest path maybe and you are
00:34 - supposed to consider maybe with 0 as a
00:37 - source vertex and from 0 you are
00:39 - supposed to find out the shortest path
00:41 - to all the vertices or maybe you are
00:45 - supposed to you know ASCII 2 is the same
00:49 - two is the source and you're supposed to
00:51 - find out the shortest path from 2 to 1 2
00:53 - 2 4 2 2 a 2 2 5 2 2 6 you know like that
00:56 - to all other vertices so it is basically
00:59 - single source shortest path problem from
01:02 - one source you are supposed to find out
01:04 - shortest path to all other vertices ok
01:08 - now we'll discuss the working principle
01:10 - of this algorithm and after that I will
01:12 - show you the drawback of this algorithm
01:14 - okay see suppose this is a graph and
01:18 - you're supposed to find out the shortest
01:20 - path and source what X that is given to
01:25 - you is 0 0 as a source vertex maybe you
01:30 - can consider 5 as a source vertex and
01:32 - start your algorithm you can consider it
01:35 - as source vertex or maybe in question
01:37 - you are given 6 consider 6 as a source
01:39 - vertex then you are supposed to consider
01:41 - 6 as a source worst vertex and then you
01:43 - start the algorithm but here you'll
01:46 - consider 0 as a source vertex ok now
01:51 - first step is just you know mention the
01:57 - distance of this all these vertices from
02:00 - this vertex C we can we can easily say
02:03 - the distance of you know 0 to 0 the
02:07 - source vertex to source vertex 0 a
02:09 - source vertex that is why I am starting
02:11 - from this
02:13 - starting our algorithm from this vertex
02:14 - only so from zero to zero or distances
02:17 - zero and at first step the distance of
02:22 - all other vertices will be infinity
02:25 - infinity infinity like that we don't
02:30 - know what is the distance what is the
02:33 - shortest path okay now let us start we
02:36 - are going to start from zero from zero
02:40 - to how many vertices are directly
02:43 - connected to this this one and this four
02:45 - so we can find out the distance from 0
02:47 - to 1 and 0 to 4 ok now how this distance
02:51 - is to be calculated like this suppose we
02:55 - are we are considering 0 to 1 we are
02:58 - calculating this distance so we'll
03:00 - consider 0s U and V sorry 1 as we so
03:07 - what is the formula see this is the
03:10 - formula distance of U plus cost of u to
03:17 - V and next we have distance of 3 C
03:23 - distance of U here we have 0 as you the
03:27 - distance of U is 0 plus cost of u to V V
03:33 - is the destination from 0 to 1 we are
03:36 - going to you know that find out the
03:39 - distance now here V is 1 the cost of
03:42 - edge u 2 V what is that cos 2 that is 4
03:46 - okay and distance of V is starting May
03:50 - we don't know what is the distance of V
03:51 - that is because this is infinity so
03:55 - distance of these infinity the formula
03:58 - is if distance of U plus cost of u 2 V
04:03 - is less than D of V in that case what
04:10 - happens you see in this case 0 plus 4 is
04:13 - 4 & 4 is less than infinity okay so we
04:17 - will update this infinity to 4 we will
04:20 - change this infinity and will
04:22 - right here four because four is less
04:24 - than infinity fine and obviously we are
04:27 - calculating the shortest distance so if
04:32 - this is true then what happens the
04:36 - distance of V distance of V common a
04:41 - change curlier and distance of VK home a
04:43 - happening distance of U plus cost of you
04:47 - two this is the main formula to
04:54 - calculate the shortest distance okay now
04:58 - again find out from zero to four here
05:01 - this one is zero now sorry zero is you
05:04 - and now V is this 4 okay now from zero
05:10 - to four what is the distance distance of
05:13 - U is zero zero plus cost of this u - V
05:17 - edges eight zero plus eight is eight and
05:20 - it is less than infinity that is why we
05:23 - update it and we'll write here eight
05:28 - okay now this one takes is now selected
05:33 - a vertex or you can see visited vertex
05:35 - we have selected this zero now next is
05:40 - now take this vertex is already selected
05:44 - we have already find out the shortest
05:46 - path from 0 to 1 and 0 to 4
05:50 - okay now this one is selected just leave
05:54 - it now check out the wall the remaining
05:57 - distance distance this one is 8 this one
05:59 - is 4 and every one every other distances
06:02 - infinity infinity and infinity now
06:04 - select the shortest distance shortest
06:07 - distance out of these is 4
06:09 - okay now we will select this vertex this
06:13 - vertex is now selected okay
06:18 - now see this vertex is now selected from
06:25 - this vertex we can update this distance
06:29 - from 1 to 2 we can update from 1 to 4
06:31 - and we can go from 1 to 0
06:34 - will not update this distance Y say
06:36 - because 0 is already selected so once of
06:39 - what X is already visited or selected
06:40 - will not update the distance of that
06:42 - vertex
06:43 - ok so from 1 we will update this
06:46 - distance and this distance and when you
06:49 - will update if this bu plus cost is less
06:52 - than then only you will update now find
06:55 - out from 1 to 2 now in this case this is
07:01 - you and this one is we now find out this
07:04 - distance distance of you distance of U
07:08 - is 4/4 plus cost of you to the coast of
07:12 - u 2 vs 8 and distance always infinity
07:17 - and this one is less than infinity less
07:20 - than infinity in that case you'll update
07:22 - this distance so rather than this
07:26 - infinity will right here what this
07:28 - there's 4 plus 8 is 2 then ok like this
07:35 - we'll find out all other distances now
07:39 - from this to this find out distance of U
07:43 - is 4 4 plus 11 is 15 and this this
07:48 - distance of ways it okay but it is less
07:52 - than this 15 though we will not update
07:54 - this distance because if this plus is
07:58 - less than 2 you or DV then only we will
08:00 - update this but 11 plus 4 15 15 is
08:03 - greater than 8 then we will not update
08:05 - this one ok now this is already selected
08:07 - a 0 is already selected will leave this
08:10 - nodes now out of remaining nodes which
08:14 - node is having the shortest distance 8
08:17 - infinity infinity infinity infinity 2l
08:20 - and infinity it is the shortest okay it
08:24 - is a less than or you can say the least
08:26 - distance you will select this for ok
08:31 - well select this this one now from this
08:34 - vertex we can update the distance of 4 2
08:37 - 5 4 2 8 4 2 1 4 2 0 but 4 2 0 and 1 will
08:41 - not update because 0 & 1 dot or are
08:43 - already selected or you can say visited
08:45 - ok so not update distance of these
08:47 - vertices
08:48 - elaborate four to five four to eight
08:50 - only now find out that this distance
08:52 - four to five distance now here this one
08:54 - is you and this one is the distance of
08:57 - you is eight plus cost of you to the u
09:01 - to V is 1 and this distance of ways
09:05 - infinity and this one is less than
09:07 - infinity 8 + 1 9 less than here then we
09:11 - will update and this one is 9 okay now
09:16 - find out this distance 8 plus this Coast
09:19 - is 7 7 plus 8 is 15 15 is less than
09:23 - infinity though we will update this
09:25 - distance okay this one is 15 okay now we
09:30 - have already updated now this one is
09:33 - selected this one and did this one of
09:35 - leave these nodes and out of these
09:38 - remaining nodes which node is having the
09:40 - shortest distance 9/15 to L infinity
09:43 - infinity infinity 9 is the shortest one
09:45 - then we will select this 9 now 5 is
09:48 - selected vertex from 5 we can update 5
09:52 - to 6 5 to 8 distance okay we will not
09:56 - update 5 to 4 because this one is
09:57 - already selected
09:59 - ok now find out this distance 5 to 6
10:02 - this one is now view and here now this
10:04 - one is we add this time ok 9 distance of
10:08 - U is 9 9 plus 2 11 11 is less than
10:11 - infinity we will update this ok find out
10:14 - this distance 9 9 Plus this coast is 6 9
10:18 - plus 6 is 15 already 15 no need to
10:21 - change ok leave it any other we cannot
10:24 - update this one is already updated and
10:26 - only 6 and 5 are directly connected
10:28 - connected to the selected node so we
10:31 - have already updated this 11 and this 15
10:34 - okay
10:35 - now just leave these selected nodes and
10:39 - out of this unvisited nodes which is
10:43 - having the shortest distance out of 11
10:46 - 15 to L infinity and infinity 11 is the
10:49 - shortest to select this one select 6
10:53 - okay now from six we can update the name
10:58 - distance of those nodes which are
10:59 - directly connected that is
11:01 - three two will not update this one
11:04 - because this one is already selected
11:05 - okay we will not to visit this vertex
11:07 - again you can say it is already selected
11:10 - or visited from six to seven now this
11:13 - one is you and this one is we find out
11:16 - this distance distance of you is 11 plus
11:19 - 10 10 that is 21 21 is less than
11:22 - infinity we will update this okay this
11:24 - one is 21 11 plus 14 that is 25 25 is
11:32 - less than infinity we will update this
11:34 - that is 25 okay this one update this one
11:39 - also from check check out 11 plus this
11:42 - edges having distance 4 11 plus 4 is
11:45 - what 15 fine but here 2 is already
11:49 - having 12 and 15 is greater than 12 so
11:54 - we will not update this distance this
11:55 - will leave it as it is okay will not
11:58 - update this one any other you can update
12:01 - no ok now out of this at 4 unvisited
12:05 - node which is having the shortest
12:07 - distance 15 12 25 and 20 1 2 well as the
12:12 - short as 12 is the minimum distance will
12:14 - select this 2 n this node will be
12:19 - selected from this node you can update
12:22 - this distance and this one we cannot
12:25 - update this one because 6 is already
12:27 - updated and already visited we cannot
12:29 - update this distance because 1 is
12:31 - already visited find out from 2 to 8 now
12:36 - this one is this one will act as you and
12:40 - this one will act as V distance of U is
12:43 - 12 12 plus 2 is 14 and distance of V is
12:48 - 15 and 14 is less than 15 so we will
12:50 - update this one this one will become 14
12:54 - ok now next is update this one also 12
12:59 - distance of U is 12 this ghost of this u
13:02 - 2 V is 7 12 plus 7 is 19 and 19 is less
13:07 - than 25 so we will update this one this
13:10 - would become 19 okay
13:13 - now you'll not update this one will not
13:15 - update this one it's done now out of
13:18 - these three unvisited modes which is
13:22 - having short test distinct this one is
13:23 - having 14 this one is having 19 this one
13:25 - is having 21 then we will select this 14
13:28 - because this is having the minimum
13:30 - distance vector we will select this 8
13:35 - now from 8 you can up how many nodes are
13:39 - directly connected this 5 this for this
13:42 - - but will not update these this or this
13:45 - distance because 2 4 and 5 are already
13:48 - visited ok so we cannot update distance
13:52 - of any other node 3 or 7 car you cannot
13:54 - update from this hey leave it as a tease
13:58 - ok this one has selected now out of
14:01 - these two which one is having the
14:04 - shortest one you can show the minimum
14:06 - distance factor that is 19 and 20 or 19
14:09 - then you will select this 3 3 you can
14:15 - update this distance only because these
14:17 - 2 are already selected then 19 plus 9
14:21 - what is this 28 I guess 28 but 21 is
14:26 - less than 28 so we will not update this
14:28 - one ok now only one node is there you
14:31 - will select 7 only and this one is 21
14:35 - only because we will not update these
14:37 - distances ok so using this formula this
14:41 - is the working principle of destra
14:43 - algorithm ok see if I ask you what is
14:47 - the shortest distance from 0 to 3 then
14:50 - the answer would be this 19 what is the
14:54 - shortest distance from 0 to 8 then the
14:57 - answer would be 14 what is the shortest
15:01 - distance from 0 to 6 that is 11 shortest
15:04 - distance from 0 to 7 that is 21 from 0
15:09 - to 5 9 from 0 to 4 we have 8 from 0 to 1
15:13 - we have 4 from 0 to 2 we have shortest
15:18 - distance is this 12 so this is the
15:22 - working principle of Christ algorithm
15:23 - now see this diester algorithm works on
15:26 - undirected graph and directed graph as
15:30 - well okay now we'll take one more
15:31 - example of directed graph okay now let
15:42 - us say we have this graph which one is
15:45 - directed and related to the RAF and
15:46 - we're supposed to find out the shortest
15:48 - path from the source vertex and source
15:51 - vertex is a to all other vertices okay
15:54 - let us suppose a source vertex may be in
15:57 - question you are given that consider see
15:59 - as the source vertex okay now in the
16:02 - previous case we have already updated
16:04 - the distance in this graph only but in
16:07 - this case I will draw on table and we
16:08 - will update the distance in that table
16:10 - only okay see now we will draw a table
16:16 - is B C D and these five vertices we have
16:23 - starting may you're right that vertex
16:26 - which is the source vertex suppose in
16:28 - question you are given consider B as a
16:30 - source vertex okay in that case you
16:33 - would have written here B and here you
16:36 - can write a C D and E like that only in
16:39 - any order but the source what X must be
16:42 - written in at first only okay here we
16:45 - have consider source vertex is hey hi
16:54 - okay now the very first step is just the
17:01 - same thing we have already done in
17:03 - previous example that is 0 to 0
17:05 - distances so the a to a distance would
17:07 - be 0 and back the other remaining
17:09 - distances would be infinity so the
17:11 - distance of this this one is 0 this one
17:14 - is infinity infinity infinity is
17:16 - infinity this is the first step the
17:18 - stance of source to source would be 0 ok
17:21 - now out of these which one is having the
17:27 - minimum distance vector that is 0 okay
17:30 - so we'll select this will select this 0
17:36 - and the vertex is a okay now from a -
17:43 - how many vertices you can find out the
17:45 - distance ay to B and a - see see there
17:51 - is no that edge from A to E there this
17:54 - edges from E to E so we cannot update
17:56 - from A to E we can update only a to see
18:00 - and a to B now find out the distance
18:03 - from A to B distance of a is zero same
18:08 - formula distance of U plus cost of u to
18:13 - V and distance of B if this one is true
18:21 - then we will update distance of V to
18:26 - distance of U plus Coast ou2 we use this
18:31 - formula okay now find out from A to B
18:34 - distance of a is 0 0 Plus this coast is
18:38 - 10 okay and 10 is distance of B is what
18:42 - infinity 10 is obviously less than
18:44 - infinity we will update here 10 only
18:47 - what about C A to C 0 plus 5 is less
18:52 - than infinity we will update here 5 only
18:55 - D will not update to e will not update
18:58 - because there is no direct edge from A
19:00 - to D and a - yeah okay this one is done
19:04 - this one is already selected we will not
19:06 - write this in another in the next row
19:10 - now out of these four which one is
19:12 - having the minimum distance factor that
19:14 - is 5 10 or infinity or infinity that is
19:18 - 5 then we will select this Phi ok that
19:23 - is see see what X has been selected now
19:28 - from C they can update distance of C to
19:31 - B C - B and C to e ok now find out the
19:37 - distance C - B what is the distance
19:41 - distance of C is what this 5 ok see if
19:45 - we have selected this 5 so we will
19:47 - consider this distance distance of C is
19:49 - now
19:49 - five you can say distance of you is five
19:53 - five plus distance of C to B what is
19:58 - this cost of this edges three five plus
20:03 - three that is it and distance of this
20:06 - this one is distance of V now here V is
20:09 - the distance of B is what ten and this 8
20:16 - is less than 10
20:18 - previously say it was 10 previous okay
20:21 - but we have selected C and through C if
20:24 - we go to B A to C then B then what is
20:27 - the distance distance of C C is 5 5 plus
20:31 - 3 is 8 so 8 is less than this 10 that
20:35 - will update this can write it okay now
20:40 - next from C to D distance of C is 5 this
20:46 - coast of this edge is 5 plus 9 that is
20:49 - 14 and previous it was infinity and 14
20:53 - is obviously less than infinity I will
20:55 - update this from C to e what is the
20:58 - distance distance of C is 5 5 plus 2 is
21:02 - 7 so we will update this ok we will not
21:07 - write this 5 again because we have
21:09 - already selected this 5 ok now out of
21:12 - these three which one is minimum that is
21:13 - say when we will select this vertex that
21:16 - is easy it would be selected now from E
21:22 - we can update the distance of being
21:25 - distance of a but will not update this
21:28 - distance Y so because a is already
21:30 - selected these are selected vertex or
21:35 - you can say visit you to vertex so you
21:36 - can say mark vertices
21:37 - ok now e to a will not update we can
21:42 - update only e to D because we have edge
21:45 - from e to D now find out the distance e
21:49 - to the distance of E is 7 okay 7 plus
21:55 - this coast is 6 7 plus 6 is 30
22:01 - and the stance of D is 14 previously and
22:07 - 13 is less than this 14th we will update
22:10 - here 13 now can you update this distance
22:16 - he we have selected this e can you
22:20 - update a to be e to be no there is no
22:22 - edge then you'll write as it is here 8
22:27 - okay now we have only two vertices which
22:31 - are unvisited out of these two which one
22:33 - is having minimum distance factor that
22:36 - is 8 will select this 8 and the vertex s
22:40 - B B would be selected then from B we can
22:44 - update only this B to B ok and all we
22:49 - have only one vertex that is remaining
22:51 - now find out this distance B to D what
22:55 - is the updated distance distance of B is
22:57 - 8 8 plus this host host is 1 8 plus 1
23:04 - that is 9 okay and previously the
23:08 - distance of B is 13 and 9 is less than
23:11 - 13 then we will update here 9 ok will
23:17 - not write this one here and now we have
23:20 - only one vertex that is unbusy good then
23:22 - obviously we'll select this vertex this
23:25 - vertex is d this is the table through
23:30 - which you can find out the minimum
23:31 - distance now if you are asked what is
23:33 - the distance shortest distance from A to
23:36 - D A to D so what is the shortest
23:40 - distance that is 9 from A to E 7 from A
23:45 - to C 5 from A to B 8 ok now second thing
23:51 - is if you want to find out the path
23:52 - suppose we are supposed to find out the
23:55 - shortest distance from A to D plus the
23:58 - path ok maybe there would not be the
24:01 - direct edge from A to B we have how many
24:05 - a to pail ahem they may be B
24:08 - C then D so you how to find out that
24:10 - part okay now what is the form know that
24:14 - how to find out that that path
24:17 - suppose a 2d we are supposed to find out
24:19 - okay
24:20 - a 2d in shortest distances 9 we have
24:23 - selected the vertex B here only
24:26 - okay now one pointer would be set at 9
24:31 - only okay and here I'll write the path
24:37 - here I'll write the path only okay this
24:45 - 9 okay the selected vertex is B we are
24:49 - supposed to find out the path from A to
24:51 - D only okay this 9 is the shortest
24:56 - distance in the path is B we have
24:59 - selected be here only C D okay then
25:03 - suppose in path I'm writing B now we'll
25:06 - move this pointer one step backward how
25:11 - many hop and then I'll go to one step
25:13 - backward I'll go here only okay and this
25:17 - has been changed see palette is at this
25:21 - point it was 13 and after that it has
25:23 - changed to tends to 19 so in this case
25:27 - either you change fobia here so we'll
25:29 - check in this row which what Isis has
25:34 - been selected which vertices has been
25:36 - selected this one and this one is what B
25:39 - B has been selected okay
25:41 - pointer will be here only now I write
25:46 - here suppose B B has been selected then
25:50 - we'll go one step backward here eight
25:55 - only
25:56 - okay no problem typically when you say
25:59 - Mikey you will move one step backward
26:01 - Jessica value changeover okay at that
26:05 - point you have to do something now one
26:07 - step backward here only it is 10 but the
26:13 - next step it was it so this has been
26:15 - changed here only okay now in this row
26:19 - they have a value change we
26:21 - this row which what is what is what
26:23 - ex-husbands electric that does this one
26:25 - 5c she has been selected then ill right
26:29 - here see pointer would be here only now
26:35 - go one step backward okay your habit
26:39 - high infinity habit change okay take
26:41 - care the same step change what you care
26:43 - though you will check in this row which
26:45 - vertices has been selected this one zero
26:49 - this Kristin see and that is hey that is
26:53 - hey we have a race to the source vertex
26:56 - that is zero so the path from A to B is
27:00 - a C then B then D shortest path and the
27:08 - distance of this path is what does this
27:11 - nine you can check out in this you can
27:17 - check out this path through this graph
27:20 - only see a to see what is the distance a
27:24 - to see Phi Phi C to be C to be that is
27:30 - three plus then B to be B to D one and
27:35 - this one is five plus three plus one is
27:36 - nine and already we have find out the
27:39 - shortest path that is shortest distance
27:41 - that is nine same suppose the shuttle
27:47 - you have to find out shortest path and
27:49 - shortest distance from A to E from A to
27:54 - B suppose okay what is the path and what
28:00 - is the distance a to be the shortest
28:04 - distance is you simply just check this
28:05 - table and you can totally say that the
28:08 - shortest distance is 8 a to be and find
28:11 - out in this Colin what is that selected
28:14 - that number is 8 so 8 is the shortest
28:19 - path should you sorry the shortest
28:22 - distance but what is the path ok now how
28:25 - to find out the path same formula just
28:29 - give a pointer here 8 because we are
28:32 - supposed to find out the shortest path
28:34 - from A to B
28:35 - B this one is 8 rules just set up a
28:39 - pointer here move this pointer one step
28:42 - backward this one is 8 only no need to
28:44 - do something because 8 & 8 both are same
28:48 - go to one step backward here it has been
28:51 - changed N & 8 so Joe happy a change we
28:55 - in that row only find out which what is
28:57 - which vertex has been selected this
28:59 - vertex that is C C has been selected
29:02 - okay
29:02 - the path has B then in this one C has
29:07 - been selected you will write C okay this
29:10 - one C has been selected then pointer
29:12 - would be here only then one step
29:15 - backward here it was infinity change
29:18 - watch okay infinity to 5 the change who
29:21 - I throw in that row which vertex has
29:23 - been selected this one and this vertex
29:24 - was he and we have already reached the
29:28 - source vertex that is 0 the path has a C
29:31 - and B and the distance is 8 a C and B
29:36 - you can find out 5 plus 3 is 8 so this
29:43 - is the table you can find out using that
29:45 - table the path as well as the shortest
29:48 - distance now the drawback of this destra
29:51 - algorithm is what it will not work you
29:54 - see I am NOT saying that it will not
29:56 - work it may or may not work when the
29:59 - edge beta- also you show you with the
30:03 - help of one example okay okay now let us
30:08 - take this graph which one is having
30:10 - negative edge weight that is minus
30:11 - strength now suppose find out the
30:13 - shortest distance one is the source
30:14 - vertex so 1 2 1 0
30:17 - and remaining would be infinity and
30:20 - infinity you know find out 1 2 p 0 plus
30:25 - 5 that is v zero plus 10 that is in okay
30:31 - now one has been selected now out of 2 3
30:35 - & 4 which is having the less distance
30:40 - vector that is out of 10 infinity and 5
30:43 - which one is less less 2 that is 5 you
30:45 - will select this vertex - okay
30:49 - now from - can you update any well but X
30:53 - this one this one this one no we cannot
30:55 - update because there is no direct edge
30:57 - okay this one is selected out of these
30:58 - two now we will select this 10 because
31:01 - 10 is less than infinity now from 3 to 4
31:04 - we can update 10 plus 1 that is 11 okay
31:10 - 10 plus 1 that is 11 now we have only
31:14 - this vertex will select this for now we
31:18 - can update can you update this distance
31:21 - for 2 to know according to the principle
31:24 - of tester algorithm you will not update
31:26 - this one because 2 has already been
31:27 - selected to has already been visited
31:30 - okay but suppose you are updating this
31:34 - distance a graph update coming here then
31:36 - what would be here see from distance of
31:40 - this this one is you this one is V
31:42 - distance of you is 1111 - n that is 1
31:50 - okay if we go from 1 2 3 to 4 to 2 then
31:55 - that distance would be 1 and 1 is less
31:59 - than 5 fine but we cannot update here
32:03 - only why so because 2 has already been
32:05 - visited and according to drive Strela
32:07 - rhythm a node which has already been
32:09 - visited we cannot update the distance of
32:11 - that vertex so the Esther algorithm in
32:14 - this case is having the wrong shortest
32:18 - distance because according to the
32:20 - Australia rhythm the shortest distance
32:22 - from 1 to 2 is 5 but that is not
32:25 - actually true the shortest distance from
32:26 - 1 to 2 is 1 through 1 2 3 2 4 2 2 so
32:33 - that is the main problem of diaster
32:35 - algorithm see it that is not always true
32:38 - sometimes may be you know suppose that
32:43 - if suppose this one is minus 1 let us
32:47 - suppose I am changing this this one is
32:49 - minus 1 now now the distance is 11 minus
32:52 - 1 that is n and 5 is less than 10 so
32:56 - this one is right okay so does try
33:00 - algorithm a drawback is it
33:02 - may or may not work when it have
33:03 - negative edge weights okay but it will
33:10 - surely not work when it will have a
33:13 - cycle which is having negative weight
33:18 - okay
33:19 - negative edge hoagie only in that case
33:22 - it may or may not give the correct
33:25 - result here characterized LD be supply
33:27 - and maybe this a tie but in case graph
33:29 - make s a cycle here which is having
33:31 - negative weight total edge weight of
33:34 - that cycle is negative then surely it
33:38 - will give you incorrect result okay so
33:43 - okay I'll see in the next video till
33:45 - then bye-bye take it
33:54 - you

Cleaned transcript:

hi guys welcome back today's topic is dice try algorithm so in this video I'm going to discuss with you the working principle of my algorithm and then what are the drawbacks of this algorithm okay so the extra algorithm is basically single source shortest path problem singles single source shortest path problem see the name suggests single source in this algorithm one source is given you're supposed to ask to find out the shortest path maybe and you are supposed to consider maybe with 0 as a source vertex and from 0 you are supposed to find out the shortest path to all the vertices or maybe you are supposed to you know ASCII 2 is the same two is the source and you're supposed to find out the shortest path from 2 to 1 2 2 4 2 2 a 2 2 5 2 2 6 you know like that to all other vertices so it is basically single source shortest path problem from one source you are supposed to find out shortest path to all other vertices ok now we'll discuss the working principle of this algorithm and after that I will show you the drawback of this algorithm okay see suppose this is a graph and you're supposed to find out the shortest path and source what X that is given to you is 0 0 as a source vertex maybe you can consider 5 as a source vertex and start your algorithm you can consider it as source vertex or maybe in question you are given 6 consider 6 as a source vertex then you are supposed to consider 6 as a source worst vertex and then you start the algorithm but here you'll consider 0 as a source vertex ok now first step is just you know mention the distance of this all these vertices from this vertex C we can we can easily say the distance of you know 0 to 0 the source vertex to source vertex 0 a source vertex that is why I am starting from this starting our algorithm from this vertex only so from zero to zero or distances zero and at first step the distance of all other vertices will be infinity infinity infinity like that we don't know what is the distance what is the shortest path okay now let us start we are going to start from zero from zero to how many vertices are directly connected to this this one and this four so we can find out the distance from 0 to 1 and 0 to 4 ok now how this distance is to be calculated like this suppose we are we are considering 0 to 1 we are calculating this distance so we'll consider 0s U and V sorry 1 as we so what is the formula see this is the formula distance of U plus cost of u to V and next we have distance of 3 C distance of U here we have 0 as you the distance of U is 0 plus cost of u to V V is the destination from 0 to 1 we are going to you know that find out the distance now here V is 1 the cost of edge u 2 V what is that cos 2 that is 4 okay and distance of V is starting May we don't know what is the distance of V that is because this is infinity so distance of these infinity the formula is if distance of U plus cost of u 2 V is less than D of V in that case what happens you see in this case 0 plus 4 is 4 & 4 is less than infinity okay so we will update this infinity to 4 we will change this infinity and will right here four because four is less than infinity fine and obviously we are calculating the shortest distance so if this is true then what happens the distance of V distance of V common a change curlier and distance of VK home a happening distance of U plus cost of you two this is the main formula to calculate the shortest distance okay now again find out from zero to four here this one is zero now sorry zero is you and now V is this 4 okay now from zero to four what is the distance distance of U is zero zero plus cost of this u V edges eight zero plus eight is eight and it is less than infinity that is why we update it and we'll write here eight okay now this one takes is now selected a vertex or you can see visited vertex we have selected this zero now next is now take this vertex is already selected we have already find out the shortest path from 0 to 1 and 0 to 4 okay now this one is selected just leave it now check out the wall the remaining distance distance this one is 8 this one is 4 and every one every other distances infinity infinity and infinity now select the shortest distance shortest distance out of these is 4 okay now we will select this vertex this vertex is now selected okay now see this vertex is now selected from this vertex we can update this distance from 1 to 2 we can update from 1 to 4 and we can go from 1 to 0 will not update this distance Y say because 0 is already selected so once of what X is already visited or selected will not update the distance of that vertex ok so from 1 we will update this distance and this distance and when you will update if this bu plus cost is less than then only you will update now find out from 1 to 2 now in this case this is you and this one is we now find out this distance distance of you distance of U is 4/4 plus cost of you to the coast of u 2 vs 8 and distance always infinity and this one is less than infinity less than infinity in that case you'll update this distance so rather than this infinity will right here what this there's 4 plus 8 is 2 then ok like this we'll find out all other distances now from this to this find out distance of U is 4 4 plus 11 is 15 and this this distance of ways it okay but it is less than this 15 though we will not update this distance because if this plus is less than 2 you or DV then only we will update this but 11 plus 4 15 15 is greater than 8 then we will not update this one ok now this is already selected a 0 is already selected will leave this nodes now out of remaining nodes which node is having the shortest distance 8 infinity infinity infinity infinity 2l and infinity it is the shortest okay it is a less than or you can say the least distance you will select this for ok well select this this one now from this vertex we can update the distance of 4 2 5 4 2 8 4 2 1 4 2 0 but 4 2 0 and 1 will not update because 0 & 1 dot or are already selected or you can say visited ok so not update distance of these vertices elaborate four to five four to eight only now find out that this distance four to five distance now here this one is you and this one is the distance of you is eight plus cost of you to the u to V is 1 and this distance of ways infinity and this one is less than infinity 8 + 1 9 less than here then we will update and this one is 9 okay now find out this distance 8 plus this Coast is 7 7 plus 8 is 15 15 is less than infinity though we will update this distance okay this one is 15 okay now we have already updated now this one is selected this one and did this one of leave these nodes and out of these remaining nodes which node is having the shortest distance 9/15 to L infinity infinity infinity 9 is the shortest one then we will select this 9 now 5 is selected vertex from 5 we can update 5 to 6 5 to 8 distance okay we will not update 5 to 4 because this one is already selected ok now find out this distance 5 to 6 this one is now view and here now this one is we add this time ok 9 distance of U is 9 9 plus 2 11 11 is less than infinity we will update this ok find out this distance 9 9 Plus this coast is 6 9 plus 6 is 15 already 15 no need to change ok leave it any other we cannot update this one is already updated and only 6 and 5 are directly connected connected to the selected node so we have already updated this 11 and this 15 okay now just leave these selected nodes and out of this unvisited nodes which is having the shortest distance out of 11 15 to L infinity and infinity 11 is the shortest to select this one select 6 okay now from six we can update the name distance of those nodes which are directly connected that is three two will not update this one because this one is already selected okay we will not to visit this vertex again you can say it is already selected or visited from six to seven now this one is you and this one is we find out this distance distance of you is 11 plus 10 10 that is 21 21 is less than infinity we will update this okay this one is 21 11 plus 14 that is 25 25 is less than infinity we will update this that is 25 okay this one update this one also from check check out 11 plus this edges having distance 4 11 plus 4 is what 15 fine but here 2 is already having 12 and 15 is greater than 12 so we will not update this distance this will leave it as it is okay will not update this one any other you can update no ok now out of this at 4 unvisited node which is having the shortest distance 15 12 25 and 20 1 2 well as the short as 12 is the minimum distance will select this 2 n this node will be selected from this node you can update this distance and this one we cannot update this one because 6 is already updated and already visited we cannot update this distance because 1 is already visited find out from 2 to 8 now this one is this one will act as you and this one will act as V distance of U is 12 12 plus 2 is 14 and distance of V is 15 and 14 is less than 15 so we will update this one this one will become 14 ok now next is update this one also 12 distance of U is 12 this ghost of this u 2 V is 7 12 plus 7 is 19 and 19 is less than 25 so we will update this one this would become 19 okay now you'll not update this one will not update this one it's done now out of these three unvisited modes which is having short test distinct this one is having 14 this one is having 19 this one is having 21 then we will select this 14 because this is having the minimum distance vector we will select this 8 now from 8 you can up how many nodes are directly connected this 5 this for this but will not update these this or this distance because 2 4 and 5 are already visited ok so we cannot update distance of any other node 3 or 7 car you cannot update from this hey leave it as a tease ok this one has selected now out of these two which one is having the shortest one you can show the minimum distance factor that is 19 and 20 or 19 then you will select this 3 3 you can update this distance only because these 2 are already selected then 19 plus 9 what is this 28 I guess 28 but 21 is less than 28 so we will not update this one ok now only one node is there you will select 7 only and this one is 21 only because we will not update these distances ok so using this formula this is the working principle of destra algorithm ok see if I ask you what is the shortest distance from 0 to 3 then the answer would be this 19 what is the shortest distance from 0 to 8 then the answer would be 14 what is the shortest distance from 0 to 6 that is 11 shortest distance from 0 to 7 that is 21 from 0 to 5 9 from 0 to 4 we have 8 from 0 to 1 we have 4 from 0 to 2 we have shortest distance is this 12 so this is the working principle of Christ algorithm now see this diester algorithm works on undirected graph and directed graph as well okay now we'll take one more example of directed graph okay now let us say we have this graph which one is directed and related to the RAF and we're supposed to find out the shortest path from the source vertex and source vertex is a to all other vertices okay let us suppose a source vertex may be in question you are given that consider see as the source vertex okay now in the previous case we have already updated the distance in this graph only but in this case I will draw on table and we will update the distance in that table only okay see now we will draw a table is B C D and these five vertices we have starting may you're right that vertex which is the source vertex suppose in question you are given consider B as a source vertex okay in that case you would have written here B and here you can write a C D and E like that only in any order but the source what X must be written in at first only okay here we have consider source vertex is hey hi okay now the very first step is just the same thing we have already done in previous example that is 0 to 0 distances so the a to a distance would be 0 and back the other remaining distances would be infinity so the distance of this this one is 0 this one is infinity infinity infinity is infinity this is the first step the stance of source to source would be 0 ok now out of these which one is having the minimum distance vector that is 0 okay so we'll select this will select this 0 and the vertex is a okay now from a how many vertices you can find out the distance ay to B and a see see there is no that edge from A to E there this edges from E to E so we cannot update from A to E we can update only a to see and a to B now find out the distance from A to B distance of a is zero same formula distance of U plus cost of u to V and distance of B if this one is true then we will update distance of V to distance of U plus Coast ou2 we use this formula okay now find out from A to B distance of a is 0 0 Plus this coast is 10 okay and 10 is distance of B is what infinity 10 is obviously less than infinity we will update here 10 only what about C A to C 0 plus 5 is less than infinity we will update here 5 only D will not update to e will not update because there is no direct edge from A to D and a yeah okay this one is done this one is already selected we will not write this in another in the next row now out of these four which one is having the minimum distance factor that is 5 10 or infinity or infinity that is 5 then we will select this Phi ok that is see see what X has been selected now from C they can update distance of C to B C B and C to e ok now find out the distance C B what is the distance distance of C is what this 5 ok see if we have selected this 5 so we will consider this distance distance of C is now five you can say distance of you is five five plus distance of C to B what is this cost of this edges three five plus three that is it and distance of this this one is distance of V now here V is the distance of B is what ten and this 8 is less than 10 previously say it was 10 previous okay but we have selected C and through C if we go to B A to C then B then what is the distance distance of C C is 5 5 plus 3 is 8 so 8 is less than this 10 that will update this can write it okay now next from C to D distance of C is 5 this coast of this edge is 5 plus 9 that is 14 and previous it was infinity and 14 is obviously less than infinity I will update this from C to e what is the distance distance of C is 5 5 plus 2 is 7 so we will update this ok we will not write this 5 again because we have already selected this 5 ok now out of these three which one is minimum that is say when we will select this vertex that is easy it would be selected now from E we can update the distance of being distance of a but will not update this distance Y so because a is already selected these are selected vertex or you can say visit you to vertex so you can say mark vertices ok now e to a will not update we can update only e to D because we have edge from e to D now find out the distance e to the distance of E is 7 okay 7 plus this coast is 6 7 plus 6 is 30 and the stance of D is 14 previously and 13 is less than this 14th we will update here 13 now can you update this distance he we have selected this e can you update a to be e to be no there is no edge then you'll write as it is here 8 okay now we have only two vertices which are unvisited out of these two which one is having minimum distance factor that is 8 will select this 8 and the vertex s B B would be selected then from B we can update only this B to B ok and all we have only one vertex that is remaining now find out this distance B to D what is the updated distance distance of B is 8 8 plus this host host is 1 8 plus 1 that is 9 okay and previously the distance of B is 13 and 9 is less than 13 then we will update here 9 ok will not write this one here and now we have only one vertex that is unbusy good then obviously we'll select this vertex this vertex is d this is the table through which you can find out the minimum distance now if you are asked what is the distance shortest distance from A to D A to D so what is the shortest distance that is 9 from A to E 7 from A to C 5 from A to B 8 ok now second thing is if you want to find out the path suppose we are supposed to find out the shortest distance from A to D plus the path ok maybe there would not be the direct edge from A to B we have how many a to pail ahem they may be B C then D so you how to find out that part okay now what is the form know that how to find out that that path suppose a 2d we are supposed to find out okay a 2d in shortest distances 9 we have selected the vertex B here only okay now one pointer would be set at 9 only okay and here I'll write the path here I'll write the path only okay this 9 okay the selected vertex is B we are supposed to find out the path from A to D only okay this 9 is the shortest distance in the path is B we have selected be here only C D okay then suppose in path I'm writing B now we'll move this pointer one step backward how many hop and then I'll go to one step backward I'll go here only okay and this has been changed see palette is at this point it was 13 and after that it has changed to tends to 19 so in this case either you change fobia here so we'll check in this row which what Isis has been selected which vertices has been selected this one and this one is what B B has been selected okay pointer will be here only now I write here suppose B B has been selected then we'll go one step backward here eight only okay no problem typically when you say Mikey you will move one step backward Jessica value changeover okay at that point you have to do something now one step backward here only it is 10 but the next step it was it so this has been changed here only okay now in this row they have a value change we this row which what is what is what exhusbands electric that does this one 5c she has been selected then ill right here see pointer would be here only now go one step backward okay your habit high infinity habit change okay take care the same step change what you care though you will check in this row which vertices has been selected this one zero this Kristin see and that is hey that is hey we have a race to the source vertex that is zero so the path from A to B is a C then B then D shortest path and the distance of this path is what does this nine you can check out in this you can check out this path through this graph only see a to see what is the distance a to see Phi Phi C to be C to be that is three plus then B to be B to D one and this one is five plus three plus one is nine and already we have find out the shortest path that is shortest distance that is nine same suppose the shuttle you have to find out shortest path and shortest distance from A to E from A to B suppose okay what is the path and what is the distance a to be the shortest distance is you simply just check this table and you can totally say that the shortest distance is 8 a to be and find out in this Colin what is that selected that number is 8 so 8 is the shortest path should you sorry the shortest distance but what is the path ok now how to find out the path same formula just give a pointer here 8 because we are supposed to find out the shortest path from A to B B this one is 8 rules just set up a pointer here move this pointer one step backward this one is 8 only no need to do something because 8 & 8 both are same go to one step backward here it has been changed N & 8 so Joe happy a change we in that row only find out which what is which vertex has been selected this vertex that is C C has been selected okay the path has B then in this one C has been selected you will write C okay this one C has been selected then pointer would be here only then one step backward here it was infinity change watch okay infinity to 5 the change who I throw in that row which vertex has been selected this one and this vertex was he and we have already reached the source vertex that is 0 the path has a C and B and the distance is 8 a C and B you can find out 5 plus 3 is 8 so this is the table you can find out using that table the path as well as the shortest distance now the drawback of this destra algorithm is what it will not work you see I am NOT saying that it will not work it may or may not work when the edge beta also you show you with the help of one example okay okay now let us take this graph which one is having negative edge weight that is minus strength now suppose find out the shortest distance one is the source vertex so 1 2 1 0 and remaining would be infinity and infinity you know find out 1 2 p 0 plus 5 that is v zero plus 10 that is in okay now one has been selected now out of 2 3 & 4 which is having the less distance vector that is out of 10 infinity and 5 which one is less less 2 that is 5 you will select this vertex okay now from can you update any well but X this one this one this one no we cannot update because there is no direct edge okay this one is selected out of these two now we will select this 10 because 10 is less than infinity now from 3 to 4 we can update 10 plus 1 that is 11 okay 10 plus 1 that is 11 now we have only this vertex will select this for now we can update can you update this distance for 2 to know according to the principle of tester algorithm you will not update this one because 2 has already been selected to has already been visited okay but suppose you are updating this distance a graph update coming here then what would be here see from distance of this this one is you this one is V distance of you is 1111 n that is 1 okay if we go from 1 2 3 to 4 to 2 then that distance would be 1 and 1 is less than 5 fine but we cannot update here only why so because 2 has already been visited and according to drive Strela rhythm a node which has already been visited we cannot update the distance of that vertex so the Esther algorithm in this case is having the wrong shortest distance because according to the Australia rhythm the shortest distance from 1 to 2 is 5 but that is not actually true the shortest distance from 1 to 2 is 1 through 1 2 3 2 4 2 2 so that is the main problem of diaster algorithm see it that is not always true sometimes may be you know suppose that if suppose this one is minus 1 let us suppose I am changing this this one is minus 1 now now the distance is 11 minus 1 that is n and 5 is less than 10 so this one is right okay so does try algorithm a drawback is it may or may not work when it have negative edge weights okay but it will surely not work when it will have a cycle which is having negative weight okay negative edge hoagie only in that case it may or may not give the correct result here characterized LD be supply and maybe this a tie but in case graph make s a cycle here which is having negative weight total edge weight of that cycle is negative then surely it will give you incorrect result okay so okay I'll see in the next video till then byebye take it you
