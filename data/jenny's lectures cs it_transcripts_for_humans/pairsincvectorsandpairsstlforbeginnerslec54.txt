With timestamps:

00:00 - hey everyone I hope you are safe and
00:02 - doing good so in the series of learning
00:04 - C++ programming language we are
00:06 - discussing standard template libraria
00:08 - like vectors we have discussed till now
00:10 - right same like vector we have pair in
00:13 - STL right so we'll discuss in this video
00:16 - what is pair why we use it how to use it
00:21 - some member function of pair and uh
00:23 - declaration initialization of pair and
00:25 - all everything about pair we will
00:27 - discuss in this video okay what is a
00:30 - pair first of all we'll discuss what is
00:31 - a pair in this standard template Library
00:35 - so see in general uh meaning if I say
00:39 - like a pair of uh marker I have a pair
00:43 - of marker like I have two marker pair
00:45 - means like two things okay pair of shoes
00:48 - pair of jeans pair of shirt like this
00:52 - right you understand the general meaning
00:54 - of a PA the spare set of two values or
00:57 - two things right I can say see uh this
01:01 - is a pair or not like this is a pair or
01:03 - not I have one is ink and one is marker
01:07 - yes it is a pair although the things I
01:10 - have are not same they are different
01:12 - type but still it is a pair right so a
01:15 - pair it combines we can say it combines
01:18 - like two values right and that values
01:21 - can be of same type or different
01:23 - type right I hope you got what is a pair
01:28 - right so in your term you can write down
01:31 - proper definition of pair right or not
01:33 - I'll it's okay I'll tell you proper
01:35 - definition also but first let's
01:38 - understand this pair okay so now so in
01:42 - STL in standard template Library like
01:45 - vector is a container I have told you or
01:47 - we can say it was a class so same pair
01:49 - is also a container in STL or we can
01:53 - also say pair is a class so we can
01:55 - create object of this class we can
01:57 - create pairs right so whenever you are
01:59 - going to create pair that are known as
02:01 - you can say object of pair class right
02:05 - so let's see the syntax first how you
02:08 - will write write down how you will
02:09 - declare a pair we simply write pair in
02:12 - small letter and here we write data
02:18 - type data type 1 and data type 2 because
02:23 - it is a set of two values or two
02:26 - elements of same type or maybe of
02:28 - different type we can say of potential
02:30 - different types right and here we just
02:33 - write down the pair
02:36 - name that's it this is simple
02:39 - declaration or you can say uh this is
02:41 - how we are going to define a pair this
02:43 - is data type of first element data type
02:45 - of second element right like if I write
02:48 - pair first int next is string and pair
02:53 - name I'm just taking
02:54 - P so we have a
02:58 - object pair of object P right which can
03:02 - contain two values of intent string type
03:05 - and this is first this is second right
03:09 - and the order is fixed the first how you
03:12 - can access this thing this Value First
03:15 - value we just write down the name of the
03:16 - pair Dot and first so whatever value you
03:20 - will store here that it will give you
03:22 - that thing and P do second it will give
03:25 - you that thing so order is fixed first
03:28 - second right
03:30 - these are keyword first and second this
03:31 - is how we are going to access this thing
03:33 - so I'll show you this thing with the
03:35 - help of program right now why we need
03:38 - this thing a pair see whenever you want
03:42 - to uh store whenever you want to return
03:45 - from a function two values so we can use
03:47 - in that case pair right or if you want
03:50 - to store a pair of you know related
03:52 - values we can use this thing like d we
03:54 - use dictionary we use tle the header
03:56 - file for this pair is utility we
04:01 - use utility header we can we can see it
04:05 - is a container class which is defined in
04:07 - standard template Library pair provides
04:10 - you a way to store two heterogeneous
04:12 - type of object as a single unit as a
04:14 - single object right now how to use this
04:18 - let me just show you this thing with
04:19 - some you know uh practically with some
04:22 - programs okay so let's create a new
04:26 - file we have pair to do CPP right so
04:31 - let's include what first
04:34 - headers I use stream and if you're using
04:37 - pair let's
04:39 - include utility
04:43 - header and namespace STD okay now first
04:47 - we are going to create a pair right so
04:50 - just write down
04:52 - this pair see template this is a class
04:57 - right so let's write down this spare
05:00 - and here you have to write down see type
05:03 - name T1 type name
05:05 - T2 this holding two object of arbitrary
05:08 - type so first let's take int and
05:13 - Float right now name of the pair I'm
05:16 - taking P that's it
05:19 - right now how we are going to initialize
05:22 - this pair the values one is directly
05:26 - here we can write down the initializer
05:28 - list that is also find like in these
05:33 - brackets we can simply write down the
05:34 - first as int so first write down some
05:37 - value like 23 in then float so I'm
05:39 - writing something like
05:41 - this okay it should be like point
05:45 - right so I have given two values 23 and
05:49 - this intent float so this is how one way
05:51 - to initialize a pair now how to access
05:54 - these values we have two key first and
05:57 - second so how to access if you want to
05:59 - access the the first value then name of
06:01 - the pair followed by dot operator and
06:03 - then
06:05 - first right then
06:08 - let's put some space and then P dot
06:12 - second right
06:22 - andle let's run this and see what output
06:25 - you will get let's run this and see you
06:28 - are getting 20 3 5689 right so this is
06:32 - how you can access the values now this
06:34 - is one way of initial initialization of
06:36 - this pair second way is we can
06:39 - initialize this we can uh use something
06:41 - like this rather than initializing here
06:44 - we can do
06:46 - what let's create
06:48 - another pair having int and string two
06:52 - values and name of the pair is P2 let's
06:56 - take this one as
06:57 - P1 right so should be P1 P1 P2 we have a
07:02 - function make pair right using that also
07:06 - we can initialize these things like I
07:10 - can do something like this I have
07:12 - created this thing now P2 equal to I can
07:16 - just call this function uh make
07:20 - pair right and here I can give the value
07:23 - like 12 comma and string like any name
07:27 - I'm giving J something like this and
07:30 - same if you want to
07:32 - print
07:33 - then we can use here P2 do first name of
07:37 - this is because P2 and this is also P2
07:41 - rather than this let's comment out this
07:43 - thing and I'm just going to print the
07:46 - values of second Vector 12 and J right
07:49 - now make pair is a function see make
07:51 - pair is a function here you can create a
07:54 - pair without
07:57 - explicitly you know telling these data
07:59 - types intent string but how here I have
08:02 - used this make function to initialize P2
08:04 - this is also fine but here I have given
08:07 - these uh data types explicitly but if
08:09 - you don't want to give this thing that
08:11 - also uh there is also one way using make
08:14 - pair function what is that way see I'm
08:16 - going to create another pair P3 suppose
08:21 - so P3 equal to it's not correct I'm
08:24 - going to uh do some correction here P3
08:27 - equal to just call uh this this uh what
08:31 - we can say make PA function and give
08:34 - some values suppose I'm giving here not
08:38 - Jenny let's take like Rahul now don't
08:41 - comment out this thing like I'm
08:43 - wondering who is Rahul Rahul is just a
08:46 - name or we can say a student right do
08:49 - not try to find out any relationship
08:51 - with
08:52 - me Rahul comma any like I'm giving 89 or
09:00 - R this
09:02 - thing right but it see identify P3 is
09:06 - undefined right so here
09:10 - just tie down Auto this keyword so it
09:13 - will
09:14 - automatically take these uh data types
09:18 - first is string second is character
09:20 - right and it will create a pair P3 so if
09:23 - you want to print this P3 let's
09:27 - just comment out this thing and P3 do
09:30 - first and P3 do 2 let's comment out this
09:34 - line and now run this and what it should
09:37 - give Rahul and R see Rahul and R right
09:43 - so without explicitly specifying uh
09:45 - these data types we can use make pair
09:46 - function to create a pair okay we can
09:50 - use another a pair to initialize another
09:53 - pair okay this is how see we can do this
09:57 - thing uh we have three pair P1 P2 P3 so
10:00 - let's create another pair I have a
10:06 - pair if you want to
10:08 - initialize suppose P4 pair with the same
10:12 - values of
10:14 - P1 right so the type would be same int
10:17 - float and in the same order right so
10:22 - let's just copy paste this thing and
10:25 - pair I'm just taking pair int float and
10:28 - P4
10:30 - P4 and in bracket P1 I want to
10:33 - initialize P4 with P1 so P4 and P1 PA
10:38 - are having same value now so let's
10:42 - just print what P4
10:47 - values P4 do first and P4 do 2 and it
10:51 - should print 23 and this
10:54 - 5689 C same values so using another pair
10:58 - also we can initialize a pair so there
11:00 - are some ways different different ways
11:01 - of you know initializing a pair creating
11:04 - a pair and direct with direct assignment
11:06 - also possible like let's let's create
11:09 - another
11:10 - pair so I have another pair Bo comma
11:13 - string two types I have and P6 so we can
11:17 - do direct assignment like P6 equal to
11:21 - what we can do sorry P
11:26 - P6 DOT first equal to Bull so either
11:31 - zero or one or true or false right I
11:36 - don't know it will take true or false
11:37 - the keyword but let's
11:40 - see let's try out true right and P6 do
11:48 - second is equal to string so I'm just uh
11:52 - writing here like
11:53 - [Music]
11:54 - uh anit right and semicolon
12:00 - so if you want to print these
12:08 - values why P6 it should be P5 right
12:12 - because till P4 we
12:14 - have created pair now so why get
12:19 - P5 let's take
12:22 - P5 so we are going to now print P5 and
12:26 - here also P5 this is direct assignment
12:30 - we are directly assigning the values to
12:32 - first and second element I don't know it
12:35 - will work or not let's
12:36 - run one and the name anit so one like
12:40 - true is one okay false or true so
12:43 - automatically it will decode it to um
12:46 - one so this is also possible now one
12:49 - more thing with this is this is what
12:51 - member function of pair memor function
12:54 - of obviously I have told you pair is a
12:56 - class so in that we are having some mem
12:59 - function and those mem function we can
13:01 - use with pair object so we have one more
13:03 - function mem function that is swap if
13:05 - you want to swap the values of two
13:08 - pair pair object we can use swap
13:11 - function let's see that thing also
13:13 - suppose I have but keep this thing in
13:16 - your mind if you want to swap the
13:19 - content of two pair P1 and P2 so the
13:21 - data type should be same right of first
13:24 - and second element right because P1 do
13:28 - first would be swapped with P2 do first
13:30 - P2 P1 do2 would be swapped with P2 do2
13:33 - so the data type should be same I don't
13:36 - know if you will take different datae it
13:37 - will work or not let's try out this
13:39 - thing also because I'm trying out this
13:40 - thing first time right now so let's run
13:44 - we have P1 and P2 okay let's swap these
13:50 - thing so how uh let's just first comment
13:53 - out all the other things
13:56 - sorry we have a swap function
13:59 - so on P1 I'm just going to call the swap
14:02 - function and in bracket let's pass
14:06 - P2 okay sorry and semicolon now after
14:10 - swapping let's print P1 and P2 only P1
14:14 - and P2 these two
14:18 - things I don't know it will work or
14:26 - not okay it will give definitely it will
14:28 - give an error see the red line here okay
14:32 - see here's no matching function for call
14:35 - to pair
14:37 - swap because here we have in in but here
14:40 - we have float and string so we cannot
14:42 - swap float with string so here it should
14:45 - be same let's do this let's
14:49 - convert this float to string or take
14:51 - this string here and here let's take
14:55 - what let's take
14:57 - pile now swap P1 and
15:00 - P2 it will work now see 12 Jenny 23
15:07 - pile so let's do one
15:11 - thing first print before
15:14 - swapping content of P1 and P2 and then
15:19 - after
15:20 - swapping and before swapping let's print
15:23 - and after that call this swap function
15:26 - right and then we print this thing right
15:28 - so before swapping you know P1 23 pile
15:31 - P2 12 J
15:34 - okay so before swapping 23 pile 12 J
15:37 - after swapping 12 jny and 23 P so I mean
15:39 - the values has been swapped right so
15:41 - this is how we can use swap function on
15:43 - pair right and one more thing I just
15:45 - want to tell you if you not
15:48 - initialize the pair suppose
15:54 - uh this we have a pair P5 and we haven't
15:58 - initialized this thing and I want to
16:00 - print P5
16:03 - values I haven't initialized anything
16:06 - and I want to print the Valu so it will
16:08 - print what wol and string I don't know
16:13 - let's run and see see one only zero it
16:16 - is
16:17 - printing right so by default
16:19 - automatically it will be initialized if
16:20 - you take int then it would print zero if
16:23 - you take string then nothing would be
16:25 - printed because it is null character
16:27 - nothing would be printed because it is
16:28 - null
16:29 - bull yeah it's type of zero or one so it
16:32 - will like zero would be initialized so
16:35 - it will print zero if I take here rather
16:37 - than Bool and string let me just show
16:39 - you here I'm taking int
16:41 - and
16:44 - Float right and let's just comment
16:48 - out remaining
16:57 - things
17:00 - I'm just printing values of P5 see it
17:04 - will print 0 0 because int it will by
17:06 - default initialize this to 0 0 if I have
17:09 - one as
17:13 - string one is string so string would be
17:16 - nothing would be printed in at the place
17:18 - of string because it would be null only
17:21 - one zero would be printed see Z second
17:23 - zero right so by default it will be
17:26 - initialized automatically by null or
17:28 - zero right next we can use comparison
17:31 - operator on these pairs also two pairs
17:33 - if you want to compare like P1 equal to
17:35 - P2 or less than equal to greater than
17:37 - equal to and these kind of thing that is
17:39 - also fine let me just show you something
17:41 - but for that also you have you should
17:43 - have this this know same data type I
17:46 - have same thing in string in string and
17:50 - P2 is this so
17:52 - let's compare these
17:55 - things simply the name of the pair P1
17:58 - and P P2 so here I'm uh checking for
18:01 - equality P1 equal equal to P2 so it will
18:04 - you know compare this first with first
18:06 - second with second and obviously this is
18:09 - not equal so it should give
18:14 - what let's comment out this line false
18:17 - means zero so output should be zero I
18:19 - guess yeah it is zero right or not equal
18:23 - to less than equal to greater than equal
18:25 - to these things we can do so it is your
18:27 - assignment you have to try out the these
18:28 - things all the those operators
18:30 - comparison operators relational
18:32 - operators on these pairs right if I if I
18:36 - take here rather than uh int if I take
18:39 - here
18:41 - float then what will
18:43 - happen let's see
18:47 - 12.34 in this case see the red line no
18:51 - operator matches these operant so
18:54 - because it will compare this this first
19:01 - operand of pair one with the first of
19:03 - pair two but both are of different a
19:05 - type so it will give error right so it
19:08 - should be it should be here
19:11 - int so please try out all these
19:14 - relational operators not equal to less
19:16 - than equal to less than greater than
19:17 - equal to greater than on these pairs
19:19 - right P1 and P2 it is your assignment
19:21 - and you can just write down that thing
19:22 - in common section right I hope now pair
19:25 - is clear to you guys like what are pairs
19:27 - why we use these pairs understand how to
19:29 - use these these things right so now you
19:32 - have idea of vectors and pairs right so
19:34 - in the next video we'll see Vector of
19:37 - pairs right so now I'll see you in the
19:39 - next Tut bye take
19:43 - care

Cleaned transcript:

hey everyone I hope you are safe and doing good so in the series of learning C++ programming language we are discussing standard template libraria like vectors we have discussed till now right same like vector we have pair in STL right so we'll discuss in this video what is pair why we use it how to use it some member function of pair and uh declaration initialization of pair and all everything about pair we will discuss in this video okay what is a pair first of all we'll discuss what is a pair in this standard template Library so see in general uh meaning if I say like a pair of uh marker I have a pair of marker like I have two marker pair means like two things okay pair of shoes pair of jeans pair of shirt like this right you understand the general meaning of a PA the spare set of two values or two things right I can say see uh this is a pair or not like this is a pair or not I have one is ink and one is marker yes it is a pair although the things I have are not same they are different type but still it is a pair right so a pair it combines we can say it combines like two values right and that values can be of same type or different type right I hope you got what is a pair right so in your term you can write down proper definition of pair right or not I'll it's okay I'll tell you proper definition also but first let's understand this pair okay so now so in STL in standard template Library like vector is a container I have told you or we can say it was a class so same pair is also a container in STL or we can also say pair is a class so we can create object of this class we can create pairs right so whenever you are going to create pair that are known as you can say object of pair class right so let's see the syntax first how you will write write down how you will declare a pair we simply write pair in small letter and here we write data type data type 1 and data type 2 because it is a set of two values or two elements of same type or maybe of different type we can say of potential different types right and here we just write down the pair name that's it this is simple declaration or you can say uh this is how we are going to define a pair this is data type of first element data type of second element right like if I write pair first int next is string and pair name I'm just taking P so we have a object pair of object P right which can contain two values of intent string type and this is first this is second right and the order is fixed the first how you can access this thing this Value First value we just write down the name of the pair Dot and first so whatever value you will store here that it will give you that thing and P do second it will give you that thing so order is fixed first second right these are keyword first and second this is how we are going to access this thing so I'll show you this thing with the help of program right now why we need this thing a pair see whenever you want to uh store whenever you want to return from a function two values so we can use in that case pair right or if you want to store a pair of you know related values we can use this thing like d we use dictionary we use tle the header file for this pair is utility we use utility header we can we can see it is a container class which is defined in standard template Library pair provides you a way to store two heterogeneous type of object as a single unit as a single object right now how to use this let me just show you this thing with some you know uh practically with some programs okay so let's create a new file we have pair to do CPP right so let's include what first headers I use stream and if you're using pair let's include utility header and namespace STD okay now first we are going to create a pair right so just write down this pair see template this is a class right so let's write down this spare and here you have to write down see type name T1 type name T2 this holding two object of arbitrary type so first let's take int and Float right now name of the pair I'm taking P that's it right now how we are going to initialize this pair the values one is directly here we can write down the initializer list that is also find like in these brackets we can simply write down the first as int so first write down some value like 23 in then float so I'm writing something like this okay it should be like point right so I have given two values 23 and this intent float so this is how one way to initialize a pair now how to access these values we have two key first and second so how to access if you want to access the the first value then name of the pair followed by dot operator and then first right then let's put some space and then P dot second right andle let's run this and see what output you will get let's run this and see you are getting 20 3 5689 right so this is how you can access the values now this is one way of initial initialization of this pair second way is we can initialize this we can uh use something like this rather than initializing here we can do what let's create another pair having int and string two values and name of the pair is P2 let's take this one as P1 right so should be P1 P1 P2 we have a function make pair right using that also we can initialize these things like I can do something like this I have created this thing now P2 equal to I can just call this function uh make pair right and here I can give the value like 12 comma and string like any name I'm giving J something like this and same if you want to print then we can use here P2 do first name of this is because P2 and this is also P2 rather than this let's comment out this thing and I'm just going to print the values of second Vector 12 and J right now make pair is a function see make pair is a function here you can create a pair without explicitly you know telling these data types intent string but how here I have used this make function to initialize P2 this is also fine but here I have given these uh data types explicitly but if you don't want to give this thing that also uh there is also one way using make pair function what is that way see I'm going to create another pair P3 suppose so P3 equal to it's not correct I'm going to uh do some correction here P3 equal to just call uh this this uh what we can say make PA function and give some values suppose I'm giving here not Jenny let's take like Rahul now don't comment out this thing like I'm wondering who is Rahul Rahul is just a name or we can say a student right do not try to find out any relationship with me Rahul comma any like I'm giving 89 or R this thing right but it see identify P3 is undefined right so here just tie down Auto this keyword so it will automatically take these uh data types first is string second is character right and it will create a pair P3 so if you want to print this P3 let's just comment out this thing and P3 do first and P3 do 2 let's comment out this line and now run this and what it should give Rahul and R see Rahul and R right so without explicitly specifying uh these data types we can use make pair function to create a pair okay we can use another a pair to initialize another pair okay this is how see we can do this thing uh we have three pair P1 P2 P3 so let's create another pair I have a pair if you want to initialize suppose P4 pair with the same values of P1 right so the type would be same int float and in the same order right so let's just copy paste this thing and pair I'm just taking pair int float and P4 P4 and in bracket P1 I want to initialize P4 with P1 so P4 and P1 PA are having same value now so let's just print what P4 values P4 do first and P4 do 2 and it should print 23 and this 5689 C same values so using another pair also we can initialize a pair so there are some ways different different ways of you know initializing a pair creating a pair and direct with direct assignment also possible like let's let's create another pair so I have another pair Bo comma string two types I have and P6 so we can do direct assignment like P6 equal to what we can do sorry P P6 DOT first equal to Bull so either zero or one or true or false right I don't know it will take true or false the keyword but let's see let's try out true right and P6 do second is equal to string so I'm just uh writing here like uh anit right and semicolon so if you want to print these values why P6 it should be P5 right because till P4 we have created pair now so why get P5 let's take P5 so we are going to now print P5 and here also P5 this is direct assignment we are directly assigning the values to first and second element I don't know it will work or not let's run one and the name anit so one like true is one okay false or true so automatically it will decode it to um one so this is also possible now one more thing with this is this is what member function of pair memor function of obviously I have told you pair is a class so in that we are having some mem function and those mem function we can use with pair object so we have one more function mem function that is swap if you want to swap the values of two pair pair object we can use swap function let's see that thing also suppose I have but keep this thing in your mind if you want to swap the content of two pair P1 and P2 so the data type should be same right of first and second element right because P1 do first would be swapped with P2 do first P2 P1 do2 would be swapped with P2 do2 so the data type should be same I don't know if you will take different datae it will work or not let's try out this thing also because I'm trying out this thing first time right now so let's run we have P1 and P2 okay let's swap these thing so how uh let's just first comment out all the other things sorry we have a swap function so on P1 I'm just going to call the swap function and in bracket let's pass P2 okay sorry and semicolon now after swapping let's print P1 and P2 only P1 and P2 these two things I don't know it will work or not okay it will give definitely it will give an error see the red line here okay see here's no matching function for call to pair swap because here we have in in but here we have float and string so we cannot swap float with string so here it should be same let's do this let's convert this float to string or take this string here and here let's take what let's take pile now swap P1 and P2 it will work now see 12 Jenny 23 pile so let's do one thing first print before swapping content of P1 and P2 and then after swapping and before swapping let's print and after that call this swap function right and then we print this thing right so before swapping you know P1 23 pile P2 12 J okay so before swapping 23 pile 12 J after swapping 12 jny and 23 P so I mean the values has been swapped right so this is how we can use swap function on pair right and one more thing I just want to tell you if you not initialize the pair suppose uh this we have a pair P5 and we haven't initialized this thing and I want to print P5 values I haven't initialized anything and I want to print the Valu so it will print what wol and string I don't know let's run and see see one only zero it is printing right so by default automatically it will be initialized if you take int then it would print zero if you take string then nothing would be printed because it is null character nothing would be printed because it is null bull yeah it's type of zero or one so it will like zero would be initialized so it will print zero if I take here rather than Bool and string let me just show you here I'm taking int and Float right and let's just comment out remaining things I'm just printing values of P5 see it will print 0 0 because int it will by default initialize this to 0 0 if I have one as string one is string so string would be nothing would be printed in at the place of string because it would be null only one zero would be printed see Z second zero right so by default it will be initialized automatically by null or zero right next we can use comparison operator on these pairs also two pairs if you want to compare like P1 equal to P2 or less than equal to greater than equal to and these kind of thing that is also fine let me just show you something but for that also you have you should have this this know same data type I have same thing in string in string and P2 is this so let's compare these things simply the name of the pair P1 and P P2 so here I'm uh checking for equality P1 equal equal to P2 so it will you know compare this first with first second with second and obviously this is not equal so it should give what let's comment out this line false means zero so output should be zero I guess yeah it is zero right or not equal to less than equal to greater than equal to these things we can do so it is your assignment you have to try out the these things all the those operators comparison operators relational operators on these pairs right if I if I take here rather than uh int if I take here float then what will happen let's see 12.34 in this case see the red line no operator matches these operant so because it will compare this this first operand of pair one with the first of pair two but both are of different a type so it will give error right so it should be it should be here int so please try out all these relational operators not equal to less than equal to less than greater than equal to greater than on these pairs right P1 and P2 it is your assignment and you can just write down that thing in common section right I hope now pair is clear to you guys like what are pairs why we use these pairs understand how to use these these things right so now you have idea of vectors and pairs right so in the next video we'll see Vector of pairs right so now I'll see you in the next Tut bye take care
