With timestamps:

00:00 - hey everyone I hope you are safe and
00:02 - doing good so in the series of learning
00:04 - C++ programming language we are
00:05 - discussing functions in C++ in previous
00:07 - video we have seen some uh coding
00:09 - exercises based on functions right now
00:12 - we have discussed function overloading
00:14 - so we will see in this video uh exercise
00:17 - based on function overloading right and
00:20 - what is that exercise you have to write
00:22 - down a program to find area of different
00:25 - different shapes like Square rectangle
00:28 - and circle by calling a function area I
00:33 - would say by calling an overloaded
00:35 - function area so here you got it area is
00:39 - a function that would be overloaded here
00:41 - in your program right so the name of
00:43 - this uh function would be same area but
00:47 - you have to Define this function three
00:48 - times one for calculating area of square
00:51 - area of rectangle and area of circle
00:55 - right I hope you know how to find out
00:57 - area of square it's side into side side
01:00 - right you have to just give one uh let's
01:03 - suppose one integer variable side would
01:07 - be int and thus area of uh Square would
01:11 - return integer value right so return
01:13 - type would be int and argument will pass
01:15 - would be int second for calculating area
01:18 - of rectangle that would accept two
01:21 - argument length and width of rectangle
01:23 - that would be in double and it will
01:25 - return a double value right area of
01:28 - circle it will also take one argument
01:30 - that be double that is radius P R square
01:33 - right the area of circle and it will
01:36 - return double return type of that would
01:38 - be also double so
01:39 - three uh you have to Define this area
01:42 - function three times right but name
01:44 - would be same I hope you got my question
01:48 - right so now pause the video and try
01:49 - this out so I hope you have done this
01:53 - now we will
01:55 - Define that area function three times
01:58 - right so let let's take first prototype
02:01 - or function declaration so one would be
02:05 - in name would be area and it will take
02:10 - one argument of type int to calculate
02:12 - area of square second would be of type
02:16 - double and name would be same and it
02:19 - will take two argument double and double
02:24 - to calculate area of
02:27 - rectangle right and third is also return
02:32 - type is same double name is same area
02:36 - and it will take only one argument of
02:38 - type double this is to calculate area of
02:42 - circle
02:44 - right okay now we are calling these
02:47 - function in main we'll call this let's
02:49 - define these function first right so
02:52 - first is
02:53 - in area and in definition you have to
02:57 - take a variable name also that is
03:00 - like inside or any variable take a b c x
03:02 - y z s any variable name you can take
03:04 - right and it will simply
03:06 - [Music]
03:10 - return how to calculate area of
03:14 - square that length into length or the
03:16 - side into side or you can use that power
03:19 - function you can include that cth
03:21 - library and from there you can use power
03:23 - function to calculate power but here I'm
03:26 - just using simply side into side that's
03:28 - it right
03:30 - so same like here we take a variable int
03:34 - a variable Square underscore side and
03:37 - from user we will take input and
03:41 - simply we will pass that
03:45 - area this Square side here right but see
03:49 - it is returning integer Valu so you have
03:53 - to uh store that value or fetch that
03:56 - value in an integer variable right so
03:58 - let's take here in square side as well
04:01 - as
04:02 - a area of
04:07 - square this variable name area of square
04:09 - any variable name you can take
04:12 - and area of square equal
04:17 - to area and square we will here Square
04:20 - side will pass so whatever this function
04:21 - will return we we are going to store
04:23 - that value into this integer variable
04:26 - and we simply print this C out area of
04:30 - square
04:31 - is simply print this one you got it so
04:36 - till now let's run this and see if this
04:39 - function is working or not four and area
04:41 - of square is 16 yeah it is working right
04:45 - now let's define
04:47 - another
04:49 - function double name is same
04:53 - area and here we will take like Double
04:57 - L double w
05:02 - and it will return how to calculate area
05:05 - of rectangle length into width so L into
05:09 - W that's it obviously we will pass these
05:13 - two arguments while calling so first
05:15 - let's
05:16 - take
05:18 - double length comma width two
05:23 - variables right and as well as suppose
05:26 - we take another variable area of
05:28 - rectangle
05:30 - now after calling area of square let's
05:32 - ask from user to enter length and width
05:35 - of a rectangle right and
05:38 - now area of rect equal to we just call
05:42 - this function area and we'll
05:45 - pass whatever the length user has
05:47 - entered and the
05:51 - width right and simply print area of
05:54 - rectangle right now for same let's take
05:58 - one more uh
06:02 - variable
06:05 - radius and one variable area of
06:12 - circle radius and area of circle so
06:15 - let's
06:17 - enter that
06:18 - radius now area of circle is equal to
06:21 - let's call this area and let's pass just
06:25 - the
06:26 - radius and after that print area of
06:28 - circle
06:31 - return zero now let's define the third
06:33 - function
06:35 - also area area and third one is
06:39 - for area of circle so let's take a
06:41 - variable name here R simply or radius
06:44 - also you can take
06:45 - and area of circle is p Pi R square so
06:48 - you you need to take that value of pi so
06:51 - let's take a variable here double Pi is
06:53 - equal to it's fix 3.14 we'll take this
06:57 - one only and now
07:00 - return < rÂ² piun into R
07:04 - into R that's it let's R this and
07:08 - see what output you getting here first
07:12 - inter one side of square four area of
07:15 - square is 16 now enter length and width
07:17 - of rectangle so 3.4 and 4.5 area of
07:21 - rectangle is 15.3 enter radius of a
07:23 - circle let's take three so area of
07:26 - circle is 28.26%
07:30 - so this this is like one example of
07:32 - using overloaded function right area
07:36 - name is same you don't have to uh
07:39 - remember like maybe if the function
07:41 - overloaded overloading is not there then
07:43 - you have to write on area underscore
07:46 - circle area underscore rectangle area
07:48 - underscore square like this right and
07:51 - whenever you will call then for area of
07:54 - square you have to call area underscore
07:56 - square if you want to find out area of
07:58 - rectangle then are underscore rectangle
08:01 - but using function overloading there is
08:03 - no need to remember the name exact name
08:05 - of the function because name is same
08:07 - area just the type of argument and types
08:10 - of argument and number of arguments the
08:12 - parameter you pass that is different
08:14 - right so I hope you got this thing if
08:17 - you're not getting this it's okay take
08:19 - screenshot of this cing or I'll just
08:23 - paste this in uh description box or
08:26 - maybe in comment I'll pin this comment
08:28 - right and dry run this write down on a
08:31 - piece of paper and dry run this right
08:33 - and also try out different different
08:35 - example of this type using function
08:37 - overloading it's not like that you got
08:38 - this example and you are done with
08:39 - function overloading no try out
08:42 - different different examples of function
08:43 - overloading how you can use your program
08:45 - use uh function overloading in your
08:47 - program okay now that's it for this
08:49 - video now I'll see you in the next video
08:51 - till then bye-bye take care

Cleaned transcript:

hey everyone I hope you are safe and doing good so in the series of learning C++ programming language we are discussing functions in C++ in previous video we have seen some uh coding exercises based on functions right now we have discussed function overloading so we will see in this video uh exercise based on function overloading right and what is that exercise you have to write down a program to find area of different different shapes like Square rectangle and circle by calling a function area I would say by calling an overloaded function area so here you got it area is a function that would be overloaded here in your program right so the name of this uh function would be same area but you have to Define this function three times one for calculating area of square area of rectangle and area of circle right I hope you know how to find out area of square it's side into side side right you have to just give one uh let's suppose one integer variable side would be int and thus area of uh Square would return integer value right so return type would be int and argument will pass would be int second for calculating area of rectangle that would accept two argument length and width of rectangle that would be in double and it will return a double value right area of circle it will also take one argument that be double that is radius P R square right the area of circle and it will return double return type of that would be also double so three uh you have to Define this area function three times right but name would be same I hope you got my question right so now pause the video and try this out so I hope you have done this now we will Define that area function three times right so let let's take first prototype or function declaration so one would be in name would be area and it will take one argument of type int to calculate area of square second would be of type double and name would be same and it will take two argument double and double to calculate area of rectangle right and third is also return type is same double name is same area and it will take only one argument of type double this is to calculate area of circle right okay now we are calling these function in main we'll call this let's define these function first right so first is in area and in definition you have to take a variable name also that is like inside or any variable take a b c x y z s any variable name you can take right and it will simply return how to calculate area of square that length into length or the side into side or you can use that power function you can include that cth library and from there you can use power function to calculate power but here I'm just using simply side into side that's it right so same like here we take a variable int a variable Square underscore side and from user we will take input and simply we will pass that area this Square side here right but see it is returning integer Valu so you have to uh store that value or fetch that value in an integer variable right so let's take here in square side as well as a area of square this variable name area of square any variable name you can take and area of square equal to area and square we will here Square side will pass so whatever this function will return we we are going to store that value into this integer variable and we simply print this C out area of square is simply print this one you got it so till now let's run this and see if this function is working or not four and area of square is 16 yeah it is working right now let's define another function double name is same area and here we will take like Double L double w and it will return how to calculate area of rectangle length into width so L into W that's it obviously we will pass these two arguments while calling so first let's take double length comma width two variables right and as well as suppose we take another variable area of rectangle now after calling area of square let's ask from user to enter length and width of a rectangle right and now area of rect equal to we just call this function area and we'll pass whatever the length user has entered and the width right and simply print area of rectangle right now for same let's take one more uh variable radius and one variable area of circle radius and area of circle so let's enter that radius now area of circle is equal to let's call this area and let's pass just the radius and after that print area of circle return zero now let's define the third function also area area and third one is for area of circle so let's take a variable name here R simply or radius also you can take and area of circle is p Pi R square so you you need to take that value of pi so let's take a variable here double Pi is equal to it's fix 3.14 we'll take this one only and now return < rÂ² piun into R into R that's it let's R this and see what output you getting here first inter one side of square four area of square is 16 now enter length and width of rectangle so 3.4 and 4.5 area of rectangle is 15.3 enter radius of a circle let's take three so area of circle is 28.26% so this this is like one example of using overloaded function right area name is same you don't have to uh remember like maybe if the function overloaded overloading is not there then you have to write on area underscore circle area underscore rectangle area underscore square like this right and whenever you will call then for area of square you have to call area underscore square if you want to find out area of rectangle then are underscore rectangle but using function overloading there is no need to remember the name exact name of the function because name is same area just the type of argument and types of argument and number of arguments the parameter you pass that is different right so I hope you got this thing if you're not getting this it's okay take screenshot of this cing or I'll just paste this in uh description box or maybe in comment I'll pin this comment right and dry run this write down on a piece of paper and dry run this right and also try out different different example of this type using function overloading it's not like that you got this example and you are done with function overloading no try out different different examples of function overloading how you can use your program use uh function overloading in your program okay now that's it for this video now I'll see you in the next video till then byebye take care
