With timestamps:

00:04 - in the previous video we have seen how
00:07 - to add attribute to your class right how
00:10 - to create your own class how to create
00:12 - object and then how to add attribute
00:13 - right now remaining is obviously in
00:16 - class we are having like attribute as
00:18 - well as methods attribute means the
00:21 - object the you know attributes are
00:23 - basically the things that the object has
00:26 - like I am if I am an object then I'm
00:28 - having my name my phone number address
00:30 - these are objects and methods are the
00:33 - thing that the object does like I do
00:37 - like I do teach right so these are the
00:40 - methods so now in this video we'll see
00:42 - how to add methods to your class right
00:46 - so we have seen in the previous video
00:47 - init function as well how to initialize
00:50 - the attributes right so you please you
00:54 - first watch that video and then come to
00:56 - this video right then you will get it
00:58 - better because for this to understand
01:01 - this video you need to know what is that
01:02 - underscore underscore in it underscore
01:04 - underscore in bracket you have just
01:06 - passed cell what is that function right
01:10 - okay now
01:11 - this we have done in the previous video
01:13 - see the class was instructor
01:16 - okay the class name it should be capital
01:19 - i
01:20 - uh Pascal case uh the convention is
01:23 - Pascal case v used to name the class but
01:27 - if you you know take small I then it's
01:30 - also fine it will not give any syntax
01:31 - error but
01:33 - it is like the convention is basically
01:35 - to differentiate the class name variable
01:37 - name function name and like this right
01:39 - okay now
01:41 - we will add methods to our class
01:45 - so we are going to create a new file
01:48 - here
01:53 - class methods Dot py
01:56 - and let's take we are having same
01:58 - example I'll be taking we are having a
02:01 - class instructor right and now that init
02:07 - function
02:08 - and we are passing like two two
02:11 - parameter here one is the name and
02:13 - second one we have passed that was
02:16 - address so how to assign the value then
02:19 - self Dot
02:21 - name of the attribute is I'm taking name
02:24 - and here name
02:27 - so see these this and this should be
02:30 - same the parameter name and this value
02:32 - this should be
02:34 - same this name can be different
02:38 - it is not compulsory that this this name
02:40 - of this attribute should be same as the
02:42 - parameter name right these things we
02:45 - have discussed
02:46 - you know in previous video
02:49 - so let's take address and this is what
02:53 - address I am assigning
02:55 - and if you create
03:02 - an object of the class instructor then
03:06 - this time we need to pass
03:09 - if I run this then C you will get an
03:11 - error
03:12 - this instructor is missing two required
03:14 - positional argument line number five
03:15 - here we are creating an object so you
03:19 - have to pass name as well as address so
03:22 - one passing like name is equal to Jenny
03:24 - and suppose address is
03:27 - gurgaon
03:28 - so this time it will not give any error
03:30 - and if you print suppose instructor one
03:33 - wrote name then it will give you Jenny
03:37 - this is how we can access right so you
03:40 - know the self is just a keyword that
03:43 - bind the the the attribute
03:47 - attributes to the argument receive so
03:50 - this init function would be called every
03:52 - time you create an object so if you
03:55 - create
03:56 - two object then two time this init
03:58 - function would be called right so first
04:00 - time it would be called while we are
04:02 - creating this object at in Fifth Line
04:05 - while we are executing the Fifth Line so
04:08 - self means self is referring to the
04:10 - actual object now so self is referring
04:12 - instructor one so self is instructor one
04:15 - at this point of time so instructor one
04:16 - dot name whatever name you will pass
04:18 - Jenny instructor one dot address
04:21 - whatever address you will pass that is
04:23 - right now if I create another object
04:26 - same
04:28 - and instructor 2 is suppose
04:31 - Gia
04:35 - so at this point of time also this init
04:38 - function would be called every time you
04:40 - create an object this function would be
04:42 - called every time so now if we are
04:44 - calling
04:45 - if this function is being called during
04:47 - this time then this time the self is
04:49 - referring to instructor to this object
04:51 - so now self value is you can assume like
04:54 - instructor 2 and name value is Gia
04:57 - addresses same gurgaon so now selfish
05:00 - instructor 2 dot name gr instructor to
05:02 - dot address
05:04 - I hope now you got the basically the
05:06 - other working why we are using this self
05:08 - here right it is binding
05:11 - the now object attribute to the argument
05:14 - received right okay
05:17 - now we we are we we have a default also
05:21 - like default
05:22 - attribute that is followers because it
05:25 - is not compulsory that every teacher is
05:27 - on phone every teacher is on sorry self
05:29 - dot Instagram
05:32 - so by default rather than passing zero
05:34 - zero zero for every teacher if you have
05:36 - created 10 object then every time you
05:39 - will pass zero zero zero as an argument
05:40 - if you write down here followers
05:43 - as a parameter but set the default value
05:46 - so by default you don't need to pass 0
05:48 - here now followers would be 0 0 for
05:50 - every object you create right or rather
05:52 - than this one more ways what you can
05:53 - create a class object variable here
05:57 - followers is equal to 0 rather than here
06:02 - so now this here see we are not using
06:04 - any cell keywords self growth follower
06:07 - no because these are outside of this
06:09 - init function so this is what a class
06:12 - object variable for every object that
06:15 - you create from this class instructor
06:17 - instructor class the follower this
06:20 - attribute would be
06:21 - Associated to every object and for every
06:24 - object the value of polar would be zero
06:25 - so see if you want to check then if you
06:28 - want to print like instructor
06:30 - one dot
06:32 - followers then you will give you will
06:35 - get 0 see
06:38 - although we haven't initialized this we
06:40 - are not passing any follower here we
06:41 - haven't initialized here self dot
06:43 - follower zero so where from where this
06:46 - is taking the value follow a zero for
06:48 - instructor 2 also follow us value is 0.
06:50 - right now this is what just a quick
06:53 - recap of the previous one because we are
06:55 - just adding the attribute we have just
06:57 - started attribute now how to add methods
06:59 - so methods are basically
07:01 - simple you can say these are functions
07:04 - like if
07:06 - same
07:07 - what is the syntax of creating a
07:10 - function def function name and round
07:13 - bracket and if you want to pass any
07:14 - parameter just pass the parameter right
07:16 - same
07:18 - you can say that um
07:20 - syntax is here depth function name
07:23 - suppose simple I am taking display
07:25 - function
07:27 - and if you something like this if you
07:30 - put these bracket then automatically
07:32 - here you will get self keyword
07:35 - because this is compulsory
07:37 - on every if you call this display method
07:42 - on this instructor one then the self
07:46 - will bind this function to
07:50 - this object on which you are calling
07:52 - this display so at this point of time
07:54 - self is a structure one if you are
07:56 - calling this display function on
07:58 - instructor 2 object second object then
08:00 - at that point of time self will become
08:02 - instructor 2. so it will basically bind
08:04 - right
08:06 - the function or the method
08:09 - to the object on which you are calling
08:11 - this method so means a function becomes
08:15 - method when it is attached to a
08:17 - particular object right that is why we
08:20 - are not calling it function we are
08:21 - calling it method so here I am simply
08:24 - printing
08:25 - like print
08:27 - and
08:28 - suppose I print hi
08:31 - that's it this is the simplest example
08:34 - I'm taking right and on instructor 1 how
08:37 - to call this method now if you call this
08:40 - if you access this method using first
08:42 - object
08:43 - then simply we cannot write down here
08:46 - like display
08:48 - and just call display function no it
08:51 - will give error
08:52 - see the name display is not defined in
08:56 - line number 11 right
08:58 - so you have to attach this
09:01 - with the object name
09:04 - so on instructor 1 I want to call this
09:06 - display function so instructor 1 dot
09:08 - display right this is how an object can
09:11 - access
09:12 - the method of a class or attribute of a
09:14 - class object name dot then whatever you
09:17 - want to access display okay if you run
09:19 - this
09:21 - see you are getting
09:23 - Jenny high and C yeah you are getting
09:26 - none here
09:28 - so
09:30 - where is the problem why you are getting
09:31 - this none
09:33 - so please pause the video and try this
09:34 - out why you are getting Jenny High then
09:36 - none sorry
09:39 - so see the problem is
09:42 - it will print Jenny now we are calling
09:45 - in print we are calling instructor one
09:46 - dot display now we are calling this so
09:49 - control would be here right now self is
09:52 - this time instructor one so it will
09:54 - print in display we are having just
09:56 - print hi so it will print hi now you are
09:59 - printing means whatever this this will
10:03 - return that thing we want to print but
10:06 - here we are not
10:07 - writing any return statement
10:09 - so if you don't write any return
10:11 - statement then definitely we know every
10:13 - function is going to return something if
10:14 - you do not write any return statement
10:16 - then it will return none so that is why
10:18 - it is returning none here and we are
10:21 - printing none we are getting the answer
10:24 - Jenny higher than none so just remove
10:27 - this print
10:28 - and simply call display function on
10:31 - instructor one object right now let's
10:33 - run this
10:34 - see Jenny and hi
10:37 - right I hope you got this
10:39 - now this is the simplest example you
10:40 - have taken now suppose basically methods
10:43 - are basically you know the actions we
10:45 - perform on the attributes may be using
10:48 - the values of the attributes and do
10:50 - something or maybe modify the attribute
10:52 - value and do something and return some
10:54 - result
10:55 - that is obviously the use of methods it
10:58 - is not about you know any use like just
11:01 - print hi but this is just to make you
11:03 - understand like how you can define a
11:06 - function right now if you want to print
11:08 - if suppose I want to call this one here
11:11 - so it should print hi I am I am genuine
11:15 - because instructor one name is Jenny
11:19 - so can you do this
11:20 - yes you can pause the video and try this
11:23 - out
11:24 - so hi I want to print hi
11:28 - I am gen so from where I will get Jenny
11:35 - from the name attribute
11:37 - in name attribute of instructor 1 I have
11:40 - gen so from the name attribute just
11:43 - fetch the value so directly if you write
11:46 - name here so obviously you have to use F
11:48 - string
11:51 - then what do you think
11:52 - you will get Jenny or not let's run this
11:56 - C
11:57 - it is giving an error
11:59 - here display line number two and line
12:01 - number eight High I am this name name is
12:04 - not Define
12:05 - name is not defined just it's just a
12:08 - variable and we are using here not just
12:09 - simple variables attributes you have to
12:11 - attach this variable to a specific
12:14 - object
12:16 - for Which object you are using this name
12:18 - obviously instructor one so rather than
12:21 - obviously instructor one dot name here
12:23 - you will write
12:25 - self one note name so sorry self dot
12:28 - name because here self is referring to
12:32 - that particular object on which you are
12:33 - calling this display function so here
12:35 - cell phone is instructor one so
12:37 - automatically it will fetch the name
12:39 - from instructor one hi I am Jenny
12:42 - right I hope you got this so the self
12:45 - keyword you will get you know many times
12:48 - within this class only not outside of
12:50 - the class we are using cell we are using
12:52 - within this class only cell right and
12:56 - my name is Jenny and suppose I want like
12:59 - I teach python
13:02 - so
13:03 - I want to pass a parameter an argument
13:06 - as an argument what subject I teach so
13:08 - for that suppose in display I want to
13:11 - pass like I teach
13:14 - python
13:16 - so for this obviously you need some
13:18 - parameter to fetch to you know uh store
13:21 - that value that string so
13:24 - I'm just taking a parameter name subject
13:26 - name right hi I am the name and
13:31 - I
13:33 - teach
13:34 - now how you will fetch that thing I
13:36 - teach the subject name the python python
13:40 - it should print hi I am Jenny and I
13:42 - teach python
13:43 - so you can pause the video and try this
13:45 - out
13:46 - okay I hope you have done this and you
13:49 - just need to write down here
13:52 - subject name no need to write down self
13:55 - load subject name
13:57 - first let's run this and see
13:59 - I'm Jenny and I and I teach python why
14:02 - you are not writing here self
14:04 - dot pipe so uh dot subject name if you
14:07 - write this thing let's run this and you
14:09 - will see you will get a error message
14:13 - like in line number 12 here you are
14:17 - calling this and then in line number
14:18 - eight line number eight means
14:21 - uh
14:23 - here here you are defining this function
14:26 - right now what this is this line
14:31 - an attribute error it's an attribute
14:33 - error instructor object has no attribute
14:35 - subject name because when you access
14:39 - self Dot like this then this should be
14:42 - an attribute
14:44 - because I am using self dot name because
14:46 - name is an attribute of
14:48 - that object
14:50 - it's an attribute in this class but
14:52 - subject name is not any attribute we
14:54 - have only two attribute name and address
14:56 - right so how this self can bind
15:00 - because this can only bind the attribute
15:03 - this attribute to that particular object
15:06 - but subject name is not any attribute we
15:08 - are just passing
15:09 - an argument so simply you will pass
15:12 - Python and it will take the value from
15:14 - subject name python no need to write
15:16 - down here self load
15:18 - subject name I hope now you got the
15:20 - difference why I am writing a self dot
15:22 - names and here just subject name we are
15:25 - not passing any name here and we are
15:26 - still getting name Jenny
15:29 - right because it is an attribute of the
15:31 - object and we are passing subject name
15:33 - and we are getting obviously the subject
15:34 - name right
15:36 - so now
15:39 - if you don't know like maybe subject
15:42 - name if I pass like python simply python
15:45 - then it will give error
15:46 - python is not defined in line number 12.
15:49 - right
15:51 - because this this is expecting a string
15:56 - as an argument
15:57 - so like the proper ways you can just
16:00 - write down here in comments like hash
16:03 - and
16:04 - this will accept subject name as a
16:07 - string
16:08 - right or expect a string
16:11 - as a subject name so to Define that
16:14 - thing you can write down here that
16:15 - proper thing so that if anyone see your
16:19 - program then he or she will get yeah
16:21 - they have to pass
16:23 - string right so this should be string
16:27 - here
16:28 - and if suppose if you want to update the
16:31 - follower count right so if suppose I
16:34 - take another
16:35 - function depth
16:41 - update followers right and obviously it
16:44 - will be self
16:46 - and
16:48 - on instructor one I am calling this
16:51 - function on instructor 1 Dot
16:54 - update follower right and here
16:58 - I want I just pass a name it means that
17:02 - person has started following instructor
17:04 - one so the follower count of instructor
17:06 - 1 would be increased by one right so the
17:11 - follower count of
17:14 - self load
17:15 - followers of that object on which we are
17:18 - calling this function so definitely you
17:19 - will write yourself self dot followers
17:21 - count will increased by one right so
17:26 - here I am passing a suppose name
17:29 - like pile means pile has started
17:33 - following
17:34 - instructor one and instructor one is
17:36 - Jenny means pile has started following
17:38 - Jenny so Jenny's followers would be plus
17:41 - one right and now if you print
17:47 - like instructor one dot
17:50 - followers
17:52 - then see what you will get
17:55 - okay it is giving an error because in
17:57 - line number 17 here we are passing
18:00 - instructor type error it takes one
18:03 - positional argument but two are given
18:05 - okay
18:06 - to accept obviously to accept this pile
18:09 - you have to
18:11 - give up obviously the parameter name
18:14 - because one is self to and one is pile
18:18 - for pile to accept pile you have to give
18:21 - a parameter name follow our name
18:23 - see now hi I am Jenny I teach Python and
18:25 - one now follower count of Jenny is one
18:27 - it's starting it was Zero now see you
18:30 - have updated the attribute
18:33 - right
18:34 - so this also you can do if if suppose I
18:37 - have one more instructor instructor too
18:39 - and on instructor two for instructor two
18:42 - I am just printing
18:45 - followers
18:48 - then it will give zero
18:50 - see one was for instructor one and at
18:54 - last we are getting zero so that is for
18:56 - instructor two because on instructor 2
18:57 - you haven't pulled this update follower
18:59 - function right if you call this update
19:02 - folder function on instructor 2 as well
19:04 - like instructor two Dot
19:06 - update follower and
19:09 - suppose Jenny has started following
19:13 - instructor to instructor 2 is Gia
19:16 - so let's run this
19:18 - now both are having
19:23 - two two obviously you have to
19:26 - okay
19:27 - still zero because
19:29 - we are printing
19:31 - here so after update after calling this
19:34 - update you have to you have to print
19:36 - instructor to wrote follower right see
19:39 - now both
19:40 - one and one
19:42 - for both it's one and one right four
19:45 - over count
19:47 - so this is how you can add methods and
19:50 - so you can I hope you got how to add
19:53 - methods and when you use self load the
19:56 - name and like without self uh where when
19:59 - you can write down any variable name or
20:01 - attribute name sorry this is not
20:03 - attribute this is just a variable right
20:05 - or argument you are passing
20:07 - fine
20:08 - so now you can try this out like maybe
20:11 - you can update
20:12 - for maybe you can create two more
20:15 - objects and you can update the followers
20:17 - right or maybe you can try to print like
20:20 - follow account as well as following
20:22 - count if I started like someone GS
20:25 - started following me so my follow
20:27 - account would be one and Gia's following
20:30 - count would be one right followers and
20:32 - following if you are on Instagram then
20:34 - you know this thing right followers and
20:36 - following two things are there
20:39 - so you can play around with this code
20:42 - So based on this we'll be discussing one
20:44 - exercise in the next video so I'll see
20:46 - the next video bye take care

Cleaned transcript:

in the previous video we have seen how to add attribute to your class right how to create your own class how to create object and then how to add attribute right now remaining is obviously in class we are having like attribute as well as methods attribute means the object the you know attributes are basically the things that the object has like I am if I am an object then I'm having my name my phone number address these are objects and methods are the thing that the object does like I do like I do teach right so these are the methods so now in this video we'll see how to add methods to your class right so we have seen in the previous video init function as well how to initialize the attributes right so you please you first watch that video and then come to this video right then you will get it better because for this to understand this video you need to know what is that underscore underscore in it underscore underscore in bracket you have just passed cell what is that function right okay now this we have done in the previous video see the class was instructor okay the class name it should be capital i uh Pascal case uh the convention is Pascal case v used to name the class but if you you know take small I then it's also fine it will not give any syntax error but it is like the convention is basically to differentiate the class name variable name function name and like this right okay now we will add methods to our class so we are going to create a new file here class methods Dot py and let's take we are having same example I'll be taking we are having a class instructor right and now that init function and we are passing like two two parameter here one is the name and second one we have passed that was address so how to assign the value then self Dot name of the attribute is I'm taking name and here name so see these this and this should be same the parameter name and this value this should be same this name can be different it is not compulsory that this this name of this attribute should be same as the parameter name right these things we have discussed you know in previous video so let's take address and this is what address I am assigning and if you create an object of the class instructor then this time we need to pass if I run this then C you will get an error this instructor is missing two required positional argument line number five here we are creating an object so you have to pass name as well as address so one passing like name is equal to Jenny and suppose address is gurgaon so this time it will not give any error and if you print suppose instructor one wrote name then it will give you Jenny this is how we can access right so you know the self is just a keyword that bind the the the attribute attributes to the argument receive so this init function would be called every time you create an object so if you create two object then two time this init function would be called right so first time it would be called while we are creating this object at in Fifth Line while we are executing the Fifth Line so self means self is referring to the actual object now so self is referring instructor one so self is instructor one at this point of time so instructor one dot name whatever name you will pass Jenny instructor one dot address whatever address you will pass that is right now if I create another object same and instructor 2 is suppose Gia so at this point of time also this init function would be called every time you create an object this function would be called every time so now if we are calling if this function is being called during this time then this time the self is referring to instructor to this object so now self value is you can assume like instructor 2 and name value is Gia addresses same gurgaon so now selfish instructor 2 dot name gr instructor to dot address I hope now you got the basically the other working why we are using this self here right it is binding the now object attribute to the argument received right okay now we we are we we have a default also like default attribute that is followers because it is not compulsory that every teacher is on phone every teacher is on sorry self dot Instagram so by default rather than passing zero zero zero for every teacher if you have created 10 object then every time you will pass zero zero zero as an argument if you write down here followers as a parameter but set the default value so by default you don't need to pass 0 here now followers would be 0 0 for every object you create right or rather than this one more ways what you can create a class object variable here followers is equal to 0 rather than here so now this here see we are not using any cell keywords self growth follower no because these are outside of this init function so this is what a class object variable for every object that you create from this class instructor instructor class the follower this attribute would be Associated to every object and for every object the value of polar would be zero so see if you want to check then if you want to print like instructor one dot followers then you will give you will get 0 see although we haven't initialized this we are not passing any follower here we haven't initialized here self dot follower zero so where from where this is taking the value follow a zero for instructor 2 also follow us value is 0. right now this is what just a quick recap of the previous one because we are just adding the attribute we have just started attribute now how to add methods so methods are basically simple you can say these are functions like if same what is the syntax of creating a function def function name and round bracket and if you want to pass any parameter just pass the parameter right same you can say that um syntax is here depth function name suppose simple I am taking display function and if you something like this if you put these bracket then automatically here you will get self keyword because this is compulsory on every if you call this display method on this instructor one then the self will bind this function to this object on which you are calling this display so at this point of time self is a structure one if you are calling this display function on instructor 2 object second object then at that point of time self will become instructor 2. so it will basically bind right the function or the method to the object on which you are calling this method so means a function becomes method when it is attached to a particular object right that is why we are not calling it function we are calling it method so here I am simply printing like print and suppose I print hi that's it this is the simplest example I'm taking right and on instructor 1 how to call this method now if you call this if you access this method using first object then simply we cannot write down here like display and just call display function no it will give error see the name display is not defined in line number 11 right so you have to attach this with the object name so on instructor 1 I want to call this display function so instructor 1 dot display right this is how an object can access the method of a class or attribute of a class object name dot then whatever you want to access display okay if you run this see you are getting Jenny high and C yeah you are getting none here so where is the problem why you are getting this none so please pause the video and try this out why you are getting Jenny High then none sorry so see the problem is it will print Jenny now we are calling in print we are calling instructor one dot display now we are calling this so control would be here right now self is this time instructor one so it will print in display we are having just print hi so it will print hi now you are printing means whatever this this will return that thing we want to print but here we are not writing any return statement so if you don't write any return statement then definitely we know every function is going to return something if you do not write any return statement then it will return none so that is why it is returning none here and we are printing none we are getting the answer Jenny higher than none so just remove this print and simply call display function on instructor one object right now let's run this see Jenny and hi right I hope you got this now this is the simplest example you have taken now suppose basically methods are basically you know the actions we perform on the attributes may be using the values of the attributes and do something or maybe modify the attribute value and do something and return some result that is obviously the use of methods it is not about you know any use like just print hi but this is just to make you understand like how you can define a function right now if you want to print if suppose I want to call this one here so it should print hi I am I am genuine because instructor one name is Jenny so can you do this yes you can pause the video and try this out so hi I want to print hi I am gen so from where I will get Jenny from the name attribute in name attribute of instructor 1 I have gen so from the name attribute just fetch the value so directly if you write name here so obviously you have to use F string then what do you think you will get Jenny or not let's run this C it is giving an error here display line number two and line number eight High I am this name name is not Define name is not defined just it's just a variable and we are using here not just simple variables attributes you have to attach this variable to a specific object for Which object you are using this name obviously instructor one so rather than obviously instructor one dot name here you will write self one note name so sorry self dot name because here self is referring to that particular object on which you are calling this display function so here cell phone is instructor one so automatically it will fetch the name from instructor one hi I am Jenny right I hope you got this so the self keyword you will get you know many times within this class only not outside of the class we are using cell we are using within this class only cell right and my name is Jenny and suppose I want like I teach python so I want to pass a parameter an argument as an argument what subject I teach so for that suppose in display I want to pass like I teach python so for this obviously you need some parameter to fetch to you know uh store that value that string so I'm just taking a parameter name subject name right hi I am the name and I teach now how you will fetch that thing I teach the subject name the python python it should print hi I am Jenny and I teach python so you can pause the video and try this out okay I hope you have done this and you just need to write down here subject name no need to write down self load subject name first let's run this and see I'm Jenny and I and I teach python why you are not writing here self dot pipe so uh dot subject name if you write this thing let's run this and you will see you will get a error message like in line number 12 here you are calling this and then in line number eight line number eight means uh here here you are defining this function right now what this is this line an attribute error it's an attribute error instructor object has no attribute subject name because when you access self Dot like this then this should be an attribute because I am using self dot name because name is an attribute of that object it's an attribute in this class but subject name is not any attribute we have only two attribute name and address right so how this self can bind because this can only bind the attribute this attribute to that particular object but subject name is not any attribute we are just passing an argument so simply you will pass Python and it will take the value from subject name python no need to write down here self load subject name I hope now you got the difference why I am writing a self dot names and here just subject name we are not passing any name here and we are still getting name Jenny right because it is an attribute of the object and we are passing subject name and we are getting obviously the subject name right so now if you don't know like maybe subject name if I pass like python simply python then it will give error python is not defined in line number 12. right because this this is expecting a string as an argument so like the proper ways you can just write down here in comments like hash and this will accept subject name as a string right or expect a string as a subject name so to Define that thing you can write down here that proper thing so that if anyone see your program then he or she will get yeah they have to pass string right so this should be string here and if suppose if you want to update the follower count right so if suppose I take another function depth update followers right and obviously it will be self and on instructor one I am calling this function on instructor 1 Dot update follower right and here I want I just pass a name it means that person has started following instructor one so the follower count of instructor 1 would be increased by one right so the follower count of self load followers of that object on which we are calling this function so definitely you will write yourself self dot followers count will increased by one right so here I am passing a suppose name like pile means pile has started following instructor one and instructor one is Jenny means pile has started following Jenny so Jenny's followers would be plus one right and now if you print like instructor one dot followers then see what you will get okay it is giving an error because in line number 17 here we are passing instructor type error it takes one positional argument but two are given okay to accept obviously to accept this pile you have to give up obviously the parameter name because one is self to and one is pile for pile to accept pile you have to give a parameter name follow our name see now hi I am Jenny I teach Python and one now follower count of Jenny is one it's starting it was Zero now see you have updated the attribute right so this also you can do if if suppose I have one more instructor instructor too and on instructor two for instructor two I am just printing followers then it will give zero see one was for instructor one and at last we are getting zero so that is for instructor two because on instructor 2 you haven't pulled this update follower function right if you call this update folder function on instructor 2 as well like instructor two Dot update follower and suppose Jenny has started following instructor to instructor 2 is Gia so let's run this now both are having two two obviously you have to okay still zero because we are printing here so after update after calling this update you have to you have to print instructor to wrote follower right see now both one and one for both it's one and one right four over count so this is how you can add methods and so you can I hope you got how to add methods and when you use self load the name and like without self uh where when you can write down any variable name or attribute name sorry this is not attribute this is just a variable right or argument you are passing fine so now you can try this out like maybe you can update for maybe you can create two more objects and you can update the followers right or maybe you can try to print like follow account as well as following count if I started like someone GS started following me so my follow account would be one and Gia's following count would be one right followers and following if you are on Instagram then you know this thing right followers and following two things are there so you can play around with this code So based on this we'll be discussing one exercise in the next video so I'll see the next video bye take care
