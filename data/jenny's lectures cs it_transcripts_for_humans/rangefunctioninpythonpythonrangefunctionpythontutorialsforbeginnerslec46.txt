With timestamps:

00:00 - so in the series of learning Python
00:01 - programming language in the previous
00:03 - video we have seen one coding exercise
00:04 - program we have written a program to
00:06 - find out a maximum among other stock
00:08 - numbers okay and also we have done one
00:10 - exercise to find out every site from
00:12 - list of heights right so in those uh
00:15 - although in those exercises in those
00:17 - videos we have used this function range
00:20 - function right but in this video I'll be
00:23 - talking about it about this function in
00:25 - detail right with many examples
00:29 - okay proper syntax and you know in how
00:32 - many ways you can use this range
00:33 - function right what is the working of
00:35 - this range function so if you have seen
00:38 - those previous coding sizes then basic
00:41 - idea you have I think about this range
00:43 - function
00:44 - it will produce it will generate a
00:47 - series of numbers right and so let me
00:50 - just show you first of all the syntax
00:52 - you will get it better with the help of
00:54 - example so just write arrange here we
00:57 - have basically three arguments start
01:00 - stop and one is
01:03 - step size
01:05 - but these three are not compulsory to
01:08 - it you know it's not mandatory to give
01:11 - all the three arguments in this range
01:12 - function
01:13 - right
01:15 - so you can simply give something like
01:17 - this range start means starting point of
01:21 - that
01:22 - series of numbers and it is completely
01:24 - optional by default it is 0 by default
01:28 - if you don't get stop means where to
01:30 - stop
01:31 - this series right it is compulsory
01:34 - obviously you have to provide a way to
01:36 - stop
01:37 - maybe you want to print number from 0 to
01:39 - 10 so you have to tell like you have to
01:43 - stop at 10 you have to tell this
01:45 - computer through this program or through
01:47 - this function so you have to if this is
01:49 - mandatory to give stop
01:51 - step size is also optional by default
01:54 - step size is one
01:56 - now what is this step size let me just
01:58 - show you an example if if I write
02:00 - something like this if I write range 5
02:04 - so where we are thinking we are
02:06 - providing only one argument so it is
02:08 - what so obviously by default stat is 0
02:11 - step size is one so this 5 would be
02:13 - because this stop only one argument is
02:15 - mandated to specify so this is what stop
02:18 - five
02:19 - so it will not produce till five
02:22 - the range would be started from zero
02:24 - then one then two then three then four
02:26 - like this
02:28 - five numbers one two three four five not
02:32 - till five so whatever you will get here
02:33 - you will give here
02:35 - minus one till minus one it will point
02:37 - five minus one four right
02:39 - but if you want to print
02:42 - if you want to start from a specific
02:43 - number not a zero like I want to start
02:46 - from
02:48 - 2 so you can give start point and stop
02:51 - point where you want to stop I want to
02:52 - print till two to five two two five five
02:56 - including so you have to specify here
02:58 - six now it will print two three four
03:03 - five because this is stop stop minus one
03:06 - two stop minus minus one it will print
03:08 - right
03:09 - as well as if you give range like two
03:13 - six and here by default by default step
03:16 - size is one so see we are increasing by
03:18 - one two plus one three plus one plus one
03:21 - like this if I want to skip
03:25 - step size is two so it means it will
03:27 - print from two it will start then to
03:31 - three and four so it will skip three and
03:34 - it will print four two step size one two
03:38 - so it will skip three and four would be
03:41 - printed after that nothing would be
03:42 - printed because one but after that at
03:44 - second we have nothing based
03:46 - the range is still six so it will print
03:48 - only two and four
03:50 - right so basically the idea is how it
03:53 - will print this thing suppose this start
03:56 - point is I this is J this is K
04:00 - so how it will work if you provide all
04:02 - the three things
04:03 - first it would print I then I plus k
04:07 - then I plus 2K I plus 3K till
04:14 - this is J this is J J minus 1.
04:19 - so this is like general formula we can
04:23 - say if you provide everything and
04:25 - obviously for this also this formula
04:26 - will work because by default here I is a
04:28 - 0 and K is 1 and J is five so you can
04:32 - put all the three things in this formula
04:34 - and you will get you will get the series
04:36 - only
04:37 - right
04:38 - now we can use this range function with
04:40 - for Loop if you want to Loop through a
04:43 - set of code or specific a block of code
04:45 - for specific number of time then you can
04:48 - use a range here what is the formula how
04:50 - we can use just write down four variable
04:54 - name any variable name you can take in
04:58 - range
05:00 - and here you can provide anything like i
05:02 - j and k
05:04 - and there you can write down some
05:07 - statements whatever statement you want
05:09 - to execute so this whatever you will
05:11 - write here this code would be executed
05:13 - as specific number of time
05:16 - how many times that would depend what
05:19 - you what you will provide in this range
05:21 - function
05:22 - right
05:23 - right so we can also use this range
05:26 - function to Loop through a set of code a
05:29 - specific number of time right based on
05:32 - that we'll see one according exercise in
05:34 - next video so now let me let's do some
05:36 - practical and we'll see on laptop how
05:38 - this range function works okay so let's
05:41 - create here a new file
05:46 - and the name range underscore function
05:50 - right dot p y
05:54 - now see basically let's see range
05:57 - function I'm just giving one argument
06:00 - and whatever it will give I am storing
06:02 - that into
06:03 - a variable a right
06:05 - but in AV we cannot simply print a
06:07 - because we have range will produce 0 1 2
06:11 - 3 4. 4 till 5 numbers
06:14 - so in a using indexes we can print like
06:18 - print now a of 0 if you want to print a
06:22 - of 0 that would be what C 0. and a of 1
06:27 - would be
06:29 - here one as you can see
06:32 - right now suppose I'm
06:35 - not taking this from 2 I am going to
06:38 - print 2 till 5. so starting point now at
06:42 - a zeroth
06:43 - at 0th index we would be having what
06:48 - let's see see two
06:51 - okay
06:52 - so like this we can print so let's see
06:55 - use this in for Loops so if you want to
06:58 - print all the numbers rather than you
07:00 - can simply write print a of 0 then a of
07:03 - one two three like this right
07:05 - but obviously we will not if I want to
07:08 - print range from 1 to 10 so will not
07:11 - write this print statement 10 times so
07:13 - better idea we have for low
07:15 - so we can iterate this so for I
07:18 - in a
07:20 - here the list name or you can say
07:23 - variable name is a so I in
07:26 - a right and simply we can print
07:30 - I
07:31 - rather than using this indices
07:34 - that would be fine so it will print two
07:37 - three four
07:38 - right
07:39 - and 2 2 suppose I am printing 2 to 15.
07:44 - with
07:45 - step size is 2 so this time what it will
07:48 - print C
07:50 - 2 then 4 then 6 8 something like this
07:53 - step size is two so it will skip one
07:55 - element if step size is 3 then it will
07:59 - skip two elements it will skip three and
08:02 - four then five would be printed as you
08:04 - can see
08:05 - right
08:07 - and here you can also use negative
08:09 - negative thing
08:10 - if I am writing here minus five let's
08:13 - see minus three so step size is minus
08:15 - three simply the formula is I then I
08:18 - plus 1 sorry I plus k i plus 2 k i plus
08:21 - 3 K like this right okay if in this case
08:26 - let's run this and see you will get
08:28 - nothing why so because here
08:32 - c i is equal to 2
08:36 - J is equal to 15 K is equal to
08:40 - minus 3 so let's put this thing in the
08:43 - formula
08:45 - okay
08:46 - so 2 first thing is 2 will be printed
08:49 - fine then I plus K means 2 plus minus 3.
08:54 - by it would be 2 plus minus 3 means 2
08:57 - minus 3 will be minus 1.
09:00 - but once first two then minus 1 then 2
09:05 - plus
09:07 - 2K
09:09 - 3 2 6 means 2 minus 6 minus 5 but
09:13 - obviously till 14 we are going to print
09:15 - so it is not going to be any you know
09:17 - sequence of numbers 2 minus 1 and minus
09:20 - 6 something like this so it will print
09:22 - nothing so you have to give here
09:25 - you know a valid range valid step size
09:28 - start and stop something like this
09:31 - so if I give here and see 215 if I give
09:36 - a 0.
09:38 - 0 is also not allowed
09:40 - see it will give an error
09:43 - in line number one we have value error
09:46 - range argument 3 must not be zero so
09:49 - these are some rules you can write down
09:50 - like the argument three the step size
09:52 - cannot be zero because if step size is
09:54 - zero then how we are going to move
09:56 - forward or maybe backward
09:58 - there should be some step size right so
10:01 - it cannot be zero and all the three
10:03 - arguments start stop end step size must
10:07 - be integer right you cannot take your
10:10 - string or float or Boolean value or
10:13 - anything else suppose you take here
10:15 - string this two is string
10:18 - and step size I am taking two
10:20 - let's run this
10:22 - c i parrot string object cannot be
10:25 - interpreted as an integer in line number
10:27 - one it should be integer right
10:31 - so let's take one more example if if I
10:33 - write here like this
10:36 - in negative sorry uh like from 10 to 1
10:40 - you want to print that also you can do
10:41 - start sizes 10 stop size should be zero
10:46 - and nothing
10:48 - okay this case it will not print
10:50 - anything see no output you will get
10:52 - because by default K is 1 so 10 plus 1
10:58 - eyes 10 10 plus 1 is 11 but stop size is
11:02 - sorry the the stop point is zero
11:06 - so we are moving 10 11 12 we cannot
11:09 - reach 2 0.
11:11 - right so this would not print anything
11:12 - but you can do here one thing you can
11:15 - write down here minus one the step size
11:18 - you can give minus 1.
11:19 - here it will print C
11:23 - 10 9 8 7 till 1 it will print like this
11:27 - in reverse order also you can print
11:28 - negative also you can give and if I
11:31 - write something like this like minus 1
11:34 - minus 10
11:36 - n minus 1. let's run this what you will
11:39 - get
11:40 - C
11:41 - minus 1 to minus 9 it will print this
11:44 - thing is valid
11:45 - right
11:46 - so how it will work you can simply put
11:48 - that I J K values into the formula by
11:51 - default I value 0 K value is 1 and
11:53 - obviously one value
11:55 - must be there right so you can put all
11:58 - the values in the formula if it is
12:00 - working then you will give some output
12:01 - otherwise it will not give any output so
12:03 - now we have one quiz like you have to
12:05 - add numbers
12:08 - from 1 to 100 and you have to print the
12:10 - sum
12:11 - how you will do this pause the view and
12:13 - try this out
12:15 - so I hope you have done this exercise
12:18 - now let's
12:19 - do this
12:20 - let's take first a variable suppose
12:23 - total
12:26 - total is equal to it first to zero so
12:28 - for I in now what range
12:32 - I want from 1 to
12:35 - 100 so I can specify in range
12:39 - from 1 to 100 but you cannot write down
12:41 - 100 here because it will take until 99
12:45 - till the stop Point minus one so you
12:47 - have to specify one zero one and here we
12:49 - can rather than printing this we can
12:52 - simply do what simple total plus equal
12:56 - to
12:57 - I what you can write in total is equal
13:00 - to Total plus I that is also fine right
13:02 - and outside of this for Loop we can
13:05 - simply print
13:07 - total right so let's run this
13:12 - it will give you five zero five zero and
13:14 - this is the answer one plus two plus
13:15 - three plus four plus up to 100 it would
13:19 - be five zero five zero right so I hope
13:21 - you got what is range function I have to
13:23 - use it how many ways we can use this
13:25 - range function in for Loop how we can
13:27 - use this thing right so in the next
13:28 - video we'll see when coding exercise so
13:29 - now it's in the next video bye take care

Cleaned transcript:

so in the series of learning Python programming language in the previous video we have seen one coding exercise program we have written a program to find out a maximum among other stock numbers okay and also we have done one exercise to find out every site from list of heights right so in those uh although in those exercises in those videos we have used this function range function right but in this video I'll be talking about it about this function in detail right with many examples okay proper syntax and you know in how many ways you can use this range function right what is the working of this range function so if you have seen those previous coding sizes then basic idea you have I think about this range function it will produce it will generate a series of numbers right and so let me just show you first of all the syntax you will get it better with the help of example so just write arrange here we have basically three arguments start stop and one is step size but these three are not compulsory to it you know it's not mandatory to give all the three arguments in this range function right so you can simply give something like this range start means starting point of that series of numbers and it is completely optional by default it is 0 by default if you don't get stop means where to stop this series right it is compulsory obviously you have to provide a way to stop maybe you want to print number from 0 to 10 so you have to tell like you have to stop at 10 you have to tell this computer through this program or through this function so you have to if this is mandatory to give stop step size is also optional by default step size is one now what is this step size let me just show you an example if if I write something like this if I write range 5 so where we are thinking we are providing only one argument so it is what so obviously by default stat is 0 step size is one so this 5 would be because this stop only one argument is mandated to specify so this is what stop five so it will not produce till five the range would be started from zero then one then two then three then four like this five numbers one two three four five not till five so whatever you will get here you will give here minus one till minus one it will point five minus one four right but if you want to print if you want to start from a specific number not a zero like I want to start from 2 so you can give start point and stop point where you want to stop I want to print till two to five two two five five including so you have to specify here six now it will print two three four five because this is stop stop minus one two stop minus minus one it will print right as well as if you give range like two six and here by default by default step size is one so see we are increasing by one two plus one three plus one plus one like this if I want to skip step size is two so it means it will print from two it will start then to three and four so it will skip three and it will print four two step size one two so it will skip three and four would be printed after that nothing would be printed because one but after that at second we have nothing based the range is still six so it will print only two and four right so basically the idea is how it will print this thing suppose this start point is I this is J this is K so how it will work if you provide all the three things first it would print I then I plus k then I plus 2K I plus 3K till this is J this is J J minus 1. so this is like general formula we can say if you provide everything and obviously for this also this formula will work because by default here I is a 0 and K is 1 and J is five so you can put all the three things in this formula and you will get you will get the series only right now we can use this range function with for Loop if you want to Loop through a set of code or specific a block of code for specific number of time then you can use a range here what is the formula how we can use just write down four variable name any variable name you can take in range and here you can provide anything like i j and k and there you can write down some statements whatever statement you want to execute so this whatever you will write here this code would be executed as specific number of time how many times that would depend what you what you will provide in this range function right right so we can also use this range function to Loop through a set of code a specific number of time right based on that we'll see one according exercise in next video so now let me let's do some practical and we'll see on laptop how this range function works okay so let's create here a new file and the name range underscore function right dot p y now see basically let's see range function I'm just giving one argument and whatever it will give I am storing that into a variable a right but in AV we cannot simply print a because we have range will produce 0 1 2 3 4. 4 till 5 numbers so in a using indexes we can print like print now a of 0 if you want to print a of 0 that would be what C 0. and a of 1 would be here one as you can see right now suppose I'm not taking this from 2 I am going to print 2 till 5. so starting point now at a zeroth at 0th index we would be having what let's see see two okay so like this we can print so let's see use this in for Loops so if you want to print all the numbers rather than you can simply write print a of 0 then a of one two three like this right but obviously we will not if I want to print range from 1 to 10 so will not write this print statement 10 times so better idea we have for low so we can iterate this so for I in a here the list name or you can say variable name is a so I in a right and simply we can print I rather than using this indices that would be fine so it will print two three four right and 2 2 suppose I am printing 2 to 15. with step size is 2 so this time what it will print C 2 then 4 then 6 8 something like this step size is two so it will skip one element if step size is 3 then it will skip two elements it will skip three and four then five would be printed as you can see right and here you can also use negative negative thing if I am writing here minus five let's see minus three so step size is minus three simply the formula is I then I plus 1 sorry I plus k i plus 2 k i plus 3 K like this right okay if in this case let's run this and see you will get nothing why so because here c i is equal to 2 J is equal to 15 K is equal to minus 3 so let's put this thing in the formula okay so 2 first thing is 2 will be printed fine then I plus K means 2 plus minus 3. by it would be 2 plus minus 3 means 2 minus 3 will be minus 1. but once first two then minus 1 then 2 plus 2K 3 2 6 means 2 minus 6 minus 5 but obviously till 14 we are going to print so it is not going to be any you know sequence of numbers 2 minus 1 and minus 6 something like this so it will print nothing so you have to give here you know a valid range valid step size start and stop something like this so if I give here and see 215 if I give a 0. 0 is also not allowed see it will give an error in line number one we have value error range argument 3 must not be zero so these are some rules you can write down like the argument three the step size cannot be zero because if step size is zero then how we are going to move forward or maybe backward there should be some step size right so it cannot be zero and all the three arguments start stop end step size must be integer right you cannot take your string or float or Boolean value or anything else suppose you take here string this two is string and step size I am taking two let's run this c i parrot string object cannot be interpreted as an integer in line number one it should be integer right so let's take one more example if if I write here like this in negative sorry uh like from 10 to 1 you want to print that also you can do start sizes 10 stop size should be zero and nothing okay this case it will not print anything see no output you will get because by default K is 1 so 10 plus 1 eyes 10 10 plus 1 is 11 but stop size is sorry the the stop point is zero so we are moving 10 11 12 we cannot reach 2 0. right so this would not print anything but you can do here one thing you can write down here minus one the step size you can give minus 1. here it will print C 10 9 8 7 till 1 it will print like this in reverse order also you can print negative also you can give and if I write something like this like minus 1 minus 10 n minus 1. let's run this what you will get C minus 1 to minus 9 it will print this thing is valid right so how it will work you can simply put that I J K values into the formula by default I value 0 K value is 1 and obviously one value must be there right so you can put all the values in the formula if it is working then you will give some output otherwise it will not give any output so now we have one quiz like you have to add numbers from 1 to 100 and you have to print the sum how you will do this pause the view and try this out so I hope you have done this exercise now let's do this let's take first a variable suppose total total is equal to it first to zero so for I in now what range I want from 1 to 100 so I can specify in range from 1 to 100 but you cannot write down 100 here because it will take until 99 till the stop Point minus one so you have to specify one zero one and here we can rather than printing this we can simply do what simple total plus equal to I what you can write in total is equal to Total plus I that is also fine right and outside of this for Loop we can simply print total right so let's run this it will give you five zero five zero and this is the answer one plus two plus three plus four plus up to 100 it would be five zero five zero right so I hope you got what is range function I have to use it how many ways we can use this range function in for Loop how we can use this thing right so in the next video we'll see when coding exercise so now it's in the next video bye take care
