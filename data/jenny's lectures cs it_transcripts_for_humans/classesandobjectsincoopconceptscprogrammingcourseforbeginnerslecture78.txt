With timestamps:

00:00 - hey everyone I hope you are safe and
00:02 - doing good so in the series of learning
00:04 - C++ programming language we are
00:06 - discussing objectoriented programming in
00:08 - C++ whoops Concept in the previous video
00:11 - we have seen that was just about
00:12 - introduction to op like what is object
00:14 - oriented programming how op is different
00:16 - from poop what are some drawbacks and
00:19 - advantages of you know both the
00:20 - approaches po uh and op so that video
00:24 - was about po versus op fine now the very
00:29 - first thing you need to understand is if
00:31 - you are following this object oned
00:32 - programming approach then to write down
00:35 - a program you need to understand what is
00:37 - a class what is an object because
00:38 - without classes and objects we cannot
00:40 - write down any program in object
00:42 - oriented programming right so this is
00:44 - the basic thing you need to understand
00:45 - in this video we'll see that thing Al
00:48 - that thing only what is a class what is
00:49 - an object how to define a class how to
00:51 - declare the objects with some real life
00:54 - scenarios also I'll discuss this
00:56 - thing right I hope now you have the idea
01:00 - y o why because there are some drawbacks
01:04 - in that PO approach the main was we have
01:08 - discussed that data security there is no
01:10 - data security
01:13 - because we basically in po focus on
01:15 - procedure how to do the task basically
01:18 - on the functions we don't focus on data
01:20 - because data we declare many data
01:22 - globally global data is there and many I
01:25 - mean obviously global data all the
01:28 - functions can access that data
01:30 - so any function can modify that data so
01:32 - data is not secure right if one function
01:35 - has modified that data then another
01:37 - function is accessing that you know the
01:40 - data that has been already modified
01:42 - right but that function basically maybe
01:46 - uh that function wants the previous data
01:48 - so that would be some kind of
01:49 - inconsistent inconsistency in the data
01:51 - and all so there's no data security in
01:53 - po approach there are so many functions
01:55 - if you if you are using that PO approach
01:57 - for solving a large problem on a large
01:59 - project so there are maybe 50 functions
02:01 - 100 functions right each function is
02:03 - calling other functions right so they
02:05 - are interconnected with each other so
02:07 - it's very difficult to track which
02:08 - function is accessing which global data
02:10 - and all there is so much complexity in
02:12 - that case and data is moving freely so
02:15 - no data security is there why that is
02:17 - why we have you know we are now
02:19 - following object oriented programming
02:22 - approach although there are many other
02:24 - limitations also of this PO approach but
02:27 - one is this thing right other obviously
02:30 - we'll discuss one by one in later videos
02:32 - right I hope you got this this drawback
02:34 - of Po right now in op how the data is
02:38 - secure
02:40 - because whatever the data right and the
02:44 - functions which are going to perform on
02:46 - that data we B we usually bind those you
02:49 - know functions and data in a single unit
02:52 - basically now what does that mean let me
02:54 - just show you with the help of uh you
02:56 - know proper example here see suppose uh
03:00 - uh let's take because I have told you to
03:04 - solve real world problems or to for real
03:07 - world scenarios to model those real
03:09 - world problems in programming language
03:13 - we use op approach right we can easily
03:16 - model all the real world
03:18 - scenarios with the help of op approach
03:21 - right and why because of these type of
03:24 - concept we have in this approach see
03:27 - suppose let's take an example I have a
03:28 - YouTube channel right so basically what
03:32 - we need to run a YouTube channel basic
03:35 - three I mean these four things
03:36 - instructor editor thumbnail designer
03:39 - social media marketer right if you have
03:41 - a small channel so I mean if suppose I
03:43 - have a small channel so I am instructor
03:45 - I am editor only I design my thumbnails
03:47 - and I only promote my videos right now
03:51 - okay it's okay I'm everything here one
03:53 - man but what if I want to start many
03:56 - courses simultaneously suppose I want to
03:58 - start one Java course one web
04:01 - development course one like maybe python
04:05 - course one for from engineering and many
04:09 - courses so obviously I for the growth of
04:11 - my channel I cannot do everything right
04:14 - I cannot teach everything and can do all
04:16 - the things so what I can do is I can
04:18 - hire instructors right suppose one
04:21 - instructor for Java
04:24 - right now I have hired one instructor
04:27 - also maybe I have hired one editor
04:30 - right and social media marketer editor
04:34 - who is going to edit my videos as well
04:35 - as design my thumbnails so three person
04:37 - I have hired right now I am the
04:42 - manager suppose I'm the manager now I
04:44 - don't need to do anything so I'll just
04:47 - coordinate with these
04:48 - person right now I am the manager I
04:51 - don't need to tell the instructor how to
04:54 - teach I don't need to tell the editor
04:56 - like how to edit the videos I don't need
04:58 - to tell this person like how to you know
05:01 - do this uh marketing and all because I
05:04 - think they are they in this field they
05:06 - are better than me I guess right I don't
05:10 - need to go in
05:12 - detail of these task because they will
05:15 - do their task they'll do their job and
05:17 - they will like I just follow
05:19 - up right now see suppose instructor I
05:24 - have hired two
05:27 - instructor so these in instructors are
05:30 - having obviously some two things are
05:33 - there
05:35 - what whatever the instruct like he or
05:38 - she
05:40 - has and what he or
05:44 - she
05:47 - does two things are there has means like
05:51 - they obviously instructor like suppose
05:53 - I'm the instructor Journey so I have
05:55 - some name maybe
05:57 - address and I'm having has has you know
06:00 - laptop or
06:02 - not is equal to maybe true and has my
06:08 - account
06:09 - [Music]
06:11 - number and something like this I'm
06:13 - having some details with me right and
06:17 - what I do suppose I'm the instructor
06:20 - then obviously
06:23 - teach then maybe prepare quiz
06:31 - so these are the attributes or these are
06:34 - the obviously name address has laptop
06:36 - has account number and uh location and
06:39 - all these are what variables we can
06:43 - say simple variables we can
06:46 - take and what I do is we can do like
06:49 - these are
06:50 - functions I teach I prepare quiz or any
06:54 - other thing also I can do fine now in
06:58 - this case in this case we don't call
07:00 - these free like variables and functions
07:03 - when we are following this op approach
07:04 - we call these
07:09 - attributes and the functions are known
07:11 - as methods not functions methods why so
07:15 - because these are not freely moving in
07:17 - the program these things the name
07:20 - address and I can teach prepare these
07:22 - attributes and fun methods these are
07:25 - associated with the instructor suppose I
07:26 - am the instructor one instructor is
07:28 - Jenny
07:30 - so I have name I have my address I have
07:33 - this property I have like this attribute
07:36 - account number and all so these are
07:37 - associated with me that is why we don't
07:40 - call these variables and functions we
07:42 - call these attributes and methods
07:44 - because these are not free in that
07:46 - program not freely moving these are
07:48 - associated with a particular object like
07:50 - I am an object I can say Jenny so these
07:52 - are associated with the particular
07:54 - instructor right so basically these two
07:57 - things are there and second is structor
07:59 - may be suppose like
08:02 - G right so these things these attributes
08:07 - and these methods we just put these
08:09 - things in a single
08:12 - unit right because these are
08:15 - associated I mean these are related this
08:18 - data and these functions these are all
08:20 - one instructor like this and this is
08:23 - nothing but like an
08:25 - object right so Jenny G these are
08:29 - objects
08:32 - the actual real world entity these are
08:35 - known as objects fine so objects are
08:39 - important whatever we do here we will do
08:43 - you know using objects on objects that
08:45 - is why we call it object oriented
08:48 - programming not class oriented or
08:50 - anything else oriented object oriented
08:52 - because objects are very important the
08:54 - main thing is object then why class
08:56 - right class is like a blueprint to
08:59 - create objects like suppose I have that
09:03 - map for construction We have basically
09:06 - first the map of that building on a
09:08 - piece of
09:09 - paper right so that map is like a
09:13 - blueprint and the actual building you
09:16 - build those are objects many buildings
09:18 - you can build with the help of that one
09:20 - map if you don't have that map then also
09:22 - you can you know build buildings but
09:24 - that would be little bit you know
09:26 - difficult to manage and
09:28 - all right because there are so many uh
09:31 - persons while building that uh you know
09:33 - building so many like labor contractor
09:36 - engineer and many more and if one person
09:38 - who is the main having that map
09:40 - according to that that map he or she can
09:42 - guide every person like what to do next
09:44 - so that would be easy so map is like
09:46 - blueprint so here same class is like
09:48 - blueprint the design like we have idly
09:51 - maker right to make ID we have idly
09:54 - maker that is a design so with that help
09:56 - of those that idly maker you can easily
09:59 - you know uh cook those idlies quickly
10:02 - within 10 to 15 minutes right and you
10:05 - don't have that idly maker then maybe
10:06 - you can make idlies with help of some
10:09 - other objects but that would obviously
10:10 - take more time but if you have that
10:12 - design you can easily like I don't know
10:14 - much cooking but I have that idly maker
10:17 - and I can easily uh make it Le with the
10:19 - help of that right so that's the beauty
10:22 - of the design or the blueprint you have
10:24 - so same here like here class instructor
10:27 - is class so in instructor is just a
10:30 - blueprint we are not specifying any one
10:33 - person instructor is just general thing
10:36 - blueprint instructor will have every
10:39 - instructor will have some name address
10:40 - and these attributes and these functions
10:42 - right and Jenny and J these are objects
10:45 - these are actual things I mean you can
10:47 - say that real world entities these are
10:49 - objects like in a company we have many
10:53 - employees so employee is a class and the
10:56 - person you are having those are objects
10:58 - customer is a class and the customer
11:00 - actual customer those are
11:03 - objects right so class is a
11:06 - blueprint fine you can say proper
11:09 - definition class is a blueprint for
11:11 - creating objects and object objects
11:14 - basically we can say objects are real
11:15 - world
11:16 - entities or we can create objects from a
11:19 - class and from one class we can create
11:20 - many object now from this instructor
11:23 - class I can create many instructor like
11:26 - I can hire as many instructor as I want
11:28 - or as I can afford
11:29 - right Jen G prep Akash P many
11:34 - instructor of
11:36 - same with this blueprint right so every
11:40 - instructor will have name address these
11:43 - attributes and these two
11:46 - functions if you create object using
11:48 - this blueprint then these all these
11:51 - things would be obviously the actual
11:54 - values would be different because name
11:55 - of every instructor is different so
11:57 - every instructor is having its own
11:58 - identity every instructor is having
12:00 - different address every instructor has
12:02 - having like has laptop maybe true or
12:04 - false we don't know account number true
12:07 - or FS teach prepare quiz these two
12:10 - methods every instructor will have so
12:12 - every instructor will have its own
12:13 - Identity or like every object will have
12:15 - its own
12:17 - identity right so I hope you got this
12:20 - what is a class what is an object now
12:22 - how to define a class and how to create
12:24 - object let me just show you this thing
12:26 - how to define a class General Cent is
12:29 - simply use class keyword
12:33 - here it's a reserved word class and then
12:36 - the class name class name we write in
12:38 - Pascal you know naming convention right
12:42 - like this the uh class name first letter
12:47 - of every word is capital so this is
12:50 - Pascal convention so we CL we write
12:53 - class name something like this suppose I
12:54 - have class name uh instructor same let's
12:57 - take instructor
13:03 - let's just model this YouTube Problem
13:06 - YouTube channel problem in programming
13:08 - how to model this same we have class
13:12 - object concept so class is
13:14 - instructor in this block you can write
13:18 - down your attributes and whatever the
13:20 - methods you have right suppose I'm
13:22 - writing here so these two are attributes
13:27 - and this is method
13:30 - right of class instructor this is how
13:32 - you define a class whatever attributes
13:35 - or methods you want to take you just
13:37 - write down here and see we can say class
13:40 - is a user defined data type why I am
13:44 - saying this see as we know in C++ we
13:47 - have this string is a
13:50 - class right string is a class and if you
13:53 - write down here string I have written
13:55 - string name so name is an object of this
13:57 - class string
13:59 - right but this is like we find these
14:02 - classes in standard libraries these are
14:05 - already defined Vector is also class we
14:08 - can Define Vector something like this
14:10 - Vector here the data type suppose int
14:12 - and name of that Vector
14:15 - numbers so here number is it's like an
14:18 - Vector object of type Vector so Vector
14:21 - is a class right so these are what
14:24 - buil-in buil-in uh you know uh classes
14:26 - and we create object of these built-in
14:28 - classes fine but class this class is
14:32 - what this is user defining we are
14:33 - defining our own type and that type we
14:36 - are defining our own blueprint our own
14:39 - design right is having name this these
14:43 - attributes and this method and using
14:46 - this type we can create objects so you
14:49 - can say class is a user defined data
14:51 - type right so class basically binds
14:54 - attributes and or you can say the data
14:57 - and the methods together right
14:59 - and we can hide you can say class can
15:02 - also hide the data and the methods from
15:05 - accessing from the outside world using
15:06 - access specifies public private
15:08 - protected those we will see in later
15:10 - videos fine now how to create objects
15:15 - with the help of one class we can create
15:16 - as many object we want because see with
15:19 - the help of this string class we can
15:20 - create many string objects with the help
15:22 - of vector class we can create many
15:23 - Vector objects so same with the help of
15:25 - one class we can create many objects
15:27 - right so now how to create object of
15:29 - this class syntax say simple class name
15:34 - then object name this is the general
15:36 - syntax so here if you want to create
15:38 - class name is
15:43 - instructor instructor and here just your
15:47 - class name and then object name suppose
15:48 - object name I'm taking
15:51 - J that's it this is how you can create
15:54 - object of any class class name object
15:57 - name
15:59 - suppose another I want to
16:01 - create
16:03 - instructor and
16:06 - GM this is the second object I have
16:08 - created of same
16:10 - class right there is a second method
16:13 - with the help of new keyword also you
16:15 - can create object but that would be like
16:16 - pointer to object and uh I hope this is
16:20 - clear to you now second the uh next is
16:23 - what this is how you can
16:27 - create the name of the class
16:31 - right here the pointer estri symbol here
16:35 - the name name of suppose I'm going to
16:38 - create
16:40 - Jen equal
16:42 - to
16:44 - new new after
16:46 - that I think after new I'm going to
16:49 - write here name of that
16:51 - class again instructor and with this so
16:56 - this is the second method
17:00 - instructor estri the name of the object
17:02 - whatever you want is equal to new
17:03 - keyword and after new we have instructor
17:05 - instructor would be some supposed to be
17:07 - here but we don't have space so that is
17:09 - why I have I have written here instuctor
17:11 - this is pointer to object this will
17:13 - return a pointer pointer to
17:16 - object and this is going to create
17:19 - directly object this is pointer to
17:20 - object now what is the difference main
17:22 - difference is what this is automatic
17:25 - storage allocation right whenever this
17:29 - object is out of the scope the memory
17:31 - would be automatically deallocated would
17:34 - be freed automatically right but this is
17:37 - not like this you have to delete this
17:40 - object
17:41 - explicitly when you are not going to use
17:44 - this object I mean when this object is
17:46 - out of scope so how to delete this
17:48 - object you simply
17:49 - use delete keyword and the object name
17:52 - is j that's it so one is this you have
17:56 - to explicitly delete this and when you
17:58 - are creating this object memory would be
18:00 - allocated from the stack portion when
18:03 - you are creating object pointer to
18:05 - object using this method memory would be
18:08 - allocated from Heap section from dynamic
18:10 - memory allocation this is also another
18:13 - difference I told you memory we have
18:15 - like stack memory also Heap memory for
18:17 - dynamic memory allocation we use that
18:18 - Heap portion for static memory
18:20 - allocation we use stack portion so the
18:23 - memor is allocated for the JY from the
18:25 - stack portion and from here from the
18:27 - Heap memory Dynamic this is kind of
18:28 - dynamic memory location so this is
18:30 - pointer to object right but yeah we
18:33 - generally use this you know uh
18:36 - convention only to create objects
18:38 - because this is easy right if you want
18:40 - to use that object for a longer period
18:42 - of time you can use this thing with the
18:45 - help of new right but for a shorter
18:48 - period of time if you want to use then
18:51 - again and again you have to delete that
18:52 - memory explicitly and here you don't
18:54 - need to take care of that thing
18:56 - automatically a memory would be freed
18:58 - when this object is out of scope right
19:01 - so this is how you can define a class
19:03 - you can create an object of that class
19:05 - so basically you can say this object
19:06 - represents a specific instance of a
19:10 - class sometime somewhere object are also
19:13 - referred as instance object or instance
19:16 - both are same F and see with each object
19:19 - Jen G each object can use the defined
19:22 - methods the class method so here we have
19:25 - only one method teach so each object can
19:27 - use this method te each right now how to
19:30 - access these class methods class
19:33 - attributes with the help of object that
19:34 - thing we will see next video with the
19:35 - help of proper program and it's not like
19:37 - that we can create only one object like
19:39 - instructor Journey we can create array
19:41 - of objects we can create Vector of
19:43 - object as well see let me show you we
19:45 - have class instructor here I'm going to
19:47 - create not a single object array of my
19:51 - objects so the name I'm taking
19:56 - suppose instruct
19:59 - instructors see it's s and class name is
20:02 - only instructor
20:03 - instructors and array here you can give
20:06 - the size or if you don't want to give
20:08 - the size here only you can initialize
20:09 - suppose I'm writing object is
20:13 - Jenny
20:14 - G something like this now two objects I
20:17 - have created Jenny and G these are not
20:20 - strings these are not just name these
20:22 - are objects right so don't just put
20:25 - these in in these quotes right
20:30 - [Music]
20:32 - these are name of object fine Vector of
20:36 - objects also we can create something
20:37 - like this we have like
20:40 - vector and within this we use the data
20:43 - type int or whatever data type you want
20:45 - to use here the data type is instructor
20:48 - our own defined class so just write
20:52 - here instructor because this is the data
20:55 - type and here the vector name Vector
20:58 - name any you can any name you can like
21:00 - suppose names that's
21:02 - it right and you can initialize this
21:05 - also like prep and every operation you
21:07 - can do like push back operation suppose
21:09 - we have so that also we can do name is
21:13 - name of this Vector is names names
21:17 - dot push
21:20 - back and equal to whatever you want to
21:23 - push back I mean the value the name the
21:26 - name of another object prep is one
21:28 - object one object is maybe G or G we
21:31 - have already have so pile that we can do
21:33 - right so like this we can create arrays
21:36 - and vectors of these objects as well so
21:38 - I hope you got this if you have any
21:40 - doubt you can just let me know in
21:41 - comment section in the next video we
21:43 - will see like how to access these member
21:47 - these methods from these objects using
21:50 - these objects right with the help of
21:52 - proper program I'll show you right so
21:54 - now I'll see you in the next video till
21:55 - then bye- bye take care

Cleaned transcript:

hey everyone I hope you are safe and doing good so in the series of learning C++ programming language we are discussing objectoriented programming in C++ whoops Concept in the previous video we have seen that was just about introduction to op like what is object oriented programming how op is different from poop what are some drawbacks and advantages of you know both the approaches po uh and op so that video was about po versus op fine now the very first thing you need to understand is if you are following this object oned programming approach then to write down a program you need to understand what is a class what is an object because without classes and objects we cannot write down any program in object oriented programming right so this is the basic thing you need to understand in this video we'll see that thing Al that thing only what is a class what is an object how to define a class how to declare the objects with some real life scenarios also I'll discuss this thing right I hope now you have the idea y o why because there are some drawbacks in that PO approach the main was we have discussed that data security there is no data security because we basically in po focus on procedure how to do the task basically on the functions we don't focus on data because data we declare many data globally global data is there and many I mean obviously global data all the functions can access that data so any function can modify that data so data is not secure right if one function has modified that data then another function is accessing that you know the data that has been already modified right but that function basically maybe uh that function wants the previous data so that would be some kind of inconsistent inconsistency in the data and all so there's no data security in po approach there are so many functions if you if you are using that PO approach for solving a large problem on a large project so there are maybe 50 functions 100 functions right each function is calling other functions right so they are interconnected with each other so it's very difficult to track which function is accessing which global data and all there is so much complexity in that case and data is moving freely so no data security is there why that is why we have you know we are now following object oriented programming approach although there are many other limitations also of this PO approach but one is this thing right other obviously we'll discuss one by one in later videos right I hope you got this this drawback of Po right now in op how the data is secure because whatever the data right and the functions which are going to perform on that data we B we usually bind those you know functions and data in a single unit basically now what does that mean let me just show you with the help of uh you know proper example here see suppose uh uh let's take because I have told you to solve real world problems or to for real world scenarios to model those real world problems in programming language we use op approach right we can easily model all the real world scenarios with the help of op approach right and why because of these type of concept we have in this approach see suppose let's take an example I have a YouTube channel right so basically what we need to run a YouTube channel basic three I mean these four things instructor editor thumbnail designer social media marketer right if you have a small channel so I mean if suppose I have a small channel so I am instructor I am editor only I design my thumbnails and I only promote my videos right now okay it's okay I'm everything here one man but what if I want to start many courses simultaneously suppose I want to start one Java course one web development course one like maybe python course one for from engineering and many courses so obviously I for the growth of my channel I cannot do everything right I cannot teach everything and can do all the things so what I can do is I can hire instructors right suppose one instructor for Java right now I have hired one instructor also maybe I have hired one editor right and social media marketer editor who is going to edit my videos as well as design my thumbnails so three person I have hired right now I am the manager suppose I'm the manager now I don't need to do anything so I'll just coordinate with these person right now I am the manager I don't need to tell the instructor how to teach I don't need to tell the editor like how to edit the videos I don't need to tell this person like how to you know do this uh marketing and all because I think they are they in this field they are better than me I guess right I don't need to go in detail of these task because they will do their task they'll do their job and they will like I just follow up right now see suppose instructor I have hired two instructor so these in instructors are having obviously some two things are there what whatever the instruct like he or she has and what he or she does two things are there has means like they obviously instructor like suppose I'm the instructor Journey so I have some name maybe address and I'm having has has you know laptop or not is equal to maybe true and has my account number and something like this I'm having some details with me right and what I do suppose I'm the instructor then obviously teach then maybe prepare quiz so these are the attributes or these are the obviously name address has laptop has account number and uh location and all these are what variables we can say simple variables we can take and what I do is we can do like these are functions I teach I prepare quiz or any other thing also I can do fine now in this case in this case we don't call these free like variables and functions when we are following this op approach we call these attributes and the functions are known as methods not functions methods why so because these are not freely moving in the program these things the name address and I can teach prepare these attributes and fun methods these are associated with the instructor suppose I am the instructor one instructor is Jenny so I have name I have my address I have this property I have like this attribute account number and all so these are associated with me that is why we don't call these variables and functions we call these attributes and methods because these are not free in that program not freely moving these are associated with a particular object like I am an object I can say Jenny so these are associated with the particular instructor right so basically these two things are there and second is structor may be suppose like G right so these things these attributes and these methods we just put these things in a single unit right because these are associated I mean these are related this data and these functions these are all one instructor like this and this is nothing but like an object right so Jenny G these are objects the actual real world entity these are known as objects fine so objects are important whatever we do here we will do you know using objects on objects that is why we call it object oriented programming not class oriented or anything else oriented object oriented because objects are very important the main thing is object then why class right class is like a blueprint to create objects like suppose I have that map for construction We have basically first the map of that building on a piece of paper right so that map is like a blueprint and the actual building you build those are objects many buildings you can build with the help of that one map if you don't have that map then also you can you know build buildings but that would be little bit you know difficult to manage and all right because there are so many uh persons while building that uh you know building so many like labor contractor engineer and many more and if one person who is the main having that map according to that that map he or she can guide every person like what to do next so that would be easy so map is like blueprint so here same class is like blueprint the design like we have idly maker right to make ID we have idly maker that is a design so with that help of those that idly maker you can easily you know uh cook those idlies quickly within 10 to 15 minutes right and you don't have that idly maker then maybe you can make idlies with help of some other objects but that would obviously take more time but if you have that design you can easily like I don't know much cooking but I have that idly maker and I can easily uh make it Le with the help of that right so that's the beauty of the design or the blueprint you have so same here like here class instructor is class so in instructor is just a blueprint we are not specifying any one person instructor is just general thing blueprint instructor will have every instructor will have some name address and these attributes and these functions right and Jenny and J these are objects these are actual things I mean you can say that real world entities these are objects like in a company we have many employees so employee is a class and the person you are having those are objects customer is a class and the customer actual customer those are objects right so class is a blueprint fine you can say proper definition class is a blueprint for creating objects and object objects basically we can say objects are real world entities or we can create objects from a class and from one class we can create many object now from this instructor class I can create many instructor like I can hire as many instructor as I want or as I can afford right Jen G prep Akash P many instructor of same with this blueprint right so every instructor will have name address these attributes and these two functions if you create object using this blueprint then these all these things would be obviously the actual values would be different because name of every instructor is different so every instructor is having its own identity every instructor is having different address every instructor has having like has laptop maybe true or false we don't know account number true or FS teach prepare quiz these two methods every instructor will have so every instructor will have its own Identity or like every object will have its own identity right so I hope you got this what is a class what is an object now how to define a class and how to create object let me just show you this thing how to define a class General Cent is simply use class keyword here it's a reserved word class and then the class name class name we write in Pascal you know naming convention right like this the uh class name first letter of every word is capital so this is Pascal convention so we CL we write class name something like this suppose I have class name uh instructor same let's take instructor let's just model this YouTube Problem YouTube channel problem in programming how to model this same we have class object concept so class is instructor in this block you can write down your attributes and whatever the methods you have right suppose I'm writing here so these two are attributes and this is method right of class instructor this is how you define a class whatever attributes or methods you want to take you just write down here and see we can say class is a user defined data type why I am saying this see as we know in C++ we have this string is a class right string is a class and if you write down here string I have written string name so name is an object of this class string right but this is like we find these classes in standard libraries these are already defined Vector is also class we can Define Vector something like this Vector here the data type suppose int and name of that Vector numbers so here number is it's like an Vector object of type Vector so Vector is a class right so these are what builin builin uh you know uh classes and we create object of these builtin classes fine but class this class is what this is user defining we are defining our own type and that type we are defining our own blueprint our own design right is having name this these attributes and this method and using this type we can create objects so you can say class is a user defined data type right so class basically binds attributes and or you can say the data and the methods together right and we can hide you can say class can also hide the data and the methods from accessing from the outside world using access specifies public private protected those we will see in later videos fine now how to create objects with the help of one class we can create as many object we want because see with the help of this string class we can create many string objects with the help of vector class we can create many Vector objects so same with the help of one class we can create many objects right so now how to create object of this class syntax say simple class name then object name this is the general syntax so here if you want to create class name is instructor instructor and here just your class name and then object name suppose object name I'm taking J that's it this is how you can create object of any class class name object name suppose another I want to create instructor and GM this is the second object I have created of same class right there is a second method with the help of new keyword also you can create object but that would be like pointer to object and uh I hope this is clear to you now second the uh next is what this is how you can create the name of the class right here the pointer estri symbol here the name name of suppose I'm going to create Jen equal to new new after that I think after new I'm going to write here name of that class again instructor and with this so this is the second method instructor estri the name of the object whatever you want is equal to new keyword and after new we have instructor instructor would be some supposed to be here but we don't have space so that is why I have I have written here instuctor this is pointer to object this will return a pointer pointer to object and this is going to create directly object this is pointer to object now what is the difference main difference is what this is automatic storage allocation right whenever this object is out of the scope the memory would be automatically deallocated would be freed automatically right but this is not like this you have to delete this object explicitly when you are not going to use this object I mean when this object is out of scope so how to delete this object you simply use delete keyword and the object name is j that's it so one is this you have to explicitly delete this and when you are creating this object memory would be allocated from the stack portion when you are creating object pointer to object using this method memory would be allocated from Heap section from dynamic memory allocation this is also another difference I told you memory we have like stack memory also Heap memory for dynamic memory allocation we use that Heap portion for static memory allocation we use stack portion so the memor is allocated for the JY from the stack portion and from here from the Heap memory Dynamic this is kind of dynamic memory location so this is pointer to object right but yeah we generally use this you know uh convention only to create objects because this is easy right if you want to use that object for a longer period of time you can use this thing with the help of new right but for a shorter period of time if you want to use then again and again you have to delete that memory explicitly and here you don't need to take care of that thing automatically a memory would be freed when this object is out of scope right so this is how you can define a class you can create an object of that class so basically you can say this object represents a specific instance of a class sometime somewhere object are also referred as instance object or instance both are same F and see with each object Jen G each object can use the defined methods the class method so here we have only one method teach so each object can use this method te each right now how to access these class methods class attributes with the help of object that thing we will see next video with the help of proper program and it's not like that we can create only one object like instructor Journey we can create array of objects we can create Vector of object as well see let me show you we have class instructor here I'm going to create not a single object array of my objects so the name I'm taking suppose instruct instructors see it's s and class name is only instructor instructors and array here you can give the size or if you don't want to give the size here only you can initialize suppose I'm writing object is Jenny G something like this now two objects I have created Jenny and G these are not strings these are not just name these are objects right so don't just put these in in these quotes right these are name of object fine Vector of objects also we can create something like this we have like vector and within this we use the data type int or whatever data type you want to use here the data type is instructor our own defined class so just write here instructor because this is the data type and here the vector name Vector name any you can any name you can like suppose names that's it right and you can initialize this also like prep and every operation you can do like push back operation suppose we have so that also we can do name is name of this Vector is names names dot push back and equal to whatever you want to push back I mean the value the name the name of another object prep is one object one object is maybe G or G we have already have so pile that we can do right so like this we can create arrays and vectors of these objects as well so I hope you got this if you have any doubt you can just let me know in comment section in the next video we will see like how to access these member these methods from these objects using these objects right with the help of proper program I'll show you right so now I'll see you in the next video till then bye bye take care
