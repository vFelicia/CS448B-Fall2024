With timestamps:

00:00 - hi guys welcome back in this video we'll
00:02 - discuss how to construct a binary tree
00:04 - from pre-order and inorder traversal
00:07 - fine so say this one is the pre-order
00:10 - traversal of a tree and this one is
00:12 - inorder traversal of a binary tree and
00:15 - you are supposed to construct a binary
00:17 - tree from these traversals fine see as
00:21 - you all know pre-order is route then
00:25 - left and then right fine and the inorder
00:29 - traversal is row left then route and
00:34 - then right ok now first of all when you
00:42 - see you are supposed to construct a tree
00:44 - or you can say binary tree your first
00:46 - step is to find out the root of that
00:49 - tree okay now how you can find out root
00:52 - of the tree from these traversals
00:54 - fine from a dock in order traversal you
00:57 - can't find root because root is in the
01:00 - middle of left and right but we can't
01:02 - say which one is root kaha Paves
01:04 - committed over kidney elements to the
01:05 - left of that root and how many elements
01:07 - are to the right of that root fine so
01:10 - you can find out root of the element
01:12 - from the root of the tree from this
01:14 - pre-order traversal because in pre-order
01:17 - traversal root is always first firstly
01:20 - traversed so in pre-order traversal we
01:23 - will scan scan this data from this left
01:26 - to right now first is one now one would
01:31 - be root because starting way up in a
01:32 - pre-order traversal make your head root
01:35 - will always be traversed now the one
01:38 - would be root over binary tree fine now
01:45 - next step is to find out its left
01:48 - subtree and right suffering now I will
01:52 - find out the element of left subtree and
01:55 - the element of right subtree from this
01:58 - in order traversal
02:01 - see from this inorder traversal find out
02:04 - where is this one this one it is our one
02:09 - and this one is
02:12 - wrote now see to the left off route left
02:17 - sub-tree is there into the right of
02:19 - route that right part or you can say the
02:21 - right subtree will be this the one all
02:24 - the elements to the left of this one
02:26 - would be the left subtree and all the
02:31 - elements to the right would form the
02:33 - right subtree fine so in the left to the
02:37 - left of this subtree how many elements
02:40 - and which elements are there eight four
02:44 - ten nine eleven two and five these are
02:51 - to the left of this end to the right six
02:54 - three and seven six three and say these
03:00 - elements will form the right subtree
03:02 - fine now see now first of all you can
03:07 - construct this left subtree or you can
03:09 - construct the right subtree fine we'll
03:11 - go to the left part now out of these
03:14 - elements which should be the root of
03:17 - this left subtree see a tree is complete
03:21 - till this level we have only find this
03:23 - one as a root now from these elements
03:26 - find out which one would be the root of
03:28 - this left subtree now how this is to be
03:31 - find out from this preorder traversal
03:36 - right
03:37 - the rule is out of these elements find C
03:42 - out of these elements the element which
03:45 - is coming first in this preorder
03:48 - traversal when you scan this traversal
03:51 - from left to right fine that first
03:55 - element would be the root of this left
03:58 - subtree find out out of these elements
04:01 - which is coming first when you will go
04:03 - from here to there one is already there
04:05 - now second C out of these elements we
04:09 - finally found this - now two would be
04:15 - root of this left subtree now out of
04:19 - these elements which are the left of
04:21 - this two and which are which elements
04:23 - are right of this two
04:25 - we'll find out left and right left and
04:29 - right find out can they kill you will go
04:31 - to the in order traversal find out the
04:35 - location of two here we have this too
04:39 - now this one is our route all the
04:41 - elements to the left would be the left
04:44 - sub-tree and all the elements to the
04:46 - right of this two would be right
04:49 - sub-tree out of these elements fine so
04:52 - out of these elements to is route and
04:55 - all the elements to the left on once
04:58 - elements a bit to the left of this two
05:01 - we have 8 4 10 9 and 11 these elements
05:09 - would be to the left of this 2 and to
05:10 - the right of this to it we have only
05:12 - this five only one fine only five we
05:19 - have now our problem is divided into you
05:23 - know that subproblem now we have these
05:26 - elements only now out of these elements
05:28 - find out which would be the root of this
05:31 - left subtree left subtree of this to
05:35 - eight for ten nine eleven and root find
05:38 - out connect today we will go to the
05:39 - pre-order travel self out of these
05:41 - elements the elements which is coming
05:43 - first when you scan this pre-order from
05:46 - left to right that would be the root of
05:49 - this left subtree the out of eight for
05:52 - 10 nine eleven which element is coming
05:54 - first when you will go from this to from
05:57 - left to right for is coming first out of
06:01 - eight for ten nine eleven four is coming
06:03 - first
06:04 - now four would be root of this left
06:09 - subtree now left and right of this four
06:15 - would be which elements would be to the
06:18 - left of this 4 and which elements are to
06:20 - the right of this for you find out
06:22 - connect ely we will go to the in order
06:24 - traversal now find out the location of
06:26 - food here we have the sole fine
06:30 - 4 is a root root key left make our left
06:34 - subtree and root right make a basic
06:36 - neighbor element so me that will form a
06:38 - supreme now to the left of 4 we have 8
06:41 - out of these elements only we are not
06:43 - going to check 6 3 7 out of these
06:45 - elements only 40 left map Nebraska hi 8
06:48 - now 8 would be the left of this war and
06:52 - 10 nine eleven ten nine eleven are ten
06:56 - 9/11 these are to the right of this four
07:03 - fine now here we have only one element
07:05 - that's fine now construct the subtree
07:10 - from 10 9 and 11 fine
07:12 - now out of these elements which would be
07:15 - the root and to find out the root we'll
07:17 - go to the preorder traversal now find
07:19 - out which elements from these elements
07:21 - from 10 9 and 11 which element is coming
07:24 - first when you go from here to here
07:27 - 10 9 11 I guess 9 10 or 11 are coming
07:34 - after this 9 so 9 would be root fine
07:40 - now this out of 10 and 11 which which
07:43 - would be to the left of 9 and which
07:45 - would be to the right of this 9 we'll
07:48 - find the left and right part when you
07:50 - will go to this in order traversal now
07:52 - locate this 9 in this inorder traversal
07:55 - here we have this 9 fine and 10 is to
07:59 - the left of 9 and 11 is to the right of
08:02 - 9 the left of 9 whole left of this root
08:05 - would be the left part so 10 would be to
08:08 - the left of 9 and 11 would be to the
08:11 - right of 9 so this has a left subtree we
08:16 - are done with our left subtree now come
08:17 - to the right subtree right subtree may
08:19 - we have only six three and seven three
08:21 - elements which would be the root of this
08:24 - right subtree find out out of six three
08:27 - and seven which is coming first when you
08:30 - traverse this preorder from this scan
08:32 - the pre-order traversal from left to
08:35 - right six three and seven three three is
08:39 - coming first six and seven are coming up
08:41 - to this 3 2 3 would be route now out of
08:46 - 6 and 7 which element would be to the
08:48 - left of this and which element to the
08:50 - right of this 3
08:52 - to find out this we will go to the in
08:54 - order traversal now locate this three in
08:56 - this in order to ever sell here we have
08:58 - this three and three is a root and six
09:03 - is to the left of three and seven is to
09:04 - the right of three so six would be to
09:07 - the left part of this three and seven
09:08 - would be right part of this three fine
09:14 - so this is our binary tree and you can
09:18 - construct this free from this pre-order
09:20 - and this inorder traversal if you want
09:22 - to verify it then you can now find out
09:26 - pre-order and inorder traversal of this
09:29 - tree and if pre-order and inorder are
09:32 - same as given in the question then you
09:34 - can say our trees you have formed a
09:37 - right
09:38 - binary tree fine so I'll see in the next
09:42 - video till then bye bye take

Cleaned transcript:

hi guys welcome back in this video we'll discuss how to construct a binary tree from preorder and inorder traversal fine so say this one is the preorder traversal of a tree and this one is inorder traversal of a binary tree and you are supposed to construct a binary tree from these traversals fine see as you all know preorder is route then left and then right fine and the inorder traversal is row left then route and then right ok now first of all when you see you are supposed to construct a tree or you can say binary tree your first step is to find out the root of that tree okay now how you can find out root of the tree from these traversals fine from a dock in order traversal you can't find root because root is in the middle of left and right but we can't say which one is root kaha Paves committed over kidney elements to the left of that root and how many elements are to the right of that root fine so you can find out root of the element from the root of the tree from this preorder traversal because in preorder traversal root is always first firstly traversed so in preorder traversal we will scan scan this data from this left to right now first is one now one would be root because starting way up in a preorder traversal make your head root will always be traversed now the one would be root over binary tree fine now next step is to find out its left subtree and right suffering now I will find out the element of left subtree and the element of right subtree from this in order traversal see from this inorder traversal find out where is this one this one it is our one and this one is wrote now see to the left off route left subtree is there into the right of route that right part or you can say the right subtree will be this the one all the elements to the left of this one would be the left subtree and all the elements to the right would form the right subtree fine so in the left to the left of this subtree how many elements and which elements are there eight four ten nine eleven two and five these are to the left of this end to the right six three and seven six three and say these elements will form the right subtree fine now see now first of all you can construct this left subtree or you can construct the right subtree fine we'll go to the left part now out of these elements which should be the root of this left subtree see a tree is complete till this level we have only find this one as a root now from these elements find out which one would be the root of this left subtree now how this is to be find out from this preorder traversal right the rule is out of these elements find C out of these elements the element which is coming first in this preorder traversal when you scan this traversal from left to right fine that first element would be the root of this left subtree find out out of these elements which is coming first when you will go from here to there one is already there now second C out of these elements we finally found this now two would be root of this left subtree now out of these elements which are the left of this two and which are which elements are right of this two we'll find out left and right left and right find out can they kill you will go to the in order traversal find out the location of two here we have this too now this one is our route all the elements to the left would be the left subtree and all the elements to the right of this two would be right subtree out of these elements fine so out of these elements to is route and all the elements to the left on once elements a bit to the left of this two we have 8 4 10 9 and 11 these elements would be to the left of this 2 and to the right of this to it we have only this five only one fine only five we have now our problem is divided into you know that subproblem now we have these elements only now out of these elements find out which would be the root of this left subtree left subtree of this to eight for ten nine eleven and root find out connect today we will go to the preorder travel self out of these elements the elements which is coming first when you scan this preorder from left to right that would be the root of this left subtree the out of eight for 10 nine eleven which element is coming first when you will go from this to from left to right for is coming first out of eight for ten nine eleven four is coming first now four would be root of this left subtree now left and right of this four would be which elements would be to the left of this 4 and which elements are to the right of this for you find out connect ely we will go to the in order traversal now find out the location of food here we have the sole fine 4 is a root root key left make our left subtree and root right make a basic neighbor element so me that will form a supreme now to the left of 4 we have 8 out of these elements only we are not going to check 6 3 7 out of these elements only 40 left map Nebraska hi 8 now 8 would be the left of this war and 10 nine eleven ten nine eleven are ten 9/11 these are to the right of this four fine now here we have only one element that's fine now construct the subtree from 10 9 and 11 fine now out of these elements which would be the root and to find out the root we'll go to the preorder traversal now find out which elements from these elements from 10 9 and 11 which element is coming first when you go from here to here 10 9 11 I guess 9 10 or 11 are coming after this 9 so 9 would be root fine now this out of 10 and 11 which which would be to the left of 9 and which would be to the right of this 9 we'll find the left and right part when you will go to this in order traversal now locate this 9 in this inorder traversal here we have this 9 fine and 10 is to the left of 9 and 11 is to the right of 9 the left of 9 whole left of this root would be the left part so 10 would be to the left of 9 and 11 would be to the right of 9 so this has a left subtree we are done with our left subtree now come to the right subtree right subtree may we have only six three and seven three elements which would be the root of this right subtree find out out of six three and seven which is coming first when you traverse this preorder from this scan the preorder traversal from left to right six three and seven three three is coming first six and seven are coming up to this 3 2 3 would be route now out of 6 and 7 which element would be to the left of this and which element to the right of this 3 to find out this we will go to the in order traversal now locate this three in this in order to ever sell here we have this three and three is a root and six is to the left of three and seven is to the right of three so six would be to the left part of this three and seven would be right part of this three fine so this is our binary tree and you can construct this free from this preorder and this inorder traversal if you want to verify it then you can now find out preorder and inorder traversal of this tree and if preorder and inorder are same as given in the question then you can say our trees you have formed a right binary tree fine so I'll see in the next video till then bye bye take
