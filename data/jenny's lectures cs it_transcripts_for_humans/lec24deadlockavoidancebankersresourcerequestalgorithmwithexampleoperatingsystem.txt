With timestamps:

00:00 - this snapshot has given maximum and
00:02 - allocation and available we have
00:05 - available resources we have and you have
00:07 - to answer these question first of all to
00:09 - find out media metrics second one is you
00:10 - have to find out a system in safe state
00:12 - and if yes then you have to find out
00:14 - safe sequence next is see these two
00:17 - things are new
00:18 - if requests from any process requests
00:20 - from p1 arrives for these resources can
00:22 - this request be granted immediately and
00:25 - next as if request from p4 arrives for
00:28 - this resources then can this request be
00:30 - granted immediately we will check out
00:32 - this thing also right so first of all
00:34 - find out need metrics need metrics how
00:36 - to find out need metrics that maximum
00:40 - for that process - a location of that
00:43 - process because each process has already
00:48 - told the operating system that I will
00:51 - need maximum B's number of resources and
00:53 - these number of resources are already
00:55 - allocated so obviously need would be
00:57 - maximum - allocation so need matrix of
01:01 - this p0 would be maximum 4 minus 2 is 2
01:04 - here we will write - 1 - 0 1 2 minus 1
01:07 - is 1 so this is the min need matrix fine
01:10 - now next question is you have to find
01:12 - out a system in safe state what do you
01:15 - mean by safe state if the system is able
01:18 - to execute all the processes without
01:20 - going to unsafe state then you can say
01:22 - system is in safe state and in which
01:25 - sequence the system will execute these
01:27 - processes that sequence will know will
01:30 - be known as safe sequence fine now find
01:34 - out safe sequence
01:35 - currently available resources on this
01:37 - one check out the which need you can
01:40 - fulfill which process need you can
01:42 - fulfill with this available resources
01:44 - will start from P node it needs 2
01:47 - instances of a we have three it is two
01:49 - instances of B we have three it need one
01:51 - instance of C we have two in Tier one
01:53 - instance of D we have one yes we can
01:56 - fulfill this need fine now you will
01:58 - write P node if you want you can take it
02:01 - out further for the for p1 also it is 2
02:04 - instances we have 3 it need one instance
02:06 - of B we have three it's three instances
02:08 - of C but we have only two so you cannot
02:10 - fulfill this need same way
02:13 - this one see it needs three instances of
02:15 - D but we have only one you cannot
02:17 - fulfill this one so same with next one
02:20 - it me it needs two instances of D but we
02:22 - have only one we cannot fulfill this one
02:24 - same with this one
02:25 - it needs three instances of day and
02:27 - three of C but we have two and one so we
02:29 - cannot fulfill this one the system can
02:32 - only fulfill requests of P note second
02:36 - thing what we we do just add the
02:38 - allocation of that process to this
02:42 - available because as soon as this
02:43 - process will get all its required the
02:47 - sources then after some amount of time
02:48 - it completes its execution and then it
02:51 - will release all its allocated resources
02:53 - so what you will do in available
02:55 - resources just check out the location of
02:57 - P note and add to this one three plus
03:00 - two is five here three here to here we
03:03 - have two now this P node work completed
03:06 - now with the help of this available
03:08 - resources
03:09 - now which process need you can fulfill
03:11 - check out for this one - we have five
03:14 - one we have three it needs three
03:15 - instances but we have only two so you
03:17 - cannot fulfill this need what about this
03:20 - one it did three instances obey we have
03:22 - two you cannot fulfill this one what
03:25 - about this one
03:25 - yes we can fulfill this one it needs
03:27 - zero five it needs one we have three it
03:29 - needs one we have two it needs to we
03:31 - have two so you can fulfill this request
03:33 - so next is p3 fine now next thing is
03:39 - just check out that location of this p3
03:42 - and add in the available resources 5
03:44 - plus 1 is 6 3 plus 3 is 6 2 plus 1 is 3
03:48 - 2 plus 2 is 4 now p3 also got completed
03:52 - now remaining is 3 check out with the
03:55 - help of this resources can you fulfill
03:57 - request of any of these three we will
04:00 - check out with p4 it needs 2 we have sex
04:03 - it needs to we have 6 it needs 3 of C we
04:06 - have three it needs 3 we have 4 yes you
04:08 - can fulfill this need you can take it
04:10 - out for this also fine C definite also
04:14 - we can fulfill with this available
04:16 - resources so either you can execute P
04:18 - notary that you can execute P 1 so safe
04:21 - sequence can be more than 1 it's up to
04:23 - you how to solve this question exists
04:26 - now before got completed and it will
04:28 - release its resources so we will add its
04:31 - allocated resources to available sources
04:33 - now 6 plus 1 is 7 6 plus 4 is 10 3 plus
04:36 - 3 is 6 4 plus 2 is 6 right now next is
04:41 - we have these two resources so obviously
04:45 - I guess with these resources you can
04:47 - fulfill this need also end this need
04:49 - also fine so either you can take p1e
04:53 - then you can get or you can take people
04:55 - suppose I am taking p1
04:57 - now add the located resources of p1 to
05:00 - this available resources 7 plus this one
05:03 - is 11 right now finally we have p2 now
05:09 - check out a location of this one and add
05:12 - to this one 10 + 12 - n here 10 n so you
05:19 - are able to find out a safe sequence
05:21 - it means system is in safe state so
05:23 - answer would be yes and what a safe
05:27 - sequence so this is the safe sequence
05:29 - it's a Sig safe sequence can be more
05:31 - than one and so I go to the safe
05:35 - sequence right now see you can check it
05:39 - out you can tell me your answer how
05:41 - available the sources are this one and
05:44 - after executing all the processes you go
05:47 - to these number of resources it means
05:50 - total number of resources are this one
05:52 - fine now how to find out total number of
05:55 - resources now see first of all at first
06:01 - available resources were this one and
06:03 - after allocating these resources these
06:06 - were available resources so just add the
06:08 - allocated resources plus these available
06:10 - resources and you should get this number
06:13 - then you can say that you are going
06:15 - right so just add these resources these
06:19 - allocation resources 2 + 3 5 7 9 see now
06:24 - this and this number is same so you can
06:28 - tell your answer like this also now now
06:32 - we will discuss how to solve this
06:33 - question so now the third question is
06:36 - see if any requests from
06:39 - p1 arrives for this number of resources
06:41 - then can this request be granted
06:42 - immediately right see when a request
06:46 - comes then the system does not grant
06:49 - that request immediately in deadlock
06:51 - avoidance case but why because deadlock
06:54 - avoidance phase is futuristic approach
06:57 - so system will you know at that time
07:00 - will not grant that request immediately
07:02 - system will check if if I request if I
07:06 - grant this request at this time then
07:09 - will I be in safe state in future or
07:11 - will I get any deadlock in future so if
07:14 - that system get any deadlock may be
07:18 - immediately because of that request or
07:20 - may be in future then that request would
07:23 - not be granted at that time although the
07:25 - resources are available but that in that
07:27 - case also system will not grant that
07:29 - request why so it is it analyzed that it
07:31 - has some data and it analyzed that data
07:33 - and it it comes to the point that
07:36 - because of that granting of this request
07:39 - at this time I can get deadlock in
07:41 - future so that is why that system will
07:44 - not that the request will not be granted
07:47 - now how this would be checked this would
07:50 - be checked using the source request
07:51 - algorithm and then finally apply the
07:53 - safety algorithm or you can say bankers
07:55 - algorithm so now check p1 is requesting
07:59 - for resources 1 1 0 0 and we have this
08:04 - snapshot need of this matrix now so I
08:08 - hope you all know that that p1 or any
08:11 - process cannot request more resources
08:14 - then its need matrix because with
08:18 - resources each processes has initially
08:20 - told the system that we will need
08:23 - maximum these kind of resources and at
08:26 - this point of time already allocated
08:27 - resources are this one so obviously that
08:30 - process the need matrix will calculate
08:31 - and that process can now request this
08:35 - these number of resources at mix so if
08:38 - this request is exceeding from this need
08:41 - matrix then the system will raise an
08:44 - error that that process has exceeding it
08:47 - claim fine and second thing is we will
08:51 - check
08:52 - this request we have this number of
08:54 - available resources or not so we will
08:56 - check this request should be less than
08:59 - or greater less than or equal to
09:00 - available resources fine now if this is
09:05 - true now say this request is p1 is
09:09 - requesting one month zero zero so this
09:11 - the need matrix of women is two one
09:13 - three one so obviously this one is less
09:15 - than two and one is less than 1 is less
09:17 - than or equal to one so first condition
09:19 - is true now we will check do we have the
09:22 - available resources or not to fulfill
09:23 - this request so check out our available
09:25 - resources one instance at feed we have
09:28 - three one is ten set need we have three
09:30 - instances of way yes we have these kind
09:32 - of resources but it doesn't need that
09:35 - system will grant this request
09:36 - immediately no system third step is
09:40 - system will pretend not actually grant
09:43 - that request but system will pretend as
09:46 - if it has granted this request fine and
09:50 - then it will check it will apply bankers
09:52 - and go to the mode it will apply that
09:54 - safety algorithm and check in future if
09:57 - it is able to find any safe sequence
10:00 - then we can say that that's then the
10:04 - system will grant that request if the
10:06 - system will go in and save state because
10:09 - of this request then it will not grant
10:10 - this request fine now see in our system
10:16 - at this point system are pretending that
10:18 - it has granted this request
10:20 - now if system grants this request then
10:22 - what will happen obviously the need
10:25 - matrix of this p1 will be changed need
10:28 - matrix would be this need matrix - this
10:31 - one fine
10:33 - because p1 has requested this one and
10:36 - system has allocated this system is
10:38 - pretending that it has granted this
10:40 - request so need matrix movie need matrix
10:43 - - this 1 2 1 3 1 so 2 & 3 1 - 1 1 0 0
10:48 - now second thing what would be updated
10:50 - is this available matrix because system
10:53 - has system is has granted this request
10:56 - so obviously the this 1 1 0 0 this
10:59 - request would be detected from available
11:02 - resources and third thing is
11:04 - already allocated resources are three
11:06 - one to one and again this number of
11:09 - resources would be allocated to this
11:10 - matrix then they locate a lock a
11:12 - location of this p1 would become this
11:14 - allocation plus one one zero zero so
11:19 - after updating these three changes then
11:22 - this this state of the system will be
11:24 - modified to something like this see
11:27 - everything is same only we have updated
11:29 - three things the location of P 1 3 1 2 1
11:33 - plus this 1 3 plus 1 is 4 1 plus 1 is 2
11:37 - + 2 1 next we will do we will update
11:40 - this available we will - these number of
11:42 - resources from this available so this
11:44 - would be available third thing what you
11:46 - will do you will - this resources this
11:49 - request from need matrix so this would
11:51 - be something like this
11:53 - and all thing would be see now system
11:57 - system would apply the safety algorithm
11:59 - and system will check villain will I be
12:03 - able to execute all these processes
12:05 - safely and if yes then says then system
12:10 - will grant this request
12:12 - now system is pretending system is
12:14 - checking for its future so now at this
12:18 - case now at this snapshot apply that
12:21 - same algorithm that bankers algorithm
12:23 - how you'll apply that algorithm find out
12:25 - safe sequence now how to find out safe
12:29 - sequence see with the help of these
12:32 - available resources now not check can
12:34 - you fulfill request of any any process
12:37 - check it out this P not requires - we
12:40 - have two instances - we have two
12:42 - instances one we have two instances and
12:44 - one we have one instance so we can
12:45 - fulfill this request so see we will
12:49 - execute P one first fine you can check
12:53 - it out another also and if you'll find
12:55 - if you a system is able to complete any
12:57 - other process also then you can write
13:00 - down that you can start your safe
13:01 - sequence with that process also it is
13:03 - fine now P 1 has been executed now what
13:07 - the next step is what in banker's
13:09 - algorithm we will add the allocated
13:11 - resources of this this process to
13:13 - available resources because this P P 0
13:16 - now what completed and
13:17 - it will release all its allocated
13:18 - resources two plus two is four to two
13:23 - and two now find out now next is p1 now
13:29 - check out can you fulfill this request
13:30 - know why so because it requires three
13:33 - instances of C but we have only two so
13:35 - you cannot fulfill this request at this
13:37 - time now check out this one see it it it
13:41 - requires three instances of this D but
13:43 - we have only two so we cannot fulfill
13:46 - this request check out for this one zero
13:49 - we have four it requires 1 we have 2 1
13:51 - we have 2 2 we have 2 guests you can
13:53 - fulfill this request
13:54 - so now p3 now what you'll add in
13:59 - available resources allocated resources
14:01 - of this p3 4 plus 1 is 5 3 plus 2 is 5 2
14:06 - plus 1 is 3 2 plus 2 is 4 now this work
14:09 - completed now find out next
14:12 - next is p4 can you fulfill this request
14:15 - yes we can fulfill 2 it is less than 5
14:17 - it requires 2 we have 5 it requires 3
14:20 - instances we have 3 it requires 3
14:21 - instances we have 4 so you can fulfill
14:24 - this request also now p4 now add a
14:28 - location met a location the sources of
14:30 - this p4 in this available resources 5
14:32 - plus 1 is 6 5 plus 4 9 3 plus 3 is 6 4
14:36 - plus 2 is 6
14:37 - now p4 got completed now next remaining
14:40 - is p1 and p2 so obviously with this help
14:44 - of this available resources you can
14:45 - fulfill this request also and this also
14:47 - so you can take either p1 or p2 I'm get
14:49 - retaking p1 so after completing p1 we
14:53 - will add the allocation resources of p1
14:54 - to available resources now this
14:56 - allocation resources not go for this one
14:57 - because you have updated this state to
14:59 - the state now 10 11 8 7 now p1 completed
15:07 - now next is p2 now add a located
15:11 - resources of p2 2 L 2 L 8 and and now
15:16 - after completing all the say this is
15:18 - safe sequence now system is able to get
15:21 - safe sequence now system can grant this
15:26 - request or you can say system will grant
15:28 - this request now
15:30 - taking this case after checking the safe
15:33 - sequence Y if system is able to get safe
15:36 - sequence then system will grant this
15:38 - request now you can say yes this request
15:42 - can this request be granted yes this
15:44 - request can be immediately granted
15:47 - fine because after granting this request
15:50 - system is able to find safe sequence
15:52 - system will not going unsafe state now
15:55 - check out for this one if the SEC West
15:57 - comes then can request this request to
16:00 - be immediately granted same method
16:02 - you'll apply to this also fine and
16:06 - system will pretend first of all system
16:08 - will pretend that it has granted this
16:10 - request now what would be the change in
16:12 - this case in this snapshot CP for the
16:17 - NIDA matrix of p4 would be changed
16:19 - available would be changed and a
16:20 - location of this p4 will be changed now
16:24 - the updated state is from this to this
16:27 - one after pretending that this is this
16:31 - request has been granted what should be
16:33 - changed in this state available would be
16:35 - changed this will will do - of these
16:38 - resources from available resources fine
16:40 - so available would do have three three
16:42 - zero and one next thing is need a matrix
16:45 - of this p4 would be changed need matrix
16:48 - is need of this p4 is this one and this
16:50 - request p4 has requested these resources
16:52 - and these resources has been given to p4
16:56 - so we will - these resources to this one
16:59 - so need matrix would be 2 - 3 - 2 is 1
17:02 - and 3 again already allocated resources
17:05 - at this one again and located resources
17:08 - have this one so we will add this and
17:10 - this and this will become 1 4 5 and 2
17:13 - now system is checking system is at
17:15 - applying safety algorithm in system and
17:17 - checking for the safe state of this one
17:20 - if you are able to find out the safe
17:22 - sequence then system will grant this
17:24 - request now find out safe sequence apply
17:31 - that safety algorithm now with the help
17:33 - of these available resources check out
17:36 - which need you can fulfill for this one
17:40 - it requires two instances we have three
17:42 - it requires two instances of BB
17:43 - have three it requires one instance of C
17:45 - but we have only zero so you cannot
17:48 - fulfill this need same with this one so
17:52 - just check out for C I guess because
17:54 - available resources of available
17:56 - instances of C is only zero fine it
17:59 - requires three instances of C but we
18:00 - have zero kind fulfill it acquire one
18:02 - instance which I have zero can't fulfill
18:04 - it require one instance of C cannot
18:07 - fulfill it require one instance of C I
18:09 - have zero cannot fulfill so system is
18:11 - not able to fulfill any process need now
18:16 - obviously the system will go in and save
18:19 - State fine and F system find out that if
18:24 - I grant this request I will go in unsafe
18:28 - State then system will not grant that
18:31 - request so system will say no to this
18:35 - request so answer would be no this this
18:38 - request cannot be granted immediately
18:40 - see all the resources are available C
18:43 - resources are available so system can
18:44 - grant this request but resources are
18:47 - available but in future because of this
18:49 - request because of granting this request
18:51 - immediately system may get stuck this
18:54 - term may be deadlocked so system will
18:57 - not grant this request so this is how
18:59 - system will avoid deadlock so this is a
19:02 - resource request algorithm whatever we
19:04 - have discussed I have written those in
19:06 - two steps C first step is if request
19:10 - request of a particular process is less
19:13 - than if want to need then then what we
19:16 - will do then what we will do again we
19:18 - will check request with this available
19:21 - resource if request is less than
19:23 - available then we'll go with step
19:25 - through step three is what system will
19:29 - pretend that this that request has been
19:31 - granted and this state would be modified
19:35 - to another state as we have discussed so
19:38 - system pretend as if request has been
19:40 - granted by modifying the state as
19:43 - follows
19:43 - now state would be followed all what
19:45 - need of that process has been changed
19:48 - available would be changed and a
19:50 - location for that process would be
19:52 - changed so available would be available
19:54 - - request of that
19:57 - is a location of that process see a
20:00 - location III means particular process so
20:02 - a location of that process becomes a
20:04 - location plus request and need of that
20:08 - process need of that process becomes
20:10 - need of that process - request of that
20:14 - process see the meaning of this the
20:16 - symbol is available is equal to
20:18 - available - request I hope you know this
20:21 - thing fine and after modifying this
20:24 - state if if say this is not it right now
20:28 - after modifying this request F modified
20:31 - resource a location state is safe see if
20:35 - you are able to the system is able to
20:37 - find out safe sequence then then since
20:39 - then request will be granted otherwise
20:42 - otherwise say no to the urgent request
20:45 - and that previous or you can say old a
20:49 - location resource state would be
20:51 - restored so the D step we have already
20:54 - discussed when we were discussing the
20:57 - answer of when we were finding the
20:59 - answer of these questions so I hope no
21:01 - need to explain further these steps you
21:03 - know you got this resource request
21:06 - algorithm in next video we will discuss
21:09 - how to detect deadlock in the system and
21:12 - how to recover deadlock detection and
21:14 - recovery basically so till then bye-bye
21:17 - techniques

Cleaned transcript:

this snapshot has given maximum and allocation and available we have available resources we have and you have to answer these question first of all to find out media metrics second one is you have to find out a system in safe state and if yes then you have to find out safe sequence next is see these two things are new if requests from any process requests from p1 arrives for these resources can this request be granted immediately and next as if request from p4 arrives for this resources then can this request be granted immediately we will check out this thing also right so first of all find out need metrics need metrics how to find out need metrics that maximum for that process a location of that process because each process has already told the operating system that I will need maximum B's number of resources and these number of resources are already allocated so obviously need would be maximum allocation so need matrix of this p0 would be maximum 4 minus 2 is 2 here we will write 1 0 1 2 minus 1 is 1 so this is the min need matrix fine now next question is you have to find out a system in safe state what do you mean by safe state if the system is able to execute all the processes without going to unsafe state then you can say system is in safe state and in which sequence the system will execute these processes that sequence will know will be known as safe sequence fine now find out safe sequence currently available resources on this one check out the which need you can fulfill which process need you can fulfill with this available resources will start from P node it needs 2 instances of a we have three it is two instances of B we have three it need one instance of C we have two in Tier one instance of D we have one yes we can fulfill this need fine now you will write P node if you want you can take it out further for the for p1 also it is 2 instances we have 3 it need one instance of B we have three it's three instances of C but we have only two so you cannot fulfill this need same way this one see it needs three instances of D but we have only one you cannot fulfill this one so same with next one it me it needs two instances of D but we have only one we cannot fulfill this one same with this one it needs three instances of day and three of C but we have two and one so we cannot fulfill this one the system can only fulfill requests of P note second thing what we we do just add the allocation of that process to this available because as soon as this process will get all its required the sources then after some amount of time it completes its execution and then it will release all its allocated resources so what you will do in available resources just check out the location of P note and add to this one three plus two is five here three here to here we have two now this P node work completed now with the help of this available resources now which process need you can fulfill check out for this one we have five one we have three it needs three instances but we have only two so you cannot fulfill this need what about this one it did three instances obey we have two you cannot fulfill this one what about this one yes we can fulfill this one it needs zero five it needs one we have three it needs one we have two it needs to we have two so you can fulfill this request so next is p3 fine now next thing is just check out that location of this p3 and add in the available resources 5 plus 1 is 6 3 plus 3 is 6 2 plus 1 is 3 2 plus 2 is 4 now p3 also got completed now remaining is 3 check out with the help of this resources can you fulfill request of any of these three we will check out with p4 it needs 2 we have sex it needs to we have 6 it needs 3 of C we have three it needs 3 we have 4 yes you can fulfill this need you can take it out for this also fine C definite also we can fulfill with this available resources so either you can execute P notary that you can execute P 1 so safe sequence can be more than 1 it's up to you how to solve this question exists now before got completed and it will release its resources so we will add its allocated resources to available sources now 6 plus 1 is 7 6 plus 4 is 10 3 plus 3 is 6 4 plus 2 is 6 right now next is we have these two resources so obviously I guess with these resources you can fulfill this need also end this need also fine so either you can take p1e then you can get or you can take people suppose I am taking p1 now add the located resources of p1 to this available resources 7 plus this one is 11 right now finally we have p2 now check out a location of this one and add to this one 10 + 12 n here 10 n so you are able to find out a safe sequence it means system is in safe state so answer would be yes and what a safe sequence so this is the safe sequence it's a Sig safe sequence can be more than one and so I go to the safe sequence right now see you can check it out you can tell me your answer how available the sources are this one and after executing all the processes you go to these number of resources it means total number of resources are this one fine now how to find out total number of resources now see first of all at first available resources were this one and after allocating these resources these were available resources so just add the allocated resources plus these available resources and you should get this number then you can say that you are going right so just add these resources these allocation resources 2 + 3 5 7 9 see now this and this number is same so you can tell your answer like this also now now we will discuss how to solve this question so now the third question is see if any requests from p1 arrives for this number of resources then can this request be granted immediately right see when a request comes then the system does not grant that request immediately in deadlock avoidance case but why because deadlock avoidance phase is futuristic approach so system will you know at that time will not grant that request immediately system will check if if I request if I grant this request at this time then will I be in safe state in future or will I get any deadlock in future so if that system get any deadlock may be immediately because of that request or may be in future then that request would not be granted at that time although the resources are available but that in that case also system will not grant that request why so it is it analyzed that it has some data and it analyzed that data and it it comes to the point that because of that granting of this request at this time I can get deadlock in future so that is why that system will not that the request will not be granted now how this would be checked this would be checked using the source request algorithm and then finally apply the safety algorithm or you can say bankers algorithm so now check p1 is requesting for resources 1 1 0 0 and we have this snapshot need of this matrix now so I hope you all know that that p1 or any process cannot request more resources then its need matrix because with resources each processes has initially told the system that we will need maximum these kind of resources and at this point of time already allocated resources are this one so obviously that process the need matrix will calculate and that process can now request this these number of resources at mix so if this request is exceeding from this need matrix then the system will raise an error that that process has exceeding it claim fine and second thing is we will check this request we have this number of available resources or not so we will check this request should be less than or greater less than or equal to available resources fine now if this is true now say this request is p1 is requesting one month zero zero so this the need matrix of women is two one three one so obviously this one is less than two and one is less than 1 is less than or equal to one so first condition is true now we will check do we have the available resources or not to fulfill this request so check out our available resources one instance at feed we have three one is ten set need we have three instances of way yes we have these kind of resources but it doesn't need that system will grant this request immediately no system third step is system will pretend not actually grant that request but system will pretend as if it has granted this request fine and then it will check it will apply bankers and go to the mode it will apply that safety algorithm and check in future if it is able to find any safe sequence then we can say that that's then the system will grant that request if the system will go in and save state because of this request then it will not grant this request fine now see in our system at this point system are pretending that it has granted this request now if system grants this request then what will happen obviously the need matrix of this p1 will be changed need matrix would be this need matrix this one fine because p1 has requested this one and system has allocated this system is pretending that it has granted this request so need matrix movie need matrix this 1 2 1 3 1 so 2 & 3 1 1 1 0 0 now second thing what would be updated is this available matrix because system has system is has granted this request so obviously the this 1 1 0 0 this request would be detected from available resources and third thing is already allocated resources are three one to one and again this number of resources would be allocated to this matrix then they locate a lock a location of this p1 would become this allocation plus one one zero zero so after updating these three changes then this this state of the system will be modified to something like this see everything is same only we have updated three things the location of P 1 3 1 2 1 plus this 1 3 plus 1 is 4 1 plus 1 is 2 + 2 1 next we will do we will update this available we will these number of resources from this available so this would be available third thing what you will do you will this resources this request from need matrix so this would be something like this and all thing would be see now system system would apply the safety algorithm and system will check villain will I be able to execute all these processes safely and if yes then says then system will grant this request now system is pretending system is checking for its future so now at this case now at this snapshot apply that same algorithm that bankers algorithm how you'll apply that algorithm find out safe sequence now how to find out safe sequence see with the help of these available resources now not check can you fulfill request of any any process check it out this P not requires we have two instances we have two instances one we have two instances and one we have one instance so we can fulfill this request so see we will execute P one first fine you can check it out another also and if you'll find if you a system is able to complete any other process also then you can write down that you can start your safe sequence with that process also it is fine now P 1 has been executed now what the next step is what in banker's algorithm we will add the allocated resources of this this process to available resources because this P P 0 now what completed and it will release all its allocated resources two plus two is four to two and two now find out now next is p1 now check out can you fulfill this request know why so because it requires three instances of C but we have only two so you cannot fulfill this request at this time now check out this one see it it it requires three instances of this D but we have only two so we cannot fulfill this request check out for this one zero we have four it requires 1 we have 2 1 we have 2 2 we have 2 guests you can fulfill this request so now p3 now what you'll add in available resources allocated resources of this p3 4 plus 1 is 5 3 plus 2 is 5 2 plus 1 is 3 2 plus 2 is 4 now this work completed now find out next next is p4 can you fulfill this request yes we can fulfill 2 it is less than 5 it requires 2 we have 5 it requires 3 instances we have 3 it requires 3 instances we have 4 so you can fulfill this request also now p4 now add a location met a location the sources of this p4 in this available resources 5 plus 1 is 6 5 plus 4 9 3 plus 3 is 6 4 plus 2 is 6 now p4 got completed now next remaining is p1 and p2 so obviously with this help of this available resources you can fulfill this request also and this also so you can take either p1 or p2 I'm get retaking p1 so after completing p1 we will add the allocation resources of p1 to available resources now this allocation resources not go for this one because you have updated this state to the state now 10 11 8 7 now p1 completed now next is p2 now add a located resources of p2 2 L 2 L 8 and and now after completing all the say this is safe sequence now system is able to get safe sequence now system can grant this request or you can say system will grant this request now taking this case after checking the safe sequence Y if system is able to get safe sequence then system will grant this request now you can say yes this request can this request be granted yes this request can be immediately granted fine because after granting this request system is able to find safe sequence system will not going unsafe state now check out for this one if the SEC West comes then can request this request to be immediately granted same method you'll apply to this also fine and system will pretend first of all system will pretend that it has granted this request now what would be the change in this case in this snapshot CP for the NIDA matrix of p4 would be changed available would be changed and a location of this p4 will be changed now the updated state is from this to this one after pretending that this is this request has been granted what should be changed in this state available would be changed this will will do of these resources from available resources fine so available would do have three three zero and one next thing is need a matrix of this p4 would be changed need matrix is need of this p4 is this one and this request p4 has requested these resources and these resources has been given to p4 so we will these resources to this one so need matrix would be 2 3 2 is 1 and 3 again already allocated resources at this one again and located resources have this one so we will add this and this and this will become 1 4 5 and 2 now system is checking system is at applying safety algorithm in system and checking for the safe state of this one if you are able to find out the safe sequence then system will grant this request now find out safe sequence apply that safety algorithm now with the help of these available resources check out which need you can fulfill for this one it requires two instances we have three it requires two instances of BB have three it requires one instance of C but we have only zero so you cannot fulfill this need same with this one so just check out for C I guess because available resources of available instances of C is only zero fine it requires three instances of C but we have zero kind fulfill it acquire one instance which I have zero can't fulfill it require one instance of C cannot fulfill it require one instance of C I have zero cannot fulfill so system is not able to fulfill any process need now obviously the system will go in and save State fine and F system find out that if I grant this request I will go in unsafe State then system will not grant that request so system will say no to this request so answer would be no this this request cannot be granted immediately see all the resources are available C resources are available so system can grant this request but resources are available but in future because of this request because of granting this request immediately system may get stuck this term may be deadlocked so system will not grant this request so this is how system will avoid deadlock so this is a resource request algorithm whatever we have discussed I have written those in two steps C first step is if request request of a particular process is less than if want to need then then what we will do then what we will do again we will check request with this available resource if request is less than available then we'll go with step through step three is what system will pretend that this that request has been granted and this state would be modified to another state as we have discussed so system pretend as if request has been granted by modifying the state as follows now state would be followed all what need of that process has been changed available would be changed and a location for that process would be changed so available would be available request of that is a location of that process see a location III means particular process so a location of that process becomes a location plus request and need of that process need of that process becomes need of that process request of that process see the meaning of this the symbol is available is equal to available request I hope you know this thing fine and after modifying this state if if say this is not it right now after modifying this request F modified resource a location state is safe see if you are able to the system is able to find out safe sequence then then since then request will be granted otherwise otherwise say no to the urgent request and that previous or you can say old a location resource state would be restored so the D step we have already discussed when we were discussing the answer of when we were finding the answer of these questions so I hope no need to explain further these steps you know you got this resource request algorithm in next video we will discuss how to detect deadlock in the system and how to recover deadlock detection and recovery basically so till then byebye techniques
