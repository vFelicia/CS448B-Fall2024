With timestamps:

00:00 - so in this video we will see how to
00:02 - perform deletion in splay trees in the
00:04 - previous video we have already discussed
00:06 - how to perform insertion in splay trees
00:08 - right so this is the tree I am taking
00:11 - this example and I am going to delete
00:13 - first of all 12th and 14th and 16th
00:14 - right now how to delete a data from
00:17 - splay trees as we know splay trees are
00:20 - what these are also a variant of binary
00:23 - search trees right so the deletion
00:26 - operation would be would be having same
00:29 - process as the as in the BST binary
00:33 - search tree right but only difference is
00:35 - what after deletion you are going to
00:38 - perform playing operation in splay tree
00:40 - right after insertion also we have
00:43 - performed this playing operation after
00:45 - search also you you are going to perform
00:46 - splay operation right
00:48 - now first of all you will delete the
00:50 - data we will perform the same step as we
00:53 - have discussed in BST after that we will
00:56 - do splaying of this tree
00:58 - now splaying on which element this thing
01:03 - you need to take care this is the
01:04 - important point to note here you are
01:07 - going to splay this tree for which
01:09 - element right now see I'll tell you
01:12 - first of all suppose I'm going to delete
01:14 - first of all to L so how to delete first
01:17 - step is what simple perform standard BST
01:20 - deletion right that is the first step
01:22 - now in BST deletion what we will do
01:25 - first of all you in search for this to
01:27 - end where is this - L in this frame
01:29 - right compare with this root we are
01:32 - going to start obviously from the root
01:33 - because we are having address of the
01:35 - root node only right now compared 12 is
01:38 - less than 14 so go to the left side 12
01:40 - is less than 13 go to the left side well
01:43 - is greater than 7 go to the right side
01:44 - 12 is greater than 10 go to the right
01:47 - side and here we go 12 right now see
01:50 - what is the parent of this node you want
01:54 - to delete this is the parent right and
01:58 - this is the node suppose and you want to
02:02 - delete right now in based a deletion
02:06 - this is the leaf node so you can simply
02:08 - delete it no need to do anything right
02:11 - we will discuss all the cases
02:13 - the node you want to delete is having on
02:14 - you one child or if it is having two
02:16 - children right in this case this node is
02:19 - having a zero a child so now you can
02:22 - simply delete it now after deletion what
02:26 - you need to do now after deletion of
02:29 - this this is the tree now that is not
02:31 - yet done the deletion is not yet done in
02:34 - splay trees now we are going to splay
02:36 - this tree for this element for the
02:40 - parent of the node you want to delete
02:43 - you have deleted this 12 parent of this
02:46 - node is 10 so you will splay this 10 now
02:49 - right this is the important point to
02:52 - note here now see suppose I have deleted
02:57 - this 12 this this is having no children
02:59 - so you can simply delete it right now
03:03 - parent is this one so splay this tree
03:05 - for this on this element you can say
03:09 - splay this 10 over here you can write
03:12 - display at 10 now I have already
03:16 - discussed how to lose playing operation
03:19 - in splay trees find out the parent of
03:22 - this node now this is not the parent now
03:24 - we are going to splay this right so
03:26 - suppose this is X parent of this one is
03:29 - this one and grandparent is this one so
03:33 - this is having both parent and a
03:34 - grandparent so that case you need to
03:36 - follow in that case also we have 4 sub
03:38 - cases now see this is what right child
03:41 - of parent but this is what left child of
03:43 - its parent both are in opposite
03:45 - direction so this is what zig-zag
03:48 - situation so here you will do zigzag
03:51 - rotation right now in case of zigzag
03:55 - rotation first we are going to perform
03:57 - rotation on the parent then grandparent
04:00 - now you have to find out which rotation
04:02 - left or right you need to perform see
04:05 - this 10 is what the right child of this
04:08 - parent so we are going to perform left
04:11 - rotation on parent right and after that
04:14 - right rotation on grandparent so now
04:17 - after first rotation the tree is
04:19 - something like this rotate this to the
04:22 - left so 10 would go up 4 & 7
04:25 - go downward now this is grandparent so
04:28 - now rotate it with right because now
04:31 - this is a left child of this one so now
04:34 - the tree would be but now this is not
04:37 - yet band because 10 is still not the
04:39 - root splaying means if you want lose
04:43 - play this 10 then it means we are going
04:46 - to make 10 as a root of the tree but 10
04:48 - is not the root still so I have told you
04:51 - what is that splaying algorithm we are
04:53 - going to write this step of splaying in
04:55 - while loop right in the previous video
04:57 - we have already discussed you can check
04:58 - out that video in this I button now see
05:00 - now again which rotation you need to
05:03 - apply which case is there now this 10 is
05:06 - what left child of this parent and the
05:09 - parent of 10 is what root right so now
05:12 - 10 is not having any grandparent so now
05:16 - this is what only Zig situation now
05:18 - which rotation you need to apply left or
05:20 - right this you need to take care now
05:23 - this is left side of 14 so we need to
05:25 - apply a right rotation right rotation on
05:27 - this root or you can say parent of this
05:29 - 10 so after this right rotation the tree
05:32 - would be see here 13 is to the right of
05:36 - this 10 so it would go to the right of
05:39 - 10 but left of now 14 this also we have
05:42 - already discussed in the previous video
05:44 - that how to do left rotation and right
05:46 - rotation means how to write down the
05:48 - steps right now this is the tree right
05:51 - after deletion of twin right now I will
05:56 - delete 14 now find out where is 14
05:59 - greater than 10 so here you go to this
06:01 - 14 now see the 14 is having both left
06:05 - and right child now this is internal
06:08 - node so you cannot simply delete it
06:10 - we cannot delete internal node in BST we
06:12 - can delete only leaf nodes right now we
06:16 - can replace this node now with which
06:18 - child you are going to replace it
06:20 - because it is having both left and right
06:22 - child so two approaches are there either
06:26 - you can select in order predecessor or
06:27 - inorder successor it's up to you now I
06:30 - am selecting suppose inorder successor
06:32 - now what inorder successor of 14 is what
06:35 - in the right subtree find out the
06:38 - smallest element right now in the right
06:42 - subtree of this 14 smallest element is
06:44 - what 15 right see I have already
06:46 - discussed BST insertion and deletion in
06:48 - detail so you can check out that video
06:50 - in the cyber 10 now we are going to
06:53 - replace this 14 with this 15 so suppose
06:55 - I am replacing here 15 right now here we
07:00 - go to 15 this and this so now we are
07:03 - going to delete this one we are going to
07:05 - call recursively the date function on
07:07 - this inorder successor right now this is
07:09 - what leaf node so you can simply delete
07:11 - it now this is not yet done now we are
07:14 - going to performs playing operation now
07:16 - splaying on which element on which node
07:18 - C before deletion here we had 14 parent
07:23 - of the node you want to delete this this
07:26 - one right so we will do is playing on
07:30 - the parent of the node you want to
07:32 - believe now parent is this one now see
07:34 - parent is already root node so now you
07:38 - no need to do any splain fine because in
07:41 - splaying we will we are going to make
07:43 - that node the root of the tree and this
07:45 - is already the root of the tree so you
07:47 - no need to do any splaying now this is
07:49 - done right now we will delete 16 now
07:52 - find out where is 16 greater than 10
07:55 - greater than 50 now here we go to 16
07:57 - we cannot delete it because it is
08:00 - internal node now it is having one child
08:02 - only so simply you can replace the 16
08:06 - with 70 its children now you can delete
08:10 - this yes we can delete because this is
08:11 - the leaf node so we can delete it now on
08:15 - which node you are going to performs
08:16 - playing operation before deletion the
08:18 - node 16 was here parent of this is 15 so
08:23 - we will delete sorry we will perform
08:25 - splay operation on this 50 now we are
08:28 - going to make this 15 as the root of the
08:30 - tree now find out which rotation you
08:32 - require 15 the parent of 15 is root node
08:36 - so it is only Zig situation is there
08:40 - which rotation you need now 15 is right
08:43 - child of 10 so we will do left rotation
08:47 - left rotation right or you can say the
08:50 - zeg rotation
08:51 - so now after this left rotation the tree
08:53 - something like this now ten would go
08:55 - downward 15 would go upward right now
08:58 - see here to the left of this 15 we have
09:04 - 13 so to the left of 15
09:07 - now the 13 would go left of 15 and right
09:09 - of this 10 here we got 13 now you can
09:13 - see 15 is now the root node now suppose
09:18 - you want to delete 20 now search where
09:22 - is 20 in this tree greater than 15
09:26 - greater than 17 but we don't have any
09:29 - child of this 17 we have raised to none
09:33 - it means we don't have this 20 in the
09:35 - string right now you will do splain you
09:39 - will dos playing in this that is for
09:40 - sure but on which element you will lose
09:43 - playing operation now see this before
09:47 - reaching to the null node because here
09:50 - we have null 20 is greater than 17 but
09:53 - here we have null so the last exists
09:56 - note null node is 17 right so you need
10:01 - to display 117 now it's not like that
10:04 - the data is not present so simply you
10:06 - just leave it like this
10:07 - no after searching if the data is not
10:10 - present then splay on the node which is
10:14 - last not null node lastly access should
10:17 - not null node before reaching to the
10:20 - null node fine
10:21 - now you will lose playing 117 now 17 is
10:25 - what root of 17 is sorry the parent of
10:28 - 17 is root only so this is Zig situation
10:31 - now the 17 is to the right of 15 so we
10:34 - will do left rotation right so this is
10:37 - what is a rotation or here you can say
10:40 - this is zag rotation as well fine
10:43 - now the 17 would go upward so the tree
10:48 - would be something like this so now
10:50 - suppose you want to be it 17 now see
10:54 - where is 17 the root of the tree is 17
10:56 - so now is there any parent of this root
10:59 - no parent of root is there so we cannot
11:03 - do any splaying or
11:04 - you can simply delete it means we are
11:06 - going to replace it it is hanging left
11:08 - child's for left child is 15 now 15
11:11 - would become the new root and no need to
11:13 - do any spring because this root is the
11:15 - node you want to delete is not having
11:17 - any parent right so basically two steps
11:21 - in this deletion first is perform
11:24 - standard BST deletion second is you
11:27 - display the tree on the element which is
11:29 - parent of the node you you have deleted
11:34 - right so two steps are there now I have
11:37 - already deleted I have already discussed
11:39 - the algorithm force playing in the
11:41 - previous video right how to write down
11:43 - the algorithm now simply be a state
11:45 - volition algorithm is what that thing
11:47 - will I will discuss in the separate
11:49 - video algorithm for BST insertion as
11:51 - well as deletion right so now see this
11:55 - is what a bottom-up approach or you can
11:59 - say bottom-up splaying deletion in splay
12:01 - trees can be performed in two ways first
12:05 - s that is top-down playing you can say
12:10 - or next one is bottom-up right so maybe
12:16 - this is what a bottom-up splaying fine
12:19 - in the next video we will discuss how to
12:21 - do deletion in splay tree by following
12:23 - that top-down splaying approach right
12:27 - now you can in the question you you can
12:30 - be asked like this they'll give you a
12:32 - tree and they'll ask you to delete a key
12:35 - and they'll say you that the splay tree
12:37 - is what a bottom-up tree it is having
12:39 - bottom-up approach so you need to follow
12:42 - this approach if they ask you to follow
12:45 - the top-down approach means in that case
12:47 - you have to split the tree in two sub
12:50 - trees and after that after deleting the
12:52 - particular node you how you want to
12:53 - delete after that you can merge those
12:56 - trees right first of all then the key
12:59 - you want to delete you have to make that
13:01 - he has the root of the tree after that
13:03 - once you delete the root of that tree
13:05 - then the tree would be splitted into two
13:08 - trees one is left sub tree one is right
13:10 - sub tree that thing we'll discuss in the
13:12 - next video with the help of an example
13:13 - so this is all about deletion in splay
13:15 - please following this bottom-up splaying
13:19 - approach right and I'll see you now in
13:21 - the next video till then bye bye take
13:23 - care

Cleaned transcript:

so in this video we will see how to perform deletion in splay trees in the previous video we have already discussed how to perform insertion in splay trees right so this is the tree I am taking this example and I am going to delete first of all 12th and 14th and 16th right now how to delete a data from splay trees as we know splay trees are what these are also a variant of binary search trees right so the deletion operation would be would be having same process as the as in the BST binary search tree right but only difference is what after deletion you are going to perform playing operation in splay tree right after insertion also we have performed this playing operation after search also you you are going to perform splay operation right now first of all you will delete the data we will perform the same step as we have discussed in BST after that we will do splaying of this tree now splaying on which element this thing you need to take care this is the important point to note here you are going to splay this tree for which element right now see I'll tell you first of all suppose I'm going to delete first of all to L so how to delete first step is what simple perform standard BST deletion right that is the first step now in BST deletion what we will do first of all you in search for this to end where is this L in this frame right compare with this root we are going to start obviously from the root because we are having address of the root node only right now compared 12 is less than 14 so go to the left side 12 is less than 13 go to the left side well is greater than 7 go to the right side 12 is greater than 10 go to the right side and here we go 12 right now see what is the parent of this node you want to delete this is the parent right and this is the node suppose and you want to delete right now in based a deletion this is the leaf node so you can simply delete it no need to do anything right we will discuss all the cases the node you want to delete is having on you one child or if it is having two children right in this case this node is having a zero a child so now you can simply delete it now after deletion what you need to do now after deletion of this this is the tree now that is not yet done the deletion is not yet done in splay trees now we are going to splay this tree for this element for the parent of the node you want to delete you have deleted this 12 parent of this node is 10 so you will splay this 10 now right this is the important point to note here now see suppose I have deleted this 12 this this is having no children so you can simply delete it right now parent is this one so splay this tree for this on this element you can say splay this 10 over here you can write display at 10 now I have already discussed how to lose playing operation in splay trees find out the parent of this node now this is not the parent now we are going to splay this right so suppose this is X parent of this one is this one and grandparent is this one so this is having both parent and a grandparent so that case you need to follow in that case also we have 4 sub cases now see this is what right child of parent but this is what left child of its parent both are in opposite direction so this is what zigzag situation so here you will do zigzag rotation right now in case of zigzag rotation first we are going to perform rotation on the parent then grandparent now you have to find out which rotation left or right you need to perform see this 10 is what the right child of this parent so we are going to perform left rotation on parent right and after that right rotation on grandparent so now after first rotation the tree is something like this rotate this to the left so 10 would go up 4 & 7 go downward now this is grandparent so now rotate it with right because now this is a left child of this one so now the tree would be but now this is not yet band because 10 is still not the root splaying means if you want lose play this 10 then it means we are going to make 10 as a root of the tree but 10 is not the root still so I have told you what is that splaying algorithm we are going to write this step of splaying in while loop right in the previous video we have already discussed you can check out that video in this I button now see now again which rotation you need to apply which case is there now this 10 is what left child of this parent and the parent of 10 is what root right so now 10 is not having any grandparent so now this is what only Zig situation now which rotation you need to apply left or right this you need to take care now this is left side of 14 so we need to apply a right rotation right rotation on this root or you can say parent of this 10 so after this right rotation the tree would be see here 13 is to the right of this 10 so it would go to the right of 10 but left of now 14 this also we have already discussed in the previous video that how to do left rotation and right rotation means how to write down the steps right now this is the tree right after deletion of twin right now I will delete 14 now find out where is 14 greater than 10 so here you go to this 14 now see the 14 is having both left and right child now this is internal node so you cannot simply delete it we cannot delete internal node in BST we can delete only leaf nodes right now we can replace this node now with which child you are going to replace it because it is having both left and right child so two approaches are there either you can select in order predecessor or inorder successor it's up to you now I am selecting suppose inorder successor now what inorder successor of 14 is what in the right subtree find out the smallest element right now in the right subtree of this 14 smallest element is what 15 right see I have already discussed BST insertion and deletion in detail so you can check out that video in the cyber 10 now we are going to replace this 14 with this 15 so suppose I am replacing here 15 right now here we go to 15 this and this so now we are going to delete this one we are going to call recursively the date function on this inorder successor right now this is what leaf node so you can simply delete it now this is not yet done now we are going to performs playing operation now splaying on which element on which node C before deletion here we had 14 parent of the node you want to delete this this one right so we will do is playing on the parent of the node you want to believe now parent is this one now see parent is already root node so now you no need to do any splain fine because in splaying we will we are going to make that node the root of the tree and this is already the root of the tree so you no need to do any splaying now this is done right now we will delete 16 now find out where is 16 greater than 10 greater than 50 now here we go to 16 we cannot delete it because it is internal node now it is having one child only so simply you can replace the 16 with 70 its children now you can delete this yes we can delete because this is the leaf node so we can delete it now on which node you are going to performs playing operation before deletion the node 16 was here parent of this is 15 so we will delete sorry we will perform splay operation on this 50 now we are going to make this 15 as the root of the tree now find out which rotation you require 15 the parent of 15 is root node so it is only Zig situation is there which rotation you need now 15 is right child of 10 so we will do left rotation left rotation right or you can say the zeg rotation so now after this left rotation the tree something like this now ten would go downward 15 would go upward right now see here to the left of this 15 we have 13 so to the left of 15 now the 13 would go left of 15 and right of this 10 here we got 13 now you can see 15 is now the root node now suppose you want to delete 20 now search where is 20 in this tree greater than 15 greater than 17 but we don't have any child of this 17 we have raised to none it means we don't have this 20 in the string right now you will do splain you will dos playing in this that is for sure but on which element you will lose playing operation now see this before reaching to the null node because here we have null 20 is greater than 17 but here we have null so the last exists note null node is 17 right so you need to display 117 now it's not like that the data is not present so simply you just leave it like this no after searching if the data is not present then splay on the node which is last not null node lastly access should not null node before reaching to the null node fine now you will lose playing 117 now 17 is what root of 17 is sorry the parent of 17 is root only so this is Zig situation now the 17 is to the right of 15 so we will do left rotation right so this is what is a rotation or here you can say this is zag rotation as well fine now the 17 would go upward so the tree would be something like this so now suppose you want to be it 17 now see where is 17 the root of the tree is 17 so now is there any parent of this root no parent of root is there so we cannot do any splaying or you can simply delete it means we are going to replace it it is hanging left child's for left child is 15 now 15 would become the new root and no need to do any spring because this root is the node you want to delete is not having any parent right so basically two steps in this deletion first is perform standard BST deletion second is you display the tree on the element which is parent of the node you you have deleted right so two steps are there now I have already deleted I have already discussed the algorithm force playing in the previous video right how to write down the algorithm now simply be a state volition algorithm is what that thing will I will discuss in the separate video algorithm for BST insertion as well as deletion right so now see this is what a bottomup approach or you can say bottomup splaying deletion in splay trees can be performed in two ways first s that is topdown playing you can say or next one is bottomup right so maybe this is what a bottomup splaying fine in the next video we will discuss how to do deletion in splay tree by following that topdown splaying approach right now you can in the question you you can be asked like this they'll give you a tree and they'll ask you to delete a key and they'll say you that the splay tree is what a bottomup tree it is having bottomup approach so you need to follow this approach if they ask you to follow the topdown approach means in that case you have to split the tree in two sub trees and after that after deleting the particular node you how you want to delete after that you can merge those trees right first of all then the key you want to delete you have to make that he has the root of the tree after that once you delete the root of that tree then the tree would be splitted into two trees one is left sub tree one is right sub tree that thing we'll discuss in the next video with the help of an example so this is all about deletion in splay please following this bottomup splaying approach right and I'll see you now in the next video till then bye bye take care
