With timestamps:

00:00 - so in the series of learning c
00:01 - programming we are discussing file
00:02 - handling in c we have discussed basics
00:04 - about file handling why we need files
00:06 - what is a file what is a file pointer
00:07 - what is f open function right now in
00:10 - this video we will see how to write
00:11 - something to a file means how to write a
00:13 - character how to write a string how to
00:14 - write a number to a file
00:16 - there are many things we can do with
00:18 - file like we can create a file the file
00:19 - you know functions we can create a file
00:21 - we can open a file we can read something
00:23 - from a file we can write something we
00:24 - can append into a file and six modes are
00:27 - there in the previous video i have told
00:29 - you r w a r plus w plus a plus right
00:32 - so and the functions f open function
00:35 - like uh those functions which are you
00:37 - which are used to read and write
00:38 - something to a file like f put c f uh
00:41 - put s f print f f scan f f get c f get s
00:45 - all the functions so in this video we
00:46 - will see
00:48 - one thing one operation that is how to
00:50 - write
00:51 - into a file
00:52 - we will see that program properly here
00:54 - first of all we will see the logic here
00:56 - then i will show you practical also on
00:57 - my laptop right and here we will see
01:00 - three function
01:01 - for writing we use what writing into a
01:04 - file we use f put c f put s f print f
01:08 - all the three function and what is the
01:09 - difference between these you know uh
01:11 - functions all the things we will discuss
01:13 - one by one right but before they just
01:15 - want to tell you one thing if you guys
01:16 - are planning to take gate 2022 exam then
01:20 - i think it's only one month left
01:22 - so it's right time to start your
01:23 - revision and go for test series so here
01:25 - an academy is going to conduct all india
01:28 - mock test series for 2022 aspirants in
01:31 - the month of january every sunday
01:34 - and the best part is you can take this
01:36 - test for free these are full length
01:38 - smoke test so they are going to cover
01:40 - entire slabs and these uh no test has
01:43 - been curated by their best date and esc
01:46 - educators at an academy so here you will
01:48 - get you know exam like sitting
01:50 - experience means you are studying for
01:52 - three hours and you are solving the no
01:54 - questions within that time limit or not
01:56 - so it would be a good practice for you
01:58 - guys
01:58 - and after every test you will get
02:00 - detailed video solutions by their
02:02 - experts so you can identify your weak
02:04 - areas and you can improve according to
02:06 - that
02:07 - and you should take these tests live you
02:08 - will get all india ranking also so you
02:11 - can assess means you can see how you are
02:13 - you know where you are standing among
02:15 - all the learners from all over india
02:17 - plus one more thing an academy is also
02:19 - going to conduct a combat on 2nd of
02:20 - january at 11 am it's a scholarship test
02:23 - for gate and yes parents you can take
02:25 - this test for free and it would be a
02:27 - live test
02:28 - if you take it live here also you will
02:29 - get your old india ranking and also you
02:32 - will you know stand a chance to win up
02:33 - to 100 scholarship plus some exciting
02:36 - prizes also like jbl speaker apple ipad
02:39 - amazon vouchers and much more and you
02:41 - can use my code jkl10 to unlock this
02:44 - combat so all the relevant links and the
02:46 - details i'll put in the description box
02:48 - of this video if you are interested you
02:50 - can go and check out now let's write
02:52 - down a program here i'm not writing the
02:54 - complete program like header file and
02:56 - all that we'll see when we will see the
02:57 - practical i'm just writing down the
02:59 - logic here so first of all see what is
03:01 - the case here
03:04 - this is a hard disk and whenever you
03:06 - execute like you're on a program this is
03:09 - a main memory so some memory would be
03:11 - allocated to that program in ram this is
03:13 - a ram volatile memory right
03:15 - so here suppose i want to write
03:19 - something into a file so two cases can
03:21 - be there first
03:23 - file exist
03:25 - second case is file do not exist don't
03:29 - exist
03:30 - both the case we will discuss right so
03:33 - if suppose file exists and in this
03:35 - already existed file i want to write
03:36 - something so what you need to do first
03:39 - of all we need to create a copy of or we
03:41 - need to load this file into this memory
03:43 - so you can say copy of this file here
03:46 - right and then this is what you can say
03:48 - buffer
03:50 - and we write in this buffer
03:52 - by writing some commands and that after
03:54 - that this would be updated to this file
03:56 - right
03:57 - if file don't exist we don't have any
03:59 - file here so first of all we are going
04:01 - to create a file
04:03 - then we will open this file open means
04:05 - one copy of this file to here in this
04:07 - memory that is what opening a file then
04:09 - we will write into this file and that
04:11 - would be updated here two cases can be
04:13 - they can be there right
04:14 - so both the case we will discuss here
04:17 - now see if you want to write something
04:19 - into a file means you are going to open
04:20 - that file into write mode
04:23 - right
04:23 - now first to access any file
04:27 - right to process something with this
04:29 - file to do something with this file we
04:31 - need a file pointer that we have
04:32 - discussed in the previous video right
04:34 - file type of content so how you will
04:35 - create that pointer in main function i'm
04:38 - writing
04:39 - like f y l e
04:41 - strict
04:42 - fp
04:43 - this is a pointer
04:45 - or you can initialize this pointer with
04:46 - null here
04:48 - right
04:49 - now
04:50 - we have created a file point that means
04:51 - here we have fb
04:54 - right
04:56 - so now
04:57 - this fp is going to point a file type of
05:00 - object
05:03 - in that file type of object we are
05:05 - having the address of this buffer and
05:07 - then we can coordinate with this file
05:09 - this is the process you know excel
05:11 - actual process that we have discussed in
05:12 - previous video right
05:14 - now how to create this file type of
05:16 - pointer and this file type of variable
05:18 - sorry
05:19 - and this fp is going to contain address
05:22 - of this file type of variable so this
05:24 - would be this process would be
05:26 - you know this would be created when we
05:28 - use f open function f open means simple
05:31 - terms we can say just opening a file
05:34 - so
05:34 - here we are writing
05:36 - we are using f open function what is the
05:38 - syntax first you will write down the
05:40 - file name
05:41 - i am writing suppose file name is
05:44 - abc.txt
05:47 - right
05:48 - or any file name you can take here
05:51 - i assume that this file is in the same
05:53 - directory where i'm writing the program
05:55 - right where we have this you know vs
05:58 - code editor so you don't need to specify
06:00 - the complete path i'm just specifying
06:02 - the name of this file if that file is
06:04 - some other location you have to specify
06:06 - the complete path like see then
06:09 - everything the director name and
06:10 - everything and after that the file name
06:11 - the complete path you have to specify
06:13 - right
06:15 - but here i'm specifying only the file
06:16 - name i'm assuming this is a file we have
06:18 - created already this file right
06:21 - now
06:22 - in write mode i want to open
06:26 - so now
06:27 - this will do what it will create this
06:28 - type of object
06:30 - right
06:31 - and it will
06:32 - open this file or you can say this file
06:35 - open means load this file the copy of
06:37 - this file here this is what simply
06:39 - opening a file and it will return the
06:42 - pointer to this file type of variable
06:45 - so where we are going to store that
06:47 - address in this
06:48 - fp this pointer now this fp is pointing
06:51 - to here
06:53 - right
06:55 - now see
06:56 - what is this w mode
06:59 - if file exists
07:01 - if file exist
07:03 - then
07:04 - the content of that file would be erased
07:06 - the previous content
07:08 - and it would be opened here the copy
07:10 - would be opened here whatever you will
07:11 - write that would be
07:13 - written in this file now means it's type
07:15 - of overwritten the previous content
07:17 - would be erased and now you can write
07:19 - down your fresh content if file don't
07:22 - exist then first
07:24 - it will create a file here
07:26 - then
07:27 - it will open that file here means load
07:30 - that copy of that that file into the
07:33 - main memory
07:34 - two cases can be there right for w w
07:37 - mode i hope now you are clear with w
07:39 - mode
07:40 - if file exists the content would be
07:42 - overwritten in it simply open the file
07:44 - if i don't exist first it will create
07:46 - the file then it will open the file
07:48 - right so now
07:50 - abc.txt file it
07:52 - now it has been opened here it is known
07:55 - and you can see we can call it a buffer
07:58 - now
07:59 - i want to write
08:00 - three functions can be there to write
08:02 - something f put c
08:05 - if put s
08:08 - f printf
08:09 - printf means simply when you write
08:11 - something to output screen
08:13 - so f printf means f means file you want
08:15 - to write something to a file
08:18 - same put c write a character to a screen
08:20 - but f put c write a character into a
08:23 - file
08:24 - put s means simply put s
08:27 - write
08:28 - a complete string on output screen right
08:32 - f s means write the string into a file
08:34 - that's it
08:36 - so now
08:37 - if you want to write down a single
08:39 - character we can use f put c
08:42 - suppose i am taking here i am taking a
08:44 - character
08:45 - i am asking from the user or
08:48 - i am simply writing here care
08:50 - ch is equal to simple character a i am
08:52 - taking
08:53 - and i want to write down this character
08:55 - into this abc.txt file
08:58 - so simply what you will do here you will
09:00 - write
09:01 - f put c
09:03 - what is the syntax that function name
09:06 - here simply the character
09:08 - the character is in this variable or you
09:11 - can write down this variable name ch
09:14 - and here what
09:16 - the file pointer name file pointer name
09:18 - is fp
09:19 - right
09:21 - you can only access this file with the
09:23 - help of this file pointer this is very
09:24 - important
09:26 - that's it
09:29 - now at last obviously we are going to
09:31 - close that file f close this is very
09:33 - important f p
09:36 - whenever you execute this thing a would
09:38 - be written to this file
09:40 - right i'll show you that thing also
09:42 - but
09:43 - or simply if you don't want to write
09:44 - down this thing simply you can write
09:46 - down here also a i am writing here
09:47 - directly
09:49 - so it will
09:50 - same it will write a there but single
09:52 - character if you want to write down a
09:53 - single character but a complete string
09:56 - if you want to write down then what you
09:57 - will do see
09:59 - or you can take you can take the
10:02 - input from the user rather than taking
10:04 - directly here simply you can just
10:07 - declare a variable ch
10:10 - and before writing this function here
10:12 - you can write printf enter a character
10:13 - you want to enter into the file
10:16 - scanf percentage c
10:18 - and ch
10:20 - right
10:21 - now you can write down here ch that
10:23 - that's it now if you want to write down
10:24 - a complete string like i am taking care
10:27 - str
10:30 - and i am taking
10:31 - jenny khatri
10:35 - this time i want to write down the
10:37 - string now f put c will only write down
10:40 - a single character
10:42 - so two cases can be there either you can
10:44 - use f put s simply what is the syntax
10:47 - f s
10:49 - here you will write
10:50 - that
10:52 - string like
10:53 - jenny khatri but that that is i am i
10:55 - have stored the string into
10:57 - the name of the variable is str so
10:59 - simply write str
11:00 - comma fp and that's it
11:03 - it will write down this complete string
11:04 - into this abc dot txt file
11:07 - simple or you can write down that string
11:09 - here also in double quotes you can write
11:11 - down here janik three fp that is also
11:14 - fine
11:15 - right
11:16 - if you want to
11:17 - you know use f put c here rather than f
11:20 - put s to write down a complete string
11:22 - then what can be the center what can be
11:24 - the syntax
11:26 - character by character we will write
11:28 - so you are supposed to write down a loop
11:31 - right half you can do that thing
11:34 - suppose i am writing 4 loop i is equal
11:36 - to 0 and i
11:38 - from here to from 0 to
11:41 - up to string length
11:43 - right
11:44 - so how to find out string length strlen
11:47 - function is already there
11:49 - just pass the pass down the name of the
11:52 - string
11:54 - and i plus plus first of all we are
11:56 - going to
11:57 - declare the psi variable also otherwise
11:59 - it will give error now in this loop we
12:01 - can use f put c
12:03 - simple
12:04 - str
12:06 - i
12:07 - and fp
12:10 - that's it
12:11 - this go loop is from i 0 from 0 to up to
12:15 - string length
12:16 - right string length means string length
12:18 - of this would be 1 2 3 4 5 6 7 8 9 10 11
12:22 - 12. 12
12:25 - right
12:26 - in string length this function is not
12:27 - going to you know count that
12:30 - null character
12:32 - now string is nothing but it's like a
12:35 - null terminated character array by
12:37 - default compiler will terminate the
12:39 - string with the null character also
12:42 - right here we have a null character also
12:44 - so the string length is 12 till i
12:47 - becomes 12
12:49 - it is going to you know
12:51 - write down
12:52 - str i means str first of all str0 str 0
12:56 - we are providing the address so at str0
12:59 - we have j
13:00 - so j would be written down
13:03 - the file which is pointed by this fp
13:06 - right and that is abc dot txt so first
13:08 - of all it will write down j then e then
13:10 - double and then y then space and this
13:12 - thing
13:13 - right so using f put c also you can do
13:15 - this thing
13:17 - next why we use now f printf function
13:20 - see
13:21 - a printf function is it is formatted
13:23 - output formatted means this is used to
13:25 - for a string or a character
13:27 - this is used for a mix data type like we
13:31 - can write down number also using f
13:33 - printf string also character also float
13:36 - also
13:37 - just you have to specify the format
13:39 - specifier percentage d percentage f
13:42 - percentages percent is c that is why it
13:44 - is known as formatted output
13:47 - function
13:49 - that's it i hope now you got it so now
13:52 - suppose i want to write down
13:54 - a number also and a string also so
13:57 - string we will take jennifer only and
13:59 - number i'll take suppose int
14:03 - a is equal to 10
14:05 - i'm going to write 10 and janika three
14:07 - there
14:08 - so for that thing we can use f print of
14:10 - a single using a single f printf
14:12 - function we can write down number also
14:14 - string also just to have you have to
14:16 - specify format specifier now what is the
14:18 - syntax here
14:19 - f
14:20 - printf the function name
14:23 - here
14:24 - the file pointer file pointer is fp
14:28 - now format specifier
14:30 - first first suppose i want to write down
14:32 - a number so percentage d
14:35 - then
14:36 - string then percentage s
14:39 - to form specify
14:41 - here you will write down the variable
14:43 - first is for percentage d means number
14:46 - so that the variable name is a
14:48 - here we have this is what integer and
14:50 - now the string str
14:54 - comma
14:54 - str sti means we are passing the address
14:57 - of base address of the string that's it
15:00 - right so it will fetch the string and
15:03 - right into that file
15:05 - so within a single using a single
15:08 - function we can write down both the
15:10 - things and simply f close
15:13 - fp
15:16 - so it will write down 10 plus jenny
15:18 - khatri into that file
15:19 - and it will close that file
15:22 - i hope now you got
15:24 - what is this write mode
15:26 - what does f put c function what is f
15:28 - potence function and what is f printf
15:30 - function and the syntax of everything
15:32 - means now you can write down something
15:34 - into that file a string also a number
15:36 - also a character or a float some if you
15:39 - want to write down float variable that
15:41 - also you can take that float value and
15:42 - here you can just switch by percentage f
15:44 - the variable name
15:46 - if you are not taking
15:48 - means you are not you know taking the
15:49 - compile time initialization at runtime
15:51 - also you can ask from the user using
15:53 - printf and scan and that's it
15:55 - i hope that you can do that variation
15:57 - you can do yourself right this is for
15:59 - your assignment you have to do this
16:01 - thing
16:02 - and one more thing you need to take care
16:04 - like if because of something
16:07 - we are not able to in this f open
16:08 - function is not able to create or open
16:10 - the file which is already exist here
16:12 - right
16:13 - now what would be returned by this
16:16 - function in fp now we are having
16:19 - null right so before writing the logic
16:21 - you can check if
16:23 - f p is equal to equal to
16:26 - null
16:28 - simply you can write down
16:30 - printf
16:32 - no file
16:34 - right or some error is there whatever
16:36 - you want to print you can print that
16:37 - message and here exit
16:42 - means we are going to exit from there
16:44 - only
16:45 - if something is there in fb means
16:47 - the file has successfully been opened so
16:50 - the this fp is having pointer to this
16:52 - and now you can write down this thing so
16:55 - this is also very important so here also
16:57 - fpfp is equal to you can
17:00 - initialize it with null
17:02 - right so you can check this condition
17:04 - also now let me show you practical of
17:06 - this thing so now let me create
17:08 - a new file file
17:12 - write
17:14 - dot c right
17:19 - so now here i am writing
17:23 - in main first of all we are going to
17:25 - create
17:27 - a pointer file
17:29 - fp is equal to i'm initializing it with
17:33 - null
17:34 - right
17:35 - now here what you are i'm doing
17:38 - right
17:39 - i'm taking a character care ch is equal
17:41 - to a single character right i'm taking a
17:45 - right this thing i'll write in into the
17:47 - file so using f open function
17:50 - we are going to open this
17:52 - file
17:53 - f open and here what we will pass
17:56 - the name i am taking abc dot txt
18:00 - right in double quotes you are supposed
18:02 - to write down the name right
18:05 - and in comma i am writing this in w mode
18:07 - that also in double quotes so whatever
18:10 - address f1 function will return where i
18:13 - am going to store that address into
18:15 - file pointer fp
18:17 - right
18:18 - so right now i don't have any abc file
18:21 - on my that you know in that directory on
18:23 - the desktop i have a c program
18:26 - folder and there i store everything you
18:29 - know my programs have been saved c
18:31 - program so here we don't have any abc
18:32 - file you can see here right
18:35 - so if you will open this into write mode
18:37 - then this abc dot t
18:39 - dot txt file will be created first and
18:41 - then open i will show you
18:43 - right now
18:46 - i am going to check if fp is equal to is
18:48 - equal to still it is
18:51 - null
18:52 - then
18:54 - printf
18:56 - error i'm just printing error
18:59 - and
19:00 - exit
19:02 - right
19:04 - so
19:06 - if this is not the case
19:08 - then what i will do f put c
19:12 - and the character is in the variable ch
19:15 - comma
19:15 - where i'll
19:17 - i'll just write the file pointer name
19:19 - and after that
19:21 - f close
19:23 - fb
19:24 - right
19:25 - that's it
19:27 - so now let me run this first of all
19:29 - and i'll show you the file will be
19:30 - created there
19:32 - so let me just run this
19:38 - so for this exit one this ah directory
19:41 - sorry the header file we are supposed to
19:43 - include
19:45 - uh include stdlib
19:49 - dot h
19:50 - right
19:53 - now let me just run this again and this
19:55 - is successfully it has been successfully
19:56 - run and no output is there on the screen
19:59 - why so because the character
20:01 - will be in that file abc dot txt so now
20:03 - let me show you that file abc.txtc
20:07 - in my this c program folder here we have
20:10 - abc.txt file right
20:12 - and let me just open it and here you
20:14 - will find out a
20:16 - on vs code also you can open this file
20:19 - here only you can open this file see
20:21 - i'll show you this file
20:22 - here see abc dot txt let me open this
20:26 - abc dot txt and a
20:28 - successfully we have written the
20:29 - character here right
20:31 - now if put c is clear now rather than a
20:33 - character i am going to write down a
20:35 - string str
20:37 - and here i am taking the string is
20:39 - length is 50 is equal to
20:42 - jenny khadri or rather than taking this
20:46 - from the user
20:48 - i am going to ask right
20:50 - so
20:51 - this is the case here now
20:53 - here i am writing
20:56 - printf
20:59 - enter the
21:00 - string and just
21:03 - using get as function
21:07 - i hope you know how to use gettys
21:08 - function because we have already
21:09 - discussed and
21:11 - str the name of this variable right
21:14 - now
21:15 - how you will write down this complete
21:16 - string using f put c how you will write
21:18 - down we are supposed to write down a for
21:21 - loop here
21:24 - i is equal to because uh
21:26 - f put c will write down only a single
21:28 - character
21:29 - and i
21:30 - not equal to strlen string length
21:34 - string length of str semicolon
21:37 - i plus plus right now before using this
21:41 - we are supposed to declare first this
21:42 - eye before using it right and now rather
21:45 - than the ch now here we are writing str
21:49 - and
21:50 - in bracket we are going to pass i
21:53 - right
21:55 - that's it
21:56 - now let me run this again and see in abc
21:59 - already we have a character a but that
22:01 - would be overwritten now because we are
22:03 - opening in this uh right mode so now let
22:06 - me run this again and see what output
22:08 - you will get here
22:10 - okay this stl you know strlen function
22:13 - is declared in which header file
22:15 - string dot h so better to include
22:18 - that header file also
22:21 - because we are using predefined function
22:24 - right
22:25 - string dot edge
22:29 - now let me run this again now see after
22:31 - running it is asking
22:33 - enter the string so i am going to enter
22:35 - like
22:38 - jenny's
22:39 - lectures
22:41 - right
22:42 - and enter
22:43 - and now let me show you this file abc
22:45 - dot txt here you have you we have you
22:47 - will have jenny's lectures spelling is
22:49 - jay and why it's not a night it's okay
22:52 - but i hope you have got like a
22:55 - is not there now it's overwritten and
22:57 - now we have jenny's lectures right now
23:00 - see rather than f put c you can directly
23:03 - use what
23:04 - i'm just going to comment these lines
23:06 - out and i'm just writing f
23:10 - put s
23:11 - just pass the str the name of that
23:14 - variable you have taken and
23:16 - pointer file pointer and semicolon
23:19 - that's it now it will ask you enter the
23:21 - string let me just run this and see it
23:23 - is asking enter the string at this time
23:25 - i am entering
23:27 - uh i am
23:30 - viral on
23:35 - instagram nowadays
23:37 - i hope you have seen that video so now
23:40 - let me just run this
23:41 - there's nothing on the screen i am viral
23:43 - on instagram that is now in abc dot txt
23:46 - file c
23:47 - and jenny's lecture has been overwritten
23:49 - right that is i know when you are
23:52 - writing in w mode that content would be
23:54 - overwritten right if you want that the
23:56 - previous content is also there and one
23:58 - the next content is also there now new
24:00 - content you want to add so you are
24:02 - supposed to write down this you know
24:03 - supposed to open this uh file into
24:05 - append mode a that also will discuss
24:08 - now
24:08 - this is clear to you now we will use f
24:10 - printf function so here i am writing
24:13 - i am taking
24:14 - one more variable
24:16 - into a
24:17 - is equal to 10 so we will write down the
24:19 - number also and string also right or
24:22 - maybe we can take
24:24 - character rule so character c is equal
24:26 - to
24:27 - s
24:30 - right
24:31 - now enter a string okay rather than f
24:34 - put s
24:36 - we are using here
24:39 - f
24:40 - print f
24:45 - so in printf first we will write down
24:47 - fp
24:48 - then format specifier
24:51 - first suppose i want to write down
24:53 - the
24:54 - numeric value then i'll write down
24:57 - string
24:58 - then
24:59 - percentage c character
25:01 - right that is what is known as formatted
25:03 - output function so now just the name of
25:06 - the variables we have a
25:08 - then correct a string we are having in
25:10 - str variable
25:12 - then comma and ch
25:15 - semicolon
25:18 - that's it and if close we have now let
25:20 - me just run this again
25:23 - nothing would be displayed on the screen
25:24 - just enter a string and
25:27 - i'm right down here i'll write down
25:29 - jenny
25:30 - khatri
25:32 - and now let me just press enter
25:34 - and let me just show you the file abc
25:36 - dot x3 10 jennifer three and s
25:40 - right
25:41 - so i hope now this is clear to you how
25:42 - to write something into a file all the
25:45 - three function f put c f get s f printf
25:47 - and the w mode also right
25:50 - so i hope now this uh right mode and
25:52 - these three functions are clear to you
25:54 - as means how to write something to a
25:55 - file that is clear to you guys now in
25:57 - the next video we'll see how to read
25:58 - something from a file so i'll see in the
26:00 - next video till then bye take care

Cleaned transcript:

so in the series of learning c programming we are discussing file handling in c we have discussed basics about file handling why we need files what is a file what is a file pointer what is f open function right now in this video we will see how to write something to a file means how to write a character how to write a string how to write a number to a file there are many things we can do with file like we can create a file the file you know functions we can create a file we can open a file we can read something from a file we can write something we can append into a file and six modes are there in the previous video i have told you r w a r plus w plus a plus right so and the functions f open function like uh those functions which are you which are used to read and write something to a file like f put c f uh put s f print f f scan f f get c f get s all the functions so in this video we will see one thing one operation that is how to write into a file we will see that program properly here first of all we will see the logic here then i will show you practical also on my laptop right and here we will see three function for writing we use what writing into a file we use f put c f put s f print f all the three function and what is the difference between these you know uh functions all the things we will discuss one by one right but before they just want to tell you one thing if you guys are planning to take gate 2022 exam then i think it's only one month left so it's right time to start your revision and go for test series so here an academy is going to conduct all india mock test series for 2022 aspirants in the month of january every sunday and the best part is you can take this test for free these are full length smoke test so they are going to cover entire slabs and these uh no test has been curated by their best date and esc educators at an academy so here you will get you know exam like sitting experience means you are studying for three hours and you are solving the no questions within that time limit or not so it would be a good practice for you guys and after every test you will get detailed video solutions by their experts so you can identify your weak areas and you can improve according to that and you should take these tests live you will get all india ranking also so you can assess means you can see how you are you know where you are standing among all the learners from all over india plus one more thing an academy is also going to conduct a combat on 2nd of january at 11 am it's a scholarship test for gate and yes parents you can take this test for free and it would be a live test if you take it live here also you will get your old india ranking and also you will you know stand a chance to win up to 100 scholarship plus some exciting prizes also like jbl speaker apple ipad amazon vouchers and much more and you can use my code jkl10 to unlock this combat so all the relevant links and the details i'll put in the description box of this video if you are interested you can go and check out now let's write down a program here i'm not writing the complete program like header file and all that we'll see when we will see the practical i'm just writing down the logic here so first of all see what is the case here this is a hard disk and whenever you execute like you're on a program this is a main memory so some memory would be allocated to that program in ram this is a ram volatile memory right so here suppose i want to write something into a file so two cases can be there first file exist second case is file do not exist don't exist both the case we will discuss right so if suppose file exists and in this already existed file i want to write something so what you need to do first of all we need to create a copy of or we need to load this file into this memory so you can say copy of this file here right and then this is what you can say buffer and we write in this buffer by writing some commands and that after that this would be updated to this file right if file don't exist we don't have any file here so first of all we are going to create a file then we will open this file open means one copy of this file to here in this memory that is what opening a file then we will write into this file and that would be updated here two cases can be they can be there right so both the case we will discuss here now see if you want to write something into a file means you are going to open that file into write mode right now first to access any file right to process something with this file to do something with this file we need a file pointer that we have discussed in the previous video right file type of content so how you will create that pointer in main function i'm writing like f y l e strict fp this is a pointer or you can initialize this pointer with null here right now we have created a file point that means here we have fb right so now this fp is going to point a file type of object in that file type of object we are having the address of this buffer and then we can coordinate with this file this is the process you know excel actual process that we have discussed in previous video right now how to create this file type of pointer and this file type of variable sorry and this fp is going to contain address of this file type of variable so this would be this process would be you know this would be created when we use f open function f open means simple terms we can say just opening a file so here we are writing we are using f open function what is the syntax first you will write down the file name i am writing suppose file name is abc.txt right or any file name you can take here i assume that this file is in the same directory where i'm writing the program right where we have this you know vs code editor so you don't need to specify the complete path i'm just specifying the name of this file if that file is some other location you have to specify the complete path like see then everything the director name and everything and after that the file name the complete path you have to specify right but here i'm specifying only the file name i'm assuming this is a file we have created already this file right now in write mode i want to open so now this will do what it will create this type of object right and it will open this file or you can say this file open means load this file the copy of this file here this is what simply opening a file and it will return the pointer to this file type of variable so where we are going to store that address in this fp this pointer now this fp is pointing to here right now see what is this w mode if file exists if file exist then the content of that file would be erased the previous content and it would be opened here the copy would be opened here whatever you will write that would be written in this file now means it's type of overwritten the previous content would be erased and now you can write down your fresh content if file don't exist then first it will create a file here then it will open that file here means load that copy of that that file into the main memory two cases can be there right for w w mode i hope now you are clear with w mode if file exists the content would be overwritten in it simply open the file if i don't exist first it will create the file then it will open the file right so now abc.txt file it now it has been opened here it is known and you can see we can call it a buffer now i want to write three functions can be there to write something f put c if put s f printf printf means simply when you write something to output screen so f printf means f means file you want to write something to a file same put c write a character to a screen but f put c write a character into a file put s means simply put s write a complete string on output screen right f s means write the string into a file that's it so now if you want to write down a single character we can use f put c suppose i am taking here i am taking a character i am asking from the user or i am simply writing here care ch is equal to simple character a i am taking and i want to write down this character into this abc.txt file so simply what you will do here you will write f put c what is the syntax that function name here simply the character the character is in this variable or you can write down this variable name ch and here what the file pointer name file pointer name is fp right you can only access this file with the help of this file pointer this is very important that's it now at last obviously we are going to close that file f close this is very important f p whenever you execute this thing a would be written to this file right i'll show you that thing also but or simply if you don't want to write down this thing simply you can write down here also a i am writing here directly so it will same it will write a there but single character if you want to write down a single character but a complete string if you want to write down then what you will do see or you can take you can take the input from the user rather than taking directly here simply you can just declare a variable ch and before writing this function here you can write printf enter a character you want to enter into the file scanf percentage c and ch right now you can write down here ch that that's it now if you want to write down a complete string like i am taking care str and i am taking jenny khatri this time i want to write down the string now f put c will only write down a single character so two cases can be there either you can use f put s simply what is the syntax f s here you will write that string like jenny khatri but that that is i am i have stored the string into the name of the variable is str so simply write str comma fp and that's it it will write down this complete string into this abc dot txt file simple or you can write down that string here also in double quotes you can write down here janik three fp that is also fine right if you want to you know use f put c here rather than f put s to write down a complete string then what can be the center what can be the syntax character by character we will write so you are supposed to write down a loop right half you can do that thing suppose i am writing 4 loop i is equal to 0 and i from here to from 0 to up to string length right so how to find out string length strlen function is already there just pass the pass down the name of the string and i plus plus first of all we are going to declare the psi variable also otherwise it will give error now in this loop we can use f put c simple str i and fp that's it this go loop is from i 0 from 0 to up to string length right string length means string length of this would be 1 2 3 4 5 6 7 8 9 10 11 12. 12 right in string length this function is not going to you know count that null character now string is nothing but it's like a null terminated character array by default compiler will terminate the string with the null character also right here we have a null character also so the string length is 12 till i becomes 12 it is going to you know write down str i means str first of all str0 str 0 we are providing the address so at str0 we have j so j would be written down the file which is pointed by this fp right and that is abc dot txt so first of all it will write down j then e then double and then y then space and this thing right so using f put c also you can do this thing next why we use now f printf function see a printf function is it is formatted output formatted means this is used to for a string or a character this is used for a mix data type like we can write down number also using f printf string also character also float also just you have to specify the format specifier percentage d percentage f percentages percent is c that is why it is known as formatted output function that's it i hope now you got it so now suppose i want to write down a number also and a string also so string we will take jennifer only and number i'll take suppose int a is equal to 10 i'm going to write 10 and janika three there so for that thing we can use f print of a single using a single f printf function we can write down number also string also just to have you have to specify format specifier now what is the syntax here f printf the function name here the file pointer file pointer is fp now format specifier first first suppose i want to write down a number so percentage d then string then percentage s to form specify here you will write down the variable first is for percentage d means number so that the variable name is a here we have this is what integer and now the string str comma str sti means we are passing the address of base address of the string that's it right so it will fetch the string and right into that file so within a single using a single function we can write down both the things and simply f close fp so it will write down 10 plus jenny khatri into that file and it will close that file i hope now you got what is this write mode what does f put c function what is f potence function and what is f printf function and the syntax of everything means now you can write down something into that file a string also a number also a character or a float some if you want to write down float variable that also you can take that float value and here you can just switch by percentage f the variable name if you are not taking means you are not you know taking the compile time initialization at runtime also you can ask from the user using printf and scan and that's it i hope that you can do that variation you can do yourself right this is for your assignment you have to do this thing and one more thing you need to take care like if because of something we are not able to in this f open function is not able to create or open the file which is already exist here right now what would be returned by this function in fp now we are having null right so before writing the logic you can check if f p is equal to equal to null simply you can write down printf no file right or some error is there whatever you want to print you can print that message and here exit means we are going to exit from there only if something is there in fb means the file has successfully been opened so the this fp is having pointer to this and now you can write down this thing so this is also very important so here also fpfp is equal to you can initialize it with null right so you can check this condition also now let me show you practical of this thing so now let me create a new file file write dot c right so now here i am writing in main first of all we are going to create a pointer file fp is equal to i'm initializing it with null right now here what you are i'm doing right i'm taking a character care ch is equal to a single character right i'm taking a right this thing i'll write in into the file so using f open function we are going to open this file f open and here what we will pass the name i am taking abc dot txt right in double quotes you are supposed to write down the name right and in comma i am writing this in w mode that also in double quotes so whatever address f1 function will return where i am going to store that address into file pointer fp right so right now i don't have any abc file on my that you know in that directory on the desktop i have a c program folder and there i store everything you know my programs have been saved c program so here we don't have any abc file you can see here right so if you will open this into write mode then this abc dot t dot txt file will be created first and then open i will show you right now i am going to check if fp is equal to is equal to still it is null then printf error i'm just printing error and exit right so if this is not the case then what i will do f put c and the character is in the variable ch comma where i'll i'll just write the file pointer name and after that f close fb right that's it so now let me run this first of all and i'll show you the file will be created there so let me just run this so for this exit one this ah directory sorry the header file we are supposed to include uh include stdlib dot h right now let me just run this again and this is successfully it has been successfully run and no output is there on the screen why so because the character will be in that file abc dot txt so now let me show you that file abc.txtc in my this c program folder here we have abc.txt file right and let me just open it and here you will find out a on vs code also you can open this file here only you can open this file see i'll show you this file here see abc dot txt let me open this abc dot txt and a successfully we have written the character here right now if put c is clear now rather than a character i am going to write down a string str and here i am taking the string is length is 50 is equal to jenny khadri or rather than taking this from the user i am going to ask right so this is the case here now here i am writing printf enter the string and just using get as function i hope you know how to use gettys function because we have already discussed and str the name of this variable right now how you will write down this complete string using f put c how you will write down we are supposed to write down a for loop here i is equal to because uh f put c will write down only a single character and i not equal to strlen string length string length of str semicolon i plus plus right now before using this we are supposed to declare first this eye before using it right and now rather than the ch now here we are writing str and in bracket we are going to pass i right that's it now let me run this again and see in abc already we have a character a but that would be overwritten now because we are opening in this uh right mode so now let me run this again and see what output you will get here okay this stl you know strlen function is declared in which header file string dot h so better to include that header file also because we are using predefined function right string dot edge now let me run this again now see after running it is asking enter the string so i am going to enter like jenny's lectures right and enter and now let me show you this file abc dot txt here you have you we have you will have jenny's lectures spelling is jay and why it's not a night it's okay but i hope you have got like a is not there now it's overwritten and now we have jenny's lectures right now see rather than f put c you can directly use what i'm just going to comment these lines out and i'm just writing f put s just pass the str the name of that variable you have taken and pointer file pointer and semicolon that's it now it will ask you enter the string let me just run this and see it is asking enter the string at this time i am entering uh i am viral on instagram nowadays i hope you have seen that video so now let me just run this there's nothing on the screen i am viral on instagram that is now in abc dot txt file c and jenny's lecture has been overwritten right that is i know when you are writing in w mode that content would be overwritten right if you want that the previous content is also there and one the next content is also there now new content you want to add so you are supposed to write down this you know supposed to open this uh file into append mode a that also will discuss now this is clear to you now we will use f printf function so here i am writing i am taking one more variable into a is equal to 10 so we will write down the number also and string also right or maybe we can take character rule so character c is equal to s right now enter a string okay rather than f put s we are using here f print f so in printf first we will write down fp then format specifier first suppose i want to write down the numeric value then i'll write down string then percentage c character right that is what is known as formatted output function so now just the name of the variables we have a then correct a string we are having in str variable then comma and ch semicolon that's it and if close we have now let me just run this again nothing would be displayed on the screen just enter a string and i'm right down here i'll write down jenny khatri and now let me just press enter and let me just show you the file abc dot x3 10 jennifer three and s right so i hope now this is clear to you how to write something into a file all the three function f put c f get s f printf and the w mode also right so i hope now this uh right mode and these three functions are clear to you as means how to write something to a file that is clear to you guys now in the next video we'll see how to read something from a file so i'll see in the next video till then bye take care
