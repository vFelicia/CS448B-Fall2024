With timestamps:

00:00 - hey everyone I hope you all are safe and
00:02 - doing good so in the series of learning
00:03 - Python programming language we are
00:04 - discussing object-oriented programming
00:06 - in python in the previous video we have
00:08 - seen like what is in class what is an
00:10 - object how to create a class how to
00:12 - create an object why do we need classes
00:14 - this thing we have discussed right
00:17 - but we haven't like we have created our
00:20 - own class but we haven't added any
00:23 - attributes or methods in that class so
00:27 - that thing we'll be discussing in this
00:28 - video
00:29 - how to add attributes what is that init
00:32 - method underscore underscore N8
00:34 - underscore underscore and in bracket a
00:37 - self keyword is passed as a parameter
00:39 - right so what is that method what is
00:41 - basically the fund of Constructor
00:43 - right how to initialize objects while
00:46 - creating those objects of a class so
00:49 - these things will be discussing in this
00:50 - video right but before that this one
00:53 - will tell you something it is especially
00:54 - important for gate and ASE as parents an
00:58 - academy is back with combat and this
01:00 - time it is ultra combat Yes you heard it
01:02 - right now you have a chance to get up to
01:05 - 90 scholarship and many rewards such as
01:09 - MacBook Dell laptop Samsung Mobile and
01:13 - many more and this Ultra combat for gate
01:16 - and escs parents would be on would be
01:19 - conducted on 23rd of July and the timing
01:22 - is 11 am
01:24 - and what how many question you will get
01:26 - the pattern is 40 mcqs you will get and
01:29 - the time limit would be 120 Minutes
01:31 - right and what is the syllabus the
01:34 - syllabus will be General aptitude
01:37 - engineering mathematics and Technical
01:39 - and the most important thing is you can
01:42 - enroll for this Ultra combat for free
01:44 - you don't need to pay anything no
01:46 - registration fee nothing no charges
01:48 - right so the link for you know
01:51 - registration to enroll in this Ultra
01:53 - combat would be in the description box
01:54 - of this video for all the branches
01:56 - mechanical civil CS electrical right and
01:59 - you can use my code jkl10 to enroll for
02:02 - free in this combat right so all the
02:04 - relevant links and information you will
02:06 - find in the description box of this
02:08 - video you can go and check out okay now
02:10 - let's see this was the class we have
02:12 - created in the previous lecture the
02:14 - class instructor and we have done
02:16 - nothing here no attribute nothing else
02:18 - just pass and we have created one object
02:20 - and if you find out the type of this
02:23 - object then it will give you instructor
02:25 - right just forget about this and
02:27 - response for main underscore that also
02:29 - will I'll tell you in later videos so
02:31 - the classes this instructor so class
02:34 - means basically it's a user defined data
02:36 - type
02:36 - that it has a blueprint to create object
02:39 - okay now how to add attributes see if in
02:44 - instructor obviously the instructor is
02:46 - having some name or ID or information
02:47 - the main information so one way is
02:51 - instructor one
02:54 - instructor one
02:55 - dot name I am assigning like maybe
03:00 - pile
03:01 - right you cannot simply write down here
03:04 - just name is equal to Pi
03:06 - that would be simple a variable but now
03:09 - this name is an attribute of this
03:11 - instructor
03:12 - this instructor is an object that is why
03:14 - we are writing instructor dot name this
03:17 - name is now attached with this
03:18 - instructor with this object right so
03:21 - that is why this is now attribute one
03:23 - more thing if you want to check like
03:25 - instructor
03:27 - Dot
03:28 - address is equal to
03:32 - Delhi
03:34 - right and if you want to fetch if you
03:36 - want to print this information then how
03:38 - you can press simply we cannot write
03:39 - down like print name
03:41 - let's run this and what see what you
03:43 - will get
03:44 - name is not defined
03:47 - because name is
03:50 - its name is what instructor one dot name
03:53 - it's not just simply name a variable no
03:56 - it's now an attribute of this object so
03:58 - you must write here instructor 1 dot
04:02 - name this is the syntax right if you
04:05 - assign value to an object like this and
04:07 - if you want to fetch the value so
04:08 - instructor one dot name this time it
04:10 - will give pi
04:11 - right
04:12 - like this if like I have a YouTube
04:14 - channel I want to hire now 10 instructor
04:16 - to teach different different subjects
04:19 - and like the attribute of this
04:22 - instructor these instructor would be
04:23 - many attribute I want to store like name
04:25 - address and like maybe ID and phone
04:30 - number has camera has laptop has books
04:34 - these are simple attributes
04:36 - so for one instructor I want to store
04:37 - every information so same you can
04:40 - instructor one note name this instructor
04:41 - OneNote address instructor one dot ID
04:43 - instructor one dot phone number
04:44 - instructor one dot has camera and like
04:46 - this you can write down these lines
04:48 - and like this if I want to create one
04:52 - more instructor
04:53 - so in that case what will happen
04:56 - instructor 2 is equal to this same
04:59 - method now instructor two dot name and
05:01 - instructor two dot address and if I want
05:04 - to print instructor two dot name that is
05:06 - also fine it will print pile and
05:09 - okay there is some error here
05:17 - like this so it will give let's just
05:20 - rename this otherwise it will give same
05:23 - name so like Jenny
05:25 - so it will give pile and jelly
05:27 - like two name like this if you want to
05:30 - store information of 10 instructor then
05:33 - definitely it
05:34 - is not easy because we are it's so
05:37 - hectic so many number of lines
05:39 - right and maybe like name here I'm
05:42 - writing name here I'm writing username
05:44 - over here I'm writing address or simply
05:46 - instructor address maybe I can write
05:48 - here instructor address
05:50 - so the name of these attributes
05:52 - would be maybe different
05:54 - for each object for each object for each
05:57 - instructor right so it would be not easy
05:59 - to manage the information like this
06:02 - right and definitely now what is the use
06:04 - of class if we are writing this kind of
06:06 - thing that we can do with the help of
06:09 - simple variables we can create different
06:11 - variables for each instructor of each
06:13 - thing right
06:14 - now for this
06:17 - okay now class comes into picture
06:20 - now here
06:22 - we have for this thing we use the you
06:25 - can say the concept of Constructor if
06:27 - you are from C plus background if then
06:30 - you must have heard about Constructor
06:31 - right if not it's okay I'll tell you
06:34 - here
06:35 - so basically the task of an Constructor
06:38 - is to initialize
06:40 - the data members to assign values to the
06:43 - data members of a class
06:45 - when
06:47 - an object is created
06:49 - so Constructor will basically allow us
06:52 - to specify what would happen when we
06:54 - create this object when we create an
06:57 - object what would happen
06:58 - with the help of Constructor we can do
07:00 - this thing we can initialize
07:03 - the attributes the members of the class
07:05 - while creating we don't have to write
07:07 - down like instructor one dot name one
07:09 - dot address and we have to initialize
07:10 - separately no
07:12 - right so here we have a special function
07:19 - that is Def
07:20 - and
07:22 - this
07:23 - init function so see it is not just a
07:26 - simple function
07:27 - because it is special one because it is
07:29 - having underscore underscore init
07:31 - underscore underscore then in bracket
07:32 - also we have like cell it's
07:34 - automatically I haven't written C cell
07:37 - for like this
07:38 - if you write down this thing simply i n
07:41 - i then see you will got this thing self
07:44 - it's predefined predefined right so it's
07:48 - a special method
07:50 - and python interpreter no it is a
07:53 - special method and what it will do
07:54 - python intermittent python interpreter
07:57 - no knows about this method very well
07:59 - right
08:01 - now self is a key word why we are
08:03 - passing this self that also I'll tell
08:05 - you so in C plus plus we are having
08:07 - Constructor to initialize object in
08:09 - Python we are having this method init
08:11 - method to initialize the object
08:14 - to initialize the data members of a
08:17 - class while creating an object
08:20 - right
08:21 - so same as Constructor it is doing the
08:24 - same task
08:25 - okay now see
08:27 - and one more thing this init function
08:29 - would be called every time you create
08:32 - an object
08:34 - right so see if you want to check out
08:37 - this thing you can write down something
08:38 - like this print
08:42 - creating a new object I'm not writing
08:44 - anything I'm just printing here creating
08:46 - a new object and let's run this
08:48 - see first creating a new object because
08:51 - here
08:53 - we are
08:55 - creating an object so creating a new
08:57 - object then pile it will print file
08:59 - right then again creating a new object
09:01 - and Jenny it will print so two time
09:03 - this this would be printed so two time
09:06 - you have called this init function right
09:08 - this function has been called so this
09:12 - one object we have created another
09:13 - object we have created so every time you
09:15 - create an object of a class this init
09:16 - function would be called every time
09:18 - right and it is used to like initialize
09:21 - the attributes of that particular object
09:24 - right
09:25 - so the self is indicating it is
09:29 - referring the actual object on which
09:31 - right now we are calling this function
09:33 - on which this function has been called
09:34 - right now so if this function has been
09:37 - called right now on this object
09:38 - instructor 1 so the self is instructor
09:41 - one
09:42 - if next time this init function has been
09:45 - called during this line instructor 2 is
09:48 - equal to instructor so now at this point
09:50 - of time the selfish instructor 2 so it
09:53 - is referring to the actual object
09:56 - right so when we are calling this then
09:59 - it will initialize the instructor 1
10:01 - object attribute this time at this point
10:06 - of time it will initialize instructor to
10:08 - object attribute so I hope now you got
10:10 - why we are using this self keyboard here
10:13 - right if you are still not getting it's
10:16 - okay we'll do some practice here so I
10:19 - want to like
10:22 - pass name and address so like two
10:25 - parameter we can pass name
10:28 - and
10:30 - address any name you can take right
10:33 - and let's just remove the slime
10:36 - right
10:37 - now how to initialize the attribute of
10:40 - the instructor only two attribute I am
10:42 - taking name and address that's it so you
10:44 - have to write down the self keyword cell
10:46 - Dot
10:48 - the name of the attribute what you want
10:50 - the name of that review so I want name
10:53 - is equal to
10:56 - this is not compulsory that this name
10:58 - this parameter name and this should be
11:01 - same it may be different right so the
11:04 - self name is equal to whatever argument
11:06 - you will pass and that we will fetch
11:08 - here in this parameter name name so you
11:11 - have to write down here this name
11:14 - right see the color this name and this
11:16 - name is having same color but this name
11:18 - is having different color so here the
11:20 - attribute name you can take any things I
11:22 - can take here like
11:24 - instructor underscore name that is also
11:27 - fine
11:28 - Constructor and Square address but I am
11:30 - taking here name that's it
11:34 - so
11:35 - self dot second attribute name I am
11:38 - taking just address is equal to
11:42 - this address
11:43 - let's just take here
11:51 - let's
11:52 - rename this instructor underscore name
11:54 - the parameter name so here you need to
11:56 - pass
11:57 - instructor underscore name now you got
12:00 - the difference
12:02 - this parameter name and this name should
12:04 - be same and this attribute name you can
12:06 - take
12:07 - any name right it should not be
12:10 - same with this parameter name right
12:13 - okay now you don't need to assign the
12:16 - value initialize the object attribute
12:19 - like this what we can do just remove
12:22 - these two lines and
12:24 - while creating the object obviously this
12:26 - init function would be called so now it
12:28 - is expecting to pass these two parameter
12:31 - name and address so here only I can pass
12:33 - like Jenny and in address I am passing
12:37 - like
12:39 - Maybe gurgaon
12:40 - right
12:42 - and let's just comment out these lines
12:45 - for instructor 2 and let's just print
12:46 - instructor one dot name let's run this
12:49 - and it will print the name
12:56 - right so obviously it will reduce the
12:59 - number of lines of code right
13:01 - now for instructor to same
13:05 - so instructor 2 and instructor see now
13:07 - if I don't pass anything here and let's
13:09 - run this
13:12 - so you are getting an error
13:14 - see
13:17 - in line number 10 in line number 10 in
13:20 - this line in this line
13:22 - while you are creating this object then
13:25 - this init missing two required
13:29 - positional argument instructor name and
13:31 - address right
13:32 - so obviously this function would be
13:34 - called init method would be called while
13:36 - you are creating the object and you need
13:37 - to pass these two parameter not three
13:40 - maybe you think self is also there but
13:43 - self is just a keyword to bind the
13:46 - actual object
13:48 - with the values right so by default self
13:51 - at this time would be instructor 2 and
13:53 - by default self at this time would be
13:56 - instructor one so you don't need to pass
13:58 - the value for self it is just a keyword
14:01 - right so self is like basically just a
14:05 - keyword to bind
14:07 - it will bind the
14:10 - objects attributes to the argument
14:13 - received right
14:16 - obviously now you need to pass two
14:18 - argument here so I am passing like pile
14:20 - and address is like
14:23 - Delhi now this is fine you will not get
14:26 - any error now you can face this
14:27 - information right like this if you want
14:29 - to create 10 instructor then definitely
14:31 - now it would be easy and less number of
14:34 - less lines of code
14:36 - right
14:37 - so this is the use of the class and this
14:39 - init method I think it is clear to you
14:42 - guys what is this in it what is the self
14:44 - and all right now
14:46 - if you want to pass like by default
14:49 - let's take one example uh I want to pass
14:52 - the Instagram follower of each
14:54 - instructor maybe the instructor doesn't
14:56 - are not on Instagram right most of the
14:59 - teachers are not on Instagram so they
15:00 - are having zero zero zero followers
15:02 - right so that information is not
15:04 - mandatory right obviously everyone is
15:07 - having name everyone is having some
15:08 - specific address so that for sure but
15:11 - it's not compulsive that everyone is on
15:13 - Instagram and having some follower
15:14 - account right so if I pass here this is
15:18 - the case if I pass here like
15:22 - Instagram underscore
15:26 - if I pass a parameter Instagram
15:27 - underscore follower so maybe Jenny is
15:30 - not like on Instagram so you need to
15:32 - pass here zero and for pile also maybe
15:34 - you need to pass zero so maybe 10
15:36 - instructor for every instructor the
15:39 - count is zero so why you are passing
15:41 - zero zero it's just a waste of you can
15:45 - save time
15:46 - and they're not no logic to pass zero
15:48 - zero zero so what we can what we can do
15:50 - rather than
15:51 - making this
15:53 - in compulsory argument to pass we can
15:56 - set default value of this parameter cell
15:59 - Dot
16:02 - followers is equal to 0.
16:05 - and now see it's not like that if I am
16:08 - on Instagram and I have some followers
16:09 - so right now every object will be having
16:12 - zero follower of this class all the
16:15 - objects right but we can modify this
16:17 - this attribute specifically for any
16:20 - object like for Jenny if I want to
16:21 - modify then I can modify that is also
16:24 - fine that also will see
16:25 - right but for now you have to be clear
16:28 - this thing like you can pass default
16:31 - value also for any attribute now for
16:34 - every if I want to print like print and
16:38 - instructor one dot
16:40 - followers
16:41 - now it will print a zero
16:43 - see Jenny and zero because by default
16:47 - the follower count for each object of
16:50 - this class would be zero because we have
16:52 - set a default value right
16:55 - now I hope you got the idea like how to
16:57 - add attributes how to initialize the
17:00 - attributes of an object what is the you
17:02 - know use of this init function what is
17:05 - this self keyword like this
17:07 - so now one assignment for you is okay
17:09 - this is the class and all now you have
17:12 - to create two more instructor right
17:15 - passing the name and address and you
17:18 - have to print the information name as
17:20 - well as address for each instructor for
17:22 - the two instructor right
17:25 - so now that's it for this video in the
17:27 - next video we'll see how to add methods
17:30 - these are just attributes we haven't
17:32 - added still methods what the instructor
17:35 - will do we have just added what he or
17:37 - she has not what he or she does right so
17:41 - that thing we'll see in the next video
17:42 - so thanks for the next video then bye
17:43 - thank you

Cleaned transcript:

hey everyone I hope you all are safe and doing good so in the series of learning Python programming language we are discussing objectoriented programming in python in the previous video we have seen like what is in class what is an object how to create a class how to create an object why do we need classes this thing we have discussed right but we haven't like we have created our own class but we haven't added any attributes or methods in that class so that thing we'll be discussing in this video how to add attributes what is that init method underscore underscore N8 underscore underscore and in bracket a self keyword is passed as a parameter right so what is that method what is basically the fund of Constructor right how to initialize objects while creating those objects of a class so these things will be discussing in this video right but before that this one will tell you something it is especially important for gate and ASE as parents an academy is back with combat and this time it is ultra combat Yes you heard it right now you have a chance to get up to 90 scholarship and many rewards such as MacBook Dell laptop Samsung Mobile and many more and this Ultra combat for gate and escs parents would be on would be conducted on 23rd of July and the timing is 11 am and what how many question you will get the pattern is 40 mcqs you will get and the time limit would be 120 Minutes right and what is the syllabus the syllabus will be General aptitude engineering mathematics and Technical and the most important thing is you can enroll for this Ultra combat for free you don't need to pay anything no registration fee nothing no charges right so the link for you know registration to enroll in this Ultra combat would be in the description box of this video for all the branches mechanical civil CS electrical right and you can use my code jkl10 to enroll for free in this combat right so all the relevant links and information you will find in the description box of this video you can go and check out okay now let's see this was the class we have created in the previous lecture the class instructor and we have done nothing here no attribute nothing else just pass and we have created one object and if you find out the type of this object then it will give you instructor right just forget about this and response for main underscore that also will I'll tell you in later videos so the classes this instructor so class means basically it's a user defined data type that it has a blueprint to create object okay now how to add attributes see if in instructor obviously the instructor is having some name or ID or information the main information so one way is instructor one instructor one dot name I am assigning like maybe pile right you cannot simply write down here just name is equal to Pi that would be simple a variable but now this name is an attribute of this instructor this instructor is an object that is why we are writing instructor dot name this name is now attached with this instructor with this object right so that is why this is now attribute one more thing if you want to check like instructor Dot address is equal to Delhi right and if you want to fetch if you want to print this information then how you can press simply we cannot write down like print name let's run this and what see what you will get name is not defined because name is its name is what instructor one dot name it's not just simply name a variable no it's now an attribute of this object so you must write here instructor 1 dot name this is the syntax right if you assign value to an object like this and if you want to fetch the value so instructor one dot name this time it will give pi right like this if like I have a YouTube channel I want to hire now 10 instructor to teach different different subjects and like the attribute of this instructor these instructor would be many attribute I want to store like name address and like maybe ID and phone number has camera has laptop has books these are simple attributes so for one instructor I want to store every information so same you can instructor one note name this instructor OneNote address instructor one dot ID instructor one dot phone number instructor one dot has camera and like this you can write down these lines and like this if I want to create one more instructor so in that case what will happen instructor 2 is equal to this same method now instructor two dot name and instructor two dot address and if I want to print instructor two dot name that is also fine it will print pile and okay there is some error here like this so it will give let's just rename this otherwise it will give same name so like Jenny so it will give pile and jelly like two name like this if you want to store information of 10 instructor then definitely it is not easy because we are it's so hectic so many number of lines right and maybe like name here I'm writing name here I'm writing username over here I'm writing address or simply instructor address maybe I can write here instructor address so the name of these attributes would be maybe different for each object for each object for each instructor right so it would be not easy to manage the information like this right and definitely now what is the use of class if we are writing this kind of thing that we can do with the help of simple variables we can create different variables for each instructor of each thing right now for this okay now class comes into picture now here we have for this thing we use the you can say the concept of Constructor if you are from C plus background if then you must have heard about Constructor right if not it's okay I'll tell you here so basically the task of an Constructor is to initialize the data members to assign values to the data members of a class when an object is created so Constructor will basically allow us to specify what would happen when we create this object when we create an object what would happen with the help of Constructor we can do this thing we can initialize the attributes the members of the class while creating we don't have to write down like instructor one dot name one dot address and we have to initialize separately no right so here we have a special function that is Def and this init function so see it is not just a simple function because it is special one because it is having underscore underscore init underscore underscore then in bracket also we have like cell it's automatically I haven't written C cell for like this if you write down this thing simply i n i then see you will got this thing self it's predefined predefined right so it's a special method and python interpreter no it is a special method and what it will do python intermittent python interpreter no knows about this method very well right now self is a key word why we are passing this self that also I'll tell you so in C plus plus we are having Constructor to initialize object in Python we are having this method init method to initialize the object to initialize the data members of a class while creating an object right so same as Constructor it is doing the same task okay now see and one more thing this init function would be called every time you create an object right so see if you want to check out this thing you can write down something like this print creating a new object I'm not writing anything I'm just printing here creating a new object and let's run this see first creating a new object because here we are creating an object so creating a new object then pile it will print file right then again creating a new object and Jenny it will print so two time this this would be printed so two time you have called this init function right this function has been called so this one object we have created another object we have created so every time you create an object of a class this init function would be called every time right and it is used to like initialize the attributes of that particular object right so the self is indicating it is referring the actual object on which right now we are calling this function on which this function has been called right now so if this function has been called right now on this object instructor 1 so the self is instructor one if next time this init function has been called during this line instructor 2 is equal to instructor so now at this point of time the selfish instructor 2 so it is referring to the actual object right so when we are calling this then it will initialize the instructor 1 object attribute this time at this point of time it will initialize instructor to object attribute so I hope now you got why we are using this self keyboard here right if you are still not getting it's okay we'll do some practice here so I want to like pass name and address so like two parameter we can pass name and address any name you can take right and let's just remove the slime right now how to initialize the attribute of the instructor only two attribute I am taking name and address that's it so you have to write down the self keyword cell Dot the name of the attribute what you want the name of that review so I want name is equal to this is not compulsory that this name this parameter name and this should be same it may be different right so the self name is equal to whatever argument you will pass and that we will fetch here in this parameter name name so you have to write down here this name right see the color this name and this name is having same color but this name is having different color so here the attribute name you can take any things I can take here like instructor underscore name that is also fine Constructor and Square address but I am taking here name that's it so self dot second attribute name I am taking just address is equal to this address let's just take here let's rename this instructor underscore name the parameter name so here you need to pass instructor underscore name now you got the difference this parameter name and this name should be same and this attribute name you can take any name right it should not be same with this parameter name right okay now you don't need to assign the value initialize the object attribute like this what we can do just remove these two lines and while creating the object obviously this init function would be called so now it is expecting to pass these two parameter name and address so here only I can pass like Jenny and in address I am passing like Maybe gurgaon right and let's just comment out these lines for instructor 2 and let's just print instructor one dot name let's run this and it will print the name right so obviously it will reduce the number of lines of code right now for instructor to same so instructor 2 and instructor see now if I don't pass anything here and let's run this so you are getting an error see in line number 10 in line number 10 in this line in this line while you are creating this object then this init missing two required positional argument instructor name and address right so obviously this function would be called init method would be called while you are creating the object and you need to pass these two parameter not three maybe you think self is also there but self is just a keyword to bind the actual object with the values right so by default self at this time would be instructor 2 and by default self at this time would be instructor one so you don't need to pass the value for self it is just a keyword right so self is like basically just a keyword to bind it will bind the objects attributes to the argument received right obviously now you need to pass two argument here so I am passing like pile and address is like Delhi now this is fine you will not get any error now you can face this information right like this if you want to create 10 instructor then definitely now it would be easy and less number of less lines of code right so this is the use of the class and this init method I think it is clear to you guys what is this in it what is the self and all right now if you want to pass like by default let's take one example uh I want to pass the Instagram follower of each instructor maybe the instructor doesn't are not on Instagram right most of the teachers are not on Instagram so they are having zero zero zero followers right so that information is not mandatory right obviously everyone is having name everyone is having some specific address so that for sure but it's not compulsive that everyone is on Instagram and having some follower account right so if I pass here this is the case if I pass here like Instagram underscore if I pass a parameter Instagram underscore follower so maybe Jenny is not like on Instagram so you need to pass here zero and for pile also maybe you need to pass zero so maybe 10 instructor for every instructor the count is zero so why you are passing zero zero it's just a waste of you can save time and they're not no logic to pass zero zero zero so what we can what we can do rather than making this in compulsory argument to pass we can set default value of this parameter cell Dot followers is equal to 0. and now see it's not like that if I am on Instagram and I have some followers so right now every object will be having zero follower of this class all the objects right but we can modify this this attribute specifically for any object like for Jenny if I want to modify then I can modify that is also fine that also will see right but for now you have to be clear this thing like you can pass default value also for any attribute now for every if I want to print like print and instructor one dot followers now it will print a zero see Jenny and zero because by default the follower count for each object of this class would be zero because we have set a default value right now I hope you got the idea like how to add attributes how to initialize the attributes of an object what is the you know use of this init function what is this self keyword like this so now one assignment for you is okay this is the class and all now you have to create two more instructor right passing the name and address and you have to print the information name as well as address for each instructor for the two instructor right so now that's it for this video in the next video we'll see how to add methods these are just attributes we haven't added still methods what the instructor will do we have just added what he or she has not what he or she does right so that thing we'll see in the next video so thanks for the next video then bye thank you
