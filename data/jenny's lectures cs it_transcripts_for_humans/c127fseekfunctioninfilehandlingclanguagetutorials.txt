With timestamps:

00:00 - so in the series of learning c
00:01 - programming we are discussing file
00:03 - handling in c we have discussed all the
00:04 - file opening modes like read write
00:06 - append r plus w plus a plus mode now we
00:08 - are left with some special function in c
00:11 - uh special function in file handling
00:13 - that is fc rewind f10 so in this video
00:15 - we'll talk about fc function so these
00:17 - function play a very important role in
00:19 - random access of a phi
00:21 - right so this will see about fc function
00:24 - what is this function why we use this
00:26 - function how to use this function in
00:28 - your program
00:29 - at everything every single detail about
00:31 - this function will see in this video
00:33 - with the help of a program i'll show you
00:35 - practical also
00:36 - right now before that just want to ask
00:38 - one thing how many of you are appearing
00:41 - for gate 2020 to exam i'm sure it is
00:44 - most of you guys so that is why i am
00:46 - here with some interesting and very
00:48 - important news for you guys
00:50 - geeks for geeks has introduced a gate
00:53 - cso india mode 3 which is a simulation
00:56 - of the actual examination format as we
00:59 - always say practice is the key so
01:02 - appearing for this mo will definitely
01:04 - boost up your confidence and definitely
01:06 - it will help you in improving your weak
01:09 - points this test consists of complete
01:11 - syllabus and the question pattern of
01:13 - gate 2022
01:15 - it is going to have mcqs msqs and net
01:18 - numerical type of questions it will help
01:20 - you to understand your strong points and
01:22 - your weakness so that you know
01:23 - accordingly you can prepare for your
01:25 - gate exam and you will get familiar with
01:27 - the examination pattern and mode and
01:29 - most importantly you can take the smoke
01:31 - test free of post it will be on 29th of
01:33 - january and it will be live for 24 hours
01:37 - for more information and instruction you
01:39 - can go to the link which i'll put in the
01:40 - description box of this video so to take
01:42 - this examination what you have to do you
01:44 - just have to register the registration
01:46 - link i'll put in the description box of
01:47 - this video you can go and check out now
01:50 - let us see what is fc function
01:53 - see suppose we have a file abc dot txt
01:56 - and in this file i have
01:58 - suppose this i have in my file so now fc
02:01 - function is going to move why we use
02:04 - this function
02:05 - to move the cursor the file pointer to a
02:08 - specific position
02:10 - right now what does that mean suppose i
02:13 - want to read from this file i want to
02:15 - read only this khatri is awesome not jen
02:19 - but when you open this file in read mode
02:21 - the cursor would be in the beginning
02:24 - but i i don't want to read this jenny i
02:26 - want to read from here so first of all
02:28 - you are supposed to move the cursor from
02:30 - here to here
02:32 - and then
02:34 - till end of the file you can read you
02:35 - can write down the logic when you can
02:37 - write down the while loop so for moving
02:39 - this cursor from here to here which
02:40 - function we will use
02:42 - fc
02:44 - right means we are moving the cursor to
02:46 - a specific position
02:48 - right
02:49 - like rewind function is used to move the
02:51 - cursor from end to
02:53 - beginning or maybe the cursor is from
02:56 - cursor is here
02:57 - so if you use rewind function that would
02:59 - be moved from here to here from any
03:01 - position to beginning rewind is used for
03:03 - that that also will discuss with the
03:05 - program but fc is to move the cursor to
03:07 - a specific position right now suppose
03:10 - cursor is here
03:11 - and now i move to
03:13 - i want to move this cursor from here to
03:15 - here
03:16 - from here to here so now cursor is not
03:19 - in the beginning cursor is to a specific
03:21 - position
03:22 - so from here also you can move the
03:24 - cursor to this position
03:26 - or maybe from the end also you can
03:28 - cursor is here and you want to move the
03:30 - cursor from here to here so that also
03:32 - you can do right
03:34 - everything we will discuss with the help
03:36 - of fc you can do all these things right
03:39 - and you can update also suppose rather
03:41 - than jenny khatri or some faculty rather
03:43 - than khatri here i want to write like
03:45 - jenny uh
03:47 - lamba
03:49 - that also you can do
03:50 - right you can update this file with the
03:52 - help of fc function right
03:54 - just you you are supposed to take care
03:56 - of the opening mode in which mode you
03:57 - are opening this file right everything
03:59 - you can do so
04:00 - main thing is to move the cursor to a
04:02 - specific position we use fc function
04:05 - right now what is the syntax of writing
04:07 - this function just write down fc
04:09 - three argument it will take first would
04:11 - be file
04:12 - pointer right
04:16 - next would be
04:17 - offset
04:19 - and next would be position
04:22 - or origin
04:25 - anything you can say three uh arguments
04:28 - are there so obviously file pointer the
04:29 - data type is
04:31 - file
04:32 - for offset the data type is long end and
04:35 - for position the data type is hint and
04:37 - the rear type of this function the
04:39 - return type is end
04:42 - it will return 0
04:44 - if successful successfully it has
04:45 - updated the file pointer otherwise it
04:47 - will return a non-zero value right now
04:49 - file pointer obviously which file
04:51 - pointer is pointing to this file that
04:53 - you will write here offset means how
04:56 - many bytes you want to move
04:59 - that that cursor how many bytes you want
05:01 - to move right from the particular
05:03 - position suppose from here i want to
05:05 - move to khatri so how many one two three
05:08 - four five six space is also
05:11 - so six would be offset
05:13 - that is what offset how many bytes you
05:15 - want to move forward or backward if you
05:17 - want to move forward then positive value
05:19 - you will write if you want to move
05:21 - backward then you will write a negative
05:23 - value
05:24 - right
05:25 - position means
05:27 - from which position you want to add the
05:30 - offset
05:31 - means you want to move the cursor from
05:33 - the beginning or from a particular
05:35 - position or from end from which position
05:38 - you want to move you want to skip the
05:40 - content right so this position is going
05:43 - to have three values like
05:46 - seek underscore set these are predefined
05:49 - function right this is already defined
05:51 - in stdio.h
05:54 - you are supposed to include this file
05:56 - seek set it means
05:58 - the position is beginning of the file
06:04 - seek underscore c u r means
06:07 - current position
06:09 - of the file pointer current position of
06:11 - file pointer from the current position
06:12 - of file pointer i want to move maybe
06:14 - backward or forward this means from the
06:16 - beginning i want to move
06:18 - right from the beginning obviously we
06:19 - will move
06:20 - forward and if you want to move from the
06:23 - end seek
06:25 - end
06:26 - underscore end means end of the file
06:28 - from the end of the file position is end
06:30 - of the file and from end of the file i
06:32 - want to move from here
06:34 - to backward you can move right so how
06:36 - you will use these three you know
06:38 - position here and how you will write how
06:40 - to use this fc function in your program
06:43 - i'll show you this with the help of a
06:44 - program right
06:49 - so just obviously we are supposed to
06:51 - declare a file pointer first
06:54 - i am declaring this with null and i am
06:56 - going to open this
06:58 - f open
07:00 - and
07:01 - the name of the file is abc dot txt and
07:03 - i'm opening this in read mode
07:06 - simple
07:07 - because my main motto is to you know
07:10 - help you to understand what is fc
07:11 - function you can try out this fc
07:13 - function with any mode r w a r plus w
07:17 - plus a plus
07:18 - but you know in every mode it is going
07:20 - to show some different result so that
07:23 - you need to try yourself right once you
07:25 - get what is fc function you can do this
07:27 - these variations you can do know these
07:29 - kind of you know things with this fc
07:31 - function you can try out different
07:32 - different with different different modes
07:33 - but i am opening right now in this read
07:36 - mode only read mode right
07:38 - so just you you are supposed to check
07:39 - first if this f p is equal to is equal
07:42 - to null means simply you can print
07:46 - cannot open file
07:50 - and exit
07:52 - that's it otherwise
07:55 - if you are opening this in read mode
07:56 - then the cursor would be from here in
07:58 - the beginning
07:59 - all right now index would be this one 0
08:02 - then 1 then 2 then 3 4 5 6 7 8 9 like
08:06 - this space is also having an index
08:09 - right
08:11 - what you will do
08:13 - if suppose
08:14 - from khatri from here i want to read
08:16 - khatri is awesome i don't want to read
08:19 - jenny only khatri is awesome so first
08:21 - i'll move this cursor from here to here
08:24 - to sixth position
08:26 - right so what you will write
08:28 - f c
08:30 - file pointer is fp i am taking
08:33 - offset what you will write six how many
08:36 - one two three four five six six byte you
08:39 - want to skip and here you want to move
08:42 - so offset would be six
08:44 - this we are going to add c i will show
08:46 - you and the
08:48 - position is
08:50 - c underscore from starting seek
08:51 - underscore set this is for starting
08:54 - right
08:56 - means in this position i want to add
08:58 - this one so current position is this one
09:00 - that is 0 0 plus i want to add 6
09:03 - is equal to 6 so now cursor would be at
09:06 - this position at sixth index here
09:08 - and at sixth index i have k
09:11 - so suppose a single character if i want
09:13 - to read here
09:15 - using f get c
09:17 - and
09:18 - f p and simply i am going to print
09:20 - printf percentage c
09:23 - ch
09:25 - before using this cs i i yes i am
09:27 - supposed to declare this so what it will
09:29 - print
09:30 - k
09:32 - because now using f seek we have moved
09:34 - the cursor to this position and now k
09:36 - would be printed
09:38 - now i hope you got this
09:39 - right if you want to modify this
09:41 - obviously if you want to write something
09:44 - to this position then you you are
09:46 - supposed to open this in
09:48 - maybe w mode or r plus mode or w plus
09:50 - mode right
09:52 - that also you are supposed to try but
09:54 - that thing will give different different
09:55 - results right
09:57 - now see
09:58 - after using f get c
10:01 - now it is printing k and now the cursor
10:03 - is moved to here now file pointer is
10:05 - here at seventh index like at h
10:09 - so now if suppose you want to move this
10:12 - three position backward i want to print
10:14 - y one character why
10:17 - right so how you can move simply you can
10:19 - write down f seek
10:22 - fp
10:23 - and
10:24 - now backward means minus you will write
10:26 - minus 3
10:27 - and
10:28 - here you will write fc
10:30 - underscore cur from the current position
10:33 - i want to move not from beginning now
10:34 - from the current position so for that we
10:36 - have
10:37 - c dot c 1 and now if you will print f
10:40 - get c
10:43 - c h is equal to
10:45 - and if you in print f simply you will
10:47 - write percentage c c h
10:49 - what it will print
10:52 - after using f get c the cursor moved to
10:54 - here
10:54 - now minus 3 minus 3 means now you can
10:57 - say you can write down like this at
10:59 - seventh index we have
11:01 - h
11:01 - minus
11:02 - three this offset you are supposed to
11:04 - add in this position minus three means
11:06 - minus three
11:08 - plus if you will do plus minus three
11:10 - obviously that will be minus three seven
11:11 - minus three is equal to four now at
11:12 - fourth position we have y so it would
11:15 - print y
11:18 - i hope now you got this
11:20 - after printing this y now obviously
11:22 - cursor would be moved to the next
11:24 - position here at the space now cursor is
11:26 - here at fifth index right
11:29 - now from the end suppose i want to print
11:31 - like this oh i want to print
11:34 - from the end from here also you can move
11:37 - from the current position also from the
11:39 - beginning also you can move enough but i
11:41 - want to know write down the third
11:43 - variant that is
11:44 - f
11:46 - seek
11:46 - fp minus 3
11:49 - and
11:51 - seek underscore end
11:54 - and suppose here you right if you write
11:56 - this thing c h is equal to f get c and
11:58 - you will print character then minus
12:00 - three means from here minus three one
12:02 - two three
12:03 - minus three so o would be printed so it
12:05 - will print o if you will do is use here
12:08 - f get c ch
12:10 - and you will print that ch then it will
12:12 - print o
12:14 - right
12:16 - so if you want to move the cursor to a
12:18 - specific position you can use fc these
12:20 - are the three variant you can use
12:23 - using set using see you are using end
12:25 - this is a simple example of just i'm
12:27 - opening the file in read mode
12:29 - right now after moving this cursor here
12:32 - you can update this also
12:35 - right
12:37 - suppose if you are opening this file in
12:38 - r plus mode that is also for reading and
12:40 - writing
12:42 - so you can do that thing
12:43 - but if you write w plus more
12:47 - means
12:48 - the previous content would be erased
12:52 - so here it would create some problem
12:54 - right obviously
12:56 - if you are moving this cursor from
12:59 - to the sixth offset and you are printing
13:01 - nothing would be printed because once
13:03 - you open this and w plus more the
13:04 - previous content would be erased so what
13:06 - it will print nothing but in r plus mode
13:09 - it can print because previous content
13:10 - would be as it is
13:12 - right
13:13 - so this you need to take care and
13:15 - obviously you are familiar with these
13:17 - modes
13:18 - so according to that you can modify your
13:20 - program
13:21 - right if you want me to upload any video
13:24 - on a specific mode like you supposed to
13:26 - use fc function in r plus mode or w plus
13:28 - mode or a plus mode then you can tell me
13:30 - in command dose i'll make a complete
13:32 - video and i'll show you that with help
13:33 - of a program now let me show you
13:36 - practical of this program
13:38 - so let's create a new file
13:44 - fc dot c
13:45 - right and i'm just going to copy this
13:48 - this content
13:50 - because this would be same
13:53 - right
13:57 - so it will save our time
13:59 - right
14:00 - now abc don't take time i'm opening this
14:03 - in read mode only right and in abc dot
14:05 - txt suppose i have
14:08 - jenny
14:10 - kathryn is
14:14 - or some fake ld right
14:29 - now enough i left out c now what
14:32 - we will see first of all i am going to
14:36 - move the cursor right fc fb and offset i
14:40 - am taking 6 only and position i am
14:42 - taking what
14:44 - fc underscore
14:46 - set means from the starting from the
14:48 - beginning i want to
14:49 - move so if you want to read the complete
14:53 - file
14:54 - from the sixth offset to complete then
14:56 - you can just write down a while loop
14:57 - that i hope you can do but let us
15:00 - suppose i am just reading
15:02 - a single character
15:04 - just to you know clear the function of
15:06 - this fc
15:08 - i'm reading a single character right the
15:10 - position
15:11 - so
15:13 - sorry this you will write and i am just
15:15 - printing this
15:24 - and before using this obviously ch w we
15:27 - have declared and
15:30 - then
15:31 - f close
15:37 - fp
15:39 - that's it
15:40 - right
15:42 - so what it will print see let me just
15:44 - run this and show you the output
15:49 - see it is printing k
15:51 - right
15:52 - it is printing k 6 offset 6 position
15:55 - from beginning it is going to 6
15:56 - character 6 byte is it is going to skip
15:58 - and after that it will print that is k
16:00 - it is going to print right
16:02 - now suppose uh if
16:06 - after that i'm writing this same i'm
16:09 - going to copy
16:11 - right
16:13 - and now i'm writing minus 3
16:16 - minus 3 3
16:18 - step backward 3 bite backward i want to
16:20 - move the cursor from the current
16:22 - position right so seek underscore c u r
16:26 - current right and now
16:28 - just print the character what it will
16:31 - print it will print k as well as y see
16:34 - it is printing ky let me just uh know
16:37 - format this with the slash
16:40 - and now let me run this
16:41 - see first is k then it is printing y
16:45 - first is k then three step backward
16:48 - and it will print
16:49 - y why it is printing why
16:52 - because after f get c function the
16:55 - cursor is
16:57 - at which alphabet h
17:00 - i have described this in the video and
17:02 - now three position backward means it is
17:03 - printing y right now
17:06 - let me just use the third variant also
17:09 - that
17:12 - minus three from end
17:15 - from e
17:16 - and d from end position
17:18 - right
17:19 - so
17:20 - now what it will print
17:22 - first it is printing it will print k
17:24 - then y then l
17:26 - see l it is printing
17:28 - right
17:29 - let me just show you the file from the
17:31 - end minus 3 means 1 2 3 that is l it is
17:36 - printing so now i hope the basic
17:38 - function of this
17:39 - f c is clear to you
17:41 - with this read mode right if you are
17:43 - going to add something right suppose i
17:46 - am opening this file in
17:48 - let me show our plus mode it is worth
17:50 - for reading and writing right and it is
17:53 - not going to erase the previous content
17:55 - so that would be as it is so now
17:58 - suppose i am writing at sixth position
18:02 - after moving this
18:07 - let me just comment everything out
18:10 - and after moving to sixth position
18:15 - f put s i am i know
18:20 - at sixth position i want to update that
18:22 - thing whatever is written with high
18:24 - so
18:25 - comma
18:26 - f p semicolon control s
18:30 - right
18:31 - that's it so it is not going to print
18:33 - anything on the screen it will print the
18:35 - that file also in that file right now i
18:37 - have jenny khatri is also faculty now
18:38 - after running this program
18:41 - what would be the content of this file
18:42 - let me just show you
18:44 - see on the screen it is not going to
18:45 - print anything because i am not
18:47 - reading anything from the file so see it
18:49 - is printing jenny then
18:52 - h i
18:54 - kh has been replaced by the character h
18:57 - i then everything would be same
19:00 - so if you want to update a specific
19:03 - that file from a specific position just
19:05 - move the cursor to that position just
19:07 - open the file in r plus mode and then
19:10 - move the position to the specific
19:11 - position from where you know at which
19:13 - you want to update the content and then
19:15 - you can write down so now hi
19:17 - would be written at which offset sixth
19:21 - after six
19:22 - two uh character it will add hi hi
19:26 - i hope now you got this this is how you
19:27 - can update the file also but if you will
19:30 - open this file in wplus mode
19:32 - then
19:32 - the previous content would be erased
19:34 - then how it is going to
19:35 - move the cursor
19:37 - right
19:38 - so that you can do yourself
19:42 - right
19:43 - that is assignment for you guys if you
19:44 - open the file in wplusmodo wmod if you
19:46 - open the file in a mod append mode or a
19:48 - plus mode then what it will do that is
19:51 - your assignment you have to practice
19:52 - that thing so i hope now this is clear
19:54 - to you so i hope the main motive of this
19:57 - fc function is clear to you guys and
20:00 - don't forget to register for the gate
20:02 - all india mock test the link would be in
20:04 - the description box so now i'll see in
20:05 - the next video till then bye bye take
20:07 - care

Cleaned transcript:

so in the series of learning c programming we are discussing file handling in c we have discussed all the file opening modes like read write append r plus w plus a plus mode now we are left with some special function in c uh special function in file handling that is fc rewind f10 so in this video we'll talk about fc function so these function play a very important role in random access of a phi right so this will see about fc function what is this function why we use this function how to use this function in your program at everything every single detail about this function will see in this video with the help of a program i'll show you practical also right now before that just want to ask one thing how many of you are appearing for gate 2020 to exam i'm sure it is most of you guys so that is why i am here with some interesting and very important news for you guys geeks for geeks has introduced a gate cso india mode 3 which is a simulation of the actual examination format as we always say practice is the key so appearing for this mo will definitely boost up your confidence and definitely it will help you in improving your weak points this test consists of complete syllabus and the question pattern of gate 2022 it is going to have mcqs msqs and net numerical type of questions it will help you to understand your strong points and your weakness so that you know accordingly you can prepare for your gate exam and you will get familiar with the examination pattern and mode and most importantly you can take the smoke test free of post it will be on 29th of january and it will be live for 24 hours for more information and instruction you can go to the link which i'll put in the description box of this video so to take this examination what you have to do you just have to register the registration link i'll put in the description box of this video you can go and check out now let us see what is fc function see suppose we have a file abc dot txt and in this file i have suppose this i have in my file so now fc function is going to move why we use this function to move the cursor the file pointer to a specific position right now what does that mean suppose i want to read from this file i want to read only this khatri is awesome not jen but when you open this file in read mode the cursor would be in the beginning but i i don't want to read this jenny i want to read from here so first of all you are supposed to move the cursor from here to here and then till end of the file you can read you can write down the logic when you can write down the while loop so for moving this cursor from here to here which function we will use fc right means we are moving the cursor to a specific position right like rewind function is used to move the cursor from end to beginning or maybe the cursor is from cursor is here so if you use rewind function that would be moved from here to here from any position to beginning rewind is used for that that also will discuss with the program but fc is to move the cursor to a specific position right now suppose cursor is here and now i move to i want to move this cursor from here to here from here to here so now cursor is not in the beginning cursor is to a specific position so from here also you can move the cursor to this position or maybe from the end also you can cursor is here and you want to move the cursor from here to here so that also you can do right everything we will discuss with the help of fc you can do all these things right and you can update also suppose rather than jenny khatri or some faculty rather than khatri here i want to write like jenny uh lamba that also you can do right you can update this file with the help of fc function right just you you are supposed to take care of the opening mode in which mode you are opening this file right everything you can do so main thing is to move the cursor to a specific position we use fc function right now what is the syntax of writing this function just write down fc three argument it will take first would be file pointer right next would be offset and next would be position or origin anything you can say three uh arguments are there so obviously file pointer the data type is file for offset the data type is long end and for position the data type is hint and the rear type of this function the return type is end it will return 0 if successful successfully it has updated the file pointer otherwise it will return a nonzero value right now file pointer obviously which file pointer is pointing to this file that you will write here offset means how many bytes you want to move that that cursor how many bytes you want to move right from the particular position suppose from here i want to move to khatri so how many one two three four five six space is also so six would be offset that is what offset how many bytes you want to move forward or backward if you want to move forward then positive value you will write if you want to move backward then you will write a negative value right position means from which position you want to add the offset means you want to move the cursor from the beginning or from a particular position or from end from which position you want to move you want to skip the content right so this position is going to have three values like seek underscore set these are predefined function right this is already defined in stdio.h you are supposed to include this file seek set it means the position is beginning of the file seek underscore c u r means current position of the file pointer current position of file pointer from the current position of file pointer i want to move maybe backward or forward this means from the beginning i want to move right from the beginning obviously we will move forward and if you want to move from the end seek end underscore end means end of the file from the end of the file position is end of the file and from end of the file i want to move from here to backward you can move right so how you will use these three you know position here and how you will write how to use this fc function in your program i'll show you this with the help of a program right so just obviously we are supposed to declare a file pointer first i am declaring this with null and i am going to open this f open and the name of the file is abc dot txt and i'm opening this in read mode simple because my main motto is to you know help you to understand what is fc function you can try out this fc function with any mode r w a r plus w plus a plus but you know in every mode it is going to show some different result so that you need to try yourself right once you get what is fc function you can do this these variations you can do know these kind of you know things with this fc function you can try out different different with different different modes but i am opening right now in this read mode only read mode right so just you you are supposed to check first if this f p is equal to is equal to null means simply you can print cannot open file and exit that's it otherwise if you are opening this in read mode then the cursor would be from here in the beginning all right now index would be this one 0 then 1 then 2 then 3 4 5 6 7 8 9 like this space is also having an index right what you will do if suppose from khatri from here i want to read khatri is awesome i don't want to read jenny only khatri is awesome so first i'll move this cursor from here to here to sixth position right so what you will write f c file pointer is fp i am taking offset what you will write six how many one two three four five six six byte you want to skip and here you want to move so offset would be six this we are going to add c i will show you and the position is c underscore from starting seek underscore set this is for starting right means in this position i want to add this one so current position is this one that is 0 0 plus i want to add 6 is equal to 6 so now cursor would be at this position at sixth index here and at sixth index i have k so suppose a single character if i want to read here using f get c and f p and simply i am going to print printf percentage c ch before using this cs i i yes i am supposed to declare this so what it will print k because now using f seek we have moved the cursor to this position and now k would be printed now i hope you got this right if you want to modify this obviously if you want to write something to this position then you you are supposed to open this in maybe w mode or r plus mode or w plus mode right that also you are supposed to try but that thing will give different different results right now see after using f get c now it is printing k and now the cursor is moved to here now file pointer is here at seventh index like at h so now if suppose you want to move this three position backward i want to print y one character why right so how you can move simply you can write down f seek fp and now backward means minus you will write minus 3 and here you will write fc underscore cur from the current position i want to move not from beginning now from the current position so for that we have c dot c 1 and now if you will print f get c c h is equal to and if you in print f simply you will write percentage c c h what it will print after using f get c the cursor moved to here now minus 3 minus 3 means now you can say you can write down like this at seventh index we have h minus three this offset you are supposed to add in this position minus three means minus three plus if you will do plus minus three obviously that will be minus three seven minus three is equal to four now at fourth position we have y so it would print y i hope now you got this after printing this y now obviously cursor would be moved to the next position here at the space now cursor is here at fifth index right now from the end suppose i want to print like this oh i want to print from the end from here also you can move from the current position also from the beginning also you can move enough but i want to know write down the third variant that is f seek fp minus 3 and seek underscore end and suppose here you right if you write this thing c h is equal to f get c and you will print character then minus three means from here minus three one two three minus three so o would be printed so it will print o if you will do is use here f get c ch and you will print that ch then it will print o right so if you want to move the cursor to a specific position you can use fc these are the three variant you can use using set using see you are using end this is a simple example of just i'm opening the file in read mode right now after moving this cursor here you can update this also right suppose if you are opening this file in r plus mode that is also for reading and writing so you can do that thing but if you write w plus more means the previous content would be erased so here it would create some problem right obviously if you are moving this cursor from to the sixth offset and you are printing nothing would be printed because once you open this and w plus more the previous content would be erased so what it will print nothing but in r plus mode it can print because previous content would be as it is right so this you need to take care and obviously you are familiar with these modes so according to that you can modify your program right if you want me to upload any video on a specific mode like you supposed to use fc function in r plus mode or w plus mode or a plus mode then you can tell me in command dose i'll make a complete video and i'll show you that with help of a program now let me show you practical of this program so let's create a new file fc dot c right and i'm just going to copy this this content because this would be same right so it will save our time right now abc don't take time i'm opening this in read mode only right and in abc dot txt suppose i have jenny kathryn is or some fake ld right now enough i left out c now what we will see first of all i am going to move the cursor right fc fb and offset i am taking 6 only and position i am taking what fc underscore set means from the starting from the beginning i want to move so if you want to read the complete file from the sixth offset to complete then you can just write down a while loop that i hope you can do but let us suppose i am just reading a single character just to you know clear the function of this fc i'm reading a single character right the position so sorry this you will write and i am just printing this and before using this obviously ch w we have declared and then f close fp that's it right so what it will print see let me just run this and show you the output see it is printing k right it is printing k 6 offset 6 position from beginning it is going to 6 character 6 byte is it is going to skip and after that it will print that is k it is going to print right now suppose uh if after that i'm writing this same i'm going to copy right and now i'm writing minus 3 minus 3 3 step backward 3 bite backward i want to move the cursor from the current position right so seek underscore c u r current right and now just print the character what it will print it will print k as well as y see it is printing ky let me just uh know format this with the slash and now let me run this see first is k then it is printing y first is k then three step backward and it will print y why it is printing why because after f get c function the cursor is at which alphabet h i have described this in the video and now three position backward means it is printing y right now let me just use the third variant also that minus three from end from e and d from end position right so now what it will print first it is printing it will print k then y then l see l it is printing right let me just show you the file from the end minus 3 means 1 2 3 that is l it is printing so now i hope the basic function of this f c is clear to you with this read mode right if you are going to add something right suppose i am opening this file in let me show our plus mode it is worth for reading and writing right and it is not going to erase the previous content so that would be as it is so now suppose i am writing at sixth position after moving this let me just comment everything out and after moving to sixth position f put s i am i know at sixth position i want to update that thing whatever is written with high so comma f p semicolon control s right that's it so it is not going to print anything on the screen it will print the that file also in that file right now i have jenny khatri is also faculty now after running this program what would be the content of this file let me just show you see on the screen it is not going to print anything because i am not reading anything from the file so see it is printing jenny then h i kh has been replaced by the character h i then everything would be same so if you want to update a specific that file from a specific position just move the cursor to that position just open the file in r plus mode and then move the position to the specific position from where you know at which you want to update the content and then you can write down so now hi would be written at which offset sixth after six two uh character it will add hi hi i hope now you got this this is how you can update the file also but if you will open this file in wplus mode then the previous content would be erased then how it is going to move the cursor right so that you can do yourself right that is assignment for you guys if you open the file in wplusmodo wmod if you open the file in a mod append mode or a plus mode then what it will do that is your assignment you have to practice that thing so i hope now this is clear to you so i hope the main motive of this fc function is clear to you guys and don't forget to register for the gate all india mock test the link would be in the description box so now i'll see in the next video till then bye bye take care
