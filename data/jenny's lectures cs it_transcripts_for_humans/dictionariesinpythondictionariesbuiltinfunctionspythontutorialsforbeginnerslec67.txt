With timestamps:

00:00 - hey everyone I hope you all are safe and
00:02 - doing good so in the series of learning
00:03 - path and programming language in the
00:05 - previous video we have done one project
00:06 - Caesar Cipher right so now in this video
00:09 - what we will discuss what are
00:11 - dictionaries in Python
00:13 - see in Python we are basically having
00:15 - four built-in data type to store
00:17 - collection of data list set and uh Tuple
00:21 - and dictionary so we have discussed till
00:23 - now list set and Tapas the fourth one
00:26 - which is remaining is dictionary so this
00:28 - thing we'll be discussing in this video
00:29 - everything about Dictionary what is
00:31 - dictionary why we need dictionary when
00:33 - we need a dictionary to store collection
00:34 - right and how this is different from
00:37 - other uh built-in data type that are
00:39 - used to store collection like list Tuple
00:41 - and set the difference
00:43 - and some built-in functions what we can
00:45 - perform on dictionary how we can you
00:47 - know Define a dictionary everything
00:49 - we'll be discussing in this video in
00:51 - detail with the help of program
00:52 - practically also I'll show but before
00:55 - that when I tell something important to
00:57 - those who are interested to make their
00:58 - career as a full stack software
00:59 - developer who are still confused about
01:01 - their career like in which field they
01:03 - should go okay let me just show you
01:04 - something first there is a salary
01:06 - calculator the link I'll put in the
01:07 - description box of this video of the
01:09 - salary calculator once you click on that
01:10 - link this type of page would be opened
01:12 - and you just have to fill your name your
01:15 - educational and professional details
01:16 - highest qualification year of
01:17 - registration work experience job role
01:19 - you are doing for preferable location
01:21 - work location mail ID phone number and
01:23 - you just have to submit and then it will
01:24 - show you how much you could earn per
01:26 - annum this is just a estimate according
01:29 - to your given answer so if you are
01:31 - interested in full sex software
01:32 - development then Odin school is
01:33 - conducting a six month full stack
01:36 - software development board game and this
01:37 - boot camp is perfect for anyone who
01:39 - wants to access industry Airline
01:40 - education at a reasonable price as you
01:42 - can see the data did the next cohort
01:45 - will be started from 24th of June the
01:47 - free detail you can see as well as you
01:49 - will get a scholarship up to rupees 30
01:51 - 000. and there is a early bird offer
01:54 - in which you will get 10 000 additional
01:57 - discount and no post Emi option is also
01:59 - available that's not it it comes with
02:01 - two one placement records and 360 degree
02:04 - placement assistance don't just go with
02:05 - my words you can check out their success
02:07 - stories you can check out on their
02:08 - website many success stories you will
02:09 - get of their students because they are
02:12 - having 500 plus hiring Partners like
02:14 - Google TCS Infosys capgemini Deloitte
02:17 - many more top tech companies so if you
02:19 - want to get start your career in full
02:21 - stack software development feel join out
02:23 - in school today how to apply for this
02:24 - boot camp you can just click on the link
02:27 - that I'll put in the description of the
02:28 - description box of this video Once you
02:30 - click in this type of page will be open
02:31 - you just have to fill out this detail
02:33 - the basic detail and you can request a
02:34 - callback now coding school teammate is
02:37 - going to call you back within one or two
02:38 - days whatever doubt you have you can ask
02:40 - your doubt clear your doubts and then
02:41 - pay the fee and then enroll in the
02:44 - course so all the relevant links and
02:46 - details you'll find in the description
02:47 - box of this video you can even check out
02:48 - now let's see okay let's take a real
02:51 - example like in our home also we are
02:54 - having dictionary if you don't know
02:55 - meaning of anything we just used to
02:57 - search that meaning of that word in
02:59 - dictionary okay nowadays we just search
03:02 - on Google the meaning of that word but
03:04 - we used to have dictionaries once right
03:08 - now if suppose you want to search
03:10 - meaning of beautiful so we will search
03:12 - like from index like from where the
03:15 - letters of B would be started then B
03:18 - then b e then ultimately we'll search
03:20 - where is this that beautiful after
03:22 - finding that word beautiful we will see
03:25 - the meaning of that beautiful
03:26 - that word
03:28 - right like this so
03:31 - how the the this data is to be stored in
03:34 - dictionary like first
03:37 - beautiful and then meaning meaning of
03:40 - this
03:41 - right means
03:43 - in a form of key and value
03:45 - this is key
03:47 - and this is value
03:50 - another word like
03:54 - awesome
03:56 - this is key and here we have meaning of
03:58 - that word like this if suppose you want
04:01 - to search
04:02 - in a dictionary you want to search for
04:03 - number of any one so we'll search first
04:06 - like the name Jenny okay Jenny and then
04:09 - we will get the phone number ultimately
04:10 - we will receive the phone number so here
04:13 - Jenny is the key and phone number is the
04:15 - value of Jenny so key and value pair in
04:19 - real life we used to deal with these
04:22 - type of data Arrangements every day
04:25 - right now this type of data Arrangements
04:28 - we can also
04:30 - imitate in programming language in
04:32 - Python
04:34 - in the in program if we use to store
04:37 - this type of data arrangement in a key
04:39 - and value pair then we have something
04:42 - and name is same that is dictionary we
04:45 - have a data structure or we can say a
04:46 - built-in data type we have to store
04:48 - collection of data that is dictionary
04:50 - see in a list what do we store something
04:52 - like this like one two three or like
04:56 - string also we can store out any float
04:59 - value we can store something like this
05:00 - list of
05:01 - items in a set also something like this
05:05 - any set of items and tuples also but
05:09 - in form of pair if you want to store the
05:13 - key and value pair for that particular
05:15 - thing we are having dictionary like I'm
05:17 - going to store roll number of student
05:19 - and then name of that student like Jenny
05:23 - dolomer of the student then if we write
05:26 - down in resistor maybe something like
05:27 - this we can write 1 and dash or one
05:30 - equal to or one column something like
05:32 - this we write but here we have a proper
05:35 - syntax that also I will tell you in
05:37 - programming to suppose Ram three
05:41 - anyone right so here also we are having
05:44 - key and value pair
05:46 - if you want to find out name of any
05:48 - student just if you know the roll number
05:49 - just look for the roll number of that
05:51 - student and you will get the name of
05:53 - that story roll number two what is the
05:54 - name just look after in your resistor
05:56 - what is the where is the roll number two
05:58 - and then you will get the name so this
06:00 - is key this is value
06:02 - right suppose in a Company employee ID
06:05 - and employee name
06:07 - or maybe employee name and salary of
06:10 - that employee like this type of data
06:12 - Arrangement if you need
06:13 - then we use this type of built area type
06:17 - that is dictionary in Python right so it
06:20 - is used to store collection of data in
06:23 - the form of key value pair
06:26 - key value pairs I hope you got what is
06:29 - dictionary and what is simple you know
06:30 - definition or meaning of dictionary and
06:33 - why we used which kind of data if you
06:35 - want to store and see this is very
06:38 - helpful why so I have already told you
06:40 - because using dictionaries we can
06:44 - imitate or you know that real world data
06:48 - arrangement in programming
06:51 - where each key is associated with a
06:53 - particular value
06:54 - right
06:55 - that type of thing that type of scenario
06:58 - data arrangement we can imitate or we
07:02 - can copy or we can as it is do
07:04 - in programming with the help of this
07:06 - data type right so what is the syntax
07:08 - how to store
07:09 - just if you want to create a dictionary
07:11 - name of that dictionary
07:14 - any name
07:15 - equal to in these braces
07:20 - curly braces
07:22 - key
07:24 - colon value the syntax is very important
07:27 - first of all key then column then value
07:30 - this is General syntax so
07:34 - if I want to store like phone number
07:38 - of my friends
07:40 - so dictionary name I'm taking foreign
07:42 - underscore number and here
07:45 - key key means
07:48 - suppose obviously phone number if I want
07:51 - to store then first I'll write name then
07:52 - phone number so name is what am I
07:55 - writing name Ram so Ram is what a string
07:58 - so
08:02 - then colon
08:04 - then one two three four something like
08:07 - this
08:09 - phone number
08:11 - more than one entry is also allowed just
08:14 - you have to do
08:15 - comma and whatever you want to store
08:17 - suppose next is sham
08:21 - three four five six
08:24 - comma Mohan
08:28 - one one one one any phone number
08:32 - so in this dictionary we are having
08:35 - three key and value pair Ram this Shaman
08:39 - for Mohan
08:41 - no this is how you can create a
08:45 - dictionary if you want to access then
08:47 - simply we just like print and
08:51 - phone number
08:54 - you will get this thing but there are
08:56 - alternative ways also to create a
08:58 - dictionary
08:59 - one method is this the simplest one we
09:02 - have a dick method using that also we
09:04 - can create a dictionary
09:05 - we can now we can access individual item
09:09 - also in a list if you want to access
09:11 - list or Tuple we use
09:13 - index
09:15 - indexing method we use if we have a list
09:18 - then here we write down list name and
09:22 - then these bracket index 0 1 2 3 4
09:25 - corresponding to that index you will get
09:27 - the value but here
09:29 - we are having
09:31 - how to access using keys we are having
09:33 - keys so if suppose I want to find out
09:36 - roll number of sham so what you will
09:39 - look for first of all the name of name
09:41 - of that particular person so I look for
09:43 - the name that is sham the key and
09:46 - corresponding to that I will get the
09:48 - phone number so using keys we can access
09:51 - individual items or the values from the
09:53 - dictionary how I'll show you practically
09:55 - I will show you now everything
09:57 - okay
09:58 - what are the properties of this
10:00 - dictionary that also I will show you
10:02 - when we will do some practical right
10:05 - like for list and certain Tuple we are
10:07 - having
10:08 - properties so for dictionary also we are
10:11 - having some properties first one
10:12 - dictionaries are ordered
10:18 - but
10:20 - since 3.7 was
10:23 - dictionaries are ordered
10:25 - in 3.6 version and before that in
10:28 - earlier version dictionaries are
10:30 - unordered means ordered means na you
10:34 - have defined a particular order now you
10:35 - cannot change that order if I will print
10:38 - that dictionary so in the same order
10:40 - these items would be printed first Ram
10:42 - this value then sham then Mohan
10:45 - it's not like that I have defined this
10:47 - something like this and whenever
10:48 - whenever I print then first it will give
10:51 - me Mohan then sham then Ram or maybe no
10:56 - whatever order is this in same order it
10:59 - will print means dictionaries are
11:01 - ordered since python 3.7 version
11:04 - mutable also you can change the values
11:07 - if you want to edit the phone number
11:09 - from you can edit you can add any item
11:12 - here you can remove any item here means
11:15 - dictionaries are mutable
11:17 - but these keys
11:19 - these should be immutable keep this
11:22 - thing in mind immutable means either a
11:23 - string or a number or Tuple these Keys
11:27 - should be immutable but values are
11:30 - mutable we can change the values
11:32 - right
11:34 - and no duplicates are allowed
11:37 - one key can have only one value like if
11:41 - you want to store rather than Mohan I'm
11:44 - again writing RAM and phone number is
11:46 - this it's not like that
11:48 - key this is duplicate key so this is not
11:50 - allowed
11:52 - if you will do this thing no error would
11:55 - be there but ultimately whatever value
11:58 - you will assign in the last that would
12:00 - be considered as final value for that
12:03 - key
12:04 - so it will only print Ram 1111 sham
12:08 - three four five six
12:11 - okay this value would be discarded the
12:14 - last time at the last you have assigned
12:16 - Ram this phone number so this would be
12:18 - the final phone number
12:20 - right so these are some properties okay
12:22 - now
12:22 - basic idea you will get the syntax and
12:25 - all now let's do some practical of these
12:28 - things
12:29 - and just you know find out what
12:32 - different different built-in function we
12:34 - can use here many built-in functions as
12:36 - well right okay so let's create a new
12:39 - file here and
12:46 - dictionaries dot p y
12:50 - this name I'm taking let's create a
12:52 - dictionary any
12:54 - value or any information you can store
12:57 - I'm just taking an example of soding
12:59 - phone number any value which is in the
13:01 - form of key and value like student name
13:03 - roll number or anything or like
13:05 - information of employees name then age
13:08 - then phone number something like this
13:10 - anything you can store
13:12 - so
13:14 - I am taking phone number
13:17 - simplest method is name of the
13:19 - dictionary
13:20 - this curly braces and then first suppose
13:23 - I'm writing name this is a string so
13:26 - definitely it would be in curly bracket
13:27 - sorry quotes double quote or single code
13:30 - then colon and then value
13:33 - like one two three four this is the
13:34 - phone number
13:36 - okay so three items I am having so yeah
13:39 - that is it's okay it will not give any
13:41 - error but
13:43 - according to the you can say convention
13:45 - is there in Python whenever you will
13:47 - write dictionaries
13:48 - if suppose we are writing something like
13:50 - this if I am having a definition of
13:52 - something like uh definite first
13:55 - definition of
13:57 - code
13:58 - or definition of algorithm so here I
14:01 - write algorithm and then here I'll write
14:02 - definition in 102 line then comma
14:05 - definition of program
14:07 - then definition of code
14:09 - so it would be very you know it would be
14:12 - not so
14:14 - readable if you write down just
14:17 - in single line like first
14:20 - algorithm definition of that then comma
14:23 - from there only start another item no so
14:26 - what is the convention for more to look
14:28 - your program more readable
14:35 - then with some indent first item comma
14:39 - then in next line second item then comma
14:42 - in third line
14:43 - third item then at last with no
14:46 - indentation we will close the dictionary
14:50 - so this is the convention
14:53 - although if you write down everything in
14:55 - one line that will not give any error
14:56 - but this is more readable
14:58 - right
15:00 - and if you want to add another item just
15:02 - comma enter you can add another item
15:04 - right
15:06 - or if you like to put comma in the end
15:08 - that is also fine it will not give any
15:10 - error okay
15:13 - so
15:14 - let's run this okay because we haven't
15:17 - printed anything so
15:19 - it will not print anything let's print
15:21 - this dictionary print and just name of
15:23 - dictionary phone number that's it
15:26 - so let's run this
15:28 - and see
15:30 - it will print like this the SRAM sham
15:33 - and Mohan key and value pair everything
15:37 - if you want to access phone number of a
15:39 - particular
15:41 - you have to provide the key if any
15:45 - specific item you want to index specific
15:48 - value you want to in Access then
15:51 - name of the dictionary in these
15:53 - subscript brackets no index because in
15:57 - list and Tuple we use index here we
15:59 - write down key so just write down the
16:02 - name of that person suppose
16:04 - I want to access for number of sham see
16:07 - sham is string so as it is you have to
16:09 - write down the key sham is a string so
16:12 - in
16:13 - quotes
16:15 - and second thing case sensitive this is
16:17 - case sensitive so you have to be very
16:20 - careful if you have written this S
16:22 - capital this should be Capital right so
16:25 - let's run this and I will show you see
16:27 - for number of charm is three four five
16:29 - six right if you write down something
16:32 - like this small is
16:34 - let's run this it will give you a error
16:37 - see key error
16:40 - in line number six
16:42 - in line number six I am having a clearer
16:45 - so this is the
16:48 - common mistake generally you know many
16:50 - students do just a typo error
16:53 - so you have to
16:55 - keep in mind this thing the key is
16:58 - should be same and if it is a string it
17:00 - should be in quotes if you will not put
17:03 - here quotes
17:04 - it will give error
17:06 - let's run this
17:09 - see name Ram is not defined
17:13 - okay so if it is a string so you have to
17:16 - put it in
17:20 - single quarter double quote
17:22 - right if it is integer that is fine next
17:24 - thing next property of this is what this
17:27 - is how you can
17:28 - access particular item next I have told
17:32 - you
17:33 - duplicates are not allowed so again if I
17:36 - assign Ram equal to and six and yeah and
17:41 - see this is also you cannot write down
17:43 - here Ram equal to 6666 it should be
17:45 - colon I have told you the syntax
17:49 - so this is also one of the common
17:51 - mistake
17:53 - okay I'm just getting this one so let's
17:56 - print dictionary the all the values
17:59 - let's run this all the items see Ram the
18:02 - phone number of RAM is now 6666 it's not
18:05 - one two three four I have told you if
18:06 - you do so if duplicate keys are there
18:09 - then whatever value will assign in the
18:12 - last that would be the final value of
18:14 - that fee so six is six six right only
18:18 - one time it will take ram okay next
18:20 - property is what now we have another
18:22 - method also to create this dictionary
18:25 - just phone number equal to we have a
18:28 - date function
18:30 - date
18:31 - and here you can pass this
18:35 - values these items so I'm just copy
18:38 - pasting these dick
18:40 - that
18:42 - brackets right round brackets and then
18:45 - as it is you can pass whatever you want
18:46 - to write in dictionary curly bracket
18:48 - then key and value pair key and value
18:51 - pair key and value pair right so if I
18:56 - comment out the previous one and this is
18:59 - our final one using dict
19:01 - so it will give you same
19:03 - like this so this is second method
19:05 - otherwise you can also pass each item as
19:09 - a pair this is the complete item key and
19:13 - value complete one this is one item this
19:15 - is second item this is third item so
19:17 - this one item you can pass
19:19 - has a pair something like this now in
19:22 - this case rather than curly braces we
19:24 - use square bracket right and like this
19:28 - dict then each item you can pass as a
19:31 - pair Ram comma the value sham comma
19:33 - phone number Mohan comma phone number in
19:36 - round bracket and this value ah sorry
19:38 - this bracket square bracket right okay
19:42 - let's run this and this will also show
19:44 - you the same so these are some methods
19:47 - to create but the simplest one is this
19:49 - one so we'll use that only let's just
19:52 - comment this out
19:57 - you will remove the comment of this now
19:59 - next is
20:00 - okay I have told you these are order so
20:04 - see in the same order it is printing the
20:06 - first item is Ram then sham then in the
20:09 - same order it is printing
20:10 - next is mutable okay so the values are
20:14 - changeable now if I want to change
20:18 - the value of the phone number of suppose
20:21 - Mohan I can change how
20:25 - just name of the dictionary
20:27 - in this square bracket what key for what
20:31 - you want to change the value just pass
20:33 - that key as it is
20:35 - Mohan same name
20:37 - then sorry
20:39 - net equal to and whatever the phone
20:42 - number you want to assign 9999
20:45 - okay
20:46 - now I'll print
20:48 - the dictionary again
20:52 - okay
20:53 - so let's run this again and
20:56 - see at first
20:58 - the same whatever you have assigned then
21:00 - we have updated phone number of Mohan
21:02 - and then
21:04 - see the phone number of 1 is 999 so this
21:06 - is how you can update any item
21:09 - okay
21:10 - next is okay now the values or these
21:16 - values can be of any data type see I am
21:19 - saying values can be of any data type
21:22 - any int float list Tuple dictionary
21:26 - set anything
21:28 - but these Keys should be immutable
21:32 - Mutual means either number or list sorry
21:35 - numbers
21:37 - tuples or strings these are immutable
21:40 - data types right
21:42 - so here
21:45 - a dictionary can also contain list as
21:47 - well as a dictionary itself dictionary
21:50 - inside a dictionary means nested nested
21:52 - dictionary so let me just show you now
21:55 - rather than here Mohan one thing I want
21:57 - to add a list
22:00 - Mohan is having
22:02 - two phone number so I am adding a list
22:05 - of phone number whatever Mohan is having
22:07 - rather than this one or I'm not changing
22:11 - I am adding one more item sorry one more
22:14 - name and that is madhav
22:19 - and for madhav I'm adding two for number
22:21 - one one one comma two two three or
22:25 - suppose
22:27 - three four number three three three so
22:29 - this is a list of phone number that is
22:31 - also fine you can add let's run this
22:34 - see before updation this is a dictionary
22:37 - and after that we have one more item and
22:42 - this is the thing so list is also
22:45 - allowed it's not like that you can only
22:47 - write down here maybe integer or string
22:49 - at all no
22:50 - even dictionary is also allowed one more
22:53 - item I want to add phone number and
22:57 - suppose I want to modify sham sham
23:02 - sham is having
23:04 - two phone number and
23:07 - I want to add these two phone number in
23:10 - the form of key and value pair sham home
23:12 - and Sham office right this thing so that
23:16 - is a dictionary key and value pair this
23:18 - I want to add and then let's print phone
23:21 - number let's run this C first one is
23:24 - without modification then we have added
23:27 - RAM for sham we have updated C sharp
23:33 - and then this is having a again
23:35 - dictionary
23:37 - then Mohan then madhav like this
23:41 - so the values can be of any data type
23:44 - right
23:45 - now if you want to access suppose if you
23:47 - want to access this phone number of
23:49 - sham
23:51 - see what it will print
23:56 - is not defined
23:59 - this is string so you have to put
24:02 - in
24:04 - quotes
24:05 - see
24:06 - first of all and we are printing this
24:09 - phone number the completed dictionary so
24:11 - this is the first print statement and
24:14 - then for Sean I am printing so this is
24:17 - the second print statement so sham is
24:20 - having two phone number in the form of
24:22 - dictionary this and this so if sham work
24:24 - I want to access then what you will
24:26 - write sham here then again here we I
24:30 - will write
24:32 - underscore
24:35 - work
24:37 - let's run this and it should print 4444
24:39 - C
24:42 - so this is how you can access okay
24:46 - using get method also we can access
24:48 - these things so let's print
24:51 - we have for how to use that method phone
24:54 - number dot get
24:57 - and here same
24:59 - for which key you want to access the key
25:01 - name
25:02 - it's Ram
25:05 - let's run this
25:07 - c one two three four
25:09 - right
25:10 - but one problem with get method is what
25:12 - if I write down here suppose
25:16 - small RM
25:18 - so if you don't use get method then it
25:21 - will give error key key value error
25:23 - because Ram this is not here Capital Ram
25:27 - is there right
25:29 - but this will not give any error it will
25:31 - just show you none
25:34 - so if you want like some error should be
25:36 - printed
25:37 - if I either if I write down here a wrong
25:40 - key then definitely we will not use this
25:43 - get get method previous method we will
25:45 - use okay okay I have one assignment or a
25:49 - question for you
25:51 - if this is a dictionary
25:53 - data this one data I am having
25:58 - one is the key and value is Jenny then 2
26:02 - RAM 0 Mohan and I'll print data and
26:06 - here in subscript I am passing only 0.
26:10 - what would be the output of this thing
26:12 - pause the video and think
26:17 - so what it will print see 0 here is not
26:20 - index
26:21 - so don't think at zeroth index we have
26:23 - one Journey it will be in this thing no
26:25 - 0 here his key because we are accessing
26:29 - dictionaries so k k is this thing this
26:33 - is 0 so it will print
26:35 - Mohan value this Mohan let's run this C
26:39 - it is printing Mohan
26:41 - okay I hope you got this thing also he
26:44 - also will not you know mistake you will
26:46 - not do this this silly mistake so here
26:49 - the second uh second is what rather than
26:51 - the string here
26:53 - in keys I am using integer so that is
26:56 - also allowed it's not like that only
26:58 - string I can use okay
27:00 - string integer sorry string or numbers
27:03 - or tuples we can use because these are
27:04 - immutable
27:06 - least we cannot use list as key we
27:09 - cannot use because let's start new table
27:12 - now if you want to delete
27:15 - if you want to delete any item from this
27:19 - dictionary we have a method Del Dell
27:23 - just name of the dictionary and
27:28 - name of that key
27:31 - what you want to delete like Ram
27:35 - and then if you print
27:39 - phone number then see what it will print
27:44 - first is this one without updation then
27:47 - we have deleted Ram
27:50 - then see there is no Ram at first
27:54 - I'm having shown
27:56 - this print will
27:59 - because we have deleted Ram here so that
28:02 - key and value that would be deleted so
28:04 - using Del we can delete using pop also
28:07 - we can delete
28:08 - how we can you can delete that thing see
28:11 - you have to use name of the dictionary
28:14 - phone number Dot
28:17 - poke function we have pop
28:19 - and here save
28:22 - that particular key name so suppose I
28:26 - want to delete sham
28:30 - and if you want to print
28:32 - see it will return also pop will remove
28:34 - the value of
28:36 - that this particular key and it will
28:38 - return that value so if you want to
28:40 - print what the scope will return you can
28:43 - print that thing also
28:45 - and after that we are going to print
28:47 - phone number
28:48 - right
28:51 - so first is Ram sham and Mohan then this
28:55 - pop it will return the value
28:58 - corresponding to this key sha so
29:01 - corresponding to Sham we are having
29:02 - three four five six three four five six
29:03 - and then after that it will print RAM
29:05 - and Mohan no sham so using pop also you
29:08 - can delete a particular
29:09 - item and we have one more function for
29:12 - python that will delete
29:14 - the last item added the last one
29:18 - since python 3.7 version this is the
29:21 - case but before that version in 3.6
29:24 - version and earlier version pop item was
29:27 - used to delete any random item any
29:29 - random item it deletes right now if I
29:33 - use here for python
29:36 - so same
29:37 - phone number name of the dictionary Dot
29:41 - pop item see we are having pop and pop
29:43 - item two
29:45 - or buy them
29:46 - right
29:47 - so it will delete the last one last one
29:49 - added is Mohan so let's run this
29:54 - and see
29:55 - first of this then whatever it will
29:58 - delete it will return that key and value
30:01 - both so Mohan and this this item it will
30:05 - return that item but pop will return
30:08 - only the value and after that RAM and
30:10 - shyam okay so this is Pop item
30:13 - when we have clear clear will
30:15 - delete
30:19 - all the items from this dictionary let's
30:22 - run this
30:23 - C
30:24 - it's none
30:26 - right
30:27 - and it will return n nothing so let's
30:31 - just remove this
30:33 - it will not return anything so we are
30:35 - not printing anything so let's run this
30:37 - again
30:38 - see first dictionary was this and then
30:40 - after clear method it's empty nothing is
30:43 - there
30:44 - okay if you want to access only keys so
30:46 - we have also a built-in method name of
30:49 - the dictionary Dot
30:50 - keys
30:53 - let's run this
30:55 - and see first is the dictionary because
30:58 - we have printed here phone number right
31:00 - then only Keys dict unders
31:05 - if you want to print only values for
31:07 - that also we have a function
31:10 - built-in function Dot
31:13 - values
31:16 - okay
31:18 - now let's run this
31:20 - see dick Keys dict values
31:23 - right we have one more function that is
31:26 - item
31:27 - so if you want to print that also what
31:29 - it will return let's see one number Dot
31:32 - this function is very important items
31:36 - let's run this
31:39 - see
31:41 - first was this then Keys then values we
31:44 - have printed then dot items so item will
31:47 - print
31:48 - list
31:49 - C square bracket is there so it is a
31:52 - list list of all the items but in the
31:56 - form of tuples see this is a tuple Ram
31:59 - one two three four in round bracket so
32:01 - one Tuple
32:03 - two double Sweet Apple in for Loop also
32:07 - we can Loop through this dictionary
32:09 - using four so four if I write 4
32:12 - any suppose simple any variable and I'm
32:15 - taking I in
32:17 - phone number
32:20 - and I'm just printing I what do you
32:22 - think what it will print
32:24 - let's just
32:26 - comment out these lines
32:30 - for I and phone number and print I what
32:32 - do you think about it will print
32:34 - let's see
32:36 - only the key is Ram sham and Mohan
32:40 - and corresponding to these keys if you
32:42 - want to print values I can write down
32:44 - something like this print
32:48 - and phone number and in this
32:52 - subscript you can pass
32:54 - I because this is how you can access the
32:57 - values by passing the key let's run this
33:01 - now see
33:03 - Ram then value then charm then value
33:05 - then
33:07 - okay and in for Loop also we can use
33:09 - that item function so phone Dot items so
33:15 - it will print key and value pair right
33:17 - so in this case if I print this I what
33:20 - it will print
33:22 - C
33:24 - all these items
33:26 - in Tuple but individual first is this
33:29 - second is this third is this
33:31 - or you can say it will return our list
33:32 - of
33:33 - Tuple pairs and if you want to copy this
33:37 - dictionary to another one for that also
33:40 - we have
33:41 - we have a function inbuilt function copy
33:44 - so what you can do the name of second
33:46 - dictionary suppose
33:48 - for number two
33:50 - equal to
33:52 - the stationary phone number dot we have
33:56 - a function C copy
33:59 - and after that just print
34:03 - phone number two
34:05 - let's run this
34:07 - so see
34:08 - first
34:10 - print statement is phone number this
34:13 - phone number I am printing then we are
34:15 - just copying this and then I am printing
34:16 - for number two so same you will get so
34:20 - if you want to copy as it is content you
34:21 - can do that thing also and if you want
34:23 - to find out length of prediction for
34:25 - that also we have a function Len
34:26 - function so you can just print
34:29 - using Len function blend and the
34:32 - name of that dictionary
34:34 - let's just
34:36 - comment out these two lines let's run
34:38 - this
34:40 - C length is three one two three item
34:42 - you're having so length is three so this
34:43 - is there are many built-in functions
34:45 - also
34:46 - you can just check out you can just
34:48 - Google that functions and you can try to
34:49 - use those functions what are you know
34:52 - generally we whatever function we will
34:54 - use that I O told you but there are many
34:56 - functions in build function you can just
34:57 - try out many functions and if you're not
35:00 - getting anything you can just ask me in
35:01 - comment section like how this function
35:02 - is working
35:03 - right
35:04 - so that is all about I think
35:06 - dictionaries so I hope you got what are
35:09 - dictionaries in Python how this these
35:11 - are different from list set and tuples
35:13 - some properties some built-in function
35:15 - in dictionaries the syntax and how we
35:18 - can use when we should use dictionaries
35:20 - in python or in our program right so now
35:23 - I'll see you in the next video in the
35:24 - next video we'll see when coding system
35:26 - based on dictionaries okay till then bye
35:29 - take care

Cleaned transcript:

hey everyone I hope you all are safe and doing good so in the series of learning path and programming language in the previous video we have done one project Caesar Cipher right so now in this video what we will discuss what are dictionaries in Python see in Python we are basically having four builtin data type to store collection of data list set and uh Tuple and dictionary so we have discussed till now list set and Tapas the fourth one which is remaining is dictionary so this thing we'll be discussing in this video everything about Dictionary what is dictionary why we need dictionary when we need a dictionary to store collection right and how this is different from other uh builtin data type that are used to store collection like list Tuple and set the difference and some builtin functions what we can perform on dictionary how we can you know Define a dictionary everything we'll be discussing in this video in detail with the help of program practically also I'll show but before that when I tell something important to those who are interested to make their career as a full stack software developer who are still confused about their career like in which field they should go okay let me just show you something first there is a salary calculator the link I'll put in the description box of this video of the salary calculator once you click on that link this type of page would be opened and you just have to fill your name your educational and professional details highest qualification year of registration work experience job role you are doing for preferable location work location mail ID phone number and you just have to submit and then it will show you how much you could earn per annum this is just a estimate according to your given answer so if you are interested in full sex software development then Odin school is conducting a six month full stack software development board game and this boot camp is perfect for anyone who wants to access industry Airline education at a reasonable price as you can see the data did the next cohort will be started from 24th of June the free detail you can see as well as you will get a scholarship up to rupees 30 000. and there is a early bird offer in which you will get 10 000 additional discount and no post Emi option is also available that's not it it comes with two one placement records and 360 degree placement assistance don't just go with my words you can check out their success stories you can check out on their website many success stories you will get of their students because they are having 500 plus hiring Partners like Google TCS Infosys capgemini Deloitte many more top tech companies so if you want to get start your career in full stack software development feel join out in school today how to apply for this boot camp you can just click on the link that I'll put in the description of the description box of this video Once you click in this type of page will be open you just have to fill out this detail the basic detail and you can request a callback now coding school teammate is going to call you back within one or two days whatever doubt you have you can ask your doubt clear your doubts and then pay the fee and then enroll in the course so all the relevant links and details you'll find in the description box of this video you can even check out now let's see okay let's take a real example like in our home also we are having dictionary if you don't know meaning of anything we just used to search that meaning of that word in dictionary okay nowadays we just search on Google the meaning of that word but we used to have dictionaries once right now if suppose you want to search meaning of beautiful so we will search like from index like from where the letters of B would be started then B then b e then ultimately we'll search where is this that beautiful after finding that word beautiful we will see the meaning of that beautiful that word right like this so how the the this data is to be stored in dictionary like first beautiful and then meaning meaning of this right means in a form of key and value this is key and this is value another word like awesome this is key and here we have meaning of that word like this if suppose you want to search in a dictionary you want to search for number of any one so we'll search first like the name Jenny okay Jenny and then we will get the phone number ultimately we will receive the phone number so here Jenny is the key and phone number is the value of Jenny so key and value pair in real life we used to deal with these type of data Arrangements every day right now this type of data Arrangements we can also imitate in programming language in Python in the in program if we use to store this type of data arrangement in a key and value pair then we have something and name is same that is dictionary we have a data structure or we can say a builtin data type we have to store collection of data that is dictionary see in a list what do we store something like this like one two three or like string also we can store out any float value we can store something like this list of items in a set also something like this any set of items and tuples also but in form of pair if you want to store the key and value pair for that particular thing we are having dictionary like I'm going to store roll number of student and then name of that student like Jenny dolomer of the student then if we write down in resistor maybe something like this we can write 1 and dash or one equal to or one column something like this we write but here we have a proper syntax that also I will tell you in programming to suppose Ram three anyone right so here also we are having key and value pair if you want to find out name of any student just if you know the roll number just look for the roll number of that student and you will get the name of that story roll number two what is the name just look after in your resistor what is the where is the roll number two and then you will get the name so this is key this is value right suppose in a Company employee ID and employee name or maybe employee name and salary of that employee like this type of data Arrangement if you need then we use this type of built area type that is dictionary in Python right so it is used to store collection of data in the form of key value pair key value pairs I hope you got what is dictionary and what is simple you know definition or meaning of dictionary and why we used which kind of data if you want to store and see this is very helpful why so I have already told you because using dictionaries we can imitate or you know that real world data arrangement in programming where each key is associated with a particular value right that type of thing that type of scenario data arrangement we can imitate or we can copy or we can as it is do in programming with the help of this data type right so what is the syntax how to store just if you want to create a dictionary name of that dictionary any name equal to in these braces curly braces key colon value the syntax is very important first of all key then column then value this is General syntax so if I want to store like phone number of my friends so dictionary name I'm taking foreign underscore number and here key key means suppose obviously phone number if I want to store then first I'll write name then phone number so name is what am I writing name Ram so Ram is what a string so then colon then one two three four something like this phone number more than one entry is also allowed just you have to do comma and whatever you want to store suppose next is sham three four five six comma Mohan one one one one any phone number so in this dictionary we are having three key and value pair Ram this Shaman for Mohan no this is how you can create a dictionary if you want to access then simply we just like print and phone number you will get this thing but there are alternative ways also to create a dictionary one method is this the simplest one we have a dick method using that also we can create a dictionary we can now we can access individual item also in a list if you want to access list or Tuple we use index indexing method we use if we have a list then here we write down list name and then these bracket index 0 1 2 3 4 corresponding to that index you will get the value but here we are having how to access using keys we are having keys so if suppose I want to find out roll number of sham so what you will look for first of all the name of name of that particular person so I look for the name that is sham the key and corresponding to that I will get the phone number so using keys we can access individual items or the values from the dictionary how I'll show you practically I will show you now everything okay what are the properties of this dictionary that also I will show you when we will do some practical right like for list and certain Tuple we are having properties so for dictionary also we are having some properties first one dictionaries are ordered but since 3.7 was dictionaries are ordered in 3.6 version and before that in earlier version dictionaries are unordered means ordered means na you have defined a particular order now you cannot change that order if I will print that dictionary so in the same order these items would be printed first Ram this value then sham then Mohan it's not like that I have defined this something like this and whenever whenever I print then first it will give me Mohan then sham then Ram or maybe no whatever order is this in same order it will print means dictionaries are ordered since python 3.7 version mutable also you can change the values if you want to edit the phone number from you can edit you can add any item here you can remove any item here means dictionaries are mutable but these keys these should be immutable keep this thing in mind immutable means either a string or a number or Tuple these Keys should be immutable but values are mutable we can change the values right and no duplicates are allowed one key can have only one value like if you want to store rather than Mohan I'm again writing RAM and phone number is this it's not like that key this is duplicate key so this is not allowed if you will do this thing no error would be there but ultimately whatever value you will assign in the last that would be considered as final value for that key so it will only print Ram 1111 sham three four five six okay this value would be discarded the last time at the last you have assigned Ram this phone number so this would be the final phone number right so these are some properties okay now basic idea you will get the syntax and all now let's do some practical of these things and just you know find out what different different builtin function we can use here many builtin functions as well right okay so let's create a new file here and dictionaries dot p y this name I'm taking let's create a dictionary any value or any information you can store I'm just taking an example of soding phone number any value which is in the form of key and value like student name roll number or anything or like information of employees name then age then phone number something like this anything you can store so I am taking phone number simplest method is name of the dictionary this curly braces and then first suppose I'm writing name this is a string so definitely it would be in curly bracket sorry quotes double quote or single code then colon and then value like one two three four this is the phone number okay so three items I am having so yeah that is it's okay it will not give any error but according to the you can say convention is there in Python whenever you will write dictionaries if suppose we are writing something like this if I am having a definition of something like uh definite first definition of code or definition of algorithm so here I write algorithm and then here I'll write definition in 102 line then comma definition of program then definition of code so it would be very you know it would be not so readable if you write down just in single line like first algorithm definition of that then comma from there only start another item no so what is the convention for more to look your program more readable then with some indent first item comma then in next line second item then comma in third line third item then at last with no indentation we will close the dictionary so this is the convention although if you write down everything in one line that will not give any error but this is more readable right and if you want to add another item just comma enter you can add another item right or if you like to put comma in the end that is also fine it will not give any error okay so let's run this okay because we haven't printed anything so it will not print anything let's print this dictionary print and just name of dictionary phone number that's it so let's run this and see it will print like this the SRAM sham and Mohan key and value pair everything if you want to access phone number of a particular you have to provide the key if any specific item you want to index specific value you want to in Access then name of the dictionary in these subscript brackets no index because in list and Tuple we use index here we write down key so just write down the name of that person suppose I want to access for number of sham see sham is string so as it is you have to write down the key sham is a string so in quotes and second thing case sensitive this is case sensitive so you have to be very careful if you have written this S capital this should be Capital right so let's run this and I will show you see for number of charm is three four five six right if you write down something like this small is let's run this it will give you a error see key error in line number six in line number six I am having a clearer so this is the common mistake generally you know many students do just a typo error so you have to keep in mind this thing the key is should be same and if it is a string it should be in quotes if you will not put here quotes it will give error let's run this see name Ram is not defined okay so if it is a string so you have to put it in single quarter double quote right if it is integer that is fine next thing next property of this is what this is how you can access particular item next I have told you duplicates are not allowed so again if I assign Ram equal to and six and yeah and see this is also you cannot write down here Ram equal to 6666 it should be colon I have told you the syntax so this is also one of the common mistake okay I'm just getting this one so let's print dictionary the all the values let's run this all the items see Ram the phone number of RAM is now 6666 it's not one two three four I have told you if you do so if duplicate keys are there then whatever value will assign in the last that would be the final value of that fee so six is six six right only one time it will take ram okay next property is what now we have another method also to create this dictionary just phone number equal to we have a date function date and here you can pass this values these items so I'm just copy pasting these dick that brackets right round brackets and then as it is you can pass whatever you want to write in dictionary curly bracket then key and value pair key and value pair key and value pair right so if I comment out the previous one and this is our final one using dict so it will give you same like this so this is second method otherwise you can also pass each item as a pair this is the complete item key and value complete one this is one item this is second item this is third item so this one item you can pass has a pair something like this now in this case rather than curly braces we use square bracket right and like this dict then each item you can pass as a pair Ram comma the value sham comma phone number Mohan comma phone number in round bracket and this value ah sorry this bracket square bracket right okay let's run this and this will also show you the same so these are some methods to create but the simplest one is this one so we'll use that only let's just comment this out you will remove the comment of this now next is okay I have told you these are order so see in the same order it is printing the first item is Ram then sham then in the same order it is printing next is mutable okay so the values are changeable now if I want to change the value of the phone number of suppose Mohan I can change how just name of the dictionary in this square bracket what key for what you want to change the value just pass that key as it is Mohan same name then sorry net equal to and whatever the phone number you want to assign 9999 okay now I'll print the dictionary again okay so let's run this again and see at first the same whatever you have assigned then we have updated phone number of Mohan and then see the phone number of 1 is 999 so this is how you can update any item okay next is okay now the values or these values can be of any data type see I am saying values can be of any data type any int float list Tuple dictionary set anything but these Keys should be immutable Mutual means either number or list sorry numbers tuples or strings these are immutable data types right so here a dictionary can also contain list as well as a dictionary itself dictionary inside a dictionary means nested nested dictionary so let me just show you now rather than here Mohan one thing I want to add a list Mohan is having two phone number so I am adding a list of phone number whatever Mohan is having rather than this one or I'm not changing I am adding one more item sorry one more name and that is madhav and for madhav I'm adding two for number one one one comma two two three or suppose three four number three three three so this is a list of phone number that is also fine you can add let's run this see before updation this is a dictionary and after that we have one more item and this is the thing so list is also allowed it's not like that you can only write down here maybe integer or string at all no even dictionary is also allowed one more item I want to add phone number and suppose I want to modify sham sham sham is having two phone number and I want to add these two phone number in the form of key and value pair sham home and Sham office right this thing so that is a dictionary key and value pair this I want to add and then let's print phone number let's run this C first one is without modification then we have added RAM for sham we have updated C sharp and then this is having a again dictionary then Mohan then madhav like this so the values can be of any data type right now if you want to access suppose if you want to access this phone number of sham see what it will print is not defined this is string so you have to put in quotes see first of all and we are printing this phone number the completed dictionary so this is the first print statement and then for Sean I am printing so this is the second print statement so sham is having two phone number in the form of dictionary this and this so if sham work I want to access then what you will write sham here then again here we I will write underscore work let's run this and it should print 4444 C so this is how you can access okay using get method also we can access these things so let's print we have for how to use that method phone number dot get and here same for which key you want to access the key name it's Ram let's run this c one two three four right but one problem with get method is what if I write down here suppose small RM so if you don't use get method then it will give error key key value error because Ram this is not here Capital Ram is there right but this will not give any error it will just show you none so if you want like some error should be printed if I either if I write down here a wrong key then definitely we will not use this get get method previous method we will use okay okay I have one assignment or a question for you if this is a dictionary data this one data I am having one is the key and value is Jenny then 2 RAM 0 Mohan and I'll print data and here in subscript I am passing only 0. what would be the output of this thing pause the video and think so what it will print see 0 here is not index so don't think at zeroth index we have one Journey it will be in this thing no 0 here his key because we are accessing dictionaries so k k is this thing this is 0 so it will print Mohan value this Mohan let's run this C it is printing Mohan okay I hope you got this thing also he also will not you know mistake you will not do this this silly mistake so here the second uh second is what rather than the string here in keys I am using integer so that is also allowed it's not like that only string I can use okay string integer sorry string or numbers or tuples we can use because these are immutable least we cannot use list as key we cannot use because let's start new table now if you want to delete if you want to delete any item from this dictionary we have a method Del Dell just name of the dictionary and name of that key what you want to delete like Ram and then if you print phone number then see what it will print first is this one without updation then we have deleted Ram then see there is no Ram at first I'm having shown this print will because we have deleted Ram here so that key and value that would be deleted so using Del we can delete using pop also we can delete how we can you can delete that thing see you have to use name of the dictionary phone number Dot poke function we have pop and here save that particular key name so suppose I want to delete sham and if you want to print see it will return also pop will remove the value of that this particular key and it will return that value so if you want to print what the scope will return you can print that thing also and after that we are going to print phone number right so first is Ram sham and Mohan then this pop it will return the value corresponding to this key sha so corresponding to Sham we are having three four five six three four five six and then after that it will print RAM and Mohan no sham so using pop also you can delete a particular item and we have one more function for python that will delete the last item added the last one since python 3.7 version this is the case but before that version in 3.6 version and earlier version pop item was used to delete any random item any random item it deletes right now if I use here for python so same phone number name of the dictionary Dot pop item see we are having pop and pop item two or buy them right so it will delete the last one last one added is Mohan so let's run this and see first of this then whatever it will delete it will return that key and value both so Mohan and this this item it will return that item but pop will return only the value and after that RAM and shyam okay so this is Pop item when we have clear clear will delete all the items from this dictionary let's run this C it's none right and it will return n nothing so let's just remove this it will not return anything so we are not printing anything so let's run this again see first dictionary was this and then after clear method it's empty nothing is there okay if you want to access only keys so we have also a builtin method name of the dictionary Dot keys let's run this and see first is the dictionary because we have printed here phone number right then only Keys dict unders if you want to print only values for that also we have a function builtin function Dot values okay now let's run this see dick Keys dict values right we have one more function that is item so if you want to print that also what it will return let's see one number Dot this function is very important items let's run this see first was this then Keys then values we have printed then dot items so item will print list C square bracket is there so it is a list list of all the items but in the form of tuples see this is a tuple Ram one two three four in round bracket so one Tuple two double Sweet Apple in for Loop also we can Loop through this dictionary using four so four if I write 4 any suppose simple any variable and I'm taking I in phone number and I'm just printing I what do you think what it will print let's just comment out these lines for I and phone number and print I what do you think about it will print let's see only the key is Ram sham and Mohan and corresponding to these keys if you want to print values I can write down something like this print and phone number and in this subscript you can pass I because this is how you can access the values by passing the key let's run this now see Ram then value then charm then value then okay and in for Loop also we can use that item function so phone Dot items so it will print key and value pair right so in this case if I print this I what it will print C all these items in Tuple but individual first is this second is this third is this or you can say it will return our list of Tuple pairs and if you want to copy this dictionary to another one for that also we have we have a function inbuilt function copy so what you can do the name of second dictionary suppose for number two equal to the stationary phone number dot we have a function C copy and after that just print phone number two let's run this so see first print statement is phone number this phone number I am printing then we are just copying this and then I am printing for number two so same you will get so if you want to copy as it is content you can do that thing also and if you want to find out length of prediction for that also we have a function Len function so you can just print using Len function blend and the name of that dictionary let's just comment out these two lines let's run this C length is three one two three item you're having so length is three so this is there are many builtin functions also you can just check out you can just Google that functions and you can try to use those functions what are you know generally we whatever function we will use that I O told you but there are many functions in build function you can just try out many functions and if you're not getting anything you can just ask me in comment section like how this function is working right so that is all about I think dictionaries so I hope you got what are dictionaries in Python how this these are different from list set and tuples some properties some builtin function in dictionaries the syntax and how we can use when we should use dictionaries in python or in our program right so now I'll see you in the next video in the next video we'll see when coding system based on dictionaries okay till then bye take care
