With timestamps:

00:00 - so in the series of learning c plus plus
00:02 - programming language we are discussing
00:03 - loops in c plus plus in the previous
00:04 - video we have talked about for loop in c
00:07 - the basics and take general syntax what
00:08 - is for loop why we use this and all we
00:10 - have seen with their program right the
00:13 - execution the working of the four loop
00:15 - but it's not like that the way we have
00:16 - discussed in previous video in that way
00:18 - only you can write down four rupees yeah
00:19 - the syntax is
00:21 - that only but you can do some tricky
00:23 - things with that for loop or you can say
00:25 - some properties or four loop we are
00:26 - going to discuss in this video right
00:29 - in many ways you can write down for loop
00:32 - right
00:34 - generally in you know in exam in
00:36 - competitive exams like gate net and
00:38 - interview in y was they ask these type
00:41 - of questions
00:42 - they write down the for loop but they
00:44 - just add a twist in that for loop
00:47 - right
00:48 - which you haven't seen before maybe you
00:50 - think that it will give an error but no
00:52 - that will not give an error that will
00:53 - produce
00:55 - some output but you haven't tried that
00:57 - thing with that for loop because you
00:58 - don't know you have just tried on for
01:00 - loop four then initialization then
01:02 - condition then increment decrement and
01:04 - then body of the loop and that's it
01:06 - but there are multiple ways in which you
01:07 - can write down for loop so that
01:10 - all the things these tricky things what
01:12 - you can do with for loop those things
01:13 - will discuss in this video with the help
01:15 - of programs
01:16 - many examples will be seen
01:19 - on laptop practically we will see all
01:22 - these things right and i'll explain you
01:24 - why you are getting that kind of output
01:26 - and all some assignments also i'll give
01:28 - you right
01:29 - but before that i just want to tell you
01:30 - one thing if you guys are preparing for
01:32 - gate exam or will be preparing for gate
01:34 - exam then there is a great offer going
01:35 - on on an academy unlock 20. you will get
01:39 - twenty percent off on all the gate csit
01:42 - subscriptions
01:43 - but the software is valid you know till
01:46 - today only or you can say today is the
01:48 - last
01:49 - date
01:50 - to
01:51 - get to grab the sofa as you can see on
01:54 - my screen the details of
01:57 - gate csit subscriptions the durations
01:59 - and the current price and what you have
02:01 - to pay
02:02 - right
02:03 - as well as you will get twenty percent
02:05 - open uh that uh on academy light
02:07 - distance learning program you can see
02:10 - the detail on my screen whatever is your
02:12 - branch according to that you can check
02:14 - the detail and you can go for that thing
02:16 - and you can use my code jkl10 to get
02:18 - twenty percent off on all the
02:20 - subscriptions as well as for gay 23as
02:22 - parents they are going to start a new
02:23 - batch from 1st of september
02:25 - this batch will be in both indian hindi
02:27 - and english and also be given to you in
02:29 - english only and the top educator will
02:31 - be copying all the subjects of cs and id
02:33 - in this batch and some special classes
02:35 - will also be conducted discover you know
02:37 - discussing like preparation strategy
02:38 - tips and tricks practice questions
02:40 - numericals along with
02:42 - detailed explanation of all the concepts
02:45 - plus separate doubt solving session
02:47 - would also be conducted so you can you
02:48 - know get your doubts cleared in those
02:51 - separate sessions
02:52 - and see here you will get separate doubt
02:54 - solving sessions as well as uh the notes
02:57 - and live mentorship so i get you can go
02:59 - for this case if you are you know
03:01 - getting these points these are some
03:03 - benefits you will get if you go for an
03:06 - academic courses
03:07 - so uh all the relevant links and details
03:10 - you will get in the description box of
03:11 - this video
03:12 - you can go and check out now let's see
03:15 - for loop
03:17 - see
03:18 - general syntaxes i have told you just
03:21 - write down four here we have expression
03:23 - one semicolon expression two semicolon
03:26 - expression three
03:28 - and we have
03:30 - body of loop right that's it and
03:34 - these three expression all the three
03:36 - expressions are optional
03:39 - means you can write down for loop
03:40 - something like this four semicolon
03:42 - semicolon
03:44 - please note on this thing all three
03:46 - expressions are optional
03:48 - right but these two semicolons are
03:50 - mandatory
03:52 - if you don't write down if you don't put
03:54 - semicolon if you put one semicolon it
03:56 - will give syntax error if you put three
03:58 - semicolon you will get syntax error only
04:01 - two semicolons
04:03 - only two semicolons are mandatory
04:05 - three expressions are optional
04:07 - right
04:09 - now in how many ways what tricky things
04:11 - you can do with this for loop let's
04:14 - discuss all these things all these
04:16 - things uh with the help of programs and
04:18 - i'll show you practical right so this
04:21 - was the example we have taken simply
04:24 - we we have printed in the last video
04:25 - numbers from one to ten okay we are
04:27 - taking this example from 1 to 5 we are
04:29 - printing so header file io stream
04:32 - that header their name space std then in
04:34 - main function we are just taking a
04:35 - variable i name of variable you can take
04:37 - any variable m a b c x y z i j k any
04:39 - variable generally we take i as a loop
04:41 - variable because you can say you know
04:43 - you can consider i is like a girlfriend
04:45 - for this loop so i initialization first
04:48 - i is equal to 1 then condition i less
04:50 - than equal to 5 termination condition
04:53 - and then
04:54 - increment or decrement or you can say
04:55 - update here you can write plus plus i or
04:58 - i plus plus both will work same then we
05:00 - are just printing i
05:02 - right so it will print
05:04 - 1 to 5
05:06 - right 1 to 5.
05:08 - now see what are some condition you can
05:10 - do what are some you know tricky things
05:13 - you can do with this you can
05:15 - remove this initialization this is
05:17 - completely optional right
05:19 - but if you do not initialize this i
05:23 - then what output you'll get let's run
05:25 - this
05:26 - you will get nothing see it it is going
05:28 - to print nothing
05:31 - because maybe i will it will take any
05:32 - garbage value that would would be the
05:34 - condition would not be 2 at that time so
05:36 - it will not enter into this loop body
05:38 - and
05:39 - that's it
05:40 - so if after this loop body i
05:44 - print
05:45 - end of loop
05:48 - let's see
05:50 - what you will get see let's run this and
05:52 - see it is just printing end of loop
05:55 - because it is not entering into this
05:56 - loop body we are not initializing this
05:59 - so if you initialize the psi here one
06:02 - ways you can initialize this before this
06:04 - for loop rather than here so let's print
06:07 - let's run this and now you it will print
06:09 - one to five right
06:11 - okay initialization is done
06:13 - now
06:14 - uh if i initialize
06:17 - more than one initialization you can do
06:20 - like i is equal to 1
06:22 - comma j is equal to 0
06:25 - right
06:26 - but before taking this j you have to
06:29 - declare this j variable right otherwise
06:32 - it will give error okay fine
06:34 - now more than two initialization we have
06:36 - done i and j
06:38 - so you have to separate these
06:39 - initialization with coma not semicolon
06:42 - only two semicolons are allowed in this
06:44 - for loop
06:45 - only comma you can put if you put here
06:47 - semicolon
06:49 - if you separate these initialization
06:51 - with semicolon you will get an error
06:54 - syntax error let's run this and i'll
06:56 - show you what error you will get see
06:59 - uh here you will get an error like
07:02 - expected this before
07:04 - this semicolon
07:06 - so
07:07 - you have to remove this because it will
07:10 - consider these two semicolon as part of
07:12 - this four this is extra
07:14 - right first two are fine but it is
07:17 - giving error in third one
07:19 - but we know that
07:21 - this first semicolon is extra so just
07:23 - put comma here right
07:26 - now simply you can print here i as well
07:29 - as as well as j
07:32 - so if you print i and both
07:35 - j
07:36 - what output you will get c
07:39 - one zero two zero three zero four zero
07:41 - five zero
07:42 - i is one two three four five but j is
07:44 - zero zero zero because we are not
07:46 - incrementing or decrementing j
07:48 - right so more than one initialization
07:50 - also you can do
07:51 - now
07:52 - you can remove this condition this
07:54 - condition is also optional right
07:57 - so you can remove this condition
08:00 - fine we are not putting any condition
08:03 - it will not give any error but the loop
08:06 - would be
08:07 - just think if there is no condition then
08:09 - obviously loop would be in finite loop
08:10 - there is no termination condition
08:12 - so if i run this
08:15 - it will be an infinite loop see it will
08:18 - be an infinite loop
08:21 - okay
08:22 - so
08:24 - i'm going to kill this
08:26 - fine
08:27 - so incrementing it is printing
08:30 - one is incrementing 1 2 3 4 5 like this
08:32 - and j is 0 0 0 0 0 something like this
08:35 - and it is not going to stop
08:36 - so you have to put
08:38 - a condition i less than
08:40 - equal to 5 one more thing
08:43 - more than one condition also you can put
08:46 - now if i put
08:47 - two condition then you have to separate
08:49 - these two condition with comma only
08:51 - comma
08:52 - j less than
08:55 - suppose j less than
08:57 - 3
08:58 - okay
09:00 - control s
09:02 - now what would be the case
09:05 - maybe you are thinking
09:07 - this loop would print
09:10 - or i don't know what you are thinking
09:12 - just try it out
09:14 - and see what output you are getting or
09:16 - before running just dry run this and see
09:18 - what output you are getting
09:20 - so here also it will give in finite loop
09:24 - why infinite loop
09:26 - let me just run this first and show you
09:28 - the output of this thing see it is still
09:30 - in finite loop and j is still at the
09:32 - last you can see the last digit 0 0 0 0
09:36 - 0 right j is always 0 i is only
09:39 - incrementing but it is still in finite
09:41 - low
09:42 - why so because if you put 2 condition
09:46 - then the last condition the second
09:48 - condition right would be considered as
09:51 - termination condition
09:53 - the first condition i less than equal to
09:55 - five five would be considered as a
09:56 - simple statement
09:58 - no condition
09:59 - if you put three condition i less than
10:01 - equal to five j less less than three
10:02 - suppose comma k less than equal to 10
10:05 - then k less than equal to 10 would be
10:06 - considered as
10:08 - termination condition this point you
10:09 - need to take care
10:11 - right because comma is like
10:14 - the working of comma is what
10:16 - it will evaluate the first expression
10:18 - discard the value then second expression
10:20 - discard the value then third discard the
10:22 - value something like this
10:23 - i have discussed the working of coma
10:25 - operator you can check out that video
10:26 - right in the side button
10:28 - so same way it will discard the first
10:31 - value it will it will evaluate this one
10:33 - but i less than equal to five it would
10:35 - discard this like it will consider it as
10:36 - a statement only and the second one j
10:39 - less than five j less than three that
10:41 - will be considered as termination
10:42 - condition and you are not incrementing
10:43 - or decrementing j so j is always 0 the
10:46 - condition is always true so it is
10:48 - infinite loop now if i put here comma
10:51 - like j plus plus
10:54 - yeah at this time you will get c what
10:57 - output you will get here
10:58 - 1 0 2 1 3 2
11:01 - right as soon as j value becomes 3
11:04 - condition is not true so it is going to
11:06 - stop
11:07 - yeah i value is still 3 only and i value
11:11 - is less than equal to 5 so it can print
11:13 - four and five but it is not printing
11:15 - four and five because
11:17 - j value is the termination condition the
11:20 - condition is j less than three so
11:22 - national j as soon as j becomes three it
11:24 - is going to stop
11:25 - same you can put more than one condition
11:27 - with separation with coma
11:29 - and the last condition would be
11:31 - you know act as a termination condition
11:33 - if you do not put any condition it would
11:34 - be infinite loop
11:36 - same here also you can put more than
11:39 - one or two
11:41 - incremental decrement or update
11:42 - expression separated with comma right
11:46 - one more thing what if i put semicolon
11:49 - here at the last of this
11:52 - i
11:53 - sorry this four loop means you are
11:56 - terminating this for loop maybe you will
11:58 - think it will give error but it will not
11:59 - give any error
12:00 - so what output it will give c
12:04 - at the last it is printing 3 and 2
12:08 - because once j value becomes 3
12:12 - it will check the condition i value
12:14 - becomes 4 j value becomes 3
12:17 - keep this thing in your mind
12:20 - i value becomes 4 j value becomes 3 in
12:23 - the memory already updated and after
12:26 - that condition would be checked 3 less
12:27 - than 3 not true so it will exit from
12:30 - this for loop but still in memory i
12:32 - value is what 4 and j value is 3
12:37 - okay you got this point now let's run
12:39 - this
12:40 - let's run this
12:43 - code and see you are getting 4 and 3
12:46 - it's not 43 i value is 4 and j value is
12:50 - 3 let me just
12:52 - do this things
12:55 - i equal 2
12:57 - and will print i
13:00 - and then
13:02 - some space then
13:06 - j equal to let me just format this thing
13:10 - a little bit
13:12 - and then we print j
13:14 - now you will get it better
13:16 - see
13:17 - i value is 4 j value is 3
13:22 - yeah you are putting a semicolon in for
13:24 - loop that is why this for loop you have
13:25 - terminated this for loop
13:28 - now this would not be considered as
13:30 - the loop body it would be considered as
13:32 - simply statement as a part of the
13:34 - program not part of low body keep this
13:37 - thing in your mind
13:38 - now yeah for loop will execute see first
13:40 - of all i value becomes one j is zero
13:44 - condition true condition true obviously
13:46 - one condition would be checked j less
13:48 - than three condition true i plus plus j
13:50 - plus plus
13:51 - i becomes two j becomes one
13:55 - condition true but will not enter into
13:57 - this loop body because you have
13:58 - terminated this for loop
14:00 - so simply i plus plus j plus plus will
14:02 - be executed now i becomes 1 j becomes i
14:05 - becomes 2 j becomes 1
14:07 - condition would be checked again j less
14:09 - than 3 yes condition 2 again plus plus
14:11 - again condition would be checked
14:14 - see this was the case ah 1 0 at first
14:17 - time
14:18 - ah then it was 2 1
14:21 - then it becomes 3 2
14:23 - but it is not printing at this point of
14:25 - time because you have terminated this
14:27 - for loop
14:28 - now after that i value becomes four j
14:31 - value becomes three in the memory
14:32 - already updated i value becomes four j
14:34 - value becomes three now check the
14:35 - condition
14:36 - is the condition true j less than three
14:38 - less than three no
14:40 - this would be the termination condition
14:42 - so
14:43 - now exit from this for loop
14:45 - now exit from for loop means this
14:48 - statement is now not part of this loop
14:50 - body it is part of
14:53 - the program so it will execute this
14:55 - statement now
14:56 - so at this point of time i value is
14:59 - in the memory i value is 4 and
15:01 - j value is
15:03 - 3 so it is printing only one thing
15:07 - so these are some tricky things we can
15:08 - do with this
15:09 - loops right
15:11 - but if i put this j plus plus here
15:15 - j plus plus this you can also do
15:17 - increment decrement or this update kind
15:19 - of thing you can put in this loop body
15:21 - rather than here
15:23 - rather than here
15:26 - i plus plus and as well as j plus plus
15:28 - you can put here
15:29 - both the things
15:31 - right
15:32 - but this point it would be in finite
15:34 - loop why so
15:36 - because you have terminated this for
15:37 - loop and this would not be considered as
15:39 - part of this loop
15:42 - so
15:44 - i plus plus j plus plus would not be
15:46 - executed
15:48 - right now j value becomes zero always
15:51 - and condition would always be true yeah
15:53 - it will not print anything on the screen
15:55 - but it would be an infinite loop see let
15:57 - me just show you i hope you are getting
15:58 - my point
16:00 - see
16:01 - it is just running
16:02 - it isn't just running just running
16:05 - but it is not printing anything on the
16:07 - screen
16:08 - because the control is still in this
16:10 - loop
16:12 - right the condition is always true
16:15 - and it is it is not
16:17 - coming out from the loop so that is why
16:19 - it is not printing anything
16:21 - so let me just
16:23 - kill this terminal and see
16:26 - now if if suppose
16:29 - i put
16:31 - j plus plus here
16:33 - only j plus plus here and i plus plus
16:36 - here
16:37 - what output you will get let's try
16:39 - around this and see what we are getting
16:41 - right
16:42 - let's pause the video and you can just
16:44 - try around this and see what output you
16:46 - are getting let me just run this and
16:48 - show you what output you will get here
16:50 - here i is equal to 1 and j is equal to 3
16:54 - why so because i plus plus is in here
16:57 - so this would not be considered as part
16:59 - of this loop body
17:01 - so i would always be 1 i would not be
17:03 - implemented j is only incremented
17:06 - from 0 then 1 then 2 and then 3 becomes
17:09 - then
17:11 - condition will not be true and it will
17:13 - print only j 0 is equal to 1
17:15 - right
17:17 - so i hope you are getting my points and
17:20 - see one more thing if you you do
17:22 - something like this
17:26 - only two semicolon i have told you all
17:28 - the three expressions are optional you
17:30 - can remove this but two semicolons are
17:32 - compulsory
17:34 - just two semicolon it would be an
17:35 - infinite loop because there is no
17:37 - termination condition
17:39 - right let's run this
17:42 - let's run this
17:43 - see it would be an infinite loop in
17:45 - finite loop
17:47 - j
17:48 - is any garbage value because we are not
17:50 - initializing this j and i is
17:53 - 1 so i is also like
17:56 - maybe incrementing or we can we cannot
17:58 - do
17:58 - see i plus plus because you are writing
18:01 - here i plus plus so it is incrementing
18:03 - right but it would be an infinite loop
18:06 - so better to use for loop carefully
18:09 - okay
18:11 - with some proper condition
18:13 - and if i write here something like this
18:15 - like
18:16 - j is equal to
18:17 - 1
18:19 - semicolon
18:21 - i less than equal to
18:24 - 5 semicolon and i plus plus
18:28 - i am printing i and
18:30 - j
18:31 - okay
18:32 - so what output you will get in this case
18:35 - see see it carefully
18:37 - i am initializing here j
18:39 - right
18:41 - so let me just remove this line
18:45 - this initialization i am not
18:46 - initializing i anywhere
18:48 - i am just initializing j
18:51 - so what output you will get here let me
18:52 - just remove this i plus plus also from
18:54 - here okay
18:57 - so now see
19:00 - what output you will get let's run this
19:03 - and show you you will get no output in
19:06 - this case just
19:07 - it will print
19:10 - end of loop end of loop
19:12 - whatever statement you will write out of
19:13 - this loop that would be printed why so
19:15 - because you are you are not initializing
19:17 - i
19:18 - anywhere you are putting condition on i
19:20 - you are putting i plus plus but you know
19:22 - you haven't initialized i so it will
19:23 - give no output right
19:26 - and if i do something like this rather
19:28 - than i plus plus we can also do
19:30 - something like this i plus
19:32 - 2 like
19:33 - i plus equal to 2 and let's initialize
19:37 - this i
19:39 - and i less than equal to suppose 10
19:43 - okay
19:44 - now let us run this
19:46 - and
19:47 - suppose j i am initializing here 9
19:51 - let's run this
19:52 - it will print i one three five seven
19:55 - nine because it is incrementing i by two
19:57 - this time so rather than plus plus or
20:00 - this thing you can do some expression
20:02 - also like i plus
20:03 - equal to two i plus you know you can do
20:06 - i is equal to y divided by 2
20:08 - i is equal to y into 2 this kind of
20:10 - thing you can do
20:12 - okay
20:13 - and i minus minus also you can do like
20:15 - 10 to 1 if you want to print so i is
20:17 - equal to 10
20:19 - and now this time condition would be i
20:21 - greater than
20:23 - equal to
20:24 - 1
20:26 - and this time we will do i
20:29 - minus minus
20:30 - okay
20:31 - suppose we are not printing
20:33 - j
20:35 - we are printing only i
20:38 - fine
20:40 - so let's run this and what it will it
20:42 - will print 109876 something like this so
20:44 - decrement also you can do so here in the
20:47 - condition i am writing something like
20:49 - this i less than equal to 40 logical or
20:51 - operator and j less than 10
20:53 - now these are not two condition
20:56 - we have combined this with logical or
20:58 - operator so this is this will be
20:59 - considered as one condition only right
21:01 - so you know the truth table of logical
21:03 - or if any one is true it would be true
21:06 - right so you just try out this thing
21:09 - first dry run this and see what output
21:11 - you are getting then run this let's run
21:13 - this and show you what output you are
21:15 - getting say this is the thing you will
21:16 - get
21:17 - here
21:21 - okay
21:24 - so now this would be considered as one
21:25 - condition only it's not like that now j
21:27 - less than equal to 10 10 is termination
21:29 - condition only and j i less than equal
21:32 - to 40 is only statement no
21:34 - you have combined this thing this is one
21:36 - condition only right so rather than
21:37 - logical or you can write down here
21:39 - logical and also these kind of
21:41 - expressions these kind of things you can
21:43 - also
21:44 - do with this condition
21:47 - right
21:48 - so i hope every single detail every
21:50 - point about for loop is clear to you
21:51 - guys now my next video will discuss
21:53 - while loop and do while loop so i'll see
21:55 - in the next video till then bye take
21:56 - care

Cleaned transcript:

so in the series of learning c plus plus programming language we are discussing loops in c plus plus in the previous video we have talked about for loop in c the basics and take general syntax what is for loop why we use this and all we have seen with their program right the execution the working of the four loop but it's not like that the way we have discussed in previous video in that way only you can write down four rupees yeah the syntax is that only but you can do some tricky things with that for loop or you can say some properties or four loop we are going to discuss in this video right in many ways you can write down for loop right generally in you know in exam in competitive exams like gate net and interview in y was they ask these type of questions they write down the for loop but they just add a twist in that for loop right which you haven't seen before maybe you think that it will give an error but no that will not give an error that will produce some output but you haven't tried that thing with that for loop because you don't know you have just tried on for loop four then initialization then condition then increment decrement and then body of the loop and that's it but there are multiple ways in which you can write down for loop so that all the things these tricky things what you can do with for loop those things will discuss in this video with the help of programs many examples will be seen on laptop practically we will see all these things right and i'll explain you why you are getting that kind of output and all some assignments also i'll give you right but before that i just want to tell you one thing if you guys are preparing for gate exam or will be preparing for gate exam then there is a great offer going on on an academy unlock 20. you will get twenty percent off on all the gate csit subscriptions but the software is valid you know till today only or you can say today is the last date to get to grab the sofa as you can see on my screen the details of gate csit subscriptions the durations and the current price and what you have to pay right as well as you will get twenty percent open uh that uh on academy light distance learning program you can see the detail on my screen whatever is your branch according to that you can check the detail and you can go for that thing and you can use my code jkl10 to get twenty percent off on all the subscriptions as well as for gay 23as parents they are going to start a new batch from 1st of september this batch will be in both indian hindi and english and also be given to you in english only and the top educator will be copying all the subjects of cs and id in this batch and some special classes will also be conducted discover you know discussing like preparation strategy tips and tricks practice questions numericals along with detailed explanation of all the concepts plus separate doubt solving session would also be conducted so you can you know get your doubts cleared in those separate sessions and see here you will get separate doubt solving sessions as well as uh the notes and live mentorship so i get you can go for this case if you are you know getting these points these are some benefits you will get if you go for an academic courses so uh all the relevant links and details you will get in the description box of this video you can go and check out now let's see for loop see general syntaxes i have told you just write down four here we have expression one semicolon expression two semicolon expression three and we have body of loop right that's it and these three expression all the three expressions are optional means you can write down for loop something like this four semicolon semicolon please note on this thing all three expressions are optional right but these two semicolons are mandatory if you don't write down if you don't put semicolon if you put one semicolon it will give syntax error if you put three semicolon you will get syntax error only two semicolons only two semicolons are mandatory three expressions are optional right now in how many ways what tricky things you can do with this for loop let's discuss all these things all these things uh with the help of programs and i'll show you practical right so this was the example we have taken simply we we have printed in the last video numbers from one to ten okay we are taking this example from 1 to 5 we are printing so header file io stream that header their name space std then in main function we are just taking a variable i name of variable you can take any variable m a b c x y z i j k any variable generally we take i as a loop variable because you can say you know you can consider i is like a girlfriend for this loop so i initialization first i is equal to 1 then condition i less than equal to 5 termination condition and then increment or decrement or you can say update here you can write plus plus i or i plus plus both will work same then we are just printing i right so it will print 1 to 5 right 1 to 5. now see what are some condition you can do what are some you know tricky things you can do with this you can remove this initialization this is completely optional right but if you do not initialize this i then what output you'll get let's run this you will get nothing see it it is going to print nothing because maybe i will it will take any garbage value that would would be the condition would not be 2 at that time so it will not enter into this loop body and that's it so if after this loop body i print end of loop let's see what you will get see let's run this and see it is just printing end of loop because it is not entering into this loop body we are not initializing this so if you initialize the psi here one ways you can initialize this before this for loop rather than here so let's print let's run this and now you it will print one to five right okay initialization is done now uh if i initialize more than one initialization you can do like i is equal to 1 comma j is equal to 0 right but before taking this j you have to declare this j variable right otherwise it will give error okay fine now more than two initialization we have done i and j so you have to separate these initialization with coma not semicolon only two semicolons are allowed in this for loop only comma you can put if you put here semicolon if you separate these initialization with semicolon you will get an error syntax error let's run this and i'll show you what error you will get see uh here you will get an error like expected this before this semicolon so you have to remove this because it will consider these two semicolon as part of this four this is extra right first two are fine but it is giving error in third one but we know that this first semicolon is extra so just put comma here right now simply you can print here i as well as as well as j so if you print i and both j what output you will get c one zero two zero three zero four zero five zero i is one two three four five but j is zero zero zero because we are not incrementing or decrementing j right so more than one initialization also you can do now you can remove this condition this condition is also optional right so you can remove this condition fine we are not putting any condition it will not give any error but the loop would be just think if there is no condition then obviously loop would be in finite loop there is no termination condition so if i run this it will be an infinite loop see it will be an infinite loop okay so i'm going to kill this fine so incrementing it is printing one is incrementing 1 2 3 4 5 like this and j is 0 0 0 0 0 something like this and it is not going to stop so you have to put a condition i less than equal to 5 one more thing more than one condition also you can put now if i put two condition then you have to separate these two condition with comma only comma j less than suppose j less than 3 okay control s now what would be the case maybe you are thinking this loop would print or i don't know what you are thinking just try it out and see what output you are getting or before running just dry run this and see what output you are getting so here also it will give in finite loop why infinite loop let me just run this first and show you the output of this thing see it is still in finite loop and j is still at the last you can see the last digit 0 0 0 0 0 right j is always 0 i is only incrementing but it is still in finite low why so because if you put 2 condition then the last condition the second condition right would be considered as termination condition the first condition i less than equal to five five would be considered as a simple statement no condition if you put three condition i less than equal to five j less less than three suppose comma k less than equal to 10 then k less than equal to 10 would be considered as termination condition this point you need to take care right because comma is like the working of comma is what it will evaluate the first expression discard the value then second expression discard the value then third discard the value something like this i have discussed the working of coma operator you can check out that video right in the side button so same way it will discard the first value it will it will evaluate this one but i less than equal to five it would discard this like it will consider it as a statement only and the second one j less than five j less than three that will be considered as termination condition and you are not incrementing or decrementing j so j is always 0 the condition is always true so it is infinite loop now if i put here comma like j plus plus yeah at this time you will get c what output you will get here 1 0 2 1 3 2 right as soon as j value becomes 3 condition is not true so it is going to stop yeah i value is still 3 only and i value is less than equal to 5 so it can print four and five but it is not printing four and five because j value is the termination condition the condition is j less than three so national j as soon as j becomes three it is going to stop same you can put more than one condition with separation with coma and the last condition would be you know act as a termination condition if you do not put any condition it would be infinite loop same here also you can put more than one or two incremental decrement or update expression separated with comma right one more thing what if i put semicolon here at the last of this i sorry this four loop means you are terminating this for loop maybe you will think it will give error but it will not give any error so what output it will give c at the last it is printing 3 and 2 because once j value becomes 3 it will check the condition i value becomes 4 j value becomes 3 keep this thing in your mind i value becomes 4 j value becomes 3 in the memory already updated and after that condition would be checked 3 less than 3 not true so it will exit from this for loop but still in memory i value is what 4 and j value is 3 okay you got this point now let's run this let's run this code and see you are getting 4 and 3 it's not 43 i value is 4 and j value is 3 let me just do this things i equal 2 and will print i and then some space then j equal to let me just format this thing a little bit and then we print j now you will get it better see i value is 4 j value is 3 yeah you are putting a semicolon in for loop that is why this for loop you have terminated this for loop now this would not be considered as the loop body it would be considered as simply statement as a part of the program not part of low body keep this thing in your mind now yeah for loop will execute see first of all i value becomes one j is zero condition true condition true obviously one condition would be checked j less than three condition true i plus plus j plus plus i becomes two j becomes one condition true but will not enter into this loop body because you have terminated this for loop so simply i plus plus j plus plus will be executed now i becomes 1 j becomes i becomes 2 j becomes 1 condition would be checked again j less than 3 yes condition 2 again plus plus again condition would be checked see this was the case ah 1 0 at first time ah then it was 2 1 then it becomes 3 2 but it is not printing at this point of time because you have terminated this for loop now after that i value becomes four j value becomes three in the memory already updated i value becomes four j value becomes three now check the condition is the condition true j less than three less than three no this would be the termination condition so now exit from this for loop now exit from for loop means this statement is now not part of this loop body it is part of the program so it will execute this statement now so at this point of time i value is in the memory i value is 4 and j value is 3 so it is printing only one thing so these are some tricky things we can do with this loops right but if i put this j plus plus here j plus plus this you can also do increment decrement or this update kind of thing you can put in this loop body rather than here rather than here i plus plus and as well as j plus plus you can put here both the things right but this point it would be in finite loop why so because you have terminated this for loop and this would not be considered as part of this loop so i plus plus j plus plus would not be executed right now j value becomes zero always and condition would always be true yeah it will not print anything on the screen but it would be an infinite loop see let me just show you i hope you are getting my point see it is just running it isn't just running just running but it is not printing anything on the screen because the control is still in this loop right the condition is always true and it is it is not coming out from the loop so that is why it is not printing anything so let me just kill this terminal and see now if if suppose i put j plus plus here only j plus plus here and i plus plus here what output you will get let's try around this and see what we are getting right let's pause the video and you can just try around this and see what output you are getting let me just run this and show you what output you will get here here i is equal to 1 and j is equal to 3 why so because i plus plus is in here so this would not be considered as part of this loop body so i would always be 1 i would not be implemented j is only incremented from 0 then 1 then 2 and then 3 becomes then condition will not be true and it will print only j 0 is equal to 1 right so i hope you are getting my points and see one more thing if you you do something like this only two semicolon i have told you all the three expressions are optional you can remove this but two semicolons are compulsory just two semicolon it would be an infinite loop because there is no termination condition right let's run this let's run this see it would be an infinite loop in finite loop j is any garbage value because we are not initializing this j and i is 1 so i is also like maybe incrementing or we can we cannot do see i plus plus because you are writing here i plus plus so it is incrementing right but it would be an infinite loop so better to use for loop carefully okay with some proper condition and if i write here something like this like j is equal to 1 semicolon i less than equal to 5 semicolon and i plus plus i am printing i and j okay so what output you will get in this case see see it carefully i am initializing here j right so let me just remove this line this initialization i am not initializing i anywhere i am just initializing j so what output you will get here let me just remove this i plus plus also from here okay so now see what output you will get let's run this and show you you will get no output in this case just it will print end of loop end of loop whatever statement you will write out of this loop that would be printed why so because you are you are not initializing i anywhere you are putting condition on i you are putting i plus plus but you know you haven't initialized i so it will give no output right and if i do something like this rather than i plus plus we can also do something like this i plus 2 like i plus equal to 2 and let's initialize this i and i less than equal to suppose 10 okay now let us run this and suppose j i am initializing here 9 let's run this it will print i one three five seven nine because it is incrementing i by two this time so rather than plus plus or this thing you can do some expression also like i plus equal to two i plus you know you can do i is equal to y divided by 2 i is equal to y into 2 this kind of thing you can do okay and i minus minus also you can do like 10 to 1 if you want to print so i is equal to 10 and now this time condition would be i greater than equal to 1 and this time we will do i minus minus okay suppose we are not printing j we are printing only i fine so let's run this and what it will it will print 109876 something like this so decrement also you can do so here in the condition i am writing something like this i less than equal to 40 logical or operator and j less than 10 now these are not two condition we have combined this with logical or operator so this is this will be considered as one condition only right so you know the truth table of logical or if any one is true it would be true right so you just try out this thing first dry run this and see what output you are getting then run this let's run this and show you what output you are getting say this is the thing you will get here okay so now this would be considered as one condition only it's not like that now j less than equal to 10 10 is termination condition only and j i less than equal to 40 is only statement no you have combined this thing this is one condition only right so rather than logical or you can write down here logical and also these kind of expressions these kind of things you can also do with this condition right so i hope every single detail every point about for loop is clear to you guys now my next video will discuss while loop and do while loop so i'll see in the next video till then bye take care
