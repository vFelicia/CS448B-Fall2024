With timestamps:

00:00 - in the series of learning programming in
00:02 - c today i'm going to talk about features
00:04 - of c language in the previous videos i
00:06 - have discussed introduction to
00:08 - programming like what is need of
00:10 - programming why do you write programs
00:12 - and some basic points about c language
00:14 - also you can say introduction to c
00:16 - language low level languages and high
00:18 - level languages and language translators
00:20 - assemblers compilers and interpreter
00:23 - right so in this video i am going to
00:25 - talk about some important features of c
00:27 - language so you can also write down
00:29 - these points and
00:30 - it's like you can make your own notes
00:32 - thank you so now let us discuss some
00:34 - features of c language very first is it
00:36 - is high level language why so because
00:38 - here you just focus on writing programs
00:41 - you don't need to focus on the low level
00:42 - details on the machine code details like
00:44 - you don't need to focus on the
00:46 - specifications for the architecture of
00:47 - the cpu the computer you are using
00:51 - right you just focus on your writing
00:53 - programs and it's more of like english
00:55 - language high level language it's like
00:57 - you use the english words the alphabets
00:59 - and mathematical notations and
01:01 - everything you use you are not
01:03 - concerning about the low level details
01:04 - what is behind the scene and it is you
01:07 - can say understandable by humans so that
01:09 - is why it is known as high level
01:10 - language because here you focus on more
01:13 - what variables constant data types and
01:17 - expression evaluation mathematical
01:19 - notations and everything rather than
01:20 - focusing on the registers and the low
01:23 - level details of hardware right so it is
01:25 - high level language
01:27 - second is
01:28 - it is you can say small language why i'm
01:30 - saying small language because
01:32 - it's having only like 32 keywords
01:35 - and other languages like c plus plus and
01:37 - java they are having more keywords to
01:40 - use so it is small language you can
01:42 - easily learn this language having just
01:43 - only 32 keywords
01:45 - and that is why it is easy to learn
01:48 - right third is
01:49 - it is you can say core language
01:52 - and many other languages are dependent
01:54 - on this language c plus plus and java
01:56 - these languages are dependent on c
01:58 - language so it is a core language like
02:00 - the c plus plus in java these languages
02:03 - drive features from c language right
02:05 - next is it is portable the program you
02:09 - write in c language you can run that
02:10 - program on different machine also it is
02:12 - not dependent on machine right or maybe
02:15 - sometimes you need to do
02:17 - little modifications to run that program
02:19 - but programs are portable next is it is
02:22 - having
02:23 - uh building functions and operators and
02:26 - those functions you can use and you can
02:28 - write down any complex programs right
02:31 - built-in functions means these functions
02:33 - are already defined and already been
02:35 - there in the library of that c library
02:37 - right you can directly use those
02:39 - functions you don't need to write
02:41 - the all the code of that function in
02:44 - your program you directly use that
02:46 - function and you can write down any
02:48 - complex program that also will discuss
02:51 - with details when we are going to write
02:52 - programs like these are built-in
02:54 - functions and to use these functions you
02:56 - have to include the slide theory that
02:58 - also will discuss next is
03:00 - it is a structured language why so
03:02 - because the code you can arrange the
03:04 - code you can organize the code in
03:07 - one or more functions right so that is
03:09 - why it is known as structured language
03:11 - next is it supports use of pointers so
03:15 - you can directly access the memory you
03:17 - can directly interact with the memory
03:19 - right the use of pointers also will
03:21 - discuss what are pointers in c
03:23 - but using pointers you can you can the
03:25 - pointers are what they store generally
03:27 - address of a variable so using those
03:30 - pointers you can directly access the
03:32 - memory the memory address of that
03:33 - variable fine next is
03:36 - it is extensible language you can extend
03:39 - this means what does that mean
03:41 - you can
03:42 - add your own function to c libraries c
03:46 - library you can create your own function
03:48 - and you can add that function to c
03:50 - library that is why you can say that it
03:52 - is extensible language you can add your
03:54 - features you can add your functions in
03:56 - that c library next point is
03:59 - compilation and execution of a program
04:01 - is faster as compared to some other
04:02 - languages see in the previous video also
04:04 - i have discussed this is a compiled
04:06 - language so after compilation the code
04:08 - will be generated like object code and
04:10 - then executable file
04:12 - so you can run that executable file and
04:14 - time to execute that compiled code will
04:16 - be very less as compared to the
04:18 - interpreted code so some languages like
04:21 - interpreted languages are there so
04:23 - as compared to those languages the
04:25 - compilation and execution of this
04:27 - language is faster and it is small also
04:29 - like it is having
04:30 - built-in libraries standard libraries
04:32 - built-in functions and operators
04:35 - so that is why the compilation and
04:37 - execution is faster in this language
04:40 - support features of dynamic memory
04:41 - allocation
04:43 - you can
04:44 - free the memory at any time by calling
04:46 - what function free
04:51 - frw you can call this function at any
04:54 - time and you can free the located memory
04:56 - that also will discuss how you can call
04:58 - this function in a program
05:00 - and next is
05:01 - it supports modular programming or
05:03 - rather than writing in a separate uh
05:05 - point i can write down here also it is
05:07 - structured language and it supports
05:08 - modular programming or you can say it is
05:10 - a modular programming language now what
05:12 - does that mean
05:13 - like you can
05:15 - break your code into different different
05:17 - fragments code fragments or you can say
05:19 - functions it support functions suppose
05:22 - if i am going to write a program to find
05:24 - out area of square
05:26 - rectangle and
05:28 - triangle so rather than writing a
05:30 - complete program as a whole story you
05:32 - can divide this program into three
05:34 - functions
05:35 - one function for area of triangle for
05:37 - rectangle second and third is for circle
05:40 - so that it's look more organized and the
05:43 - chances of errors are also less so the
05:46 - programs will look
05:47 - more appealing and organized so it
05:50 - supports modular programming next is
05:53 - it is case sensitive
05:55 - means you have to take care of these
05:57 - things
05:58 - here if you write if you write a and a
06:02 - these are different these are having
06:03 - different meanings it is case sensitive
06:06 - language it reads lowercase letters and
06:08 - uppercase letters differently right see
06:11 - in dynamic memory allocation you can
06:13 - also add this point like you can
06:15 - allocate memory at runtime using malloc
06:18 - function catalog function you can free
06:20 - memory at any time at runtime also like
06:23 - you can change the memory allocation of
06:24 - any data structure at runtime only using
06:26 - those function malloc and callow that
06:29 - also will discuss
06:30 - when we will write programs
06:32 - and next you can say it is used to
06:34 - develop and operate embedded systems
06:37 - that is why it is also known as system
06:39 - programming language
06:40 - see like your
06:42 - systems like your fridge your microwave
06:44 - behind that the programming is done that
06:47 - these electronic devices the programming
06:49 - or the software is done and that is
06:51 - written in c language so you can say c
06:53 - is one of the most popular language
06:56 - for system programming for for embedded
06:59 - systems that is why it is very popular
07:01 - language
07:02 - see java and python and c plus plus are
07:05 - very popular language but still
07:07 - c is having its own space
07:10 - because of these features it is not out
07:12 - of scope it is still in the market but
07:15 - see the object file of c language is
07:17 - what it is platform dependent like when
07:20 - you are writing a program in windows you
07:22 - compile that program and object file has
07:24 - been created
07:25 - fine
07:26 - so you cannot run that
07:29 - file on mac
07:30 - and linux it is dependent on platform
07:34 - windows and when you create a program in
07:36 - on linux or you can say in mac
07:39 - operating system and you compile that
07:40 - program and then object file has been
07:42 - created that object file you cannot run
07:43 - that file on windows and linux if you
07:46 - are compiling that file on mac operating
07:48 - system so it is you can say platform
07:51 - dependent language see because operating
07:53 - systems are also having their own
07:55 - extension of files like executable file
07:58 - so windows are having extension dot exe
08:01 - and for mac i think it is dot dmg
08:06 - so these extensions are different that
08:08 - is why this is what platform dependent
08:10 - language you cannot run object file of
08:13 - one
08:15 - written in one system to another system
08:17 - to another operating system so i think
08:19 - these are some features of c language in
08:22 - next video we are going to discuss
08:24 - structure of a c program and then the
08:26 - compilation process of a c program so
08:28 - now else in the next video till then bye
08:30 - take

Cleaned transcript:

in the series of learning programming in c today i'm going to talk about features of c language in the previous videos i have discussed introduction to programming like what is need of programming why do you write programs and some basic points about c language also you can say introduction to c language low level languages and high level languages and language translators assemblers compilers and interpreter right so in this video i am going to talk about some important features of c language so you can also write down these points and it's like you can make your own notes thank you so now let us discuss some features of c language very first is it is high level language why so because here you just focus on writing programs you don't need to focus on the low level details on the machine code details like you don't need to focus on the specifications for the architecture of the cpu the computer you are using right you just focus on your writing programs and it's more of like english language high level language it's like you use the english words the alphabets and mathematical notations and everything you use you are not concerning about the low level details what is behind the scene and it is you can say understandable by humans so that is why it is known as high level language because here you focus on more what variables constant data types and expression evaluation mathematical notations and everything rather than focusing on the registers and the low level details of hardware right so it is high level language second is it is you can say small language why i'm saying small language because it's having only like 32 keywords and other languages like c plus plus and java they are having more keywords to use so it is small language you can easily learn this language having just only 32 keywords and that is why it is easy to learn right third is it is you can say core language and many other languages are dependent on this language c plus plus and java these languages are dependent on c language so it is a core language like the c plus plus in java these languages drive features from c language right next is it is portable the program you write in c language you can run that program on different machine also it is not dependent on machine right or maybe sometimes you need to do little modifications to run that program but programs are portable next is it is having uh building functions and operators and those functions you can use and you can write down any complex programs right builtin functions means these functions are already defined and already been there in the library of that c library right you can directly use those functions you don't need to write the all the code of that function in your program you directly use that function and you can write down any complex program that also will discuss with details when we are going to write programs like these are builtin functions and to use these functions you have to include the slide theory that also will discuss next is it is a structured language why so because the code you can arrange the code you can organize the code in one or more functions right so that is why it is known as structured language next is it supports use of pointers so you can directly access the memory you can directly interact with the memory right the use of pointers also will discuss what are pointers in c but using pointers you can you can the pointers are what they store generally address of a variable so using those pointers you can directly access the memory the memory address of that variable fine next is it is extensible language you can extend this means what does that mean you can add your own function to c libraries c library you can create your own function and you can add that function to c library that is why you can say that it is extensible language you can add your features you can add your functions in that c library next point is compilation and execution of a program is faster as compared to some other languages see in the previous video also i have discussed this is a compiled language so after compilation the code will be generated like object code and then executable file so you can run that executable file and time to execute that compiled code will be very less as compared to the interpreted code so some languages like interpreted languages are there so as compared to those languages the compilation and execution of this language is faster and it is small also like it is having builtin libraries standard libraries builtin functions and operators so that is why the compilation and execution is faster in this language support features of dynamic memory allocation you can free the memory at any time by calling what function free frw you can call this function at any time and you can free the located memory that also will discuss how you can call this function in a program and next is it supports modular programming or rather than writing in a separate uh point i can write down here also it is structured language and it supports modular programming or you can say it is a modular programming language now what does that mean like you can break your code into different different fragments code fragments or you can say functions it support functions suppose if i am going to write a program to find out area of square rectangle and triangle so rather than writing a complete program as a whole story you can divide this program into three functions one function for area of triangle for rectangle second and third is for circle so that it's look more organized and the chances of errors are also less so the programs will look more appealing and organized so it supports modular programming next is it is case sensitive means you have to take care of these things here if you write if you write a and a these are different these are having different meanings it is case sensitive language it reads lowercase letters and uppercase letters differently right see in dynamic memory allocation you can also add this point like you can allocate memory at runtime using malloc function catalog function you can free memory at any time at runtime also like you can change the memory allocation of any data structure at runtime only using those function malloc and callow that also will discuss when we will write programs and next you can say it is used to develop and operate embedded systems that is why it is also known as system programming language see like your systems like your fridge your microwave behind that the programming is done that these electronic devices the programming or the software is done and that is written in c language so you can say c is one of the most popular language for system programming for for embedded systems that is why it is very popular language see java and python and c plus plus are very popular language but still c is having its own space because of these features it is not out of scope it is still in the market but see the object file of c language is what it is platform dependent like when you are writing a program in windows you compile that program and object file has been created fine so you cannot run that file on mac and linux it is dependent on platform windows and when you create a program in on linux or you can say in mac operating system and you compile that program and then object file has been created that object file you cannot run that file on windows and linux if you are compiling that file on mac operating system so it is you can say platform dependent language see because operating systems are also having their own extension of files like executable file so windows are having extension dot exe and for mac i think it is dot dmg so these extensions are different that is why this is what platform dependent language you cannot run object file of one written in one system to another system to another operating system so i think these are some features of c language in next video we are going to discuss structure of a c program and then the compilation process of a c program so now else in the next video till then bye take
