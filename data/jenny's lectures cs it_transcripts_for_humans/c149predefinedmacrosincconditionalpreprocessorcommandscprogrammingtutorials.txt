With timestamps:

00:00 - so in the previous video we have
00:01 - discussed about macros and C macro is
00:04 - what it's you can say a code or you can
00:06 - say it's a segment of code which would
00:08 - be replaced by its value and we have
00:11 - used we have discussed two pre-processor
00:14 - commands to Define macros hash Define
00:17 - one is Hash Define to Define macro and
00:19 - one is Hash UND to undefine the macro
00:23 - you have defined using hash Define right
00:26 - now everything about macros like why we
00:28 - use macros to Define a constant to
00:30 - Define pre-processor variables and
00:33 - obviously to Define some functions also
00:35 - macro can be used as function that also
00:38 - we have discussed how to use those thing
00:40 - with the help of two or three programs
00:42 - in the previous video right now there
00:44 - are some predefined macros in C that you
00:48 - can use and some you can say conditional
00:52 - macros are also there no some uh
00:54 - pre-processor commands are there which
00:57 - are you can say conditional commands
00:59 - like if else we use if else in our
01:01 - program right to check some
01:03 - condition same we have some macros like
01:06 - hash if hash else those also we'll
01:09 - discuss in this video right and all the
01:11 - predefined macros we'll see with the
01:13 - help of a program I'll show you on my
01:15 - laptop right now let's see what are some
01:18 - predefined macros in C see how to define
01:20 - our own macro that we have discussed in
01:22 - previous video using hash
01:24 - Define and using hash undef you can
01:27 - undefine that macro
01:30 - but in see we have some predefined
01:31 - macros also that you can directly use
01:34 - fine now what are those macros see one
01:37 - is
01:39 - date in capital letter and before and
01:41 - after two underscore two underscore are
01:45 - there another is time one is file line
01:51 - and one is stdc to check if the see
01:54 - compiler is according to NSI standard or
01:55 - not now how to use these macros let me
01:58 - just show you that example how to write
02:00 - this if you want to print the current
02:04 - date according to your system from your
02:07 - system it will fatch the date so
02:09 - directly you can use
02:11 - like date and percentage s it will print
02:16 - it as a character literal or you can say
02:20 - as a string literal it will print date
02:23 - and after comma directly Used 2
02:26 - underscore then date 2 underscore and
02:28 - semicolon so
02:30 - in which format it will print the date
02:32 - this format month then date and then
02:38 - year right so suppose today is 25th of
02:43 - April so it will print like AP then 25th
02:47 - and then
02:48 - 2022 now if you want to print the
02:51 - current time you can simply
02:53 - write the time also it will print as a
02:56 - string literal so percentage s 2core
02:59 - time time 2 underscore that's it and it
03:02 - will print time in which format hour
03:05 - minute and second in this format same if
03:09 - you want to print like
03:12 - file the name of this file we have
03:16 - obviously we save this file file name do
03:19 - c suppose we have saved it
03:22 - using the file name
03:26 - predefined macro do c so now it will
03:31 - just you simply write 2core f file 2core
03:35 - and that's it it will it will print
03:36 - predefined macro doc the file name if
03:39 - you want to print the line number simply
03:42 - you can
03:43 - write line percentage D line number is
03:47 - integer constant l i n
03:50 - e it will print the line number of this
03:53 - line right and how to use that
03:58 - macro
03:59 - [Music]
04:01 - ANSI percentage d s
04:05 - DC it will print like stdc if your C
04:10 - compiler is according to NS standard or
04:12 - not so it will print true or false
04:15 - that's why we are using percentage D it
04:18 - will like return one means true yes your
04:20 - compiler is according to nsic standard
04:24 - fine so these are some predefined macros
04:27 - now let me show you the output how to
04:28 - use these these macros in our program
04:31 - and some macros are other pre-processor
04:34 - commands are like
04:35 - uh hash if
04:39 - def
04:41 - hash and if sorry
04:45 - if else hash L if it's else if
04:52 - right see these hash if else if def
04:57 - these are something like we use if else
04:59 - statement in your program to check the
05:01 - condition but the difference is what
05:04 - these condition are tested after or you
05:07 - can say during the execution of the
05:08 - program right but if you use these
05:11 - conditional directives or macros then
05:14 - these are you know used to include or to
05:18 - skip a block of code based on the
05:22 - condition before the execution or even
05:25 - before the compilation of that
05:27 - program right suppose this is how we can
05:31 - use it like hash if Def and I'm using
05:35 - here a macro simply you can say a macro
05:39 - and here you can use some
05:41 - code
05:43 - and and if right
05:47 - so if def means this this will return
05:51 - true if this macro has already been
05:54 - defined defined right then it will
05:58 - return true and then only we are going
06:01 - to enter into this these statements so
06:03 - it will tell the pre-processor that just
06:06 - to process these lines or to include
06:09 - these lines in a program if in a source
06:13 - code if this macro is defined otherwise
06:17 - don't include this code in your source
06:20 - code right I hope you are getting my
06:23 - point fine same if also if to check some
06:27 - condition here you can write some
06:28 - expression if this expression is true
06:30 - then only we are going to enter into
06:32 - this if and after that you can write
06:34 - down else and one is
06:36 - Hash if
06:39 - unde it will return true if the macro
06:42 - suppose I am here using macro if this
06:45 - macro is not defined then it will return
06:48 - true so if I write here some
06:51 - code right
06:54 - then this code would be executed if this
06:57 - macro is not being defined already
06:59 - in this case this code would be
07:02 - processed if this macro is already been
07:04 - defined if defined if not defined if not
07:07 - defined then it will return true if
07:10 - defined then it will return it will
07:12 - return true if it is defined right so
07:15 - these are some you can say conditional
07:17 - directives we can use right you can
07:19 - instruct the pre-processor also whether
07:22 - to include this particular block of code
07:24 - in a program or not while you are
07:27 - expanding the macro right
07:31 - and it will be done based on the
07:32 - condition you give right now let me just
07:35 - show you practical of these things how
07:37 - you can use this thing in our program so
07:39 - I have already created a file like
07:41 - predefined macro doc right and this is
07:44 - the program just simply we are using
07:46 - there's no rocket science in this
07:48 - program like so I have already written
07:50 - this program just to save the time print
07:52 - F you have printing date percentage s it
07:55 - will print the date in as a string
07:57 - literal in which format that I have told
07:59 - you then time simply use this is these
08:02 - are two underscore two underscore and
08:06 - after date also two underscore this you
08:10 - need to take care right same file then
08:13 - line number it will print and it will
08:14 - print SD stdc according to the NSI
08:19 - standard note now let me just run this
08:22 - and show you what output you will get
08:24 - here
08:25 - see see date is APR
08:29 - 25th 2022 time
08:33 - is 13 53 42
08:36 - like 13 means 1 it's 153 file name is
08:40 - predefined macro do c line number is the
08:43 - line number is eight you can see the
08:45 - line number is eight and ANSI standard
08:49 - this is yes the compiler is according to
08:52 - ANSI standard so these are some
08:54 - predefined micros so you know C is very
08:56 - powerful language what you can do with
08:58 - the help of C as you can see here right
09:01 - so if you have any doubt like how to use
09:02 - these predefined macros or these
09:04 - conditional macros you can you can write
09:05 - down in comment section so now that is
09:08 - it for this video now I'll see you now
09:09 - in the next video till then bye-bye take
09:11 - care

Cleaned transcript:

so in the previous video we have discussed about macros and C macro is what it's you can say a code or you can say it's a segment of code which would be replaced by its value and we have used we have discussed two preprocessor commands to Define macros hash Define one is Hash Define to Define macro and one is Hash UND to undefine the macro you have defined using hash Define right now everything about macros like why we use macros to Define a constant to Define preprocessor variables and obviously to Define some functions also macro can be used as function that also we have discussed how to use those thing with the help of two or three programs in the previous video right now there are some predefined macros in C that you can use and some you can say conditional macros are also there no some uh preprocessor commands are there which are you can say conditional commands like if else we use if else in our program right to check some condition same we have some macros like hash if hash else those also we'll discuss in this video right and all the predefined macros we'll see with the help of a program I'll show you on my laptop right now let's see what are some predefined macros in C see how to define our own macro that we have discussed in previous video using hash Define and using hash undef you can undefine that macro but in see we have some predefined macros also that you can directly use fine now what are those macros see one is date in capital letter and before and after two underscore two underscore are there another is time one is file line and one is stdc to check if the see compiler is according to NSI standard or not now how to use these macros let me just show you that example how to write this if you want to print the current date according to your system from your system it will fatch the date so directly you can use like date and percentage s it will print it as a character literal or you can say as a string literal it will print date and after comma directly Used 2 underscore then date 2 underscore and semicolon so in which format it will print the date this format month then date and then year right so suppose today is 25th of April so it will print like AP then 25th and then 2022 now if you want to print the current time you can simply write the time also it will print as a string literal so percentage s 2core time time 2 underscore that's it and it will print time in which format hour minute and second in this format same if you want to print like file the name of this file we have obviously we save this file file name do c suppose we have saved it using the file name predefined macro do c so now it will just you simply write 2core f file 2core and that's it it will it will print predefined macro doc the file name if you want to print the line number simply you can write line percentage D line number is integer constant l i n e it will print the line number of this line right and how to use that macro ANSI percentage d s DC it will print like stdc if your C compiler is according to NS standard or not so it will print true or false that's why we are using percentage D it will like return one means true yes your compiler is according to nsic standard fine so these are some predefined macros now let me show you the output how to use these these macros in our program and some macros are other preprocessor commands are like uh hash if def hash and if sorry if else hash L if it's else if right see these hash if else if def these are something like we use if else statement in your program to check the condition but the difference is what these condition are tested after or you can say during the execution of the program right but if you use these conditional directives or macros then these are you know used to include or to skip a block of code based on the condition before the execution or even before the compilation of that program right suppose this is how we can use it like hash if Def and I'm using here a macro simply you can say a macro and here you can use some code and and if right so if def means this this will return true if this macro has already been defined defined right then it will return true and then only we are going to enter into this these statements so it will tell the preprocessor that just to process these lines or to include these lines in a program if in a source code if this macro is defined otherwise don't include this code in your source code right I hope you are getting my point fine same if also if to check some condition here you can write some expression if this expression is true then only we are going to enter into this if and after that you can write down else and one is Hash if unde it will return true if the macro suppose I am here using macro if this macro is not defined then it will return true so if I write here some code right then this code would be executed if this macro is not being defined already in this case this code would be processed if this macro is already been defined if defined if not defined if not defined then it will return true if defined then it will return it will return true if it is defined right so these are some you can say conditional directives we can use right you can instruct the preprocessor also whether to include this particular block of code in a program or not while you are expanding the macro right and it will be done based on the condition you give right now let me just show you practical of these things how you can use this thing in our program so I have already created a file like predefined macro doc right and this is the program just simply we are using there's no rocket science in this program like so I have already written this program just to save the time print F you have printing date percentage s it will print the date in as a string literal in which format that I have told you then time simply use this is these are two underscore two underscore and after date also two underscore this you need to take care right same file then line number it will print and it will print SD stdc according to the NSI standard note now let me just run this and show you what output you will get here see see date is APR 25th 2022 time is 13 53 42 like 13 means 1 it's 153 file name is predefined macro do c line number is the line number is eight you can see the line number is eight and ANSI standard this is yes the compiler is according to ANSI standard so these are some predefined micros so you know C is very powerful language what you can do with the help of C as you can see here right so if you have any doubt like how to use these predefined macros or these conditional macros you can you can write down in comment section so now that is it for this video now I'll see you now in the next video till then byebye take care
