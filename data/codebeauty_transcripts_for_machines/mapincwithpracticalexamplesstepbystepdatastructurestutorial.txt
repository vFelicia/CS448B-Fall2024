hi everyone and welcome to my channel in this video i want to talk about a special type of collection that stores key value pairs of data and in c plus that type of collection is called map if you're coming from some other programming language like java javascript c sharp python and so on in those languages this type of collection exists as well but it is called dictionary now one interesting fact is that i never learned about this type of collection in university but once i started working this became one of the most common data collections that i use alongside lists and arrays and as you will see map collection can be very useful in some situations and if you watch this video until the end you are going to understand how and when to use this type of collection so now i'm going to show you the app that we are going to build but first i need to teach you about map data collection so a map data collection stores elements in key value pairs so each element is called pair and it consists of key and value and the best example of this is a dictionary so let's say that you are learning german language and you are building a dictionary so english german dictionary and you have a key which is the word strawberry for example so that is your key and then the value is something that you want to associate with that key and in this situation that is going to be german translation of the word strawberry which is the artbere it's like um a berry from the earth so that's a german word for strawberry so that means that you are associating a word with its translation so you are associating string with another string now let's use another example let's say that you also want to associate a translation for orange so your key is going to be english word for orange and then a value is going to be the translation for that word but in german you have two words for orange the orange and the aflazine which means that you are associating a word with a list of translations so you are associating one string with list of strings so what does this mean in our situation it means that the key is always simple data type the key is always something like um a number an integer a string or something like that but the value can also be a complex data type and in this situation the value is list of strings but it also can be a structure it can be another map or something like that whatever you need so let me show you how this works in code so let's build our dictionary application and let's first see how we can do that for the simple example where we are associating a string to another string and then we will see how to do that for complex data types later so since we are going to work with map collection i first need to say include map like this and then also since we will be using string i will also say include string like this and one more thing that i want to do is using namespace std because i will be using map and string and c out and all of those belong to std namespace so i don't want to say every time scd map std string stdc out and so on so now that we have added these let's see how we are going to create our dictionary how we are going to create our map that associates string with another string so you say map and then inside these angled brackets you put the type of your key which is going to be string and then the type of your value which is also going to be string okay so we are associating string with another string and we are going to call this map my dictionary like this so now the question is how do you insert elements into this dictionary and that is very simple so you say my dictionary dot insert okay and then inside parentheses you say that you want to insert a pair of string key and then string value and you close these angled brackets and then inside parentheses you will provide values for your first string which is the key so let's say that will be the word apple okay and then inside another quotation marks you will provide the value which is this string here so here will come the translation for the word apple which is the apfel like this okay and let's do a couple more fruits let's copy this and here let's say for example banana and then here we are going to say the banana okay so again you say my dictionary dot insert you say that you want to insert a pair of string key and string value and here you provide the key and you provide the value okay so i will add a couple more fruits and then i i'll be back so here i added orange and strawberry and as you can see i added both translations for orange so both the orange and the apple zine as one string because here i said that my dictionary is going to consist of string strings so key value pairs are going to be string and another string not string and list of strings but later i'm going to show you that as well so make sure to watch the entire video so now the question is how can i print this dictionary how can i see it in my application so let's do that so it is very easy to print it for that we are going to use four loops so i will say for auto so for every pair in my dictionary what i want to do is i want to say c out pair dot first which is key and then let's put a little separation like this and then i want to say pair dot second and add end line so i am printing the first part of my pair which is the key and then a little separation and then i'm printing the second part of my pair which is the translation so the value and i can even even remove these i don't need them so if i run the program let's see what is going to happen okay so apple banana orange and strawberry perfect now one very interesting thing that i didn't mention and it also stayed hidden because of the way that i wrote my application but it is very important characteristic of map collection is that it orders elements by key in ascending order which means that if your key is a string then the elements are going to be ordered alphabetically so a b c d and so on and then if your key is a number it is going to order them in ascending order again one two three four five and so on so in order to demonstrate and prove this let's close the program and let's mix these a little bit let's say that first we add for example strawberry and then we add orange and then apple and banana so what do you expect to see in the console if i run my program again let me know in the comments so if i run the program again as you can see again we have elements ordered alphabetically so first is apple and then banana and then orange and then strawberry even though i first added strawberry and then orange and then apple and banana so that is one very important characteristic of map collection so again it orders elements in ascending order or alphabetically and that works very fast and it works out of the box so you don't have to do anything it is just available for you to use so something else that i want to show you is if for any reason you don't want your elements to be ordered alphabetically or in ascending order you can use a different type of collection which is called unordered map so in order to use that type of collection you need to say include an ordered map so like this and then here the type is going to be unordered map as well so if i run my program now as you can see first is strawberry and then orange and then apple and banana so they are written in the order that we added them to our dictionary okay so now i'm going to return this to ordered map so just map like this and let's continue with some more examples so something else that you should know is how can you access a specific element so in order to access a specific element you use its key and you use square brackets so let's say for example that you want to access this strawberry element so you say my dictionary and then inside these square brackets you put the key so let me copy it so that i don't make a typo like this and one very important thing is that these keys have to be unique so don't add pairs that have a key that already exists in the dictionary they have to be unique values don't have to be unique but keys do have to be unique okay so you say please access inside my dictionary a pair that has this key strawberry and then let's say for example that you want to set its value so that it says d so capital letter d d erdbere like this okay so if i run my program now let's see what is going to happen okay and as you can see this part here has been changed so here we have lowercase d and then here we have capital letter d so that is how you access and change your element of a map another useful thing that you should know is that there is a function called size which returns the size of your collection so you can say c out my dictionary dot size and then let's put end line so if i run the program you will get the size of this collection which is four and as you can see here we have four elements now what else well let's put here another function which is called clear and it is used to delete all the elements from your collection so you say my dictionary dot clear okay so if i run the program now as you can see the dictionary contains zero elements because we cleared it here and then we also don't have any output after this zero okay so those are some functionalities that you should know about there are a few others as well but these are used most often now another thing that i promised is to show you how you can have complex data type as your value so key value pair is going to be simple data type and then complex data type so let me show you that so i deleted all of the code except for this part here since we don't need that code because i want to show you a different example so now we are going to build a pokedex and if you don't know what a pokedex is we are basically going to associate the name of a pokemon with the list of all of the attacks that the pokemon has so since we are going to be working with lists let's say here include list that is the first thing so that we don't forget it okay so let's create our pokedex so let's create a map collection so i will say map and as i said we want to associate the name of a pokemon so a string with the list of the attacks that the pokemon has so we are associating string with list of strings so i will say please associate string with list of string like this okay and make sure that you put both of these angled brackets because if you don't you are going to get an error okay so this is going to be the type of our map and then the name will be pokedex like this okay so how do you add elements into this pokedex well we are going to do it step by step so let's first create a list of string which is going to be called let's say for example pikachu attacks like this and i will initialize that list so here i will put all of the attacks that pikachu has so let me google it very quickly so here are the attacks of pikachu thundershock tail whip and quick attack all inside quotation marks and separated by comma sign okay so let's create two more pokemons let's say for example charmander and let's say chicorita like this and i will google attacks for these two pokemons as well so i'll be back in a moment so here is our information for charmander we have flamethrower and scary face and this scary face it's a real attack this is the information from google so it must be correct and then for chikorita we have razor leaf and poison powder okay and these three are my three favorite pokemons and let me know in the comment section i would love to read which are your favorites so that i don't feel like a weird 26 year old who still has a favorite pokemon so how can we associate these attacks so the list of strings with the name of that pokemon how can we add that to our pokedex let's do that next so we say pokedex and then insert like this so what do we want to insert inside this map called pokedex well we want to insert a pair of string and then the second is list of string like this and again make sure that you add two of these because the first one is for your pair and then the second one is for this string type okay so we are associating a string with list of strings and then inside these parentheses we will provide our key and our value so the key is pikachu that is first okay and capital letter p and then the value will be a list of strings called pikachu attacks okay and then let's copy this two more times so the second pokemon is going to be charmander okay and paste it here like this and then we are going to associate that with a list called charmander attacks and i will do the same for the third pokemon so chikorita and then we are associating this with chikurita attacks okay so how can we print this information to our console let me type that code very quickly and then i will explain how it works so here is the code that i added and as you can see we are using for loop in order to iterate through all the pairs of our pokedex collection so we are iterating through these three pairs that we added that we inserted into our pokedex so the first thing that we do is we print pair dot first which is the key so the name of the pokemon and then we use another for loop in order to iterate through pair dot second which is list of attacks so we print every attack and once we finish that we put an end line and we go again for the next pokemon so if i run this program as you can see we have charmander which is paired at first and then here we have the list of all of the attacks of charmander pokemon and then we put a new line and we go with the next pokemon sochikorita and then the attacks of chikorita and then pikachu and its attacks so that is how you work with complex data types inside your map collection and that is what i wanted to show you in this video so if you enjoyed it please give it a big thumbs up for the youtube algorithm and also share it with your friends who would like to learn programming and you can even learn together because it is always more fun to learn that way and in most situations it is also much easier so thank you very much for watching and if you have any questions or any topic that you would like to see in the future leave that for me in the comment section and i will see you in some other video or you can add me on instagram or twitter because i post more often on those platforms so if you would like to hang out with me more often definitely add me on ig and i will see you in some other video or on some other platform bye