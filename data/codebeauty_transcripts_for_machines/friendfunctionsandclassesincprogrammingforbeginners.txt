hi everyone and welcome to my channel in this video i want to teach you about friend functions and friend classes in c plus so this concept of friendship in programming is actually very similar to friendship in real life so in real life your friends have access to private areas of your life that are inaccessible to other people and this same applies to programming because in objectoriented programming a friend function has access to private and protected members of a class and it can access those private and protected members only because they are in this friendship relationship so in this video you will learn about friend functions and friend classes and you will understand how and when to use those for writing the code we will use visual studio community and i also want to show you one of the best extensions for visual studio it is called visual assist and i will leave a link in the description that you can use in order to download it so what is visual assist it is smart coding assistant and a lot of professional developers use it especially if they are working for example with unreal engine making games or if they are working on large projects with a lot of code in general the reason is because visual assist helps a lot with code completion and then it also gives you smart suggestions when you are refactoring your code it gives you code snippets so that you don't have to type everything manually and then the best thing is that it helps a lot with navigation and searching through the project especially if you're working on a big project that has a lot of code a lot of files and then also it has the option to enhance intellisense and you can customize the appearance of your visual studio like syntax highlighting and things like that so definitely if you want to learn more about visual assist check out the video that i will link here i'll also link it in the description and in that video you will learn about my favorite features of visual assist you will learn how to install it and how it can help you to write better code faster so let's now explain what are friend functions and the best way to explain this is to create a problem and then i'm going to show you how you can use front functions in order to solve that problem so let's do that so let's create a class called equilateral triangle and that is a triangle that has all three sides of the same length so a a a let's say class equilateral triangle okay and i will create a variable of type float i will call it a this variable here represents the length of the side of this triangle let's add couple more variables let's say float circumference okay and let's also say float area okay so these three are going to be private because members of a class are private by default so this here is the same as if you said private explicitly like this okay and then let's create a public member as well so i will say public and here i want to create a setter for this variable here so i will create a method of return type void i will call it set a it will receive a parameter of type float called length okay and i will say that a is equal to length like this and something else that i want to do is i also want to calculate this circumference because i have the length of the side and i also want to calculate the area here inside this setter so i will say circumference is equal to a plus a plus a okay and this can shortly be written as a multiplied by three and then let's say area is equal to and the formula for area is so it is square root of 3 which is 173 multiplied by a to the power of two divided by four there was a time when i knew this so after we have written this let's move to our main function because i want to create an object of equilateral triangle so i will say e t equilateral triangle okay and i will say e t dot set a and let's pass the value of three okay now what i want to do is i want to access these two i want to write out how much is circumference of this triangle and then how much is the area of this triangle here so i won't say c out let's say circumference like this is equal to e t dot circumference let's add end line okay and then another thing that i want to know is the area so i will say area is equal to e t dot area now if i try to run this program or if i simply hover over these errors because we already have errors you will see that it says that member circumference of equilateral triangle class is inaccessible and we have the same message for this area member so the reason for that is because these two are private and the private members of a class cannot be accessed outside of that class so there are a couple of ways to fix this problem and one of them is by using friend functions now other solutions are to make these two public so i will just move them to public area and as you can see the errors have disappeared and if i run my program as you can see the program works and we get the result so circumference is equal to nine and that area is equal to three point eight nine that is the first solution the second solution is to move this to private area as well like it was before but to create getter for this circumference member and then for area as well and to make those two getters public so that we can access those functions outside of the class now the problem that i see with those two solutions is that if you make these two public or if you create public getters you are going to make them available to everyone outside of this class here so what happens in a situation where for example we are very smart so we came up with these two formulas that means probably that we don't want to share them with everyone maybe we just want to share them with very close friends so that is the third solution and the one that i'm going to show you so how you can solve the problem that we currently have by using friend functions so what we can do is we can create a function that is not going to be a member of this class but it is going to be a friend of the equilateral triangle class and that means that because it is the friend of the class it will have access to all the private and protected members of that class so let's create that function so i will create a global function outside of this equilateral triangle class i will create it here so i will say void and let's call it print results like this and this function will receive one parameter of type equilateral triangle i'll call it et okay and here i will put the definition of that function and the job of this function will be to print the results of circumference and area of the triangle so i will just copy this code actually i will remove it from here and i will paste it into my print results function okay so what do you expect to happen now if i run my program let's see okay we still have the error and it is the same error that we had before it says circumference is inaccessible and then area is inaccessible as well and the reason for that is because we just created a function we didn't make that function a friend of our class so how do you declare a function to be a friend of your class it's actually very easy to do that so you just say hey equilateral triangle you will have a friend and that friend will be this function here so i will copy the declaration of the function okay and then you don't even have to specify the name of the parameter you have to specify the type but the name you don't have to specify and that is all so basically you just say friend and then you copy the declaration of that function and now everything should work so if i run my program again okay we have one more problem so if you already know what the problem is let me know in the comments before i tell you what the problem is so let's go to our main function and as you can see here we still haven't invoked this print results function so that is why we are getting empty console so i will say print results and then here i will pass my et so i'll pass this equilateral triangle that has the side length of three and if i run my program now now everything works as expected and one more time the reason why we have access to these two private members of equilateral triangle class inside this function here called print results is because that function is a friend of our class and as you could see previously we don't have access to these two outside of this class except in this friend function a common question related to this is can a class have multiple friend functions and the answer to that question is yes it can so the same way that you can have multiple friends in real life in programming your class also can have multiple friend functions now one very important thing to keep in mind is to choose your friends carefully and this should be applied to programming as well so choose your friend functions carefully you don't want to have a lot of friend functions because if you have a lot of friend functions then you are breaking the whole idea and concept of encapsulation which says that there are certain members and certain data that should stay private inside that class and that shouldn't be accessible outside of that class so be very sparing with this friendship functionality another interesting thing is that in programming we are not limited only to friend functions we can also have friend classes so let me show you how this works so let's create a class called homework i'll create it here so i'll say class homework like this let's make it capital letter h okay so what i want to do is i want to move this function inside my class and i will also make it public like this now immediately we get two errors and those are the same errors that we have seen previously so circumference is inaccessible and then area is inaccessible and the reason why we are getting these two errors is because here inside our equilateral triangle class we are saying hey you have a friend function which is this function here so it is a global function called print results that receives one parameter of type equilateral triangle now what has changed is that this function here this print results is not global function anymore now it is a member function of this class here and that is the reason why this here does not work because as you can see if you hover over this it says that function definition for print result is not found so we don't have this function anymore so in order to fix the error that we have now what we can do is we can make this class so this entire class a friend of this class here so i'm going to comment this part out and i will add a friend class to this equilateral triangle so how do you do that it's actually very easy so again you say hey you will have a friend but this time it is going to be a friend class like this and then you specify the name of that class okay so now this equilateral triangle has a friend class called homework and if i scroll as you can see the errors that we previously had have disappeared but we still have an error inside our main function which says identifier print results is undefined and the reason why we are getting this error if you know write it in the comment section so the reason why we are getting this error is because this is not a global function anymore it does not exist in a global scope now it exists only as a member function of this class and as such so as a member function it can only be invoked by using an object of that class so in order to invoke this print results function we need to create an object of type homework call it h and then we can invoke this print results by saying h dot print results again that is because this function here is now a member of this homework class so if i run my program now as you can see again we are getting the result of our calculations and there are also a few useful tips that i want to share related to this so tip number one as i already said use this friendship concept sparingly in programming because if you make too many friends in programming you are going to break the whole idea and concept of encapsulation and if you don't know what encapsulation is and how it works i'm going to link a video in the description so make sure to watch that video tip number two is that friendship is not mutual in programming so that means that here we have a friend class called homework inside our equilateral triangle class that means that we can access inside this homework class we can access all of the private and protected properties of our equilateral triangle but not vice versa so if this homework class had any private or protected members we couldn't access those inside our equilateral triangle because again friendship in programming is not mutual tip number three is that friendship is not inherited which means that if you have a base class that has a friend function that friend function will not by default be a friend of the derived classes of that base class so again friendship is not inherited and if you want to learn more about inheritance in programming i am going to link a video here and also in the description so make sure to watch that if you don't understand what base class is and what derived class is tip number four is actually a homework for you and that is one of the most common uses of friend functions so friend functions are used very often when you are overloading operators and if you are not familiar with operator overloading i have a video that i will link here and also in the description so make sure to watch that video because you will get a homework related to that video so in that video i purposely used structures to overload operators instead of classes now the main difference between a structure and a class is that all members of a structure are public by default and then all members of a class are private by default so when you are overloading operators for a structure you don't need to create friend functions in order to access public members because they are public but when you are working with classes and those members are private by default so if you want to access them outside of that class you need to create a friend function for that overloaded operator so your homework will be to watch that video and then instead of using structures you should use classes so where i used structures you use classes and all the problems that arise in that process you should solve them by using friend functions and if you manage to get to a correct solution you can paste it in the comment section and i will as well paste my solution and pin it in a comment so that you can compare it with yours so thank you very much for watching and if you enjoyed this video please give it a big thumbs up for the youtube algorithm and because that means a lot to me and also share it with your friends who would like to learn about friend functions friends friend functions you came here for programming but you stayed because i'm extremely amusing i know okay bye