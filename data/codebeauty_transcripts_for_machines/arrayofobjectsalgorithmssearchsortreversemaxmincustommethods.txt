hi guys and welcome to my channel in this video I'm going to teach you about arrays of objects and most common operations and algorithms that are performed on arrays of objects this topic is very important for everyone who is trying to learn about algorithms and data structures and also every single developer should know about the things that I will teach you in today's video and at the end I have a practical task for you that you can use to practice and to upgrade your skills on your own and before we start with the topic of today's video as many of you already know for the past year I have been working on a practical programming course and the goal of this course is to help you to think as a programmer and to build that strong indepth understanding of programming so this practical programming course will 100 lead you to getting your first job as a software developer or to getting a better job if you already have one and I am going to be your Mentor I will systematically stepbystep guide you through the entire process this is going to be a complete Journey from beginner to expert in programming and we will solve a lot of real world problems with code and I will also teach you and pass on you all of the experience that I have acquired in the past 10 years of coding because this community means a lot to me and you have been supporting me for years I feel like you deserve a special discount when compared to other people so I will put a link in the description that you can use to sign up and once the course launches which will be soon I will send you a discount but make sure to do it right now it's completely free but the number of people that can get this discount is limited so again if you are interested make sure to sign up right now so with that being said let's proceed with today's topic so here I have the code that I have written beforehand and here we have a class called student each student has these four properties name age gender and programming grade and and it also has this parametrized Constructor which receives these four parameters and then based on the values that we receive inside our Constructor we are going to assign them to the properties of our student and we are going to construct student object in that way and all of this code is inside public area of our class so that it is accessible outside of the class as well okay so that is the code that we have so far and if you are not familiar with some of the things that I mentioned make sure to watch my video about classes and objects I will link it here and also in the description and if you don't understand the idea of Constructors then you can watch my video about different types of Constructors in order to understand this code in detail so what I want to do now is I want to create an array of students and initialize it so that we have some data to work with and in one of my previous videos it will be linked here and also in the description I explained different ways on how you can initialize an array of objects so right now I'm going to use the fastest and the most appropriate approach for this case so here I already have the code for initializing an array of students and I am going to explain it very quickly so with this we have created an array called students it is an array of five elements and it is of type student which means that inside it we can only store students and then you put these curly brackets and at the end please don't forget the semicolon at the end because otherwise you are going to have an error and then inside these outer curly brackets you have inner curly brackets for each student that you want to add to your array so the first student is John he has 20 years he's male and his grade is nine so we use this Constructor here in order to create each student for our arrays so this is one approach that you can use in order to initialize an array of objects okay so here is our data that we will use in order to work with for this video so the first thing that I want to teach you is how you can search through an array of objects and I will show you how you can write an algorithm to do that yourself so how you can do that manually okay so here we have an array of five students but we could also have an array of 500 or 5 000 students and you would use the same approach so what I want to do let's say for example that I want to find a student whose name is Alice and I want to change the programming rate of Alice to 10 let's say so what I will do is I will write a for Loop that is going to iterate through the entire array I will compare the names of students inside the array with the name that I want to find which is Alice and once I find match then I will change programming grade of that student so let's write that code I will say four and I is equal to zero I is less than or equal to 4 I plus plus okay one very important thing to keep in mind is that indexation of the array starts with zero not with one with zero that means that the first element of your array has the index of zero second element has the index of one and then third has the index of two and so on so the indexes of this array here go from zero to four and it is very important that you keep that in mind because otherwise you can get a very very dangerous bug error exception that is called index out of range or index out of bounds that is very common error and you should already be familiar with this if you watched my previous video about arrays of objects I will link it here I'll also put it in the description so make sure to watch it if you skipped that video okay so here I have a for Loop that will iterate from 0 to 4 and inside it I want to find students of I dot name so what I want to do is I want to check if students of I dot name is equal to Alice because that is the student that I am searching for what I want to do in that situation is when this condition here is met what I want to do is I want to say for example let's print I always found at index and then let's print the index of Alice okay like this and what I want to do also is I want to take this student I want to take Alice and I want to change her programming grade to 10. so this is how you can iterate through your array of objects and find any object based on certain criteria in our case that is the name of student now one very important thing is that once you find this student and as you can see here Alice is on position on index number two that is third position but that is index number two once you find Alice there is no need to search any longer there is no need to check if Sardina or any more students that you have so in that case once I have found my student and once I have changed her programming grade what I will do is I will simply say break which means now please leave this for Loop there is no need for you to execute it any longer and to take resources of my computer because I have found what I was looking for and this approach here is how you can search through an array of objects so let's run this program to check if the code works as we expected and as you can see it it says I was found at index two so 0 1 2 and the code works correctly another algorithm that is used very often with arrays of objects is sorting algorithm so now I will show you how you can sort this array of objects and for that I am going to show you a library that contains a lot of different methods a lot of different algorithms that we can use in order to work with our data collection so that library is called algorithm and you need to include it so you need to say include algorithm like this and inside it we have a lot of methods that we can use in order to work with our arrays of objects so one of those methods is sort so let's sort our array of students now this sort method receives three parameters the first parameter is pointer to the beginning of our array and as you already know or should know uh the name of our array is the pointer to its first element which means that the first parameter here will be the name of the array so that is the first parameter the second parameter is the pointer to the last element of our array so since we have five elements here the last element is students plus five so the pointer to the first and then we move five more spaces in memory and that will be the pointer to the last to the fifth and then third parameter is a custom method that we have to write now what is this custom method well imagine if someone told you in real life hey you have this array of students can you please sort them you would have some additional questions right you would have questions like do you want me to sort them by age or by grade or alphabetically by name or something like that so you would need some additional information and the same way our sort function needs additional information on how to sort this array of students because sorting an array of integer numbers is much more simple than sorting an array of students so here we will have to pass it a custom method that will tell to this sort algorithm how to sort students so let's say that we want to compare these students by grade so let's write compare by grade okay and this compare by grade will be the method that we will Implement so let's do that so let's see how we can implement this method I will put its implementation here and there are two important things regarding the implementation first thing is that it needs to return Bull type so true or false and the second thing is that it needs to receive two objects of type student in our case so I would say compare by grade and here two parameters so student S1 and then student oh my God student S2 like this okay so inside this method here I will provide it a way to compare two students and here I will say please return if student1 dot programming grade is less than student2 dot programming grade like this now what this here means is the following if student1 dot programming grade is less than students 2 programming grid that means that in general student one is less than student two and not in some negative judgmental way it just means that student one will be before student two in our array okay so that will be the result of this function Here and Now what I can do is I can test this program so let's very quickly write a for Loop that will simply print the names of our students after they are sorted so that we can check if this works correctly so here I will say 4 int I is equal to 0 I is less than or equal to 4 I plus plus okay and then we are simply going to say C out and then let's say students of I dot name and let's put an end line like this so now if I start the program let's see the result okay so here are sorted students by grade and then here is our initial array of students so Selena is first she should have the lowest grade it's 7.2 and then it's Bob Bob has eight and then Eve 8.5 John has nine and Alice who has 9.2 actually we change the grade we changed Alice's grade to 10 here so Alice has 10. okay so as you can see our sort function works correctly and if you wanted to sort these students from the highest grade to the lowest you would simply change this to greater than and if I run the program now we should have students in the order from the highest grade which is Alice and then the lowest grade should be at the end now let me enforce some good programming practices on you and instead of passing student S1 and student S2 by value like we did so far let's pass them by reference like this so what is the difference and why this approach here is better well if you don't pass parameters to a function by a reference that means that you are passing them by value and in that case compiler is making a copy of each object and then it is working on that copy so it is taking additional time to make copy and it is also using additional resources so if you don't want to do that if you don't want to make a copy when you are invoking a function and passing an object what you can do is you can pass that object by a reference and you do that like this with this Ampersand this end symbol okay and in that case you are passing the original object to your method and your method is going to work on the original object now here we have one potential dangerous situation that now this function can change this student S1 and S2 and all of those changes that this function here could potentially do will be reflected on the original object and we don't want to do that so we should not allow that and in order to make sure that this function will not change the objects that we have passed to it what we can do is we can now make these objects to be const like this so by doing this we are saying hey I'm passing you the original object but I want to make sure that you cannot change it inside this function here so I'm making it constant so everything will work the same as it already did but these are just some best practices that you should follow in your daytoday coding and that you should know about now there is something else that I want to show you so far we have sorted our students by grade but what happens if we want to sort them by name for example how are we going to do that well for that we are going to implement a different compare method I will copy this one and I will adjust it I will call it compare by name it will also return Bull and it will receive two students but here instead of comparing those two students by grade I will simply say S1 dot name is less than S2 dot name okay so now you may wonder how does this make sense well it does because in computers deep down everything is numbers which means that letters are also numbers and in order to understand that you should be familiar with something called ASCII code and ASCII code stands for American Standard code for information interchange and it assigns a number to every letter for example lowercase letter a is in the background number 97 lowercase letter B in the background is number 98 and then C is 99 and so on and also lowercase and uppercase letters are represented with different numbers so that basically means that you can compare two letters and you can say which one of those two letters is bigger and which one is smaller so in this case this function is going to sort our students in the ascending order meaning from the A to Z so if I use this compare by name inside our sort and then I start my program I expect my students to be sorted in the A to Z alphabetical alphabetical order so Alice Bob Eve John and Selena even though in the initial collection here they are not in the alphabetical order and then if you want to sort them in the reverse order you will just change the sign here so if I start my application again as you can see now they are sorted in the reverse order now there is also another way to reverse an array and that is with the help of function called reverse so I will write that function here so you simply say reverse okay and this function receives two parameters and those are these two so it receives a pointer to the beginning of the array and then a pointer to the end of the array like this so now if we start the program as you can see students are in a to z order once again there are two more very common operations that you would use on an array of objects that I want to show you and those are finding Max element and finding Min element inside your array so there is a function that is used for that actually two functions one is Max element and another is min element so let's say Max element and this function receives three parameters it receives the beginning of the array and then it receives the pointer to the end of the array okay and then here it receives gives a method custom method that it will use in order to compare objects so here I will pass it compare by grade and you need to make sure that this compare by grade is ordering elements from the smallest to the biggest so we need to change this sign to be this so student one is smaller or less than student two okay and then this method will correctly return Max element actually it will return the pointer to the max element of our array so what we should do is we should store that element inside a variable so I will say student pointer because it returns pointer and I will call it Max grade student like this okay so this is going to be my method let me put it in a new line okay and now once I have my Max grade student what I can do is I can simply say C out and then let's say Max grade student is and then let's say Max grade student and I am using this Arrow because we are working with pointers in order to access the properties of this object and here I simply want to print the name of my Max grade student okay and let's put an end line because at the same time I want to show you how Min element method works so I will simply copy this and I will hear say Min great student and instead of invoking Max element I will invoke Min element method it receives the same parameter so pointer to the beginning of the array pointer to the end of the array and custom method that will be used in order to compare objects and here I will say that mean grade student is and then mean grade student and I want to print his name okay so I don't need this code anymore I will comment it and now if I run my program let's see what is going to be the result of these two methods okay so max grade student is Alice and then mean grade student is Selena let's see if that is correct and Alice has 9.2 and Selena has 7.2 so the result is correct so that would be all for this video and as I promised at the beginning I also have a task for you that you can use in order to practice and the task will be the following I want you to create a class called Product like I did here for my student and each product will have name type and price type can be for example Tech or food or clothes or something like that and then what I want you to do is I want you to write a program that will be able to sort all of the products from the cheapest to the most expensive and I also want you to allow to your user that he can enter the name of the product and then you are going to print the price of that product you are going to search through your array of products and when you find that product you will print the price of that product and if you don't have the product that he's searching for in your array then you will print the information that product is not available and one very important tip that you should keep in mind is that when you are comparing the names of products then you should keep in mind that if he enters this and this those are not the same things so lowercase and uppercase are not the same thing in programming so please keep that in mind so that would be all for this video If you enjoyed it please give it a big thumbs up and if you want more videos like this let me know in the comments and also if you have any questions regarding today's video or if you have any questions regarding programming in general leave those questions in the comments and I'm going to reply them in some of my future videos so thank you very much for watching and I will see you in some other video bye