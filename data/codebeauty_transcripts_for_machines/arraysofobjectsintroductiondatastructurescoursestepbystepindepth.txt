hi guys and welcome to my channel in this video I'm going to teach you about arrays and objects this is going to be an introduction video and I will film a couple more videos where I explain more advanced topics so make sure to watch all of the videos that will be in this playlist so again we will cover everything from the beginning to more complex and advanced topics until you understand everything in depth and this topic is something that every single developer should know about and should understand so I will probably film all of the videos right now but I will publish a new part each week so that I don't have to edit one very long video because as many of you already know currently I am very busy with preparing my practical programming course and I'm putting all of my focus into that so all of my knowledge and over 10 years of experience is going into this course so that It prepares you to start working in the real world and finally stop watching videos and tutorials and just start working uh so that is the goal of the course and after finishing the course you will have a strong indepth understanding of programming so that you can continue building your knowledge on your own as you advance in your programming career because as a developer you will never really stop learning but you will be able to do it on your own also this community means a lot to me because you have been following me for a long time and I feel like you should have a special discount when compared to other people so I will put a link in the description description of this video that you can use to sign up and I will send you a discount once the course launches it is completely free to sign up but make sure to do it right now because the number of people that can get this discount is limited so if you're interested there will be a link in the description for you um so with that being said let's continue with the topic of today's video first I want to say that if you are not familiar with array data structure at all make sure to watch this video because here I explained all the basics and everything that you need to know in order to be able to follow this video it will also be linked in the description so make sure to watch that video and then you can come back here but if you already understand arrays of primitive data types then you can continue watching this video so here I have the list of topics that we will cover in this video and then after this video there will be more parts where we cover more complex topics about arrays and objects so please don't mind me reading because I don't want to forget something important so we will learn what are arrays of objects we will learn how they are different from arrays of primitive data types so what is the difference between array of objects and array of primitive data types we will also learn why and when you should use arrays of objects I will teach you how you can access an individual object in the array also how you can access and modify object properties from the elements of the array we will see how you can use Loops in order to perform operations on arrays of objects and I will teach you about most common errors that happen very often especially to beginners when working with arrays and also at the end there will be a task for you so that you can practice on your own in order to get a better understanding of this topic because as you already know watching my video is going to help you to understand the topic but in order to make it permanent in your head you will have to practice on your own as well so these are the topics that we are going to cover in today's video so let's start so the first thing that I want to explain is what are arrays of objects and how are they different from arrays of primitive data types so in order to understand that let's create an array of primitive data types let's say that I want to create an array of integers I will call it lucky numbers and it is going to be an array of five integers let's initialize it let's say 1 3 5 13 and 21 okay so with this line here I have created an integer array that has five elements and it is called lucky numbers and here I have initialized those five lucky numbers so this is an array of primitive data types and as you already know we use arrays in order to group elements of the same type together and arrays store those elements in consecutive memory which means one after the other so this array here has allocated five memory containers to store these five numbers and those containers those those little boxes where you store these numbers are one after the other in memory and that is the characteristic of an array and it doesn't matter if you're storing primitive data types or if it is an array of objects so this is an array of primitive data types now if I wanted to store objects into an array that would be a little bit more complex so let's say for example that we are working with students we want to make an application that is working with students and we want to store an array of students so let's see how would that go first thing that I would need is a class called student so let's create that let's say class student like this and make sure to have this semicolon at the end okay so here I will define the properties for my student class let's say string name and then let's say int age Char gender and what else let's say the student will have float programming rate like this okay so these are four characteristics and four properties that we want to store about our student so now what I can do is I can create objects of class student and I can store them in my array but one very important thing before I continue is to make all of these public so that we are able to access these properties outside of this class okay it's very important to make them public okay now let's create an object of type student let's say student let's call it S1 okay and now I will initialize the properties of students I will say S1 dot name will be let's say salvina okay and then let's say S1 dot age is 28 and then s1.gender will be let's put these single quotation marks and I will put here f for female okay and let's say S1 dot programming grade I will give myself grade of nine because there is always place for improvement okay and with this I have created one student now what I can do is I can create an array and add the student to my array so let's see how we can create an array of objects this is how we created an array of primitive data types so now the logic is going to be the same for an array of objects I will copy this here so here instead of creating an array of integers we will create an array of students like this I will call it students okay and it is going to be an array of let's say three students okay so with this I have created an array of students that can have Max three students so now let's see how we can add this student here Selena to my array so I will say students of 0 is equal to S1 now what does this mean first thing that you should need to know is that indexation of the array starts with zero what does that mean that means that the first element of the array has the index of zero and then second has the index of one third has the index of two and so on so that is one very important thing why are the indexes important they are important because you use them to access individual elements of the array so here is the example here we used index 0 of students array to access the first element of the array and there we stored our student the one that we created here so with these two lines we have created an array of students that has three elements and on the first position in the array we have stored this student here so this is one way that you can use to add elements to the array so now I can manually create two more students like I did here and then I can add them to my array okay so that is one way to initialize your array another way that I could use is I could create a Constructor here inside my students class and then I could initialize my array of students very similar to this approach here where we had these curly brackets and and inside these curly brackets I've initialized all of the elements so let's see how does that approach look like so the first thing that I will need is a Constructor for my student class again make sure that everything that you put inside your student class is under this public access modifier so that it is publicly accessible okay so let's create Constructor let's call it students I mean that is the name that you have to give to the Constructor because Constructor has the same name as the class that it belongs to and it doesn't have any return type not even void so this here is Constructor and the Constructor will receive four parameters so it will receive string name it will receive int age and then Char gender and let's say float programming grade okay and here I will initialize these properties based on the values that I've received here in the Constructor so I will say name is equal to name okay so the property of my student will be equal to the parameter that I received into my Constructor because I am constructing a completely new object based on the values that I received into my Constructor okay so name will be equal to this name and then age will be equal to the age gender like this and then programming grade will be equal to this programming rate here okay with this we have created Constructor so now what I can do is I can show you a second way to initialize student now one very important thing that you are going to see here is that now this student the way that we have created it here without initializing it says that now there is no default Constructor for student class and you cannot do this any longer because if you're not familiar with Constructors please make sure to watch this video here I'll also put it in the description and there you will get an indepth understanding of different types of Constructors but basically what this error here means is that now there is no way for me to create a student without passing all of these properties here and one way to fix that problem is to delete this code another way is to create default Constructor so I will very fast create default Constructor okay and this here is default Constructor completely empty Constructor and now we don't have the error anymore again if you are confused about Constructors please make sure to watch the video about Constructors and different type types of Constructors that I will link in the description Okay so once again here we have created parameterized Constructor and based on this Constructor we can now construct our students now let's see how we can initialize our array of objects like we did here like we initialized our array of Lucky Numbers well what I can do let's delete this let's also delete this okay and here I will say that this array of three students will be equal to the following and now inside each curly bracket I will initialize one student and I will do that based on these parameters here so the first thing is string name so I will put these double quotation marks and I will say Selena that is the name for my first student and then age is 28 it is integer so we don't put double quotation marks and then gender is female and then programming grade as I said is nine okay that would be the first student now let's do the same for the second student let's say second student will be Elon age will be I don't know how old he is maybe 50 and then gender is male and programming grade let's give him a 10 okay and then let's also add uh Bill Bill Gates okay he is probably around 60 male and programming grade let's give him a solid seven okay uh so with this we have initialized an array of objects and here I have an error and there is because I don't have semicolon at the end here okay so this is the second way that you can initialize an array of objects and with this we have created an array called students it is array of three students and here we have initialized those three students okay so that is the second way and then there is the third way that I'm going to show you and that would be to allow your user who is going to use your application to enter his own values so in order to do that we will learn how to use Loops in order to access and modify elements of the array so this approach here I'm going to comment it okay and I will again create array of students it will have three elements but I will not initialize it I will not initialize it like this I will give my user the opportunity to enter his own values so for that I will use for a loop I will say four int I is equal to zero I is less than three I plus plus okay so inside this for Loop we will iterate through three elements of my array and we will enter each element so we will enter each student now one very important thing to keep in mind is that as I already said indexation of the array starts with zero so the first element will have index zero and it's very important that you set 0 here for your I if you are entering elements from the beginning of the array and then this part here says please enter elements while I is less than 3 which means that you cannot enter any more than three elements into your array and later I will show you one very common error that happens especially to beginners regarding this so here I have created for Loop and now what I want to do is I want to say C out and then let's say student and let's print I here like this and let's put an end line so that our user knows that he is entering the first unit and then second and third okay and then here I will create an object of type student I will say student and I will call it s okay and then now I will ask my user to enter each individual property of my student so I will say C out name please enter name okay and then I will say C in s dot name so whatever our user enters that will be stored in s dot name and I am missing these redirection signs like this okay and we will do the same thing for the remaining three properties okay so name age gender and programming grade so name and then age s dot age and then gender s dot gender and then programming grade and here I will print so that my user knows that he is entering programming rate so after the user enters these four properties what I want to do is I want to take this student that now has all of the values that our user has entered and I want to add that student to my array so I will say students of I is equal to S and here I have an error as you can see my array is called student it should be called students because that makes more sense because we are talking about the collection more objects plural okay so with this I have added this current student to the position of I into my students array which means that in the first iteration we are adding to the first position in the second iteration we are adding to the second position and in the third we are adding to the third position and again keep in mind that those positions are not one two and three they are 0 1 and 2. okay now let's start this program to see if everything works as expected but first I will put a breakpoint here and later I will explain why I did that okay so I will start my program and as you can see it says please enter student zero so the name for student zero will be sound Dana and then age 28 gender will be F programming grade will be eight and then student one let's say Elon and then age is 50 maybe gender is male programming grade is nine okay and then student two which is our third student will be bill age will be 65 maybe gender will be male and programming grade will be 10. okay now our application has executed all of the code and as you can see here the application was paused at the last line before leaving our program before finishing our application so now what I want to do is I want to hover over this student's array and I want to see if we have all of the students that we have entered and as you can see here indeed we do have three elements and here are the indexes 0 1 and 2. and here are the values that we have entered for our students we can expand them like this to see all the details okay so as I said this here is the way that you can use in order to ask your user to enter the values for the properties of each individual element of your array and a few things that I want you to keep in mind here are following first thing I would like to add I plus 1 here because even though we as programmers should know that indexation of the array starts with zero it doesn't really make sense to for our end user to have this please enter student zero he expects to see something like please enter student one so that is why I am adding plus one here but in the background we are still using I without that additional one so that is the first thing and then the second thing that you learned here is that this is the approach that you can use in order to allow your user to enter the values for elements of of your array and then this is how you can add those elements to your array okay so another thing that I want to teach you here is how can we now access individual properties of each element of the array so let's do that now let me show you for example how you can check what is the programming grade of the first student so let's say C out and now let's say programming grade of first student is okay and here I am using my students array and then I am accessing the first student the index of the first student is zero okay and then I want to check his programming grade like this and as you can see you will get all of the values by your intellisense so you will get all of these values already offered to you so I want programming grade and let's just just move it to the next line okay and now if I start my program we should be able to see the programming rate of the first student so let's do that very quickly okay name is saldina I will fast forward this part [Laughter] so now if I press enter we should be able to see the information about programming rate of the first student and it says that it is eight so let's check that and as you can see here we indeed entered eight for programming rate for the first student okay so that is how you can access properties of each individual element for example if you wanted to know to change the name of the second student you would do that like this you would say students of one that is the second student it has index of one and now I will say name okay and let's say that Ilona okay so this is how you can do that now what is the benefit of having an array of objects well the main benefit is that now all of these objects are together they are inside one collection and now we can perform different calculations and different operations on this collection of objects so now I'm going to show you that so let's say for example that I want to calculate the average grade for all of the students now let's comment this part here because I don't want to enter all the students manually every time and I will uncomment this part here okay this also should be connected because now we have two arrays called students and that is not possible so here we have all the students we will not have to enter them manually and now I want to calculate the average grade for all of the students now how are we going to do that well I will first create a float variable called sum of grades where I will store the sum of all the grades it is going to be of type float because our grades are of type float even though I have entered here integer number so now let's say here 9.5 for example so what I want to do inside the sum of grades again is I want to sum all the grades of all of my students and then I will divide that by 3. so in order to do that I will use for loop I will iterate from 0 to 3 so I'll say int I is equal to 0 I is less than 3 and then I plus plus okay and here I will simply say sum of grades plus equals to students of I and please give me his programming grade like this so inside this for Loop we are going to sum all of the programming grades and then once this for Loop finishes here I can say C out average grade is and then here I will say some of grades divided by three because we have three students so now if we start a program let's see what's going to happen okay we have an error actually let's see what is the error and the error says unintentionalized local variable sum of grades used well that means that here we don't have initial value for sum of rates variable and the initial value is going to be zero because we don't want to change the sum of all of these elements and 0 is neutral when it comes to adding operation so now if I start the program let's see the result and the result is going to be 8.83 now you can use calculator in order to check this very quickly but it should be correct 9.5 plus 10 plus 7 divided by 3 is the same number that we got here okay so that is how you can access individual properties of each element of the array by using the name of the array and index of the element and then you can access all of the individual properties so let's do a quick recap of all the things that we have learned in this video and then I will give you a task that you can use in order to practice on your own so first I've shown you how you can create an array of primitive data types here we have created an array of integers and then I have shown how you can create an array of objects here we have created an array of objects and I explained three different ways that you can use to initialize that array first approach was to create an object and then add it manually to a certain position in your array that was first approached that code is deleted now second approach is you can initialize it like this so you can initialize all of the elements or one part of the element like this when you're creating your array that would be second approach and then third approach is this code that is commented right now and that is to ask your user to enter all the values for your array and then you create an object and you add that object to your array and to iterate through all of the elements of your array you use for Loop okay and then we have also explained how you can work on that collection of elements because the main benefit and the main purpose of having an array of objects is so that you have those objects together inside one collection and then you can perform different operations on those elements and here I have demonstrated how you can perform different calculations on those objects and here we have seen how to calculate average grade for all the students that we have inside our array so that is a short recap now I want to show you one very important and very common error that happens especially to beginners but even through more experienced developers when it comes to arrays and that error is index out of bounds or index out of range now I'm going to show what I mean by this let me very quickly comment this part again because I don't want to enter elements manually because we already have our array of three students initialized here okay so how can I reproduce that error for example here I can put four instead of three so now we are iterating through an array that goes from zero and is less than four so zero one two and three and we could achieve the same thing if we did something as simple as adding this is equal to 3. so again we are iterating from zero one two and then three as well okay because there is a difference between this and this and in this situation we are going to get an error index out of bounds or index out of range so if I start my program you will see average grade is minus 3.53 you will get some number that doesn't make any sense and the reason for that is that here we are accessing a memory that is not our own so inside our array we have three elements and their positions are one after the other in memory but there is also fourth and fifth and sixth position in memory but that memory that position is not ours and here our array is accessing students of three which is someone else's memory location and God knows what is stored inside that memory location and that is the reason why we are getting this error here and this case here is a lot more dangerous than getting an exception because here you are getting a completely wrong result and in many situations if you had a lot of students you wouldn't probably even be aware that you are getting a wrong calculation and this type of error here is called index out of bounds or index out of range which means that you are accessing elements that are out of range or out of bounds of your array and you should not do that you must not do that so that is one very very important thing to keep in mind and again it is less dangerous when you get uh the warning from your compiler that you are accessing locations that are not yours but this case here that I have demonstrated is a lot more dangerous because here you are getting the result but the result is completely false and it's wrong and it can cause many problems in an application that goes into production with this bug so that would be the most common error that happens to especially beginners when they start working with arrays it doesn't matter if you're working with arrays of objects or arrays of primitive types this is very very common error so as I promised in the beginning I have a task that you can use in order to practice on your own so what I want you to do for homework until my next video is you can create a class like I did here but it's going to be a class called Product and each product will have name it will have price and it will have type type of a product can be something like clothes or food or Tech types like that and then what I want you to do is I want you to create an array of products and I want you to allow to your user like I did here to enter 5 or 10 or even more products and then you are going to perform different different calculations on those products for example you are going to calculate what is total amount of clothes all of the products that are of type clothes and then what is total price of all the products that are of type Tech or food and so on so I want you to do that task as uh homework so that you can practice on your own until I publish my next video and when I do it will be linked here and also in the description so definitely use the next couple of days to practice until my next video and I will publish my next video next week and if this video was valuable to you if you enjoyed it and if you learned something new please give it a thumbs up so that YouTube doesn't make me film dancing reels because for some reason YouTube likes dancing reels and somehow I believe that this video gives you a lot more value and knowledge so if you want to tell to the YouTube algorithm hey this video is good and I want more videos like this one please give it a thumbs up so thank you very much for watching if you have any questions feel free to leave those in the comment section as I said I will film more videos about this topic and I can answer all your questions in those videos so again thank you very much for watching and I will see you in some other video bye