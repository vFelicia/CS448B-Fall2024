hi and welcome in this video i'm going to show you how you can build login and registration form using c plus plus and the goal of this video is that we practice together building user interfaces with c plus and for that we are going to use c plus builder which is in my opinion one of the best tools that you can use in order to build c plus plus user interfaces very fast so i'm going to leave the link in the description so that you can download it and also if you need help if you are um if you're a beginner and if you need a little bit of introduction i already made one video which is more beginner friendly than this one so make sure to watch that video first i will link it here i will also link it in the description and then you can come back and watch this video so before i show you the application that we are going to build i just want to say thank you to all the people who support me and i also want to say thank you to the sponsor of this video which is you guys because i recently created an account on a site called buy me a coffee and i am so grateful to the people who support me that way because you guys helped me to create a lot more educational videos like this one so thank you very much and i also want to give you something more i also want to create some additional materials where i will share extra knowledge and where i will share all of my programming experience so you can let me know what are some topics that you would like to see and what are most common problems that you have with programming so that i can help you the best way that i can and uh those materials are going to be available on the link that i will put in the description or i will pin it in a comment and depending on when you are watching this video they might already be available so with that being said let me show you the application that we are going to build so here is the application that we are going to build and as you can see it has the option to log in and to register a new user so let's first register a user and then we are going to try to log in with that user so i will click on registration and here you need to input four things name age username and password so i will say that the name is saldena and then age is 26 username is code beauty and then let's say that password is codebeauty123 like this so i will click confirm and the data has been saved and the form has been closed which means that now we can try to log in with that user so the username was code beauty and then password was codebeauty122 one two three but let's first try to enter a wrong password let's say for example one two three five and if i click on confirm as you can see here we get a message which says error you can write out wrong password or wrong username or something like that and then if i try to enter a correct password and i click confirm as you can see here we get a different message which says success so this is the application that i'm going to show you how to build and then i will also give you a few tips on how you can upgrade this application and how you can use it in order to practice on your own so the first step to build this application is to create a new project so i will say create a new multidevice application with c builder it is going to be blank application i'll click ok and here i have my first form so that is the first step and then the second step is we need to create all the forms that we saw and those are three forms main form login and then registration form so this form here that already came when we created a project i will just rename it so that it is called main form so i will right click on this unit 1.cpp and i will say rename and i will say that its name is going to be main form like this okay and inside we have mainform.cpp which is our cpp file and then mainform.fmx which is this design file and then we have mainform.h which is header file so we created mainform and then let's create two more forms registration and login so right click on your project and say add new multidevice form and it is going to be hd form click ok and it should create this unit 2.cpp this is going to be our login form so i will rename it so that it is called login form dot cpp and let's create a third form so add new multiadvice form and then hd form and this one we are going to rename so that it is called registration form like this so that was second step the third step is to change some properties of the forms that we just created and if you're not familiar with what are properties of different controls i recommend you to watch the introduction video to building user interfaces with c plus which i will link in the description so the first one that i will work on is my login form so i will click on login form dot fmx and there are two things that i want to change i want to change the name property in this object inspector so name of this form is currently form2 and i will change that so that it is called for example my login form so my login form okay and then i also want to change the caption of that form so caption is here and it is currently also form two i will change it so that it says login okay and then i will do the same for my registration form so i will click on registration form and then registrationform.fmx and i will change its caption so that it says registration and then i will also change the name property and i will call it my registration form okay and then let's do the same for the main form so mainform.fmx caption is going to be main and then name is going to be my main form so here i will say my main form okay so let's see what we have achieved so far so i'm going to run the program okay and the form that is shown is the main form and as you can see here is the caption of that form and when we open login form it should say login and then when we open registration form it should say here registration so that is what we have achieved so far so the next step is that we add different controls to these forms so as you already could see our registration form should have four fields name um age username and password so four edits four input fields and then labels as well and then we also need a button that we will use to save that data so i will click on registration.fmx and i will very quickly use this palette in order to add four edits and four labels so let's do that i will say edit okay this is input field i'll make it a little bit bigger and then i will also add a label i'll put it here okay and let's change the text of this label and also the name of this edit because we are going to use this input field this edit in our c plus code so that we can get the text that our user inputs into this field so i don't want this field to be called uh what is its current name its current name is edit one so that is very generic name what i want it to be called instead is for example uh name edit like this and then for this label one i want to change its text property so that it says name like this okay so i will copy these two i'll copy them four times okay and then here as well and i will change this label i will change its text to age and then i will change the name of this edit so that it is called age edit so here i will say age edit and then this third label should have the text which says username and then this edit will be called username edit so its name is here and it will be called username edit okay and then fourth label should have the text which says password and this edit should have the name of password edit like this so those are four things that we need and then we also need a button i'll put it here i'll make it a little bit bigger and this button here should have the text which says save and then the name of this button that we will use in order to refer to this button from our c plus code that name is going to be save button okay so this here is our registration form and we have finished building the interface for our registration form now let's build the interface of our login form so our login form is going to be smaller and it should have only two edits one for username one for password and then we are also going to add a button which says login so i will add an edit i will put it here and i will also add a label i will put that label here i'll just make this edit a little bit smaller so the text of this label is going to be username like this and then the name of this edit is going to be username edit so let's find name property it is here so username edit okay and then let's copy this one more time so you use ctrl c and then control v you just select all the controls that you want to copy like this so let's change this labels text so that it says password and then the name of this edit is going to be password edit like this and then one more thing that we need is a button and i will put that button here make it a little bit bigger and i will change its text to login and then the name is going to be login button like this and with this we have successfully built the interface for our login form so the only form that remains is our main form and if you remember from the beginning of this video the main form should contain only two buttons so that you can navigate yourself to either registration or to login so i will open mainform.fmx and here i will just add two buttons so one button will be here and i will copy it once more and paste it here so the text of this first button will say login like this and then its name is going to be login navigation button so let's find its name property and let's say login navigation button and then this second button its name is going to be registration navigation button so let's write it here like this and then it should have the text which says registration okay so with this we have successfully created the interfaces for our main form and then login form and registration form so the next step is to create this navigation here because the only form that we can access right now if we run the program is going to be our main form so what i'm going to do in the next step is i will create two event handlers one for login button and then second one for this registration button so when our user clicks on login he should be navigated to login form and then when he clicks on registration he should be navigated to registration form so let's do that so make sure to stop this program before you start changing the code and i am going to navigate myself to main form but inside this cpp folder so mainform.cpp that is where we are going to write the code for our event handlers now one question for you is how are we going to create an event handler and the event handler that i want to create is the one that happens when i click on login button or on registration button there are two ways to do that the first way is to click on your login button and then to look for that event here and as you can see here we have different events so on can focus on click on double click on drag drop and so on and then the second and easier way to create on click event is to double click on that control so when i double clicked on my login navigation button as you can see it had created a handler called login navigation button on click and inside this function here we are going to describe what happens when we click on login button and what should happen is that we should show our login form so i'm going to say my login form and then i will say show like this and please keep in mind that this here is the name of your login form so how can you find the name well you go to login form dot fmx and then you click on the form so not any of these controls inside the form but on the form itself so you click on the form and then you go to properties and here you will find a property called name and as you can see the name of this form is my login form and that is the name that you will use from your c plus plus code in order to refer to this form here so let's return to mainform.cpp and here i have said when my user clicks on login navigation button i will do this part here so i will say my login form show and then what i want to do for my registration form let's go to mainform.fmx and double click on this registration button and here it had created another handler and this is the handler for our registration navigation button so here i'm going to say my registration form show so i will say my registration form and then show okay now one more thing that you need to do in order to be able to invoke these two functions because this still does not work and i'm going to prove that by running the program and as you can see here we have two errors which say here use of undeclared identifier my login form and then use of undeclared identifier my registration form there are two more things that you need to do and those are the following here after you say include myform.h you also need to say include loginform.h and also include registrationform.h because that is the file where these two forms have been declared so i will say here include and then i will use quotations and inside i will say login form dot h so i will include this file here and then i also need to do the same for registration form so i'm going to copy this paste it here and i will say include registration form like this okay so that should fix these two errors that we have here and if i run my program as you can see the program runs successfully so if i click on login it opens login form i'm going to close it and then if i click on registration it opens registration form so with this we have successfully created user interfaces and then we have also built the logic of navigating to our login form and our registration form so the next step is to build the logic so how can we register a user and then how can we log in a user and the first one that i want to work on will be registration form so what is going to happen when our user clicks this save button well the logical behavior is that we get the data that our user has entered into these four edits and then we save that data and we are going to save that data into a file and if you are not familiar with reading and writing into a file i'm going to link a video here and i will also link it in the description and in that video i explained step by step everything that you need to know about writing and reading from a file so make sure to watch that video first because i will just use that code i'm not going to explain it in this video um because i want to make it a little bit shorter so let's create a handler for this save button i'm going to double click on the button and as you can see here it says save button click so here we are going to describe what is going to happen when our user enters the data and then click save on the registration form so in order to be able to write and read from files the first thing that you need is you need to include f stream like this and then what i'm going to do is i'm going to create an object of type f stream and i will call it my file okay and then i want to open this file that i just created so i will say my file dot open and here i'm going to specify two things the first thing is going to be the name of the file and if that file does not exist it is going to create that file so let's say that the name of the file will be registered users dot txt okay and then the mode in which i want this file to be opened is going to be ios app which means i want to append into this file so after i have created and opened this file i need to make sure that it has been opened successfully before i start writing into that file so i will say if my file is open so if this file here indeed is opened successfully here i'm going to put the code to write into that file so what kind of information are we going to save into this file well navigate yourself to this design part of our registration and we are going to use the text from these four edits and we will save that text into this file here so i will create a variable of type nc string okay and i will call it name and inside this variable here i'm going to store the text from this edit here so the name of that edit is name edit and how do i know that well if you go to this form and then click on this edit here and navigate yourself to the name property you will see that its name is name edit and that is the name that we gave to these edits so that is why i changed all of the names because default names are edit one edit two three four and so on and that is not very user friendly so i will navigate myself back to registration registrationform.cpp and here i will say that this first variable called name will store the value of name edit and its text property i just need to use capital t here and i'm just going to copy this four times because we have four edits two three four so the name of this second variable is going to be age and then here i will say age edit and then username and here it will be username edit and here i will say password and then password edit text like this so once i have stored the text from these edits into these variables what i'm going to do now is i will just write the values from these four variables into this file here so i will say my file and then i will use this redirection symbol and the first value that i'm going to store will be name and then i will put this redirection symbol and i will use a delimiter which means that i will separate these four values with a special symbol and that special symbol is called delimiter and i will use comma because that is the one that is used most often so name comma and then age and then comma again and then username i just noticed that here it says use ear name so username with one e and then copy that same name here so that we are sure that we didn't spell it wrong and then comma again and then the last one will be password and at the end i will put a new line like this and then one more thing that we have to do after we finish writing into a file is we need to close that file so how do we do that well we just say my file dot close okay and then another thing that i also did is when we close this file and we save this data into our file what i want to do is i also want to close this registration form because there is no reason for it to be opened anymore so i will say this close as well and this command here is going to close the file and then this command here is going to close the registration form so let's test this code that we have written and let's see if all of this data is going to be stored into a file called registered users so i will run the program okay i will navigate myself the registration form and then here i will enter the name let's say saldena and then age is 26. username is code beauty and then password is code beauty123 so if i click save as you can see the form has been closed so the way for us to check if all of this information has been stored into a file called registered users is to manually find this file and check what kind of data is inside that file so let's do that please open your file explorer and then click on documents and here you are going to find folder called embarcadero and then studio projects windows 32 and then debug and here you are going to look for a file called registeredusers.txt and that file is here it says registered users and if i double click on that file it opens on my second monitor but as you can see here is all of the information that we stored into this file which means that we have successfully stored the information from our registration form and one thing please don't change the content of this file manually do that only through your c plus code so let's close this file and then i will also minimize this and the conclusion is that this handler here save button on click handler works as it should so that means that we are left with one more task and that is to create a logic for our login form so what is going to happen when our user enters username and password and clicks login that is the next step so let's click on login form dot fmx and i will create a handler for this login button double click on it and here is our handler here we are going to write the logic which is going to be executed when the user clicks on a login button so the first thing that i want to do is i want to create an object of type f stream so i also want to create a file because here we are going to read from a file and in order to be able to create an object of type f stream you first need to say include f stream like this and then you can say f stream my file and then let's open this file here let's say my file dot open and the file that i want to open is the same file that i created and that i used to write the information into on my registration.cpp so i'm going to copy the name of the file and i will return to loginform.cpp and here i will say registeredusers.txt and then the mode in which i want to open this file is going to be ios in which means that i will read from this file so i will input from this file into this program here so the next step is to again make sure that this file has been opened successfully so you say if my file is open and then here inside this if block we are going to write the logic to read from a file again if you are not familiar with this make sure to watch the video in the description and then come back and watch this video so the first thing that i will do inside this if block is i will create a variable of type string so std string and i will call that variable line and this line variable will represent one record from our file so it will represent one user data about one user and in order to be able to use this string type you need to say here include string like this okay so the next thing that i will do is i will use while loop in order to iterate through this file through this file here and read line by line so for that i will say get line so please get line from this file here and then store it into this variable here and do that while you have more lines to read one thing that we need to do when we read a line from our file is we need to parse that line and that means that we need to convert it into a format that is going to be easier to work with so if you remember our file called registered users it looked something like this first we had name which is saldena and then we had this comma symbol which is called delimiter and then we had age so 26 and then username which was code beauty and then again this delimiter comma symbol and then we had password which was code beauty123 so what it means to parse this line here is to separate this name and then this age and username and password and for that we are going to use this delimiter because as you can see it clearly separates one information from the other okay so let me type the function that is going to parse this line and then i will be back and explain what is happening in that function so here i created a function called parse comma delimited string and that function returns vector of strings and then it receives only one string parameter called line and that line is one record from our file so the information about one user now one very important thing is that in order to be able to use vector and in order to be able to use this string stream that we use inside this function make sure to include vector here and then also s stream and if you haven't included string make sure to do so as well so the behavior of this function is the following first we create a vector of strings called result and that is the variable that we will return from our function as you can see and then you create a string stream object called s stream and then you pass to that object the line that you received as the parameter of this function now after you have created your stream what you do is you will iterate through that stream while while it does not have any error so while this s stream is good you are going to iterate through it and inside this while loop you will do the following so create a variable called substring so sub str that is substring and then you will use this getline function to do the following so you will read from this stream here so from the line that you received as the parameter and you will read a substring of that line until you come to this delimiter and then when you come to this delimiter you will take that substring and you will push it into this results vector and you will do that again and again and again and then once you don't have anything else to read you will leave this while loop and then you will return the result so let me show you how this works visually on an example that we have inside our notepad file so that you can understand better so this is the line that we received as a parameter of our function so what this function does is the following first it creates a vector of strings called result so let's do that and for now it is going to be an empty vector and then it creates a stream and it passes this line to this stream and then it goes into a while loop and we are going to read from this line in the following way so first we create a variable called substring so sub str and for now it is empty and then we read from this stream here so we read from this line here and we read a substring as you can see here until we come to a comma delimiter so we read read read read read and then we come to this comma delimiter and then what this line here does is it is going to store this salvina substring into this variable here and it will remove this delimiter okay and then we go to this line here which says results.pushback substring so what that does is it takes this saldena substring and it pushes it into our results vector and then we go back to our while loop we check if there is more text to be read and yes there is so we create a new substring which is going to be empty and then we read from this line here again so we read a new substring until we come to this comma delimiter and then we take that substring store it in this variable here we remove this comma delimiter and then this results.pushback substring will push this value into our results vector like this and then we do the same again and again and again until we don't have any more text to read in this line so until this here happens okay and at that point we already have all of the values from our line stored into our results vector so we just return that results vector to this function here and what we can do now is we can access all of these values using indexes so this first value this saldena which is our name has the index of zero and then this has the index of one two and then three so that is what we have achieved by using this parse comma delimited string function so to return to our login button on click function what i said is that this line here that we are reading from our file is not actually in a good format so it has to be parsed into a format that is easier to work with and that is exactly what we have achieved in this function here so now what we need to do is we need to invoke that function and store the result into a vector so i will create std vector and it will be a vector of string like this and i will call it result vector or parsed line whichever one you want so i will say for example parsed line like this and here i will invoke a function called pars comma delimited string and i will pass a line to that function this line here now one very important thing please make sure to create this function before this function here that is invoking it because if you position this this function after this login button on click it is not going to work so as i said now this parsed line vector can be used in order to access all of those individual properties by using their index so the property that i need first is going to be username because what i want to do first is i want to check if our user has entered the username that we have stored into our registered users file so let's find the username property inside this parsed line so i will create a const char pointer i will call it username okay and i will access that username by using this parseline vector and then i will say please give me what you have at the position of 2 because username has the index of 2. how do i know that well if i return here you will see that first we stored name which has the index of 0 and then age with which has the index of one and then username which has the index of two and password has the index of three remember that because we are going to need it later so i will return to login form dot cpp and with this line here i have stored the username from this parsed line vector into this variable here now if i try to run this program let's see what is going to happen and we have an error which says here okay so it says no viable conversion to const char pointer and it is at this line here and the error that we are having is very hard for most beginners to fix and the error is actually that this here is not a const char pointer which means that after we have accessed the property at position 2 now we need to convert that into a c string so i will say c s t r like this and this method here is going to convert this into a variable that can be stored inside our cons char pointer username so if i run my program now as you can see our program runs successfully and the error has disappeared now after we have stored the username from our file into this variable here what we need to do is we need to compare this username so the username from our file with the username from our edit so the username that our user entered the user that is trying to log in so in order to do that i'm going to use a function called string compare and i will show you how that function works but the first thing that i need to do is i need to take the value that our user has entered into this field here so how can we do that well i'm going to create a variable of type a n s i string like this and i will call it edit username so this is the username from our edit control and here i will store the value from our username edit text and capital letter t and this here is the name of our input field so this is the name of this control here okay and then this is the variable that we just created now one important thing is that in order to be able to compare this variable here and this variable here to check if they contain the same text we need to convert this into a const char pointer as well so how am i going to do that i will say const char pointer and let's say username string like this and i will say that it is equal to edit username to c str format so this here is going to convert this value into a c string okay so now we can compare this value and this value here so as i said in order to do that we are going to use a function called string compare so i will say if std str cmp so string compare and this function here receives two parameters it receives two strings that it needs to compare so the first one is this one and then the second one is this username string and this string compare function will return the value of 0 if these two strings are the same so here i will say please string compare username and username string and if you return 0 that means that the username from our file is the same to the username that our user has entered into our login form so what are we going to do when we conclude that these two strings are the same well the answer is that we need to do the same for passwords so now i need to read the password from this parsed line and then i need to take the password from our password edit the same way that we did here and then we are going to compare the passwords and if passwords match that means that our user can log in successfully so let's do that let's create a const char pointer called password and here i will store the password from this parsed line so the password from our file i'm going to copy this and paste it here and the position of our password was index 3 so this is our password and then after we have stored the password from our file what i need to do now is i need to take the password from our password edit so i'm going to copy this part here and then paste it below and i'm just going to change the names so here instead of saying edit username i will say edit password like this and then here instead of taking the text from username edit i will take the text from password edit like this and then after we have stored that text into this variable here it is of type and c string so now we need to convert it into a cons chart pointer so i will say password string will be equal to this variable here to c string so please convert this nc string into a c string and store that into this variable called password string okay so now that we have this password from our edit and then this password from our file what i'm going to do again is i will use this string compare function once more in order to find out if these two are the same so i will say if std strc mp so if string compare of this variable here and then this variable here returns zero that means that they are the same and in that situation here i am going to write out the message which says you have successfully logged in and then if they are not the same i will write out a message which says an error happened or wrong password now one thing that we have forgot uh and if you already know what we have forgot please write that in the comment section before i answer it so one thing that we have forgot is we forgot to create a label that we will use in order to write that message so here on our login form dot fmx what i need to do is i need to add a label okay label and i will put it here and i will change the name of that label it's going to be called message label and we are going to use this message label in order to write out the message of either success or error so let's return to our login form.cpp and here in this if block so if these two are the same if password and password string are the same i will say that message label its text will be equal to success okay and then if this here results as false so if this function returns some other value which is not zero that means that the password that our user entered and the one inside our file they are not the same so instead of writing out success i am going to write out error or let's say wrong password like this okay and let's add exclamation mark here as well so what are we going to do now is we will test the code that we have written so that we make sure that we don't have any bugs so let's run our program and we have an error it says unexpected and then we have this column sign where is it it is here so instead of std column sign column sign string compare we just wrote one column sign so i'm going to add another one and if we run our program now we can try to log in our user so i will click on login and one thing that we also didn't do is we did not remove default text from this label so this should this should be empty by default um we are going to do that later let's now test the functionality of logging in the user so i will say username code beauty like this and then password was code beauty123 if i'm not wrong one two three okay so if i click on login as you can see it says success and then if i type in wrong password so one two three four and click on login it is going to say wrong password okay so that means that this function here works as it should now let's very quickly fix the error that we had so this message label we are just going to remove this default text so now if i run the program and then i click on login as you can see there is no default text inside our label so i returned back to loginform.cpp because i want to give you a few tips there are quite a few things that you can do in order to improve this program and there are also a few bugs and i will give you hints on how you can fix those bugs later but now i want to give you one very important advice and i want to explain one very important concept in programming so for all the people who have been watching this video the entire time this is a bonus and this is one of the most important principles in programming and that is the principle of dry which means don't repeat yourself so there is one thing that we can do here in this function so that we don't repeat the code that we have already written so can you recognize what that thing is if you can pause the video write it in the comments and then listen to my explanation so if you look at these two lines here and then at these two lines here you will notice that they do the same thing they perform the same logic but they just perform it on a different data so what we can do now is we can create a function that is going to perform that logic and then we are going to pass a parameter to that function in one situation it is going to be this parameter and then in another situation it is going to be this parameter here and then we can use that function whenever we need to perform that logic in this situation that is only two times but it can as well be 5 or 10 or 100 times so that is what i'm going to explain now and that is the principle of don't repeat yourself so create a function put that logic into a function and then invoke that function whenever you need a specific logic to be executed so let's create a function here and i will call that function convert to char pointer and to be more specific that function is going to convert ansi string to a char pointer and we are going to use that to convert this username edit and then this password edit as well so let's create a function that returns const char pointer and it is called convert to char ptr so convert to char pointer that function is going to receive nc string and i will call that parameter a n s i s t r so nc string and the job of that function will be to return a n s i s t r to c s t r like this so it will take this parameter here and then it will perform this logic and return it here so now what i can do is instead of invoking this code here i will comment it okay and then instead of using this username string variable which we created here it does not exist anymore because it has been commented what i can do is i can invoke this function called convert to char ptr i will invoke it here and to that function i will pass this parameter here so i will pass username edit text like this and everything should work as expected okay and now in order to obey this principle of don't repeat yourself i will do the same here so i will do the same for our password edit so instead of passing password string which is this parameter here that has been commented i will again invoke a function convert to char ptr that we just created and to that function i will pass this parameter here so password edit text so if i run my program i expect to get the same behavior that we had previously because there were no changes in the logic we just optimized our code a bit so let's run the program okay and if i click on login and then type code beauty and then type code beauty oh code v e a t y one two three and i click login as you can see it successfully logged in this user and then if i click one two three four as you can see that is wrong password so let's close the program and you can delete this but i will just leave it so that you can compare this code here and then this function here and so that you can see how dry principle work so how don't repeat yourself principle works so as i said there are a couple more problems that i noticed in this program and i will explain them i will give you a couple of hints and i will leave them to you so that you can fix them because when you are learning you want to solve as many problems as possible because that is the best way to learn so the first thing that i notice is if i run this program okay and i click on login and if i try to log in if i say code beauty and then let's type a password doesn't matter which password and i click on login so it's wrong password let's close this form and let's see what is going to happen if i open it again okay so after i open this form again as you can see these fields these edits have not been cleared and then this message here still remains so that is the first thing that you should do so you should clear these edits and then remove this message when this form is opened so that is the first thing the second thing is that this login button should be disabled when we don't have any values inside these two fields and as you can see it is not disabled which means that if i click on this login button it is trying to execute the logic in the background and that should not happen because there is no sense to execute this logic because we have not entered any values into these fields so that is something that you can do on your own as well but in order to prove what i just said i'm going to close this program okay and i will run it in a debug mode so i will put a breakpoint here and i will click on run and here i will click run so instead of run without debugging i will just click run which means that it will run the code into debugging mode so if i click on login and then i click this login button without entering any values into these fields as you can see the execution of our program stopped on this breakpoint which means that even though we have not entered any values for our password and username this login button on click is still being executed when we click it and that is a problem because it is slowing our program down and it is also a potential issue security issue for our application so if i click f8 f8 f8 as you can see it is executing line by line so that is second thing that you can fix and the third thing is something that you can also discover by debugging this program and if you're not familiar with debugging please let me know if you would like me to make a video where i would explain how to debug programs and how to fix those bugs so we can even continue working on this program and we can together fix these bugs if you want let me know in the comments so as i said the third bug that is present here is the following let's close this and let's add a new user let's register a new user so let's say anna age is going to be 30 and then username is going to be anna 1 and password is going to be anna 123 okay so i'm going to save this user okay now what is going to happen if i go to my login and i try to log in code beauty user so i type here code beauty and then password was code beauty123 one two three okay before i click on this login button i will put a breakpoint on this line here so this line that puts success message on our screen and i will remove this breakpoint because we don't need it anymore this one is going to be enough so to return to our login form if i click on this login button let's see what is going to happen so the execution of our program stopped on this line here so message label text is equal to success which means that it is going to show this success message on our form and then if i press f8 let's see what is going to happen so if i press it one more time and then again we are going back to our while loop even though we have already logged in our user successfully and found that user it is still checking remaining users why is that the case that is the case because we have not finished the execution of our while loop here so if i click on f8 as you can see it is trying to parse the second user okay and that second user is anna one and then if we had 10 users or 100 users or 100 000 users it would go through 100 000 users even though the first one was success so there are two ways to fix this bug the first one is to say break here after you have successfully found your user and logged him in so you can use break statement but that is something that i don't advise you to do because it is not very readable it is not good practice to use break statements with loops a preferred and a better option would be to create an additional variable that you will initially set to false and then once you find your user you will set that variable to true and then here in your while loop condition you will also check that variable so in each iteration you will check if your user has been successfully logged in in the previous iteration so that is a better option to fix the bug that we have here and then fourth thing is that now you can use this application in order to build any other application that you want so you just upgrade this application uh so what you would do is after you log in your user successfully you close login form and you navigate your user to some other form what kind of form well that depends on what kind of application you are building and then another thing that i would do is i would give my user only three attempts to log in so what you would do is you would count every wrong password that he enters and then after he exceeds those three attempts you can block him and what that means is that you can for example store an additional information to your registered users file which says that a specific user has been blocked or you can find any other way that you see fit to solve this problem so that was all for this video all the links and everything will be in the description or i will pin it in a comment make sure to check out both and if you enjoyed this video please give it a thumbs up and then also share it with your friends who would like to learn programming because if you enjoyed this video then you can make a big difference in someone's life and help him learn programming so thank you very much for watching and i will see you in some other video bye