hi guys and welcome to my channel in this video I'm going to teach you about these structures in programming you will learn what are the structures how to use them and when also make sure to watch this video Until the End because I have a special surprise for you so in my previous video we talked about Constructors and it is necessary to understand what are Constructors before you try to watch this video and understand what are these structures so make sure to watch that video it will be linked here and I will also put it in the description so the reason why we need these structures is to perform necessary cleanup tasks before an object is destroyed so all the resources that object was holding like memory or files and things like that all of those things need to be released and deallocated before the object is destroyed because otherwise they can degrade performance and stability of your application and cause memory leaks and before we start talking about these structures I want to introduce you with a tool that I love to use which helps me to write better code without bugs it is called PBS studio and it is static code analyzer that means that it will analyze your code for potential issues and bugs which is super useful as you will see in this video so it can help you prevent many errors and catch bugs before they go in production which will save you a lot of hours that you would otherwise spend debugging your code fixing errors and that means that it will save you a lot of money so it will definitely help you to improve the quality of your code and to avoid different errors and optimize your code it is very easy to integrate with visual studio and other Ides and also you can use it for C C plus plus C sharp and Java you have my link in the description that you can use to download it and start a free trial but definitely make sure to read on their page because if you are a student you have different options to get it completely free so make sure to try it out and see for yourself how it is going to help you to write better code faster and to avoid bugs so what is this structure this structure is a special type of function that is invoked whenever an object is being destroyed and we will see an example of destructors in a minute when we start writing the code so first I want to explain that the job of this structure is opposite of the job of a Constructor which means that whenever you allocate memory for your object you invoke a Constructor and then when you need to deallocate that memory or free that memory you invoke the instructor okay so let's see how this works in code and I will show you an example of these structures so let's create a class I will call that class book okay so inside it I won't have two properties let's say string title and let's say string author or writer like this so as we already said Constructors are invoked at the beginning of a life of an object and these structures are invoked at the end of its life so let's create a Constructor and also Destructor to show this on an example so let's first create Constructor again if you're not familiar with Constructors make sure to watch that video it will be linked in the description so I will create Constructor I will say book okay and inside here I will receive two parameters string title and string author like this so inside here I just want to assign this title to this title that I've received as a parameter like this and then also I want to do the same for author okay so author is the same as this that we have received as a parameter one very important thing is that both Destructor and Constructor should be in the public section of your class so here I will say that everything inside this class is public okay so this is an example of a Constructor now let's see how we can create a Destructor first you put tilde sign and then you give it a name and then you do this okay so this is the example of a Destructor and there are seven important things that I want to mention here the first one is that the instructor always starts with this tilde sign this is called tilde sign and in case that you cannot find it on your keyboard I'm going to paste this code in the comments so you can copy it and use it for yourself or you can Google this symbol again it's called tilde and then second rule is that the name of the instructor is the same as the name of your class third rule is that Destructor does not have return type not even void so both Constructor and Destructor do not have return types that is third rule fourth rule is that the instructor does not receive any parameters and then fifth rule is that it needs to be a member of your class so it is a member function of your class sixth rule is that it needs to be placed in public area of your class and then rule number seven is that it can be only one Destructor per class so you can have multiple Constructors but only one Destructor okay now let's demonstrate when these two are invoked so let's type here something like C out and then let's say the instructor invoked okay and let's also add the title of the book so that we know for which book this Destructor was invoked like this and then let's do the same for Constructor here I will say that Constructor okay Constructor invoked for this title and then here the instructor invoked for this title now what I want to do is I want to create a few books to show you when both Constructor and Destructor are being invoked so let me very quickly do that here and then I will be back so here I have created two books the first one millionaire Fastlane is by MJ DeMarco and it's a great book for those of you who want to learn about businesses and managing finances I recommend highly and then the second one is actually a great book for learning C plus which is I believe more for you um and I found this book on the internet it costs between 10 to 15 dollars but I have a link where you can also download it for free and I will put it in the description or I will pin it in a comment so make sure to check that out okay so here we have two books and for creating these two books we are invoking this Constructor but these books should also be destroyed at the end of their scope which is the end of application so let's put a break point here and let's see what is happening inside our program let's debug this program so if I started let's see what is going to happen so as you can see our application was passed here and if I press f11 as you can see we are going into the Constructor and we are performing all of these lines and then we have created this first book as you can see titled millionaires Fastlane MJ DeMarco and then the second book is still not created as you can see error reading characters of string so the first book was created the second book was not still so if I press 11 f11 again we are again going into the Constructor but this time for this C plus plus book and then we are creating the C plus book okay and now the second book should be created as well now we came to the end of our function so if I press f11 here let's see what is going to happen okay and as you can see the execution of our program was moved to this Destructor so here it is invoking the structure for C plus plus Lambda story okay and then once more it's here and if I press f11 again again we are going into this function and we are destroying millionaires fast lane book okay and if I press f11 again as you can see our application will close now so one interesting thing that you maybe noticed or maybe you didn't is that the structure was invoked in the reverse order so when you are invoking Constructor it will be invoked in this order so this book will be created first and then this book will be created second but when you are destroying these objects at the end of their scope this structure is going to be invoked in the reverse order which means that this book will be destroyed first and then this book will be destroyed second one important thing that I want to tell you is that if your program looks like this which means if your class looks like this then you don't need to create your own Destructor why because compiler is smart enough to know how to destroy an object that looks like this what do I mean by this well I mean that this program doesn't have any pointers but as soon as you start adding pointers and working with pointers then you definitely need to create Destructor you also need to create copy Constructor and assignment operator and those are separate topics that I have already filmed for different videos and as soon as I edit them and publish them I will link them in the description so make sure to watch those definitely so again as soon as you start adding pointers then you must create your own Destructor because otherwise you are going to have memory leaks so let's create that situation let's add pointer let's say for example int pointer rates okay and let's also say int rates counter like this so what I have done by this is I said hey I want to create an array of rates that will hold integers and this rate is going to be a pointer which means that it is going to point to the first position of my array and I also have to specify in that case how many elements that array is going to have and I've done that by saying rates counter so here I will store the number of elements that this array here is going to have so now what I want to do is here inside my Constructor I want to allocate this array so let's manually hard code this tool let's say two reads so I'll say rates counter is equal to 2 and let's say that rates array is equal to new integer array that has this many elements okay now one very important thing is that if you are going to do this you first need to write this slide and then this line Okay so here I want to manually hard code to read so let's say rates of 0 will be equal to 4 and then let's copy this one more time and let's say rates of one will be equal to 5. okay so these are two rates that we have so as soon as you start working with pointers and allocating new space in your Constructor you need to deallocate that space in your Destructor otherwise you are going to have memory leaks so what you want to do is this space here that you have taken that you have allocated you want to free it which means deallocated in your Destructor so what I need to do here is I need to say something like please delete braids like this now one interesting thing that is happening here is that we are still leaking memory so if you are using previous Studio like I am it is going to remind you here so if I say please check my current file for any errors and let me know if there are any errors now it's doing that and there is this small window here which you can see and as you can see it says the memory was allocated using new array but was released using delete so consider inspecting this code it will probably be better to use delete and then array okay so it is clearly telling you hey here you need to use these angled brackets in order to in order to deallocate this okay so that is one thing that previous studio is going to remind you of if you are not using it then make sure to keep this in mind whenever you are deallocating space but let me very quickly delete this part here and I want to show you something else so let's very quickly switch to excel because I want to tell you why this code here is leaking memory so this part here is visual representation of how your array looks like in memory so this rates array is a pointer which means that it holds an address as you can see here so what kind of address well it holds the address of the first element of your array if you are not familiar with pointers please make sure to watch my playlist about pointers it will be linked here and also in the description so again this rates pointer holds the address of the first element of your array because that's the address of the array itself and this array has two elements four and five and they are on these two locations so now if you try to do this part only what is going to happen and what your compiler is going to do is it is just going to delete this so all of this memory here is now leaking so you've just deleted the address of this array you haven't freed the space that array is taking so instead of doing this if you do this what is going to happen then is it is going to delete all of this so in that case you will not be leaking any memory also another good practice that you should always do is you should say rates is equal to no oh no PTR like this and in this situation it's not going to cause any problems but there are situations when not knowing your pointers can cause different issues so keep this as a good practice to always null pointers whenever you are deleting them so once more this is how you create a Destructor and you need to create it whenever you are allocating space in your memory or working with pointers and of course these lines here can be removed okay now one very interesting thing and one bug that can happen in this program and that is caused by this Destructor is if you try to do something like this let's say that you want to create a new book let's call it book three and what you want to do is you just want to say hey this book 3 will be the same as this programming book here so if I run this program let's see what's going to happen okay the execution of the program was passed here so let's continue and as you can see I have an error here and we have received Warning by PBS Studio at the same time so if anyone knows what is happening here let me know in the comments and in my next video I'm going to reveal to you what is actually going on here and how to fix this bug because this is very common among beginners and this is because many beginners don't understand how copy Constructors work and how assignment operators work so in my next video we are going to talk about copy Constructors so as soon as I edit that video because I've already filmed it I'm going to publish it so the link is going to be here and also in the description so as I promised for those of you who have stayed until the end I have a special gift for the past year I've been working on a programming course that is going to take you from beginner to advanced level and get you ready to work on real projects that inspire you to work for companies where you can earn extra money or if you have your own idea I will teach you how you can bring that idea to life and make it into an application so I've been putting a lot of time into this course and all of my experience so over a decade of experience packed into a single course I know that learning programming can be overwhelming and I know how important it is to have everything on one place step by step many of you have asked me if this course is going to be about object oriented programming data structures algorithms and to be honest I consider those topics to be pretty much beginner topics in programming and once you see this programming course you will also understand why so topics like that and all of the other topics that are already available on my YouTube channel for free are maybe two or three percent of this programming course and the remaining 97 of this course are things that you cannot find anywhere else on the internet things that you are struggling with but you cannot find explanations for them I want to give you that in an understandable and comprehensive way let me give you an example now you have watched my video about these structures and maybe you watched a couple more videos from other creators and you think that you understand the concept because you can apply it on a couple of different examples but what happens when you are faced with the real problem what happens when you're faced with the problem that you have never seen before for example you're working for a company and one day your boss comes and says hey this is not going to work anymore our application is five times the size that it should be it's linking memory everywhere it's slow it's crashing and people don't want to use it anymore we are losing money what are you going to do then what are you going to do in a situation where you're faced with a problem in an application that has half a million lines of code so those are the things that I want to teach you in this programming course so as I said this is going to be beginner to Advanced programming course and I will teach you all the programming Concepts but not on small individual examples I want to teach you how all of these programming Concepts work together and how they coexist to make big complex applications because only on big projects only on big projects you can really understand programming and you can develop your programming logic and understand all of the concepts from object oriented programming data structures algorithms design patterns solid principles and all of the other things that you are going to learn in this programming course so for those of you who watch my YouTube videos until the end and who really want to learn programming I want to give you a special discount and I will put a link in the description for you that you can use to sign up for this discount and make sure to do it now because the number of people that can get it in is limited so thank you very much for watching all of the code will be pinned in the comments and I will see you in some other video bye