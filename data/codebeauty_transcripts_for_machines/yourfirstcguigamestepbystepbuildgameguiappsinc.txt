hi and welcome to my channel in this video i'm going to show you how to build c plus plus user interface application step by step so that it is very easy to understand and we are also going to fix a few bugs together but before i start i just wanted to let you know that recently i created an option for you to buy me a coffee or actually not a coffee but a soy milk latte with cinnamon and a cookie that sounds great so you can do that as a sign of appreciation for all the hard work that i put into this channel so if you like my content if it helps you in any way consider that small gesture of gratitude because that would mean a lot to me and i am going to leave that link in the description but if you don't it's okay i am still going to continue providing free educational content on this channel for you nonetheless so that is all that i wanted to say and now let's jump into the video and let me show you the application that we are going to build so here i have a quiz game that we are going to build together and i want you to notice its main parts here we have a question and then three different answers only one of these three is correct so when you pick your answer you click on confirm answer button and if that answer is correct you will get a point so let's check if this answer is correct it is because i got a point and then if you select an answer which is not correct you will not get a point and then one more thing that i want to show you is the following so let's answer this question here what is the longest river in the world let's say neil and if i click confirm i will get the point because that is correct answer but if i keep clicking on this confirm answer as you can see i will continue getting points so that is also one bug that i want to fix together with you by the way while we are talking about the nail river i want to tell you that in a few days i am going on a vacation to egypt and during that time i will not be posting videos on my youtube channel but i will be posting regularly on my instagram so if you want to be part of that adventure and if you want to see together with me the pyramids and the neil river and all the beautiful beaches that i will visit in egypt and the food the people the culture and so many more things you can add me on instagram my nickname is true code beauty and the link will be in the description so that is the application that we are going to build and for that i'm going to use rad studio and c plus builder i will leave a link in the description that you can use in order to download it and try it out for free and it's very easy to build user interface applications using c plus builder as you will see but if you are not familiar with it at all i recommend you to watch this video i will link it here and also in the description because that video is the introduction into building user interface applications in c plus plus so after you watch that video you can come back and watch this one so as i said i will divide this into simple steps and explain every single one so let's create a multidevice application and let's see what those steps are so inside my c plus builder i will click on file and then new multidevice application with c plus builder and then here i am going to select blank application and click ok and it should create our project okay so here we have our project and now let's see what are the steps to building this quiz application so since i want to build a quiz application that consists of questions and answers the first step would be to create questions class so let's do that i am going to switch to my unit myunit1.cpp okay and i am going to create that class here now a quick tip in order to understand the code that we are going to write now you need to understand object oriented programming you need to know about classes and constructors default constructors and so on and i already have a course about that which i'm going to link here and also in the description so if you need help with the code that we are going to type make sure to watch that course first so let's create a class called question like this okay now what every question in our program will have is the text of the question and then it will have three potential answers and then what we also want to store is the information about which answer is the correct one so let's create those members inside this questions class but since we will be accessing those members outside of the class we need to make them public so i will first say public like this and then let's create char pointer called text so this is going to be the text of our question now let's create char pointer which will be called answer or actually answer one because we have three answers and i am going to copy this line and paste it two more times so that we have answer two and then answer three as well and then the last thing will be the information about which one of these three answers is the correct answer to this question here so let's create an integer property called correct answer like this and here we are going to store either number one or two or three okay so after i have created these properties let's also create a constructor so i want to create two constructors the first one will be default constructor so i will say question like this okay so this is going to be our default constructor and the second constructor that i want to create will be custom constructor that will receive all of the values and assign them to these properties so i am going to copy this line paste it here and this second constructor as i already said will receive parameters so it will receive char pointer text it will receive char pointer answer 1 and then char pointer answer 2 and char pointer answer 3 and also integer correct answer so let's assign these values that we received inside our constructor to these properties here so i am going to say that the text property is equal to the text that we received inside our constructor and then let's assign this one so let's say that answer one is equal to a n s one i'm going to copy this line two more times here and here so answer two will be equal to this answer two parameter and then answer three will be equal to answer three and then correct answer will be equal to correct answer like this so with this we have successfully created question class together with all of its properties default constructor and then also custom constructor that we will use in order to create questions for our quiz application one quick tip is to run your application after every single step so that you can see if you have any errors because it is going to be much easier to fix them now than to fix them later when you have multiple errors from many different steps so now i'm going to run my program okay as you can see i don't have any errors and if you also don't have any errors that means that we have successfully finished the first step and now it is time to move to the second step and the second step is generating the questions so now we are going to generate the actual data the questions that we are going to ask our user so let's create a function called load questions and that function will return a queue of questions now if you are not familiar with queues data structure make sure to watch this video i will also link it in the description that video is going to explain what a queue data structure is but basically a queue is a data structure that allows you to push elements at the end and then you can remove them from the front okay so in order to use queue data structure you need to say here include q like this so now we can create the function that i mentioned and the return type of that function will be stdq so i will say stdq like this and it is going to be a queue of question okay and i will call that function load questions like this okay so let me very quickly find a few questions on the internet that we are going to use for this quiz application and then i will be back to explain the code so i have created three questions and for that i used the constructor that we built in the previous step that constructor receives five parameters it receives the text of the question and then first answer second answer and third answer and then the fifth parameter is the information about which one of these three answers is the correct one so that is exactly what i have passed on the creation of these three questions so as you can see here the first question says which color does not appear on the olympic rings that is the first parameter and then i have passed black orange let's scroll a little bit okay and then the third answer is green and then i have passed also the information about which one of these three answers is the correct one and here it says that the correct answer is the second one which means that orange does not appear on the olympic rings and then i have done the same for this second question and then for third question as well and then i have created a queue of question called questions and i have pushed those three questions into my queue and then i will return that queue of questions from this function called load questions so that is the second step and if you need to generate more questions you can use the same approach that i demonstrated here you would just add uh question number four and then you would construct that question and push it into the queue and then question number five and six and seven and so on however many questions you need so one last thing that i want to do is i want to run this application in order to make sure that i don't have any errors and i don't so that means that we have successfully finished step number two the third step is building the user interface so let's switch to this design mode here and now i'm going to add all of the controls that we need for this application so the first one will be label where we are going to show the text of our question so i will add label let's place it here for example and then i need three radio buttons for three answers let's add that as well so radio button one i will add it here and then let's add two more okay here is the second one and then the third one okay and then i need also a button that i will use in order to confirm my answer so i will say button here and i will put that button like this okay and then i need two more things i need two labels and the first one i will place it here it will say just points and then we are going to use the second label in order to show actual points to our user so let's add another one okay and i will put it here like this okay so let's make this form a little bit smaller like this okay now one thing that i also want to do is i want to change the names of these controls because now they have default names so label one radio button one button one label two and so on and what i want to be here instead is i want this label here to be called for example question label and then this radio button one i will call it answer one radio button and then answer two radio button and so on so let's do that i am going to select this label one and in this object inspector i will find name property so here is name label1 i will change that to question label like this and then let's do the same for our radio button one instead of naming it radio button one i will call it answer one radio button like this okay and then let's change the name of our second radio button i will call it answer two radio button and then the third one you guessed it it's going to be called answer three radio button okay and then this confirm button here that is the name that i want to give it so i will say confirm button like this and then this label to for this label too i will change another property and that is text property so let's find that okay and instead of calling it label 2 i will say points and then column sign ok and then this label 3 i will call this label points label because this one is going to show always this points text and then here we want to change the value so that it represents the number of points that our user has so here i will say that the name of my label is points label like this okay perfect so let's run our program and as you can see here is the interface of our application and one thing that i'm noticing here is that this answer 1 radio button text is not visible entirely so what i'm going to do i am going to increase the size of this and then this one as well and this third answer and then i'm going to also increase the size of this questions label because we want to be able to see the entire question so if i run my program again as you can see the entire answer text is visible so we have successfully fixed the user interface error that we had and one more thing that i want to explain is the default behavior of a radio button control so when you select a specific answer these remaining two answers are going to be unselected by default and that is something that we didn't have to code because that is the default behavior of a radio button control so we already have that behavior without having to do anything without having to write any code so when i select an answer the remaining two are unselected by default so let's close this program and if you have successfully built your application and if it looks like mine that means that you have successfully finished step three which is building user interface and now we can move to step four step number four is to connect this user interface with the actual data so now i want to connect this form with the questions and answers that we generated so let's move to this unit 1 dot cpp and here i want to create two global variables now why i want those variables to be global well as you already know if you create a variable inside a function which means locally like we did here for example or here that variable is going to be available only inside the scope of that function which is from this curly bracket here until this curly bracket here but what i want to do is i want to have those variables that i will create i want to have them available inside many different functions so i want to access those variables from different functions so let's create them globally i will create them here so i will create std q of question and i will call that variable questions let's copy this name okay so that is the first variable that i want to create and the second variable will be just one question and i will call it current question like this and now i will use these two variables in order to connect these questions that we generated here with our user interface and i will use these two variables inside this function here and if you read the name of this function you will notice that this function here is actually the constructor of our form one so this function will be invoked on the construction of this form here which is basically when we run our program so inside this function what i want to do is i want to load all of these questions that we generated inside this questions queue and then i want to take the first question and load it inside this current question variable and i will show that first question on my user interface so let's do that as i already said the first step is to load these questions into this variable here so i will say questions is equal to load questions like this so that is the first step and then the second step is to take the first question from this queue here and put it into this variable here so i will say that current question is equal to questions dot front like this so this line of code here means please take the question that is at the front of this queue here and put it into current question variable now after we have stored our current question into this variable i will use that variable in order to show the first question to our user now one thing that we did in the previous step is we named all of these controls according to their purpose so now i'm going to use those names in order to access those controls from my code so this label is called question label this is called answer 1 radio button answer 2 radio button answer 3 radio button confirm button and then points label so let's switch again to unit 1.cpp and let's use those names in order to access those controls and put the actual data into them so i will say that questions label its text property will be equal to current question dot text like this and make sure to use this symbol here because this is a pointer okay so with this we have successfully loaded the text into our questions label and now let's do the same with the answers to our questions so i will return to my design view and i will copy the name of my answers one radio button so that i don't make a typo and then i will go back to my unit1.cpp and here i will say that answer1 radio button its text property is equal to current question dot answer one like this and let's do the same for the second answer and the third answer as well i will just adjust the name so i will say answer two radio button and then answer three radio button and here i will say answer to and answer three okay so let's run our program to see what we have achieved so far okay and as you can see we have multiple errors so let's fix those first and as you can see here the first error says use of undeclared identifier load question that is this error here and then the second error is use of undeclared identifier questions label and that error is here so to return to our first error this function here load question it is not actually called load question but load questions with s so i'm going to correct that error and then the second error was here and it is not questions label it is question label and in order to check that you can go back to your design and then click on question label and here you are going to use this name property in order to access that control from the code so once more i will return here and i will paste the exact name here so if i run my program now let's see what's going to happen as you can see we have three more errors and those are as you can see here it says no member named text and t radio button that is because we named this property with lowercase t and we should use capital t and we have also copied our code so we have made the same mistake on these two questions as well so that means that you should not copy the code so if i run the program we finally get the result that we expect and that is a question here and then three answers inside our radio buttons so let's close this program and let me do one last thing for this step so here after i have assigned the text of our question and of our answers what i want to do is i want to remove the first question from my queue because we already have shown that question to our user and in order to do that we use pop function so i will say questions this is my cue and i will say pop like this okay and let's add one empty line here like this and with this nothing should change on our interface but we are just removing the question that we already showed to our user we are removing it from our queue which means that our user will not see it again after he answers that question step number five is to define what is going to happen when we change our selection so when we click on our answers and for that we are going to use special functions which are called event handlers and those are just like regular functions except that they are going to be invoked when we click on a specific answer so how do we do that how do we create those functions well it's actually very easy i will switch to design tab and in order to create event handler for the click of this first answer i will just double click on it and as you can see it has created this answer one radio button change function and it is currently empty but here we are going to define the behavior that we want when we change our selection to answer one but let's first create these event handlers for our answer two and answer three i will go back to my design tab and i will double click on my answer two and as you can see now we have two event handlers and then let's do the same for this third answer okay so here we have created three event handlers for our three answers and what i want to do now is i want to create one more global variable i will do it here so here i will create a variable called selected answer it will be of type int so let's say selected answer okay and inside this variable i just want to store the information about which answer our user has selected so when this function here when this event handler is executed this event handler called answer 1 radio button change that means that our user has selected answer 1 so i will store inside this selected answer variable number one and then in this second situation i will store number two and then for this third handler i will store number three and i will explain how we will use this information how we will use this selected answer variable in the next step so keep watching but there is one more thing that i want to do for this step and that is to run our program in order to make sure that we didn't make any errors and the code that we have written did not made any visible difference to our program but it was just a preparation for the next step which is step number six and that is handling this confirm button behavior so let's do that so in order to complete step number six let's switch to our design tab and here i want to create a handler for my confirm button and in order to create a handler i will just double click on that button and as you can see here we have a function called confirm button click so here we are going to describe what will happen when our confirm button is clicked so what should happen logically what should happen when you click on confirm well there are a few things that should happen the first one is i want to check if my user has selected the correct answer and if he has i want to give him a point so let's do that first i will say if this selected answer that we prepared in the previous step so if that selected answer is equal to the value that is stored inside current question and inside its property called correct answer so i will paste that here as well so if our selected answer is equal to current question correct answer what i want to do is the following i want to increase the number of points that my user has but one thing that we have not created is a variable where we are going to store the points for our user so let's do that i am going to create that as a global variable as well i will create it here and it will be of type in so i will say int points okay and i will initially say that points are equal to zero because when the user starts the program he has zero points so let's say that if our user has selected the correct answer we are going to increase his points and then i also want to show that information on my user interface so i will go to my design tab and i will take the name of this control here it is called points label okay and i will say here that points label its text property is equal to points like this and this here should be capital letter t so let's run our program and let's see what has changed okay so if i select orange because that is the color that does not appear on the olympic rings and i click on this confirm button as you can see we have received one point so that is the behavior that we have achieved so far with this code here the next thing that should happen after this is we should check if our queue of questions is empty and if it is not empty we are going to take the next question that is at the front of the queue and we are going to show that next question to our user and then we will remove it from the queue so let's do that let's say if this questions q is not empty like this here i want to do what i just explained and that is i want to take the question at the front of the queue and show it to my user so i will say that current question is equal to questions dot front like this so with this we have taken the first question at the front of the queue and we have assigned it to our current question and now i want to show that on my user interface so i will use the same code that we had here okay and i will say here that now my questions label its text will be equal to the text inside this current question and then i will show answer one of my current question as a text of my first radio button and then answer to as a text of the second radio button and then answer three inside this third radio button so let's see what has changed after we added this code here so if i run my program and i select black for example and click confirm button as you can see we have not received any points but we have switched to the next question now one thing that i don't like is that this here this first answer is selected by default and that is because in the previous question we selected that button and it remained selected so that is why this radio button here is checked so that is one bug that i want to fix so let's close this program and let's say after we have loaded the next question there are two things that we have to do the first one is that i want to pop that question so i want to remove that question from this questions queue so i will say questions dot pop and the second thing is the bug that we noticed and that is that these buttons are remaining checked if they were checked in the previous question they remain checked in the next question so i want to fix that as well so i will say answer one radio button its property called is checked is equal to false and i will do the same for the remaining two buttons so i will say also that answer two is not checked and then answer three is not checked as well so i basically want to reset these three buttons okay and let's format these buttons so that our code is a little bit prettier okay so let's run our program again and i'm going to select orange confirm and as you can see i received one point but one more thing that happened is that the selection here has been cleared so now i can select again we don't have that previous choice remaining in our next question so we have successfully fixed one bug so let's run our program again in order to demonstrate two more bugs that i want to fix together with you and the first bug is on this screen here if you can notice it write me in the comment section so the first bug is this part here it says points label instead of showing 0 as the default number of points that our user has when he starts the program so that is the first bug that i want to fix i am going to close the program and i will return to my t form constructor and at the end i will say that my points label its text property will be equal to 0 when our program first starts or you can also use this variable here because it is initialized to zero when we start our program so that is the fix for the first bug and if i run my program as you can see we have successfully fixed the bug and now we get the value of zero when we start our program so let's get one point let's say for example orange and then confirm and let's say for example that i don't know the answer here so i'll select na2cl and i don't get a point and then let's say also that i don't know the answer here so i will click on amazon and click confirm so i have finished answering to all three questions and i have gained only one point but what happens if your user is malicious user and he tries to hack your program so what happens if he tries doing something like this so now i'm going to change my answer and i will try mississippi okay that is not the correct answer as well so let's try neil then and then click confirm whoa something has happened we have gained one point even though we have previously answered this question so if i keep clicking on confirm as you can see i will gain a lot of points which is another bug that i want to fix together with you so the way that i want to fix this bug is i want to disable this button once my user has answered to all of the questions and if i don't have any more questions in my queue i will just disable the button and i will say game over or the end so let's do that let's close the program and here inside this confirm button click handler i will add else situation so when our cue is not empty we are doing this but if our queue is empty so if we don't have any more questions for our user we will define what is going to happen inside this else block so here i'm going to say confirm button its property called enabled will be equal to false so i want to disable my confirm button if we don't have more questions inside our queue and one more thing that i want to do is i want to say for example confirm button its text property should be changed to the end or game over so if i run my program again let's see if we fixed the problem so i'll say orange and then nacl2 and here i will click for example mississippi and then neil but i don't have the chance to click on this button anymore and by doing that by disabling this button we fixed the bug that we had so now we cannot gain any more points after we answer this last question only once so that is the application that i wanted to build together with you all the links and details will be in the description and i also want to give you a few tips a few suggestions on how you can improve this program and practice programming on your own i want to give you two suggestions the first one is that you don't have to give one point for every single question maybe some questions are going to be harder so you want to give for example two points or three points so that is going to be the first suggestion you are going to assign the amount of points that every question has and once the user answers that question correctly you are going to give him that many points now the second suggestion is you can make this quiz application as a school test so you don't show the result to your user immediately you show him the result only after he finishes the entire quiz so i'm leaving that to you to play with different options and practice programming on your own and if you have any questions feel free to write me in the comment section and please give this video a thumbs up for the youtube algorithm and share it with your friends and if you want to help me to make this something that i can do full time hopefully in the future and create a lot more videos like this one consider using the link in the description to get me a coffee or a cookie or something like that i would appreciate it very much so thank you if you do that and also thank you for watching this video i will see you in the next one bye