hi guys and welcome to my channel in this video you are going to learn about loops in programming I will teach you what are Loops how to use them and when they are used in programming I will teach you about three different types of Loops while loop do while loop and for Loop and we are going to see what are the differences between them so that you can know when to use each one and before we start talking about loops I would like to invite you to join my practical programming course where you can learn all of the skills necessary to to start a successful career as a software developer so if you're tired because you cannot find a job or you already have a job but you are dreaming of a big career in software development then this practical programming course is going to teach you coding and it will help you to get your first job as a programmer if you like my YouTube videos then starting my practical programming course is going to be the best decision that you can make because I'm going to take you from beginner to expert and I will give you all of the guidance and support that you need so that you can start your career in the shortest amount of time you will get the opportunity to work on realistic projects I will also introduce you to a large community of successful developers that you can collaborate with and learn from and everything that you need is going to be on one place so I have created the entire plan for you and the only thing that you have to do is to follow that plan at the end those who finish the course successfully will get a certificate that is going to open and create a lot of career opportunities for you I will leave more details in the description and I will also leave a coupon code so that the fastest people who enroll in the course can get a special discount and if you're not sure if the course is for you or not we have 7Day money back guarantee which means that for any reason if you don't like the course you can get all of your money back so you really have nothing to lose and learning programming can truly change change your entire life so with that being said let's continue talking about loops the first question is what are loops loops are used when you want to repeat a block of code multiple times and this concept also exists in real life but you don't think of it as a loop for example let's say that you are preparing some cookies there are certain steps that you would repeat for each cookie for example those steps would be take some cookie dough roll it in a ball and then you sprinkle it with chocolate and you put it on a plate and then you repeat those same steps for the next cookie so again you take some cookie dough roll it sprinkle with chocolate put it on a plate and you would repeat those steps until you run out of cookie dough so you would repeat them as long as you have enough cookie dough so that same thing can be done in programming with the help of Loops as I said there are three different types of loops that you are going to learn about in this video and those are while loop do while loop and for Loop so the first type of loop that I want to show you is do while loop so let's write the structure of a do while loop so you would say do and then inside these curly brackets you will put the steps that you want to repeat okay and then here you say while and inside these small parentheses you are going to put your condition so please do these steps while this condition here is true and then at the end you need to put this semicolon it's very important okay so this is the structure of a do while loop once more do these steps that I put here while this condition here is true so now let's describe our cookie example in code the first thing that I will do is I will declare variable of type int it will be called available cookie dough in grams and here I will say that I have let's say 300 gram of cookie dough okay so the steps that I want to repeat I will put them inside these curly brackets so what is the first step well the first step is to take let's say 100 G of cookie dough so take 100 G of D okay that is the first step after that I am going to decrease this available cookie dough by 100 okay so available cookie dough will be equal to available cookie dough minus 100 okay and then after that the next step is to roll it in a ball so let's say roll the cookie dough and then the next step is to sprinkle it with chocolate so let's say sprinkle with chocolate Okay and then the last step is to put it on a plate so let's write the last step okay so we are going to repeat all of these steps while the condition that we put here is true so what is going to be our condition well here I will say while available cookie dough in grams is greater than or equal to 100 because that is how much cookie dough we need for each cookie so as long as we have enough cookie dough we are going to repeat all of these steps so we are going to repeat all of these steps as long as this condition here is true and once this condition becomes false we are going to exit the loop so after I finish executing the loop I will simply say console right line and then let's say for example your cookies are ready like this okay so now let's run our program and let's see what is going to be the result okay so here is the output of our program so this is for the first cookie and then for the second cookie and for the third cookie and then your cookie cookies are ready so we have prepared three cookies in total because we have 300 G of cookie dough and for each cookie we need 100 G of cookie dope which means that our Loop repeated these steps three times even though we have written the code only once one very important thing to keep in mind whenever you are creating Loops is what are you going to put as the condition for your Loop which means when is your Loop going to stop because eventually it needs to stop because if you put here something that is always true like for example 1 is equal to 1 this condition here will always be true and this Loop here will be an infinite Loop which means that it is never going to stop so if I start the program with this condition as you can see your Loop is going to run indefinitely which means forever basically until it takes up all of the resources of your computer it is not going to stop and only when you run out of memory then your program is going to crash and it is going to tell you that it is out of memory so the reason why we are experiencing this is because again this condition here will be always true so these steps will be repeated as long as the condition is true which means forever it is pretty obvious obvious that this condition here will always be true so you will probably not make a mistake like this you will not write your condition like this but what happens most often is the following let's return our previous code okay so here we have a valid condition but something that can happen is for example you forget to write this line here so you forget to decrease the amount of cookie dough so in that case also you are going to get an infinite Loop and just to demonstrate that I will run the program again and as you can see once more our Loop is running indefinitely and the reason for that once more is because here we are not decreasing cookie dough amount and here it will always be 300 is greater than 100 which will again always be true so your Loop is never going to stop so once more be be very careful when you are creating Loops because you need to write this condition here in such way so that it eventually becomes false because only when it becomes false your Loop is going to stop otherwise it is going to be an infinite Loop which means that it will run forever okay so let's do another example I'm going to explain what we want to achieve and then you can try and do this on your own and after that you can watch my solution so I want you to create a program that behaves like this it says enter a command type exit to quit so if I say for example hello it repeats enter a command type exit to quit if I say for example test again it will repeat the same if I say lol again I get the same so only when I type exit and I press enter our program is going to stop so I want you to use the knowledge about do while loop that I just explained in order to create program like this and if you want to do that on your own please pause the video here and now you can watch my solution so let's delete this code we will not need it and the first thing that I want to do is I want to create a string variable I will call it user input okay so this is where we are going to store users command users input and then I will use do while loop so I will say do these steps that I will put here while the following condition is true so here we are going to put the condition so what should be the condition well the condition should be as long as users's input is not equal to exit like this okay so this is the condition and then what are the steps that we want to repeat well we want to say console. write and then here I will put the text that I want to write to the user so enter a command type exit to quit Okay and after that I want to read the line that the user has entered and I want to store that inside this variable so we are going to repeat these steps which means write this text to the user and get his input and we are going to repeat those steps as long as the user's input is not equal to exit and when the user enters exit then we are going to stop the loop so let's test this program okay it says hello world and then enter a command so here I will say for example hello it repeats this text so if I say quit it will repeat it again if I say byy it will repeat it again so only if I type exit only then the loop will be stopped and something interesting for you to notice here is that the only text that will be repeated is this text inside the body of our Loop so enter a command type exit to quit and for example this text here this hello world that part is not going to be repeated because that part is not inside our Loop so only the things that you put inside these curly brackets inside your Loop only that will be repeated now another thing that we can improve here is the following so if I say for example exit with capital letters then the loop is not going to stop because what we are checking is if the user input corresponds to this text here and this text with lowercase is not the same as this text with uppercase so what we can do in order for this to work as well is we can put here two lower like this and what this method here is going to do is it will convert user's input to lower case so whether he enters it with capital letters or lowercase letters it will end up being lowercase and then it will compare it with this text here so now all of the variations of exit should work so let's start the program okay so now if I type exit like this it should work it works and then also if I type for example exit like this it should also work okay and if you want to send this program to your boyfriend or girlfriend you can adjust it like this so you can say for example do you love me okay and you want to repeat that question as long as the answer is not equal to yes okay and then once you get this yes as the answer you can say I love you too so here you can say I love you too okay so let's remove this hello world part and let's test the application okay so it asks do you love me and if I say no it will repeat the question again so again I can say for example maybe and it repeats the question again and then let's say I love your dad okay at that point you should not probably ask again but it is what it is and the application asks again do you love me so you can say yes and only then the application is going to stop and before that it is going to print I love you too okay now in case that she writes I love your dad what can we do in our program well we can adjust this while condition so we can say here for example that we want to check for multiple things so we want to check if the user input is not equal to this and at the same time we also want to check if the user input is not equal to I love your dad like this so in this case here and in this case here the loop will stop its execution and I will also adjust this part that happens after the loop so I will say for example if the user input is equal to yes so here I will change this so if the user input is equal to yes then I will print this text else if I will check for this other option so I will say else if user input is equal to this text here well in that case I want to print something else so in that case I will say I loved you here let's say but you broke my heart okay so I loved you but you broke my heart okay so let's test this coding Masterpiece it says do you love me I will say no do you love me so let's say I love your dad okay and I get reply I I loved you but you broke my heart oh this is so sad okay so what you learned here is that you can combine multiple conditions in order to stop the execution of your Loop and if you're confused about this end operator this is logical operator you can learn more about it in the video that will be linked here and I will also link it in the description now let's talk about another type of Loop and that is while loop so what is the difference between do while and while well the difference is following in case of a do while loop we first do something and then we check the condition on the other hand this is how while loop looks like okay so in case of a while loop we will first check the condition and then we will do something or if the condition is false initially then we will not do this part at all so the difference is that in case of a do while loop we will do this part here at least once before we check the condition and then we will continue repeating it as long as this condition here is true and in the case of a while loop if this condition here is false initially we will not do this part here at all so once more do while loop we'll do this part here at least once or maybe more depending if this condition here is true or false and in case of a while loop this part here does not need to be executed at all if this condition here is false initially so let's remove this code here and let's focus on our while loop this is how the structure looks like you say while and then here you are going to put the condition and then here you are going to put the steps that you want to repeat as long as this condition is true now one very important thing is that here you don't put this column sign if you do you will have an error so in case of a while loop you don't need this column sign and in case of a dowi loop you do need a column sign so what kind of program should we create let's say that we simply want to count down from five to One how can we do that with the help of while loop well let's say that initially I will create an integer variable and I will call it counter okay and I will assign the value of five to my variable so then what I will right here is I will say that this Loop will be executed while counter is greater than zero and then what I will do inside this while loop is I will simply print the value of counter so I will say console. right line and what I want to write is the value of this counter variable and after that I want to decrement its value so I will say counter minus minus like this so please decrement the value of this variable and if I start the program as you can see our Loop has counted from five to One backwards and then it stopped okay so once more it is very important that you write a proper condition for your Loop and also if you are counting up or down it is very important that you either decrement or increment your counter so that it eventually reaches this value and then this condition here will be false so the loop will stop its execution and another way that you can write this same condition is here you can see if counter is greater than or equal to one and the program is going to work absolutely the same so if I start it as you can see again it has counted from five to one and then it stopped okay so now I have a task for you and that would be to create a program that is going to count from one to five so you can adjust the code that we have here so that your Loop prints one to 2 3 4 5 instead of this output here so if you want to try and solve this problem on your own you can pause the video here and now we are going to do it together so if I want to count from 1 to five that means that I will start my counter on one and then I will execute this Loop while counter is less than or equal to five because I'm counting to five and then in each iteration I will write the value of counter and then I will increment it so I will increase it by one so this is how the solution for our problem should look like and if I start the program as you can see it counts from one to five and then the loop stops okay now let's do something more interesting remember those tasks that your math professor used to give you in middle school or high school and those tasks would be something like this please sum all of the numbers between 1 and 1 million what's the result and you're like uh I know that I shouldn't do it manually but I don't know how to do it in a better way so I guess I'm just going to fail maths well now there is an easy way to do this with the help of programming in a matter of a few seconds so now I'm going to show you how you can do that with the help of code so how can we write a program that is going to sum all of the numbers between 1 and 1 million so what we will do is we will count from 1 to 1 million so one and then 1 2 3 4 5 six zeros so we are counting from one to 1 million and then I will create a variable it will be of type double and I will call it sum okay and here what I want to do is in each iteration I want to say that sum plus equals to counter like this so to my sum I am going to add the value of the current counter and then I will increment my counter and I will do that for all of the numbers between one and one million but we cannot start our program because we have one small problem which says use of unassigned local variable sum which means that you cannot use this variable before you assign a value so what I need to do is in this line here where I'm creating my sum I need to assign an initial value to this variable now my question to you is what should be this value this value should be a number that is neutral when it comes to summing operation so what is that number well that number is zero because when you add zero to any other number you will get that same number which means that zero is not going to change our sum at all but it will fix the problem that we had here so now after I iterate and sum all of the numbers between 1 and 1 million after my while loop I will simply write the result so let's say console. WR line and here I will say sum is equal to and then let's just print the value of some variable so if I start the program this is the result that we get your math teacher would be proud absolutely um and because this number is too big so we cannot check this in our heads let's just test this with some smaller numbers so let's say sum of numbers between one and three that should be six and if I start the program as you can see we get six so that means that our code works okay now I have a task for you and that would be to please adjust this program so that it sums only even numbers and those are numbers that when you divide them with two they give you the remainder of zero so you can try and solve this problem on your own please pause the video here and now you can watch my solution so if you want to sum only even numbers before you perform this summing operation you will check if your current counter is even so you say if counter modulo 2 is equal to zero so only if this number is divisible by two only in that case perform this summing operation and then in any case increment the counter so only this part is under our if condition so now if I run the program let's see what is the result the result is two because the only even number between one and three is two so that is our result and then if I change this to be four so I'm counting from one to four and I'm summing only even numbers so those would be two + 4 the result should be six okay and as you can see the result is six okay so let's repeat once more this is how you use while loop you say while and then inside these parentheses you put your condition and as long as this condition here is true this code here will be repeated and once this condition results as false then you are going to quit the execution of your Loop so you need to make sure that you put here a code that is going to eventually make this condition to become false okay so this is while loop and so far we have learned about do while while and we have one more Loop that we need to learn about and that is four Loop so now I'm going to explain what is four Loop so four Loop is very similar to while loop and it is used when you want to iterate through certain range of numbers and you know exactly where you start so at which number you will start and at which number you will end so now we are going to solve this same problem with the help of four Loop so that you can see two different approaches and then you can decide which approach you prefer and which approach you want to use so this is the syntax of four Loop you say four and then inside these parentheses we will put three things I will explain that in a moment and then inside these curly brackets we will put the code that we want to repeat so what should we put inside these parentheses I said that here we will put three things the first thing is starting value of our counter the second thing is end value of our counter and the third thing is the rule that will either increment or decrement that value so that we can go from start to end so let's write that starting value will be this value here so I will just copy this code so I am declaring counter variable of type int and its initial value will be one okay and then you need to put this semicolon sign please don't forget that it's very important so our start value and then here we need to put our end value so how many iterations will this Loop have and here is our end value so we will iterate as long as the count is less than or equal to four okay that is the second thing and again you need semicolon and then the third thing is the rule that will take us from here to here and that is this rule so I will copy that part as well so we start at one we go until counter is less than or equal to four and in each iteration we increment counter by one and this here is the syntax of four Loop and once more it's very important that you don't forget to put semicolon here and also here okay so what should we put inside the body of our for Loop we should put the code that we want to execute in each iteration and that is this code here so here I will say in each iteration please check if this counter is an even number and if it is add it to my sum so here you can compare how while loop looks like and how for Loop looks like these two are going to do absolutely the same thing but they have different syntax and you can use whichever one you prefer so in case of a while loop you will declare counter here outside of your Loop and then here you will put your condition and then inside the loop you will put the rule that is going to change the value of that counter so that you can eventually reach that condition and make it false that is while loop and all of these are elements of while loop and then this here is for Loop and in case of a for Loop you put all of those three things together here inside these parentheses so start value of the counter and value of the counter and the rule that is going to change the value of the counter so that it can go from the start to the end so now I will delete this code that is related to our while loop so that we have only the code that is related to for Loop and then I will move this line of code at the end so after I sum all of the numbers I will print the result so if I start the program let's see what is going to be the result and as you can see the result is six so we are summing only even numbers between 1 and four so those are 2 + 4 and the result is six okay one very important thing that I didn't tell you before is that writing your for Loop like this is a sacrilege in developer Community it's basically a sin which part well this part here the name of your counter variable every developer knows that this variable here should not be named counter it should be named I like a single letter I so I is equal to 1 and then I is less than or equal to four and then here i++ and then here also you should use i instead of counter okay so your code is going to work absolutely the same but this here is common naming that developers use inside for Loop and if you need to create multiple for Loops instead of of naming your variables counter 1 counter 2 counter three and so on you are going to name them I J K Zed and so on and once more your code is going to work absolutely the same regardless of the name that you use for your counter or iterator variable but naming it like this is a common practice among developers and when any developer in the world sees this name he will know what it is and when he sees some different name he will be like what is this who wrote this code so that is my suggestion for you you should also use this as the name for your iterator variable so now I have a task for you so that you can practice using for Loop and that task is following I want you to iterate through all of the numbers between let's say two and seven and I want you to multiply all of those numbers so 2 * 3 * 4 * 5 * 6 * 7 and to give me the result so you can try and solve that problem on your own and now we are going to do it together so as I said we will start iterating from number two until number seven okay and what we are going to do inside each iteration is we will simply multiply that number to the result that we currently have so let's rename this variable here let's call it result or result of multiplication but that is too long and here inside each iteration what I want to do is I want to say that result will be equal to whatever result was previously holding multiplied by I so you can write it like this or you can write it like this both lines are going to do absolutely the same thing but this approach here is just shorter way to write that same thing okay so now after I finish multiplying all of the numbers here I will say that result is equal to this value here so now if I run the program what do you expect to get let me know in the comment section please pause the video and think about what is going to be the result and write it in the comment section and now I will run the program okay and as you can see we get the result of zero but this is not the correct result it's definitely not zero so now the question is why are we getting zero here and the answer is because of this initial value of our result variable so we need to put here initial value because if we don't have it then we are going to have an error here so we need to initialize this variable but what should be initial value of this variable is a number that is neutral when it comes to multiplication and the number that is neutral in multiplication is one because any number that you multiply by one you get that same number so here I will say that my result initially is equal to one because that is not going to change our result so now if I start the program this here is the result that we get so here I have calculator app app so that we can check this result so 2 * 3 * 4 5 6 and seven and the result is the same result that we have in our application which means that our code works so in this video we have learned one very important Concept in programming and those are loops loops are used very often in programming whenever you want to repeat some steps in your code you use Loops we have learned about three different types of Loops do while loop while loop and for Loop and we have said that they are all used in order to solve same types of problems but sometimes it is better and more intuitive to use one Loop and sometimes it is more intuitive to use the other loop but it is not mistake if you use for example while loop instead of for Loop or vice versa now when it comes to their differences we said that the difference between do while and while loop is that in the case of do while loop we first do something and then we check the condition and in case of a while loop we first check the condition and then do something so that means that do while loop will be executed at least once because we first do and then we check the condition and while loop does not have to be executed at all if the condition is false initially and then while loop and for Loop are very similar and the difference is that while loop gives you more let's say flexibility because inside while loop you can put multiple conditions and more complex conditions that are going to terminate the execution of the loop so while loop is usually used when you need to write those more complex conditions for stopping the loop and for Loop is used when you know exactly from which number to which number you want to iterate on the internet you are to find a lot of different ways to write your Loops but the approaches that I'm showing here are the ones that are best practices which means that they will not create bugs they will not create spaghetti code they will be easy to understand and easy to maintain in the future now what I'm saying is that for example this same for Loop can be written also like this but please don't do it it's really really bad even though it is going to work the same it is much harder to understand it is much harder to test and eventually in the future it is going to cause you a lot of headaches and a lot of problems so the same way that you can for example put a left shoe on the right foot and put a right shoe on the left foot and you can probably walk like that for a while it doesn't mean that you should do it and the same applies in programming just because something works it doesn't mean that you should do it it so the approaches and the code that I've shown here is the right way and the best practice to use Loops so if you have any questions regarding this topic or if you want me to make a video about some other topic you can leave your suggestions and your questions in the comment section and in the upcoming videos we are going to talk about nesting Loops because that is another important concept and that is another important topic that I want to cover because it is used very often because what you can do is you can have these Loops inside each other and that is called Loop nesting so we will cover that topic in the upcoming videos so if you enjoyed this video then give it a big thumbs up and if you enjoy my YouTube videos in general if you find them helpful then definitely enroll in my practical programming course because there I can dedicate a lot more time to you specifically and I can help you to achieve your goals to get your job as a soft developer and to do that in the least amount of time possible learning to code can truly transform your life and I can help you to learn coding in an easy and fun way and if you decide to start my programming course right now in the description I will leave a coupon code that you can use in order to get a special discount and as I said because I'm 100% sure in the quality of this course I'm offering a 7day money back guarantee which means that if if you don't like it for any reason you can get all of your money back so you have nothing to lose and a lot to gain you can find more details in the description and if you decide to enroll I will see you in a minute thank you very much for watching bye