hello everyone welcome to my channel in this video i want to talk about a topic that is very important but it is also very confusing for most beginners and there is this line of code here using namespace std i believe that you already read somewhere on the internet that this here is a bad practice but i also believe that if you're a beginner it is going to be extremely hard for you to understand what this line of code here is doing and also why programmers are saying that this here is a bad practice and find an explanation that you can actually understand so that is the reason why i'm making this video and after watching this video you will be able to understand this line of code here and you will also learn about namespaces and the main goal of this video and all the videos that i make is to teach you to understand code to teach you to understand programming so that you don't have to rely on opinions of other people on the internet you don't have to trust someone on the internet when he or she says this is a good code or this is a bad code you want to know that yourself and then what i would like you to do is to share all the knowledge that you get from me share it with your friends or coworkers colleagues siblings whoever you have but all the knowledge that you get anything that you understand and someone else does not please share your knowledge with that person so um without further ado let's start explaining this and as you can see here i have using namespace s3d and we will come to this part um in a few minutes first i want to focus on namespaces and i want to explain what are namespaces in general so as you already know in programming you can create variables and those variables can have the same name but what is going to happen if you decide to give the same name to two or more variables please write me your answer in the comments down below before you listen to what i'm going to answer so pause the video okay so the answer is that you will get a conflict if two or more things have the same name you get a conflict so in order to prove that let's create two variables that have the same name so i'm going to say int age and let's assign it value of 25 for example and then let's create another variable also of type int and let's call it age as well and this time i'm going to assign it value of 26 for example okay so what is going to happen if i try to run this program let's see okay as you can see we get an error and that error let me check what it says here it says age redefinition which means hey you already defined the variable called age once and now you are trying to define another variable with the same name why are you doing that so in order to understand the problem that we have here imagine the following real life situation imagine that your name is for example david and then you have a brother whose name is also david and now your mom decides to call one of you too so she says david can you please come here and you're like which one of us are you trying to call you decided to give us the same name why so that is exactly the same problem that we have here so if you decide in your program to say something like age is equal to 30 now your compiler is going to be confused which one of these two are you trying to assign this value to so is this one going to be 30 or is this one going to be 30 your compiler does not know so in order to resolve this problem this conflict that we have here we use namespaces so again namespaces are used to resolve conflicts that we get when two or more things have the same name so what i want to do now is i want to create two namespaces and i'm going to move this variable to one namespace and then this variable the second namespace and then we are going to see how we can work with those namespaces okay so let's create a namespace here how do you do that well you specify keyword namespace and then you give a name to your namespace so let's call it namespace1 for example so this is going to be our first namespace and then let's create another namespace like this but this one is going to be called namespace 2 like this so as i said i'm going to move this variable to my namespace 1 and then this variable to my namespace 2 okay and let's delete this because i don't need it anymore now my question for you is what is going to happen if i decide to say c out h which one is going to be written out this one or this one let's try to run our program but as you can see we already have error here and that error says identifier age is undefined which means that now our main function this line of code here does not know what this age here means what this age here is and the reason why is because we have moved this variable to a different namespace where actually we have two namespaces that contain this variable here so in order to be able to access this one here or this one here we will need to specify the address to that variable and the address to that variable is going to be the namespace so how do i access this variable here well i specify its address which is namespace one so i'm going to say namespace1 and then i use two column size and then as you can see that error has disappeared so if i run this program now as you can see we get value of 25 which is the value that our variable called age has in this namespace here and if we want to access this variable here so the variable from the namespace 2 we would use that different address so we would say namespace 2 age so if i run my program now as you can see we get this value here so we get the value of 26. okay another important thing is that namespaces can contain many different things not just one variable and they usually do so let's create another variable here in this namespace one so i'm going to say string and let's call that variable name and i'm going to say that name is salvina like this which is my name okay so let's use capital s actually so in order to access this variable here again i will have to specify the address and then the name of the variable so let's add one end line here like this and then i'm going to write out the name so i will say c out and then namespace 1 and then if i put these two column signs i will get here a list of everything that is available in that namespace and in this situation that is age and name so our namespace one contains variable called age and then it contains variable called name so i'm going to say name like this and then let's add another end line at the end so that we get a nice formatting and if i try to run my program now let's see what we will get we will get value of 26 which is this age here because we are accessing because we are accessing variable age from this second namespace and then here we get saldena because we are trying to access this variable here so namespace1 name which is this variable here okay now one thing that i promised in the beginning of this video is to explain what is this line of code here so using namespace std and following the story that i already told you you may guess now that std is a namespace and you would be correct as it says here namespace and this std is short of standard so this here is standard namespace which means that it is a namespace that is used very often so the same way that this namespace here has two members and then this namespace here has one member std namespace also has its members and std namespace has a lot of members so what is going to happen for example if i delete this line of code here let's do that okay i deleted it and if i try to run my program now what will happen well the first of all program is not going to build and it's not going to run and then second we will get three errors that we have here the first one is identifier c out is undefined and then identifier end line is undefined and then here as well it says string is undefined which means hey i don't know what this object here is what is c out and then what is endline and what is string and the answer to that question is that this object here and this one here and string as well these are members of standard namespace which means that in order to be able to access c out and end line and string you need to specify the address of those objects so one way to fix the problem that we have is to say here std and then two column signs okay the same way that we did here here you can specify the full name the address to that object and that error should disappear as it already did and then here as well you can say std end line and that error disappears as well and then here std c out and then again std end line and then here we put std to column size string okay and if i try to run my program now as you can see it behaves as it should okay let's close it now this approach here to write std every time that you want to use your c out or end line or string that is a little bit tedious to write every time so what you can do instead is you can include this c out in the beginning so you can say hey i will be using std c out okay so each time that i write c out you know that this here is its full address this here is its full name so now i can remove this stdc out okay and we should not have a problem and then you can include this one here so std and line and then std string as well so i'm going to do that i will say std and line and then let's do one more let's say std string like this and now i can remove this part here and then this part here and i can remove my std from here as well and if i run my program now as you can see we get the same output again so this approach here is going to be alternative to this approach here so you can say either using stdc out and then std end line and std string or you can put here std two column signs and then the name of that object now one more thing that i want to explain is why this here is bad why using namespace std is bad so if you look at this namespace here you can see that namespace1 has two members only but this namespace here std namespace standard namespace has a lot more things a lot of different things are included in this namespace here so if you say using namespace std that means that you are including all of those things from this namespace here so if i try to access my namespace 1 for example if i say namespace 1 and then i put 2 column signs i get variable age and variable name because those are two members of my namespace one but if i try to say that same thing for std namespace so std and then two column signs as you can see here i get a lot of different things that i can use and access to from my std namespace and that is the reason and as you can see here it is c out so here is one of the things that we are using from std namespace and again there are many more things than just these three that we are using so that is the reason why it is not recommended to do this line of code here and also you may see people use this line of code here in tutorials i am personally using it because it takes much less space here i'm taking three lines of code and here i'm including basically everything that i will need in just one line of code but again it is very important for you to understand and know that this here is not recommended and then this here is recommended way to use your c out and line and string and c in and so on so i hope that now you understand what are namespaces and why some people on the internet say that using namespace std is a bad practice so if you like this video please give it a thumbs up for the youtube algorithm because that helps me to reach a lot more people because then youtube will recommend this video to other people as well and then also if you want to watch more videos like this one subscribe to my channel and if you want to get a notification every time that i publish a new video click the bell icon so thank you very much for watching and i am going to see you in my next video bye