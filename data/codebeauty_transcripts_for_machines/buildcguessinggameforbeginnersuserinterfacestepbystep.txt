hi guys and welcome to a new video where i will teach you how to build a user interface game with c plus plus so this is a beginner friendly project so if you don't have much experience with building user interface applications welcome this is a video for you so in this video we are going to use c plus builder and rad studio which stands for rapid application development and i'm going to leave a link in the description that you can use in order to download it and try it out for free and i will also link some more videos where i teach you about building user interface applications and games with c plus so make sure to watch those videos as well so with that being said let me show you the application that we are going to build so here is the application that we are going to build and it's actually pretty selfexplanatory it says please enter the number so i will enter number five and click confirm and now the situation on our user interface has changed a little bit it says now you can guess the number and also we have a wrong attempts counter here it is zero so far so let's try to guess the number let's enter number one and click confirm and we get a helper message which says number two low and also we made one wrong attempt so let's try with a bigger number let's try with number 10 for example so i will click confirm again and now it says that the number is too big and also we made two wrong attempts so let's try third time with the number in the middle so number five and i click confirm and now it says you won congratulations so that is the application that i'm going to show you how to build so as you already know when i show you how to build a particular application i like to divide it into several steps so that it is easier for you to understand and i'm going to do that this time as well so the first step is to create our project so let's create a new multidevice application with c builder it is going to be blank application and i will click ok and now our project has been created now the second step is going to be to create a user interface which means that now we are going to put on this form here all the controls that our application should contain and i will just drag and drop those controls from this palette here the first thing that i will need is a label so t label this is going to be our title okay and then we need an edit so an input field where we are going to enter our number i will just make it a little bit bigger and then we need a button okay i will put it here and i will also make it a little bit bigger like this and then we need a message label so another label where we will write a helper message to our user okay and then one more thing that we need is going to be a label where we will write out the count of the attempts that our user has made so i will put it here like this okay and then i will make this form a little bit smaller so i believe that is all for the user interface if we forgot something we are going to come back and then add it later so the second step that i want to do is i want to change the names of these controls here and they currently have default names which are label one label two label three button one edit one and so on and what i want to do instead is i want to name them according to their purpose and the reason for doing that is because i want to access these controls from my c plus code and it is going to be much easier to remember which control is which if they have meaningful names so instead of this being called label one i will call it title label and then this label tree will be called counter label and then label two will be called helper label and so on so let's do that i will click on my label one and here i will change its name property so i will call it title label okay and then label two will be helper label okay and then label three will be counter label button one will be called confirm button and then this edit one will be called numbers edit like this so with this we have changed the names of all of our controls and now we can proceed with step number three the third step is building the logic and since our game is a game for two users i will separate this into two parts the first part is going to be building the logic for our user who will initially enter the number and then the second part will be building the logic for the user who should guess that number so let's build that first part of the logic i am going to open this unit 1.cpp and then this unit 1.cpp again and here i'll just make it a little bit bigger so that you can read and here we will build the first part of the logic so inside this constructor here what i want to do is i want to define what is going to happen when our application starts initially so what i want to happen when our application initially starts is i want to change a few things first thing is that i want to write out the title here so i want to say something like please enter the number and then this counter label will be equal to zero and this helper label will be empty so there will be no helper message at this point so let's return to our unit 1.cpp and here i will say that title label its text property will be equal to please enter the number like this okay and then as i said our counter label its text property let's just make it capital t so its text property will be equal to zero and the third thing is helper label and its text will be empty like this so if i start my program let's see what is going to happen okay as you can see here it says please enter the number and then the counter is zero so what i want to happen next is when my user enters the number let's say for example number 55 and clicks on this confirm button i want this number here to be removed i also want to store it so that we know which number our first user has entered and then i will give the opportunity to my second user to guess this number here so what i want to do now is i will build the logic for this confirm button so let's close the application and then i will go to my unit 1.fmx and here i'm going to create on click event handler for this button here so how do you do that well you just double click on that control and as you can see it has created a method which is a handler which will be invoked every time that our user clicks on confirm button so here i'm going to write the logic of what is going to happen when the user clicks on that button so here i want to do the following the first thing that i want to do is i want to check if we are writing the logic for the first user or for the second user so the first thing that we are going to need is actually two things and those are two variables the first one that is going to tell us if the number has already been entered and then the second variable will be a variable where we are going to store the number that our first user enters which means the number that our second user has to guess so let's create those two variables i will do it here and the first one is going to be of type bowl and it is going to be called is number entered okay and initially i will give it the value of false now you can do that here or you can do it here as well in the constructor and then if you don't assign any value the default value that is assigned to both variables is false so you are not going to make mistake in any of those three cases so that is the first thing and then the second thing is another variable of type int and that is going to be our guess number and here i'm going to store the number that my first user enters now what i want to do with this is number entered variable is inside this confirm button i want to check if my number has been entered i want to let my second user to guess that number but if that number has not been entered that means that i first need to let my first user to enter that guess number so let's write the logic for our first user i will say if and then i will use this variable here so if the number is not entered please pay attention that i added this not here so if the number is not entered please do the following code so please perform this block of code here so what is going to happen if that number has not been entered already well i will take the input from this edit here so i will take its text and i will store it into this variable here so i will say that my guess number is equal to numbers edit so that is the name of our edit so numbers edit its text property and i want to convert it to integer number like this so that is going to be the first step so i have taken the input from my user and stored it into this guess number variable and now i'm going to say that now the number has been entered so now this variable becomes true and then i want to do something else and that will be that i want to change this title label i will write out a message for my second user so i will return here and i will say that title label its text will be equal to now you can guess the number so this is a message for our second user so let's run our program and let's see what we have achieved so far so okay it says please enter the number and here i enter the number 55 for example and i click confirm okay and now it says now you can guess the and then we don't see the rest of the message so we are going to make this label a little bit bigger that's the first thing and then the second thing is that now we need to also remove this number because it doesn't make sense to say now you can guess the number while the number is still being available in this input field so let's fix those two things okay the first thing is i will make this title label a little bit bigger like this and then the second thing is i want to clear the text from my numbers edit so i will say numbers edit it's text property will be equal to an empty string like this so let's run our program again okay so again it says please enter the number and i will enter the number 66 and if i click confirm as you can see it says now you can guess the number and the number has been cleared so what we can do now is we can write the second part of the logic which is the logic for the user who is going to guess the number so we are going to write that second part of the logic in the else block so here it says if the number is not entered please make the first user enter that number else which means if the number is entered then we are going to make our second user guess that number so i'm going to say else and here i will write the second part of the logic so there are three things that could potentially happen in this else block so three things that our second user can do the first option is that he successfully guesses the number the second option is that he enters the number which is too low so a smaller number than our first user and then the third option is that he enters a number which is too big and we are going to cover all of those three situations so the first thing that i need to do is i need to take the number that my second user entered so let's create a variable of type end and i will call it second user's number and inside this variable i will store the number from my numbers edit text property i just want to convert it to int like this okay so this is the number that our second user has entered so what we have to do now is we have to check if this second user's number is equal to the guess number so the number that our first user has entered so i will say if and then i will compare the two so i will say if second user's number is equal to guess number like this what i want to do in this situation is i want to write out a message to my user so i will use my helper label and inside its text property i will say u1 okay and then congratulations and then another thing that i want to do is i want to disable my confirm button because there is no reason for him to be able to execute this method anymore after he guesses the number so i will say confirm button and i will use its enabled property and set it to false like this and if this here happens if our user guesses the number i will just say return like this okay so this is the situation where our user guesses the number correctly but there are also other situations where our user enters the number which is greater than the first user's number and then number which is lower so after i have checked this in the situation where this here is not true i will proceed with an else if which is going to check the following so inside this else if i will say please check if the second user's number is greater than guess number like this so in this situation i will write out a helper message to my user which says your number is too big so i will use this helper label and inside its text property i will say number two big like this one more thing that needs to happen is we have to show the number of attempts that our user made and we also need to increase that counter of attempts every time that our user enters a wrong number so in order to do that let's create a variable of type int and i will call it attempts counter like this and initially it is going to have the value of zero because when we first start our application our user has not made any attempts so in the situation where our user enters a number which is too big i will say that attempts counter will be incremented by one like this and then another thing that i want to do is i want to show that attempts counter so i will use counter label and inside its text property i will put this value here like this okay so let's test this code so far i'm going to run the program okay so the first user enters the number 55 and i click confirm so the number has been deleted so now i can guess the number so i will enter the number 99 for example and if i click confirm here i get the message which says number two big and then attempts counter is set to one and then if i try another number which is 88 for example and click on confirm as you can see my attempts counter has been incremented okay so that works as expected and the third situation that we need to cover is when our user enters the number which is too low so let's stop the program and here i will write out a final which is a situation when our user enters the number which is too small so here we have covered the situation where the numbers are equal and then we have also checked if the second number is greater than the first number so the only situation that remains is that the second number is smaller than the first number so i will write that part of the logic inside this final else block so i will say that here our helper message will say something else so it will say that number is too low so the number that's that our second user has entered is too small and then i will do this part here as well so i will say please increment this attempts counter and then show the number of attempts so i'm going to run my program again okay and here i will enter the number 66 i will click confirm okay and now i can guess the number so let's enter number 77 i click confirm okay and it says that number is too big and here is our counter of attempts so let's delete this number and let's try with another number let's say for example 55 and i click confirm and now it says that the number is too low and the counter of attempts is two so let's attempt number 66 and i will click confirm and as you can see it says congratulations you won so that is the game that i wanted to show you how to build and one more thing that i want to do is since this else if and then this else block are sharing this part of the code as you can see it is same here and here i want to move that part of the code outside of those blocks so i will remove it from here and i can now remove these curly brackets okay and then from here as well so now what is going to happen is that if this second number is greater than the first number it is going to write out this message and then it will proceed and execute this part of the code and then in case that this final else happens it is going to write out this message and then again it is going to proceed and execute this part of the code so the behavior is going to stay the same and then one more thing that i can do as well is i can use preincrement here and with that i can remove this line of code so i can say please first increment this variable and then put it inside this counter label okay so if i run my program again let me show you that the behavior stays the same so i will enter the number 78 and i click confirm so let's guess the number let's try number 100 and i click confirm okay number is too big i try 77 for example i click confirm number of attempts is 2 and that number is too low so let's try number 78 and if i click confirm as you can see now it says you won congratulations and the number of attempts was two so that is the game that i wanted to show you and now you can play it with your friends or you can share it with them and teach them how to build the game themselves and if you enjoyed the video please give it a thumbs up because that means a lot to me and it also means a lot for the youtube algorithm and if you have any questions or any topics that you would like to see in the future let me know in the comment section thank you very much for watching and i'm going to see you in some other video bye