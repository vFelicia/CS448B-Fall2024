hi everyone welcome to my channel my name is saldina and i make it and programming related videos so if you're interested in those please subscribe to my channel and give this video a thumbs up because that helps me a lot to reach more people and spread programming knowledge and in this video i want to talk about generics and templates in c plus so what are generics the idea of generics was born when programmers decided that they want to be able to use the same code but with different data types so the logic is the same but data types are different or if you want another explanation when we talked about functions we said that we can pass parameters to functions and what we said as well is that types of those parameters had to be known beforehand so you had to hard code types of those parameters whether it is int or char or float or any other data type that had to be known beforehand but with this idea of generics what we should be able to do is we should be able to pass that type itself to a function so we should be able to determine which type we want that function to operate on and the best way for you to understand this will be on an example so that is exactly what i will do so let's say that in my visual studio i want to create a function that will swap the values of two variables and if you don't have an idea how you can swap values of two variables i have a video where i explain that in a very visual way so you can use that video i will link it here so here i will just type very quickly the code for that and if you need explanation again you can watch that video so i will say that that function will be of return type void and i will call it swap and then what i want to pass to this function will be two integer variables so i will say int a and then int int b like this okay but because i want to have both of these variables available in my main function which will invoke my swap function i will have to pass these two variables using a reference and again if you're not familiar with passing parameters by a reference i will link another video here where i talk about that and i think that i made more than one video on my channel talking about passing variables by a reference to a function so i will put those in the description as well so the code for this swap function will be the following so i will say int temp i will create a temporary variable and to that temporary variable i will assign the value that my variable a is holding and then i will assign to my variable a the value that my b is holding like this and then to my b i will assign whatever my temp variable is holding again if you need to understand this in more detail i will put video in the description of this logic here okay so now this function should give us the ability to swap values of two variables and the way to test this function is the following so i will say please create two variables call them a and b like this and to my a variable i will assign the value of 5 for example and then b will have the value of 7. so let's write out values of these two variables let's say a and then just make a separation and then value of b like this okay so now what i want to do is i want to invoke this swap function i will say swap and then i will pass my a and then b like this and if i copy this line after the invocation of my swap function we will see if the values had indeed been changed so if i run my program as you can see this line of code here has resulted with this output so 5 7 and then after invoking our swap function the values inside these two variables so a and b have successfully been swapped so now it is seven five okay excellent so that means that this function does what it should do now what happens if i want to swap values of two char variables for example what i would have to do is i would have to copy this function paste it here and then i will adjust it to be able to work with char variables so i will say char and then i will change this with char as well and then here i will put char as well now this swap function should work with char parameters and this is called function overloading if you are not familiar with function overloading i made that video explaining how it works so i will link it here if you want to watch it and i will put it in the description as well so this function should be able to work with char parameters now and in order to test this function let's create two variables of type char so char c and then d as well and to my c variable i will assign the value of letter c and then to d i will assign the value of letter d excellent so i will copy this line of code here and i will just adjust it so that now we write out the value of our c variable and then here we write out the value of my d variable like this and then after this line of code here i want to invoke this swap function so i will say swap and then pass it c and d like this and i want to write out my c and d variables after this line of code here so after i have swapped the values just to check that they successfully have been swapped so if i run my code as you can see we have this output output here so c and d and then after swapping the values inside these two variables we have this output here which means that they have been swapped successfully now i see a problem with this approach here and the problem is following what happens if i want for example to swap values of two float variables and then two doubles and then two booleans and so on well i would have to create this swap function for each data type and that is repeating code and we shouldn't really be repeating code unless we really need to and in this particular situation we don't so there is a simple solution for this problem and that simple solution will be using generics and the idea is to be able to use the same function the same logic but with different data types so again we will be solving this problem using generics and the way that generics are implemented is using templates so how do you make a template in c plus plus well you use keyword that is template like this and then inside these angled brackets you will put the name of your type so you will say type name and most common type name that is used is called t but you can use whichever type name you want you can say type as well if you want that should work but i will use t because that is the recommended way so now that i have created a template and i have said i want to create a new type which is called t i will have to use this t in my swap function so now i will change this int with my t so i will say t here and then t here and i will create t here as well okay now this t is called generic data type and this swap function is now a generic function which means that this swap function can be used on any data type whose variables can be swapped using this logic here so in one invocation it can be swapping integer variables and then in another it can be swapping characters and then in the next one floats and then doubles and booleans and so on so now that means that we can really remove this swap function because we do not need it because as we said this function here is a generic function and it can be used with different data types so now i will delete this swap function here and if i run this code this code should work as it did before so let's press this button okay and as you can see five seven and then seven five this function indeed works for integers and then cd and then dc so it works for characters as well and let's close this okay now what you can do here as well here in the invocation in this 15th line invoking this function for two integer variables what you can do is you can specify the type itself as well so you can say i am invoking this swap function for my integer type so now when this function is invoked it will go here and this t keyword will be changed with this int so it will be int here and then into here and then into here and it will do the swapping this function here will do the swapping for int data type and then in this 20th line here you can say as well char if you want you don't have to that process will happen automatically because you have declared c and d as chart type so those c and d of type chart will be passed here and then char will be here and char will be here and then char will be here as well so what we have acquired with this template function here is to be able to use the same code with different data types we have just demonstrated how that can be invoked for integer data type and then how we can use it for character and you can do on your own float or double or bowl and so on okay and then what you can do as well is you can use any other name for your generic type t is something that is used commonly in literature but you can use type as well if you want so you can say oh you can say type and then you would have to say type here and then type here and here as well okay that should work the same way that it did previously and then another thing that you will find in literature is instead of this type name keyword you can use class um it really depends on you whichever one you want to use you can and again if you know what classes are class is a type as well so it is user defined type so this should work as well the same way that type name keyword did and if you are not familiar with classes and objects and objectoriented programming i have course which i will link here so make sure to watch that so i hope that this video helped you understand what are generics and templates and what is the main idea behind them and we will be talking about this of course in my future videos and in more depth so make sure to subscribe to my channel and hit that bell icon as well so that you don't miss a video that i publish and if you like this one please give it a thumbs up that helps me to reach more people and help more people with programming so thank you very much for watching and i'm going to see you in my next video bye