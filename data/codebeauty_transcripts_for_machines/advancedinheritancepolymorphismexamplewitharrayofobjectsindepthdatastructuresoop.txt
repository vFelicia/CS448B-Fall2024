hi guys and welcome to my channel in this video you are going to learn about arrays of objects and their relationship with inheritance and polymorphism so as you already know from my previous videos array is a type of collection that stores elements of the same type but in this video you are going to learn how you can store elements of different type in the same array and we are also going to see how you can Implement inheritance and polymorphism so this video is very important for every single developer especially for those of you who want to become game developers so make sure to watch it until the end and also at the end there is an example for users you can practice programming on your own and before we start with the video as most of you already know for the past year I have been working on a practical programming course that will teach you how to think as a programmer and that will give you that strong indepth understanding of programming this is going to be practical program course and it will 100 lead you to getting your first job as a software developer or getting a better job if you already have one because in this course we are going to solve a lot of real world problems with code and you will get that strong understanding of how big complex applications are built and this is going to be a complete Journey from beginner to expert programmer and it will allow me to pass on you all of the knowledge and experience that I have acquired in the past 10 years of coding and since this community means a lot to me I want to give you guys a special discount when compared to other people because you have been supporting me and watching my videos on YouTube for a long time so if you are interested in this course I will leave a link for you in the description that you can use in order to sign up and I will send you a discount once the course launches it is completely free to sign up but make sure to do it right now because the number of people that can get this discount is limited so if you're interested make sure to sign up while there is still place so with that being said let's continue with the topic of today's video so here I have a class called student and student class has three properties those are name age and gender and these three properties are public so that they are accessible outside of the class and this code here is what we are going to use for the video uh first thing that I want to say if you're not familiar with classes and objects then make sure to watch this video I will also link it in the description and since we are talking about arrays of objects if you're not familiar with arrays of objects also make sure to watch this video it will be put in the description so that you can continue following this video without any problems but if you are familiar with those topics then you can continue watching this video so the first thing that I want to do is I want to inherit this student class and I want to create a few derived classes from this student class um here you need to understand inheritance and you need to know what is inheritance and how it is implemented in this video I'm going to explain it in a short few sentences because I already have a video that goes in depth and explains everything that you need to know about inheritance I will link that video here it will also be in the description if you are not familiar with this then definitely make sure to watch that video so again what I want to do here is I want to create a few derived classes from this student class and what inheritance is it is a way to create more specific classes from a more General class in our case student is more General class and what I want to do is I want to create more specific types of student for example I want to create programming Student Art student and music student so let's do that if you watched my video about inheritance you already know that inheritance is implemented with this column sign so it is implemented like this let's create a class called programming student okay and I have put this coincide which means that now I want to inherit from this class here called student and I want to make public inheritance again if you're not familiar with this and this entire command here then definitely make sure to watch my video about inheritance okay and I will put these curly brackets and also make sure at the end to put this semicolon symbol okay so here I have created a class called programming student and programming student is inheriting from my student class okay so let's create two more derived classes I'm going to copy this code paste it here and once more and I want to create another type of student let's say art student okay and let's say music student okay so here we have three derived classes programming Student Art student and music student and all of them are inheriting from our student class which means that all of these three classes will have the properties that our student has so all the properties and methods That Base Class has they will be inherited in the derived class they they will be available in the derived class but each derived class can have its own specific Properties or methods so for example our programming student can have something that is specific for him for example programming grade and then art student can have something that is specific for art students let's say uh painting grade or grade from history of Arts or something like that and a music student can have grade from singing or playing certain instrument so that means that each one of these derived classes can have its own properties and behavior first methods that are specific for these derived classes but whatever is inside this Base Class that will be inherited by every single derived class now let's do something interesting here let's create a method inside this student class so inside my base class so let's say that it will be a method of return type void and I will call it study like this okay so with this we have created a method of return type void it is called study and so far this method will be inherited by every single one of these derived classes but what I want to do here is I want to make this method to be a pure virtual method so how do I do that well I put virtual keyword here okay and I also say that this method will be equal to zero which means that it will not have implementation as you can see I've deleted those curly brackets and now this method here has become a Pure virtual method and by making this method a pure virtual method I have also made this student class to be an abstract class now if you want to learn about this in depth I recommend you to watch this video and in this video you can learn about the relationship and the meaning and the importance of virtual methods pure virtual methods and Abstract classes and that video will be linked in the description so make sure to watch it and here I will explain what that means in a short few sentences so basically by making this method to be a pure virtual method this class became abstract class and that means that we can no longer create an instance of this class class so that is the first thing and the second thing is that now each one of the derived classes that inherits from this Base Class called student will have to provide its own implementation for this method so that means that programming students will need to provide his own implementation for study method and then art student will have to provide his own implementation and music student as well so let's do that let's create implementation for this study method inside every single one of these derived classes so for my programming student I will create public area of the class and here I will Implement my study method and I will simply say C out and let's say learning programming okay let's put the end line and now let's create the implementation for art student but art student will have different implementation he will for example say learning to paint okay and then music student will say learning to play piano for example and to sing okay so here are three implementations of this study method inside every single derived class that inherited from my student because as we said by making this method to be a pure virtual method inside Base Class that will obligate every single derived class to create its own implementation for this method and also as I said now you can no longer create instances of the student class you can only create instances of programming Student Art student and music student classes now let's see what does this have to do with polymorphism and what is polymorphism polymorphism is another Concept in object oriented programming and it allows us the following it allows the object of derived classes or subclasses to be treated the same as objects of a base class or to put it in another words the logic that works for Base Class should work for all of the derived classes now let's see what that means on an example but before that I'm going to link a video about polymorphism here and in this video I talk about polymorphism in the detail and I also put the link to that video in the description so if you are not familiar with polymorphism at all make sure to watch that video right now or after you finish watching this video definitely make sure to watch it because it is an extremely important topic okay so now let's see how we can implement this polymorphism now let's create an array of pointers to student class so here I will say student pointer and let's name the array let's call it students and it will be an array of three elements like this so with this line we have created an array of three elements it is called students and inside each element there will be a pointer to student object now one very important thing that we said earlier is that this class here became an abstract class because it has at least one pure virtual method and abstract class means that we cannot create instances of this class but what we can do is we can create instances of its derived classes so these three classes here so what I will do is now I will put object of type music Student Art student and programming student inside the elements of this array here and because this is an array of pointers that means that we can point to anything that is of type student or any other class that inherits from students so basically I can do something like this I can say that students of zero because indexation of array starts with zero so the first element has the index of zero so the first element is equal to new programming student like this and then the second element the one that has index one will be new Arts student and then the third element the one that has index two is going to be new music student like this and this code is perfectly okay because this is an array of pointers so again this is not an array of students this is an array of pointers to students and because of that we can store inside this array here any pointer to student or any other derived class that inherits from student class and that is exactly what we have done here so now I want to answer an interesting question and that is what is the purpose of this code why did I even write this code what is the benefit and the meaning of this code well if you remember a few minutes ago when I talked about polymorphism I said that polymorphism allows us the following it allows for us to make the logic that works on the base class let's say logic should work on any derived class so now let's see how we can actually demonstrate that well what I want to do is I want to iterate through this array here so I will simply write a for Loop so four inch I is equal to zero I is less than or equal to 2 I plus plus okay and now what I want to do and this is the magical part I simply want to say students of I and then put this symbol because we are working with pointers and here I want to say study okay now a question for you what do you expect to be the result of this code now if I run my application so if I start the program here is the result and as you can see even though we have invoked just one method here I have three different outputs which means that in the background every single student type has invoked its own implementation of study method and that is something that polymorphism allows us to do so again here I have created an array of student pointers which is an array of Base Class pointers and then as elements of that array I have assigned derived classes so in the in my dynamic memory I have allocated space for derived classes not base classes and then here I am invoking this study method on my Base Class array but in the background because the elements of this array are derived classes each one of these three derived classes will invoke its own implementation of this study method and we will get this polymorphic Behavior as you can see here so that is something that polymorphism allows us to do and before I finish this video I want to talk about another very important topic and that is memory deallocation so let me explain what that means here I have allocated new dynamic memory for my programming student and then also for new art student and for new music student so what this means is that for these three objects I have asked my operating system hey please give me dynamic memory that I can use in order to store these objects and what that also means is that once I'm done using that memory and for example once my application finishes what I have to do is I have to free that memory I have to deallocate it and that will basically say to my operating system hey here is this memory I'm giving it back to you so that you can recycle it and give it to some other applications so that memory can be reused otherwise you are going to have a memory leak in your application and eventually you can run out of your dynamic memory so how should you deallocate this memory well it is very important that you deallocated the same way that you have allocated it which means that you deallocate the same memory that you have allocated let me explain what this means let's say for example that you write something like delete students okay and you think that you have the allocated memory by writing this line of code but you haven't or you write something like delete array of students again this is wrong and this is not deallocating the same memory that you have allocated the correct way to deallocate the memory that we have allocated here is the following I am going to write a for Loop and I will iterate through three elements of my array like this and here I will say please delete my students of I because that is what we have allocated we have allocated memory for the first student for the second and for the third so here we are using for Loop and we are deallocating memory from the element that has index 0 up to the element that has index two so we have deallocated memory the same way that we have allocated it here and a short tip that I would give you is to use a static code analyzer and static code analyzer is a tool that you can use in order to analyze your code and it will tell you if you have any errors or memory leaks and if you use any of the two previous ways that I demonstrated uh for deallocating memory in those two cases you would have a memory leak so this here is a correct way to deallocate the memory and for checking any errors of that type you can use static code analyzers the one that I love using is called PBS studio and I have a link where you could download it for free I'm going to check if that link still works and if it does I am going to put it in the description so that you can download previous Studio as well so that is the tip that I wanted to give you one thing that I promised at the beginning is that I will give you a task that you can use to practice on your own so here it is what I want you to do is I want you to create a class called Monster so that is going to be Base Class like we did here monster and then what I want you to do is I want you to create three derived classes that will inherit from your monster so I want you to create for example zombie vampire and dragon now what is specific about each one of these derived classes is that they all have a specific way to attack so a monster can perform an attack but each one of these three types of monsters have their specific attack for example a zombie will swallow you and then vampire can bite you and dragon will burn you with fire so you should Implement those three methods and then you are going to create an array of monsters and you are going to implement polymorphism like we did here so that when you say monster attack each one of the monsters should perform his own attack so that is a task that you can news in order to practice programming on your own so this is definitely an example that you will come across if you ever decide to write code for games and if you want another example well let's say for example that you can create a class called instrument and each instrument will have name year of manufacturing and let's say manufacturer so that would be your base class and then I want you to create three derived classes three instruments let's say uh guitar piano and drums and each one of those three performs a different sound so what you can then do is you can create an array of instruments and when you say instrument play Then each instrument should perform its own sound so you will basically have your own orchestra playing so multiple instruments playing their own sounds so those are tasks that you can use to practice on your own while you wait for my next video and if you have any questions regarding this video or any topics that you would like to see in the future feel free to leave those in the comment section and also if you enjoyed this video and if you want more videos that are similar to this one uh definitely give this video a thumbs up so that YouTube algorithm knows to recommend you more videos like this one where you can learn about programming and different programming Concepts so thank you very much for watching and I am going to see you in some other video bye but now you can I'm giving it I'm giving