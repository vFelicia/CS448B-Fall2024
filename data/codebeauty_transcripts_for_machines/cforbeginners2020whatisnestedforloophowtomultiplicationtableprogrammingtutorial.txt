hi everyone welcome to my channel welcome to another video of C++ for beginners in this video I want to talk about nesting for loops so I want to show you how you can solve more complex problems using nested for loop but before we start please subscribe to my channel and click the bell icon as well and also like this video so this example that we are going to do today is going to be really multiplications table so I'm going to show you the example that I want to program so that would be this here and if you look at this multiplication table that we want to make you can really start to notice a pattern and what pattern I mean you see here this this first operand in this first part of my multiplication table so in this first table as you can see this first operand is 1 and it stays 1 in this table here after that you can look at this second table you see that this operand is now 2 and then in my third table it has increased at 3 4 5 and it really increases so it increments by 1 and it goes up to 10 ok so that is the first operand so this first part of my multiplication after that we can look at this second operand and you can really notice that it increases in each iteration by 1 so it goes 1 2 3 4 5 up to 10 and then it does the same thing in this second table so it goes from 1 to 10 again and then the same in my third table fourth fifth and it really behaves the same in this tenth table as well so that is the pattern that I want you to notice so this first operand can be really represented using one for loop so let's say that that is going to be outer for loop and it is going to increase each time that my second operand counts from 1 to 10 and that second operand we can really present using another for loop which is going to be really inner for a loop so the program the algorithm for solving this problem is going to go like this you have outer for loop which is going to count from 1 2 3 4 up to 10 so it is going to count from 1 to 10 and then you are going to have inner for loop which is also going to count from 1 to 10 but for each value of my counter of my outer loop okay so that means that my outer loop counter changes only after my inner loop has counted from 1 to 10 so let's copy the text of our task here I'm going to say multiplication table and let's comment the text out so as we said in order to solve this problem we are going to use nested for loops so I'm going to add empty space here and then the first thing that I need is going to be my outer loop so I'm going to really set up my outer loop I'm going to say for and then we need to declare a counter which I'm going to call I so I'm going to say int I is equal to and then since our outer let me show you this image one more time since it goes from 1 to 10 I'm really going to set its initial value to 1 so I'm going to say I is equal to 1 and that I'm going to write the condition so how long this for loop is going to run and that is going to be a while this I is less than or equal to 10 like this and then each iteration it is going to increase by 1 so that is going to be I plus plus okay and then I'm going to put this block of code here that is going to be executed in each iteration of this for loop so what we need to do in each iteration of our for loop let's look at our image one more time and as you can see it really says that in each iteration of this outer for loop you need to count from 1 to 10 so in this situation here some other counter really counts from 1 to ten and then new iteration so our eyes now two and then counter counts again from one to ten and then three but also we have this inner counter that counts from one to ten okay so let's really write that code so that inner counter that counts from one to ten for each value of our I we are going to represent with another for loop and that is going to be really that nested or that inner for loop so I'm going to write four and that inner counter I'm going to call J so I'm going to write int J and since our J also counts from 1 to 10 I'm going to set its initial value to 1 and I'm also going to say please iterate through this for a loop while our J is less than or equal to 10 as well and then in each iteration please increase the value of j by 1 so do this increment operation and then in each iteration of our J loop we are going to execute this block of code here so what we are going to do in this block of code here well let me look at that image once more and as you can see in each iteration of our J so this is one iteration of our J this is second third fourth fifth and then 10th iteration of our J after that we change our I counter value so we increment that and that our J starts again starts one more to count from 1 to 10 so in each of these iterations as you can see really we have to multiply our I value counter with our J value counter and write the result of that so I am going to write that here I am going to write C out like this and then let's write out the value of our I counter like this and then let's write out this multiplication operation and then let's write out J like this this is just formatting our time so I'm going to put this equal sign and then I really want to multiply those two counters like this and let's also add one end line here so that our text is formatted nicely because we are going to have multiple multiple lines so with this we have really covered this multiplication part and there is only one more thing left to do and that is to add one more end line because I really want to make separation between these so I want to make separation between these tables this is going to be one logical part after that this is going to be another than third for it and I want to put empty space space between those two so that I can group dance grouped up so I'm going to add here C out and wine like this and that should be it pretty much so if I run my program now as you can see it has generated this multiplication table from 1 to 10 okay and it has done that in a matter of less than a second so as you can see here we have this outer counter oh I cannot mark that only so we have this outer counter which is going to be our I that counts from 1 to 10 but for each value of our outer counter for it so for each value of our I we have to really count from 1 to 10 with our inner counter which is going to be our J as you can see here ok so these are the results of our multiplication operation and I hope that you have seen now how you can really use programming to your advantage how you can use it to solve not really complex but tedious tasks you would really need 20 or 30 minutes in order to write this yourself and you can now generate it with just a couple of lines of code and less than a second of your computer's power to to really execute this code here that you have written and the most amazing part is that you don't really have to put down here so we have put down here because I want to make this example manageable for this video but you don't have to hard code these values here you can really use whatever values you want you can see for example let's say 2000 okay so I want to generate multiplication stable up to 2000 how long would that take in real life so without programming okay now you see a few moments later okay so it is still running and it is going to generate around 4 million records which is a lot and it is going to do that in a matter of minutes so how long would it take for you to even just count from 1 to 4 million it would take you probably days if not months and also there were a lot of errors that you would probably make in that process so I hope that now you can really recognize the power of programming now if you needed to do this task you will really program your computer to do it and now you can just go take a break and your computer is going to finish that task for you so I hope that you can recognize now how you can use programming in order to solve different types of tasks that you can come across in your school in your job or life in general and if you like this video make sure to subscribe to my channel also click the bell icon and share it with anyone who would like to learn programming and I'm going to see you in my next video bye