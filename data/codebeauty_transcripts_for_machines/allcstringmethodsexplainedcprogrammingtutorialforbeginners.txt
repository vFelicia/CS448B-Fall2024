hi guys and welcome to my channel in this video I will teach you how to work with strings in C and some of the most important methods when it comes to working with strings as a developer you will very often need to work with strings in your career so this is very important topic and I recommend that you watch the entire video because in this video I will teach you everything that you need to know when it comes to working with strings so let's go straight to the point first thing that is important for you to know is how to compare two strings so let me show you how to do that on an example let's create a string variable let's call it Str Str one and here I will assign Value Salina that is my name okay and then let's create another string variable and let's say that it will be called Str str2 and here I will say code Beauty like this so what I want to do is I want to check if these two strings are equal so how can I do that well it's actually very easy and quite intuitive and you can compare strings using this operator so using equality operator so let's say console. right line and here I want to print the result if Str str1 is equal to Str str2 now the result of this operation here is going to be either true or false so one or zero depending if these two strings are equal or not so let's start the program and let's see what are we going to get as a result okay and you can see that the result is false because these two strings are not equal and then if I say for example code Beauty in both and then I start the program as you can see we will get true as the result so the same way that you can use this operator to check if these two strings are equal you can also use this operator to check if they are not equal so now if I start the program as you can see the result will be false because here I'm checking if string one is different from string two and as you can see they are equal so the result of this operation is going to be false okay so that is one way to compare strings and I want to show you another way that offers some additional options but before we go any further if you like my teaching style and if you like learning from my YouTube videos then I can definitely teach you a lot more in my practical programming course you can find it at this site here code Beauty academy.com and as the name itself implies it is extremely practical you will learn a lot you will practice even more and apply everything that you learn I will be there for all of your questions and help you to speed up your progress so that you can start your career as soon as possible a lot of students who enrolled in the course just three or four months ago have already started started their first job and I am very happy and very proud of that so why wouldn't you also be one of them and if you are still not sure if this course is for you or not there is a 7Day money back guarantee which means that you can get all of your money back if you don't like it for any reason now instead of coming up with excuses use the discount code that I will leave in the description and learn programming this time for real because it can truly transform your future so let's get back to the top topic and let me explain another way to compare strings so instead of saying is Str str1 equal to St str2 this way what you can do is you can use equals method so you can say Str str1 dot equals and then inside these parentheses you will put your second string so here I will put Str str2 so this is another way to compare strings and now if I start the program we should get the result result of true because these two strings are equal and then if I change this if I say for example Salina again and I start the program now we get the result of false okay so now the question is what is the difference between this approach and the approach that I've shown you previously and the answer is that this approach here using equals method offers some additional options for example what you can do is is you can say here that you will have another parameter so here you can say string comparison dot ordinal ignore case so this option here and what this option will do is it will treat equally both uppercase and lowercase letters so if I say code Beauty like this and I start the program these two strings are going to be equal so both this string here and this string here are equal if you are using this option and then without this option if you just start the program you will see that these two strings are different because lowercase letters and uppercase letters are not the same but what you can do in case that you want to completely ignore casing and case sensitivity is you can use this additional option in combination with equals method so now I can write this any way I want I can say for example code Duty like this and they will still be equal because capitalization is not important if you are using this option so now the question is when is this option useful it is useful when you are for example comparing email addresses or when you are even comparing usernames because those two are very often not case sensitive which means means that it doesn't matter if you are typing with uppercase or lowercase letters they both will be treated equally also when you're searching on YouTube or Google or any other social media platform very often this option is used in order to completely ignore the casing because both uppercase and lowercase letters will be treated equally the important part is just to give you the word or the search term that you are looking for so those are two ways to compare strings the first one was with the help of equality operator and then the second one is with the help of this equals method you can use whichever one you prefer now while we are at the topic of lower and uppercase letters there are also two interesting and simple functions that you should know the first one is two lower and the second one is two upper so if I say Str Str do to lower what this method is going to do is it will convert this string to lowercase so if I start the program as you can see the entire string is now in lowercase letters and then if I say to Upper this method is going to convert this string into uppercase letters so if I start the program as you can see now our sdr1 is all uppercase so those are two very simple but quite useful functions that you should know about so two lower and two upper so this can also be useful when you are comparing two strings and you just want to compare if the content of those two strings is the same and you want to ignore letter capitalization what you can do is you can convert both of those strings to let's say lowercase and then compare them so let me show you an example of that so if I say please check if Str Str 1 is equal to Str str2 what do you expect to get when I start the program let me know in the comment section okay as you can see the result is false because here it is taking in consideration the letter capitalization so what I can do is I can say please convert Str str1 to lower like this and then also convert Str str2 to lower like this and then compare them so if I start the program now what do you expect to get let me know in the comment section okay and as you can see now we get the result of true because before these two strings are compared they are both converted to lowercase and then they are compared so since their content is the same they are the same okay and then another useful method is converting numbers into Strings so I can say for example int number and here let's say 55 okay so in order to convert this number here into string I simply say number dot to string like this and here you will get this number in string format this can be very useful when you want to work with numerical data but in text format so what does that mean it means that for example if you want to perform different mathematical operations and calculations on this number then you should leave it in numerical data type so then it should be an integer or float or double decimal and so on but if you want to work with this number as part of a string then you can easily convert it into a string and then you can search through that string you can compare it with another string you can take a substring which means a part of that string and so on and that string can contain numbers of course and this method here is a way to convert a number into a string okay so now I have one trick question for you and that is the following if I say here number to string plus number to string okay so this is First Option and then the second option is this so number plus number what is going to be the result what is going to be the output of this line here and then this line here please pause the video and try to find the answer on your own and then write the answer in the comment section and then we are going to start the program together okay and as you can see the result is very different so we did not get the same result for this line here and then this line here so now the question is why and the answer is is very simple so this number here was converted into string format as well as this number here so that means when you try to sum these two it will simply concatenate them so we get the first number and then we get the second number and they are simply concatenated together because they were in string format and then in this second case number plus number they are in numeric data type so then they will be summed and we get the result of 55 + 55 which is 110 okay so let me know in the comment section if you get this answer right okay now let's talk about another interesting method let me show you how you can search for a specific term in text because that can be useful very often and it is very interesting to know so let me find some text and I will be back okay so here I have my website where you can learn practical programming now let's copy this text so that we have some text to use okay here I will create a string variable and I will call it text like this and then inside these quotation marks I will put all of this text so now what I want to do is I want to search for a specific term inside this text so how can we do that it's actually very easy you simply say text Dot contains okay so please check if this text here contains this word for example let's say practical so if I start the program it should tell me if this text contains this word so let's start the program and as you can see we get true because truly this text here contains the word that we are searching for and it is here and if I say for examp example refund and I start the program again we get true because our text contains word refund and it is here but if I say for example elephant and I start the program as you can see we get the result of false because our text does not contain word elephant and you can also have more than one word here you can have an entire search term so let's add some text here let's say for example this programming course will teach you to create innovate and solve real problems with code and it will help you to start a successful career okay so if I search for this part of the text so successful career those are two words and I start the program as you can see again we get true so you can put here as much or as little text as you want as long as this text contains whatever you put here you will get true and if it doesn't you will get false okay now there is another interesting method related to this that you can use and that is index off method so now I will start the program and here is the result that we will get now can you guess what is this number here what does this number represent pause the video think about it and then let me know what is the answer in the comment section and now I will explain it this number here is the index where this search term starts so what does that mean well this entire text is indexed so each character inside this text has its own index and those indexes start from zero so 0 1 2 3 4 five and so on so 167 is the index of the the first letter of this search term so letter s now because this is a bit too much to count let me show you on a smaller example and then you will understand better what index represents so if this text here is for example hello world like this and I am searching for the index of world if I start the program we get number six so H is zero and and then e is 1 and then 2 3 4 5 and then W is six so that is the index that we want because we are searching for this word here and please don't get confused by this empty space because it is also counted as character so once more 0 1 2 3 4 5 and then word starts at index 6 okay so when are these indexes useful they are very useful when you want to get a substring which means a smaller part of an existing string let me show you an example let's say that this text here is learn programming at and then this address here code Beauty academy.com okay so what I want is I want to get the index of this here so www if I start the program as you can see the index is 21 so that is where this address starts okay so now that I know that what I can do is I can use substring method so I can say please give me a substring of this text which substring well start at index 21 and then give me the next 25 letters and why 25 because I know that this address here has exactly 25 characters so if I start the program we will get this entire address okay so once more substring method is going to return us one part of this bigger string and it receives two parameters the first parameter is the index so where it should start and then the second parameter is how many characters it should take so here we are saying please start at the index of 21 that is the index of this first W letter and then please take 25 characters so this entire address here has 25 characters so that means that this line of code is going to print us this address okay so what are some other interesting methods that I can show you there are two interesting methods that you can use in order to check if a text starts with a certain string or if it ends with a certain string so let's say that the text is welcome and then let's say here you can learn C and then here I will put this exclamation mark at the end so what I want to do is I want to check if this text here for example starts with welcome how can I do that well I can simply say text Dot starts with and then here I will put the string that I want to check so I will put this word okay and I'm missing this closed parentheses so if I start the program as you can see we get true because this text starts with this word and then if I change it and put something else for example hello and I start the program as you can see now we get false and then the other method is used in order to check if this text ends with and then here I put whatever I want for example I want to put this exclamation mark So if I start the program we get the result of true and then if I put for example Dot and then I start the program we get the result of false because our text ends with exclamation mark okay now another Super useful thing that I I want to teach you is how you can replace one part of the text with something else so let's say for example that this text here says learncoding at google.com like this and then what I want to do is I want to replace this Google with code Beauty Academy so how can I do that it's actually very easy you simply say text. replace and this method receives two parameters the first parameter is what you want to replace for us that is Google and then the second parameter is what you want to replace it with and that would be code Beauty Academy okay so now if I start the program we get learn coding at and then as you can see the text was replaced so instead of google.com we have code Beauty academy.com and that is the best place to learn practical programming now another method that can be very handy sometimes and it is very short and simple is trim so how does trim work well let's say that here I have text that is starting with spaces and then I have Hello World and then I have some more spaces so if I want to get rid of these spaces at the end and then the spaces at the beginning what I can do is I can use trim method so I can simply say text. trim like this and if I start the program as you can see we don't have these leading and trailing spaces which means spaces at the beginning and spaces at the end of our text and then if I start the program without this trim method so I simply print the text as you can see our text will contain these spaces at the end and then spaces at the beginning okay now when can this trim option be useful as well it can be useful if you want to remove some other characters as well for example let's say that your text starts with these asterisk symbols these little stars and then at the end I will have some stars as well so how can I remove this symbol from my text well I can simply say text. trim and then inside these parentheses I will put single quotation marks and then inside these single quotation marks I will pass the character that I want to trim from my text and that will be this character here so now if I start the program as you can see this character was removed from the beginning and also from the end of my text okay so that is another interesting and useful method that you should know about because it can be handy sometimes in the future so you definitely should know about it okay and then the last method that I want to show show you today is how you can split the string by a certain separator so what does that mean well let's say that you have text that looks like this let's say apple and then comma sign and then banana and then comma sign again and then let's say orange okay and then let's say watermelon like this so let's say that for example I want to split this string based on this comma sign and I want to separate these fruits so that I have an array of fruits and each element of that array is one fruit so how can I do that well there is a simple method called split so what you can do is you can say for example text do split so please split this text and then here you are going to put inside these single quotation marks your separator so for us the separator is this comma sign so here I will put the comma sign and what is going to be the result of this split method is an array so let me create an array of strings so you simply say string array you use these square brackets in order to indicate that it is an array and I will call it fruits like this so please split this text and then store the result inside this array so now what I can do is I can iterate through this array I can say for each string fruit in this fruits array what I want to do is I want to Simply print that fruit so I will say console do right line and here I will print that fruit so now if I start the program as you can see we get each individual fruit as one element of our array so that means that this text here was split by this comma sign which is called separator and then if you have another separator in your text for example if this is your separator if this is a way for you to separate the elements inside this text then you can put that separator here and again the method is going to work just the same it is going to split this entire text based on this SE operator here that you have put as a parameter of your split method now this method is a bit more advanced when compared with the previous methods that I've demonstrated because if you're just a beginner and you don't know anything about arrays then it is going to be harder for you to understand this code so if you want to learn about arrays I will link that video here and I will also link it in the description so that you can watch it and once more I want to remind you that you can get my full practical programming course at this site here code Beauty academy.com and you can learn everything that you need in order to start working as a fulltime software developer and if you decide to enroll make sure to use the discount code that I will leave in the description in order to save some money so thank you very much for watching if you have any questions related to this video or any other programming topic that you would like to see in the future on this channel leave those in the comment section and then if you enjoyed this video give it a big thumbs up so that I know to make more videos like this one in the future so thanks for watching and I will see you in another video bye