hi everyone welcome to my channel my name is salvina i am a software engineer and i make programming videos so if those are of interest to you consider subscribing to my channel and click the bell icon so that you don't miss any of my future videos and in this video i want to talk about arrays now the best way for me to explain what are arrays and how they are used will be using an example so imagine a following situation imagine if you were saving money each month and you want to store that data you want to store that information about how much money you are saving each month in your computer and then in six months you want to calculate how much money you have saved in total you want to calculate how much money you are saving on average each month and then you want to predict how much money you will have in two years for example now how we can do that if we don't know anything about arrays well here i have my visual studio and the approach that we would use if we didn't know anything about arrays would be the following so we would create a variable let's say that variable is going to be of type float and let's call it month one okay and then let's say that in the first month we have saved 100 dollars for example now considering that we want to store data about how much money we save each month in six months we would we would have to create six of these variables so let's do that i'm going to copy this six times and this one is going to be month two and then month three and four and five okay and six now let's say that in this first month i have saved 100 and then 220 and and then 300 for example and then in the fourth month we had a birthday or we bought something very expensive so we didn't save any money in the fourth month and then let's say 200 and 250. okay so here we have stored the data about how much money we have saved each month for six months now the things that i want to calculate from this data here are going to be how much money we have saved in total so let's write it here so total and then how much money we save on average like this oh it's it's not average it's it's average okay so and then and then i also want to check how much money i will have in two years okay now how do we calculate these three things from this data here well it's going to be pretty simple we create another variable which we will call total and our total will be sum of these six variables so month one plus month two plus month three okay so i have skipped this part of the video because it is pretty simple so you just sum all of these values in these six variables and that is going to be total amount of money that we have saved in six months now average is going to be as well of type float and let's call that variable average and it is going to be total divided by six like this so how much money we have saved in six months and we are going to divide that by six months and that is going to give us the average now how do we predict how much money we will have in two years well let's create another variable of type float again and let's call it in two years and here it will be average multiplied by 24. why because two years have 24 months okay great now i will write this data out to our user so let's say c out total is equal to and then total like this and let's copy this three times and here i want to write out average like this and then i want to write out how much money in two years okay great now let's run our program okay so it says in total we have saved one thousand and seventy dollars on average that's 178 and then in two years we will have a little over four thousand dollars okay great now this approach here works as it should but it has one problem now what is that problem well uh it is pretty easy to do this when you are calculating something for six months or seven or ten but imagine if you had to do this for 100 months or 1000 months you would have to create a variable for 100 months so 100 variables or 1000 variables and that is a problem so because of that we have a special type of collection which is called array and we can use that collection which can group all of these variables on a single place now how do we create arrays the way to create an array is following first you specify the type of that array like this okay the type of our array will be float why float because in that array we want to store these variables here and as you can see all of these variables have the type float so this is going to be the type of our array and then the second thing is you specify the name for your array now considering that our array will save the values that previously were in these variables here let's call that array months array like this okay and then one more thing that you have to specify is the size of that array and how do you specify the size you specify the size in these square brackets and considering that this array here will store these six values it is going to be array of six elements like this and with this here we have successfully created an array which is called months array it can store six elements and those elements will be of type float now how do we assign values to these six elements well you use you use these curly brackets and inside these curly brackets you assign the values for these six elements so i will just use these values here so the first element will have value of 100 and then 220 and 300 and 0 and 200 and 250 i hope that i didn't make a mistake okay so here in south inside our months array we have stored these values which are the values that previously were in these six variables now that means that we do not need these six variables anymore we can delete this part of the code here great and then as you can see we get an error here it says now that month one is undefined identifier month one is undefined and then it gives us the same message for month two and then month three four five and six all of these are now undefined why because we have just deleted the variables that we had here so now what i have to do is i have to change this variable with the first element of our array and then this variable with the second element and then this with a third and so on so that means that we can access these elements of the array individually and how do we do that how can i access the element for example this element of the array well in order to access elements of the array you use name of that array and then you use index of the specific element that you want to access so now your question might be how does the indexing of the array work well the indexing of the array starts with zero that means that the first element of the array has the index of zero and then the second element has the index of one and then third has the index of two and three and four and so on so let's write that so that we don't forget it so the first element has the index of 0 as i said and then second has the index of 1 and then 2 and 3 and 4 and five okay now this here means that the array that has six elements the indexes of those arrays of that array will go from zero to five and then if you have array with which has for example 10 elements the indexes of that array would go from 0 to 9 if you had a rate it has 100 elements indexes of that array would go from 0 to 99 and so on okay again so indexing of the array starts with 0. great so as i said in order to access a specific element of the array you use name of that array and then index of that element so that means that here instead of this month one variable which we previously had we will be using the name of our array months array and then in these square brackets i will use the index of my first element which is zero so this here will give us this value here okay and then here i will just copy the name of my array and then i will use index one in order to access second element of the array and i will do this for these remaining elements and i will be back so here i have total sum of all of these elements of the array from the one with index 0 until the one with index five so six elements in total and if i run my program nothing should change okay as you can see total is again 1070 dollars and then average is 178 and then in two years we will have forty to eighty dollars okay now there is one question that i want to answer that many of you have asked especially those that are coming from javascript world and learning c plus for the first time and that question is following someone had asked can you inside this array have elements of different types so for example can this here be a string and the answer to your question is a value of type const char pointer cannot be used to initialize an entity of type float what this message here means is that no you cannot do this if you created an array of type float all of the elements of that array have to be of type float at least in c plus in some other languages that is not the case but in c plus all of these elements have to be of type float or something that can be converted to float so i will return this 200 and as you can see here this is integer but that integer can easily be converted to float because 100 is the same as 100.0 and this here is a floating point number this here is float type but it is just easier to write it this way so the answer to your question is no all of these elements here have to be of the type that your array has so all of these elements have to be of type float or something that can be converted to float okay so now that i have cleared that let's return to this part here here we have learned how to access a specific element of the array so you do that by using the name of the array and then the index of that specific element and indexing of the array starts with zero now one more question that you might have then is the following is this part here necessary meaning do you have to initialize all of the elements of your array when you create that array and the answer to your question is no you don't so what i can do here as well is i can say that this part of the code does not exist anymore you can comment it out you can uh delete it if you want i will comment it out for now but what you can do basically is you can just create an array of type float that has six elements but you don't have to initialize those elements when you create the array you can initialize those elements later in your program so what you can do here is you can do the following you can say months array of index zero so it is our first month we'll have the value of 100 so it is this value here and then let's do okay let's do for the first month it has the value of 220 and then our third month the one with index two has the value of 300 and then fourth has the value of zero okay and let's do two more four and five and these have values of 200 and 250 like this so this here is another way to initialize the elements of your array and this is one way that we previously showed and then this here is another way to do that same thing so if i run my program nothing should change basically okay so again here we have the same values that we previously had okay now one thing that you may wonder as well is now these values are hard coded so throughout this program we had all these values hard coded but what if we want our user to enter all of these values well you can do that as well what i can do is i can say the following so instead of assigning this value of 100 to my first element of the array what i can do is i can say see in and then assign that value that our user enters to the first element of that array so our user will input the value in our console and that value will be stored in the first element of our array and let's write out a message to our user as well so let's say enter amount like this okay and let's do that same thing for these remaining five elements so let's delete these hardcoded values okay like this and here i want to enter that i won't let my user to enter these values okay and if you're wondering about the shortcut that i just used to write in multiple lines at the same time um i believe it's alt plus shift however my brain does not know shortcuts my fingers do okay so here we have asked our user to enter amount and then here we have entered amounts for six months in the elements of this month's array okay so um if i run my program now it says enter amount and then it will store six values in these six elements of our month's array so let's enter six values let's say that in the first month we have saved one dollar and then one dollar and one dollar and then two dollars and then one and one again okay so it says that in six months we have saved seven dollars and that is one point one dollar a month and then in two years we will have 28 dollars okay great so as you could see this code here works but i still have a problem with this code and the problem is that it is not optimal there are more optimal ways to write this code here so um it is pretty easy to do this for six elements but if you had 12 or 100 or 1000 elements you would have to basically do this 100 times or 1000 times or even more and that is not optimal so what i want to do instead of this code here is i want to use a for loop and if you are not familiar with for loop i will link a video here where i explain for loop in detail so make sure to watch that okay so let's just delete this part of the code here so i will say 4 and then i will create a counter of type int and give it minimal value of 0 and you should notice that the first element of our array has the index of 0 that's why we are starting this counter with the value of 0 and then we will say that that counter will have the maximum amount of five so while i is less than six you could do as well why is that less than or equal to five you can do it this way as well and this number here is the maximal index of the array that has six elements okay and then in each iteration i will increment that counter by one great so what i want to do in this for loop is i want to say see out enter amount for element and then i will write my counter i like this okay so i will say to my user please enter the amount for the element that has this index here and then what i want to do is i will say c in okay we use these other redirection signs c in months array and then i want to enter the value for that specific element like this okay great now if i run this program it says enter amount for element zero and that amount will be for example one and then it says enter amount for element one let's say two and then one again okay so it says that in total it is seven and then on average it's 1.1 and then in two years it's 28 great now one thing that i don't like here is the way that this here this this message sounds to our user it says enter amount for element zero this really does not make sense to to someone who is not uh coming from programming world this element zero does not make sense to your user so it would be much better for this to start counting at one for your user so it would be much better if it said enter amount for element one or month one for example so i will just adjust that output and we will do that here so instead of element i will write month like this and then here instead of i what i want to write is i want to write i plus 1 because we do not want for our first output in the console to say enter amount for month 0 because month 0 does not make sense to anyone who is not coming from programming world and then here instead of this end line it would be better to add this column sign so if i run my program again it should be more natural to our user to enter values so it says enter amount for month one i enter one and then two three four five and six for example so here we have our total our average and then our estimate in two years how much money we will have in two years okay great so now this code here looks much better but another problem that i have here is this part of the code here so what we have achieved with this for loop is the following we can say now please can you create an array that has 12 elements for example or 100 or 1000 elements and the only thing that we would have to do in this situation is adjust this index here so indexing of the array that has 12 elements starts with 0 and then the last element has the index of 11. okay now this code here should allow us to enter values for 12 months so from the one that has index zero until the one that has index 11. but if we just change this part of the code here and then this part here and we run our program we will have a problem and can you predict what kind of problem will we get so write that in the comments down below before you continue watching this video and the problem without running this code because i already know that there will be a problem with this line of the code here if you want you can run it and then see that all these calculations now will not be correct anymore because here we have hardcoded six months so here we are summing the total on six months and here we are creating an array of 12 months and entering 12 values so these calculations here are not going to be correct anymore so what i want to do is i want to remove somehow this part of the code here so i do not want to hard code this anymore because this is a problem as well so how will i do that well what i can do is i can move this part of the code that sums values of each month in our for loop as well so how do we do that let's comment this part of the code here for a moment and what i want to do is i want to create a variable of type float which i will call total because we definitely need a total and to that variable i will assign a value of zero but instead of hard coding this part of the code here instead of summing the values in our six months like this what i want to do is i want to sum those values in this for loop here so after our user enters value for that specific month i want to add that value to my variable which is called total so here i will say total plus equals and then months array of i so in the first iteration when we ask our user to enter the value he enters that value that value is stored in this variable here we add that value to our total and then we go for the second iteration and then our user enters second number we store that number in this variable here and then again we add that number to our total and then in the third we add third number fourth fifth and so on so that is why it is important for this variable here to have initial value of zero because zero is neutral when it comes to operation of adding whatever you add to zero it is still going to be that same value it's not going to change that's why we have initialized this variable here to zero so now after this for loop finishes we will have the correct value in our total variable but we still have problem here so here it says average is equal total divided by 6 and as we changed this value here from 6 to 12 that means that we will not be dividing this total by 6 anymore but here we will have to adjust it to 12 as well okay so now if i run my program and then if i enter let's enter one one one so that we can check easily okay and then let's enter two as the last value okay so it says in total you have 13 which is correct and then on average you are saving a little more than a dollar and then in two years you will have 26 dollars great so that means that this code here is working and that means as well that i can delete this part of the code here which was hard coded okay so i hope that you understand what we have accomplished with the changes that we have made and again if you don't understand for loop i will have a link in the description of this video where you can click and watch a video which is related only to for loop and then understand what this part of the code is doing in more detail okay so again what we have accomplished with the changes that we have made is the following now we can very easily adjust this value here for example let's make this 6 again and then the only things that i have to change is this index here so the array that has 6 elements has indexes from 0 to 5. so here i will have to write 5 and then here i will have to write six again okay and if i run this code let's check it one more time one one one one two and then six for example okay it says that total is 12 average is two and then in two years we will have uh 48. there is one more thing that i want to show you and that is why did i say that we have to obey these indexes here why the array that has six elements why it needs to have indexes from zero to five what will happen if we put here six for example well let's try let's run our program because we will never know if we don't try so again it says enter amount for month one and let's do that okay and now it is asking to enter amount for month seven so let's enter one there and everything works as it should apparently or does it what happens if i press one more time enter for example oh so we get an exception and that exception says run time check failure and then it says stack around the variable month's array was corrupted well what this here means is basically we are using a memory which does not belong to our array so i will close this now and i want to explain this part of the code here the indexes in this for loop go from 0 to 6 but the valid indexes of this array are from 0 to 5 which means that if we try to access the element that has index 6 that element does not belong to this array here that element is someone else's memory and if we try to do that we can get serious problems as you already saw so we got an exception which said that stack around this array here was corrupted so that means as i said here we have to really obey these rules so the indexing of the array starts with zero and then it goes one two three four five and so on so the array that has six elements has indexes from zero to five now some of you may wonder the following wouldn't it be super extra cool if we could do something like this so we create a variable we call it size and then we ask our user to enter the value for that variable and what do we do with this variable well we put it here so we say that we want to create an array that has this many elements so the value that our user has entered so can we do this in c plus what do you think can we uh the answer to that question is no unfortunately you cannot do this in c plus but stay with me until the end of the video because i might have a solution for this so the error that we get here says it says expression must have a constant value which means that this value here has to be a constant basically it has to be known before you compile your program or before you run your program so this value here basically has to be hard coded now i want to explain some characteristics that are related to array that i haven't mentioned before and you need to be familiar with those characteristics in order to really understand arrays so an array is type of collection which stores data in continuous chunk of memory so that means that once you create that array array takes a continuous chunk of memory in your memory and it stores all of the elements one after the other in that chunk of memory now that means that you cannot add more elements to that array so you cannot add an element at the end in the middle in the beginning you cannot do that and if you need to add more elements to your array the only way to do that is to create a bigger array and then to copy that smaller array and you will still have a remaining space for the new values that you want to store in your array so that is the only way to have more elements added to your array so that is one obvious disadvantage of arrays but the fact that arrays store elements in continuous memory has certain advantages as well and the main one is that accessing and finding elements of arrays is very very fast why well because if you want to for example find the element of the array that has index 2 you know that you will have to look only in this fixed chunk of memory and the element that has index two is probably going to be somewhere in the beginning of that array whereas if you use some other data collection which stores data in noncontinuous memory which means randomly all around your memory accessing and finding elements in that collection is going to be much much slower and one example of collections that store data in noncontinuous memory is linked list but we will be talking about linked lists in my future videos so i will make a separate video which is going to be dedicated only to linked lists but again i want to say that arrays and linked lists as well have certain advantages and disadvantages so in arrays more specifically it is that accessing elements of the array is going to be very very fast that's an advantage but disadvantage is that once you create that array you cannot add more elements you cannot change the size of that array but the only way for you to add more elements is again to create a bigger array and then to copy your previous array and still you will have that small space for elements that you want to store for more elements that you want to store there one more thing that i want to mention is remember i said that this code here is not possible in c plus plus but there is a way to solve this problem and that is going to be using dynamic arrays and if you know about dynamic arrays that will give you the ability to create arrays at runtime basically to create arrays with the size that your user enters and defines so i already have a different video which is related to dynamic arrays and if you want to learn that i will link that video here for you and then in order to understand dynamic arrays you will need to learn about pointers in c plus and if you want to learn more about pointers i will put a full playlist in the description of this video so you can watch that after this video so i hope that this video was helpful and if it was definitely give it a thumbs up for the youtube algorithm and then also considering that algorithms and data structures are closely related uh write me in the comments down below if you would like me to make videos related to algorithms as well and then if you don't want to miss my videos in the future make sure to subscribe to my channel and click the bell icon as well so that you can get a notification from me each time that i publish a new video so thank you very much for watching and i am going to see you in my next video bye