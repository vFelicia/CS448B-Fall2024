hi everyone welcome to my channel my name is saldina i'm a software engineer and i make it and programming related videos here on youtube and in this video i will be doing something that i haven't done before and that is reviewing your code and we will see some errors that you guys have sent me so i get a lot of messages a lot of questions on my instagram on twitter and then here on youtube as well in the comments where you ask me for an opinion or for advice on certain errors that happen to you in programming and i try to answer as many of those as possible but it's just not possible to answer to all of you and i'm very very sorry but i thought that it would be a good idea to make a video related to that so that all of you can see it so here i am i'm making that video right now so in this video i will be reviewing some code and we will see some errors that can happen and that do happen very often and i'm going to do that boat manually and then i want to show you a very cool tool which is called pvs studio i'm going to leave details in the description down below so that you can check it out for yourself but what pvs studio is it is static code analyzer so it is basically a tool that reviews your code and helps you detect bugs and errors and security weaknesses in your code so in the case that you need another pair of eyes to look at your code and give you a few tips and recommendations it is a great tool to use and you can get it as a team license for teams up to nine people or you can get an enterprise license for bigger companies bigger departments or you can even request a free license if you are a student if you are working on some private projects or on some open source projects and then one very cool thing is that it is not only used to analyze c plus code but you can use it for c and then c sharp and java as well and i am wondering guys which team are you in are you team c plus or are you team c sharp or java or c i'm very curious to read your answers so please write me in the comments down below and if you ask me i'm definitely team c plus plus and then team c sharp those are just two of my favorite languages ever but i am very curious to read what you will answer to this question so um i'm going to leave all the details about pvs studio in the description of this video so that you can check it out for yourself and let's jump into the coding part right now because i am very very excited to do this here i have created a new project and i have this program that does basically nothing so what i want to do is i want to check if everything is okay with this code so far so if we have made any errors so far so i'm going to click on extensions and then pbs studio and here you have multiple options you can check your current file you can check open files or you can check your project selected items solution i'm going to select this first option so i'm going to check this current file and you get this window here and as you can see we have one error and that error is that my license will expire in five days okay so that is not here which is related to our code so we are just going to ignore it so we don't have code errors so far and let me show you how you can install this tool very quickly so you click on extensions and then manage extensions okay and then here you can search for pvs studio like this okay great it is this one here so pbs studio is a tool for detecting bugs and security weaknesses and so on okay so you will click download here and your download should begin i'm not going to do that right now because i already have it but once it is downloaded the installation is pretty simple so it's basically next next next finish installation so that should be simple okay now let's close this window here and as you could see we don't have any errors with this code so far so let's write some code and let's create some errors now so let's create an array of type in and i will call it saved money and that will be array of five elements and i want to initialize those elements here so the purpose of this array is following let's say that i want to save some money each month and i want to store that data in this array here so i'm going to save money for five months and i will store how much money i have saved each month inside this array here so for example the first month i have saved 100 dollars or euros or whatever and then second month i have saved 200 and then 300 and 400 and 500 fifth month okay so this is our array now what i want to do with this data here is i want to sum it after five months i want to know how much money i have saved in total so i'm going to create a variable of type int and i will call it total like this and i will initially give it a value of 0 and then i will iterate through this array here so i will say 4 int i is equal to 0 and then i is less than or equal to 5 and then i plus plus and what i will do inside this for loop is i will say that my total will hold whatever my total was previously holding plus current value of how much money i have saved in that month so save money off i okay now after i have done this i will just write out how much money i have in total so i will say total and then this value that is stored inside this variable here okay now if i run this program let's see what will happen well it says that in total i have minus 8 billion something very very big number so i have tried to save each month and then at the end i have minus eight billion dollars you know so that does not make any sense so here we have a logical error okay so let's see what is this error that is happening so let's click on extensions and pvs studio check current file to see what kind of error pvstudio sees and it says array overrun as possible the value of i index could reach 5 and if i double click on that it will take me here and this part of code here is underlined and this is actually our compiler our compiler is underlying this and it says that okay it says index five is out of valid index range of 0 to 4. so this here this situation here says that this i is out of range of valid indexes that this array here can have and if you are familiar with arrays you know that indexing of an array starts with zero so the first element has index of zero and then one two three and four so valid indexes for this array here are from zero to four and here we have accidentally written that this i is less than or equal to 5 and that is making a problem so if i delete this part here so if i say that my i is just less than 5 this error should disappear so if i click on pvs studio and then check current file the error should disappear okay it has disappeared now so if i run my program this program is behaving as expected so this is one thing that very often happens you can accidentally write less than or equal to and then you can get a very very big logical error another thing that can happen is if you are typing very quickly and if you lose concentration for a moment and here instead of incrementing you decrement this counter so you say i minus minus you should get an error as well so if i try to build this program let's see what our compiler will tell us so here in this error list it says illdefined for loop counts down from minimum so that's kind of helpful information and then another let's read this other warning it says reading invalid data from saved memory the readable size is 20 bytes but minus 4 bytes maybe a read so this is not really helpful for someone who is just starting and then this third message it says index minus 2 billion something is out of valid index range 0 to 4. again this is not really helpful for someone who is just starting so let's see what our pvs studio has to say so i'm going to click extensions pbs studio check current file okay and this first error here says the condition i less than 5 or for loop is always true so this is actually a helpful message and if i click on this i will be taken here and it says that this condition here i is less than 5 is always true but why is it always true because we have started counting at zero and then we try to decrement that value in each iteration and doing that we can never reach this condition here this condition here will never become false so that means that here we have created an infinite loop and here our previous studio says consider inspecting this for operators so consider inspecting this for loop here because it will not be executed at all or it can be executed incorrectly and in this particular situation it is going to be executed incorrectly so it is going to be an infinite loop which we don't want in this particular situation so i'm going to correct this error here so i'm going to return it to i plus plus but that is sort of a help that you can get from pvstudio and this here is a pretty simple program because it has just a few lines of code where all the bugs can potentially happen but imagine working on a very very big project and then something like this happens so imagine something like this happening on a program that a bank uses so you are trying to save money for a couple of months and then the program says that you are in debt that your balance is minus 2 000 or 20 000 or something like this so this can create very very big issues and in this particular situation if you have a bug like this you will want to have all the help that you can get and sometimes that can be uh just the help that you get from your compiler or if you have a very very big problem you will definitely benefit from tools like pvs studio which will give you some additional information on that situation that is happening and on that problem that you are having and then there are other situations where you can have very very big problems but your compiler will not be helpful at all because your compiler will not be able to see those potential bugs that you are creating inside your code so in order to demonstrate that let's delete all of this code here because i will not need it anymore and what i do need is to create a function here so let's create a function of return type void and i'm going to call it my function like this okay and what i want to do inside this function is i want to create an integer pointer ptr so if you are not familiar with the topic of pointers make sure to watch the playlist that i will link here it is the playlist where i explain pointers in c plus because it is one of the most important topics in c plus and it is the example that i will be using here so i have created an integer pointer and i'm going to say now you will point to a new array of integers and that array will have five elements like this now what do i want to do with this array well let's do something very simple let's say ptr of two will hold the value okay it will hold the value of 10 like this and then let's just write out something let's say hi i am equal to and then ptr of 2 okay so this here is pretty simple example that does basically nothing important nothing useful but i will use it to demonstrate a very very big issue that can happen in this situation so i'm going to invoke this function here so i'm going to say my function like this and i have successfully invoked this function so if i run this program it says hi i am 10. so nothing unexpected happened or did it okay um if i inspect my errors list it says that i don't have any errors so if you ask a compiler it will tell you that everything is perfectly fine so let's now ask pbs studio here it has already detected two potential issues but you can click pdf studio and then check current file just to be sure okay and it says visibility scope of the ptr pointer was exited without releasing the memory a memory leak is possible so what we have done here in this program is we have created memory leak where here so here we have said please give me in my dynamic memory give me array of five integers and this is going to be done in dynamic memory so once this function is finished once this function ends we are going to lose this ptr so we are going to lose the address of the first element of this array here so here if i try to do something like ptr i cannot access this variable here anymore this variable has its scope and that scope is inside this function here and once this function exits we are going to lose the address of this array here which means that we will not be able to deallocate this memory here now let's delete this okay here as you can see this memory leak is not a big memory leak here we are leaking five integers so we are leaking an array of five integers and that is not very big problem but usually what happens in real life is that you are not creating an array of five integers usually you are creating things that require much more memory than just an integer array of five elements so here as i said we are leaking five integers but imagine a situation where you're creating an array of 5000 or 50 000 and not integers but objects of type user like this and this user has some pretty heavy data in it for example it has some images and things like that so here you are creating 50 000 users and to make things worse imagine not invoking this function only once but imagine invoking this function in a for loop for example so invoking it 100 times or 1000 times or 100 000 times that is going to be a huge memory leak so what this line of code here does is it asks your operating system for dynamic memory so it says please can you give me new memory so can you give me dynamic memory that i need to store this data here and your operating system gives that memory to your program so it allocates that memory for your program and then once this function here finishes you will lose all the variables that you have created inside that function and that is this ptr variable here so that means that the address of this array here which was stored inside this ptr variable is lost now and now you will not be able to deallocate this memory here which means that you will not be able to say okay now i am done with this memory which is a lot of memory and now i'm going to return that back to my operating system because i don't have unlimited amounts of memory and my operating system maybe would like to give that memory to some other program so once this function here ends and you don't deallocate this memory here you are leaking that memory and that is exactly the error that you have here it says a memory leak is possible whereas your compiler here said expected a type specifier which is uh error that we have here because it does not know what is this user so i'm going to return this back to int okay now that error has disappeared but your compiler does not know that you are leaking memory here whereas your previous studio analyzer here says that a memory leak is happening so how do you fix this error here well for each new you need to have delete again you need to watch my c plus pointers playlist in order to understand pointers if you don't understand this already so as i said for each new you need to have delete so i'm going to say delete and let's delete this ptr let's see what is going to happen now so if i click extensions and then pbs studio check current file it says the memory was allocated using new array type operator but it was released using delete operator and then it gives you a recommendation here it says use delete array pointer etc instead so here we are trying to allocate memory for an array but we are not deleting that entire array so here we are leaking memory again so here i'm going to use these square brackets in order to indicate that i want to delete this entire array that i have allocated in this line of code here so now we shouldn't be leaking memory anymore so let's check that out i'm going to say pbs studio chat current file and let's see we have that error that we previously had which is your license will expire in five days but we do not have memory leaks anymore which is great so errors like this memory leaks are very common when you work with pointers in c plus and these memory leaks can create huge problems if you have them in your code and as you could already see in most cases you cannot really count on your compiler to tell you that you are leaking memory because in most cases it will not even be able to see that so tools like pvs studio can be very helpful in those situations you could see all those little tips and recommendations that we had from pbs studio that helped us to fix issues that we had related to leaking memory so those were some topics that i wanted to address in this video because many people when working with pointers will come across problems that they will not be able to fix or they will not even be aware that they have those problems that they have memory leaks until it gets to the point where it is unmanageable and they have very big problem they have huge problem so if you have any more questions that you would like me to make a video on please leave those in the comments down below and if you like this type of video please give this video a thumbs up so that i can know and i will make more videos like this in the future if you want me to so thank you very much for watching this video and i am going to see you in my next video bye