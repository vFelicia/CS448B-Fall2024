in this video I'm explaining one of the data structures that every developer should know about a linked list the elements of a linked list are called nodes and each node has two parts data and a pointer to the next node and they are randomly positioned in your memory so these nodes are connected like a treasure hunt in real life where every step has a pointer to the location of The Next Step so going from the head to the tail of a linked list requires visiting all of the elements in between and because they are randomly positioned in your memory this can take a lot of time so this is the main characteristic of a linked list traversing it and searching elements inside the linked list is very slow but adding new elements is very fast because in order to add a new node you would just have to find enough place to store one node and then link it with adjacent nodes so how to decide which data structure to use if your program requires adding and removing elements very often then a linked list is a great choice but if you will be searching and traversing into your collection a linked list is very slow for that and it is better to use an array