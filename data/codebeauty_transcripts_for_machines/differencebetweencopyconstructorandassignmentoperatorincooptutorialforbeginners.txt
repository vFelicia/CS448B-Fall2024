hi guys and welcome to my channel in this video we are going to talk about differences between assignment operator and copy Constructor these two are very similar because they are both used in order to let's say initialize one object based on another object and because they are very similar they create a lot of confusion because there are also some very important differences between assignment operator and copy Constructor and the most important difference is copy Constructor is used when you are creating a new object completely new object based on another object on the other hand assignment operator is used when you are changing the values so replacing the values of already existing object based on another object so that is the most important difference between copy Constructor and assignment operator and in this video I'm going to show you on a practical example using the code that I have here the difference between those two and also some important tricks tips and errors that happen to beginners and before we jump into explaining this code here I would like to invite you to join my practical programming course where you are going to learn all of the skills necessary to start a successful career as a software developer so if you are tired because you cannot find a job or if you already have a job but you are dreaming of a really big career as a software developer then I'm 100% sure that the lessons that I've prepared tasks exercises the community that we have is definitely going to help you to learn coding to start your career and to discover your passion for programming I understand that learning to code can be overwhelming and hard and that's why I created this course to be interactive and engaging so that learning is fun and enjoyable also I believe that everyone should have the opportunity to learn coding and to take control of their future in their own hands and that's the reason why I'm creating these YouTube programming videos so free videos but I also have a paid course where I can dedicate a lot more of my time of course and where you can learn directly from me ask questions you can get my help and I can take you from beginner to expert in the shortest amount of time so if you want to learn how to make real applications and if you want to start a successful career as a programmer I will leave more details in the description and the fastest people who enroll in the course will get a special discount also we offer 7Day money back guarantee which means that if you start the course try it out for 7 days and you don't like it for any reason you think that it's not worth the money that you are paying you can get a full refund no questions asked and the reason why I can offer this is because I'm absolutely sure that the lessons that I have prepared are going to completely transform your career and also I have seen the results of other students who have already enrolled in the course so with that being said let's continue with the video and if you're interested you can find more details in the description here I have some code that we will need for this video I will also pin it in the comments so that you can also copy it and use it and now I'm going to explain what this code does so I have created class called movie and it has three public properties those are name genre and rating I have also created one parameterized Constructor that is this Constructor here so it receives three parameters name genre and rating and then based on those three parameters I am constructing or initializing that movie so this here is parameterized Constructor now if you know about Constructors you know that when you start creating your own Constructors you lose the default Constructor that you get by default so so what you need to do is you need to create your own default Constructor and that is what I have done here now you can create default Constructor which will be completely empty like this or you can assign your own default values so here I have said that name is going to be empty string genre is going to be empty string and rating is going to be zero whichever you prefer so once more here we here we have parameterized Constructor and here we have default Constructor okay so if I go to my main function you will notice that here I'm creating movie one and Movie 2 and I am invoking parameterized Constructor here and here and then here I'm creating Movie 3 and since I'm not passing any values that means that here I will be invoking default Constructor so now let's prove that so if I put breakpoint on this line here where I'm creating movie one and I start the app ation the execution will be paused on that line so now if I press f11 as you can see it is going to take us to the parameterized Constructor so if I press F10 F10 F10 as you can see this new object is going to be constructed based on the values that I have passed here okay so let's stop the application and then if I remove this breakpoint but I put another breakpoint on this line here when I'm creating Movie 3 and I start my application again the execution is going to be paused here so if I press f11 as you can see this time it is taking us to the default Constructor which will assign these default values to the properties of our movie so if I press F10 as you can see name will be empty string genre will be empty string and then rating will lose this default integer value and it will become zero okay so that is when this parameterized Constructor is invoked and then when default Constructor is invoked so I'm going to collapse these two because there are two more important things that I want to show you and those are copy Constructor and assignment operator so as we said copy Constructor which is this method here is invoked when you want to create a new object based on an existing object for example this line here where I'm creating Movie 4 I want to copy movie one and based on that I want to create Movie 4 and that is exactly when we use copy Constructor so if I remove this breakpoint and I put another breakpoint here on this line when I'm creating movie for if I run my application let's see what is going to happen so the execution was paused here if I press f11 as you can see it will take us to copy Constructor method so now let's see what this copy Constructor does so if I press F10 it is going to start executing our copy Constructor and what we want to do here is we want to create new object called Movie 4 based on object called movie one so here as original parameter we will get our movie one with all of its properties so Dark Knight action 9.5 and what we want to do is we want to create our new object which is currently empty so all of its properties are empty we want to construct it based on this original that we have received so if I press F10 name will be the Dark Knight and then if I press F10 again as you can see genre will become action and then currently rating has the default value of integer but if I press F10 again it will have the same value as our original object okay so that is how you copy this original and construct a new object based on that original now something interesting here is this part so here we are receiving one parameter it is constant and it is passed as a reference and the reason for this is following if you know anything about passing parameters to functions you know that there are two ways to do that you can pass by value and you can pass by reference so here I'm passing the address of the original object which means that whatever this method here does it will work on the original itself so then we are in danger that it is going to change the original so in order to prevent that what we can do is we can simply say const so I'm passing the original object the address of the movie one so whatever you do here you are performing it on the original movie but in order to make sure that you are not going going to change it I will say that it is constant and now we cannot do something like this we cannot say original do name is equal to test okay but if we didn't have this const part then we would be in danger that this can happen so in order to prevent this we simply add const and as you can see now we get this little red squiggly which means hey you cannot change const objects so let's delete this code here and once more here we are passing the address of the original with the help of this little ENT now another way is to pass this parameter by value and that would be like this so we don't need % we don't need const and in this case we are passing a copy so this method here is going to create its own copy and whatever it does it will do that on the copy but here is something very tricky and that is the fact that here when we are creating the copy we would need copy Constructor so that would create circular dependency because this method here is the copy Constructor and in order to create copy Constructor you need copy Constructor so that would be problematic and that is the reason why we cannot pass this parameter by value so we can only pass it by reference and in order to prevent any changing of the original We simply say that it is going to be const like this so this is how copy Constructor is going to look like okay so if I press F10 again it is going to take me here and now when I hover over my Movie 4 as you can see it has the same properties as movie one because we have used movie one to create Movie 4 and that is how copy Constructor Works once more when you are creating completely new object based on an existing object copy Constructor will be invoked okay so let's stop our application and another method that I want to show you is assignment operator and that is this method here so here is how assignment operator looks like and here is how copy Constructor looks like now let's collapse this and let's see this line here because this line here is when we invoke assignment operator so here we are trying to assign new values to Movie 4 and those would be the same values that movie 2 has so we are trying to replace what movie 4 currently is with whatever is inside Movie 2 so if I remove this breakpoint but put new breakpoint on this line here and I start my program as you can see the execution will be paused on this line here so if I press F1 11 it is going to take us to assignment operator so as you can see assignment operator looks very similar to copy Constructor here we are receiving the same parameter so we receive original movie and that is being passed by reference and then in order to prevent any changing of that original we make it constant and then here we are going to change the values of name genre and rating based on these values that we have received as a parameter so we are going to change values of Movie 4 based on Movie 2 so if I press F10 F10 again as you can see name becomes The Lion King and then genre is currently action but when I execute this line it is going to be animated because that is what is inside this genre here and then rating is currently 9.5 but if I press F10 it is going to become eight because that is the rating of The Lion King which is the original movie that we have received as a parameter here so at the end of assignment operator we return a pointer to this and this is the movie that we have just changed so since we return a pointer the return type of the function needs to be the address so this function returns address of the movie and whatever it returns here that will be assigned to our movie for so if I press F10 again I'm going to leave this assignment operator and now if I hover over Movie 4 as you can see it has the same properties as our Movie 2 because here we have invoked assignment operator and we replaced everything that movie 4 was holding with the values that movie 2 is holding now something interesting related to this assignment operator method is this part here so here we are passing the original movie and we are passing its address which means the address of movie two so whatever this method here does in case that it changes anything on the original that is also going to be reflected here on movie two which should not happen so in order to prevent that from happening we simply add this const part and that means that our assignment operator method cannot change this original even though it has the address of the original itself now in this case when we are working with assignment operator you don't have to do it like this when we were talking about copy Constructor we said that this is not possible it is not possible to pass by value because in this situation we are creating a copy of this object and then this method is working on that copy and in copy Constructor that is not possible because it creates that circular dependency where in order to create copy Constructor you need to copy an object so that is not possible but in case of an assignment operator that is possible so here we can create a copy of this object that we are passing but it is also redundant so there is no need to invoke copy Constructor here and better option is to pass the address of the original and then in order to prevent this method from changing the original you simply make it const so that is also another difference between assignment operator and copy Constructor in copy Constructor you absolutely have to do this and in assignment operator it is recommended to do this but once more let's remember the biggest and the most important difference between copy Constructor and assignment operator let's stop the application so as I said the biggest and most important difference is that copy Constructor is invoked when you want to create a completely new object and initialize it with the values of an existing object so here we are invoking copy Constructor and then assignment operator is going to be invoked when you want to change the values of already existing object and replace them with values of some other object so that is the most important difference between assignment operator and copy Constructor so let's remove this breakpoint and now I'm going to explain one very tricky situation that is hard to understand for most beginners so please have in mind what I have just explained about the difference between copy Constructor and assignment operator and with that difference in mind reply to the following question if I write this line of code what do you think what it will invoke copy Constructor or assignment operator so please pause the video and write your reply in the comment section and then you can watch my explanation so this line of code is going to invoke copy Constructor even though it has this assignment symbol and this is what confuses a lot of beginners a lot of beginners would ask now okay but why is it invoking copy Constructor when you can clearly see this assignment symbol why isn't it then invoking assignment operator and the reason for that is as I already explained whenever you are creating new object completely new object that is exactly what we are doing here we are creating new movie it doesn't matter if you put this symbol here or if you use these parentheses in both cases copy Constructor will be invoked so that is the reason why this line is invoking copy Constructor even though you have this assignment symbol and then later when we try to change the value of that already existing movie in this line we will invoke assignment operator so this line here invokes copy Constructor because we are creating completely new object based on an existing object and then this line here is simply replacing the values of already existing object so here we are invoking assignment operator and to prove this let's start our application let's put breako on this line here and if I start the application the execution is going to be paused here so when I press f11 as you can see it is going to take us to copy Constructor even though we have this assignment symbol as I already explained this line is going to invoke copy Constructor okay let's stop the program and now I will remove this breakpoint and I will put another breakpoint on this line here and now if I run the program it will be pause here so if I press f11 this time as you can see it is taking us to the assignment operator okay so let's remove this break point and let's go very quickly once more through all of these examples so we said that this line here is invoking parameterized Constructor so here I will put p c and then this line here the same so again p c and then this line here we are not passing any parameters we are just creating a new object so this line will invoke default Constructor so DC and then here we are creating a new movie based on already existing movie so this line is going to invoke copy Constructor so CC and then here we are simply changing or replacing values of already existing movie with the values from some other movie so so this line here is going to invoke assignment operator as SS S no AO so this line here is going to invoke assignment operator and you are probably wondering what this line here does and this line here does absolutely the same as this line here and this is just more explicit way to invoke assignment operator because what assignment operator is it is just just overloaded operator and I have already created another video where I talk about operator overloading that is this video here I will also put it in the description and there you can learn how you can overload operators but basically what it means is that this operator and then assignment sign is simply a method that we are invoking on movie for object and we are passing this parameter and as you can see that is what happens here so it is a function that has this name operator and then assignment and then here is the parameter that we are receiving and then whatever this method here returns that will be assigned to this movie for object so basically this line here and this line here they do absolutely the same but this approach here is not used very often because this approach here looks a lot more understandable and easier to read but you can use whichever you prefer this one or this one I am going to comment this one because this is the approach that you are going to see more often but remember they do absolutely the same thing and then this line here is invoking copy Constructor even though we have this assignment symbol as we already said whenever you are creating new object based on an existing object you invoke copy Constructor so here I will put CC and then here we are changing or replacing the values that are inside Movie 5 with the values of Movie 2 so here we are invoking assignment operator okay now something interesting that I didn't tell you before is that in our current situation with the code that we currently have we don't need to create our own copy Constructor and we also don't need to create our own assignment operator because our compiler is smart enough to do that work on its own own but as soon as you start adding pointers to your class in that situation you absolutely need to create your own copy Constructor and your own assignment operator so now let's see how that is going to look like so let's say that I also want to know which actors are acting in each movie so I will add those properties here I will add int property and call it actors counter okay and then I want to add another property and that is going to be string pointer called actors so this property here is string pointer which means that it is going to point to the array of actors where we are going to store names of all of the actors and here we are going to hold the counter so that we know how many actors this movie has and how many elements our array has and as I said said as soon as you start adding pointers to your class you need to be a lot more careful because then you will have to create your own copy Constructor you will have to create your own assignment operator and also you will have to take care of deallocating that memory which means freeing that memory giving it back to the operating system so that it can be reused for some other application and that means that you will have to also create D structure so let's do that part part inside this parameterized Constructor I am going to say that initially when I first create a movie actors's counter is going to be equal to zero and I also want to initialize this array so I will say actors is going to be equal to new string array that has this many elements so new string array that holds this many elements so that is the change that we need to make inside our Constructor we need to allocate the memory for actors that we want to store for each movie and then also since we have allocated memory inside our Constructor we need to create D structor where we are going to deallocate memory so this is how D structor is going to look like you put this TAA symbol and then you use the same name for the D structor as the name of the class class it does not have any parameters and then here what you need to do is you need to deallocate everything that you have allocated inside Constructor so here you say please delete the array of actors like this and also I am going to null this array so I will say that actors is null PTR so that we don't hold the address in memory that is no longer ours with this we have we have simply cleared that memory and now I'm simply saying hey this pointer which was previously holding the address in the memory where our actors were stored it is no longer going to have that address I will simply null that pointer so this is how our D structor is going to look like and then we need to make changes to two more places we need to change our copy Constructor and we need to change assignment operator and I'm going to explain those two on a visual example so let's talk about copy Constructor imagine the following situation we have movie One its name is The Dark Night genre is action rating is 9.5 and then actors counter is two so we have two actors and then this actor's pointer it is just pointing to an array somewhere in our memory here is the address of that array so that is this array here and that array holds two elements two actors Christian B and hit Ledger and if you know about arrays you know that the indexation of arrays starts with zero so this first element has the index of zero and the second element has the index of one so that is how our movie one looks like now imagine that you want to do something like this please create movie six based on movie one so here we are invoking copy Constructor and this here is how the code of our copy Constructor should look like so now we are going to go line by line through this code and explain what is happening in memory when each line is executed so inside this copy Constructor we have received the original which is our movie one and based on that movie one we want to construct or to initialize movie six so let's go line by line and see what is going to happen so the first line says name is equal to original. name so I will simply copy that like this and then genre is going to be original. genre so let's copy that part as well and then rating is original. rating I will copy that part also and then actors counter is original actors counter let's copy that part as well and then we come to this line here here it says that actors is going to allocate new array of strings so let's do that let's allocate new memory let's say that I will allocate that memory here so the address is going to be 00 BB FF okay and what this actors's pointer holds is just that address now here on that address I am allocating new array that has this many elements so here we have value of two so that means two elements okay so we have allocated new array that holds two elements so then with this for Loop what we want to do is we want to iterate through those elements and we want to copy each element of our original object into this newly created object so we copy this first element here and then this second element here so that is what this copy Constructor does and how it copies first object into the second object so that is how our movie six is going to be constructed based on movie one so now I will go back to my visual studio and I will write this code for my copy Constructor so your copy Constructor should look like this so now let's see what kind of changes we need to make to our assignment operator which currently looks like this and I'm also going to explain that on a visual example with the help of excel so this is how assignment operator should look like and as you can see it is a a little bit different than copy Constructor and now we are going to explain line by line how assignment operator should behave so this is the situation that we have we have movie one with these values so it is dark knight genr is action rating is 9.5 it has two actors and then the array of actors is this array here on this address so we have Christian Bale and heat Ledger and then we have another movie movie two its name is The Lion King it is animated movie its rating is eight it has three actors and then actors are stored on this address here so we have three actors Salina Noak Denzel Washington and Leonardo DiCaprio um these are completely wrong for The Lion King but let's say that these are actors who act in The Lion King so what we want to do is this line here so we want to say please change Movie 2 so that it has the same values as movie one so to movie two I'm going to assign whatever movie one holds so let's see how we are going to do that based on this code here so I will skip this first line here because I will explain that part later it is going to be easier for you to understand so what I want to do is this line here name is equal to original. name so I simply copy the name of movie one and I put that as the name for my movie two okay and then genre is original genre so let's do that part as well so this movie is going to be action and then rating is original do rating so 9.5 here and then actors counter will be whatever we have here so instead of three we will have two actors and then this part of the code here says please delete the array of actors which means that first I have to deallocate this array here so I need to delete that so that we can free that memory so that it can be reused by some other application and only then I can allocate new array of strings with this many elements so only then I can say please allocate new array the address is going to be for example 00 CC FF and then this pointer here is going to point to that new address and here I'm going to allocate new array that has this many elements so here I will have array of two elements and then I will use four Loop in order to count from zero to actors counter and in each iteration I am going to copy one actor from this array here into this array here and then in the next iteration I will copy this actor here okay so now I have created movie two based on movie one so as we already said the most important difference between copy Constructor and assignment operator is we use copy Constructor when we want to create completely new object based on another object and we use assignment operator when we want to change or replace values of already existing object with the values of some other object and when we are talking about differences in code then the difference is this line here when you are writing the code for assign assignment operator then you need to delete or deallocate the memory that the previous object was using before you allocate new memory otherwise you are going to have memory leaks which means that if you did not deallocate this memory here and you simply allocated this memory then your operating system would not be able to reuse this memory and to give it to some other application so that application can use it so once more when you are writing the code for assignment operator you first need to deallocate the memory that previous object was holding and then you can allocate new memory and in that new memory you can copy new elements and new things that you want to store in that object and with copy Constructor we don't need to do that because as we said when we are using copy Constructor we are creating completely new object which was not holding any memory previously okay another important thing that I promise to explain is this line here if the address of original is not the same as this so what does this line here do this line will prevent any problems that could happen in case that programmer tries to do this movie one is equal to movie one if we don't have this line and we try to do something like this we will get a problem that is caused by something called self destruction so let me explain what that means so if we try to do this and we don't have this line here which checks if we are trying to assign the object to itself then the following would happen so name will be equal to original. name so we simply copy this code here and then paste it to the same place and then genre is original do genre so again I copy this and I paste it to the same place rating will be original rating again copy paste to the same place actors counter is original do actors counter again copy paste and then we come to this line here which says delete array of actors so what we do is this okay and then here it says please allocate new array that has this many actors so I allocate new array the address of the new array is going to be 0 DD FF and I want to allocate the array that has two elements so then what I do is I iterate and I copy the elements from this array here into this array here but I don't have anything inside this array because what happened was self destruction what I did in this line here is I deleted my array and now I have a problem so in order to prevent that problem from happening what you do is at the beginning of your assignment operator you simply say hey if the user is trying to assign the same object to itself then please don't do any of this code okay or in other words what this line of code here does is it says do this code here only if the user is not trying to assign the object to itself so this is how your assignment operator should look like I will write this code into my assignment operator in visual studio and then I will be back so here is how the assignment operator code should look like let's collapse this and then here is how our copy Constructor code should look like now in order to be able to test this I need to create two more functions one function that will allow us to add new actor to the movie and another function that will allow us to print all of the details about the movie so I'm going to add those functions and then I will be back to explain so I have added these two methods add actor and print info so now I'm going to explain what they do and I will explain this method first so let's go back to Excel and let's see what this method here does line by line so here is our method and then this is our situation so what I want to be able to do with this method is something like this so I want to be able to say movie One do add actor and then I pass the name of the actor and what this method here should do is it should add that actor to this movie so now let's see line by line how this method will perform that job so this first line here says to create a pointer called new actors so let's do that here let's say new actors okay and this pointer is going to point to the new memory that I will allocate so here I will allocate new array of strings that will have this many elements actors counter plus one so that is 2 + 1 which means that I will allocate an array that has three elements okay so the address of this array is going to be 0 0 BB FF and this pointer will point to this address and then the indexes will be 0 1 and two okay so then we perform this for Loop here so what this for Loop does is it simply assigns to each element of my new array the actor from my old array so here I will say Christian Bale and then here I will copy heat Ledger and then the last element will remain empty so then in this line of code here to the last element so new actors of actors counter so new array of this index we will assign our new actor and that is Salina nurak so let's put that here okay so we have assigned new actor here and then we can delete our old array of actors so we can deallocate this array here to free the memory and then to our actors pointer which is this pointer here we will assign new actors so now instead of holding this address our actors pointer will hold this address and then we will simply increment the counter of actors by one so 2 + 1 will be equal to three and now we have three actors and the address of the actors array is this address here so that means that our movie has these three actors so that is how this method here should behave and now you can copy this method and paste it in your visual studio and then the second method that I have created is print info and we use this method in order to print the information about the specific movie so we say movie one. print info and inside this method we print the name genre rating and then we say actors and we iterate through our array of actors and print each actor of that movie and one important thing is that both of these methods are created as member methods of of this class which means that they are inside the class so now let's test the code that we have written so let's delete this code from our main function and what I want to do here is I want to add some actors to our movie one so movie 1. add actor I want to add Christian Bale okay and then I also want to add heat Ledger okay like this so now what I can do is I can say movie One print info and if I start the program let's see what is going to be the result so we get the name of the movie genre rating and then here are the actors of the movie so now let's test copy Constructor so what I can do is I can create a new movie let's call it movie 3 and to this movie I will simply assign the same values that movie 1 has so this code here is going to invoke copy Constructor which means that if I say movie 3. print info I should get the same information that movie one has so let's start the application okay so this is our movie one and then this here is our movie three and as you can see our copy Constructor works because our Movie 3 has the same information as movie one because we used copy Constructor in order to create this movie based on this movie okay so let's also test assignment operator so here after I create my Movie 3 with the same values that movie one has what I want to do is I want to change them I want to say that movie 3 is equal to Movie 2 like this so then if I print Movie 3 let's see what we are going to get okay so here we get the Lion King animated and rating is8 and it does not have any actors which means that our assignment operator works as well and one last thing that I want to do is I also want to assign some actors to Movie 2 so I want to say movie 2. add actor and here let's say Salina norak okay so that is is me and then let's also say Denzel Washington and then let's also add another actor let's say Leonardo decaprio okay so I have assigned three actors to my movie to so here I'm creating my movie three based on movie one but then I'm changing its value so that it has the same values as Movie 2 has so this name this genre this rating and then the these actors here so when I print Movie 3 let's see what we are going to get okay and as you can see Movie 3 is Lion King animated movie rating is eight and then these are the actors so this means that our assignment operator works as well okay and then once more the most important thing to remember is the difference between copy Constructor and assignment operator so copy Constructor will be invoked when you are creating completely new object based on another object and then assignment operator will be invoked when you are simply replacing the values of already existing object with some other object and please don't be fooled by something like this movie and then let's say Movie 4 is equal to Movie 2 so this here even though it looks like assignment operator is still invoking copy Constructor because we are creating completely new object based on another object and then later if you want to change the value of this movie 4 and you want to say for example Movie 4 is equal to something else then this line here will invoke assignment operator okay so I hope that this video helped you to understand the difference between copy Constructor and assignment operator if you want more similar videos then simply give this video a thumbs up so that I know to create uh more videos like this one in the future and if you have any questions you can leave those in the comment section and if you want to learn practical programming you want to learn how to build real world applications and start a successful career as a programmer and you also enjoy my teaching style and want me to be your mentor on that journey and take you from beginner to expert then you can enroll in my practical programming course more details will be in the description so I have created the entire plan for you all of the exercises tasks lessons everything that you need to do is going to be on one place and your job is just to follow that plan and if you do so if you stay consistent watch all of the lessons do all of the exercises I'm sure that you are going to achieve your goals and as I said we also have a special discount so the fastest people who enroll in the course using the link in the description will also be able to save some money and if you are not sure if this course is for you or not then you can try it out for seven days and if for any reason you think that it is not worth your money you can get a full refund so you really have nothing to lose but a lot to gain this course can completely transform your future and it can help you to start a very successful career as a programmer so thank you very much for watching this video and I going to see you in another one bye