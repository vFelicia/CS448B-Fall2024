hi guys welcome to my channel in this video I wanted to talk about ifelse statements but a bit more complex a foul statement so that you can get an idea on how they are used in real life so if you are not familiar with that at all like you have never heard of a foul statement then you should probably first watch my first video of this subject and I'm going to link it somewhere here and then you can come back to this video but if you are already familiar with the very basics of ifelse statements then this video is right for you so that you can upgrade your knowledge so keep watching so the problem that we are going to solve in this video is the one that students usually get on their exams a lot and with the knowledge that you get from this video you are going to be able to recognize and solve other problems of this type and also if you don't want to work with C++ this logic that I'm going to teach you today is going to be applicable in other programming languages as well so here is the text of my problem and it says that our user should enter the side length of a triangle so a B and C and after that our program should write out whether that triangle is equilateral isosceles or scalene triangle' and as you already may know equilateral triangle is the one that has all three sides of the same length isosceles triangle has two sides of the same length and then scalene triangle' is the one that has all three sides of different lengths so the way that we are going to solve this problem is we are going to really visualize the solution for this problem so that you can really understand it and that is going to be using diagrams the tool that I'm going to be using for drawing diagrams is called blank diagram you can use whatever tool you prefer even pen and paper if you want and the first shape that I'm going to put to this diagram is going to be this circle shape here let's say that it is going to indicate the start position of our program so here's where our program starts and after our program has started what we want is we want our user to enter side lengths of our triangle and the shape that we are going to be using for that is this funnel shape here so that you can clearly visualize because of this funnel shape that something should enter inside it something should be inputted in your program and what should be inputted is side lengths so a B and C and the type that I'm going to be using for these three variables is float Y float well because the lengths of sides of a triangle can be decimal point number or a floating point number so float and now let's put this arrow here so that you can oh so that you can visualize the flow of our program it goes like this and then after our user has inputted the side lengths what we should do is we should determine whether he has entered equilateral triangle isosceles triangle or squalene triangle and what I'm going to do next is I'm going to use this diamond shape here which indicates decision in your program and what I'm going to put inside this shape here is condition the first thing that we want to check is whether whether our user has entered equilateral triangles so whether these three sides are all of the same length whether these three variables hold the same value and let me make this a bit bigger and inside here I'm going to say please check if my a is equal to my B and also if my B is equal to my C like this so let me join these two and I want to explain two things when it comes to this first one is this operator here this end operator these two ampersands this is logical and operator and it is used as I'm going to just explain so this expression here is going to result as true expression only in a situation where this here is true and also an same time this here is true so in that case this whole expression is going to result as a true operation that is the logic behind this end operator and second thing that I want to explain is following so I have set here please check if my a side length is equal to my be length and also if my be side length is equal to my see side length what you have also what you can also put here is you can also say a because we have determined here that these two are of the same length so it really doesn't matter if you put here A or B whichever you prefer so in this situation where this results as a true operation we are going this way and what I'm going to do when this results as a true operation as a yes operation I am going to use this shape here let me just rotate it I really don't see a shape that that is this one so that's why I'm using this reverse funnel shape and I'm rotating it so that you can clearly visualize something something that is being outputted from your program let me delete this text here and make it a bit wider and I'm going to put text inside it and what I want to write out in this situation here where this results as a true operation where this condition is fulfilled is that our user has entered equilateral triangle because all three sides are of the same length so let me write it out so in case that this condition condition here is true we are going to write out for user that he has entered equilateral triangle and then let's check the situation where this here results as a no operation so in that case we have to determine whether our user has entered scalene triangle or a Solis triangle and for that I'm going to be using another of these diamond shapes so another decision that we have to make and let's put it here and know and the next thing that we want to check is following so I want to check when I was I have determined that my user has not entered all three sides of the same length I want to determine whether he has entered all three sides of a different length so I'm going to put inside the shape here another condition and I'm going to say following so please check if my a is if my a is not equal to my B and also at the same time if my a is not equal to my C and also at the same time if my B is not equal to my C like this so this is the next condition that we want to check and this operator here is called not equal to operator and it is really reversed from this equal operator it has reversed logic so in this condition here what we want to check is whether my a side length is not equal to my B side light and also at the same time whether my a side length is not equal to my C side length and also whether my B is not equal to my C and if this here results as a true operation that means that all of these three side lengths are not equal they all have the different lengths so in that situation we are going to go this way and we are going to write out let me copy this shape and here I'm going to say please write out my user that he has entered a triangle that has all three different side lengths and that is going to be our scalene triangle like this okay so in the situation where this here resolves as a true operation it means that all of these three are of a different length and we write out to our user that he has entered scalene triangle and then the situation where this here results as a no because we have previously determined that these three are definitely not of the same length and then we have in this condition here determined that these three are also not of a different length what is left is that the two of these two of these three sides are going to be of the same length and that is going to be the situation where we write out to our user oh I can copy this and we write to our user that he has entered isosceles triangle so let me write it out okay so these three are three potential end points of our program so three potential solutions to our problem and after we write out our user this or this or this I am going to really put this one diamond shape just to indicate that our decision has now come to an end we have solved this problem and we are going to join these paths in this shape here so I'm going to put this and this like this so now after we have decided whether whether it's an equilateral triangle or scalene or isosceles I can now say say you can resume the execution of my program normally so whatever I put after this shape here is going to be executed in either this case or this case or this case and what is going to be happening after the shape here is just stop so our program is going to stop but you can put a lot of code here if you need to so I'm going to say stop and let me delete this really I don't need it okay let's explain one more time this diagram so after our program starts our user should enter a B and C which represent side length of a triangle and I have used this float shapes and since those side lengths can be decimal point numbers and after our user has entered that we come to this decision point here and what we want to decide here is first thing we want to check whether all of these three variables are of the same value so whether he has entered three same lengths for a triangle sides and in case that this here results as a true operation we are going this way and we write out to our user that he has entered equilateral triangle and after that we go this way and our program stops in the situation where this here results as a no operation we want to check something else so we are doing this way and we come to another decision point and here we want to decide whether our user has entered a triangle that has all three different side lengths so after we have checked that they are not equal we want to check whether all of three variables are of a different value and in case that this condition here results as a yes operation that means that he has entered scalene triangle' but in case that this here results as a no operation we can now clearly say that he has entered isosceles triangle because we have checked here that these three sides are not the same and we have checked here that these three sides are not different so all of them are not different and that means that two of them have to be equal and in that situation we go this way and we write out our user that he has entered isosceles triangle and now we can go this way and you can see that in this situation as well our program stops here I have opened my flowchart and my visual studio so that we can just translate this diagram into our C++ code so the first thing here is our user enters our a B and C side length so let's declare three variables of type float and let's call them a B and C and now I'm just going to write out a message to my user so that he knows what he should enter so let's say see out and please enter a and then B and then C like this and then let's use our C in command so that he enters his values okay let's say the first thing that our user enters is going to be stored inside my a variable after that what he enters please target inside my B variable and then third value that he enters is going to be stored inside my C variable so now that we have entered our side length of a triangle we come here so to a decision point and we said that we represent this would ifelse statement so I'm going to write here if and then inside these parentheses I'm going to say this condition here so please check IDs please check if my a is equal to my B and then also check is my B equal to my C like this and if this this here this expression here results as true expression I'm going to execute one block of code and that block of code is going to be this one here but if this expression here results as a false expression okay I am going to execute another block of code and that lock of code we represent with our else statement like this okay and then what's right this yes situation so let's write here C out equilateral triangle so like this oops you should put that not in a quotation marks okay so in the situation where these three side lengths are equal we write out for user that he has entered equilateral triangle but in the situation where this here results as false we have this else block to execute now let's find out what is inside our else block so it is this code here and there is another ifelse statement so this if our statements statement is really nested inside this one here so it is nested inside this else block so here in these brackets here we are going to put another ifelse statement so let me write out if and then inside these parentheses we put our condition from this decision here so from this diamond shape here and I'm going to write out this check if my a is not equal to my B and then is my a not equal to my C also and then is my B not equal to my C so in this condition here we check whether all of these three variables have different values here and if they do if this condition results as a true expression I'm going to write out let me just copy this and then we are going to adjust it I'm going to write out that my user has entered a scalene triangle as you can see here so when this goes in a yes way we write out that message so if this results as a true we write out that our user has entered scalene triangle but if this here result is a false then we are going to write out that our user has entered isosceles triangle and let me copy this like this okay so we have nested this ifelse statement inside this else block so this if our statement is going to execute only in a situation where this here results as a false for false expression so this code here if you find it a bit unreadable I want to show you one trick so one rule that you can really follow and that is if you have only one command under this if or else statement you don't need to use these brackets so you don't need to say that you are going to execute a block of code since you are not you're going to execute only one command so you can really delete the this here like this and then also here since we have only one command both here and here we can delete these brackets here like this okay so now this code is a bit easier to read okay now as you can see from this diagram here it is literally translation of this here and vice versa so this code here is a translation of this diagram here and what it means is when our user enters three values for our sides of a triangle first we are going to check whether all of these three sides are equal if they are I'm going our program is actually going to say that our user has entered equilateral triangle but if this here result is false then we are going to our else block and then inside that else what we are going to nest another ifelse so we are going to check another condition we are going to execute this if else here and this if else here is going to check following so it is going to say please check if all of these three variables are different values so if all three sides of a triangle have different lengths and if they do we can see that that is a scalene triangle but if they don't then since we have already checked that they are all that all of them are not equal and also we have checked here that all of them are not different we can say now that definitely two of these variables are equal and that means that our user has entered isosceles triangle and that is the program that we had here okay so I hope you liked this video and if you did this is a strong call to subscribe to my channel and to share it with anyone else who would like to learn programming and I'm going to see you in my next video bye