hi everyone welcome to my channel in this video i want to explain how you can use pointers in order to return multiple values from a function so i said in the first video of this playlist that using pointers to return multiple values from a function is a very common use for pointers so in this video i want to demonstrate how that works so here we are going to create an array of numbers and then first i want to create two functions and one of those two is going to return me the smallest number in that array and then the other one is going to return me the largest number in that array and then in the second part of this video i want to show you how you can use pointers in order to get both smallest and largest number using one function only so you can return both of these numbers so min number and max number using only one function and that is going to be with the help of pointers so let's start with this example as i already said i'm going to create an array of numbers so um those are going to be numbers of type int and let's call this array numbers like this and it is going to be array of five numbers and let's assign them values of for example five four um minus two 29 and 6 for example so those are going to be my numbers okay and now let's create a function that is going to return the smallest number of this array so i'm going to create that function here and let's give it the return type of end and i'm going to call it get min like this and what i will need to pass to this function is going to be array so this array here so i'm going to say int numbers array so this is going to be the first argument and then the second one is going to be the size of this array so i'm going to say int size and we will use this second parameter here so that we know how many iterations we have to make in order to go through all of the elements of this array so let's define this function the first thing that i want to do is i want to create a variable of type int and that variable is going to be called min so this is going to be the variable that is going to hold the minimal value so the smallest number in this array and initially i want to assign to this variable the first element of this array so i'm going to say that the smallest element initially is going to be the first one so i'm going to say numbers of zero and then we are going to iterate through all of the other elements and each time that we find an element that is smaller than the current value of our min we are going to store that value in our min so let's do that so i'm going to say 4 and since we have already stored the value of our first element in our min we do not need to iterate through that so i'm going to say that my end initially has the value of one okay oh and i is equal to one like this and then our for loop is going to iterate while our i is less than the size of this array so in this particular situation while our i is less than 5 and in each iteration we want to increment our i like this so as i already said if we find a number on a specific position which is in this current situation uh the position with the index of i if we determine that that number is smaller than our min number like this we are going to store that number in our min variable so i'm going to say min is equal to numbers of i so that at the end of this for loop in our min variable is going to be the smallest number of this array so at the end of this for loop here we can return are men like this okay so now in order to test this function here i'm going to invoke it let's say get actually i'm going to write it out i'm going to say c out min is like this and then let's invoke it let's say get min like this and this getman function receives array so let's pass it numbers array and then it receives the size of this array and this array has one two three four five elements and you can check that here as well so we are going to pass five here okay and if i run this program as you can see it says min is minus 2 which really is the smallest number in our array so that is going to be the first function and then the second function that i want to create is going to be the one that is going to return the largest number in our array so let's copy this function i'm going to copy it and then just modify it a little bit so the name of that other function is going to be get max like this and then that function as well will receive numbers array and the size but here we are going to have variable which is called max instead of min and again we will assign it the value of our first element so then we iterate through all of these elements so starting with the second element because first the value of the first one we already have inside this variable so we do not need to check that but if we find in these remaining elements if we find element that is larger so bigger than our max let's copy this here we are going to store the value of that element in our max variable like this and then at the end we will return our max variable okay so now in order to test this function i will invoke it as we did with this previous one i'm i will just say max is and then invoke get max like this and i'm going to add two end lines here so that we have output which is formatted nicely and if i run my program now as you can see it says min is 2 and then max is 29 which is correct so let's explain one more time the algorithm that we are using here in order to determine the biggest number of our array so here in this first line i say that the biggest number is the one with the index zero so the first one and then here we iterate through all of the remaining elements and that is from the one with index one until the last one and if we find that any of those remaining numbers is greater than our max number then we say that our max number is equal to that number so at the end of this for loop we will have in our max variable the largest number of this array here okay and we have accomplished to get our min number and then our max number using these two functions oh i'm sorry so using this get min and then get max function as well so now what i want to show you is how you can use one function only to get both min and max number so let's do that let's create a function which we will name void get min and max like this and this function is going to receive like these two previous functions our numbers array and the size of the array and then considering that we want to return two values from our function we will have to pass those two values by a reference which means we will have to pass the addresses of the two values and then this function here is going to change the value that is stored on those two addresses and this function here our main function is going to have the access to those two addresses as well so once this function here assigns the value of min and max numbers to those two addresses our main function is going to be able to access those values so as i said let's pass to this function as well int min like this and then into max so we are receiving here pointer to a min number and then pointer to a max number okay so the job of this function will be very similar to the jobs of the two functions that we just created so i will just copy this and then paste it here and once more we are iterating through all of the numbers of our numbers array and then here we say if you find any number which is greater than our max number and here we have an error which says operand types are incompatible so int and int pointer which means that here we have to dereference this pointer using the star symbol so if you find any number which is greater than our current max please store that number inside our max like this and then i'm going to copy this code one more time for our min number so i will say if you find any number which is smaller than our min number like this please assign that number to my min number like this so this is going to be the work that this function will do and considering that this function is receiving these two so min and max as pointers this means that this function is directly going to modify the values that are stored on these addresses and those same addresses are going to be available in our main function which means that once this function changes the values that are stored on our max and our min address this main function here will be able to access those changed values and using pointers in that way we have achieved to return multiple values from our function so let's invoke this get min and max in order to test what i just said so i'm going to comment these two lines of code because we do not need them anymore and because here we have to pass min and max we will have to create those two variables here as well so i will say int min and as we did before i'm going to assign to this min the value of my first element like this okay and then i will create max variable as well and assign to my max variable value of my first element as well and now let's invoke this get min and max function so let's say get min and max and let's pass it parameters that it needs so the first one is numbers array so i will say numbers and then second parameter is size of that array so five and then it expects to receive two pointers so min and max and we will have to pass addresses of our main and then address of our max as well like this and this here is called passing a parameter using a reference so that means pass an address of a variable to your function rather than passing variable itself because then if you don't pass an address your function is going to create a copy and whatever changes your function makes with that copy you will not be able to see those changes in your main function so in this way we are passing addresses which means that this function here is operating on the original addresses which this function here is accessing as well so when this function here changes the values that are stored on those addresses this function here will know so that means that now if i try to write out oh i will need to add semicolon here at the end okay so that means now if we try to write out our min like this min is and then min and then if we try to write out our max as well max we will get um values of 2 and 29 at least we expect to get those two values if this function is working correctly so if i run my program as you can see we really have values of minus 2 let me just collapse this so we really have values of 2 and 29 as the smallest and the largest number in our array and we have achieved that using this pass by a reference so by passing addresses of our variables to our function which our function then changes the values that are stored on those addresses and since this main function as well has the access to those same addresses that means that our main function can see the changes that have been made on those addresses so i hope that now you have an idea how to return multiple values from a function using pointers so if you enjoyed this video if you learned something new give it a thumbs up and also subscribe to my channel and i will be publishing more videos related to pointers in the future so if you don't want to miss out on those press the bell icon as well thank you for watching and i'm going to see you in my next video bye you