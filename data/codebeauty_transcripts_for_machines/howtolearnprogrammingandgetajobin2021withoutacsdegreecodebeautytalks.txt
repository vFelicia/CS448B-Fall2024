hi everyone welcome to my channel my name is saldina for those of you that don't know i am a software engineer and i make i.t and programming related videos here on youtube and as you can already see from the title in this video i want to talk about learning programming and getting a job without computer science degree now i believe that it is already a wellknown fact that you don't need a degree in order to get a job in this industry and in order to become a programmer however going to university is the most common way that people choose in order to learn programming and enter this industry and it is as well the path that i have taken so i went to university as well but as i already said it is not because it is necessarily the best way or the only way it is just that i didn't know any better at the time so let me tell you a little story a few months ago i was talking with a friend who is also a software engineer but he works for a different company and that conversation went something like this he said that his team and him had a lot of unfinished work and that the deadlines were approaching so they had to finish that before the deadlines or else they are going to lose the client so he asked me if i wanted to join his team so he basically gave me a pretty good offer to change the company but considering that i have a job which i like and then at this point i had a youtube channel which i was fully committed and i still am i politely declined that offer so i said that i don't want to switch my job but i still was interested in what kind of people do they need so i asked and he said that they wanted someone who is a senior developer someone who has five plus years of experience and then he gave me technologies which his team uses and i would say that that is pretty standard situation most of the companies want to employ people who already have a lot of experience but considering that i had a youtube channel and that i know that a lot of you guys don't have that much experience i was interested if they would employ someone who does not have experience so uh were they interested in junior developers so i asked and he said absolutely not he said that uh junior developer would have a hard time to understand that project that that person would create additional bugs and they just don't have the time to teach someone right now so um that was pretty much the end of that story for that day but then we talked about it again a few weeks ago and i'm going to tell you how this story ends at the end of this video but that conversation that happened a few weeks ago was a trigger for me to make this video because i always ask my colleagues my friends other developers that i'm surrounded with in order to have their opinion as well about the topics that i'm talking about on my channel because i believe that by having multiple opinions and the experience of multiple people that gives additional value to the story that i'm telling you so before i continue with this story i just wanted to ask you guys for your opinion do you prefer these types of videos when i overlaid them with a gameplay like i'm doing in this video or you just prefer when i sit and talk to you about different topics i figured that it could be pretty boring for some of you uh to watch my static background so i decided to make something like this but again i'm very interested to hear your opinion so make sure to write me in the comments down below which one do you prefer um and then as well please don't be harsh in the comments if i get killed a million times i'm not a professional gamer if you want to watch that type of content uh you can find other channels i'm just trying to make this learning process for you a little bit easier where you can watch something fun and then learn in that process as well and listen to something informative so let's return to our story as i already said you don't need to have degree in order to get a job but you do need to have the knowledge so what is the best place for you to get that knowledge what is the best place to start learning i believe that you can already guess the answer to this question and that will be youtube courses udemy courses pluralsight stack overflow for any questions that you have and so on and then one thing that i would recommend is before you dive into details of a specific topic i would first watch some sort of a crash course or some type of video where you will get a bigger picture of that topic of that subject that you are trying to learn and then i would dive into those specific little details for example i have on traversing media i have one and a half hour long c plus plus crash course and then on my channel i have made uh many hours of videos where i explain each little detail of c plus language so i would first focus on watching that c plus plus crash course so i would watch that once and then i would dive into those specific details of c plus which i have on my channel now a common question is is there a need for paid boot camps i would say that it depends some of those boot camps are going to be free as well so i would say definitely use the opportunity to get all the free knowledge that you can but some will be very very expensive or you can even make some type of agreement where you don't pay anything upfront but they take a percentage of your salary later once you get a job so again is there a need for very expensive bootcamps i would say no especially if you have the opportunity to get that knowledge for free on youtube or to get it for just a couple of dollars on udemy and sites like that and then one thing that you can use as well and as far as i've seen many companies have something like this and that is some sort of a school or course which that company organizes and on that course they will teach you technologies which that company needs and those courses are usually free and almost anyone can join and then once you go through that course at the end you will have an exam and the people which have the best results will get the opportunity to get a job in that company so i would say do your research and find out if the company that you are interested in has some sort of a similar program now another tip that can be very useful for you is the following the companies usually have a few different types of tasks that they send you once you apply for a job and the goal of those tasks is to eliminate people that don't have enough knowledge now depending on the position that you are applying for you can get different types of tasks tasks but what usually happens is that they are going to send you one task that has multiple levels so for example the first level can be for you to implement a basic crud application so create read update and delete and all the data can be hardcoded on frontend for example so that would be the first level and then second level would be for you to move that data to api and to make both back end and frontend and to get that data from api so that would be second level for example and then third level considering that the previous level was making a pretty basic application that doesn't have any logic or almost any logic a third level can be for example for you to add some business logic to that application to be to make it a little bit more complex and then fourth level can be for example to implement authorization and something like this again this depends very much on the position that you are applying for now another important thing that is that once they send you that task they are going to give you deadline of course and uh one thing that you can use to your advantage is following a person who works in that company a person who works on the position that you are applying for can be very very helpful for you so uh that person should have a pretty good idea on the type of task that you are going to get either because that person got very similar or the same task or just by working in that company and talking with people uh that information is shared you know it's not a top level top secret level information so if you can't get in contact with someone who already works in that company that person can be very helpful that person can help you a lot and guide you through that process of getting a job in that specific company and then they can tell you what you should learn the most and when you what you should prepare so that once you get your task you are able to solve that task much quicker so before that deadline and it's the same way when you were in school for example and then one group of the class has an exam today and then another group will have that same exam tomorrow so you always ask your friends you ask people from that other group what kind of questions did you get was it hard what should i learn and prepare you know so some people will help you some people won't and it's the same way here but i believe that if you can get in contact with someone who works for that company and if you approach that person politely and if you ask for an advice i believe that most people will help you and that advice can be very very helpful and useful now since we are talking about getting a job without computer science degree a common question is how long one should learn before even applying for a job so how long you should learn before thinking that you have some sort of a meaningful knowledge let's put it like that so we all know that if you go to university that usually means three or four years before getting a bachelor's degree and then one or two more years for master's degree and then seven or eight years to complete a phd and so on so there is a plan but how long you should learn on your own if you don't go to university and i hate to say it but it depends it really depends on the person but i can give you a rough estimate so i would say anywhere between a year and a year and a half of you learning every day for a couple of hours or almost every day and then don't get me wrong learning for a couple of hours does not mean learning for two or three hours it's more like five or six or even seven hours for you to learn to get some sort of meaningful knowledge before applying for a job but it is still a lot less than what you would spend on university but why is that so it is because most universities and educational system in general has one very big thing in which it is failing and that is that it assumes that everyone needs the same amount of time to learn something and that is definitely not the case and you can use this to your advantage so you can use this in order to spend more time on the things that you need to spend more time on in order to understand them and then if you need less time to understand something you don't need to have additional three days or four days uh looking at that like you would if you were in a classroom with 50 other people so you can plan that according to you you can spend a few hours on a certain topic and then once you understand it you can move to the next one but sometimes when you learn alone you can easily lose motivation and end up watching a million different youtube videos about food and cars and games and sports and then my favorite which is cats do i look happier to you it's because i just spend an hour watching cats videos so to return to our topic sometimes you can motivate yourself and you can learn on your own however what often happens is that you get stuck on something and you try to figure it out for days but you just can't so what can help in this situation is having one or two friends people that are on the same quest as you people that have the same goal of learning programming the same goal as you so just by having another perspective of that problem or just by having another pair of eyes to look at your code that can be very very helpful and then one thing as well is don't be afraid of that process where you are struggling and trying to figure out a solution for a problem because that is the process where you will learn the most uh believe me every time that i had to figure out a solution for a certain problem for days and i was really really struggling i still remember that solution even years after and then anytime that i had someone else be like oh yeah i know this problem and then that other person types out the code for me i'm like literally in two days we have the same problem and i'm like um what was that thing that we did like yesterday so don't be afraid of struggling and not understanding things right away because you probably fell many times before you learned to walk and to talk and to swim and ride a bike and the proof is that you are here you know you have to struggle at one point with learning english language and the result is that you are now here and you are able to understand my video now one thing that i must address and that is very big problem for anyone who is learning alone is not a lack of information but the fact that right now you have so much information available on the internet that it becomes extremely hard for any beginner to navigate through this ocean of information and to understand what he should learn what he shouldn't learn what is important what is not really important so if i was a beginner right now if i was just starting with zero experience to be honest i'm not sure that i would be able to find the most optimal path for myself to learn so with the experience that i have right now so after working for years in this industry that stops being a problem so now i am able to distinguish between things that are important and then things that are not but for any beginner it is very very big problem so the best advice that i can give you is to really think about what do you want to achieve so you want to get a job where what do you have to learn do your research and once you have that goal stick to that goal stick to those things that you have to learn and don't try to learn 100 different things all at once because there are so many things in this industry and trying to learn them all at once it's just going to be impossible and even impossible is an understatement so let's say that you did spend enough time learning and that now you want to get a job so how do you make yourself interesting for that company most people who went to the university have some sort of projects that they worked on so they can show that but what often happens is that most of those projects are very similar or even the same because those people had that same approach to learning and they had that same path so that is your opportunity to make something special something different make yourself stand out and make yourself more interesting for that company the things that companies appreciate the most are creativity and passion and dedication and persistence so imagine making some sort of an application where you can clearly show all that creativity that you have and all the passion and progress that you have made over time so uh making an application like a progress tracker or a diary for example where you can clearly show where you were at day one of learning and then day 30 and day 100 and day 300 so that can clearly demonstrate the progress that you have made over time and then you can add different styling and some interesting functionalities to that application so that you can show all the creativity that you have and this is just an idea a suggestion and i'm pretty sure that if you spend a day or two thinking about this you can come up with the great ideas yourself and then make sure to use git and some deployment services so that you can share your application with other people and that you can show your work to other people and if you're familiar with git you can even make a small team so a group of few friends that will work in that application together and that can be a very good proof that you are team player as well and that you know how to work in groups one very important thing is that once you send that job application don't get discouraged if they don't call you back because that is something that happens very often and it doesn't happen only to people who don't have experience but it happens to people who do have experience as well but juniors are the ones who get discouraged by this most often but what people with experience will do they will just send job application to another company a similar one or even a better one or what happens even more often is that they send a job application to multiple companies at the same time so even if just half of those companies call them back that is still a great situation you still have opportunity to choose but if you want to work for that specific company so if you want to work for that company only you can apply in a few months again and that is going to be a pretty strong thing to say once you come again so you can say i applied a few months ago and you rejected me you said that i needed to learn this so i did and here i am again so always ask for feedback if you can get it always ask what was the problem why didn't you get that job because those are your weak spots and that is something to focus on so to return to the story from the beginning of this video i said that i will tell you how that story ends at the end of the video so a few weeks ago i talked with my friend and he said that at the end they did get a senior developer they get someone who had more than 10 years of experience and they gave him a pretty generous salary and that project was finished so i missed on a position with a good salary however if i had accepted that i wouldn't have time to make videos for you guys and i wouldn't be able to share this story with you and that is something that truly makes me happy so the most important thing is that you do something that truly makes you happy so even though juniors are not going to be the first choice when a company or a team has some sort of a burning project which needs to be finished as soon as possible as a junior you still have very high chances to get a job because there are only so many seniors and then not every company is going to be able to afford a senior developer and then one very important thing that happens is that seniors get burned out and there is just not that spark that you see at people who want to prove themselves and at people who really love this job and the reason that i rejected that offer at the first place is because i just love doing youtube more you know and even though it's not generating me nearly as much money it just makes me happier and that is more important to me so when i asked my friend what kind of junior would they want to employ he said someone who really loves this job and you can't see that in a person you can see a person who is always trying to take things one step further someone who accepts a critique in a right way or a person who is always trying to find ways to make things better and to learn and to make progress so that is one very important thing be in this because you love it and be prepared to learn and improve because irrelevant if you finished university or not in this industry you will always have to learn and then if you are interested to hear my opinion about things that you will not learn at university but are very important for you to know i already made that video and i will link it here and then in the description down below as well so make sure to watch that video and then if you have any other questions please write them in the comments down below and if you liked this video give it a thumbs up and subscribe to my channel so thank you very much for watching and i'm going to see you in my next video bye