hi guys and welcome to my channel in this video I'm going to teach you how you can build user interface applications in an easy way and also completely free and the reason why I'm saying this is because there are some tools that you can use in order to help you to build UI applications but unfortunately they are very expensive so in this video I will teach you how you can use Visual Studio Community version which is completely free in order to do that same thing so immediately let's start and let me show you the application that we are going to build so here we have our todo app as you can see this is how our application is going to look like and here I can type a task that I need to do let's say for example pay bills okay and I can add that task to my todo list let's add another one let's say go to the gym add that as well and let's say also learn coding okay and then when I finish each one of of these tasks I can easily remove them from my list by simply clicking on them okay and all of the tasks have been removed so this is the application that we are going to build in this very short video and before we start writing the code I want to invite you to please watch this video and build this application together with me and uh you will see how much knowledge you can get in a very short video that took me maybe 2 hours to prepare film and edit and and then I want you to imagine how much knowledge you can get in an entire practical programming course that I have been working on for the past year and a half so my practical programming course is going to teach you everything on one place step by step and it is going to take you from beginner to experienced developer level so that you don't need any more courses after that one and so that you can get a job and finally start bringing money home initial 100 lessons are already available and you can click the the link in the description and start learning right now also every week I'm adding new video lessons and new exercises for you to practice until we cover everything that you need to know in order to become an experienced developer and get a job that you like also you will get access to an exclusive developer Community where you can ask questions share experiences and collaborate with other programmers one very important thing about this course is that all of the skills skill that you learn in the course will be applicable and transferable to any oop programming language so languages like C++ CP Java python JavaScript doesn't really matter because in this course you will not just learn to code you will learn to create to innovate and to solve problems regardless of the programming language that you want to work in in the future and type of application that you want to build in this course we will be writing C but it is just going to be a tool for me to shape your programmer's mind and all of the skills that you gain will be transferable and applicable to any other objectoriented programming language I will put a link in the description that you can use in order to get the course and currently there is a special discount but the number of people that can get it is limited so if you want to join definitely don't miss this opportunity so with that being said let's start building our application I already showed you how it looks like and how it should behave so now we are going to focus on building this application so the first thing that you will need is Visual Studio 2022 and you can download Community version for free if you have some older version like Visual Studio 2019 or something like that then I absolutely recommend you to download 2022 because you might experience some problems that I will not have here because I have new version of visual studio so make sure to download 2022 okay so once you have that click on create new project here and the type of application that we are going to build is going to be Windows forms application okay you can find it here so Windows forms app C so click on that and click on next okay and here we are going to give the name to our application to our project so I will call it my todo app like this and click on next okay and here you should select the framework and here I have the list of different Frameworks and the one that we are going to choose is net 6.0 and also please keep in mind you might have some newer versions like 7.0 or something like that depending on when you are watching this video but it's very important that you select 6.0 it has longterm support and if you don't do this step the same that I do then you might experience some problems that I will not have here so make sure to select 6.0 and then click on Create and now our project is being created okay so here immediately we get an empty form and I can also start this application so when I started as you can see we have this empty form our application will not do anything because we we have not written any code we have not implemented any functionalities but this is a functional application that doesn't do anything I can simply minimize it I can open it again but it does not do anything so to this empty application we are now going to add the functionalities so let's close this app and on the screen I'm going to put the screenshot of the application that we want to build so as you can see we need one text box we need one button and we need one list control so now the question is where you can find all of those controls well please make sure that you are on this form one and then click on view toolbox okay and you will get a window that looks like this and here inside this toolbox you can find all of the controls that we need and you can simply drag and drop them to your form and use them now one very important thing is that when you are trying to open this toolbox it's very important for you to be on this form One Design part because if you are on any other part of your application for example here you will not be able to see your toolbox so again go to form one and then click on view and you should be able to see toolbox and that's where we have all of the controls that we will be using to build this application so what controls do we need to build our todo app we need one text box we need one button and we need one list box controls so let's find them here I will search for text box it is this control here and I will simply drag and drop it onto my form okay I can make it a little bit bigger and let's also make this entire form a little bit smaller okay so now if I run my application as you can see our application has this t text box and I can type text into this text box okay but something that I want to change here is the fact that this font here is very small and you maybe cannot even see it so that's the first thing that I'm going to change so how will you do that well close the application and then click on this text box right click on it and go to properties and here you will be able to see all of the properties of this text box and something that we are looking for for is a property called font here it is so simply click on these three little dots and here you will be able to choose the font that you like font style and also the size of the font so I will just change the size of the font to 16 and click on okay and as you can see our text box has become bigger so now if I start my application and I start typing as you can see the font is bigger and now you can probably see it better okay so that is one thing another interesting thing is that now if I add a button or a list box which are also the controls that we need in order to build our application they will also have that default small font so I will have to change the font for each individual control that I add to my application but there is an easier way way to do that same thing and that is to change the font on this entire form so you can click on your form right click on it and go to properties okay and find font property of your form click on these three little dots and here you are going to set 16 as the size of font for your entire form okay and that means that all of the controls that I add on this form will automatically inherit that font unless I set a specific font for that control which I will not because now we will have this 16 as a default font for all of the controls that we add to this form okay so let's find button in my toolbox I will type button and here I have button control okay I will increase it a little bit and as you can see already the font is bigger and you can clearly see it okay and another control that I need is is our list that control is called list box okay and simply drag and drop it here like this okay and let's just make this a little bit bigger okay so now if I start this application as you can see we have this text box and then when we click on this button this text here should be added to our list box but so far we have not implemented any functionality so what we are going to do next is we will implement the functionality for this application so that when I type the text and click on this button that text should be added to my todo list so let's close the application and let's do that part next so how are we going to do that well in order to be able to implement this functionality we will need to access these controls here from our code and we will need to write in code the behavior that we want and that is when I click on this button take the text from this text box and put it into this list here and that means that we will need to name these controls so that we can reference them from our code so if I click on this text box text box control and go to right click on it and go to properties here you should be able to see name property okay and as you can see this text box already has default name it's text box one also this button has default name it's button one and then this list box has default name and it is list box one now you can leave these names like this but what I recommend to do is to give meaningful names to these controls because if your application grows and you add new text boxes new list boxes new buttons then it is going to be extremely hard for you to remember which one is which if they don't have meaningful names so that is the first thing that we are going to change I will go to this text box again right click on it go to properties and find name property okay and I will call this text box task tbx okay so task text box and then I will also rename this button I will call it add task BTN okay so this is the name of the button but another thing that we can change for this button is the text of this button because currently the text that is shown on the button is button one so please keep in mind that you don't confuse those two so the name property is the name that you will use in order to reference that control to reference that button from your C code and the text property is the text that will be shown on the button itself so we can also change that let me find text property here it is okay so here I will say add task okay and this is just the text that our user will see okay so we have changed the name of our text box of our button and let's also change the name of our list box control so let's find name property where is it okay here it is so I will call this list box tasks LBX so tasks list box okay so now that we have named all of our controls what we can do is we can access them from our C code and implement the functionalities that we would like so what is the functionality that we would like to implement first that functionality is the following when my user clicks on this add task button I would like to take the text from this text box called task tbx I want to take that text and put it inside this list here so how are we going to do that well in order to implement that functionality you need to understand what are events and you can understand an event as an interaction between your user and your application for example an interaction between your user in your application is button click that is an event or when a user types A Letter into this text box or deletes a letter that is also an event so in this application we need to implement an event called button click event so how can we do that well click on your button actually right click on it and go to properties and here under this little thunder sign you will see events and here you can see the list of all of the events that you can Implement for this button and the event that we want to implement is called click so I will simply double click here and as you can can see it is going to implement this empty method which is called event handler meaning when the user clicks on the button this method here is going to handle that event which means it is going to describe the behavior of our application what should happen when the user clicks on that button an interesting thing is that there is faster way for you to do the same thing and that is the following go to your form and simply double click on your button and as you can see it will create the same event handler or if you already have it it will simply take you to the implementation that you already have we currently have this empty implementation but if we didn't have it it would create that default event handler now something very important that I just said is that it will create default event handler so what is default event and what is default event handler well default event for any control is the event that is most commonly used for that control for example for our button if you go to these events here you can see a list of a lot of different events but the default one the one that is most commonly used is Click so visual studio gives you this simple double clicking as a faster way for you to create that default event and each control has its own default event for example for a button that is clicking on a button for a text box that is you typing the text for a list box that is when you select an item of the list box and so on so if you want to do the same thing in a faster easier way you want to implement a default event for a certain control you can simply double click on that control without having to go to this list of all all of the events that is just one small tip and shortcut if you want to use it now there is one very important thing that I want you to keep in mind before you start clicking everywhere on your form or actually anywhere on your form because you might cause some very confusing bugs especially for beginners so let me show you what I'm talking about right now if I start my application we have this application that is running we don't have any problems we don't have any bugs it does not work the way that we want it to work but we can start it and it does not have problems so let me show you how you can create a problem very easily so let's say that you wanted to create or to access this button click event by double clicking on the button and here we have it but accidentally instead of double clicking on the button you double click here maybe so on the form so you do something like this okay as you can see Visual Studio has created another event handler called form one load which means when this form loads that is the event that we can handle here so now you realize oh no no no I don't need this I made a mistake so what you will do is you will simply delete this okay and you think that you have solved the problem because what was created you simply delet it and you shouldn't have any problems right wrong very very wrong because now if I start my application immediately we get this problem and we cannot even start our application or even if you go to your form you will not be able to see your form because we have a problem that is very very confusing for beginners so now I'm going to explain why do we get this problem in order to understand what is happening here let's take a look at one of these other files that we have not mentioned so far and that is this one form one. designer.cs this is file that is automatically generated and we have not written any code in it so far so if I open it let's see what we have inside it and please I don't want you to be scared right now because you don't understand what is inside here it's not important at this point as a beginner you don't need to understand the code here but something interesting that I want to show you is this part here you will also have this if you follow the same steps that I did and that is this part here when we created our task tbx so our task text box we have changed some properties of that textbox and our Visual Studio automatically in the background has written code for us in order to describe those changes so for example here is the font that we have set for our text box also here is the location meaning the position where we have positioned our text box here is its name its size and other properties and we have these things for all of the controls that we have added onto our form here we have our add task button and another interesting thing thing that our add task button has is this line here and this line here says hey this add task button has click event which was h handled inside this method here so that means when our user clicks on add task button invoke this Handler here so here we can see what is the problem that we are currently experiencing because for our form as well this line was added which says load event of the form is handled and when the form loads please invoke this Handler here and currently it is underlined because we have deleted it but our Visual Studio did not realize that we have deleted it so it did not remove this line here so now in order to solve the bug and the problem that we currently have we need to remove this line manually and that is the only thing that you should do inside this 41. designer.cs and and that is in case that you experience the problem that I just showed then you can come to this designer file and remove manually that event handler which you have deleted everything else that is happening inside this file is going to happen automatically and if you decide to change anything you can just break your application because Visual Studio is tracking everything that you do on your form now I'm going to close this and open it again and now because we have solved the bug we can see our form again so all of the changes that you make on this designer here of your form Visual Studio is going to track those changes and write them automatically inside this file here so you should not change this file manually except for the one thing that I just show you which is in order to fix the bug that was caused by deleting an event Handler okay so now if I run my application as you can see we don't have that bug anymore so again I'm going to close this for one designer we will not change anything inside it but I wanted to show you in case that you are not careful and you are clicking all over your form you can experience the bug that I demonstrated and I also wanted to show you the proper way to fix that bug so now we are going to focus on implementing this add task event hindler which is currently empty so what should happen when the user clicks on the button the following should happen we should take the text from this text box and put it into this list box here and in order to access these two controls from our code from our C code we need to know their names and that is the exact reason why we named them meaningfully so that we can easily remember their names so this text box here is called task tbx and this list box is called tasks LBX so now let's Implement our functionality the first thing that I will do here is I will create a list of strings where I can store all of my tasks and I will do that here so here I will say list of string and I will call it my tasks okay and initially it is going to be an empty list of strings now here I want you to notice that I created this my tasks variable my tasks list as a global variable and there are two reasons for that the first reason has to do with the scope meaning this here is global variable which means that it can be accessed anywhere inside this class which means from different functions why do we need that well because I want to be able to access it here when I'm adding new task but also later when I'm removing task that is going to be another function so I also want to be able to access the same list of tasks so that I can remove the task that I want so that is the first reason why this variable here is global variable and not just created inside this function for example that is the first reason and the second second reason has to do with the lifetime of the variable meaning this variable here was created as a global variable of this class which means that its lifetime is as long as this class here exists so as long as our form exists this variable here will also exist and that is exactly what we need because we need to show the tasks that our user has as long as he is looking at the form so if we simply created this variable inside this method here then it would just exist during the lifetime of this method and because we don't want for all of our tasks to disappear when this function here ends I created this as a global variable of my class form because now it will exist as long as our form exists so those are two reasons lifetime and scope so now what I'm going to do with this list is here when my user clicks the button I will simply say my tasks. ADD like this and here I want to add the task that my user has typed into the text box so I will say task tbx okay so I am accessing my text box so what will I take from this text box because it has many properties it has background color it has size it has position but all of those things are not interesting for us and what is interesting is the text inside that text box so here I will say task tbx do text so into this list please add the text from our text box okay and now I will simply set this my tasks as a data source for this list box here so I will say tasks LBX do data source is equal to my tasks and one thing that you should do before setting a new data source is you should simply know the data source that was previously assigned to your tasks list box because this is simply going to delete the previous data source in case that there is any and then it will assign a new one to your list box so with this we have implemented add functionality and now I can start my application and test it okay so let's say go to the gym and if I click on add task that task will appear inside my list box also let's say pay bills add task and then let's say learn coding Okay add task and as you can see very simple very easy in just a few lines of code you can implement this functionality and another functionality that I want to implement is now when I click on one of these tasks that I have inside my list box I want that task to disappear I want to remove it so let me show you how you can solve that problem let's close our application and I will go to my form and what I need to do is I need to find an event of this listbox control so right click on it properties and then go to this little Thunder symbol where you have all of the events here you have the list of all of the events and the event that I want to implement is Click event so double click here and it will imp implement the click event handler for our tasks list box and here we will write the code to remove the task that we have clicked on so how can we do that it's actually very easy so I will take this list where we store all of our tasks and instead of adding new tasks to our list I will say remove at and this method here removes an element at a specific if position so inside these parentheses I will pass the index of the element that I want to remove so how can I get that index how can I know which task which item to remove well our list box control this control here has a property called selected index and selected index is the item that you have clicked on the one that is selected so here we will simply say t tasks LBX do selected index like this and this is going to remove the selected task from the list of all of our tasks and then simply what we can do after that is we will reset the data source of our list box control and then we will set it to this list again because now we have removed that task from our list so now if I start my application let's add a task let's say go to the gym click on ADD and let's say also learn coding click on ADD and now we have two tasks so for example when you finish learning the code when you finish watching this video you want to remove this task so you simply click on it and it is going to disappear and I can also remove this one and that is your proof that this method here works so here we have created a fully functional application and if I didn't explain all of these other things that you need to understand then it would be possible to create this entire application in literally 2 minutes because it has one four seven lines of code that we have written so with just seven lines of code we have been able to create this application but the thing is is that you really do need to understand all of these other things that I have explained in order to be able to create practical applications and this that I have showed you in this very short video is barely scratching the surface because there are a lot more things that you need to understand and that you need to learn if you want to build useful applications that have a lot of users and that can earn a lot of money and all of those things we are covering in my practical programming course because there we have a lot more time I have personally invested a lot of time to create perfect examples for you in order to learn practical programming so that you are able to solve real world problems with your applications so if you want to learn all of that and if you want to transform your career and go from beginner developer to experience developer then I will leave a link in the description that you can use in order to start learning proess iCal programming and before I end this video there is one very important thing that I want to show you because I don't want to make this video too long because then no one is going to watch it but I also have to show you something very important and that is how to fix bugs because currently unfortunately we have a bug in our program let me show you so I am going to start my application and at the moment we don't have any tasks inside our list box so what is going to happen if I click on my list box let's see okay and as you can see immediately our application crashes and we get this error which says index was out of range blah blah blah very hard to understand for beginners so the reason why we are experiencing this bug is because this method here this task list box click is expecting to remove a task from our list box at a selected index but we don't have any tasks so now what I can do is I can hover over this selected index okay and as you can see it says that selected index is minus one what does that mean well for all those of you who have studied a little bit about data structures you know that the indexation of an array or a list starts with zero that means that the first element has the index of zero the second has the index IND of one and then 2 3 4 5 and so on so what does the index of minus one mean that means nothing no element was selected which means our list is empty we currently don't have any elements so now what we need to do is we need to prevent this code here from executing if we don't have any elements inside our list and there are a few ways to do that so I'm going to to show you two ways the first way is to use the information that we already have here and that is to say if task LBX selected index is minus one then please return from this function and don't execute any of the code so let's use that approach first I'm going to copy this code and before I start writing any new code I will stop my application okay so here I will say if selected index is equal to minus minus one like this what I want to happen is I will simply say return which means hey please stop the execution of this function and return here so don't execute any of this code here so now if I start my application we shouldn't have that bug anymore so if I click on my empty list box nothing is going to happen if I add new task as you can see it was added I can remove it but again if I click on empty list box we don't have that exception anymore so that is one way to fix the bug another way is instead of saying this what you can say is you can say if my tasks which is the list where you keep all of your tasks so if its count is less than or equal to zero then return which means if I don't have any tasks inside this tasks list then there is nothing to remove so please return from this function and this is another way to prevent the exception from happening so again if I start my application and I click on this empty list box we don't have the exception if I add a task let's say task one and I add it I can remove it but if I click on the empty list box we don't have that exception anymore so those are two ways to prevent that bug that we previously had from happening so I believe it is going to be enough for this video I don't want to make it too long because then no one is going to click on it no one is going to click on a video that is two hours long and watch the entire video so I definitely don't want that because I hope that all of the things that I have shared in this video are useful to you that You' learned something new but as I said unfortunately all the things that you have learned in this video are barely scratching the surface because there are a lot more things that you need to know a lot more things that you need to understand in order to be able to build real world applications like the ones that you and me use every day so if you want to learn that if you want to learn practical programming then definitely join my course and there I'm going to teach you step by step from beginner to expert everything in one place all of the things that you need to know in order to start building real practical applications all of the things that you need to know in order to get a job and not just any job but the job that you truly like and enjoy so the course has been launched just a few days ago and we already have a lot of people who have drastically improved their programming skills so if your goal is to finish University this course is definitely going to take you light years ahead of all of your peers if your goal is to get a job then as I said you will be able to get the job that you truly enjoy because you will understand programming in depth and we also have some people who have some great ideas about the applications that they want to build but they lack practical experience and practical knowledge and this course will give them all of the skills and all of the knowledge that they need in order to be able to transform those ideas into reality so in the future I truly believe that some of those people who finish this course will be creators of the applications that you and me are going to use in the future some of the great applications that will come and I am very happy to be part of that journey and I am very happy to be mentor of such great people so if you also want to join us if you want to meet friends and other driving developers then definitely click the link in the description it is also going to be my pleasure to be your Mentor so if you are decided that you want to learn programming and if you want to start today click the link in the description and I will see you in a minute so thank you very much for watching and I will see you in another video bye