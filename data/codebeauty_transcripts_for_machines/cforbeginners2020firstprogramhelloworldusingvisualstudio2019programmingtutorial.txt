hi guys very warm welcome to everyone watching this video and this video is going to be introduction to C++ programming language and the first video of this course I was planning on dividing this video into two separate parts so that in the first part I'm going to explain some basic concepts some general concepts that are related to C++ and that you need to understand in my opinion first before starting to write code and then in the second part we are going to build our first C++ program so I'm going to include in the description of this video time stamp so that you can navigate yourself to the coding part if you want but if you're an absolute beginner I would recommend you to watch the entire video let's explain a couple of concepts before we actually start to write code so that you are familiar with them you may wonder what kind of applications you can build with C++ well C++ is generalpurpose language that means that it can be used to build all types of applications so it is very close to the hardware and that means that it can manipulate resources easily so you can build operating systems if you want with it you can build compilers browsers demanding games so all generalpurpose software can be built with C++ it is not specific for only one domain but it can be used to solve and build different types of applications after that I would like to mention that C++ is compiled language that means that the code that you write first has to be compiled or converted translated into another language that is understandable to your machine to your computer so that phase is called compiling code or building code there are certain errors that can occur in this phase of course and those are compile time errors this type of errors is usually the most common among beginners among people who are just starting to learn C++ and we are going to demonstrate some of those compile time errors when we start coding after that C++ is case sensitive language that means that C++ distinguishes between lower case and upper case letters so if you have for example a variable I quote upper case and then a variable or lower case so the same meaning the same word those who are going to be treated under and understood differently as different variables by C++ so it is case sensitive language why suppose was was created another question because before it there were other programming languages well yes they were and it was created in 1980s and it was created with two programming languages in mind one of those two was Simula and the other one was C so similar at the time was great language for human way of understanding and representing things so it was very understandable and easy to use to humans but at the same time it was very very slow so they decided to combine it with another programming language a fast one and at that time the best choice for that was C programming language so they combined the two and they got C++ C++ is very very understandable language very easy to use by humans so you can build and maintain a huge project with C++ but at the same time because of this C part it is very close to the hardware so demanding tasks can be executed fast and also well since since it was created from C programming language you can say that any valid C program is actually valid C++ program so if you've ever built a C program you have actually built a C++ program already as I have already said the code that you write is not directly understandable to your machine so first it has to be converted into another language that is understandable to a computer but the one the language that is understandable to you is called source code I am going to put here an example of source code and I am also wondering at this moment what do you think that this code does so before we started any programming any coding at all what do you think that result of this program is going to be so just to check how understandable C++ really is even for someone who has not have a lot of experience in coding to write in the comments of the video what do you think that this code is going to do and I'm going to check those so at the same time you're going to be doing something called writing pseudocode which means describing what a program does but just in plain english so no c++ so this is the source code after Det that source code is transferred or translated into another form another language which is understandable to your computer and that is object code that object code is usually in a form of binary numbers so it once and zeros and that is the only language that your computer actually understand and this is an example of your machine the language I'm also not going to ask anyone to describe what this here does because this is highly unreadable and cannot be understood by humans but as I said it is the only language that your machine understands so algorithm what is algorithm algorithm is nothing more than a recipe so steps instructions that you write to your computer list of ingredients and and studies that your computer needs to do in order to perform a certain task that's algorithm now that we have understood these concepts let's switch to more practical part so the tool that we are going to use is called Visual Studio 2019 and there is a lot of tutorials on YouTube on how you can download and install the Visual Studio and you can also use community version for free so when we open visual studio you can see that here in this left part we have our recent project so the project that I have recently created and this may be empty if you haven't used your Visual Studio so on the other side they menu in multiple options you have the option to check out your code from github here you can open an existing project from your computer and continue working on that but the action that we are going to use is called create new project so we are going to click that so this new window now here appears and we are going to define what kind of project we want as beginners we are going to build a very simple app so we are going to build a C++ console application so you can type in C++ and make sure to select C++ console application so not csharp not Visual Basic but C++ then when you clicked it you can now click when you selected it you can now click Next so this new window now we get a new window where we have to define our project name location where our project is going to be saved and our solution name and the default our solution is named the same as our project what solution is is just actually a group of projects so if you had a huge application and you wanted to divide it in smaller parts so that it is easier to maintain you can divide it in multiple projects but all of those projects would be part of the same solution so as we are since we are building a simple app we have only one project and we will name it my first app so I my first app and location for our project we can either enter manually or we can do it by clicking this button here and I want my files to be saved on desktop so I'm going to select desktop and now we are done with with creating our project so with configuring our project so we can click create so the tool that we are going to use Visual Studio is an IDE or integrated development environment that means that it has a lot more options than just those that we as beginners are going to need and use so for now I'm going to explain only the most basic ones the ones that we are going to need as beginners but as we progress along the way I'm going to explain the new features that we'll use so the first thing that you can see here is our solution Explorer so if you cannot see your solution Explorer you can click here to this view and select solution Explorer and that should bring your solution Explorer back to view so as we said our solution Explorer is named my first app and it has one project inside it so this this project is this one here and as you can see when we created our project it was created with some default folders and files for now we are going to use only one file so you can delete these folders header files and resource files if you want just click rightclick and click delete so now this source files folder is where we are going to put our source code files if you remember from before I have said that source code is the code that we write and that is understandable to us so this is our source code file so this with dot CPP extension so when we created our project this file was created by default and if you doubleclick it it opens here so this part here is nothing more than a than a text editor really as any text editor it just has these different colors depending on the purpose or the role of the code so that you can manage the code easier if it were all the same color it would be harder to to read so for example this green part here is a comment comment is just a note for yourself so compiler will not try to translate commented lines so if if you type for example here there's slash slash or that means actually begin comment and then you can explain for example what this proceeding code does so you can write this will output to the console hello world so this Wolper to the console hello world so that when you for example come tomorrow to this code and you have forgotten what this code here does this will remind you this comment here and these are some default comments which I will delete now we are not going to need this so just select everything and click delete as you would in any regular text editor this part here also now let's explain what we got here so this include iostream is actually a header file so it is also called a library and this iostream is input output stream so it allows us to input and output data to and from our program for example thanks to this we can use commands such as this here so see out for console output so without having this we would actually have to program ourselves how we will input and output data in our in our console so we will not delete this line here now check this code here it says main well that means that this is our main function so a main procedure that our program is going to execute so whenever whatever you put actually in the raises here your program will execute and the execution of your program begins here and it ends here so since this here is the the scope of your main function so you can collapse it by clicking here and you see that everything is collapsed now so for now it's enough for you to know that this is our main method on our main procedure and later in this course we are going to learn and understand what methods are used for what is their purpose and we are also going to create a lot of our own methods so now we have this C out or console output which is the command to output to the console and then we have also combined with this STD and these redirection signs so STD is the namespace for this C out so that's how your computer knows what the C out really is I will show you later how you can get rid of this if you really want and we also have this hello world in quotation marks okay let's see what we have learned so far we said that this is our solution inside it has one project and within that project we have this filed with with extension dot CPP which is our source code so if we doubleclick this file it brings us here so to this text editor and this is our program this is the code of our program now how we can run this code well see this green play button here well that's our start button it's really it's really intuitive so if I click it we will get our hello world text here which I have output it to the console and you can also see that we we have besides our hello world we have gotten some junk text here so what I'm going to do is show you how you can get rid of this in a moment so let's close our program for a moment and what you need to do in order to get rid of this junk text is type this command here so system pause greater than 0 in quotation marks and the end of command you notice that at each of at the end of each command you have to put this semicolon and if you didn't it would result in an compiler error and I will demonstrate that let's run our program now and you will see that our junk text has disappeared so as I said after each command you have to put this semi column and if you if you didn't do that it would create a syntactic error and that then your your compiler would not be able to understand and your program would not run actually your program would not start so if I delete this semi column here you see that something has changed in this rule in this window here so you see this R error error error red sign well if I hover over it you see is it here also here it says expected a semi column which is very clearly says that you are missing a semicolon and if you see this red underline here it says also expected a semi column so before this you are missing a semi column here so if I add it here if I added here our error will disappear so if you try to run your program before fixing this error it would prompt you with with a window like this so it says you have one failed project and zero succeeded project so this is the code building that I have mentioned before so this one project was which is actually the only project that we have has failed building so your compiler does not actually understand what you have written says you're missing a semi colon so another thing how you could know that you have syntax error except from this this prompt window that we got is this syntax error so missing semicolon before this close brace and if you click it here it will take you right where you need to go to fix your error so it's very useful and if I press my play button again it now says hello world so I will stop program now you can do it either by clicking this red sign here which says stop debugging or you can click this X on the console window so if some other error has happened to you which didn't happen to me here you can write that in the comments down below and I will gladly help you also someone else can help you from from the other people learning from this video and I would highly encourage that sense in my opinion the best way to learn something is to try to reproduce what you've learned and to explain it to someone else so write in the comments if you got some other error now let's see how we can upgrade our program so let's write something else let's add for example STD to column size console out so under quotation marks I will put something that I want to write out so let's say for example my name is Sal Dina you can put your name of course and at the end of each command you put semicolon and let's add one more so let's say today is Friday and also at end of command here so it should right when we run our program it should write these sentences in this order here so you can run your program and if you can notice it has this new line in the first sentence so this is because of this this backslash n so that puts whatever text is coming after in a new line so you can put that text in a new line by either entering a backslash n or with adding this STD end line so STD and line and I have previously stopped my program if I run it again you see that that we have gotten a new line here you see also that this STD here is becoming a bit tedious to write again and again and I've told you that I'm going to show you how you can get rid of this so what you can do is you can put this STD on a global level so you can say using using namespace STD using namespace STD and what will that do is reference this STD namespace on a global level so you don't have to reference it every time that you are using it and now we can delete all of these so whenever you have written an STD that's going to be referenced here now and you don't need it need to write it separately and if we run our program here we are going to get our result so we have also this new line I added by either /n or this end line here okay so in this video we have learned how we can output data in a console and in the next video we are going to see how we can input data into our console so we can ask user to input data and we are also going to talk about variables and data types another thing that I want to show you before I finish this video is you may be wondering okay do I have to start Visual Studio every time that I want to run my program is there any other way for me to execute my program and the answer is no you don't have to start Visual Studio every time there is another way to start your program for for went from windows so let's save all changes that we have made here so far so you can press ctrl + S or if you have made any changes you see this start here so it is indicating indicating that you have unsaved changes so you can right click on that and click save and you see that that star disappears now so let's find a folder where we have created our project for me that was desktop if you follow this tutorial from the beginning you created it also and if you follow me you created it also on desktop so you can open your folder you can go to debug and inside that you see this file here it says application so this is your program so if you right click on that and you check its properties you will see that it says dot exe that means that it is executable file so that is your program that is your application and if you double click on that well you see that it runs same as in Visual Studio so you can start your program from Windows actually if you want to show it to your friends or someone else you don't have to you don't have to open a visual studio each time that you want to run your program but one more thing to keep in mind is that if I go to visual studio now and I add one more line let's say let's say we write out have a nice day so and if I save it so ctrl s and if I try to open my program from Windows now what you'll see now is that this new line that I have just added is missing but why is that so you know well if you remember when we were talking about building code we said that that's the face of converting source code that you have written into a code that your machine understands and when you start your code from visual studio it does that process automatically for you so it builds your code and then it executes your or your program but when you are starting your program from Windows it is missing that phase of building code so your recent changes your last changes were not translated so your computer has only the only translated version that it has is the previous one so without your recently edit changes what you need to do is you either have to run your code from Visual Studio first or it's enough for you just to build that code inside Visual Studio and what happens when you do that so just click here and you can click build and what happens is your visual studio translates this code that you have written and it saves it here and now when you run it and when your windows runs it has the latest version it has the latest changes so this is the small trick that I wanted to show you so this will be all for this video and if you create came across to some errors that didn't happen here to me or you have any questions you can write those in the comments and I will I will answer those and if you watched so far you can like this video you can subscribe and share it with someone else who would also like to learn programming and I will see you in the next video