hi guys welcome to my channel as I promised in my previous video in this video I'm going to explain the concept of ASCII table and then I'm going to give you an idea an example of a program that is very beginner friendly very simple but also very fun and that you can build only with knowledge from my two previous courses and this one so if you haven't watched those make sure to watch them link is going to be somewhere here and also in description and also make sure to LIKE this video and to subscribe to my channel for more educational content and let's begin now so what is ASCII well ASCII stands for American Standard Code for information interchange and it was first created in order to standardize the way of representing characters in your computer so in ASCII table those characters are represented as numbers numeric codes and what this means is following let me give you an example when I first learned to read and write so when i was a little i decided to together with my friend create our special symbol language where we would exchange each character with a special symbol that only two of us could understand and then we would exchange letters usually using that symbol language and the one else could understand those letters and also guys write in the comments down below if you did that I know you did so don't make me feel like a weird one well that is exactly what your computer does it exchanges each character with a number so that it can understand it and it can communicate with other computers so this means that your computer or ASCII table assigns to each character a unique number and let's prove that now so how we can do that is in my visual studio I'm going to say C out and then in these parentheses I'm going to say int and then these single quotes and I would say letter A now let's add n line so this is one way of doing that and then there is another way of doing just the same thing that is let's say see out and then int and then inside these parentheses we are going to say our single quote and our letter a and also add and ly so this here is called casting operator and it is the operator that forces one data type to convert into another and since we said that each character has its numeric peer inside ASCII table well we can ask our computer to give us that pair so here I am saying please tell me what is my numeric pair of my letter a so what number is my letter a and if I run my program now you see that I got 97 so our lowercase letter a is 97 in ASCII table let's check now a capital letter a so I'm going to say C out and off and let's put our capital letter A and one more in line so if I run my program now you see that I'm going to get a different number so 65 and this is so that your computer can distinguish between lowercase and uppercase letters so ascii uses 7 7 bits to represent each character and that means that it can represent 2 to the power of 7 that's how much characters it can represent so 128 characters and that is enough for all English characters so all English lowercase and uppercase letters and numbers and also some special symbols but there is also a lot more languages and also languages that have a lot more characters so there is a lot more standards for representing those characters inside your computer's so this that we have just mentioned is called ASCII and there is also extended ASCII that is another standard that can represent more characters then there is also utf8 utf16 and a lot more different standards so what we should remember for now that is related to ASCII is that as he represents each character with a number so it holds its numeric match its numeric numeric pair in its table and then that we can also get that get that numeric match using our casting operator so this here is a casting operator so now you may ask if we can get a numeric value of our letter so if we can get our int number of our our letter can we do viceversa so can we get a character from our numeric value and the answer is yes we can convert a number into a letter also and I'm going to demonstrate how we can do that in a moment so you can say C out char now let's say char of 65 and add n line and if I run my program you see that I'm going to get a letter A so capital letter A and know with this when you learn this you can get an idea on how you can build something more useful than just basic hello world application so you can for example build a program that ciphers words and sentences in ascii and then also a program that deciphers those messages back into english readable characters so now we are going together to build a program that ciphers words into ASCII codes and then I'm going to leave to you to build the program that deciphers those words back into English readable characters so let's say that we want to cipher a five letter word so what I'm going to do is what I need to do is to create five char variables so I'm going to create five char variables that I'm going to let my user and put his letters inside those five char variables and then I'm going to write out encoded words so I'm going to convert all of these letters in ascii codes and then i'm going to write that out to my user so i'm going to on a in a certain way cipher he's his word so i'm going to say here char c1 char C 2 and then char C 3 and I want to stop here for a moment I want to explain one thing when we first were talking about creating variables we said that this is the way of creating variables so you say the type of your variable so char in this case and then you say what name you are going to give to your variable so in this case this is our C 1 C 2 C 3 so this way of creating variables here it is correct but it is a bit tedious for this current situation there is another way of creating more than one variable and I'm going to demonstrate that now so what you can see say also what you can do is char C 1 C 2 C 3 C 4 and C 5 and all separated with this comma sign so you can create more than one variable in one line like this but only if all of those variables are of the same type and in this situation they are so all of these variables are of type char so I've now created five variables of type char and another thing that I want to mention is that in upcoming videos we are going to learn how we can let our user decide how many characters how many how many values he wants to enter during the execution of our program so now we have hardcoded these five values but we are going to learn more in following courses and also another thing is that also in C++ there are a lot of solutions that you can use already made so that you can enter whole words or sentences so you don't have to enter your word letter by letter so you don't have to create variable for each letter that you want to enter but what I'm trying to explain here and what we want to understand here is how it really works in the background so how it works inside you have to understand that and I believe that that will give you a great advantage over those programmers that just know how to use something rather than how to make that something by themselves and then use it so I have here created five variable and each one hold a character that we will enter and let's enter them now so what I'm going to say is see out enter five letters and then I'm going to say C in and I'm going to put all my variables here so C 1 C 2 C 3 C 4 and C 5 so if you can see here I have entered all of my five variables in a single line so you can do this you can bind these operators like this like this so that you can enter more than one variable in a single line the same way that you can bind your C out operator so that you can write out more than just one string so now what we are left to do is we have to write out our ASCII message so what I'm going to say is C out ASCII message and then I'm going to put in C 1 let me write that out really quickly so I have written this message here and what I have said is console output ASCII message and then I have combined these C out operators so that I can write more than one variable in a single line so in a single command actually so I have said give me my int code of my C 1 so give me my ASCII code of my C 1 variable and then put a blank space and then give me my ASCII code of my C 2 and also C 3 4 and 5 and I have also used these blank spaces because I don't want to write just a single number in a single line because I want to know where my first character ends and where my second character begins that's why I'm going to separate those codes with a empty space and also there is another thing that I want to mention and it is that when you want to convert your variable so the value that you are holding in you variable and when you use your casting operator on that you don't put your variable in a single quotation mark so you just put the name of your variable like this example here so if I run my program now you see that I get my message so enter five letters and I'm going to enter hello and you see now that I have this output ASCII message is 104 101 so 108 and 108 so that is our letter L you see that it has the same code and now I have gotten this ASCII message which is which is our ciphered word and also there is one thing that you that I want you to keep in mind and that is that this program here will not take into consideration your entry or your space key as a letter so if you if you put your enter or your space key however much times you want it will not treat it as a character there are some other functions that you can use in your C++ if you want to capture enter for example or your space key such as C in cat if you really want you can google that out but at this point we are keeping this very beginner friendly so this will not capture your enter and your space so let's just prove that I'm good I'm running my program once more and I'm going to put interests and spaces and you see nothing is happening and then if I entered hello once more you see that I'm going to get the same numbers so the same message as before so we have built here a program that ciphers our words into ASCII and we have build this program after just studying a little bit of coding so imagine what you can do if you learned more so stay tuned make sure to subscribe to my channel and also like this video if you want to support me and filming these videos and also I'm going to leave to you to write a program that is going to decipher these messages from ASCII back into readable English words so you also can put your suggestions of a code in a comma down below and also what you can do you can upgrade this program here that we have written so that you can put in more words more sentences if you want and then you can put those coded encoded messages in the comments and everyone who wants to read those messages is going to have to build a program that is going to decipher those messages into readable English so subscribe to my channel like this video and I'll see you in the next one