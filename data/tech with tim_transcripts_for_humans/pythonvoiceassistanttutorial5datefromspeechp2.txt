With timestamps:

00:00 - okay so hello everyone and welcome back
00:01 - so I kind of split this at a nice point
00:03 - here because what we're gonna be doing
00:04 - now is after we've looked through that
00:07 - string and figured out you know we're
00:09 - talking about Tuesday September 5th or
00:11 - we're talking about Wednesday or next
00:13 - Wednesday or Friday the fifth whatever
00:16 - it is that we're we're finding we need
00:18 - to determine how we can actually turn
00:20 - that into a date now the thing is we can
00:22 - have so many different combinations of
00:24 - these words in our string and they can
00:25 - all represent a date accurately so for
00:28 - example writing by say you know what do
00:30 - I have on Sunday well I'm probably
00:32 - talking about the Sunday coming up and
00:34 - if that's already past then the next
00:36 - Sunday right so that's enough
00:38 - information to give us a valid date we
00:40 - have to take today's date and figure out
00:41 - where sunday lies past that now if I say
00:44 - what do we have on Friday the third I
00:47 - need to determine you know which which
00:49 - Friday is the third right and then if we
00:52 - just have a month well that's not enough
00:54 - information to give us a date if we have
00:55 - a month and a date then we know what
00:58 - we're finding here right think there's
00:59 - all these different things we have to
01:00 - think about and that's we're gonna do in
01:02 - the rest of his function determine an
01:03 - accurate date now I just want to keep in
01:05 - mind this may be a little bit glitchy
01:06 - but it does work fairly well from the
01:08 - examples that I've tried to use I mean
01:10 - if you find any edge cases where it
01:11 - doesn't work definitely let me know and
01:13 - I'll try to fix them in later videos
01:14 - it's the first thing we're gonna start
01:16 - by doing it's just saying if month is
01:17 - less than today dot month and month does
01:22 - not equal negative one now what this is
01:26 - gonna do is essentially say if we found
01:30 - a month in this string of text and it's
01:32 - less than the current month that we're
01:34 - in today we need to add one to the year
01:36 - so that's like saying you know say the
01:38 - month is September which it is right now
01:40 - when I'm recording this video and we
01:41 - asked about what do I have on January
01:43 - 3rd well I'm probably talking about
01:46 - January in 2020 so what I need to do
01:49 - then is say ok we need to figure out
01:50 - that since that month is less than the
01:52 - current month because obviously it comes
01:53 - before September now let's add one to
01:57 - the year so that we do this accurately
01:58 - so we're gonna say year actually equals
02:00 - year plus one like that and that's how
02:04 - we can determine and get an accurate
02:06 - year based on what month we type in now
02:08 - the next thing we're gonna do is
02:09 - something with the day here so Marissa
02:10 - say if day is less than
02:12 - day dot day and month equals equals
02:18 - negative 1 and day does not equal
02:21 - negative 1 then what we're gonna do is
02:23 - add 1 to the month so in this case once
02:25 - a month equals month plus 1 now what
02:28 - this means is you know let's say today
02:30 - is the 6th which it is and I say what do
02:34 - I have on the first look that's all I
02:36 - say what do I have on the 1st well then
02:38 - what I'm probably referring to is the
02:40 - next month on the first since we're
02:42 - checking here so as long as we haven't
02:44 - defined a month and we have defined a
02:47 - day and the current day is less than or
02:49 - I guess the day we've defined is less
02:51 - than the current day we're probably
02:53 - talking about next month so let's add
02:54 - one to the month for that date that's
02:56 - what that's doing ok the next thing we
02:58 - have to do is a little bit more
02:59 - complicated but that's fine we're gonna
03:01 - say if month equals equals negative 1
03:03 - and day equals equals negative 1 and we
03:08 - just check something here that's one
03:10 - more thing and day underscore of
03:13 - underscore week does not equal negative
03:17 - 1 if this is the case what this
03:20 - essentially means is we've only defined
03:22 - like Tuesday like we've said what do I
03:24 - have on Tuesday we haven't defined like
03:26 - January 1st orbs February 3rd we just
03:29 - picked a day of the week in this
03:31 - instance we need to figure out what day
03:33 - that is now this is somewhat complicated
03:36 - because we don't have any number
03:38 - information so we need to figure out
03:39 - what the current month is what the
03:41 - current day is what the current year is
03:42 - and then determine what the date is
03:44 - gonna be based on that so what we're
03:46 - gonna do to start is we're gonna say the
03:47 - current underscore day of the week is
03:50 - gonna be equal to today dots weekday now
03:55 - what this does is actually tell us which
03:57 - day of the week it is
03:59 - now these range from the index 0 to 6
04:02 - where 0 represents Monday and 6
04:05 - represents Sunday so let's say you know
04:06 - we get today though we did we get 0 that
04:08 - means today is on Monday that's gonna be
04:10 - important in a second you guys will see
04:11 - why
04:11 - now the next I'm gonna say is difference
04:13 - equals day underscore of underscore a
04:16 - week which is remember the one that we
04:18 - found so whatever index we found for the
04:20 - current day the weeks or whatever one
04:22 - they typed in or whatever they say
04:23 - - the assistant - the current day of the
04:27 - week now this is gonna do is tell us the
04:29 - difference between these two dates so
04:32 - let me bring up this calendar here you
04:34 - can see I'm on stackoverflow figuring
04:35 - out how to use the time date module but
04:38 - I just want to give an example here so
04:40 - let's say that today is Tuesday so
04:41 - Tuesday the first we'll just go in
04:42 - January for this example and we say
04:44 - Friday well we need to figure out how
04:46 - many days come in between Tuesday and
04:48 - Friday now in this case we know it's
04:49 - 3:00 because well we have Friday -
04:52 - Tuesday and that gives us a difference
04:54 - of three days so what we can do now is
04:56 - just add three days to our current date
04:58 - to determine that the current date that
05:01 - we're the date that we're talking about
05:02 - is actually the fourth of January that's
05:04 - what I'm trying to do here now it
05:06 - becomes problematic when we say
05:08 - something like what do I have on Monday
05:09 - because if you look at it Monday is
05:12 - actually one day behind Tuesday so if we
05:14 - use the same formula of just finding the
05:16 - difference then what we end up getting
05:17 - is like the day before that which I
05:20 - guess would be December 31st when in
05:22 - reality we actually want to go forward
05:24 - so we need to apply another check here
05:26 - now to say if the day that we are
05:28 - referencing is less than the current day
05:30 - move to the next week and look for that
05:33 - date so that's what we're gonna do here
05:35 - so we're gonna say if difference is less
05:38 - than zero which essentially means we
05:40 - have a negative difference so we've
05:41 - going backwards we're gonna say
05:43 - difference plus equals seven now what
05:45 - we're also gonna do in here is we're
05:47 - gonna check if we've said the word next
05:49 - in our string of text so if I say
05:51 - something like what do I have next
05:52 - Saturday well I don't not talking about
05:55 - the Saturday coming up I'm talking about
05:56 - the one after that so I need to add now
05:58 - another seven days so I'm talking about
06:01 - from two weeks from now so this is
06:03 - pretty easy to do but I'm just gonna say
06:04 - if yes it is it word no it shouldn't be
06:07 - word what I need to do if texts don't
06:11 - count like this and we say next is
06:16 - greater than or equal to one then we're
06:19 - going to do is say difference plus
06:20 - equals seven like that okay so that is
06:25 - pretty straightforward for this function
06:27 - and now what we need to do is actually
06:28 - return the date and the time now just
06:31 - would be some adding seven here is
06:32 - because that essentially means like go
06:33 - up to the next week and the way that
06:35 - this works
06:36 - the difference is if you look here if we
06:38 - have a negative one difference if we add
06:40 - 7 to it then what we actually end up
06:42 - getting is Monday because that's six
06:44 - days from Tuesday and that's how this
06:46 - works correctly so any what we're gonna
06:48 - do here is actually just return today
06:50 - which is the current date plus in this
06:53 - case we're a new date time dot I want to
06:57 - say it's like time Delta yes I believe
06:59 - that's what it is and then here we're
07:00 - gonna put difference which essentially
07:02 - means whatever this difference number is
07:04 - we're gonna add that to the current date
07:06 - and then that will automatically figure
07:07 - out you know if we need to go the next
07:08 - month to the next year and return that
07:10 - as a date object where we will print it
07:12 - out after now otherwise what I'm gonna
07:14 - do down here is return date time dot
07:19 - date time our nights daytime date and I
07:24 - believe in here I put month equals month
07:30 - day equals day and year equals a year
07:35 - and what that's gonna do is just return
07:37 - to us a date object with this
07:39 - information and we've figured out what
07:40 - the day month and I guess yeah day month
07:44 - and year is up here so that's it for
07:47 - actually this function here and now we
07:49 - just have to figure out how to call it
07:50 - and actually use it and test it out
07:51 - which we'll do in just a second all
07:54 - right so now that we've created this
07:55 - function that's gonna figure out what
07:57 - the current date is for us or the date
07:59 - is from some string how are we actually
08:01 - going to call it so I'm just gonna start
08:02 - by deleting this here and what I'm gonna
08:04 - do is show you guys how we can call this
08:06 - function actually use it properly and
08:08 - print things out so what I'm gonna do is
08:10 - actually say text equals in this case
08:12 - get
08:13 - underscore audio dot lower like that and
08:16 - then what I'm gonna say here is actually
08:20 - we'll just test it out to start and I'll
08:21 - add something else I'm gonna print get
08:24 - underscore date from the text okay so
08:29 - let's do that and let's run this so what
08:32 - I'm gonna do is speak into the
08:33 - microphone here and pretty much just say
08:36 - like like do I have plans on September
08:39 - 3rd and then see if you can give us what
08:40 - that date is relative to today so let's
08:43 - speak into here
08:46 - Oh what's my air here function does not
08:50 - have an ad shoot what am I saying text
08:51 - equals get I need to put these brackets
08:54 - like that so Tex equals get audio dot
08:56 - lower and then we'll pass that in so
08:58 - let's call this now do I have plans on
09:01 - September 4th hmm I'm getting error here
09:07 - value negative 1 is not unless so give
09:10 - me a second I'm going to try to find
09:11 - what this issue is ah so this is a silly
09:16 - error here but I seem to remove where
09:18 - this says month here and actually put
09:20 - word because we're actually checking the
09:22 - word not the month so that's my mistake
09:23 - if we run this now we should hopefully
09:25 - get this fixed do I have plans on
09:28 - September 9 and what we can see here is
09:34 - we actually get this date here that
09:35 - comes up which is 2019 September 9 we
09:38 - knew a few more tests to make sure this
09:39 - working fine do I have anything on
09:42 - January 25th give it a second here to
09:50 - register and we can see that we get the
09:51 - date January 25th so this is indeed
09:53 - working we're gonna be using this
09:55 - function later and kind of tweaking and
09:57 - messing with it to actually get what
09:59 - activities we have on that date from our
10:01 - Google Calendar so no means that is kind
10:03 - of it we're using this function now I
10:06 - know some of you might say well what
10:07 - happens if we don't give any date and we
10:09 - passing this in well I'm gonna fix that
10:11 - in the next video when we talk about
10:12 - some more specifics here but with that
10:14 - being said I hope you guys enjoyed make
10:15 - sure to test out this function to see if
10:17 - everything's working properly and keep
10:18 - in mind if you don't give like an
10:20 - accurate date when you call this you're
10:22 - probably not gonna get something that's
10:24 - correct because you'll get something
10:25 - like negative one negative one negative
10:26 - one here which will cause you to run
10:28 - into an error so anyways that being said
10:30 - I hope you guys enjoyed make sure you
10:31 - leave a like and subscribe and I'll see
10:33 - you in the next video

Cleaned transcript:

okay so hello everyone and welcome back so I kind of split this at a nice point here because what we're gonna be doing now is after we've looked through that string and figured out you know we're talking about Tuesday September 5th or we're talking about Wednesday or next Wednesday or Friday the fifth whatever it is that we're we're finding we need to determine how we can actually turn that into a date now the thing is we can have so many different combinations of these words in our string and they can all represent a date accurately so for example writing by say you know what do I have on Sunday well I'm probably talking about the Sunday coming up and if that's already past then the next Sunday right so that's enough information to give us a valid date we have to take today's date and figure out where sunday lies past that now if I say what do we have on Friday the third I need to determine you know which which Friday is the third right and then if we just have a month well that's not enough information to give us a date if we have a month and a date then we know what we're finding here right think there's all these different things we have to think about and that's we're gonna do in the rest of his function determine an accurate date now I just want to keep in mind this may be a little bit glitchy but it does work fairly well from the examples that I've tried to use I mean if you find any edge cases where it doesn't work definitely let me know and I'll try to fix them in later videos it's the first thing we're gonna start by doing it's just saying if month is less than today dot month and month does not equal negative one now what this is gonna do is essentially say if we found a month in this string of text and it's less than the current month that we're in today we need to add one to the year so that's like saying you know say the month is September which it is right now when I'm recording this video and we asked about what do I have on January 3rd well I'm probably talking about January in 2020 so what I need to do then is say ok we need to figure out that since that month is less than the current month because obviously it comes before September now let's add one to the year so that we do this accurately so we're gonna say year actually equals year plus one like that and that's how we can determine and get an accurate year based on what month we type in now the next thing we're gonna do is something with the day here so Marissa say if day is less than day dot day and month equals equals negative 1 and day does not equal negative 1 then what we're gonna do is add 1 to the month so in this case once a month equals month plus 1 now what this means is you know let's say today is the 6th which it is and I say what do I have on the first look that's all I say what do I have on the 1st well then what I'm probably referring to is the next month on the first since we're checking here so as long as we haven't defined a month and we have defined a day and the current day is less than or I guess the day we've defined is less than the current day we're probably talking about next month so let's add one to the month for that date that's what that's doing ok the next thing we have to do is a little bit more complicated but that's fine we're gonna say if month equals equals negative 1 and day equals equals negative 1 and we just check something here that's one more thing and day underscore of underscore week does not equal negative 1 if this is the case what this essentially means is we've only defined like Tuesday like we've said what do I have on Tuesday we haven't defined like January 1st orbs February 3rd we just picked a day of the week in this instance we need to figure out what day that is now this is somewhat complicated because we don't have any number information so we need to figure out what the current month is what the current day is what the current year is and then determine what the date is gonna be based on that so what we're gonna do to start is we're gonna say the current underscore day of the week is gonna be equal to today dots weekday now what this does is actually tell us which day of the week it is now these range from the index 0 to 6 where 0 represents Monday and 6 represents Sunday so let's say you know we get today though we did we get 0 that means today is on Monday that's gonna be important in a second you guys will see why now the next I'm gonna say is difference equals day underscore of underscore a week which is remember the one that we found so whatever index we found for the current day the weeks or whatever one they typed in or whatever they say the assistant the current day of the week now this is gonna do is tell us the difference between these two dates so let me bring up this calendar here you can see I'm on stackoverflow figuring out how to use the time date module but I just want to give an example here so let's say that today is Tuesday so Tuesday the first we'll just go in January for this example and we say Friday well we need to figure out how many days come in between Tuesday and Friday now in this case we know it's 300 because well we have Friday Tuesday and that gives us a difference of three days so what we can do now is just add three days to our current date to determine that the current date that we're the date that we're talking about is actually the fourth of January that's what I'm trying to do here now it becomes problematic when we say something like what do I have on Monday because if you look at it Monday is actually one day behind Tuesday so if we use the same formula of just finding the difference then what we end up getting is like the day before that which I guess would be December 31st when in reality we actually want to go forward so we need to apply another check here now to say if the day that we are referencing is less than the current day move to the next week and look for that date so that's what we're gonna do here so we're gonna say if difference is less than zero which essentially means we have a negative difference so we've going backwards we're gonna say difference plus equals seven now what we're also gonna do in here is we're gonna check if we've said the word next in our string of text so if I say something like what do I have next Saturday well I don't not talking about the Saturday coming up I'm talking about the one after that so I need to add now another seven days so I'm talking about from two weeks from now so this is pretty easy to do but I'm just gonna say if yes it is it word no it shouldn't be word what I need to do if texts don't count like this and we say next is greater than or equal to one then we're going to do is say difference plus equals seven like that okay so that is pretty straightforward for this function and now what we need to do is actually return the date and the time now just would be some adding seven here is because that essentially means like go up to the next week and the way that this works the difference is if you look here if we have a negative one difference if we add 7 to it then what we actually end up getting is Monday because that's six days from Tuesday and that's how this works correctly so any what we're gonna do here is actually just return today which is the current date plus in this case we're a new date time dot I want to say it's like time Delta yes I believe that's what it is and then here we're gonna put difference which essentially means whatever this difference number is we're gonna add that to the current date and then that will automatically figure out you know if we need to go the next month to the next year and return that as a date object where we will print it out after now otherwise what I'm gonna do down here is return date time dot date time our nights daytime date and I believe in here I put month equals month day equals day and year equals a year and what that's gonna do is just return to us a date object with this information and we've figured out what the day month and I guess yeah day month and year is up here so that's it for actually this function here and now we just have to figure out how to call it and actually use it and test it out which we'll do in just a second all right so now that we've created this function that's gonna figure out what the current date is for us or the date is from some string how are we actually going to call it so I'm just gonna start by deleting this here and what I'm gonna do is show you guys how we can call this function actually use it properly and print things out so what I'm gonna do is actually say text equals in this case get underscore audio dot lower like that and then what I'm gonna say here is actually we'll just test it out to start and I'll add something else I'm gonna print get underscore date from the text okay so let's do that and let's run this so what I'm gonna do is speak into the microphone here and pretty much just say like like do I have plans on September 3rd and then see if you can give us what that date is relative to today so let's speak into here Oh what's my air here function does not have an ad shoot what am I saying text equals get I need to put these brackets like that so Tex equals get audio dot lower and then we'll pass that in so let's call this now do I have plans on September 4th hmm I'm getting error here value negative 1 is not unless so give me a second I'm going to try to find what this issue is ah so this is a silly error here but I seem to remove where this says month here and actually put word because we're actually checking the word not the month so that's my mistake if we run this now we should hopefully get this fixed do I have plans on September 9 and what we can see here is we actually get this date here that comes up which is 2019 September 9 we knew a few more tests to make sure this working fine do I have anything on January 25th give it a second here to register and we can see that we get the date January 25th so this is indeed working we're gonna be using this function later and kind of tweaking and messing with it to actually get what activities we have on that date from our Google Calendar so no means that is kind of it we're using this function now I know some of you might say well what happens if we don't give any date and we passing this in well I'm gonna fix that in the next video when we talk about some more specifics here but with that being said I hope you guys enjoyed make sure to test out this function to see if everything's working properly and keep in mind if you don't give like an accurate date when you call this you're probably not gonna get something that's correct because you'll get something like negative one negative one negative one here which will cause you to run into an error so anyways that being said I hope you guys enjoyed make sure you leave a like and subscribe and I'll see you in the next video
