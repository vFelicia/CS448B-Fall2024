With timestamps:

00:00 - hey guys and welcome back to another
00:01 - Java programming tutorial so in today's
00:03 - video we are gonna be going over in our
00:05 - classes
00:06 - now inner classes are pretty pretty easy
00:08 - actually all they are is really just a
00:10 - class inside of another class or inside
00:12 - of a method and I'll show you some
00:14 - examples as we go along but since we
00:16 - already know all about classes and
00:17 - methods and static and whatnot I'm not
00:20 - gonna explain too much of it I'm just
00:21 - gonna kind of show you how we can create
00:24 - instances of inner classes in different
00:26 - ways so I'm gonna start by doing this
00:29 - inside an outer class here that I've
00:30 - already created you can see on the side
00:32 - here I'm just gonna create another class
00:34 - called interpose right now inner class
00:39 - is just gonna simply have one method in
00:40 - it and I'm sure you make this a public
00:43 - void display and in here all I'm going
00:47 - to do is simply just display similar to
00:49 - the screen so we know that we're
00:50 - actually in the right class here okay
00:54 - now let's say this is an inner class
00:58 - okay and what's our error here class at
01:02 - token hmm interesting
01:05 - must have made a mistake somewhere here
01:07 - one second guys oh sorry I put these two
01:14 - brackets here hmm don't know why out of
01:16 - those anyways okay so this is an inner
01:19 - class now outside of this class I'm
01:22 - gonna create another method that's gonna
01:24 - be a part of the outer class okay so
01:26 - this class is actually contained within
01:27 - the outer class meaning that currently
01:30 - since it's private we can only actually
01:32 - access it from within our class so if we
01:35 - want create an instance of this that
01:36 - means we must need a method in our class
01:38 - to do that so in this case I'm gonna say
01:40 - public void inner and in here we're
01:43 - going to take nothing and all we're
01:44 - gonna do is we're gonna create an
01:45 - instance of our inner class and just
01:47 - display okay so we're just gonna say
01:49 - inner class I n equals new in your class
01:54 - like that okay and then all we're gonna
01:57 - do is just call I end display and make
02:00 - sure that this is working okay so now
02:03 - our class is finished we have an inner
02:05 - class and we have this void inner and
02:07 - all that does is create an instance of
02:09 - our inner class and print it to the
02:11 - screen
02:11 - again note that this is private meaning
02:13 - we
02:13 - we access it from within our our class
02:16 - okay so now if I go to my main Java I
02:19 - can run a command so or whatever
02:22 - creating objects that we can see this so
02:24 - first of all what I have to do is create
02:25 - an outer class object so that we can
02:28 - call that inner class so outer class out
02:31 - equals you and an outer class now it is
02:36 - worth noting that I don't have any
02:38 - constructors here meaning that I don't
02:41 - need to give any information to my outer
02:43 - class from my inner class when I first
02:45 - call it and that's why I can just leave
02:46 - these blank brackets okay so now if I
02:49 - want to see my inner class what I have
02:50 - to do is I have to do out dot inner okay
02:53 - so we'll call that method to create the
02:55 - inner class and then run that so let's
02:58 - run quickly here and we can see we get
03:00 - this is an inner class awesome so that's
03:03 - working fine now I'm just gonna make
03:05 - this public now let me show you how we
03:07 - can do this from outside of the class so
03:10 - really now what we need to do is we need
03:11 - to create an instance of outer class and
03:13 - then we need to call the method inner to
03:15 - be able to create the inner class and
03:16 - that's because this was private but now
03:18 - that it's public we should be able to
03:20 - create an instance of it outside of the
03:22 - class so the way that we do that is we
03:24 - still need an instance of outer class
03:26 - because this class is defined with an
03:30 - outer class so we need to first create
03:32 - this so that this is kind of created
03:34 - right so we did that and we have outer
03:36 - class now what I can do is I can say our
03:38 - class dot inner class okay and we just
03:42 - call this one I add equals lower case
03:45 - equal is out which is going to be our
03:48 - instance of outer class dot and then in
03:51 - this case we're gonna strike inner class
03:55 - believe this is correct but I guess
03:58 - we'll see oh I probably need an equal
04:00 - sign and we'll type new new out inner
04:03 - class and let's see what our little red
04:05 - line is create class inner class in
04:07 - package out interesting one second guys
04:27 - okay so that's for the issue I knew it
04:29 - was something like this what we need to
04:30 - do is we need to do a new and then inter
04:33 - class because we're creating a new
04:34 - instance inside of this right of outer
04:37 - class of inner class okay so now what
04:39 - we've done is we've created this i n
04:42 - which is an object which is a new inner
04:43 - class so now we can simply use I n which
04:47 - is an instance of inner class right to
04:49 - display so now we can do a and display
04:53 - okay so if we run this see this is an
04:56 - inner class and that is working fine so
04:58 - those are two ways you can go to access
04:59 - the inner class now right now you might
05:01 - be like kay well why the heck would I do
05:02 - this because now it's just like a ton
05:04 - more lines well there's many times where
05:06 - you don't really care about like this
05:08 - instance and you just want an instance
05:10 - of the object inside of it so in that
05:12 - case this would make more sense to do
05:14 - and obviously you would most likely have
05:16 - more methods than just one that you're
05:17 - gonna be using okay all right so now
05:19 - that we have that I guess let's show
05:22 - creating this kind of inner class stuff
05:24 - so I'm going to delete this inside of a
05:26 - method so we can actually create these
05:29 - inside of methods which are really
05:30 - useful because sometimes within the
05:31 - method we want to use a class and we
05:33 - don't want to have to define like a new
05:35 - file for another class okay so we have
05:38 - this public void inner so I guess let's
05:40 - just work with this right now you know
05:42 - even leave in a class right now I'm
05:44 - gonna show you how this works so all I
05:46 - can do in here anything and say I want
05:48 - you do public you private in this case
05:50 - I'm just gonna say I'm gonna just say
05:51 - class let's see in class in a class and
05:55 - then here yes that works fine we're just
05:58 - gonna redefine display so just say
06:01 - public void display and now that I think
06:05 - of it I probably could have just copied
06:06 - out my other code but whatever get some
06:09 - practice typing println and then in here
06:12 - again well this should probably be a t
06:16 - we will just type inner class okay so
06:22 - this is going to work perfectly fine
06:23 - whenever we call this void inner then we
06:25 - have this class inner class
06:27 - we're gonna create an instance of it and
06:28 - we're going to display it so if I run
06:31 - this I guess wow I really should just
06:33 - kept all that code that's fine
06:36 - why is this not giving you the autocrat
06:39 - outer class out because new and out of
06:45 - class and brackets and then in this case
06:49 - we'll simply just call out dot inner ok
06:53 - so now we can see what should happen is
06:55 - again we should print inner class so
06:58 - there we go and we get inner class now
07:02 - pretty much you can do this like
07:03 - wherever you want the reason I'm not
07:04 - saying this is public or private is just
07:06 - because like it's already within this
07:07 - void so to use it we're gonna have to
07:10 - call this void so there's no really
07:11 - there's not really a point in putting
07:12 - like private or public but again like if
07:16 - you wanted to type public class inner
07:18 - class or oh actually saying you can't do
07:20 - that so I guess I was right the first
07:22 - time so since it's inside of this void
07:23 - you're only gonna be able to use when we
07:25 - call this so there's no route point and
07:27 - really giving it like a public or
07:28 - private method or class name sorry
07:31 - because in here we can still do public
07:33 - and private methods because we'll
07:34 - outside of the class we might be using
07:36 - those methods right so you can see
07:37 - obviously since I'm creating this
07:39 - instance inside of the the void so
07:41 - inside of you know and if I tried to do
07:43 - that outside of it it wouldn't work
07:45 - because this class is only defined when
07:47 - we call the inner method okay so I think
07:51 - that's kind of been it for inner methods
07:53 - there are like anonymous inner methods
07:56 - and some few a few like other cool
07:58 - things you can do with it but I don't
07:59 - find them particularly useful so I'm not
08:01 - going to teach them here especially in
08:02 - like a beginners tutorial but if you
08:04 - guys are interested in learning about
08:05 - them I will leave a link in the
08:07 - description just for any of you guys
08:08 - that are curious and as always if you
08:10 - enjoyed the video please make sure you
08:11 - leave a like and subscribe and I will
08:13 - see you again in another one
08:14 - [Music]

Cleaned transcript:

hey guys and welcome back to another Java programming tutorial so in today's video we are gonna be going over in our classes now inner classes are pretty pretty easy actually all they are is really just a class inside of another class or inside of a method and I'll show you some examples as we go along but since we already know all about classes and methods and static and whatnot I'm not gonna explain too much of it I'm just gonna kind of show you how we can create instances of inner classes in different ways so I'm gonna start by doing this inside an outer class here that I've already created you can see on the side here I'm just gonna create another class called interpose right now inner class is just gonna simply have one method in it and I'm sure you make this a public void display and in here all I'm going to do is simply just display similar to the screen so we know that we're actually in the right class here okay now let's say this is an inner class okay and what's our error here class at token hmm interesting must have made a mistake somewhere here one second guys oh sorry I put these two brackets here hmm don't know why out of those anyways okay so this is an inner class now outside of this class I'm gonna create another method that's gonna be a part of the outer class okay so this class is actually contained within the outer class meaning that currently since it's private we can only actually access it from within our class so if we want create an instance of this that means we must need a method in our class to do that so in this case I'm gonna say public void inner and in here we're going to take nothing and all we're gonna do is we're gonna create an instance of our inner class and just display okay so we're just gonna say inner class I n equals new in your class like that okay and then all we're gonna do is just call I end display and make sure that this is working okay so now our class is finished we have an inner class and we have this void inner and all that does is create an instance of our inner class and print it to the screen again note that this is private meaning we we access it from within our our class okay so now if I go to my main Java I can run a command so or whatever creating objects that we can see this so first of all what I have to do is create an outer class object so that we can call that inner class so outer class out equals you and an outer class now it is worth noting that I don't have any constructors here meaning that I don't need to give any information to my outer class from my inner class when I first call it and that's why I can just leave these blank brackets okay so now if I want to see my inner class what I have to do is I have to do out dot inner okay so we'll call that method to create the inner class and then run that so let's run quickly here and we can see we get this is an inner class awesome so that's working fine now I'm just gonna make this public now let me show you how we can do this from outside of the class so really now what we need to do is we need to create an instance of outer class and then we need to call the method inner to be able to create the inner class and that's because this was private but now that it's public we should be able to create an instance of it outside of the class so the way that we do that is we still need an instance of outer class because this class is defined with an outer class so we need to first create this so that this is kind of created right so we did that and we have outer class now what I can do is I can say our class dot inner class okay and we just call this one I add equals lower case equal is out which is going to be our instance of outer class dot and then in this case we're gonna strike inner class believe this is correct but I guess we'll see oh I probably need an equal sign and we'll type new new out inner class and let's see what our little red line is create class inner class in package out interesting one second guys okay so that's for the issue I knew it was something like this what we need to do is we need to do a new and then inter class because we're creating a new instance inside of this right of outer class of inner class okay so now what we've done is we've created this i n which is an object which is a new inner class so now we can simply use I n which is an instance of inner class right to display so now we can do a and display okay so if we run this see this is an inner class and that is working fine so those are two ways you can go to access the inner class now right now you might be like kay well why the heck would I do this because now it's just like a ton more lines well there's many times where you don't really care about like this instance and you just want an instance of the object inside of it so in that case this would make more sense to do and obviously you would most likely have more methods than just one that you're gonna be using okay all right so now that we have that I guess let's show creating this kind of inner class stuff so I'm going to delete this inside of a method so we can actually create these inside of methods which are really useful because sometimes within the method we want to use a class and we don't want to have to define like a new file for another class okay so we have this public void inner so I guess let's just work with this right now you know even leave in a class right now I'm gonna show you how this works so all I can do in here anything and say I want you do public you private in this case I'm just gonna say I'm gonna just say class let's see in class in a class and then here yes that works fine we're just gonna redefine display so just say public void display and now that I think of it I probably could have just copied out my other code but whatever get some practice typing println and then in here again well this should probably be a t we will just type inner class okay so this is going to work perfectly fine whenever we call this void inner then we have this class inner class we're gonna create an instance of it and we're going to display it so if I run this I guess wow I really should just kept all that code that's fine why is this not giving you the autocrat outer class out because new and out of class and brackets and then in this case we'll simply just call out dot inner ok so now we can see what should happen is again we should print inner class so there we go and we get inner class now pretty much you can do this like wherever you want the reason I'm not saying this is public or private is just because like it's already within this void so to use it we're gonna have to call this void so there's no really there's not really a point in putting like private or public but again like if you wanted to type public class inner class or oh actually saying you can't do that so I guess I was right the first time so since it's inside of this void you're only gonna be able to use when we call this so there's no route point and really giving it like a public or private method or class name sorry because in here we can still do public and private methods because we'll outside of the class we might be using those methods right so you can see obviously since I'm creating this instance inside of the the void so inside of you know and if I tried to do that outside of it it wouldn't work because this class is only defined when we call the inner method okay so I think that's kind of been it for inner methods there are like anonymous inner methods and some few a few like other cool things you can do with it but I don't find them particularly useful so I'm not going to teach them here especially in like a beginners tutorial but if you guys are interested in learning about them I will leave a link in the description just for any of you guys that are curious and as always if you enjoyed the video please make sure you leave a like and subscribe and I will see you again in another one
