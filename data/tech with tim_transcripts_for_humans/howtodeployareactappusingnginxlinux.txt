With timestamps:

00:02 - [Music]
00:08 - in this video i'll be showing you how to
00:10 - deploy a react application to a remote
00:12 - linux server on the linux server we're
00:15 - going to use a piece of software called
00:16 - nginx this is going to act as our web
00:18 - server then from our local computer
00:20 - we're going to create the react
00:22 - application and i'm going to show you
00:23 - how we write a very simple deployment
00:25 - script that will automatically push all
00:27 - of this code to the remote server and
00:29 - that way we don't have to do any manual
00:31 - changes on there we can simply work on
00:33 - the project from our local computer run
00:35 - one script and then that will
00:37 - automatically be updated and our
00:38 - application will be deployed now this
00:41 - application will be viewable from
00:42 - anywhere we're going to use the ip
00:44 - address of the machine to view it
00:46 - however if you want to add a domain to
00:48 - this you can do that you just have to
00:49 - tweak a few things after going through
00:51 - this tutorial so with that said let's go
00:53 - ahead and get started so the first thing
00:55 - we need to deploy react application is
00:57 - somewhere to deploy too so we need a
00:59 - linux server for this video i'm going to
01:01 - get one from lenode now lenode is the
01:04 - sponsor of this video and that is why if
01:05 - you click the link in the description or
01:07 - go to lenode.com tech with tim you can
01:10 - get a hundred dollars in free credit for
01:12 - 60 days when you sign up for a new
01:14 - account now that's going to allow you to
01:16 - get a free server here for this tutorial
01:18 - so you can use lenod if you'd like to
01:20 - again you can go to the link in the
01:21 - description get a hundred dollars in
01:22 - free credit or use any linux server that
01:24 - you have access to now i do want to
01:26 - mention here that i'm going to be
01:27 - working with lenod for another series
01:29 - very shortly and in that series we're
01:31 - going to work on a much more advanced
01:33 - portfolio website that's going to act as
01:35 - a really good resume project now i'm
01:37 - going to show you how we build out the
01:39 - website how we deploy the website
01:41 - connect it to a domain and then how we
01:43 - use something called git lab to actually
01:45 - do automatic deployment of code now this
01:48 - is going to look really great on a
01:49 - resume because it shows you know how to
01:51 - build a website you know how to deploy
01:53 - it and you know all of the things about
01:54 - hosting and being kind of a system admin
01:57 - and all of those types of skills so
01:58 - anyway stay tuned for that if you guys
02:00 - are excited and make sure to check out
02:02 - the lenod youtube channel that has a
02:03 - bunch of projects similar to that i'll
02:05 - leave that in the description for now
02:07 - though i'm going to sign into my lenode
02:08 - account because i already have one once
02:10 - i'm there i'm going to walk you through
02:11 - setting up our lenode and then we will
02:14 - actually ssh into it and start doing all
02:16 - of the setup for our react application
02:18 - deployment all right so i'm on the leno
02:20 - dashboard here i've just signed into my
02:22 - test account where i don't actually host
02:24 - any of my real projects but i do want to
02:26 - mention that i've been using lenod for
02:28 - well over two years now i have a few
02:30 - websites hosted with them some databases
02:32 - a kubernetes cluster and they've been
02:34 - nothing but great great service great
02:36 - uptime and it's actually quite nice
02:38 - whenever i've had a problem i've just
02:39 - picked up the phone and called them and
02:41 - i've actually had a human respond to me
02:43 - which is uh quite nice in 2022
02:45 - considering it's actually quite a
02:46 - challenge to get to a real human on a
02:48 - lot of support lines so if you guys are
02:50 - considering a place to host your website
02:52 - or project i would definitely recommend
02:53 - lenode and well that is why i've been
02:55 - working with them for so long on this
02:57 - channel and why they are sponsoring this
02:59 - video anyways we're going to click on
03:00 - create lenode here you can also do that
03:02 - from the top click create lenode and i
03:05 - will mention that they do have some
03:06 - one-click installs here from the
03:08 - marketplace so we don't have to run
03:10 - through all of these setup steps but i
03:11 - just want to do it from scratch in case
03:13 - any of you guys aren't using lenode so
03:14 - they have like django flask git lab me
03:18 - and mongodb etc so you can probably find
03:21 - one in here for your project that you're
03:22 - hosting but i'm going to do it from
03:24 - scratch again because i'm not sure if
03:25 - you guys are going to be using lenode or
03:27 - not so i'm going to choose my
03:28 - distribution as debian 11. debian 10
03:31 - would work as well i'm going to go
03:33 - region for now i'm going to go toronto
03:35 - and then we have to choose our lenode
03:37 - plan now the cheapest plan they have is
03:38 - the nanoed one gigabyte which is just a
03:40 - shared cpu it's five bucks a month
03:43 - however for a react application it's
03:45 - probably best to go with something a
03:46 - little bit stronger so i'm going to go
03:48 - with the dedicated server here with
03:50 - eight gigabytes of ram you could
03:51 - probably do four as well again this is
03:53 - just for testing so it doesn't really
03:54 - matter too much
03:56 - for now though uh for the node label
03:58 - i'll just call this my react app and
04:00 - then i need to put in my root password
04:02 - make sure you do not forget this
04:04 - password alright so now we can just go
04:06 - down here and click on create lenode
04:09 - this is going to take a few minutes to
04:11 - be created and once that is done i will
04:14 - be right back all right so my node is
04:16 - now running and what i want to look for
04:18 - is the ip address now i can find that by
04:20 - looking for the ip address right here
04:21 - the ipv4 or just copying this ssh access
04:25 - which is what i'm going to do so i'm
04:26 - going to copy this right here and this
04:28 - is what we're going to use to well
04:30 - access the note
04:31 - so open up a command prompt or some type
04:34 - of terminal depending on the operating
04:35 - system that you're on
04:37 - and then simply paste in that command
04:39 - looks like i didn't actually copy it
04:41 - though so let's hit that button one more
04:43 - time so paste that in ssh and then root
04:45 - at whatever the ip address of your
04:47 - server is and hit enter you're gonna
04:49 - have to type in yes here and then enter
04:52 - the password so let me enter that right
04:54 - now
04:56 - you won't see anything when you're when
04:57 - you're entering the password keep that
04:58 - in mind you still just need to type it
05:00 - in correctly okay so let's clear the
05:01 - screen now we are signed in to our
05:04 - server and we can start setting this up
05:06 - so the first thing that we actually want
05:07 - to do here is just configure a few
05:09 - things to have some better security on
05:11 - our server since this is going to be on
05:13 - the internet it's going to be hosting a
05:14 - website we want to disable the root
05:16 - access so that no one can sign in as the
05:18 - root user and do anything malicious with
05:21 - our server so the first thing that i'm
05:23 - going to do is just type apt update like
05:26 - this just to update all the software on
05:28 - our server we're then going to upgrade
05:30 - we're going to configure the time zone
05:32 - which is usually just a best practice
05:34 - and then we're going to disable the root
05:36 - access so i'm going to type apt upgrade
05:38 - here after i have updated i'm going to
05:40 - hit y there
05:42 - run through all of this and as i said
05:44 - the next thing that we want to do now is
05:45 - configure the time zone now depending on
05:48 - the distribution you're on this command
05:49 - may vary but i believe we can simply use
05:52 - dpkg hyphen and then re and configure
05:57 - if we could spell configure correctly
05:59 - like that then we're going to type t z
06:01 - data like that standing for time zone
06:03 - data hyphen set and then time zone like
06:08 - that okay now when we enter that we
06:09 - should get some type of graphical user
06:11 - interface pop up where we can select our
06:13 - current time zone so i'm going to go to
06:15 - where i am which is not africa america
06:18 - and i'm going to look for toronto which
06:20 - is the closest city to me now of course
06:22 - look for whatever city is closest to you
06:24 - for the time zone here in this case i'm
06:26 - going to go toronto okay enter and now i
06:29 - believe i have configured the time zone
06:30 - we can see that right here so local time
06:32 - is 1802 so 502 which is correct and if
06:35 - we want to check that we can just type
06:37 - in date and sorry not 502 602 is the the
06:41 - correct time okay so let's clear the
06:43 - time zone has now been set now that
06:44 - we've done that we want to create a new
06:46 - user that we're going to be able to sign
06:48 - in as and then disable the root user so
06:50 - i'm going to type add user like that and
06:53 - then i'm going to put my name as tim
06:55 - when i do that it should ask me for a
06:57 - password for this user so i'm going to
06:59 - enter the password now let's enter it
07:02 - correctly a second time okay and you can
07:06 - enter this data if you want but i'm just
07:07 - going to put the full name and then
07:09 - go from there okay so i've now created a
07:11 - new user that i can use to sign into
07:13 - this server this is the one we want to
07:15 - use from now on because we don't want to
07:17 - be using the root user we want to
07:18 - disable that one however we need to
07:20 - first add this user to the sudo group
07:22 - that way we have access to administer
07:24 - privileges right
07:26 - so for now i'm going to type add user
07:28 - tim and then sudo and this will add tim
07:31 - to the sudo group perfect and now that
07:34 - we've done that we just want to test and
07:35 - make sure we can sign in as tim and then
07:37 - we can disable the password for the root
07:40 - user so that you can't sign in as it so
07:42 - let's clear let's type log out okay and
07:45 - now i'm going to ssh and i'm going to
07:46 - ssh as my new user which is tim
07:49 - when i do this now let's type in the
07:51 - password okay
07:54 - and there we go we've signed in as tim
07:56 - at localhost everything is work so now
07:57 - that we're signed in as tim what i can
07:59 - do is disable the root user password so
08:01 - i'm going to type sudo and then pass wd
08:04 - like that hyphen d and then root and
08:06 - this is going to remove the password
08:08 - from the root user now i need to type in
08:11 - my password to be able to do this
08:14 - and there we go that's all good now we
08:16 - also can lock the password we can do one
08:18 - or the other or we can do both which is
08:19 - what i'm going to do right here so sudo
08:22 - pass wd hyphen l root this simply locks
08:25 - it so we've now deleted it and then
08:26 - locked the password and now you cannot
08:28 - sign in as root and if we want to test
08:30 - that we can try so let's try to sign in
08:32 - as root let's type in the password we
08:34 - had
08:35 - before
08:36 - and we should see this no longer works
08:39 - and there we go access denied right so
08:40 - let's get out of that and ssh now as tim
08:44 - and then configure or continue with the
08:46 - rest of our setup
08:48 - all right so now that we've done that
08:49 - we're going to start working with nginx
08:51 - so we need to install that so we're
08:52 - going to type sudo apt
08:55 - install and then nginx like that we're
08:58 - going to hit y for yes and install that
09:01 - now that we have installed that though
09:03 - what we need to do is make a folder
09:04 - where our source code is going to live
09:07 - so let me clear that we're going to type
09:08 - sudo mkdir this is going to be in var
09:11 - www slash and then here the name of the
09:15 - directory is going to be the public ip
09:17 - address of our server or the domain that
09:20 - you're using when you're hosting this
09:21 - website so it's going to be one or the
09:23 - other in my case i don't have a domain
09:25 - so i'm just going to use the public ip
09:26 - address which is right here so let me
09:28 - copy that and paste that in
09:30 - okay so let's hit enter here we've now
09:32 - created that folder now that we've done
09:34 - that we just need to run two commands
09:35 - here that are going to change the
09:36 - permissions and ownership of this
09:38 - directory i'm not going to explain
09:40 - exactly what these are going to do but
09:42 - just follow along i'm going to type sudo
09:45 - chmod 755 hyphen r and then we need the
09:49 - path to the directory we just created so
09:51 - let's put that in what this allows us to
09:54 - do is essentially have everyone be able
09:56 - to access the contents of this directory
09:59 - that's about as far as i'll explain that
10:01 - and then next we're going to have a
10:02 - pseudo ch own hyphen r and it's
10:06 - important here that you put the user
10:07 - that you created so in my case i created
10:09 - the tim user i'm signed in as tim if you
10:11 - made joe whatever you're going to you
10:13 - know place that here whatever user
10:15 - you're currently signed in as
10:17 - then i'm going to do www
10:19 - hyphen data and then slash var slash www
10:22 - slash and then the name of our directory
10:25 - and hit enter now this is going to
10:27 - change the ownership so that the current
10:29 - user is the owner of this directory and
10:32 - the reason we need to do this is so that
10:34 - when we actually run our deployment
10:36 - script which we're going to do at the
10:37 - end of the video
10:38 - it allows us to update the contents of
10:40 - the directory it's doing a little bit
10:42 - more than that but that's kind of the
10:44 - best way that i can explain that without
10:46 - making this overly complicated anyways
10:47 - you don't have to understand how these
10:48 - work
10:49 - but that is what we're doing for now
10:52 - okay now that we've done that we need to
10:53 - make a configuration file here for nginx
10:57 - to kind of link the directory that we
10:59 - just created so the way we're going to
11:01 - do this is sudo nano and then we're
11:03 - going to type slash etc
11:06 - this is going to be nginx slash and then
11:08 - sites available and then we're going to
11:10 - make the name of this configuration file
11:12 - the same name as the directory that we
11:14 - just created so it's going to be
11:16 - 192.53.122.115.
11:19 - again if you're using a domain then you
11:21 - would put the domain here okay so let's
11:23 - hit enter and now we're going to type in
11:25 - our configuration file so this is going
11:26 - to be server there's going to be two
11:28 - curly parentheses like this or curly
11:30 - brackets whatever you call them we're
11:32 - going to say listen and then this is
11:34 - going to be on port 80 if we type listen
11:37 - correctly
11:38 - we're then going to type listen again
11:40 - we're going to type colon colon inside
11:41 - of a set of square brackets and then
11:44 - colon 80 like that and then a semicolon
11:47 - then we're going to type root and for
11:49 - root we're going to put the path to the
11:51 - directory where our code's going to live
11:53 - which is var slash www
11:55 - and then it's going to be the public i p
11:57 - address again if you had a domain you'd
11:59 - put that there
12:00 - and then lastly we're going to say that
12:02 - our index is equal to
12:04 - index.html
12:06 - okay so that's all we need for our
12:07 - configuration file i've just saved that
12:09 - with control s really the only thing you
12:11 - should need to change here is this so
12:13 - that it's equal to whatever the name of
12:14 - your directory is don't worry too much
12:17 - again about exactly how this works and
12:18 - what it's doing it's just required for
12:20 - nginx and you do not need to understand
12:22 - it to be able to host the website
12:25 - but i will mention that index.html it's
12:27 - important that where your react app is
12:29 - kind of being injected into is called
12:31 - this and if you created your react app
12:33 - with create react app from npm or npx or
12:37 - whatever the command is then this will
12:39 - already be set up for you but just make
12:40 - sure your base html page is index.html
12:44 - okay so let's exit out of that
12:46 - now that we've created the configuration
12:47 - file uh what we need to do here is just
12:49 - test nginx and see if it's still working
12:51 - so we're going to type sudo nginx hyphen
12:54 - t standing for test
12:56 - and when i do that it says the
12:57 - configuration file is okay configuration
13:00 - file test is successful okay
13:03 - however what i do actually need to do
13:05 - here is i need to unlink the default
13:08 - configuration file and link the new
13:10 - configuration file that i just created i
13:12 - forgot i need to do that first before i
13:14 - run this test so i'm going to type the
13:16 - following sudo
13:18 - unlink like that and then this is going
13:20 - to be slash etc
13:22 - engine x slash and this is sites enabled
13:26 - and then this is going to be slash
13:27 - default now this is going to unlink the
13:31 - default configuration file and we're
13:32 - going to kind of replace that link
13:34 - with the configuration file that we just
13:36 - created
13:37 - so now we need to make a new link again
13:39 - don't worry too much about exactly what
13:41 - this is doing but i'm going to type sudo
13:43 - ln hyphen s this is going to create a
13:45 - symbolic link
13:46 - i'm going to type slash etc
13:49 - and jinx uh or nginx slash sites and
13:52 - then this is going to be available make
13:55 - sure you do available not enabled here
13:57 - and then slash and then the name of our
13:58 - directory which is right here
14:00 - and we're going to link this with slash
14:02 - etc
14:03 - slash nginx slash and then this is going
14:06 - to be sites enabled like that okay and
14:09 - hit enter
14:10 - all right so now we have removed the
14:12 - default link and we have made a link to
14:14 - our configuration file and now we're
14:17 - going to type sudo nginx hyphen t and
14:20 - make sure that this is all working and
14:22 - it looks like it is okay now that we've
14:24 - done that we are going to restart nginx
14:27 - so we're going to type sudo
14:28 - system ctl and then this is going to be
14:31 - restart
14:32 - njinx or nginx like that we can rerun
14:35 - the test if we want and everything is
14:38 - all good okay so now that we have done
14:41 - that we are pretty much
14:42 - finished everything that we need to do
14:44 - on the remote linux server we now need
14:46 - to simply deploy our code to the
14:48 - directory that we created because again
14:50 - that's where our code is going to live
14:51 - and we're going to do that from our
14:52 - local machine so let me get out of here
14:54 - go to my local machine let's create a
14:56 - react application and then deploy that
14:58 - all right so i've gone back to my local
15:00 - machine here and i'm just going to ask
15:02 - if you haven't already just download git
15:05 - and also make sure you install git bash
15:07 - if you are on windows now if you're on
15:09 - linux or mac you don't necessarily need
15:10 - to do this but on windows it's going to
15:12 - be easier for us to use git bash to do
15:15 - the rest of the tutorial so just install
15:17 - that and once it's installed you should
15:19 - just be able to type git bash like this
15:21 - and open that up if you're on mac or
15:23 - linux then you can just use your default
15:24 - terminal because the commands we need
15:26 - are already installed on mac and linux
15:28 - i'll leave this link in the description
15:29 - by the way it's just git hyphen scm.com
15:32 - downloads you also can just google get
15:34 - bash or git download and then of course
15:35 - go to go to this page
15:37 - okay now that we've done that i've just
15:38 - opened up a project here in visual
15:40 - studio code just because i'm going to
15:42 - create my react app in here and just
15:44 - edit actually one or two files so i'm
15:47 - going to create a react application i
15:48 - assume most of you already have one but
15:50 - i'm going to type mpx and then it's
15:52 - going to be create react
15:54 - app and let's just call this demo for
15:57 - now that's going to take a second and of
15:59 - course to be able to run this command
16:00 - you need node.js but i assume if you're
16:03 - watching how to deploy react app you
16:05 - have node.js installed and while you
16:06 - have a react app that you'd like to
16:08 - deploy alright so the react app is
16:10 - finally finished being created and let's
16:12 - just open this up quickly in here now
16:14 - one thing i want to note is that for
16:16 - what i'm about to do next
16:18 - you need to make sure you have this
16:20 - build command because what we're going
16:21 - to do is build the react application and
16:24 - we're then going to transfer this build
16:26 - to the server and the server will then
16:28 - kind of display that build right or
16:30 - we'll be able to access the contents of
16:32 - the build so just if you don't have this
16:34 - build command then this isn't going to
16:35 - work so make sure you have some type of
16:37 - build command called build built into
16:39 - your script here for your react app
16:42 - anyways inside of this application i'm
16:44 - going to make a new file here and i'm
16:45 - going to call this
16:47 - deploy.sh alright so this is going to be
16:49 - a shell script that we're going to run
16:50 - and inside of here i'm going to write a
16:52 - very basic
16:53 - script so i'm going to type echo and
16:55 - then this is going to say switching to
16:57 - branch master
16:59 - and the command that we want to run here
17:01 - is going to be git checkout master just
17:03 - to make sure we build from the master
17:05 - branch so i'm going to type git checkout
17:06 - master essentially we're going to run
17:08 - this script every time we want to push
17:10 - the most recent code to uh what do you
17:13 - call it to our server so you can modify
17:15 - this how you see fit but there's only a
17:17 - few commands in here anyways so okay
17:19 - okay so switching to master branch git
17:21 - checkout master echo is just like the
17:22 - print command right we're gonna type
17:24 - echo and we're gonna type building app
17:26 - and then dot dot dot
17:28 - and then i'm gonna type npm
17:31 - run build again you need node.js
17:33 - installed here on your local machine
17:35 - then i'm going to type echo
17:37 - and deploying files to server dot dot
17:41 - and then here this is the command that
17:43 - we really want to pay attention to we're
17:44 - going to use a tool called scp which
17:47 - allows us to perform file transfer we're
17:49 - going to type build slash and then we're
17:52 - going to put in asterisks here and
17:54 - actually we're going to do sorry scp
17:56 - hyphen r and then build slash asterix
17:58 - which stands for all of the files inside
18:00 - of the build directory as well as any of
18:02 - the directories in there and actually
18:04 - this is a lowercase r
18:06 - for recursive mode okay and then where
18:09 - do we want to put this we want to put
18:10 - this uh to tim at and then the ip
18:13 - address of our server which do i still
18:16 - have it on the clipboard i do okay and
18:18 - then this is going to be colon slash var
18:21 - slash www slash and then again the
18:24 - ipaddress of our server and slash so let
18:26 - me break this down a bit we're saying
18:28 - scp which is kind of the file transfer
18:30 - command hyphen r standing for recursive
18:32 - mode we're doing build slash and then in
18:35 - asterix the build folder will be created
18:37 - inside of our react application when we
18:39 - run the npm run build command then we're
18:42 - saying where do we want to put this well
18:44 - we want to put this onto this remote
18:46 - server so we're saying tim which is our
18:48 - user at and then this is going to be the
18:51 - ip address of the server story and then
18:53 - where on the server do we want it to go
18:55 - we want it on slash var slash www slash
18:58 - the name of the directory that we
19:00 - created which tim is the owner of and
19:02 - has access to
19:04 - okay
19:05 - now that we have done that we can echo
19:09 - done exclamation point and that's all we
19:11 - need for this sh file
19:13 - okay so now that we've created the
19:14 - deploy.sh
19:16 - we just need to change the permissions
19:17 - so it's executable we then can run it
19:20 - and everything will be good and we can
19:21 - actually view our application live so
19:24 - now let's open up git bash now if you
19:26 - are on mac or linux you don't have to
19:28 - open git bash you can just go to any
19:29 - terminal and i'm just going to cd into
19:31 - the directory where my react app is
19:33 - which is on my desktop so i'm going to
19:35 - type cd desktop
19:37 - i have this test react app folder
19:39 - and then i have the demo folder and in
19:41 - here you see i have all of my stuff and
19:44 - i'm going to run the following command
19:46 - which is going to be chmod and then this
19:48 - is going to be u plus x and then deploy
19:52 - dot sh notice deploy.sh is inside of the
19:55 - current directory where i am i'm going
19:57 - to hit enter that will change the
19:58 - permissions for this file now i don't
20:01 - actually know if this does anything on
20:02 - windows but on mac and linux you will
20:04 - need that to make this an executable
20:06 - file and now that we have that we're
20:08 - going to type dot slash
20:10 - and then deploy
20:12 - dot sh and this should actually just run
20:14 - the deploy script for us so let's hit
20:16 - enter
20:17 - okay so it's going to start running this
20:19 - switching to branch master rdl master
20:21 - building app okay so it's building it
20:23 - here using that npm build command
20:25 - then we should see an echo for deploying
20:27 - it then we can go look on the server see
20:29 - if it's deployed
20:30 - and visit the public ip address of our
20:33 - server and we should see the react app
20:35 - okay it says deploying files to server
20:37 - i spelt server wrong of course i need to
20:39 - type in my password to sign in here so
20:41 - i'm going to type this in
20:43 - hit enter okay all my files get sent
20:46 - over there and then we have done
20:48 - nice now if we go here i can ssh into my
20:52 - server
20:53 - i just need to resign in because i
20:54 - signed out
20:55 - so let's go here
20:57 - okay
20:58 - let's cd into slash
21:01 - var slash www slash and then this and
21:05 - then ls and notice all of the files here
21:08 - for my website are here and i have my
21:09 - index.html
21:11 - nice so now that those are all there all
21:13 - i need to do is go to my browser
21:16 - and just type in the public ip address
21:18 - so let's paste oops that's not what i
21:19 - wanted
21:20 - i guess i can just grab it from here so
21:22 - let's copy that and let's paste it and
21:25 - hit enter and notice i get my react
21:27 - application there we go now if i want to
21:30 - actually modify this application all i
21:33 - have to do now is let's i guess keep
21:36 - that open we can close this for now
21:38 - though i can go to say my src and my
21:41 - app.js and let's change the p tag here
21:44 - to say tim
21:46 - is
21:47 - great exclamation point i'm going to
21:50 - save that go back to git bash or again
21:52 - just any terminal if you're on mac or
21:54 - linux
21:55 - re-run that command we'll have to type
21:57 - in our password again once the build is
21:58 - done and then you'll see it will be
22:00 - updated on our server so now whenever
22:02 - you make a change you just run the
22:04 - deploy script right it will deploy of
22:06 - course you can change it if you want to
22:08 - and you will be good to go alright so
22:09 - let's type in the password
22:13 - okay hit enter
22:14 - all right let's go here
22:16 - and let's give it a refresh and notice
22:19 - that now i get tim is great there you go
22:22 - we have just deployed a react app
22:24 - location now it is a little bit more
22:25 - advanced than this when you're dealing
22:26 - with a back end and a database and
22:28 - domains and all that type of stuff but
22:30 - if you're just trying to host some type
22:31 - of hobby project here then this
22:33 - definitely will have got you up and
22:34 - running or at least gave you kind of a
22:36 - good starting point here on how to host
22:38 - a react app so with that said i am gonna
22:41 - end the video here there is nothing more
22:42 - for me to show you there is a guide that
22:44 - has a lot of these commands in the
22:46 - description in case you're getting a bit
22:47 - lost you want to reference it and read
22:49 - more about what i was doing with that
22:51 - said though if you guys enjoyed make
22:52 - sure to leave a like subscribe to the
22:54 - channel another massive thanks to lenode
22:55 - for sponsoring this video and i hope to
22:57 - see you in another youtube
23:00 - [Music]
23:06 - video you

Cleaned transcript:

in this video i'll be showing you how to deploy a react application to a remote linux server on the linux server we're going to use a piece of software called nginx this is going to act as our web server then from our local computer we're going to create the react application and i'm going to show you how we write a very simple deployment script that will automatically push all of this code to the remote server and that way we don't have to do any manual changes on there we can simply work on the project from our local computer run one script and then that will automatically be updated and our application will be deployed now this application will be viewable from anywhere we're going to use the ip address of the machine to view it however if you want to add a domain to this you can do that you just have to tweak a few things after going through this tutorial so with that said let's go ahead and get started so the first thing we need to deploy react application is somewhere to deploy too so we need a linux server for this video i'm going to get one from lenode now lenode is the sponsor of this video and that is why if you click the link in the description or go to lenode.com tech with tim you can get a hundred dollars in free credit for 60 days when you sign up for a new account now that's going to allow you to get a free server here for this tutorial so you can use lenod if you'd like to again you can go to the link in the description get a hundred dollars in free credit or use any linux server that you have access to now i do want to mention here that i'm going to be working with lenod for another series very shortly and in that series we're going to work on a much more advanced portfolio website that's going to act as a really good resume project now i'm going to show you how we build out the website how we deploy the website connect it to a domain and then how we use something called git lab to actually do automatic deployment of code now this is going to look really great on a resume because it shows you know how to build a website you know how to deploy it and you know all of the things about hosting and being kind of a system admin and all of those types of skills so anyway stay tuned for that if you guys are excited and make sure to check out the lenod youtube channel that has a bunch of projects similar to that i'll leave that in the description for now though i'm going to sign into my lenode account because i already have one once i'm there i'm going to walk you through setting up our lenode and then we will actually ssh into it and start doing all of the setup for our react application deployment all right so i'm on the leno dashboard here i've just signed into my test account where i don't actually host any of my real projects but i do want to mention that i've been using lenod for well over two years now i have a few websites hosted with them some databases a kubernetes cluster and they've been nothing but great great service great uptime and it's actually quite nice whenever i've had a problem i've just picked up the phone and called them and i've actually had a human respond to me which is uh quite nice in 2022 considering it's actually quite a challenge to get to a real human on a lot of support lines so if you guys are considering a place to host your website or project i would definitely recommend lenode and well that is why i've been working with them for so long on this channel and why they are sponsoring this video anyways we're going to click on create lenode here you can also do that from the top click create lenode and i will mention that they do have some oneclick installs here from the marketplace so we don't have to run through all of these setup steps but i just want to do it from scratch in case any of you guys aren't using lenode so they have like django flask git lab me and mongodb etc so you can probably find one in here for your project that you're hosting but i'm going to do it from scratch again because i'm not sure if you guys are going to be using lenode or not so i'm going to choose my distribution as debian 11. debian 10 would work as well i'm going to go region for now i'm going to go toronto and then we have to choose our lenode plan now the cheapest plan they have is the nanoed one gigabyte which is just a shared cpu it's five bucks a month however for a react application it's probably best to go with something a little bit stronger so i'm going to go with the dedicated server here with eight gigabytes of ram you could probably do four as well again this is just for testing so it doesn't really matter too much for now though uh for the node label i'll just call this my react app and then i need to put in my root password make sure you do not forget this password alright so now we can just go down here and click on create lenode this is going to take a few minutes to be created and once that is done i will be right back all right so my node is now running and what i want to look for is the ip address now i can find that by looking for the ip address right here the ipv4 or just copying this ssh access which is what i'm going to do so i'm going to copy this right here and this is what we're going to use to well access the note so open up a command prompt or some type of terminal depending on the operating system that you're on and then simply paste in that command looks like i didn't actually copy it though so let's hit that button one more time so paste that in ssh and then root at whatever the ip address of your server is and hit enter you're gonna have to type in yes here and then enter the password so let me enter that right now you won't see anything when you're when you're entering the password keep that in mind you still just need to type it in correctly okay so let's clear the screen now we are signed in to our server and we can start setting this up so the first thing that we actually want to do here is just configure a few things to have some better security on our server since this is going to be on the internet it's going to be hosting a website we want to disable the root access so that no one can sign in as the root user and do anything malicious with our server so the first thing that i'm going to do is just type apt update like this just to update all the software on our server we're then going to upgrade we're going to configure the time zone which is usually just a best practice and then we're going to disable the root access so i'm going to type apt upgrade here after i have updated i'm going to hit y there run through all of this and as i said the next thing that we want to do now is configure the time zone now depending on the distribution you're on this command may vary but i believe we can simply use dpkg hyphen and then re and configure if we could spell configure correctly like that then we're going to type t z data like that standing for time zone data hyphen set and then time zone like that okay now when we enter that we should get some type of graphical user interface pop up where we can select our current time zone so i'm going to go to where i am which is not africa america and i'm going to look for toronto which is the closest city to me now of course look for whatever city is closest to you for the time zone here in this case i'm going to go toronto okay enter and now i believe i have configured the time zone we can see that right here so local time is 1802 so 502 which is correct and if we want to check that we can just type in date and sorry not 502 602 is the the correct time okay so let's clear the time zone has now been set now that we've done that we want to create a new user that we're going to be able to sign in as and then disable the root user so i'm going to type add user like that and then i'm going to put my name as tim when i do that it should ask me for a password for this user so i'm going to enter the password now let's enter it correctly a second time okay and you can enter this data if you want but i'm just going to put the full name and then go from there okay so i've now created a new user that i can use to sign into this server this is the one we want to use from now on because we don't want to be using the root user we want to disable that one however we need to first add this user to the sudo group that way we have access to administer privileges right so for now i'm going to type add user tim and then sudo and this will add tim to the sudo group perfect and now that we've done that we just want to test and make sure we can sign in as tim and then we can disable the password for the root user so that you can't sign in as it so let's clear let's type log out okay and now i'm going to ssh and i'm going to ssh as my new user which is tim when i do this now let's type in the password okay and there we go we've signed in as tim at localhost everything is work so now that we're signed in as tim what i can do is disable the root user password so i'm going to type sudo and then pass wd like that hyphen d and then root and this is going to remove the password from the root user now i need to type in my password to be able to do this and there we go that's all good now we also can lock the password we can do one or the other or we can do both which is what i'm going to do right here so sudo pass wd hyphen l root this simply locks it so we've now deleted it and then locked the password and now you cannot sign in as root and if we want to test that we can try so let's try to sign in as root let's type in the password we had before and we should see this no longer works and there we go access denied right so let's get out of that and ssh now as tim and then configure or continue with the rest of our setup all right so now that we've done that we're going to start working with nginx so we need to install that so we're going to type sudo apt install and then nginx like that we're going to hit y for yes and install that now that we have installed that though what we need to do is make a folder where our source code is going to live so let me clear that we're going to type sudo mkdir this is going to be in var www slash and then here the name of the directory is going to be the public ip address of our server or the domain that you're using when you're hosting this website so it's going to be one or the other in my case i don't have a domain so i'm just going to use the public ip address which is right here so let me copy that and paste that in okay so let's hit enter here we've now created that folder now that we've done that we just need to run two commands here that are going to change the permissions and ownership of this directory i'm not going to explain exactly what these are going to do but just follow along i'm going to type sudo chmod 755 hyphen r and then we need the path to the directory we just created so let's put that in what this allows us to do is essentially have everyone be able to access the contents of this directory that's about as far as i'll explain that and then next we're going to have a pseudo ch own hyphen r and it's important here that you put the user that you created so in my case i created the tim user i'm signed in as tim if you made joe whatever you're going to you know place that here whatever user you're currently signed in as then i'm going to do www hyphen data and then slash var slash www slash and then the name of our directory and hit enter now this is going to change the ownership so that the current user is the owner of this directory and the reason we need to do this is so that when we actually run our deployment script which we're going to do at the end of the video it allows us to update the contents of the directory it's doing a little bit more than that but that's kind of the best way that i can explain that without making this overly complicated anyways you don't have to understand how these work but that is what we're doing for now okay now that we've done that we need to make a configuration file here for nginx to kind of link the directory that we just created so the way we're going to do this is sudo nano and then we're going to type slash etc this is going to be nginx slash and then sites available and then we're going to make the name of this configuration file the same name as the directory that we just created so it's going to be 192.53.122.115. again if you're using a domain then you would put the domain here okay so let's hit enter and now we're going to type in our configuration file so this is going to be server there's going to be two curly parentheses like this or curly brackets whatever you call them we're going to say listen and then this is going to be on port 80 if we type listen correctly we're then going to type listen again we're going to type colon colon inside of a set of square brackets and then colon 80 like that and then a semicolon then we're going to type root and for root we're going to put the path to the directory where our code's going to live which is var slash www and then it's going to be the public i p address again if you had a domain you'd put that there and then lastly we're going to say that our index is equal to index.html okay so that's all we need for our configuration file i've just saved that with control s really the only thing you should need to change here is this so that it's equal to whatever the name of your directory is don't worry too much again about exactly how this works and what it's doing it's just required for nginx and you do not need to understand it to be able to host the website but i will mention that index.html it's important that where your react app is kind of being injected into is called this and if you created your react app with create react app from npm or npx or whatever the command is then this will already be set up for you but just make sure your base html page is index.html okay so let's exit out of that now that we've created the configuration file uh what we need to do here is just test nginx and see if it's still working so we're going to type sudo nginx hyphen t standing for test and when i do that it says the configuration file is okay configuration file test is successful okay however what i do actually need to do here is i need to unlink the default configuration file and link the new configuration file that i just created i forgot i need to do that first before i run this test so i'm going to type the following sudo unlink like that and then this is going to be slash etc engine x slash and this is sites enabled and then this is going to be slash default now this is going to unlink the default configuration file and we're going to kind of replace that link with the configuration file that we just created so now we need to make a new link again don't worry too much about exactly what this is doing but i'm going to type sudo ln hyphen s this is going to create a symbolic link i'm going to type slash etc and jinx uh or nginx slash sites and then this is going to be available make sure you do available not enabled here and then slash and then the name of our directory which is right here and we're going to link this with slash etc slash nginx slash and then this is going to be sites enabled like that okay and hit enter all right so now we have removed the default link and we have made a link to our configuration file and now we're going to type sudo nginx hyphen t and make sure that this is all working and it looks like it is okay now that we've done that we are going to restart nginx so we're going to type sudo system ctl and then this is going to be restart njinx or nginx like that we can rerun the test if we want and everything is all good okay so now that we have done that we are pretty much finished everything that we need to do on the remote linux server we now need to simply deploy our code to the directory that we created because again that's where our code is going to live and we're going to do that from our local machine so let me get out of here go to my local machine let's create a react application and then deploy that all right so i've gone back to my local machine here and i'm just going to ask if you haven't already just download git and also make sure you install git bash if you are on windows now if you're on linux or mac you don't necessarily need to do this but on windows it's going to be easier for us to use git bash to do the rest of the tutorial so just install that and once it's installed you should just be able to type git bash like this and open that up if you're on mac or linux then you can just use your default terminal because the commands we need are already installed on mac and linux i'll leave this link in the description by the way it's just git hyphen scm.com downloads you also can just google get bash or git download and then of course go to go to this page okay now that we've done that i've just opened up a project here in visual studio code just because i'm going to create my react app in here and just edit actually one or two files so i'm going to create a react application i assume most of you already have one but i'm going to type mpx and then it's going to be create react app and let's just call this demo for now that's going to take a second and of course to be able to run this command you need node.js but i assume if you're watching how to deploy react app you have node.js installed and while you have a react app that you'd like to deploy alright so the react app is finally finished being created and let's just open this up quickly in here now one thing i want to note is that for what i'm about to do next you need to make sure you have this build command because what we're going to do is build the react application and we're then going to transfer this build to the server and the server will then kind of display that build right or we'll be able to access the contents of the build so just if you don't have this build command then this isn't going to work so make sure you have some type of build command called build built into your script here for your react app anyways inside of this application i'm going to make a new file here and i'm going to call this deploy.sh alright so this is going to be a shell script that we're going to run and inside of here i'm going to write a very basic script so i'm going to type echo and then this is going to say switching to branch master and the command that we want to run here is going to be git checkout master just to make sure we build from the master branch so i'm going to type git checkout master essentially we're going to run this script every time we want to push the most recent code to uh what do you call it to our server so you can modify this how you see fit but there's only a few commands in here anyways so okay okay so switching to master branch git checkout master echo is just like the print command right we're gonna type echo and we're gonna type building app and then dot dot dot and then i'm gonna type npm run build again you need node.js installed here on your local machine then i'm going to type echo and deploying files to server dot dot and then here this is the command that we really want to pay attention to we're going to use a tool called scp which allows us to perform file transfer we're going to type build slash and then we're going to put in asterisks here and actually we're going to do sorry scp hyphen r and then build slash asterix which stands for all of the files inside of the build directory as well as any of the directories in there and actually this is a lowercase r for recursive mode okay and then where do we want to put this we want to put this uh to tim at and then the ip address of our server which do i still have it on the clipboard i do okay and then this is going to be colon slash var slash www slash and then again the ipaddress of our server and slash so let me break this down a bit we're saying scp which is kind of the file transfer command hyphen r standing for recursive mode we're doing build slash and then in asterix the build folder will be created inside of our react application when we run the npm run build command then we're saying where do we want to put this well we want to put this onto this remote server so we're saying tim which is our user at and then this is going to be the ip address of the server story and then where on the server do we want it to go we want it on slash var slash www slash the name of the directory that we created which tim is the owner of and has access to okay now that we have done that we can echo done exclamation point and that's all we need for this sh file okay so now that we've created the deploy.sh we just need to change the permissions so it's executable we then can run it and everything will be good and we can actually view our application live so now let's open up git bash now if you are on mac or linux you don't have to open git bash you can just go to any terminal and i'm just going to cd into the directory where my react app is which is on my desktop so i'm going to type cd desktop i have this test react app folder and then i have the demo folder and in here you see i have all of my stuff and i'm going to run the following command which is going to be chmod and then this is going to be u plus x and then deploy dot sh notice deploy.sh is inside of the current directory where i am i'm going to hit enter that will change the permissions for this file now i don't actually know if this does anything on windows but on mac and linux you will need that to make this an executable file and now that we have that we're going to type dot slash and then deploy dot sh and this should actually just run the deploy script for us so let's hit enter okay so it's going to start running this switching to branch master rdl master building app okay so it's building it here using that npm build command then we should see an echo for deploying it then we can go look on the server see if it's deployed and visit the public ip address of our server and we should see the react app okay it says deploying files to server i spelt server wrong of course i need to type in my password to sign in here so i'm going to type this in hit enter okay all my files get sent over there and then we have done nice now if we go here i can ssh into my server i just need to resign in because i signed out so let's go here okay let's cd into slash var slash www slash and then this and then ls and notice all of the files here for my website are here and i have my index.html nice so now that those are all there all i need to do is go to my browser and just type in the public ip address so let's paste oops that's not what i wanted i guess i can just grab it from here so let's copy that and let's paste it and hit enter and notice i get my react application there we go now if i want to actually modify this application all i have to do now is let's i guess keep that open we can close this for now though i can go to say my src and my app.js and let's change the p tag here to say tim is great exclamation point i'm going to save that go back to git bash or again just any terminal if you're on mac or linux rerun that command we'll have to type in our password again once the build is done and then you'll see it will be updated on our server so now whenever you make a change you just run the deploy script right it will deploy of course you can change it if you want to and you will be good to go alright so let's type in the password okay hit enter all right let's go here and let's give it a refresh and notice that now i get tim is great there you go we have just deployed a react app location now it is a little bit more advanced than this when you're dealing with a back end and a database and domains and all that type of stuff but if you're just trying to host some type of hobby project here then this definitely will have got you up and running or at least gave you kind of a good starting point here on how to host a react app so with that said i am gonna end the video here there is nothing more for me to show you there is a guide that has a lot of these commands in the description in case you're getting a bit lost you want to reference it and read more about what i was doing with that said though if you guys enjoyed make sure to leave a like subscribe to the channel another massive thanks to lenode for sponsoring this video and i hope to see you in another youtube video you
