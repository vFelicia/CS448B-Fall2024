With timestamps:

00:02 - [Music]
00:08 - hello everybody and welcome to another
00:10 - youtube video so in today's video i'm
00:12 - going to be showing you an awesome
00:13 - platform called choreo now choreo is
00:16 - made by ws02 which is actually the
00:18 - sponsor of this video i do have to
00:20 - disclose that they have paid me to
00:22 - create this video but this is an awesome
00:24 - platform and i think you guys are going
00:25 - to be really interested to see what this
00:27 - can actually do so to give you a really
00:29 - quick summary of what this platform is
00:31 - essentially it's a low code cloud native
00:34 - engineering platform for developers now
00:37 - i know here it says professional
00:38 - developers but even if you're just
00:40 - trying to create a simple api
00:42 - microservice something like that and you
00:44 - want to easily be able to deploy it test
00:46 - it and view all of the statistics and
00:48 - kind of analytics related to it choreo
00:50 - is definitely something to check out so
00:52 - as it says here low code cloud native
00:55 - engineering for professional developers
00:57 - and really what that's saying is that
00:58 - you can actually use the choreo online
01:01 - editor to create and design all of your
01:04 - different services and apis and the code
01:06 - will automatically be generated for you
01:08 - now of course you can go in and manually
01:10 - modify the code but it's really cool how
01:12 - this works and i was able to actually
01:14 - get my first apis and services running
01:16 - on choreo in like two or three minutes
01:18 - and when i say running i mean fully
01:20 - deployed you know credentials
01:22 - authentication everything it would just
01:24 - it just worked it was just done and so
01:26 - it's super impressive and that's why i'm
01:27 - going to show it to you today anyways
01:29 - what are the core benefits of coria well
01:31 - you can create an integration build
01:33 - micro services manage an api run
01:35 - professional devops and build an api
01:38 - marketplace of course you can do a lot
01:39 - more than that as well and then here
01:41 - this is kind of the main feature for me
01:43 - at least that's really interesting which
01:44 - is the simultaneous low code and code so
01:48 - low code is kind of this diagram you see
01:49 - on the left hand side i'm going to show
01:51 - it to you in one second and this is
01:52 - synchronized with the actual code on the
01:54 - right hand side of the screen and so
01:56 - when you make a change to the code it
01:58 - changes the diagram when you make a
01:59 - change to the diagram it changes the
02:01 - code and you can really just go and do
02:03 - everything on the diagram you don't even
02:05 - need to write any code at least if
02:06 - you're doing something that's kind of
02:07 - simple
02:08 - all right and then all the tools you
02:09 - need for cloud native engineering in one
02:11 - platform so obviously it has a bunch of
02:13 - different integrations it has stuff like
02:15 - twilio it has email and sms
02:18 - authentication github everything you
02:21 - would really need honestly so moving on
02:23 - here it says idea to production in hours
02:25 - not minutes now i can vouch for this
02:28 - really the best part of this platform is
02:29 - that it deploys everything for you so
02:32 - that is really what i appreciate it
02:33 - because i'm not a big devops guy i'm not
02:35 - big into kubernetes and what this
02:37 - actually does is run your api and
02:39 - services to a devops pipeline and then
02:41 - it deploys it in a kubernetes cluster on
02:44 - the cloud with proper authentication and
02:46 - everything all right so that's kind of
02:47 - the summary on choreo now if you guys
02:49 - want to check this out for yourself you
02:51 - can click the link in the description
02:52 - and create your first choreo app but
02:54 - what i'm going to do now is head over to
02:56 - the choreo portal this is where you're
02:57 - actually going to do all of the api and
02:59 - micro service creation i'm just going to
03:01 - walk you through some services that i've
03:03 - created so clearly here we have services
03:05 - apis and integrations kind of the main
03:07 - things to be looking at i'll just
03:09 - quickly show you this integrations tab
03:11 - because it's pretty interesting what you
03:12 - can do here now i'm not going to walk
03:14 - through any of this in depth but you can
03:16 - see that you can actually use choreo to
03:18 - integrate with github with salesforce
03:20 - with google sheets with google drive
03:22 - with twilio with slack with a bunch of
03:24 - other things and so if you're interested
03:26 - in doing that then obviously head over
03:28 - to choreo and check it out and you can
03:30 - see how that works okay so what i'm
03:31 - going to do now is just go to my
03:33 - services so i'm going to press explore
03:35 - here notice i have two services now to
03:37 - create a new one you would press create
03:39 - you can create the name of your service
03:40 - then you can just start building it out
03:42 - what you also can do though is you can
03:44 - click on the try out samples and you can
03:46 - try out some of the samples that they
03:48 - have one of the services i have running
03:49 - is actually this sample right here so if
03:51 - you just want to mess around with this
03:52 - just click the world bank data to cover
03:54 - 19 statistics and then you can kind of
03:56 - mess around with the the platform and
03:58 - see how it works
03:59 - all right so what i'm going to do is go
04:00 - to my world bank development service
04:02 - here and i'm just going to press on
04:05 - develop
04:06 - now what this is going to do is bring me
04:08 - into this view that i was talking about
04:09 - right where we have kind of the editor
04:11 - on the left hand side the no code view
04:13 - and then we have the other view over
04:16 - here
04:17 - so these things are synchronized as i
04:18 - was saying so any change to something on
04:21 - the left is going to affect the right
04:23 - and vice versa so i'll just quickly show
04:25 - you what i mean by this but you can see
04:27 - that we have you know a resource this is
04:29 - saying okay we're going to get and then
04:31 - some endpoint this endpoint is
04:33 - development slash indicators okay and if
04:36 - i go here and i just modify this so
04:38 - notice my path says development slash
04:41 - indicators then it's saying okay we're
04:42 - going to take a parameter this is string
04:44 - country let's just change this to just
04:47 - say indicators so if i do that and i
04:49 - press save api notice on the right hand
04:52 - side of my screen here this changes
04:54 - right this used to say development slash
04:56 - indicators now it just says indicators
04:58 - in the same way if i go here and i say
05:01 - okay let's change this back to
05:02 - development
05:03 - and now let's save
05:05 - let's see what happens on the right hand
05:06 - side notice when i go back to edit
05:08 - development is back so that's a really
05:10 - cool thing here is that you have a
05:11 - single source of truth which is this
05:13 - code and this code is modified when you
05:15 - modify the diagram or obviously when you
05:17 - modify the code itself and then it
05:18 - reflects that change in the diagram so
05:21 - that's kind of the basic idea of how
05:23 - this works so let me just walk through
05:24 - this service for you and just discuss
05:26 - kind of what it actually is doing and
05:28 - then i'll show you this in deployment i
05:30 - have a python client again that's
05:31 - implementing this so it says resource
05:34 - this is a get resource so that's what
05:35 - we've defined we're going to accept a
05:37 - get request here and then what we're
05:39 - starting off by doing is creating a new
05:40 - world bank endpoint now this is built
05:43 - into choreo this is just some
05:44 - integration that they have but the whole
05:46 - point of this endpoint right here is to
05:48 - get indicators related to the
05:51 - development of different countries so
05:52 - it's going to give the population and
05:54 - the gdp of whatever country you pass to
05:57 - this endpoint and so if we look here we
05:59 - can see we're creating a new world bank
06:01 - endpoint that's where we're getting the
06:02 - data from then we are sending a request
06:05 - to that endpoint that is getting the
06:07 - population by country so here on the get
06:10 - request we're accepting a country typing
06:12 - in a country we're then creating the
06:13 - endpoint we're then sending that country
06:15 - to the get population by country method
06:18 - that's going to return to us the
06:19 - population of the country and then we're
06:21 - getting the gdp by the country so in the
06:23 - same way sending it to this end point
06:25 - and then getting a response that gives
06:26 - us the gdp
06:28 - then what we are doing is having a
06:29 - response and this response is going to
06:31 - have both the population and the gdp in
06:34 - json format and we're going to return so
06:37 - if you look here we can see we are
06:38 - returning status success indicators
06:41 - population get population response
06:44 - dot value and then gdp get gdp country
06:46 - response dot value so that's all we're
06:48 - doing pretty straight forward so that's
06:50 - what this does now what i'm going to do
06:52 - is just run this for you although you
06:53 - can see it's already running down here
06:55 - and just show you how we can actually
06:57 - mess with this endpoint there's a few
06:59 - different ways to do this so let's bring
07:00 - this up here and notice how we have this
07:03 - run and test tab now right now this is
07:05 - running but if i wanted to stop it i
07:07 - would simply press this stop button so i
07:09 - can press stop application once that's
07:11 - done then we obviously can rerun so i'm
07:14 - just going to run the application again
07:16 - now this takes a second okay let's run
07:18 - this and there we go it says your
07:20 - integration is successfully started all
07:22 - right so there we go it's now started
07:24 - you can see it has the test invoke url
07:27 - so this is the url we're going to use to
07:28 - actually test this application and then
07:30 - you can see kind of some output here
07:33 - from the actual app now once you do this
07:35 - once you press run you should see that
07:37 - it pops up this window here that says
07:39 - try and shows you curl
07:41 - so here what you can do is choose
07:42 - between your test or your deployment
07:45 - servers now in this case i'm just going
07:47 - to use my test server or my test domain
07:49 - url whatever you want to call it and
07:51 - notice it's giving you kind of the
07:53 - documentation of this endpoint so i have
07:55 - development slash indicators and then i
07:58 - need to pass a parameter which is
07:59 - country now if i click on this i can
08:01 - actually just go ahead and test out this
08:04 - endpoint so i can press try it out i can
08:06 - now fill in a country i'm going to put
08:07 - in ca for canada and then i'm going to
08:10 - press execute now once i do this notice
08:13 - that we're going to get a response here
08:14 - we get status success indicators we get
08:16 - our population 34 million and our gdp i
08:19 - guess that's like 1.6 trillion or
08:21 - something like that
08:22 - regardless that's what we're getting
08:24 - right so this is all working we can see
08:26 - that we have 200 as our status code and
08:28 - that is literally from me creating this
08:30 - little diagram we have a fully
08:32 - functioning api now to prove to you that
08:34 - i'm not cheating that this actually does
08:36 - work outside of this platform i'm going
08:38 - to show you this running in my kind of
08:39 - little test client that i've created but
08:41 - i'm also just going to show you what
08:42 - happens if i copy this url and just put
08:45 - it right into my address bar so if i go
08:47 - here this is the base url now where i
08:50 - want to go to is development slash
08:52 - indicators convenient that's right there
08:54 - but we'll just type it out so
08:55 - development
08:56 - slash
08:57 - indicators like that and then in this
09:00 - time we'll do slash us so when i do
09:03 - slash us notice we get our population i
09:05 - guess that's 309 million and then our
09:08 - gdp here to the exponent 13.
09:10 - nice there we go we got what we need so
09:14 - this does work outside of here now i
09:15 - could change the country if i go ind for
09:17 - india we can see the population and udp
09:20 - here and obviously you can
09:22 - try this out with any other country that
09:24 - you want now i did notice that for this
09:26 - specific api it takes like the initials
09:28 - of the country so if you type
09:30 - canada like that it's not going to work
09:32 - you need to actually give like ca or us
09:36 - or whatever the kind of initials of the
09:37 - country would be
09:39 - nice though okay so that is how that
09:40 - works now that is the test server so on
09:43 - the test server you don't need any
09:44 - credentials you don't need any headers
09:46 - with your request but when you actually
09:48 - have this fully deployed you need to
09:50 - have some authentication headers so
09:52 - right here i'm just in test mode so
09:53 - we're just testing it out but what i'm
09:55 - going to do now is go to go live but
09:57 - actually before i do that i'll just
09:58 - quickly show you that as well as using
10:00 - this kind of little tri form that pops
10:02 - up here you can also use postman so i've
10:05 - not linked my postman account to this
10:06 - but you can link postman and you can set
10:08 - up tests through postman or you can
10:10 - actually set up tests right here through
10:13 - the programming language which is
10:15 - ballerina now i'm not going to show that
10:16 - to you just showing you that you can
10:18 - indeed do that you can make automated
10:20 - tests and then it will run those tests
10:21 - for you on the api obviously something
10:23 - that's pretty useful so what i'm going
10:25 - to do now is press on go live
10:27 - so this is actually going to bring me to
10:28 - the page related to kind of the
10:31 - deployment server right so the actual
10:33 - final product now notice we have our
10:35 - production invoke url so i'm going to
10:37 - copy that url and notice now that if i
10:40 - go here and i use this production url
10:43 - and i try to go development slash
10:44 - indicators it's saying that i don't have
10:46 - the right security credentials this is
10:48 - because we need an api key and we have
10:50 - to send that api key through in a header
10:53 - as a part of the request here to be able
10:55 - to actually get a response that's
10:57 - different than the task server the test
10:58 - server you obviously don't need that and
11:00 - you can see i have some logs here i had
11:01 - some errors previously obviously when i
11:03 - was messing around with this so here it
11:05 - says security header right so what i can
11:07 - do is view the security header or i can
11:09 - copy it to clipboard so it says i've
11:11 - copied it to the clipboard i'll just go
11:13 - here to sublime text which is where i
11:15 - have my clients then i can paste this
11:17 - and obviously you can see the api key
11:18 - now you should not show people the api
11:20 - key but this is just a tutorial so i'm
11:22 - just kind of showing it to you right
11:23 - here but regardless this is an api key
11:25 - and to be able to access the production
11:28 - server or endpoint you need to pass
11:30 - through as a header the api key and so
11:32 - here i'm in a little python client i've
11:34 - created so what i'm going to do is just
11:36 - run this python client so i'm going to
11:38 - open up my command prompt here which is
11:40 - where i'm going to run it from i'm just
11:42 - going to go actually i think i have the
11:43 - command already python
11:46 - choreodemo.pi
11:47 - and what it's going to do is ask me to
11:49 - enter a country so you can kind of read
11:51 - through the code if you want it's quite
11:52 - straightforward i'm going to enter the
11:53 - country ca
11:54 - and then notice it's showing me the
11:55 - population and the gdp now let's try us
11:59 - nice let's try india
12:01 - nice there we go so you can see the
12:04 - different populations and gdps
12:07 - perfect so all i've done here is i've
12:09 - just sent a request using the python
12:10 - request module request.get i'm sending
12:13 - it to this base url which is the
12:15 - deployment url i then have my endpoint
12:17 - so development indicators and then i'm
12:19 - passing through as a header right here
12:21 - the api key and then if there's not an
12:24 - error from the response
12:25 - i'm simply printing out the population
12:28 - and the data and i'm getting that
12:29 - obviously from the response.json nice so
12:32 - that is how this works
12:34 - sweet so now i'll just show you a few
12:36 - more things related to actually kind of
12:38 - observing your api and your deployment
12:41 - so here let me just close this
12:43 - and let's
12:44 - move this over a bit just so we can see
12:46 - it alright so this is the execution
12:48 - history pretty straight forward showing
12:50 - you all the executions of the api or
12:52 - service or resource whatever that you've
12:54 - created notice it shows you which ones
12:56 - were successful which ones had errors
12:59 - and there you go now it also shows you
13:01 - the success rate of all of the
13:03 - individual calls you have inside of this
13:06 - api service so i have a 69 success rate
13:09 - for get population by country 100
13:11 - success rate by get gdp by country and
13:13 - then showing me the average latency or
13:16 - response time story of each of these
13:18 - resources so i can see what's taking
13:19 - longer and maybe what i would want to
13:21 - cut out or move to different places in
13:23 - my application so really useful
13:25 - information it's pretty hard to get this
13:27 - information unless you have some type of
13:29 - platform like this or you're actually
13:30 - doing you know real monitoring of your
13:32 - api so definitely super useful so
13:34 - another interesting thing to note here
13:36 - is that choreo actually uses ai to
13:38 - forecast and try to predict what the
13:40 - average latency and throughput of your
13:43 - deployed resource api whatever it is is
13:45 - going to be so in this case you can see
13:47 - the throughput is five requests per
13:49 - minute and the latency is
13:50 - 11.16 seconds at least that's what the
13:52 - ai is forecasting so pretty interesting
13:55 - that's in the bottom right hand corner
13:57 - now what i'm going to do though is i'm
13:58 - actually going to show you how we can
14:00 - modify this api and how easy it is so
14:03 - the modification i'm going to make is
14:05 - that i actually want to send an email to
14:08 - myself every single time this api runs
14:12 - so i'll show you how to do this but i'm
14:14 - going to add something here
14:16 - and let me actually just kind of make
14:17 - this full screen so it's easier to see
14:19 - so let's go over here i'm going to press
14:21 - a little plus and right after i get the
14:23 - population and the gdp
14:26 - but before i send the response i want to
14:28 - send an email so i'm going to go to api
14:30 - calls
14:31 - and then notice there's mail by korya
14:33 - now there's a bunch of other ones as
14:34 - well you have sms you have world bank
14:37 - you have a weather api a bunch of other
14:39 - apis and integrations you can do right
14:41 - but in this case we're just going to use
14:42 - mail
14:43 - so let's press on mail and then i can
14:45 - choose here the operation that i want to
14:47 - perform and notice that the default
14:49 - operation is send email that is what i
14:51 - want to do and then it actually gives
14:52 - you the documentation for this operation
14:55 - on the right hand side of the screen so
14:57 - this documentation obviously will be for
14:58 - the code we don't actually need to write
15:00 - the code though because you can see i
15:02 - can just put in all of the different
15:04 - values that we actually need and i'm
15:05 - getting auto completion here of all of
15:07 - the different variables i have in my
15:09 - code so if i open up my code here you
15:11 - can see that the reason it's giving me
15:12 - get population response is because well
15:14 - that's one of the variables that i have
15:16 - get population response so in this case
15:18 - what i'm going to do is i'm just going
15:19 - to hard code in a recipient for the
15:21 - email and then i'll put a subject and
15:24 - message body and i'll show you that this
15:25 - actually works every single time you
15:27 - call this api
15:29 - so for the recipient i have this kind of
15:31 - dummy email that i use for some youtube
15:33 - videos so i'm going to call this code
15:35 - racer
15:36 - live
15:38 - stream app at gmail.com for the subject
15:43 - i will go
15:44 - choreo
15:45 - api and for the message body oops sorry
15:48 - this needs to be in a string
15:50 - here you got to put this actually in a
15:51 - string like double quotation marks and
15:53 - then for the message body
15:56 - i'm not sure exactly what i'm going to
15:57 - put here but i might just put what the
15:59 - gdp and the population actually is
16:02 - assuming that we actually do have a gdp
16:04 - in population so what i'm going to do is
16:05 - i'm going to
16:07 - get population response dot sorry it's
16:10 - going to be 0
16:12 - question mark dot value now i won't
16:14 - explain exactly what this is but this is
16:15 - just going to get the value from the
16:17 - population response so it's saying this
16:19 - needs to be a string notice actually
16:21 - giving me the error message which is
16:22 - quite nice so what i'm going to do is
16:24 - just convert this to a string and now
16:26 - what this should do is actually email me
16:27 - the population of whatever the country
16:30 - is that i typed in in fact what i'm
16:32 - going to do here is i'm actually going
16:33 - to change i'm going to say choreo api
16:36 - results 4 and then i'm going to say plus
16:39 - and then country which will be a string
16:41 - so the subject will actually show what
16:43 - country i got the results for and then
16:44 - what we'll do is we'll say
16:47 - population
16:49 - colon plus this all needs to be a string
16:52 - and oops and then we'll go plus we'll do
16:55 - the pipe and then we'll say gdp and then
16:57 - in the same way i'll do the gdp so go
16:59 - plus
17:00 - and this is going to be get gdp by
17:01 - country response this will be at index
17:04 - zero question mark dot
17:07 - value
17:08 - like that and then dot to string
17:11 - nice so that should actually be good
17:13 - that should work now when it sends the
17:15 - email
17:16 - but let's see what's happening here so
17:17 - it says undefined symbol and then says
17:19 - click here to convert the expression to
17:21 - a string nice so let's do that add some
17:23 - quotation marks for me really nice and
17:25 - now what i can do is simply press save
17:28 - all right so now that i've pressed save
17:29 - we should see that it adds in this
17:32 - diagram here the send email so let's
17:34 - zoom out a little bit and you can see
17:35 - that we now have this kind of resource
17:37 - here that we're using we're sending a
17:39 - request over to send email and it will
17:41 - then send that email after we hit this
17:44 - api and if we go here to the code we can
17:46 - see that we've now implemented that so
17:48 - let's just make this a bit bigger
17:50 - and we have send email we're making an
17:51 - email client we have the email we
17:53 - actually want to send the email to and
17:55 - then the string that we would like to
17:57 - send nice so let's test this out now i
18:00 - will just do this actually i can do this
18:02 - from production but i need to redeploy
18:04 - my application so let's do that and i
18:06 - can show you how that works so what i'm
18:08 - going to do is go to go live
18:10 - all right and i'm just going to stop
18:12 - this and redeploy it because whenever
18:14 - you make a change obviously you need to
18:15 - redeploy yeah css redeploy the service
18:17 - for the latest changes to go live
18:19 - so stopping stopping stopping once this
18:22 - is done i will restart it and then i'll
18:24 - show you how this works alright so that
18:25 - is now finished now notice there is a
18:27 - deploy button so i will press deploy
18:29 - alright so it is now deploying as it
18:31 - says is going to take a few minutes to
18:32 - finish so once it is done i will be back
18:34 - and then i will show you how this now
18:36 - works with the email and how it's
18:37 - actually sending the email to me all
18:39 - right so the deployment was successful
18:41 - all is working so what i'm going to do
18:43 - now is go back to my implementation here
18:47 - and i'm just going to rerun this program
18:49 - so python choreo demo dot pi enter
18:51 - country let's enter ca
18:54 - and give it a second here gives us the
18:56 - population and the gdp and now what i'm
18:58 - going to do is go to my email
19:00 - and show you that i did actually get the
19:03 - email right it just sent me an email
19:05 - from choreo.demo gmail.com i got my
19:08 - population and i got my gdp and it says
19:10 - choreo api results for ca for canada
19:13 - right and i can show you that this will
19:15 - work again so let's go here and let's go
19:17 - india
19:18 - okay that was pretty fast we get our
19:19 - population and gdp go to email and
19:22 - instantly i have gotten the email that
19:24 - has the gdp and the population so that
19:27 - is how easy it is to integrate email and
19:30 - to actually change all of the code
19:31 - obviously you just have to wait for it
19:32 - to deploy but that's natural it's going
19:34 - to take a few minutes for it to happen
19:36 - all right so then the last thing i will
19:37 - show you here is how you can actually
19:39 - monitor and observe your services apis
19:42 - whatever that are deployed
19:44 - so when you press on the observe tab
19:46 - what this is going to do is bring you to
19:47 - a similar view that we saw before and
19:49 - it's going to show you the latency for
19:52 - every single one of the services that
19:53 - you have now obviously sending the email
19:56 - is going to take the longest that makes
19:57 - sense and then you can actually go and
19:59 - look at some graphs of the throughput
20:02 - and the latency so let's make this full
20:03 - screen so we can see everything so let's
20:06 - just change this so rather than past
20:08 - hour we have past 10 minutes and we can
20:10 - see all of the requests that we've sent
20:13 - how long on average it takes for them to
20:15 - be finished so in this case we had about
20:17 - i guess that's 1.3 seconds this one was
20:19 - much faster it was only about four
20:21 - seconds or sorry not four seconds point
20:23 - four seconds
20:24 - then we can look at the diagnostics view
20:26 - and we can see any errors that have
20:29 - occurred so it shows us memory cpu and
20:31 - then any errors so if i go here you can
20:34 - see this is an error that occurred when
20:35 - we sent some type of request
20:37 - nice now there's a lot more that you can
20:39 - do obviously you can change the time
20:40 - zone here
20:41 - you can change the refresh time you can
20:44 - look at more statistics you can look at
20:46 - the logs so if i go to logs we could
20:48 - have actually been logging stuff if we
20:50 - wanted to we're not doing that but we
20:52 - could
20:53 - and then system and alerts i guess are
20:54 - blurred out for this one right here
20:56 - nice so that is pretty much all i need
20:59 - to show you now i guess the last thing i
21:03 - will do is quickly hop back to services
21:06 - and just show you another service that i
21:08 - actually have running so world bank data
21:10 - to covet 19 statistics
21:12 - so let's click on this
21:14 - we are in the develop view
21:16 - and notice in the same way that the
21:17 - other one worked we have just the
21:19 - diagram of what we've created and then
21:22 - we have all of the code on the right
21:23 - hand side here and well i just want to
21:25 - show you that this is diverse you can
21:26 - obviously do multiple things and this is
21:29 - something else that you could do as well
21:30 - right so this is actually giving you
21:32 - covet 19 related data so it's giving you
21:34 - i guess the number of cases per 1000
21:37 - people or per 100 000 people or
21:39 - something along those lines and anyways
21:41 - you can just kind of have a look at this
21:42 - and see how this one differs a bit from
21:45 - the other one that we just looked at
21:47 - so yeah with that said i think i'm going
21:49 - to end the video here so a massive thank
21:51 - you to wso2 for sponsoring this video
21:55 - and having me talk to you about choreo
21:56 - yes of course this is sponsored i am
21:58 - disclosing that to you guys but this is
21:59 - actually a really really cool platform
22:01 - and i was genuinely surprised when i
22:03 - started using it at just how fast it was
22:05 - to actually get this stuff up and
22:07 - running i mean you saw me in this video
22:09 - i made a change i deployed it and that
22:11 - maybe took two or three minutes for it
22:13 - to actually deploy to the kubernetes
22:14 - cluster i was then able to use it it
22:17 - actually sent an email just a super cool
22:19 - thing and obviously a great platform to
22:22 - check out if you want to do something
22:23 - like this so anyways i hope you guys
22:25 - enjoyed if you did make sure to leave a
22:26 - like subscribe to the channel i will see
22:28 - you in another youtube video
22:32 - [Music]

Cleaned transcript:

hello everybody and welcome to another youtube video so in today's video i'm going to be showing you an awesome platform called choreo now choreo is made by ws02 which is actually the sponsor of this video i do have to disclose that they have paid me to create this video but this is an awesome platform and i think you guys are going to be really interested to see what this can actually do so to give you a really quick summary of what this platform is essentially it's a low code cloud native engineering platform for developers now i know here it says professional developers but even if you're just trying to create a simple api microservice something like that and you want to easily be able to deploy it test it and view all of the statistics and kind of analytics related to it choreo is definitely something to check out so as it says here low code cloud native engineering for professional developers and really what that's saying is that you can actually use the choreo online editor to create and design all of your different services and apis and the code will automatically be generated for you now of course you can go in and manually modify the code but it's really cool how this works and i was able to actually get my first apis and services running on choreo in like two or three minutes and when i say running i mean fully deployed you know credentials authentication everything it would just it just worked it was just done and so it's super impressive and that's why i'm going to show it to you today anyways what are the core benefits of coria well you can create an integration build micro services manage an api run professional devops and build an api marketplace of course you can do a lot more than that as well and then here this is kind of the main feature for me at least that's really interesting which is the simultaneous low code and code so low code is kind of this diagram you see on the left hand side i'm going to show it to you in one second and this is synchronized with the actual code on the right hand side of the screen and so when you make a change to the code it changes the diagram when you make a change to the diagram it changes the code and you can really just go and do everything on the diagram you don't even need to write any code at least if you're doing something that's kind of simple all right and then all the tools you need for cloud native engineering in one platform so obviously it has a bunch of different integrations it has stuff like twilio it has email and sms authentication github everything you would really need honestly so moving on here it says idea to production in hours not minutes now i can vouch for this really the best part of this platform is that it deploys everything for you so that is really what i appreciate it because i'm not a big devops guy i'm not big into kubernetes and what this actually does is run your api and services to a devops pipeline and then it deploys it in a kubernetes cluster on the cloud with proper authentication and everything all right so that's kind of the summary on choreo now if you guys want to check this out for yourself you can click the link in the description and create your first choreo app but what i'm going to do now is head over to the choreo portal this is where you're actually going to do all of the api and micro service creation i'm just going to walk you through some services that i've created so clearly here we have services apis and integrations kind of the main things to be looking at i'll just quickly show you this integrations tab because it's pretty interesting what you can do here now i'm not going to walk through any of this in depth but you can see that you can actually use choreo to integrate with github with salesforce with google sheets with google drive with twilio with slack with a bunch of other things and so if you're interested in doing that then obviously head over to choreo and check it out and you can see how that works okay so what i'm going to do now is just go to my services so i'm going to press explore here notice i have two services now to create a new one you would press create you can create the name of your service then you can just start building it out what you also can do though is you can click on the try out samples and you can try out some of the samples that they have one of the services i have running is actually this sample right here so if you just want to mess around with this just click the world bank data to cover 19 statistics and then you can kind of mess around with the the platform and see how it works all right so what i'm going to do is go to my world bank development service here and i'm just going to press on develop now what this is going to do is bring me into this view that i was talking about right where we have kind of the editor on the left hand side the no code view and then we have the other view over here so these things are synchronized as i was saying so any change to something on the left is going to affect the right and vice versa so i'll just quickly show you what i mean by this but you can see that we have you know a resource this is saying okay we're going to get and then some endpoint this endpoint is development slash indicators okay and if i go here and i just modify this so notice my path says development slash indicators then it's saying okay we're going to take a parameter this is string country let's just change this to just say indicators so if i do that and i press save api notice on the right hand side of my screen here this changes right this used to say development slash indicators now it just says indicators in the same way if i go here and i say okay let's change this back to development and now let's save let's see what happens on the right hand side notice when i go back to edit development is back so that's a really cool thing here is that you have a single source of truth which is this code and this code is modified when you modify the diagram or obviously when you modify the code itself and then it reflects that change in the diagram so that's kind of the basic idea of how this works so let me just walk through this service for you and just discuss kind of what it actually is doing and then i'll show you this in deployment i have a python client again that's implementing this so it says resource this is a get resource so that's what we've defined we're going to accept a get request here and then what we're starting off by doing is creating a new world bank endpoint now this is built into choreo this is just some integration that they have but the whole point of this endpoint right here is to get indicators related to the development of different countries so it's going to give the population and the gdp of whatever country you pass to this endpoint and so if we look here we can see we're creating a new world bank endpoint that's where we're getting the data from then we are sending a request to that endpoint that is getting the population by country so here on the get request we're accepting a country typing in a country we're then creating the endpoint we're then sending that country to the get population by country method that's going to return to us the population of the country and then we're getting the gdp by the country so in the same way sending it to this end point and then getting a response that gives us the gdp then what we are doing is having a response and this response is going to have both the population and the gdp in json format and we're going to return so if you look here we can see we are returning status success indicators population get population response dot value and then gdp get gdp country response dot value so that's all we're doing pretty straight forward so that's what this does now what i'm going to do is just run this for you although you can see it's already running down here and just show you how we can actually mess with this endpoint there's a few different ways to do this so let's bring this up here and notice how we have this run and test tab now right now this is running but if i wanted to stop it i would simply press this stop button so i can press stop application once that's done then we obviously can rerun so i'm just going to run the application again now this takes a second okay let's run this and there we go it says your integration is successfully started all right so there we go it's now started you can see it has the test invoke url so this is the url we're going to use to actually test this application and then you can see kind of some output here from the actual app now once you do this once you press run you should see that it pops up this window here that says try and shows you curl so here what you can do is choose between your test or your deployment servers now in this case i'm just going to use my test server or my test domain url whatever you want to call it and notice it's giving you kind of the documentation of this endpoint so i have development slash indicators and then i need to pass a parameter which is country now if i click on this i can actually just go ahead and test out this endpoint so i can press try it out i can now fill in a country i'm going to put in ca for canada and then i'm going to press execute now once i do this notice that we're going to get a response here we get status success indicators we get our population 34 million and our gdp i guess that's like 1.6 trillion or something like that regardless that's what we're getting right so this is all working we can see that we have 200 as our status code and that is literally from me creating this little diagram we have a fully functioning api now to prove to you that i'm not cheating that this actually does work outside of this platform i'm going to show you this running in my kind of little test client that i've created but i'm also just going to show you what happens if i copy this url and just put it right into my address bar so if i go here this is the base url now where i want to go to is development slash indicators convenient that's right there but we'll just type it out so development slash indicators like that and then in this time we'll do slash us so when i do slash us notice we get our population i guess that's 309 million and then our gdp here to the exponent 13. nice there we go we got what we need so this does work outside of here now i could change the country if i go ind for india we can see the population and udp here and obviously you can try this out with any other country that you want now i did notice that for this specific api it takes like the initials of the country so if you type canada like that it's not going to work you need to actually give like ca or us or whatever the kind of initials of the country would be nice though okay so that is how that works now that is the test server so on the test server you don't need any credentials you don't need any headers with your request but when you actually have this fully deployed you need to have some authentication headers so right here i'm just in test mode so we're just testing it out but what i'm going to do now is go to go live but actually before i do that i'll just quickly show you that as well as using this kind of little tri form that pops up here you can also use postman so i've not linked my postman account to this but you can link postman and you can set up tests through postman or you can actually set up tests right here through the programming language which is ballerina now i'm not going to show that to you just showing you that you can indeed do that you can make automated tests and then it will run those tests for you on the api obviously something that's pretty useful so what i'm going to do now is press on go live so this is actually going to bring me to the page related to kind of the deployment server right so the actual final product now notice we have our production invoke url so i'm going to copy that url and notice now that if i go here and i use this production url and i try to go development slash indicators it's saying that i don't have the right security credentials this is because we need an api key and we have to send that api key through in a header as a part of the request here to be able to actually get a response that's different than the task server the test server you obviously don't need that and you can see i have some logs here i had some errors previously obviously when i was messing around with this so here it says security header right so what i can do is view the security header or i can copy it to clipboard so it says i've copied it to the clipboard i'll just go here to sublime text which is where i have my clients then i can paste this and obviously you can see the api key now you should not show people the api key but this is just a tutorial so i'm just kind of showing it to you right here but regardless this is an api key and to be able to access the production server or endpoint you need to pass through as a header the api key and so here i'm in a little python client i've created so what i'm going to do is just run this python client so i'm going to open up my command prompt here which is where i'm going to run it from i'm just going to go actually i think i have the command already python choreodemo.pi and what it's going to do is ask me to enter a country so you can kind of read through the code if you want it's quite straightforward i'm going to enter the country ca and then notice it's showing me the population and the gdp now let's try us nice let's try india nice there we go so you can see the different populations and gdps perfect so all i've done here is i've just sent a request using the python request module request.get i'm sending it to this base url which is the deployment url i then have my endpoint so development indicators and then i'm passing through as a header right here the api key and then if there's not an error from the response i'm simply printing out the population and the data and i'm getting that obviously from the response.json nice so that is how this works sweet so now i'll just show you a few more things related to actually kind of observing your api and your deployment so here let me just close this and let's move this over a bit just so we can see it alright so this is the execution history pretty straight forward showing you all the executions of the api or service or resource whatever that you've created notice it shows you which ones were successful which ones had errors and there you go now it also shows you the success rate of all of the individual calls you have inside of this api service so i have a 69 success rate for get population by country 100 success rate by get gdp by country and then showing me the average latency or response time story of each of these resources so i can see what's taking longer and maybe what i would want to cut out or move to different places in my application so really useful information it's pretty hard to get this information unless you have some type of platform like this or you're actually doing you know real monitoring of your api so definitely super useful so another interesting thing to note here is that choreo actually uses ai to forecast and try to predict what the average latency and throughput of your deployed resource api whatever it is is going to be so in this case you can see the throughput is five requests per minute and the latency is 11.16 seconds at least that's what the ai is forecasting so pretty interesting that's in the bottom right hand corner now what i'm going to do though is i'm actually going to show you how we can modify this api and how easy it is so the modification i'm going to make is that i actually want to send an email to myself every single time this api runs so i'll show you how to do this but i'm going to add something here and let me actually just kind of make this full screen so it's easier to see so let's go over here i'm going to press a little plus and right after i get the population and the gdp but before i send the response i want to send an email so i'm going to go to api calls and then notice there's mail by korya now there's a bunch of other ones as well you have sms you have world bank you have a weather api a bunch of other apis and integrations you can do right but in this case we're just going to use mail so let's press on mail and then i can choose here the operation that i want to perform and notice that the default operation is send email that is what i want to do and then it actually gives you the documentation for this operation on the right hand side of the screen so this documentation obviously will be for the code we don't actually need to write the code though because you can see i can just put in all of the different values that we actually need and i'm getting auto completion here of all of the different variables i have in my code so if i open up my code here you can see that the reason it's giving me get population response is because well that's one of the variables that i have get population response so in this case what i'm going to do is i'm just going to hard code in a recipient for the email and then i'll put a subject and message body and i'll show you that this actually works every single time you call this api so for the recipient i have this kind of dummy email that i use for some youtube videos so i'm going to call this code racer live stream app at gmail.com for the subject i will go choreo api and for the message body oops sorry this needs to be in a string here you got to put this actually in a string like double quotation marks and then for the message body i'm not sure exactly what i'm going to put here but i might just put what the gdp and the population actually is assuming that we actually do have a gdp in population so what i'm going to do is i'm going to get population response dot sorry it's going to be 0 question mark dot value now i won't explain exactly what this is but this is just going to get the value from the population response so it's saying this needs to be a string notice actually giving me the error message which is quite nice so what i'm going to do is just convert this to a string and now what this should do is actually email me the population of whatever the country is that i typed in in fact what i'm going to do here is i'm actually going to change i'm going to say choreo api results 4 and then i'm going to say plus and then country which will be a string so the subject will actually show what country i got the results for and then what we'll do is we'll say population colon plus this all needs to be a string and oops and then we'll go plus we'll do the pipe and then we'll say gdp and then in the same way i'll do the gdp so go plus and this is going to be get gdp by country response this will be at index zero question mark dot value like that and then dot to string nice so that should actually be good that should work now when it sends the email but let's see what's happening here so it says undefined symbol and then says click here to convert the expression to a string nice so let's do that add some quotation marks for me really nice and now what i can do is simply press save all right so now that i've pressed save we should see that it adds in this diagram here the send email so let's zoom out a little bit and you can see that we now have this kind of resource here that we're using we're sending a request over to send email and it will then send that email after we hit this api and if we go here to the code we can see that we've now implemented that so let's just make this a bit bigger and we have send email we're making an email client we have the email we actually want to send the email to and then the string that we would like to send nice so let's test this out now i will just do this actually i can do this from production but i need to redeploy my application so let's do that and i can show you how that works so what i'm going to do is go to go live all right and i'm just going to stop this and redeploy it because whenever you make a change obviously you need to redeploy yeah css redeploy the service for the latest changes to go live so stopping stopping stopping once this is done i will restart it and then i'll show you how this works alright so that is now finished now notice there is a deploy button so i will press deploy alright so it is now deploying as it says is going to take a few minutes to finish so once it is done i will be back and then i will show you how this now works with the email and how it's actually sending the email to me all right so the deployment was successful all is working so what i'm going to do now is go back to my implementation here and i'm just going to rerun this program so python choreo demo dot pi enter country let's enter ca and give it a second here gives us the population and the gdp and now what i'm going to do is go to my email and show you that i did actually get the email right it just sent me an email from choreo.demo gmail.com i got my population and i got my gdp and it says choreo api results for ca for canada right and i can show you that this will work again so let's go here and let's go india okay that was pretty fast we get our population and gdp go to email and instantly i have gotten the email that has the gdp and the population so that is how easy it is to integrate email and to actually change all of the code obviously you just have to wait for it to deploy but that's natural it's going to take a few minutes for it to happen all right so then the last thing i will show you here is how you can actually monitor and observe your services apis whatever that are deployed so when you press on the observe tab what this is going to do is bring you to a similar view that we saw before and it's going to show you the latency for every single one of the services that you have now obviously sending the email is going to take the longest that makes sense and then you can actually go and look at some graphs of the throughput and the latency so let's make this full screen so we can see everything so let's just change this so rather than past hour we have past 10 minutes and we can see all of the requests that we've sent how long on average it takes for them to be finished so in this case we had about i guess that's 1.3 seconds this one was much faster it was only about four seconds or sorry not four seconds point four seconds then we can look at the diagnostics view and we can see any errors that have occurred so it shows us memory cpu and then any errors so if i go here you can see this is an error that occurred when we sent some type of request nice now there's a lot more that you can do obviously you can change the time zone here you can change the refresh time you can look at more statistics you can look at the logs so if i go to logs we could have actually been logging stuff if we wanted to we're not doing that but we could and then system and alerts i guess are blurred out for this one right here nice so that is pretty much all i need to show you now i guess the last thing i will do is quickly hop back to services and just show you another service that i actually have running so world bank data to covet 19 statistics so let's click on this we are in the develop view and notice in the same way that the other one worked we have just the diagram of what we've created and then we have all of the code on the right hand side here and well i just want to show you that this is diverse you can obviously do multiple things and this is something else that you could do as well right so this is actually giving you covet 19 related data so it's giving you i guess the number of cases per 1000 people or per 100 000 people or something along those lines and anyways you can just kind of have a look at this and see how this one differs a bit from the other one that we just looked at so yeah with that said i think i'm going to end the video here so a massive thank you to wso2 for sponsoring this video and having me talk to you about choreo yes of course this is sponsored i am disclosing that to you guys but this is actually a really really cool platform and i was genuinely surprised when i started using it at just how fast it was to actually get this stuff up and running i mean you saw me in this video i made a change i deployed it and that maybe took two or three minutes for it to actually deploy to the kubernetes cluster i was then able to use it it actually sent an email just a super cool thing and obviously a great platform to check out if you want to do something like this so anyways i hope you guys enjoyed if you did make sure to leave a like subscribe to the channel i will see you in another youtube video
