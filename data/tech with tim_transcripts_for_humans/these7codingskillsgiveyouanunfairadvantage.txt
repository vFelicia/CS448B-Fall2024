With timestamps:

00:00 - the best piece of advice that I've ever
00:02 - received was to find my unfair Advantage
00:04 - now I encourage you to do the exact same
00:06 - by mastering these few coding skills
00:08 - that will really make you stand out as a
00:12 - developer now the first way to do that
00:14 - is to be resourceful you may notice that
00:17 - on every High performing team they have
00:19 - one or two developers who are the go-to
00:21 - guys the ones who get stuff done who
00:23 - figure it out who are responsible for
00:25 - the biggest most challenging features
00:27 - and the most critical and damaging bugs
00:29 - I know when I worked at Microsoft the
00:31 - top senior developers were really
00:33 - running the team and that's because they
00:35 - were resourceful they knew how to fix
00:37 - every single problem not because they've
00:39 - done it before but because they knew how
00:40 - to find the solution they went to stack
00:43 - Overflow they went to Google they read
00:44 - documentation they consulted with their
00:46 - teammates and now in this age they're
00:48 - using chat GPT you need to be a
00:51 - developer who goes out of your way to
00:53 - figure out problems find Solutions and
00:55 - not just cry when you can't figure it
00:57 - out immediately you need to use the
00:59 - resources available ailable to you and
01:00 - use them as effectively as possible now
01:03 - one of the easiest ways to be
01:04 - resourceful today is to know how to use
01:06 - AI tools like chat GPT specifically to
01:09 - know what they're good at how to prompt
01:11 - properly and when to be cautious of the
01:13 - responses it's giving you now
01:15 - fortunately for you our video sponsor
01:17 - HubSpot has a completely free resource
01:19 - called how to use chat GPT at work that
01:22 - teaches you exactly that it gives you a
01:24 - comprehensive overview of how chat GPT
01:26 - works the best practices when using it
01:28 - and some expert insight so will really
01:30 - help you take it to the next level you
01:32 - can check it out for free from the link
01:34 - in the description now this resource
01:35 - shares a ton of knowledge and even gives
01:37 - you a 100 actionable prompts that you
01:39 - can use to leverage the full power of
01:41 - chat GPT knowing how to use something
01:43 - like this is really a game Cher and it
01:46 - will completely level you up as a
01:47 - developer now this resource and many
01:50 - other free resources are provided by our
01:51 - video sponsor HubSpot massive thank you
01:54 - to them and make sure to check this out
01:55 - from the link in the
01:58 - description now the next skill you need
02:00 - to master is Version Control now I'm not
02:03 - just talking about basic git creating
02:05 - commits adding to the staging area I'm
02:07 - talking about having a true deep
02:09 - understanding of git and how it works
02:11 - and being able to use that understanding
02:13 - to solve complex errors that are bound
02:15 - to happen in complex development Cycles
02:18 - I can't tell you how many times I've
02:19 - worked with a developer who understands
02:21 - the basics of git they know how to add
02:23 - commit and really push to a new Branch
02:25 - beyond that though they're completely
02:27 - lost they run into merge conflicts they
02:29 - have issues rebasing and merging they
02:31 - have a completely messed up history and
02:33 - it just makes it an absolute nightmare
02:35 - if you're the developer that understands
02:37 - get deeply knows how to do things like
02:38 - cherry-pick commits switch over to
02:40 - deploy branches take specific commits
02:43 - from one area to another area restore
02:45 - code to a previous state all of those
02:47 - Advanced features which is really where
02:49 - G comes in handy you are going to stand
02:51 - out and you'll notice that people will
02:52 - be coming to you with all of their git
02:54 - issues trust me this is a massive skill
02:57 - to learn and developers that know this
02:59 - absolutely stand
03:01 - out now the next thing you need to
03:03 - master is data structures and code
03:06 - efficiency often times when you're
03:08 - writing code you're not going to be
03:09 - implementing a heap or a linked list but
03:11 - you're going to use things that you
03:13 - would have learned from those types of
03:14 - topics to build more efficient data
03:16 - structure specifically for retrieval or
03:18 - access of information a lot of times
03:20 - when you're working in large systems
03:22 - you're going to have a ton of data and
03:24 - you need to come up with creative and
03:25 - clever ways to access and manipulate
03:27 - that data that doesn't cost a lot of
03:29 - resources memory storage whatever it may
03:32 - be I can tell you as someone who's been
03:34 - working a lot on backend systems
03:36 - recently coming up with creative data
03:38 - structures using creative indexing
03:40 - methods and having a good knowledge of
03:42 - those Baseline data structures really
03:44 - does make you stand out and allows you
03:46 - to produce code that other people just
03:48 - don't know how to make they don't have
03:50 - that Insight they don't know how to do
03:52 - things efficiently and they don't
03:53 - necessarily know the implications of the
03:55 - ways in which they're storing data trust
03:57 - me this is important learn this skill
04:00 - [Music]
04:02 - now the next skill you need to master is
04:03 - scripting and automation now this can be
04:05 - in any language or technology that you
04:07 - want but having the ability to work with
04:09 - the file system quickly understand how
04:12 - you can write a simple script that
04:13 - doesn't need to be the cleanest code in
04:15 - the world that can automate a quick task
04:17 - that can save developers even 10 20
04:19 - seconds every time they open the code
04:21 - base is a massive skill I remember one
04:23 - of the best developers I ever worked
04:25 - with was really a master at scripting
04:28 - anytime there was a task it was going to
04:30 - take more than say 5 10 minutes manually
04:32 - he'd just whip up a quick script for it
04:33 - and he'd save myself and him a ton of
04:36 - time anytime I had a pretty monotonous
04:38 - kind of repetitive issue I'd just
04:40 - message him he'd whip up a script and it
04:42 - really made me realize how powerful that
04:44 - skill is and it's been something I've
04:45 - been working on more and more so trust
04:47 - me understanding how to script quickly
04:49 - being comfortable in a language like
04:51 - python bash scripting even something
04:53 - like nodejs is really really powerful it
04:55 - will make you stand out and most of all
04:57 - it's going to save you a ton of time
05:01 - next asynchronous programming now this
05:03 - is something that most developers have a
05:05 - rudimentary knowledge of but I'm talking
05:07 - about really truly understanding this
05:09 - and knowing the techniques and best
05:11 - practices to write the most efficient
05:12 - code possible often times when you get
05:15 - into larger systems you have a ton of
05:16 - different calls that are be being made
05:18 - sorry asynchronously now you want to
05:20 - know how to synchronize those calls you
05:22 - can eventually grab all of the data from
05:24 - them how to handle different errors how
05:25 - to do things like timeouts and how to
05:27 - run those calls kind of in parallel or
05:30 - truly asynchronously so you're really
05:32 - taking advantage of that asynchronous
05:34 - code I won't go into this too far but I
05:36 - really recommend that you brush up on
05:38 - your skills here and understand the
05:40 - depths of your language and whatever
05:42 - asynchronous kind of framework that
05:43 - you're
05:45 - using moving on we have CI and CD now
05:49 - this is something that's typically
05:50 - reserved for more of a devops type role
05:52 - but in a smaller team setting or where
05:54 - you don't have access to that individual
05:56 - knowing how to do continuous integration
05:58 - and continuous deployment is an absolute
06:00 - game Cher this will absolutely make you
06:03 - stand out and is a skill that most
06:05 - developers don't learn until they're
06:06 - pretty much forced to do it if you can
06:08 - have even just basic understanding of
06:10 - how to run automated test cases how to
06:12 - use GitHub actions how to do a simple
06:15 - automatic deployment this is going to
06:16 - save yourself and your team a massive
06:18 - amount of time and make you a huge asset
06:21 - wherever you're
06:23 - working now lastly clear concise and
06:27 - accurate communication I can't tell you
06:29 - how frustrating it is when you have to
06:31 - go back and forth with someone 10 20 30
06:34 - times simply because of a
06:36 - misunderstanding learning how to write
06:38 - precisely accurately and even sometimes
06:40 - a bit for boly intentionally really
06:43 - makes you stand out and will help you a
06:45 - ton what I mean by that is when you're
06:47 - writing a paragraph when you're sending
06:48 - an email when you're doing a voice note
06:50 - whatever it is that you're sending
06:51 - you're being very very intentional to
06:53 - make sure there's no misunderstanding
06:56 - and you are 100% completely clear in
06:58 - what it is that you're saying this is
07:00 - something I've been practicing for a
07:01 - long time and that I'm still improving
07:03 - at day by day but I try to make sure
07:05 - every time I explain something
07:07 - especially if I want someone to do a
07:08 - task for me that I'm being as clear as
07:11 - possible and they can get every single
07:13 - requirement every piece of information
07:15 - and there's absolutely no ambiguity in
07:17 - what it is that I'm saying to them just
07:19 - something to consider something I would
07:20 - definitely recommend practicing and
07:22 - you'll notice how much faster your
07:24 - workflow speeds up when you don't need
07:26 - to constantly be going back and forth
07:27 - hopping on calls clar Ying that doesn't
07:30 - need to happen when you are as precise
07:32 - and accurate as you can possibly be in
07:34 - the first kind of chain of communication
07:36 - so with that said guys we'll wrap it up
07:37 - here I hope you found this valuable if
07:39 - you like this type of content subscribe
07:41 - to my channel check out some other
07:43 - videos and of course let me know what
07:44 - you thought in the comments down
07:47 - [Music]
07:53 - below

Cleaned transcript:

the best piece of advice that I've ever received was to find my unfair Advantage now I encourage you to do the exact same by mastering these few coding skills that will really make you stand out as a developer now the first way to do that is to be resourceful you may notice that on every High performing team they have one or two developers who are the goto guys the ones who get stuff done who figure it out who are responsible for the biggest most challenging features and the most critical and damaging bugs I know when I worked at Microsoft the top senior developers were really running the team and that's because they were resourceful they knew how to fix every single problem not because they've done it before but because they knew how to find the solution they went to stack Overflow they went to Google they read documentation they consulted with their teammates and now in this age they're using chat GPT you need to be a developer who goes out of your way to figure out problems find Solutions and not just cry when you can't figure it out immediately you need to use the resources available ailable to you and use them as effectively as possible now one of the easiest ways to be resourceful today is to know how to use AI tools like chat GPT specifically to know what they're good at how to prompt properly and when to be cautious of the responses it's giving you now fortunately for you our video sponsor HubSpot has a completely free resource called how to use chat GPT at work that teaches you exactly that it gives you a comprehensive overview of how chat GPT works the best practices when using it and some expert insight so will really help you take it to the next level you can check it out for free from the link in the description now this resource shares a ton of knowledge and even gives you a 100 actionable prompts that you can use to leverage the full power of chat GPT knowing how to use something like this is really a game Cher and it will completely level you up as a developer now this resource and many other free resources are provided by our video sponsor HubSpot massive thank you to them and make sure to check this out from the link in the description now the next skill you need to master is Version Control now I'm not just talking about basic git creating commits adding to the staging area I'm talking about having a true deep understanding of git and how it works and being able to use that understanding to solve complex errors that are bound to happen in complex development Cycles I can't tell you how many times I've worked with a developer who understands the basics of git they know how to add commit and really push to a new Branch beyond that though they're completely lost they run into merge conflicts they have issues rebasing and merging they have a completely messed up history and it just makes it an absolute nightmare if you're the developer that understands get deeply knows how to do things like cherrypick commits switch over to deploy branches take specific commits from one area to another area restore code to a previous state all of those Advanced features which is really where G comes in handy you are going to stand out and you'll notice that people will be coming to you with all of their git issues trust me this is a massive skill to learn and developers that know this absolutely stand out now the next thing you need to master is data structures and code efficiency often times when you're writing code you're not going to be implementing a heap or a linked list but you're going to use things that you would have learned from those types of topics to build more efficient data structure specifically for retrieval or access of information a lot of times when you're working in large systems you're going to have a ton of data and you need to come up with creative and clever ways to access and manipulate that data that doesn't cost a lot of resources memory storage whatever it may be I can tell you as someone who's been working a lot on backend systems recently coming up with creative data structures using creative indexing methods and having a good knowledge of those Baseline data structures really does make you stand out and allows you to produce code that other people just don't know how to make they don't have that Insight they don't know how to do things efficiently and they don't necessarily know the implications of the ways in which they're storing data trust me this is important learn this skill now the next skill you need to master is scripting and automation now this can be in any language or technology that you want but having the ability to work with the file system quickly understand how you can write a simple script that doesn't need to be the cleanest code in the world that can automate a quick task that can save developers even 10 20 seconds every time they open the code base is a massive skill I remember one of the best developers I ever worked with was really a master at scripting anytime there was a task it was going to take more than say 5 10 minutes manually he'd just whip up a quick script for it and he'd save myself and him a ton of time anytime I had a pretty monotonous kind of repetitive issue I'd just message him he'd whip up a script and it really made me realize how powerful that skill is and it's been something I've been working on more and more so trust me understanding how to script quickly being comfortable in a language like python bash scripting even something like nodejs is really really powerful it will make you stand out and most of all it's going to save you a ton of time next asynchronous programming now this is something that most developers have a rudimentary knowledge of but I'm talking about really truly understanding this and knowing the techniques and best practices to write the most efficient code possible often times when you get into larger systems you have a ton of different calls that are be being made sorry asynchronously now you want to know how to synchronize those calls you can eventually grab all of the data from them how to handle different errors how to do things like timeouts and how to run those calls kind of in parallel or truly asynchronously so you're really taking advantage of that asynchronous code I won't go into this too far but I really recommend that you brush up on your skills here and understand the depths of your language and whatever asynchronous kind of framework that you're using moving on we have CI and CD now this is something that's typically reserved for more of a devops type role but in a smaller team setting or where you don't have access to that individual knowing how to do continuous integration and continuous deployment is an absolute game Cher this will absolutely make you stand out and is a skill that most developers don't learn until they're pretty much forced to do it if you can have even just basic understanding of how to run automated test cases how to use GitHub actions how to do a simple automatic deployment this is going to save yourself and your team a massive amount of time and make you a huge asset wherever you're working now lastly clear concise and accurate communication I can't tell you how frustrating it is when you have to go back and forth with someone 10 20 30 times simply because of a misunderstanding learning how to write precisely accurately and even sometimes a bit for boly intentionally really makes you stand out and will help you a ton what I mean by that is when you're writing a paragraph when you're sending an email when you're doing a voice note whatever it is that you're sending you're being very very intentional to make sure there's no misunderstanding and you are 100% completely clear in what it is that you're saying this is something I've been practicing for a long time and that I'm still improving at day by day but I try to make sure every time I explain something especially if I want someone to do a task for me that I'm being as clear as possible and they can get every single requirement every piece of information and there's absolutely no ambiguity in what it is that I'm saying to them just something to consider something I would definitely recommend practicing and you'll notice how much faster your workflow speeds up when you don't need to constantly be going back and forth hopping on calls clar Ying that doesn't need to happen when you are as precise and accurate as you can possibly be in the first kind of chain of communication so with that said guys we'll wrap it up here I hope you found this valuable if you like this type of content subscribe to my channel check out some other videos and of course let me know what you thought in the comments down below
