With timestamps:

00:00 - hey guys and welcome back to another
00:03 - YouTube video so in today's video i'm
00:04 - going to be starting a new tutorial
00:07 - series on intermediate programming with
00:09 - python so that being said a prerequisite
00:12 - for these videos is gonna be that you
00:14 - know a little bit about python you know
00:15 - the basics you know if statements for
00:17 - loops lists so on as i'm not gonna be
00:20 - reteaching and touching on a lot of
00:21 - those aspects which i'm gonna consider
00:24 - trivial now i'm gonna be teaching some
00:26 - more advanced topics so if you guys are
00:28 - interested in that make sure you watch
00:30 - until the end of the series and you go
00:32 - through all the videos there's a lot of
00:33 - the stuff I'm gonna do is gonna add on
00:35 - as we keep going on videos something
00:38 - I've shown in the previous video I'm
00:39 - gonna add on to it in the next one and
00:41 - these videos are gonna be a really good
00:42 - way to enhance your programming
00:44 - knowledge and to learn a lot more about
00:45 - Python that being said a lot of the
00:48 - stuff I'm gonna show here is specific to
00:50 - Python I'm and probably will not work in
00:52 - other programming languages that being
00:54 - said let's get ahead and go ahead and
00:56 - get started with our first video and
00:58 - this one is gonna be optional parameters
01:00 - now this is probably one of the simplest
01:02 - topics that I'm gonna cover in this
01:03 - series but I figured it would be a good
01:04 - starting point so let's just go out go
01:07 - ahead and go over what a parameter is so
01:11 - you should already know this but just to
01:12 - catch some of you guys up there I have a
01:14 - function here I've defined I call it
01:16 - func it returns X to the power of 2 and
01:19 - our parameter in this case would be X
01:21 - anything in this bracket is a parameter
01:23 - note you can have multiple parameters so
01:25 - I'm gonna have X Y Z and so on now what
01:29 - we want to do is we want to create
01:30 - something called an optional parameter
01:32 - now again sorry the argument here so
01:36 - when I call my function I set call
01:37 - equals func five our argument five is
01:40 - passed into the parameter X X is used
01:42 - here and then if I run my program so I'm
01:45 - running it here oops
01:47 - except to drag my console over it's on a
01:49 - different window right now oh and I've
01:51 - accidentally opened up something else
01:52 - now haven't I the second guy server that
01:57 - okay I have my console which is here it
02:00 - prints 25 to the screen like expected
02:03 - okay so now we want to create something
02:05 - called an optional parameter so the
02:08 - whole point of an optional parameter so
02:10 - that we don't always have to keep typing
02:11 - in parameters
02:13 - especially if we have more than one that
02:16 - we have to type in and can get tedious
02:17 - so the way that we can do this and it's
02:19 - actually really simple and it's
02:20 - extremely useful I'll show you in a
02:22 - different example later simply beside
02:24 - your parameter so this case X just put
02:26 - an equal sign and then put what you want
02:28 - its default value to be so in this case
02:30 - I'm just gonna put one okay so now what
02:34 - happens is if I call my function and I
02:37 - don't give it a value for x its simply
02:39 - gonna use one so we can show that so
02:42 - again run the program and I get one
02:44 - because 1 ^ 2 well is 1 and I didn't put
02:47 - anything in here and I didn't get an
02:49 - error now notice if I get rid of this
02:51 - equals 1 and I try to call we get an
02:53 - error because it's missing a potential
02:55 - argument X right so let's put that back
02:59 - x equals 1 now what happens if I do put
03:02 - something in the brackets here my
03:03 - function call so for example like this
03:05 - with like 5 when I run the program now
03:07 - we get 25 so if you ever put anything in
03:11 - your function instead of the like
03:14 - default / instead of just leaving it
03:16 - blank in this case then it's gonna
03:18 - overwrite this default parameter and
03:20 - it's gonna make X equal to 5 instead of
03:22 - 1 now you might say well why is this
03:24 - useful I'm gonna show you an example in
03:26 - just a second but I want to show how you
03:27 - can use multiple optional parameters and
03:30 - how you can mix them with null and
03:31 - optional parameters so let's just
03:33 - rewrite this function and in this case
03:35 - I'm gonna take two parameters I'm just
03:37 - gonna say like word and currents all
03:42 - right let's say frequency like this okay
03:44 - now all I'm gonna do in this function is
03:47 - I'm simply gonna print to the screen
03:49 - word x frequency like that okay and then
03:56 - here in my function call my word I'm
03:58 - gonna say is Tim and frequency 5 now
04:02 - this should just print to the screen I
04:04 - do this and it does we get Tim Tim Tim
04:08 - Tim now what if I wanted to make the
04:10 - frequency an optional parameter so all
04:13 - we have to do here is I'm going to
04:14 - change my frequency to be a default of 1
04:17 - so that means now I have a parameter
04:20 - that's not optional which is word and a
04:22 - parameter that is optional frequency so
04:25 - when I run the program by just
04:26 - in my needed parameter I get Tim and
04:29 - just one time because that's the default
04:31 - value of frequency again we don't get an
04:34 - error like you might expect and then
04:37 - same thing if I want to change the
04:39 - frequency so maybe I want to make the
04:40 - frequency ten all I do is I type in a
04:43 - number for frequency so corresponding
04:45 - and then when I run the program
04:47 - I get Tim and then ten times like that
04:51 - now what happens if I do something like
04:53 - this and I put 10 here instead of
04:56 - frequency well you'll see what happens
04:58 - we get 10 because 10 now is word and
05:01 - frequency is 1 and 10 times 1 well is
05:04 - equal to 10 okay so now let's go to
05:08 - multiple optional parameters so now I'm
05:10 - gonna say add and frequency and I won't
05:15 - add to L so be an optional parameters in
05:17 - this case we can say is equal to 5
05:18 - frequency is equal to 1 okay
05:21 - so what I'm gonna do now is we're just
05:23 - gonna say word is times frequency plus
05:28 - add like that and now in this case same
05:33 - thing I'll just do a word in this case
05:35 - we'll say hello
05:37 - so our default value for ADD is 5 our
05:40 - default frequency for our default value
05:43 - for frequency is 1 so we should have 5
05:45 - plus 1 which is 6 multiplied by word so
05:48 - we should get hello 6 times and we do
05:51 - and now again I can put put in a value
05:53 - for add so in this case I'm going to say
05:55 - add is equal to zero frequency is still
05:58 - gonna be 1 so now I get just one time to
06:02 - the screen hello
06:03 - so the way it works is when you have
06:05 - optional parameters is say I wanted to
06:07 - type in a value for frequency but I
06:09 - wanted to leave add as the default value
06:12 - I'm not actually able to do that because
06:14 - of the order in which I've set these
06:15 - parameters so if I wanted add to still
06:17 - be 5 but I want to change frequency I
06:19 - would have to put 5 for ADD and then I
06:22 - could put a value for frequency like 3
06:24 - or something like that ok and again if
06:27 - we show this add is gonna stay at 5
06:29 - frequency is gonna be 3 so we should get
06:31 - hello 8 times in which we do now if I
06:35 - wanted to change that around and I
06:38 - wanted to say
06:39 - okay well I want ad to always be
06:41 - defaulted to a value like five and I'm
06:43 - hardly gonna change that but frequency
06:45 - is gonna be something I'd change a lot
06:46 - when I use my function then we would
06:49 - just flip these around so we'd save
06:50 - frequency equals one equals five like
06:54 - that so now this is gonna go to
06:56 - frequency and this is gonna go to ad I'm
07:00 - like so I hope that makes sense so I'm
07:02 - just gonna go down and I'm gonna show
07:03 - some better examples to why this is kind
07:07 - of more useful so I've just created this
07:09 - class here called car all right and I
07:13 - have you can see a bunch of parameters
07:15 - so I have five up here not including
07:17 - self and then just one here in its
07:19 - method called display now these optional
07:21 - parameters can be used inside of methods
07:23 - as methods really are just functions
07:25 - that apply to a class right so I'll show
07:27 - you right now how this class kind of
07:29 - works I've just created a new object
07:31 - called whip it's a new car object and we
07:34 - have Ford Fusion 2012 new and these are
07:37 - the parameters that it takes right so it
07:38 - takes to make the model year condition
07:40 - and kilometers all of these are required
07:42 - I need to type these in no matter what
07:44 - the next one that I have my method is
07:46 - display and what this is gonna do is
07:48 - simply just print out to the screen one
07:51 - of two messages if show all is equal to
07:53 - true it's gonna print out everything
07:55 - including that condition and the
07:56 - kilometres of the car if not it's just
07:58 - gonna print out the make model and year
08:00 - of the car so let's watch this run on
08:02 - the screen so this car is a Ford Fusion
08:04 - from 2012 it is new it has zero
08:06 - kilometers like so so you can see that
08:08 - this is working well now what if I
08:10 - wanted to say I want condition and I
08:14 - want kilometers to both be optional
08:16 - parameters so typically when you buy a
08:18 - car most people buy new cars so I'm
08:21 - gonna say the condition is going to be
08:22 - defaulted to new and kilometres is going
08:25 - to be equal to zero
08:26 - because if you're buying a new car well
08:28 - then kilometres should be equal to zero
08:30 - so only if I want to I'm gonna change
08:34 - that so now same thing here if I go like
08:37 - this and I run the program we should get
08:40 - the same thing so this car is a Ford
08:42 - Fusion between 12 it is new and has zero
08:44 - climbers and indeed we do we didn't need
08:46 - to type in those parameters because
08:48 - again they were optional next one I'm
08:50 - going to show you is down here and
08:51 - display same thing
08:53 - I can set this equal to something like
08:54 - true so show all equals true and now
08:57 - when I call my display it automatically
09:02 - shows all unless I specify otherwise by
09:05 - typing in false like so and then we get
09:08 - this car is a Ford Fusion from 2012 now
09:11 - this is really useful if you have a lot
09:13 - of different parameters and is
09:15 - especially useful when you're typing and
09:17 - working with classes so that's why I
09:18 - wanted to show you this example I hope
09:20 - that you guys are able to implement this
09:22 - in your programming um anyways that's
09:25 - been it for this video make sure you
09:27 - guys stay tuned for the next one which
09:28 - should be coming out in just a few days
09:32 - [Music]

Cleaned transcript:

hey guys and welcome back to another YouTube video so in today's video i'm going to be starting a new tutorial series on intermediate programming with python so that being said a prerequisite for these videos is gonna be that you know a little bit about python you know the basics you know if statements for loops lists so on as i'm not gonna be reteaching and touching on a lot of those aspects which i'm gonna consider trivial now i'm gonna be teaching some more advanced topics so if you guys are interested in that make sure you watch until the end of the series and you go through all the videos there's a lot of the stuff I'm gonna do is gonna add on as we keep going on videos something I've shown in the previous video I'm gonna add on to it in the next one and these videos are gonna be a really good way to enhance your programming knowledge and to learn a lot more about Python that being said a lot of the stuff I'm gonna show here is specific to Python I'm and probably will not work in other programming languages that being said let's get ahead and go ahead and get started with our first video and this one is gonna be optional parameters now this is probably one of the simplest topics that I'm gonna cover in this series but I figured it would be a good starting point so let's just go out go ahead and go over what a parameter is so you should already know this but just to catch some of you guys up there I have a function here I've defined I call it func it returns X to the power of 2 and our parameter in this case would be X anything in this bracket is a parameter note you can have multiple parameters so I'm gonna have X Y Z and so on now what we want to do is we want to create something called an optional parameter now again sorry the argument here so when I call my function I set call equals func five our argument five is passed into the parameter X X is used here and then if I run my program so I'm running it here oops except to drag my console over it's on a different window right now oh and I've accidentally opened up something else now haven't I the second guy server that okay I have my console which is here it prints 25 to the screen like expected okay so now we want to create something called an optional parameter so the whole point of an optional parameter so that we don't always have to keep typing in parameters especially if we have more than one that we have to type in and can get tedious so the way that we can do this and it's actually really simple and it's extremely useful I'll show you in a different example later simply beside your parameter so this case X just put an equal sign and then put what you want its default value to be so in this case I'm just gonna put one okay so now what happens is if I call my function and I don't give it a value for x its simply gonna use one so we can show that so again run the program and I get one because 1 ^ 2 well is 1 and I didn't put anything in here and I didn't get an error now notice if I get rid of this equals 1 and I try to call we get an error because it's missing a potential argument X right so let's put that back x equals 1 now what happens if I do put something in the brackets here my function call so for example like this with like 5 when I run the program now we get 25 so if you ever put anything in your function instead of the like default / instead of just leaving it blank in this case then it's gonna overwrite this default parameter and it's gonna make X equal to 5 instead of 1 now you might say well why is this useful I'm gonna show you an example in just a second but I want to show how you can use multiple optional parameters and how you can mix them with null and optional parameters so let's just rewrite this function and in this case I'm gonna take two parameters I'm just gonna say like word and currents all right let's say frequency like this okay now all I'm gonna do in this function is I'm simply gonna print to the screen word x frequency like that okay and then here in my function call my word I'm gonna say is Tim and frequency 5 now this should just print to the screen I do this and it does we get Tim Tim Tim Tim now what if I wanted to make the frequency an optional parameter so all we have to do here is I'm going to change my frequency to be a default of 1 so that means now I have a parameter that's not optional which is word and a parameter that is optional frequency so when I run the program by just in my needed parameter I get Tim and just one time because that's the default value of frequency again we don't get an error like you might expect and then same thing if I want to change the frequency so maybe I want to make the frequency ten all I do is I type in a number for frequency so corresponding and then when I run the program I get Tim and then ten times like that now what happens if I do something like this and I put 10 here instead of frequency well you'll see what happens we get 10 because 10 now is word and frequency is 1 and 10 times 1 well is equal to 10 okay so now let's go to multiple optional parameters so now I'm gonna say add and frequency and I won't add to L so be an optional parameters in this case we can say is equal to 5 frequency is equal to 1 okay so what I'm gonna do now is we're just gonna say word is times frequency plus add like that and now in this case same thing I'll just do a word in this case we'll say hello so our default value for ADD is 5 our default frequency for our default value for frequency is 1 so we should have 5 plus 1 which is 6 multiplied by word so we should get hello 6 times and we do and now again I can put put in a value for add so in this case I'm going to say add is equal to zero frequency is still gonna be 1 so now I get just one time to the screen hello so the way it works is when you have optional parameters is say I wanted to type in a value for frequency but I wanted to leave add as the default value I'm not actually able to do that because of the order in which I've set these parameters so if I wanted add to still be 5 but I want to change frequency I would have to put 5 for ADD and then I could put a value for frequency like 3 or something like that ok and again if we show this add is gonna stay at 5 frequency is gonna be 3 so we should get hello 8 times in which we do now if I wanted to change that around and I wanted to say okay well I want ad to always be defaulted to a value like five and I'm hardly gonna change that but frequency is gonna be something I'd change a lot when I use my function then we would just flip these around so we'd save frequency equals one equals five like that so now this is gonna go to frequency and this is gonna go to ad I'm like so I hope that makes sense so I'm just gonna go down and I'm gonna show some better examples to why this is kind of more useful so I've just created this class here called car all right and I have you can see a bunch of parameters so I have five up here not including self and then just one here in its method called display now these optional parameters can be used inside of methods as methods really are just functions that apply to a class right so I'll show you right now how this class kind of works I've just created a new object called whip it's a new car object and we have Ford Fusion 2012 new and these are the parameters that it takes right so it takes to make the model year condition and kilometers all of these are required I need to type these in no matter what the next one that I have my method is display and what this is gonna do is simply just print out to the screen one of two messages if show all is equal to true it's gonna print out everything including that condition and the kilometres of the car if not it's just gonna print out the make model and year of the car so let's watch this run on the screen so this car is a Ford Fusion from 2012 it is new it has zero kilometers like so so you can see that this is working well now what if I wanted to say I want condition and I want kilometers to both be optional parameters so typically when you buy a car most people buy new cars so I'm gonna say the condition is going to be defaulted to new and kilometres is going to be equal to zero because if you're buying a new car well then kilometres should be equal to zero so only if I want to I'm gonna change that so now same thing here if I go like this and I run the program we should get the same thing so this car is a Ford Fusion between 12 it is new and has zero climbers and indeed we do we didn't need to type in those parameters because again they were optional next one I'm going to show you is down here and display same thing I can set this equal to something like true so show all equals true and now when I call my display it automatically shows all unless I specify otherwise by typing in false like so and then we get this car is a Ford Fusion from 2012 now this is really useful if you have a lot of different parameters and is especially useful when you're typing and working with classes so that's why I wanted to show you this example I hope that you guys are able to implement this in your programming um anyways that's been it for this video make sure you guys stay tuned for the next one which should be coming out in just a few days
