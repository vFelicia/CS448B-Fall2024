With timestamps:

00:05 - hello everybody and welcome back so in
00:08 - this video what I'm gonna do is walk you
00:09 - through the first two years of my
00:11 - computer science degree now what that's
00:13 - going to mean is pretty much just going
00:14 - through all the different classes that I
00:16 - had to take discussing how difficult
00:18 - they are what I learned in them and what
00:19 - you can expect from them so this video
00:21 - is really designed for people they're
00:22 - just may be interested in what classes
00:24 - I'm taking
00:25 - or that are actually looking to get into
00:26 - a program like computer science or
00:28 - software engineering and are curious on
00:30 - what to expect and what you're actually
00:31 - gonna be taking especially in those
00:33 - first two years so with that being said
00:35 - let's go ahead and get into the video
00:37 - and look at my first two years of
00:38 - computer science alright so I have my
00:40 - laptop here and what I'm gonna be doing
00:42 - is I'll put it on the screen but I'm
00:43 - just gonna go through my unofficial
00:45 - transcript I'm gonna talk to you about
00:46 - each course I had to take how well I did
00:49 - in that course and then compare that to
00:50 - the average and what I kind of saw
00:52 - across the course and how difficult it
00:54 - actually really was alright so let's go
00:56 - ahead and get started with my 2018 fall
00:58 - term which would have been my first
01:00 - semester in university and that was I
01:02 - guess just about a year and a half ago
01:04 - in this semester what I had to do was
01:06 - take three mandatory courses and I
01:07 - actually had two electives now that's
01:09 - because I kind of went off of my course
01:11 - sequence but I'll tell you which ones
01:13 - were electives and which ones were
01:14 - mandatory for computer science and then
01:16 - again just go through and talked about
01:18 - how difficult these courses were so the
01:20 - courses I had to take in first semester
01:21 - were engineering economics technical
01:24 - report writing introduction of computing
01:26 - one calculus one and introduction to
01:28 - linear algebra now the three mandatory
01:31 - courses out of that were the last three
01:33 - so computing one calc one and linear
01:36 - algebra one and these are actually what
01:38 - are considered some of the most
01:39 - difficult classes for computer science
01:42 - at least in the first year I know a lot
01:43 - of people that struggled with this and
01:45 - you guys can see as I'm popping this up
01:47 - on the screen the averages of these
01:48 - courses which were about 5 so I believe
01:50 - computing one had a 5.03 average calc
01:54 - one at five point four seven and linear
01:56 - algebra had five point two now this is
01:58 - on a ten point oh GPA scale where ten is
02:01 - I believe in ninety plus so like an A+
02:03 - would be a ten and I think that an A is
02:06 - a nine and that's like between 85 and 90
02:09 - or something but that's kind of the
02:11 - range on the ten point oh GPA scale for
02:13 - any of you that
02:13 - confused so let me walk through these
02:15 - classes I'll talk about the computer
02:16 - science one specifically and how
02:18 - difficult they were so computing one is
02:20 - a very easy programming class in my
02:22 - university this was done in Python and
02:24 - this just teaches you fundamental
02:26 - programming concepts so like area
02:28 - follows the datatypes lists sets some
02:31 - standard programming problems nothing
02:33 - too difficult we had a few kind of mini
02:35 - assignments where we had to work on like
02:37 - a card game that was like the biggest
02:38 - assignment we did and then near the end
02:40 - of the semester we got into classes and
02:42 - objects in Python and started just
02:44 - getting an introduction to
02:45 - object-oriented programming so this was
02:47 - not very difficult I think the most
02:49 - advanced topics we covered words
02:50 - object-oriented programming and
02:52 - recursion and that was all of computing
02:54 - one this was done in Python so I found
02:56 - that very easy although you can see by
02:58 - the average that a lot of people did
02:59 - have difficulty with this and this would
03:01 - be definitely a hard course if you've
03:03 - never programmed before moving on I had
03:05 - calc 1 now calculus 1 is actually a
03:07 - fairly difficult math class when it
03:09 - comes to the second semester so what you
03:11 - cover in calc 1 is kind of a general
03:12 - review of grade 12 maths you do like
03:15 - advanced functions math for the first
03:16 - probably I want to say month or 2 where
03:19 - you're just doing derivatives and like
03:21 - problems related to derivatives and then
03:23 - in the second half they kind of flipped
03:25 - things around and you start working in
03:26 - integrals which is definitely a
03:28 - difficult topic for a lot of people and
03:30 - something that personally I struggled a
03:31 - little bit with although it wasn't too
03:33 - bad near the end
03:34 - okay so that was calc 1 probably one of
03:36 - the hardest math classes I've had to
03:38 - take just because of the integrals that
03:40 - we had to do at the end but moving on we
03:42 - had introduction to the linear algebra I
03:44 - know a lot of people had difficulty with
03:46 - this and that's because this is a more
03:48 - abstract math class it's kind of
03:50 - difficult to memorize problems in linear
03:52 - algebra I would say it's a very
03:53 - different way of thinking about math and
03:55 - you're dealing with kind of matrixes and
03:57 - three-dimensional math and it's really
03:59 - cool class but definitely a fairly
04:01 - difficult course so getting those out of
04:03 - the way at the beginning I was
04:04 - definitely a nice relief for me so those
04:06 - were the course I had to take that
04:07 - semester I also took engineering
04:09 - economics and technical report writing
04:10 - technical report writing is mandatory
04:12 - for me but I didn't have to take it that
04:14 - semester this is just an absolutely
04:16 - jokes kind of English class it teaches
04:18 - you about how to write properly in an
04:20 - engineering setting so how do we reduce
04:21 - ambiguity not be vague all that and then
04:24 - engineering economics was just like
04:25 - economy economics class
04:27 - designed for engineers to teach you a
04:28 - little bit about business and accounting
04:31 - and like kind of all these different
04:32 - areas of business almost combined into
04:34 - one and I took that just because I
04:35 - wanted to take that class alright so now
04:37 - we're moving on to the 2019 winter terms
04:39 - this would be first year second semester
04:40 - now the courses I took here was business
04:43 - management digital systems one
04:45 - introduction of computing to calculus
04:47 - two and discrete math for computing so
04:50 - this definitely seems a little bit more
04:51 - complicated than the previous semester
04:52 - and you can see that as we go through
04:54 - here so the first course is introduction
04:56 - to business management now this actually
04:58 - had a extremely low average for me at
05:00 - just under 5.0 so the class average not
05:03 - my average and that was a class that I
05:05 - took because I mean that specialization
05:07 - in business and I had to take that class
05:09 - so that was just pretty much teaching
05:11 - you how to be a manager in a business
05:12 - next we had digital systems one I
05:15 - absolutely hate this course and I just
05:17 - don't like any of the hardware related
05:18 - computing stuff but that's what this
05:20 - course is so digital system teaches you
05:22 - about how computers work on a lower
05:24 - level so about circuits and Gates or
05:26 - gates flip-flops how you can actually do
05:29 - computations in a computer so like we
05:32 - write this code but what does it get
05:33 - translated down into well gets
05:35 - translated down into wires right which
05:37 - are really just zeros or ones on and off
05:39 - and then you kind of learn about binary
05:41 - and hexadecimal and ox octal and all
05:43 - these different East numbering systems
05:45 - and then creating like circuits pretty
05:47 - much so you'll deal with things like
05:49 - multiplexers decoders encoders that's
05:51 - what this does it teaches you how to
05:53 - build digital systems which was cool but
05:55 - definitely not my bread and butter so
05:56 - then we moved to introduction to
05:58 - computing - so this was the second
06:00 - computing class and this was taught in
06:02 - Java this really focused on
06:03 - object-oriented programming and then
06:05 - basic data structures like stacks and
06:07 - queues so this was trying to train you
06:09 - on pretty much working with objects
06:11 - working with classes more advanced data
06:13 - structures so setting up method static
06:15 - methods class methods I would just say
06:17 - this was an object-oriented programming
06:18 - class and that's what it really focused
06:20 - on the projects we had to do in this
06:22 - we're not quite super difficult but they
06:24 - definitely were more involved and I
06:26 - think a lot of people struggled with
06:27 - this class especially the format of the
06:30 - exams which was like a fill in the blank
06:31 - but overall decent class taught in Java
06:34 - and that's kind of what we did in that
06:35 - class which is cover oop and a little
06:38 - bit more advanced kind
06:39 - problems than we had done in computing
06:41 - one okay so now we move on to calculus
06:43 - two now again a lot of people struggled
06:44 - with this class this is an edition of
06:46 - calculus one you can imagine it would
06:48 - probably be more difficult and in this
06:49 - we really just focus way more on
06:51 - integrals and applications of integrals
06:53 - and then a few other topics that I can't
06:56 - think of right now cuz it's been a while
06:57 - since I did that class but that is a
06:59 - more advanced math class and now I'm
07:01 - glad I do not have to take any more
07:02 - calculus these were just the two had to
07:04 - get out of the way I in first year so
07:07 - that's a bit about calc two you can see
07:08 - a class average was probably the lowest
07:10 - I've seen at four point two seven and
07:12 - again that's is because this is a
07:14 - difficult course that does actually
07:15 - require a fair amount of work if you
07:17 - don't put in that work good luck getting
07:19 - a good grade in that class alright next
07:21 - we had discrete math for computing this
07:24 - is a fairly difficult math class so it's
07:26 - pretty interesting and what you would do
07:27 - in this is you learn about logical math
07:29 - so that's probably a pretty bad way to
07:32 - put it but some of the things we covered
07:34 - was like graph theory we did like truth
07:36 - trees we didn't like arguments on logic
07:38 - statements essentially this is like
07:40 - mathematical proofs and this is proofs
07:42 - specifically for computing so
07:44 - essentially trying to take a problem and
07:46 - prove to you that your solution is
07:48 - correct or that something is correct
07:50 - using the logic it's difficult really to
07:52 - explain all the things in this class
07:53 - unless you see it but these are where we
07:55 - did things like logic puzzles right like
07:57 - you know the knights and knaves puzzles
07:59 - knots a thing and yeah that's pretty
08:01 - much discrete mathematics for computing
08:03 - again a lot of people struggled in this
08:05 - class this is difficult when you get to
08:07 - the mathematical proofs that becomes
08:09 - pretty hard you have to pretty much
08:11 - write out full proofs for ridiculous
08:13 - statements like you know if X to the
08:15 - power of E is divisible by five then
08:18 - prove that to P is divisible by six or
08:20 - like stupid stuff like that you got to
08:21 - prove so that was those courses and now
08:23 - we're moving on to the 2019 fall term
08:25 - which would have been last semester for
08:27 - me so first semester of second year so
08:29 - in this semester I took financial
08:31 - accounting computer architecture one-dab
08:33 - structures and algorithms introduction
08:35 - to software engineering and social
08:36 - psychology and everyday life makes
08:38 - perfect sense right that I took that
08:40 - course okay so let's just go through
08:41 - them one by one you can see this
08:42 - semester I did quite well and the first
08:44 - course I took was financial accounting
08:46 - now I actually needed to take this class
08:47 - because I'm in this business
08:48 - specialization this is probably the most
08:50 - useful class I've taken at Universe
08:52 - by far and I would definitely recommend
08:54 - everyone to take an accounting class if
08:56 - they think that they can handle the
08:57 - difficulty of a class like financial
08:59 - accounting personally for me I kind of
09:01 - run a business I have all this stuff
09:02 - going on with money on the side that I
09:03 - need to be able to manage and that
09:05 - definitely helped me a ton understand
09:07 - some fundamental principles behind doing
09:09 - basic accounting which I think is really
09:10 - valuable
09:11 - then I took computer architecture one so
09:13 - this is kind of an add-on like the
09:15 - prerequisite for this course is digital
09:17 - systems one and what this teaches you is
09:19 - actually how computers work on a lower
09:21 - level so I know I said that for digital
09:22 - systems but this is more applicable to
09:24 - an actual computer so you're doing
09:26 - things with like data lines you're
09:28 - writing like assembly language code this
09:30 - is really understanding how a computer
09:31 - actually does arithmetic on values and
09:34 - how you have like registers and you take
09:36 - values from those registers and add them
09:38 - together and store things in memory and
09:39 - it's a cool class it's really nice to
09:41 - understand how those things work but
09:42 - it's a pain and if you're more into
09:44 - software then this class will probably
09:46 - be difficult for you as it was for most
09:47 - of my colleagues with you know 5.37
09:50 - average for that class out of town next
09:52 - we had data structures and algorithms
09:53 - now this is the famous class a lot of
09:55 - people think this class is quite
09:56 - difficult this for me was actually a
09:57 - very easy class and what this taught was
10:00 - just data structures an algorithm so
10:01 - starting with stacks queues linked lists
10:03 - binary trees AVL trees and I think we
10:06 - did red black trees priority queues
10:08 - heaps different sorting algorithms this
10:10 - is a cool class and it's very
10:11 - fundamental for computer science people
10:13 - actually didn't do that poorly in my
10:14 - university in a 6.4 ou was the average
10:16 - of that and that's really what it covers
10:18 - just fundamental data structures and
10:20 - algorithms that you kind of need to know
10:21 - if you're gonna be in computer science
10:23 - so that's that course right there a lot
10:25 - of people get intimidated by that but at
10:26 - least at my university I did not find it
10:28 - crazy different now moving down to
10:29 - introduction to software engineer so
10:31 - this course really tries to teach you
10:33 - about software engineering and this is
10:35 - really more of working in teams setting
10:37 - deadlines like working with github a
10:39 - majority of what we did in this course
10:41 - was learn about actually designing
10:43 - software so looking at ok how do you
10:45 - make a UML how do you make a use case
10:47 - diagram what about an activity diagram
10:49 - what about a sequence diagram all these
10:51 - different things so drawing those out
10:52 - and then also I believe our final
10:54 - project was actually building a full
10:56 - Android app so that was definitely
10:58 - difficult but over the whole semester we
11:00 - pretty much had this time to build this
11:02 - Android application and we had to work
11:04 - in teams of five we had to have a guy
11:06 - hub repository set up and it was
11:08 - definitely a cool interesting class
11:09 - can't say it was super practically
11:11 - useful some of the stuff they were
11:12 - teaching was quite outdated but you know
11:14 - it's a good class to have to teach you
11:15 - how to work in the team and actually get
11:17 - a project done and all these diagrams
11:19 - and UML's and all of that finally social
11:21 - psychology in everyday life um I didn't
11:23 - really pay attention this class at all
11:24 - in fact this was like online exams
11:26 - online midterms so I would just not do
11:28 - anything for the course and then just
11:29 - guess for Thea the exams in the midterm
11:31 - so you know you can see that reflected
11:32 - in my grade don't really need to talk
11:34 - about that this was just an elective I
11:36 - kind of had to take because I have to
11:37 - take electives some of them that are not
11:39 - in like math and computing in business
11:41 - and finally we get to the last semester
11:43 - that I just finished
11:44 - unfortunately there's no averages for
11:46 - these courses but I will walk through
11:47 - what I took and tell you about how
11:49 - difficult they were keep in mind I did
11:51 - the exams for this online so you can see
11:53 - that reflected in my grade okay so the
11:56 - first class I had with social context of
11:58 - business this was again a business class
11:59 - I had to take as part of the
12:00 - specialization this just focuses on a
12:03 - businesses like reputation in society if
12:05 - they're being a good social citizen or
12:08 - they have good social capital how are
12:09 - they giving back to society the
12:11 - community and how does that have an
12:13 - effect on the bottom line that's what
12:14 - that talked about you can see the grade
12:16 - point there next we had discrete
12:17 - structures so this is like the more
12:19 - advanced level of discrete math so the
12:22 - one that I took last semester and
12:23 - discrete structures was definitely a
12:25 - hard class if this was not online I
12:26 - would not done have done this well but
12:29 - this deals with pretty much just
12:30 - mathematical proofs learning a little
12:32 - bit about cryptography and learning how
12:34 - you can pretty well prove algorithms and
12:36 - prove if things are true one of the
12:38 - cooler things we did was induction so
12:40 - you have a base case you add one to it
12:41 - you prove something there I can't get
12:43 - too far into it I don't want to butcher
12:45 - the explanation we talked a little bit
12:46 - about graph theory but this is a really
12:48 - these classes are really fundamental
12:50 - they're cool to understand but they're
12:51 - definitely difficult and I would rank
12:53 - discrete structures as probably the
12:55 - hardest class I've had to take so far
12:56 - I'm just due to the complexity of the
12:59 - proofs and the idea that you have to do
13:01 - a lot of practice proving these kind of
13:03 - crazy statements with mods and exponents
13:06 - and all that to really be successful in
13:08 - that class next we had programming
13:10 - paradigms now what programming paradigms
13:12 - meant was designed to do was essentially
13:14 - teach you about a bunch of different
13:16 - paradigms in programming now I know
13:17 - that's a bad explanation based on the
13:20 - but the idea is like languages like
13:21 - Python and Java are object-oriented
13:23 - programming languages which means they
13:25 - have a unique style to the way you write
13:27 - them but there's other programming
13:28 - languages like golang which is one of
13:30 - the ones we actually learned in this
13:31 - like scheme like Prolog that have
13:34 - different styles and they're known as
13:35 - like logical programming languages
13:37 - imperative programming languages
13:39 - functional programming languages and
13:41 - they just work a little bit differently
13:42 - and it's cool to get an understanding of
13:44 - how all these things actually work and
13:46 - why these languages are different so
13:48 - some things are much better for specific
13:50 - tasks than others but the languages we
13:51 - didn't hear was scheme Prolog go and
13:55 - Java those are the four languages we've
13:56 - learned through the semester and we did
13:58 - projects in each of them interesting
13:59 - wasn't crazy difficult you can see
14:01 - actually not here but I have the average
14:04 - I think on the exam was like 85 or
14:06 - something so people did quite well in
14:07 - that course finally database is one
14:09 - all right so database is one is a pain
14:11 - for a class but this teaches you
14:13 - database systems so SQL code but also
14:16 - like how does a database maintain
14:18 - information how do we back things up in
14:19 - case of like power failures like what is
14:22 - a raid array like pretty much everything
14:23 - about persistent data storage is what
14:25 - this aims to give you like a general
14:27 - foundation in and then the project for
14:29 - this was actually to make a database
14:31 - system like an examples like Airbnb like
14:33 - you had to recreate something that was
14:34 - like a hotel kind of system or like
14:36 - renting property kind of system you had
14:39 - to make the database schema and SQL and
14:41 - then you had to write SQL queries that
14:43 - could return information insert
14:44 - information delete information etc and
14:46 - then finally we have professional
14:48 - practice in computing this class is the
14:49 - easiest course I've taken in university
14:51 - by far and this was literally just
14:53 - trying to teach you um I couldn't even
14:55 - tell you I didn't go to any of the
14:56 - classes I just wrote the stuff just kind
14:58 - of by guessing it was pretty well common
14:59 - sense and this is teaching you like if
15:01 - you're an engineer what do you need to
15:02 - do to practice professionally and be
15:05 - ethical and not break the law
15:07 - that's essentially what this was
15:08 - teaching you to do so that has pretty
15:09 - much been it all of the courses and
15:11 - everything I did in second year and I'll
15:13 - wrap this up by saying that so far
15:14 - honestly I've enjoyed quite a few of
15:16 - these classes I've learned a fair amount
15:17 - I will say that a lot of stuff is
15:19 - definitely outdated it is important and
15:21 - as much as a lot of what I've done so
15:23 - far you've seen has just been straight
15:24 - math or logic those are really important
15:26 - and those have definitely made me a
15:27 - better programmer and a more
15:28 - well-rounded person for sure and I would
15:31 - say that if I decided not to go
15:32 - University I probably would not have the
15:34 - same math background that I do now I
15:36 - probably wouldn't have learned those
15:37 - courses and I can say there's a lot of
15:39 - value especially if you understand what
15:41 - happens in them and even things like
15:42 - computer architecture and digital
15:44 - systems as much as you might not enjoy
15:45 - those courses and I definitely didn't
15:47 - they do actually give you a really good
15:48 - understanding of the lower level of
15:50 - computers which give you an appreciation
15:52 - when you're actually writing code so
15:54 - anyways that has pretty much been it for
15:56 - the two years of computer science again
15:59 - pretty casual video here I hope you guys
16:00 - enjoyed the idea was just to give
16:02 - everyone who kind of wanted to know an
16:04 - idea of what's actually going on at a
16:05 - computer science degree in 2020 and what
16:07 - you can expect from these courses so I
16:09 - hope you guys enjoyed if you did make
16:10 - sure you leave a like subscribe and I
16:12 - will see you in another YouTube video

Cleaned transcript:

hello everybody and welcome back so in this video what I'm gonna do is walk you through the first two years of my computer science degree now what that's going to mean is pretty much just going through all the different classes that I had to take discussing how difficult they are what I learned in them and what you can expect from them so this video is really designed for people they're just may be interested in what classes I'm taking or that are actually looking to get into a program like computer science or software engineering and are curious on what to expect and what you're actually gonna be taking especially in those first two years so with that being said let's go ahead and get into the video and look at my first two years of computer science alright so I have my laptop here and what I'm gonna be doing is I'll put it on the screen but I'm just gonna go through my unofficial transcript I'm gonna talk to you about each course I had to take how well I did in that course and then compare that to the average and what I kind of saw across the course and how difficult it actually really was alright so let's go ahead and get started with my 2018 fall term which would have been my first semester in university and that was I guess just about a year and a half ago in this semester what I had to do was take three mandatory courses and I actually had two electives now that's because I kind of went off of my course sequence but I'll tell you which ones were electives and which ones were mandatory for computer science and then again just go through and talked about how difficult these courses were so the courses I had to take in first semester were engineering economics technical report writing introduction of computing one calculus one and introduction to linear algebra now the three mandatory courses out of that were the last three so computing one calc one and linear algebra one and these are actually what are considered some of the most difficult classes for computer science at least in the first year I know a lot of people that struggled with this and you guys can see as I'm popping this up on the screen the averages of these courses which were about 5 so I believe computing one had a 5.03 average calc one at five point four seven and linear algebra had five point two now this is on a ten point oh GPA scale where ten is I believe in ninety plus so like an A+ would be a ten and I think that an A is a nine and that's like between 85 and 90 or something but that's kind of the range on the ten point oh GPA scale for any of you that confused so let me walk through these classes I'll talk about the computer science one specifically and how difficult they were so computing one is a very easy programming class in my university this was done in Python and this just teaches you fundamental programming concepts so like area follows the datatypes lists sets some standard programming problems nothing too difficult we had a few kind of mini assignments where we had to work on like a card game that was like the biggest assignment we did and then near the end of the semester we got into classes and objects in Python and started just getting an introduction to objectoriented programming so this was not very difficult I think the most advanced topics we covered words objectoriented programming and recursion and that was all of computing one this was done in Python so I found that very easy although you can see by the average that a lot of people did have difficulty with this and this would be definitely a hard course if you've never programmed before moving on I had calc 1 now calculus 1 is actually a fairly difficult math class when it comes to the second semester so what you cover in calc 1 is kind of a general review of grade 12 maths you do like advanced functions math for the first probably I want to say month or 2 where you're just doing derivatives and like problems related to derivatives and then in the second half they kind of flipped things around and you start working in integrals which is definitely a difficult topic for a lot of people and something that personally I struggled a little bit with although it wasn't too bad near the end okay so that was calc 1 probably one of the hardest math classes I've had to take just because of the integrals that we had to do at the end but moving on we had introduction to the linear algebra I know a lot of people had difficulty with this and that's because this is a more abstract math class it's kind of difficult to memorize problems in linear algebra I would say it's a very different way of thinking about math and you're dealing with kind of matrixes and threedimensional math and it's really cool class but definitely a fairly difficult course so getting those out of the way at the beginning I was definitely a nice relief for me so those were the course I had to take that semester I also took engineering economics and technical report writing technical report writing is mandatory for me but I didn't have to take it that semester this is just an absolutely jokes kind of English class it teaches you about how to write properly in an engineering setting so how do we reduce ambiguity not be vague all that and then engineering economics was just like economy economics class designed for engineers to teach you a little bit about business and accounting and like kind of all these different areas of business almost combined into one and I took that just because I wanted to take that class alright so now we're moving on to the 2019 winter terms this would be first year second semester now the courses I took here was business management digital systems one introduction of computing to calculus two and discrete math for computing so this definitely seems a little bit more complicated than the previous semester and you can see that as we go through here so the first course is introduction to business management now this actually had a extremely low average for me at just under 5.0 so the class average not my average and that was a class that I took because I mean that specialization in business and I had to take that class so that was just pretty much teaching you how to be a manager in a business next we had digital systems one I absolutely hate this course and I just don't like any of the hardware related computing stuff but that's what this course is so digital system teaches you about how computers work on a lower level so about circuits and Gates or gates flipflops how you can actually do computations in a computer so like we write this code but what does it get translated down into well gets translated down into wires right which are really just zeros or ones on and off and then you kind of learn about binary and hexadecimal and ox octal and all these different East numbering systems and then creating like circuits pretty much so you'll deal with things like multiplexers decoders encoders that's what this does it teaches you how to build digital systems which was cool but definitely not my bread and butter so then we moved to introduction to computing so this was the second computing class and this was taught in Java this really focused on objectoriented programming and then basic data structures like stacks and queues so this was trying to train you on pretty much working with objects working with classes more advanced data structures so setting up method static methods class methods I would just say this was an objectoriented programming class and that's what it really focused on the projects we had to do in this we're not quite super difficult but they definitely were more involved and I think a lot of people struggled with this class especially the format of the exams which was like a fill in the blank but overall decent class taught in Java and that's kind of what we did in that class which is cover oop and a little bit more advanced kind problems than we had done in computing one okay so now we move on to calculus two now again a lot of people struggled with this class this is an edition of calculus one you can imagine it would probably be more difficult and in this we really just focus way more on integrals and applications of integrals and then a few other topics that I can't think of right now cuz it's been a while since I did that class but that is a more advanced math class and now I'm glad I do not have to take any more calculus these were just the two had to get out of the way I in first year so that's a bit about calc two you can see a class average was probably the lowest I've seen at four point two seven and again that's is because this is a difficult course that does actually require a fair amount of work if you don't put in that work good luck getting a good grade in that class alright next we had discrete math for computing this is a fairly difficult math class so it's pretty interesting and what you would do in this is you learn about logical math so that's probably a pretty bad way to put it but some of the things we covered was like graph theory we did like truth trees we didn't like arguments on logic statements essentially this is like mathematical proofs and this is proofs specifically for computing so essentially trying to take a problem and prove to you that your solution is correct or that something is correct using the logic it's difficult really to explain all the things in this class unless you see it but these are where we did things like logic puzzles right like you know the knights and knaves puzzles knots a thing and yeah that's pretty much discrete mathematics for computing again a lot of people struggled in this class this is difficult when you get to the mathematical proofs that becomes pretty hard you have to pretty much write out full proofs for ridiculous statements like you know if X to the power of E is divisible by five then prove that to P is divisible by six or like stupid stuff like that you got to prove so that was those courses and now we're moving on to the 2019 fall term which would have been last semester for me so first semester of second year so in this semester I took financial accounting computer architecture onedab structures and algorithms introduction to software engineering and social psychology and everyday life makes perfect sense right that I took that course okay so let's just go through them one by one you can see this semester I did quite well and the first course I took was financial accounting now I actually needed to take this class because I'm in this business specialization this is probably the most useful class I've taken at Universe by far and I would definitely recommend everyone to take an accounting class if they think that they can handle the difficulty of a class like financial accounting personally for me I kind of run a business I have all this stuff going on with money on the side that I need to be able to manage and that definitely helped me a ton understand some fundamental principles behind doing basic accounting which I think is really valuable then I took computer architecture one so this is kind of an addon like the prerequisite for this course is digital systems one and what this teaches you is actually how computers work on a lower level so I know I said that for digital systems but this is more applicable to an actual computer so you're doing things with like data lines you're writing like assembly language code this is really understanding how a computer actually does arithmetic on values and how you have like registers and you take values from those registers and add them together and store things in memory and it's a cool class it's really nice to understand how those things work but it's a pain and if you're more into software then this class will probably be difficult for you as it was for most of my colleagues with you know 5.37 average for that class out of town next we had data structures and algorithms now this is the famous class a lot of people think this class is quite difficult this for me was actually a very easy class and what this taught was just data structures an algorithm so starting with stacks queues linked lists binary trees AVL trees and I think we did red black trees priority queues heaps different sorting algorithms this is a cool class and it's very fundamental for computer science people actually didn't do that poorly in my university in a 6.4 ou was the average of that and that's really what it covers just fundamental data structures and algorithms that you kind of need to know if you're gonna be in computer science so that's that course right there a lot of people get intimidated by that but at least at my university I did not find it crazy different now moving down to introduction to software engineer so this course really tries to teach you about software engineering and this is really more of working in teams setting deadlines like working with github a majority of what we did in this course was learn about actually designing software so looking at ok how do you make a UML how do you make a use case diagram what about an activity diagram what about a sequence diagram all these different things so drawing those out and then also I believe our final project was actually building a full Android app so that was definitely difficult but over the whole semester we pretty much had this time to build this Android application and we had to work in teams of five we had to have a guy hub repository set up and it was definitely a cool interesting class can't say it was super practically useful some of the stuff they were teaching was quite outdated but you know it's a good class to have to teach you how to work in the team and actually get a project done and all these diagrams and UML's and all of that finally social psychology in everyday life um I didn't really pay attention this class at all in fact this was like online exams online midterms so I would just not do anything for the course and then just guess for Thea the exams in the midterm so you know you can see that reflected in my grade don't really need to talk about that this was just an elective I kind of had to take because I have to take electives some of them that are not in like math and computing in business and finally we get to the last semester that I just finished unfortunately there's no averages for these courses but I will walk through what I took and tell you about how difficult they were keep in mind I did the exams for this online so you can see that reflected in my grade okay so the first class I had with social context of business this was again a business class I had to take as part of the specialization this just focuses on a businesses like reputation in society if they're being a good social citizen or they have good social capital how are they giving back to society the community and how does that have an effect on the bottom line that's what that talked about you can see the grade point there next we had discrete structures so this is like the more advanced level of discrete math so the one that I took last semester and discrete structures was definitely a hard class if this was not online I would not done have done this well but this deals with pretty much just mathematical proofs learning a little bit about cryptography and learning how you can pretty well prove algorithms and prove if things are true one of the cooler things we did was induction so you have a base case you add one to it you prove something there I can't get too far into it I don't want to butcher the explanation we talked a little bit about graph theory but this is a really these classes are really fundamental they're cool to understand but they're definitely difficult and I would rank discrete structures as probably the hardest class I've had to take so far I'm just due to the complexity of the proofs and the idea that you have to do a lot of practice proving these kind of crazy statements with mods and exponents and all that to really be successful in that class next we had programming paradigms now what programming paradigms meant was designed to do was essentially teach you about a bunch of different paradigms in programming now I know that's a bad explanation based on the but the idea is like languages like Python and Java are objectoriented programming languages which means they have a unique style to the way you write them but there's other programming languages like golang which is one of the ones we actually learned in this like scheme like Prolog that have different styles and they're known as like logical programming languages imperative programming languages functional programming languages and they just work a little bit differently and it's cool to get an understanding of how all these things actually work and why these languages are different so some things are much better for specific tasks than others but the languages we didn't hear was scheme Prolog go and Java those are the four languages we've learned through the semester and we did projects in each of them interesting wasn't crazy difficult you can see actually not here but I have the average I think on the exam was like 85 or something so people did quite well in that course finally database is one all right so database is one is a pain for a class but this teaches you database systems so SQL code but also like how does a database maintain information how do we back things up in case of like power failures like what is a raid array like pretty much everything about persistent data storage is what this aims to give you like a general foundation in and then the project for this was actually to make a database system like an examples like Airbnb like you had to recreate something that was like a hotel kind of system or like renting property kind of system you had to make the database schema and SQL and then you had to write SQL queries that could return information insert information delete information etc and then finally we have professional practice in computing this class is the easiest course I've taken in university by far and this was literally just trying to teach you um I couldn't even tell you I didn't go to any of the classes I just wrote the stuff just kind of by guessing it was pretty well common sense and this is teaching you like if you're an engineer what do you need to do to practice professionally and be ethical and not break the law that's essentially what this was teaching you to do so that has pretty much been it all of the courses and everything I did in second year and I'll wrap this up by saying that so far honestly I've enjoyed quite a few of these classes I've learned a fair amount I will say that a lot of stuff is definitely outdated it is important and as much as a lot of what I've done so far you've seen has just been straight math or logic those are really important and those have definitely made me a better programmer and a more wellrounded person for sure and I would say that if I decided not to go University I probably would not have the same math background that I do now I probably wouldn't have learned those courses and I can say there's a lot of value especially if you understand what happens in them and even things like computer architecture and digital systems as much as you might not enjoy those courses and I definitely didn't they do actually give you a really good understanding of the lower level of computers which give you an appreciation when you're actually writing code so anyways that has pretty much been it for the two years of computer science again pretty casual video here I hope you guys enjoyed the idea was just to give everyone who kind of wanted to know an idea of what's actually going on at a computer science degree in 2020 and what you can expect from these courses so I hope you guys enjoyed if you did make sure you leave a like subscribe and I will see you in another YouTube video
