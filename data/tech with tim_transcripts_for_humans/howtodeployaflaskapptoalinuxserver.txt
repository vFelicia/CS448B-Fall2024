With timestamps:

00:00 - hello everybody and welcome to the final
00:01 - video in the flash tutorial series we're
00:03 - actually going to take this kind of
00:05 - minimal website that we built and deploy
00:07 - this on to a Linux server specifically
00:09 - using Ubuntu now the reason I'm doing
00:11 - this rather than using Heroku or
00:13 - something like that is because I want to
00:14 - show you guys how you know you can do
00:16 - this yourself just using a bare-bones
00:17 - you know headless Linux server it's it
00:20 - probably the cheapest option for most of
00:22 - you if you're gonna be doing website
00:23 - hosting gives you the most flexibility
00:25 - in terms of what you're able to do and
00:26 - just a good skill to have since we're
00:28 - gonna be doing today
00:29 - a bulk of how I've learned to do this is
00:31 - actually from this website here I would
00:34 - say that it's maybe a little bit
00:35 - outdated there's a bunch of stuff in
00:36 - here we don't actually need to do so
00:38 - that's why I'm not just you know kind of
00:40 - refer you directly to this page but I
00:42 - will leave a link to it in the
00:42 - description because it has helped me
00:44 - learn kind of about this process anyways
00:47 - what we're gonna start by doing is just
00:49 - downloading some software and then we're
00:51 - actually gonna set up a linux server and
00:53 - we'll talk about that more in a second
00:54 - we need to download putty some of you
00:56 - probably already have this but I'll
00:57 - leave a link to it in the description
00:59 - down below it's free software we're also
01:00 - gonna download winscp which is going to
01:03 - allow us to do some file transfer
01:05 - between our computer and the linux
01:06 - server that we're gonna be setting up
01:07 - again these will be linked to the
01:09 - description download that software and
01:11 - then we're gonna talk about lonoa
01:12 - quickly which is actually the sponsor of
01:14 - this video and it's going to allow you
01:15 - guys to be hosting this website for free
01:17 - without having to pay for any server
01:20 - provider at least while you're testing
01:22 - this out so essentially the low note has
01:23 - been kind enough to sponsor this video
01:25 - they're gonna be giving you guys $20
01:26 - free credit towards your first Linux
01:28 - server now this will actually allow you
01:30 - to use the most basic plan on the node
01:32 - which is five dollars a month for four
01:33 - months for free so it's awesome if
01:35 - you're just doing some development
01:36 - testing some stuff out whatever Web Apps
01:38 - you want to use you don't necessarily
01:39 - have to make a website you can do pretty
01:42 - much whatever you want with len√¥tre if
01:44 - it runs on Linux it will run on low note
01:45 - they have an awesome support team
01:47 - it's 100% human it's 24/7 they're always
01:51 - willing to help you out they've helped
01:52 - me out before personally and to deploy
01:54 - your server just hit the link in the
01:55 - description down below and it look you
01:57 - guys you know that free $20 so I'm gonna
01:59 - click deploy my Linux server again that
02:01 - link will be in the description you can
02:03 - also use the discount code twt 19 I'm
02:06 - just going to set up a basic linux
02:08 - server so i'm going to go here to create
02:10 - create a Nuala note i'm gonna choose
02:12 - my distribution which I'm gonna pick it
02:14 - bun two four so a bun to nineteen point
02:17 - ten you can also actually set these up
02:19 - with one click images unfortunately
02:21 - there's not one for a flask application
02:22 - but if you're doing something like
02:24 - WordPress or I don't know creating a
02:26 - minecraft server then you can actually
02:28 - just click one click you can click these
02:30 - and that everything you need will
02:31 - actually be installed on your server
02:32 - automatically which is pretty nice so
02:34 - let's go back to distributions for
02:36 - Regions oh I need to pick a bunch you
02:38 - again so I'm just gonna go the most
02:39 - recent version of a bunch of you guys
02:41 - can pick whatever you want for regions
02:43 - pick whatever you want I'm closest to
02:45 - Toronto so I'm just gonna pick Toronto
02:47 - Ontario but again they have all these
02:48 - different data centers that you can
02:50 - choose from okay so for the plans I'm
02:52 - gonna recommend to you guys that you
02:54 - don't need anything crazy here again you
02:55 - have your free $20 credit so I would
02:57 - just go with the most basic plan which
02:59 - is nano duan gigabyte you can see how
03:01 - much it cost per hour it's literally
03:03 - like fractions of a cent and then for
03:05 - the name I'm just gonna call this a test
03:08 - because while this is gonna be a test
03:09 - for us right now for the password of our
03:12 - server make sure you guys remember this
03:15 - mines weak but that's fine you're
03:17 - probably gonna want to make this a
03:18 - strong password as if someone has your
03:19 - server IP address which is pretty easy
03:21 - to get they can actually log into your
03:23 - server if they can guess this password
03:25 - great okay so once we've done that we'll
03:27 - click create this is just gonna take a
03:29 - second to boot up and once this is done
03:31 - we'll be back and we'll go into the next
03:32 - steps okay so that booted up now so what
03:34 - we're actually gonna do is go to this
03:36 - networking tab you should see this under
03:38 - your server and I just want to make it
03:39 - clear that you know you guys don't
03:41 - necessarily only have to have one server
03:43 - here so while you have this $20 credit
03:45 - you can create another loan owed you can
03:47 - use it for whatever you want you can use
03:48 - those one-click so you can upload your
03:50 - own images actually if you want to put
03:51 - those on the server and you know you can
03:53 - just use it for other things so don't
03:55 - think you can only have one server you
03:57 - could have multiple with that $20 credit
03:59 - anyways what I'm gonna do is I'm gonna
04:01 - grab the IP address that is here so it
04:03 - says this under access SSH access it
04:06 - says root at and what we're gonna do is
04:07 - just copy this so whatever this IP
04:09 - address is I'm gonna open up my putty
04:11 - window which I'm assuming you guys have
04:13 - already downloaded I'll zoom in on this
04:15 - you guys can see and for the hostname
04:17 - we're gonna type in the hostname that is
04:19 - for our server so whatever one we found
04:21 - from the Linode website then I'm just
04:24 - gonna change the text size of this
04:26 - to make it a little bit bigger so that
04:27 - you guys can actually read it while I go
04:28 - through this so I'm gonna change this to
04:30 - 22 and then inside a putty we're just
04:33 - gonna save this as a session so I
04:35 - actually have flask app already here so
04:37 - what I'm gonna do is highlight this and
04:38 - hit save and what that's gonna do is
04:40 - save this IP address and save that text
04:43 - size so every time I go in here I can
04:44 - just click on flask app click load it
04:47 - will load this IP address for me load
04:49 - all my settings I can click open I can
04:51 - get into that quickly good idea to do
04:53 - that if you guys don't have any here
04:55 - what you can do is just give this a name
04:57 - so like hello hit save and then it will
04:59 - save it for you so you can see we have
05:00 - hello now saved like that open this up
05:03 - and when we open this up we're gonna get
05:04 - a warning that says warning potential
05:06 - security breach just click yes and then
05:08 - we'll be logged in and ready to go okay
05:10 - so what we need to do is log in as the
05:12 - root user so the user name is gonna be
05:14 - root password is gonna be whatever that
05:15 - password is you set when we were setting
05:17 - up this server and now we should be in
05:19 - here and we should be ready to start
05:20 - typing some commands and getting some
05:22 - things done so the first thing that we
05:24 - need to do is actually install Apache
05:26 - on our server now I think that's how you
05:29 - say it Apache Apache I don't know the
05:31 - actual name but anyways to do that we're
05:33 - gonna start off by just doing a system
05:35 - update to make sure everything's good so
05:36 - sudo apt update like that give this a
05:39 - second it'll run through and once that's
05:41 - done we'll move on to the next step okay
05:43 - so we finished that now and what we're
05:44 - gonna do is install Apache so to do that
05:47 - we're gonna say sudo apt install Apache
05:50 - - I believe that's correct
05:52 - it's gonna pop up a thing that says you
05:54 - want to install this yes or no we'll hit
05:56 - Y go ahead and hit enter wait for this
05:59 - to load and then again we'll go into the
06:00 - next step and test that Apache is
06:01 - actually up and running and working okay
06:03 - alright so that is finished now what
06:05 - we're gonna do is just make sure that
06:06 - this worked properly we're gonna type
06:08 - Apache - - version if we get some output
06:11 - here that's non error so we see the
06:13 - server version and the server build we
06:14 - are all good to go and we are ready to
06:16 - move on to the next step which is
06:17 - actually configuring our firewall now
06:19 - since this is a Linux server and I guess
06:21 - we're hosting the samel node by default
06:23 - most of these have firewalls and they
06:25 - don't actually let Apache through so we
06:27 - have to make sure that it's gonna go
06:28 - through so that people can access this
06:29 - so to do that we're gonna check what the
06:32 - services are for our firewall and then
06:34 - it will just add the appropriate one so
06:36 - in this case we're gonna type sudo UFW
06:39 - list like that and then you'll see that
06:41 - we have a pachi pop up here you can see
06:43 - these other two you don't have to worry
06:44 - about those necessarily what we're gonna
06:46 - do is just add this to an aloud service
06:48 - for for a firewall serene it's a pseudo
06:51 - you have W allow and then single
06:53 - quotation marks appache like that now
06:56 - make sure you type this line exactly you
06:58 - don't need the full you don't need to
06:59 - secure this is fine and then you should
07:01 - see that the rules are updated and now
07:03 - this is allowed in the firewall ok so
07:05 - now that we've done that the next step
07:06 - is just to configure Apache and make
07:08 - sure it's actually running properly so
07:10 - to do this we're gonna say sudo
07:11 - systemctl and then I'm just gonna look
07:14 - at my other screen to make sure I do
07:15 - this right status and then in single
07:17 - quotes Apache like that you should see
07:20 - oh my apologies on that so I did single
07:23 - quotes Apache but I guess I was reading
07:25 - my wrong thing it's actually gonna be a
07:26 - pod sheet too and when we do that so we
07:28 - say sudo ufw where's that sudo systemctl
07:32 - status apache - not this single quotes
07:36 - Apache you should see some green text
07:38 - that says active running and you should
07:40 - get that little green dot there if you
07:41 - get that this means it's running
07:42 - everything's fine you've completed these
07:44 - steps we're ready to move forward now to
07:46 - get out of this we're just gonna hit
07:47 - ctrl C on our keyboard that should exit
07:50 - out of that and we'll be ready to move
07:52 - on to the next step which is to install
07:54 - a few libraries now this one's kind of a
07:56 - long line again it'll be in the
07:57 - description so you guys can just copy
07:58 - them if you want we're gonna say sudo
08:00 - apt - get install and then in this case
08:04 - Lib Apache - - mod - WSGI and then we're
08:09 - gonna do space Python - dev now I know
08:12 - that was a lot but essentially what this
08:14 - is gonna do is just install some
08:15 - libraries that we need for WSGI which is
08:17 - kind of how flask runs I'm not really an
08:19 - expert on this so I'm not gonna talk to
08:21 - detail because I don't want to make any
08:23 - you know horrible mistakes and mislead
08:25 - you guys but essentially that was the
08:26 - command right here sudo apt we get all
08:29 - that we'll hit yes go ahead and continue
08:32 - okay so now we've done most of the setup
08:35 - that we actually need to do and what
08:37 - we're gonna do now is set up a few
08:39 - directories and get into the right area
08:40 - where we're actually gonna place our
08:41 - flask application then we'll do a few
08:43 - more configurations and we should be
08:45 - good to go and actually host this flask
08:46 - app so what I'm gonna do is CD into var
08:51 - ww slash now this is gonna bring you to
08:54 - where you need to put your flask
08:56 - application now I believe you can put
08:58 - this somewhere else but this is actually
09:00 - I don't know I've only ever tried it in
09:02 - this location so I would recommend put
09:04 - it here just follow along with me get
09:06 - into this directory and we'll actually
09:07 - gonna create a few more directories now
09:09 - we're gonna start by just making a new
09:11 - directory which is gonna be called web
09:13 - app now if you name this something
09:16 - different make sure you remember that
09:18 - name and wherever you see me type web
09:20 - app you type that name okay so the names
09:22 - here are gonna be very important a big
09:24 - mistake a lot of you guys will have is
09:25 - you name it something different you
09:27 - forget you name it something different
09:28 - and then you're gonna be using my script
09:30 - which is referencing this directory so
09:32 - just make sure you know if you want to
09:33 - make sure this works just name
09:35 - everything the exact same as me
09:36 - so web app like that is what I'm gonna
09:38 - go with now that I have that I'm going
09:40 - to actually I don't need to CD into
09:43 - there right now um or do i you know what
09:46 - yeah let's let's CD into web app and now
09:49 - we're gonna just install some Python
09:50 - stuff and then we'll actually be good to
09:52 - go and drag in some files so what I'm
09:54 - gonna do is start by installing Python
09:57 - and pip so I'm gonna say sudo apt - get
10:01 - install oops Python - pip so this is
10:06 - gonna install pip make sure that we have
10:08 - that correctly and then once we have pip
10:10 - we're actually going to install flask
10:11 - we're gonna install flask SQL alchemy
10:13 - and then we will have the Python
10:15 - libraries that can actually run our
10:16 - Python code from the Apache web server
10:19 - or whatever it is that's gonna be doing
10:21 - that okay so now that we have this what
10:23 - we're gonna do is install flask and
10:25 - we're gonna install flask SQL alchemy so
10:27 - this is the exact same as we've done in
10:29 - previous tutorials so pip install flask
10:32 - like that wait for that to run through
10:34 - and then now we're gonna do SQL alchemy
10:36 - so pip install flask underscore SQL
10:39 - alchemy like that um and there we go
10:43 - once this goes through we will be good
10:45 - to go and now we're actually gonna bring
10:46 - our flask app on to this which is going
10:48 - to involve us using a different piece of
10:50 - software so I'm gonna open up winscp
10:52 - which is actually just a file transfer
10:54 - protocol and what we're gonna do is
10:56 - setup a new kind of entry in here login
10:59 - to our server and then transfer some
11:01 - files over this just makes it easier
11:03 - than having to actually copy and pay
11:05 - stuff because no one really wants to do
11:07 - that so what we need to get to start is
11:09 - the IP address of our server so good job
11:11 - I left this open because I forgot so I'm
11:13 - gonna copy that
11:14 - that's my IP address I'm going to put it
11:17 - in here so if you guys are here you
11:19 - might actually need to click new site my
11:20 - apologies
11:21 - you're gonna put the hostname as
11:22 - whatever your IP address is the username
11:24 - is root you can leave the password as
11:26 - blank for now and then go ahead and hit
11:28 - save when you do that it's gonna bring
11:30 - up a window save this as whatever you
11:32 - want I'm just gonna say test because I
11:34 - probably will be deleting this after and
11:35 - then I'm gonna go ahead and go in and
11:37 - log in now it's gonna say update add all
11:40 - this stuff for you if it just says add
11:42 - you're gonna hit add for me I'm just
11:45 - gonna go ahead and hit update and then
11:47 - I'm going to sign in with the correct
11:50 - password so whatever that password was
11:52 - that you set up as your root password
11:53 - that's what you need to sign in with now
11:55 - you should be in the root directory
11:56 - we're actually gonna go back one
11:58 - directory by just we can double click on
12:00 - that thing that's right there and we're
12:02 - gonna go to a www folder which is gonna
12:04 - be under bar so we're gonna find all of
12:06 - this we're gonna look for var which is
12:08 - at the bottom
12:09 - we're gonna go to w-w-which conveniently
12:11 - is at the bottom as well and now you
12:13 - should see that we have this folder web
12:14 - app which was actually what I have
12:16 - created from the terminal so what I'm
12:19 - gonna do now is open up this folder and
12:21 - inside here is where I'm actually going
12:23 - to put my flask application now I'm
12:25 - assuming you have already created a
12:27 - flask application that's why you're
12:28 - going to be deploying one but there is a
12:30 - few kind of nuances that we have to
12:32 - think about when we do this so I'm gonna
12:33 - find my flask app I'll be right back and
12:35 - I'll talk about how we add that ok so I
12:37 - found my flask application you guys can
12:39 - see these are the files need to be using
12:40 - so I have my static folder my templates
12:42 - folder views an it and then users
12:45 - sqlite3 now yours might look slightly
12:48 - different than this obviously if you
12:49 - create a different flask app things that
12:51 - you have to make sure are the same you
12:53 - have to make sure you have a static
12:54 - folder you have to make sure you have a
12:56 - templates folder and you have to make
12:58 - sure that the starting point of your
12:59 - application is from an it PI so
13:02 - underscore your net underscore
13:04 - underscore PI that needs to be the file
13:06 - that's gonna start your application so
13:08 - just make sure that you have those three
13:10 - constraints so static templates that an
13:12 - it file and then you should be good to
13:14 - go and so long as this flask app runs
13:16 - properly and there's no Python
13:18 - when you're doing it on your kind of own
13:19 - development side so not from the server
13:21 - this will work fine so I'm gonna drag
13:24 - these files into my web app so it's as
13:27 - easy as that this is the file transfer
13:29 - just from my Windows Explorer you can
13:31 - also do it from this left side here
13:33 - where you can just find the files and
13:35 - transfer them over this one I find
13:37 - easier what I'm actually gonna do is
13:38 - something weird now where I create a new
13:41 - folder or new directory so like this and
13:44 - I'm gonna call it the exact same thing
13:46 - that I've been calling my other stuff so
13:48 - in this case web app I mean create
13:49 - another folder called web app and I'm
13:51 - gonna take all of these files so
13:53 - everything that I dragged in and I'm
13:54 - gonna put them inside of that folder so
13:57 - I guess I could have created that folder
13:58 - first but regardless what we're gonna
14:00 - have our structure looking like is we
14:02 - have this web app folder inside of here
14:05 - we have another folder called web app
14:06 - and then inside we have actually our
14:08 - flask application and again that
14:10 - starting file from an it PI I'm really
14:13 - hammering the same cuz I want to make
14:14 - sure you guys don't mess up this process
14:15 - because this is where I went wrong a few
14:17 - times before so again project directory
14:19 - web app another web app folder your
14:22 - applications inside of there we're gonna
14:23 - put some other stuff in the outer
14:24 - directory so now that we've done that we
14:26 - can close this and just so you know if
14:29 - you do want to update your flask
14:30 - application the way that you would do it
14:31 - is going into Wynn SP and then just
14:34 - changing your Python files to update you
14:36 - know the new flask application okay so
14:38 - now that we've installed all the Python
14:40 - pack is what we're gonna do is actually
14:42 - set up what we call a new virtual host
14:44 - now I don't really know exactly what
14:46 - this does to be quite honest with you
14:47 - but I'm pretty certain that this is just
14:49 - the way that your website is kind of
14:50 - going to be displayed some settings for
14:52 - it and this is what flask needs so well
14:54 - that's what we're gonna do so to do this
14:56 - we need to create a new configuration
14:57 - file inside of a specific directory
14:59 - we're gonna type is sudo nano and in
15:03 - this case I gotta look at my other
15:04 - screen to make sure I don't mess this up
15:05 - et Cie slash apache2 slash sites - a
15:12 - vailable
15:13 - like that slash and now you're gonna
15:15 - type the name of your file which is
15:17 - gonna be web app dot Kampf now make sure
15:20 - that this is gonna be the same as
15:22 - whatever you've named those folders so
15:24 - if you name that folder app then you're
15:25 - gonna make sure this is app comp okay
15:28 - there has to be consistent now we're
15:29 - gonna go ahead and hit
15:31 - enter like that and now it's gonna tell
15:33 - us oh this directory does not exist well
15:35 - that would mean I typed this incorrectly
15:37 - so let me make sure I spell ah available
15:40 - correctly my apologies on that
15:42 - so anyways take exit out of this you hit
15:44 - ctrl X you can see kind of the commands
15:46 - are down here this little up means
15:48 - control believe on Mac command will work
15:50 - as well and to say you're gonna hit
15:52 - control s now what we're gonna do is
15:54 - copy in a block of code now I'm gonna
15:55 - take this from my other screen but I
15:57 - will tell you that this is in the
15:59 - description so you guys can find it and
16:00 - to paste something into this window what
16:03 - you do is right click on your mouse so
16:05 - I'm gonna right click and you're gonna
16:06 - see that all this code pops up again
16:08 - this is available in the description so
16:10 - don't worry you can copy it from there
16:12 - now what you need to do essentially is
16:15 - don't touch anything in this file
16:17 - other than the server IP now notice
16:20 - though when we look through here
16:21 - everything is referencing what I've
16:23 - named my folder so in this case you can
16:25 - see we have WSGI
16:26 - script alias and it's in our directory
16:29 - so of rww and then you see web app
16:31 - that's the name of the folder that we
16:34 - have our application in and then it has
16:36 - another directory where it actually has
16:38 - web app web app and this is gonna run
16:40 - our Python files right so inside of here
16:43 - and you can see all of these different
16:44 - directories we're referencing the static
16:46 - folder over here so make sure that if
16:48 - you've named your folder something else
16:50 - you're gonna change all of these to
16:52 - reflect that so wherever you see web app
16:53 - you're gonna change that to be whatever
16:54 - you named your folder okay so now that
16:57 - we have server name what I need to put
17:00 - here is actually the IP address of my
17:02 - server so I'm gonna grab that from will
17:04 - √°not√° chizz right here again you should
17:06 - already know that because we've seen
17:07 - that and I'm gonna paste that in by just
17:09 - right-clicking and we'll make sure that
17:11 - we keep the space and consistent and fix
17:13 - that so to navigate this file I'm using
17:14 - arrow keys and now what I'm going to do
17:16 - is save this by hitting ctrl s on my
17:18 - keyboard and then exit by hitting ctrl X
17:21 - now we're kinda in the homestretch here
17:23 - we're almost there there's only a few
17:24 - more things we need to do what we're
17:26 - gonna do now is actually activate this
17:28 - so to activate this we're gonna say sudo
17:30 - and then in this case a to en site web
17:35 - app now this should hopefully activate
17:38 - this we'll see what we get this is an
17:40 - abling site web app to activate the new
17:42 - configuration you need to run this
17:44 - so what we're gonna do is run this
17:45 - command I'm gonna copy that paste that
17:47 - in there so system reload Apache - once
17:50 - you do that you should be good and sorry
17:52 - that's systemctl my bad on that you
17:54 - shouldn't get any output if that's
17:56 - working there's no errors we're good to
17:57 - go I'm just going to clear the screen
17:58 - and we'll move on to our next steps so
18:00 - we're actually on the second last step
18:02 - that we need to do here we need to
18:04 - create now what we call a WSGI file
18:06 - now this WSGI file is kind of going to
18:09 - be the starting point of our application
18:11 - and it's gonna lead and kind of import
18:13 - the other Python file it actually stores
18:16 - our main application now I know this is
18:17 - kind of confusing but just follow along
18:19 - with me we are currently in VAR w w
18:22 - slash web app make sure you're in this
18:24 - directory when you're doing this we're
18:26 - gonna create a new file I'm gonna say
18:27 - sudo nano and in this case we're gonna
18:30 - call this file web app dog ABI WSGI now
18:35 - notice this has a lowercase a now if you
18:37 - decide to change this name you'll have
18:39 - to go back to that other folder or that
18:41 - other file that I just modified that had
18:43 - all that text and change where it says
18:45 - web app wsgi to be this appropriate name
18:49 - okay so that's why I've recommended you
18:51 - just keep the names the same but if
18:52 - you're changing them you're kind of
18:53 - gonna have to go in there and fix them
18:54 - for yourself so let's go ahead and hit
18:56 - enter and now what we're gonna do is
18:58 - type a little bit of Python code now I'm
19:00 - actually just gonna copy it in to save
19:02 - us some time
19:02 - again this codes all gonna be in the
19:04 - description so you guys can grab it but
19:06 - what we're gonna do is copy this and
19:08 - paste this in now here what we're
19:11 - actually going to be doing is we're
19:12 - gonna be trying to load in our
19:14 - application from that interior web app
19:16 - folder and from there we're gonna load
19:19 - that init script and we're actually
19:20 - gonna run the application so that's what
19:22 - this is attempting to do essentially now
19:24 - notice that it says from web app import
19:28 - app as application so this is Python
19:31 - code but what this is gonna do is look
19:33 - at that folder web app which is the next
19:35 - folder in the directory it's gonna look
19:37 - for that an it dog Pi file and then from
19:39 - that a knit top high file it's gonna
19:41 - look for app now app is actually the
19:43 - variable that we've used to store our
19:45 - flask applications so when you say and
19:47 - I'll actually just type it here app
19:49 - equals and then in this case flask like
19:51 - that it's trying to reference that so if
19:55 - you've named this variable something
19:56 - different
19:57 - when you're setting up your flask
19:58 - application then you need to change that
20:00 - accordingly in this file so from web app
20:03 - import app well if your folder name is
20:05 - different this is obviously gonna be
20:06 - different
20:06 - same here right if your folder name is
20:08 - different you're gonna have to change
20:09 - this WW to be the correct path and then
20:12 - from app same thing if that variable is
20:14 - different you're gonna have to change
20:15 - the name
20:16 - now we've referenced this or imported
20:17 - this as application and now what we're
20:19 - gonna do is set the secret key of our
20:20 - application so app add your secret key
20:23 - you could just leave it like this I'm
20:25 - just gonna make mine tech with Tim you
20:27 - guys can again do whatever you want for
20:29 - the secret key so attack with Tim I'm
20:31 - gonna save that file hit ctrl X and we
20:35 - are almost at the moment of truth we're
20:37 - actually going to start running our
20:38 - application now just notice if I type
20:40 - ls' here you can see kind of the
20:42 - structure that we have we have web app
20:43 - and then we have web app WSGI and if I
20:46 - CD into web app and do LS notice that I
20:49 - have that an it up high static templates
20:51 - user it's abused all of that okay so
20:54 - let's CD back what I'm gonna do now is
20:56 - reload appache and if everything's gone
20:59 - correctly our websites actually gonna be
21:00 - up and running and we'll be able to
21:02 - visit it we don't need to run any Python
21:03 - scripts we should actually be good so
21:05 - I'm gonna say sudo service and in this
21:08 - case Apache to restart this will restart
21:12 - the Apache web server which hopefully
21:14 - should allow us now to configure these
21:15 - changes and then access the web sites
21:17 - we're gonna hit enter no errors that's
21:19 - always a good sign so let's grab our IP
21:21 - address from len√¥tre ghin and now notice
21:23 - I'm on my main computer I've gone out of
21:25 - here I'm gonna type this in and when I
21:27 - go to this page and I hit enter you can
21:29 - see we are directed to our flask
21:30 - application so that is essentially how
21:33 - this works this is how you host the
21:34 - website this is how we get it up now I
21:36 - know I didn't talk about domain register
21:38 - or anything about I'm not gonna go into
21:40 - this because he deals with DNS and
21:41 - there's all this complicated stuff and
21:42 - I'm not an expert on getting a domain
21:44 - name up here but if you are interested
21:46 - in learning how to do the domain stuff
21:48 - there is tons of tutorials online that
21:50 - can probably teach you to do this and
21:51 - now that you have your web application
21:53 - set up and running all you need to do is
21:55 - just change it so it runs off of your
21:56 - actual domain so anyways that has been
21:59 - interesting a flask application I hope
22:01 - you guys enjoyed this video and if you
22:03 - did make sure you leave a like as always
22:04 - if you have any questions leave them
22:06 - down below and yeah this is you know as
22:08 - easy as it is to get your application up
22:10 - and running
22:10 - on a website

Cleaned transcript:

hello everybody and welcome to the final video in the flash tutorial series we're actually going to take this kind of minimal website that we built and deploy this on to a Linux server specifically using Ubuntu now the reason I'm doing this rather than using Heroku or something like that is because I want to show you guys how you know you can do this yourself just using a barebones you know headless Linux server it's it probably the cheapest option for most of you if you're gonna be doing website hosting gives you the most flexibility in terms of what you're able to do and just a good skill to have since we're gonna be doing today a bulk of how I've learned to do this is actually from this website here I would say that it's maybe a little bit outdated there's a bunch of stuff in here we don't actually need to do so that's why I'm not just you know kind of refer you directly to this page but I will leave a link to it in the description because it has helped me learn kind of about this process anyways what we're gonna start by doing is just downloading some software and then we're actually gonna set up a linux server and we'll talk about that more in a second we need to download putty some of you probably already have this but I'll leave a link to it in the description down below it's free software we're also gonna download winscp which is going to allow us to do some file transfer between our computer and the linux server that we're gonna be setting up again these will be linked to the description download that software and then we're gonna talk about lonoa quickly which is actually the sponsor of this video and it's going to allow you guys to be hosting this website for free without having to pay for any server provider at least while you're testing this out so essentially the low note has been kind enough to sponsor this video they're gonna be giving you guys $20 free credit towards your first Linux server now this will actually allow you to use the most basic plan on the node which is five dollars a month for four months for free so it's awesome if you're just doing some development testing some stuff out whatever Web Apps you want to use you don't necessarily have to make a website you can do pretty much whatever you want with len√¥tre if it runs on Linux it will run on low note they have an awesome support team it's 100% human it's 24/7 they're always willing to help you out they've helped me out before personally and to deploy your server just hit the link in the description down below and it look you guys you know that free $20 so I'm gonna click deploy my Linux server again that link will be in the description you can also use the discount code twt 19 I'm just going to set up a basic linux server so i'm going to go here to create create a Nuala note i'm gonna choose my distribution which I'm gonna pick it bun two four so a bun to nineteen point ten you can also actually set these up with one click images unfortunately there's not one for a flask application but if you're doing something like WordPress or I don't know creating a minecraft server then you can actually just click one click you can click these and that everything you need will actually be installed on your server automatically which is pretty nice so let's go back to distributions for Regions oh I need to pick a bunch you again so I'm just gonna go the most recent version of a bunch of you guys can pick whatever you want for regions pick whatever you want I'm closest to Toronto so I'm just gonna pick Toronto Ontario but again they have all these different data centers that you can choose from okay so for the plans I'm gonna recommend to you guys that you don't need anything crazy here again you have your free $20 credit so I would just go with the most basic plan which is nano duan gigabyte you can see how much it cost per hour it's literally like fractions of a cent and then for the name I'm just gonna call this a test because while this is gonna be a test for us right now for the password of our server make sure you guys remember this mines weak but that's fine you're probably gonna want to make this a strong password as if someone has your server IP address which is pretty easy to get they can actually log into your server if they can guess this password great okay so once we've done that we'll click create this is just gonna take a second to boot up and once this is done we'll be back and we'll go into the next steps okay so that booted up now so what we're actually gonna do is go to this networking tab you should see this under your server and I just want to make it clear that you know you guys don't necessarily only have to have one server here so while you have this $20 credit you can create another loan owed you can use it for whatever you want you can use those oneclick so you can upload your own images actually if you want to put those on the server and you know you can just use it for other things so don't think you can only have one server you could have multiple with that $20 credit anyways what I'm gonna do is I'm gonna grab the IP address that is here so it says this under access SSH access it says root at and what we're gonna do is just copy this so whatever this IP address is I'm gonna open up my putty window which I'm assuming you guys have already downloaded I'll zoom in on this you guys can see and for the hostname we're gonna type in the hostname that is for our server so whatever one we found from the Linode website then I'm just gonna change the text size of this to make it a little bit bigger so that you guys can actually read it while I go through this so I'm gonna change this to 22 and then inside a putty we're just gonna save this as a session so I actually have flask app already here so what I'm gonna do is highlight this and hit save and what that's gonna do is save this IP address and save that text size so every time I go in here I can just click on flask app click load it will load this IP address for me load all my settings I can click open I can get into that quickly good idea to do that if you guys don't have any here what you can do is just give this a name so like hello hit save and then it will save it for you so you can see we have hello now saved like that open this up and when we open this up we're gonna get a warning that says warning potential security breach just click yes and then we'll be logged in and ready to go okay so what we need to do is log in as the root user so the user name is gonna be root password is gonna be whatever that password is you set when we were setting up this server and now we should be in here and we should be ready to start typing some commands and getting some things done so the first thing that we need to do is actually install Apache on our server now I think that's how you say it Apache Apache I don't know the actual name but anyways to do that we're gonna start off by just doing a system update to make sure everything's good so sudo apt update like that give this a second it'll run through and once that's done we'll move on to the next step okay so we finished that now and what we're gonna do is install Apache so to do that we're gonna say sudo apt install Apache I believe that's correct it's gonna pop up a thing that says you want to install this yes or no we'll hit Y go ahead and hit enter wait for this to load and then again we'll go into the next step and test that Apache is actually up and running and working okay alright so that is finished now what we're gonna do is just make sure that this worked properly we're gonna type Apache version if we get some output here that's non error so we see the server version and the server build we are all good to go and we are ready to move on to the next step which is actually configuring our firewall now since this is a Linux server and I guess we're hosting the samel node by default most of these have firewalls and they don't actually let Apache through so we have to make sure that it's gonna go through so that people can access this so to do that we're gonna check what the services are for our firewall and then it will just add the appropriate one so in this case we're gonna type sudo UFW list like that and then you'll see that we have a pachi pop up here you can see these other two you don't have to worry about those necessarily what we're gonna do is just add this to an aloud service for for a firewall serene it's a pseudo you have W allow and then single quotation marks appache like that now make sure you type this line exactly you don't need the full you don't need to secure this is fine and then you should see that the rules are updated and now this is allowed in the firewall ok so now that we've done that the next step is just to configure Apache and make sure it's actually running properly so to do this we're gonna say sudo systemctl and then I'm just gonna look at my other screen to make sure I do this right status and then in single quotes Apache like that you should see oh my apologies on that so I did single quotes Apache but I guess I was reading my wrong thing it's actually gonna be a pod sheet too and when we do that so we say sudo ufw where's that sudo systemctl status apache not this single quotes Apache you should see some green text that says active running and you should get that little green dot there if you get that this means it's running everything's fine you've completed these steps we're ready to move forward now to get out of this we're just gonna hit ctrl C on our keyboard that should exit out of that and we'll be ready to move on to the next step which is to install a few libraries now this one's kind of a long line again it'll be in the description so you guys can just copy them if you want we're gonna say sudo apt get install and then in this case Lib Apache mod WSGI and then we're gonna do space Python dev now I know that was a lot but essentially what this is gonna do is just install some libraries that we need for WSGI which is kind of how flask runs I'm not really an expert on this so I'm not gonna talk to detail because I don't want to make any you know horrible mistakes and mislead you guys but essentially that was the command right here sudo apt we get all that we'll hit yes go ahead and continue okay so now we've done most of the setup that we actually need to do and what we're gonna do now is set up a few directories and get into the right area where we're actually gonna place our flask application then we'll do a few more configurations and we should be good to go and actually host this flask app so what I'm gonna do is CD into var ww slash now this is gonna bring you to where you need to put your flask application now I believe you can put this somewhere else but this is actually I don't know I've only ever tried it in this location so I would recommend put it here just follow along with me get into this directory and we'll actually gonna create a few more directories now we're gonna start by just making a new directory which is gonna be called web app now if you name this something different make sure you remember that name and wherever you see me type web app you type that name okay so the names here are gonna be very important a big mistake a lot of you guys will have is you name it something different you forget you name it something different and then you're gonna be using my script which is referencing this directory so just make sure you know if you want to make sure this works just name everything the exact same as me so web app like that is what I'm gonna go with now that I have that I'm going to actually I don't need to CD into there right now um or do i you know what yeah let's let's CD into web app and now we're gonna just install some Python stuff and then we'll actually be good to go and drag in some files so what I'm gonna do is start by installing Python and pip so I'm gonna say sudo apt get install oops Python pip so this is gonna install pip make sure that we have that correctly and then once we have pip we're actually going to install flask we're gonna install flask SQL alchemy and then we will have the Python libraries that can actually run our Python code from the Apache web server or whatever it is that's gonna be doing that okay so now that we have this what we're gonna do is install flask and we're gonna install flask SQL alchemy so this is the exact same as we've done in previous tutorials so pip install flask like that wait for that to run through and then now we're gonna do SQL alchemy so pip install flask underscore SQL alchemy like that um and there we go once this goes through we will be good to go and now we're actually gonna bring our flask app on to this which is going to involve us using a different piece of software so I'm gonna open up winscp which is actually just a file transfer protocol and what we're gonna do is setup a new kind of entry in here login to our server and then transfer some files over this just makes it easier than having to actually copy and pay stuff because no one really wants to do that so what we need to get to start is the IP address of our server so good job I left this open because I forgot so I'm gonna copy that that's my IP address I'm going to put it in here so if you guys are here you might actually need to click new site my apologies you're gonna put the hostname as whatever your IP address is the username is root you can leave the password as blank for now and then go ahead and hit save when you do that it's gonna bring up a window save this as whatever you want I'm just gonna say test because I probably will be deleting this after and then I'm gonna go ahead and go in and log in now it's gonna say update add all this stuff for you if it just says add you're gonna hit add for me I'm just gonna go ahead and hit update and then I'm going to sign in with the correct password so whatever that password was that you set up as your root password that's what you need to sign in with now you should be in the root directory we're actually gonna go back one directory by just we can double click on that thing that's right there and we're gonna go to a www folder which is gonna be under bar so we're gonna find all of this we're gonna look for var which is at the bottom we're gonna go to wwwhich conveniently is at the bottom as well and now you should see that we have this folder web app which was actually what I have created from the terminal so what I'm gonna do now is open up this folder and inside here is where I'm actually going to put my flask application now I'm assuming you have already created a flask application that's why you're going to be deploying one but there is a few kind of nuances that we have to think about when we do this so I'm gonna find my flask app I'll be right back and I'll talk about how we add that ok so I found my flask application you guys can see these are the files need to be using so I have my static folder my templates folder views an it and then users sqlite3 now yours might look slightly different than this obviously if you create a different flask app things that you have to make sure are the same you have to make sure you have a static folder you have to make sure you have a templates folder and you have to make sure that the starting point of your application is from an it PI so underscore your net underscore underscore PI that needs to be the file that's gonna start your application so just make sure that you have those three constraints so static templates that an it file and then you should be good to go and so long as this flask app runs properly and there's no Python when you're doing it on your kind of own development side so not from the server this will work fine so I'm gonna drag these files into my web app so it's as easy as that this is the file transfer just from my Windows Explorer you can also do it from this left side here where you can just find the files and transfer them over this one I find easier what I'm actually gonna do is something weird now where I create a new folder or new directory so like this and I'm gonna call it the exact same thing that I've been calling my other stuff so in this case web app I mean create another folder called web app and I'm gonna take all of these files so everything that I dragged in and I'm gonna put them inside of that folder so I guess I could have created that folder first but regardless what we're gonna have our structure looking like is we have this web app folder inside of here we have another folder called web app and then inside we have actually our flask application and again that starting file from an it PI I'm really hammering the same cuz I want to make sure you guys don't mess up this process because this is where I went wrong a few times before so again project directory web app another web app folder your applications inside of there we're gonna put some other stuff in the outer directory so now that we've done that we can close this and just so you know if you do want to update your flask application the way that you would do it is going into Wynn SP and then just changing your Python files to update you know the new flask application okay so now that we've installed all the Python pack is what we're gonna do is actually set up what we call a new virtual host now I don't really know exactly what this does to be quite honest with you but I'm pretty certain that this is just the way that your website is kind of going to be displayed some settings for it and this is what flask needs so well that's what we're gonna do so to do this we need to create a new configuration file inside of a specific directory we're gonna type is sudo nano and in this case I gotta look at my other screen to make sure I don't mess this up et Cie slash apache2 slash sites a vailable like that slash and now you're gonna type the name of your file which is gonna be web app dot Kampf now make sure that this is gonna be the same as whatever you've named those folders so if you name that folder app then you're gonna make sure this is app comp okay there has to be consistent now we're gonna go ahead and hit enter like that and now it's gonna tell us oh this directory does not exist well that would mean I typed this incorrectly so let me make sure I spell ah available correctly my apologies on that so anyways take exit out of this you hit ctrl X you can see kind of the commands are down here this little up means control believe on Mac command will work as well and to say you're gonna hit control s now what we're gonna do is copy in a block of code now I'm gonna take this from my other screen but I will tell you that this is in the description so you guys can find it and to paste something into this window what you do is right click on your mouse so I'm gonna right click and you're gonna see that all this code pops up again this is available in the description so don't worry you can copy it from there now what you need to do essentially is don't touch anything in this file other than the server IP now notice though when we look through here everything is referencing what I've named my folder so in this case you can see we have WSGI script alias and it's in our directory so of rww and then you see web app that's the name of the folder that we have our application in and then it has another directory where it actually has web app web app and this is gonna run our Python files right so inside of here and you can see all of these different directories we're referencing the static folder over here so make sure that if you've named your folder something else you're gonna change all of these to reflect that so wherever you see web app you're gonna change that to be whatever you named your folder okay so now that we have server name what I need to put here is actually the IP address of my server so I'm gonna grab that from will √°not√° chizz right here again you should already know that because we've seen that and I'm gonna paste that in by just rightclicking and we'll make sure that we keep the space and consistent and fix that so to navigate this file I'm using arrow keys and now what I'm going to do is save this by hitting ctrl s on my keyboard and then exit by hitting ctrl X now we're kinda in the homestretch here we're almost there there's only a few more things we need to do what we're gonna do now is actually activate this so to activate this we're gonna say sudo and then in this case a to en site web app now this should hopefully activate this we'll see what we get this is an abling site web app to activate the new configuration you need to run this so what we're gonna do is run this command I'm gonna copy that paste that in there so system reload Apache once you do that you should be good and sorry that's systemctl my bad on that you shouldn't get any output if that's working there's no errors we're good to go I'm just going to clear the screen and we'll move on to our next steps so we're actually on the second last step that we need to do here we need to create now what we call a WSGI file now this WSGI file is kind of going to be the starting point of our application and it's gonna lead and kind of import the other Python file it actually stores our main application now I know this is kind of confusing but just follow along with me we are currently in VAR w w slash web app make sure you're in this directory when you're doing this we're gonna create a new file I'm gonna say sudo nano and in this case we're gonna call this file web app dog ABI WSGI now notice this has a lowercase a now if you decide to change this name you'll have to go back to that other folder or that other file that I just modified that had all that text and change where it says web app wsgi to be this appropriate name okay so that's why I've recommended you just keep the names the same but if you're changing them you're kind of gonna have to go in there and fix them for yourself so let's go ahead and hit enter and now what we're gonna do is type a little bit of Python code now I'm actually just gonna copy it in to save us some time again this codes all gonna be in the description so you guys can grab it but what we're gonna do is copy this and paste this in now here what we're actually going to be doing is we're gonna be trying to load in our application from that interior web app folder and from there we're gonna load that init script and we're actually gonna run the application so that's what this is attempting to do essentially now notice that it says from web app import app as application so this is Python code but what this is gonna do is look at that folder web app which is the next folder in the directory it's gonna look for that an it dog Pi file and then from that a knit top high file it's gonna look for app now app is actually the variable that we've used to store our flask applications so when you say and I'll actually just type it here app equals and then in this case flask like that it's trying to reference that so if you've named this variable something different when you're setting up your flask application then you need to change that accordingly in this file so from web app import app well if your folder name is different this is obviously gonna be different same here right if your folder name is different you're gonna have to change this WW to be the correct path and then from app same thing if that variable is different you're gonna have to change the name now we've referenced this or imported this as application and now what we're gonna do is set the secret key of our application so app add your secret key you could just leave it like this I'm just gonna make mine tech with Tim you guys can again do whatever you want for the secret key so attack with Tim I'm gonna save that file hit ctrl X and we are almost at the moment of truth we're actually going to start running our application now just notice if I type ls' here you can see kind of the structure that we have we have web app and then we have web app WSGI and if I CD into web app and do LS notice that I have that an it up high static templates user it's abused all of that okay so let's CD back what I'm gonna do now is reload appache and if everything's gone correctly our websites actually gonna be up and running and we'll be able to visit it we don't need to run any Python scripts we should actually be good so I'm gonna say sudo service and in this case Apache to restart this will restart the Apache web server which hopefully should allow us now to configure these changes and then access the web sites we're gonna hit enter no errors that's always a good sign so let's grab our IP address from len√¥tre ghin and now notice I'm on my main computer I've gone out of here I'm gonna type this in and when I go to this page and I hit enter you can see we are directed to our flask application so that is essentially how this works this is how you host the website this is how we get it up now I know I didn't talk about domain register or anything about I'm not gonna go into this because he deals with DNS and there's all this complicated stuff and I'm not an expert on getting a domain name up here but if you are interested in learning how to do the domain stuff there is tons of tutorials online that can probably teach you to do this and now that you have your web application set up and running all you need to do is just change it so it runs off of your actual domain so anyways that has been interesting a flask application I hope you guys enjoyed this video and if you did make sure you leave a like as always if you have any questions leave them down below and yeah this is you know as easy as it is to get your application up and running on a website
