With timestamps:

00:00 - hey guys and welcome to the fifth and
00:02 - final video in my Python classes and
00:05 - objects tutorial series so in today's
00:07 - video I'm going to be talking about
00:08 - public and private classes and how to
00:11 - import your own classes from other files
00:13 - into like a main file you'll kind of see
00:16 - what that really means as we move along
00:18 - so the first thing to talk about it I
00:20 - guess would be what is the difference
00:22 - between public and private so I've
00:24 - brought in an example here I'm just kind
00:26 - of written this random example in Python
00:28 - to try to illustrate this to you so on
00:30 - other programming languages there's
00:32 - things known as private and public
00:33 - classes now private classes typically
00:36 - can only be used within the same file or
00:39 - within like a certain scope where public
00:41 - classes are accessed or can be accessed
00:44 - by everyone so private kind of means
00:47 - within something like it's not
00:49 - accessible outside of that whereas
00:51 - public means it's accessible everywhere
00:53 - now I have just a definition I found on
00:55 - Google that I'm just gonna read because
00:57 - it's the best way to kind of explain it
00:58 - and I can talk about it after so in
01:00 - terms of Java and we'll talk about this
01:02 - in a second public versus private class
01:04 - and it's the same for most languages
01:05 - means this so public is a java key word
01:08 - which declares them members access as
01:10 - public public members are visible to all
01:11 - the classes this means that any other
01:13 - class can access a public field or
01:15 - method further other classes can modify
01:17 - public fields unless the field is
01:19 - declared as final ok so what does that
01:22 - all mean and why did I just give you an
01:24 - example in Java well in Python there's
01:27 - actually no such thing as private or
01:29 - public classes there is conventions that
01:32 - we use to declare like a pseudo like
01:35 - private or like a public class but
01:39 - there's not really anything restricting
01:41 - us from using private classes so
01:44 - hopefully I can explain this but pretty
01:46 - much this first class up here is private
01:49 - and what makes this private is the fact
01:51 - that we have one underscore at the
01:53 - beginning of the class name now in
01:56 - Python or in Java for example when you
01:58 - create a class you would do like you can
02:00 - do something like this like public
02:01 - static class and then that would mean
02:05 - that it's a public class you could say
02:06 - like private class now in Python we
02:09 - don't have those so the way that we
02:11 - define this
02:12 - just as a convention is you start with
02:14 - one underscore and then the class name
02:16 - now to create a public method or like
02:19 - attribute of a class it's the same thing
02:21 - you just use one underscore so for
02:23 - example you can say I have to display
02:24 - methods here one is a private method as
02:27 - it has an underscore and the other one
02:29 - is public as it doesn't have an
02:30 - undersquare again like I've said it
02:33 - doesn't actually matter like you can
02:35 - still use this the regular way you'd use
02:37 - a method by calling dot underscore
02:38 - display but by putting this underscore
02:40 - here you're essentially telling other
02:41 - programmers and even maybe yourself
02:43 - later on in the future not to use this
02:46 - and you're saying this is private I
02:48 - don't want you to use it obviously if
02:49 - they decide to use it that's their
02:51 - decision but it's just telling you like
02:53 - don't mess with this don't use this it's
02:55 - private for a reason and typically when
02:57 - you private things that's because you
02:58 - don't want other classes to be able to
03:00 - use it and like mess with the class or
03:02 - do anything like that so same thing here
03:04 - when you create an entire class as
03:05 - private that means everything within the
03:08 - class is also private so I'm gonna go
03:10 - over to this file now and you can see I
03:12 - have one file mod in one file tutorial
03:14 - one now mod is this one that we just
03:16 - went through tutorial one is a new file
03:18 - and you can see that I'm actually
03:19 - importing mod so I'm importing this file
03:23 - now what I do that what that does is
03:25 - import all of the classes and functions
03:28 - that are within this file so for example
03:30 - if you wanted to organize your program
03:31 - you would have a bunch of different
03:33 - files that contain a lot of different
03:35 - classes and you would import them by
03:37 - simply typing this at the beginning of
03:39 - like your main script this way you can
03:40 - keep everything organized clean and neat
03:42 - and then you can see from mod I'm
03:44 - importing not private so the way that
03:46 - this works in terms of importing
03:48 - individual classes is you type the name
03:50 - of the Python file in this case mod and
03:52 - then the name of the class or function
03:55 - that you wanted to import and in this
03:56 - case I want to import not private so I
03:58 - can simply do that now say I've removed
04:01 - this line I say import from mod import
04:03 - not private I'm still able to access not
04:05 - private just in a different way you can
04:07 - see now this goes red the way I would
04:08 - now do this I'd say mod dot not private
04:11 - because it's saying we're looking within
04:12 - the mod file for the class or function
04:15 - not private but it's just easier to do
04:17 - it this way so that you don't have to
04:19 - type mod dot before all that stuff okay
04:22 - so I'm just gonna show you this working
04:23 - I guess I have
04:25 - this is not private class you can see we
04:27 - have two displays and when I run it we
04:30 - get high now I also want to show you the
04:32 - fact that although I told you that this
04:34 - class is private and this method is
04:36 - private that we can still actually use
04:38 - them so if I simply do test dot
04:40 - underscore display you can see that this
04:42 - now works perfectly fine and it gives us
04:44 - hello so I just felt like I had to make
04:47 - this video although it's not really an
04:49 - important aspect in Python just because
04:51 - if you guys are going to be learning
04:51 - different programming languages you have
04:54 - to understand the difference between
04:55 - private and public classes it's very
04:57 - difficult to illustrate with in Python
04:59 - because there's nothing that's truly
05:01 - public or private but just know that if
05:03 - you ever run across some classes that
05:05 - have underscores at the beginning of the
05:06 - name or underscores before method names
05:09 - for example like dotnet then that means
05:12 - that they are typically private or want
05:15 - to be private at least so you should
05:16 - probably not mess with them and not use
05:18 - them that goes for you as well if you
05:20 - are programming and you want to create
05:21 - stuff that you don't want people to kind
05:23 - of mess with just put an underscore
05:24 - before the name and just a typical
05:26 - convention in Python to do that to
05:29 - create a private or public class anyways
05:32 - that's been it for this video and for
05:34 - the series I hope that you guys did
05:36 - enjoy the series and you did learn a lot
05:37 - if you did please consider subscribing
05:39 - and hitting that like button as it would
05:40 - mean a lot to me
05:42 - [Music]

Cleaned transcript:

hey guys and welcome to the fifth and final video in my Python classes and objects tutorial series so in today's video I'm going to be talking about public and private classes and how to import your own classes from other files into like a main file you'll kind of see what that really means as we move along so the first thing to talk about it I guess would be what is the difference between public and private so I've brought in an example here I'm just kind of written this random example in Python to try to illustrate this to you so on other programming languages there's things known as private and public classes now private classes typically can only be used within the same file or within like a certain scope where public classes are accessed or can be accessed by everyone so private kind of means within something like it's not accessible outside of that whereas public means it's accessible everywhere now I have just a definition I found on Google that I'm just gonna read because it's the best way to kind of explain it and I can talk about it after so in terms of Java and we'll talk about this in a second public versus private class and it's the same for most languages means this so public is a java key word which declares them members access as public public members are visible to all the classes this means that any other class can access a public field or method further other classes can modify public fields unless the field is declared as final ok so what does that all mean and why did I just give you an example in Java well in Python there's actually no such thing as private or public classes there is conventions that we use to declare like a pseudo like private or like a public class but there's not really anything restricting us from using private classes so hopefully I can explain this but pretty much this first class up here is private and what makes this private is the fact that we have one underscore at the beginning of the class name now in Python or in Java for example when you create a class you would do like you can do something like this like public static class and then that would mean that it's a public class you could say like private class now in Python we don't have those so the way that we define this just as a convention is you start with one underscore and then the class name now to create a public method or like attribute of a class it's the same thing you just use one underscore so for example you can say I have to display methods here one is a private method as it has an underscore and the other one is public as it doesn't have an undersquare again like I've said it doesn't actually matter like you can still use this the regular way you'd use a method by calling dot underscore display but by putting this underscore here you're essentially telling other programmers and even maybe yourself later on in the future not to use this and you're saying this is private I don't want you to use it obviously if they decide to use it that's their decision but it's just telling you like don't mess with this don't use this it's private for a reason and typically when you private things that's because you don't want other classes to be able to use it and like mess with the class or do anything like that so same thing here when you create an entire class as private that means everything within the class is also private so I'm gonna go over to this file now and you can see I have one file mod in one file tutorial one now mod is this one that we just went through tutorial one is a new file and you can see that I'm actually importing mod so I'm importing this file now what I do that what that does is import all of the classes and functions that are within this file so for example if you wanted to organize your program you would have a bunch of different files that contain a lot of different classes and you would import them by simply typing this at the beginning of like your main script this way you can keep everything organized clean and neat and then you can see from mod I'm importing not private so the way that this works in terms of importing individual classes is you type the name of the Python file in this case mod and then the name of the class or function that you wanted to import and in this case I want to import not private so I can simply do that now say I've removed this line I say import from mod import not private I'm still able to access not private just in a different way you can see now this goes red the way I would now do this I'd say mod dot not private because it's saying we're looking within the mod file for the class or function not private but it's just easier to do it this way so that you don't have to type mod dot before all that stuff okay so I'm just gonna show you this working I guess I have this is not private class you can see we have two displays and when I run it we get high now I also want to show you the fact that although I told you that this class is private and this method is private that we can still actually use them so if I simply do test dot underscore display you can see that this now works perfectly fine and it gives us hello so I just felt like I had to make this video although it's not really an important aspect in Python just because if you guys are going to be learning different programming languages you have to understand the difference between private and public classes it's very difficult to illustrate with in Python because there's nothing that's truly public or private but just know that if you ever run across some classes that have underscores at the beginning of the name or underscores before method names for example like dotnet then that means that they are typically private or want to be private at least so you should probably not mess with them and not use them that goes for you as well if you are programming and you want to create stuff that you don't want people to kind of mess with just put an underscore before the name and just a typical convention in Python to do that to create a private or public class anyways that's been it for this video and for the series I hope that you guys did enjoy the series and you did learn a lot if you did please consider subscribing and hitting that like button as it would mean a lot to me
