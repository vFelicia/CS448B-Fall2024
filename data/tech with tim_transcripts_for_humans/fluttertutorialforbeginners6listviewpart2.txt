With timestamps:

00:02 - [Music]
00:07 - and then
00:08 - inside of this card which is just like a
00:09 - little block
00:11 - then this kind of has a nice little
00:12 - border to it so it will separate our
00:14 - items out
00:14 - we're going to need to put a bunch of
00:15 - different things so i want to have the
00:17 - body text
00:18 - i want to have the author and then to
00:21 - the right hand side i want to have a
00:22 - little icon that's a like button
00:24 - and i want to display the number of
00:25 - likes that we're going to have for this
00:27 - post
00:28 - so that's what we're gonna have to do
00:29 - here this is gonna get fairly
00:31 - complicated but
00:32 - regardless let's just go ahead and try
00:34 - it out so what we're gonna do here is
00:36 - we're gonna start by saying
00:37 - card child and then we're gonna make a
00:40 - row
00:41 - that's going to hold our um what's it
00:43 - going to be
00:44 - i guess the title or not the title sorry
00:47 - the body text the author will be in one
00:50 - kind of section of the row
00:51 - and then to the right hand side of the
00:53 - row we will have the like button and the
00:54 - number of likes
00:55 - so if i bring up my thing again what i'm
00:58 - trying to do is have like
00:59 - on the left hand side what the post was
01:01 - to the content that they posted and then
01:04 - the um author right below that and kind
01:06 - of like
01:07 - subtitle text and then on the right hand
01:09 - side a like button and
01:10 - a little number displaying the number of
01:12 - likes so that's what this row is going
01:13 - to represent so inside of this row i'm
01:15 - going to say children
01:17 - and we're going to say is equal to
01:18 - widget and there's going to be a blank
01:19 - list
01:20 - and then inside of here what we're going
01:23 - to do is we're going to add a few
01:24 - expanded
01:26 - children that are going to take up this
01:27 - entire row so again remember what
01:29 - expanded does is just
01:30 - fill with the entire space so we're
01:32 - going to have two expandeds in here
01:34 - which are going to hold the two
01:35 - different things that we want so the
01:36 - first thing that i want
01:37 - is the um that text that i've been
01:40 - talking about so that body text and that
01:42 - author text
01:43 - so what our child for the first expanded
01:45 - widget is going to be is a list
01:46 - tile now a list tile essentially is just
01:49 - going to give us
01:50 - a nice way to format what i've been
01:52 - talking about it's like that body text
01:53 - and that author
01:54 - so we'll say list oops like that and
01:57 - then
01:57 - tile and inside of here we can have a
01:59 - look and we can see that it has
02:01 - oh well it's kind of cutting off here
02:02 - but it has a title and a subtitle
02:05 - trailing is three line enabled a bunch
02:08 - of other stuff on tap on long press
02:10 - so we can do a bunch of stuff with this
02:11 - but what we're going to do is we're just
02:13 - going to say title like that
02:14 - and for the title what i'm going to do
02:16 - is i'm simply going to put
02:18 - whatever the title of the post is so
02:20 - we're just going to say post dot and in
02:22 - this case it's going to be body
02:24 - i think that's what i wanted yeah so
02:25 - we're going to say post.body we need to
02:27 - wrap that in a text
02:28 - widget so we'll say text post.body
02:31 - because this accepts a widget
02:33 - and then the next thing that we're going
02:34 - to do is we're going to do the subtitle
02:36 - so the subtitle is simply going to be
02:37 - the author's name
02:38 - so we'll do the same thing we'll go text
02:40 - and let me just save this so we get some
02:42 - better output awesome so text
02:44 - and then inside of here we're going to
02:45 - say post dot author
02:47 - so remember post is defined right here
02:50 - and we can simply access the attributes
02:51 - of post like the body of it and the
02:53 - author of it by just calling the dot
02:55 - operator
02:55 - whatever the name of that field is so
02:57 - that's all we need i believe for
02:59 - expanded
03:00 - and now what we're going to do is we're
03:01 - going to add the like button and the
03:04 - little number that's showing the amount
03:06 - of likes so inside of another expanded
03:08 - widget or actually sorry not another
03:10 - expanded widget inside of a
03:11 - row widget we're going to delete that
03:13 - we're going to have the like button and
03:14 - then the number of likes so we're going
03:16 - to say
03:16 - children widget and then the first thing
03:18 - we're going to do is put an icon button
03:20 - so i believe we already showed how this
03:22 - works so i'll skim through it quicker
03:23 - we're going to say icon button like that
03:26 - and we're going to say
03:27 - icon oops is equal to the icon
03:31 - of icons dot and i believe this one is
03:35 - thumb up or something like that yeah
03:38 - so icon icon is icon dot thumb up
03:41 - awesome so let's save that now what else
03:43 - do we need for our icon button
03:45 - i believe we need to have an on pressed
03:47 - method so what happens
03:48 - when we press this button well that's a
03:50 - good question now we need to call a
03:52 - method
03:53 - when we press this so what we're
03:55 - actually going to call when we press
03:56 - this
03:57 - is the let's have a look here
04:00 - where is post is the method that we
04:02 - defined up here which is like post
04:05 - so essentially whenever we click the
04:07 - like button
04:08 - we'll call on like post on that post so
04:12 - that it will add one
04:13 - or it will handle you know should we add
04:15 - a like should we delete a like so on so
04:17 - forth
04:18 - so to do that we're going to say post
04:20 - dot
04:21 - like post and we don't need the other
04:23 - set of brackets there because this is
04:25 - going to just call that function we're
04:26 - just defining what it is
04:28 - and with that for now i think i'm going
04:31 - to leave it like that
04:33 - i just want to render this and see what
04:34 - it looks like first and then we can keep
04:37 - going from there but i want to
04:38 - do something because right now we have
04:40 - not changed anything at all so let's
04:42 - hot reload that and let's just type
04:45 - hello and let's see what's happening
04:46 - here
04:47 - okay so you can see that now that's
04:48 - actually being added into the list view
04:50 - we have hello
04:51 - tim we have that little like button and
04:53 - if i go
04:55 - tim like that i go yes like that
04:58 - go sure like that you can see we have
05:01 - this list now that has all of the items
05:03 - that we're talking about
05:04 - now it doesn't automatically scroll to
05:06 - the bottom it's not super fancy or
05:07 - anything like that and
05:08 - yes this still looks kind of weird
05:10 - because it's right there
05:11 - we'll change those things later but for
05:13 - now you get the idea that that's what
05:14 - this list view looks like and this is
05:16 - kind of what a card is is these
05:18 - little things that have a bit of padding
05:19 - and some separation between them
05:21 - okay so now we need to add so let's go
05:23 - back actually here for a second we need
05:25 - to add that little
05:26 - icon that's telling us how many likes we
05:27 - actually have we can add that before
05:29 - or after the like button i think it
05:31 - might look look better before
05:33 - on the left hand side of the like button
05:34 - so let's go ahead and do that
05:36 - so we're going to go inside of children
05:38 - here
05:39 - and we're going to say container oops so
05:43 - container like that
05:44 - and inside of container we're going to
05:47 - put the child
05:48 - as some text so we'll just say child
05:51 - equals text
05:52 - and we're going to say this is post dot
05:55 - likes
05:55 - like that uh post dot likes it's a
05:58 - reason that's not working oh it's
06:00 - because it's text we need to put that to
06:02 - string
06:02 - so we're gonna grab the amount of likes
06:04 - from this post and just put that into a
06:05 - string
06:06 - and we'll simply put that inside of a
06:07 - container and display that
06:09 - now there's a few other things that i
06:10 - want to add here so the first thing is
06:12 - inside of text i want to change the font
06:14 - size to make it a bit bigger
06:16 - so i'm going to say style like that and
06:18 - then we can say this is
06:20 - text style and inside of text style
06:22 - we'll simply say
06:23 - font size like that and we'll just make
06:25 - this size 20.
06:26 - that way it's just a little bit larger
06:28 - and then the last thing that i have is i
06:30 - have some padding inside of this
06:31 - container
06:32 - just to make it so that it's not kind of
06:33 - squished and right beside this icon
06:36 - button
06:36 - so i'm going to say padding like that
06:39 - and then inside of here
06:40 - we're going to say this is equal to edge
06:43 - insets like that and i believe we just
06:46 - put
06:47 - dot from ltrb so what this is saying is
06:51 - edge inset stop from
06:52 - left top right bottom so we're making a
06:55 - padding
06:56 - and we just define how much padding we
06:57 - want on the left side the top side the
06:59 - right side the bottom side
07:01 - now padding is just amount of pixels
07:03 - that are separated between the widget
07:05 - and another widget
07:06 - so in this case this widget is going to
07:07 - be to the left or where the icon button
07:09 - is
07:10 - so i'm going to add padding to the right
07:11 - side of this so that it pushes it away
07:14 - from the other widget
07:15 - so i'll just add i guess we had what
07:17 - like 10
07:19 - i don't know 10 pixels of padding so
07:20 - we'll add 10 pixels of padding like that
07:22 - and i'll make the rest of them zero and
07:25 - now
07:26 - if we go ahead and take a look here
07:28 - after hot reloading
07:30 - let's see what we're getting so if we
07:32 - add something like that
07:33 - we can see now that we have the likes
07:36 - right we have all the likes popping up
07:38 - and if i actually click the button
07:40 - nothing is happening
07:41 - right now so we'll need to do something
07:43 - to change that so that when we click the
07:45 - button it actually gets updated but you
07:46 - can see
07:48 - right now at least that this is working
07:49 - and now we just need to fix the button
07:51 - and make this layout look a little bit
07:52 - better
07:53 - so the reason that this button isn't
07:55 - actually working when we press it
07:57 - is because when we call this method
07:59 - post.like post
08:00 - we're not telling this widget to update
08:03 - we actually need to put this inside of a
08:05 - set
08:06 - state so that we actually tell this
08:08 - widget hey when we click this button
08:10 - we need to update this text because post
08:12 - dot like post if we
08:14 - have a look at where what's actually
08:15 - happening here there's nothing that says
08:17 - this dot set state
08:18 - so since it doesn't think the state of
08:20 - the widget is changing it's not actually
08:21 - going to update what's being rendered so
08:23 - we need to make a method here
08:25 - we'll just call this void you know like
08:29 - or something like that and all we're
08:31 - going to do
08:32 - is we're simply going to call so we need
08:33 - to actually pass the post object first
08:35 - of all
08:36 - actually we'll call we'll just put
08:38 - callback in here so we'll say
08:41 - function callback and then what we'll do
08:44 - instead of here is say
08:45 - this not set state and inside of the set
08:49 - state we'll just go
08:50 - call back like that and let's add our
08:54 - semicolons and i think that should be
08:56 - good
08:57 - so what this is going to do is it's
08:58 - going to say okay we're going to set the
08:59 - state and we're just going to call this
09:01 - callback function
09:02 - and now on the on press what we can do
09:04 - is we can simply call like
09:07 - so we can say like and we can pass the
09:09 - post.like post
09:10 - so let's make this an arrow function so
09:14 - like that and now what will happen is
09:16 - we'll call this function
09:17 - which will simply call the current
09:19 - function which is called like so let's
09:21 - reference that with this dot like and
09:23 - then that will
09:24 - pass post dot like post and what will
09:26 - happen is we'll call this dot set state
09:28 - with the callback which will be uh post.
09:30 - like post
09:31 - so now let's have a look at what happens
09:33 - and see if this is working so now if i
09:35 - press the button
09:36 - you can see that it's toggling from zero
09:37 - to one and it's actually being updated
09:39 - because of the fact that we're setting
09:40 - the state now the next thing that i want
09:43 - to do though is i want to give us some
09:44 - kind of indication
09:45 - on whether or not we've liked this or
09:47 - not because if i'm looking at this right
09:48 - now
09:49 - i don't know if i liked this or if i
09:51 - didn't like this and especially if
09:52 - there's a bunch more likes
09:54 - it's gonna be hard for me to determine
09:55 - that so let's change the color of this
09:57 - like button
09:58 - if we've liked it this is actually
09:59 - pretty easy to do inside of icon button
10:02 - what i'm going to do is i'm going to add
10:04 - color i'm going to say the color
10:06 - is going to be determined by if the user
10:09 - has liked this post or not
10:11 - so i'm going to start by saying
10:12 - post.user liked which remember
10:14 - tells us if the user has liked the post
10:16 - or not i'm going to put a question mark
10:18 - which essentially is saying
10:19 - if this is true what i write on the
10:21 - right hand side here
10:23 - will be what the color of this button
10:25 - will be so i'm going to say
10:28 - colors.green so this says if
10:31 - the user has liked this post then make
10:33 - this uh green
10:35 - otherwise which is this colon right here
10:37 - we need to pick the other color we want
10:38 - it to be
10:40 - so we're just going to say colors dot
10:42 - black which i think is the current color
10:44 - and now this essentially is saying okay
10:46 - if this is true colors.green is what
10:48 - it's going to be
10:49 - otherwise colors.black is what it will
10:51 - be that's the
10:52 - kind of inline expression here you can
10:54 - think of this as just like a condensed
10:56 - if statement
10:56 - if true do this otherwise do this that's
10:59 - what it's saying
11:00 - so let's give that a save and let's now
11:02 - have a look here and we can see this
11:03 - button is green because we've liked it
11:05 - and as we unclick it it goes back to
11:07 - black so i think that's pretty cool
11:09 - i think that looks good and now all we
11:11 - need to do is change this so that
11:13 - this widget that we have right here is
11:14 - actually at the bottom of the screen
11:16 - okay so to get this to go to the bottom
11:17 - of the screen there's a few things we're
11:19 - going to do
11:20 - first i'm going to get rid of this
11:21 - expanded here and let's just have a look
11:23 - at what happens if i do that so let's
11:24 - refresh here when we get rid of expanded
11:27 - and we can see that that actually brings
11:28 - us all the way down to the bottom of the
11:30 - screen
11:30 - so the reason that that worked is
11:32 - because since we have
11:34 - this actually has a height already this
11:36 - this uh thing at the bottom this post
11:38 - box right
11:39 - since it already has a notion of a
11:41 - height we don't need to expand it right
11:43 - and
11:43 - i was accidentally expanding it before
11:45 - that was just my mistake and when you
11:47 - expand that what it's saying is okay
11:48 - take up as much room as i can
11:50 - and since we have two things inside of a
11:52 - column that means this is going to take
11:54 - up half the column
11:55 - and this is going to take up the other
11:56 - half now if i get rid of the expanded
11:58 - off that
11:59 - what that means is okay this is going to
12:01 - going to expand as large as it can
12:03 - and it will only expand so such that
12:06 - this can fit on the screen right so it
12:07 - will take up all of the space
12:09 - other than what this takes up so that's
12:12 - kind of how you fix that
12:13 - is just make sure that if you have
12:15 - something that actually has a height
12:16 - already and has
12:18 - some items in it it's not expanded if
12:20 - you want it to be in a certain area and
12:22 - the thing above it or below it or
12:23 - whatever you're doing can be expanded to
12:25 - fill the rest of the space
12:26 - and there we go now we have a list view
12:29 - and we can add stuff to the list right
12:31 - if i go hello
12:32 - and i click enter we can scroll down and
12:34 - we can see we have the post hello
12:36 - now not the most fluid thing in the
12:38 - world you know obviously a lot of
12:39 - different changes we can make
12:41 - and in fact i'm going to do one last
12:42 - thing before we end the video here
12:44 - i want to make it so that when we type
12:46 - something in and we press enter
12:47 - it automatically collapses this text box
12:50 - here
12:50 - so you know when you're like typing in a
12:52 - form and you press enter and your text
12:54 - field goes away
12:54 - disappears you don't have to click out
12:56 - of it that's what i'd like to do just
12:58 - because this is kind of annoying that
12:59 - i'm going to have to
13:00 - you know like click the button or click
13:02 - the check mark to actually get it to go
13:04 - away
13:05 - so to do that i've actually got to find
13:07 - what the
13:08 - the command is because i forget but
13:10 - we're going to go inside of this click
13:12 - method
13:12 - which is inside of the text input widget
13:14 - state and instead of just clearing the
13:17 - text field
13:18 - what we're going to do is we're going to
13:19 - put it down and then we're going to
13:20 - clear it
13:21 - uh or we'll clear it and then we'll pull
13:23 - it down so to do that we're going to say
13:25 - focus and i believe this is scope so
13:28 - focus scope.of
13:30 - we're just going to type context like
13:32 - that dot
13:33 - unfocus this seems weird um to be honest
13:36 - with you i don't really know how we just
13:37 - grab
13:38 - context like that this is just something
13:40 - i found on stack overflow that seems to
13:42 - work being transparent with you guys
13:44 - here
13:44 - this is going to just take the focus of
13:46 - wherever we currently are so the context
13:48 - and just
13:48 - unfocus it so in that case if we're in a
13:50 - text field it will just
13:51 - unfocus the text field so let's give
13:53 - that a shot just by saving this file
13:55 - here
13:56 - and now if i type something and hit that
13:59 - button
13:59 - we can see we clear the text field and
14:01 - it unfocuses it and i noticed just by
14:03 - looking at this
14:04 - that you can kind of watch it clear and
14:06 - go down at the same time
14:08 - so maybe to fix this what i can do is i
14:10 - can actually just put
14:12 - the controller.clear after the focus
14:15 - goes away and we'll actually not even
14:17 - call
14:18 - the widget callback until after we
14:21 - remove the focus and clear the text so
14:23 - that way you can kind of see it being
14:24 - added to the list
14:25 - so let's give that a shot now and see
14:28 - how this looks so if i add something and
14:29 - press
14:30 - enter okay it seems to be doing the same
14:32 - thing but regardless i don't think the
14:34 - order really matters
14:35 - now we have all of these items in our
14:37 - list we can scroll through it
14:40 - and we can like and unlike our posts so
14:42 - that is pretty much all i have for you
14:44 - guys right now that is the list view
14:46 - that's how we set up the light counter
14:47 - the like button if you want to reduce
14:49 - the padding or change the style you're
14:51 - obviously welcome to do that
14:53 - uh and in future videos where i guess
14:55 - we're going to be setting up some kind
14:56 - of system where when you
14:57 - log in to start you have to pick a
14:59 - username so that we know what your name
15:01 - is going to be when you're posting
15:02 - i'm going to hook this up to a database
15:04 - we're going to have comments
15:06 - hopefully a bunch of other cool stuff
15:07 - i'm looking forward to making that in
15:08 - the rest of these videos
15:10 - so if you guys enjoyed make sure to
15:11 - leave a like subscribe and i will see
15:13 - you again in another
15:14 - flutter video

Cleaned transcript:

and then inside of this card which is just like a little block then this kind of has a nice little border to it so it will separate our items out we're going to need to put a bunch of different things so i want to have the body text i want to have the author and then to the right hand side i want to have a little icon that's a like button and i want to display the number of likes that we're going to have for this post so that's what we're gonna have to do here this is gonna get fairly complicated but regardless let's just go ahead and try it out so what we're gonna do here is we're gonna start by saying card child and then we're gonna make a row that's going to hold our um what's it going to be i guess the title or not the title sorry the body text the author will be in one kind of section of the row and then to the right hand side of the row we will have the like button and the number of likes so if i bring up my thing again what i'm trying to do is have like on the left hand side what the post was to the content that they posted and then the um author right below that and kind of like subtitle text and then on the right hand side a like button and a little number displaying the number of likes so that's what this row is going to represent so inside of this row i'm going to say children and we're going to say is equal to widget and there's going to be a blank list and then inside of here what we're going to do is we're going to add a few expanded children that are going to take up this entire row so again remember what expanded does is just fill with the entire space so we're going to have two expandeds in here which are going to hold the two different things that we want so the first thing that i want is the um that text that i've been talking about so that body text and that author text so what our child for the first expanded widget is going to be is a list tile now a list tile essentially is just going to give us a nice way to format what i've been talking about it's like that body text and that author so we'll say list oops like that and then tile and inside of here we can have a look and we can see that it has oh well it's kind of cutting off here but it has a title and a subtitle trailing is three line enabled a bunch of other stuff on tap on long press so we can do a bunch of stuff with this but what we're going to do is we're just going to say title like that and for the title what i'm going to do is i'm simply going to put whatever the title of the post is so we're just going to say post dot and in this case it's going to be body i think that's what i wanted yeah so we're going to say post.body we need to wrap that in a text widget so we'll say text post.body because this accepts a widget and then the next thing that we're going to do is we're going to do the subtitle so the subtitle is simply going to be the author's name so we'll do the same thing we'll go text and let me just save this so we get some better output awesome so text and then inside of here we're going to say post dot author so remember post is defined right here and we can simply access the attributes of post like the body of it and the author of it by just calling the dot operator whatever the name of that field is so that's all we need i believe for expanded and now what we're going to do is we're going to add the like button and the little number that's showing the amount of likes so inside of another expanded widget or actually sorry not another expanded widget inside of a row widget we're going to delete that we're going to have the like button and then the number of likes so we're going to say children widget and then the first thing we're going to do is put an icon button so i believe we already showed how this works so i'll skim through it quicker we're going to say icon button like that and we're going to say icon oops is equal to the icon of icons dot and i believe this one is thumb up or something like that yeah so icon icon is icon dot thumb up awesome so let's save that now what else do we need for our icon button i believe we need to have an on pressed method so what happens when we press this button well that's a good question now we need to call a method when we press this so what we're actually going to call when we press this is the let's have a look here where is post is the method that we defined up here which is like post so essentially whenever we click the like button we'll call on like post on that post so that it will add one or it will handle you know should we add a like should we delete a like so on so forth so to do that we're going to say post dot like post and we don't need the other set of brackets there because this is going to just call that function we're just defining what it is and with that for now i think i'm going to leave it like that i just want to render this and see what it looks like first and then we can keep going from there but i want to do something because right now we have not changed anything at all so let's hot reload that and let's just type hello and let's see what's happening here okay so you can see that now that's actually being added into the list view we have hello tim we have that little like button and if i go tim like that i go yes like that go sure like that you can see we have this list now that has all of the items that we're talking about now it doesn't automatically scroll to the bottom it's not super fancy or anything like that and yes this still looks kind of weird because it's right there we'll change those things later but for now you get the idea that that's what this list view looks like and this is kind of what a card is is these little things that have a bit of padding and some separation between them okay so now we need to add so let's go back actually here for a second we need to add that little icon that's telling us how many likes we actually have we can add that before or after the like button i think it might look look better before on the left hand side of the like button so let's go ahead and do that so we're going to go inside of children here and we're going to say container oops so container like that and inside of container we're going to put the child as some text so we'll just say child equals text and we're going to say this is post dot likes like that uh post dot likes it's a reason that's not working oh it's because it's text we need to put that to string so we're gonna grab the amount of likes from this post and just put that into a string and we'll simply put that inside of a container and display that now there's a few other things that i want to add here so the first thing is inside of text i want to change the font size to make it a bit bigger so i'm going to say style like that and then we can say this is text style and inside of text style we'll simply say font size like that and we'll just make this size 20. that way it's just a little bit larger and then the last thing that i have is i have some padding inside of this container just to make it so that it's not kind of squished and right beside this icon button so i'm going to say padding like that and then inside of here we're going to say this is equal to edge insets like that and i believe we just put dot from ltrb so what this is saying is edge inset stop from left top right bottom so we're making a padding and we just define how much padding we want on the left side the top side the right side the bottom side now padding is just amount of pixels that are separated between the widget and another widget so in this case this widget is going to be to the left or where the icon button is so i'm going to add padding to the right side of this so that it pushes it away from the other widget so i'll just add i guess we had what like 10 i don't know 10 pixels of padding so we'll add 10 pixels of padding like that and i'll make the rest of them zero and now if we go ahead and take a look here after hot reloading let's see what we're getting so if we add something like that we can see now that we have the likes right we have all the likes popping up and if i actually click the button nothing is happening right now so we'll need to do something to change that so that when we click the button it actually gets updated but you can see right now at least that this is working and now we just need to fix the button and make this layout look a little bit better so the reason that this button isn't actually working when we press it is because when we call this method post.like post we're not telling this widget to update we actually need to put this inside of a set state so that we actually tell this widget hey when we click this button we need to update this text because post dot like post if we have a look at where what's actually happening here there's nothing that says this dot set state so since it doesn't think the state of the widget is changing it's not actually going to update what's being rendered so we need to make a method here we'll just call this void you know like or something like that and all we're going to do is we're simply going to call so we need to actually pass the post object first of all actually we'll call we'll just put callback in here so we'll say function callback and then what we'll do instead of here is say this not set state and inside of the set state we'll just go call back like that and let's add our semicolons and i think that should be good so what this is going to do is it's going to say okay we're going to set the state and we're just going to call this callback function and now on the on press what we can do is we can simply call like so we can say like and we can pass the post.like post so let's make this an arrow function so like that and now what will happen is we'll call this function which will simply call the current function which is called like so let's reference that with this dot like and then that will pass post dot like post and what will happen is we'll call this dot set state with the callback which will be uh post. like post so now let's have a look at what happens and see if this is working so now if i press the button you can see that it's toggling from zero to one and it's actually being updated because of the fact that we're setting the state now the next thing that i want to do though is i want to give us some kind of indication on whether or not we've liked this or not because if i'm looking at this right now i don't know if i liked this or if i didn't like this and especially if there's a bunch more likes it's gonna be hard for me to determine that so let's change the color of this like button if we've liked it this is actually pretty easy to do inside of icon button what i'm going to do is i'm going to add color i'm going to say the color is going to be determined by if the user has liked this post or not so i'm going to start by saying post.user liked which remember tells us if the user has liked the post or not i'm going to put a question mark which essentially is saying if this is true what i write on the right hand side here will be what the color of this button will be so i'm going to say colors.green so this says if the user has liked this post then make this uh green otherwise which is this colon right here we need to pick the other color we want it to be so we're just going to say colors dot black which i think is the current color and now this essentially is saying okay if this is true colors.green is what it's going to be otherwise colors.black is what it will be that's the kind of inline expression here you can think of this as just like a condensed if statement if true do this otherwise do this that's what it's saying so let's give that a save and let's now have a look here and we can see this button is green because we've liked it and as we unclick it it goes back to black so i think that's pretty cool i think that looks good and now all we need to do is change this so that this widget that we have right here is actually at the bottom of the screen okay so to get this to go to the bottom of the screen there's a few things we're going to do first i'm going to get rid of this expanded here and let's just have a look at what happens if i do that so let's refresh here when we get rid of expanded and we can see that that actually brings us all the way down to the bottom of the screen so the reason that that worked is because since we have this actually has a height already this this uh thing at the bottom this post box right since it already has a notion of a height we don't need to expand it right and i was accidentally expanding it before that was just my mistake and when you expand that what it's saying is okay take up as much room as i can and since we have two things inside of a column that means this is going to take up half the column and this is going to take up the other half now if i get rid of the expanded off that what that means is okay this is going to going to expand as large as it can and it will only expand so such that this can fit on the screen right so it will take up all of the space other than what this takes up so that's kind of how you fix that is just make sure that if you have something that actually has a height already and has some items in it it's not expanded if you want it to be in a certain area and the thing above it or below it or whatever you're doing can be expanded to fill the rest of the space and there we go now we have a list view and we can add stuff to the list right if i go hello and i click enter we can scroll down and we can see we have the post hello now not the most fluid thing in the world you know obviously a lot of different changes we can make and in fact i'm going to do one last thing before we end the video here i want to make it so that when we type something in and we press enter it automatically collapses this text box here so you know when you're like typing in a form and you press enter and your text field goes away disappears you don't have to click out of it that's what i'd like to do just because this is kind of annoying that i'm going to have to you know like click the button or click the check mark to actually get it to go away so to do that i've actually got to find what the the command is because i forget but we're going to go inside of this click method which is inside of the text input widget state and instead of just clearing the text field what we're going to do is we're going to put it down and then we're going to clear it uh or we'll clear it and then we'll pull it down so to do that we're going to say focus and i believe this is scope so focus scope.of we're just going to type context like that dot unfocus this seems weird um to be honest with you i don't really know how we just grab context like that this is just something i found on stack overflow that seems to work being transparent with you guys here this is going to just take the focus of wherever we currently are so the context and just unfocus it so in that case if we're in a text field it will just unfocus the text field so let's give that a shot just by saving this file here and now if i type something and hit that button we can see we clear the text field and it unfocuses it and i noticed just by looking at this that you can kind of watch it clear and go down at the same time so maybe to fix this what i can do is i can actually just put the controller.clear after the focus goes away and we'll actually not even call the widget callback until after we remove the focus and clear the text so that way you can kind of see it being added to the list so let's give that a shot now and see how this looks so if i add something and press enter okay it seems to be doing the same thing but regardless i don't think the order really matters now we have all of these items in our list we can scroll through it and we can like and unlike our posts so that is pretty much all i have for you guys right now that is the list view that's how we set up the light counter the like button if you want to reduce the padding or change the style you're obviously welcome to do that uh and in future videos where i guess we're going to be setting up some kind of system where when you log in to start you have to pick a username so that we know what your name is going to be when you're posting i'm going to hook this up to a database we're going to have comments hopefully a bunch of other cool stuff i'm looking forward to making that in the rest of these videos so if you guys enjoyed make sure to leave a like subscribe and i will see you again in another flutter video
