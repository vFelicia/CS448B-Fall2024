With timestamps:

00:02 - hey guys uh welcome back to another
00:03 - video this is the fifth video in my
00:06 - Python Programming series and today
00:08 - we're going to be talking about chained
00:09 - conditionals and nested if statements um
00:13 - so pretty much chained conditionals are
00:15 - just adding multiple conditions in one
00:18 - uh one line with using words like and
00:22 - and or okay uh we also have keyword not
00:25 - that we're going to talk about as well
00:27 - so if you haven't seen the last videos
00:29 - in my series go ahead and get watch
00:31 - those now because they are prerequisite
00:33 - for this video all right so let's get
00:35 - right ahead and start um so if you
00:37 - remember before we have something called
00:39 - conditions so for example if we have the
00:41 - variable X I'll set that to two and the
00:43 - variable Y which is equal to three we
00:45 - could have a condition like x equal
00:46 - equal y now obviously we know from the
00:49 - last video that this is going to give us
00:51 - a value of
00:52 - false oops and I cannot type today sorry
00:57 - um and that is because 2 is not equal to
00:59 - three pretty straightforward I hope you
01:01 - have all understood that from the last
01:03 - video all right so what we want to do in
01:06 - this now is we're going to want to check
01:07 - multiple conditions um so we'll put a
01:10 - condition here so if x is equal to Y and
01:13 - then we can put a word in like this the
01:17 - andw um now we'll add another condition
01:19 - so if x +
01:22 - y is equal to five okay so this first
01:27 - condition is going to give us a value of
01:29 - false so if X is equal to Y because they
01:31 - are not the same but now x + y does
01:34 - indeed equal 5 so that is going to give
01:37 - us a value of true so where I'm
01:39 - highlighting we have true and then where
01:40 - I'm highlighting now again we have false
01:43 - so because we have the keyword and this
01:46 - if statement is not going to run so I'll
01:49 - put a print here just to show you we're
01:51 - going to print out true or let's just
01:54 - say
01:55 - ran and you'll see when I run the
01:57 - program nothing is going to happen that
02:00 - is because when we use the and keyword
02:02 - it means both conditions on either side
02:04 - must be true so if we change this to
02:07 - something like if Y is equal to 3 now
02:12 - that is going to be
02:13 - true and we'll print out
02:16 - ran okay so that's pretty basic now
02:18 - let's do the or keyword so we'll put or
02:22 - right here and we'll change this
02:24 - condition back to if Y is equal to X and
02:27 - now take a guess on what you think is
02:29 - going to happen
02:31 - well pretty much with the or keyword it
02:33 - means either of the conditions have to
02:35 - be true so if Y is equal to X or x + y
02:40 - is equal to 5 then we are going to run
02:43 - this line now since x + y does equal
02:46 - five we have a true here and again Y is
02:48 - not equal to X so we have a false and
02:50 - you'll see that the program is going to
02:52 - run that's because only one of the
02:54 - condition conditions has to be true for
02:57 - it to
02:58 - run Okay so so that is the and in the OR
03:01 - keyword they are pretty straightforward
03:02 - and pretty basic now I'd like to point
03:05 - out that you can actually add as many
03:07 - conditions as you'd like so now I can
03:09 - have an or I can have an and um I could
03:12 - have another condition I could do as
03:14 - many as I possibly can imagine as many
03:16 - as I'd like to do um so now we'll put an
03:19 - lse statement in here and we'll change
03:22 - this just a little bit to use another
03:26 - keyword we'll just put a sad face here
03:28 - to show that we didn't run it
03:30 - that we ran the else okay um so now
03:32 - there's something called the not word
03:34 - okay so we're going to put not right
03:36 - here around it and then I will show you
03:38 - what it does so pretty much notot
03:40 - reverses anything that you have inside
03:43 - of the brackets of the knot so in here
03:46 - we have if Y is equal to X or x + y is
03:50 - equal to 5 so we know again that this
03:51 - gives us a value of true um so now since
03:55 - true is inside of the not true becomes
03:58 - false now we have if false um so
04:02 - obviously that's going to bring us to
04:03 - the else statement um which is going to
04:05 - print the sad face so I'll show you that
04:08 - that does indeed work so we have the sad
04:11 - face right now if we change these so
04:13 - that both of these conditions are false
04:15 - you'll see that we have false false um
04:18 - which is going to give us an overall
04:19 - value of false um and then we're going
04:22 - to have the not which is going to change
04:23 - that into a true and will allow us to
04:25 - run it just like that ran um so yeah so
04:30 - that's how the not the end and the or
04:32 - work uh and now let's get into nested
04:35 - Loops or sorry not nested Loops Nest
04:38 - nested if statements so we'll do a basic
04:41 - if statement here if x is equal to
04:44 - 2 um if Y is equal to
04:48 - 3 um and then we'll add our
04:52 - El's like this and we'll put some print
04:55 - statements in here
05:01 - okay uh just give me a second while I
05:03 - type out the print statements and then
05:05 - we will go into what this is going to
05:08 - do x = 2 and Y = 3 um so you may have
05:14 - guessed already but pretty much we can
05:18 - actually add as many if statements
05:20 - embedded or nested as we'd like so I
05:22 - could add another if statement here and
05:23 - just constantly keep checking um now the
05:26 - reason I showed you chain conditionals
05:28 - is because if I didn't want to go
05:30 - through the hassle of adding all of
05:32 - these uh nested statements I could just
05:35 - do an and right here and check for
05:38 - another condition but sometimes we do
05:39 - want to do uh nested statements so we'll
05:42 - say here x = 2 y does not
05:46 - equal uh what is it
05:49 - three okay so uh I know I just did that
05:51 - pretty quickly but let's walk through it
05:53 - now so we have if x is equal to 2 then
05:56 - we're going to run whatever is in here
05:59 - because it is indented uh so now we come
06:01 - in here and we say well is y equal to 3
06:04 - let's say it is now we're going to print
06:06 - out this statement and we're going to be
06:07 - done with this loop with this uh bit of
06:10 - code so we're going to skip down to the
06:12 - end of the program where we have nothing
06:13 - else um then so let's say we do another
06:16 - example X is equal to 2 but y equal 4 so
06:20 - that means we're actually going to run
06:21 - the else which means now we've got print
06:24 - X is equal to 2 but y does not equal 3
06:27 - and then the last case is X is not equal
06:30 - to 2 so we don't even bother checking if
06:32 - Y is equal to 3 we just go down and we
06:34 - print X does not equal 2 so we'll change
06:38 - around the variables and we'll show you
06:39 - how this works just very
06:41 - quickly so we can see X is equal to 2
06:43 - and Y is equal to 3 that is because
06:45 - obviously up here two and three now if I
06:47 - want to change Y and we change it to
06:50 - four we get X is equal to 2 but Y is not
06:54 - equal to three so that means we ran this
06:56 - one in
06:57 - here now let's change it so that X is
07:00 - equal to 4 as
07:02 - well and we can see we get X does not
07:06 - equal
07:07 - 2 all right so that's uh the basics on
07:10 - nested statements and chained
07:12 - conditionals I hope you found this video
07:14 - helpful um stay tuned for more videos
07:17 - we're going to be getting into some more
07:19 - advanced topics and in the next video
07:20 - we're going to be covering
07:22 - Loops um yeah so if you like the video
07:25 - uh please subscribe and like and I'll
07:27 - see you in the next one

Cleaned transcript:

hey guys uh welcome back to another video this is the fifth video in my Python Programming series and today we're going to be talking about chained conditionals and nested if statements um so pretty much chained conditionals are just adding multiple conditions in one uh one line with using words like and and or okay uh we also have keyword not that we're going to talk about as well so if you haven't seen the last videos in my series go ahead and get watch those now because they are prerequisite for this video all right so let's get right ahead and start um so if you remember before we have something called conditions so for example if we have the variable X I'll set that to two and the variable Y which is equal to three we could have a condition like x equal equal y now obviously we know from the last video that this is going to give us a value of false oops and I cannot type today sorry um and that is because 2 is not equal to three pretty straightforward I hope you have all understood that from the last video all right so what we want to do in this now is we're going to want to check multiple conditions um so we'll put a condition here so if x is equal to Y and then we can put a word in like this the andw um now we'll add another condition so if x + y is equal to five okay so this first condition is going to give us a value of false so if X is equal to Y because they are not the same but now x + y does indeed equal 5 so that is going to give us a value of true so where I'm highlighting we have true and then where I'm highlighting now again we have false so because we have the keyword and this if statement is not going to run so I'll put a print here just to show you we're going to print out true or let's just say ran and you'll see when I run the program nothing is going to happen that is because when we use the and keyword it means both conditions on either side must be true so if we change this to something like if Y is equal to 3 now that is going to be true and we'll print out ran okay so that's pretty basic now let's do the or keyword so we'll put or right here and we'll change this condition back to if Y is equal to X and now take a guess on what you think is going to happen well pretty much with the or keyword it means either of the conditions have to be true so if Y is equal to X or x + y is equal to 5 then we are going to run this line now since x + y does equal five we have a true here and again Y is not equal to X so we have a false and you'll see that the program is going to run that's because only one of the condition conditions has to be true for it to run Okay so so that is the and in the OR keyword they are pretty straightforward and pretty basic now I'd like to point out that you can actually add as many conditions as you'd like so now I can have an or I can have an and um I could have another condition I could do as many as I possibly can imagine as many as I'd like to do um so now we'll put an lse statement in here and we'll change this just a little bit to use another keyword we'll just put a sad face here to show that we didn't run it that we ran the else okay um so now there's something called the not word okay so we're going to put not right here around it and then I will show you what it does so pretty much notot reverses anything that you have inside of the brackets of the knot so in here we have if Y is equal to X or x + y is equal to 5 so we know again that this gives us a value of true um so now since true is inside of the not true becomes false now we have if false um so obviously that's going to bring us to the else statement um which is going to print the sad face so I'll show you that that does indeed work so we have the sad face right now if we change these so that both of these conditions are false you'll see that we have false false um which is going to give us an overall value of false um and then we're going to have the not which is going to change that into a true and will allow us to run it just like that ran um so yeah so that's how the not the end and the or work uh and now let's get into nested Loops or sorry not nested Loops Nest nested if statements so we'll do a basic if statement here if x is equal to 2 um if Y is equal to 3 um and then we'll add our El's like this and we'll put some print statements in here okay uh just give me a second while I type out the print statements and then we will go into what this is going to do x = 2 and Y = 3 um so you may have guessed already but pretty much we can actually add as many if statements embedded or nested as we'd like so I could add another if statement here and just constantly keep checking um now the reason I showed you chain conditionals is because if I didn't want to go through the hassle of adding all of these uh nested statements I could just do an and right here and check for another condition but sometimes we do want to do uh nested statements so we'll say here x = 2 y does not equal uh what is it three okay so uh I know I just did that pretty quickly but let's walk through it now so we have if x is equal to 2 then we're going to run whatever is in here because it is indented uh so now we come in here and we say well is y equal to 3 let's say it is now we're going to print out this statement and we're going to be done with this loop with this uh bit of code so we're going to skip down to the end of the program where we have nothing else um then so let's say we do another example X is equal to 2 but y equal 4 so that means we're actually going to run the else which means now we've got print X is equal to 2 but y does not equal 3 and then the last case is X is not equal to 2 so we don't even bother checking if Y is equal to 3 we just go down and we print X does not equal 2 so we'll change around the variables and we'll show you how this works just very quickly so we can see X is equal to 2 and Y is equal to 3 that is because obviously up here two and three now if I want to change Y and we change it to four we get X is equal to 2 but Y is not equal to three so that means we ran this one in here now let's change it so that X is equal to 4 as well and we can see we get X does not equal 2 all right so that's uh the basics on nested statements and chained conditionals I hope you found this video helpful um stay tuned for more videos we're going to be getting into some more advanced topics and in the next video we're going to be covering Loops um yeah so if you like the video uh please subscribe and like and I'll see you in the next one
