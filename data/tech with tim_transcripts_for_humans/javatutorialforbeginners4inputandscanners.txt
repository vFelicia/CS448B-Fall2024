With timestamps:

00:00 - hello and welcome back so in this video
00:02 - I'm just gonna be teaching you one more
00:04 - operator that I forgot to mention in the
00:06 - last video and we're gonna be talking
00:07 - about getting input from the user using
00:10 - something called a scanner now this
00:12 - scanner is going to allow us to grab
00:14 - like text numbers strings all that fun
00:17 - stuff from the user and then do
00:18 - something with that input and that's
00:20 - kind of the basis of programming right
00:22 - based on what a user does we want to do
00:23 - something in most cases so the first
00:27 - thing that we're going to do is just
00:28 - teach this other operator it is the
00:30 - remainder operator it's not gonna take
00:31 - me very long this case I'm just gonna
00:33 - say int X is equal to 56 modulus and
00:38 - this is what the name of the operator is
00:40 - modulus it's simply a % pick a number in
00:42 - this case I'm gonna pick five okay so
00:46 - what this remainder operator does it's
00:47 - called modulus okay some people like to
00:50 - call a remainder operator and it's
00:51 - simply a % gives us the remainder of
00:53 - this division so this division is
00:56 - actually equal to would equal to 56
00:58 - divided by 5 should give us 11 okay 11
01:02 - remainder 1 is what this division
01:04 - actually is equal to so if we print X we
01:08 - should get a value of 1 and there we go
01:11 - and that's literally all your remainder
01:13 - operator is gives you the remainder of a
01:15 - division I don't think I need to talk
01:17 - about it too much more I'm sure you guys
01:18 - want to get into the input so I will
01:20 - leave that alone for now ok so let's get
01:23 - rid of this line and now let's talk
01:25 - about how we can get input so using a
01:27 - scanner is what we're gonna do so well
01:29 - first thing we need to actually do is at
01:31 - the top of your program you might notice
01:32 - I have a new line here now this says
01:34 - import java.util.scanner I need you guys
01:37 - to type this out for me Java util dot
01:39 - scanner make sure you add your semicolon
01:41 - because this is what we're gonna be
01:42 - using to get input and whenever we use
01:44 - certain tools in Java we need to import
01:46 - them at the top of our program so that
01:49 - we can simply just type like certain dot
01:52 - types and we'll get into this later when
01:53 - we talk about classes and methods and
01:55 - all that stuff ok
01:57 - so once we've done that we need to set
01:58 - up a new scanner object so we're gonna
02:01 - type scanner the name of our scanner I'm
02:02 - just gonna say SC is equal to a new
02:05 - scanner and inside of the scanner we're
02:08 - gonna type system dot okay in this
02:11 - brackets this might
02:13 - seem confusing but all this is doing is
02:15 - it's saying scanner is a dab type just
02:17 - like string as the data type just like
02:19 - boolean is data okay it's a different
02:21 - type of data type but it is in a data
02:23 - type its name is SC and instead of
02:26 - typing like 1 or like putting quotation
02:29 - marks and typing a string we're gonna
02:31 - say what's equal to a new scanner and
02:33 - what this scanner is gonna be is system
02:36 - in which means typing on your keyboard
02:38 - and there's different types of scanners
02:40 - which we'll get into later not in this
02:41 - video
02:42 - so once we've set up our scanner we need
02:46 - to actually use the scanner so how can
02:49 - we do this so what I'm going to type now
02:51 - is I'm going to say let's say a string
02:55 - scan is equal to SC dot next and I think
03:02 - we can just use next yeah so what this
03:05 - does is we're creating a new variable
03:07 - string it's called or it's a string type
03:09 - called scanned it is gonna get the next
03:13 - stream of input from this scanner object
03:16 - okay so SC dot next is what allows us to
03:19 - get a string from the user so I'm just
03:21 - gonna print out scans after we get it
03:24 - because I want to show you what happened
03:25 - so I'm just gonna run the program in
03:26 - Illustrator and we'll talk about it so
03:27 - now you can see if I go down here my
03:29 - cursor shows up and I'm able to type
03:31 - this cuz when type below okay watch
03:33 - would watch REMS when I hit enter it
03:35 - prints hello underneath it so hello
03:39 - which we typed in was the input it got
03:43 - scanned in by this scanner object using
03:45 - SC next it got stored in the variable
03:47 - scanned and then we were able to print
03:49 - scanned out to the screen
03:50 - okay pretty straightforward that's how
03:54 - it works with strings now watch this if
03:57 - I type 1 1 works fine but I just need to
04:01 - show you that now I'm gonna do this
04:02 - within Takai so I'm gonna say int
04:05 - scanned equals SC next well what's
04:08 - what's happening what's wrong well the
04:11 - issue right now is we are trying to turn
04:14 - a string which is got which is what this
04:16 - returns to us into an integer so we
04:19 - can't actually do that because what per
04:21 - say no way I would proceed we just run
04:24 - into an error we cannot convert from
04:25 - string to
04:26 - because what this method gives us is a
04:29 - string now if we wanted to be able to
04:31 - get an integer from the user for them
04:32 - typing in we have to use a another
04:35 - method okay
04:36 - and this one is called next it now you
04:39 - can see we're getting no more red lines
04:41 - everything seems to be working fine SC
04:43 - next int and if we run this then we type
04:47 - like 54 that works fine prints that out
04:50 - for us what would happen so if I try to
04:52 - type in something like hello so there's
04:54 - no errors right now like job is not
04:55 - telling us there's anything wrong if I
04:57 - type hello we get an issue now that's
04:59 - because this was expecting me to type in
05:02 - a integer and what happens in here like
05:05 - this little line of code what it
05:06 - actually does is it tries to convert
05:08 - what I'm typing in which automatically
05:10 - comes in as a string into an integer so
05:12 - when it tried to do this it tried to
05:14 - convert hello into an integer and no one
05:16 - not you not you not you or me knows how
05:19 - to convert hello into an integer so it
05:21 - threw us an error and said no that's not
05:22 - allowed you can't do that so I'll show
05:25 - you what we can do now if we want to get
05:26 - boolean x' and other types and i'll show
05:28 - you a way to work around an error like
05:30 - this okay so if we want to get a boolean
05:32 - value we could type boolean scan equals
05:35 - next and when you look at this boolean
05:38 - that's literally the name to get a
05:40 - boolean SC next boolean okay
05:42 - so let's run this now note a boolean has
05:45 - to be true spelled correctly at for
05:48 - false with lower cases I'm pretty sure
05:50 - so true that works fine but if I try to
05:52 - type like hello or if I or something in
05:54 - there that's gonna crash it's gonna give
05:56 - us an issue okay so boolean lets you do
05:59 - that one if you want to get a double you
06:01 - can do double equals next and guess what
06:04 - this one is
06:05 - next double there you go and now it's
06:08 - gonna expect a number of some sorts like
06:10 - six we work fine but I'm gonna do six
06:12 - point three and it prints out six point
06:14 - three let's actually just test 686 yeah
06:16 - it just gives us six point oh so that
06:18 - works fine okay
06:19 - I'm two getting doubles now I want to
06:21 - work around the issue of what happens
06:23 - like we get that crash okay we don't we
06:26 - don't want that crash so how can we fix
06:27 - that if per se when it's expecting a
06:30 - double I type in like hello well what we
06:32 - should do is always get a string so we
06:35 - should always say SC done next and
06:38 - always turn this into a string and that
06:40 - because a string can be anything like
06:42 - anything we type in here is fine to be a
06:44 - string because remember a string is
06:45 - simply anything in double quotation
06:47 - marks so if I type true although yeah we
06:50 - know it's a boolean it's in the
06:51 - quotation mark so it's really string
06:52 - okay if I type one that's a string type
06:55 - one point six it's a string anything can
06:58 - be converted into a string pretty much
07:00 - so that works fine for us now once we
07:03 - have it as a string we can then convert
07:05 - it into an integer so I had to say a
07:08 - quick cut there but what we're going to
07:10 - do now is we are going to attempt to
07:12 - convert this value into a different type
07:15 - so in our case I want to convert it into
07:17 - an integer so a way that we can do that
07:19 - is we first need to set up a variable so
07:20 - I'm gonna say into X in this case is
07:22 - equal to scant now I need to put
07:27 - something with this scan I can't just
07:29 - say int x equals scan I can't I can't
07:31 - just do that it's not just gonna be able
07:32 - to convert that for me it doesn't know
07:33 - how to do that
07:34 - so what we need to do here is actually
07:36 - do dot and or certainly it's type here
07:42 - integer dot parse int okay and then
07:46 - inside of the brackets for parse int
07:48 - we're going to put scanned and what this
07:52 - is going to allow us to do is well
07:53 - convert into an integer and if you guys
07:55 - just highlight over this if you don't
07:56 - know what it does it you can actually
07:57 - read through the definitions in this
07:58 - case it's gonna say parse is the string
08:00 - argument as a signed decimal integer the
08:03 - character in the string must be all
08:04 - decimal digits except the first
08:06 - character may be an ASCII minus sign
08:08 - okay so we can tell you it tells you
08:10 - exactly what this does
08:11 - it tells you what integer does integer
08:13 - is a class so yeah
08:15 - it they'll convert that for us so then I
08:17 - find one two print X to the screen that
08:19 - would work fine now the thing is though
08:22 - and this is what we're gonna be doing
08:23 - the next video is we still run into the
08:26 - same issue because again like now if I
08:29 - type something like Hello we still get a
08:32 - crash because how do we can convert
08:34 - hello into an integer well we should
08:37 - really first check if the value is an
08:39 - integer and I'm gonna be showing you in
08:42 - the next video I believe the next one
08:44 - were the one after that how we can
08:45 - actually do that using if statements and
08:47 - else statements and error caching later
08:50 - on so stay tuned for that but this is
08:52 - the way for right now
08:53 - you know you're gonna be getting an
08:54 - integer that you can convert it in or
08:56 - obviously you could just do next int and
08:59 - turn this to an int like that and
09:01 - everything works fine for you anyways
09:03 - that has been it for this video and
09:06 - again in the next video we're gonna be
09:07 - going over conditional statements and
09:09 - then probably will be going into if
09:12 - analysis the one after that
09:13 - anyways if you guys enjoyed it as always
09:15 - please make sure you leave a like and
09:17 - subscribe and I will see you again in
09:18 - the next video
09:19 - [Music]

Cleaned transcript:

hello and welcome back so in this video I'm just gonna be teaching you one more operator that I forgot to mention in the last video and we're gonna be talking about getting input from the user using something called a scanner now this scanner is going to allow us to grab like text numbers strings all that fun stuff from the user and then do something with that input and that's kind of the basis of programming right based on what a user does we want to do something in most cases so the first thing that we're going to do is just teach this other operator it is the remainder operator it's not gonna take me very long this case I'm just gonna say int X is equal to 56 modulus and this is what the name of the operator is modulus it's simply a % pick a number in this case I'm gonna pick five okay so what this remainder operator does it's called modulus okay some people like to call a remainder operator and it's simply a % gives us the remainder of this division so this division is actually equal to would equal to 56 divided by 5 should give us 11 okay 11 remainder 1 is what this division actually is equal to so if we print X we should get a value of 1 and there we go and that's literally all your remainder operator is gives you the remainder of a division I don't think I need to talk about it too much more I'm sure you guys want to get into the input so I will leave that alone for now ok so let's get rid of this line and now let's talk about how we can get input so using a scanner is what we're gonna do so well first thing we need to actually do is at the top of your program you might notice I have a new line here now this says import java.util.scanner I need you guys to type this out for me Java util dot scanner make sure you add your semicolon because this is what we're gonna be using to get input and whenever we use certain tools in Java we need to import them at the top of our program so that we can simply just type like certain dot types and we'll get into this later when we talk about classes and methods and all that stuff ok so once we've done that we need to set up a new scanner object so we're gonna type scanner the name of our scanner I'm just gonna say SC is equal to a new scanner and inside of the scanner we're gonna type system dot okay in this brackets this might seem confusing but all this is doing is it's saying scanner is a dab type just like string as the data type just like boolean is data okay it's a different type of data type but it is in a data type its name is SC and instead of typing like 1 or like putting quotation marks and typing a string we're gonna say what's equal to a new scanner and what this scanner is gonna be is system in which means typing on your keyboard and there's different types of scanners which we'll get into later not in this video so once we've set up our scanner we need to actually use the scanner so how can we do this so what I'm going to type now is I'm going to say let's say a string scan is equal to SC dot next and I think we can just use next yeah so what this does is we're creating a new variable string it's called or it's a string type called scanned it is gonna get the next stream of input from this scanner object okay so SC dot next is what allows us to get a string from the user so I'm just gonna print out scans after we get it because I want to show you what happened so I'm just gonna run the program in Illustrator and we'll talk about it so now you can see if I go down here my cursor shows up and I'm able to type this cuz when type below okay watch would watch REMS when I hit enter it prints hello underneath it so hello which we typed in was the input it got scanned in by this scanner object using SC next it got stored in the variable scanned and then we were able to print scanned out to the screen okay pretty straightforward that's how it works with strings now watch this if I type 1 1 works fine but I just need to show you that now I'm gonna do this within Takai so I'm gonna say int scanned equals SC next well what's what's happening what's wrong well the issue right now is we are trying to turn a string which is got which is what this returns to us into an integer so we can't actually do that because what per say no way I would proceed we just run into an error we cannot convert from string to because what this method gives us is a string now if we wanted to be able to get an integer from the user for them typing in we have to use a another method okay and this one is called next it now you can see we're getting no more red lines everything seems to be working fine SC next int and if we run this then we type like 54 that works fine prints that out for us what would happen so if I try to type in something like hello so there's no errors right now like job is not telling us there's anything wrong if I type hello we get an issue now that's because this was expecting me to type in a integer and what happens in here like this little line of code what it actually does is it tries to convert what I'm typing in which automatically comes in as a string into an integer so when it tried to do this it tried to convert hello into an integer and no one not you not you not you or me knows how to convert hello into an integer so it threw us an error and said no that's not allowed you can't do that so I'll show you what we can do now if we want to get boolean x' and other types and i'll show you a way to work around an error like this okay so if we want to get a boolean value we could type boolean scan equals next and when you look at this boolean that's literally the name to get a boolean SC next boolean okay so let's run this now note a boolean has to be true spelled correctly at for false with lower cases I'm pretty sure so true that works fine but if I try to type like hello or if I or something in there that's gonna crash it's gonna give us an issue okay so boolean lets you do that one if you want to get a double you can do double equals next and guess what this one is next double there you go and now it's gonna expect a number of some sorts like six we work fine but I'm gonna do six point three and it prints out six point three let's actually just test 686 yeah it just gives us six point oh so that works fine okay I'm two getting doubles now I want to work around the issue of what happens like we get that crash okay we don't we don't want that crash so how can we fix that if per se when it's expecting a double I type in like hello well what we should do is always get a string so we should always say SC done next and always turn this into a string and that because a string can be anything like anything we type in here is fine to be a string because remember a string is simply anything in double quotation marks so if I type true although yeah we know it's a boolean it's in the quotation mark so it's really string okay if I type one that's a string type one point six it's a string anything can be converted into a string pretty much so that works fine for us now once we have it as a string we can then convert it into an integer so I had to say a quick cut there but what we're going to do now is we are going to attempt to convert this value into a different type so in our case I want to convert it into an integer so a way that we can do that is we first need to set up a variable so I'm gonna say into X in this case is equal to scant now I need to put something with this scan I can't just say int x equals scan I can't I can't just do that it's not just gonna be able to convert that for me it doesn't know how to do that so what we need to do here is actually do dot and or certainly it's type here integer dot parse int okay and then inside of the brackets for parse int we're going to put scanned and what this is going to allow us to do is well convert into an integer and if you guys just highlight over this if you don't know what it does it you can actually read through the definitions in this case it's gonna say parse is the string argument as a signed decimal integer the character in the string must be all decimal digits except the first character may be an ASCII minus sign okay so we can tell you it tells you exactly what this does it tells you what integer does integer is a class so yeah it they'll convert that for us so then I find one two print X to the screen that would work fine now the thing is though and this is what we're gonna be doing the next video is we still run into the same issue because again like now if I type something like Hello we still get a crash because how do we can convert hello into an integer well we should really first check if the value is an integer and I'm gonna be showing you in the next video I believe the next one were the one after that how we can actually do that using if statements and else statements and error caching later on so stay tuned for that but this is the way for right now you know you're gonna be getting an integer that you can convert it in or obviously you could just do next int and turn this to an int like that and everything works fine for you anyways that has been it for this video and again in the next video we're gonna be going over conditional statements and then probably will be going into if analysis the one after that anyways if you guys enjoyed it as always please make sure you leave a like and subscribe and I will see you again in the next video
