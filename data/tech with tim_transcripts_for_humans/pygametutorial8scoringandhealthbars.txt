With timestamps:

00:00 - hey guys and welcome back to another
00:02 - YouTube video so it's gonna be the
00:03 - eighth video in my PI game programming
00:06 - series I just want to start off by
00:07 - apologizing for not posting recently
00:10 - it's been about four or five days
00:11 - without a post and not just because I've
00:13 - been very busy I haven't had an
00:15 - opportunity to record any videos no
00:17 - excuses though I'm gonna get right back
00:19 - into things and be posting more videos
00:21 - this week I'm trying to record a bunch
00:23 - tonight so that I have some in case I
00:25 - missed future uploads so sorry about the
00:28 - late video here but I'm bringing out for
00:31 - you guys now so in this video what I'm
00:33 - going to be doing is I'm going to be
00:35 - showing you something pretty useful and
00:36 - something you've seen a lot of different
00:37 - games now I did mention in my last video
00:39 - I was in this in this next tutorial that
00:42 - what we were gonna do is we're gonna
00:43 - make it so that our character could
00:45 - collide with the Goblin
00:46 - now I haven't forgotten about that but
00:48 - we're gonna put that on pause right now
00:49 - I'm gonna do that in the next video
00:50 - because what I wanted to do is give our
00:53 - goblin a little bit of a health bar so
00:55 - now that we have our bullets colliding
00:56 - let's not stop there let's give our
00:58 - goblin a health bar and then we can
01:00 - diminish his health every time he gets
01:02 - hit by a bullet but maybe 10 points 20
01:04 - points whatever or a percentage doesn't
01:06 - matter and then I want to give us some a
01:08 - little bit of score up in the top right
01:10 - hand corner here so we can keep track of
01:13 - how many times our bullet has hit the
01:15 - Goblin just to add a little bit more to
01:17 - this quote-unquote game now if you guys
01:19 - are expecting this to be like a full
01:21 - fledge like platforming game whatever
01:22 - that's not the point of these series the
01:24 - point is to just show you different tips
01:26 - and different ways of programming small
01:28 - games so that you can bring that into
01:30 - making whatever game you guys want to
01:32 - make because I can't possibly do a
01:33 - tutorial on the game that every single
01:35 - person would want to make so I'm just
01:37 - gonna do it like this and then hopefully
01:40 - you guys can learn from this and we'll
01:41 - be able to make your own games in the
01:43 - future so let's get right into the video
01:45 - then so the first thing we need to do if
01:49 - we're gonna be giving actually let's
01:50 - start with the score because this is
01:52 - fairly easy is we need to display
01:54 - something on the screen so in that top
01:55 - right hand corner that I was talking
01:57 - about we want to display for example
01:58 - maybe a number yeah we're gonna do a
02:01 - number of what your score is now you
02:04 - guys can increment this however you want
02:05 - but for the score we're gonna have to
02:07 - keep track of how many times our gaulden
02:10 - is hit so we're just going to make a
02:11 - variable up at the top of our program
02:13 - I'm gonna set it equal to zero and you
02:15 - can call whatever you want I'm gonna
02:16 - call mine score now we have this little
02:20 - function here called hit now this is
02:22 - what happens every time our Goblin gets
02:23 - hit so we're gonna leave this right now
02:26 - we're gonna do something else in this
02:28 - but pretty much once our Goblin is hit
02:30 - so a certain amount of times we're gonna
02:32 - make him disappear and this I'm gonna do
02:34 - later so stick around for that let's go
02:37 - down into here and this is where we call
02:39 - that hit method so every time that our
02:42 - bullet runs into our goblin which we do
02:44 - here we run this goblin dot hit method
02:48 - and then we delete the bullet right so
02:50 - in here doesn't matter where but just in
02:52 - the little if statement we're just gonna
02:53 - increment our score because this means
02:55 - we hit the goblin so we can add one to
02:57 - the score now that we have our score and
03:00 - we're incrementing it we need to draw it
03:02 - onto the screen so this is where things
03:03 - are a little bit different and I'm gonna
03:05 - be showing you something new so if we
03:07 - want to draw something like text which
03:09 - is what we want onto the screen in
03:10 - Python there's a certain way we can do
03:12 - that in PI and PI games sorry not Python
03:15 - we first need to create a font variable
03:18 - so do that kitten call whatever you like
03:20 - I'm just gonna call mine font because
03:22 - I'm only gonna be using one but if you
03:23 - had multiple fonts in your program you'd
03:25 - probably want to get name one like big
03:27 - font small font italic et cetera
03:30 - whatever you wanted there and then we're
03:32 - gonna take PI game don't font don't sys
03:35 - flaunt like this stands for system font
03:38 - make sure you have these capitals here
03:40 - and then in here you're gonna type in
03:43 - the name of your font I'm just gonna use
03:44 - Comic Sans if you want a list of the
03:47 - fonts you can just go on the internet
03:48 - and search high game fonts and they'll
03:50 - come up with all of them there's a ton
03:51 - of different ones but if you know the
03:53 - name of the font just try it in there
03:54 - and they'll probably work , and then how
03:57 - big the font is we're gonna do our size
03:59 - 30 and then if you wanted your font to
04:01 - be bold which I do we're gonna just
04:02 - going to type true and then if you
04:04 - wanted it to be italicized afterwards
04:05 - you could type true as well so this is
04:08 - your bold and this is your truth alright
04:10 - and your italicized sorry now if you
04:12 - don't care about those you want to leave
04:14 - them empty you can just either leave it
04:16 - so like this it's not gonna be bullets
04:18 - not gonna be italicized but I just want
04:20 - mine to be bold so I'm gonna type true
04:22 - right here alright now we have our font
04:24 - object
04:25 - um and now we need to render some font
04:28 - so the next thing we need to do is we're
04:30 - gonna go in our redraw game window
04:31 - function I'm just gonna do text here
04:34 - it's a new variable we're going to set
04:35 - it equal to font so the variable that we
04:38 - just created here dot render now this is
04:42 - doing exactly what it says it's gonna be
04:43 - rendering new text so that it's ready to
04:45 - be put onto the screen pretty much the
04:47 - way this works is you put a string in
04:49 - here with like a color and stuff and
04:52 - then it's gonna create a your it's gonna
04:55 - turn it into a surface which you can
04:56 - then blit on to the screen just like we
04:59 - were plating an image we're gonna be
05:00 - bleeding the the surface or the text
05:02 - onto the screen so I'm gonna do score :
05:06 - space plus and then our variables score
05:10 - so that we get it all in one nice string
05:13 - here then we need the color or actually
05:16 - we don't need the color we just need to
05:17 - put one here don't ask me why you need
05:18 - to do that you just need to do that put
05:20 - a 1 here and then we're gonna put our
05:22 - color so in this case I'm just gonna
05:24 - make one block or maybe we'll make it oh
05:26 - yeah I will make it black why not block
05:29 - like that and then now that we've
05:31 - created the font here we've rendered it
05:33 - turned into a surface we can now draw it
05:35 - on the screen using the same thing we
05:36 - did for our images so we're gonna do
05:38 - wind up lit we're going to put text in
05:40 - here and then the position in this case
05:42 - I'm going to do 390 for the X and simply
05:45 - 10 for the Y and that should hopefully
05:48 - give it to us and about the top
05:49 - right-hand corner of the screen now if I
05:51 - run the program we get a quick issue
05:54 - here must be string not int I ran into
05:57 - it and this is the issue here sorry so
05:58 - where we have our score we should you
06:00 - put string around it that's because we
06:03 - can't add an integer to a string my bad
06:05 - so go ahead and fix that get around the
06:08 - program and there we go we get score it
06:11 - looks pretty good in my opinion up in
06:12 - the top right hand corner you can see
06:14 - when I hit my goblin it is incremented
06:16 - and it keeps going up and that's very
06:19 - good so that's the start of the video so
06:22 - now let's get into the health bar so the
06:24 - score is great now we want to turn to
06:26 - the health bar portion so pretty much
06:28 - the way I want the health writer look
06:29 - you guys can change it if you want so I
06:31 - wanted to be hovering on top of the
06:33 - Goblin and then I want it to move with
06:35 - the Goblin and then we're just gonna
06:37 - have it so it's gonna be all green and
06:38 - every
06:39 - time you hit him section of red is gonna
06:41 - fill in or like a section of green is
06:43 - gonna go away if that makes sense so the
06:45 - first thing we can do actually is if you
06:47 - see we have these red boxes around our
06:49 - characters we can go ahead and get rid
06:51 - of those for right now because we were
06:53 - just using them in the other videos to
06:55 - check the hitbox of our characters so we
06:57 - get rid of those wherever we have our
06:59 - draw method so this guy is in my enemy
07:01 - here I'm just gonna comment it out in
07:03 - case I want to use it later and then
07:05 - where's our player he's up here we can
07:08 - comment that out as well so that way
07:10 - we're not going to see those ugly red
07:12 - boxes on our screen floating around and
07:13 - now the next step is we're going to draw
07:17 - our health bar so to do this I'm pretty
07:19 - much just going to use two rectangles
07:21 - and we need to change some ink but I'm
07:24 - going to do that in a second so to to
07:25 - draw two rectangles we do the same thing
07:27 - we were doing before which you can do
07:28 - pygame dot draw dot rect
07:33 - we're gonna start with the window and
07:35 - color the first rectangle we're gonna
07:37 - draw is gonna be green like that or it's
07:41 - gonna be red sorry and then we're gonna
07:43 - do our Rex which is gonna be equal to
07:48 - our hip box now if I just use the X&Y of
07:50 - the character you remember it's
07:52 - different than the hitbox coordinates
07:53 - we're just gonna use our hip box
07:55 - I'm just copy this down we're gonna do
07:57 - self-thought hip box like this the first
08:01 - coordinate which is gonna be our hip box
08:02 - X which we already found would be the
08:04 - closest to where our character actually
08:06 - is self-thought hitbox the Y and then we
08:11 - are going to do we're gonna have to move
08:13 - this one up remember because if we just
08:14 - do the the Y then it's gonna be drawn
08:17 - underneath because it's the top left
08:19 - coordinate so we're gonna just move this
08:20 - up by like let's say 20 pixels maybe and
08:23 - then we need our width and our height
08:24 - now our width is gonna be set by us I'm
08:26 - just gonna make it 50 and the height
08:28 - against could be set by us it's gonna be
08:29 - about 10 now I'm just gonna copy all
08:31 - this like that I'm gonna paste it down
08:34 - below and I'm gonna change this color to
08:37 - green and then we're gonna move to the
08:40 - next step so we can change the green in
08:45 - this hip box and you'll see how we do
08:46 - that the way we're going to do is just
08:47 - by changing the width of it so that it
08:49 - moves to the left
08:51 - yeah hopefully that makes sense now
08:54 - before we can move on any further we
08:57 - need to create two new attributes for
08:59 - our enemy in here so to do this we're
09:02 - just gonna we're gonna do the first
09:03 - one's gonna be health so obviously if
09:05 - we're using a health bar we're gonna
09:06 - need to keep track of the health on our
09:08 - character I'm gonna give my character
09:10 - health of 10 it doesn't really matter
09:12 - what you give it up to you really and
09:15 - brand-new self thought visible here now
09:18 - you'll see why we're gonna do this and
09:19 - yet near the end of the video but pretty
09:21 - much we're gonna say once his health is
09:24 - done we're gonna make him invisible and
09:26 - then we're gonna delete him so that we
09:28 - no longer see him on the screen because
09:29 - obviously if he has no health then he
09:31 - shouldn't be alive he shouldn't be on
09:32 - the screen or we can play some animation
09:34 - of him like falling over or whatever you
09:36 - guys want to do with that now we're
09:39 - gonna go down here and we're gonna say
09:40 - once he gets hit well that means we're
09:42 - gonna have to reduce his health so we're
09:44 - gonna subtract one from his health but
09:47 - the thing is what if his health is
09:48 - already zero so we need to first check
09:50 - that we have to say if self-thought
09:52 - health is greater than zero then we're
09:57 - gonna subtract one from health otherwise
10:00 - we are simply gonna set him to not
10:03 - visible anymore self-thought visible
10:05 - equals false and let me make sure I made
10:08 - this true oops we need to make this true
10:09 - otherwise this isn't gonna work and he's
10:11 - not gonna be seen right away so set that
10:12 - to true sorry now one last thing in our
10:17 - draw method here we only want to draw
10:19 - our character if he's visible right so
10:22 - underneath his self thought move here
10:24 - just gonna go we're gonna say if self
10:28 - thought visible
10:29 - so if our character is visible then we
10:32 - will draw him on to the screen and we
10:33 - will draw his hitbox otherwise we're not
10:35 - gonna bother drawing him pretty
10:37 - straightforward there all right so now
10:39 - we have our two rectangles and I'm gonna
10:41 - show you what happens if I run the
10:42 - program so go ahead we'll save that uh
10:46 - oops pi game is not defined just a typo
10:51 - there fix that now we can run the
10:55 - program and you can see that's nothing
10:58 - is showing up above our character or
10:59 - actually we have the green bar showing
11:01 - up but if I hit my character you can see
11:04 - it's not turning red
11:05 - now that's because I haven't changed the
11:07 - health Bartle right so once we hit him
11:10 - we need to modify the health bar in some
11:12 - way so that it looks like it's going
11:13 - down so we're gonna do that now all
11:15 - right so first of all let's just change
11:17 - this green actually because it's
11:18 - actually really difficult to see on our
11:20 - green background it's gonna make it a
11:22 - bit of a darker green hopefully that'll
11:24 - help us see it a bit and now we're gonna
11:26 - go to our width so our width is this
11:28 - third thing in the rectangle here now
11:31 - we're not gonna bother changing this one
11:32 - because this is gonna be the red back
11:34 - the background and the green is gonna be
11:36 - what's moving slowly down on it right
11:38 - and now we're gonna say we're gonna have
11:41 - to subtract from this whip a little bit
11:43 - complex but try to follow along so you
11:45 - know 50 minus and all the brackets I do
11:48 - here are very important just for order
11:49 - of operations and now what we're gonna
11:52 - do is we're gonna find the like how much
11:55 - we need to move it down each time it
11:57 - gets hit so to do this we're gonna do 50
11:59 - divided by 10 she's gonna give us an
12:02 - answer of 5 but I'm trying to leave it
12:04 - like this so you can see it right now so
12:07 - 50 divided by 10 in brackets again x and
12:12 - now we're gonna do another set of
12:15 - brackets 10 because this is the overall
12:18 - health that we're going to start with
12:19 - subtract our our health now like that so
12:25 - now what's gonna happen is we're gonna
12:26 - get 5 right so I'll put 5 in here now so
12:30 - it makes more sense 5 we don't need the
12:32 - brackets there I'm gonna multiply it by
12:34 - 10 minus self dot health so now when we
12:39 - do that I'll give you a quick example
12:40 - here if our health is 10 that means we
12:43 - have 10 minus 10 which gives us 0 and 5
12:46 - times zero zero so 50 minus zero gives
12:49 - us a full health bar for our health is
12:51 - nine meaning we've been hit one time
12:52 - we're gonna have 10 minus 9 equals 1 1
12:55 - times 5 50 minus 5 that gives us 45
12:58 - which now gives us a 9 out of 10 for the
13:01 - health bar so we'll illustrate this just
13:04 - by running the program now we can see we
13:07 - have a little darker green here it's
13:09 - easier to see and as we hit our
13:10 - character you can see his health bar
13:12 - diminishes it keeps going down until
13:14 - eventually we get to the point
13:17 - he has no more health left now this is a
13:21 - slight glitch because we've hit him 10
13:22 - times you hit him one more time you can
13:24 - see he disappears because he had just a
13:26 - sliver of health left so we want to fix
13:30 - this um pretty much this just meant he
13:33 - had to get hit 11 times before he died
13:34 - it's pretty easy all you have to do is
13:36 - just changes health to nine and then
13:38 - everything will work there but then you
13:40 - have to change this to like four point
13:41 - seven five I think um anyways that's
13:45 - been the tutorial for today we've gone
13:47 - over the hip box and we've gone over the
13:50 - score some pretty useful things you'd be
13:52 - surprised how many times you want to use
13:53 - something like this hip box maybe
13:55 - Fitness if it's just for like counting
13:58 - down the time like say you have a game
14:01 - and it takes 30 seconds to run like one
14:03 - round then you'd have up here you'd have
14:05 - one rectangle as a background and
14:06 - another rectangle that would continually
14:08 - shrink as the time God uh right that's
14:11 - how they do loading bars pretty much if
14:13 - you remember that like Windows Vista or
14:15 - like Windows 7 loading bar where you
14:17 - have the bar here and it slowly just
14:19 - moves down or slowly moves up that's how
14:21 - they do it with the little rectangles
14:23 - may be a bit more advanced but yeah so
14:26 - if you guys enjoyed the tutorial and it
14:27 - helped you out please help me out by
14:29 - leaving a like and subscribing and I'll
14:32 - see you again in the next video
14:34 - [Music]

Cleaned transcript:

hey guys and welcome back to another YouTube video so it's gonna be the eighth video in my PI game programming series I just want to start off by apologizing for not posting recently it's been about four or five days without a post and not just because I've been very busy I haven't had an opportunity to record any videos no excuses though I'm gonna get right back into things and be posting more videos this week I'm trying to record a bunch tonight so that I have some in case I missed future uploads so sorry about the late video here but I'm bringing out for you guys now so in this video what I'm going to be doing is I'm going to be showing you something pretty useful and something you've seen a lot of different games now I did mention in my last video I was in this in this next tutorial that what we were gonna do is we're gonna make it so that our character could collide with the Goblin now I haven't forgotten about that but we're gonna put that on pause right now I'm gonna do that in the next video because what I wanted to do is give our goblin a little bit of a health bar so now that we have our bullets colliding let's not stop there let's give our goblin a health bar and then we can diminish his health every time he gets hit by a bullet but maybe 10 points 20 points whatever or a percentage doesn't matter and then I want to give us some a little bit of score up in the top right hand corner here so we can keep track of how many times our bullet has hit the Goblin just to add a little bit more to this quoteunquote game now if you guys are expecting this to be like a full fledge like platforming game whatever that's not the point of these series the point is to just show you different tips and different ways of programming small games so that you can bring that into making whatever game you guys want to make because I can't possibly do a tutorial on the game that every single person would want to make so I'm just gonna do it like this and then hopefully you guys can learn from this and we'll be able to make your own games in the future so let's get right into the video then so the first thing we need to do if we're gonna be giving actually let's start with the score because this is fairly easy is we need to display something on the screen so in that top right hand corner that I was talking about we want to display for example maybe a number yeah we're gonna do a number of what your score is now you guys can increment this however you want but for the score we're gonna have to keep track of how many times our gaulden is hit so we're just going to make a variable up at the top of our program I'm gonna set it equal to zero and you can call whatever you want I'm gonna call mine score now we have this little function here called hit now this is what happens every time our Goblin gets hit so we're gonna leave this right now we're gonna do something else in this but pretty much once our Goblin is hit so a certain amount of times we're gonna make him disappear and this I'm gonna do later so stick around for that let's go down into here and this is where we call that hit method so every time that our bullet runs into our goblin which we do here we run this goblin dot hit method and then we delete the bullet right so in here doesn't matter where but just in the little if statement we're just gonna increment our score because this means we hit the goblin so we can add one to the score now that we have our score and we're incrementing it we need to draw it onto the screen so this is where things are a little bit different and I'm gonna be showing you something new so if we want to draw something like text which is what we want onto the screen in Python there's a certain way we can do that in PI and PI games sorry not Python we first need to create a font variable so do that kitten call whatever you like I'm just gonna call mine font because I'm only gonna be using one but if you had multiple fonts in your program you'd probably want to get name one like big font small font italic et cetera whatever you wanted there and then we're gonna take PI game don't font don't sys flaunt like this stands for system font make sure you have these capitals here and then in here you're gonna type in the name of your font I'm just gonna use Comic Sans if you want a list of the fonts you can just go on the internet and search high game fonts and they'll come up with all of them there's a ton of different ones but if you know the name of the font just try it in there and they'll probably work , and then how big the font is we're gonna do our size 30 and then if you wanted your font to be bold which I do we're gonna just going to type true and then if you wanted it to be italicized afterwards you could type true as well so this is your bold and this is your truth alright and your italicized sorry now if you don't care about those you want to leave them empty you can just either leave it so like this it's not gonna be bullets not gonna be italicized but I just want mine to be bold so I'm gonna type true right here alright now we have our font object um and now we need to render some font so the next thing we need to do is we're gonna go in our redraw game window function I'm just gonna do text here it's a new variable we're going to set it equal to font so the variable that we just created here dot render now this is doing exactly what it says it's gonna be rendering new text so that it's ready to be put onto the screen pretty much the way this works is you put a string in here with like a color and stuff and then it's gonna create a your it's gonna turn it into a surface which you can then blit on to the screen just like we were plating an image we're gonna be bleeding the the surface or the text onto the screen so I'm gonna do score space plus and then our variables score so that we get it all in one nice string here then we need the color or actually we don't need the color we just need to put one here don't ask me why you need to do that you just need to do that put a 1 here and then we're gonna put our color so in this case I'm just gonna make one block or maybe we'll make it oh yeah I will make it black why not block like that and then now that we've created the font here we've rendered it turned into a surface we can now draw it on the screen using the same thing we did for our images so we're gonna do wind up lit we're going to put text in here and then the position in this case I'm going to do 390 for the X and simply 10 for the Y and that should hopefully give it to us and about the top righthand corner of the screen now if I run the program we get a quick issue here must be string not int I ran into it and this is the issue here sorry so where we have our score we should you put string around it that's because we can't add an integer to a string my bad so go ahead and fix that get around the program and there we go we get score it looks pretty good in my opinion up in the top right hand corner you can see when I hit my goblin it is incremented and it keeps going up and that's very good so that's the start of the video so now let's get into the health bar so the score is great now we want to turn to the health bar portion so pretty much the way I want the health writer look you guys can change it if you want so I wanted to be hovering on top of the Goblin and then I want it to move with the Goblin and then we're just gonna have it so it's gonna be all green and every time you hit him section of red is gonna fill in or like a section of green is gonna go away if that makes sense so the first thing we can do actually is if you see we have these red boxes around our characters we can go ahead and get rid of those for right now because we were just using them in the other videos to check the hitbox of our characters so we get rid of those wherever we have our draw method so this guy is in my enemy here I'm just gonna comment it out in case I want to use it later and then where's our player he's up here we can comment that out as well so that way we're not going to see those ugly red boxes on our screen floating around and now the next step is we're going to draw our health bar so to do this I'm pretty much just going to use two rectangles and we need to change some ink but I'm going to do that in a second so to to draw two rectangles we do the same thing we were doing before which you can do pygame dot draw dot rect we're gonna start with the window and color the first rectangle we're gonna draw is gonna be green like that or it's gonna be red sorry and then we're gonna do our Rex which is gonna be equal to our hip box now if I just use the X&Y of the character you remember it's different than the hitbox coordinates we're just gonna use our hip box I'm just copy this down we're gonna do selfthought hip box like this the first coordinate which is gonna be our hip box X which we already found would be the closest to where our character actually is selfthought hitbox the Y and then we are going to do we're gonna have to move this one up remember because if we just do the the Y then it's gonna be drawn underneath because it's the top left coordinate so we're gonna just move this up by like let's say 20 pixels maybe and then we need our width and our height now our width is gonna be set by us I'm just gonna make it 50 and the height against could be set by us it's gonna be about 10 now I'm just gonna copy all this like that I'm gonna paste it down below and I'm gonna change this color to green and then we're gonna move to the next step so we can change the green in this hip box and you'll see how we do that the way we're going to do is just by changing the width of it so that it moves to the left yeah hopefully that makes sense now before we can move on any further we need to create two new attributes for our enemy in here so to do this we're just gonna we're gonna do the first one's gonna be health so obviously if we're using a health bar we're gonna need to keep track of the health on our character I'm gonna give my character health of 10 it doesn't really matter what you give it up to you really and brandnew self thought visible here now you'll see why we're gonna do this and yet near the end of the video but pretty much we're gonna say once his health is done we're gonna make him invisible and then we're gonna delete him so that we no longer see him on the screen because obviously if he has no health then he shouldn't be alive he shouldn't be on the screen or we can play some animation of him like falling over or whatever you guys want to do with that now we're gonna go down here and we're gonna say once he gets hit well that means we're gonna have to reduce his health so we're gonna subtract one from his health but the thing is what if his health is already zero so we need to first check that we have to say if selfthought health is greater than zero then we're gonna subtract one from health otherwise we are simply gonna set him to not visible anymore selfthought visible equals false and let me make sure I made this true oops we need to make this true otherwise this isn't gonna work and he's not gonna be seen right away so set that to true sorry now one last thing in our draw method here we only want to draw our character if he's visible right so underneath his self thought move here just gonna go we're gonna say if self thought visible so if our character is visible then we will draw him on to the screen and we will draw his hitbox otherwise we're not gonna bother drawing him pretty straightforward there all right so now we have our two rectangles and I'm gonna show you what happens if I run the program so go ahead we'll save that uh oops pi game is not defined just a typo there fix that now we can run the program and you can see that's nothing is showing up above our character or actually we have the green bar showing up but if I hit my character you can see it's not turning red now that's because I haven't changed the health Bartle right so once we hit him we need to modify the health bar in some way so that it looks like it's going down so we're gonna do that now all right so first of all let's just change this green actually because it's actually really difficult to see on our green background it's gonna make it a bit of a darker green hopefully that'll help us see it a bit and now we're gonna go to our width so our width is this third thing in the rectangle here now we're not gonna bother changing this one because this is gonna be the red back the background and the green is gonna be what's moving slowly down on it right and now we're gonna say we're gonna have to subtract from this whip a little bit complex but try to follow along so you know 50 minus and all the brackets I do here are very important just for order of operations and now what we're gonna do is we're gonna find the like how much we need to move it down each time it gets hit so to do this we're gonna do 50 divided by 10 she's gonna give us an answer of 5 but I'm trying to leave it like this so you can see it right now so 50 divided by 10 in brackets again x and now we're gonna do another set of brackets 10 because this is the overall health that we're going to start with subtract our our health now like that so now what's gonna happen is we're gonna get 5 right so I'll put 5 in here now so it makes more sense 5 we don't need the brackets there I'm gonna multiply it by 10 minus self dot health so now when we do that I'll give you a quick example here if our health is 10 that means we have 10 minus 10 which gives us 0 and 5 times zero zero so 50 minus zero gives us a full health bar for our health is nine meaning we've been hit one time we're gonna have 10 minus 9 equals 1 1 times 5 50 minus 5 that gives us 45 which now gives us a 9 out of 10 for the health bar so we'll illustrate this just by running the program now we can see we have a little darker green here it's easier to see and as we hit our character you can see his health bar diminishes it keeps going down until eventually we get to the point he has no more health left now this is a slight glitch because we've hit him 10 times you hit him one more time you can see he disappears because he had just a sliver of health left so we want to fix this um pretty much this just meant he had to get hit 11 times before he died it's pretty easy all you have to do is just changes health to nine and then everything will work there but then you have to change this to like four point seven five I think um anyways that's been the tutorial for today we've gone over the hip box and we've gone over the score some pretty useful things you'd be surprised how many times you want to use something like this hip box maybe Fitness if it's just for like counting down the time like say you have a game and it takes 30 seconds to run like one round then you'd have up here you'd have one rectangle as a background and another rectangle that would continually shrink as the time God uh right that's how they do loading bars pretty much if you remember that like Windows Vista or like Windows 7 loading bar where you have the bar here and it slowly just moves down or slowly moves up that's how they do it with the little rectangles may be a bit more advanced but yeah so if you guys enjoyed the tutorial and it helped you out please help me out by leaving a like and subscribing and I'll see you again in the next video
