With timestamps:

00:00 - hey guys and welcome back to the
00:01 - Raspberry Pi tutorial so in today's
00:03 - video I'm going to be showing you how to
00:05 - use this PIR motion detector now we're
00:08 - gonna get right into it and I'm gonna
00:09 - explain to you guys what this is and
00:11 - what we're gonna be doing is essentially
00:12 - is seeing when this thing detects some
00:14 - kind of motion we're gonna turn on a
00:16 - nice little green LED using some GPIO
00:19 - pins on our Raspberry Pi and a
00:22 - breadboard so let's get right into it
00:24 - and first start by discussing what is a
00:26 - PIR sensor and how does this work now
00:28 - I'm pretty sure that this stands for
00:30 - passive infrared radar now what that
00:33 - means is it's gonna check for infrared
00:36 - rays to determine whether or not
00:38 - something has passed in front of it or
00:40 - not now if you don't know what infrared
00:42 - rays are essentially they're just a
00:43 - wavelength similar to kind of like radio
00:47 - waves or microwaves or something like
00:49 - that they're just on a different
00:50 - frequency and essentially any living
00:52 - breathing thing like us humans give off
00:55 - infrared rays and they're commonly seen
00:57 - as like heat so if you look at kind of a
01:00 - heat map then you'll be looking at
01:01 - essentially infrared way waves and what
01:04 - this does is detect the change in
01:06 - infrared waves so it can tell when
01:08 - something's in front of it because it's
01:09 - looking at those wavelengths that
01:11 - obviously as humans we can't see but
01:13 - this thing can detect so what we're
01:15 - gonna do is we're gonna start by just
01:16 - plugging this into our breadboard
01:17 - anywhere vertically so that these three
01:20 - pins here negative positive and s are in
01:22 - different rows of the breadboard now
01:25 - what we're gonna do is we're gonna wire
01:26 - up some of the stuff to our Raspberry Pi
01:29 - on these GPIO pins and then plug it into
01:32 - our breadboard and add the LED now
01:34 - before we do that I just want to talk
01:36 - quickly about what's actually on this
01:38 - sensor so you should see if I get this
01:40 - to focus well enough there's two little
01:42 - kind of plus signs like they look like
01:44 - dials almost that you can mess with and
01:47 - actually move on this sensor so the left
01:49 - one here is actually the sensitivity so
01:52 - how sensitive this sensor is to the
01:55 - change in infrared waves now for me I've
01:57 - just turned mine all the way to the left
01:58 - which means as least sensitive as
02:00 - possible because it's already like super
02:02 - sensitive to start and then on the right
02:04 - side here this is actually the duration
02:06 - in which we're gonna give off a signal
02:08 - if we send if we send some kind of
02:11 - motion so I've turned this one all the
02:13 - way to the left as
02:14 - well because in our code we're gonna
02:15 - handle how long to do certain things
02:17 - based on motion or not but if you turn
02:19 - this all the way to the right side here
02:21 - so just by sticking that in and going to
02:23 - the right then what's gonna happen is
02:25 - when this detects motion for a really
02:26 - long time there's gonna be current that
02:28 - flows out of this s pin and goes into a
02:30 - Raspberry Pi and says that there is
02:32 - motion even though maybe there might not
02:34 - be it's just how long it's triggering a
02:36 - signal to come out and you guys can mess
02:38 - with that and you'll probably experiment
02:39 - and see what I mean
02:40 - so now what I'm gonna do is just plug in
02:42 - some jumper wires that again you're
02:44 - gonna need there's a link in the
02:45 - description if you don't already have
02:46 - some of these they're really cheap again
02:48 - you can get them for a few bucks off
02:49 - Amazon and we're gonna need ones that
02:51 - have female on one end and male on the
02:55 - other end like that so what I'm gonna do
02:57 - is plug in three of these to start into
03:00 - my Raspberry Pi and then we'll plug in a
03:01 - fourth one as well so we're gonna start
03:03 - by plugging one into the 5 volt pin
03:05 - which is the pin on the very bottom
03:07 - right so that should focus in for you
03:08 - guys then we're gonna skip one pin go to
03:11 - the left and plug in this white wire to
03:14 - what's known as the ground pin so you
03:16 - can see here that we have if it focuses
03:19 - up in just a second here we have a black
03:22 - wire we skip one and then we go with the
03:24 - white wire onto that ground pin now
03:26 - directly above the white wire and one to
03:29 - the left we're gonna plug into our
03:31 - fourth GPIO pin and it that should look
03:34 - like that now so you can see at the top
03:36 - we're gonna be going i've actually
03:37 - plugged this one into the wrong one it
03:39 - needs to go one over to the right here
03:41 - we're gonna be plugging into that fourth
03:42 - pin on the top row and then the bottom
03:44 - pin here on the right and three over now
03:48 - we need one more wire like this
03:50 - unfortunately I only have another black
03:52 - one but I'm gonna essentially skip one
03:54 - pin on this top row from our orange one
03:56 - and plug that in there to our other GPIO
03:59 - pin now if I'm not mistaken I should
04:02 - have plugged everything in correctly and
04:03 - now we can actually use these to go
04:05 - right into the breadboard now important
04:08 - fact make sure that this is awful you're
04:10 - doing this otherwise you might run into
04:11 - some errors where you short a circuit
04:13 - and you don't want to damage your
04:14 - Raspberry Pi so now what we're gonna do
04:17 - is we're gonna plug all of these into
04:18 - our breadboard properly now this orange
04:21 - wire is gonna go directly into
04:24 - our sensor and it's actually going to go
04:26 - on s so you see how we have if I can get
04:29 - in here negative positive s this one is
04:31 - gonna go right in line with s like that
04:34 - now this is what's actually going to
04:36 - take essentially current from this
04:39 - sensor and tell our Raspberry Pi whether
04:41 - or not we have motion or not now for our
04:43 - 5 volt wire which is this one and for
04:46 - our ground pin our ground wire which is
04:49 - this white one what we're gonna do is
04:51 - plug into the terminals on the board so
04:53 - positive is gonna be for five volt and
04:55 - negative is gonna be for ground so we'll
04:57 - plug those in here like that and now
05:01 - we're gonna use this one for the LED in
05:03 - just one second so now we're going to
05:05 - need some more jumper wires but in this
05:07 - case these ones are actually going to be
05:09 - male to male so they'll have this
05:10 - connector on both sides hopefully you
05:13 - guys can see that all right and what
05:14 - we're gonna do is plug this into the
05:16 - rail here so we're gonna put one wire on
05:18 - that negative rail or positive there and
05:20 - one wire on this negative rail and we're
05:23 - gonna plug these directly now into our
05:25 - sensor like this so now what we're gonna
05:27 - do is we're gonna plug negative to
05:29 - negative so we're gonna plug ground into
05:31 - the negative pin here I'll zoom in on
05:34 - this in a second so you guys can really
05:35 - get a good idea and see this and then
05:38 - we're gonna plug in our other wire which
05:39 - will be this blue one into the positive
05:41 - so if I can actually fit that in here
05:44 - it's a little bit tricky to get in there
05:47 - we go alright so now you should see that
05:50 - we have three wires connected here and
05:52 - that our negative is obviously going to
05:54 - negative here our positive is going to
05:56 - positive and then this orange wire is
05:58 - going directly into our raspberry pi now
06:00 - the reason I've done that and plugged it
06:02 - into the rail rather than just right
06:04 - into the sensor is because I need to
06:06 - turn on the LED using the negative
06:09 - terminal here so what I'm gonna do is
06:12 - now take my LED it has a short end and a
06:14 - long end so the long end is actually on
06:16 - the bottom the short end is on the top
06:18 - and this long end is what's gonna get
06:20 - signal from a GPIO pin and the short end
06:23 - is gonna go right into our negative rail
06:26 - now we're also going to use a resistor
06:28 - to make sure that we're not flowing too
06:30 - much current into the LED and that it
06:32 - doesn't pop and explode on us so just
06:34 - bear with me for one second here guys
06:36 - and we'll get this wired up and then
06:37 - we'll get right into the
06:38 - I wouldn't figure out how all this
06:39 - actually works so what I'm going to do
06:41 - is plug a resistor in so that it lines
06:43 - up on this negative rail summer so we'll
06:45 - put one end into this negative rail and
06:47 - the other end is just gonna go somewhere
06:50 - into our breadboard so any of these rows
06:52 - here now we're gonna plug the short end
06:54 - of our LED so this top end here if I get
06:57 - this to focus so it's in line with the
06:59 - resistor so we'll plug it in like that
07:01 - and I'll zoom in on this in just a
07:03 - second and then what we're gonna do is
07:05 - plug in this final black wire here so
07:07 - that it's in line with the long end
07:09 - because this is where it's going to be
07:10 - getting current so now if you have a
07:12 - look at our breadboard you can see that
07:14 - we have a resistor that goes into this
07:16 - negative rail so the blue strip here
07:19 - which then eventually obviously is going
07:20 - to go into the raspberry pi and then we
07:23 - have the GPIO pin which is the second
07:26 - black wire we plugged in plugged into
07:28 - the long end of our woody call it's led
07:32 - here and then we have that plugged into
07:34 - resistor which is going there
07:36 - finally our sensor is obviously getting
07:39 - positive negative and s and that s is
07:42 - going to be what's actually sending a
07:43 - signal to our Raspberry Pi alright so
07:45 - that's it for the wiring now we can go
07:47 - ahead and plug in our Raspberry Pi and
07:49 - we'll get right into the code and figure
07:51 - out how we can turn on this led by
07:53 - detecting motion all right so I'm here
07:55 - on my Raspberry Pi and now we're gonna
07:57 - write the program that essentially will
07:58 - allow this to work now I have my
08:01 - Raspberry Pi plugged in I'm gonna try to
08:03 - show you guys I have this hooked up now
08:05 - and just make sure that your sensor is
08:07 - in a place where you'll be able to like
08:08 - wave your hand in front of it or like
08:10 - get out of the way or something like
08:11 - that to test this out so what we're
08:13 - gonna do is we're gonna say if I can get
08:15 - in ideally here from GPIO 0 imports and
08:21 - we're gonna do the same import we did
08:22 - before which is LED and we're gonna do
08:24 - the same thing now so from GPI o 0
08:28 - imports motion sensor sensor like that
08:33 - now what we're gonna do is similar to
08:35 - before we're just gonna define which one
08:37 - the motion sensor is in which one the
08:39 - LED is so which GPIO pin we're using so
08:42 - we're gonna say green underscore LED
08:45 - which is the one I'm using is equal to
08:47 - LED and this is gonna be on GPIO pins 17
08:51 - and we're gonna say PIR which is our
08:54 - sensor is gonna be equal to a motion
08:56 - sensor so motion sensor and then that is
09:01 - on GPIO pin for now all we're gonna do
09:04 - is write a very basic while loop that's
09:06 - gonna turn on our LED while we have
09:08 - motion and turn it off when we don't
09:10 - have motion so to do this ran say while
09:12 - true and in here we are going to say PIR
09:17 - dot wait underscore for underscore
09:21 - motion now what this does is exactly
09:24 - what it says it's gonna wait on this
09:26 - line until we get motion now as soon as
09:29 - we get motion it's gonna execute it's
09:31 - gonna go to the next line and run the
09:34 - program so you gonna say PR art don't
09:36 - wait for motion we're gonna print motion
09:40 - detected like that
09:42 - and then what we're gonna do is we're
09:43 - gonna turn on the LED so we do that by
09:45 - saying green underscore LED dot pawn now
09:48 - after that what we're gonna do is say
09:50 - PIR dot wait underscore for underscore
09:54 - no emotion now this works the same it's
09:57 - simply says we're gonna wait until
09:59 - there's no motion detected so right now
10:01 - since we got motion detected we know
10:03 - something's moving around so as soon as
10:05 - something stops moving then what we'll
10:07 - do is we'll say green underscore LED got
10:10 - off and we'll print motion stopped okay
10:15 - and now if we actually run this this
10:19 - should work now we're gonna start off
10:21 - I'm just gonna add one line up here that
10:23 - just says green underscore LED dot off
10:26 - just to make sure it starts off off
10:28 - because sometimes if you exit this
10:30 - program by quitting it and the green LED
10:32 - is on it's just gonna stay on because
10:34 - you haven't turned it off yet so now if
10:36 - we run this and we're in front of the
10:38 - sensor we should see immediately that
10:40 - that LED turns on and we get on our
10:42 - console motion detected now let's run
10:45 - this and test it out so pressing f5 here
10:48 - and you should see that right away mine
10:50 - actually says motion detected and that's
10:52 - because I am right in front of this
10:54 - motion sensor like this now it says
10:56 - motion stopped and you can see that now
10:58 - the LEDs actually on because we have
11:01 - motion detected now as soon as I stop
11:03 - moving so if I put
11:04 - and I don't move it should say motion
11:07 - stopped and if I put my hand in front of
11:09 - it it's gonna be motion detected and you
11:10 - get the point now it's really difficult
11:12 - to see that my LED is actually on right
11:15 - now because it's like super dull but for
11:18 - you guys you shouldn't be as doing you
11:19 - should be able to see it but if I were
11:21 - to remove the resistor from mine then it
11:23 - would be easier to see but that
11:24 - essentially is how that works it's a
11:27 - really cool idea to use maybe if you
11:28 - want to log like when motion starts and
11:30 - when motion stops maybe see if someone's
11:32 - coming into your room or something like
11:34 - that all you have to do essentially is
11:35 - leave this program running and then it's
11:37 - gonna detect when someone comes in the
11:39 - room and comes out of the room as long
11:41 - as you have that sensor in a pretty good
11:44 - area the kind of scope for the sensor is
11:46 - pretty wide so as long as it's somewhere
11:48 - where it can maybe see the door or
11:50 - something like that then that'll work
11:51 - well and yeah that's kind of how that
11:53 - works so I hope you guys got some value
11:55 - from this video and now you know how to
11:57 - use the PIR motion sensor they're really
11:59 - cool and I've just been showing you
12:00 - really basic examples with super simple
12:02 - code on how to run these but
12:04 - incorporating them with like a
12:05 - surveillance system or something like
12:07 - that is what I want to do in future
12:08 - videos so let me get is know let me know
12:11 - if you guys have any ideas on what you'd
12:12 - like to see with some of these sensors
12:13 - and the knowledge I've been showing and
12:15 - I'll definitely probably put something
12:17 - out like that in the future so with that
12:18 - being said if you guys enjoyed the video
12:19 - please make sure you leave a like and
12:21 - subscribe and I will see you again

Cleaned transcript:

hey guys and welcome back to the Raspberry Pi tutorial so in today's video I'm going to be showing you how to use this PIR motion detector now we're gonna get right into it and I'm gonna explain to you guys what this is and what we're gonna be doing is essentially is seeing when this thing detects some kind of motion we're gonna turn on a nice little green LED using some GPIO pins on our Raspberry Pi and a breadboard so let's get right into it and first start by discussing what is a PIR sensor and how does this work now I'm pretty sure that this stands for passive infrared radar now what that means is it's gonna check for infrared rays to determine whether or not something has passed in front of it or not now if you don't know what infrared rays are essentially they're just a wavelength similar to kind of like radio waves or microwaves or something like that they're just on a different frequency and essentially any living breathing thing like us humans give off infrared rays and they're commonly seen as like heat so if you look at kind of a heat map then you'll be looking at essentially infrared way waves and what this does is detect the change in infrared waves so it can tell when something's in front of it because it's looking at those wavelengths that obviously as humans we can't see but this thing can detect so what we're gonna do is we're gonna start by just plugging this into our breadboard anywhere vertically so that these three pins here negative positive and s are in different rows of the breadboard now what we're gonna do is we're gonna wire up some of the stuff to our Raspberry Pi on these GPIO pins and then plug it into our breadboard and add the LED now before we do that I just want to talk quickly about what's actually on this sensor so you should see if I get this to focus well enough there's two little kind of plus signs like they look like dials almost that you can mess with and actually move on this sensor so the left one here is actually the sensitivity so how sensitive this sensor is to the change in infrared waves now for me I've just turned mine all the way to the left which means as least sensitive as possible because it's already like super sensitive to start and then on the right side here this is actually the duration in which we're gonna give off a signal if we send if we send some kind of motion so I've turned this one all the way to the left as well because in our code we're gonna handle how long to do certain things based on motion or not but if you turn this all the way to the right side here so just by sticking that in and going to the right then what's gonna happen is when this detects motion for a really long time there's gonna be current that flows out of this s pin and goes into a Raspberry Pi and says that there is motion even though maybe there might not be it's just how long it's triggering a signal to come out and you guys can mess with that and you'll probably experiment and see what I mean so now what I'm gonna do is just plug in some jumper wires that again you're gonna need there's a link in the description if you don't already have some of these they're really cheap again you can get them for a few bucks off Amazon and we're gonna need ones that have female on one end and male on the other end like that so what I'm gonna do is plug in three of these to start into my Raspberry Pi and then we'll plug in a fourth one as well so we're gonna start by plugging one into the 5 volt pin which is the pin on the very bottom right so that should focus in for you guys then we're gonna skip one pin go to the left and plug in this white wire to what's known as the ground pin so you can see here that we have if it focuses up in just a second here we have a black wire we skip one and then we go with the white wire onto that ground pin now directly above the white wire and one to the left we're gonna plug into our fourth GPIO pin and it that should look like that now so you can see at the top we're gonna be going i've actually plugged this one into the wrong one it needs to go one over to the right here we're gonna be plugging into that fourth pin on the top row and then the bottom pin here on the right and three over now we need one more wire like this unfortunately I only have another black one but I'm gonna essentially skip one pin on this top row from our orange one and plug that in there to our other GPIO pin now if I'm not mistaken I should have plugged everything in correctly and now we can actually use these to go right into the breadboard now important fact make sure that this is awful you're doing this otherwise you might run into some errors where you short a circuit and you don't want to damage your Raspberry Pi so now what we're gonna do is we're gonna plug all of these into our breadboard properly now this orange wire is gonna go directly into our sensor and it's actually going to go on s so you see how we have if I can get in here negative positive s this one is gonna go right in line with s like that now this is what's actually going to take essentially current from this sensor and tell our Raspberry Pi whether or not we have motion or not now for our 5 volt wire which is this one and for our ground pin our ground wire which is this white one what we're gonna do is plug into the terminals on the board so positive is gonna be for five volt and negative is gonna be for ground so we'll plug those in here like that and now we're gonna use this one for the LED in just one second so now we're going to need some more jumper wires but in this case these ones are actually going to be male to male so they'll have this connector on both sides hopefully you guys can see that all right and what we're gonna do is plug this into the rail here so we're gonna put one wire on that negative rail or positive there and one wire on this negative rail and we're gonna plug these directly now into our sensor like this so now what we're gonna do is we're gonna plug negative to negative so we're gonna plug ground into the negative pin here I'll zoom in on this in a second so you guys can really get a good idea and see this and then we're gonna plug in our other wire which will be this blue one into the positive so if I can actually fit that in here it's a little bit tricky to get in there we go alright so now you should see that we have three wires connected here and that our negative is obviously going to negative here our positive is going to positive and then this orange wire is going directly into our raspberry pi now the reason I've done that and plugged it into the rail rather than just right into the sensor is because I need to turn on the LED using the negative terminal here so what I'm gonna do is now take my LED it has a short end and a long end so the long end is actually on the bottom the short end is on the top and this long end is what's gonna get signal from a GPIO pin and the short end is gonna go right into our negative rail now we're also going to use a resistor to make sure that we're not flowing too much current into the LED and that it doesn't pop and explode on us so just bear with me for one second here guys and we'll get this wired up and then we'll get right into the I wouldn't figure out how all this actually works so what I'm going to do is plug a resistor in so that it lines up on this negative rail summer so we'll put one end into this negative rail and the other end is just gonna go somewhere into our breadboard so any of these rows here now we're gonna plug the short end of our LED so this top end here if I get this to focus so it's in line with the resistor so we'll plug it in like that and I'll zoom in on this in just a second and then what we're gonna do is plug in this final black wire here so that it's in line with the long end because this is where it's going to be getting current so now if you have a look at our breadboard you can see that we have a resistor that goes into this negative rail so the blue strip here which then eventually obviously is going to go into the raspberry pi and then we have the GPIO pin which is the second black wire we plugged in plugged into the long end of our woody call it's led here and then we have that plugged into resistor which is going there finally our sensor is obviously getting positive negative and s and that s is going to be what's actually sending a signal to our Raspberry Pi alright so that's it for the wiring now we can go ahead and plug in our Raspberry Pi and we'll get right into the code and figure out how we can turn on this led by detecting motion all right so I'm here on my Raspberry Pi and now we're gonna write the program that essentially will allow this to work now I have my Raspberry Pi plugged in I'm gonna try to show you guys I have this hooked up now and just make sure that your sensor is in a place where you'll be able to like wave your hand in front of it or like get out of the way or something like that to test this out so what we're gonna do is we're gonna say if I can get in ideally here from GPIO 0 imports and we're gonna do the same import we did before which is LED and we're gonna do the same thing now so from GPI o 0 imports motion sensor sensor like that now what we're gonna do is similar to before we're just gonna define which one the motion sensor is in which one the LED is so which GPIO pin we're using so we're gonna say green underscore LED which is the one I'm using is equal to LED and this is gonna be on GPIO pins 17 and we're gonna say PIR which is our sensor is gonna be equal to a motion sensor so motion sensor and then that is on GPIO pin for now all we're gonna do is write a very basic while loop that's gonna turn on our LED while we have motion and turn it off when we don't have motion so to do this ran say while true and in here we are going to say PIR dot wait underscore for underscore motion now what this does is exactly what it says it's gonna wait on this line until we get motion now as soon as we get motion it's gonna execute it's gonna go to the next line and run the program so you gonna say PR art don't wait for motion we're gonna print motion detected like that and then what we're gonna do is we're gonna turn on the LED so we do that by saying green underscore LED dot pawn now after that what we're gonna do is say PIR dot wait underscore for underscore no emotion now this works the same it's simply says we're gonna wait until there's no motion detected so right now since we got motion detected we know something's moving around so as soon as something stops moving then what we'll do is we'll say green underscore LED got off and we'll print motion stopped okay and now if we actually run this this should work now we're gonna start off I'm just gonna add one line up here that just says green underscore LED dot off just to make sure it starts off off because sometimes if you exit this program by quitting it and the green LED is on it's just gonna stay on because you haven't turned it off yet so now if we run this and we're in front of the sensor we should see immediately that that LED turns on and we get on our console motion detected now let's run this and test it out so pressing f5 here and you should see that right away mine actually says motion detected and that's because I am right in front of this motion sensor like this now it says motion stopped and you can see that now the LEDs actually on because we have motion detected now as soon as I stop moving so if I put and I don't move it should say motion stopped and if I put my hand in front of it it's gonna be motion detected and you get the point now it's really difficult to see that my LED is actually on right now because it's like super dull but for you guys you shouldn't be as doing you should be able to see it but if I were to remove the resistor from mine then it would be easier to see but that essentially is how that works it's a really cool idea to use maybe if you want to log like when motion starts and when motion stops maybe see if someone's coming into your room or something like that all you have to do essentially is leave this program running and then it's gonna detect when someone comes in the room and comes out of the room as long as you have that sensor in a pretty good area the kind of scope for the sensor is pretty wide so as long as it's somewhere where it can maybe see the door or something like that then that'll work well and yeah that's kind of how that works so I hope you guys got some value from this video and now you know how to use the PIR motion sensor they're really cool and I've just been showing you really basic examples with super simple code on how to run these but incorporating them with like a surveillance system or something like that is what I want to do in future videos so let me get is know let me know if you guys have any ideas on what you'd like to see with some of these sensors and the knowledge I've been showing and I'll definitely probably put something out like that in the future so with that being said if you guys enjoyed the video please make sure you leave a like and subscribe and I will see you again
