With timestamps:

00:00 - hello everybody and welcome to another
00:01 - youtube video so in today's video i'm
00:04 - going to show you how to get past some
00:06 - common problems and issues when you're
00:08 - using selenium now a while ago i made a
00:10 - selenium tutorial series i probably made
00:13 - this about a year and a half ago i'll
00:14 - leave a link to it in the description
00:16 - but what selenium is is a framework that
00:18 - allows you to automate your browser so
00:20 - you can automatically click on things
00:22 - you can download things you can scrape
00:24 - stuff off of websites you can just
00:26 - automate pretty much any task you can
00:28 - make a bot that buys you you know a new
00:30 - shirt or a pair of sneakers or whatever
00:31 - it is that you would normally do as a
00:33 - human in the browser you can automate
00:35 - that with selenium however a lot of
00:37 - websites have advanced security and they
00:39 - can detect when you're using selenium
00:41 - and a lot of you left comments on that
00:43 - series saying that you couldn't get past
00:45 - certain fields or forms or you were
00:47 - running into errors where you were being
00:48 - detected as a bot so in this video i'm
00:51 - going to show you how to get past that
00:53 - and how you can use selenium without the
00:55 - websites knowing that you are a bot and
00:57 - without being limited in specific
00:59 - features so we'll get into that in a
01:01 - second but i first want to give you a
01:02 - demo of this problem actually happening
01:05 - so i have a regular selenium script in
01:07 - front of me you can see i'm importing
01:09 - all my webdriver stuff and what this
01:11 - script actually does is it opens up
01:13 - alibaba and it tries to sign in and then
01:16 - actually search for a product and buy it
01:18 - however you're going to see that when i
01:20 - try to sign in here it actually doesn't
01:22 - let me because it says that my device is
01:24 - a bot or it's not a recognized machine
01:26 - or something along those lines so let me
01:28 - go ahead and run the code here and show
01:30 - you the error that we're going to get
01:32 - so let's run
01:34 - let me just make this full screen so we
01:35 - can see it and now watch what's going to
01:37 - happen so my code is going to
01:39 - automatically close the pop-up it's
01:40 - going to click the join button it's
01:42 - going to try to sign in with google and
01:44 - then as soon as i try to sign in here
01:46 - it's going to tell me that this browser
01:47 - or app may not be secure so it says try
01:50 - using a different browser if you're
01:51 - already using a supported browser you
01:52 - can try again to sign in so i'm not able
01:55 - to get past this google sign-in because
01:57 - this can actually detect that i am using
02:00 - selenium and using a bot so in this
02:02 - video i'm going to show you how to get
02:03 - past this specifically but what i'm
02:05 - going to show you how to do should work
02:07 - for any other bot detection security and
02:09 - allow you really to use selenium freely
02:12 - without any restrictions so with that
02:14 - said let's go ahead and get started
02:19 - [Music]
02:24 - all right so to be able to get past
02:26 - these restrictions with selenium what
02:27 - we're gonna do is use a piece of
02:29 - software called camellio now camilo is
02:31 - the sponsor of this video but what this
02:34 - platform allows you to do is actually
02:36 - spoof and change your browser
02:38 - fingerprint change your ip address by
02:40 - using something like a proxy and
02:42 - essentially hide the fact that you are a
02:44 - bot and make it appear as though you are
02:45 - a real human user interacting with the
02:48 - website it's a really awesome platform
02:50 - i'm going to show you all of the
02:51 - features in it in a second but
02:53 - essentially what this means is that you
02:55 - can use selenium the exact same way you
02:57 - would have before there's just a few
02:59 - setup steps beforehand where you're
03:00 - going to create a camellio browser
03:02 - instance and you're going to use that to
03:04 - actually interact with the website
03:06 - rather than the regular chrome driver or
03:08 - firefox driver or whatever driver you
03:10 - would have used again all this is going
03:12 - to do is change the browser fingerprint
03:14 - and allow you to kind of change your
03:16 - location language all of that kind of
03:18 - stuff such that you can interact with a
03:20 - website without the website knowing that
03:22 - you are a bot or that you are using
03:24 - selenium so the first thing that we're
03:26 - going to have to do here is we're going
03:27 - to have to make an account on camellia
03:29 - now camellio is paid software i already
03:32 - have a paid account with them but if you
03:34 - want to get access to the software for
03:36 - free then what you can do is just reach
03:38 - out to them i'll leave a link to their
03:39 - website in the description you can
03:41 - request a free trial and if you say that
03:43 - you came from my video then they should
03:45 - give you a free trial and you'll be able
03:46 - to access the platform for a few days or
03:49 - whatever it is that they end up giving
03:50 - you anyways you can do that to try it
03:52 - out before you actually have to pay for
03:54 - anything so what we're going to do is
03:55 - make an account of course i already have
03:57 - an account and once you sign in then
03:59 - what you can do is just go to downloads
04:00 - so i'm going to go to downloads here and
04:02 - then what we want to do is install the
04:04 - camilo installer now camellia works for
04:06 - all kinds of other things as well this
04:08 - isn't just for selenium and you'll note
04:10 - here that they have a mobile installer
04:12 - as well we're not going to deal with
04:13 - that in this video we just want the
04:15 - desktop installer so this is for windows
04:17 - i'm going to click on the download link
04:19 - it's going to download i'm going to run
04:20 - through the installer and then i will
04:22 - have camellio installed now i already
04:24 - have it installed on my computer so i'm
04:26 - just going to open up the program and
04:27 - then we'll go from there all right so
04:29 - i've just opened the camellio
04:30 - application now the way that i've opened
04:32 - this is i've just ran through the
04:34 - installer i've then just typed in
04:35 - camellio ran the app signed into my
04:38 - account and then i was brought to a page
04:40 - that looked like this this is their
04:41 - graphical user interface now inside of
04:44 - here you can actually create browser
04:46 - instances you can create things known as
04:47 - profiles and this allows you to actually
04:49 - open up the browser manually go through
04:52 - and use the browser from say a different
04:54 - location or from a different device or
04:56 - operating system well i'm going to kind
04:57 - of talk to you about how all this stuff
04:59 - works so every time that you go to a
05:02 - website you're going to have a
05:03 - fingerprint associated with your browser
05:06 - now this fingerprint is just data about
05:07 - the machine that you're on the operating
05:09 - system that you're using the browser
05:11 - that you have open your ip address your
05:14 - location your time zone all of this type
05:16 - of stuff now the reason why this
05:18 - fingerprint is going to be kind of
05:19 - passed on to the website is because it
05:21 - needs to know what location you're from
05:24 - mostly what language you're speaking all
05:26 - of these other things so we can actually
05:28 - verify if it wants to allow you to go on
05:30 - the website right so there's a ton of
05:31 - different websites that just don't let
05:33 - you browse them if you're from a
05:34 - different country or maybe they're
05:36 - blocked into certain regions you guys
05:38 - know what i'm talking about for example
05:39 - like us netflix has a lot more movies
05:41 - and shows than canadian netflix does and
05:43 - you can't access us netflix unless you
05:45 - are in the us now how do you think it
05:47 - knows you're in the u.s well it uses
05:49 - your browser fingerprint anyways here in
05:51 - camellio you can change that fingerprint
05:54 - so you can make it look like you're
05:55 - browsing from a different country you
05:57 - can give yourself a different ip address
05:58 - by connecting to a proxy and you can
06:01 - very easily switch between different
06:02 - browser profiles that you set up
06:04 - yourself so say right now you want to
06:06 - connect from like mexico to a website
06:09 - you can do that and then very easily you
06:11 - can load another profile and connect
06:13 - from say the united states or some other
06:15 - random country so for now let's set up a
06:17 - camellio profile look at kind of how
06:19 - that works and how we just use the
06:21 - browser manually and then we'll connect
06:22 - it with selenium so from this interface
06:25 - here i'm just going to click on new
06:26 - profile and what this is going to allow
06:28 - me to do is set up a camellio profile by
06:31 - selecting a device operating system
06:33 - browser and language so for now i want
06:35 - to have a desktop device not a mobile
06:38 - device for the operating system i'm just
06:41 - going to go with windows
06:42 - and then for the browser i'm going to go
06:44 - with chrome of course you can do edge
06:46 - and firefox as well and then for the
06:48 - language i want this to be
06:51 - english okay so we can see we have
06:53 - desktop win32 windows 10 chrome 95
06:56 - english so i'm going to select this
06:58 - there should be a ton of different
06:59 - options here that you can go through all
07:01 - right so now i'm brought to this page
07:02 - where i can configure some settings for
07:04 - my profile now of course you guys can
07:06 - read through these they're pretty
07:08 - straightforward but you can change
07:09 - things like the time zone the geo
07:11 - location you can connect to a proxy and
07:14 - actually that's what we're going to do
07:15 - right now so whenever you're using
07:16 - camellio you should really be connecting
07:18 - to a proxy this is going to allow you to
07:21 - actually hide your geolocation if you
07:23 - don't connect to a proxy you're going to
07:25 - be using your regular ip address and so
07:27 - websites will actually know that you are
07:29 - from a certain part of the world now
07:31 - this is still not going to be able to
07:33 - detect that you are a bot because
07:35 - camellia will change the fingerprint of
07:36 - the browser but you do need to connect
07:38 - to a proxy if you want to change where
07:40 - you're showing up from so what region in
07:42 - the world you're browsing from so what
07:44 - i'm going to do is go to http here in
07:46 - proxy and now i'm going to show you how
07:48 - we can actually set up a proxy and then
07:50 - use that inside of here when we're
07:52 - connecting or creating a profile with
07:54 - camellia so the proxy that i want to use
07:56 - for this video is actually called bright
07:58 - data where it's from bright data which
08:00 - is a website that i'm going to go to now
08:02 - and start talking about all right so i'm
08:04 - here on the bright data website now this
08:06 - is simply a proxy provider they have all
08:08 - different types of proxies from data
08:10 - center proxies isp proxies residential
08:12 - proxies rotating proxies whatever you
08:15 - can imagine they probably have on here
08:17 - anyways this is paid as well but you can
08:19 - sign up for a free trial and get access
08:21 - to five or ten dollars in free credit if
08:23 - you want to follow along with this video
08:25 - anyways i'll leave a link to the
08:27 - description and what you're going to
08:28 - have to do is make an account sign up
08:29 - for the free trial get the credit and
08:31 - then what you can do is go to your user
08:33 - dashboard so i'm going to go to my user
08:35 - dashboard here the first thing i want to
08:37 - do is just go to proxies and just show
08:38 - you the different options and talk about
08:40 - which one we're going to use so we have
08:42 - mobile shared residential shared data
08:44 - center shared isp regular isp and then
08:47 - unblocked now i won't go through them in
08:49 - detail but what we're going to use here
08:51 - is just the shared residential proxy now
08:53 - what this is a rotating proxy that
08:55 - actually uses a real ip address from a
08:57 - real device so this means you really
09:00 - cannot get banned because you're
09:02 - actually using a legitimate device the
09:04 - only issue you might have here is that
09:06 - other people could be using this ip
09:07 - address as well that's why it's shared
09:10 - anyways the residential is probably the
09:12 - one that you want to use it's also
09:13 - relatively cheap however you could use a
09:16 - data center proxy an isp proxy mobile
09:18 - proxy really depends on your use case
09:21 - and you can read all about the different
09:22 - use cases for these right on the bright
09:24 - data website anyways i want to use the
09:27 - shared residential proxy so what i'm
09:29 - going to do is go here to api and
09:31 - integrations go to proxy and web
09:33 - unlocker api and then what i want to do
09:36 - is select the shared residential
09:38 - proxy right here now first i just have
09:40 - to click on other software you can use
09:42 - these proxies from you know shell node
09:45 - java all the other options they have but
09:47 - since we're going to be plugging this
09:48 - into camellio we just hit other software
09:51 - okay so we're going to go shared
09:52 - residential now what we need to do is
09:54 - pick a country and we want to make sure
09:55 - this country is going to match with the
09:57 - country we chose for the profile of our
09:59 - camellio profile so i'm going to go
10:02 - united states for the destination site
10:04 - you can leave this but it doesn't really
10:05 - matter i'm just going to make it empty
10:07 - and then for an example i mean getting
10:09 - started is fine you could use something
10:10 - else but we're just going to leave
10:12 - getting started and for root we don't
10:14 - need to actually select anything so
10:15 - really just select the type of proxy and
10:18 - then the exit node country and what it's
10:20 - going to do is actually give you all the
10:21 - information you need right here so it
10:23 - says this is the proxy this is the port
10:25 - this is the user and this is the
10:27 - password now what this proxy address
10:29 - will actually do is give you the
10:30 - rotating proxy which means your ip
10:32 - address will change every so often based
10:35 - on usage and a bunch of other factors
10:37 - that i really am not qualified to talk
10:38 - about anyways point is we now have our
10:41 - login information so we're going to use
10:42 - this right inside of camellia okay so
10:44 - i've just split the screen here so we
10:46 - can see all the information as well as
10:48 - the camillo ui so what i want to do is
10:50 - go to where it says proxy hit on http
10:53 - and then for the ip or host name i'm
10:55 - just going to copy this right here okay
10:57 - so i'm going to copy this in for the
10:58 - port we will use this port and then for
11:01 - authentication we're going to check this
11:03 - we're going to put in our username
11:05 - as well as our password so let's go
11:07 - username
11:08 - password like this
11:10 - okay paste and then hit test proxy now
11:13 - when we do that we should see that we
11:15 - get proxy works successfully loaded blah
11:17 - blah blah anyways that means we are good
11:20 - to go so what i'm going to do here is
11:21 - just check on ok and now we have
11:23 - connected the proxy to this profile okay
11:26 - so now our profile is created and we can
11:28 - go ahead and start it so i'm going to
11:30 - click on the start button and we're
11:31 - going to see this should open the chrome
11:34 - browser for us and i'm just going to
11:35 - show you that i'm actually located in
11:37 - the united states here i mean like the
11:39 - proxies united states my actual location
11:41 - is canada so when i go to you know
11:43 - what's my p or where's my location
11:46 - you're going to see that it's showing me
11:47 - in the united states even though i'm
11:49 - actually located in canada so notice
11:51 - it's not even telling me where in the
11:52 - united states it just says you are in
11:54 - the united states that is false i'm
11:56 - currently in canada now if we do
11:58 - something like what's my ip
12:00 - let's see what we're getting here this
12:01 - is the ip this is not actually my public
12:04 - ip address of course i wouldn't show
12:06 - this to you but i'm just proving to you
12:07 - that we are actually spoofing our
12:09 - location and okay here it's saying we're
12:10 - in massachusetts or close to rhode
12:12 - island or something like that anyways it
12:15 - doesn't really matter just wanted to
12:16 - show you that we are actually kind of
12:18 - spoofing the ip address and we are now
12:20 - able to use this browser as if we were
12:22 - browsing from the united states okay so
12:25 - let me close this we don't need this
12:27 - anymore
12:28 - okay so now that this is closed what i'm
12:30 - going to do is actually save this
12:32 - profile because i want to connect to
12:34 - this profile from selenium now you don't
12:37 - have to do this you can actually make a
12:39 - new pro profile from code but we are
12:41 - going to be able to load a profile in so
12:44 - what i'm going to do is go here and
12:45 - click on save as
12:47 - and i'm going to save this as just
12:49 - test.melio inside of my chameleo folder
12:51 - which is where i have all of the
12:53 - camellia code i'm going to use for this
12:55 - tutorial okay so i saved it test.camelio
12:58 - and then if i wanted to load it in so if
13:00 - i re-ran this application and i wanted
13:02 - to load this profile in again i would
13:04 - just click on browse here i would find
13:06 - the profile i would click to it and open
13:08 - it up and then i would be good to go
13:10 - now these profiles are really cool
13:12 - because they actually save cookie and
13:14 - session data as well which means if you
13:16 - say sign in to google or sign into some
13:18 - website and then you save the profile
13:21 - the next time you load it you're still
13:22 - going to be signed in so anything that
13:24 - you do in the browser it will actually
13:26 - save that's kind of the power of the
13:28 - profiles now of course you can make
13:29 - multiple profiles open profiles i'm sure
13:32 - you guys can figure that out i don't
13:33 - need to explain that anymore now what
13:35 - i'm going to do is hop over to sublime
13:37 - text and i'm going to start showing you
13:38 - how we can actually use camellio to
13:41 - automate the browser alright so now
13:43 - we're actually going to connect python
13:44 - to camellio but before we do that i
13:46 - quickly want to explain how camellio
13:48 - actually works so when you run camellio
13:51 - the graphical user interface what it
13:53 - does is it actually exposes a rest api
13:56 - now this is a local rest api and in fact
13:58 - if i go to a browser tab here and i go
14:01 - to this location you can see that we can
14:04 - actually view all of the endpoints for
14:05 - this api on our local host now the
14:08 - reason i can see this is because i'm
14:10 - currently running camellio if i wasn't
14:12 - running it i wouldn't be able to see
14:13 - this now what we're going to do is we're
14:15 - going to install the python package for
14:17 - camellio which just is a wrapper that
14:19 - interacts with the rest api so it just
14:22 - makes our life a lot easier but if you
14:23 - wanted to you could manually send http
14:26 - commands to localhost colon 5050 and
14:29 - then you could interact with camellia
14:31 - now camellio also has a package for
14:33 - nuget and for npm so if you're working
14:35 - with any net technologies or javascript
14:38 - then it's also very easy to interact
14:40 - with this rest api now the last thing i
14:42 - will mention here is that we actually
14:44 - can run this rest api without having
14:46 - this graphical user interface open now
14:49 - the way we're going to do that is we're
14:50 - going to open up our command prompt and
14:52 - we're going to type in the following
14:53 - command so i'm just going to copy in the
14:55 - path to my camellio cli tool so this is
14:58 - actually the path you guys can go to the
15:00 - appropriate path on your own machine so
15:02 - users slash whatever your username is
15:04 - where you install camilo app data local
15:07 - programs camellio and then slash and
15:10 - then you're going to run the camellio
15:11 - cli dot and then exe now this is
15:15 - actually going to run the command line
15:17 - interface for you which will expose the
15:19 - rest api and allow you to view logging
15:21 - information when you're actually
15:23 - interacting with camellia so if i hit
15:25 - enter here you're gonna see it started
15:26 - this on this port but the application
15:29 - startup failed now the reason it failed
15:30 - is because i need to pass a username and
15:32 - password for authentication when i
15:35 - actually start this so what you need to
15:37 - do is say username or actually i believe
15:38 - it's not username i believe it's email
15:41 - is equal to and then your email and then
15:43 - you say password is equal to your
15:45 - password now of course i can't show you
15:47 - my email and password so i'm going to
15:49 - type these in and run this and then i'll
15:51 - show you how it works all right so i'm
15:53 - now running the cli tool i'm just going
15:55 - to have my editors actually blur out my
15:57 - email here and my password so you guys
15:58 - don't see it but the point is i've now
16:00 - authenticated successfully by passing
16:02 - email equals and then my email and
16:04 - password equals and then my password and
16:06 - now of course if i refresh this page
16:08 - here you're going to see this still
16:10 - works because well the rest api is still
16:12 - running so now that we have this running
16:14 - from the command line interface we also
16:16 - could run it from the graphical user
16:18 - interface doesn't really matter what i'm
16:19 - going to do is install the python
16:21 - package which is called
16:23 - camellio.localapi clocked so i can just
16:25 - copy this command here pip install
16:27 - camillo local api clients i'm going to
16:29 - open up a new command prompt here so
16:31 - let's just run this like here
16:33 - i'm going to
16:35 - insert this command and hit enter now
16:37 - for some reason this pip command doesn't
16:39 - work for you you may not have pip
16:41 - installed in your system path i will
16:42 - leave two videos on the screen that show
16:44 - you how to fix that you also can just
16:46 - try doing the following
16:48 - python and then hyphen m pip install and
16:52 - the camellio.local api client anyways
16:55 - i'm assuming that you guys know how to
16:56 - do that but i just want to show that in
16:58 - case okay so now that we have this
17:00 - installed what we can actually do is
17:01 - finally go to our python code and we can
17:04 - start actually connecting with camellia
17:06 - alright so now i'm actually inside of
17:07 - the code that i showed you at the very
17:09 - beginning of the video that wasn't
17:11 - working and didn't allow us to sign into
17:13 - google what we're going to do is simply
17:15 - refactor this using camellio and getting
17:18 - a web driver from our camellio profile
17:21 - now we're actually going to start by
17:22 - creating a brand new profile from code
17:25 - then i'll show you how to load and save
17:27 - profiles so i'm not really going to
17:28 - explain all of this code here this is
17:30 - just regular selenium code this is not a
17:33 - tutorial on selenium but if you do want
17:35 - to learn selenium and understand how all
17:37 - of this works then what you can do is go
17:39 - to the series that i have on selenium i
17:42 - will put it on the screen and leave it
17:43 - in the description i will also leave all
17:45 - of this code on github and i'll link to
17:47 - that in the description as well as the
17:49 - documentation for camellio in case you
17:51 - get confused when we go through this
17:54 - anyways now that we have camellio
17:55 - installed what i want to do is go up
17:58 - here and start importing some stuff from
17:59 - camellio that we need so as a reminder
18:02 - what we're going to do here is start by
18:03 - creating a new profile from code and
18:06 - then we're going to load that profile
18:08 - use it get access to its web driver and
18:10 - you're going to see that what we had
18:12 - before that wasn't working now hopefully
18:14 - should be working all right so the first
18:15 - thing we're going to do is say from and
18:17 - then this is going to be camellio and
18:20 - dot local underscore api underscore
18:23 - client dot and then local api client
18:26 - again we're going to import the camellio
18:29 - and then this is going to be the local
18:30 - api client now after that we're going to
18:33 - say from
18:34 - camellio this will be dot local api
18:37 - client again except this time it's going
18:39 - to be builder underscore four underscore
18:42 - create underscore
18:45 - profile like that and then we're going
18:47 - to import the
18:49 - builder for create profile now let me
18:52 - just look at my cheat sheet here to make
18:53 - sure this is correct
18:55 - looks good i believe that's all we need
18:56 - for right now so now that we have both
18:58 - of those what i'm going to do is
19:00 - actually remove my web driver here
19:02 - because i no longer need to use the
19:04 - selenium webdriver i'm going to use the
19:06 - camellia webdriver so i'm going to start
19:08 - by defining the base url of the rest api
19:11 - for camellio so i'm going to say
19:13 - camellio and then this will be
19:14 - underscore base underscore url is equal
19:18 - to and then this is going to be
19:19 - localhost colon5050 like that that is
19:22 - where camellio is hosted currently and
19:24 - you need to have camellia running either
19:26 - the cli or the graphical user interface
19:29 - for this to actually work so keep that
19:31 - in mind you need it running in the
19:32 - background otherwise this will not work
19:34 - again either the graphical user
19:35 - interface or the cli so now that i have
19:37 - this what i'm going to do is say my
19:39 - client is equal to and then this is
19:40 - going to be the camellio local api
19:42 - client and i'm going to pass to this the
19:44 - camellio base url and then this should
19:47 - initialize camellia so now i have
19:48 - clients and what i can do is actually
19:50 - search for a base profile and then
19:53 - create a new instance of that base
19:55 - profile so all of this documentation
19:57 - will be linked in the description what
19:59 - i'm going to say is my base underscore
20:01 - profiles is equal to client dot and then
20:03 - this is going to be search and i believe
20:05 - this is base profiles we're going to say
20:07 - base underscore profiles like that what
20:10 - this is going to do is look through the
20:11 - base default profiles the one that we
20:14 - saw on camillo in the graphical user
20:16 - interface and we're going to search for
20:18 - ones that meet some specific criteria
20:20 - sort so what we want here is the device
20:23 - underscore type
20:25 - to be equal to and then this is going to
20:27 - be a desktop like that this is actually
20:29 - going to be lowercase and then for the
20:32 - browser i believe we just say browser
20:34 - like that underscore product actually is
20:37 - going to be equal to and then just
20:39 - chrome so this is going to give us the
20:40 - result for all of the base profiles that
20:43 - have a device of desktop and the product
20:46 - of chrome now for me to have this be
20:48 - valid i just need to add in these right
20:50 - here okay so now we should have access
20:52 - to all of the base profiles and what i
20:54 - want to do is create a new profile based
20:56 - on this base profile or based on one of
20:58 - these base profiles all right so on the
21:00 - next line down i'm going to say the
21:02 - create underscore profile
21:04 - underscore request if we could type this
21:07 - properly is equal to builder for create
21:10 - profile i'm going to do a backslash then
21:12 - dot and this is going to be i guess base
21:16 - or from underscore base underscore
21:19 - profile okay then we're going to pass
21:21 - the base profiles at index 0 dot id the
21:26 - idea here is that this is going to give
21:27 - us a list of profiles all of them that
21:29 - match this criteria there's some other
21:31 - keywords you can pass again i'll leave
21:32 - the documentation in the description
21:34 - anyways we don't really care we just
21:35 - want to get any of them to match this
21:37 - criteria so we'll get the very first one
21:39 - we'll get the id of it and we'll pass
21:41 - that to here for the builder for create
21:44 - profile anyways after this i'm going to
21:46 - do a backslash i'm going to say dot and
21:48 - this is going to be set underscore
21:50 - recommended and then not features but
21:53 - this is actually going to be defaults
21:55 - like that then we're going to do a
21:57 - backslash again and then say dot build
22:00 - okay
22:01 - next we are going to say the profile is
22:03 - equal to and this is going to be client
22:05 - dot and i believe this is just create
22:07 - profile and we're going to pass as the
22:10 - body here the create profile request
22:14 - so what this is going to be here is
22:15 - actually the request for the profile
22:17 - that we want to create we then need to
22:19 - send that request by calling create
22:22 - profile so create profile is actually
22:23 - going to call the rest api that's
22:26 - running it's going to create the profile
22:28 - then it's going to return it to us
22:29 - inside of this profile variable we don't
22:31 - really need to understand how all of
22:33 - this works because we have this nice
22:34 - wrapper that we can use but that's kind
22:36 - of what this is doing okay let me just
22:38 - look at my cheat sheet make sure i
22:39 - didn't mess anything up looks like we
22:42 - are all good for right now and now that
22:44 - we have created the profile the next
22:46 - thing that i want to do is actually get
22:48 - access to the web driver from the
22:50 - profile so i'm going to start by saying
22:52 - options is equal to webdriver
22:54 - dot and then this is going to be
22:57 - chrome
22:58 - options like this
23:00 - now if you want to find where i'm using
23:01 - this web driver i'm just importing it
23:03 - from selenium so of course you're going
23:05 - to need selenium installed as well to
23:07 - follow along with this i kind of assume
23:08 - at this point you all have selenium
23:10 - otherwise i'm not sure why you'd be
23:12 - watching this tutorial anyways we're
23:14 - going to have options equal to
23:15 - webdriver.chrome options then what we're
23:18 - going to do is say options.add and this
23:20 - is going to be underscore experimental
23:22 - underscore option and we're going to say
23:25 - inside of here that the camellio colon
23:28 - and then this is going to be profile id
23:31 - comma and we're going to pass the
23:33 - profile dot id so a little bit strange
23:35 - but we're just pretty much telling this
23:37 - web driver to use camillo so we're
23:39 - saying camilo profile id when we pass
23:42 - the profile d that will be substituted
23:44 - in here and well then we'll have the
23:46 - correct web driver options now what
23:48 - we're going to do
23:49 - is say driver is equal to webdriver dot
23:52 - and then remote and what we're going to
23:54 - do is make our command x
23:57 - executor so let's say command
23:59 - executor like that equal to and then
24:01 - this is going to be fstring inside of
24:03 - here we're going to say camellio and
24:05 - then this is going to be the underscore
24:07 - base underscore url slash and then web
24:10 - driver and then we're going to say the
24:12 - options
24:13 - is equal to options of course we need a
24:16 - comma and i don't think we need
24:17 - backslashes actually i think this is
24:19 - good okay so there we go obviously i
24:21 - don't have all of this memorized i'm
24:23 - just reading this right from the
24:24 - camellia documentation again i'm going
24:26 - to keep saying it is in the description
24:28 - okay so let's just run through what we
24:29 - did here because i understand this is a
24:31 - lot of code
24:32 - so what we did is define the base url of
24:34 - camellio just where it's running like
24:36 - the local api right so it's running on
24:38 - localhost port 5050. then we are
24:40 - creating a client pretty straightforward
24:42 - remember we imported these two things
24:44 - right here next we're saying the base
24:46 - profiles is equal to client.search based
24:49 - profiles we're searching for the device
24:50 - type of desktop and the browser product
24:53 - of chrome we could also search by
24:54 - language
24:55 - and by i believe operating system as
24:58 - well
24:59 - anyways we then have create profile
25:00 - request so we're saying builder for
25:02 - create profile dot from base profile
25:04 - base profile zero so just getting the
25:06 - first one and the id of it we're setting
25:08 - the recommended defaults and then
25:10 - building this request then we're going
25:12 - to say profile is equal to
25:13 - client.gradeprofile
25:15 - pass in the body here which is going to
25:16 - be the request
25:18 - this will then give us the profile now
25:20 - that the profile is created what we need
25:22 - to do is make a web driver that uses
25:24 - this profile so this here webdriver
25:26 - again this is coming right from selenium
25:28 - so we're saying options webdriver.com
25:30 - options we're going to add an
25:32 - experimental option this is going to
25:33 - tell the web driver to use camellio then
25:36 - when we run the webdriver we're going to
25:38 - set webdriver.remote
25:39 - we're going to pass the command executor
25:41 - as the base url so our kind of local
25:44 - host api client slash webdriver and then
25:47 - the options equal to the options this
25:49 - will then return to us an actual web
25:51 - driver that uses camellio so now i don't
25:54 - need to mess with the rest of my code at
25:56 - all because it's using a variable called
25:58 - driver so now i'm just going to be using
26:00 - my regular web driver here from camellia
26:04 - hopefully that makes sense but at this
26:06 - point in time that's really all you need
26:07 - to know to use a camilo profile now just
26:10 - use this driver object here as your web
26:12 - driver and you will have your browser
26:14 - fingerprint changed and you shouldn't be
26:16 - detected as a bot alright so i was about
26:18 - to just run the code but after reading
26:20 - through this quickly i realized there's
26:21 - a few minor mistakes so let's just go
26:23 - ahead and fix those quickly so first
26:25 - we're going to go to our import
26:26 - statement here and notice how i was kind
26:28 - of thrown off that these were the same
26:29 - name so local api client twice well they
26:32 - actually aren't i just read it
26:33 - incorrectly this is going to be camellio
26:35 - and then underscore local api client so
26:37 - make that change in the first import
26:39 - statement my apologies also we need to
26:41 - change this from all capital on api to a
26:44 - lower case for p and i which means we
26:47 - also need to change that here
26:49 - another error that we had is i had from
26:51 - base profile here this is actually going
26:53 - to be for base profile so let's fix that
26:56 - and one thing that i forgot to do was
26:58 - start my profile
27:00 - so after we create the profile it's not
27:01 - yet started i actually need to start it
27:04 - and the way i start it is client dot and
27:06 - then start underscore profile and i just
27:08 - pass the profile
27:10 - dot id like this okay we should be good
27:13 - to go now again my apologies on those
27:15 - mistakes but that's what happens when
27:16 - you're programming now fingers crossed
27:19 - let's run the code and see if this works
27:22 - all right so we can see that we have
27:23 - loaded up aliexpress here we should
27:25 - hopefully close the pop-up it's going to
27:28 - click on the join button sign in with
27:30 - google it's going to bring us to this
27:31 - page we're going to enter our
27:33 - information here and we should be good
27:37 - to go here once this closes let's see
27:40 - all right so we are now back on alibaba
27:42 - it searches for rtx 3060s which is what
27:45 - i have the script actually doing and
27:47 - then notice it shows us all of these
27:49 - options okay so let's make this larger
27:51 - here and there we go we are good to go
27:53 - so that is how this works right using
27:55 - camellia we were able to sign in whereas
27:57 - when we were using just regular selenium
27:59 - it didn't allow us to do so so that's as
28:02 - easy as it is to get started with uh
28:04 - camellio now what i want to show you how
28:06 - to do is how to save a profile and how
28:08 - to load a profile because a lot of times
28:11 - as soon as you kind of do all of this
28:12 - tedious stuff signing in whatever you
28:14 - want to save your browser information
28:16 - your cookies all of that data and then
28:18 - load that in another time so let's go
28:20 - ahead and do that all right so i've just
28:22 - pulled up the documentation for actually
28:24 - saving the profile for camellio now what
28:27 - i'm going to do is just copy in some of
28:28 - the stuff here to save us a bit of time
28:30 - so we need this import right here to
28:32 - save the profile notice there's a save
28:34 - profile request so i'm going to copy
28:36 - that in we'll put that at the top of our
28:38 - code right here
28:40 - let's go back to this which is right
28:42 - here and we can see that to save the
28:43 - profile we first need to actually stop
28:46 - it which is something that i haven't
28:47 - done yet so we'll look at that in a
28:49 - second then we're going to grab the path
28:51 - where we want to save the profile to and
28:53 - we're going to use the save profile
28:54 - request so let me just copy all this and
28:56 - then we'll kind of walk through this
28:57 - step by step so after all of our stuff
29:00 - is done here
29:01 - what i'm going to do is i'm going to
29:02 - stop my profile now my profile is stored
29:04 - in profile so it's fine to say
29:06 - client.profile and then stop the profile
29:08 - id then what we need to do here is
29:11 - actually generate the path where we want
29:13 - to save this file to
29:15 - now this involves me importing os
29:18 - so let's do this actually os is already
29:20 - imported so i don't need to do that
29:22 - anyways we have os imported so this is
29:24 - going to get the directory name and the
29:26 - path of where the current file is and
29:29 - then we're going to save this as test2
29:31 - dot camellio because we have test
29:33 - already saved in this directory anyways
29:36 - then we're going to say result is equal
29:37 - to client.save profile pass the profile
29:40 - id we want to save and the save profile
29:42 - request which just takes in the path and
29:44 - says where on our system we want to save
29:47 - this then what this does just print out
29:49 - profile has been saved to and then the
29:50 - result of here dot last known path so we
29:53 - can run this one more time and actually
29:56 - while i run this this time i want to
29:57 - open up the cli and show you that we're
30:00 - actually going to see kind of the logs
30:01 - and information happening here while
30:03 - this runs so let's just split this on
30:05 - the screen i didn't mean to minimize
30:07 - that let's turn this over here so as
30:09 - this runs you're going to see you know
30:10 - information occurs on here it says
30:12 - profile with id has been started
30:14 - successful received web driver
30:16 - connection and then as soon as we save
30:18 - and uh i guess stop the profile you're
30:21 - gonna see that in here as well okay so
30:23 - let's give it a second this part takes a
30:25 - few seconds to run all right so we can
30:27 - see here that the profile with id has
30:29 - been stopped successfully and then
30:31 - profile with id has been saved what i
30:34 - will do is open up my windows explorer
30:36 - and show you this file alright so i now
30:38 - have my windows explorer open notice i
30:40 - have a bunch of files inside of here and
30:41 - while test2 was just saved at this time
30:44 - when i'm actually recording video
30:46 - anyways what i'm going to do now is show
30:47 - you how we can load a profile so rather
30:50 - than having to go through all these
30:51 - steps of actually creating a profile
30:53 - from a base profile we're just going to
30:55 - load a profile from a file let's do that
30:58 - now so again i've just opened up the
31:00 - camellio documentation we can just copy
31:02 - and paste a few things in here so i'm
31:04 - going to copy in the load profile
31:06 - request import statement so let's put
31:08 - that up here before i copy anything else
31:10 - let me just delete a few things here so
31:12 - i don't need to create a profile i don't
31:14 - need to search the base profiles so i
31:16 - can get rid of all of this and for now
31:18 - i'm just going to say profile is equal
31:20 - to none and then we're going to load it
31:21 - in in a minute now i also don't want to
31:23 - save this profile anymore so i'm going
31:25 - to get rid of all of this right here
31:28 - okay but we will stop the profile so now
31:32 - let's go back to our documentation which
31:34 - is right here and let's find where we
31:36 - load in a profile looks like we do it
31:38 - right here so we're going to say profile
31:39 - is equal to client dot load profile
31:42 - turns out we're actually going to need
31:43 - this path so i'll copy that in in a
31:45 - second so i'm going to say profile is
31:47 - equal to this
31:48 - start profile that's fine we can start
31:50 - the profile and i need to copy in this
31:53 - path variable right here
31:55 - okay so let's do this
31:57 - we're going to say path is equal to this
31:59 - this time i'm going to access the test
32:01 - profile the reason for that is i want to
32:02 - access the profile that we created at
32:04 - the beginning of the video that's
32:05 - connected to the proxy then i'm going to
32:07 - say profile is equal to client.load
32:10 - profile the body will be equal to load
32:12 - profile request we'll pass the path
32:14 - which we defined right here and then i'm
32:16 - going to say client dot start profile
32:18 - we're going to get the web driver and
32:19 - we're going to do everything we did
32:21 - before pretty straightforward let's go
32:23 - ahead and run this and see if this works
32:26 - alright so i've just split the windows
32:28 - here so we have both the cli tool as
32:30 - well as the web browser now i'm gonna
32:32 - let the program run through here and
32:33 - then i'll confirm with you if it's
32:35 - successful or not in a second all right
32:37 - so we've just got past the google
32:39 - sign-in now it's actually closing this
32:41 - page as we know this takes a while so
32:44 - once this is done loading and it
32:45 - redirects us then i will be right back
32:47 - okay so it's redirected us back just
32:49 - searched for rtx 3060
32:51 - looks like it has been successful
32:54 - let's make this larger we can see we're
32:55 - seeing some different graphics cards
32:57 - then of course the program is going to
32:58 - close because now we are finished
33:01 - anyways that is how you actually load a
33:03 - profile and then execute that with
33:05 - camellia now the last thing i want to
33:07 - show you here is that if we actually go
33:09 - to the camellio user interface we're
33:11 - going to see that all of the profiles
33:13 - we've created and loaded as we've been
33:15 - kind of doing this from code are
33:17 - actually going to show up on our ui so
33:19 - notice we have all of these different
33:21 - profiles here a bunch of them we created
33:23 - from the base profiles when we were
33:26 - originally kind of testing and running
33:27 - this application then we have
33:29 - test.camelia which we've loaded in right
33:32 - and then we have a bunch of other
33:33 - unsaved profiles and test2.camelio
33:35 - which we actually manually saved from
33:38 - the code so i just wanted to show you
33:39 - that they show up in the user interface
33:41 - as well all right so now that we've
33:43 - looked at that example the last thing i
33:45 - want to show you how to do is how to
33:46 - connect to a proxy from code so i showed
33:49 - you previously that we can load up the
33:51 - graphical user interface create a new
33:53 - profile and then connect to the proxy
33:55 - however that means we had to load the
33:57 - profile like this to be able to actually
33:59 - use it so sometimes instead you want to
34:01 - make a new profile from code and then
34:04 - directly add the proxy so i'm going to
34:06 - show you how to do that now we're going
34:07 - to use camillo obviously you can connect
34:09 - to a proxy with selenium however you're
34:12 - severely limited because you can't pass
34:14 - authentication information so you can't
34:16 - pass an email you can't pass a password
34:18 - and so it makes it pretty useless if you
34:20 - have an authenticated proxy like we do
34:23 - anyways let's go ahead and get into this
34:25 - so what i'm going to do is open up this
34:27 - documentation here and what i need to do
34:29 - now is create a new profile so i'm just
34:30 - going to copy this we've already seen
34:32 - this here we have base profiles great
34:34 - profile request and then profile i'm
34:36 - going to copy all of this in and simply
34:38 - replace these two lines right here
34:41 - okay so now rather than loading a
34:42 - profile we're going to be creating a new
34:44 - one again we've already seen how to do
34:46 - this the only difference is now we have
34:48 - this dot set proxy method now notice
34:51 - here we're using server so we're setting
34:52 - up the proxy server so i need to import
34:55 - this which i'm going to get from right
34:56 - here so i'm going to steal this import
34:58 - from camillo.localapi
35:01 - models dot server underscore pi three
35:04 - import serv again this documentation
35:06 - will be linked in the description you
35:07 - can very easily find that example
35:09 - anyways we now have this imported so
35:11 - this should all work and what we can do
35:13 - here is connect all different types of
35:14 - proxies so we can connect to a sox5
35:16 - proxy http or https now the proxy that
35:20 - i'm going to use is from bright data and
35:22 - this is going to be http
35:24 - so what i'm going to do now is go to
35:26 - bright data which is right here i'm
35:28 - going to copy in this information into
35:30 - these fields and then i will be right
35:32 - back all right so i've now filled in all
35:34 - my proxy credentials you can see i have
35:36 - my secret my id my port and my host and
35:39 - now i should actually be good to just
35:41 - run this code and see if this works
35:44 - again the only change we've made to
35:45 - connect to a proxy is we've just called
35:47 - dot set proxy make sure you do this
35:49 - import though because you need to import
35:50 - server we then define server we put the
35:53 - type of the proxy and we passed all of
35:55 - our credentials and a login information
35:57 - for the proxy okay so i should be good
35:59 - to run this i'm going to go ahead and
36:01 - run once this is loaded i will show you
36:03 - if it is working or not alright so it
36:05 - looks like the web driver has loaded you
36:07 - can see it's open in front of me right
36:09 - now now i'm going to let it run through
36:10 - this script and then once it's finished
36:12 - i will confirm with you that it is
36:14 - indeed working okay so it has now
36:15 - redirected us back to aliexpress we got
36:18 - through the google sign-in and we can
36:19 - see that it has searched for rtx 3060
36:22 - and everything is all good
36:24 - okay it actually closes that because now
36:26 - we are finished with the program and
36:28 - there you go we have now completed
36:30 - connecting to a proxy from code all
36:32 - right so with that said i'm pretty much
36:34 - going to wrap up the video here there's
36:36 - not really much more that i can mention
36:38 - another massive thank you to camellio
36:40 - for sponsoring this video and i hope
36:41 - this helps you guys get past some
36:43 - selenium restrictions with that said if
36:45 - you enjoyed make sure to leave a like
36:46 - subscribe to the channel and i will see
36:48 - you in another one
36:51 - [Music]
36:57 - you

Cleaned transcript:

hello everybody and welcome to another youtube video so in today's video i'm going to show you how to get past some common problems and issues when you're using selenium now a while ago i made a selenium tutorial series i probably made this about a year and a half ago i'll leave a link to it in the description but what selenium is is a framework that allows you to automate your browser so you can automatically click on things you can download things you can scrape stuff off of websites you can just automate pretty much any task you can make a bot that buys you you know a new shirt or a pair of sneakers or whatever it is that you would normally do as a human in the browser you can automate that with selenium however a lot of websites have advanced security and they can detect when you're using selenium and a lot of you left comments on that series saying that you couldn't get past certain fields or forms or you were running into errors where you were being detected as a bot so in this video i'm going to show you how to get past that and how you can use selenium without the websites knowing that you are a bot and without being limited in specific features so we'll get into that in a second but i first want to give you a demo of this problem actually happening so i have a regular selenium script in front of me you can see i'm importing all my webdriver stuff and what this script actually does is it opens up alibaba and it tries to sign in and then actually search for a product and buy it however you're going to see that when i try to sign in here it actually doesn't let me because it says that my device is a bot or it's not a recognized machine or something along those lines so let me go ahead and run the code here and show you the error that we're going to get so let's run let me just make this full screen so we can see it and now watch what's going to happen so my code is going to automatically close the popup it's going to click the join button it's going to try to sign in with google and then as soon as i try to sign in here it's going to tell me that this browser or app may not be secure so it says try using a different browser if you're already using a supported browser you can try again to sign in so i'm not able to get past this google signin because this can actually detect that i am using selenium and using a bot so in this video i'm going to show you how to get past this specifically but what i'm going to show you how to do should work for any other bot detection security and allow you really to use selenium freely without any restrictions so with that said let's go ahead and get started all right so to be able to get past these restrictions with selenium what we're gonna do is use a piece of software called camellio now camilo is the sponsor of this video but what this platform allows you to do is actually spoof and change your browser fingerprint change your ip address by using something like a proxy and essentially hide the fact that you are a bot and make it appear as though you are a real human user interacting with the website it's a really awesome platform i'm going to show you all of the features in it in a second but essentially what this means is that you can use selenium the exact same way you would have before there's just a few setup steps beforehand where you're going to create a camellio browser instance and you're going to use that to actually interact with the website rather than the regular chrome driver or firefox driver or whatever driver you would have used again all this is going to do is change the browser fingerprint and allow you to kind of change your location language all of that kind of stuff such that you can interact with a website without the website knowing that you are a bot or that you are using selenium so the first thing that we're going to have to do here is we're going to have to make an account on camellia now camellio is paid software i already have a paid account with them but if you want to get access to the software for free then what you can do is just reach out to them i'll leave a link to their website in the description you can request a free trial and if you say that you came from my video then they should give you a free trial and you'll be able to access the platform for a few days or whatever it is that they end up giving you anyways you can do that to try it out before you actually have to pay for anything so what we're going to do is make an account of course i already have an account and once you sign in then what you can do is just go to downloads so i'm going to go to downloads here and then what we want to do is install the camilo installer now camellia works for all kinds of other things as well this isn't just for selenium and you'll note here that they have a mobile installer as well we're not going to deal with that in this video we just want the desktop installer so this is for windows i'm going to click on the download link it's going to download i'm going to run through the installer and then i will have camellio installed now i already have it installed on my computer so i'm just going to open up the program and then we'll go from there all right so i've just opened the camellio application now the way that i've opened this is i've just ran through the installer i've then just typed in camellio ran the app signed into my account and then i was brought to a page that looked like this this is their graphical user interface now inside of here you can actually create browser instances you can create things known as profiles and this allows you to actually open up the browser manually go through and use the browser from say a different location or from a different device or operating system well i'm going to kind of talk to you about how all this stuff works so every time that you go to a website you're going to have a fingerprint associated with your browser now this fingerprint is just data about the machine that you're on the operating system that you're using the browser that you have open your ip address your location your time zone all of this type of stuff now the reason why this fingerprint is going to be kind of passed on to the website is because it needs to know what location you're from mostly what language you're speaking all of these other things so we can actually verify if it wants to allow you to go on the website right so there's a ton of different websites that just don't let you browse them if you're from a different country or maybe they're blocked into certain regions you guys know what i'm talking about for example like us netflix has a lot more movies and shows than canadian netflix does and you can't access us netflix unless you are in the us now how do you think it knows you're in the u.s well it uses your browser fingerprint anyways here in camellio you can change that fingerprint so you can make it look like you're browsing from a different country you can give yourself a different ip address by connecting to a proxy and you can very easily switch between different browser profiles that you set up yourself so say right now you want to connect from like mexico to a website you can do that and then very easily you can load another profile and connect from say the united states or some other random country so for now let's set up a camellio profile look at kind of how that works and how we just use the browser manually and then we'll connect it with selenium so from this interface here i'm just going to click on new profile and what this is going to allow me to do is set up a camellio profile by selecting a device operating system browser and language so for now i want to have a desktop device not a mobile device for the operating system i'm just going to go with windows and then for the browser i'm going to go with chrome of course you can do edge and firefox as well and then for the language i want this to be english okay so we can see we have desktop win32 windows 10 chrome 95 english so i'm going to select this there should be a ton of different options here that you can go through all right so now i'm brought to this page where i can configure some settings for my profile now of course you guys can read through these they're pretty straightforward but you can change things like the time zone the geo location you can connect to a proxy and actually that's what we're going to do right now so whenever you're using camellio you should really be connecting to a proxy this is going to allow you to actually hide your geolocation if you don't connect to a proxy you're going to be using your regular ip address and so websites will actually know that you are from a certain part of the world now this is still not going to be able to detect that you are a bot because camellia will change the fingerprint of the browser but you do need to connect to a proxy if you want to change where you're showing up from so what region in the world you're browsing from so what i'm going to do is go to http here in proxy and now i'm going to show you how we can actually set up a proxy and then use that inside of here when we're connecting or creating a profile with camellia so the proxy that i want to use for this video is actually called bright data where it's from bright data which is a website that i'm going to go to now and start talking about all right so i'm here on the bright data website now this is simply a proxy provider they have all different types of proxies from data center proxies isp proxies residential proxies rotating proxies whatever you can imagine they probably have on here anyways this is paid as well but you can sign up for a free trial and get access to five or ten dollars in free credit if you want to follow along with this video anyways i'll leave a link to the description and what you're going to have to do is make an account sign up for the free trial get the credit and then what you can do is go to your user dashboard so i'm going to go to my user dashboard here the first thing i want to do is just go to proxies and just show you the different options and talk about which one we're going to use so we have mobile shared residential shared data center shared isp regular isp and then unblocked now i won't go through them in detail but what we're going to use here is just the shared residential proxy now what this is a rotating proxy that actually uses a real ip address from a real device so this means you really cannot get banned because you're actually using a legitimate device the only issue you might have here is that other people could be using this ip address as well that's why it's shared anyways the residential is probably the one that you want to use it's also relatively cheap however you could use a data center proxy an isp proxy mobile proxy really depends on your use case and you can read all about the different use cases for these right on the bright data website anyways i want to use the shared residential proxy so what i'm going to do is go here to api and integrations go to proxy and web unlocker api and then what i want to do is select the shared residential proxy right here now first i just have to click on other software you can use these proxies from you know shell node java all the other options they have but since we're going to be plugging this into camellio we just hit other software okay so we're going to go shared residential now what we need to do is pick a country and we want to make sure this country is going to match with the country we chose for the profile of our camellio profile so i'm going to go united states for the destination site you can leave this but it doesn't really matter i'm just going to make it empty and then for an example i mean getting started is fine you could use something else but we're just going to leave getting started and for root we don't need to actually select anything so really just select the type of proxy and then the exit node country and what it's going to do is actually give you all the information you need right here so it says this is the proxy this is the port this is the user and this is the password now what this proxy address will actually do is give you the rotating proxy which means your ip address will change every so often based on usage and a bunch of other factors that i really am not qualified to talk about anyways point is we now have our login information so we're going to use this right inside of camellia okay so i've just split the screen here so we can see all the information as well as the camillo ui so what i want to do is go to where it says proxy hit on http and then for the ip or host name i'm just going to copy this right here okay so i'm going to copy this in for the port we will use this port and then for authentication we're going to check this we're going to put in our username as well as our password so let's go username password like this okay paste and then hit test proxy now when we do that we should see that we get proxy works successfully loaded blah blah blah anyways that means we are good to go so what i'm going to do here is just check on ok and now we have connected the proxy to this profile okay so now our profile is created and we can go ahead and start it so i'm going to click on the start button and we're going to see this should open the chrome browser for us and i'm just going to show you that i'm actually located in the united states here i mean like the proxies united states my actual location is canada so when i go to you know what's my p or where's my location you're going to see that it's showing me in the united states even though i'm actually located in canada so notice it's not even telling me where in the united states it just says you are in the united states that is false i'm currently in canada now if we do something like what's my ip let's see what we're getting here this is the ip this is not actually my public ip address of course i wouldn't show this to you but i'm just proving to you that we are actually spoofing our location and okay here it's saying we're in massachusetts or close to rhode island or something like that anyways it doesn't really matter just wanted to show you that we are actually kind of spoofing the ip address and we are now able to use this browser as if we were browsing from the united states okay so let me close this we don't need this anymore okay so now that this is closed what i'm going to do is actually save this profile because i want to connect to this profile from selenium now you don't have to do this you can actually make a new pro profile from code but we are going to be able to load a profile in so what i'm going to do is go here and click on save as and i'm going to save this as just test.melio inside of my chameleo folder which is where i have all of the camellia code i'm going to use for this tutorial okay so i saved it test.camelio and then if i wanted to load it in so if i reran this application and i wanted to load this profile in again i would just click on browse here i would find the profile i would click to it and open it up and then i would be good to go now these profiles are really cool because they actually save cookie and session data as well which means if you say sign in to google or sign into some website and then you save the profile the next time you load it you're still going to be signed in so anything that you do in the browser it will actually save that's kind of the power of the profiles now of course you can make multiple profiles open profiles i'm sure you guys can figure that out i don't need to explain that anymore now what i'm going to do is hop over to sublime text and i'm going to start showing you how we can actually use camellio to automate the browser alright so now we're actually going to connect python to camellio but before we do that i quickly want to explain how camellio actually works so when you run camellio the graphical user interface what it does is it actually exposes a rest api now this is a local rest api and in fact if i go to a browser tab here and i go to this location you can see that we can actually view all of the endpoints for this api on our local host now the reason i can see this is because i'm currently running camellio if i wasn't running it i wouldn't be able to see this now what we're going to do is we're going to install the python package for camellio which just is a wrapper that interacts with the rest api so it just makes our life a lot easier but if you wanted to you could manually send http commands to localhost colon 5050 and then you could interact with camellia now camellio also has a package for nuget and for npm so if you're working with any net technologies or javascript then it's also very easy to interact with this rest api now the last thing i will mention here is that we actually can run this rest api without having this graphical user interface open now the way we're going to do that is we're going to open up our command prompt and we're going to type in the following command so i'm just going to copy in the path to my camellio cli tool so this is actually the path you guys can go to the appropriate path on your own machine so users slash whatever your username is where you install camilo app data local programs camellio and then slash and then you're going to run the camellio cli dot and then exe now this is actually going to run the command line interface for you which will expose the rest api and allow you to view logging information when you're actually interacting with camellia so if i hit enter here you're gonna see it started this on this port but the application startup failed now the reason it failed is because i need to pass a username and password for authentication when i actually start this so what you need to do is say username or actually i believe it's not username i believe it's email is equal to and then your email and then you say password is equal to your password now of course i can't show you my email and password so i'm going to type these in and run this and then i'll show you how it works all right so i'm now running the cli tool i'm just going to have my editors actually blur out my email here and my password so you guys don't see it but the point is i've now authenticated successfully by passing email equals and then my email and password equals and then my password and now of course if i refresh this page here you're going to see this still works because well the rest api is still running so now that we have this running from the command line interface we also could run it from the graphical user interface doesn't really matter what i'm going to do is install the python package which is called camellio.localapi clocked so i can just copy this command here pip install camillo local api clients i'm going to open up a new command prompt here so let's just run this like here i'm going to insert this command and hit enter now for some reason this pip command doesn't work for you you may not have pip installed in your system path i will leave two videos on the screen that show you how to fix that you also can just try doing the following python and then hyphen m pip install and the camellio.local api client anyways i'm assuming that you guys know how to do that but i just want to show that in case okay so now that we have this installed what we can actually do is finally go to our python code and we can start actually connecting with camellia alright so now i'm actually inside of the code that i showed you at the very beginning of the video that wasn't working and didn't allow us to sign into google what we're going to do is simply refactor this using camellio and getting a web driver from our camellio profile now we're actually going to start by creating a brand new profile from code then i'll show you how to load and save profiles so i'm not really going to explain all of this code here this is just regular selenium code this is not a tutorial on selenium but if you do want to learn selenium and understand how all of this works then what you can do is go to the series that i have on selenium i will put it on the screen and leave it in the description i will also leave all of this code on github and i'll link to that in the description as well as the documentation for camellio in case you get confused when we go through this anyways now that we have camellio installed what i want to do is go up here and start importing some stuff from camellio that we need so as a reminder what we're going to do here is start by creating a new profile from code and then we're going to load that profile use it get access to its web driver and you're going to see that what we had before that wasn't working now hopefully should be working all right so the first thing we're going to do is say from and then this is going to be camellio and dot local underscore api underscore client dot and then local api client again we're going to import the camellio and then this is going to be the local api client now after that we're going to say from camellio this will be dot local api client again except this time it's going to be builder underscore four underscore create underscore profile like that and then we're going to import the builder for create profile now let me just look at my cheat sheet here to make sure this is correct looks good i believe that's all we need for right now so now that we have both of those what i'm going to do is actually remove my web driver here because i no longer need to use the selenium webdriver i'm going to use the camellia webdriver so i'm going to start by defining the base url of the rest api for camellio so i'm going to say camellio and then this will be underscore base underscore url is equal to and then this is going to be localhost colon5050 like that that is where camellio is hosted currently and you need to have camellia running either the cli or the graphical user interface for this to actually work so keep that in mind you need it running in the background otherwise this will not work again either the graphical user interface or the cli so now that i have this what i'm going to do is say my client is equal to and then this is going to be the camellio local api client and i'm going to pass to this the camellio base url and then this should initialize camellia so now i have clients and what i can do is actually search for a base profile and then create a new instance of that base profile so all of this documentation will be linked in the description what i'm going to say is my base underscore profiles is equal to client dot and then this is going to be search and i believe this is base profiles we're going to say base underscore profiles like that what this is going to do is look through the base default profiles the one that we saw on camillo in the graphical user interface and we're going to search for ones that meet some specific criteria sort so what we want here is the device underscore type to be equal to and then this is going to be a desktop like that this is actually going to be lowercase and then for the browser i believe we just say browser like that underscore product actually is going to be equal to and then just chrome so this is going to give us the result for all of the base profiles that have a device of desktop and the product of chrome now for me to have this be valid i just need to add in these right here okay so now we should have access to all of the base profiles and what i want to do is create a new profile based on this base profile or based on one of these base profiles all right so on the next line down i'm going to say the create underscore profile underscore request if we could type this properly is equal to builder for create profile i'm going to do a backslash then dot and this is going to be i guess base or from underscore base underscore profile okay then we're going to pass the base profiles at index 0 dot id the idea here is that this is going to give us a list of profiles all of them that match this criteria there's some other keywords you can pass again i'll leave the documentation in the description anyways we don't really care we just want to get any of them to match this criteria so we'll get the very first one we'll get the id of it and we'll pass that to here for the builder for create profile anyways after this i'm going to do a backslash i'm going to say dot and this is going to be set underscore recommended and then not features but this is actually going to be defaults like that then we're going to do a backslash again and then say dot build okay next we are going to say the profile is equal to and this is going to be client dot and i believe this is just create profile and we're going to pass as the body here the create profile request so what this is going to be here is actually the request for the profile that we want to create we then need to send that request by calling create profile so create profile is actually going to call the rest api that's running it's going to create the profile then it's going to return it to us inside of this profile variable we don't really need to understand how all of this works because we have this nice wrapper that we can use but that's kind of what this is doing okay let me just look at my cheat sheet make sure i didn't mess anything up looks like we are all good for right now and now that we have created the profile the next thing that i want to do is actually get access to the web driver from the profile so i'm going to start by saying options is equal to webdriver dot and then this is going to be chrome options like this now if you want to find where i'm using this web driver i'm just importing it from selenium so of course you're going to need selenium installed as well to follow along with this i kind of assume at this point you all have selenium otherwise i'm not sure why you'd be watching this tutorial anyways we're going to have options equal to webdriver.chrome options then what we're going to do is say options.add and this is going to be underscore experimental underscore option and we're going to say inside of here that the camellio colon and then this is going to be profile id comma and we're going to pass the profile dot id so a little bit strange but we're just pretty much telling this web driver to use camillo so we're saying camilo profile id when we pass the profile d that will be substituted in here and well then we'll have the correct web driver options now what we're going to do is say driver is equal to webdriver dot and then remote and what we're going to do is make our command x executor so let's say command executor like that equal to and then this is going to be fstring inside of here we're going to say camellio and then this is going to be the underscore base underscore url slash and then web driver and then we're going to say the options is equal to options of course we need a comma and i don't think we need backslashes actually i think this is good okay so there we go obviously i don't have all of this memorized i'm just reading this right from the camellia documentation again i'm going to keep saying it is in the description okay so let's just run through what we did here because i understand this is a lot of code so what we did is define the base url of camellio just where it's running like the local api right so it's running on localhost port 5050. then we are creating a client pretty straightforward remember we imported these two things right here next we're saying the base profiles is equal to client.search based profiles we're searching for the device type of desktop and the browser product of chrome we could also search by language and by i believe operating system as well anyways we then have create profile request so we're saying builder for create profile dot from base profile base profile zero so just getting the first one and the id of it we're setting the recommended defaults and then building this request then we're going to say profile is equal to client.gradeprofile pass in the body here which is going to be the request this will then give us the profile now that the profile is created what we need to do is make a web driver that uses this profile so this here webdriver again this is coming right from selenium so we're saying options webdriver.com options we're going to add an experimental option this is going to tell the web driver to use camellio then when we run the webdriver we're going to set webdriver.remote we're going to pass the command executor as the base url so our kind of local host api client slash webdriver and then the options equal to the options this will then return to us an actual web driver that uses camellio so now i don't need to mess with the rest of my code at all because it's using a variable called driver so now i'm just going to be using my regular web driver here from camellia hopefully that makes sense but at this point in time that's really all you need to know to use a camilo profile now just use this driver object here as your web driver and you will have your browser fingerprint changed and you shouldn't be detected as a bot alright so i was about to just run the code but after reading through this quickly i realized there's a few minor mistakes so let's just go ahead and fix those quickly so first we're going to go to our import statement here and notice how i was kind of thrown off that these were the same name so local api client twice well they actually aren't i just read it incorrectly this is going to be camellio and then underscore local api client so make that change in the first import statement my apologies also we need to change this from all capital on api to a lower case for p and i which means we also need to change that here another error that we had is i had from base profile here this is actually going to be for base profile so let's fix that and one thing that i forgot to do was start my profile so after we create the profile it's not yet started i actually need to start it and the way i start it is client dot and then start underscore profile and i just pass the profile dot id like this okay we should be good to go now again my apologies on those mistakes but that's what happens when you're programming now fingers crossed let's run the code and see if this works all right so we can see that we have loaded up aliexpress here we should hopefully close the popup it's going to click on the join button sign in with google it's going to bring us to this page we're going to enter our information here and we should be good to go here once this closes let's see all right so we are now back on alibaba it searches for rtx 3060s which is what i have the script actually doing and then notice it shows us all of these options okay so let's make this larger here and there we go we are good to go so that is how this works right using camellia we were able to sign in whereas when we were using just regular selenium it didn't allow us to do so so that's as easy as it is to get started with uh camellio now what i want to show you how to do is how to save a profile and how to load a profile because a lot of times as soon as you kind of do all of this tedious stuff signing in whatever you want to save your browser information your cookies all of that data and then load that in another time so let's go ahead and do that all right so i've just pulled up the documentation for actually saving the profile for camellio now what i'm going to do is just copy in some of the stuff here to save us a bit of time so we need this import right here to save the profile notice there's a save profile request so i'm going to copy that in we'll put that at the top of our code right here let's go back to this which is right here and we can see that to save the profile we first need to actually stop it which is something that i haven't done yet so we'll look at that in a second then we're going to grab the path where we want to save the profile to and we're going to use the save profile request so let me just copy all this and then we'll kind of walk through this step by step so after all of our stuff is done here what i'm going to do is i'm going to stop my profile now my profile is stored in profile so it's fine to say client.profile and then stop the profile id then what we need to do here is actually generate the path where we want to save this file to now this involves me importing os so let's do this actually os is already imported so i don't need to do that anyways we have os imported so this is going to get the directory name and the path of where the current file is and then we're going to save this as test2 dot camellio because we have test already saved in this directory anyways then we're going to say result is equal to client.save profile pass the profile id we want to save and the save profile request which just takes in the path and says where on our system we want to save this then what this does just print out profile has been saved to and then the result of here dot last known path so we can run this one more time and actually while i run this this time i want to open up the cli and show you that we're actually going to see kind of the logs and information happening here while this runs so let's just split this on the screen i didn't mean to minimize that let's turn this over here so as this runs you're going to see you know information occurs on here it says profile with id has been started successful received web driver connection and then as soon as we save and uh i guess stop the profile you're gonna see that in here as well okay so let's give it a second this part takes a few seconds to run all right so we can see here that the profile with id has been stopped successfully and then profile with id has been saved what i will do is open up my windows explorer and show you this file alright so i now have my windows explorer open notice i have a bunch of files inside of here and while test2 was just saved at this time when i'm actually recording video anyways what i'm going to do now is show you how we can load a profile so rather than having to go through all these steps of actually creating a profile from a base profile we're just going to load a profile from a file let's do that now so again i've just opened up the camellio documentation we can just copy and paste a few things in here so i'm going to copy in the load profile request import statement so let's put that up here before i copy anything else let me just delete a few things here so i don't need to create a profile i don't need to search the base profiles so i can get rid of all of this and for now i'm just going to say profile is equal to none and then we're going to load it in in a minute now i also don't want to save this profile anymore so i'm going to get rid of all of this right here okay but we will stop the profile so now let's go back to our documentation which is right here and let's find where we load in a profile looks like we do it right here so we're going to say profile is equal to client dot load profile turns out we're actually going to need this path so i'll copy that in in a second so i'm going to say profile is equal to this start profile that's fine we can start the profile and i need to copy in this path variable right here okay so let's do this we're going to say path is equal to this this time i'm going to access the test profile the reason for that is i want to access the profile that we created at the beginning of the video that's connected to the proxy then i'm going to say profile is equal to client.load profile the body will be equal to load profile request we'll pass the path which we defined right here and then i'm going to say client dot start profile we're going to get the web driver and we're going to do everything we did before pretty straightforward let's go ahead and run this and see if this works alright so i've just split the windows here so we have both the cli tool as well as the web browser now i'm gonna let the program run through here and then i'll confirm with you if it's successful or not in a second all right so we've just got past the google signin now it's actually closing this page as we know this takes a while so once this is done loading and it redirects us then i will be right back okay so it's redirected us back just searched for rtx 3060 looks like it has been successful let's make this larger we can see we're seeing some different graphics cards then of course the program is going to close because now we are finished anyways that is how you actually load a profile and then execute that with camellia now the last thing i want to show you here is that if we actually go to the camellio user interface we're going to see that all of the profiles we've created and loaded as we've been kind of doing this from code are actually going to show up on our ui so notice we have all of these different profiles here a bunch of them we created from the base profiles when we were originally kind of testing and running this application then we have test.camelia which we've loaded in right and then we have a bunch of other unsaved profiles and test2.camelio which we actually manually saved from the code so i just wanted to show you that they show up in the user interface as well all right so now that we've looked at that example the last thing i want to show you how to do is how to connect to a proxy from code so i showed you previously that we can load up the graphical user interface create a new profile and then connect to the proxy however that means we had to load the profile like this to be able to actually use it so sometimes instead you want to make a new profile from code and then directly add the proxy so i'm going to show you how to do that now we're going to use camillo obviously you can connect to a proxy with selenium however you're severely limited because you can't pass authentication information so you can't pass an email you can't pass a password and so it makes it pretty useless if you have an authenticated proxy like we do anyways let's go ahead and get into this so what i'm going to do is open up this documentation here and what i need to do now is create a new profile so i'm just going to copy this we've already seen this here we have base profiles great profile request and then profile i'm going to copy all of this in and simply replace these two lines right here okay so now rather than loading a profile we're going to be creating a new one again we've already seen how to do this the only difference is now we have this dot set proxy method now notice here we're using server so we're setting up the proxy server so i need to import this which i'm going to get from right here so i'm going to steal this import from camillo.localapi models dot server underscore pi three import serv again this documentation will be linked in the description you can very easily find that example anyways we now have this imported so this should all work and what we can do here is connect all different types of proxies so we can connect to a sox5 proxy http or https now the proxy that i'm going to use is from bright data and this is going to be http so what i'm going to do now is go to bright data which is right here i'm going to copy in this information into these fields and then i will be right back all right so i've now filled in all my proxy credentials you can see i have my secret my id my port and my host and now i should actually be good to just run this code and see if this works again the only change we've made to connect to a proxy is we've just called dot set proxy make sure you do this import though because you need to import server we then define server we put the type of the proxy and we passed all of our credentials and a login information for the proxy okay so i should be good to run this i'm going to go ahead and run once this is loaded i will show you if it is working or not alright so it looks like the web driver has loaded you can see it's open in front of me right now now i'm going to let it run through this script and then once it's finished i will confirm with you that it is indeed working okay so it has now redirected us back to aliexpress we got through the google signin and we can see that it has searched for rtx 3060 and everything is all good okay it actually closes that because now we are finished with the program and there you go we have now completed connecting to a proxy from code all right so with that said i'm pretty much going to wrap up the video here there's not really much more that i can mention another massive thank you to camellio for sponsoring this video and i hope this helps you guys get past some selenium restrictions with that said if you enjoyed make sure to leave a like subscribe to the channel and i will see you in another one you
