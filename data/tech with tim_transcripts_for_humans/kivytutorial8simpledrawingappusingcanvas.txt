With timestamps:

00:00 - hey guys and welcome back to the kibbeh
00:02 - tutorial so in today's video I want me
00:04 - to be going into creating a very simple
00:06 - and basic drawing application and all
00:08 - we're gonna do essentially so I'm just
00:10 - gonna have a square and I'm gonna have
00:11 - that square move and just follow my
00:13 - mouse around the screen and then if we
00:15 - press down like it'll print a square
00:17 - what not to the screen this just
00:19 - introduce you to kind of the graphic
00:20 - system and Kivi I don't want to go too
00:22 - far into this because it does get kind
00:23 - of complex but this is a brief
00:25 - introduction to show you guys what you
00:27 - are capable of doing with it and if
00:30 - you're interested in that let me know
00:31 - when I may make another video on this in
00:33 - the future but I will leave the docs in
00:35 - the description so you guys can read
00:36 - through them they're pretty
00:37 - self-explanatory in terms of how to
00:39 - create different shapes and objects what
00:40 - I'm going to show you here will give you
00:42 - enough of a foundation to I don't know
00:44 - draw some basic shapes onto your screen
00:45 - or whatnot so the first thing we're
00:47 - gonna do is we're gonna import Q dot
00:49 - graphics okay and we need this just to
00:51 - be drawing obviously so from Q dot
00:53 - graphics are gonna import rectangle with
00:57 - capital and we're gonna do the same
00:58 - thing here so from Q dot graphics and
01:01 - we'll import what was it color so the
01:05 - way that drawing works in in Kibby is it
01:08 - kind of based off of something called
01:09 - opengl so if you guys have used opengl
01:12 - before you'd be very familiar with how
01:13 - this works if you haven't don't worry
01:15 - but essentially you have a canvas and
01:17 - that canvas contains drawing
01:19 - instructions and you can give
01:21 - instructions to the canvas obviously to
01:23 - draw different things and then you can
01:25 - update those positions it's a little bit
01:27 - different than how pygame works in terms
01:28 - of you just draw something it gets
01:29 - blended to the screen and then you have
01:31 - to draw over it if you want to get rid
01:33 - of it um this is not it doesn't work
01:35 - that way so essentially you don't have
01:36 - to draw over top your canvas each frame
01:38 - you can just update an instruction and
01:40 - we'll move that object accordingly and
01:43 - you guys will see how that works in a
01:44 - second that's what I'm going to do here
01:46 - and this is just based off of our last
01:47 - video as well is I've just cleared this
01:50 - KB file you don't need anything in here
01:52 - and all I'm gonna do is actually just
01:54 - define it on it and here because we need
01:56 - to do something here so when I say
01:57 - define a nips I will do the same thing
02:00 - that we've done before so we'll do
02:01 - Korg's here and then we're just gonna
02:03 - have to call the super constructor so
02:05 - super underscore underscore knit and
02:06 - then what was in here Korg's I believe
02:12 - and then here we have touch and self
02:16 - okay so there we go we have our
02:19 - initialization and what we're gonna do
02:20 - in here is we're going to draw a
02:22 - rectangle so the way that we draw
02:23 - anything and set up the initial drawing
02:27 - instruction as we say with and we say
02:29 - self dot canvas because this this widget
02:34 - inheriting from widget actually has a
02:35 - canvas property that we can use say with
02:38 - self duck canvas and then here what
02:40 - we're gonna do is we're gonna say
02:43 - rectangle
02:44 - so we'll say self thought record sorry
02:47 - equals rectangle and then we're gonna
02:49 - give some properties for this rectangle
02:51 - so I believe I have to actually look
02:53 - here cuz I forget how you do this oh yes
02:56 - okay so all we have to do is just give
02:58 - it a position which is a tuple and a
03:00 - size which is a tuple as well so for my
03:03 - size I'll get 50 50 and for my position
03:06 - we'll give an initial position of 0 0 so
03:09 - actually I'll form you go any further
03:10 - let's just run this and make sure
03:12 - everything's working okay so you can see
03:14 - that we have a nice little rectangle in
03:16 - the bottom left hand corner of our
03:18 - screen at 0 0 okay awesome stops working
03:21 - so how do we change the color of this
03:23 - rectangle so you might notice the only
03:24 - two things that we can give this
03:26 - rectangle is position and a size so how
03:29 - do we give it a color well it's actually
03:32 - kind of weird how you do this but
03:34 - essentially you have to change the
03:35 - drawing color of the entire canvas
03:38 - before you can change the color of an
03:41 - object so well that's why I imported
03:42 - color here so what we have to do is you
03:43 - have to you look at this color and then
03:47 - is that how you do it I think that's how
03:49 - you do it actually and we're gonna I'm
03:50 - just gonna copy this one in because I
03:52 - don't know what this color code is but I
03:53 - believe this is red so what you do here
03:56 - is you're gonna give it RG be a this is
03:58 - your alpha value and then obviously you
04:01 - can specify the mode so in this case
04:02 - it's mode RGB a so when we do this what
04:05 - we're gonna be doing is changing the
04:07 - color of this canvas drawing and then
04:10 - this rectangle should show up red so
04:12 - let's try that
04:12 - and there we go so now we can see we
04:15 - have a red rectangle instead so if you
04:17 - want to mess around with the different
04:18 - colors here you have to look up the
04:19 - codes because I don't know all the color
04:20 - codes for RGB a but that's the mode that
04:23 - we're gonna do and this is how you
04:24 - change the color
04:25 - so let's just mess around with drawing a
04:27 - few other rectangles just to see what
04:29 - happens and how we can change the color
04:31 - again and what not so let's change the
04:33 - color let's just make this one we'll
04:36 - copy this rectangle code and let's just
04:39 - change our position to zero 300
04:42 - all right let's actually just go 200 300
04:44 - see where that shows up and go size of
04:46 - 150 and let's around that okay so now
04:50 - you can see we're getting this kind of
04:51 - yellowish rectangle I'm showing up in
04:53 - that position and just notice if we
04:56 - resize here right how we will move down
04:59 - if we change and we will move to the
05:00 - left but if we go right nothing's gonna
05:02 - happen and that's because we're at a
05:03 - static position
05:04 - we're not dynamically placing this using
05:07 - like a root and whatnot okay so just
05:09 - something to keep in mind there all
05:11 - right so there we go we have those
05:12 - rectangles so now let's actually make it
05:14 - so that the rectangle follows our mouse
05:17 - around so that's why I've left this on
05:18 - touch down on touch move on touch up
05:20 - events actually we don't need this on
05:22 - touch up so we can get rid of that but
05:24 - what I'm gonna do is I'm just going to
05:25 - show you how we can change the the
05:27 - property of our rectangles when we're
05:29 - moving so I'm actually just gonna get
05:31 - rid of this rectangle because we only
05:33 - need this first one and the way we can
05:34 - do this actually very easy only if there
05:36 - is just a self-taught rect dot position
05:39 - equals and then we'll just say a touch
05:40 - dot pause and now you'll notice that
05:43 - that's little a all we have to do so
05:45 - that when we click the mouse it's going
05:46 - to go to that position now we're
05:48 - actually just gonna do the same thing in
05:49 - on touch move so that if we hold down
05:51 - the mouse and move our rectangle around
05:52 - it will follow our mouse as well so
05:54 - let's try this and we have the Red
05:57 - Square ready I can click here and it'll
05:59 - follow my mouse wherever I go now if I
06:01 - hold down you can see that it's
06:03 - following exactly where I go and
06:05 - obviously we're printing out all the
06:06 - mouse motion events so that's pretty
06:08 - straightforward how that works now
06:11 - obviously there's a lot more things you
06:13 - can do with this in terms of drawing you
06:14 - can draw lines so for example from Kibby
06:17 - duck
06:17 - graphics import and we'll import line
06:22 - there and if we want to draw a line to
06:25 - do that you simply do line and then I
06:28 - think you give it like a bunch of
06:29 - positions I have to look on this thing
06:31 - so I forget yeah so you say points like
06:34 - this points equals and then all we're
06:36 - going to do in here is just add a bunch
06:37 - of XY points so
06:39 - you just say like 20 30 400 500 6500
06:46 - let's try that and just see what we get
06:48 - I have no idea what that's gonna draw
06:49 - for us so you can see now we have a line
06:51 - going from the points that we've
06:52 - specified and you guys can mess around
06:55 - with that and obviously if you wanted to
06:56 - change the color of this line same thing
06:58 - you'd have just have to redefine color
07:00 - up top let's get rid of that and let's
07:02 - add one here and see what we get for our
07:05 - line color and now we're getting a green
07:07 - line starting here going up like that
07:09 - okay so I think that's on the show for
07:12 - just simple drawing now that's how you
07:15 - can kind of move stuff around in the
07:17 - next video I'm gonna get into multiple
07:18 - windows so how we're gonna go back into
07:20 - kind of GUI stuff I just wanted to
07:22 - introduce you this drawing it's not
07:23 - something I want to touch on a lot and
07:25 - we're gonna get into building a multi
07:27 - what do you call it window GUI so we can
07:30 - go from window to window we can have our
07:32 - KB file and it shows like what's gonna
07:35 - be on each window so we can go do maybe
07:36 - a login form and then when you log in
07:38 - it'll show you what was I saying before
07:39 - like your secret notes or something like
07:41 - that okay so with that being said
07:42 - that'll be it for this video if you guys
07:44 - enjoyed please make sure you leave a
07:46 - like and subscribe and I will see you
07:47 - again in the next one
07:48 - [Music]

Cleaned transcript:

hey guys and welcome back to the kibbeh tutorial so in today's video I want me to be going into creating a very simple and basic drawing application and all we're gonna do essentially so I'm just gonna have a square and I'm gonna have that square move and just follow my mouse around the screen and then if we press down like it'll print a square what not to the screen this just introduce you to kind of the graphic system and Kivi I don't want to go too far into this because it does get kind of complex but this is a brief introduction to show you guys what you are capable of doing with it and if you're interested in that let me know when I may make another video on this in the future but I will leave the docs in the description so you guys can read through them they're pretty selfexplanatory in terms of how to create different shapes and objects what I'm going to show you here will give you enough of a foundation to I don't know draw some basic shapes onto your screen or whatnot so the first thing we're gonna do is we're gonna import Q dot graphics okay and we need this just to be drawing obviously so from Q dot graphics are gonna import rectangle with capital and we're gonna do the same thing here so from Q dot graphics and we'll import what was it color so the way that drawing works in in Kibby is it kind of based off of something called opengl so if you guys have used opengl before you'd be very familiar with how this works if you haven't don't worry but essentially you have a canvas and that canvas contains drawing instructions and you can give instructions to the canvas obviously to draw different things and then you can update those positions it's a little bit different than how pygame works in terms of you just draw something it gets blended to the screen and then you have to draw over it if you want to get rid of it um this is not it doesn't work that way so essentially you don't have to draw over top your canvas each frame you can just update an instruction and we'll move that object accordingly and you guys will see how that works in a second that's what I'm going to do here and this is just based off of our last video as well is I've just cleared this KB file you don't need anything in here and all I'm gonna do is actually just define it on it and here because we need to do something here so when I say define a nips I will do the same thing that we've done before so we'll do Korg's here and then we're just gonna have to call the super constructor so super underscore underscore knit and then what was in here Korg's I believe and then here we have touch and self okay so there we go we have our initialization and what we're gonna do in here is we're going to draw a rectangle so the way that we draw anything and set up the initial drawing instruction as we say with and we say self dot canvas because this this widget inheriting from widget actually has a canvas property that we can use say with self duck canvas and then here what we're gonna do is we're gonna say rectangle so we'll say self thought record sorry equals rectangle and then we're gonna give some properties for this rectangle so I believe I have to actually look here cuz I forget how you do this oh yes okay so all we have to do is just give it a position which is a tuple and a size which is a tuple as well so for my size I'll get 50 50 and for my position we'll give an initial position of 0 0 so actually I'll form you go any further let's just run this and make sure everything's working okay so you can see that we have a nice little rectangle in the bottom left hand corner of our screen at 0 0 okay awesome stops working so how do we change the color of this rectangle so you might notice the only two things that we can give this rectangle is position and a size so how do we give it a color well it's actually kind of weird how you do this but essentially you have to change the drawing color of the entire canvas before you can change the color of an object so well that's why I imported color here so what we have to do is you have to you look at this color and then is that how you do it I think that's how you do it actually and we're gonna I'm just gonna copy this one in because I don't know what this color code is but I believe this is red so what you do here is you're gonna give it RG be a this is your alpha value and then obviously you can specify the mode so in this case it's mode RGB a so when we do this what we're gonna be doing is changing the color of this canvas drawing and then this rectangle should show up red so let's try that and there we go so now we can see we have a red rectangle instead so if you want to mess around with the different colors here you have to look up the codes because I don't know all the color codes for RGB a but that's the mode that we're gonna do and this is how you change the color so let's just mess around with drawing a few other rectangles just to see what happens and how we can change the color again and what not so let's change the color let's just make this one we'll copy this rectangle code and let's just change our position to zero 300 all right let's actually just go 200 300 see where that shows up and go size of 150 and let's around that okay so now you can see we're getting this kind of yellowish rectangle I'm showing up in that position and just notice if we resize here right how we will move down if we change and we will move to the left but if we go right nothing's gonna happen and that's because we're at a static position we're not dynamically placing this using like a root and whatnot okay so just something to keep in mind there all right so there we go we have those rectangles so now let's actually make it so that the rectangle follows our mouse around so that's why I've left this on touch down on touch move on touch up events actually we don't need this on touch up so we can get rid of that but what I'm gonna do is I'm just going to show you how we can change the the property of our rectangles when we're moving so I'm actually just gonna get rid of this rectangle because we only need this first one and the way we can do this actually very easy only if there is just a selftaught rect dot position equals and then we'll just say a touch dot pause and now you'll notice that that's little a all we have to do so that when we click the mouse it's going to go to that position now we're actually just gonna do the same thing in on touch move so that if we hold down the mouse and move our rectangle around it will follow our mouse as well so let's try this and we have the Red Square ready I can click here and it'll follow my mouse wherever I go now if I hold down you can see that it's following exactly where I go and obviously we're printing out all the mouse motion events so that's pretty straightforward how that works now obviously there's a lot more things you can do with this in terms of drawing you can draw lines so for example from Kibby duck graphics import and we'll import line there and if we want to draw a line to do that you simply do line and then I think you give it like a bunch of positions I have to look on this thing so I forget yeah so you say points like this points equals and then all we're going to do in here is just add a bunch of XY points so you just say like 20 30 400 500 6500 let's try that and just see what we get I have no idea what that's gonna draw for us so you can see now we have a line going from the points that we've specified and you guys can mess around with that and obviously if you wanted to change the color of this line same thing you'd have just have to redefine color up top let's get rid of that and let's add one here and see what we get for our line color and now we're getting a green line starting here going up like that okay so I think that's on the show for just simple drawing now that's how you can kind of move stuff around in the next video I'm gonna get into multiple windows so how we're gonna go back into kind of GUI stuff I just wanted to introduce you this drawing it's not something I want to touch on a lot and we're gonna get into building a multi what do you call it window GUI so we can go from window to window we can have our KB file and it shows like what's gonna be on each window so we can go do maybe a login form and then when you log in it'll show you what was I saying before like your secret notes or something like that okay so with that being said that'll be it for this video if you guys enjoyed please make sure you leave a like and subscribe and I will see you again in the next one
