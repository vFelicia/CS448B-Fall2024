With timestamps:

00:00 - hello everybody and welcome back so my
00:02 - name is Tim and I am a second year
00:03 - computer science major what are we doing
00:06 - in this video is talking about the
00:07 - fundamental issues with the computer
00:09 - science or software engineering degree
00:11 - now the reason I'm making this video is
00:13 - because it's the year 2020
00:14 - you know the stem hype is real everyone
00:17 - and anyone is learning to program and
00:19 - changing into these stem and kind of
00:20 - science and tech related fields with the
00:23 - kind of idea that they're going to
00:24 - graduate and make a ton of money or get
00:26 - an awesome job now that's definitely
00:28 - possible and no hundreds of thousands of
00:30 - people are doing just that but you might
00:33 - not be the person that's going to be
00:34 - able to achieve that now I'm not trying
00:36 - to do this to be you know like de
00:38 - motivating but I really think you guys
00:39 - should listen to this video if you're
00:41 - someone that's maybe not super
00:42 - passionate about computer science or
00:44 - software engineering but it's jumping
00:46 - into this field so anyways let's go
00:48 - ahead and get started and talk about the
00:49 - problems with the computer science or
00:51 - software engineering degree now the
00:53 - first problem with computer science or
00:55 - software engineering is the lack of
00:56 - applicable skills or workplace skills
00:59 - now what I mean by this is essentially
01:01 - what you learn in your computer science
01:03 - degree is completely different than what
01:05 - you're going to end up doing at whatever
01:07 - job you end up working at now you might
01:09 - say this about every degree but this is
01:11 - specifically important for computer
01:12 - science because a lot of times when you
01:14 - go to get a job not only is it required
01:16 - that you have a computer science degree
01:17 - but it's required that you know or
01:19 - familiar with or have worked with a
01:21 - certain degree of key technologies or
01:23 - tools or even programming languages now
01:26 - universities are kind of you know famous
01:28 - for teaching outdated and older content
01:30 - and that's one of the main problems here
01:32 - so what you really need to do if you're
01:33 - in university is be learning these
01:35 - skills in your spare time now this
01:38 - actually leads me nicely into the
01:39 - sponsor of today's video which is simply
01:41 - learned I need to thank simply learn for
01:43 - sponsoring this video and giving you all
01:44 - a discount on their data science
01:45 - master's course that's been co-developed
01:47 - with IBM this course is comprised of six
01:49 - full courses covering key technologies
01:51 - like our SAS Python tableau Hadoop and
01:55 - spark while working through this course
01:57 - he'll develop 15 real-life projects and
01:59 - master over 30 in-demand skills you will
02:01 - work with advanced analytics tools such
02:03 - as pandas use data collection tools like
02:05 - Apache HBase and learn ETL tools like
02:07 - hive Pig and scoop by purchasing this
02:10 - course you'll have lifetime access to
02:11 - all the course content and lecture
02:13 - receive 1200 USD worth of IBM cloud
02:15 - credits and have access to the IBM cloud
02:17 - platforms like IBM Watson for 24/7
02:20 - practice upon completion will receive
02:22 - certificates from IBM and simply learn
02:24 - to testify to your skills as an expert
02:26 - in data science click the link in the
02:28 - description to get started so what I
02:30 - just showed you guys is not simply
02:32 - learned kind of add is an example of
02:33 - something you can do to learn these
02:36 - skills now that obviously is a little
02:37 - bit more extreme that's a huge massive
02:39 - course it's gonna teach you a ton of
02:41 - different things but just go and read
02:43 - through any different job postings if
02:44 - you're in computer science or software
02:46 - engineering and you know thinking about
02:47 - getting a job soon and start looking at
02:49 - the requirements that you need you know
02:51 - you need to know SQL you need to know
02:53 - front-end development you need to know
02:54 - this framework needs to know these three
02:56 - languages there's a lot of things that
02:58 - you're not going to have learned in a
03:00 - traditional computer science degree
03:02 - where you may be only covered two or
03:03 - three lane languages you didn't do with
03:05 - framework you haven't made an Android
03:07 - application and most of the jobs for
03:09 - computer science that are not these
03:11 - crazy high tech positions are very
03:13 - specific you need to be a developer in a
03:15 - very specific specific domain you need
03:18 - to know exactly what you're doing in a
03:19 - specific area or technology and other
03:22 - than you know kind of crappy entry level
03:24 - like automation and testing jobs you
03:26 - have to have these skills to get that
03:27 - job so this is the first issue with
03:29 - computer science is that a lot of the
03:31 - skills that you're learning throughout
03:32 - this degree like one compared to other
03:34 - degrees you're not actually gonna be
03:35 - able to bring and apply to your job and
03:37 - you're gonna have to learn new ones now
03:39 - this is totally fine but this is
03:41 - something you need to consider if you're
03:42 - jumping into this degree that a lot of
03:44 - the time you're gonna have to spend your
03:46 - spare time learning new modules learning
03:48 - new technologies you can't merely just
03:51 - do your degree and then expect it to
03:53 - jump out there and go get an amazing job
03:55 - there's a lot of extra work that goes
03:57 - into it and if you're not passionate
03:58 - about computer science chances are
04:00 - you're not gonna want to do that work
04:01 - alright so point number two is very
04:03 - similar to point number one but I think
04:05 - it's you know important enough to put an
04:07 - emphasis on it what you're learning in
04:09 - your classes most likely is already
04:12 - outdated technology now what I mean by
04:14 - that is I have a class for example where
04:16 - I'm looking at PowerPoint slides in my
04:18 - lab that were created in 2011 2010 right
04:22 - when the version of Windows isn't even
04:24 - the same on the
04:25 - utor they're showing you the example
04:26 - with than it is on my laptop or whatever
04:28 - right so that's just another big issue
04:30 - with computer science and education in
04:32 - general when it comes to fields that are
04:34 - growing so quickly like this they can't
04:36 - keep up right by the time they create a
04:38 - good curriculum for a specific
04:39 - technology tool or even just concept
04:41 - there's already something out that's
04:43 - better than it and this is a huge issue
04:44 - and kind of de motivating when it comes
04:46 - to computer science is that a lot of
04:48 - what you are learning in this degree is
04:50 - really outdated technology it's stuff
04:53 - that you know it's kind of cool to learn
04:54 - but there might be like 10 companies
04:56 - still using it right there's just really
04:59 - old stuff and you know I'm sure this
05:01 - isn't yesterday if you go to a top to
05:02 - your computer science school but if
05:04 - you're in kind of like a decentralized a
05:10 - dated curriculum I mean we know how
05:12 - quickly the education system moves and
05:14 - that's just something to think about is
05:16 - that you might not be working on you
05:17 - know the coolest newest stuff and if you
05:19 - are that's a luxury right I've been like
05:21 - I've used some software from like 2006 I
05:24 - think in some of my labs that doesn't
05:26 - even work they no longer have support
05:28 - for it you can't even download it on
05:29 - your home computer because it only works
05:31 - for Windows XP or Windows 7 so just
05:33 - something to consider it's a really
05:35 - outdated field and what this means is
05:36 - that you know like I said before you're
05:38 - gonna have to do a lot of work to learn
05:40 - these new frameworks and modules on your
05:42 - own time and that better mean that you
05:44 - know you enjoy computer science and you
05:45 - like learning that because if you don't
05:47 - that is really just gonna be hell for
05:48 - you you're gonna consider that almost
05:50 - another class right just to get a job
05:52 - and to learn a new skill but if you're
05:54 - into computer science and you're
05:55 - passionate about it you know that
05:56 - shouldn't be an issue that might be
05:57 - something that's even interesting to you
05:59 - you're gonna learn some older tack okay
06:00 - and then you're also gonna learn that
06:02 - new stuff and use your experience from
06:04 - the older tech to maybe learn that and
06:06 - get better with it so anyways that is a
06:07 - point number two so on to point number
06:10 - three which is the fact that computer
06:13 - science is extremely theoretical and
06:15 - when I say extremely I genuinely mean
06:18 - extremely you don't really realize how
06:21 - much math and theory and kind of
06:23 - background goes into computer science
06:26 - until you're in the degree like I am I
06:28 - have taken what is it Abhiyan 20 courses
06:30 - now so I've done 15 I'm enrolled in five
06:33 - and of those courses I believe I've
06:35 - ridden code and actually done
06:37 - development
06:37 - in six of them that number I need to
06:40 - fact-check because I'm not a hundred
06:41 - percent sure but that is like my
06:43 - estimate of how many classes I've
06:44 - actually done any development in
06:46 - computer science now as I get older and
06:48 - as I go into my third and fourth years
06:51 - there will be more programming and more
06:52 - computer science II kind of classes but
06:54 - this is something to consider that a lot
06:56 - of what you are learning in this degree
06:58 - is a very theoretical that's not to say
07:00 - that it's not important thing you don't
07:02 - need to know it but there's a lot of
07:03 - times where you kind of lose the fact
07:06 - that you're not applying this to a real
07:08 - life project you're not you know putting
07:09 - this into work you're not writing code
07:11 - to model this you're just you know on
07:13 - paper doing stuff by hand and it just is
07:16 - a little bit too motivating ask someone
07:18 - who's really into development and likes
07:20 - doing computer science stuff you don't
07:21 - get to see where do I actually use this
07:23 - you know where why am i learning all
07:25 - this math and all this background
07:27 - because you never really apply it and
07:29 - that's another issue that I have
07:30 - personally with the degree is they're
07:32 - teaching us these really useful skills
07:34 - like you know discrete mathematics and
07:35 - linear algebra but unless you really go
07:38 - out of your way you're not seeing this
07:40 - applied in the discipline like you
07:42 - should be now this might be a little bit
07:43 - different for software engineering
07:45 - because I know software engineering is
07:46 - more of a hands-on degree than Computer
07:48 - Sciences but a point that I wanted to
07:50 - make because this field is very very
07:52 - theoretical a lot of what you're doing
07:54 - is just you know proofs and math and you
07:57 - know some people like that
07:58 - I'm okay with it but I would like to see
08:01 - this applied more in the field and see
08:03 - like where am I actually gonna use this
08:04 - proof in math when it comes to
08:06 - developing code and you know in like a
08:07 - workplace environment so the last point
08:10 - I want to make here is about money
08:12 - now let's not lie to ourselves here a
08:13 - lot of us have probably gone into the
08:15 - computer science or software engineering
08:17 - field because of the opportunity to make
08:19 - a lot of money now there's a lot of
08:21 - different ways to do this in software
08:23 - engineering and computer science but all
08:25 - I'm going to say is you're not going to
08:26 - do that by just doing one of these
08:28 - degrees just getting one of these
08:30 - degrees is enough to get you like a
08:32 - decent entry-level job where you're
08:34 - probably gonna be making in Canada where
08:36 - I live and you guys can do the
08:37 - conversion rate like 70 grand a year 65
08:39 - grand a year and you know that's a very
08:41 - high starting salary but for what you
08:43 - did to get this degree that's not
08:46 - probably what you're looking for out of
08:48 - it there's a lot of other degrees that
08:50 - you can do
08:50 - that allow you know some better career
08:52 - developments and better just are easier
08:54 - and cheaper in general that can make you
08:56 - that kind of money or that you can at
08:57 - least get to that kind of money fairly
08:59 - quickly computer science can be
09:00 - extremely lucrative if you get into one
09:02 - of these top-tier companies like Google
09:04 - Microsoft Amazon Facebook whatever but
09:06 - if you're not there you're not going to
09:08 - be seeing these crazy high salaries that
09:10 - you know you're seeing all around the
09:12 - board you were hearing people and you
09:13 - know making 200k as an entry level
09:15 - engineer well that's because they're
09:17 - very good at what they do right you know
09:19 - they've a landed that job they've
09:21 - probably been working all throughout
09:22 - university building a portfolio and
09:24 - learning these new skills and if you're
09:26 - not that person don't expect you're
09:28 - gonna be getting salaries like that
09:29 - right you need to really apply yourself
09:31 - in this domain to make it worth your
09:33 - time and to be successful and that's
09:35 - something that this whole video is kind
09:36 - of been covering is the fact that this
09:38 - is a field that's changing so rapidly
09:39 - and so quickly that if you're not
09:41 - willing to keep up and continually be
09:43 - learning and kind of moving through this
09:45 - then you're not going to be successful
09:47 - in the field at least in my opinion now
09:50 - I urge you guys to go out there and
09:51 - prove me wrong and go just get a
09:53 - computer science degree and do nothing
09:55 - else and you know go work at Google and
09:56 - Amazon that'd be awesome I'd be you know
09:58 - thrilled to hear that but the reality is
10:00 - that that's probably not going to happen
10:02 - and if you're kind of you know playing
10:04 - the odds here if you're looking to get a
10:06 - computer science degree then you better
10:07 - commit to the fact that you're gonna be
10:08 - doing a lot of work outside of school
10:10 - and that you're passionate enough about
10:11 - this that you're okay to do that right
10:14 - because the whole thing is here a lot of
10:15 - people jump in when they're not
10:17 - passionate they don't enjoy the degree
10:18 - they're just doing it for the money and
10:20 - then you know they end up switching
10:21 - dropping and all that an appointed name
10:24 - and make here is the fact that this
10:25 - degree is difficult you know this isn't
10:27 - something anyone can just go and do
10:29 - we'll walk in the park
10:30 - you need to be you know smart enough you
10:32 - need to have the passion and you need to
10:34 - put in the work to get the results that
10:35 - you want so anyways that has been my
10:38 - thoughts on the problems with a computer
10:40 - science degree I understand a lot of
10:41 - these deal with the education system in
10:43 - general and that these will apply to
10:44 - other degrees as well but I just think
10:47 - it's so important in computer science
10:48 - that you're constantly learning outside
10:50 - of the degree that you're keeping your
10:52 - skills sharp and you're keeping
10:53 - up-to-date with the newer technologies
10:55 - because if you're not then you're gonna
10:57 - fall behind so anything that has been it
10:58 - I hope you guys enjoyed if you did leave
11:00 - a like subscribe to the channel and let
11:02 - me know what other videos
11:03 - you'd like to see coming up in the
11:04 - future

Cleaned transcript:

hello everybody and welcome back so my name is Tim and I am a second year computer science major what are we doing in this video is talking about the fundamental issues with the computer science or software engineering degree now the reason I'm making this video is because it's the year 2020 you know the stem hype is real everyone and anyone is learning to program and changing into these stem and kind of science and tech related fields with the kind of idea that they're going to graduate and make a ton of money or get an awesome job now that's definitely possible and no hundreds of thousands of people are doing just that but you might not be the person that's going to be able to achieve that now I'm not trying to do this to be you know like de motivating but I really think you guys should listen to this video if you're someone that's maybe not super passionate about computer science or software engineering but it's jumping into this field so anyways let's go ahead and get started and talk about the problems with the computer science or software engineering degree now the first problem with computer science or software engineering is the lack of applicable skills or workplace skills now what I mean by this is essentially what you learn in your computer science degree is completely different than what you're going to end up doing at whatever job you end up working at now you might say this about every degree but this is specifically important for computer science because a lot of times when you go to get a job not only is it required that you have a computer science degree but it's required that you know or familiar with or have worked with a certain degree of key technologies or tools or even programming languages now universities are kind of you know famous for teaching outdated and older content and that's one of the main problems here so what you really need to do if you're in university is be learning these skills in your spare time now this actually leads me nicely into the sponsor of today's video which is simply learned I need to thank simply learn for sponsoring this video and giving you all a discount on their data science master's course that's been codeveloped with IBM this course is comprised of six full courses covering key technologies like our SAS Python tableau Hadoop and spark while working through this course he'll develop 15 reallife projects and master over 30 indemand skills you will work with advanced analytics tools such as pandas use data collection tools like Apache HBase and learn ETL tools like hive Pig and scoop by purchasing this course you'll have lifetime access to all the course content and lecture receive 1200 USD worth of IBM cloud credits and have access to the IBM cloud platforms like IBM Watson for 24/7 practice upon completion will receive certificates from IBM and simply learn to testify to your skills as an expert in data science click the link in the description to get started so what I just showed you guys is not simply learned kind of add is an example of something you can do to learn these skills now that obviously is a little bit more extreme that's a huge massive course it's gonna teach you a ton of different things but just go and read through any different job postings if you're in computer science or software engineering and you know thinking about getting a job soon and start looking at the requirements that you need you know you need to know SQL you need to know frontend development you need to know this framework needs to know these three languages there's a lot of things that you're not going to have learned in a traditional computer science degree where you may be only covered two or three lane languages you didn't do with framework you haven't made an Android application and most of the jobs for computer science that are not these crazy high tech positions are very specific you need to be a developer in a very specific specific domain you need to know exactly what you're doing in a specific area or technology and other than you know kind of crappy entry level like automation and testing jobs you have to have these skills to get that job so this is the first issue with computer science is that a lot of the skills that you're learning throughout this degree like one compared to other degrees you're not actually gonna be able to bring and apply to your job and you're gonna have to learn new ones now this is totally fine but this is something you need to consider if you're jumping into this degree that a lot of the time you're gonna have to spend your spare time learning new modules learning new technologies you can't merely just do your degree and then expect it to jump out there and go get an amazing job there's a lot of extra work that goes into it and if you're not passionate about computer science chances are you're not gonna want to do that work alright so point number two is very similar to point number one but I think it's you know important enough to put an emphasis on it what you're learning in your classes most likely is already outdated technology now what I mean by that is I have a class for example where I'm looking at PowerPoint slides in my lab that were created in 2011 2010 right when the version of Windows isn't even the same on the utor they're showing you the example with than it is on my laptop or whatever right so that's just another big issue with computer science and education in general when it comes to fields that are growing so quickly like this they can't keep up right by the time they create a good curriculum for a specific technology tool or even just concept there's already something out that's better than it and this is a huge issue and kind of de motivating when it comes to computer science is that a lot of what you are learning in this degree is really outdated technology it's stuff that you know it's kind of cool to learn but there might be like 10 companies still using it right there's just really old stuff and you know I'm sure this isn't yesterday if you go to a top to your computer science school but if you're in kind of like a decentralized a dated curriculum I mean we know how quickly the education system moves and that's just something to think about is that you might not be working on you know the coolest newest stuff and if you are that's a luxury right I've been like I've used some software from like 2006 I think in some of my labs that doesn't even work they no longer have support for it you can't even download it on your home computer because it only works for Windows XP or Windows 7 so just something to consider it's a really outdated field and what this means is that you know like I said before you're gonna have to do a lot of work to learn these new frameworks and modules on your own time and that better mean that you know you enjoy computer science and you like learning that because if you don't that is really just gonna be hell for you you're gonna consider that almost another class right just to get a job and to learn a new skill but if you're into computer science and you're passionate about it you know that shouldn't be an issue that might be something that's even interesting to you you're gonna learn some older tack okay and then you're also gonna learn that new stuff and use your experience from the older tech to maybe learn that and get better with it so anyways that is a point number two so on to point number three which is the fact that computer science is extremely theoretical and when I say extremely I genuinely mean extremely you don't really realize how much math and theory and kind of background goes into computer science until you're in the degree like I am I have taken what is it Abhiyan 20 courses now so I've done 15 I'm enrolled in five and of those courses I believe I've ridden code and actually done development in six of them that number I need to factcheck because I'm not a hundred percent sure but that is like my estimate of how many classes I've actually done any development in computer science now as I get older and as I go into my third and fourth years there will be more programming and more computer science II kind of classes but this is something to consider that a lot of what you are learning in this degree is a very theoretical that's not to say that it's not important thing you don't need to know it but there's a lot of times where you kind of lose the fact that you're not applying this to a real life project you're not you know putting this into work you're not writing code to model this you're just you know on paper doing stuff by hand and it just is a little bit too motivating ask someone who's really into development and likes doing computer science stuff you don't get to see where do I actually use this you know where why am i learning all this math and all this background because you never really apply it and that's another issue that I have personally with the degree is they're teaching us these really useful skills like you know discrete mathematics and linear algebra but unless you really go out of your way you're not seeing this applied in the discipline like you should be now this might be a little bit different for software engineering because I know software engineering is more of a handson degree than Computer Sciences but a point that I wanted to make because this field is very very theoretical a lot of what you're doing is just you know proofs and math and you know some people like that I'm okay with it but I would like to see this applied more in the field and see like where am I actually gonna use this proof in math when it comes to developing code and you know in like a workplace environment so the last point I want to make here is about money now let's not lie to ourselves here a lot of us have probably gone into the computer science or software engineering field because of the opportunity to make a lot of money now there's a lot of different ways to do this in software engineering and computer science but all I'm going to say is you're not going to do that by just doing one of these degrees just getting one of these degrees is enough to get you like a decent entrylevel job where you're probably gonna be making in Canada where I live and you guys can do the conversion rate like 70 grand a year 65 grand a year and you know that's a very high starting salary but for what you did to get this degree that's not probably what you're looking for out of it there's a lot of other degrees that you can do that allow you know some better career developments and better just are easier and cheaper in general that can make you that kind of money or that you can at least get to that kind of money fairly quickly computer science can be extremely lucrative if you get into one of these toptier companies like Google Microsoft Amazon Facebook whatever but if you're not there you're not going to be seeing these crazy high salaries that you know you're seeing all around the board you were hearing people and you know making 200k as an entry level engineer well that's because they're very good at what they do right you know they've a landed that job they've probably been working all throughout university building a portfolio and learning these new skills and if you're not that person don't expect you're gonna be getting salaries like that right you need to really apply yourself in this domain to make it worth your time and to be successful and that's something that this whole video is kind of been covering is the fact that this is a field that's changing so rapidly and so quickly that if you're not willing to keep up and continually be learning and kind of moving through this then you're not going to be successful in the field at least in my opinion now I urge you guys to go out there and prove me wrong and go just get a computer science degree and do nothing else and you know go work at Google and Amazon that'd be awesome I'd be you know thrilled to hear that but the reality is that that's probably not going to happen and if you're kind of you know playing the odds here if you're looking to get a computer science degree then you better commit to the fact that you're gonna be doing a lot of work outside of school and that you're passionate enough about this that you're okay to do that right because the whole thing is here a lot of people jump in when they're not passionate they don't enjoy the degree they're just doing it for the money and then you know they end up switching dropping and all that an appointed name and make here is the fact that this degree is difficult you know this isn't something anyone can just go and do we'll walk in the park you need to be you know smart enough you need to have the passion and you need to put in the work to get the results that you want so anyways that has been my thoughts on the problems with a computer science degree I understand a lot of these deal with the education system in general and that these will apply to other degrees as well but I just think it's so important in computer science that you're constantly learning outside of the degree that you're keeping your skills sharp and you're keeping uptodate with the newer technologies because if you're not then you're gonna fall behind so anything that has been it I hope you guys enjoyed if you did leave a like subscribe to the channel and let me know what other videos you'd like to see coming up in the future
