With timestamps:

00:00 - today I'll be discussing the topics and
00:02 - skills that you need to learn if you
00:03 - want to become a master of the
00:05 - JavaScript programming language now I've
00:07 - broken these skills into four categories
00:10 - we have beginner intermediate Advanced
00:13 - and then finally expert or Master Level
00:16 - now if you're a beginner you can treat
00:17 - this video just like a curriculum where
00:19 - I'll tell you all of the things you need
00:20 - to learn and the order in which you
00:22 - should learn them whereas if you're an
00:24 - intermediate or someone who's a bit more
00:25 - advanced then I'll likely share with you
00:27 - some topics or skills you haven't heard
00:29 - of before that you may want to consider
00:31 - learning just to level up your skill
00:33 - that much more if you are looking to
00:34 - dive into the essentials of JavaScript
00:36 - you can check out this free
00:38 - comprehensive guide from HubSpot this
00:40 - guide will help you learn about data
00:42 - types variables object-oriented
00:44 - programming and a lot more it's ideal
00:46 - for beginners or anyone who wants to
00:48 - refresh their JavaScript skills and I've
00:50 - left a link to it in the description the
00:52 - best part is it's completely free and I
00:54 - want to give a massive thank you to
00:56 - HubSpot for sponsoring this video and
00:58 - providing great free programming
01:00 - resources all right so let's get into it
01:03 - here a quick mention that all of the
01:04 - skills that I list here will be in the
01:06 - description in case you want that entire
01:08 - list or something to follow along with
01:10 - and also I'll be referencing that list
01:11 - if you see me looking over to the side
01:13 - that's what I'm doing I'm just making
01:14 - sure I don't forget any of the skills
01:16 - that I have now let's start with these
01:17 - beginner or basic skills this is
01:20 - designed for any of you that are just
01:21 - starting out and you want to get to a
01:23 - point after learning all these where
01:24 - you're confident writing code before you
01:26 - move on to the more advanced skills this
01:28 - is really the fundamentals of the
01:30 - language so first thing you're going to
01:31 - want to learn variables what is a
01:33 - variable how does it work what's the
01:34 - point of it we've got three main ways to
01:36 - make variables here VAR let and const
01:39 - you want to understand the difference
01:41 - between those keywords then we're going
01:42 - to be looking at data types things like
01:44 - strings numbers Boolean uh null
01:47 - undefined you want to know what those
01:49 - types are and the differences between
01:51 - them then we're going to be looking at
01:52 - operators so there's different types of
01:54 - operators we have arithmetic operators
01:56 - this is adding subtracting division
01:58 - multiplication we have a assignment
02:00 - operators things like the equal sign
02:02 - plus equal to minus equal to plus plus
02:05 - all assignment operators we have
02:07 - comparison operators this is something
02:09 - like the double equal sign the triple
02:11 - equal sign or the strict equal less than
02:13 - or equal to how do we compare different
02:15 - values and which values equal what then
02:18 - we have logical operators like and or
02:20 - not which tie in with the next topic
02:22 - which are conditionals how do you create
02:24 - a condition how do you chain them
02:26 - together Etc now that brings us to
02:28 - control flow with control flow we're
02:30 - talking about ifnl statements switch
02:33 - statements how we handle different areas
02:35 - of the code or how we go into different
02:37 - blocks based on a specific condition or
02:40 - something that we're checking that then
02:41 - leads us into basic data structures so
02:44 - we know the simple ones we talked about
02:45 - before now we're going to want to learn
02:47 - about arrays we're going to want to
02:48 - learn about objects and the concept of
02:50 - mutability mutability means that some
02:53 - objects can change others cannot we want
02:55 - to know which types are mutable which
02:56 - are not mutable and how that can cause
02:58 - issues in our code code next we're going
03:00 - to be looking at Loops so the for Loop
03:02 - the while loop the do while loop when do
03:05 - you use which of these Loops how do you
03:06 - Loop over a structure how do you Loop
03:08 - over an array you really want to
03:10 - understand that huge concept for pretty
03:12 - much every programming language next
03:14 - we're looking at functions how do you
03:16 - declare a function how do you invoke a
03:18 - function what is a parameter what is an
03:20 - argument what is a return type what type
03:23 - of code goes inside of functions how do
03:25 - you utilize them effectively next we're
03:27 - looking at common methods common methods
03:30 - meaning uh things that we can perform on
03:32 - different data types for example
03:33 - converting something into a string
03:35 - splitting a string making something
03:37 - uppercase making something lowercase
03:39 - useful to know at this point in time
03:41 - after that we're going to be looking at
03:42 - even more data types things like sets
03:44 - and maps how those work and the
03:46 - efficiency of them then we're going to
03:48 - be getting into advanced functions so
03:50 - here is where we're going to be talking
03:51 - about Arrow functions default parameters
03:53 - rest parameters and comparing that with
03:56 - our normal functions this now leads us
03:58 - nicely into scope how are different
04:00 - variables defined how do we locate
04:02 - different things that maybe have the
04:03 - same name in what scope can we access
04:05 - certain pieces of information a bit more
04:07 - of an advanced topic then we're going to
04:09 - be looking at Dom manipulation now you
04:11 - might have done this a little bit
04:12 - earlier but things like selecting
04:14 - elements in an HTML page modifying them
04:17 - handling user input even though this is
04:19 - based on JavaScript to be good at
04:21 - JavaScript you have to understand the
04:23 - interaction with HTML and the Dom after
04:25 - this I'd recommend looking at event
04:27 - handling so things like adding an event
04:29 - listener handling clicks and then in
04:31 - this context we're also going to be
04:33 - looking at the this keyword how does
04:35 - this work in the context of an arrow
04:37 - function versus a normal function
04:39 - specifically as it relates to events
04:41 - even here things like form submissions
04:43 - important to be looking at lastly in the
04:46 - beginner section I know there's a lot of
04:47 - stuff here we're going to be looking at
04:49 - basic debugging so how do we run a
04:50 - debugger how do we actually solve
04:52 - problems find errors in our JavaScript
04:54 - code this is a lot of stuff but if you
04:57 - know everything I mentioned here you are
04:59 - well on your way to becoming an
05:00 - intermediate JavaScript developer and
05:02 - you have the fundamentals of the
05:04 - language down and probably 90% of the
05:06 - code you need to write is going to fall
05:07 - into those different categories know
05:09 - that's a little bit overwhelming you
05:11 - want to learn all of those different
05:12 - topics and yes I am classifying those in
05:14 - the beginner category so now we're
05:16 - moving from beginner to intermediate
05:19 - these topics still are quite important
05:21 - you definitely need to understand them
05:23 - and they're going to allow you to really
05:24 - create some more complex apps Implement
05:26 - some more logic and just be much better
05:28 - with JavaScript to the point where you
05:30 - might actually be able to land a job and
05:32 - you're going to be a lot more capable of
05:33 - a developer now starting here we have
05:35 - error handling so try catch finally how
05:39 - you properly handle errors in your code
05:42 - next we move on to important operators
05:44 - so things like null coalescing optional
05:46 - chaining the tary operator there's a few
05:48 - of these kind of magic or unique
05:50 - operators in JavaScript that you should
05:52 - understand at this level now we're
05:54 - moving into asynchronous programming
05:56 - something that's definitely a bit more
05:58 - complex gets quite a few people stuck
06:00 - and frustrated but is so important to
06:02 - understand at a pretty deep level so
06:04 - things like callbacks promises the async
06:06 - and a wait syntax how you use this
06:09 - correctly and how you actually utilize
06:11 - asynchronous code next we're moving on
06:13 - to API so how do you call apis how to
06:16 - use the fetch API uh working with Json
06:19 - data making HTTP requests receiving
06:22 - response data handling errors within
06:24 - your different requests this really is
06:25 - something you need to get to that more
06:27 - intermediate level next we have
06:29 - object-oriented programming with
06:31 - JavaScript so understanding this keyword
06:33 - new Constructors functions or methods
06:36 - things like the class syntax and then
06:38 - how that relates with the prototypical
06:40 - inheritance so in JavaScript we have
06:42 - prototypes you're going to want to
06:44 - understand that especially as a relates
06:45 - to object-oriented Pro programming sorry
06:48 - so things like the Prototype chain
06:50 - creating prototypes The Inheritance
06:51 - patterns what is a prototype that's kind
06:54 - of where you need to start here and it's
06:55 - quite different than some other
06:56 - programming languages next we're moving
06:59 - into to the module system so things like
07:01 - the es6 module so using that import
07:03 - export syntax and then you're also going
07:05 - to want to understand maybe the older
07:07 - syntax like commonjs require module.
07:10 - exorts you're going to see that all over
07:12 - the place you need to understand how to
07:13 - separate your code out how to import it
07:15 - how to export it Etc finally to wrap up
07:18 - this section we're going to be looking
07:19 - at some more advanced tooling things
07:21 - like npm basic webpack Babble and then
07:25 - finally sorry one more here that I
07:27 - forgot functional programming basic so
07:29 - things like pure functions higher order
07:31 - functions closures things like map.
07:34 - filter. reduce how you use those in that
07:37 - slightly different style of programming
07:39 - that you may not be used to so that
07:41 - wraps up the intermediate section again
07:42 - quite a few topics here but these are
07:44 - quite important fortunately once you
07:47 - understand this and the beginner you
07:49 - have pretty much everything you're going
07:50 - to need for day-to-day JavaScript
07:52 - programming and what's going to be
07:53 - coming next is quite a bit more advanced
07:55 - and is only going to be used in specific
07:57 - scenarios still important to understand
08:00 - but you can definitely get by with what
08:01 - I've mentioned so far moving forward we
08:03 - get into the advanced section now full
08:06 - disclosure here a lot of the stuff that
08:08 - I'm about to mention I don't use every
08:10 - day in fact I hardly have to use a lot
08:12 - of the stuff that we're going to be
08:13 - mentioning in these next sections and it
08:15 - kind of proves the point that what I
08:16 - showed you before is really what you
08:18 - need to get by and to be quite good at
08:20 - JavaScript here is just going to that
08:22 - extra level but I know a lot of you want
08:24 - to hear about it so let's get into these
08:26 - topics first Advanced asynchronous
08:28 - pattern so things like microtasks macr
08:30 - tasks the event Loop web workers really
08:33 - understanding this at a deeper level and
08:35 - how to perform some more optimizations
08:37 - next we have advanced Dom manipulation
08:39 - and web apis things like the
08:41 - intersection Observer websockets local
08:44 - storage session storage Etc next we're
08:46 - moving into State Management this is
08:48 - where we understand state things like
08:50 - Redux how you implement that in an
08:52 - application understanding the context
08:54 - next we have advanced object-oriented
08:56 - programming so things like Factory
08:58 - functions mixins compositions moving on
09:01 - we have some more functional programming
09:03 - immutability recursion function
09:06 - composition currying some topics that
09:08 - you probably don't need to use every
09:09 - single day that but that you want to be
09:11 - aware of next Advanced error handling so
09:14 - things like custom error types error
09:15 - tracking and tracing moving on we have
09:18 - performance optimizations probably one
09:20 - of the more important ones on this list
09:22 - things like lazy loading debouncing and
09:25 - throttling memorization these are more
09:27 - advanced techniques that you're going to
09:28 - use in these larger applications when
09:30 - scalability becomes more of a concern
09:33 - next we have Security Essentials
09:35 - understanding xss csrf cores content
09:38 - security policies specific headers you
09:40 - might be having as a part of your
09:41 - requests things that you've probably run
09:43 - into errors before not really understood
09:45 - and now you want to actually really
09:47 - understand what these topics are now we
09:49 - have testing as well maybe you want to
09:51 - put this in intermediate but for me I
09:52 - find testing could be a little bit more
09:54 - complex especially when you're using
09:56 - some of these more advanced features and
09:58 - that leads us into unit testing
09:59 - integration testing end to end testing
10:02 - and then of course learning testing
10:03 - Frameworks things like just mocha chai
10:06 - whatever one you decide or whatever one
10:07 - you need to use for your job or the
10:09 - project you're working on finally we're
10:11 - getting into build tools and automations
10:13 - so things like Advanced webpack gulp npm
10:16 - scripts how you start taking all of
10:19 - these things combining them together and
10:20 - using them in a larger project there's
10:23 - so much stuff in this JavaScript
10:24 - ecosystem and in this Advanced section
10:26 - you start to learn some more of that
10:28 - tooling and how you can use that to
10:30 - build up some projects that are a little
10:31 - bit more advanced that wraps up the
10:34 - advanced section some important topics
10:36 - here but not that you necessarily need
10:37 - to master again if you want to get by in
10:40 - JavaScript but you're watching this
10:41 - because you want to be a master so let's
10:43 - move on to the next section now we are
10:45 - moving into the expert or Master Level
10:47 - features now the truth is once you get
10:50 - to this point there's so many different
10:52 - things you could be learning and you're
10:53 - probably going to be specializing in a
10:54 - few different Frameworks or Technologies
10:57 - related to JavaScript so it's difficult
10:59 - for me to make this concise because if
11:00 - you really are a true expert or Master
11:03 - you could probably learn whatever you
11:04 - want and there's like a million things
11:06 - that could be considered expert that I
11:08 - could put in this category so I've tried
11:10 - my best here but if you think I forgot
11:12 - anything then leave a comment down below
11:15 - let's get into it though first design
11:17 - pattern so understanding more about
11:18 - system design structuring your code
11:20 - things like the module pattern Factory
11:23 - Singleton The Observer pattern we then
11:25 - have advanced State Management things
11:27 - like State machines the Redux middleware
11:30 - just getting into that at a deeper level
11:32 - next we have advanced performance
11:33 - optimizations things like code splitting
11:35 - tree shaking web assembly then we go on
11:38 - to type systems things like typescript
11:40 - flow you're going to want to know those
11:42 - if you're going to be good at JavaScript
11:43 - because you're going to see them all the
11:45 - time then we get into serers side
11:47 - JavaScript so not necessarily something
11:48 - you have to learn but a specialty that
11:50 - many people are probably going to get
11:52 - into so things like node.js Express
11:54 - restful API design graphql things
11:57 - related to JavaScript and again kind of
11:59 - specific packages or Frameworks you
12:01 - could be learning then we move into full
12:03 - stack developments you might want to be
12:04 - learning things like the M Stack serers
12:07 - side rendering all these different
12:09 - libraries that you can use to create
12:11 - JavaScript applications that kind of
12:13 - leads me into the next one modern
12:14 - Frameworks so in-depth understanding of
12:17 - things like react angular view whatever
12:19 - one you decide to use you want to be
12:21 - really really good at those if you're
12:22 - going to call yourself an expert in
12:24 - JavaScript or in that specific category
12:26 - now lastly we're getting into larger
12:28 - topics like architecture and scalability
12:30 - so generally speaking system design
12:33 - microservices load balancing caching
12:35 - strategies cdns domains whatever you
12:38 - want to say here anything that kind of
12:40 - fits that broader scale system design
12:42 - category that's what I'm discussing now
12:45 - that was a lot of topics that I listed
12:48 - in this video now hopefully I didn't
12:49 - intimidate you too much you do not need
12:51 - to learn all of these but if you really
12:52 - want to get to that expert advanced
12:54 - level these are the type of topics
12:56 - you're going to need to know now full
12:58 - disclosure I don't know all of these
13:00 - topics most people don't know all of
13:02 - them you really can get by with about
13:04 - 50% of the topics that I had on this
13:07 - list and you can create some really
13:08 - awesome applications without being a
13:10 - true expert or Master anyways with that
13:13 - said guys I will wrap up the video here
13:15 - if you enjoyed leave a like subscribe
13:17 - and I will see you in the next
13:19 - [Music]
13:26 - one

Cleaned transcript:

today I'll be discussing the topics and skills that you need to learn if you want to become a master of the JavaScript programming language now I've broken these skills into four categories we have beginner intermediate Advanced and then finally expert or Master Level now if you're a beginner you can treat this video just like a curriculum where I'll tell you all of the things you need to learn and the order in which you should learn them whereas if you're an intermediate or someone who's a bit more advanced then I'll likely share with you some topics or skills you haven't heard of before that you may want to consider learning just to level up your skill that much more if you are looking to dive into the essentials of JavaScript you can check out this free comprehensive guide from HubSpot this guide will help you learn about data types variables objectoriented programming and a lot more it's ideal for beginners or anyone who wants to refresh their JavaScript skills and I've left a link to it in the description the best part is it's completely free and I want to give a massive thank you to HubSpot for sponsoring this video and providing great free programming resources all right so let's get into it here a quick mention that all of the skills that I list here will be in the description in case you want that entire list or something to follow along with and also I'll be referencing that list if you see me looking over to the side that's what I'm doing I'm just making sure I don't forget any of the skills that I have now let's start with these beginner or basic skills this is designed for any of you that are just starting out and you want to get to a point after learning all these where you're confident writing code before you move on to the more advanced skills this is really the fundamentals of the language so first thing you're going to want to learn variables what is a variable how does it work what's the point of it we've got three main ways to make variables here VAR let and const you want to understand the difference between those keywords then we're going to be looking at data types things like strings numbers Boolean uh null undefined you want to know what those types are and the differences between them then we're going to be looking at operators so there's different types of operators we have arithmetic operators this is adding subtracting division multiplication we have a assignment operators things like the equal sign plus equal to minus equal to plus plus all assignment operators we have comparison operators this is something like the double equal sign the triple equal sign or the strict equal less than or equal to how do we compare different values and which values equal what then we have logical operators like and or not which tie in with the next topic which are conditionals how do you create a condition how do you chain them together Etc now that brings us to control flow with control flow we're talking about ifnl statements switch statements how we handle different areas of the code or how we go into different blocks based on a specific condition or something that we're checking that then leads us into basic data structures so we know the simple ones we talked about before now we're going to want to learn about arrays we're going to want to learn about objects and the concept of mutability mutability means that some objects can change others cannot we want to know which types are mutable which are not mutable and how that can cause issues in our code code next we're going to be looking at Loops so the for Loop the while loop the do while loop when do you use which of these Loops how do you Loop over a structure how do you Loop over an array you really want to understand that huge concept for pretty much every programming language next we're looking at functions how do you declare a function how do you invoke a function what is a parameter what is an argument what is a return type what type of code goes inside of functions how do you utilize them effectively next we're looking at common methods common methods meaning uh things that we can perform on different data types for example converting something into a string splitting a string making something uppercase making something lowercase useful to know at this point in time after that we're going to be looking at even more data types things like sets and maps how those work and the efficiency of them then we're going to be getting into advanced functions so here is where we're going to be talking about Arrow functions default parameters rest parameters and comparing that with our normal functions this now leads us nicely into scope how are different variables defined how do we locate different things that maybe have the same name in what scope can we access certain pieces of information a bit more of an advanced topic then we're going to be looking at Dom manipulation now you might have done this a little bit earlier but things like selecting elements in an HTML page modifying them handling user input even though this is based on JavaScript to be good at JavaScript you have to understand the interaction with HTML and the Dom after this I'd recommend looking at event handling so things like adding an event listener handling clicks and then in this context we're also going to be looking at the this keyword how does this work in the context of an arrow function versus a normal function specifically as it relates to events even here things like form submissions important to be looking at lastly in the beginner section I know there's a lot of stuff here we're going to be looking at basic debugging so how do we run a debugger how do we actually solve problems find errors in our JavaScript code this is a lot of stuff but if you know everything I mentioned here you are well on your way to becoming an intermediate JavaScript developer and you have the fundamentals of the language down and probably 90% of the code you need to write is going to fall into those different categories know that's a little bit overwhelming you want to learn all of those different topics and yes I am classifying those in the beginner category so now we're moving from beginner to intermediate these topics still are quite important you definitely need to understand them and they're going to allow you to really create some more complex apps Implement some more logic and just be much better with JavaScript to the point where you might actually be able to land a job and you're going to be a lot more capable of a developer now starting here we have error handling so try catch finally how you properly handle errors in your code next we move on to important operators so things like null coalescing optional chaining the tary operator there's a few of these kind of magic or unique operators in JavaScript that you should understand at this level now we're moving into asynchronous programming something that's definitely a bit more complex gets quite a few people stuck and frustrated but is so important to understand at a pretty deep level so things like callbacks promises the async and a wait syntax how you use this correctly and how you actually utilize asynchronous code next we're moving on to API so how do you call apis how to use the fetch API uh working with Json data making HTTP requests receiving response data handling errors within your different requests this really is something you need to get to that more intermediate level next we have objectoriented programming with JavaScript so understanding this keyword new Constructors functions or methods things like the class syntax and then how that relates with the prototypical inheritance so in JavaScript we have prototypes you're going to want to understand that especially as a relates to objectoriented Pro programming sorry so things like the Prototype chain creating prototypes The Inheritance patterns what is a prototype that's kind of where you need to start here and it's quite different than some other programming languages next we're moving into to the module system so things like the es6 module so using that import export syntax and then you're also going to want to understand maybe the older syntax like commonjs require module. exorts you're going to see that all over the place you need to understand how to separate your code out how to import it how to export it Etc finally to wrap up this section we're going to be looking at some more advanced tooling things like npm basic webpack Babble and then finally sorry one more here that I forgot functional programming basic so things like pure functions higher order functions closures things like map. filter. reduce how you use those in that slightly different style of programming that you may not be used to so that wraps up the intermediate section again quite a few topics here but these are quite important fortunately once you understand this and the beginner you have pretty much everything you're going to need for daytoday JavaScript programming and what's going to be coming next is quite a bit more advanced and is only going to be used in specific scenarios still important to understand but you can definitely get by with what I've mentioned so far moving forward we get into the advanced section now full disclosure here a lot of the stuff that I'm about to mention I don't use every day in fact I hardly have to use a lot of the stuff that we're going to be mentioning in these next sections and it kind of proves the point that what I showed you before is really what you need to get by and to be quite good at JavaScript here is just going to that extra level but I know a lot of you want to hear about it so let's get into these topics first Advanced asynchronous pattern so things like microtasks macr tasks the event Loop web workers really understanding this at a deeper level and how to perform some more optimizations next we have advanced Dom manipulation and web apis things like the intersection Observer websockets local storage session storage Etc next we're moving into State Management this is where we understand state things like Redux how you implement that in an application understanding the context next we have advanced objectoriented programming so things like Factory functions mixins compositions moving on we have some more functional programming immutability recursion function composition currying some topics that you probably don't need to use every single day that but that you want to be aware of next Advanced error handling so things like custom error types error tracking and tracing moving on we have performance optimizations probably one of the more important ones on this list things like lazy loading debouncing and throttling memorization these are more advanced techniques that you're going to use in these larger applications when scalability becomes more of a concern next we have Security Essentials understanding xss csrf cores content security policies specific headers you might be having as a part of your requests things that you've probably run into errors before not really understood and now you want to actually really understand what these topics are now we have testing as well maybe you want to put this in intermediate but for me I find testing could be a little bit more complex especially when you're using some of these more advanced features and that leads us into unit testing integration testing end to end testing and then of course learning testing Frameworks things like just mocha chai whatever one you decide or whatever one you need to use for your job or the project you're working on finally we're getting into build tools and automations so things like Advanced webpack gulp npm scripts how you start taking all of these things combining them together and using them in a larger project there's so much stuff in this JavaScript ecosystem and in this Advanced section you start to learn some more of that tooling and how you can use that to build up some projects that are a little bit more advanced that wraps up the advanced section some important topics here but not that you necessarily need to master again if you want to get by in JavaScript but you're watching this because you want to be a master so let's move on to the next section now we are moving into the expert or Master Level features now the truth is once you get to this point there's so many different things you could be learning and you're probably going to be specializing in a few different Frameworks or Technologies related to JavaScript so it's difficult for me to make this concise because if you really are a true expert or Master you could probably learn whatever you want and there's like a million things that could be considered expert that I could put in this category so I've tried my best here but if you think I forgot anything then leave a comment down below let's get into it though first design pattern so understanding more about system design structuring your code things like the module pattern Factory Singleton The Observer pattern we then have advanced State Management things like State machines the Redux middleware just getting into that at a deeper level next we have advanced performance optimizations things like code splitting tree shaking web assembly then we go on to type systems things like typescript flow you're going to want to know those if you're going to be good at JavaScript because you're going to see them all the time then we get into serers side JavaScript so not necessarily something you have to learn but a specialty that many people are probably going to get into so things like node.js Express restful API design graphql things related to JavaScript and again kind of specific packages or Frameworks you could be learning then we move into full stack developments you might want to be learning things like the M Stack serers side rendering all these different libraries that you can use to create JavaScript applications that kind of leads me into the next one modern Frameworks so indepth understanding of things like react angular view whatever one you decide to use you want to be really really good at those if you're going to call yourself an expert in JavaScript or in that specific category now lastly we're getting into larger topics like architecture and scalability so generally speaking system design microservices load balancing caching strategies cdns domains whatever you want to say here anything that kind of fits that broader scale system design category that's what I'm discussing now that was a lot of topics that I listed in this video now hopefully I didn't intimidate you too much you do not need to learn all of these but if you really want to get to that expert advanced level these are the type of topics you're going to need to know now full disclosure I don't know all of these topics most people don't know all of them you really can get by with about 50% of the topics that I had on this list and you can create some really awesome applications without being a true expert or Master anyways with that said guys I will wrap up the video here if you enjoyed leave a like subscribe and I will see you in the next one
