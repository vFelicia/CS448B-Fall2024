With timestamps:

00:00 - hello everybody and welcome to another
00:01 - linux for programmers tutorial video
00:04 - in this video i'm going to be covering
00:06 - cron jobs and the cron
00:08 - tab now a cron job is a job or a task or
00:11 - a script
00:12 - whatever you want to refer to it as that
00:14 - is scheduled to run
00:15 - at a certain time now you can schedule
00:18 - jobs to run every minute
00:19 - every five minutes every first day of
00:22 - the month you can schedule them at
00:23 - pretty much
00:24 - any time increment that you want and
00:26 - it's extremely useful to do so
00:28 - for example if you want to back
00:29 - something up every 24 hours or you want
00:31 - to send an email to someone every week
00:33 - whatever it may be you can use the cron
00:36 - tab and cron jobs to do that
00:38 - so with that said let's dive in after a
00:40 - quick word from the sponsor of this
00:42 - video and this series which is le note
00:44 - le note is one of the best companies for
00:46 - developers they make it easy to manage
00:48 - and scale your infrastructure with their
00:50 - intuitive cloud manager
00:52 - api cli and one click apps
00:55 - they also provide predictable pricing
00:57 - you always know how much you're going to
00:58 - be paying when you use le note
01:00 - not to mention their award-winning
01:02 - support there's no tiers
01:04 - no hands off just highly trained service
01:06 - professionals who actually answer the
01:08 - phone and solve your issue
01:09 - 24 hours a day seven days a week 365
01:13 - days a year
01:14 - get started with lenode by hitting the
01:16 - link in the description and claim a
01:17 - hundred dollars in free credit when you
01:19 - sign up with a new account
01:21 - so with that said let's dive in to cron
01:23 - jobs
01:24 - so the first thing that we need to
01:25 - discuss when we're talking about cron
01:27 - jobs
01:27 - is our cron tap now a cron tab is
01:30 - specific to each user so every user on
01:33 - the system will have their own cron tab
01:35 - and this cron tab is kind of the manager
01:38 - of our cron
01:38 - jobs so if you want to view your cron
01:41 - tab you can type cron tab
01:43 - and then hyphen l and this will view the
01:45 - current cron tab
01:47 - now in our specific situation we don't
01:49 - have a cron tab for the root user
01:51 - because we've yet to create one
01:52 - so what we need to do is we need to make
01:54 - a cron tab
01:55 - so to do that you type cron tab and then
01:58 - hyphen e
01:58 - now hyphen e stands for edit so if you
02:01 - had an existing cron tab
02:02 - this would allow you to edit the
02:04 - existing cron tab if you don't have one
02:06 - then it will prompt you to create
02:08 - a new one and specifically when you run
02:10 - this command it will actually
02:11 - ask you what editor you want to view
02:13 - your cron tab in
02:14 - so you can pick nano you can pick vi you
02:17 - can pick emacs
02:18 - there's a bunch of other ones you can
02:19 - pick as well but choose whatever one you
02:21 - like now in my situation you're going to
02:23 - see that when i run this command
02:25 - it brings me into my cron tab and it's
02:27 - being edited
02:28 - in nano now it probably is going to
02:31 - prompt you
02:31 - to pick which editor you want to write
02:34 - or
02:34 - view your cron tab in so in that case
02:36 - you need to select what editor
02:38 - i would recommend nano it's just the
02:40 - simplest in my opinion
02:41 - and well that's what i'm using here so
02:43 - select your editor and then it should
02:45 - bring you into a tab that looks like
02:47 - this
02:47 - so this window right here is the cron
02:50 - tab and the cron tab allows us to manage
02:52 - our cron jobs so we can have multiple
02:55 - cron jobs that are all scheduled to run
02:57 - at different times or even the same time
02:59 - for that matter
03:00 - and we handle all of the scheduling and
03:02 - all the jobs that we want to run
03:04 - in the cron tab now i would recommend
03:06 - that you actually read through
03:07 - what is here because it's not that long
03:09 - and it gives you a pretty good idea of
03:10 - how this actually works
03:12 - but i'm going to skip through it and let
03:13 - you guys read this at your own pace
03:15 - so now what i'm going to do is show you
03:17 - how to set up a quran job
03:18 - so a current job again is just running
03:21 - something at a certain time
03:22 - increment so every 10 minutes every hour
03:24 - as i've said it's just some script or
03:27 - some command
03:28 - that you want to run at a certain point
03:30 - in time so let's say that you wanted to
03:32 - run
03:32 - like the ls command you actually could
03:34 - run that command
03:35 - every five minutes every 10 seconds
03:38 - every you know two hours
03:39 - whatever you can run it at whatever
03:41 - frequency you want
03:42 - you also could run a backup script for
03:45 - example at you know every day or every
03:47 - two hours or every sunday or every first
03:49 - day of the month
03:50 - you can set the scheduling to be as
03:52 - advanced as you want but any command
03:54 - that you want to run you can put inside
03:56 - of here and schedule it so it happens at
03:58 - a certain point in time
03:59 - now you also can have commands that run
04:01 - at boot so for example when you first
04:03 - boot the system
04:04 - you could have a command that runs at
04:05 - midnight that runs annually so once a
04:08 - year
04:08 - there's a ton of different things that
04:09 - you can do so i'm just trying to give
04:10 - you an idea of what's possible
04:12 - in here and let me show you a few
04:14 - examples of things that we can actually
04:15 - run
04:16 - so let's say that we want to run the ls
04:18 - command
04:19 - every one minute well what i would do to
04:21 - run that is i would type the following
04:23 - so i'm going to start with actually
04:24 - five asterisks here and then the ls
04:27 - command
04:28 - now the basic syntax for your cron job
04:31 - is you have five asterisks
04:32 - separated by spaces and then you have
04:34 - the command afterwards
04:36 - now you replace these asterisks here
04:38 - with what you need
04:39 - for scheduling so for example if i
04:41 - wanted to run
04:42 - this job here every five minutes or
04:45 - every one minute
04:46 - i forgot what i said let's go with one
04:47 - minute we would put slash
04:49 - one after the first asterisk now what
04:51 - this means is
04:53 - run this command ls every one minute
04:56 - so it doesn't matter what minute we're
04:58 - currently on but as soon as we
05:00 - set this command to run now every one
05:03 - minute
05:03 - this command will run because we put
05:05 - slash and then one
05:06 - so the asterisks represent the following
05:08 - going from left to right and i'll put
05:10 - this up on the screen i have an image i
05:11 - think that i can show you
05:13 - we have minute and then we have hour
05:16 - then we have day of month we have month
05:18 - and we have
05:19 - day of week now it is not mandatory to
05:22 - put numbers or values where all of the
05:24 - asterisks are
05:25 - in fact that's the reason why you have
05:26 - the asterisk is so that you can kind of
05:28 - have a placeholder if you don't want to
05:30 - actually use
05:31 - a specific increment of time so for
05:33 - example this is all we need to do to run
05:35 - the ls command every one minute
05:37 - since this first column here stands for
05:39 - minutes and you can kind of see right
05:41 - above it actually shows you what they
05:42 - stand for
05:43 - we just put slash standing for every and
05:46 - then one
05:46 - standing for the amount of minutes so
05:48 - one minute then we run this command
05:50 - every one minute
05:51 - so if i wanted to run a command every 15
05:53 - minutes then what i would do
05:54 - is type asterisk slash 15 and then i
05:57 - would type
05:58 - four more asterisks and then the command
06:00 - so maybe i could just do something like
06:01 - cat
06:02 - now of course we know that's not really
06:03 - going to do anything for us but we can
06:05 - go ahead
06:06 - and run that command now we also can run
06:08 - scripts right and this is probably the
06:10 - more useful thing if we have a script
06:12 - that we've written
06:13 - we could run that command every hour
06:16 - every day whenever we want
06:17 - so anyways let me show you a few more
06:19 - things that we can do here
06:20 - for the the syntax of this chron job
06:24 - so if i wanted to run something not
06:26 - every 15 minutes
06:28 - but at every 15 minutes so when i say at
06:31 - every 15 minute i mean like
06:33 - 1 15 2 15 3 15
06:36 - 4 15 5 15 so on and so forth not every
06:39 - 15 minutes but at the 15th minute of
06:41 - every hour
06:42 - then what i would type is 15 and then
06:46 - for asterisks like that now i understand
06:48 - this is slightly confusing but when you
06:50 - want to schedule something
06:52 - every so at an increment of some time
06:54 - you do the asterisk
06:55 - you do the slash and then what that
06:57 - increment is if you want it to run
06:59 - at a specific time and in this case we
07:01 - want to run at every 15 minute of the
07:03 - hour
07:04 - we just write that time in the
07:06 - appropriate column
07:07 - so now we'll run at every 15th minute of
07:10 - every hour and then again i can put
07:12 - whatever command i want
07:13 - i'm just going to do placeholder command
07:15 - here because it doesn't matter what the
07:17 - command is i'm just trying to show you
07:18 - the syntax
07:19 - all right so now let's say that we
07:21 - actually wanted to run something
07:22 - at every 5th minute 10th minute and
07:26 - 15 minute of the hour so i want to run
07:28 - the same command
07:30 - multiple times throughout the hour then
07:32 - what i would do is the following i could
07:33 - do something like
07:34 - 5 10 and i don't think we need spaces
07:38 - 5 10 15 and then 4 asterisks
07:42 - and then my command this again means
07:44 - that we're going to run at 105
07:45 - and 110 and 115 then 205 then 210
07:49 - then 215. then 305 then 310 then 315
07:53 - you get the idea it's the fifth 10th and
07:55 - 15th minute
07:56 - of every hour now that's pretty hard to
07:58 - pronounce but hopefully you get the idea
08:00 - so that is how that one works now let's
08:03 - say you wanted to execute something just
08:05 - every hour you want to do it every hour
08:07 - what you do is you would type zero
08:09 - and then you would put your four
08:10 - asterisks and then the command
08:12 - now this means run at the zeroth minute
08:14 - of every hour so you will have it happen
08:17 - every hour so we will continue in one
08:19 - second but i need to quickly thank the
08:21 - other sponsor of this video which is
08:22 - algo expert
08:23 - i'll go expert is the best platform to
08:25 - use when preparing for your software
08:26 - engineering coding interviews
08:28 - they have a data structures crash course
08:30 - a mock interviews feature and over 120
08:33 - coding interview questions
08:34 - get started with algo expert today by
08:36 - hitting the link in the description
08:38 - and using the code tech with tim or a
08:39 - discount on the platform
08:41 - now let's say we wanted to run something
08:43 - every four hours
08:44 - now we're moving out of the minute
08:46 - column and we're going to move into the
08:47 - hour column so what i'm going to do is
08:49 - type the following i'm going to type
08:50 - 0 so not oh sorry 0 then i'm going to
08:53 - type asterisk
08:54 - slash four and then three more asterisks
08:57 - and then my command
08:58 - because this means we're in the hour
09:00 - column here by the way in the second
09:02 - asterisk
09:02 - that we are going to run every four
09:05 - hours
09:05 - at the zeroth minute of that hour so
09:08 - that's what this command tells us
09:10 - every four hours at the zeroth minute
09:12 - run this
09:13 - command that's as easy as it is now
09:16 - let's say we wanted to run something
09:17 - every day
09:18 - well then what we type would type is
09:20 - zero 0
09:21 - and then 3 asterisks because the hour
09:24 - column
09:25 - is telling us the amount of hours that
09:27 - we want to run this at
09:28 - so this pretty much means run at
09:30 - midnight every single day
09:32 - run at the 0th minute and 0 hour of
09:34 - every day
09:35 - now let's say we didn't want this to run
09:36 - at midnight but we still want it to run
09:38 - every day
09:39 - we could set it to run at say 4 am or 5
09:42 - a.m
09:42 - i could say 0 5 and then asterix asterix
09:45 - asterix
09:46 - this is in 24 hour time by the way and
09:48 - when i put this zero
09:49 - five this means run at the fifth hour of
09:52 - every day
09:52 - and the zeroth minute of that fifth hour
09:55 - so this means we're gonna run at five
09:56 - a.m
09:57 - every single day and then we can do a
09:59 - bunch of other ones as well
10:01 - so let's say now that i wanted to run
10:03 - something on the first day of every
10:05 - month
10:05 - well i would pick the time that i want
10:07 - to run this at so let's say i actually
10:09 - want to run this
10:09 - at something like 10 30. i put 30 then i
10:12 - could put 10 this means we want to run
10:14 - at 10
10:15 - 30 and i want to run this on the
10:18 - first day of every month so what i can
10:20 - do is i can put the day
10:22 - in the month that i want this to run at
10:24 - that's what dom stands for this
10:25 - third column so 30 10 1 and then two
10:28 - asterisks
10:29 - and then the command after this is going
10:31 - to run on the first day of every month
10:34 - at 10 30. so now let's say i actually
10:36 - wanted to run this
10:37 - every three months well if i want to run
10:39 - this at 10 30
10:40 - on the first day of the month but every
10:43 - three months what i would do is the
10:44 - following i would say 30 10
10:46 - i would say one assuming i wanted this
10:48 - to run on the first day of each month
10:50 - then i would say asterisk three and then
10:52 - one more asterisk and then my command
10:54 - now that's because we're moving into the
10:56 - fourth column now which is
10:57 - the month so when i say asterisk 3 this
11:00 - means that i want this to run
11:02 - every 3 months so hopefully that's clear
11:04 - but this is 10
11:05 - 30 on the first day of the month every
11:07 - three months now lastly we can also pick
11:09 - the day of the week that we want to run
11:11 - a command on so let's say we want to run
11:13 - a command every monday through friday so
11:15 - monday tuesday wednesday thursday friday
11:17 - but we don't want to run it on the
11:18 - weekends
11:19 - what i could do is the following i could
11:20 - type zero zero
11:22 - assuming we want this to run at midnight
11:24 - and then asterix
11:25 - asterix and then one hyphen five
11:29 - so now we've moved into the day of week
11:31 - column so the day of week column
11:34 - allows us to schedule tasks to run on
11:36 - certain days of the week so when i say
11:38 - one to five
11:39 - that means run this from monday to
11:40 - friday and the reason that works is
11:42 - because
11:42 - 0 represents sunday and 6 represents
11:45 - saturday so from 0 to 6 our valid
11:48 - integers here are valid numbers to put
11:50 - i also can put a range so 1 hyphen 5
11:53 - which means
11:53 - run it in all of the days in between one
11:56 - and five
11:57 - now of course i could do one two three
11:59 - four five like that as well this is the
12:01 - same thing as doing one hyphen five
12:03 - but you are allowed to put a range and
12:05 - this just means run
12:06 - from monday to friday now the reason
12:10 - i have these two asterisks in between is
12:12 - because i don't care what day of the
12:14 - month it is
12:14 - i don't care what month it is i just
12:16 - care what time i'm running this at so
12:18 - i'm running this at
12:19 - midnight and i'm running this every
12:21 - monday to friday
12:23 - so you are allowed to skip asterisks
12:25 - when you
12:26 - write these commands out but you just
12:27 - have to understand what you're actually
12:29 - scheduling this for
12:30 - now most commonly you're going to want
12:32 - to run something every day or every hour
12:34 - or every few minutes
12:35 - you probably don't need to do something
12:37 - super complex like i'm showing you here
12:39 - but this again is just to give you an
12:40 - introduction to how the cron jobs work
12:42 - and the basic syntax
12:44 - so you probably will have to look up the
12:45 - syntax when you're doing something more
12:47 - specific in the future
12:48 - but hopefully this gives you a good idea
12:50 - so that was pretty much all i wanted to
12:52 - show you for the cron job syntax
12:54 - there's a few more things to show you
12:55 - though and these are kind of shortcuts
12:57 - for this scheduling syntax so let's say
13:00 - you don't want to deal with all this you
13:01 - don't want to have to figure out what
13:02 - all the asterisks mean
13:03 - well fortunately there's a few little
13:05 - tags that we can use
13:06 - so if i wanted to run something daily i
13:08 - could just type at
13:10 - daily which is just kind of a shortcut
13:12 - that you're allowed to use inside of
13:13 - here
13:13 - and then the command that i want to run
13:15 - afterwards now if i wanted to run
13:17 - something
13:18 - every day at midnight then what i would
13:19 - do is say midnight now this actually
13:21 - means the exact same thing as the daily
13:24 - command
13:24 - but it's just a bit more verbose because
13:26 - by default daily is going to run at
13:28 - midnight
13:29 - in fact almost all of these tags that
13:31 - i'm showing you by default will run at
13:33 - midnight
13:34 - if that's a valid option for the default
13:36 - all right now there's another one that
13:37 - we can use that's pretty useful
13:38 - this is reboot so if you want something
13:40 - to run no matter what when you start
13:43 - the machine or when it reboots then you
13:45 - would say at reboot and then whatever
13:46 - the script is that you want to run
13:48 - there's a few more you can probably
13:50 - guess what they are but we can do weekly
13:52 - we can do annually like that we can do
13:57 - yearly which is the exact same thing as
13:59 - annually again i don't know why they
14:00 - have multiple but you can use both of
14:02 - those
14:03 - they also have hourly and i think that's
14:06 - about it
14:07 - i believe there's monthly as well i
14:09 - don't think i showed that one so those
14:10 - are kind of the tags that you're allowed
14:12 - to use that are just
14:13 - shortcuts for this syntax right here
14:16 - yeah hopefully that gives you an idea of
14:18 - how cron jobs work now what i will show
14:20 - you as a last thing here
14:21 - is how you actually you know put your
14:23 - own scripts here because
14:25 - it's one thing to understand the syntax
14:26 - but how do i point to a script that i
14:28 - wrote and schedule that to run
14:30 - so i'm just going to exit out of this
14:32 - i'm not going to save this because i
14:33 - don't want all of that
14:34 - i'm going to show you that if i say ls
14:36 - here we have a dot
14:38 - sh file i have my test.sh so let's say i
14:41 - wanted to run
14:42 - this script every minute well what i
14:44 - would do is i would go inside of my
14:46 - crown tab so cron tab hyphen e
14:48 - and then inside of here i would point to
14:50 - that script so what i would say
14:52 - is let's go you know asterisk slash one
14:56 - asterix asterisk asterisk and then we're
14:58 - going to go slash
14:59 - root slash and then test dot sh
15:02 - and i'm just going to put a dot here
15:04 - because that's how we actually execute
15:06 - this command
15:07 - so now if i were to save this cron tab
15:10 - what would happen
15:10 - is this test.sh file would run every one
15:14 - minutes and that's all you need to know
15:16 - that's how this works you need the path
15:19 - to the file or to the script that you
15:21 - want to run
15:22 - and yeah you just put it here now of
15:23 - course you could write commands as well
15:25 - say you want to run a python script i'm
15:27 - not going to put some syntax for the
15:29 - cron job but you could say
15:30 - python or python3 and then whatever the
15:33 - path to the script is so maybe slash
15:35 - root slash
15:36 - script dot py and well that would go
15:38 - ahead and run the python3 command
15:40 - with that script so hopefully that is
15:42 - clear but that is how cron jobs work and
15:44 - that is the cron
15:45 - tab and that's all i have for this video
15:48 - so i hope you guys enjoyed if you did
15:49 - make sure to leave a like
15:50 - subscribe to the channel and i will see
15:52 - you in another youtube video
15:54 - [Music]

Cleaned transcript:

hello everybody and welcome to another linux for programmers tutorial video in this video i'm going to be covering cron jobs and the cron tab now a cron job is a job or a task or a script whatever you want to refer to it as that is scheduled to run at a certain time now you can schedule jobs to run every minute every five minutes every first day of the month you can schedule them at pretty much any time increment that you want and it's extremely useful to do so for example if you want to back something up every 24 hours or you want to send an email to someone every week whatever it may be you can use the cron tab and cron jobs to do that so with that said let's dive in after a quick word from the sponsor of this video and this series which is le note le note is one of the best companies for developers they make it easy to manage and scale your infrastructure with their intuitive cloud manager api cli and one click apps they also provide predictable pricing you always know how much you're going to be paying when you use le note not to mention their awardwinning support there's no tiers no hands off just highly trained service professionals who actually answer the phone and solve your issue 24 hours a day seven days a week 365 days a year get started with lenode by hitting the link in the description and claim a hundred dollars in free credit when you sign up with a new account so with that said let's dive in to cron jobs so the first thing that we need to discuss when we're talking about cron jobs is our cron tap now a cron tab is specific to each user so every user on the system will have their own cron tab and this cron tab is kind of the manager of our cron jobs so if you want to view your cron tab you can type cron tab and then hyphen l and this will view the current cron tab now in our specific situation we don't have a cron tab for the root user because we've yet to create one so what we need to do is we need to make a cron tab so to do that you type cron tab and then hyphen e now hyphen e stands for edit so if you had an existing cron tab this would allow you to edit the existing cron tab if you don't have one then it will prompt you to create a new one and specifically when you run this command it will actually ask you what editor you want to view your cron tab in so you can pick nano you can pick vi you can pick emacs there's a bunch of other ones you can pick as well but choose whatever one you like now in my situation you're going to see that when i run this command it brings me into my cron tab and it's being edited in nano now it probably is going to prompt you to pick which editor you want to write or view your cron tab in so in that case you need to select what editor i would recommend nano it's just the simplest in my opinion and well that's what i'm using here so select your editor and then it should bring you into a tab that looks like this so this window right here is the cron tab and the cron tab allows us to manage our cron jobs so we can have multiple cron jobs that are all scheduled to run at different times or even the same time for that matter and we handle all of the scheduling and all the jobs that we want to run in the cron tab now i would recommend that you actually read through what is here because it's not that long and it gives you a pretty good idea of how this actually works but i'm going to skip through it and let you guys read this at your own pace so now what i'm going to do is show you how to set up a quran job so a current job again is just running something at a certain time increment so every 10 minutes every hour as i've said it's just some script or some command that you want to run at a certain point in time so let's say that you wanted to run like the ls command you actually could run that command every five minutes every 10 seconds every you know two hours whatever you can run it at whatever frequency you want you also could run a backup script for example at you know every day or every two hours or every sunday or every first day of the month you can set the scheduling to be as advanced as you want but any command that you want to run you can put inside of here and schedule it so it happens at a certain point in time now you also can have commands that run at boot so for example when you first boot the system you could have a command that runs at midnight that runs annually so once a year there's a ton of different things that you can do so i'm just trying to give you an idea of what's possible in here and let me show you a few examples of things that we can actually run so let's say that we want to run the ls command every one minute well what i would do to run that is i would type the following so i'm going to start with actually five asterisks here and then the ls command now the basic syntax for your cron job is you have five asterisks separated by spaces and then you have the command afterwards now you replace these asterisks here with what you need for scheduling so for example if i wanted to run this job here every five minutes or every one minute i forgot what i said let's go with one minute we would put slash one after the first asterisk now what this means is run this command ls every one minute so it doesn't matter what minute we're currently on but as soon as we set this command to run now every one minute this command will run because we put slash and then one so the asterisks represent the following going from left to right and i'll put this up on the screen i have an image i think that i can show you we have minute and then we have hour then we have day of month we have month and we have day of week now it is not mandatory to put numbers or values where all of the asterisks are in fact that's the reason why you have the asterisk is so that you can kind of have a placeholder if you don't want to actually use a specific increment of time so for example this is all we need to do to run the ls command every one minute since this first column here stands for minutes and you can kind of see right above it actually shows you what they stand for we just put slash standing for every and then one standing for the amount of minutes so one minute then we run this command every one minute so if i wanted to run a command every 15 minutes then what i would do is type asterisk slash 15 and then i would type four more asterisks and then the command so maybe i could just do something like cat now of course we know that's not really going to do anything for us but we can go ahead and run that command now we also can run scripts right and this is probably the more useful thing if we have a script that we've written we could run that command every hour every day whenever we want so anyways let me show you a few more things that we can do here for the the syntax of this chron job so if i wanted to run something not every 15 minutes but at every 15 minutes so when i say at every 15 minute i mean like 1 15 2 15 3 15 4 15 5 15 so on and so forth not every 15 minutes but at the 15th minute of every hour then what i would type is 15 and then for asterisks like that now i understand this is slightly confusing but when you want to schedule something every so at an increment of some time you do the asterisk you do the slash and then what that increment is if you want it to run at a specific time and in this case we want to run at every 15 minute of the hour we just write that time in the appropriate column so now we'll run at every 15th minute of every hour and then again i can put whatever command i want i'm just going to do placeholder command here because it doesn't matter what the command is i'm just trying to show you the syntax all right so now let's say that we actually wanted to run something at every 5th minute 10th minute and 15 minute of the hour so i want to run the same command multiple times throughout the hour then what i would do is the following i could do something like 5 10 and i don't think we need spaces 5 10 15 and then 4 asterisks and then my command this again means that we're going to run at 105 and 110 and 115 then 205 then 210 then 215. then 305 then 310 then 315 you get the idea it's the fifth 10th and 15th minute of every hour now that's pretty hard to pronounce but hopefully you get the idea so that is how that one works now let's say you wanted to execute something just every hour you want to do it every hour what you do is you would type zero and then you would put your four asterisks and then the command now this means run at the zeroth minute of every hour so you will have it happen every hour so we will continue in one second but i need to quickly thank the other sponsor of this video which is algo expert i'll go expert is the best platform to use when preparing for your software engineering coding interviews they have a data structures crash course a mock interviews feature and over 120 coding interview questions get started with algo expert today by hitting the link in the description and using the code tech with tim or a discount on the platform now let's say we wanted to run something every four hours now we're moving out of the minute column and we're going to move into the hour column so what i'm going to do is type the following i'm going to type 0 so not oh sorry 0 then i'm going to type asterisk slash four and then three more asterisks and then my command because this means we're in the hour column here by the way in the second asterisk that we are going to run every four hours at the zeroth minute of that hour so that's what this command tells us every four hours at the zeroth minute run this command that's as easy as it is now let's say we wanted to run something every day well then what we type would type is zero 0 and then 3 asterisks because the hour column is telling us the amount of hours that we want to run this at so this pretty much means run at midnight every single day run at the 0th minute and 0 hour of every day now let's say we didn't want this to run at midnight but we still want it to run every day we could set it to run at say 4 am or 5 a.m i could say 0 5 and then asterix asterix asterix this is in 24 hour time by the way and when i put this zero five this means run at the fifth hour of every day and the zeroth minute of that fifth hour so this means we're gonna run at five a.m every single day and then we can do a bunch of other ones as well so let's say now that i wanted to run something on the first day of every month well i would pick the time that i want to run this at so let's say i actually want to run this at something like 10 30. i put 30 then i could put 10 this means we want to run at 10 30 and i want to run this on the first day of every month so what i can do is i can put the day in the month that i want this to run at that's what dom stands for this third column so 30 10 1 and then two asterisks and then the command after this is going to run on the first day of every month at 10 30. so now let's say i actually wanted to run this every three months well if i want to run this at 10 30 on the first day of the month but every three months what i would do is the following i would say 30 10 i would say one assuming i wanted this to run on the first day of each month then i would say asterisk three and then one more asterisk and then my command now that's because we're moving into the fourth column now which is the month so when i say asterisk 3 this means that i want this to run every 3 months so hopefully that's clear but this is 10 30 on the first day of the month every three months now lastly we can also pick the day of the week that we want to run a command on so let's say we want to run a command every monday through friday so monday tuesday wednesday thursday friday but we don't want to run it on the weekends what i could do is the following i could type zero zero assuming we want this to run at midnight and then asterix asterix and then one hyphen five so now we've moved into the day of week column so the day of week column allows us to schedule tasks to run on certain days of the week so when i say one to five that means run this from monday to friday and the reason that works is because 0 represents sunday and 6 represents saturday so from 0 to 6 our valid integers here are valid numbers to put i also can put a range so 1 hyphen 5 which means run it in all of the days in between one and five now of course i could do one two three four five like that as well this is the same thing as doing one hyphen five but you are allowed to put a range and this just means run from monday to friday now the reason i have these two asterisks in between is because i don't care what day of the month it is i don't care what month it is i just care what time i'm running this at so i'm running this at midnight and i'm running this every monday to friday so you are allowed to skip asterisks when you write these commands out but you just have to understand what you're actually scheduling this for now most commonly you're going to want to run something every day or every hour or every few minutes you probably don't need to do something super complex like i'm showing you here but this again is just to give you an introduction to how the cron jobs work and the basic syntax so you probably will have to look up the syntax when you're doing something more specific in the future but hopefully this gives you a good idea so that was pretty much all i wanted to show you for the cron job syntax there's a few more things to show you though and these are kind of shortcuts for this scheduling syntax so let's say you don't want to deal with all this you don't want to have to figure out what all the asterisks mean well fortunately there's a few little tags that we can use so if i wanted to run something daily i could just type at daily which is just kind of a shortcut that you're allowed to use inside of here and then the command that i want to run afterwards now if i wanted to run something every day at midnight then what i would do is say midnight now this actually means the exact same thing as the daily command but it's just a bit more verbose because by default daily is going to run at midnight in fact almost all of these tags that i'm showing you by default will run at midnight if that's a valid option for the default all right now there's another one that we can use that's pretty useful this is reboot so if you want something to run no matter what when you start the machine or when it reboots then you would say at reboot and then whatever the script is that you want to run there's a few more you can probably guess what they are but we can do weekly we can do annually like that we can do yearly which is the exact same thing as annually again i don't know why they have multiple but you can use both of those they also have hourly and i think that's about it i believe there's monthly as well i don't think i showed that one so those are kind of the tags that you're allowed to use that are just shortcuts for this syntax right here yeah hopefully that gives you an idea of how cron jobs work now what i will show you as a last thing here is how you actually you know put your own scripts here because it's one thing to understand the syntax but how do i point to a script that i wrote and schedule that to run so i'm just going to exit out of this i'm not going to save this because i don't want all of that i'm going to show you that if i say ls here we have a dot sh file i have my test.sh so let's say i wanted to run this script every minute well what i would do is i would go inside of my crown tab so cron tab hyphen e and then inside of here i would point to that script so what i would say is let's go you know asterisk slash one asterix asterisk asterisk and then we're going to go slash root slash and then test dot sh and i'm just going to put a dot here because that's how we actually execute this command so now if i were to save this cron tab what would happen is this test.sh file would run every one minutes and that's all you need to know that's how this works you need the path to the file or to the script that you want to run and yeah you just put it here now of course you could write commands as well say you want to run a python script i'm not going to put some syntax for the cron job but you could say python or python3 and then whatever the path to the script is so maybe slash root slash script dot py and well that would go ahead and run the python3 command with that script so hopefully that is clear but that is how cron jobs work and that is the cron tab and that's all i have for this video so i hope you guys enjoyed if you did make sure to leave a like subscribe to the channel and i will see you in another youtube video
