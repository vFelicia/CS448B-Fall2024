With timestamps:

00:02 - [Music]
00:06 - so it's no secret that learning to code
00:08 - is something that's quite difficult a
00:10 - lot of people have trouble with it they
00:11 - give up they can't get far enough into
00:13 - it to find it interesting and it's just
00:15 - something that a lot of people are
00:16 - trying to get into nowadays but can't
00:18 - get past those beginner levels now what
00:20 - I'm gonna do in this video is talk to
00:22 - you about the top 5 beginner programming
00:24 - mistakes I see and how you can stop
00:26 - making those mistakes and continue
00:28 - learning to code and keep that
00:30 - motivation I know it's really hard when
00:32 - you're getting stuck you can't move past
00:33 - something you don't know what to learn
00:35 - next and you run into the mistakes that
00:36 - I'm gonna talk about here so if you can
00:38 - avoid those you're gonna become a better
00:40 - developer just by learning more about
00:42 - coding and hopefully get past some of
00:43 - these obstacles that maybe are holding
00:45 - you back so with that being said let's
00:47 - go ahead and get into the top 5 beginner
00:49 - programming mistakes after a quick word
00:51 - from our sponsor
00:52 - I need to thank simply learned for
00:54 - sponsoring this video and introduce you
00:55 - to their full stack Java developer
00:57 - master program which is designed to feed
00:59 - a master both front and back-end Java
01:01 - technologies simply learns blended
01:03 - learning model brings classroom learning
01:04 - experience online with its world-class
01:06 - LMS it combines instructor-led training
01:08 - self-paced learning and personalized
01:10 - mentoring to provide an immersive
01:11 - learning experience with over 350 hours
01:14 - of in-depth training you learn basic and
01:16 - advanced web development while using
01:18 - frameworks and tools like angular spring
01:20 - boot hibernate and MVC you'll also learn
01:23 - how to use JavaScript jQuery and nodejs
01:25 - to make beautiful and interactive
01:26 - websites if you need any help along the
01:28 - way you can enroll in live classes that
01:30 - are offered multiple days a week for
01:31 - each section of this course to master
01:34 - the over 30 in-demand skills taught in
01:35 - this course you'll also work through 4
01:37 - major projects where you'll build entire
01:39 - full stack applications start your
01:41 - journey becoming a master of Java
01:42 - technologies in the web development
01:44 - today by hitting the link in the
01:45 - description all right so let me start by
01:47 - give me a little bit of background in
01:48 - some context into myself so you
01:50 - understand where I'm getting some of
01:51 - this information from so my name is Tim
01:53 - I'm 19 most of you know that I'm
01:55 - actually a full-time student and I've
01:57 - been teaching coding since I was 15
01:59 - years old so I started programming
02:01 - myself when I was 12 but when I was 15 I
02:03 - was working on a summer camp summer camp
02:05 - as a stem program coordinator I worked
02:07 - there for three years and I was in
02:09 - charge of running a coding specialty
02:11 - that focused on teaching fundamental
02:13 - Python Pro
02:13 - gramming two kids aged 10 to 15 years
02:15 - old I've also been teaching coding on
02:17 - this YouTube channel for the past two or
02:19 - three years I've taught hundreds of
02:21 - thousands of people basic Python
02:22 - programming as well as advanced concepts
02:24 - and let's just say you know I talk to a
02:26 - lot of beginner Python programmers I've
02:28 - done private tutoring I just I have a
02:30 - wealth of kind of knowledge and
02:32 - expertise especially in teaching
02:33 - beginner concepts in programming so with
02:36 - that being said let's get into mistake
02:37 - number one the first and probably the
02:40 - most important mistake I see people
02:41 - making all the time is memorizing and
02:44 - not understanding now what I mean by
02:47 - that is when you learn something new the
02:49 - tendency for a lot of courses a lot of
02:52 - people they're in traditional education
02:53 - programs is just to memorize something
02:55 - just to think of how they can replicate
02:57 - it on a test replicate it in some
02:59 - environment and not truly understand
03:01 - exactly why something works now when
03:04 - programming as you'll notice as you get
03:06 - more advanced into it it really is so
03:09 - just conceptually important to
03:11 - understand exactly what you're doing and
03:13 - why it works what you're doing rather
03:16 - than just memorizing snippets of code
03:18 - and pasting things in I see this so
03:20 - commonly with beginners that they'll
03:22 - take for example X a piece of code that
03:24 - I wrote right and they'll just paste it
03:26 - in some random part in their program and
03:28 - they know what it does they know the
03:30 - input and the output but they don't
03:32 - understand or have any idea why now why
03:35 - this becomes an issue is because when
03:37 - something goes wrong or this code does
03:39 - not perform the way you expected you
03:41 - have absolutely no idea how to fix it
03:43 - why it works or even what the heck is
03:45 - going on so you need to as a beginner
03:48 - really be focusing on especially as a
03:50 - beginner why something works and
03:53 - understanding every single component to
03:55 - some piece of code or to some tutorial
03:57 - or whatever it is that you're learning
03:59 - before you go ahead and use that or move
04:01 - on now it is okay sometimes to use a
04:03 - little piece of code if you don't fully
04:05 - understand why it's working but for
04:07 - fundamental things like understanding a
04:09 - for loop understanding if statements
04:11 - prints strings things like that that are
04:13 - fundamental to a programming language
04:15 - you need to understand why they work
04:18 - exactly and not memorize it whatsoever
04:20 - programming has absolutely zero
04:23 - memorization to it what ends up
04:25 - happening is you will just
04:27 - memorizing those topics because you
04:29 - understand them so well and you've used
04:31 - them enough times so a lot a very common
04:34 - mistake is people try to memorize syntax
04:36 - they try to memorize specific algorithms
04:38 - or pieces of code you don't want to
04:40 - memorize something you want to
04:41 - understand why it works because if you
04:43 - have that you have the understanding you
04:45 - can very easily replicate that in
04:47 - whatever way that may be right so really
04:50 - focus on understanding something and not
04:52 - memorizing something that's the mistake
04:54 - I see so commonly people copying pasting
04:56 - things and that really just hinders your
04:58 - learning and doesn't let you go anywhere
05:00 - so mistake number two is closely related
05:02 - to mistake number one and this is do not
05:04 - skip the fundamentals or I guess the
05:07 - mistake version of that would be
05:08 - skipping the fundamentals so the common
05:11 - mistake that I see is people decide to
05:13 - jump into the deep end before they learn
05:15 - how to swim that's the analogy I like to
05:17 - give you for example jumping into
05:19 - machine learning after learning coding
05:21 - for two weeks that is an example of
05:23 - skipping the fundamentals in my opinion
05:26 - it should take you a month to maybe
05:28 - three months to really nail if you're a
05:30 - brand new programmer the fundamentals of
05:33 - programming and what I mean by that is
05:35 - understanding how to solve very basic
05:37 - problems understanding for loops if you
05:40 - know conditions the basic fundamental
05:42 - concepts that apply in almost every
05:44 - programming language you need to know
05:46 - before you start getting into these more
05:49 - complex specific domains now that's my
05:52 - opinion but this is a huge mistake I see
05:54 - and what discourages a lot of people
05:56 - from getting into program they do like a
05:58 - weak course on code Academy of Python
06:00 - they don't really understand half of the
06:02 - stuff that's been taught there they've
06:04 - just copied and pasted code and they're
06:05 - like well I learned the Python
06:07 - programming language let's go ahead and
06:09 - try to build you know the next Google a
06:11 - I like or deepmind or whatever it's
06:13 - called no no no please do not do that if
06:16 - you really want to get good at
06:17 - programming if you really want to excel
06:19 - and this is gonna speed up your process
06:21 - I guarantee you make sure you nail the
06:24 - fundamentals like you do so much
06:26 - fundamental programming solving really
06:28 - basic problems working on a few mini
06:30 - projects on the side making sure you
06:33 - understand all these concepts that are
06:35 - built into the standard language you're
06:36 - learning before you go ahead and start
06:39 - working with frameworks and
06:40 - and more advanced things that assume you
06:43 - have this understanding it literally is
06:45 - like what I described at the beginning
06:46 - you cannot jump into the deep end of the
06:48 - pool if you don't know how to swim if
06:50 - you do you're just gonna freak out and
06:51 - try to get out as fast as possible and
06:53 - that's what happens with a lot of
06:55 - beginners you know they want to get into
06:57 - programming because they hear the
06:58 - salaries or they hear you know what cool
07:00 - stuff you can do with AI or they want to
07:02 - make 3d games and make a bunch of money
07:04 - but they don't want to put in the work
07:06 - to learn the fundamentals and by the
07:08 - time they get to the stuff that's
07:09 - interesting they can't do it because
07:11 - they don't have that fundamental
07:13 - knowledge so you know go ahead and
07:14 - suffer through which I don't really
07:15 - consider suffering maysun some may
07:18 - suffer through those beginning maybe
07:19 - more boring things because if you really
07:21 - truly understand what they are you will
07:24 - be able to learn any other programming
07:26 - you know concept topic whatever it is
07:28 - that you want because you'll have that
07:30 - really strong foundation already built
07:32 - so this next mistake is a big one and it
07:35 - is not having fun now it's unfortunate
07:37 - but I see so often with beginner
07:39 - programmers especially those that are my
07:41 - age that are students they just get
07:43 - stuck in this hole where what they do is
07:45 - they just like slave away every day
07:48 - learning new programming topics you know
07:50 - like every day they just want to be as
07:51 - efficient as possible and just learn
07:53 - something new and make sure they're
07:54 - learning and doing the most practical
07:56 - things possible and you know they're not
07:57 - wasting time making stupid games they're
07:59 - working on things they're gonna put on
08:00 - that resume and that they want to show
08:02 - or put on the App Store and you know
08:04 - that's great I'm not judging those kind
08:06 - of people but I can tell you that this
08:08 - gets old fast and you want to make sure
08:10 - that when you're starting programming at
08:12 - least you're working on things that to
08:14 - you are enjoyable like say there's some
08:16 - stupid game that you know no one likes
08:18 - but you really enjoyed and you want to
08:19 - try to recreate it or make some small
08:21 - version of it or something like that do
08:23 - that it doesn't matter if it's not
08:24 - practical it doesn't matter if someone
08:26 - else is gonna you know look at your code
08:28 - and be like what is that do stuff that
08:30 - you enjoy programming is fun and to
08:32 - really get good at programming I
08:34 - honestly believe you need to enjoy what
08:36 - you're doing I don't know how you can
08:38 - sit for like two or three days in a row
08:41 - and just grind do the same thing and
08:43 - learn new concepts unless you really
08:45 - thoroughly enjoy doing that you should
08:47 - at least take some time each day to do
08:49 - some programming that you enjoy right if
08:51 - you're gonna be learning program
08:52 - every day I don't know what your
08:53 - schedule is but the idea here is just
08:55 - make sure you enjoy what you're doing
08:57 - because you don't want your passion to
08:58 - fade away from programming such an
09:01 - amazing field because you're just
09:02 - slaving away and trying to do the most
09:04 - practical things possible and this
09:06 - applies to I feel every aspect of life
09:08 - you know you don't want to suck yourself
09:10 - into a career where you're just there
09:12 - because you just want to get the job and
09:14 - you want to get the paycheck at the end
09:15 - of the day you want to be doing
09:16 - something that you thoroughly enjoy so
09:18 - make sure that when you're learning to
09:20 - code especially you know you're taking
09:22 - that time you're taking a few days maybe
09:23 - a weekend to work on things that you
09:25 - enjoy to keep your passion for this
09:28 - amazing field programming alive right
09:30 - that's how I've been able to program for
09:32 - so long since I was 12 years old and it
09:34 - hasn't got tiring yet because I take the
09:36 - time to do things that aren't that
09:37 - practical but that I find really cool
09:39 - and that I enjoy and I work on those
09:41 - projects that you know some people may
09:43 - consider a waste of time because they're
09:45 - not going on my resume but for me that's
09:47 - just another way to practice coding in
09:49 - an environment doing something that I
09:51 - enjoy so keep that in mind you want to
09:53 - have fun the best way to become a better
09:55 - programmer is to work on all kinds of
09:57 - projects that you enjoy and just you
09:59 - know keep that passion alive for
10:01 - something that I'm sure most people
10:02 - enjoy when they start and then as they
10:04 - get into it more and more you know that
10:06 - passion fades when they're just grinding
10:08 - and slaving away and not doing the
10:09 - enjoyable fun programming things that
10:11 - they want to do so the next mistake
10:13 - you're gonna want to avoid is getting
10:15 - stuck in what I call tutorial hell now
10:18 - what I mean by this is you're someone
10:20 - who every day when they wake up you know
10:22 - they really want to learn coding they're
10:23 - getting into it they're beginner but all
10:25 - they do is watch tutorial coding YouTube
10:27 - videos or watch tutorial videos or go
10:29 - through a course they don't ever do
10:31 - anything on their own now I understand
10:34 - it's overwhelming you know to jump into
10:36 - your own big projects and start working
10:38 - on it when you're a beginner but what
10:39 - you really need to be doing is at least
10:41 - applying the skills that you're learning
10:42 - from these tutorial videos on your own
10:44 - you cannot just have everyday someone
10:48 - holding your hand and walking you
10:49 - through different code concepts because
10:51 - even for me I can watch really advanced
10:53 - math lectures or really advanced topics
10:56 - and yeah that makes a lot of sense like
10:57 - that's cool
10:58 - I totally get what he's doing but then
11:00 - as soon as I get given the same problem
11:02 - and I don't have that video as a
11:03 - reference I'm lost I have no idea what
11:05 - to do
11:06 - is all I've actually done is understood
11:08 - what someone else has done I haven't
11:10 - applied that in my own way right like
11:13 - you can't go to a math exam after just
11:15 - watching all the lectures unless you
11:16 - know you're some next-level genius which
11:18 - I'm sure some of you guys are out there
11:20 - without having ever actually done a
11:22 - practice math question right and that's
11:24 - the idea here is that tutorial videos
11:26 - are great great don't get me wrong I
11:27 - make a ton them I literally make a
11:29 - living from supplying tutorial videos
11:31 - online but you want to make sure that
11:33 - after you've launched a few after you
11:34 - have a general understanding you try to
11:37 - apply that on your own because that's
11:39 - when you're gonna realize the gaps in
11:40 - your knowledge and you're gonna be able
11:42 - to learn a lot more you know use
11:44 - self-regulating yourself and saying hey
11:45 - you know I actually don't understand how
11:47 - to do this maybe I should go back and
11:49 - watch it again or maybe I should slowly
11:51 - reference some of these documentation
11:52 - pages and try to really nail this topic
11:55 - down by myself that's gonna help you a
11:57 - ton and as a beginner you need to make
11:59 - sure you're doing that you cannot be
12:01 - stuck in tutorial Hell where you've done
12:03 - six months of learning coding but all
12:04 - that has been is really just watching
12:06 - other people code on a screen it's a lot
12:08 - different when you're on your own and
12:10 - there's not someone holding your hand so
12:12 - this last mistake is probably the
12:13 - biggest reason I see people get
12:15 - discouraged easily or quick coding and
12:17 - that is comparing yourselves to others
12:20 - it is almost never fair to compare
12:23 - yourself in your current skill level to
12:25 - someone else because everyone has a
12:27 - different story everyone has a different
12:29 - journey everyone is different
12:30 - IQ levels and Nate abilities you cannot
12:33 - as a programmer especially a beginner
12:35 - look at someone that's Jewish like look
12:37 - at me who's 19 for example you cannot
12:39 - compare yourself to other people and say
12:42 - well he knows it I can't figure it out I
12:44 - guess I'm just not good at coding I'm
12:46 - gonna stop and that's what I see so
12:48 - often especially on my videos a lot of
12:50 - people will comment and say man you make
12:52 - me feel like crap because you're 19 and
12:54 - you're better than me and I'm 22 I'm
12:56 - like dude you cannot compare yourself to
12:59 - me I am a very completely different
13:02 - person than you are you know not many
13:03 - people learn coding for fun when they're
13:06 - 12 years old so please do yourself a
13:08 - favor and do not compare yourself to
13:10 - other programmers to other people
13:12 - everyone is different this applies to
13:14 - almost everything and the last thing you
13:16 - want to be doing
13:17 - is getting discouraged because you know
13:19 - you were classmate who picked up coding
13:21 - two months later than you is now better
13:22 - than you maybe he did more work maybe
13:24 - he's just naturally smarter right
13:26 - there's just you cannot do that everyone
13:29 - has their different abilities their
13:30 - different skill level and you cannot let
13:32 - yourself get discouraged by comparing
13:34 - yourself to others chances are you're
13:36 - better at something than someone else
13:37 - chances are someone looks up to you for
13:39 - some specific reason because you are
13:41 - better at a specific topic
13:43 - everyone has their skills their
13:44 - strengths and their weaknesses and the
13:46 - best thing you can do for yourself is be
13:48 - self-aware and understand what level
13:51 - you're at and what you need to do to get
13:53 - better so please do not watch other
13:55 - people programs don't look at peers
13:57 - friends other people and compare
13:59 - yourself to them that is the easiest way
14:01 - to just get discouraged get sad get
14:03 - upset and think your progress is not as
14:06 - good as it should be trust me the best
14:07 - thing to do is be self-aware understand
14:10 - what you need to work on and focus
14:12 - solely on yourself not comparing
14:14 - yourself to other people now obviously
14:16 - there's some exceptions here don't get
14:18 - me wrong but a general rule of thumb
14:19 - especially for you guys that are
14:21 - beginners they probably aren't jumping
14:23 - into the job market just yet that's the
14:25 - last thing you want to do is be
14:26 - comparing yourself to others especially
14:28 - those that are better than you because
14:29 - that's just an instant source of
14:31 - demotivation and that's the last thing
14:33 - you need when you're starting again to
14:34 - programming and really starting to get
14:36 - good and into the intermediate levels so
14:38 - with that being said that has been the
14:40 - five biggest programming mistakes I see
14:42 - from beginners do you guys agree with
14:44 - these mistakes is there any other
14:45 - mistakes you see from beginner
14:47 - programmers maybe yourself if you have
14:49 - any questions any comments please do
14:50 - leave them down below and with that
14:52 - being said that has been this video so
14:54 - if you guys enjoyed make sure you leave
14:55 - a like subscribe to the channel and I
14:57 - will see you guys in another YouTube
14:59 - video

Cleaned transcript:

so it's no secret that learning to code is something that's quite difficult a lot of people have trouble with it they give up they can't get far enough into it to find it interesting and it's just something that a lot of people are trying to get into nowadays but can't get past those beginner levels now what I'm gonna do in this video is talk to you about the top 5 beginner programming mistakes I see and how you can stop making those mistakes and continue learning to code and keep that motivation I know it's really hard when you're getting stuck you can't move past something you don't know what to learn next and you run into the mistakes that I'm gonna talk about here so if you can avoid those you're gonna become a better developer just by learning more about coding and hopefully get past some of these obstacles that maybe are holding you back so with that being said let's go ahead and get into the top 5 beginner programming mistakes after a quick word from our sponsor I need to thank simply learned for sponsoring this video and introduce you to their full stack Java developer master program which is designed to feed a master both front and backend Java technologies simply learns blended learning model brings classroom learning experience online with its worldclass LMS it combines instructorled training selfpaced learning and personalized mentoring to provide an immersive learning experience with over 350 hours of indepth training you learn basic and advanced web development while using frameworks and tools like angular spring boot hibernate and MVC you'll also learn how to use JavaScript jQuery and nodejs to make beautiful and interactive websites if you need any help along the way you can enroll in live classes that are offered multiple days a week for each section of this course to master the over 30 indemand skills taught in this course you'll also work through 4 major projects where you'll build entire full stack applications start your journey becoming a master of Java technologies in the web development today by hitting the link in the description all right so let me start by give me a little bit of background in some context into myself so you understand where I'm getting some of this information from so my name is Tim I'm 19 most of you know that I'm actually a fulltime student and I've been teaching coding since I was 15 years old so I started programming myself when I was 12 but when I was 15 I was working on a summer camp summer camp as a stem program coordinator I worked there for three years and I was in charge of running a coding specialty that focused on teaching fundamental Python Pro gramming two kids aged 10 to 15 years old I've also been teaching coding on this YouTube channel for the past two or three years I've taught hundreds of thousands of people basic Python programming as well as advanced concepts and let's just say you know I talk to a lot of beginner Python programmers I've done private tutoring I just I have a wealth of kind of knowledge and expertise especially in teaching beginner concepts in programming so with that being said let's get into mistake number one the first and probably the most important mistake I see people making all the time is memorizing and not understanding now what I mean by that is when you learn something new the tendency for a lot of courses a lot of people they're in traditional education programs is just to memorize something just to think of how they can replicate it on a test replicate it in some environment and not truly understand exactly why something works now when programming as you'll notice as you get more advanced into it it really is so just conceptually important to understand exactly what you're doing and why it works what you're doing rather than just memorizing snippets of code and pasting things in I see this so commonly with beginners that they'll take for example X a piece of code that I wrote right and they'll just paste it in some random part in their program and they know what it does they know the input and the output but they don't understand or have any idea why now why this becomes an issue is because when something goes wrong or this code does not perform the way you expected you have absolutely no idea how to fix it why it works or even what the heck is going on so you need to as a beginner really be focusing on especially as a beginner why something works and understanding every single component to some piece of code or to some tutorial or whatever it is that you're learning before you go ahead and use that or move on now it is okay sometimes to use a little piece of code if you don't fully understand why it's working but for fundamental things like understanding a for loop understanding if statements prints strings things like that that are fundamental to a programming language you need to understand why they work exactly and not memorize it whatsoever programming has absolutely zero memorization to it what ends up happening is you will just memorizing those topics because you understand them so well and you've used them enough times so a lot a very common mistake is people try to memorize syntax they try to memorize specific algorithms or pieces of code you don't want to memorize something you want to understand why it works because if you have that you have the understanding you can very easily replicate that in whatever way that may be right so really focus on understanding something and not memorizing something that's the mistake I see so commonly people copying pasting things and that really just hinders your learning and doesn't let you go anywhere so mistake number two is closely related to mistake number one and this is do not skip the fundamentals or I guess the mistake version of that would be skipping the fundamentals so the common mistake that I see is people decide to jump into the deep end before they learn how to swim that's the analogy I like to give you for example jumping into machine learning after learning coding for two weeks that is an example of skipping the fundamentals in my opinion it should take you a month to maybe three months to really nail if you're a brand new programmer the fundamentals of programming and what I mean by that is understanding how to solve very basic problems understanding for loops if you know conditions the basic fundamental concepts that apply in almost every programming language you need to know before you start getting into these more complex specific domains now that's my opinion but this is a huge mistake I see and what discourages a lot of people from getting into program they do like a weak course on code Academy of Python they don't really understand half of the stuff that's been taught there they've just copied and pasted code and they're like well I learned the Python programming language let's go ahead and try to build you know the next Google a I like or deepmind or whatever it's called no no no please do not do that if you really want to get good at programming if you really want to excel and this is gonna speed up your process I guarantee you make sure you nail the fundamentals like you do so much fundamental programming solving really basic problems working on a few mini projects on the side making sure you understand all these concepts that are built into the standard language you're learning before you go ahead and start working with frameworks and and more advanced things that assume you have this understanding it literally is like what I described at the beginning you cannot jump into the deep end of the pool if you don't know how to swim if you do you're just gonna freak out and try to get out as fast as possible and that's what happens with a lot of beginners you know they want to get into programming because they hear the salaries or they hear you know what cool stuff you can do with AI or they want to make 3d games and make a bunch of money but they don't want to put in the work to learn the fundamentals and by the time they get to the stuff that's interesting they can't do it because they don't have that fundamental knowledge so you know go ahead and suffer through which I don't really consider suffering maysun some may suffer through those beginning maybe more boring things because if you really truly understand what they are you will be able to learn any other programming you know concept topic whatever it is that you want because you'll have that really strong foundation already built so this next mistake is a big one and it is not having fun now it's unfortunate but I see so often with beginner programmers especially those that are my age that are students they just get stuck in this hole where what they do is they just like slave away every day learning new programming topics you know like every day they just want to be as efficient as possible and just learn something new and make sure they're learning and doing the most practical things possible and you know they're not wasting time making stupid games they're working on things they're gonna put on that resume and that they want to show or put on the App Store and you know that's great I'm not judging those kind of people but I can tell you that this gets old fast and you want to make sure that when you're starting programming at least you're working on things that to you are enjoyable like say there's some stupid game that you know no one likes but you really enjoyed and you want to try to recreate it or make some small version of it or something like that do that it doesn't matter if it's not practical it doesn't matter if someone else is gonna you know look at your code and be like what is that do stuff that you enjoy programming is fun and to really get good at programming I honestly believe you need to enjoy what you're doing I don't know how you can sit for like two or three days in a row and just grind do the same thing and learn new concepts unless you really thoroughly enjoy doing that you should at least take some time each day to do some programming that you enjoy right if you're gonna be learning program every day I don't know what your schedule is but the idea here is just make sure you enjoy what you're doing because you don't want your passion to fade away from programming such an amazing field because you're just slaving away and trying to do the most practical things possible and this applies to I feel every aspect of life you know you don't want to suck yourself into a career where you're just there because you just want to get the job and you want to get the paycheck at the end of the day you want to be doing something that you thoroughly enjoy so make sure that when you're learning to code especially you know you're taking that time you're taking a few days maybe a weekend to work on things that you enjoy to keep your passion for this amazing field programming alive right that's how I've been able to program for so long since I was 12 years old and it hasn't got tiring yet because I take the time to do things that aren't that practical but that I find really cool and that I enjoy and I work on those projects that you know some people may consider a waste of time because they're not going on my resume but for me that's just another way to practice coding in an environment doing something that I enjoy so keep that in mind you want to have fun the best way to become a better programmer is to work on all kinds of projects that you enjoy and just you know keep that passion alive for something that I'm sure most people enjoy when they start and then as they get into it more and more you know that passion fades when they're just grinding and slaving away and not doing the enjoyable fun programming things that they want to do so the next mistake you're gonna want to avoid is getting stuck in what I call tutorial hell now what I mean by this is you're someone who every day when they wake up you know they really want to learn coding they're getting into it they're beginner but all they do is watch tutorial coding YouTube videos or watch tutorial videos or go through a course they don't ever do anything on their own now I understand it's overwhelming you know to jump into your own big projects and start working on it when you're a beginner but what you really need to be doing is at least applying the skills that you're learning from these tutorial videos on your own you cannot just have everyday someone holding your hand and walking you through different code concepts because even for me I can watch really advanced math lectures or really advanced topics and yeah that makes a lot of sense like that's cool I totally get what he's doing but then as soon as I get given the same problem and I don't have that video as a reference I'm lost I have no idea what to do is all I've actually done is understood what someone else has done I haven't applied that in my own way right like you can't go to a math exam after just watching all the lectures unless you know you're some nextlevel genius which I'm sure some of you guys are out there without having ever actually done a practice math question right and that's the idea here is that tutorial videos are great great don't get me wrong I make a ton them I literally make a living from supplying tutorial videos online but you want to make sure that after you've launched a few after you have a general understanding you try to apply that on your own because that's when you're gonna realize the gaps in your knowledge and you're gonna be able to learn a lot more you know use selfregulating yourself and saying hey you know I actually don't understand how to do this maybe I should go back and watch it again or maybe I should slowly reference some of these documentation pages and try to really nail this topic down by myself that's gonna help you a ton and as a beginner you need to make sure you're doing that you cannot be stuck in tutorial Hell where you've done six months of learning coding but all that has been is really just watching other people code on a screen it's a lot different when you're on your own and there's not someone holding your hand so this last mistake is probably the biggest reason I see people get discouraged easily or quick coding and that is comparing yourselves to others it is almost never fair to compare yourself in your current skill level to someone else because everyone has a different story everyone has a different journey everyone is different IQ levels and Nate abilities you cannot as a programmer especially a beginner look at someone that's Jewish like look at me who's 19 for example you cannot compare yourself to other people and say well he knows it I can't figure it out I guess I'm just not good at coding I'm gonna stop and that's what I see so often especially on my videos a lot of people will comment and say man you make me feel like crap because you're 19 and you're better than me and I'm 22 I'm like dude you cannot compare yourself to me I am a very completely different person than you are you know not many people learn coding for fun when they're 12 years old so please do yourself a favor and do not compare yourself to other programmers to other people everyone is different this applies to almost everything and the last thing you want to be doing is getting discouraged because you know you were classmate who picked up coding two months later than you is now better than you maybe he did more work maybe he's just naturally smarter right there's just you cannot do that everyone has their different abilities their different skill level and you cannot let yourself get discouraged by comparing yourself to others chances are you're better at something than someone else chances are someone looks up to you for some specific reason because you are better at a specific topic everyone has their skills their strengths and their weaknesses and the best thing you can do for yourself is be selfaware and understand what level you're at and what you need to do to get better so please do not watch other people programs don't look at peers friends other people and compare yourself to them that is the easiest way to just get discouraged get sad get upset and think your progress is not as good as it should be trust me the best thing to do is be selfaware understand what you need to work on and focus solely on yourself not comparing yourself to other people now obviously there's some exceptions here don't get me wrong but a general rule of thumb especially for you guys that are beginners they probably aren't jumping into the job market just yet that's the last thing you want to do is be comparing yourself to others especially those that are better than you because that's just an instant source of demotivation and that's the last thing you need when you're starting again to programming and really starting to get good and into the intermediate levels so with that being said that has been the five biggest programming mistakes I see from beginners do you guys agree with these mistakes is there any other mistakes you see from beginner programmers maybe yourself if you have any questions any comments please do leave them down below and with that being said that has been this video so if you guys enjoyed make sure you leave a like subscribe to the channel and I will see you guys in another YouTube video
