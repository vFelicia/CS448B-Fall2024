With timestamps:

00:00 - if I was starting completely from zero
00:02 - and wanted to learn to code as quickly
00:03 - as possible this is exactly what I would
00:06 - do the first thing is to figure out my
00:08 - goal it's impossible to make progress
00:10 - and understand why you're doing all of
00:11 - this work if you don't have an end goal
00:13 - in sight you need to ask yourself why do
00:15 - I want to learn to code maybe you want
00:17 - to make $100,000 a year you want to work
00:19 - at a tech company like Google maybe you
00:20 - want to start your own tech company or
00:22 - you just want to have Financial time and
00:24 - location freedom and work anywhere
00:26 - around the world that you want it's up
00:28 - to you but you need to write that goal
00:30 - down and remind yourself of it every
00:32 - single day so right now get a pen get a
00:35 - piece of paper and write down what you
00:37 - actually want why do you want to learn
00:39 - to code and how is that going to help
00:41 - you achieve your goal put this in a
00:42 - place where you can see it every single
00:44 - day and constantly remind yourself of
00:47 - that goal because I promise you this is
00:49 - a tough Journey things get difficult and
00:51 - you need that reminder and motivation to
00:53 - keep going and remember why you're doing
00:55 - all of this work now once you have your
00:57 - goal in mind this will help inform step
00:59 - number two which is to follow a
01:01 - curriculum you absolutely need to have a
01:03 - plan and you need to know exactly what
01:05 - you're learning and the order in which
01:06 - you're learning it this is crucial and
01:08 - this is going to help make sure that you
01:10 - know you're making progress and you're
01:12 - learning The Right Stuff half the battle
01:14 - when it comes to learning something new
01:15 - is knowing what to learn you don't yet
01:18 - know what you don't know and you don't
01:19 - know the topics that you actually need
01:21 - to figure out so I highly recommend
01:23 - finding a reputable curriculum or going
01:25 - through some kind of course or boot camp
01:27 - where you have a structured learning
01:29 - environment you're staying on track and
01:31 - you have a bit of accountability now for
01:33 - those of you that don't want to invest
01:34 - in something like that what I recommend
01:36 - doing is still finding one that you
01:38 - would have been interested in if it was
01:39 - free and simply copying the curriculum
01:42 - they have and then learning it on your
01:43 - own now I won't lie to you this will be
01:45 - a lot more difficult than if you
01:46 - actually went through the program but at
01:48 - least you have something that you can
01:49 - keep track of your progress with and you
01:51 - know the order of topics you should be
01:53 - learning now before you actually go and
01:55 - pick one of these curriculums you need
01:56 - to have a sense of what it is that you
01:58 - want to do in your development Journey
02:00 - so do you want to be a mobile app
02:02 - developer do you want to build websites
02:03 - do you not care do you just want to get
02:05 - a job as quickly as possible this will
02:07 - help inform the type of curriculum you
02:09 - enroll in so I recommend spending a day
02:11 - or two in just getting a general sense
02:12 - of what might interest you this can
02:14 - definitely change but you want to know
02:16 - maybe you're more interested in data
02:18 - science or you want to do machine
02:19 - learning or maybe you really just want
02:20 - to build mobile apps if you know that
02:23 - it's going to help direct you and really
02:25 - accelerate your progress when you're
02:26 - just starting out if you are someone
02:28 - where your sole goal is to raise your
02:30 - income or land a job as quickly as
02:32 - possible I do recommend checking out the
02:34 - curriculum from my software development
02:35 - course with course careers now whether
02:37 - or not you purchase this course you can
02:39 - see exactly what we run students through
02:41 - and how we help them be the best
02:43 - candidates for the job for an entry
02:45 - level position we do this by running you
02:47 - through software development
02:48 - fundamentals then a specialization in
02:51 - frontend backend or devops so by the
02:53 - time you're actually interviewing for
02:55 - jobs you're highly qualified and you
02:57 - have that specialized knowledge that
02:58 - quite a few candidates don't have have
03:00 - we also give you a Resume Builder
03:01 - interview tips you can connect directly
03:03 - with me and other coaches for help
03:05 - assistance Etc we show you how to set up
03:07 - your LinkedIn tons of stuff in there but
03:09 - let's move on to the next tip so now
03:11 - that you found your curriculum it's time
03:12 - to practice and you need to practice as
03:14 - much as you possibly can this is really
03:17 - what sets apart the okay developers from
03:19 - the great developers it's the amount of
03:21 - volume and the amount of practice that
03:22 - you've done you will not be a good
03:24 - developer you will not even feel
03:26 - confident to write code if you don't put
03:28 - in hundreds of hours of practice
03:29 - practice you need to sit at your
03:31 - computer you need to struggle you need
03:33 - to solve problems and you need to
03:34 - practice every single day when you're
03:36 - just getting started out especially if
03:38 - you want to do this really quickly what
03:40 - I highly recommend is setting aside
03:42 - longer time periods for doing your
03:44 - practice in a lot of people when they
03:46 - learn a new skill they maybe do 30
03:48 - minutes a day or 45 minutes a day with
03:50 - coding it is possible to learn that way
03:52 - but it's going to take quite a bit
03:53 - longer and you really want to give
03:54 - yourself 2 or three hour long periods
03:57 - where you're able to really get focused
03:59 - you're able to have concentrated deep
04:01 - work and really feel like you're
04:02 - productive and efficient so that means
04:04 - no checking your phone no going on
04:06 - Instagram no putting a YouTube video on
04:09 - when I actually need to do serious
04:10 - coding work I have no volume on I put
04:13 - noise cancelling headphones no music and
04:15 - I sit at my computer and by the time I'm
04:17 - in 30 45 minutes worth of work that's
04:20 - when I really feel like I'm focused I'm
04:22 - dialed in and I get quite a bit done you
04:24 - need to be as focused and concentrated
04:26 - as possible you need to eliminate all
04:28 - distractions I know this is difficult
04:30 - but this is one of these tasks that
04:32 - really requires your complete Focus so
04:34 - practice every single day practice as
04:37 - often as you possibly can and give
04:39 - yourself longer time periods to allow
04:41 - yourself to really get dialed really get
04:43 - focused and be in that deep state where
04:45 - nothing's distracting you and all you're
04:47 - focused on is the task at hand which is
04:49 - learning to code so while you're doing
04:51 - your practice I want to remind you to be
04:54 - curious one of the best ways to get good
04:56 - at software development is to constantly
04:58 - ask questions and to try to mess with
05:00 - things break things try things on your
05:02 - own and ask why people are doing what
05:05 - they're doing this allows you to really
05:07 - get a deep understanding of what's going
05:09 - on and to make sure you're not skipping
05:11 - over things that you don't fully
05:13 - comprehend it's very difficult to get
05:15 - good at programming if you can't first
05:16 - Master those fundamentals and basic
05:18 - skills but a lot of times when you're
05:20 - watching videos or tutorials there's
05:21 - going to be a bunch of questions you
05:23 - have that just aren't answered so you
05:24 - need to go out of your way to answer
05:26 - those questions for yourself whether you
05:28 - do that in a community whether you ask
05:30 - like a course instructor or something or
05:31 - you go on stack Overflow or use chat gbt
05:34 - or you look it up it doesn't matter but
05:35 - you want to constantly be curious if
05:38 - you're watching a video tutorial and
05:39 - they do something that doesn't make
05:40 - sense copy that code mess around with it
05:42 - in your code editor see if you can
05:44 - figure out how it works ask yourself
05:46 - well if they did it this way doesn't
05:47 - that mean I could also do it this way
05:49 - right try Alternatives mess around break
05:51 - things get error messages this is really
05:53 - how you learn you need to constantly ask
05:56 - questions and wonder why is it working
05:58 - this way why did that happen why are
06:01 - they doing it like this if you can keep
06:03 - asking those questions this is building
06:04 - a really good habit and when you
06:06 - actually get into doing professional
06:08 - level programming that's almost always
06:10 - what other developers are doing they'll
06:12 - read your code and they'll ask the same
06:13 - question why did he do it this way I
06:16 - think it would be better to do this way
06:17 - and developers constantly have
06:19 - conversations about why code is written
06:21 - the way it was and if there's ways it
06:23 - could be improved if it could be done
06:25 - differently if it could be optimized Etc
06:27 - so get in that habit early be curious
06:29 - ask questions I promise it will teach
06:31 - you a lot now the next thing that's
06:33 - important especially in 2024 and Beyond
06:36 - is to utilize tools and resources
06:38 - there's so many great AI tools and
06:40 - resources online that can really help
06:42 - speed up your learning and answer
06:44 - questions for you way faster than I ever
06:46 - could have got the answer when I was
06:48 - learning how to code so chat gbt is one
06:50 - that I'll recommend to everyone while
06:51 - you're learning how to code you should
06:53 - have a chat gbt window open and you
06:55 - should use this as your personal
06:56 - assistant and personal tutor that means
06:59 - yeah now you want to try things on your
07:00 - own you don't want to just rely on this
07:02 - for everything but if you have a
07:03 - question and you're really stuck go and
07:05 - ask chat GPT especially for basic
07:08 - concepts this is great it will answer
07:09 - stuff super fast and it will allow you
07:12 - to paste in blocks of code and actually
07:14 - ask questions about it so let's say
07:16 - you're doing some practice exercise and
07:18 - you see my official solution and it
07:20 - makes no sense to you well you can take
07:21 - that solution paste that into chat gbt
07:24 - give it the problem as well and say hey
07:26 - this is the official solution I don't
07:27 - really understand how this works could
07:29 - you explain it to me line by line it
07:31 - will then go ahead and do that for you
07:33 - so continuing what's really going to
07:34 - bring everything full circle for you is
07:36 - when you actually start applying your
07:38 - knowledge by working on projects now I'm
07:41 - sure you've heard this before but it's
07:42 - so important I need to mention it and I
07:44 - do mention it and pretty much every
07:45 - single video at the beginning of your
07:47 - coding Journey you're going to get
07:49 - bombarded with Theory you're going to go
07:50 - through so much stuff it's going to feel
07:52 - overwhelming and it's going to feel like
07:54 - you're forgetting everything the only
07:56 - way to really nail that into your brain
07:58 - to remember it understand why it's
08:00 - important is to apply this into some
08:02 - type of project so you do need to get
08:04 - through those theoretical Parts before
08:05 - you can build something meaningful but
08:07 - once you learn a block of content or
08:09 - you've gone through a section or you've
08:11 - done a few lessons try to put that into
08:13 - a real world project a lot of courses at
08:15 - least if they're good they'll include
08:17 - projects for you they'll give you
08:18 - projects you can try on your own they'll
08:20 - show you how to build them but you
08:21 - really want to try being completely by
08:23 - yourself in a code editor with a goal
08:26 - your goal is to build this specific
08:28 - project once you have that you're going
08:30 - to ask yourself okay where do I start
08:33 - what do I even do here and you're going
08:34 - to start having so many questions that
08:36 - you need to now go and figure out and
08:38 - that is really what good developers are
08:40 - good at doing figuring things out so
08:42 - it's going to be hard it's going to be
08:43 - daunting it's going to be overwhelming
08:45 - but this is where you're going to learn
08:46 - and grow the most and you're going to be
08:48 - able to take those theoretical Concepts
08:50 - and apply them into a real world project
08:52 - so I'm just warning you your first few
08:53 - projects are going to seem impossible
08:55 - going to seem really really hard that's
08:57 - the point that's the goal and you need
08:59 - to have that perseverance to go and
09:01 - figure out how to solve them use your
09:03 - resources use AI tools use stack
09:05 - Overflow Google uh join a community ask
09:07 - for help whatever it may be you are the
09:10 - one who needs to figure out how to do
09:11 - this and you have the resources or
09:13 - should have the resources from the
09:14 - theory that you've learned now lastly I
09:16 - do recommend joining some type of
09:18 - community this is important because when
09:20 - you're going on this journey it's tough
09:22 - It's daunting you're going to lose
09:24 - motivation you're going to feel stuck
09:26 - and it's nice to have other people that
09:27 - are on the same Journey as you that you
09:29 - can relate to ask questions and just
09:31 - feel like you're not alone when you're
09:33 - learning this you're not sure if you're
09:34 - the worst if you're the best if you're
09:36 - even going at a decent pace or if you're
09:38 - making any progress when you have other
09:40 - people that are doing the same thing it
09:42 - kind of just gives you that peace of
09:43 - mind to know hey I'm not alone they're
09:45 - struggling with this too they found this
09:47 - difficult but they pushed forward and
09:49 - actually gives you quite a bit of
09:50 - motivation that's why in my software
09:52 - development course of course we have a
09:53 - community you can message directly with
09:55 - me what I find people often do in there
09:57 - is actually post their struggles and
09:59 - they'll say hey I'm having a lot of
10:00 - trouble with this module here do you
10:02 - guys have any advice I'm just feeling
10:04 - really down and other students will go
10:05 - in there and say hey I had the exact
10:07 - same thing I found this really really
10:09 - hard I did this this and this and I was
10:11 - able to progress forward keep going keep
10:13 - pushing you got this don't give up
10:15 - that's what 90% of the messages are and
10:17 - I find a lot of people really get that
10:19 - extra bit of motivation and are just
10:21 - able to push forward by having that nice
10:23 - community of people doing the same thing
10:25 - that they are so with that said guys I
10:27 - will wrap up the video here if you
10:28 - enjoyed make sure leave a like subscribe
10:30 - to the channel and I will see you in the
10:32 - next
10:32 - [Music]
10:39 - one

Cleaned transcript:

if I was starting completely from zero and wanted to learn to code as quickly as possible this is exactly what I would do the first thing is to figure out my goal it's impossible to make progress and understand why you're doing all of this work if you don't have an end goal in sight you need to ask yourself why do I want to learn to code maybe you want to make $100,000 a year you want to work at a tech company like Google maybe you want to start your own tech company or you just want to have Financial time and location freedom and work anywhere around the world that you want it's up to you but you need to write that goal down and remind yourself of it every single day so right now get a pen get a piece of paper and write down what you actually want why do you want to learn to code and how is that going to help you achieve your goal put this in a place where you can see it every single day and constantly remind yourself of that goal because I promise you this is a tough Journey things get difficult and you need that reminder and motivation to keep going and remember why you're doing all of this work now once you have your goal in mind this will help inform step number two which is to follow a curriculum you absolutely need to have a plan and you need to know exactly what you're learning and the order in which you're learning it this is crucial and this is going to help make sure that you know you're making progress and you're learning The Right Stuff half the battle when it comes to learning something new is knowing what to learn you don't yet know what you don't know and you don't know the topics that you actually need to figure out so I highly recommend finding a reputable curriculum or going through some kind of course or boot camp where you have a structured learning environment you're staying on track and you have a bit of accountability now for those of you that don't want to invest in something like that what I recommend doing is still finding one that you would have been interested in if it was free and simply copying the curriculum they have and then learning it on your own now I won't lie to you this will be a lot more difficult than if you actually went through the program but at least you have something that you can keep track of your progress with and you know the order of topics you should be learning now before you actually go and pick one of these curriculums you need to have a sense of what it is that you want to do in your development Journey so do you want to be a mobile app developer do you want to build websites do you not care do you just want to get a job as quickly as possible this will help inform the type of curriculum you enroll in so I recommend spending a day or two in just getting a general sense of what might interest you this can definitely change but you want to know maybe you're more interested in data science or you want to do machine learning or maybe you really just want to build mobile apps if you know that it's going to help direct you and really accelerate your progress when you're just starting out if you are someone where your sole goal is to raise your income or land a job as quickly as possible I do recommend checking out the curriculum from my software development course with course careers now whether or not you purchase this course you can see exactly what we run students through and how we help them be the best candidates for the job for an entry level position we do this by running you through software development fundamentals then a specialization in frontend backend or devops so by the time you're actually interviewing for jobs you're highly qualified and you have that specialized knowledge that quite a few candidates don't have have we also give you a Resume Builder interview tips you can connect directly with me and other coaches for help assistance Etc we show you how to set up your LinkedIn tons of stuff in there but let's move on to the next tip so now that you found your curriculum it's time to practice and you need to practice as much as you possibly can this is really what sets apart the okay developers from the great developers it's the amount of volume and the amount of practice that you've done you will not be a good developer you will not even feel confident to write code if you don't put in hundreds of hours of practice practice you need to sit at your computer you need to struggle you need to solve problems and you need to practice every single day when you're just getting started out especially if you want to do this really quickly what I highly recommend is setting aside longer time periods for doing your practice in a lot of people when they learn a new skill they maybe do 30 minutes a day or 45 minutes a day with coding it is possible to learn that way but it's going to take quite a bit longer and you really want to give yourself 2 or three hour long periods where you're able to really get focused you're able to have concentrated deep work and really feel like you're productive and efficient so that means no checking your phone no going on Instagram no putting a YouTube video on when I actually need to do serious coding work I have no volume on I put noise cancelling headphones no music and I sit at my computer and by the time I'm in 30 45 minutes worth of work that's when I really feel like I'm focused I'm dialed in and I get quite a bit done you need to be as focused and concentrated as possible you need to eliminate all distractions I know this is difficult but this is one of these tasks that really requires your complete Focus so practice every single day practice as often as you possibly can and give yourself longer time periods to allow yourself to really get dialed really get focused and be in that deep state where nothing's distracting you and all you're focused on is the task at hand which is learning to code so while you're doing your practice I want to remind you to be curious one of the best ways to get good at software development is to constantly ask questions and to try to mess with things break things try things on your own and ask why people are doing what they're doing this allows you to really get a deep understanding of what's going on and to make sure you're not skipping over things that you don't fully comprehend it's very difficult to get good at programming if you can't first Master those fundamentals and basic skills but a lot of times when you're watching videos or tutorials there's going to be a bunch of questions you have that just aren't answered so you need to go out of your way to answer those questions for yourself whether you do that in a community whether you ask like a course instructor or something or you go on stack Overflow or use chat gbt or you look it up it doesn't matter but you want to constantly be curious if you're watching a video tutorial and they do something that doesn't make sense copy that code mess around with it in your code editor see if you can figure out how it works ask yourself well if they did it this way doesn't that mean I could also do it this way right try Alternatives mess around break things get error messages this is really how you learn you need to constantly ask questions and wonder why is it working this way why did that happen why are they doing it like this if you can keep asking those questions this is building a really good habit and when you actually get into doing professional level programming that's almost always what other developers are doing they'll read your code and they'll ask the same question why did he do it this way I think it would be better to do this way and developers constantly have conversations about why code is written the way it was and if there's ways it could be improved if it could be done differently if it could be optimized Etc so get in that habit early be curious ask questions I promise it will teach you a lot now the next thing that's important especially in 2024 and Beyond is to utilize tools and resources there's so many great AI tools and resources online that can really help speed up your learning and answer questions for you way faster than I ever could have got the answer when I was learning how to code so chat gbt is one that I'll recommend to everyone while you're learning how to code you should have a chat gbt window open and you should use this as your personal assistant and personal tutor that means yeah now you want to try things on your own you don't want to just rely on this for everything but if you have a question and you're really stuck go and ask chat GPT especially for basic concepts this is great it will answer stuff super fast and it will allow you to paste in blocks of code and actually ask questions about it so let's say you're doing some practice exercise and you see my official solution and it makes no sense to you well you can take that solution paste that into chat gbt give it the problem as well and say hey this is the official solution I don't really understand how this works could you explain it to me line by line it will then go ahead and do that for you so continuing what's really going to bring everything full circle for you is when you actually start applying your knowledge by working on projects now I'm sure you've heard this before but it's so important I need to mention it and I do mention it and pretty much every single video at the beginning of your coding Journey you're going to get bombarded with Theory you're going to go through so much stuff it's going to feel overwhelming and it's going to feel like you're forgetting everything the only way to really nail that into your brain to remember it understand why it's important is to apply this into some type of project so you do need to get through those theoretical Parts before you can build something meaningful but once you learn a block of content or you've gone through a section or you've done a few lessons try to put that into a real world project a lot of courses at least if they're good they'll include projects for you they'll give you projects you can try on your own they'll show you how to build them but you really want to try being completely by yourself in a code editor with a goal your goal is to build this specific project once you have that you're going to ask yourself okay where do I start what do I even do here and you're going to start having so many questions that you need to now go and figure out and that is really what good developers are good at doing figuring things out so it's going to be hard it's going to be daunting it's going to be overwhelming but this is where you're going to learn and grow the most and you're going to be able to take those theoretical Concepts and apply them into a real world project so I'm just warning you your first few projects are going to seem impossible going to seem really really hard that's the point that's the goal and you need to have that perseverance to go and figure out how to solve them use your resources use AI tools use stack Overflow Google uh join a community ask for help whatever it may be you are the one who needs to figure out how to do this and you have the resources or should have the resources from the theory that you've learned now lastly I do recommend joining some type of community this is important because when you're going on this journey it's tough It's daunting you're going to lose motivation you're going to feel stuck and it's nice to have other people that are on the same Journey as you that you can relate to ask questions and just feel like you're not alone when you're learning this you're not sure if you're the worst if you're the best if you're even going at a decent pace or if you're making any progress when you have other people that are doing the same thing it kind of just gives you that peace of mind to know hey I'm not alone they're struggling with this too they found this difficult but they pushed forward and actually gives you quite a bit of motivation that's why in my software development course of course we have a community you can message directly with me what I find people often do in there is actually post their struggles and they'll say hey I'm having a lot of trouble with this module here do you guys have any advice I'm just feeling really down and other students will go in there and say hey I had the exact same thing I found this really really hard I did this this and this and I was able to progress forward keep going keep pushing you got this don't give up that's what 90% of the messages are and I find a lot of people really get that extra bit of motivation and are just able to push forward by having that nice community of people doing the same thing that they are so with that said guys I will wrap up the video here if you enjoyed make sure leave a like subscribe to the channel and I will see you in the next one
