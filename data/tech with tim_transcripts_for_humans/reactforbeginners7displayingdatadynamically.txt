With timestamps:

00:02 - [Music]
00:08 - hello everybody and welcome to another
00:10 - react tutorial for beginners
00:12 - in this video we're going to be looking
00:14 - at how we can display data specifically
00:16 - inventory items and how we can add
00:18 - inventory items
00:20 - to our kind of inventory management
00:22 - system now keep in mind that for now
00:24 - everything we're doing is kind of
00:25 - temporary as soon as you refresh the
00:27 - page all of this stuff is going to
00:28 - disappear
00:29 - but in future videos i will show you how
00:31 - we can hook this up to a very simple
00:32 - back end
00:33 - so we can have actual persistent
00:35 - information i'll show you how we can
00:36 - load that information
00:37 - and all that kind of stuff regardless
00:39 - the first thing i want to do here is
00:40 - just clean this code up a little bit
00:42 - so what i'm going to do is change this
00:44 - update data to be update
00:46 - filters so we'll call the search
00:48 - parameters kind of the filters for our
00:50 - data
00:50 - so this will be filters this will be
00:54 - filters this will be
00:58 - filters as well and then instead of
01:00 - update data this will be update filters
01:02 - now i'm going to remove all of these i
01:04 - don't actually want to be displaying any
01:06 - of them right now
01:07 - and we can wise use state giving us an
01:10 - error here so oh it's because i forgot
01:12 - the uh the other bracket okay so filter
01:14 - subfilters use state
01:15 - update filters callback update filters
01:18 - let's save uh let's refresh okay
01:22 - everything seems to be working now i'm
01:23 - going to change the name of this
01:24 - callback to
01:25 - to say update search
01:30 - params like that and then we're going to
01:32 - go into our other component so search
01:34 - bar and we're going to change from
01:36 - props.callback
01:37 - to props.updatesearch params all right
01:40 - so now it's all working the reason i did
01:41 - that is because we're actually going to
01:42 - have something else called data which is
01:44 - going to store our inventory items
01:46 - so in here i'm going to say const and
01:49 - i'm going to say data
01:50 - and then this will be set data what this
01:53 - will be equal to
01:54 - is use state and again we'll make this a
01:58 - uh actually what should we make this
01:59 - we'll make this a javascript object
02:01 - all right so yeah we'll have this be a
02:03 - javascript object and what we'll do
02:05 - inside of here is we'll have a key
02:06 - and we'll just call this key maybe items
02:09 - and items will store a list for now
02:11 - and then what we'll do is we'll add
02:12 - items to this list and it will display
02:15 - all of the items in the list and we'll
02:16 - see how that works in a minute
02:18 - regardless though what we need is we
02:19 - need some way to actually add items to
02:21 - this list and so we're going to make
02:23 - another component now which is just
02:24 - going to be a really simple input field
02:27 - that is going to look pretty much
02:28 - exactly like this it's going to have a
02:29 - name
02:30 - price and type and brand and then we're
02:32 - going to use that to actually insert
02:34 - items
02:34 - into our inventory and so let's actually
02:36 - just copy this search bar component so
02:38 - let's copy this
02:39 - let's make a new file let's call this
02:42 - add item
02:42 - dot js let's paste all this in
02:46 - let's change a few names so this is
02:47 - going to be add item instead of search
02:49 - bar so
02:50 - add item go down here and now export add
02:53 - item
02:55 - and then what we're going to do is just
02:56 - change a few of these fields so almost
02:57 - all of this will stay the same
02:59 - except rather than having the max price
03:02 - this is just going to say the price
03:04 - of the item okay so price that's fine
03:07 - price field price okay i think that's
03:10 - all right
03:10 - and then rather than having the search
03:12 - button pressed we're going to change
03:13 - this from search to say
03:15 - add item and then we're going to change
03:18 - this to say
03:18 - add item button pressed so we'll say add
03:21 - item like that
03:23 - and then we'll change the name to be add
03:26 - item button pressed and then here rather
03:28 - than props that update search parameters
03:30 - we're going to say props dot
03:32 - add item and all we'll do is just pass
03:34 - the item that we want to add so in this
03:35 - case this is exactly what we want we
03:36 - want the name the price the type
03:38 - and the brand okay so that is simple
03:41 - enough
03:42 - let's go ahead and save that and now
03:44 - let's render this add item component
03:46 - to see what this looks like so actually
03:48 - sorry the title of this needs to change
03:49 - as well rather than search for an item
03:50 - we'll say add
03:52 - and item okay and actually is this add a
03:54 - item i think that's probably the
03:56 - the correct way to put that okay so
03:58 - let's go back to app.js let's
04:00 - import this we're going to say from
04:03 - or sorry not from i'm typing in python
04:05 - right now i'm going to say import
04:07 - add item from and then dot slash add
04:10 - item
04:11 - okay so now let's render this so let's
04:14 - go here and say add item
04:16 - like that and actually i want to end the
04:18 - tag in a different way so we'll just do
04:20 - it
04:20 - that way okay nice now we need to pass
04:23 - to this a callback function that
04:25 - function is going to allow us to
04:26 - actually
04:26 - change the data here right to add an
04:28 - item so i'm going to say const
04:30 - add item to let's just say data and then
04:33 - this will be equal to an arrow function
04:36 - and then what we will do is we will say
04:38 - add item
04:39 - is equal to and then the function name
04:41 - which is add
04:42 - item to data we will take in here
04:45 - the item like that and then what we're
04:48 - going to do in here is just add it into
04:49 - items
04:50 - so since we're storing a list inside of
04:53 - this state here right so for items
04:55 - what we need to do is we need to first
04:57 - grab whatever is in the state so we're
04:59 - going to say
05:00 - const or actually not const we're going
05:03 - to say let
05:04 - and current data
05:07 - equals data and then what we're going to
05:09 - do is say data
05:11 - at the key items and then
05:14 - dot push and we're going to push in the
05:16 - item
05:17 - then we're going to say set data and
05:20 - we're going to set this to be equal to
05:22 - the sorry this says current data so
05:25 - we'll say
05:26 - current data like that
05:29 - okay so hopefully this is kind of clear
05:30 - what we're doing is restoring the state
05:32 - in a variable called current data
05:34 - then we're going to push this item into
05:36 - current data we're then going to say set
05:38 - data is equal to
05:39 - current data and that's all we need to
05:41 - do and in fact to do this a little bit
05:43 - nicer we're actually going to say
05:44 - current data is equal to data at items
05:46 - we're going to change rather than
05:47 - current data
05:49 - we're just going to make this equal to
05:50 - items we're going to change this to just
05:52 - say
05:53 - items dot push and it'll push the item
05:56 - in and then we will set
05:58 - data and then we will actually manually
06:00 - write in the items key and make this
06:01 - equal to
06:02 - items okay i know that was a lot uh
06:05 - maybe a little bit confusing but all
06:07 - we're doing is we're just taking
06:08 - the array that's here storing it in a
06:10 - variable adding an item to it and then
06:12 - resetting it in our data this is kind of
06:14 - just the way you need to set
06:15 - uh the state when you have a list in it
06:18 - there's a few other ways to do it but
06:19 - this is the way that i'm going to go
06:20 - with
06:21 - awesome so now when we actually add
06:22 - something it should add that item into
06:24 - the data
06:25 - and what i want to do is i want to
06:26 - actually look at this data so let's just
06:28 - console.log
06:30 - the data after we call this function
06:32 - just so we can see what it looks like so
06:34 - let's const.log
06:36 - data like that all right so we're going
06:38 - to go to inspect now
06:39 - and let's add some item in so let's go
06:41 - name we can just say this is going to be
06:44 - i don't know what's an item we might buy
06:47 - cookies okay let's make the price
06:49 - to 99. uh we can make the type
06:53 - chocolate or actually we'll just say
06:55 - maybe
06:56 - raisin do you guys like raisin cookies
06:58 - let me know okay brand
07:00 - um do we need a brand for this we can
07:02 - just say original okay
07:03 - so add item when i press that it says
07:05 - items array we can look at the items we
07:07 - see we have
07:08 - name cookies we have blah blah all the
07:10 - other stuff uh associated with it it's
07:12 - kind of cutting off
07:13 - if i if i move this over maybe we can
07:15 - see it yes okay cookies price
07:17 - type and brand nice now let's add
07:19 - another item so we can just add that and
07:21 - now we're going to see we have two items
07:22 - in the array
07:22 - now if we look at these these are two
07:24 - identical items awesome so we'll
07:26 - look at how to display those items in
07:28 - one second but first i want to make it
07:29 - so that we actually
07:30 - clear this add item kind of form here or
07:33 - field
07:33 - as soon as we call this callback
07:35 - function so let's go ahead and do that
07:37 - so after i add the item
07:39 - and i do this here i call this function
07:42 - i want to clear the state so what i'm
07:43 - going to do is say set name
07:46 - and we're just going to set it equal to
07:47 - an empty string i'm going to say set
07:49 - price and we can just set this back to
07:51 - b0
07:53 - we're going to say set type make this an
07:55 - empty string
07:56 - and then we're going to say set brand
08:00 - and same thing in empty string so now if
08:02 - i come back over here
08:04 - and i press add item you can see that it
08:06 - clears there's now three items in the
08:08 - array
08:09 - and there you go all is good and if i
08:11 - press add item again
08:12 - notice we have now another item and this
08:15 - one is just kind of empty right because
08:17 - we didn't fill in all those values
08:18 - nice so that is now working so we will
08:21 - continue in one second but i need to
08:22 - quickly thank the sponsor of this video
08:24 - and this series which is algo
08:26 - expert algo xp is the best platform to
08:28 - use when preparing for your software
08:29 - engineering coding interviews
08:31 - each question has a detailed video
08:32 - explanation and code walkthrough
08:34 - that is taught by a great instructor i
08:37 - am actually an instructor on
08:38 - algo expert a bunch of the questions on
08:40 - there are made by me
08:41 - you can get started using algo expert
08:43 - today by clicking the link in the
08:44 - description and using the code tech with
08:46 - tim for a discount on the platform
08:48 - all right so now that we have some way
08:49 - to search for an item or at least to get
08:50 - the search parameters and some way to
08:52 - add an item
08:53 - i want to take all of the data that is
08:55 - in app.js here
08:56 - and what i want to do is i actually want
08:58 - to use it to display
09:00 - the information right so how are we
09:02 - going to do that well i'm actually going
09:03 - to build another component now that will
09:05 - kind of be our data display
09:07 - and we'll pass all of our data to it
09:09 - through a prop so let's make a new
09:11 - component
09:11 - and let's call this data display
09:15 - dot js and actually maybe we'll call
09:18 - this items display
09:20 - yeah items display seems to work for me
09:21 - so items display
09:23 - dot js now inside of here what i'm going
09:25 - to do is make my function so if i
09:27 - say function and then
09:30 - items display we'll take in
09:33 - some props and then we will return
09:36 - whatever we want to render so in this
09:38 - case we'll do a div
09:40 - like that all right so what i want to
09:42 - pass to items display we need to export
09:44 - this let's say
09:44 - export default and then
09:48 - this is items display
09:51 - like that what i want to pass to this so
09:53 - let's go to app.js
09:55 - is our data right or all of our items so
09:57 - now
09:58 - in between this search bar and the ad
10:00 - item i will render
10:01 - my items display so we need to import
10:03 - that i'm going to say
10:04 - import items display
10:08 - from and then items display
10:12 - like that all right so now let's use it
10:15 - we'll say items display and then end the
10:18 - tag and we will say
10:19 - our items are equal to
10:22 - our data at items sweet so now we are
10:26 - actually passing that through
10:28 - it's in cannot find items display did i
10:31 - spell this wrong or something items
10:32 - display
10:33 - dot js let's just save that refresh
10:37 - can't resolve items display in react
10:40 - okay for some reason that's not working
10:42 - i don't know why that's
10:44 - not working it should be importing it
10:46 - for us items
10:47 - display items display ah okay so it's
10:50 - because i forgot the dot slash
10:52 - so now if i save this you can see that
10:54 - everything is working
10:55 - sweet so now what i want to do though is
10:57 - i want to actually look at all of the
10:59 - items right so i'm passing them through
11:00 - items equals data items but i need to
11:02 - render them
11:03 - in this component so to render them in
11:05 - this component i'm going to show you how
11:06 - we can render all of them at the same
11:08 - time
11:08 - using something known as map so what i'm
11:11 - going to do inside of here is start
11:12 - writing some javascript code i'm going
11:13 - to say
11:14 - prompts dot and then this is going to be
11:16 - items
11:17 - dot map and inside of here i'm going to
11:20 - write a function
11:21 - i'm going to write an arrow function and
11:23 - what this function is going to return is
11:25 - a component that should be rendered
11:27 - for every single one of these items so
11:29 - inside of the parameters here i'm going
11:30 - to say item
11:31 - item will be equal to one of the items
11:34 - in the items list and in case you're
11:37 - unfamiliar with map
11:38 - what it does is it takes all of the
11:40 - items that are inside of a list
11:42 - and it maps them to a function so a
11:43 - function runs for every single one of
11:45 - those items and then you can return
11:47 - something from those functions
11:48 - and what that return value is will
11:50 - actually be rendered to the screen so to
11:52 - do this really simply right now
11:53 - if i just make a p tag and i say name
11:56 - colon and then i do this equal to
11:59 - actually i don't do that i can just say
12:01 - item dot name
12:03 - uh this should be good actually now that
12:05 - i'm thinking about it
12:07 - i might need to put this yes i do okay
12:10 - so i do need to put this inside of curly
12:12 - braces
12:12 - but if i do this now you should actually
12:15 - see that if i start adding items they
12:17 - show up so let's try this
12:19 - let's go name cookies price
12:22 - 2.99 say original
12:26 - brands none add item and
12:29 - actually nothing happened there okay so
12:31 - let me go to inspect and see if we're
12:32 - getting an error
12:33 - looks like we are printing something out
12:36 - but nothing is being rendered on the
12:37 - screen
12:38 - so i realized why that was happening i
12:39 - forgot to actually return anything from
12:42 - this function so we do need to return
12:44 - something
12:44 - and now if we return something you can
12:46 - see name cookies is
12:48 - showing up okay so my bad on that guys
12:50 - make sure when you're using map and you
12:51 - define
12:52 - this function which i've done here you
12:53 - actually return a value if you don't
12:55 - return a value
12:56 - then obviously well nothing is going to
12:58 - show up so now you can see we have
12:59 - name cookies and then we can show the
13:01 - rest of the stuff that we want as well
13:03 - so let's just make a div
13:04 - and inside of here we'll just do a bunch
13:06 - of p tags that show all of the stuff so
13:09 - let's copy that let's paste that a few
13:13 - times
13:14 - um what's the problem here return
13:17 - div i think that needs to be inside of a
13:21 - parenthesis for some reason it's giving
13:23 - me an error it says
13:24 - uh what is it saying here div has no
13:26 - corresponding closing tag oh it's
13:28 - because that needs to be slash diff
13:29 - okay so now we're good now we have name
13:31 - but i don't want to just display name
13:33 - i want to display the price so we'll say
13:35 - item dot and then
13:37 - this will be price and i want to display
13:40 - the type so item dot
13:43 - type and then the brand as well so let's
13:46 - go brand and then item dot
13:49 - brand nice now we have name price type
13:51 - and brand
13:52 - and then finally i want to display kind
13:54 - of the id of this item and the id of
13:56 - this item
13:57 - uh for me is actually just going to be
13:58 - whatever its index is in the list and so
14:00 - we can just put at the very
14:02 - top we can say p slash p
14:05 - and then actually to get the index in
14:07 - the list i don't
14:08 - know if that's possible like this so
14:11 - what we're going to do is add
14:12 - a field to our data when we add it in so
14:15 - if you go here to app.js
14:18 - notice here what we're doing is we're
14:19 - pushing this item in before we push this
14:22 - item in what i want to do is add a field
14:24 - to it that defines what the id of this
14:26 - item is
14:27 - the id of this item will be the order in
14:28 - which it was inserted so whatever the
14:30 - index of it's going to be in the array
14:32 - the way we can figure this out is we can
14:34 - say items dot and then id
14:36 - is equal to and then this will be items
14:39 - dot and i think it's is it length or is
14:42 - it size i always forget
14:43 - in javascript i think you can use length
14:45 - and then that will be the id of this
14:46 - item
14:47 - okay so hopefully that's going to work
14:49 - we will see in one second
14:50 - so now here i'll say the id is equal to
14:53 - and then
14:54 - item.id and now what we're going to have
14:56 - to do is refresh
14:58 - and add a new item so let's go name
15:00 - cookies let's go
15:01 - price 299. let's go type we can say you
15:05 - know
15:05 - vanilla or something brand uh you know
15:08 - normal whatever
15:09 - now if i press add item okay the id is
15:12 - empty for some reason i don't know why
15:14 - the id
15:15 - is empty oh it's because i'm saying
15:17 - items.id
15:18 - not item.id mybad on that let me refresh
15:21 - this we're going to have to add a new
15:22 - item
15:23 - so let's go cookies price 2.99 we'll
15:27 - leave the others blank
15:28 - press add item and then notice our id is
15:30 - zero
15:31 - so let's add another item let's just add
15:33 - uh i don't know what do we want to add
15:35 - here
15:35 - we can add some water this can be 299
15:39 - the brand can be the sani i think that's
15:41 - how you spell it even though that's my
15:43 - least favorite type of water
15:44 - and then type we'll just say i don't
15:46 - know normal whatever and then add item
15:48 - and now notice it has id one okay so
15:51 - that is how you display
15:52 - multiple items let me just quickly run
15:54 - through what we've done here i know i
15:55 - kind of went through a lot and was
15:56 - skipping through some stuff but i just
15:57 - wanted to get some code down on the page
15:59 - here
15:59 - so let's go to items display inside of
16:01 - items display we're taking one prop that
16:03 - prop
16:04 - is items and then what we do is we
16:06 - actually return
16:07 - or render using map a bunch of separate
16:10 - kind of components here or divs that
16:12 - display this item
16:14 - and so the way we did that is we said
16:15 - props items.map
16:17 - what this means now is run whatever
16:19 - function we put inside of this map here
16:22 - and whatever it returns we're going to
16:23 - show that on the screen
16:25 - and so here we're running this function
16:27 - that takes the item the item is one of
16:28 - the items from the items list
16:30 - it grabs his id name price type and
16:32 - brand kind of nicely displays that and
16:34 - then returns a div and that div gets
16:36 - rendered onto the screen and that's kind
16:38 - of how this works
16:39 - now if you didn't want this to be so
16:40 - messy you could take this function here
16:43 - and you could put it inside of its own
16:46 - function right like i could say
16:48 - const and we can say you know show item
16:52 - is equal to and then an item and then
16:55 - this will be equal to an
16:56 - arrow function and then here what we can
16:59 - do is just have this return statement
17:01 - and now if i remove that parenthesis
17:04 - this actually should work if i pass
17:06 - in show item like that so now if i pass
17:09 - show item what i'm doing is just using
17:11 - the function that i define here works
17:13 - the exact same way except we just kind
17:14 - of move the function rather than being
17:16 - in line to a named function called show
17:18 - item so let's try this let's just go
17:20 - cookies and just add it in
17:21 - and notice it still works the same way
17:23 - as it did before
17:25 - awesome so that is how the items display
17:27 - works now if we go to the search bar
17:29 - we actually already looked at that so we
17:30 - don't need to look at it again but we
17:31 - can look at add item
17:32 - inside of add item this is very similar
17:34 - to the search bar
17:35 - all we're doing is when we press this
17:37 - button we're calling the add
17:38 - item button pressed we are then calling
17:41 - a callback function that was passed to
17:42 - us in the props
17:44 - from app.js and then we're going to pass
17:47 - the name price
17:48 - type and brand kind of the search
17:50 - parameters or the filters if you want to
17:52 - call it that
17:52 - and then what will happen is we will set
17:54 - the filters to be equal to whatever was
17:56 - passed to this callback function
17:58 - so that will change the state here and
18:00 - then we have add item to data this is
18:02 - the callback function that we passed
18:04 - to our ad item and what happens is
18:06 - whenever we
18:07 - create an item here so we press that add
18:08 - item button it's going to pass all the
18:10 - details of that item to this function
18:12 - we're then going to get the list of
18:14 - items we already have from our state so
18:16 - from data
18:17 - we're then going to figure out what the
18:19 - id of our next item is going to be so
18:20 - whatever the length
18:21 - length of this list is is the id of the
18:23 - next item we'll then push the item in
18:25 - we will then set the data to be equal to
18:27 - this new items array
18:29 - that we've kind of modified here and
18:31 - then we're console.logging it
18:32 - and of course we're rendering all of
18:34 - this stuff all right so that is a pretty
18:36 - good start
18:37 - for this application in the next video
18:39 - what i will do is show you kind of how
18:40 - we can style this and then we will
18:42 - actually make it so we're filtering the
18:44 - items that are showing up
18:45 - based on the search in a different video
18:46 - i was going to do that here but the
18:48 - video is getting kind of long
18:49 - so we'll kind of you know push that
18:50 - forward to another video in the future
18:52 - anyways i hope you guys enjoyed if you
18:54 - did make sure to leave a like subscribe
18:55 - to the channel i will see you in the
18:57 - next
18:57 - react tutorial

Cleaned transcript:

hello everybody and welcome to another react tutorial for beginners in this video we're going to be looking at how we can display data specifically inventory items and how we can add inventory items to our kind of inventory management system now keep in mind that for now everything we're doing is kind of temporary as soon as you refresh the page all of this stuff is going to disappear but in future videos i will show you how we can hook this up to a very simple back end so we can have actual persistent information i'll show you how we can load that information and all that kind of stuff regardless the first thing i want to do here is just clean this code up a little bit so what i'm going to do is change this update data to be update filters so we'll call the search parameters kind of the filters for our data so this will be filters this will be filters this will be filters as well and then instead of update data this will be update filters now i'm going to remove all of these i don't actually want to be displaying any of them right now and we can wise use state giving us an error here so oh it's because i forgot the uh the other bracket okay so filter subfilters use state update filters callback update filters let's save uh let's refresh okay everything seems to be working now i'm going to change the name of this callback to to say update search params like that and then we're going to go into our other component so search bar and we're going to change from props.callback to props.updatesearch params all right so now it's all working the reason i did that is because we're actually going to have something else called data which is going to store our inventory items so in here i'm going to say const and i'm going to say data and then this will be set data what this will be equal to is use state and again we'll make this a uh actually what should we make this we'll make this a javascript object all right so yeah we'll have this be a javascript object and what we'll do inside of here is we'll have a key and we'll just call this key maybe items and items will store a list for now and then what we'll do is we'll add items to this list and it will display all of the items in the list and we'll see how that works in a minute regardless though what we need is we need some way to actually add items to this list and so we're going to make another component now which is just going to be a really simple input field that is going to look pretty much exactly like this it's going to have a name price and type and brand and then we're going to use that to actually insert items into our inventory and so let's actually just copy this search bar component so let's copy this let's make a new file let's call this add item dot js let's paste all this in let's change a few names so this is going to be add item instead of search bar so add item go down here and now export add item and then what we're going to do is just change a few of these fields so almost all of this will stay the same except rather than having the max price this is just going to say the price of the item okay so price that's fine price field price okay i think that's all right and then rather than having the search button pressed we're going to change this from search to say add item and then we're going to change this to say add item button pressed so we'll say add item like that and then we'll change the name to be add item button pressed and then here rather than props that update search parameters we're going to say props dot add item and all we'll do is just pass the item that we want to add so in this case this is exactly what we want we want the name the price the type and the brand okay so that is simple enough let's go ahead and save that and now let's render this add item component to see what this looks like so actually sorry the title of this needs to change as well rather than search for an item we'll say add and item okay and actually is this add a item i think that's probably the the correct way to put that okay so let's go back to app.js let's import this we're going to say from or sorry not from i'm typing in python right now i'm going to say import add item from and then dot slash add item okay so now let's render this so let's go here and say add item like that and actually i want to end the tag in a different way so we'll just do it that way okay nice now we need to pass to this a callback function that function is going to allow us to actually change the data here right to add an item so i'm going to say const add item to let's just say data and then this will be equal to an arrow function and then what we will do is we will say add item is equal to and then the function name which is add item to data we will take in here the item like that and then what we're going to do in here is just add it into items so since we're storing a list inside of this state here right so for items what we need to do is we need to first grab whatever is in the state so we're going to say const or actually not const we're going to say let and current data equals data and then what we're going to do is say data at the key items and then dot push and we're going to push in the item then we're going to say set data and we're going to set this to be equal to the sorry this says current data so we'll say current data like that okay so hopefully this is kind of clear what we're doing is restoring the state in a variable called current data then we're going to push this item into current data we're then going to say set data is equal to current data and that's all we need to do and in fact to do this a little bit nicer we're actually going to say current data is equal to data at items we're going to change rather than current data we're just going to make this equal to items we're going to change this to just say items dot push and it'll push the item in and then we will set data and then we will actually manually write in the items key and make this equal to items okay i know that was a lot uh maybe a little bit confusing but all we're doing is we're just taking the array that's here storing it in a variable adding an item to it and then resetting it in our data this is kind of just the way you need to set uh the state when you have a list in it there's a few other ways to do it but this is the way that i'm going to go with awesome so now when we actually add something it should add that item into the data and what i want to do is i want to actually look at this data so let's just console.log the data after we call this function just so we can see what it looks like so let's const.log data like that all right so we're going to go to inspect now and let's add some item in so let's go name we can just say this is going to be i don't know what's an item we might buy cookies okay let's make the price to 99. uh we can make the type chocolate or actually we'll just say maybe raisin do you guys like raisin cookies let me know okay brand um do we need a brand for this we can just say original okay so add item when i press that it says items array we can look at the items we see we have name cookies we have blah blah all the other stuff uh associated with it it's kind of cutting off if i if i move this over maybe we can see it yes okay cookies price type and brand nice now let's add another item so we can just add that and now we're going to see we have two items in the array now if we look at these these are two identical items awesome so we'll look at how to display those items in one second but first i want to make it so that we actually clear this add item kind of form here or field as soon as we call this callback function so let's go ahead and do that so after i add the item and i do this here i call this function i want to clear the state so what i'm going to do is say set name and we're just going to set it equal to an empty string i'm going to say set price and we can just set this back to b0 we're going to say set type make this an empty string and then we're going to say set brand and same thing in empty string so now if i come back over here and i press add item you can see that it clears there's now three items in the array and there you go all is good and if i press add item again notice we have now another item and this one is just kind of empty right because we didn't fill in all those values nice so that is now working so we will continue in one second but i need to quickly thank the sponsor of this video and this series which is algo expert algo xp is the best platform to use when preparing for your software engineering coding interviews each question has a detailed video explanation and code walkthrough that is taught by a great instructor i am actually an instructor on algo expert a bunch of the questions on there are made by me you can get started using algo expert today by clicking the link in the description and using the code tech with tim for a discount on the platform all right so now that we have some way to search for an item or at least to get the search parameters and some way to add an item i want to take all of the data that is in app.js here and what i want to do is i actually want to use it to display the information right so how are we going to do that well i'm actually going to build another component now that will kind of be our data display and we'll pass all of our data to it through a prop so let's make a new component and let's call this data display dot js and actually maybe we'll call this items display yeah items display seems to work for me so items display dot js now inside of here what i'm going to do is make my function so if i say function and then items display we'll take in some props and then we will return whatever we want to render so in this case we'll do a div like that all right so what i want to pass to items display we need to export this let's say export default and then this is items display like that what i want to pass to this so let's go to app.js is our data right or all of our items so now in between this search bar and the ad item i will render my items display so we need to import that i'm going to say import items display from and then items display like that all right so now let's use it we'll say items display and then end the tag and we will say our items are equal to our data at items sweet so now we are actually passing that through it's in cannot find items display did i spell this wrong or something items display dot js let's just save that refresh can't resolve items display in react okay for some reason that's not working i don't know why that's not working it should be importing it for us items display items display ah okay so it's because i forgot the dot slash so now if i save this you can see that everything is working sweet so now what i want to do though is i want to actually look at all of the items right so i'm passing them through items equals data items but i need to render them in this component so to render them in this component i'm going to show you how we can render all of them at the same time using something known as map so what i'm going to do inside of here is start writing some javascript code i'm going to say prompts dot and then this is going to be items dot map and inside of here i'm going to write a function i'm going to write an arrow function and what this function is going to return is a component that should be rendered for every single one of these items so inside of the parameters here i'm going to say item item will be equal to one of the items in the items list and in case you're unfamiliar with map what it does is it takes all of the items that are inside of a list and it maps them to a function so a function runs for every single one of those items and then you can return something from those functions and what that return value is will actually be rendered to the screen so to do this really simply right now if i just make a p tag and i say name colon and then i do this equal to actually i don't do that i can just say item dot name uh this should be good actually now that i'm thinking about it i might need to put this yes i do okay so i do need to put this inside of curly braces but if i do this now you should actually see that if i start adding items they show up so let's try this let's go name cookies price 2.99 say original brands none add item and actually nothing happened there okay so let me go to inspect and see if we're getting an error looks like we are printing something out but nothing is being rendered on the screen so i realized why that was happening i forgot to actually return anything from this function so we do need to return something and now if we return something you can see name cookies is showing up okay so my bad on that guys make sure when you're using map and you define this function which i've done here you actually return a value if you don't return a value then obviously well nothing is going to show up so now you can see we have name cookies and then we can show the rest of the stuff that we want as well so let's just make a div and inside of here we'll just do a bunch of p tags that show all of the stuff so let's copy that let's paste that a few times um what's the problem here return div i think that needs to be inside of a parenthesis for some reason it's giving me an error it says uh what is it saying here div has no corresponding closing tag oh it's because that needs to be slash diff okay so now we're good now we have name but i don't want to just display name i want to display the price so we'll say item dot and then this will be price and i want to display the type so item dot type and then the brand as well so let's go brand and then item dot brand nice now we have name price type and brand and then finally i want to display kind of the id of this item and the id of this item uh for me is actually just going to be whatever its index is in the list and so we can just put at the very top we can say p slash p and then actually to get the index in the list i don't know if that's possible like this so what we're going to do is add a field to our data when we add it in so if you go here to app.js notice here what we're doing is we're pushing this item in before we push this item in what i want to do is add a field to it that defines what the id of this item is the id of this item will be the order in which it was inserted so whatever the index of it's going to be in the array the way we can figure this out is we can say items dot and then id is equal to and then this will be items dot and i think it's is it length or is it size i always forget in javascript i think you can use length and then that will be the id of this item okay so hopefully that's going to work we will see in one second so now here i'll say the id is equal to and then item.id and now what we're going to have to do is refresh and add a new item so let's go name cookies let's go price 299. let's go type we can say you know vanilla or something brand uh you know normal whatever now if i press add item okay the id is empty for some reason i don't know why the id is empty oh it's because i'm saying items.id not item.id mybad on that let me refresh this we're going to have to add a new item so let's go cookies price 2.99 we'll leave the others blank press add item and then notice our id is zero so let's add another item let's just add uh i don't know what do we want to add here we can add some water this can be 299 the brand can be the sani i think that's how you spell it even though that's my least favorite type of water and then type we'll just say i don't know normal whatever and then add item and now notice it has id one okay so that is how you display multiple items let me just quickly run through what we've done here i know i kind of went through a lot and was skipping through some stuff but i just wanted to get some code down on the page here so let's go to items display inside of items display we're taking one prop that prop is items and then what we do is we actually return or render using map a bunch of separate kind of components here or divs that display this item and so the way we did that is we said props items.map what this means now is run whatever function we put inside of this map here and whatever it returns we're going to show that on the screen and so here we're running this function that takes the item the item is one of the items from the items list it grabs his id name price type and brand kind of nicely displays that and then returns a div and that div gets rendered onto the screen and that's kind of how this works now if you didn't want this to be so messy you could take this function here and you could put it inside of its own function right like i could say const and we can say you know show item is equal to and then an item and then this will be equal to an arrow function and then here what we can do is just have this return statement and now if i remove that parenthesis this actually should work if i pass in show item like that so now if i pass show item what i'm doing is just using the function that i define here works the exact same way except we just kind of move the function rather than being in line to a named function called show item so let's try this let's just go cookies and just add it in and notice it still works the same way as it did before awesome so that is how the items display works now if we go to the search bar we actually already looked at that so we don't need to look at it again but we can look at add item inside of add item this is very similar to the search bar all we're doing is when we press this button we're calling the add item button pressed we are then calling a callback function that was passed to us in the props from app.js and then we're going to pass the name price type and brand kind of the search parameters or the filters if you want to call it that and then what will happen is we will set the filters to be equal to whatever was passed to this callback function so that will change the state here and then we have add item to data this is the callback function that we passed to our ad item and what happens is whenever we create an item here so we press that add item button it's going to pass all the details of that item to this function we're then going to get the list of items we already have from our state so from data we're then going to figure out what the id of our next item is going to be so whatever the length length of this list is is the id of the next item we'll then push the item in we will then set the data to be equal to this new items array that we've kind of modified here and then we're console.logging it and of course we're rendering all of this stuff all right so that is a pretty good start for this application in the next video what i will do is show you kind of how we can style this and then we will actually make it so we're filtering the items that are showing up based on the search in a different video i was going to do that here but the video is getting kind of long so we'll kind of you know push that forward to another video in the future anyways i hope you guys enjoyed if you did make sure to leave a like subscribe to the channel i will see you in the next react tutorial
