With timestamps:

00:00 - you just completed your four or fiveyear
00:02 - computer science degree you struggled
00:04 - through those difficult math classes you
00:06 - took all those useless electives and you
00:08 - spend tens if not hundreds of thousands
00:10 - of dollars to get this piece of paper
00:13 - that should mean that you're ready to go
00:14 - out into the workplace get a high-paying
00:17 - job and start an amazing career as a
00:19 - software developer right well actually
00:22 - that couldn't be further from the truth
00:24 - unfortunately a computer science degree
00:26 - today really doesn't prepare you for
00:28 - what you actually need to land job and
00:30 - I'm sorry to be the one telling you this
00:32 - but there's actually a lot of other
00:33 - things you need to do if you want to
00:35 - land a job as a software developer this
00:37 - video aims to be a reality check for a
00:39 - lot of you that are going through the
00:41 - degree right now or ones that are
00:42 - considering doing it sure it can be a
00:45 - useful asset but you have to combine it
00:47 - with a lot of other skills otherwise
00:49 - you're going to be very disappointed
00:50 - when you graduate the degree and there's
00:52 - not a lineup of companies waiting to
00:54 - hire you so with that said let's get
00:56 - into this video where I break down the
00:57 - truth about a computer science degree
01:00 - and what you actually need to do while
01:01 - you're in the degree or after you finish
01:03 - if you want to land a job let's begin
01:06 - with the unfortunate reality first of
01:08 - all most of what you're learning in a
01:10 - computer science degree you do not need
01:12 - to know and it's not going to help you
01:13 - land a job only about 25% of the
01:16 - curriculum that I learned during my
01:18 - computer science degree I actually
01:20 - needed to know for a job and I found
01:22 - useful later in life most of the things
01:24 - that you're learning you just don't need
01:26 - to know unless you're going into a very
01:28 - specialized role in which case you need
01:30 - the math you need the theory and maybe
01:31 - you need some of the other electives
01:33 - that you're forced to take but for 90%
01:35 - of you a lot of what you're doing really
01:37 - is a waste of your time and you're
01:38 - purely going through it to get this
01:40 - degree now beyond that having a computer
01:43 - science degree does not correlate to
01:44 - your ability to code I know many people
01:47 - that have a computer science degree that
01:49 - really can't write code to save their
01:51 - lives they are not good software
01:53 - developers and they're never going to
01:54 - land a software development jump some
01:56 - people just shouldn't be software
01:58 - developers and having a computer science
02:00 - degree or not isn't going to change that
02:02 - fact it takes a certain personality type
02:05 - and a certain work ethic to be able to
02:07 - land these type of positions and
02:08 - unfortunately some people just can't do
02:10 - this now a lot of companies actually
02:12 - realize this they know that having a
02:14 - computer science degree has a weak
02:16 - correlation to who makes a good software
02:18 - engineer that's why they're either
02:19 - dropping their computer science degree
02:21 - requirement or they're adding additional
02:23 - steps so they can actually screen people
02:25 - that would make good Engineers look at
02:27 - big companies like Google Microsoft
02:29 - Facebook Etc none of them require a
02:32 - degree and they have a strict interview
02:34 - process to get the best signals possible
02:36 - for who actually makes a good software
02:38 - developer lastly whether you have a
02:40 - degree or not most of what you actually
02:42 - need to know to land a job you'll learn
02:45 - outside of the degree this is just the
02:47 - reality when it comes to software
02:48 - development things are changing very
02:50 - quickly universities can't keep up with
02:53 - what you actually need to know every few
02:55 - years it's a new framework or language
02:57 - or a new requirement for certain jobs
02:59 - you universities can't roll that into
03:01 - the curriculum quick enough and that
03:02 - means you need to stay up to date you
03:04 - need to be learning constantly and you
03:06 - really need to put a lot of things into
03:08 - practice that you just don't get when
03:10 - you go through a computer science degree
03:12 - the reason I'm telling this to you is
03:13 - that a lot of people think getting this
03:15 - degree is just their magic gateway to a
03:17 - great career and a high-paying job
03:19 - unfortunately that couldn't be further
03:21 - from the truth and whether you have one
03:22 - or not most of the work you'll do that
03:24 - will help you land a position will be
03:26 - outside of that degree so keep that in
03:29 - mind and please please don't think after
03:30 - you get this piece of paper that you're
03:32 - ready and you're going to have a lineup
03:33 - of companies waiting to hire you because
03:35 - that's going to be a hard reality check
03:38 - so with all that said let me break down
03:40 - what you actually need to learn if you
03:41 - want to become a software developer so
03:44 - I'm going to give you a general list
03:45 - here of the main topics and skills
03:47 - companies are actually looking for
03:49 - especially in their junior hires now
03:52 - keep in mind that if you were to just
03:53 - focus on this it would take you
03:55 - significantly less time than going
03:57 - through a computer science degree and
03:58 - even though you don't have that
04:00 - requirement a lot of jobs will still
04:02 - hire you in fact most jobs that list a
04:04 - computer science degree as requirement
04:06 - will wave that if you exceed the
04:08 - expectations and I've had that happen to
04:10 - me and many other people I know for
04:12 - example we have a student going through
04:14 - my software development program with
04:15 - course careers he finished the entire
04:17 - program and landed a job in under 4
04:20 - months before that he had very limited
04:22 - experience he did not have the computer
04:24 - science degree he was able to land a job
04:26 - in just a few weeks after getting out of
04:27 - the program and that's because he spent
04:29 - 10 hours per day studying these topics
04:32 - and actually learning exactly what he
04:33 - needed to know with the right guidance
04:35 - rather than going through this degree
04:37 - where he had to spend four years
04:38 - learning a bunch of useless things and
04:40 - then on top of that learn a lot more you
04:42 - can check that out from the link in the
04:43 - description if you want but it's just a
04:44 - case study to prove to you this is
04:46 - possible and although a lot of people
04:48 - will tell you you need a degree that's
04:50 - absolutely not true and I have countless
04:52 - examples of people that have done it
04:53 - without it regardless let's go through
04:55 - the list here of what you actually want
04:57 - to focus on and what you'll need to
04:58 - learn whether you're in the agree or not
05:00 - now the first thing that companies are
05:02 - really looking for is that you have the
05:04 - ability to build something on your own
05:06 - you're independent you can problem solve
05:09 - you can figure things out and you
05:11 - understand how to build something like a
05:12 - large application now this doesn't need
05:14 - to be Twitter or Facebook or something
05:16 - insane but you really should have a
05:17 - fundamental understanding of what the
05:19 - front end is what the back end is what
05:21 - an API is and how data flows throughout
05:24 - an application a lot of time companies
05:26 - will ask you to explain projects that
05:28 - you've worked on and this this is what
05:30 - they're looking for how you made
05:31 - different decisions how you architect
05:33 - the application and the fact that you
05:35 - figured these things out on your own and
05:37 - you were to able to build something
05:38 - completely from scratch as a software
05:40 - developer that's what you're doing most
05:42 - of the time figuring out problems making
05:45 - decisions deciding if you should go with
05:46 - this approach or that approach that's
05:48 - what companies will really be looking
05:50 - for the fact you can actually build
05:52 - something completely on your own now the
05:54 - next thing companies are really going to
05:55 - focus on is your problem solving and
05:57 - critical thinking they want to know that
05:59 - you're able to figure stuff out if you
06:02 - reach a problem and you don't know how
06:03 - to solve it you can persevere you can go
06:05 - and use various resources and you can
06:07 - eventually come up with the answer now
06:09 - that may end in you asking someone for
06:11 - help or debating a solution with a
06:13 - coworker or someone above you that's
06:15 - totally fine but they want to know you
06:17 - have that skill set which is something
06:18 - that's very difficult if not impossible
06:20 - to teach you they can teach you the best
06:22 - way to go about implementing something
06:24 - how to work in a new code base they can
06:26 - give you feedback on your code but they
06:27 - can't teach that inherent problem
06:29 - solving ability which is really what a
06:31 - good software engineer needs to have now
06:33 - beyond that another thing that a lot of
06:35 - companies are looking for is your
06:36 - ability and willingness to write clean
06:38 - and maintainable code while you're doing
06:41 - these kind of leak code style interview
06:43 - questions they'll be paying attention to
06:45 - the style in which you write code things
06:47 - like your variable names how you
06:49 - separate things out they want to make
06:50 - sure that even if you're not perfect at
06:52 - it right now it's something you're
06:53 - working on and that you'll do in their
06:55 - codebase because it's very very
06:57 - important next they're also going to
06:58 - want to make sure that you know about
07:00 - efficiency so that's why they'll ask you
07:02 - things like what is the time complexity
07:04 - of this algorithm why did you go with
07:06 - this Choice over that choice they want
07:07 - to make sure that you don't just write
07:09 - code to solve a problem but you write
07:11 - code as optimally as you possibly can
07:13 - you're thinking about various different
07:14 - solutions and you're making decisions
07:16 - and problem solving along the way as you
07:19 - can tell a lot of this really gets down
07:20 - to the core on your ability to
07:22 - critically think and to problem solve
07:24 - and to use the tools like programming
07:26 - languages and Frameworks that you have
07:27 - available to you to solve a problem
07:29 - another thing the companies will look
07:30 - for is your ability to work in a team
07:32 - and to work with Version Control
07:34 - software like GitHub do you know how to
07:36 - make a pull request do you know how to
07:38 - work with a repository have you done
07:40 - something like this before sure they can
07:42 - teach you and they can train you how to
07:43 - do it but it's an added bonus if you
07:45 - already know this and you know how to
07:46 - work in a team environment now I know
07:48 - that's a pretty General list but I'm
07:50 - just trying to get you to think about
07:51 - what an interviewer is thinking about
07:53 - when they're asking you questions now
07:55 - obviously beyond that depending on the
07:57 - role you're applying for there's going
07:58 - to be a long list of requirements of
08:00 - different tools Frameworks languages
08:02 - that you know and that you've worked
08:04 - with if you're going for something like
08:05 - a python development position maybe it's
08:07 - a web development role obviously you're
08:09 - going to need to know something like
08:10 - Jango you're going to have to be really
08:11 - comfortable with python and have a lot
08:13 - of experience with it if you're going
08:14 - for a frontend developer rule knowing
08:16 - something like react understanding
08:18 - things like JavaScript CSS HTML you get
08:21 - the idea there's specific requirements
08:23 - for specific roles but regardless of
08:26 - what you're applying for you need to
08:27 - have those core skills and again a lot
08:29 - of those skills are just not taught to
08:31 - you in a computer science degree and you
08:32 - need to go out of your way to develop
08:34 - them so with that said let's move into
08:36 - the next section here which is how you
08:37 - can actually be competitive when you're
08:39 - applying for these roles so I just gave
08:42 - you that kind of General framework of
08:43 - the things you'll need to know and what
08:45 - companies are looking for but beyond
08:47 - that you also want to specialize now
08:49 - what I mean by that is you need to make
08:51 - yourself stand out as a really good
08:53 - candidate for a particular role now this
08:56 - could be a backend developer position a
08:57 - front-end developer position this could
08:59 - be be for devops this could be for
09:01 - something like machine learning and AI
09:02 - it doesn't matter what type of role
09:04 - you're applying for but there's always a
09:06 - specialized set of skills that you'll
09:07 - need to know that will really make you
09:09 - stand out and push you that much further
09:11 - than the people that just came out of
09:13 - for example a computer science degree if
09:15 - we think of your standard computer
09:17 - science screw curriculum you maybe learn
09:19 - one or two programming languages you
09:20 - probably don't even work with a major
09:22 - framework like react view angular Etc
09:25 - and you really just know the basics of
09:27 - coding in like a vanilla programming
09:29 - langage language maybe you learned
09:30 - python maybe you learned Java maybe you
09:32 - did a little bit of C++ but you're not
09:34 - an expert in any of those languages you
09:36 - haven't really built that many
09:37 - applications with them and you haven't
09:39 - utilized major Frameworks now compare
09:41 - that to someone who went through a
09:43 - really specialized program where they
09:44 - learned everything about react they
09:45 - learned everything about front-end web
09:47 - development they know JavaScript they're
09:48 - a complete expert who do you think is
09:50 - going to stand out more for a front-end
09:52 - web developer position I think you know
09:53 - the answer it's pretty obvious so my
09:55 - next Point here is that if you want to
09:57 - stand out and you want to land these
09:58 - positions not only do you have to have
10:00 - everything I mentioned before but you
10:02 - need to know those specific Technologies
10:04 - tools languages Frameworks techniques
10:07 - whatever it is for the job position now
10:09 - what I recommend you do in order to
10:11 - learn those is first of all go and
10:12 - search for a bunch of different
10:13 - developer roles look at them see all of
10:16 - the requirements see the things that
10:17 - stand out in a lot of different job
10:19 - descriptions what's the main language
10:21 - people want you to know what's the
10:23 - primary framework you need to have
10:25 - experience with what type of projects
10:26 - they want you to have built before if
10:28 - you can do that you can give yourself a
10:30 - really solid guide of the things you
10:31 - should learn and you can really stand
10:33 - out and tick all of those different
10:35 - boxes for the job requirements so that's
10:37 - the idea learn all of those core skills
10:39 - get really good at problem solving
10:41 - building applications understanding
10:43 - software development as a whole and then
10:45 - specialize within the particular type of
10:47 - role you're looking for so that you
10:49 - actually stand out and you're
10:50 - competitive for that position moving on
10:52 - let's talk about credibility and
10:54 - actually proving this now of course it's
10:56 - great to go into an interview and say
10:58 - yes I'm the best software devel veler I
10:59 - built all these applications I know this
11:01 - this this language and this framework
11:03 - but anybody can do that what you really
11:05 - need to have now if you want to land
11:07 - these roles is credibility you need to
11:09 - prove yourself you need to demonstrate
11:10 - that you actually have these skills now
11:13 - how do you do that well the first way to
11:15 - actually do this is to speak with
11:17 - confidence when you're in the interview
11:19 - I know a lot of you are just coming out
11:20 - of a computer science degree you're
11:21 - feeling that impostor syndrome maybe you
11:23 - don't actually know everything you need
11:25 - to land a rooll you don't want to let
11:27 - that be known in the way that you're
11:29 - speaking and the way that you're
11:30 - presenting yourself and coming across
11:32 - one of the main advantages I've had in a
11:34 - lot of interviews that I've done
11:35 - especially when I was a lot younger and
11:37 - didn't have all of these skills is even
11:39 - though I didn't quite know everything I
11:40 - would always speak really confidently I
11:42 - had a lot of practice being on camera
11:44 - hearing myselft talk seeing how I moved
11:47 - my hands and my body language and I knew
11:49 - how to present myself in a way where no
11:51 - matter what I said it was really
11:52 - believable and it seemed like I actually
11:54 - really believed in myself that is a
11:57 - skill that will help you so much in
11:58 - every every area of life and really
12:00 - really comes across especially in an
12:02 - interview I hate to say fake it until
12:04 - you make it but you don't want to speak
12:06 - really softly and quietly and like you
12:09 - don't know what you're doing and you're
12:11 - nervous and you're not really sure and
12:12 - you're begging for a job you want to
12:14 - speak with authority like you know what
12:15 - you're talking about and you're
12:17 - confident that you are the best person
12:19 - for this job I know easier said than
12:21 - done but a really important thing that I
12:23 - think a lot of us should work on more
12:25 - and more now beyond that obviously you
12:27 - have to have some things to back this up
12:28 - people are going to ask you for evidence
12:29 - and that's why you need a really strong
12:31 - portfolio and you need to have actually
12:33 - built a lot of different projects now
12:36 - these projects can be anything but they
12:38 - should be fairly large and they should
12:40 - involve the different components I
12:41 - talked about before building a front end
12:43 - building an API building a back end
12:46 - understanding the data flow and showing
12:48 - someone hey I know how to build every
12:50 - single one of these components my
12:51 - specialty is in this specific area this
12:54 - is how I decided to build the project
12:55 - this is the decisions I made this is why
12:57 - I chose them and this is what the end
12:59 - result ended up being interviewers
13:01 - really like to ask you questions about
13:03 - the projects that you've built and if
13:04 - you can make really interesting ones
13:06 - that stand out a lot of times it's a
13:08 - really good discussion point and you can
13:10 - really walk through and demonstrate your
13:12 - knowledge and discuss at a high level
13:14 - how you architect a project I personally
13:16 - recommend having three really solid
13:19 - portfolio projects that you've worked on
13:21 - for a long time maybe a few weeks each
13:23 - and these are things that are really
13:25 - going to be a staple of your resume and
13:27 - really allow you to elaborate and prove
13:29 - yourself in an interview rather than
13:31 - having 25 rum projects that are just
13:33 - okay or decent I recommend spending your
13:36 - time on just a few of them really
13:37 - fine-tuning them making them really
13:39 - visual easy to understand and
13:41 - interesting and I guarantee you you're
13:43 - really going to see how much that helps
13:44 - you in an interview setting now beyond
13:47 - that presenting yourself well speaking
13:49 - with proper English having proper
13:51 - grammar spelling everything correctly on
13:53 - your resume having something well
13:54 - formatted showing up in a nice shirt
13:57 - looking clean these type of things are
13:59 - really going to help you out and it's
14:00 - unfortunate that a lot of these things
14:02 - aren't actually taught in a computer
14:03 - science degree or in University and so
14:05 - many people their entire life never
14:07 - actually learned these skills I can tell
14:09 - you as someone who's looked at hundreds
14:11 - of different applications interviewed a
14:12 - lot of people and have been doing this
14:14 - for a long time most software developers
14:16 - really suck in this area presenting
14:18 - themselves and having confidence they
14:20 - might be really really good at
14:21 - development but they don't know how to
14:23 - put that on paper they don't know how to
14:25 - demonstrate those skills unfortunately
14:27 - perception is a reality and if it looks
14:29 - like you suck in the eyes of an
14:31 - interviewer you do suck even if you are
14:33 - really really good so please focus on
14:35 - those things if you want some help with
14:37 - that I do have entire sections on that
14:39 - in my programming course with course
14:41 - careers now guys that's going to wrap up
14:43 - this video I just want to give all of
14:45 - you a little bit of a reality check kind
14:46 - of wake you up to what's happening and
14:48 - give you that extra push of motivation
14:50 - to go out there and learn these
14:51 - additional skills I know this was
14:53 - slightly vague but I want you to
14:55 - understand that a computer science
14:56 - degree is really not the end if anything
14:58 - it's just the beginning and there's so
15:00 - much more you need to do to land a job
15:02 - it's unfortunate I wish it wasn't this
15:04 - way but that's just how the industry is
15:06 - most of what you're learning is outside
15:08 - of that degree and you need to get that
15:09 - into your head as quickly as possible
15:11 - with that said I'll wrap it up here if
15:13 - you enjoyed make sure to leave a like
15:14 - subscribe to the channel and I will see
15:15 - you in the next one
15:19 - [Music]

Cleaned transcript:

you just completed your four or fiveyear computer science degree you struggled through those difficult math classes you took all those useless electives and you spend tens if not hundreds of thousands of dollars to get this piece of paper that should mean that you're ready to go out into the workplace get a highpaying job and start an amazing career as a software developer right well actually that couldn't be further from the truth unfortunately a computer science degree today really doesn't prepare you for what you actually need to land job and I'm sorry to be the one telling you this but there's actually a lot of other things you need to do if you want to land a job as a software developer this video aims to be a reality check for a lot of you that are going through the degree right now or ones that are considering doing it sure it can be a useful asset but you have to combine it with a lot of other skills otherwise you're going to be very disappointed when you graduate the degree and there's not a lineup of companies waiting to hire you so with that said let's get into this video where I break down the truth about a computer science degree and what you actually need to do while you're in the degree or after you finish if you want to land a job let's begin with the unfortunate reality first of all most of what you're learning in a computer science degree you do not need to know and it's not going to help you land a job only about 25% of the curriculum that I learned during my computer science degree I actually needed to know for a job and I found useful later in life most of the things that you're learning you just don't need to know unless you're going into a very specialized role in which case you need the math you need the theory and maybe you need some of the other electives that you're forced to take but for 90% of you a lot of what you're doing really is a waste of your time and you're purely going through it to get this degree now beyond that having a computer science degree does not correlate to your ability to code I know many people that have a computer science degree that really can't write code to save their lives they are not good software developers and they're never going to land a software development jump some people just shouldn't be software developers and having a computer science degree or not isn't going to change that fact it takes a certain personality type and a certain work ethic to be able to land these type of positions and unfortunately some people just can't do this now a lot of companies actually realize this they know that having a computer science degree has a weak correlation to who makes a good software engineer that's why they're either dropping their computer science degree requirement or they're adding additional steps so they can actually screen people that would make good Engineers look at big companies like Google Microsoft Facebook Etc none of them require a degree and they have a strict interview process to get the best signals possible for who actually makes a good software developer lastly whether you have a degree or not most of what you actually need to know to land a job you'll learn outside of the degree this is just the reality when it comes to software development things are changing very quickly universities can't keep up with what you actually need to know every few years it's a new framework or language or a new requirement for certain jobs you universities can't roll that into the curriculum quick enough and that means you need to stay up to date you need to be learning constantly and you really need to put a lot of things into practice that you just don't get when you go through a computer science degree the reason I'm telling this to you is that a lot of people think getting this degree is just their magic gateway to a great career and a highpaying job unfortunately that couldn't be further from the truth and whether you have one or not most of the work you'll do that will help you land a position will be outside of that degree so keep that in mind and please please don't think after you get this piece of paper that you're ready and you're going to have a lineup of companies waiting to hire you because that's going to be a hard reality check so with all that said let me break down what you actually need to learn if you want to become a software developer so I'm going to give you a general list here of the main topics and skills companies are actually looking for especially in their junior hires now keep in mind that if you were to just focus on this it would take you significantly less time than going through a computer science degree and even though you don't have that requirement a lot of jobs will still hire you in fact most jobs that list a computer science degree as requirement will wave that if you exceed the expectations and I've had that happen to me and many other people I know for example we have a student going through my software development program with course careers he finished the entire program and landed a job in under 4 months before that he had very limited experience he did not have the computer science degree he was able to land a job in just a few weeks after getting out of the program and that's because he spent 10 hours per day studying these topics and actually learning exactly what he needed to know with the right guidance rather than going through this degree where he had to spend four years learning a bunch of useless things and then on top of that learn a lot more you can check that out from the link in the description if you want but it's just a case study to prove to you this is possible and although a lot of people will tell you you need a degree that's absolutely not true and I have countless examples of people that have done it without it regardless let's go through the list here of what you actually want to focus on and what you'll need to learn whether you're in the agree or not now the first thing that companies are really looking for is that you have the ability to build something on your own you're independent you can problem solve you can figure things out and you understand how to build something like a large application now this doesn't need to be Twitter or Facebook or something insane but you really should have a fundamental understanding of what the front end is what the back end is what an API is and how data flows throughout an application a lot of time companies will ask you to explain projects that you've worked on and this this is what they're looking for how you made different decisions how you architect the application and the fact that you figured these things out on your own and you were to able to build something completely from scratch as a software developer that's what you're doing most of the time figuring out problems making decisions deciding if you should go with this approach or that approach that's what companies will really be looking for the fact you can actually build something completely on your own now the next thing companies are really going to focus on is your problem solving and critical thinking they want to know that you're able to figure stuff out if you reach a problem and you don't know how to solve it you can persevere you can go and use various resources and you can eventually come up with the answer now that may end in you asking someone for help or debating a solution with a coworker or someone above you that's totally fine but they want to know you have that skill set which is something that's very difficult if not impossible to teach you they can teach you the best way to go about implementing something how to work in a new code base they can give you feedback on your code but they can't teach that inherent problem solving ability which is really what a good software engineer needs to have now beyond that another thing that a lot of companies are looking for is your ability and willingness to write clean and maintainable code while you're doing these kind of leak code style interview questions they'll be paying attention to the style in which you write code things like your variable names how you separate things out they want to make sure that even if you're not perfect at it right now it's something you're working on and that you'll do in their codebase because it's very very important next they're also going to want to make sure that you know about efficiency so that's why they'll ask you things like what is the time complexity of this algorithm why did you go with this Choice over that choice they want to make sure that you don't just write code to solve a problem but you write code as optimally as you possibly can you're thinking about various different solutions and you're making decisions and problem solving along the way as you can tell a lot of this really gets down to the core on your ability to critically think and to problem solve and to use the tools like programming languages and Frameworks that you have available to you to solve a problem another thing the companies will look for is your ability to work in a team and to work with Version Control software like GitHub do you know how to make a pull request do you know how to work with a repository have you done something like this before sure they can teach you and they can train you how to do it but it's an added bonus if you already know this and you know how to work in a team environment now I know that's a pretty General list but I'm just trying to get you to think about what an interviewer is thinking about when they're asking you questions now obviously beyond that depending on the role you're applying for there's going to be a long list of requirements of different tools Frameworks languages that you know and that you've worked with if you're going for something like a python development position maybe it's a web development role obviously you're going to need to know something like Jango you're going to have to be really comfortable with python and have a lot of experience with it if you're going for a frontend developer rule knowing something like react understanding things like JavaScript CSS HTML you get the idea there's specific requirements for specific roles but regardless of what you're applying for you need to have those core skills and again a lot of those skills are just not taught to you in a computer science degree and you need to go out of your way to develop them so with that said let's move into the next section here which is how you can actually be competitive when you're applying for these roles so I just gave you that kind of General framework of the things you'll need to know and what companies are looking for but beyond that you also want to specialize now what I mean by that is you need to make yourself stand out as a really good candidate for a particular role now this could be a backend developer position a frontend developer position this could be be for devops this could be for something like machine learning and AI it doesn't matter what type of role you're applying for but there's always a specialized set of skills that you'll need to know that will really make you stand out and push you that much further than the people that just came out of for example a computer science degree if we think of your standard computer science screw curriculum you maybe learn one or two programming languages you probably don't even work with a major framework like react view angular Etc and you really just know the basics of coding in like a vanilla programming langage language maybe you learned python maybe you learned Java maybe you did a little bit of C++ but you're not an expert in any of those languages you haven't really built that many applications with them and you haven't utilized major Frameworks now compare that to someone who went through a really specialized program where they learned everything about react they learned everything about frontend web development they know JavaScript they're a complete expert who do you think is going to stand out more for a frontend web developer position I think you know the answer it's pretty obvious so my next Point here is that if you want to stand out and you want to land these positions not only do you have to have everything I mentioned before but you need to know those specific Technologies tools languages Frameworks techniques whatever it is for the job position now what I recommend you do in order to learn those is first of all go and search for a bunch of different developer roles look at them see all of the requirements see the things that stand out in a lot of different job descriptions what's the main language people want you to know what's the primary framework you need to have experience with what type of projects they want you to have built before if you can do that you can give yourself a really solid guide of the things you should learn and you can really stand out and tick all of those different boxes for the job requirements so that's the idea learn all of those core skills get really good at problem solving building applications understanding software development as a whole and then specialize within the particular type of role you're looking for so that you actually stand out and you're competitive for that position moving on let's talk about credibility and actually proving this now of course it's great to go into an interview and say yes I'm the best software devel veler I built all these applications I know this this this language and this framework but anybody can do that what you really need to have now if you want to land these roles is credibility you need to prove yourself you need to demonstrate that you actually have these skills now how do you do that well the first way to actually do this is to speak with confidence when you're in the interview I know a lot of you are just coming out of a computer science degree you're feeling that impostor syndrome maybe you don't actually know everything you need to land a rooll you don't want to let that be known in the way that you're speaking and the way that you're presenting yourself and coming across one of the main advantages I've had in a lot of interviews that I've done especially when I was a lot younger and didn't have all of these skills is even though I didn't quite know everything I would always speak really confidently I had a lot of practice being on camera hearing myselft talk seeing how I moved my hands and my body language and I knew how to present myself in a way where no matter what I said it was really believable and it seemed like I actually really believed in myself that is a skill that will help you so much in every every area of life and really really comes across especially in an interview I hate to say fake it until you make it but you don't want to speak really softly and quietly and like you don't know what you're doing and you're nervous and you're not really sure and you're begging for a job you want to speak with authority like you know what you're talking about and you're confident that you are the best person for this job I know easier said than done but a really important thing that I think a lot of us should work on more and more now beyond that obviously you have to have some things to back this up people are going to ask you for evidence and that's why you need a really strong portfolio and you need to have actually built a lot of different projects now these projects can be anything but they should be fairly large and they should involve the different components I talked about before building a front end building an API building a back end understanding the data flow and showing someone hey I know how to build every single one of these components my specialty is in this specific area this is how I decided to build the project this is the decisions I made this is why I chose them and this is what the end result ended up being interviewers really like to ask you questions about the projects that you've built and if you can make really interesting ones that stand out a lot of times it's a really good discussion point and you can really walk through and demonstrate your knowledge and discuss at a high level how you architect a project I personally recommend having three really solid portfolio projects that you've worked on for a long time maybe a few weeks each and these are things that are really going to be a staple of your resume and really allow you to elaborate and prove yourself in an interview rather than having 25 rum projects that are just okay or decent I recommend spending your time on just a few of them really finetuning them making them really visual easy to understand and interesting and I guarantee you you're really going to see how much that helps you in an interview setting now beyond that presenting yourself well speaking with proper English having proper grammar spelling everything correctly on your resume having something well formatted showing up in a nice shirt looking clean these type of things are really going to help you out and it's unfortunate that a lot of these things aren't actually taught in a computer science degree or in University and so many people their entire life never actually learned these skills I can tell you as someone who's looked at hundreds of different applications interviewed a lot of people and have been doing this for a long time most software developers really suck in this area presenting themselves and having confidence they might be really really good at development but they don't know how to put that on paper they don't know how to demonstrate those skills unfortunately perception is a reality and if it looks like you suck in the eyes of an interviewer you do suck even if you are really really good so please focus on those things if you want some help with that I do have entire sections on that in my programming course with course careers now guys that's going to wrap up this video I just want to give all of you a little bit of a reality check kind of wake you up to what's happening and give you that extra push of motivation to go out there and learn these additional skills I know this was slightly vague but I want you to understand that a computer science degree is really not the end if anything it's just the beginning and there's so much more you need to do to land a job it's unfortunate I wish it wasn't this way but that's just how the industry is most of what you're learning is outside of that degree and you need to get that into your head as quickly as possible with that said I'll wrap it up here if you enjoyed make sure to leave a like subscribe to the channel and I will see you in the next one
