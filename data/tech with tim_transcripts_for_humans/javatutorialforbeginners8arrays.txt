With timestamps:

00:00 - okay so I know we've said in this video
00:01 - I was gonna be talking about for loops
00:03 - and looping but I actually forgot that I
00:05 - haven't yet talked about a raise so
00:07 - we're gonna be going into arrays in this
00:09 - video and that will lead us really
00:10 - nicely into for loops and while loops in
00:12 - future videos because that's kind of one
00:14 - of the main things you do with arrays is
00:15 - you loop through them and you look at
00:17 - things so we first need to know about
00:18 - arrays before we can really move into
00:20 - loops or at least so that it makes more
00:21 - sense in this series so anyways what is
00:24 - an array well an array is a collection
00:26 - pretty much of elements that is a set
00:30 - size so rather than having like a
00:32 - variable equal to one you'd have an
00:34 - array and it would have a bunch of
00:36 - different values in there that you can
00:38 - index at certain points and you'll see
00:40 - when I start talking about them here if
00:42 - you're a little bit confused but how to
00:43 - create an array is to first you have to
00:45 - declare the type that you want your
00:47 - grade to be so all the values in the
00:49 - array at least where right now have to
00:50 - be the same type so in this case I'm
00:52 - gonna create an integer array and to
00:54 - declare that this is gonna be an array
00:55 - you simply do these little square
00:57 - brackets use a in square brackets the
00:59 - name of your a in this case I'm going to
01:00 - say new ARR standing for a is equal to
01:03 - and then in this case you're gonna say
01:05 - new int square brackets and inside of
01:08 - the square brackets you have to define
01:10 - how many elements or how long your array
01:13 - is gonna be in this case I'm just gonna
01:15 - say five okay so you can see that's fine
01:18 - not getting any issues here just because
01:19 - we're not using new AR but yeah this is
01:22 - the syntax so whatever type you want it
01:24 - to be you type the type so if I want to
01:26 - be string I'll do string and then this
01:28 - obviously I would have to be the same
01:30 - string like that okay square brackets
01:33 - name of your array equals new and then
01:37 - the type square brackets how long you
01:40 - want the array to be now there's another
01:42 - way to declare this I'll show you in a
01:43 - second but this is like a set length
01:46 - like you can't change this length so you
01:48 - have to make sure that when you're
01:49 - declaring your arrays you know how many
01:51 - elements you want to have because you
01:53 - can't if you make an array length zero
01:55 - then there's no point in using it you
01:56 - can't add you can't add anything passed
01:58 - like that length okay and what it's
02:01 - gonna do is it's gonna by default set
02:02 - all of these elements to like null so
02:06 - they have no value but they exist like
02:08 - they're there they just aren't holding
02:09 - anything right now okay the way you can
02:12 - kind of think of it as you're
02:12 - initializing like
02:14 - five containers that are all gonna hold
02:16 - something but they're not yet holding
02:17 - anything sighs it's a good way to
02:19 - visualize it we're gonna keep the string
02:20 - array for now and show you how we can
02:23 - add things to array and change values
02:26 - and print them out and see what that
02:27 - looks like okay so the way that you
02:30 - index things in an array and array is
02:32 - gonna be is gonna look like these curly
02:34 - braces okay so I'm just gonna type some
02:36 - stuff out and just follow with me right
02:37 - so in my string array I want to have
02:39 - hello
02:41 - I need double quotes hi Tim maybe I
02:47 - should less values Bill and Joe okay now
02:51 - these are the five values in my string
02:54 - array this don't type this out with me
02:56 - this is just showing you an example now
02:58 - the way that we start counting in
03:00 - computers are actually let's first say
03:03 - this every element in our array is going
03:05 - to have an index okay and the index is
03:07 - gonna be a number that represents its
03:09 - position so in this case you'd say like
03:11 - this is position 1 this is position 2
03:13 - and this would be position 5 now if I
03:16 - were to ask for position 0 or cert
03:18 - position 1 it would give me hello but
03:20 - the thing is that seems logical but in
03:22 - computers we actually start counting at
03:23 - 0 meaning that position 1 which I'm
03:26 - saying is hello is actually gonna be
03:28 - position 0 and that means that whatever
03:31 - the length of my array is the so in this
03:34 - case 5 the last position in my array is
03:37 - gonna be the length minus 1 so in this
03:39 - case 4 so Joe would be positioned 4 and
03:41 - these are known as indexes like index 0
03:43 - is hello index 1 is hi index 2 is Tim
03:46 - this allows us to really easily grab
03:48 - different elements without having to
03:50 - know their value we just know the
03:51 - position of them in the array
03:53 - okay so 0 1 2 3 4 that's how we count in
03:58 - computers ok so how can we actually
03:59 - access these different elements well I'm
04:01 - going to create a variable and just a
04:04 - string X equals and in this case I want
04:08 - to get like value 2 in my array so first
04:12 - of all I haven't actually added anything
04:13 - tonight right but we'll do that in a
04:15 - second but how I would do that is I
04:16 - would type like new a R and then I put
04:19 - square brackets and then in here I put
04:21 - the position so position so on to get
04:24 - hello I think that was the first or
04:26 - second position I
04:27 - see anyways I would type one and what
04:30 - this would give me is the second value
04:32 - in my array because remember we start
04:34 - counting at zero so the first value
04:36 - would be zero and the last value would
04:38 - be four now maybe this is gonna look a
04:40 - little easier once I start adding things
04:41 - into my array so the way that we can
04:43 - actually add things into the array is
04:45 - what we've declared an array and we said
04:47 - it has length 5 which means that these
04:49 - elements already exists or those buckets
04:51 - it's not holding anything's but we have
04:53 - to do is you have to say new AR 0 is
04:55 - equal to and in this case let's give it
04:58 - a value so let's say hello ok put our
05:01 - semicolon there we go we've just set
05:03 - position 0 index 0 whatever - hello ok
05:07 - so now if I copy this a few times I can
05:10 - set the values of all the elements in
05:12 - myarray zero one two and three and here
05:16 - I can just change these so I'll say hi
05:18 - I'll say Tim I will say Bill and we can
05:24 - add one more but we don't have to so if
05:25 - we let's let's just add one more for the
05:27 - sake of it and new AR 4 is equal to we
05:33 - call it geo oh I don't know why it's
05:35 - doing that for me ok Jim like that
05:38 - alright so if I say string x equals new
05:41 - ARR 4 then that's gonna be equal to Joe
05:43 - so to print this out to the screen now I
05:45 - can do system dot out dot println and in
05:50 - this case I will say X and let's see
05:52 - what we get we get Joe right because we
05:55 - added all these into the array now if I
05:58 - just comment this out by doing that
06:01 - let's see what happens when we do a new
06:03 - AR 4 let's see what we get we get no now
06:07 - that's because remember what I said when
06:08 - we initialize this array we set it of a
06:11 - length of 5 and we say we okay these are
06:13 - our containers we've got five containers
06:15 - five buckets they're gonna hold values
06:17 - we don't know what the values are yet
06:18 - alright so if we haven't set a value for
06:21 - the fourth index to the fourth position
06:22 - well we don't know what it is so we're
06:24 - just gonna return no meaning nothing is
06:26 - there right now okay so yeah so those
06:29 - are that's how you add things into an
06:31 - array now there's I'm gonna create
06:33 - another array and show you a kind of an
06:35 - easier way to do this if you're just
06:36 - gonna ecstatically type in
06:38 - numbers okay so I'm gonna say in the
06:41 - summer I do an interagency me from doing
06:43 - all these quotation marks I'm gonna say
06:44 - and let's say num is equal to new int
06:48 - square brackets or actually we don't
06:50 - need that because we're gonna do the
06:51 - other way we're just gonna put two curly
06:53 - braces and in here we're gonna type out
06:56 - our array so in this case this is now my
06:59 - number array so I put it in curly braces
07:02 - and I have an array of two three fifty
07:04 - four six and six now again just recap
07:07 - two would be at index zero three would
07:10 - be at index one okay because that's the
07:12 - way we start counting and now if I
07:15 - wanted to instead of having X equal to
07:16 - new error I'm gonna say nums four which
07:20 - should be six right and once our error
07:24 - here change this has to be an int my bad
07:27 - index equals number four we print this
07:30 - out you can see we get the value six so
07:32 - that's another way to create an array if
07:34 - you're just gonna be like typing in all
07:36 - of the numbers like that okay and
07:38 - obviously you can create a raise of
07:40 - different types so like in so we could
07:42 - do string we do float we do double so
07:44 - you say like a double array but nums two
07:47 - is equal to and then in here you like
07:50 - 2.0 3.0 there you go
07:53 - we now have a Wow really forgot that
07:57 - okay well you need that but that works
08:00 - okay we now have a double array at index
08:02 - 0 we have 2.0 at index 1 we have 3.0 and
08:05 - yeah so arrays can get fairly
08:09 - complicated they're not really the best
08:11 - thing to be using for a lot of example
08:13 - cases but for right now we have to
08:15 - understand them in later videos I'm
08:16 - gonna be talking about collections which
08:19 - are gonna allow us to do some cooler
08:20 - things rather than like indexing
08:22 - elements like this there's some cool
08:24 - methods that we can use on those but for
08:26 - now I would just want to make sure that
08:27 - we do understand a race okay and in the
08:31 - next video I'm going to go through
08:32 - looping through arrays and we'll be
08:34 - talking about that more using for loops
08:35 - and while loops so as always if you
08:37 - enjoyed please make sure you leave a
08:38 - like and I will see you in the next
08:40 - video
08:40 - [Music]

Cleaned transcript:

okay so I know we've said in this video I was gonna be talking about for loops and looping but I actually forgot that I haven't yet talked about a raise so we're gonna be going into arrays in this video and that will lead us really nicely into for loops and while loops in future videos because that's kind of one of the main things you do with arrays is you loop through them and you look at things so we first need to know about arrays before we can really move into loops or at least so that it makes more sense in this series so anyways what is an array well an array is a collection pretty much of elements that is a set size so rather than having like a variable equal to one you'd have an array and it would have a bunch of different values in there that you can index at certain points and you'll see when I start talking about them here if you're a little bit confused but how to create an array is to first you have to declare the type that you want your grade to be so all the values in the array at least where right now have to be the same type so in this case I'm gonna create an integer array and to declare that this is gonna be an array you simply do these little square brackets use a in square brackets the name of your a in this case I'm going to say new ARR standing for a is equal to and then in this case you're gonna say new int square brackets and inside of the square brackets you have to define how many elements or how long your array is gonna be in this case I'm just gonna say five okay so you can see that's fine not getting any issues here just because we're not using new AR but yeah this is the syntax so whatever type you want it to be you type the type so if I want to be string I'll do string and then this obviously I would have to be the same string like that okay square brackets name of your array equals new and then the type square brackets how long you want the array to be now there's another way to declare this I'll show you in a second but this is like a set length like you can't change this length so you have to make sure that when you're declaring your arrays you know how many elements you want to have because you can't if you make an array length zero then there's no point in using it you can't add you can't add anything passed like that length okay and what it's gonna do is it's gonna by default set all of these elements to like null so they have no value but they exist like they're there they just aren't holding anything right now okay the way you can kind of think of it as you're initializing like five containers that are all gonna hold something but they're not yet holding anything sighs it's a good way to visualize it we're gonna keep the string array for now and show you how we can add things to array and change values and print them out and see what that looks like okay so the way that you index things in an array and array is gonna be is gonna look like these curly braces okay so I'm just gonna type some stuff out and just follow with me right so in my string array I want to have hello I need double quotes hi Tim maybe I should less values Bill and Joe okay now these are the five values in my string array this don't type this out with me this is just showing you an example now the way that we start counting in computers are actually let's first say this every element in our array is going to have an index okay and the index is gonna be a number that represents its position so in this case you'd say like this is position 1 this is position 2 and this would be position 5 now if I were to ask for position 0 or cert position 1 it would give me hello but the thing is that seems logical but in computers we actually start counting at 0 meaning that position 1 which I'm saying is hello is actually gonna be position 0 and that means that whatever the length of my array is the so in this case 5 the last position in my array is gonna be the length minus 1 so in this case 4 so Joe would be positioned 4 and these are known as indexes like index 0 is hello index 1 is hi index 2 is Tim this allows us to really easily grab different elements without having to know their value we just know the position of them in the array okay so 0 1 2 3 4 that's how we count in computers ok so how can we actually access these different elements well I'm going to create a variable and just a string X equals and in this case I want to get like value 2 in my array so first of all I haven't actually added anything tonight right but we'll do that in a second but how I would do that is I would type like new a R and then I put square brackets and then in here I put the position so position so on to get hello I think that was the first or second position I see anyways I would type one and what this would give me is the second value in my array because remember we start counting at zero so the first value would be zero and the last value would be four now maybe this is gonna look a little easier once I start adding things into my array so the way that we can actually add things into the array is what we've declared an array and we said it has length 5 which means that these elements already exists or those buckets it's not holding anything's but we have to do is you have to say new AR 0 is equal to and in this case let's give it a value so let's say hello ok put our semicolon there we go we've just set position 0 index 0 whatever hello ok so now if I copy this a few times I can set the values of all the elements in myarray zero one two and three and here I can just change these so I'll say hi I'll say Tim I will say Bill and we can add one more but we don't have to so if we let's let's just add one more for the sake of it and new AR 4 is equal to we call it geo oh I don't know why it's doing that for me ok Jim like that alright so if I say string x equals new ARR 4 then that's gonna be equal to Joe so to print this out to the screen now I can do system dot out dot println and in this case I will say X and let's see what we get we get Joe right because we added all these into the array now if I just comment this out by doing that let's see what happens when we do a new AR 4 let's see what we get we get no now that's because remember what I said when we initialize this array we set it of a length of 5 and we say we okay these are our containers we've got five containers five buckets they're gonna hold values we don't know what the values are yet alright so if we haven't set a value for the fourth index to the fourth position well we don't know what it is so we're just gonna return no meaning nothing is there right now okay so yeah so those are that's how you add things into an array now there's I'm gonna create another array and show you a kind of an easier way to do this if you're just gonna ecstatically type in numbers okay so I'm gonna say in the summer I do an interagency me from doing all these quotation marks I'm gonna say and let's say num is equal to new int square brackets or actually we don't need that because we're gonna do the other way we're just gonna put two curly braces and in here we're gonna type out our array so in this case this is now my number array so I put it in curly braces and I have an array of two three fifty four six and six now again just recap two would be at index zero three would be at index one okay because that's the way we start counting and now if I wanted to instead of having X equal to new error I'm gonna say nums four which should be six right and once our error here change this has to be an int my bad index equals number four we print this out you can see we get the value six so that's another way to create an array if you're just gonna be like typing in all of the numbers like that okay and obviously you can create a raise of different types so like in so we could do string we do float we do double so you say like a double array but nums two is equal to and then in here you like 2.0 3.0 there you go we now have a Wow really forgot that okay well you need that but that works okay we now have a double array at index 0 we have 2.0 at index 1 we have 3.0 and yeah so arrays can get fairly complicated they're not really the best thing to be using for a lot of example cases but for right now we have to understand them in later videos I'm gonna be talking about collections which are gonna allow us to do some cooler things rather than like indexing elements like this there's some cool methods that we can use on those but for now I would just want to make sure that we do understand a race okay and in the next video I'm going to go through looping through arrays and we'll be talking about that more using for loops and while loops so as always if you enjoyed please make sure you leave a like and I will see you in the next video
