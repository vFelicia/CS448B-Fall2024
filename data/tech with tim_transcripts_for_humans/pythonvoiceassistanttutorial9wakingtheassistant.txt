With timestamps:

00:00 - hello everyone and welcome back to their
00:01 - Python voice assistant tutorials what
00:03 - I'm gonna be doing in this video is
00:04 - fixing a few bugs that have occurred
00:06 - from previous videos as well as adding a
00:08 - wake word to our assistant now this
00:10 - might be split into two parts depending
00:11 - on how long this takes me
00:13 - but what we're gonna be doing is making
00:14 - it so that we can say something like hey
00:16 - Tim or hey Google or hey botch or
00:18 - whatever we want and that will trigger
00:20 - the voice assistant to actually start
00:22 - listening for the command so we'll
00:24 - always be listening but it will only be
00:25 - listening for commands after we have
00:28 - that wake word which is what you guys
00:29 - were suggesting to me now before we move
00:31 - too far let's fix a few bugs so the
00:33 - first thing that I want to do is just go
00:34 - up and get audio here and this is what
00:36 - you guys have recommended and I don't
00:37 - know why I didn't do this to start when
00:39 - we returned said here I'm just gonna
00:40 - return said lower because that's gonna
00:44 - make it so we don't have to keep calling
00:45 - dealt lower every time we want to get
00:47 - the the value of text because we don't
00:50 - really care about the Capitals at all so
00:52 - what I'm gonna do now is just get rid of
00:53 - wherever I put down lower so like get
00:55 - audio down lower it don't don't need
00:57 - that get audio dot lower pretty much
01:00 - anywhere we have dot lower we don't need
01:01 - that anymore because we've just fixed
01:03 - that and saved us a bit of time now the
01:05 - next thing I'm gonna do is go into this
01:07 - get events function and change a bug
01:08 - that actually our friend here Doug
01:10 - pointed out to me in one of the comments
01:12 - section some of you guys have points
01:13 - them out as well but this one seems
01:15 - significant to me so that's why I'm kind
01:16 - of sharing him out here he was saying
01:18 - essentially that if our event falls in
01:20 - the afternoon the way that I've
01:21 - programmed get events is it will
01:23 - actually cut off the like the half an
01:26 - hour point if it starts at that time so
01:27 - if it doesn't fall directly on the hour
01:29 - and it starts at you know 12:30 or 1:30
01:32 - or something like that it won't say the
01:33 - 30 aspect so we need to include that so
01:36 - to do that we're just gonna take this
01:37 - line here so plus start underscore time
01:39 - dot split at : 1 and add that to the end
01:44 - right here so inside this for loop
01:47 - inside this else and this first line
01:49 - here I'm gonna add that line so + start
01:51 - time dot split : at 1 now the reason
01:54 - this is happening is because I was just
01:56 - taking the hour aspect I wasn't taking
01:59 - the minute aspect which I need so this
02:01 - will add the minute aspect to that and
02:03 - that should be good for us now at least
02:07 - I've tested this and it did work so I'm
02:08 - hoping that this will be fine the way
02:10 - that we have it now ok so now that we've
02:12 - done that
02:12 - let's just do a quick test here and see
02:15 - if this is actually working so I'm just
02:17 - gonna run this what do I have on
02:20 - Wednesday at 1:00 p.m. to toriel 2:30
02:34 - p.m. okay so there we got that now 2:30
02:37 - p.m. so that is working and we are all
02:39 - good to go all right so now that we've
02:40 - done that what I'm gonna do is include
02:43 - this wake keyword so I'm gonna start by
02:45 - just creating a variable here at the
02:46 - bottom called Wake word or like awake I
02:49 - shall just say one my sect not way not
02:52 - week Wake equals they're going to put
02:54 - the string that we want to wake up with
02:55 - here in lowercase in this case I'm just
02:57 - gonna make mine hate Tim so if you say
02:59 - hey Tim then we'll be good to go and we
03:01 - will wake up so what are we gonna do now
03:03 - to get this working well we need to
03:05 - essentially put all of this inside of a
03:07 - while loop and start doing kind of it's
03:10 - slightly complex but we just need to
03:11 - always be listening see if we ever say
03:14 - hey Tim and if we do alert the user and
03:17 - then start looking through their next
03:18 - command for any of this so like write
03:20 - something down or asking about the
03:21 - events that we have so what I'm gonna do
03:23 - is I'm just going to make a while loop
03:25 - here let's say a while true like that
03:27 - and I'll take all this and indent that
03:30 - now what I'm gonna do is keep text
03:32 - equals get underscore audio but I'm
03:34 - gonna just do an if statement here and
03:35 - say if text dot count wake greater than
03:41 - one then what we'll do is we'll do all
03:43 - of this now I'm else we're just gonna
03:45 - say speak I am ready and then what I'm
03:50 - gonna do is say text equals get
03:53 - underscore audio one more time now let
03:56 - me explain how this is gonna work so
03:57 - what we're gonna do is we're gonna be
03:59 - constantly listening so always listening
04:01 - in this while loop now as soon as this
04:03 - picks up some kind of text so this get
04:04 - audio function which is all the way up
04:06 - here it will return that to text and
04:08 - then what we're gonna do is check if we
04:10 - said hey Tim now if we said hey Tim
04:13 - anywhere in that kind of blob of text
04:15 - that we got there what we'll do is we'll
04:17 - say tell the assistant to say I am ready
04:20 - after it says I'm ready it will wait for
04:22 - another command cuz so think about it
04:24 - like this right like we're talking maybe
04:26 - having
04:26 - having a conversation and all of a
04:28 - sudden I say hey Tim we wait a second
04:30 - and then it says I am ready okay and
04:32 - then you say what do I have on Wednesday
04:34 - and then it takes this text and it will
04:36 - process any command based off of that
04:38 - now I'm just gonna make one slight
04:40 - change here in this speak function so
04:42 - it's a speak please try again inside of
04:44 - for phrase what I'm gonna do is just
04:46 - change this to I didn't or I don't
04:49 - understand rather than try again because
04:53 - saying try again will prompt the user to
04:56 - want to just say the command again
04:57 - rather than start with hate Tim which is
05:00 - not exactly what we want so anyways I
05:02 - think this should be okay for now to
05:04 - start testing with there might be a few
05:06 - things I need to change after this let
05:08 - me just look on my other screen to make
05:09 - sure I didn't make an error okay what
05:11 - I'm actually gonna do is just add
05:13 - another text another print statement in
05:15 - here just says listening so that we know
05:17 - every time that this runs and we get an
05:19 - idea of kind of how this is working so
05:21 - what I'm gonna do is bring this up here
05:24 - and run this and then see if this is
05:26 - working for us okay so it started we're
05:29 - listening you can hear that I'm talking
05:31 - here and nothing's happening with the
05:33 - with the voice so I'm just gonna turn my
05:35 - volume up so you guys can hear okay so I
05:37 - just ran this and realized I've made a
05:39 - critical error here instead of saying
05:41 - greater than one I need to say greater
05:42 - than zero otherwise that's like never
05:44 - gonna work unless you say hey Tim twice
05:46 - I'm sure you guys probably caught that
05:48 - but anyway so let's just change that
05:49 - let's run it again you can see this is
05:50 - what happened last time okay so I need
05:53 - to run this okay so we're just talking
05:57 - here pretend we're having conversation
05:59 - all of a sudden I say hey Tim I am ready
06:04 - okay it says I'm ready what do I have on
06:07 - Tuesday um who invents on this day si si
06:13 - si 21 10:10 a.m.
06:15 - si si si 21 10 11 1:00 p.m.
06:19 - 21:05 11 5:30 a.m. atm 15:40 lectures at
06:23 - 7:00 p.m. and there we go and now it's
06:27 - listening again and wait ready hey Tim I
06:32 - already make a note
06:35 - what we wouldn't like me to write down
06:37 - remember this I might even go to net and
06:42 - there we go and now I can continue
06:44 - talking like I normally would as if
06:46 - we're doing the tutorial here and at any
06:48 - point if I say hey Tim I already make a
06:55 - note what would you like me to write
07:02 - down Tim I might even go hit that and
07:09 - there we go now I guess it didn't
07:11 - actually get what I said there but
07:13 - anyways you guys can see kind of how
07:15 - this works so it's always listening it
07:17 - waits for that wake word and yes it does
07:19 - take a second to detect the hey Tim I
07:21 - don't really know a way around doing
07:24 - that and changing that I'm gonna look at
07:25 - that and see if I can maybe fix that in
07:27 - the next video and give like some tweaks
07:28 - to how all this works but I think that's
07:31 - pretty good it's working pretty well now
07:33 - and I mean you get the idea right we're
07:35 - always listening waits for the wake word
07:37 - if you do it long enough pause between
07:39 - the wake word then it will say okay I'm
07:41 - ready or say whatever we have here it'll
07:44 - get the audio again and then it will
07:45 - actually do all of the commands so that
07:47 - is kind of how this works again all this
07:49 - code will be available in the text-based
07:50 - tutorial whenever that does come out of
07:53 - that being said as always if you have
07:54 - more ideas for the series leave a
07:56 - comment down below and I'll make sure to
07:58 - try to include that in future videos so
07:59 - with that being said if you guys enjoyed
08:01 - please leave a like and subscribe to the
08:03 - channel I will see you guys in more
08:04 - videos

Cleaned transcript:

hello everyone and welcome back to their Python voice assistant tutorials what I'm gonna be doing in this video is fixing a few bugs that have occurred from previous videos as well as adding a wake word to our assistant now this might be split into two parts depending on how long this takes me but what we're gonna be doing is making it so that we can say something like hey Tim or hey Google or hey botch or whatever we want and that will trigger the voice assistant to actually start listening for the command so we'll always be listening but it will only be listening for commands after we have that wake word which is what you guys were suggesting to me now before we move too far let's fix a few bugs so the first thing that I want to do is just go up and get audio here and this is what you guys have recommended and I don't know why I didn't do this to start when we returned said here I'm just gonna return said lower because that's gonna make it so we don't have to keep calling dealt lower every time we want to get the the value of text because we don't really care about the Capitals at all so what I'm gonna do now is just get rid of wherever I put down lower so like get audio down lower it don't don't need that get audio dot lower pretty much anywhere we have dot lower we don't need that anymore because we've just fixed that and saved us a bit of time now the next thing I'm gonna do is go into this get events function and change a bug that actually our friend here Doug pointed out to me in one of the comments section some of you guys have points them out as well but this one seems significant to me so that's why I'm kind of sharing him out here he was saying essentially that if our event falls in the afternoon the way that I've programmed get events is it will actually cut off the like the half an hour point if it starts at that time so if it doesn't fall directly on the hour and it starts at you know 1230 or 130 or something like that it won't say the 30 aspect so we need to include that so to do that we're just gonna take this line here so plus start underscore time dot split at 1 and add that to the end right here so inside this for loop inside this else and this first line here I'm gonna add that line so + start time dot split at 1 now the reason this is happening is because I was just taking the hour aspect I wasn't taking the minute aspect which I need so this will add the minute aspect to that and that should be good for us now at least I've tested this and it did work so I'm hoping that this will be fine the way that we have it now ok so now that we've done that let's just do a quick test here and see if this is actually working so I'm just gonna run this what do I have on Wednesday at 100 p.m. to toriel 230 p.m. okay so there we got that now 230 p.m. so that is working and we are all good to go all right so now that we've done that what I'm gonna do is include this wake keyword so I'm gonna start by just creating a variable here at the bottom called Wake word or like awake I shall just say one my sect not way not week Wake equals they're going to put the string that we want to wake up with here in lowercase in this case I'm just gonna make mine hate Tim so if you say hey Tim then we'll be good to go and we will wake up so what are we gonna do now to get this working well we need to essentially put all of this inside of a while loop and start doing kind of it's slightly complex but we just need to always be listening see if we ever say hey Tim and if we do alert the user and then start looking through their next command for any of this so like write something down or asking about the events that we have so what I'm gonna do is I'm just going to make a while loop here let's say a while true like that and I'll take all this and indent that now what I'm gonna do is keep text equals get underscore audio but I'm gonna just do an if statement here and say if text dot count wake greater than one then what we'll do is we'll do all of this now I'm else we're just gonna say speak I am ready and then what I'm gonna do is say text equals get underscore audio one more time now let me explain how this is gonna work so what we're gonna do is we're gonna be constantly listening so always listening in this while loop now as soon as this picks up some kind of text so this get audio function which is all the way up here it will return that to text and then what we're gonna do is check if we said hey Tim now if we said hey Tim anywhere in that kind of blob of text that we got there what we'll do is we'll say tell the assistant to say I am ready after it says I'm ready it will wait for another command cuz so think about it like this right like we're talking maybe having having a conversation and all of a sudden I say hey Tim we wait a second and then it says I am ready okay and then you say what do I have on Wednesday and then it takes this text and it will process any command based off of that now I'm just gonna make one slight change here in this speak function so it's a speak please try again inside of for phrase what I'm gonna do is just change this to I didn't or I don't understand rather than try again because saying try again will prompt the user to want to just say the command again rather than start with hate Tim which is not exactly what we want so anyways I think this should be okay for now to start testing with there might be a few things I need to change after this let me just look on my other screen to make sure I didn't make an error okay what I'm actually gonna do is just add another text another print statement in here just says listening so that we know every time that this runs and we get an idea of kind of how this is working so what I'm gonna do is bring this up here and run this and then see if this is working for us okay so it started we're listening you can hear that I'm talking here and nothing's happening with the with the voice so I'm just gonna turn my volume up so you guys can hear okay so I just ran this and realized I've made a critical error here instead of saying greater than one I need to say greater than zero otherwise that's like never gonna work unless you say hey Tim twice I'm sure you guys probably caught that but anyway so let's just change that let's run it again you can see this is what happened last time okay so I need to run this okay so we're just talking here pretend we're having conversation all of a sudden I say hey Tim I am ready okay it says I'm ready what do I have on Tuesday um who invents on this day si si si 21 1010 a.m. si si si 21 10 11 100 p.m. 2105 11 530 a.m. atm 1540 lectures at 700 p.m. and there we go and now it's listening again and wait ready hey Tim I already make a note what we wouldn't like me to write down remember this I might even go to net and there we go and now I can continue talking like I normally would as if we're doing the tutorial here and at any point if I say hey Tim I already make a note what would you like me to write down Tim I might even go hit that and there we go now I guess it didn't actually get what I said there but anyways you guys can see kind of how this works so it's always listening it waits for that wake word and yes it does take a second to detect the hey Tim I don't really know a way around doing that and changing that I'm gonna look at that and see if I can maybe fix that in the next video and give like some tweaks to how all this works but I think that's pretty good it's working pretty well now and I mean you get the idea right we're always listening waits for the wake word if you do it long enough pause between the wake word then it will say okay I'm ready or say whatever we have here it'll get the audio again and then it will actually do all of the commands so that is kind of how this works again all this code will be available in the textbased tutorial whenever that does come out of that being said as always if you have more ideas for the series leave a comment down below and I'll make sure to try to include that in future videos so with that being said if you guys enjoyed please leave a like and subscribe to the channel I will see you guys in more videos
