With timestamps:

00:02 - [Music]
00:06 - hello everyone and welcome back so in
00:09 - this video we're continuing from where
00:10 - we left off and we're continuing to work
00:12 - on our game so fortunately for us we've
00:14 - actually learned a lot of the topics we
00:16 - need to know to be able to kind of
00:17 - complete this game and make it a lot
00:18 - more interesting and fun to play but
00:21 - there is a few more things we're going
00:22 - to learn just at the beginning of this
00:23 - and kind of apply them in but it'll be a
00:25 - lot more working on the project then it
00:27 - will be actually learning the
00:28 - theoretical concepts if you've not seen
00:30 - the previous two videos in this series
00:31 - please do go check those out first
00:33 - though that's kind of a prerequisite for
00:34 - this with that being said let's get
00:36 - started so the first thing I'm gonna do
00:38 - is just kind of recap us from the last
00:40 - day and just kind of run this program
00:42 - and see what we actually have so far so
00:44 - we know where we're going from here so
00:46 - welcome to my first game what is your
00:47 - name my name is Tim what is your age 19
00:50 - hello Tim you were 19 years old you're
00:52 - old enough to play do you want to play
00:54 - let's type yes
00:56 - like that and boom it says let's play
00:58 - awesome now I just want to show you a
00:59 - case that we may not have considered yet
01:01 - so if I do Tim 19 and do you want to
01:04 - play now what happens if I do something
01:06 - like this so why capital e s well I'll
01:10 - give you guys an opportunity to take a
01:11 - look at it if we have our condition here
01:13 - right so we say wants to play equals
01:15 - input do you want to play and we say if
01:17 - wants to play equals yes let's play so
01:20 - do we think when I type Y with a capital
01:22 - e and then s that this is gonna work
01:24 - well no it's not so if I do this it
01:27 - actually doesn't this if statement is
01:29 - not true this condition is not true and
01:30 - therefore this doesn't run so how can I
01:33 - actually go about and fix that well this
01:35 - is the first thing that I wanted to show
01:37 - you and that I guarantee you guys will
01:39 - find very useful for the rest of this
01:40 - kind of game and anything in the future
01:42 - there is this method and it's called a
01:44 - method this isn't it's not that
01:45 - important you not to understand what
01:46 - that means called dot lower so it
01:49 - actually looks like this dot lower and
01:50 - I'm typing it in the correct place here
01:52 - but what this does is it takes any
01:54 - string and immediately converts it into
01:56 - lower cases so all lower cases it takes
01:59 - any letters it has and just put it puts
02:01 - it to lower case so this is really
02:03 - useful because what we can do is we can
02:05 - take the input that we typed in
02:07 - immediately convert it all into lower
02:09 - cases and now when we want to check for
02:11 - equality it doesn't
02:13 - matter what capitalization we used in
02:15 - the string it will still be true because
02:17 - it'll just automatically go to lowercase
02:19 - so we could type capital e and that will
02:22 - still this condition will be true and
02:23 - we'll still do let's play so in fact let
02:25 - me show you so notice I just put dot
02:27 - lower here and guess what there's
02:29 - actually another method called dot upper
02:32 - that we can use as well and upper will
02:34 - make it all uppercase so if we wanted to
02:36 - do this and make this all uppercase and
02:38 - then make this dot upper same thing
02:42 - right so I'm hoping this is making sense
02:43 - but essentially whatever you're gonna
02:45 - compare here is gonna have to be an all
02:47 - lowercase or all uppercase and that's
02:49 - going to correspond to whether you use
02:50 - dot lower or dot upper all right so
02:53 - let's run this now and let's see what we
02:55 - get so what is your name Tim what is
02:58 - your age 19 do you want to play y es
03:01 - okay so we have a capital y and a
03:02 - capital s and let's play that still
03:05 - works fine so that's cool I think that's
03:07 - an important method to know that's
03:08 - pretty quick so I just want to show that
03:09 - to you guys and now let's actually start
03:11 - building a game let's start making
03:13 - something cool and then we'll implement
03:14 - like maybe a health there's some other
03:16 - interesting things into our game that I
03:18 - didn't have in the demo game so the
03:20 - first thing we want to do is actually
03:21 - I'm gonna add an else statement here and
03:23 - I'm just gonna print SIA dot dot dot so
03:27 - if they don't want to play will simply
03:29 - tell them you know goodbye like see you
03:30 - later and then inside of here if they
03:33 - want to play so notice I'm nesting all
03:35 - these things but I think there's an if
03:36 - and else inside of another if statement
03:38 - and that's totally fine because all the
03:41 - if statement says as well if this is
03:43 - true do whatever is indented and here we
03:46 - are and then inside here this if
03:48 - statement says if this is true do
03:50 - whatever is indented right so we go
03:52 - ahead and do that so what I'm gonna do
03:53 - in here now is I'm gonna ask another
03:55 - question and this will be the first
03:57 - decision that we want to make so I don't
03:58 - know what I want to make it I think I'm
04:00 - gonna go with the classic do you want to
04:01 - go left or right
04:02 - just as our first kind of path but you
04:04 - guys can make this whatever you want to
04:06 - feel free at this point to kind of
04:07 - change around some of the stuff that I'm
04:09 - doing and make it your own so long as
04:10 - you understand what's happening so I'm
04:12 - gonna say left underscore or underscore
04:14 - right equals input first choice dot dots
04:22 - left
04:24 - or right now it might be a good idea in
04:27 - your game to put brackets at the end of
04:30 - your answer and just put inside of the
04:32 - brackets what the user should type so
04:34 - left or right because technically right
04:36 - they might not know like they might type
04:38 - I want to go laughter I want to go right
04:40 - so it might be a good idea to just put
04:41 - brackets inside of the prompt just so
04:43 - they kind of know what options they have
04:45 - like what they can actually type right
04:47 - and then what I'm gonna do after this is
04:49 - I'm gonna check if left underscore or
04:53 - underscore right is equal to left this
04:57 - will be my correct decision if I go left
04:59 - then what we'll do is we'll print
05:01 - something or we'll do something
05:02 - otherwise well we'll just print out to
05:06 - the screen you fell down and lost dot
05:11 - that dot you can see I'm not super
05:13 - creative when it comes to making these
05:14 - games but the idea is I'm just trying to
05:15 - show you how the paths work so this is
05:18 - like if they lose if they decide to go
05:20 - right or they type anything other than
05:21 - left then we'll print out you fell down
05:24 - and lost otherwise if they go left then
05:27 - what I'll ask them is another question
05:29 - so say okay if they go left they're
05:30 - going the right direction so let's ask
05:32 - them another question awesome and in
05:34 - fact inside of Ellis I don't even have
05:36 - to make them lose I could ask them
05:37 - another question in here too right we
05:39 - could make it as confusing as
05:41 - complicated as we want and make it
05:43 - really hard for the user to figure out
05:44 - what way they're kind of going so they
05:46 - have to play the game a bunch of times
05:47 - so anyways let's go here inside of left
05:49 - and let's say I'm just gonna put ans
05:52 - that's short form for answer that's what
05:54 - I usually end up doing as we get longer
05:56 - and longer rather than making these
05:57 - variable names but I'm gonna say ans
05:59 - equals input nice you follow the path
06:06 - and reach a like dot da do you swim
06:13 - across or go around question mark and
06:17 - then inside of here I'm gonna put across
06:20 - as the answer right is that across I
06:23 - don't think you need to see so across or
06:25 - around just telling them what they can
06:27 - type in right and now I'm gonna have to
06:29 - zoom out a little bit just so we can
06:32 - read oh that's better
06:33 - okay and now inside of here what I'm
06:35 - gonna do is I'm going to check what
06:37 - their answer was right something
06:38 - if an S is equal to and maybe will say
06:41 - that going across was the correct answer
06:43 - actually it looks like going around was
06:44 - the correct answer so if a NS equals
06:46 - around then we'll do something and then
06:49 - we'll say L if so I'm actually gonna
06:51 - switch it up here just to show you
06:52 - something else l if Jew to Jew I like an
06:56 - S equals equals a cross and then else so
07:04 - the reason I've done this is because
07:05 - what I actually want to do right now is
07:07 - I want to make it so that if they type a
07:09 - cross or they type around both options
07:12 - are correct they can go both way but
07:14 - both ways will lead them to different
07:16 - types of decisions right so we'll get
07:17 - asked now different questions inside of
07:19 - here but if they don't type around or a
07:22 - cross right then I want them to lose so
07:24 - I'm just gonna go down here and say
07:26 - print you lost again I don't have really
07:31 - good like you know lose messages but
07:33 - that's totally fine and then inside of
07:34 - here in around what I'm actually gonna
07:36 - say is that one of these options is
07:38 - better than the other so here is where
07:40 - I'm gonna implement something that I
07:41 - hope is you guys will appreciate because
07:42 - it is a little bit more complicated but
07:44 - I want to show you how we can do
07:45 - something like this if they decide to go
07:47 - across the lake I'm gonna kind of make
07:49 - up a story and say they got bit by
07:51 - something and they lose health and maybe
07:53 - we'll put something inside of here that
07:55 - checks you know what their health is so
07:57 - if their health goes lower than zero
07:58 - then they lose right then they lose the
08:00 - game completely I think that'll be
08:02 - interesting to do so let's do something
08:04 - like that so if I want to keep track of
08:06 - health right and maybe we set them off
08:07 - with like default health of won or
08:09 - default health of ten or something and
08:11 - they lose health
08:12 - we'll need a variable to store their
08:14 - health and then we'll need to subtract
08:16 - from that variable so what I'm gonna do
08:17 - is on line seven I'm gonna make a
08:19 - variable called health I'm gonna set
08:21 - that equal to ten so they could
08:23 - technically have ten health and we'll
08:25 - tell them how much help they start with
08:26 - and how much help they lose so maybe to
08:28 - start we'll print out you are starting
08:34 - with and then in this case comma the
08:38 - number and then comma health so you are
08:42 - starting with ten health that will print
08:43 - out ten the reason I put health here
08:45 - instead of ten is because if I change
08:47 - this number maybe I change it later to
08:49 - fifteen twenty something like that I
08:50 - want this to autumn
08:52 - update I don't want to have to rewrite
08:53 - the number two times it's better just to
08:56 - have it stored in one place so that's
08:57 - why I've done that so we've defined they
08:58 - have a help and we'll say if a NS equals
09:01 - around then you know whatever if a NS
09:04 - equals across then we'll print something
09:06 - else in fact actually what we can do is
09:08 - something cool here and I'm gonna get
09:10 - rid of the else and just just change
09:11 - this a bit so I'm gonna say print and
09:13 - inside of here I'm gonna put you went
09:18 - around and reach the other side of the
09:26 - lake and then here I'll print you
09:32 - managed to get across but we're bit by a
09:38 - fish I don't know let's just say that
09:40 - you were bit by fish and lost five
09:43 - health so I'm gonna tell them that they
09:45 - lost five health here and then what I'm
09:47 - gonna do is because they lost health and
09:49 - I'll put some periods here is I will say
09:51 - health - equals five so we'll just you
09:55 - know remove five health from their
09:57 - health so now they only have five health
09:59 - and now what we can do down here is we
10:01 - can ask them another question right and
10:03 - we can keep going and in fact what I'll
10:05 - do now is I'll pause and we'll run this
10:07 - just to see what we're at right now and
10:08 - then I'll just kind of keep going and
10:10 - just coding out my version of the game
10:11 - just showing you guys some different
10:13 - cool things that we can do and hopefully
10:15 - you guys take this upon yourself to make
10:17 - your own cool game right and change the
10:18 - paths and decisions and this will be
10:20 - like really good template for you to
10:21 - figure out what to do so let's run this
10:23 - and let's go what is your name so my
10:24 - name is Tim I'm 19 hello Tim you're 19
10:27 - years old you're starting with 10 health
10:29 - you're old enough to play do you want to
10:30 - play so actually maybe I should put the
10:32 - health somewhere else so this is great
10:33 - so I tested it I realized something was
10:35 - wrong so now I only want to tell them
10:37 - how much help they have right if their
10:39 - will do than 18 so in fact let's get rid
10:42 - of this you know telling them what they
10:44 - are I don't need that anymore and then
10:45 - after we ask them do you want to play
10:47 - we'll print out you were starting with
10:49 - 10 health let's play and we can leave
10:51 - the health defined up here doesn't
10:53 - matter where we have it but we're just
10:55 - put it here so that we can access it
10:56 - throughout all of the stuff down here
10:58 - great so let's run this down
11:00 - then let's zoom in a bit says what is
11:03 - your name Tim what is your age
11:05 - 19 you're old enough to play do you want
11:07 - to play yes you were starting with 10
11:10 - health let's play first choice left or
11:11 - right so where should we go let's go
11:13 - left nice you follow the path and reach
11:15 - a lake do you want to swim across or go
11:16 - around let's go across and it says you
11:19 - manage to get across but you were bit by
11:20 - fish and lost 5 health so you can see
11:22 - that the game is actually working right
11:24 - and we'll run it one more time just to
11:25 - test it another path so Tim 19 you're
11:28 - old enough to play do you want to play
11:29 - yes
11:30 - first choice left or right let's go
11:32 - right you fell down and lost boom so the
11:35 - game is functioning okay so let's keep
11:37 - going and let's add some more stuff into
11:38 - this so health - equals 5 so now there
11:41 - are five health now what I'm gonna do
11:43 - here is we'll have to do something to
11:46 - check if they are lower than zero health
11:49 - right so they'll be at some point where
11:51 - they could potentially lose all their
11:52 - health and if they're at lower than zero
11:54 - health or their ads your health and
11:56 - we'll have to tell them that they lost
11:57 - so that's gonna be interesting to do
11:59 - actually but first let's just ask
12:01 - another question so let's say an us
12:04 - equals input an insight here what do we
12:07 - want them to do next maybe I'll tell
12:09 - them that I'm gonna go take an example
12:10 - from my previous game I'll say you see a
12:12 - river and you see a house do you go to
12:13 - the river or do you follow the house
12:15 - right or other way around she go towards
12:17 - the house would you follow the river
12:18 - okay you notice a house and a river
12:26 - which do you go to and then again I'll
12:31 - give them what they need to type in here
12:33 - just to make it easy so say River slash
12:36 - house and make sure we add a space here
12:40 - in between the question mark and the end
12:42 - of the quote just so there's a a space
12:44 - one I'm actually typing it in and now
12:45 - let's check if an s equals equals in
12:49 - this case
12:50 - house then we'll do something else we'll
12:54 - do something else so what I'm actually
12:55 - gonna say here this will be kind of an
12:57 - interesting little twist to this game I
12:59 - wasn't even thinking about adding is if
13:01 - they decide to go the river we'll just
13:02 - tell them that they like fell in the
13:03 - river and they lost okay and then if
13:05 - they go towards the house we'll tell
13:07 - them that they went towards the house
13:09 - but they lost five health because like
13:12 - the guy at the house hit them or
13:13 - something I don't know I'm trying not to
13:14 - be too too violent in these answers but
13:17 - the idea being that
13:18 - I want it to make I want to make it so
13:20 - that they can get past this but if they
13:22 - decide to go across it will actually end
13:24 - up being the wrong decision because they
13:27 - lose five health right and then down
13:29 - here they lose another five so they'll
13:31 - lose the game I hope that makes sense
13:32 - but you'll see as I start coding it so
13:34 - if an S equals house then what we'll set
13:36 - is we'll say print you and you go to the
13:42 - house go to the house and I greeted oops
13:50 - by the owner
13:53 - duck duck he doesn't like you and you
13:59 - lose five went all right we'll just go
14:04 - with that we don't need any more deeper
14:05 - explanations I will say health minus
14:08 - equals five so we're removing five
14:10 - health again that's equivalent to help
14:11 - equals health minus five so whatever the
14:14 - value of health is we'll subtract five
14:15 - from it the reason I wouldn't just set
14:17 - health the fiber I wouldn't just set it
14:18 - to zero is because we don't know if they
14:20 - lost five health above here so we need
14:22 - to make sure we just subtract that value
14:23 - and then else we'll print down here you
14:29 - fell in the river and lost dot dot dot
14:33 - okay so now what we'll do after this
14:36 - right so you can kind of see the way
14:38 - that I'm actually let's see here managed
14:41 - to get across so now actually inside of
14:43 - this if statement sorry I'm just trying
14:45 - to think of what we're actually gonna do
14:46 - here on line 30 I'm gonna check if their
14:49 - health is lower than zero so if they
14:51 - have lower than two your health because
14:52 - this will be the first point in the game
14:53 - where they could potentially be at zero
14:55 - health if they lost it twice then we'll
14:58 - tell them that they lost otherwise we'll
14:59 - keep going right and then maybe we'll
15:00 - wrap up the game with one more path or
15:02 - something so we'll say if health is less
15:06 - than or equal to zero then what we'll do
15:08 - is we'll print you now have zero health
15:15 - and we don't need a comma and you lose
15:20 - the game
15:21 - dot dot dot all right so there we go you
15:25 - lost the game actually we'll just do and
15:27 - you've lost the game
15:28 - all right so if their health is lower
15:30 - than zero they lose otherwise then
15:33 - inside of here we'll save prints you
15:38 - have survived tutt tutt's you in I don't
15:43 - know we'll just say that they win at
15:44 - that point and I'll show you how we can
15:45 - have some more cool things do all right
15:47 - so that pretty much wraps it up let's
15:49 - test this game a few times and make sure
15:50 - that everything is working fine and then
15:53 - we'll add anything we need to so what is
15:55 - your name Tim let's actually test one if
15:56 - I go like 14 you're not allowed to play
15:58 - okay so let's go again Tim 19 yes first
16:04 - choice left her right let's go left nice
16:06 - you followed the path and reach a lake
16:08 - to you swim across you go around let's
16:09 - go let's cross you man she had a cross
16:12 - but you were bit by a fish and lost five
16:15 - help you notice a house in a river which
16:16 - do you go to the river the house let's
16:18 - go to the river and you fell in the
16:20 - river and lost okay let's try a few more
16:22 - paths I just want to make sure this
16:23 - works but I hope you guys understand the
16:25 - point of this right is to go down like
16:26 - all these different branching paths and
16:28 - you know if you make a bad decision at
16:30 - the beginning you're gonna have to keep
16:31 - going down all the routes until you
16:33 - realize that oh no I should have gone
16:34 - right instead of left right so you can
16:36 - make these really intricate and a lot of
16:37 - people that I've taught to do this
16:39 - before have made really cool games
16:41 - they're like hundreds of lines of code
16:43 - that take you a really long time to
16:44 - actually figure out so I think it's
16:45 - pretty interesting okay but first choice
16:47 - left or right let's go left nice you
16:50 - follow the path and reach a lake do you
16:51 - swim across or go around let's actually
16:53 - go across and let's test out this health
16:55 - stuff so we go across and then says you
16:57 - notice a house and river so let's go to
16:59 - the house says you go to the house and
17:01 - you are greeted whoops I should probably
17:02 - spell that right by the owner he doesn't
17:04 - like you and you lose five fealty you
17:06 - know you now have zero health and you
17:08 - lost the game right
17:09 - so you didn't technically lose because
17:10 - you went to the what is it because you
17:14 - went to the house it's just you lost
17:15 - because you lost five health right now
17:16 - I'll show you the example where if we
17:19 - don't lose five health at the first step
17:21 - we can actually survive by going to the
17:23 - house so what is your name Tim what is
17:25 - your age 19 do you want to play yes
17:28 - let's play first choice left or right so
17:30 - let's go left let's say nice you follow
17:32 - let's go around this time you want
17:34 - around reach the other side of the lake
17:35 - you notice a house and remember wish you
17:37 - go to let's go to the house and you go
17:39 - to the help and you're greeted by the
17:40 - owner he doesn't like you need lose five
17:41 - health you
17:42 - survive you win so even though we lost
17:44 - five health we still won because in the
17:46 - previous step we didn't lose five health
17:47 - so I hope that me showing you the health
17:49 - thing gave you some ideas for some stuff
17:51 - that you can do what you also can do is
17:53 - you can acts you can do something like
17:55 - let the user pick a weapon or something
17:58 - right so a cool example and I'll just
17:59 - talk about some kind of add-ons now
18:01 - because we're kind of wrapping up the
18:02 - video anyways you could do something
18:04 - like you can start by asking them what
18:07 - weapon you want so you could say you
18:09 - know weapon equals input pick a weapon
18:17 - question mark or pick a weapon cool and
18:19 - then your options could be something
18:21 - like sword I don't know maybe like a
18:24 - baton I'm trying not to be too violent
18:27 - and I don't know let's go something like
18:28 - taser right so you can tell them to pick
18:30 - one of these weapons and then based on
18:32 - the weapon they pick you can say oh well
18:33 - if they have this weapon then they're
18:35 - able to get past this obstacle if they
18:37 - don't have this weapon then they can't
18:38 - so what you would do if you want to
18:40 - check something like that is you'd say
18:41 - if weapon equals equals whatever it
18:45 - equals and if it equals that then boom
18:48 - they're good to go right and they can
18:49 - continue on now the last thing we'll
18:51 - show you because we have one minute left
18:52 - kind of before I'm planning on wrapping
18:55 - this up is how you can actually check
18:56 - multiple things on the same line now I'm
18:59 - just gonna kind of introduce this to you
19:00 - guys because then you can kind of look
19:01 - at it yourself it's pretty easy there's
19:03 - these things called
19:04 - and and or now and and or are ways that
19:08 - we can chain conditions together I'm not
19:10 - gonna explain them in depth but if you
19:12 - do something like true or false the
19:16 - result of this is true the reason this
19:19 - is true is because when you have an or
19:21 - this pretty much says look at the left
19:23 - side look at the right side if one of
19:26 - them are true the whole thing is true so
19:28 - if you go ahead and do something like
19:30 - you know X aha let's alright I say like
19:34 - five equals five seven equals equals
19:40 - eight then this would be true right
19:41 - because this condition is true this
19:43 - condition is false so since one of them
19:45 - is true the whole thing is true
19:46 - now contrasting that with and so when
19:49 - you do and what the
19:50 - does is it checks if both of the things
19:54 - on the left and right hand side are true
19:56 - if they are the whole thing is true if
19:58 - they're not it's false so in this case
19:59 - this would be false because one of them
20:01 - is false but if I change this to be like
20:03 - seven equals equals seven then this is
20:05 - true so you can use this and and or to
20:10 - actually chain conditions together so
20:12 - you could check like inside of here if
20:14 - left or right and you know weapon equals
20:20 - equals whatever you can do something
20:22 - like that
20:22 - OOP so I put this in the wrong if left
20:26 - left or right equals equals left oops
20:28 - and weapon equals equals whatever it
20:32 - equals right inside of here then this
20:35 - whole thing will work so you can check
20:36 - if this whole condition is true or false
20:38 - and then execute an if statement based
20:40 - on that so with that being said I think
20:42 - that's pretty much it I'm gonna zoom out
20:44 - here so you guys can have a look at all
20:46 - of the code at once I understand this
20:48 - maybe isn't mobile friendly but at least
20:49 - now you can kind of see what we've
20:51 - actually created and I really hope that
20:52 - throughout this series you guys have
20:54 - learned something about Python you've
20:55 - learned kind of the basics of the
20:57 - language and if and else and I've given
20:59 - you enough knowledge that you now feel a
21:00 - little bit confident to go out there and
21:02 - make some kind of cool game I will say
21:04 - there's a ton more stuff you can do with
21:06 - this there's a lot more things to learn
21:07 - but again the focus of this series was
21:09 - around building a project and I really
21:10 - hope that this helped you do that so
21:12 - with that being said and that has been
21:13 - int I hope you guys enjoyed if you did
21:15 - make sure you leave a like subscribe and
21:17 - I will see you in another YouTube video

Cleaned transcript:

hello everyone and welcome back so in this video we're continuing from where we left off and we're continuing to work on our game so fortunately for us we've actually learned a lot of the topics we need to know to be able to kind of complete this game and make it a lot more interesting and fun to play but there is a few more things we're going to learn just at the beginning of this and kind of apply them in but it'll be a lot more working on the project then it will be actually learning the theoretical concepts if you've not seen the previous two videos in this series please do go check those out first though that's kind of a prerequisite for this with that being said let's get started so the first thing I'm gonna do is just kind of recap us from the last day and just kind of run this program and see what we actually have so far so we know where we're going from here so welcome to my first game what is your name my name is Tim what is your age 19 hello Tim you were 19 years old you're old enough to play do you want to play let's type yes like that and boom it says let's play awesome now I just want to show you a case that we may not have considered yet so if I do Tim 19 and do you want to play now what happens if I do something like this so why capital e s well I'll give you guys an opportunity to take a look at it if we have our condition here right so we say wants to play equals input do you want to play and we say if wants to play equals yes let's play so do we think when I type Y with a capital e and then s that this is gonna work well no it's not so if I do this it actually doesn't this if statement is not true this condition is not true and therefore this doesn't run so how can I actually go about and fix that well this is the first thing that I wanted to show you and that I guarantee you guys will find very useful for the rest of this kind of game and anything in the future there is this method and it's called a method this isn't it's not that important you not to understand what that means called dot lower so it actually looks like this dot lower and I'm typing it in the correct place here but what this does is it takes any string and immediately converts it into lower cases so all lower cases it takes any letters it has and just put it puts it to lower case so this is really useful because what we can do is we can take the input that we typed in immediately convert it all into lower cases and now when we want to check for equality it doesn't matter what capitalization we used in the string it will still be true because it'll just automatically go to lowercase so we could type capital e and that will still this condition will be true and we'll still do let's play so in fact let me show you so notice I just put dot lower here and guess what there's actually another method called dot upper that we can use as well and upper will make it all uppercase so if we wanted to do this and make this all uppercase and then make this dot upper same thing right so I'm hoping this is making sense but essentially whatever you're gonna compare here is gonna have to be an all lowercase or all uppercase and that's going to correspond to whether you use dot lower or dot upper all right so let's run this now and let's see what we get so what is your name Tim what is your age 19 do you want to play y es okay so we have a capital y and a capital s and let's play that still works fine so that's cool I think that's an important method to know that's pretty quick so I just want to show that to you guys and now let's actually start building a game let's start making something cool and then we'll implement like maybe a health there's some other interesting things into our game that I didn't have in the demo game so the first thing we want to do is actually I'm gonna add an else statement here and I'm just gonna print SIA dot dot dot so if they don't want to play will simply tell them you know goodbye like see you later and then inside of here if they want to play so notice I'm nesting all these things but I think there's an if and else inside of another if statement and that's totally fine because all the if statement says as well if this is true do whatever is indented and here we are and then inside here this if statement says if this is true do whatever is indented right so we go ahead and do that so what I'm gonna do in here now is I'm gonna ask another question and this will be the first decision that we want to make so I don't know what I want to make it I think I'm gonna go with the classic do you want to go left or right just as our first kind of path but you guys can make this whatever you want to feel free at this point to kind of change around some of the stuff that I'm doing and make it your own so long as you understand what's happening so I'm gonna say left underscore or underscore right equals input first choice dot dots left or right now it might be a good idea in your game to put brackets at the end of your answer and just put inside of the brackets what the user should type so left or right because technically right they might not know like they might type I want to go laughter I want to go right so it might be a good idea to just put brackets inside of the prompt just so they kind of know what options they have like what they can actually type right and then what I'm gonna do after this is I'm gonna check if left underscore or underscore right is equal to left this will be my correct decision if I go left then what we'll do is we'll print something or we'll do something otherwise well we'll just print out to the screen you fell down and lost dot that dot you can see I'm not super creative when it comes to making these games but the idea is I'm just trying to show you how the paths work so this is like if they lose if they decide to go right or they type anything other than left then we'll print out you fell down and lost otherwise if they go left then what I'll ask them is another question so say okay if they go left they're going the right direction so let's ask them another question awesome and in fact inside of Ellis I don't even have to make them lose I could ask them another question in here too right we could make it as confusing as complicated as we want and make it really hard for the user to figure out what way they're kind of going so they have to play the game a bunch of times so anyways let's go here inside of left and let's say I'm just gonna put ans that's short form for answer that's what I usually end up doing as we get longer and longer rather than making these variable names but I'm gonna say ans equals input nice you follow the path and reach a like dot da do you swim across or go around question mark and then inside of here I'm gonna put across as the answer right is that across I don't think you need to see so across or around just telling them what they can type in right and now I'm gonna have to zoom out a little bit just so we can read oh that's better okay and now inside of here what I'm gonna do is I'm going to check what their answer was right something if an S is equal to and maybe will say that going across was the correct answer actually it looks like going around was the correct answer so if a NS equals around then we'll do something and then we'll say L if so I'm actually gonna switch it up here just to show you something else l if Jew to Jew I like an S equals equals a cross and then else so the reason I've done this is because what I actually want to do right now is I want to make it so that if they type a cross or they type around both options are correct they can go both way but both ways will lead them to different types of decisions right so we'll get asked now different questions inside of here but if they don't type around or a cross right then I want them to lose so I'm just gonna go down here and say print you lost again I don't have really good like you know lose messages but that's totally fine and then inside of here in around what I'm actually gonna say is that one of these options is better than the other so here is where I'm gonna implement something that I hope is you guys will appreciate because it is a little bit more complicated but I want to show you how we can do something like this if they decide to go across the lake I'm gonna kind of make up a story and say they got bit by something and they lose health and maybe we'll put something inside of here that checks you know what their health is so if their health goes lower than zero then they lose right then they lose the game completely I think that'll be interesting to do so let's do something like that so if I want to keep track of health right and maybe we set them off with like default health of won or default health of ten or something and they lose health we'll need a variable to store their health and then we'll need to subtract from that variable so what I'm gonna do is on line seven I'm gonna make a variable called health I'm gonna set that equal to ten so they could technically have ten health and we'll tell them how much help they start with and how much help they lose so maybe to start we'll print out you are starting with and then in this case comma the number and then comma health so you are starting with ten health that will print out ten the reason I put health here instead of ten is because if I change this number maybe I change it later to fifteen twenty something like that I want this to autumn update I don't want to have to rewrite the number two times it's better just to have it stored in one place so that's why I've done that so we've defined they have a help and we'll say if a NS equals around then you know whatever if a NS equals across then we'll print something else in fact actually what we can do is something cool here and I'm gonna get rid of the else and just just change this a bit so I'm gonna say print and inside of here I'm gonna put you went around and reach the other side of the lake and then here I'll print you managed to get across but we're bit by a fish I don't know let's just say that you were bit by fish and lost five health so I'm gonna tell them that they lost five health here and then what I'm gonna do is because they lost health and I'll put some periods here is I will say health equals five so we'll just you know remove five health from their health so now they only have five health and now what we can do down here is we can ask them another question right and we can keep going and in fact what I'll do now is I'll pause and we'll run this just to see what we're at right now and then I'll just kind of keep going and just coding out my version of the game just showing you guys some different cool things that we can do and hopefully you guys take this upon yourself to make your own cool game right and change the paths and decisions and this will be like really good template for you to figure out what to do so let's run this and let's go what is your name so my name is Tim I'm 19 hello Tim you're 19 years old you're starting with 10 health you're old enough to play do you want to play so actually maybe I should put the health somewhere else so this is great so I tested it I realized something was wrong so now I only want to tell them how much help they have right if their will do than 18 so in fact let's get rid of this you know telling them what they are I don't need that anymore and then after we ask them do you want to play we'll print out you were starting with 10 health let's play and we can leave the health defined up here doesn't matter where we have it but we're just put it here so that we can access it throughout all of the stuff down here great so let's run this down then let's zoom in a bit says what is your name Tim what is your age 19 you're old enough to play do you want to play yes you were starting with 10 health let's play first choice left or right so where should we go let's go left nice you follow the path and reach a lake do you want to swim across or go around let's go across and it says you manage to get across but you were bit by fish and lost 5 health so you can see that the game is actually working right and we'll run it one more time just to test it another path so Tim 19 you're old enough to play do you want to play yes first choice left or right let's go right you fell down and lost boom so the game is functioning okay so let's keep going and let's add some more stuff into this so health equals 5 so now there are five health now what I'm gonna do here is we'll have to do something to check if they are lower than zero health right so they'll be at some point where they could potentially lose all their health and if they're at lower than zero health or their ads your health and we'll have to tell them that they lost so that's gonna be interesting to do actually but first let's just ask another question so let's say an us equals input an insight here what do we want them to do next maybe I'll tell them that I'm gonna go take an example from my previous game I'll say you see a river and you see a house do you go to the river or do you follow the house right or other way around she go towards the house would you follow the river okay you notice a house and a river which do you go to and then again I'll give them what they need to type in here just to make it easy so say River slash house and make sure we add a space here in between the question mark and the end of the quote just so there's a a space one I'm actually typing it in and now let's check if an s equals equals in this case house then we'll do something else we'll do something else so what I'm actually gonna say here this will be kind of an interesting little twist to this game I wasn't even thinking about adding is if they decide to go the river we'll just tell them that they like fell in the river and they lost okay and then if they go towards the house we'll tell them that they went towards the house but they lost five health because like the guy at the house hit them or something I don't know I'm trying not to be too too violent in these answers but the idea being that I want it to make I want to make it so that they can get past this but if they decide to go across it will actually end up being the wrong decision because they lose five health right and then down here they lose another five so they'll lose the game I hope that makes sense but you'll see as I start coding it so if an S equals house then what we'll set is we'll say print you and you go to the house go to the house and I greeted oops by the owner duck duck he doesn't like you and you lose five went all right we'll just go with that we don't need any more deeper explanations I will say health minus equals five so we're removing five health again that's equivalent to help equals health minus five so whatever the value of health is we'll subtract five from it the reason I wouldn't just set health the fiber I wouldn't just set it to zero is because we don't know if they lost five health above here so we need to make sure we just subtract that value and then else we'll print down here you fell in the river and lost dot dot dot okay so now what we'll do after this right so you can kind of see the way that I'm actually let's see here managed to get across so now actually inside of this if statement sorry I'm just trying to think of what we're actually gonna do here on line 30 I'm gonna check if their health is lower than zero so if they have lower than two your health because this will be the first point in the game where they could potentially be at zero health if they lost it twice then we'll tell them that they lost otherwise we'll keep going right and then maybe we'll wrap up the game with one more path or something so we'll say if health is less than or equal to zero then what we'll do is we'll print you now have zero health and we don't need a comma and you lose the game dot dot dot all right so there we go you lost the game actually we'll just do and you've lost the game all right so if their health is lower than zero they lose otherwise then inside of here we'll save prints you have survived tutt tutt's you in I don't know we'll just say that they win at that point and I'll show you how we can have some more cool things do all right so that pretty much wraps it up let's test this game a few times and make sure that everything is working fine and then we'll add anything we need to so what is your name Tim let's actually test one if I go like 14 you're not allowed to play okay so let's go again Tim 19 yes first choice left her right let's go left nice you followed the path and reach a lake to you swim across you go around let's go let's cross you man she had a cross but you were bit by a fish and lost five help you notice a house in a river which do you go to the river the house let's go to the river and you fell in the river and lost okay let's try a few more paths I just want to make sure this works but I hope you guys understand the point of this right is to go down like all these different branching paths and you know if you make a bad decision at the beginning you're gonna have to keep going down all the routes until you realize that oh no I should have gone right instead of left right so you can make these really intricate and a lot of people that I've taught to do this before have made really cool games they're like hundreds of lines of code that take you a really long time to actually figure out so I think it's pretty interesting okay but first choice left or right let's go left nice you follow the path and reach a lake do you swim across or go around let's actually go across and let's test out this health stuff so we go across and then says you notice a house and river so let's go to the house says you go to the house and you are greeted whoops I should probably spell that right by the owner he doesn't like you and you lose five fealty you know you now have zero health and you lost the game right so you didn't technically lose because you went to the what is it because you went to the house it's just you lost because you lost five health right now I'll show you the example where if we don't lose five health at the first step we can actually survive by going to the house so what is your name Tim what is your age 19 do you want to play yes let's play first choice left or right so let's go left let's say nice you follow let's go around this time you want around reach the other side of the lake you notice a house and remember wish you go to let's go to the house and you go to the help and you're greeted by the owner he doesn't like you need lose five health you survive you win so even though we lost five health we still won because in the previous step we didn't lose five health so I hope that me showing you the health thing gave you some ideas for some stuff that you can do what you also can do is you can acts you can do something like let the user pick a weapon or something right so a cool example and I'll just talk about some kind of addons now because we're kind of wrapping up the video anyways you could do something like you can start by asking them what weapon you want so you could say you know weapon equals input pick a weapon question mark or pick a weapon cool and then your options could be something like sword I don't know maybe like a baton I'm trying not to be too violent and I don't know let's go something like taser right so you can tell them to pick one of these weapons and then based on the weapon they pick you can say oh well if they have this weapon then they're able to get past this obstacle if they don't have this weapon then they can't so what you would do if you want to check something like that is you'd say if weapon equals equals whatever it equals and if it equals that then boom they're good to go right and they can continue on now the last thing we'll show you because we have one minute left kind of before I'm planning on wrapping this up is how you can actually check multiple things on the same line now I'm just gonna kind of introduce this to you guys because then you can kind of look at it yourself it's pretty easy there's these things called and and or now and and or are ways that we can chain conditions together I'm not gonna explain them in depth but if you do something like true or false the result of this is true the reason this is true is because when you have an or this pretty much says look at the left side look at the right side if one of them are true the whole thing is true so if you go ahead and do something like you know X aha let's alright I say like five equals five seven equals equals eight then this would be true right because this condition is true this condition is false so since one of them is true the whole thing is true now contrasting that with and so when you do and what the does is it checks if both of the things on the left and right hand side are true if they are the whole thing is true if they're not it's false so in this case this would be false because one of them is false but if I change this to be like seven equals equals seven then this is true so you can use this and and or to actually chain conditions together so you could check like inside of here if left or right and you know weapon equals equals whatever you can do something like that OOP so I put this in the wrong if left left or right equals equals left oops and weapon equals equals whatever it equals right inside of here then this whole thing will work so you can check if this whole condition is true or false and then execute an if statement based on that so with that being said I think that's pretty much it I'm gonna zoom out here so you guys can have a look at all of the code at once I understand this maybe isn't mobile friendly but at least now you can kind of see what we've actually created and I really hope that throughout this series you guys have learned something about Python you've learned kind of the basics of the language and if and else and I've given you enough knowledge that you now feel a little bit confident to go out there and make some kind of cool game I will say there's a ton more stuff you can do with this there's a lot more things to learn but again the focus of this series was around building a project and I really hope that this helped you do that so with that being said and that has been int I hope you guys enjoyed if you did make sure you leave a like subscribe and I will see you in another YouTube video
