With timestamps:

00:02 - [Music]
00:08 - hello everybody and welcome back to
00:10 - another flutter tutorial
00:11 - so in today's video what we're going to
00:13 - be doing is setting up firebase so all
00:15 - we're going to do is just set up this
00:17 - firebase so that we can actually use all
00:19 - the authentication
00:20 - databases anything that we want from it
00:22 - this is a little bit of a process so i
00:24 - decided to dedicate a whole video to
00:25 - doing that
00:26 - but that's what we're going to be doing
00:27 - so for anyone that doesn't know what
00:28 - firebase is this is kind of google's
00:30 - like authentication database system
00:33 - super easy to use compared to setting up
00:35 - our own database and creating all those
00:37 - kinds of things
00:38 - there is obviously a few steps that we
00:39 - need to follow but we're just going to
00:40 - go through them
00:41 - so the first thing that we're going to
00:42 - do to actually start setting up firebase
00:44 - is we need to kind of make a project or
00:46 - an account on the firebase website
00:48 - so you just simply go to
00:50 - firebase.google.com all the links i
00:52 - mention here
00:53 - should be in the description if they're
00:54 - not leave a comment and i will
00:55 - definitely add them
00:56 - but firebase.google.com and then you're
00:59 - going to simply sign in with the account
01:00 - that you actually want to create this
01:02 - firebase project under so your google
01:04 - account
01:05 - and then simply click go to console so
01:07 - once you click go to console
01:09 - you should see a bunch of projects here
01:10 - actually you probably won't see any
01:12 - projects here if you haven't used this
01:13 - before
01:13 - but for example i have four different
01:15 - projects so these are all firebase
01:17 - projects that i've used before
01:18 - you can see this one is the one that i
01:20 - was just messing with before this
01:21 - tutorial to make sure everything was
01:23 - working
01:23 - so the first thing we're going to do
01:24 - here is just simply add a project so
01:26 - literally just click add project and
01:28 - then it tells you exactly what you need
01:29 - to do
01:30 - give it a name so i'm just going to make
01:31 - this our message app
01:35 - excuse me that's what i'll call it for
01:36 - now and click
01:38 - continue all right so now it's going to
01:40 - ask you oh do you want analytics for
01:41 - your firebase project
01:43 - i usually just say yes because why not i
01:45 - mean say you actually were going to
01:46 - deploy this or you just wanted to see
01:48 - how many reads and writes you're having
01:49 - per second or something like that i
01:50 - think this is useful so i just leave it
01:52 - enabled
01:53 - and click continue next it's going to
01:55 - ask you for an account if you have
01:57 - multiple i believe
01:58 - for me i have two i'm just going to go
02:00 - default account for firebase that's
02:01 - probably the one you're going to want to
02:02 - select as well
02:04 - and you can make a new account i believe
02:05 - it says here automatically create a new
02:07 - property
02:08 - don't worry about all that we could just
02:09 - keep it nice and simple just make
02:10 - default account for firebase the account
02:12 - you're going to put here
02:13 - all right next we're going to click
02:15 - create project it's going to take a
02:16 - second
02:17 - once this is done i will be back all
02:18 - right so our project is now ready you
02:20 - can see message app has been created so
02:22 - i'm going to go ahead and click
02:23 - continue awesome so here we go now we
02:26 - are in kind of our dashboard for this
02:28 - project you can see there's
02:29 - authentication database storage hosting
02:32 - machine learning so on so forth a ton of
02:34 - stuff here and there is premium
02:36 - subscriptions for firebase
02:37 - where you can get you can actually use
02:39 - this in deployment and have like a bunch
02:41 - of servers and all that kind of stuff
02:42 - i don't know a ton about that we're not
02:44 - going to need to use that we're just
02:45 - going to be using all the free features
02:47 - of this
02:47 - so the first thing we're going to do is
02:49 - we're going to connect this to our
02:50 - android application
02:51 - so in this tutorial i'm just going to be
02:53 - showing us how to do this for android
02:55 - if you're doing this on ios things are
02:57 - definitely more tricky and you actually
02:59 - need a mac
03:00 - so since i know a lot of you guys don't
03:01 - have mac os i decided just to skip doing
03:04 - the ios stuff
03:05 - because it's going to be tricky and most
03:06 - of you actually won't be able to do it
03:08 - without having a mac
03:10 - so anyways we're just going to click on
03:11 - this android icon right here so get
03:13 - started by adding firebase to your app
03:15 - so let's go ahead and click that and now
03:17 - we're going to need to add this
03:18 - information so let me just boot up vs
03:20 - code i'll be back in a second and then
03:21 - i'll show us what we need to put here
03:23 - okay so i got my vs code running but
03:25 - first before i even go back into that
03:26 - which is here
03:27 - let's just have a look at the things
03:28 - that we're being asked for here so the
03:30 - first thing we need is an android
03:31 - package
03:32 - name if you hover over this it says your
03:33 - package name is generally the
03:35 - application id in your app level
03:37 - build.gradle file so we'll be able to
03:38 - find that in just a second
03:40 - app nickname we choose that and then a
03:42 - debug signing certificate
03:44 - sha1 optional now since we're actually
03:46 - going to be using authentication we do
03:48 - need to give this
03:49 - to our app so this is not optional for
03:52 - our case
03:53 - i'm going to show you how we can
03:54 - generate a sha-1 token or hash or
03:56 - whatever this is called
03:58 - in just a second but that'll be a next
03:59 - step but we do need to do this so just
04:00 - make sure you don't
04:01 - click register app until you've added
04:03 - these three things
04:04 - so the first thing we're going to do is
04:06 - we're going to go to vs code
04:08 - and we're going to our uh project level
04:10 - build.gradle file so i'm going to click
04:12 - into android
04:13 - and then there should be a build.gradle
04:14 - file there we're going to click
04:16 - into that and we're simply going to look
04:18 - for our application id
04:19 - which actually might not be in here
04:23 - um one second i think i can search for
04:26 - it in here so i'm just going to search
04:27 - for
04:28 - application id right here in the search
04:31 - bar in bs code
04:32 - and we can see in build.gradle which is
04:34 - inside android app
04:36 - okay so that's going to be inside app
04:38 - build.gradle
04:39 - we should have something that says our
04:41 - application id so here we go
04:43 - application id so we can specify our own
04:46 - unique application id if we want
04:48 - or we can simply just use this one so
04:50 - we're going to use this one
04:52 - this com.example.helloworld that's going
04:55 - to be our app
04:56 - id so we're going to grab that and we're
04:58 - going to put that back
04:59 - inside up here awesome so now we have
05:02 - that now we can give this a nickname
05:04 - i'm just going to call this message app
05:06 - even though
05:07 - nothing in our app is really related to
05:08 - messaging i've just been calling it
05:10 - message app the whole time so let's go
05:11 - with that
05:12 - and now we need the debug signing
05:14 - certificate so this is actually a few
05:16 - steps
05:16 - to do this we need java installed on our
05:19 - computer so if you don't have java
05:20 - there'll be a link in the description to
05:22 - install it
05:22 - in fact let me just go to that link and
05:24 - show you what i mean so let's go here
05:27 - this is the development kit for java so
05:29 - if you download this it's going to come
05:30 - with a tool that we need to use
05:32 - you can scroll down here see linux mac
05:34 - windows so on so forth and just download
05:36 - the appropriate one
05:37 - run through the installer should be
05:39 - pretty quick and that will download java
05:41 - on your machine
05:42 - once you have that you can follow with
05:43 - the next step that i'm going to do now
05:44 - so i'm going to close that
05:46 - and now what we need to do is generate
05:47 - an sh1 hash so if we hover
05:49 - over this says see this page for
05:50 - information on using key tool
05:52 - to get the sh1 hash of your signing
05:54 - certificate
05:55 - so this is how your app is actually
05:58 - going to authenticate with google we
06:00 - need like a specific hash
06:02 - and we can use this thing called key
06:03 - tool which comes with java to generate
06:05 - that
06:06 - so i will leave this link in the
06:07 - description as well although i'm going
06:09 - to be going through all of the steps
06:10 - here
06:11 - essentially we just need to run this key
06:12 - tool command in our command prompt and
06:14 - this is going to generate a hash for us
06:16 - that we can use
06:17 - and store a keystore file somewhere on
06:19 - our computer you don't really have to
06:20 - understand how all this works but
06:22 - essentially just imagine that
06:23 - our app needs some way to actually
06:25 - authenticate itself
06:27 - with the google servers so since we're
06:29 - just doing this in kind of a debug mode
06:31 - right now we're not actually doing
06:32 - anything in production
06:33 - things will be a bit easier for us but
06:36 - you have to imagine right that someone
06:37 - else could pretend to be our app and
06:39 - steal people's passwords emails whatever
06:41 - it might be
06:42 - so we need some kind of hash to
06:43 - authenticate ourselves that could be a
06:44 - poor explanation but you guys can read
06:46 - through here
06:47 - it says certain google play services
06:48 - such as google sign-in and app invites
06:51 - require you to provide a sha-1 of your
06:53 - signing certificate so we can create an
06:54 - oauth 2 clients
06:55 - and api key for your app so that's
06:58 - pretty much what we're doing
06:59 - okay so assuming that you downloaded
07:01 - java now we need to find java on our
07:04 - computer
07:04 - and we need to add it to our system path
07:06 - so we can actually use
07:08 - key tool so java is typically installed
07:11 - in your c
07:11 - drive so i'm going to go to this pc you
07:13 - can see i have a bunch of hard drives
07:14 - here
07:15 - but most of you will probably just have
07:16 - a c drive if you change the location of
07:18 - it obviously
07:19 - go to that location but we're just
07:21 - looking for our program files inside of
07:23 - c
07:23 - drive so c drive program files and then
07:25 - we're going to look for
07:26 - java so if i scroll down here i can see
07:29 - java i didn't see it was modified
07:31 - actually today at 107 pm when i
07:33 - downloaded java earlier
07:35 - and then inside of here we might have
07:37 - two things we might just have one
07:38 - doesn't matter which one you have both
07:40 - of these are going to have the tool that
07:42 - we need
07:43 - i recently installed the jdk but i'm
07:45 - actually going to use the jre
07:47 - doesn't matter again which one of these
07:49 - two folders that you have you might even
07:50 - have more than these
07:51 - but click into one of them whichever one
07:54 - i'm just going to go with jre
07:55 - and then click into bin now inside of
07:58 - bin if you scroll down you should see an
08:00 - executable
08:01 - called key tool if you don't see that go
08:03 - into one of the other folders that was
08:05 - inside of your java folder
08:06 - and find inside of the bin something
08:09 - that says key tool
08:10 - this is the tool that we're going to
08:11 - need to use to actually generate this um
08:13 - this sha-1 token that we need so i'm
08:16 - actually just going to copy
08:17 - this path right here so from c drive
08:20 - program files
08:21 - java jre and then bin so that's the path
08:24 - we want to copy
08:25 - the way that i'm doing that right just
08:26 - by clicking here and clicking ctrl c to
08:28 - copy that
08:29 - and now what i'm going to do is i'm
08:31 - going to type environment variable in my
08:33 - windows search bar
08:34 - at the bottom left hand corner what
08:36 - we're going to do now is actually add
08:38 - this path
08:38 - to our system path you might recall we
08:41 - did this in video one
08:42 - so that now we can actually access key
08:44 - tool from the command line and any of
08:46 - the java stuff that we want so we're
08:47 - gonna click edit environment variables
08:49 - next we're gonna click on path so you
08:52 - guys might not be brought to this page
08:54 - you might be brought to something that
08:55 - looks like this and then just simply
08:57 - click
08:57 - environment variables and then it should
08:59 - pop up that window regardless we just
09:01 - want to get to modify our environment
09:03 - variables which is this page right here
09:05 - we're going to click on path we're going
09:06 - to click on edit and then we're going to
09:08 - click on
09:09 - new and we're going to add that path in
09:11 - so you can see i already have the path
09:12 - above because i've already added that
09:14 - one
09:14 - but that's what you need to do simply
09:17 - add the path
09:18 - to wherever this key tool is in this
09:20 - case it's obviously just the bin within
09:22 - our program files on our c
09:23 - drive in the java folder great so we're
09:26 - going to close that up now now we have
09:27 - that added to our path
09:29 - we can actually close our windows
09:30 - explorer and now if we open our command
09:33 - prompt and we type
09:34 - key tool like that it should actually
09:37 - pop up so there we go we can see key
09:38 - tool is popping up
09:39 - and it's giving us these are the
09:41 - commands that we have so we're simply
09:43 - going to copy the command that they have
09:44 - right here for some reason i couldn't
09:46 - get this to work before but i'm just
09:47 - going to copy this one
09:49 - and this tells you exactly what you need
09:50 - to do so literally you're just going to
09:52 - type this in this is going to make a
09:53 - keystore file
09:55 - this where it says user profile is going
09:57 - to automatically fill in with
09:59 - your user profile which is an
10:00 - environment variable
10:02 - and it will make this keystore file that
10:03 - we can then reference and when we're
10:05 - going to grab this key from the output
10:06 - so
10:07 - that might seem confusing but simply
10:08 - right click if you want to paste and i
10:10 - guess
10:11 - i didn't copy it properly let's see copy
10:14 - and back in here right click
10:18 - and ah so this keeps happening okay so
10:20 - we're actually gonna have to type this
10:22 - out because they did this weird thing
10:23 - with
10:24 - this backslash that i don't like or we
10:27 - need to go to like a notepad
10:29 - i'm gonna paste this in here and then
10:30 - get rid of this slash
10:32 - and just put this all in one line okay
10:34 - so this i'll leave this command in the
10:35 - description so you guys can just copy it
10:37 - if you want but essentially just get rid
10:38 - of that little
10:39 - slash and the new line because that's
10:41 - going to mess it up when we paste it in
10:42 - the terminal
10:43 - and just make it all one line so i've
10:45 - got that on all one line now i'm just
10:47 - going to copy that over
10:48 - delete everything here that i've filled
10:50 - in accidentally
10:52 - and then right click and enter keystore
10:54 - password so the default password for
10:56 - this is going to be android
10:57 - so just type in android you won't see
10:59 - anything showing up in the this password
11:01 - field
11:02 - that's fine once you type android hit
11:04 - enter
11:05 - and assuming you did everything
11:06 - correctly all of this stuff should be
11:08 - popping up
11:08 - now i want to note i probably shouldn't
11:10 - be showing you this um if this was like
11:12 - a production app you i probably don't
11:14 - want to be giving you away
11:15 - my key but it's fine because this is
11:17 - just a youtube tutorial i don't really
11:19 - care if you guys hack into my app
11:20 - and i don't know if you can or not but i
11:22 - just want to say be careful with these
11:24 - keys because
11:25 - i feel like they're probably important
11:27 - and you don't want to
11:28 - lose them or not lose them but give them
11:30 - to people that shouldn't know them
11:32 - so regardless once that happens you're
11:33 - going to see a bunch of output popping
11:35 - up here it's going to look like
11:36 - gibberish we're just going to look for
11:37 - sha1 and we're going to copy whatever is
11:40 - after the colon
11:41 - so all these little culinated things
11:43 - here so like ce92 blah blah whatever it
11:45 - is
11:46 - just copy that and then i'm just going
11:48 - to throw that in this notepad file for
11:50 - right now but we're going to use that in
11:51 - just a second
11:53 - all right so now we have that i can
11:54 - close my key tool thing here i'm
11:57 - actually going to close this webpage as
11:58 - well or i'll leave it open so i remember
12:00 - to add it to the description
12:02 - but now if we go to debug signing
12:03 - certificate we can simply paste in that
12:06 - sha-1 code
12:07 - that we copied from the command prompt
12:09 - so again you type in
12:10 - that command which will be in the
12:12 - description that key tool command and
12:14 - then you can grab sha 1 and put it here
12:16 - next we're going to click register app
12:19 - an unexpected error has occurred
12:20 - oauth client exists in a different
12:22 - project for package name
12:24 - okay so this is because i've already
12:26 - added an app using this so i'm just
12:28 - going to delete that other app and then
12:29 - i'll be back in one second and this
12:30 - should work
12:31 - okay so i just leave the other app now
12:33 - i'm pressing register app we can see
12:35 - things are working now
12:36 - you won't have that problem that was
12:38 - just because i was testing before and
12:39 - well
12:40 - that key we already used now you're
12:42 - gonna see we have to download this
12:43 - config file so we're gonna download this
12:45 - google services.json
12:47 - i already had one download so of course
12:48 - mine goes with the one i'm gonna have to
12:50 - change that name
12:51 - but regardless just download that file
12:53 - it will go to your downloads and then
12:54 - this is telling us where we need to put
12:56 - it
12:56 - so this is saying if you're in android
12:57 - studio but we can obviously do this in
12:59 - vs code
13:00 - we're gonna go into our android app and
13:03 - then we're gonna put that inside of the
13:04 - root directory
13:05 - are googleservices.json this is just a
13:08 - file that gives
13:08 - like some configuration information and
13:10 - we're going to link to that in a second
13:12 - from some of our other files
13:13 - so let's go into vs code now i'm going
13:16 - to go to my downloads you can see i have
13:18 - two google services
13:19 - i'm just going to delete this old one
13:20 - that i don't need and then i'm simply
13:22 - going to rename this one
13:23 - actually the proper name and grab it and
13:26 - i'm going to take it and bring it inside
13:27 - of android app
13:29 - so inside of this app folder i'm going
13:31 - to grab
13:32 - this right here and throw that in so it
13:35 - should be right beside build.gradle
13:37 - again not inside of the source folder
13:39 - just inside of the app folder
13:41 - okay now that we've done that we're
13:43 - actually going to link to this google
13:45 - services.json file
13:46 - so the way that we do that is we
13:48 - actually just need to modify
13:49 - our build.gradle so within this android
13:52 - app
13:52 - so right here we should see that there's
13:55 - this build.gradle file so not inside of
13:57 - the app folder sorry there's multiple
13:59 - build.gradle files that's what i'm
14:00 - specifying
14:01 - just inside of this root android this
14:03 - build.gradle file right here
14:05 - we're going to click on that and we're
14:06 - going to modify some of the dependencies
14:08 - here to add firebase as a dependency
14:11 - so this is kind of where you go when you
14:12 - want to just change things add
14:14 - dependencies add packages
14:16 - you add them inside of the gradle file
14:18 - at least for an android application
14:20 - so what we're going to need to do first
14:21 - of all is make sure that inside of
14:23 - repositories
14:24 - so in line three to line six your files
14:26 - should look the same as mine
14:28 - you have google and then same thing here
14:30 - inside of all projects make sure you
14:32 - have
14:32 - google and that might not be there if
14:34 - it's not just simply add it where i have
14:36 - it
14:36 - and make your file kind of look like
14:38 - mine next what we're going to do
14:40 - is we're going to go into dependencies
14:42 - which is right here and we're simply
14:43 - going to
14:44 - add this line that i'm just going to
14:45 - copy and paste in from my other screen
14:47 - so simply add class path and then you're
14:50 - going to do single quotation mark
14:53 - com.google.gms
14:55 - colon oops uh google hyphen services
14:59 - colon 4.3.2 obviously that's the version
15:02 - so this is just saying hey we need this
15:04 - dependency
15:05 - and you know this is the link to the
15:07 - dependency download it for us blah blah
15:09 - all right so now that we have that we're
15:11 - gonna go into all projects
15:12 - google is there okay and that is all we
15:14 - need to do for this file
15:16 - so as soon as we add this class path
15:18 - dependency that's good
15:19 - simply save the file make sure you save
15:22 - that and now what we're gonna do is go
15:23 - into our other build.gradle file and
15:26 - modify that one
15:27 - so inside of the app folder now before
15:29 - we are outside in the android we're
15:30 - going to go inside
15:31 - app we're going to go build.gradle and
15:33 - now we're going to modify
15:34 - this one so there's a few things to
15:36 - change here the first thing that we're
15:38 - going to do
15:38 - is we're going to grab this line here
15:40 - that i'm just going to copy and paste in
15:42 - it's going to say apply plug-in colon
15:45 - and then
15:47 - com.google.gms.google hyphen services
15:50 - so again i will try to remember to add
15:51 - this to the description please remind me
15:53 - or yeah please remind me if i forget
15:55 - but add this to the top so apply plug-in
15:58 - and then we're going to add a few other
15:59 - things as well
16:00 - okay so once we've added this plug-in
16:02 - now what we're going to do is we're
16:03 - going to go down to dependencies which
16:05 - is where this implementation is
16:07 - and we're simply just going to add one
16:08 - more implementation inside of here
16:11 - so inside dependencies i will add
16:13 - implementation com.google.firebase
16:16 - colon firebase hyphen analytics colon
16:20 - 17.2.0
16:21 - so a lot of stuff here but inside
16:23 - dependencies we need to add that
16:24 - and that's going to tell us again hey
16:26 - we're using firebase we need this as a
16:28 - dependency
16:29 - and i think if i'm just looking at my
16:31 - other screen here that that is
16:32 - all we need so go ahead and save that
16:36 - and now what we're going to do is sync
16:38 - and refresh these gradle files
16:40 - so oh that's great 127 problems
16:43 - perfect that's nice we can fix that in
16:45 - just a second
16:47 - what i'm going to do is go into my
16:49 - terminal sorry down here
16:51 - you can also just have a command prompt
16:53 - that's totally fine and what we're going
16:54 - to do
16:55 - is we're simply going to refresh these
16:57 - gradle dependencies
16:58 - so we need to actually change directory
17:00 - from down here
17:02 - into this android folder here so we're
17:04 - going to cd into
17:05 - android like that now that we're inside
17:08 - of android
17:09 - what i'm going to do is i'm going to put
17:11 - this command in here which is
17:12 - dot slash gradle w hyphen hyphen
17:16 - refresh dependencies okay so i don't
17:19 - know what
17:19 - was going wrong there i'm having all
17:21 - kinds of problems today uh just kind of
17:23 - finicky stuff but it seems like it's
17:24 - working
17:25 - now so it seems like it's running the
17:27 - app hopefully that
17:28 - is working and i'm gonna assume that
17:30 - once this is installed uh that this will
17:32 - actually work and we will connect
17:34 - so we'll give it a second and make sure
17:35 - that runs but i'll be back in a sec once
17:37 - this is telling me that hey you know
17:38 - everything is successful
17:40 - all right so i just refreshed the
17:41 - dependencies one more time i don't know
17:43 - if it worked properly the first time but
17:44 - just gradle w hyphen hyphen refresh
17:46 - dependencies within the android folder
17:49 - and now if we go over here we can see
17:51 - congratulations you successfully added
17:53 - firebase to your app
17:54 - so we can continue the console now we
17:56 - could say one app is connected here
17:58 - and we can actually have a look at that
17:59 - app and continue some setup if we want
18:02 - so anyways that has actually been this
18:04 - video all i wanted to get us to do was
18:06 - set this up successfully
18:07 - i know you guys could follow along with
18:09 - the instructions uh but there was some
18:10 - finicky stuff like for example this
18:12 - command i had to find that
18:14 - it did not tell me to do that within vs
18:16 - code um so just stuff like that
18:18 - figured i might be able to help you guys
18:19 - out with the installation process
18:21 - so if that was helpful for you make sure
18:23 - you leave a like
18:24 - subscribe to the channel and i will see
18:26 - you in the next video we'll actually be
18:28 - setting up proper authentication for our
18:30 - firebase application

Cleaned transcript:

hello everybody and welcome back to another flutter tutorial so in today's video what we're going to be doing is setting up firebase so all we're going to do is just set up this firebase so that we can actually use all the authentication databases anything that we want from it this is a little bit of a process so i decided to dedicate a whole video to doing that but that's what we're going to be doing so for anyone that doesn't know what firebase is this is kind of google's like authentication database system super easy to use compared to setting up our own database and creating all those kinds of things there is obviously a few steps that we need to follow but we're just going to go through them so the first thing that we're going to do to actually start setting up firebase is we need to kind of make a project or an account on the firebase website so you just simply go to firebase.google.com all the links i mention here should be in the description if they're not leave a comment and i will definitely add them but firebase.google.com and then you're going to simply sign in with the account that you actually want to create this firebase project under so your google account and then simply click go to console so once you click go to console you should see a bunch of projects here actually you probably won't see any projects here if you haven't used this before but for example i have four different projects so these are all firebase projects that i've used before you can see this one is the one that i was just messing with before this tutorial to make sure everything was working so the first thing we're going to do here is just simply add a project so literally just click add project and then it tells you exactly what you need to do give it a name so i'm just going to make this our message app excuse me that's what i'll call it for now and click continue all right so now it's going to ask you oh do you want analytics for your firebase project i usually just say yes because why not i mean say you actually were going to deploy this or you just wanted to see how many reads and writes you're having per second or something like that i think this is useful so i just leave it enabled and click continue next it's going to ask you for an account if you have multiple i believe for me i have two i'm just going to go default account for firebase that's probably the one you're going to want to select as well and you can make a new account i believe it says here automatically create a new property don't worry about all that we could just keep it nice and simple just make default account for firebase the account you're going to put here all right next we're going to click create project it's going to take a second once this is done i will be back all right so our project is now ready you can see message app has been created so i'm going to go ahead and click continue awesome so here we go now we are in kind of our dashboard for this project you can see there's authentication database storage hosting machine learning so on so forth a ton of stuff here and there is premium subscriptions for firebase where you can get you can actually use this in deployment and have like a bunch of servers and all that kind of stuff i don't know a ton about that we're not going to need to use that we're just going to be using all the free features of this so the first thing we're going to do is we're going to connect this to our android application so in this tutorial i'm just going to be showing us how to do this for android if you're doing this on ios things are definitely more tricky and you actually need a mac so since i know a lot of you guys don't have mac os i decided just to skip doing the ios stuff because it's going to be tricky and most of you actually won't be able to do it without having a mac so anyways we're just going to click on this android icon right here so get started by adding firebase to your app so let's go ahead and click that and now we're going to need to add this information so let me just boot up vs code i'll be back in a second and then i'll show us what we need to put here okay so i got my vs code running but first before i even go back into that which is here let's just have a look at the things that we're being asked for here so the first thing we need is an android package name if you hover over this it says your package name is generally the application id in your app level build.gradle file so we'll be able to find that in just a second app nickname we choose that and then a debug signing certificate sha1 optional now since we're actually going to be using authentication we do need to give this to our app so this is not optional for our case i'm going to show you how we can generate a sha1 token or hash or whatever this is called in just a second but that'll be a next step but we do need to do this so just make sure you don't click register app until you've added these three things so the first thing we're going to do is we're going to go to vs code and we're going to our uh project level build.gradle file so i'm going to click into android and then there should be a build.gradle file there we're going to click into that and we're simply going to look for our application id which actually might not be in here um one second i think i can search for it in here so i'm just going to search for application id right here in the search bar in bs code and we can see in build.gradle which is inside android app okay so that's going to be inside app build.gradle we should have something that says our application id so here we go application id so we can specify our own unique application id if we want or we can simply just use this one so we're going to use this one this com.example.helloworld that's going to be our app id so we're going to grab that and we're going to put that back inside up here awesome so now we have that now we can give this a nickname i'm just going to call this message app even though nothing in our app is really related to messaging i've just been calling it message app the whole time so let's go with that and now we need the debug signing certificate so this is actually a few steps to do this we need java installed on our computer so if you don't have java there'll be a link in the description to install it in fact let me just go to that link and show you what i mean so let's go here this is the development kit for java so if you download this it's going to come with a tool that we need to use you can scroll down here see linux mac windows so on so forth and just download the appropriate one run through the installer should be pretty quick and that will download java on your machine once you have that you can follow with the next step that i'm going to do now so i'm going to close that and now what we need to do is generate an sh1 hash so if we hover over this says see this page for information on using key tool to get the sh1 hash of your signing certificate so this is how your app is actually going to authenticate with google we need like a specific hash and we can use this thing called key tool which comes with java to generate that so i will leave this link in the description as well although i'm going to be going through all of the steps here essentially we just need to run this key tool command in our command prompt and this is going to generate a hash for us that we can use and store a keystore file somewhere on our computer you don't really have to understand how all this works but essentially just imagine that our app needs some way to actually authenticate itself with the google servers so since we're just doing this in kind of a debug mode right now we're not actually doing anything in production things will be a bit easier for us but you have to imagine right that someone else could pretend to be our app and steal people's passwords emails whatever it might be so we need some kind of hash to authenticate ourselves that could be a poor explanation but you guys can read through here it says certain google play services such as google signin and app invites require you to provide a sha1 of your signing certificate so we can create an oauth 2 clients and api key for your app so that's pretty much what we're doing okay so assuming that you downloaded java now we need to find java on our computer and we need to add it to our system path so we can actually use key tool so java is typically installed in your c drive so i'm going to go to this pc you can see i have a bunch of hard drives here but most of you will probably just have a c drive if you change the location of it obviously go to that location but we're just looking for our program files inside of c drive so c drive program files and then we're going to look for java so if i scroll down here i can see java i didn't see it was modified actually today at 107 pm when i downloaded java earlier and then inside of here we might have two things we might just have one doesn't matter which one you have both of these are going to have the tool that we need i recently installed the jdk but i'm actually going to use the jre doesn't matter again which one of these two folders that you have you might even have more than these but click into one of them whichever one i'm just going to go with jre and then click into bin now inside of bin if you scroll down you should see an executable called key tool if you don't see that go into one of the other folders that was inside of your java folder and find inside of the bin something that says key tool this is the tool that we're going to need to use to actually generate this um this sha1 token that we need so i'm actually just going to copy this path right here so from c drive program files java jre and then bin so that's the path we want to copy the way that i'm doing that right just by clicking here and clicking ctrl c to copy that and now what i'm going to do is i'm going to type environment variable in my windows search bar at the bottom left hand corner what we're going to do now is actually add this path to our system path you might recall we did this in video one so that now we can actually access key tool from the command line and any of the java stuff that we want so we're gonna click edit environment variables next we're gonna click on path so you guys might not be brought to this page you might be brought to something that looks like this and then just simply click environment variables and then it should pop up that window regardless we just want to get to modify our environment variables which is this page right here we're going to click on path we're going to click on edit and then we're going to click on new and we're going to add that path in so you can see i already have the path above because i've already added that one but that's what you need to do simply add the path to wherever this key tool is in this case it's obviously just the bin within our program files on our c drive in the java folder great so we're going to close that up now now we have that added to our path we can actually close our windows explorer and now if we open our command prompt and we type key tool like that it should actually pop up so there we go we can see key tool is popping up and it's giving us these are the commands that we have so we're simply going to copy the command that they have right here for some reason i couldn't get this to work before but i'm just going to copy this one and this tells you exactly what you need to do so literally you're just going to type this in this is going to make a keystore file this where it says user profile is going to automatically fill in with your user profile which is an environment variable and it will make this keystore file that we can then reference and when we're going to grab this key from the output so that might seem confusing but simply right click if you want to paste and i guess i didn't copy it properly let's see copy and back in here right click and ah so this keeps happening okay so we're actually gonna have to type this out because they did this weird thing with this backslash that i don't like or we need to go to like a notepad i'm gonna paste this in here and then get rid of this slash and just put this all in one line okay so this i'll leave this command in the description so you guys can just copy it if you want but essentially just get rid of that little slash and the new line because that's going to mess it up when we paste it in the terminal and just make it all one line so i've got that on all one line now i'm just going to copy that over delete everything here that i've filled in accidentally and then right click and enter keystore password so the default password for this is going to be android so just type in android you won't see anything showing up in the this password field that's fine once you type android hit enter and assuming you did everything correctly all of this stuff should be popping up now i want to note i probably shouldn't be showing you this um if this was like a production app you i probably don't want to be giving you away my key but it's fine because this is just a youtube tutorial i don't really care if you guys hack into my app and i don't know if you can or not but i just want to say be careful with these keys because i feel like they're probably important and you don't want to lose them or not lose them but give them to people that shouldn't know them so regardless once that happens you're going to see a bunch of output popping up here it's going to look like gibberish we're just going to look for sha1 and we're going to copy whatever is after the colon so all these little culinated things here so like ce92 blah blah whatever it is just copy that and then i'm just going to throw that in this notepad file for right now but we're going to use that in just a second all right so now we have that i can close my key tool thing here i'm actually going to close this webpage as well or i'll leave it open so i remember to add it to the description but now if we go to debug signing certificate we can simply paste in that sha1 code that we copied from the command prompt so again you type in that command which will be in the description that key tool command and then you can grab sha 1 and put it here next we're going to click register app an unexpected error has occurred oauth client exists in a different project for package name okay so this is because i've already added an app using this so i'm just going to delete that other app and then i'll be back in one second and this should work okay so i just leave the other app now i'm pressing register app we can see things are working now you won't have that problem that was just because i was testing before and well that key we already used now you're gonna see we have to download this config file so we're gonna download this google services.json i already had one download so of course mine goes with the one i'm gonna have to change that name but regardless just download that file it will go to your downloads and then this is telling us where we need to put it so this is saying if you're in android studio but we can obviously do this in vs code we're gonna go into our android app and then we're gonna put that inside of the root directory are googleservices.json this is just a file that gives like some configuration information and we're going to link to that in a second from some of our other files so let's go into vs code now i'm going to go to my downloads you can see i have two google services i'm just going to delete this old one that i don't need and then i'm simply going to rename this one actually the proper name and grab it and i'm going to take it and bring it inside of android app so inside of this app folder i'm going to grab this right here and throw that in so it should be right beside build.gradle again not inside of the source folder just inside of the app folder okay now that we've done that we're actually going to link to this google services.json file so the way that we do that is we actually just need to modify our build.gradle so within this android app so right here we should see that there's this build.gradle file so not inside of the app folder sorry there's multiple build.gradle files that's what i'm specifying just inside of this root android this build.gradle file right here we're going to click on that and we're going to modify some of the dependencies here to add firebase as a dependency so this is kind of where you go when you want to just change things add dependencies add packages you add them inside of the gradle file at least for an android application so what we're going to need to do first of all is make sure that inside of repositories so in line three to line six your files should look the same as mine you have google and then same thing here inside of all projects make sure you have google and that might not be there if it's not just simply add it where i have it and make your file kind of look like mine next what we're going to do is we're going to go into dependencies which is right here and we're simply going to add this line that i'm just going to copy and paste in from my other screen so simply add class path and then you're going to do single quotation mark com.google.gms colon oops uh google hyphen services colon 4.3.2 obviously that's the version so this is just saying hey we need this dependency and you know this is the link to the dependency download it for us blah blah all right so now that we have that we're gonna go into all projects google is there okay and that is all we need to do for this file so as soon as we add this class path dependency that's good simply save the file make sure you save that and now what we're gonna do is go into our other build.gradle file and modify that one so inside of the app folder now before we are outside in the android we're going to go inside app we're going to go build.gradle and now we're going to modify this one so there's a few things to change here the first thing that we're going to do is we're going to grab this line here that i'm just going to copy and paste in it's going to say apply plugin colon and then com.google.gms.google hyphen services so again i will try to remember to add this to the description please remind me or yeah please remind me if i forget but add this to the top so apply plugin and then we're going to add a few other things as well okay so once we've added this plugin now what we're going to do is we're going to go down to dependencies which is where this implementation is and we're simply just going to add one more implementation inside of here so inside dependencies i will add implementation com.google.firebase colon firebase hyphen analytics colon 17.2.0 so a lot of stuff here but inside dependencies we need to add that and that's going to tell us again hey we're using firebase we need this as a dependency and i think if i'm just looking at my other screen here that that is all we need so go ahead and save that and now what we're going to do is sync and refresh these gradle files so oh that's great 127 problems perfect that's nice we can fix that in just a second what i'm going to do is go into my terminal sorry down here you can also just have a command prompt that's totally fine and what we're going to do is we're simply going to refresh these gradle dependencies so we need to actually change directory from down here into this android folder here so we're going to cd into android like that now that we're inside of android what i'm going to do is i'm going to put this command in here which is dot slash gradle w hyphen hyphen refresh dependencies okay so i don't know what was going wrong there i'm having all kinds of problems today uh just kind of finicky stuff but it seems like it's working now so it seems like it's running the app hopefully that is working and i'm gonna assume that once this is installed uh that this will actually work and we will connect so we'll give it a second and make sure that runs but i'll be back in a sec once this is telling me that hey you know everything is successful all right so i just refreshed the dependencies one more time i don't know if it worked properly the first time but just gradle w hyphen hyphen refresh dependencies within the android folder and now if we go over here we can see congratulations you successfully added firebase to your app so we can continue the console now we could say one app is connected here and we can actually have a look at that app and continue some setup if we want so anyways that has actually been this video all i wanted to get us to do was set this up successfully i know you guys could follow along with the instructions uh but there was some finicky stuff like for example this command i had to find that it did not tell me to do that within vs code um so just stuff like that figured i might be able to help you guys out with the installation process so if that was helpful for you make sure you leave a like subscribe to the channel and i will see you in the next video we'll actually be setting up proper authentication for our firebase application
