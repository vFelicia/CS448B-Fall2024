With timestamps:

00:00 - hey guys and welcome to another Kibby
00:02 - tutorial so in today's video I'm gonna
00:04 - be showing you how we can get kind of
00:06 - mouse input and also uh like finger
00:08 - input so like if someone was for it to
00:10 - example touch the screen with their
00:11 - thumb or like drag something around or
00:13 - whatnot this will work for all of that
00:15 - and then I think in the next video just
00:17 - give you a quick kind of summary of
00:18 - what's going on I want to get into
00:20 - drawing some things so for example maybe
00:22 - you want to use kevie for some kind of
00:23 - game development or something like that
00:24 - how can we draw kind of object shapes
00:26 - move those around and then we'll get
00:30 - into probably some more advanced stuff
00:32 - like creating multiple windows creating
00:33 - better applications where for example if
00:36 - you get the correct correct login it
00:38 - brings you to a page that gives you like
00:40 - your secret notes or something I don't
00:41 - really know exactly what I want to do
00:42 - but if you guys have any ideas please
00:43 - don't hesitate to let me know I'm
00:46 - thinking maybe sometime in the future I
00:47 - want to build kind of like a big GUI
00:49 - with this and walk you guys through how
00:50 - to really go into developing a proper
00:52 - application with Gibby
00:53 - but no promises on that it just kind of
00:56 - an idea that I had in my head so today
00:58 - we're getting input so we need to do
01:01 - actually is we're gonna have to re
01:02 - import our widgets so from kv2 IX start
01:07 - widgets import and will just import
01:10 - widget like that I'm sorry this is
01:13 - widget in case you didn't read along and
01:15 - what I'm gonna do is I'm gonna create
01:17 - this class so I'm just gonna create
01:18 - class I'm gonna call it touch it's gonna
01:19 - stand for like getting our touch input
01:21 - it's gonna inherit from widget and then
01:23 - in here I'm gonna define a few functions
01:25 - and we'll go through and talk about what
01:27 - they are so the first one is gonna be on
01:28 - underscore oh and then you can have it
01:31 - here on touch down okay and let's define
01:33 - another one so define on touch move and
01:37 - what define on touch up like that
01:40 - perfect so we've already got three so we
01:43 - can just pass in here for right now but
01:45 - essentially what these functions are
01:47 - gonna do is they have one input
01:49 - parameter right so we have touch and
01:51 - what's just gonna happen is essentially
01:53 - when we touch down on the screen we will
01:55 - get the position or we'll be able to get
01:57 - the position of where we pressed and a
01:59 - few a few other piece of information as
02:01 - well we're not gonna really use those
02:02 - and then same thing with move and up so
02:05 - when we're moving while touching the
02:07 - screen we'll be able to get that
02:08 - information and then if we release will
02:10 - not be able to see where we released
02:12 - when we release
02:13 - but not so some useful functions and
02:15 - again since we're inheriting from widget
02:17 - this means that these functions just
02:18 - work on any what do you call it like a
02:21 - grid layout box layout float layout
02:24 - whatever you're using these work on
02:26 - those and yeah so we'll talk about that
02:29 - in a second so I'll just go in rkv file
02:31 - I want to just create a small window
02:32 - here so actually sorry back to the
02:34 - kibbeh file
02:35 - let's return touch first we don't forget
02:37 - let's go to the KB file and what I'm
02:39 - gonna do in here is I'm just gonna say
02:40 - touch and in here I'm just gonna create
02:43 - a button just to prove to you that
02:45 - indeed we can put things inside alright
02:47 - so we'll do button say text equals say
02:51 - my BTN why not and that's all we need
02:54 - for a kibbeh file I just want to add
02:56 - something to the screen so for on touch
02:58 - down obviously that means like we press
03:00 - down or we click the mouse button down
03:02 - so all I'm gonna do is I'm just gonna
03:03 - print and we'll say no stone and then we
03:09 - can just print out touch and if we do
03:11 - this it'll print out like the position
03:13 - of the touch for us okay so same thing
03:15 - with on touch move will print mouse move
03:20 - okay and then we'll print touch again
03:22 - and I assume you guys can probably guess
03:26 - what we're gonna be printing here we'll
03:28 - say Mouse up and touch okay so let's run
03:33 - this and just see invalid property name
03:35 - yes text equals I'm sure you guys all
03:38 - saw that and got mad at me so text : now
03:41 - let's run this we have my button
03:42 - obviously here and just look in the
03:44 - console in the bottom left while I'm
03:45 - doing this when I press Mouse down mouse
03:48 - up gives us the s position and the
03:51 - position s position I believe stands for
03:54 - like relative position where this is
03:57 - like the absolute position so that's
04:00 - actually useful because for example like
04:01 - with our float layouts maybe we were
04:03 - like 30 percent X we don't know the
04:04 - actual X value of that button so we'd
04:06 - want to use the S position to figure out
04:09 - where our mouse is just now notice if I
04:11 - drag along it should keep going yeah you
04:14 - can see that just spamming mouse move
04:16 - because I was just dragging along the
04:17 - screen and then we get excuse me there
04:20 - we get mouse up at the bottom so you can
04:23 - see how that works now just something to
04:25 - notice here if I do try to click my bud
04:26 - it's no longer actually clicking like
04:29 - it's not highlighting and that's because
04:31 - and I believe this is the reason someone
04:33 - correct me if I'm wrong but when we have
04:36 - like we override this what do you call
04:39 - it this function mouse down this
04:41 - function already exists and this would
04:44 - he call it a touch movie or what not
04:45 - they already exist inside of this widget
04:47 - class and when we create them in here
04:48 - what we're doing is we're overriding the
04:50 - functionality of the function that's in
04:53 - the widget class so usually what would
04:55 - happen is on touchdown that function
04:57 - would trigger the let's say button to
05:00 - change colors right so what we're doing
05:02 - essentially when we override this is
05:04 - we're changing that functionality and
05:05 - we're removing all the functionality the
05:07 - other function and implementing our own
05:09 - so if you wanted our button to change
05:11 - like state when we clicked it what we'd
05:14 - have to do is we have to import this
05:15 - object property so you know what let's
05:16 - just do it
05:17 - so from Kirito properties import object
05:22 - property and then remember how we create
05:24 - an object property so let's just say bt
05:26 - m equals object property
05:29 - we'll say none and i believe in the QB
05:32 - file we just got to create a global
05:33 - variable here so let's say b TN equals
05:36 - BTN ah
05:37 - does it : yeah it gets : we'll see
05:40 - though and I will say ID BTN now we can
05:44 - do is we can say for example on
05:45 - touchdown will say BTN dot uh what was
05:49 - it BT and maybe color opacity opacity we
05:53 - can try that equals 0.5 and we'll see if
05:57 - this works I could have just absolutely
05:59 - butchered that BTN it's gonna be self
06:01 - that BTN opacity go pass it there you go
06:06 - okay so let's run this and when I click
06:09 - it now you can see that the opacity
06:11 - changes now obviously I would probably
06:13 - want to well actually change this
06:14 - opacity back when we release the button
06:17 - so that's a afterthoughts will do a past
06:19 - equals one and now if we click it we
06:22 - hold down we release it now our button
06:24 - is actually pressing properly like it
06:26 - should have been before so that's how
06:28 - you can do that I know it's not an ideal
06:30 - way to kind of fix that but when you
06:32 - override these functions that's what you
06:33 - have to do so I knew this has been a
06:35 - short video but this is all I'm gonna
06:36 - show for right now in the next video
06:38 - we'll get into some more advanced stuff
06:39 - I want to do some drawing we're gonna
06:40 - mess with this more if you guys have any
06:42 - ideas for any videos other videos you'd
06:44 - like to see please let me know and with
06:46 - that being said I'll see you guys in
06:47 - another video
06:49 - [Music]

Cleaned transcript:

hey guys and welcome to another Kibby tutorial so in today's video I'm gonna be showing you how we can get kind of mouse input and also uh like finger input so like if someone was for it to example touch the screen with their thumb or like drag something around or whatnot this will work for all of that and then I think in the next video just give you a quick kind of summary of what's going on I want to get into drawing some things so for example maybe you want to use kevie for some kind of game development or something like that how can we draw kind of object shapes move those around and then we'll get into probably some more advanced stuff like creating multiple windows creating better applications where for example if you get the correct correct login it brings you to a page that gives you like your secret notes or something I don't really know exactly what I want to do but if you guys have any ideas please don't hesitate to let me know I'm thinking maybe sometime in the future I want to build kind of like a big GUI with this and walk you guys through how to really go into developing a proper application with Gibby but no promises on that it just kind of an idea that I had in my head so today we're getting input so we need to do actually is we're gonna have to re import our widgets so from kv2 IX start widgets import and will just import widget like that I'm sorry this is widget in case you didn't read along and what I'm gonna do is I'm gonna create this class so I'm just gonna create class I'm gonna call it touch it's gonna stand for like getting our touch input it's gonna inherit from widget and then in here I'm gonna define a few functions and we'll go through and talk about what they are so the first one is gonna be on underscore oh and then you can have it here on touch down okay and let's define another one so define on touch move and what define on touch up like that perfect so we've already got three so we can just pass in here for right now but essentially what these functions are gonna do is they have one input parameter right so we have touch and what's just gonna happen is essentially when we touch down on the screen we will get the position or we'll be able to get the position of where we pressed and a few a few other piece of information as well we're not gonna really use those and then same thing with move and up so when we're moving while touching the screen we'll be able to get that information and then if we release will not be able to see where we released when we release but not so some useful functions and again since we're inheriting from widget this means that these functions just work on any what do you call it like a grid layout box layout float layout whatever you're using these work on those and yeah so we'll talk about that in a second so I'll just go in rkv file I want to just create a small window here so actually sorry back to the kibbeh file let's return touch first we don't forget let's go to the KB file and what I'm gonna do in here is I'm just gonna say touch and in here I'm just gonna create a button just to prove to you that indeed we can put things inside alright so we'll do button say text equals say my BTN why not and that's all we need for a kibbeh file I just want to add something to the screen so for on touch down obviously that means like we press down or we click the mouse button down so all I'm gonna do is I'm just gonna print and we'll say no stone and then we can just print out touch and if we do this it'll print out like the position of the touch for us okay so same thing with on touch move will print mouse move okay and then we'll print touch again and I assume you guys can probably guess what we're gonna be printing here we'll say Mouse up and touch okay so let's run this and just see invalid property name yes text equals I'm sure you guys all saw that and got mad at me so text now let's run this we have my button obviously here and just look in the console in the bottom left while I'm doing this when I press Mouse down mouse up gives us the s position and the position s position I believe stands for like relative position where this is like the absolute position so that's actually useful because for example like with our float layouts maybe we were like 30 percent X we don't know the actual X value of that button so we'd want to use the S position to figure out where our mouse is just now notice if I drag along it should keep going yeah you can see that just spamming mouse move because I was just dragging along the screen and then we get excuse me there we get mouse up at the bottom so you can see how that works now just something to notice here if I do try to click my bud it's no longer actually clicking like it's not highlighting and that's because and I believe this is the reason someone correct me if I'm wrong but when we have like we override this what do you call it this function mouse down this function already exists and this would he call it a touch movie or what not they already exist inside of this widget class and when we create them in here what we're doing is we're overriding the functionality of the function that's in the widget class so usually what would happen is on touchdown that function would trigger the let's say button to change colors right so what we're doing essentially when we override this is we're changing that functionality and we're removing all the functionality the other function and implementing our own so if you wanted our button to change like state when we clicked it what we'd have to do is we have to import this object property so you know what let's just do it so from Kirito properties import object property and then remember how we create an object property so let's just say bt m equals object property we'll say none and i believe in the QB file we just got to create a global variable here so let's say b TN equals BTN ah does it yeah it gets we'll see though and I will say ID BTN now we can do is we can say for example on touchdown will say BTN dot uh what was it BT and maybe color opacity opacity we can try that equals 0.5 and we'll see if this works I could have just absolutely butchered that BTN it's gonna be self that BTN opacity go pass it there you go okay so let's run this and when I click it now you can see that the opacity changes now obviously I would probably want to well actually change this opacity back when we release the button so that's a afterthoughts will do a past equals one and now if we click it we hold down we release it now our button is actually pressing properly like it should have been before so that's how you can do that I know it's not an ideal way to kind of fix that but when you override these functions that's what you have to do so I knew this has been a short video but this is all I'm gonna show for right now in the next video we'll get into some more advanced stuff I want to do some drawing we're gonna mess with this more if you guys have any ideas for any videos other videos you'd like to see please let me know and with that being said I'll see you guys in another video
