With timestamps:

00:03 - foreign
00:08 - so over the past couple months you've
00:10 - been binge watching my YouTube videos
00:11 - you've taken a course like
00:13 - programmingexpert.io and you finally
00:15 - feel like you've gotten python down
00:16 - you're good at programming and you're
00:18 - ready to move on to something else so
00:20 - the natural question becomes what is
00:21 - next what do I need to learn and how do
00:23 - I level up as a developer well in this
00:25 - video I'm going to share with you three
00:27 - programming languages that I would
00:28 - recommend you learn after learning
00:30 - python you don't have to learn all of
00:32 - these languages in fact I've picked
00:33 - three very different languages based on
00:35 - different types of developers and where
00:37 - you kind of see yourself going in your
00:39 - career so stay tuned let me share these
00:41 - languages with you after a quick word
00:42 - from our sponsor before we get started I
00:45 - need to thank lenod for sponsoring this
00:46 - video I've been using and working with
00:49 - lenode for nearly three years now and
00:51 - they've consistently been my go-to
00:52 - choice for hosting my applications and
00:54 - servers in fact right now I'm using the
00:56 - node to host the official Tech with Tim
00:58 - Discord bot a website multiple of my
01:01 - domains and a kubernetes cluster lenode
01:03 - makes it super easy to spin up servers
01:05 - with their one-click app Marketplace and
01:07 - have tons of written guides in and
01:08 - YouTube videos on their channel to help
01:10 - you get started if you're having any
01:12 - issues you can reach out to their 24 7
01:14 - support team and actually talk with a
01:16 - real human being now the node's pricing
01:18 - is simple with no hidden fees and full
01:20 - transparency and you can test out the
01:22 - node services for free by using the link
01:25 - in the description and claiming in
01:26 - 100.60 day credit for any new accounts
01:29 - it's been an absolute pleasure to work
01:31 - with lenode over the past few years and
01:33 - one last thank you to them for
01:34 - sponsoring this video so I want to begin
01:36 - here by giving you a quick summary of
01:38 - the Python language and just talking
01:39 - about some of the different language
01:41 - features so you understand why I'm
01:42 - recommending these other languages so
01:44 - python is a general purpose
01:46 - object-oriented dynamically typed
01:48 - programming language now dynamically
01:50 - typed means that when you're using
01:52 - python you don't really need to know
01:54 - what types your variables are you don't
01:56 - need to be declaring those they can
01:57 - change types and you can do all kinds of
01:59 - weird and kind of wonky operations that
02:01 - you can't do in other programming
02:03 - languages because of the fact that it's
02:04 - dynamically tight this also makes it
02:06 - much more beginner friendly and python
02:08 - include a ton of standard Library
02:09 - features that other programming
02:11 - languages don't have there's a ton of
02:13 - helpful built-in functions there's a ton
02:14 - of stuff that's automated for you and
02:16 - just done automatically and you don't
02:17 - need to worry about low level code and
02:20 - you're not really looking at pointers or
02:21 - memory or any kind of optimization on a
02:24 - lower level python is a very high level
02:26 - programming language now python for me
02:28 - at least is what I use when I want to
02:29 - get something done fast and typically
02:31 - when I'm scripted so it's really used a
02:33 - lot in machine learning artificial
02:34 - intelligence data science it's used for
02:37 - backend web servers and it's used for
02:39 - other scripting tasks so if you want to
02:41 - automate some file operations or you
02:43 - just need to do any automation python is
02:45 - really really good at that because of
02:46 - how quickly you can write code however
02:48 - python is not the best when it comes to
02:50 - Enterprise grade applications anything
02:52 - that requires a high performance and
02:54 - you're not going to see python in a lot
02:56 - of large scale apps it doesn't scale
02:58 - extremely well and that's coming from a
03:00 - guy who loves writing code in Python I
03:02 - would never use Python to create
03:03 - something that's like a massive
03:05 - application that would not be my choice
03:06 - so with all that said the core disadvant
03:08 - advantage of python is really the
03:09 - performance and scalability of it and
03:11 - the fact that you're not going to be
03:12 - using it in massive applications so with
03:15 - that said let's now roll into my three
03:17 - language recommendations and I'll kind
03:18 - of compare them all to Python and give
03:20 - you the reason why you may want to learn
03:22 - this language so there's three different
03:23 - routes that we can go down here the
03:25 - first route is you want to learn another
03:26 - programming language and you want to
03:28 - learn something that's similar to python
03:30 - so a lot of your knowledge is going to
03:31 - carry over you like the syntax of python
03:33 - you like python you want something
03:34 - that's going to be close to that the
03:36 - next route is you want to learn
03:37 - something completely different something
03:38 - that has really no resemblance to Python
03:40 - and that's going to give you a
03:41 - completely new perspective of writing
03:43 - code and then the third alternative is
03:45 - you want to learn something that's
03:46 - complementary to python something that
03:48 - can kind of use with python and that
03:50 - gives you two languages that can work
03:52 - together in an application now with that
03:53 - in mind I'm sure many of you are
03:54 - guessing the languages already but let's
03:56 - go to point number one which is you want
03:58 - to learn something familiar and similar
03:59 - to pyte so this language that I'm going
04:01 - to recommend to you for this First
04:02 - Avenue is to learn go now go is a fairly
04:05 - new programming language it is
04:07 - statically typed it is extremely fast
04:09 - and highly performant and it's typically
04:11 - used in back-end applications for
04:13 - back-end web services now go is actually
04:15 - a language that I teach in
04:16 - programmingexpert.io I also have a few
04:18 - uh tutorials on it on this channel and a
04:20 - lot of people really like go because
04:22 - it's extremely simple it has a very
04:24 - similar syntax to python but it's much
04:26 - more powerful when it comes to creating
04:27 - web services and back-end applications
04:29 - so if you're someone who's more of a
04:31 - back-end developer you don't really see
04:32 - yourself working on the front end you
04:34 - just want a language that's going to be
04:35 - more capable and used in more production
04:37 - grade software go is definitely a great
04:40 - language and it's going to give you a
04:41 - really good perspective on what it's
04:43 - like to work with statically typed
04:44 - languages in go you're going to be
04:46 - dealing with features like pointers
04:48 - references you're going to have go
04:49 - routines and concurrency and you're
04:51 - going to be able to create scalable and
04:53 - very fast applications with this
04:55 - language now in terms of the limitations
04:57 - of go you can't really use it in many
04:59 - front-end applications maybe there's a
05:00 - few Frameworks that I'm not aware of but
05:02 - it's not the best if you want to create
05:03 - say a user interface that's not the
05:05 - language that I would recommend this is
05:07 - really a language that's going to be
05:08 - pretty easy to transition to from python
05:10 - but still give you a good perspective on
05:12 - the different aspects of coding you're
05:14 - missing in a dynamically typed language
05:16 - yet you're going to have this high
05:17 - performance language it's very In Demand
05:19 - right now A lot of people are looking
05:20 - for go programmers and personally this
05:22 - is the one I would recommend to most
05:24 - people if you really like python already
05:26 - you like python you're going to like go
05:28 - I can promise you that so moving on to
05:30 - my second recommendation this is
05:31 - something very different from Python and
05:33 - this is C plus plus now C plus plus is
05:36 - objectively a very powerful programming
05:38 - language it has really unlimited use
05:40 - cases and C plus plus has been used in
05:42 - tens of millions of development projects
05:44 - that may be an exaggeration but it's
05:46 - used literally everywhere and anything
05:48 - you could think of making you can do
05:50 - with C plus plus you want to make a
05:51 - triple A game yeah you can do that with
05:53 - C plus plus want to make a website you
05:54 - can do that want to make a compiler you
05:56 - can do that want to have a really high
05:58 - performance kind of like little chip
05:59 - that's sitting inside of some Hardware
06:01 - device you can do that with C plus plus
06:02 - in terms of writing the software for it
06:04 - so this is a very very powerful language
06:06 - and one of the reasons for that is that
06:07 - it implements a a lot of lower level
06:09 - features that you're not going to see
06:11 - obviously in languages like python for
06:13 - example in C plus plus you're going to
06:14 - be exposed to pointers references
06:16 - addresses memory management you're going
06:18 - to be dealing with stuff that you didn't
06:20 - need to deal with in Python it's not to
06:21 - say that you can't use these things in
06:23 - other programming languages like python
06:25 - or like go but it kind of forces you to
06:27 - know more about what's happening in your
06:29 - code when you work in a language like C
06:31 - plus C plus plus is also just a very
06:33 - fast programming language uh it will do
06:35 - everything maybe a thousand times faster
06:36 - than python depending on the operation
06:38 - and it's just a very well-known General
06:41 - programming language that's used by
06:43 - millions of people and that you can't
06:44 - really go wrong with learn now with that
06:46 - said I will warn you it is more
06:48 - challenging this isn't something that is
06:49 - as beginner friendly I wouldn't
06:51 - recommend most people start learning C
06:53 - plus as their first programming language
06:55 - and this is something that's going to
06:56 - take longer to learn and get good at
06:57 - than something like ghosts you kind of
06:59 - need to pick what you want to do here
07:00 - you want to get kind of a hybrid between
07:02 - Python and C plus that would be
07:04 - something like go or do you want to dive
07:05 - right into the deep end and go with a
07:07 - more challenging probe programming
07:08 - language but is maybe more powerful in
07:10 - the future really depends on what you
07:12 - want to do and where you see yourself if
07:13 - you're someone who's just going to be
07:14 - working on the back end maybe go is
07:16 - totally fine for you if you're someone
07:17 - who just wants to learn a ton of new
07:18 - stuff you want to dive into something
07:20 - completely different then I would
07:21 - recommend C plus plus now though let's
07:23 - go on to my final recommendation so
07:25 - moving on to my final recommendation I
07:27 - have something that is very
07:28 - complementary to Python and that is
07:30 - Javascript now JavaScript is obviously a
07:32 - very popular programming language it's
07:34 - used by millions of people in millions
07:36 - of applications if you've ever been on
07:38 - the web you've interacted with
07:40 - JavaScript multiple times now JavaScript
07:42 - is my recommendation here because it
07:44 - meshes really well with python now with
07:46 - python you kind of have the back end you
07:48 - can create a web server you can you know
07:49 - hook up a database you can do all of
07:51 - that with python relatively easily then
07:53 - what you need is some front-end user
07:55 - interface so rather than using python to
07:57 - do that you can use JavaScript you can
07:59 - spin up a simple react server you can
08:01 - use something like angular it's very
08:03 - easy to go and build a project when you
08:05 - know languages like Python and
08:06 - JavaScript you kind of already already
08:08 - are a full stack developer when you know
08:10 - these two languages now obviously
08:11 - there's a few more things that you'd
08:12 - want to learn but I just think that if
08:14 - you're kind of trying to pick the
08:15 - language that's going to progress to you
08:16 - the fastest in terms of getting a job or
08:19 - building projects or apps Python and
08:21 - JavaScript are going to be the ones that
08:22 - you probably want to know they're the
08:24 - easiest to write in in my opinion
08:25 - they're the most popular there's tons of
08:27 - resources for them it's very easy to
08:29 - kind of get started with this quite
08:30 - quickly now the downside of JavaScript
08:32 - is that it is a dynamically typed
08:34 - language that means that you're missing
08:35 - out on all the benefits of a statically
08:37 - typed language when you decide to learn
08:39 - something like this rather than C plus
08:40 - plus or go switching from python to
08:42 - JavaScript you're not going to be
08:43 - learning a ton there's going to be a few
08:45 - features that you pick up in JavaScript
08:47 - that you didn't know about from python
08:48 - but you're not going to be handling
08:50 - memory you're not going to be dealing
08:51 - with lower level features you're not
08:53 - going to be getting this kind of full
08:54 - perspective on all these different types
08:56 - of programming languages because you've
08:57 - kind of stayed in a language that's very
08:59 - similar to Pi so again this decision is
09:01 - really up to you and deciding on okay
09:03 - what do you want to learn what are your
09:04 - goals is your goal to get a job as fast
09:06 - as possible to build a project you you
09:08 - just want to become a better programmer
09:09 - are you interested in just learning new
09:11 - stuff do you want something kind of
09:12 - similar to python up to you I'm going to
09:14 - let you make the decision but these are
09:15 - my three recommendations to summarize go
09:17 - kind of a hybrid between C plus plus and
09:20 - python very similar syntax to python but
09:22 - it's a very high performance language
09:23 - very good for backend web services very
09:26 - popular nowadays as well and you're
09:28 - going to learn about concurrency lower
09:30 - level features really good second
09:31 - language to Python and probably pretty
09:33 - fast for you to learn compared to a
09:35 - language like C plus moving on to C plus
09:37 - plus objectively the most powerful
09:39 - language on this list something that's
09:40 - used by so many different projects
09:42 - that's constantly in demand and that is
09:45 - going to teach you a lot about computer
09:46 - science topics and just becoming a
09:49 - better programmer in general finally
09:50 - JavaScript probably the most practical
09:52 - language in terms of getting a job or
09:54 - building a project it's not going to
09:56 - give you the most learning benefits in
09:58 - terms of computer science or becoming
10:00 - just a better programmer or Problem
10:01 - Solver but it's going to allow you to
10:03 - build stuff much faster than the other
10:05 - options that I put on this list so with
10:07 - that said let me know what you guys guys
10:08 - think in the comments down below these
10:09 - are my three recommendations I'm curious
10:11 - to hear what yours would be and I look
10:13 - forward to seeing you in another YouTube
10:14 - video
10:22 - [Music]

Cleaned transcript:

foreign so over the past couple months you've been binge watching my YouTube videos you've taken a course like programmingexpert.io and you finally feel like you've gotten python down you're good at programming and you're ready to move on to something else so the natural question becomes what is next what do I need to learn and how do I level up as a developer well in this video I'm going to share with you three programming languages that I would recommend you learn after learning python you don't have to learn all of these languages in fact I've picked three very different languages based on different types of developers and where you kind of see yourself going in your career so stay tuned let me share these languages with you after a quick word from our sponsor before we get started I need to thank lenod for sponsoring this video I've been using and working with lenode for nearly three years now and they've consistently been my goto choice for hosting my applications and servers in fact right now I'm using the node to host the official Tech with Tim Discord bot a website multiple of my domains and a kubernetes cluster lenode makes it super easy to spin up servers with their oneclick app Marketplace and have tons of written guides in and YouTube videos on their channel to help you get started if you're having any issues you can reach out to their 24 7 support team and actually talk with a real human being now the node's pricing is simple with no hidden fees and full transparency and you can test out the node services for free by using the link in the description and claiming in 100.60 day credit for any new accounts it's been an absolute pleasure to work with lenode over the past few years and one last thank you to them for sponsoring this video so I want to begin here by giving you a quick summary of the Python language and just talking about some of the different language features so you understand why I'm recommending these other languages so python is a general purpose objectoriented dynamically typed programming language now dynamically typed means that when you're using python you don't really need to know what types your variables are you don't need to be declaring those they can change types and you can do all kinds of weird and kind of wonky operations that you can't do in other programming languages because of the fact that it's dynamically tight this also makes it much more beginner friendly and python include a ton of standard Library features that other programming languages don't have there's a ton of helpful builtin functions there's a ton of stuff that's automated for you and just done automatically and you don't need to worry about low level code and you're not really looking at pointers or memory or any kind of optimization on a lower level python is a very high level programming language now python for me at least is what I use when I want to get something done fast and typically when I'm scripted so it's really used a lot in machine learning artificial intelligence data science it's used for backend web servers and it's used for other scripting tasks so if you want to automate some file operations or you just need to do any automation python is really really good at that because of how quickly you can write code however python is not the best when it comes to Enterprise grade applications anything that requires a high performance and you're not going to see python in a lot of large scale apps it doesn't scale extremely well and that's coming from a guy who loves writing code in Python I would never use Python to create something that's like a massive application that would not be my choice so with all that said the core disadvant advantage of python is really the performance and scalability of it and the fact that you're not going to be using it in massive applications so with that said let's now roll into my three language recommendations and I'll kind of compare them all to Python and give you the reason why you may want to learn this language so there's three different routes that we can go down here the first route is you want to learn another programming language and you want to learn something that's similar to python so a lot of your knowledge is going to carry over you like the syntax of python you like python you want something that's going to be close to that the next route is you want to learn something completely different something that has really no resemblance to Python and that's going to give you a completely new perspective of writing code and then the third alternative is you want to learn something that's complementary to python something that can kind of use with python and that gives you two languages that can work together in an application now with that in mind I'm sure many of you are guessing the languages already but let's go to point number one which is you want to learn something familiar and similar to pyte so this language that I'm going to recommend to you for this First Avenue is to learn go now go is a fairly new programming language it is statically typed it is extremely fast and highly performant and it's typically used in backend applications for backend web services now go is actually a language that I teach in programmingexpert.io I also have a few uh tutorials on it on this channel and a lot of people really like go because it's extremely simple it has a very similar syntax to python but it's much more powerful when it comes to creating web services and backend applications so if you're someone who's more of a backend developer you don't really see yourself working on the front end you just want a language that's going to be more capable and used in more production grade software go is definitely a great language and it's going to give you a really good perspective on what it's like to work with statically typed languages in go you're going to be dealing with features like pointers references you're going to have go routines and concurrency and you're going to be able to create scalable and very fast applications with this language now in terms of the limitations of go you can't really use it in many frontend applications maybe there's a few Frameworks that I'm not aware of but it's not the best if you want to create say a user interface that's not the language that I would recommend this is really a language that's going to be pretty easy to transition to from python but still give you a good perspective on the different aspects of coding you're missing in a dynamically typed language yet you're going to have this high performance language it's very In Demand right now A lot of people are looking for go programmers and personally this is the one I would recommend to most people if you really like python already you like python you're going to like go I can promise you that so moving on to my second recommendation this is something very different from Python and this is C plus plus now C plus plus is objectively a very powerful programming language it has really unlimited use cases and C plus plus has been used in tens of millions of development projects that may be an exaggeration but it's used literally everywhere and anything you could think of making you can do with C plus plus you want to make a triple A game yeah you can do that with C plus plus want to make a website you can do that want to make a compiler you can do that want to have a really high performance kind of like little chip that's sitting inside of some Hardware device you can do that with C plus plus in terms of writing the software for it so this is a very very powerful language and one of the reasons for that is that it implements a a lot of lower level features that you're not going to see obviously in languages like python for example in C plus plus you're going to be exposed to pointers references addresses memory management you're going to be dealing with stuff that you didn't need to deal with in Python it's not to say that you can't use these things in other programming languages like python or like go but it kind of forces you to know more about what's happening in your code when you work in a language like C plus C plus plus is also just a very fast programming language uh it will do everything maybe a thousand times faster than python depending on the operation and it's just a very wellknown General programming language that's used by millions of people and that you can't really go wrong with learn now with that said I will warn you it is more challenging this isn't something that is as beginner friendly I wouldn't recommend most people start learning C plus as their first programming language and this is something that's going to take longer to learn and get good at than something like ghosts you kind of need to pick what you want to do here you want to get kind of a hybrid between Python and C plus that would be something like go or do you want to dive right into the deep end and go with a more challenging probe programming language but is maybe more powerful in the future really depends on what you want to do and where you see yourself if you're someone who's just going to be working on the back end maybe go is totally fine for you if you're someone who just wants to learn a ton of new stuff you want to dive into something completely different then I would recommend C plus plus now though let's go on to my final recommendation so moving on to my final recommendation I have something that is very complementary to Python and that is Javascript now JavaScript is obviously a very popular programming language it's used by millions of people in millions of applications if you've ever been on the web you've interacted with JavaScript multiple times now JavaScript is my recommendation here because it meshes really well with python now with python you kind of have the back end you can create a web server you can you know hook up a database you can do all of that with python relatively easily then what you need is some frontend user interface so rather than using python to do that you can use JavaScript you can spin up a simple react server you can use something like angular it's very easy to go and build a project when you know languages like Python and JavaScript you kind of already already are a full stack developer when you know these two languages now obviously there's a few more things that you'd want to learn but I just think that if you're kind of trying to pick the language that's going to progress to you the fastest in terms of getting a job or building projects or apps Python and JavaScript are going to be the ones that you probably want to know they're the easiest to write in in my opinion they're the most popular there's tons of resources for them it's very easy to kind of get started with this quite quickly now the downside of JavaScript is that it is a dynamically typed language that means that you're missing out on all the benefits of a statically typed language when you decide to learn something like this rather than C plus plus or go switching from python to JavaScript you're not going to be learning a ton there's going to be a few features that you pick up in JavaScript that you didn't know about from python but you're not going to be handling memory you're not going to be dealing with lower level features you're not going to be getting this kind of full perspective on all these different types of programming languages because you've kind of stayed in a language that's very similar to Pi so again this decision is really up to you and deciding on okay what do you want to learn what are your goals is your goal to get a job as fast as possible to build a project you you just want to become a better programmer are you interested in just learning new stuff do you want something kind of similar to python up to you I'm going to let you make the decision but these are my three recommendations to summarize go kind of a hybrid between C plus plus and python very similar syntax to python but it's a very high performance language very good for backend web services very popular nowadays as well and you're going to learn about concurrency lower level features really good second language to Python and probably pretty fast for you to learn compared to a language like C plus moving on to C plus plus objectively the most powerful language on this list something that's used by so many different projects that's constantly in demand and that is going to teach you a lot about computer science topics and just becoming a better programmer in general finally JavaScript probably the most practical language in terms of getting a job or building a project it's not going to give you the most learning benefits in terms of computer science or becoming just a better programmer or Problem Solver but it's going to allow you to build stuff much faster than the other options that I put on this list so with that said let me know what you guys guys think in the comments down below these are my three recommendations I'm curious to hear what yours would be and I look forward to seeing you in another YouTube video
