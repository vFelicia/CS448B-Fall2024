With timestamps:

00:00 - hey guys and welcome to another PI QT
00:02 - tutorial so in today's video we're just
00:04 - gonna be talking about menu bars now
00:06 - many bars are the things that you see
00:08 - usually in the top left-hand corner of
00:10 - your screen or the top bar whatever you
00:12 - want to call it it says like file edit
00:14 - Forum views so how to set those up how
00:16 - to trigger different functions with them
00:19 - and methods like we did before with
00:20 - regular buttons and then how to set some
00:22 - stuff like the status tip the icon
00:26 - shortcuts for them you know all that fun
00:28 - stuff so I'm just gonna go in QT design
00:30 - we're gonna be working in here and what
00:31 - we're gonna do is create the GUI export
00:33 - it to code and then kind of look at how
00:35 - the code works so I'm just gonna go and
00:37 - create a new main window here I'm an
00:39 - inside of here what I'm gonna do you
00:41 - start by just adding a really basic
00:43 - label which is what we're gonna use when
00:45 - we want to show like what button we
00:47 - press just as an example of how you can
00:49 - do certain things so I'm gonna set the
00:51 - font size a little bigger here just to
00:53 - see it nicely so we'll go 20 actually
00:56 - you know it's let's make it a little bit
00:58 - bigger let's go to 36 why not okay and
01:01 - I'll leave that as label we don't need
01:03 - to do anything more with that so
01:05 - whenever we're creating the file menu
01:06 - all we have to do really is just go
01:08 - where it says type here and just start
01:09 - typing and creating our file menu it's
01:11 - pretty intuitive so I'm gonna say file
01:13 - is my first one
01:14 - and edit as my next one and you can see
01:17 - that it kind of brings this thing down
01:19 - it says type here this will allow you to
01:21 - add all the sub menus so in this case
01:24 - our sub buttons whatever you want to
01:25 - call them so in this case I'm just gonna
01:26 - create new as one of them and save and
01:31 - we're just using these as examples it
01:32 - doesn't really have to make sense and
01:34 - under edit I'm gonna do copy and I'm
01:36 - going to do paste now if you want to add
01:39 - another menu to these copy and paste
01:41 - buttons or like cascade it down you can
01:44 - just click on this plus button here and
01:46 - you see where it says like type here you
01:48 - can add another submenu or whatever you
01:51 - want to call it and you can see all the
01:53 - buttons there as well and do the same
01:54 - thing that I had to show you with those
01:56 - buttons so let's go ahead and just start
01:59 - by setting up a few things for this new
02:01 - button under file so the first thing I
02:04 - want to do is have a look at this name
02:05 - here so it's called action name this is
02:07 - how I'm actually gonna reference it in
02:08 - the program so I want to make sure
02:09 - that's okay action
02:11 - new
02:12 - fine we'll leave that and what I'm gonna
02:15 - do now is set a shortcut for this which
02:16 - is a keyboard shortcut so the keyboard
02:19 - shortcut that I set will allow me to
02:20 - just hit like for example ctrl s or ctrl
02:23 - n or whatever I set it and that will
02:25 - trigger the like press of that button in
02:27 - the program so that all you have to do
02:29 - if you want to save something is you
02:31 - know hit ctrl s like you might do in
02:33 - this program right so what I'm gonna do
02:35 - is go ahead and say for new is gonna be
02:38 - ctrl n we'll save that here and the next
02:41 - thing I'm gonna add is the status tip
02:43 - now the status the status tip is what's
02:46 - gonna show up in the status bar and the
02:48 - status bar is in the bottom left-hand
02:50 - corner of your application so down here
02:54 - where my mouse is right where OpenGL
02:55 - widget is right below that is the status
02:57 - bar and you see if I go to like form and
02:59 - layout horizontally you can see that it
03:02 - shows lays out the selected which it
03:04 - horizontally so we're gonna create what
03:06 - text we want to show up in that status
03:08 - bar when we hover over that new button
03:11 - so in this case I'm just gonna say
03:12 - create a new file just some random stuff
03:16 - so that it kind of makes sense and we
03:18 - can see it when it goes there so the
03:20 - next one is save so for save I'm gonna
03:22 - set that shortcut to be ctrl s and the
03:25 - status tip is going to be saved a file
03:28 - and then we'll do the same thing for
03:31 - edit so for copy we're gonna say status
03:33 - tip will be copy a file and the shortcut
03:37 - will be ctrl C and then for paste we
03:41 - will have control V and we'll have the
03:44 - status tip as paste a file why not
03:48 - okay so now that I've done that I'm
03:50 - gonna save this and I'll just save this
03:52 - as test dot UI and I'm gonna save that
03:55 - to where does it pie QT tutorial so
03:59 - we'll go ahead and click yes make sure
04:01 - you know where you save this file
04:02 - obviously because now we're gonna export
04:04 - it to code and start actually working
04:05 - with it so what I'm gonna do now is go
04:08 - to my command prompt you can see I've
04:10 - already actually used this command twice
04:12 - what I'm gonna do is CD into the
04:14 - directory where my thing is I showed
04:16 - this in the last video so in this case
04:18 - is in PI QT tutorial and I'm gonna run
04:21 - the command PI UIC 5 -
04:23 - in this case test out UI that's name the
04:26 - file I just saved and then dot o which
04:28 - stands for output file which in this
04:29 - case is gonna be tutorial for dot pod
04:32 - let's run that hit enter give it a
04:34 - second to go and now if I go into sub
04:37 - line text and I open up tutorial for I
04:40 - think I need to reopen it because I
04:41 - overrode it then you can see that we've
04:44 - created this this file thing whatever it
04:47 - is in code so let's run this and just
04:49 - make sure everything looks alright here
04:51 - and there we go we get text label we
04:52 - have file new save we have edit copy and
04:55 - paste now apparently my shortcuts for
04:58 - save and for paste didn't work but
05:01 - that's fine I'll actually show you how
05:02 - we can set those from code so let's
05:04 - quickly run through this code understand
05:06 - how it works and then we'll add some
05:08 - methods here that we can call and change
05:10 - the label based on when we press one of
05:12 - those buttons so let's go here and let's
05:16 - have a look so up here we're just gonna
05:17 - setting up the central window I'm
05:20 - setting up the size we already know how
05:21 - that works now here we're actually
05:23 - setting up a font object and that way
05:26 - we're gonna set the font size to be 36
05:28 - for our label you can kind of see how
05:30 - that works I'll spread this out here
05:32 - main window set central widget that's
05:35 - just gonna be what's in the middle is
05:37 - obviously central widget which is you
05:39 - know the main window here now menu bar
05:43 - is gonna be the obviously that file menu
05:44 - bar at the top you can see that we're
05:46 - setting the two things here so a menu
05:48 - file menu edit and then we go ahead and
05:51 - change those names as well now what we
05:54 - do here when we set the shortcuts I
05:57 - believe it is here that we do this so
05:59 - what we want to do is actually add some
06:03 - other shortcuts to this so the way that
06:05 - we can do that is just using set
06:08 - shortcut so apparently ours like didn't
06:11 - work for two of them I guess maybe I
06:12 - didn't save it properly so what we'll do
06:14 - is we will if I can find which ones
06:17 - didn't work which was it paste that
06:19 - didn't work and save so for save if we
06:24 - want to set a shortcut what we're gonna
06:26 - do is I'm just gonna copy this action
06:27 - copy here go to save so where's that go
06:31 - right underneath and we'll just
06:32 - translate that shortcut so in this case
06:34 - we'll do main window we're gonna change
06:36 - this from action
06:37 - copy to action save I'd be like this and
06:42 - then instead of control see it is gonna
06:44 - be control s like that so use that one
06:48 - and now same thing for the other one
06:50 - that we need a shortcut for which I
06:51 - believe was pasted so down here we're
06:54 - gonna set change this instead of action
06:56 - copy to be action paste and we'll make
06:59 - this control beep so now those shortcuts
07:02 - are set up if I run this now we have
07:04 - control s and we have control be serving
07:07 - is working perfectly alright so next
07:09 - step is to make sure that we actually
07:11 - set up these buttons so that they do
07:12 - something when we press them so the
07:15 - first part to do that and we've already
07:16 - kind of gone through this procedure so
07:17 - I'm just kind of speeding through it is
07:19 - I'm gonna create a method that is going
07:21 - to be called whenever we press one of
07:23 - those buttons so in this case I'm just
07:24 - gonna call it clicked but I'm gonna do
07:26 - something differently here and we're
07:28 - gonna talk about how this works in just
07:30 - one second so inside of here I'm
07:32 - actually gonna take another argument
07:33 - rather than just self that is text and
07:36 - what I'm gonna do is just update the
07:38 - label so I'm gonna say self dot label
07:40 - dot set text again this is just how we
07:43 - change that label text we've already
07:44 - been over this and I'm gonna set it to
07:46 - be equal to whatever is passed in as
07:47 - text now next what I'm gonna do is I'm
07:51 - going to adjust the size of my label so
07:53 - self-thought label dot adjust size just
07:58 - to make sure that you know it resizes
08:00 - appropriately all right so now time to
08:02 - actually link up these buttons to our
08:05 - you know clicked event here so to do
08:08 - that is similar to what we did with the
08:10 - other buttons except it's just one
08:13 - different word and you'll see that in a
08:14 - second so what I'm gonna do is I'm gonna
08:16 - say self dot in this case we want to
08:18 - start with new so action new so self not
08:21 - action new dots in this case triggered
08:25 - which is different than clicked the book
08:27 - that we had before and triggered
08:29 - essentially just means pressed the
08:30 - reason it's called triggered is because
08:32 - you can trigger it using the shortcut as
08:33 - well and then what we're gonna do is dot
08:36 - connect and we're gonna say this method
08:40 - here so self dot clicked but the way
08:42 - we're gonna do this is using something
08:44 - called a lambda a lambda is actually
08:47 - just like um it's called like a mini
08:49 - function I'll try to explain kind of how
08:53 - this works but I'm gonna do lambda and
08:54 - then in here I say self dot clicked and
08:57 - I'm gonna actually pass the argument
09:00 - text now text is gonna be whatever I
09:02 - want the label to change to so if you
09:04 - click new I'm just gonna say like new
09:06 - was clicked
09:08 - now I'm gonna copy this four times then
09:10 - I'm gonna explain what lambda is so
09:13 - we're gonna change instead of action new
09:15 - we're gonna have action save we're gonna
09:17 - have action copy and action paste and
09:22 - then instead of newest clicked we'll do
09:25 - all these other ones so save go copy
09:29 - like this and we will go pace all right
09:34 - so let's run this quickly and then I'll
09:35 - explain kind of other stuff so I go file
09:37 - new you can see new is click to go file
09:39 - save save was clicked edit copy and
09:41 - paste paste was clicked there you go
09:44 - that it's working now the reason I'm
09:47 - done I've done it this way is so that I
09:48 - didn't have to create four methods that
09:52 - each updated the label to be a different
09:54 - thing because with our previous
09:55 - knowledge all we knew how to do here was
09:58 - just put like self thought clicked and
10:01 - we didn't even put the brackets right we
10:02 - just put the name of the method now
10:04 - that's fine
10:05 - but the thing is if you want the method
10:07 - to work for a bunch of different objects
10:09 - which we do in this case well what I
10:12 - need to do is give it some kind of
10:14 - argument so it's different based on
10:15 - those objects but previously we didn't
10:17 - know how to passed the argument so the
10:19 - way that this works is this self dot
10:23 - action dot trigger connect it takes as
10:26 - its argument one function so before what
10:29 - we were giving was clicked and that was
10:31 - the function now in this case what we're
10:34 - actually giving it is a function and
10:36 - this is what lambda stands for sense
10:38 - stands for a function that's defined on
10:40 - one line and that function actually
10:43 - calls another function called self dot
10:46 - clicked but is able to pass it a
10:48 - parameter because before we couldn't
10:50 - pass that parameter but now since we're
10:52 - saying let's call a function that calls
10:54 - another function and pass the parameter
10:57 - that actually works fine I know it's a
10:59 - little bit confusing you don't have to
11:00 - really understand this to get why this
11:02 - but if you ever want to pass information
11:04 - to the the clicked you know method or
11:07 - trigger whatever it is then that's the
11:09 - way you do it so anyways that is kind of
11:11 - it for the menu bar you can see if I hit
11:13 - my shortcuts like control and control V
11:15 - control C those are all working as well
11:18 - and with that being said I will see you
11:20 - guys in another video

Cleaned transcript:

hey guys and welcome to another PI QT tutorial so in today's video we're just gonna be talking about menu bars now many bars are the things that you see usually in the top lefthand corner of your screen or the top bar whatever you want to call it it says like file edit Forum views so how to set those up how to trigger different functions with them and methods like we did before with regular buttons and then how to set some stuff like the status tip the icon shortcuts for them you know all that fun stuff so I'm just gonna go in QT design we're gonna be working in here and what we're gonna do is create the GUI export it to code and then kind of look at how the code works so I'm just gonna go and create a new main window here I'm an inside of here what I'm gonna do you start by just adding a really basic label which is what we're gonna use when we want to show like what button we press just as an example of how you can do certain things so I'm gonna set the font size a little bigger here just to see it nicely so we'll go 20 actually you know it's let's make it a little bit bigger let's go to 36 why not okay and I'll leave that as label we don't need to do anything more with that so whenever we're creating the file menu all we have to do really is just go where it says type here and just start typing and creating our file menu it's pretty intuitive so I'm gonna say file is my first one and edit as my next one and you can see that it kind of brings this thing down it says type here this will allow you to add all the sub menus so in this case our sub buttons whatever you want to call them so in this case I'm just gonna create new as one of them and save and we're just using these as examples it doesn't really have to make sense and under edit I'm gonna do copy and I'm going to do paste now if you want to add another menu to these copy and paste buttons or like cascade it down you can just click on this plus button here and you see where it says like type here you can add another submenu or whatever you want to call it and you can see all the buttons there as well and do the same thing that I had to show you with those buttons so let's go ahead and just start by setting up a few things for this new button under file so the first thing I want to do is have a look at this name here so it's called action name this is how I'm actually gonna reference it in the program so I want to make sure that's okay action new fine we'll leave that and what I'm gonna do now is set a shortcut for this which is a keyboard shortcut so the keyboard shortcut that I set will allow me to just hit like for example ctrl s or ctrl n or whatever I set it and that will trigger the like press of that button in the program so that all you have to do if you want to save something is you know hit ctrl s like you might do in this program right so what I'm gonna do is go ahead and say for new is gonna be ctrl n we'll save that here and the next thing I'm gonna add is the status tip now the status the status tip is what's gonna show up in the status bar and the status bar is in the bottom lefthand corner of your application so down here where my mouse is right where OpenGL widget is right below that is the status bar and you see if I go to like form and layout horizontally you can see that it shows lays out the selected which it horizontally so we're gonna create what text we want to show up in that status bar when we hover over that new button so in this case I'm just gonna say create a new file just some random stuff so that it kind of makes sense and we can see it when it goes there so the next one is save so for save I'm gonna set that shortcut to be ctrl s and the status tip is going to be saved a file and then we'll do the same thing for edit so for copy we're gonna say status tip will be copy a file and the shortcut will be ctrl C and then for paste we will have control V and we'll have the status tip as paste a file why not okay so now that I've done that I'm gonna save this and I'll just save this as test dot UI and I'm gonna save that to where does it pie QT tutorial so we'll go ahead and click yes make sure you know where you save this file obviously because now we're gonna export it to code and start actually working with it so what I'm gonna do now is go to my command prompt you can see I've already actually used this command twice what I'm gonna do is CD into the directory where my thing is I showed this in the last video so in this case is in PI QT tutorial and I'm gonna run the command PI UIC 5 in this case test out UI that's name the file I just saved and then dot o which stands for output file which in this case is gonna be tutorial for dot pod let's run that hit enter give it a second to go and now if I go into sub line text and I open up tutorial for I think I need to reopen it because I overrode it then you can see that we've created this this file thing whatever it is in code so let's run this and just make sure everything looks alright here and there we go we get text label we have file new save we have edit copy and paste now apparently my shortcuts for save and for paste didn't work but that's fine I'll actually show you how we can set those from code so let's quickly run through this code understand how it works and then we'll add some methods here that we can call and change the label based on when we press one of those buttons so let's go here and let's have a look so up here we're just gonna setting up the central window I'm setting up the size we already know how that works now here we're actually setting up a font object and that way we're gonna set the font size to be 36 for our label you can kind of see how that works I'll spread this out here main window set central widget that's just gonna be what's in the middle is obviously central widget which is you know the main window here now menu bar is gonna be the obviously that file menu bar at the top you can see that we're setting the two things here so a menu file menu edit and then we go ahead and change those names as well now what we do here when we set the shortcuts I believe it is here that we do this so what we want to do is actually add some other shortcuts to this so the way that we can do that is just using set shortcut so apparently ours like didn't work for two of them I guess maybe I didn't save it properly so what we'll do is we will if I can find which ones didn't work which was it paste that didn't work and save so for save if we want to set a shortcut what we're gonna do is I'm just gonna copy this action copy here go to save so where's that go right underneath and we'll just translate that shortcut so in this case we'll do main window we're gonna change this from action copy to action save I'd be like this and then instead of control see it is gonna be control s like that so use that one and now same thing for the other one that we need a shortcut for which I believe was pasted so down here we're gonna set change this instead of action copy to be action paste and we'll make this control beep so now those shortcuts are set up if I run this now we have control s and we have control be serving is working perfectly alright so next step is to make sure that we actually set up these buttons so that they do something when we press them so the first part to do that and we've already kind of gone through this procedure so I'm just kind of speeding through it is I'm gonna create a method that is going to be called whenever we press one of those buttons so in this case I'm just gonna call it clicked but I'm gonna do something differently here and we're gonna talk about how this works in just one second so inside of here I'm actually gonna take another argument rather than just self that is text and what I'm gonna do is just update the label so I'm gonna say self dot label dot set text again this is just how we change that label text we've already been over this and I'm gonna set it to be equal to whatever is passed in as text now next what I'm gonna do is I'm going to adjust the size of my label so selfthought label dot adjust size just to make sure that you know it resizes appropriately all right so now time to actually link up these buttons to our you know clicked event here so to do that is similar to what we did with the other buttons except it's just one different word and you'll see that in a second so what I'm gonna do is I'm gonna say self dot in this case we want to start with new so action new so self not action new dots in this case triggered which is different than clicked the book that we had before and triggered essentially just means pressed the reason it's called triggered is because you can trigger it using the shortcut as well and then what we're gonna do is dot connect and we're gonna say this method here so self dot clicked but the way we're gonna do this is using something called a lambda a lambda is actually just like um it's called like a mini function I'll try to explain kind of how this works but I'm gonna do lambda and then in here I say self dot clicked and I'm gonna actually pass the argument text now text is gonna be whatever I want the label to change to so if you click new I'm just gonna say like new was clicked now I'm gonna copy this four times then I'm gonna explain what lambda is so we're gonna change instead of action new we're gonna have action save we're gonna have action copy and action paste and then instead of newest clicked we'll do all these other ones so save go copy like this and we will go pace all right so let's run this quickly and then I'll explain kind of other stuff so I go file new you can see new is click to go file save save was clicked edit copy and paste paste was clicked there you go that it's working now the reason I'm done I've done it this way is so that I didn't have to create four methods that each updated the label to be a different thing because with our previous knowledge all we knew how to do here was just put like self thought clicked and we didn't even put the brackets right we just put the name of the method now that's fine but the thing is if you want the method to work for a bunch of different objects which we do in this case well what I need to do is give it some kind of argument so it's different based on those objects but previously we didn't know how to passed the argument so the way that this works is this self dot action dot trigger connect it takes as its argument one function so before what we were giving was clicked and that was the function now in this case what we're actually giving it is a function and this is what lambda stands for sense stands for a function that's defined on one line and that function actually calls another function called self dot clicked but is able to pass it a parameter because before we couldn't pass that parameter but now since we're saying let's call a function that calls another function and pass the parameter that actually works fine I know it's a little bit confusing you don't have to really understand this to get why this but if you ever want to pass information to the the clicked you know method or trigger whatever it is then that's the way you do it so anyways that is kind of it for the menu bar you can see if I hit my shortcuts like control and control V control C those are all working as well and with that being said I will see you guys in another video
