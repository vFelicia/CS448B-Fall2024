With timestamps:

00:00 - hey guys and welcome back to another
00:02 - YouTube video so in today's video I'm
00:04 - going to be showing you how to make a
00:05 - random number guessing game in Python
00:08 - this is more of a beginner tutorial and
00:11 - this is for some of the viewers on my
00:13 - channel that maybe aren't us advanced
00:14 - with Python and don't know about classes
00:16 - and functions but this will allow you to
00:19 - learn a lot especially if you're a
00:20 - beginner and we're gonna go through the
00:21 - qual loops generating a random number
00:23 - getting input from the user checking
00:25 - that input and then obviously checking
00:27 - if that guess is correct versus the
00:29 - numbers so let's go ahead and get
00:30 - started so the first thing I want to do
00:32 - here is I'm just gonna import a module
00:34 - and this is random I'm gonna show you
00:36 - quickly how we can create a random
00:38 - number in Python that's why some of you
00:39 - might be here so to create a random
00:41 - number it's quite easy you just create a
00:43 - variable so our I would say is go to
00:45 - Rand int and then in here I just put two
00:48 - bounds and a bound is just like a start
00:50 - and end so if I put something like 1 4
00:52 - and then I print R to the screen I will
00:55 - get a number between 1 and 4 and that
00:58 - includes 1 and 4 as well so it'll
01:00 - randomly pick one so we can see here I
01:02 - get 2 if I run it again I get 4 keep
01:06 - running it you can see that we
01:07 - continually get random numbers so that's
01:09 - kind of the basis of what we're gonna
01:11 - need obviously to make a random number
01:13 - so the first thing I want to do when I'm
01:14 - coding this game is I'm just gonna set
01:16 - up a basic while loop and I want to ask
01:18 - the user to tell me how difficult I want
01:20 - the game to be and the way we're gonna
01:22 - do that is we're gonna ask them on what
01:25 - number they want to be able to guess up
01:26 - to so starting at 1 and then what number
01:29 - to guess up to so obviously the larger
01:30 - number they pick the heart of the game
01:32 - is gonna be so I'm going to make a while
01:33 - loop here so while flag and flag is set
01:35 - up to true and then say num is equal to
01:37 - input and type a number for an upper
01:44 - bound okay I know that sounds
01:47 - complicated but just means like what we
01:48 - guess up to so this is gonna grab our
01:50 - input from the user
01:52 - store it in the variable num so now what
01:54 - I want to do is I want to check if this
01:56 - variable num is a integer or not because
02:00 - if they don't type in a number well I
02:02 - don't want to allow them to continue at
02:04 - the game because we don't know what
02:05 - number we should go up to so the way we
02:06 - do this is actually really easy and
02:09 - so we can do an if statement I say if
02:10 - num oops one my typing bum they're numb
02:15 - nut is digit like this and what this is
02:18 - gonna check is if this string because
02:20 - whenever we grab input from the user
02:21 - comes in a string is equal to a number
02:24 - then we're gonna move on and we're gonna
02:26 - say okay let's play the game here's what
02:29 - we're guessing up to so on now if they
02:31 - don't say that I'm going to set up an
02:33 - else here and we'll go into that in a
02:34 - second so if this is a digit they've
02:36 - typed in some correct input we're gonna
02:37 - say print and I don't know how I did
02:42 - that I'll say let's play like that okay
02:46 - so let's play let's an exclamation point
02:49 - here as well and now what I'm gonna do
02:50 - is I'm gonna convert this into an
02:52 - integer and the way that we can do that
02:54 - just say Namie equals int num
02:57 - and then I'm going to say flag is equal
03:00 - to false so that we can get out of this
03:03 - while loop and then down here so where
03:05 - my mouse is kind of hovering is where
03:06 - we're gonna actually play the real game
03:08 - up here is just where we're getting the
03:10 - input for what to guess up to so let's
03:12 - say they don't type in a valid number
03:15 - they type in like hello for the upper
03:16 - bound well we don't know what to do with
03:18 - that so we're simply gonna tell them
03:20 - invalid input like that and I know I
03:25 - spelled invalid wrong just ignore it for
03:27 - now try again
03:30 - like that okay so let's fix this invalid
03:34 - input try again and then this is gonna
03:37 - prompt them to continually type in
03:39 - numbers until they eventually give us a
03:41 - number that is a digit or a string
03:43 - whatever it that is a digit and it will
03:45 - print let's play and we'll move forward
03:47 - so let's just test this out before you
03:48 - look too far so we say type a number I'm
03:50 - gonna say hi it's gonna say invalid
03:52 - input try again let's do let's try this
03:54 - negative seven invalid input try again
03:57 - how about seventy six there we go let's
03:59 - play and that works
04:00 - now the reason negatives don't work
04:01 - because technically a dash is not a
04:04 - digit and we only want numbers that are
04:06 - above one anyway so this actually works
04:07 - well for us okay so now we're going to
04:10 - start our main game so we need to
04:13 - generate a number that the user is gonna
04:14 - try to guess within their bound so to do
04:17 - this I'm gonna type secret let's give it
04:19 - a variable name for the number
04:20 - because it is gonna be a secret to the
04:22 - user I type random dot R and int 1 and
04:26 - then that bound so that bound is num and
04:29 - that is what they typed in and we've
04:31 - already made sure that this is indeed a
04:33 - number and it's not a string so this
04:35 - will work well in our random grant int
04:37 - okay so now I'm gonna set up two
04:39 - variables I'm gonna say guess is equal
04:41 - to none and I'm gonna say count is equal
04:46 - to 1 I'll go over what these do in just
04:48 - a minute so pretty much our guess is
04:50 - just set to none by default because we
04:52 - haven't yet made a guess and that our
04:54 - count is equal to 1 because we want to
04:58 - tell the user how many times it took
04:59 - them to get the correct number so I'm
05:03 - gonna set up another while loop now and
05:04 - the condition I'm going to use for this
05:06 - is a little different than some of you
05:08 - might typically use I'm gonna say well
05:10 - guess does not equal secret like that
05:14 - and that's gonna say we're gonna
05:16 - continually keep guessing until our
05:19 - guests ends up being secret or like the
05:22 - number that we're trying to guess which
05:23 - is secret like this and in that case we
05:26 - will stop and we will do whatever comes
05:30 - after ok so now I'm going to say in here
05:32 - I want to ask the user to guess so to do
05:35 - this we're gonna say guest is equal to
05:38 - input and then same thing here please
05:42 - type a number and I'm just gonna say
05:45 - good between 1 and and now I'm gonna put
05:49 - in the number that they typed in so num
05:51 - between 1 and num and we'll do another
05:55 - comma like this and I'm just gonna put a
05:57 - colon actually I don't think I could put
06:00 - calm as an input sir we're just gonna
06:01 - have to ignore that for one second
06:03 - because it's gonna crash you just have
06:05 - to do like this ok so what I've done
06:09 - here because in the print statement
06:10 - we're allowed to use commas in the input
06:12 - statement we're not so we have to make
06:14 - sure everything is a string so we're
06:16 - gonna say please type a number between 1
06:18 - and and then we're gonna convert our
06:20 - number into a string and then we're
06:22 - gonna add a colon here so that they can
06:24 - kind of type after it and these spaces
06:26 - are important otherwise you're gonna see
06:27 - they'll be mushed together if you don't
06:28 - have the space after the quotation marks
06:30 - ok so now that we've done that we want
06:32 - to do the same thing that we did up here
06:34 - and
06:34 - make sure that this guess is indeed a
06:36 - digit so let's say if num it's I guess
06:40 - not not guess done is digit like this
06:44 - then we will convert our guests into an
06:47 - integer so guess equals int guess like
06:51 - that now the reason that we need to do
06:53 - this and check if it's a digit and I'll
06:55 - show I'll show you when I open up the
06:58 - editor here okay so let's just get
07:01 - through this like 54 oh okay it's just
07:05 - gonna keep going anyways if I open up
07:06 - ideally I can show you I spoke later
07:08 - just give me a second okay so let's say
07:10 - if I say X is equal to hello like that
07:13 - and then I put something like this and I
07:14 - say int X well it says in built in a
07:17 - roll for int with base 10 so for example
07:21 - if we didn't check if someone our if
07:23 - what they typed in was an integer and we
07:25 - tried to convert it into an int it would
07:27 - crash our program and obviously we don't
07:29 - want our program to crash we want to
07:31 - just keep asking until eventually they
07:33 - type in a correct number so that's why
07:35 - we need to do that and now I'm gonna say
07:37 - if guess equals equals secret like that
07:43 - then we can tell the user well you
07:46 - guessed the correct number so we'll say
07:48 - you've got it and I don't know I can't
07:52 - type today okay you got it like that
07:54 - otherwise so if the user did not guess
07:58 - the number correctly we're gonna say
08:00 - please try again like that now one other
08:06 - thing we need to do here and some of you
08:08 - may have already thought of it is we
08:09 - have this variable count so if the user
08:12 - gets it wrong we won't add one to our
08:14 - count like this indicating that they're
08:18 - getting another try to guess the number
08:20 - okay so I know I went kind of fast I'm
08:23 - just going to type one last line then
08:24 - we're gonna test the program and go
08:25 - through it one more time because
08:26 - anyone's confused okay
08:27 - so I'm just gonna print down here
08:29 - because once the guess is not equal to
08:32 - so once the guess is equal to secret
08:34 - we're not gonna be going through this
08:36 - wall loop anymore because this condition
08:37 - is not true because the two things will
08:40 - indeed be the same value and we're gonna
08:42 - print what comes so what comes out for
08:45 - this while loop is the print statement
08:46 - and we're just gonna say it took you
08:47 - this many tries
08:48 - it took you in here we can use commas
08:52 - count and that will say guesses like
08:56 - that with an exclamation point so let's
09:00 - go ahead and run the program and it's
09:02 - gonna say type a number for an up bound
09:04 - I don't want to be here for too long so
09:05 - I'm going to type six once up say let's
09:08 - play please type a number between one
09:09 - and six type four please try again okay
09:12 - I look three okay that didn't work to
09:15 - one oh is it really gonna be the last
09:19 - one
09:19 - six you got it it took you six guesses
09:22 - and there we go that is indeed our game
09:26 - and you can play this as many times as
09:28 - you you want and if you wanted to
09:29 - continually keep playing this and have
09:32 - it to keep asking you and keep asking
09:34 - you to type in a number and then - sorry
09:39 - type in a number for an upper bound and
09:41 - then type in another number and try to
09:42 - guess it you can put another while
09:44 - statement so I'll put something like
09:45 - this well true if you take all this and
09:49 - indent it now we'll do this quickly so
09:52 - if I type it upper bound three and I
09:53 - type one you got it it took you one
09:55 - guesses or I guess I should probably say
09:57 - guess not guesses anyways type a number
10:00 - for an upper bound so it's asking me
10:02 - again so I'll type 3 type number 21 and
10:05 - 3 type 2 you got it it took you one
10:08 - guess and you can continually and
10:10 - continually keep playing and this will
10:12 - never stop so if you keep if you can
10:14 - play as long as you want and if you want
10:15 - to exit this you can just click the red
10:16 - X or you can click ctrl C on your
10:18 - keyboard and that will break the while
10:20 - loop because this is indeed and
10:22 - infinitely anyways that's been it for
10:24 - this video I hope you guys enjoyed and
10:26 - you now know how to make a random number
10:28 - just guessing game if you did please
10:31 - make sure you leave a like and subscribe
10:33 - and I'll see you again in the next video
10:35 - [Music]

Cleaned transcript:

hey guys and welcome back to another YouTube video so in today's video I'm going to be showing you how to make a random number guessing game in Python this is more of a beginner tutorial and this is for some of the viewers on my channel that maybe aren't us advanced with Python and don't know about classes and functions but this will allow you to learn a lot especially if you're a beginner and we're gonna go through the qual loops generating a random number getting input from the user checking that input and then obviously checking if that guess is correct versus the numbers so let's go ahead and get started so the first thing I want to do here is I'm just gonna import a module and this is random I'm gonna show you quickly how we can create a random number in Python that's why some of you might be here so to create a random number it's quite easy you just create a variable so our I would say is go to Rand int and then in here I just put two bounds and a bound is just like a start and end so if I put something like 1 4 and then I print R to the screen I will get a number between 1 and 4 and that includes 1 and 4 as well so it'll randomly pick one so we can see here I get 2 if I run it again I get 4 keep running it you can see that we continually get random numbers so that's kind of the basis of what we're gonna need obviously to make a random number so the first thing I want to do when I'm coding this game is I'm just gonna set up a basic while loop and I want to ask the user to tell me how difficult I want the game to be and the way we're gonna do that is we're gonna ask them on what number they want to be able to guess up to so starting at 1 and then what number to guess up to so obviously the larger number they pick the heart of the game is gonna be so I'm going to make a while loop here so while flag and flag is set up to true and then say num is equal to input and type a number for an upper bound okay I know that sounds complicated but just means like what we guess up to so this is gonna grab our input from the user store it in the variable num so now what I want to do is I want to check if this variable num is a integer or not because if they don't type in a number well I don't want to allow them to continue at the game because we don't know what number we should go up to so the way we do this is actually really easy and so we can do an if statement I say if num oops one my typing bum they're numb nut is digit like this and what this is gonna check is if this string because whenever we grab input from the user comes in a string is equal to a number then we're gonna move on and we're gonna say okay let's play the game here's what we're guessing up to so on now if they don't say that I'm going to set up an else here and we'll go into that in a second so if this is a digit they've typed in some correct input we're gonna say print and I don't know how I did that I'll say let's play like that okay so let's play let's an exclamation point here as well and now what I'm gonna do is I'm gonna convert this into an integer and the way that we can do that just say Namie equals int num and then I'm going to say flag is equal to false so that we can get out of this while loop and then down here so where my mouse is kind of hovering is where we're gonna actually play the real game up here is just where we're getting the input for what to guess up to so let's say they don't type in a valid number they type in like hello for the upper bound well we don't know what to do with that so we're simply gonna tell them invalid input like that and I know I spelled invalid wrong just ignore it for now try again like that okay so let's fix this invalid input try again and then this is gonna prompt them to continually type in numbers until they eventually give us a number that is a digit or a string whatever it that is a digit and it will print let's play and we'll move forward so let's just test this out before you look too far so we say type a number I'm gonna say hi it's gonna say invalid input try again let's do let's try this negative seven invalid input try again how about seventy six there we go let's play and that works now the reason negatives don't work because technically a dash is not a digit and we only want numbers that are above one anyway so this actually works well for us okay so now we're going to start our main game so we need to generate a number that the user is gonna try to guess within their bound so to do this I'm gonna type secret let's give it a variable name for the number because it is gonna be a secret to the user I type random dot R and int 1 and then that bound so that bound is num and that is what they typed in and we've already made sure that this is indeed a number and it's not a string so this will work well in our random grant int okay so now I'm gonna set up two variables I'm gonna say guess is equal to none and I'm gonna say count is equal to 1 I'll go over what these do in just a minute so pretty much our guess is just set to none by default because we haven't yet made a guess and that our count is equal to 1 because we want to tell the user how many times it took them to get the correct number so I'm gonna set up another while loop now and the condition I'm going to use for this is a little different than some of you might typically use I'm gonna say well guess does not equal secret like that and that's gonna say we're gonna continually keep guessing until our guests ends up being secret or like the number that we're trying to guess which is secret like this and in that case we will stop and we will do whatever comes after ok so now I'm going to say in here I want to ask the user to guess so to do this we're gonna say guest is equal to input and then same thing here please type a number and I'm just gonna say good between 1 and and now I'm gonna put in the number that they typed in so num between 1 and num and we'll do another comma like this and I'm just gonna put a colon actually I don't think I could put calm as an input sir we're just gonna have to ignore that for one second because it's gonna crash you just have to do like this ok so what I've done here because in the print statement we're allowed to use commas in the input statement we're not so we have to make sure everything is a string so we're gonna say please type a number between 1 and and then we're gonna convert our number into a string and then we're gonna add a colon here so that they can kind of type after it and these spaces are important otherwise you're gonna see they'll be mushed together if you don't have the space after the quotation marks ok so now that we've done that we want to do the same thing that we did up here and make sure that this guess is indeed a digit so let's say if num it's I guess not not guess done is digit like this then we will convert our guests into an integer so guess equals int guess like that now the reason that we need to do this and check if it's a digit and I'll show I'll show you when I open up the editor here okay so let's just get through this like 54 oh okay it's just gonna keep going anyways if I open up ideally I can show you I spoke later just give me a second okay so let's say if I say X is equal to hello like that and then I put something like this and I say int X well it says in built in a roll for int with base 10 so for example if we didn't check if someone our if what they typed in was an integer and we tried to convert it into an int it would crash our program and obviously we don't want our program to crash we want to just keep asking until eventually they type in a correct number so that's why we need to do that and now I'm gonna say if guess equals equals secret like that then we can tell the user well you guessed the correct number so we'll say you've got it and I don't know I can't type today okay you got it like that otherwise so if the user did not guess the number correctly we're gonna say please try again like that now one other thing we need to do here and some of you may have already thought of it is we have this variable count so if the user gets it wrong we won't add one to our count like this indicating that they're getting another try to guess the number okay so I know I went kind of fast I'm just going to type one last line then we're gonna test the program and go through it one more time because anyone's confused okay so I'm just gonna print down here because once the guess is not equal to so once the guess is equal to secret we're not gonna be going through this wall loop anymore because this condition is not true because the two things will indeed be the same value and we're gonna print what comes so what comes out for this while loop is the print statement and we're just gonna say it took you this many tries it took you in here we can use commas count and that will say guesses like that with an exclamation point so let's go ahead and run the program and it's gonna say type a number for an up bound I don't want to be here for too long so I'm going to type six once up say let's play please type a number between one and six type four please try again okay I look three okay that didn't work to one oh is it really gonna be the last one six you got it it took you six guesses and there we go that is indeed our game and you can play this as many times as you you want and if you wanted to continually keep playing this and have it to keep asking you and keep asking you to type in a number and then sorry type in a number for an upper bound and then type in another number and try to guess it you can put another while statement so I'll put something like this well true if you take all this and indent it now we'll do this quickly so if I type it upper bound three and I type one you got it it took you one guesses or I guess I should probably say guess not guesses anyways type a number for an upper bound so it's asking me again so I'll type 3 type number 21 and 3 type 2 you got it it took you one guess and you can continually and continually keep playing and this will never stop so if you keep if you can play as long as you want and if you want to exit this you can just click the red X or you can click ctrl C on your keyboard and that will break the while loop because this is indeed and infinitely anyways that's been it for this video I hope you guys enjoyed and you now know how to make a random number just guessing game if you did please make sure you leave a like and subscribe and I'll see you again in the next video
