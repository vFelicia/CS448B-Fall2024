With timestamps:

00:00 - hello everybody and welcome back to
00:01 - their JavaScript tutorial so in this
00:03 - video we're gonna be talking about for
00:05 - each loops were four of loops now
00:08 - essentially this is a way to iterate by
00:10 - element or by item rather than by index
00:13 - now if you don't know what that means
00:14 - that's totally fine
00:15 - I'm just gonna start with a very basic
00:17 - example showing how we iterated through
00:19 - a array in the previous videos so in the
00:22 - last video we did something like you
00:24 - know bar
00:25 - ARR equals that we had an array and
00:27 - maybe we had something like Tim and Joe
00:30 - and Bill and we wanted to print out all
00:34 - of the elements in this array well what
00:36 - did we do we made up for loop and we
00:38 - said for bar I equals 0 I is less than
00:43 - there are dog lengths nobody said I plus
00:46 - plus and then what we did here is we
00:48 - simply console dot log error at index I
00:52 - now we know that works we showed that in
00:54 - the previous video but is there an
00:56 - easier way to do this because
00:58 - essentially the only reason we have this
01:00 - I counter here is so that we can access
01:02 - the elements of the array right by going
01:05 - up one index each time well if I don't
01:08 - care about this counter variable I I
01:10 - don't really care if it's 1 I don't care
01:12 - of its two I just want to get the
01:13 - elements there is actually a better and
01:15 - easier way to do this and that is called
01:17 - a four of loop now what I can actually
01:19 - do is say for and in this case I'm gonna
01:22 - say let and we'll just do element of era
01:27 - now I know this seems like a strange
01:30 - kind of statement here but essentially
01:33 - what this means is we're gonna take
01:35 - elements from or of the array now what
01:39 - this is gonna do is loop through each
01:41 - element in our array and every loop make
01:44 - this variable element equal to that
01:47 - element now I know this is confusing
01:49 - because I've used the word element but
01:51 - let me just illustrate to you what this
01:53 - does so I'm just gonna comment out this
01:55 - like that and we'll leave this one here
01:58 - and let's just go to our console and
02:00 - have a look here and you see we get Tim
02:02 - Joe and Bill now what happens here is in
02:06 - our first loop we set the element
02:08 - variable element equal to Tim in our
02:11 - second loop we said echo
02:13 - to Joe and then we set it equal to Bill
02:15 - and this means that we no longer have to
02:17 - do this thing where we get the length of
02:19 - the array we increment a counter we set
02:22 - the counter to zero we do the index at I
02:24 - it's just a lot cleaner and easier when
02:26 - all you want to do is access the element
02:29 - and that is pretty much how you use this
02:32 - you know of array now I will show you
02:35 - here that this says let right but we can
02:38 - make this nothing so if we make this
02:40 - nothing that that's fine we can do that
02:42 - but the reason we might want to specify
02:43 - for example like Const work where let's
02:46 - hear or var is whether we're gonna
02:48 - change this value or not and I want to
02:50 - show you how this works so I'm gonna say
02:52 - let element of arr but what I'm gonna do
02:55 - is print out the element then I'm gonna
02:58 - change the elements I'm going to say
02:59 - element equals five and I'll print the
03:03 - elements again and what I'm gonna do is
03:05 - actually print the array before and
03:07 - after we do this and this is kind of a
03:09 - challenge for you guys so what I'm gonna
03:11 - do is console dot log the array and I'll
03:14 - log it at the beginning too so what I'm
03:16 - gonna do is print the array I'm gonna
03:18 - loop through all the elements in the
03:19 - array so Tim Joe and Bill I'm gonna
03:22 - start by printing out that element then
03:23 - what I'm gonna do is change the element
03:26 - so I'm gonna change it to five I'm gonna
03:27 - print it again and then I'm gonna print
03:29 - the array afterwards and my question to
03:31 - you is is the array before going to be
03:34 - the same as after because well element
03:36 - is one of the elements from the array so
03:38 - if I change it in here does it actually
03:41 - change the value here or not that's what
03:44 - we're looking for
03:45 - so let's save this and let's run this
03:47 - and let's have a look and no it does not
03:50 - it does not change so we get Tim five
03:52 - Joe five Bill five and we can see the
03:55 - array is the same as before
03:57 - now the reason this happened is because
03:59 - we defined a new variable which actually
04:01 - stored this specific object inside of it
04:05 - and then when we change that all we're
04:06 - doing is changing the variable element
04:08 - we're not actually changing the original
04:09 - list now that's worth noting that's very
04:12 - important so make sure you understand
04:14 - that concept because now I'm gonna do
04:16 - the same thing except not with a for of
04:17 - loop I'm gonna do it with this regular
04:19 - for loop and show you so let's get rid
04:23 - of all of this and remember it's just
04:24 - left or Const or whatever you want
04:26 - element
04:26 - of air are if you don't think you're
04:29 - gonna be changing this element here so
04:31 - whatever this is you can make this a
04:32 - Const and that simply means that you
04:34 - can't change it where it won't change
04:36 - doesn't really matter that's for more
04:38 - advanced use typically you're not gonna
04:39 - have to deal with that but anyways let's
04:41 - do another example now so keep in mind
04:43 - what I just showed you while we do this
04:45 - now what I'm gonna do is print our I
04:47 - okay but now what I'm gonna do is change
04:50 - this element to equal to five and then
04:53 - print it again so I'm essentially doing
04:55 - the same thing I did in the other loop
04:57 - except we're just using a different way
04:59 - of looking through the elements and then
05:01 - what I'm gonna do is print air are and
05:05 - I'll print it beforehand
05:07 - like this so this code is almost
05:10 - identical to what I just had below
05:12 - except rather than iterating by element
05:15 - which is what we were doing before when
05:16 - we did of array were iterating by index
05:19 - rights we're using the indexes of the
05:22 - array to access the elements so what
05:25 - happens now if I change
05:27 - Arri to 5 does that actually change this
05:30 - array or does it just change some local
05:32 - variable inside of this for loop well
05:35 - hopefully you guys know the answer to
05:37 - this well let's just run it and have a
05:38 - look here and notice that the array
05:40 - after has changed to all fives it's not
05:43 - the same as the array before now the
05:45 - reason for this is we're not storing
05:48 - these values in a variable when we're
05:51 - accessing them and changing them we're
05:53 - actually getting them directly from the
05:54 - array so if I say something like you
05:56 - know array 2 equals 5 well that's
05:58 - obviously going to change the actual
06:00 - array right we're not just gonna change
06:02 - a temporary variable that we've had
06:03 - inside the loop like we did below so
06:06 - it's very important that's worth noting
06:08 - and you know based on what you're gonna
06:09 - be doing if you're gonna be manipulating
06:11 - the array you may want to do it like
06:13 - this right you can't loop through the
06:15 - elements of the array if you're gonna be
06:16 - manipulating it because you don't have
06:18 - access to actually change the values
06:21 - right now that is pretty much it for the
06:24 - for of I will show you that you can do
06:26 - it through strings as well so if I say
06:28 - like var x equals hello what I can
06:31 - actually do is say for and we'll say
06:33 - letter X and then what I can do is just
06:37 - a console log
06:39 - a letter like that let's have a look
06:42 - here so there we go we get hello
06:45 - printing it out like that so just
06:47 - showing that you can actually iterate
06:48 - through a string I believe you can also
06:50 - index a string so we'll do an example
06:52 - with that in the case I hadn't shredded
06:54 - before so we'll say int I'm sorry VAR I
06:57 - equals 0 I is less than and in this case
07:00 - x length I plus plus I think we need to
07:05 - not have a space there and then console
07:09 - dot log X at I let's see what we get
07:14 - here when we run it we get the exact
07:16 - same thing yeah so you can actually
07:18 - iterate through a string a string is
07:19 - iterable and by the way I know I've said
07:22 - this word iterating that simply means
07:23 - looping through or you know looping
07:25 - through all the elements right so yeah
07:27 - that has pretty much been into before of
07:29 - or for each loop whatever you want to
07:31 - call it pretty straightforward but
07:32 - definitely useful when you just want to
07:34 - loop through the different elements of
07:35 - an array with that being said if you
07:37 - guys enjoyed make sure you leave a like
07:38 - subscribe to the channel and I will see
07:40 - you in the next JavaScript tutorial

Cleaned transcript:

hello everybody and welcome back to their JavaScript tutorial so in this video we're gonna be talking about for each loops were four of loops now essentially this is a way to iterate by element or by item rather than by index now if you don't know what that means that's totally fine I'm just gonna start with a very basic example showing how we iterated through a array in the previous videos so in the last video we did something like you know bar ARR equals that we had an array and maybe we had something like Tim and Joe and Bill and we wanted to print out all of the elements in this array well what did we do we made up for loop and we said for bar I equals 0 I is less than there are dog lengths nobody said I plus plus and then what we did here is we simply console dot log error at index I now we know that works we showed that in the previous video but is there an easier way to do this because essentially the only reason we have this I counter here is so that we can access the elements of the array right by going up one index each time well if I don't care about this counter variable I I don't really care if it's 1 I don't care of its two I just want to get the elements there is actually a better and easier way to do this and that is called a four of loop now what I can actually do is say for and in this case I'm gonna say let and we'll just do element of era now I know this seems like a strange kind of statement here but essentially what this means is we're gonna take elements from or of the array now what this is gonna do is loop through each element in our array and every loop make this variable element equal to that element now I know this is confusing because I've used the word element but let me just illustrate to you what this does so I'm just gonna comment out this like that and we'll leave this one here and let's just go to our console and have a look here and you see we get Tim Joe and Bill now what happens here is in our first loop we set the element variable element equal to Tim in our second loop we said echo to Joe and then we set it equal to Bill and this means that we no longer have to do this thing where we get the length of the array we increment a counter we set the counter to zero we do the index at I it's just a lot cleaner and easier when all you want to do is access the element and that is pretty much how you use this you know of array now I will show you here that this says let right but we can make this nothing so if we make this nothing that that's fine we can do that but the reason we might want to specify for example like Const work where let's hear or var is whether we're gonna change this value or not and I want to show you how this works so I'm gonna say let element of arr but what I'm gonna do is print out the element then I'm gonna change the elements I'm going to say element equals five and I'll print the elements again and what I'm gonna do is actually print the array before and after we do this and this is kind of a challenge for you guys so what I'm gonna do is console dot log the array and I'll log it at the beginning too so what I'm gonna do is print the array I'm gonna loop through all the elements in the array so Tim Joe and Bill I'm gonna start by printing out that element then what I'm gonna do is change the element so I'm gonna change it to five I'm gonna print it again and then I'm gonna print the array afterwards and my question to you is is the array before going to be the same as after because well element is one of the elements from the array so if I change it in here does it actually change the value here or not that's what we're looking for so let's save this and let's run this and let's have a look and no it does not it does not change so we get Tim five Joe five Bill five and we can see the array is the same as before now the reason this happened is because we defined a new variable which actually stored this specific object inside of it and then when we change that all we're doing is changing the variable element we're not actually changing the original list now that's worth noting that's very important so make sure you understand that concept because now I'm gonna do the same thing except not with a for of loop I'm gonna do it with this regular for loop and show you so let's get rid of all of this and remember it's just left or Const or whatever you want element of air are if you don't think you're gonna be changing this element here so whatever this is you can make this a Const and that simply means that you can't change it where it won't change doesn't really matter that's for more advanced use typically you're not gonna have to deal with that but anyways let's do another example now so keep in mind what I just showed you while we do this now what I'm gonna do is print our I okay but now what I'm gonna do is change this element to equal to five and then print it again so I'm essentially doing the same thing I did in the other loop except we're just using a different way of looking through the elements and then what I'm gonna do is print air are and I'll print it beforehand like this so this code is almost identical to what I just had below except rather than iterating by element which is what we were doing before when we did of array were iterating by index rights we're using the indexes of the array to access the elements so what happens now if I change Arri to 5 does that actually change this array or does it just change some local variable inside of this for loop well hopefully you guys know the answer to this well let's just run it and have a look here and notice that the array after has changed to all fives it's not the same as the array before now the reason for this is we're not storing these values in a variable when we're accessing them and changing them we're actually getting them directly from the array so if I say something like you know array 2 equals 5 well that's obviously going to change the actual array right we're not just gonna change a temporary variable that we've had inside the loop like we did below so it's very important that's worth noting and you know based on what you're gonna be doing if you're gonna be manipulating the array you may want to do it like this right you can't loop through the elements of the array if you're gonna be manipulating it because you don't have access to actually change the values right now that is pretty much it for the for of I will show you that you can do it through strings as well so if I say like var x equals hello what I can actually do is say for and we'll say letter X and then what I can do is just a console log a letter like that let's have a look here so there we go we get hello printing it out like that so just showing that you can actually iterate through a string I believe you can also index a string so we'll do an example with that in the case I hadn't shredded before so we'll say int I'm sorry VAR I equals 0 I is less than and in this case x length I plus plus I think we need to not have a space there and then console dot log X at I let's see what we get here when we run it we get the exact same thing yeah so you can actually iterate through a string a string is iterable and by the way I know I've said this word iterating that simply means looping through or you know looping through all the elements right so yeah that has pretty much been into before of or for each loop whatever you want to call it pretty straightforward but definitely useful when you just want to loop through the different elements of an array with that being said if you guys enjoyed make sure you leave a like subscribe to the channel and I will see you in the next JavaScript tutorial
