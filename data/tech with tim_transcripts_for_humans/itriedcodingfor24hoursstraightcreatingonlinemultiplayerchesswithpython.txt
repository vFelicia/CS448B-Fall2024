With timestamps:

00:00 - [Music]
00:24 - [Applause]
00:25 - [Music]
00:36 - so the footage you're about to watch is
00:38 - actually from the livestream I did while
00:40 - creating this project if you'd like to
00:42 - see any of the raw footage in the first
00:44 - twelve hours of me programming this with
00:46 - no cuts you guys can check that out in
00:48 - the link in the description since I was
00:50 - cooking an online game I needed to
00:52 - program the client and a server the
00:54 - first half of my stream was dedicated to
00:56 - creating the client which meant making
00:57 - the game of chess fully functioning and
00:59 - working the first hour of the stream was
01:02 - dedicated to setting up the project this
01:04 - mat determining what classes and what
01:05 - objects I was going to need and then I
01:07 - started programming and working to get
01:09 - the images showing up on the screen this
01:11 - was pretty straightforward all I had to
01:13 - do was resize the images and then focus
01:15 - on doing a dynamic placement for each of
01:17 - the chess pieces next I went to work on
01:20 - selecting and moving pieces now this was
01:22 - a bit more difficult as I had to
01:23 - determine the correct movement for all
01:25 - of the different chess pieces and that
01:27 - meant looking at the pieces around each
01:28 - piece and determining which spaces were
01:30 - a valid move and which were not you can
01:32 - see the valve moves marked by the little
01:34 - red dots that I was drawing to test out
01:36 - the program after about three hours I
01:39 - was able to select and move pieces now
01:42 - most of the movement for my chess pieces
01:43 - were working but I was still having a
01:45 - few issues with pieces like the Queen
01:46 - and the rooks
01:57 - the next hour was spent working on
01:59 - capturing pieces and adding a few other
02:02 - improvements to
02:03 - [Music]
02:10 - as you can see there's still quite a bit
02:13 - of work that need to be done the next
02:18 - two hours you spent debugging and
02:20 - improving the movement I made quite a
02:22 - bit of progress but we still ran into
02:23 - one very frustrating issue I started to
02:26 - take a break for movement and move on to
02:27 - new timers implementing the timer's was
02:31 - pretty straightforward
02:32 - all I had to do was just determine which
02:33 - player was moving and then subtract from
02:35 - that players time accordingly the next
02:38 - thing I did after this was trying to
02:39 - implement a function to check if one of
02:41 - the kings was in check or in checkmate
02:44 - this went okay but I was still having a
02:46 - lot of issues with this here you are
02:49 - about to see one of the largest issues I
02:50 - was running into well code in this
02:52 - program when moving the Queen and
02:54 - checking the king from a certain
02:56 - position who would allow the King to
02:57 - move into a checked position now I was
03:00 - having a lot of trouble figuring out why
03:01 - this was and eventually had to give up
03:03 - on the problem until one of my viewers
03:05 - was actually able to help me out and
03:06 - send me some modified code for the next
03:09 - hour I added a menu screen and continued
03:11 - to keep up it's worth noting that at
03:13 - this point of encoding for about seven
03:14 - hours with no breaks and the mind was
03:16 - starting to get a little bit tainted
03:18 - once the client was above 99% complete
03:21 - with only a few bugs left I decided to
03:23 - move on to networking I was going to
03:24 - look back at the client later and see if
03:26 - I could get a fresh perspective on some
03:27 - of the issues I couldn't fix after about
03:33 - eight hours of programming it was time
03:35 - to start networking now this was quite
03:36 - difficult as I had no experience with
03:38 - Linux fortunately for me centex was able
03:41 - to help me out by walking me through how
03:42 - to set up a very basic Linux server
03:45 - I was using sockets and threading to
03:47 - handle multiple connections to my server
03:49 - after about two hours of messing around
03:51 - the server and setting things up getting
03:53 - my dependencies going I finally was able
03:55 - to connect to the server and send
03:57 - information to and from the clients at
03:59 - this point in the stream I'd been
04:01 - programming for about 10 hours and my
04:03 - efficiency was starting to decrease
04:04 - exponentially after finally figuring out
04:09 - the server and setting it up properly it
04:10 - was time to connect my two game clients
04:12 - to the server this was fairly easy as I
04:15 - already knew how to connect things to
04:16 - the server but sending information was a
04:19 - massive headache after about two hours
04:21 - of trial and error I determined that the
04:23 - best way to send information would be to
04:25 - store the state of the board on the
04:26 - server and to send string data from the
04:28 - client to the server stating which move
04:30 - had been made and to update the board
04:31 - appropriately the other clients would
04:33 - constantly ask for information from the
04:35 - server and would be given the board
04:36 - object that would have been updated from
04:38 - the server the rest of the stream was
04:40 - spent debugging and adding features keep
04:42 - in mind had been programming for well
04:43 - over 12 hours and he was really starting
04:46 - to take a toll on my mind especially my
04:48 - efficiency hey guys I hope you enjoyed
04:55 - the little time-lapse I put together for
04:57 - you guys essentially what I'm showing
04:58 - you right now is just the completed
05:00 - version of the game this is what I was
05:02 - able to finish within 18 hours of
05:04 - streaming now unfortunately YouTube does
05:06 - not actually save more than 12 hours of
05:09 - a stream so I ended up streaming for 18
05:12 - hours and then I had to stop just
05:15 - because I was mentally exhausted I was
05:17 - fine to stay awake but just I really
05:19 - couldn't think of it anything and
05:21 - essentially all my productivity was just
05:23 - down the drain so this is what I was
05:25 - able to complete though fully
05:26 - functioning online multiplayer chess
05:28 - game only supports one game running at a
05:30 - time which means only two people can be
05:32 - playing so that's something I want to
05:33 - add in the future having multiple games
05:35 - running simultaneously I also want to
05:37 - add the ability to have
05:38 - what do you call it like you can add
05:41 - friends and you can create a chess
05:42 - account and I want to make this like a
05:44 - full-scale like kind of professional
05:47 - like I don't know desktop app or whatnot
05:48 - but I think this was pretty cool I'm
05:50 - pretty proud of myself being able to
05:52 - complete this in 18 hours that was a
05:53 - crazy stream I never imagined myself
05:56 - doing something like that but I have to
05:57 - say I had so much fun obviously there
06:00 - was some points where I ran into some
06:02 - issues and some troubles but once I got
06:04 - past that it was just a really genuinely
06:06 - good time I had an awesome time spending
06:08 - it with you guys and being able to hear
06:09 - your questions and just chat with you
06:11 - and I'll definitely be doing something
06:13 - like this in the future so if you guys
06:14 - want to see some more stuff like this
06:15 - some more long coding live streams maybe
06:18 - not 24 hours but maybe we'll do like 12
06:20 - or something then make sure you guys to
06:22 - subscribe to the channel and you know
06:23 - let me know if there's something that
06:24 - you want to see in the future with that
06:26 - being said all of this code is available
06:28 - on github I will have that link in the
06:30 - description for any of you that want to
06:31 - play around in this project and yeah if
06:34 - you guys enjoyed the video please make
06:36 - sure you hit the like button and
06:37 - obviously subscribe to the channel for
06:39 - more awesome content

Cleaned transcript:

so the footage you're about to watch is actually from the livestream I did while creating this project if you'd like to see any of the raw footage in the first twelve hours of me programming this with no cuts you guys can check that out in the link in the description since I was cooking an online game I needed to program the client and a server the first half of my stream was dedicated to creating the client which meant making the game of chess fully functioning and working the first hour of the stream was dedicated to setting up the project this mat determining what classes and what objects I was going to need and then I started programming and working to get the images showing up on the screen this was pretty straightforward all I had to do was resize the images and then focus on doing a dynamic placement for each of the chess pieces next I went to work on selecting and moving pieces now this was a bit more difficult as I had to determine the correct movement for all of the different chess pieces and that meant looking at the pieces around each piece and determining which spaces were a valid move and which were not you can see the valve moves marked by the little red dots that I was drawing to test out the program after about three hours I was able to select and move pieces now most of the movement for my chess pieces were working but I was still having a few issues with pieces like the Queen and the rooks the next hour was spent working on capturing pieces and adding a few other improvements to as you can see there's still quite a bit of work that need to be done the next two hours you spent debugging and improving the movement I made quite a bit of progress but we still ran into one very frustrating issue I started to take a break for movement and move on to new timers implementing the timer's was pretty straightforward all I had to do was just determine which player was moving and then subtract from that players time accordingly the next thing I did after this was trying to implement a function to check if one of the kings was in check or in checkmate this went okay but I was still having a lot of issues with this here you are about to see one of the largest issues I was running into well code in this program when moving the Queen and checking the king from a certain position who would allow the King to move into a checked position now I was having a lot of trouble figuring out why this was and eventually had to give up on the problem until one of my viewers was actually able to help me out and send me some modified code for the next hour I added a menu screen and continued to keep up it's worth noting that at this point of encoding for about seven hours with no breaks and the mind was starting to get a little bit tainted once the client was above 99% complete with only a few bugs left I decided to move on to networking I was going to look back at the client later and see if I could get a fresh perspective on some of the issues I couldn't fix after about eight hours of programming it was time to start networking now this was quite difficult as I had no experience with Linux fortunately for me centex was able to help me out by walking me through how to set up a very basic Linux server I was using sockets and threading to handle multiple connections to my server after about two hours of messing around the server and setting things up getting my dependencies going I finally was able to connect to the server and send information to and from the clients at this point in the stream I'd been programming for about 10 hours and my efficiency was starting to decrease exponentially after finally figuring out the server and setting it up properly it was time to connect my two game clients to the server this was fairly easy as I already knew how to connect things to the server but sending information was a massive headache after about two hours of trial and error I determined that the best way to send information would be to store the state of the board on the server and to send string data from the client to the server stating which move had been made and to update the board appropriately the other clients would constantly ask for information from the server and would be given the board object that would have been updated from the server the rest of the stream was spent debugging and adding features keep in mind had been programming for well over 12 hours and he was really starting to take a toll on my mind especially my efficiency hey guys I hope you enjoyed the little timelapse I put together for you guys essentially what I'm showing you right now is just the completed version of the game this is what I was able to finish within 18 hours of streaming now unfortunately YouTube does not actually save more than 12 hours of a stream so I ended up streaming for 18 hours and then I had to stop just because I was mentally exhausted I was fine to stay awake but just I really couldn't think of it anything and essentially all my productivity was just down the drain so this is what I was able to complete though fully functioning online multiplayer chess game only supports one game running at a time which means only two people can be playing so that's something I want to add in the future having multiple games running simultaneously I also want to add the ability to have what do you call it like you can add friends and you can create a chess account and I want to make this like a fullscale like kind of professional like I don't know desktop app or whatnot but I think this was pretty cool I'm pretty proud of myself being able to complete this in 18 hours that was a crazy stream I never imagined myself doing something like that but I have to say I had so much fun obviously there was some points where I ran into some issues and some troubles but once I got past that it was just a really genuinely good time I had an awesome time spending it with you guys and being able to hear your questions and just chat with you and I'll definitely be doing something like this in the future so if you guys want to see some more stuff like this some more long coding live streams maybe not 24 hours but maybe we'll do like 12 or something then make sure you guys to subscribe to the channel and you know let me know if there's something that you want to see in the future with that being said all of this code is available on github I will have that link in the description for any of you that want to play around in this project and yeah if you guys enjoyed the video please make sure you hit the like button and obviously subscribe to the channel for more awesome content
