With timestamps:

00:00 - hey guys and welcome back to another
00:02 - YouTube video in today's video this is
00:04 - the third video in our intermediate
00:07 - Python tutorials and I'm gonna be going
00:10 - over the map function so pretty much the
00:13 - map function is an extremely useful tool
00:15 - that allows us to apply a function to a
00:19 - list and then create a new list with
00:21 - those new values and you'll understand
00:24 - what I mean as I go through an example
00:25 - here so before I even start using the
00:27 - map function I want to just present us
00:29 - with a problem the map function consult
00:32 - and this is kind of the best way to
00:33 - understand it so I'm gonna create a list
00:35 - which we call it Li of integers up to 10
00:39 - like this so 9 9 10 ok
00:42 - and now I'm going to create a function
00:44 - and I'm gonna call it funk and it's
00:46 - simply gonna take one parameter X and
00:49 - all we're going to do is we're gonna
00:50 - return X to the exponent X very simple
00:54 - okay now what this problem is it's very
00:58 - simple
00:59 - um I want you or I want to be able to
01:02 - apply this function X to every value in
01:05 - the list here so 1 to 10 and then have
01:10 - that stored in a new list so intuitively
01:13 - the way that you would want to do this
01:14 - or the way that you would try to do this
01:16 - at least is you make something like a
01:17 - list is you go to this you'd write a for
01:20 - loop say for X in Li and then you say
01:24 - new list dot append and then you would
01:28 - put well funk and X like that and then
01:33 - if you printed out your new list you
01:36 - would get that value I don't know why
01:39 - print just showing up in a different
01:40 - color now but anyways and there we go so
01:43 - we get one for 27 and so on and so forth
01:46 - ok so now what we want to do is use the
01:50 - map function to do this faster so this
01:53 - is a very valid way to do this this
01:55 - works fine but I can actually shorten
01:56 - all four of these lines into one by
02:00 - using the map function so let's go ahead
02:02 - and do that now so I'm going to start by
02:04 - typing it uh actually we're just going
02:06 - to print because I want to print it
02:08 - first starting with I'm gonna do list
02:10 - like that and I'll tell you why in a
02:12 - second I'm going to
02:13 - my map function like so and now your map
02:16 - function takes two arguments so it takes
02:20 - a function and it takes a list so let's
02:22 - give it our function which in this case
02:24 - is gonna be called func and then let's
02:27 - give it our list so I actually don't
02:28 - need these double brackets here and
02:29 - excuse me let's give it our list which
02:31 - in this case is Li so let's talk about
02:34 - what this really is doing right now so
02:37 - the map function takes a function which
02:39 - is funk so the name of our function and
02:41 - it takes a list which is Li what it's
02:44 - going to do is it's going to apply this
02:45 - function to every element in the list
02:48 - and we can watch this happen we run the
02:50 - program and you see we get the exact
02:53 - same value as we did before and that's
02:56 - extremely extremely useful in Python
02:59 - because there's a lot of times you want
03:01 - to apply a function or even possibly
03:03 - multiple functions onto a very onto a
03:07 - list or every element of the list and
03:09 - you don't have to type out a whole for
03:11 - loop yes you can do that it works fine
03:13 - but the map function is just a shortcut
03:15 - to be able to do that so let me just
03:18 - show you now maybe a few other examples
03:20 - that we can use so like using this map
03:24 - function there's another way that we can
03:25 - create this and it's totally preference
03:27 - which one you want to use I like using
03:28 - map just because it's kind of cool you
03:30 - can also use wink a list comprehension
03:32 - and this is something I would have shown
03:34 - in some of my previous Python tutorials
03:36 - like from way back like years ago on my
03:39 - channel but I'll go over it quickly now
03:41 - and the way that this works is you can
03:43 - do the same things you can say func X
03:46 - for X in Li now this is actually going
03:51 - to give us the exact same value as what
03:53 - we have up here with this map function
03:56 - Li for example because what we're going
03:57 - to do is we're going to say we're gonna
03:59 - take this right here so whatever this
04:01 - expression is and we're gonna do it for
04:04 - every value of x in the list so that's
04:07 - exactly what this map function does and
04:09 - this is gonna turn it into a list
04:11 - because we put our square brackets here
04:12 - so I print this out see we get again the
04:15 - same value and that's how list
04:17 - comprehension works now for a list
04:19 - comprehension you can also add like an
04:21 - expression anywhere so it can do
04:23 - something like if
04:25 - let's say X modulus which modulus 2
04:31 - equals equal to 0 and now it's only
04:33 - gonna do this we're put this into the
04:36 - list if X is divisible by 2
04:39 - syntax error oh I forgot my square
04:42 - bracket here my bad don't know how you
04:45 - even got rid of that that's friendly oh
04:47 - that's cuz that is why all right excuse
04:51 - me on that okay so now we get 4 2 5 6 so
04:54 - it's only doing it for the even numbers
04:56 - of X so yeah those are two really cool
05:00 - ways to kind of change a list or modify
05:02 - them apply a function to them in Python
05:04 - say obviously you might want to use a
05:06 - function that's more advanced than this
05:08 - this is just for a basic example and if
05:10 - you wanted to apply maybe two functions
05:11 - to it you could have X to be changed
05:14 - here and then you could return like
05:15 - function two of X to the X here and then
05:20 - that would put that value obviously in
05:23 - the map
05:24 - so again map takes two parameters a
05:25 - function and a list and it will apply
05:29 - the function to every value in that list
05:32 - I hope this has been useful for you guys
05:34 - if you did enjoy the video please make
05:36 - sure you leave a like and subscribe and
05:38 - I'm going to be moving on to some more
05:39 - complicated and other examples using map
05:42 - and other functions in the next video so
05:45 - make sure you stay tuned for that
05:47 - [Music]

Cleaned transcript:

hey guys and welcome back to another YouTube video in today's video this is the third video in our intermediate Python tutorials and I'm gonna be going over the map function so pretty much the map function is an extremely useful tool that allows us to apply a function to a list and then create a new list with those new values and you'll understand what I mean as I go through an example here so before I even start using the map function I want to just present us with a problem the map function consult and this is kind of the best way to understand it so I'm gonna create a list which we call it Li of integers up to 10 like this so 9 9 10 ok and now I'm going to create a function and I'm gonna call it funk and it's simply gonna take one parameter X and all we're going to do is we're gonna return X to the exponent X very simple okay now what this problem is it's very simple um I want you or I want to be able to apply this function X to every value in the list here so 1 to 10 and then have that stored in a new list so intuitively the way that you would want to do this or the way that you would try to do this at least is you make something like a list is you go to this you'd write a for loop say for X in Li and then you say new list dot append and then you would put well funk and X like that and then if you printed out your new list you would get that value I don't know why print just showing up in a different color now but anyways and there we go so we get one for 27 and so on and so forth ok so now what we want to do is use the map function to do this faster so this is a very valid way to do this this works fine but I can actually shorten all four of these lines into one by using the map function so let's go ahead and do that now so I'm going to start by typing it uh actually we're just going to print because I want to print it first starting with I'm gonna do list like that and I'll tell you why in a second I'm going to my map function like so and now your map function takes two arguments so it takes a function and it takes a list so let's give it our function which in this case is gonna be called func and then let's give it our list so I actually don't need these double brackets here and excuse me let's give it our list which in this case is Li so let's talk about what this really is doing right now so the map function takes a function which is funk so the name of our function and it takes a list which is Li what it's going to do is it's going to apply this function to every element in the list and we can watch this happen we run the program and you see we get the exact same value as we did before and that's extremely extremely useful in Python because there's a lot of times you want to apply a function or even possibly multiple functions onto a very onto a list or every element of the list and you don't have to type out a whole for loop yes you can do that it works fine but the map function is just a shortcut to be able to do that so let me just show you now maybe a few other examples that we can use so like using this map function there's another way that we can create this and it's totally preference which one you want to use I like using map just because it's kind of cool you can also use wink a list comprehension and this is something I would have shown in some of my previous Python tutorials like from way back like years ago on my channel but I'll go over it quickly now and the way that this works is you can do the same things you can say func X for X in Li now this is actually going to give us the exact same value as what we have up here with this map function Li for example because what we're going to do is we're going to say we're gonna take this right here so whatever this expression is and we're gonna do it for every value of x in the list so that's exactly what this map function does and this is gonna turn it into a list because we put our square brackets here so I print this out see we get again the same value and that's how list comprehension works now for a list comprehension you can also add like an expression anywhere so it can do something like if let's say X modulus which modulus 2 equals equal to 0 and now it's only gonna do this we're put this into the list if X is divisible by 2 syntax error oh I forgot my square bracket here my bad don't know how you even got rid of that that's friendly oh that's cuz that is why all right excuse me on that okay so now we get 4 2 5 6 so it's only doing it for the even numbers of X so yeah those are two really cool ways to kind of change a list or modify them apply a function to them in Python say obviously you might want to use a function that's more advanced than this this is just for a basic example and if you wanted to apply maybe two functions to it you could have X to be changed here and then you could return like function two of X to the X here and then that would put that value obviously in the map so again map takes two parameters a function and a list and it will apply the function to every value in that list I hope this has been useful for you guys if you did enjoy the video please make sure you leave a like and subscribe and I'm going to be moving on to some more complicated and other examples using map and other functions in the next video so make sure you stay tuned for that
