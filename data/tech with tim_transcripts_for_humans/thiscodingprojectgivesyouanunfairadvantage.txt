With timestamps:

00:00 - I'm here to tell you that most your
00:01 - programming projects suck the reason for
00:03 - that is they don't demonstrate the
00:05 - skills employers need to see to actually
00:07 - give you a jum the best project you can
00:09 - work on is one that demonstrates you not
00:11 - only know how to code but to architect a
00:14 - solution and a project employers need to
00:16 - see that you have the ability to build
00:18 - something from scratch to plan on your
00:20 - own and to make design decisions even if
00:23 - they're relatively minor this is why I
00:25 - typically recommend building a full
00:26 - stack application you want to build a
00:28 - nice front end a backend connect those
00:30 - with an API have some kind of database
00:32 - and go into the interview ready to
00:34 - explain the different decisions you made
00:37 - why you chose those decisions and how
00:38 - you came up with the basic architecture
00:40 - and data flow of the application if you
00:42 - can do that you're immediately going to
00:44 - stand out and you'll notice in a lot of
00:46 - interviews that's what they're looking
00:47 - for not your coding ability your ability
00:49 - to design and plan now if you want to
00:51 - learn more about exactly how to land a
00:53 - software development position I have a
00:55 - free introduction course that you can
00:56 - sign up for from the link in the pinned
00:58 - comment

Cleaned transcript:

I'm here to tell you that most your programming projects suck the reason for that is they don't demonstrate the skills employers need to see to actually give you a jum the best project you can work on is one that demonstrates you not only know how to code but to architect a solution and a project employers need to see that you have the ability to build something from scratch to plan on your own and to make design decisions even if they're relatively minor this is why I typically recommend building a full stack application you want to build a nice front end a backend connect those with an API have some kind of database and go into the interview ready to explain the different decisions you made why you chose those decisions and how you came up with the basic architecture and data flow of the application if you can do that you're immediately going to stand out and you'll notice in a lot of interviews that's what they're looking for not your coding ability your ability to design and plan now if you want to learn more about exactly how to land a software development position I have a free introduction course that you can sign up for from the link in the pinned comment
