With timestamps:

00:00 - hey guys and welcome back today this is
00:03 - the 15th video in my Python programming
00:05 - series and we are going to be talking
00:07 - about some more methods that we can use
00:10 - on strings and on lists these methods
00:12 - are I'm going to put them in a comment
00:14 - so that I remember is the dot find and
00:17 - the dot count method and now these can
00:21 - be used on strings and on lists so let's
00:25 - go right ahead and give an example so
00:27 - the dot find method this is a very
00:29 - useful method in Python it's not in a
00:32 - lot of other languages so it is specific
00:34 - to Python so what we can do is we're
00:36 - going to make a variable we're going to
00:37 - call it string now we can set this equal
00:40 - to whatever we want so let's just say
00:42 - hello for this case for simplicity and
00:44 - then we're simply going to print string
00:49 - oops if I spelled it correctly string
00:52 - dot fine and then inside of the dot find
00:56 - brackets here so the argument for this
00:58 - method we are going to put in what we
01:01 - want to find so we want to see if we can
01:04 - find the indices of any of these letters
01:07 - here so if I put in L you'll see what
01:11 - happens is I get two and that's because
01:14 - there's an L the first L in the string
01:16 - is found at the indices of two just like
01:20 - that now you may be confused right now I
01:22 - haven't completely explained it but
01:24 - that's fine so as you can see we have
01:26 - two L's in the string right now when I
01:29 - put in this L in the brackets it gives
01:33 - me a value of two now that is where the
01:36 - first L is found in the string if I put
01:39 - in Oh for example you'll see it gives me
01:42 - four and there's only one o in the
01:44 - string so it gives me the value of where
01:46 - that o is which is the fourth indicee of
01:49 - the string the fourth index if I put in
01:52 - H you see we get zero and now notice
01:57 - what happens if I put in a number or a
01:59 - letter that's not actually in the string
02:01 - so I'll put in seven for example the
02:03 - string seven and you see we actually get
02:06 - negative one that's because if python
02:09 - does not find that inside of the string
02:11 - it's going to tell you that it's naked
02:13 - one so rather than zero it gives you
02:15 - negative one just like that so this is
02:18 - useful because maybe we want to check in
02:20 - a password for example if it contains a
02:22 - certain element so maybe if there's a
02:24 - dash in there we don't want them to be
02:27 - able to use that password or maybe we're
02:28 - not allowing a certain character or we
02:31 - need a certain character to be in a
02:33 - password or a string this is where dot
02:35 - find is useful and it'll tell us if
02:37 - that's in the string or not now there's
02:40 - actually another useful string method
02:43 - here that is dot count now it does a
02:45 - similar thing except instead of finding
02:47 - the index of the letter it counts how
02:49 - many of them there are in the string so
02:52 - now we're going to go to DA count
02:53 - so we'll go down like this and again
02:56 - inside of the brackets we're just going
02:58 - to put a string so let's do L and you
03:03 - see if we f5 here we get the value of 2
03:06 - that's because obviously there are two
03:08 - L's in our string now I'm just going to
03:10 - type a bunch of random letters and show
03:12 - you that this does work for all kinds of
03:15 - things so if I type in a for example see
03:17 - how many azide typed we have six A's in
03:20 - that string now let's try a Zed I know I
03:23 - didn't use said here I'm pretty sure at
03:24 - least oops that's my bad we forgotten a
03:31 - parenthesis there sorry okay and we get
03:35 - zero right so instead of negative one it
03:38 - counts and says well there are zero of
03:40 - them the string so we're going to return
03:42 - zero again we can use this to find if
03:45 - there's a certain character in the
03:47 - string so if we say you can only have a
03:49 - maximum of three numbers in your string
03:51 - well we could count and we could say if
03:54 - there whatever how many numbers right
03:56 - the dolt fine is different than this
03:58 - because it actually tells us where that
04:01 - is so if I do don't find again and now
04:05 - maybe I put in an A well we know there's
04:07 - six A's in the string but which a is
04:09 - this one going to give us so it says
04:12 - five because that is the first place
04:13 - that an a occurred in the string so we
04:16 - see here at the fifth in the C or index
04:18 - that's where the first a is it's not
04:20 - going to give us the A's from back here
04:22 - if we wanted to find the A's back here
04:24 - we'd have to use a for loop and we'd
04:26 - have to loop through
04:26 - string in different parts of the string
04:28 - to find where all the A's were again
04:32 - yeah so that's how you use dot find and
04:34 - count it's very useful if you want to
04:36 - check certain things so I'll show you an
04:38 - example here if we wanted to check a
04:40 - string how we would use the dot count
04:42 - method or the dot find method so I'm
04:43 - going to say if string dot count and I
04:49 - don't want to allow any let's say
04:51 - underscores in my string is greater than
04:55 - zero so that just means if it's I guess
04:58 - we could also say not equal to zero so
05:00 - if it has if it contains at least one of
05:02 - these underscores and we're not going to
05:04 - allow it so we're going to print to the
05:06 - screen not good just like that okay just
05:11 - to show how this works now here instead
05:13 - of actually having a preset string we're
05:15 - just going to get input from the console
05:17 - so we can do this a few times and see so
05:19 - input will say please type something as
05:24 - the prompt like that and otherwise so an
05:28 - else statement here if it doesn't
05:30 - contain any underscores we will print
05:31 - good like that okay so now I'm going to
05:37 - type hello what was our first string and
05:40 - oh what happened there good so we get
05:47 - good sorry I don't know something
05:48 - glitched in the program there will rerun
05:50 - it I'm not sure what happened there
05:51 - f5 please type something I type hello
05:56 - there we go now we get good I'm not sure
05:58 - what happened any other one okay so now
05:59 - let's do it again and this time we're
06:01 - going to include an underscore so we'll
06:03 - do underscore underscore hello it's
06:07 - going to say not good because it counted
06:08 - these underscores and said well there is
06:10 - more than zero underscores so it's not
06:13 - good and then same thing if we put an
06:14 - underscore in the middle of the word or
06:16 - we put a ton of underscore so h-e-l-l-o
06:22 - not good because there's underscores in
06:25 - the word just like that and yeah that's
06:27 - pretty much how the dot find and the dot
06:29 - count methods work there's a ton of uses
06:32 - for these and it's really useful on that
06:34 - they have this method because in a lot
06:35 - of other programming languages they
06:37 - don't have this dot count and dot fine
06:39 - so it makes it
06:40 - harder if you're trying to find how many
06:42 - things are in a string or if you're
06:44 - trying to find the index of a letter so
06:46 - I hope you learned something I hope you
06:47 - enjoyed it if you did please like and
06:49 - subscribe and I will see you again
06:51 - tomorrow for another video

Cleaned transcript:

hey guys and welcome back today this is the 15th video in my Python programming series and we are going to be talking about some more methods that we can use on strings and on lists these methods are I'm going to put them in a comment so that I remember is the dot find and the dot count method and now these can be used on strings and on lists so let's go right ahead and give an example so the dot find method this is a very useful method in Python it's not in a lot of other languages so it is specific to Python so what we can do is we're going to make a variable we're going to call it string now we can set this equal to whatever we want so let's just say hello for this case for simplicity and then we're simply going to print string oops if I spelled it correctly string dot fine and then inside of the dot find brackets here so the argument for this method we are going to put in what we want to find so we want to see if we can find the indices of any of these letters here so if I put in L you'll see what happens is I get two and that's because there's an L the first L in the string is found at the indices of two just like that now you may be confused right now I haven't completely explained it but that's fine so as you can see we have two L's in the string right now when I put in this L in the brackets it gives me a value of two now that is where the first L is found in the string if I put in Oh for example you'll see it gives me four and there's only one o in the string so it gives me the value of where that o is which is the fourth indicee of the string the fourth index if I put in H you see we get zero and now notice what happens if I put in a number or a letter that's not actually in the string so I'll put in seven for example the string seven and you see we actually get negative one that's because if python does not find that inside of the string it's going to tell you that it's naked one so rather than zero it gives you negative one just like that so this is useful because maybe we want to check in a password for example if it contains a certain element so maybe if there's a dash in there we don't want them to be able to use that password or maybe we're not allowing a certain character or we need a certain character to be in a password or a string this is where dot find is useful and it'll tell us if that's in the string or not now there's actually another useful string method here that is dot count now it does a similar thing except instead of finding the index of the letter it counts how many of them there are in the string so now we're going to go to DA count so we'll go down like this and again inside of the brackets we're just going to put a string so let's do L and you see if we f5 here we get the value of 2 that's because obviously there are two L's in our string now I'm just going to type a bunch of random letters and show you that this does work for all kinds of things so if I type in a for example see how many azide typed we have six A's in that string now let's try a Zed I know I didn't use said here I'm pretty sure at least oops that's my bad we forgotten a parenthesis there sorry okay and we get zero right so instead of negative one it counts and says well there are zero of them the string so we're going to return zero again we can use this to find if there's a certain character in the string so if we say you can only have a maximum of three numbers in your string well we could count and we could say if there whatever how many numbers right the dolt fine is different than this because it actually tells us where that is so if I do don't find again and now maybe I put in an A well we know there's six A's in the string but which a is this one going to give us so it says five because that is the first place that an a occurred in the string so we see here at the fifth in the C or index that's where the first a is it's not going to give us the A's from back here if we wanted to find the A's back here we'd have to use a for loop and we'd have to loop through string in different parts of the string to find where all the A's were again yeah so that's how you use dot find and count it's very useful if you want to check certain things so I'll show you an example here if we wanted to check a string how we would use the dot count method or the dot find method so I'm going to say if string dot count and I don't want to allow any let's say underscores in my string is greater than zero so that just means if it's I guess we could also say not equal to zero so if it has if it contains at least one of these underscores and we're not going to allow it so we're going to print to the screen not good just like that okay just to show how this works now here instead of actually having a preset string we're just going to get input from the console so we can do this a few times and see so input will say please type something as the prompt like that and otherwise so an else statement here if it doesn't contain any underscores we will print good like that okay so now I'm going to type hello what was our first string and oh what happened there good so we get good sorry I don't know something glitched in the program there will rerun it I'm not sure what happened there f5 please type something I type hello there we go now we get good I'm not sure what happened any other one okay so now let's do it again and this time we're going to include an underscore so we'll do underscore underscore hello it's going to say not good because it counted these underscores and said well there is more than zero underscores so it's not good and then same thing if we put an underscore in the middle of the word or we put a ton of underscore so hello not good because there's underscores in the word just like that and yeah that's pretty much how the dot find and the dot count methods work there's a ton of uses for these and it's really useful on that they have this method because in a lot of other programming languages they don't have this dot count and dot fine so it makes it harder if you're trying to find how many things are in a string or if you're trying to find the index of a letter so I hope you learned something I hope you enjoyed it if you did please like and subscribe and I will see you again tomorrow for another video
