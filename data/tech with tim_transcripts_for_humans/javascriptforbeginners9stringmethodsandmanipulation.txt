With timestamps:

00:00 - hello everybody and welcome back so in
00:02 - this video we are we talking about
00:03 - string methods and concatenation of
00:05 - strings now we've dealt with strings a
00:08 - little bit before I've showed you as a
00:09 - few things we can do with them but I
00:11 - just want to show you a few other
00:13 - properties of strings because there is
00:14 - actually a lot and there's a lot of
00:16 - things that you kind of need to learn to
00:17 - deal with them properly and that's also
00:19 - something you're gonna be doing a lot in
00:20 - JavaScript is manipulating strings and
00:23 - user input and all of that so what I
00:25 - want to do is kind of have an example
00:28 - here where we're gonna get the user to
00:29 - type something and we're gonna modify
00:31 - the string they type in and just print
00:33 - it and show you what it looks like so to
00:35 - do this we're gonna say you know I
00:37 - probably should have kept this from the
00:38 - last time var text equals in this case I
00:41 - guess we'll say document dot get element
00:44 - by ID don't
00:47 - what was it valium I think it was value
00:50 - okay
00:50 - let's change this now to be a mp4 input
00:53 - and what I'm gonna do is simply just
00:56 - console dot log or actually we'll put
00:58 - that value in this output tag so what
01:00 - we'll say is output dot inner HTML
01:04 - equals and in this case text now let's
01:07 - just look at this example quickly to see
01:08 - how this works I'm also going to talk
01:10 - about this page in a second so let's
01:12 - refresh this let's type hello and then
01:14 - we can see obviously it shows up down
01:15 - below now this is where I'm grabbing
01:17 - some of these string methods from this
01:19 - just has a nice list of them I'll try to
01:20 - leave a link to it but remind me if I
01:22 - forget which is likely so those methods
01:24 - like starts with substring substring to
01:27 - local lowercase to string to lowercase
01:29 - to uppercase trim I'm not going to go
01:31 - through all of them but I'll show you
01:32 - what some of them do and why we might
01:35 - even actually want to use them so the
01:37 - easiest one to illustrate is to
01:39 - uppercase now you guys can probably
01:41 - guess what this is gonna do but
01:42 - essentially whenever you have a string
01:44 - object which in this case text is
01:46 - because this right here is gonna be
01:48 - storing some string value right this is
01:50 - going to be equal to a string so text
01:52 - now is storing some string which means
01:54 - that I can actually manipulate the
01:56 - variable text by calling you know some
01:58 - string methods on it so let's do this
02:01 - and let's refresh so when I do that and
02:04 - I type let's say hello we can see we get
02:06 - hello now in all upper cases so what to
02:09 - uppercase does is essentially take this
02:11 - string and create a new string
02:13 - is completely uppercase letters with
02:15 - whatever this string was now if I decide
02:17 - to add you know an uppercase o at the
02:19 - end we still are gonna get this because
02:21 - everything just goes uppercase now the
02:24 - same works for two lowercase
02:26 - like that so let's look at this
02:29 - so I go to lowercase and I type low then
02:32 - we're gonna get lowercase hello so this
02:34 - is often useful especially when you're
02:35 - asking maybe a question or something
02:37 - that could be right or wrong because you
02:39 - don't know if someone's gonna type in
02:41 - the answer with upper cases or with
02:42 - lower cases or maybe you know say
02:44 - they're gonna type in the answer to a
02:46 - question like maybe the answer is blue
02:48 - and they type blue with a capital B well
02:51 - is that wrong if B your answer that you
02:54 - had was blue with a lowercase B no the
02:56 - answer is still correct but if you're
02:58 - comparing you know blue like this with
03:01 - let's say something like blue obviously
03:05 - you know these two are not the same so
03:06 - what you would do is take that users
03:08 - input make it all lowercase so then that
03:10 - way you can compare if the value of your
03:12 - two strings are actually the same so
03:14 - that's where we use to lower case and
03:15 - dot uppercase now what we can actually
03:18 - do is starts with and ends with as well
03:20 - and this is gonna give us a boolean so
03:22 - starts with is gonna tell us if the
03:24 - string starts with a certain character
03:26 - so what we need to do is inside of here
03:28 - put the character we want to see if it
03:30 - starts with now maybe we want our string
03:32 - to start with a number sign or maybe we
03:33 - wanted to start with an @ sign like if
03:35 - we're doing a mention of someone on
03:36 - social media or something so what I can
03:38 - do is refresh this and now if I type say
03:41 - hello we're gonna get the value false
03:43 - but if I type at hello like this we get
03:48 - the value true because our string
03:49 - started with this character
03:51 - now same goes with ends with we have
03:55 - ends with we can use that same character
03:57 - again so in this case we'll do hello
03:59 - false hello with one of those at the end
04:02 - and what do we why are we not getting
04:04 - correct here let's see if this works
04:07 - hello hmm interesting why we keep
04:10 - getting false let me look at this
04:12 - okay so we got true there I think I
04:14 - actually had a space afterwards and
04:15 - that's why I wasn't working and that's
04:16 - actually the next one I'm going to talk
04:18 - about so notice here we're getting true
04:20 - but if I had a space then we get false
04:22 - so I think that's what was happening was
04:23 - essentially this string has a space at
04:25 - the end so that's why that was
04:26 - working so actually what I want to show
04:29 - you now is how can we get rid of that
04:30 - space so in that last instance right our
04:33 - string actually did end with this add
04:35 - sign but since we had a space at the end
04:37 - it wasn't counting because it was gonna
04:39 - look like something like I think we had
04:40 - like hell at like that so this was our
04:44 - string so obviously we see it ends with
04:45 - this but there is a space so how can we
04:47 - get rid of any of those spaces at the
04:49 - end or at the beginning of that string
04:51 - that we don't want well this is where we
04:54 - can actually use a method called trim
04:55 - now what trim is gonna do is simply
04:57 - remove any leading or trailing white
05:00 - spaces from our string so this is really
05:02 - useful because sometimes maybe someone's
05:03 - typing in their name or something and
05:05 - they type in like space hello well you
05:07 - don't want to store space hello you just
05:09 - want to store hello so in this case
05:11 - actually let's refresh this and if I do
05:12 - hello and like a bunch of spaces we're
05:16 - good okay so we're obviously gonna get
05:17 - false because there's a bunch of spaces
05:19 - but let's do this same example zoom
05:21 - hello at and then a bunch of spaces and
05:23 - click well our answer is true because we
05:25 - actually removed all these spaces when
05:28 - we did this trim here so that's what
05:30 - that does it actually removes any spaces
05:32 - I think a better example might be if we
05:34 - just actually print out text trim and
05:36 - I'll do some leading spaces so if I go
05:39 - like hello and just do a bunch of spaces
05:42 - here then technically when we printed
05:44 - this it should be expand we run this we
05:47 - just oh well I got to refresh this let's
05:50 - go hello do this we just get hello
05:53 - there's no spaces before that because we
05:55 - trimmed off all of those spaces so
05:57 - that's what those methods do now notice
05:59 - that I used two of those in combination
06:01 - with each other right so I had dot trim
06:03 - which returns to me a new string so
06:06 - that's gonna give me that hello without
06:08 - all those spaces there so it removes all
06:10 - those and then what I did was dot ends
06:12 - with like that right so what these
06:15 - methods do is they don't modify the
06:17 - original string they actually create a
06:19 - new one that can be used in whatever
06:21 - context you want right so if I have this
06:23 - you know let's do this trim what I'll do
06:26 - next is all this console dot log the
06:28 - actual value of text and show you guys
06:30 - the text isn't changing when we do this
06:32 - dot trim this just creates a new string
06:34 - they get stored in our inner dot HTML
06:37 - output
06:38 - it doesn't actually modify text
06:39 - so to illustrate that let's refresh this
06:42 - to do a bunch of spaces for hello click
06:45 - we can see that change but now if I go
06:47 - to inspect and we look at the console
06:49 - here which I think is right here we can
06:53 - see that we get hello and we actually
06:54 - have a bunch of spaces before that now I
06:57 - realize that sometimes it's hard to see
06:59 - the actual spaces so I'm gonna show you
07:02 - another property we have strings called
07:05 - lengths now what this does is it's
07:08 - different than a method which are what
07:09 - these are that we've been calling with
07:10 - these dot and then these brackets it
07:12 - actually tells you how long the string
07:14 - is which is kind of useful so in this
07:16 - case let's refresh this let's go a bunch
07:19 - of spaces hello click and in this case
07:22 - obviously we know that the string is
07:23 - only of length I believe 6 but here
07:25 - we're getting length 23 and that's
07:27 - because we've added a bunch of the
07:28 - spaces beforehand so it's printing out
07:30 - that length to us now this length
07:33 - property is really useful because
07:34 - sometimes like say you have a password
07:35 - you want to check well that password has
07:38 - to be of length at least 250 or
07:40 - something like that right or you know
07:41 - 250 25 10 whatever you want it to be
07:44 - like you need to have it of some certain
07:46 - length so what you do is you could check
07:48 - the length of whatever that user typed
07:50 - in say okay is it greater than H is it
07:52 - greater than 9 does it contain an add
07:54 - sign does it start with a capital
07:56 - whatever any of those you can check all
07:58 - that and if that's true you could say
07:59 - okay this is a valid password you can
08:01 - say okay no that's not a valid password
08:03 - so as that is a little bit about strings
08:05 - I mean I think I've showed you guys
08:06 - concatenation before where essentially
08:08 - we've had something like you know hello
08:10 - plus and then maybe in this case if we
08:12 - do text actually let's do this what I'm
08:15 - gonna do is simply say ask the user to
08:17 - type in their name now so we'll say to
08:19 - actually type something sure and we'll
08:20 - say you typed like that and then space
08:27 - now I think I showed you guys how this
08:29 - worked but essentially concatenation
08:31 - with strings is just adding them
08:32 - together so what we're gonna do here is
08:33 - that you typed and then just add this
08:35 - text trimmed value after so in this case
08:38 - if i refresh this we can close this
08:40 - console window actually let's get out of
08:41 - that and I type hello it'll say you
08:44 - typed hello right and that'll just print
08:46 - that out and show that to me now let's
08:48 - say I wanted to actually you know maybe
08:49 - print some numbers I want to print some
08:51 - other things well what I can do
08:53 - is
08:53 - I don't need to put them in strings I
08:54 - can say like plus five if I wanted to
08:56 - and I think I showed you guys how this
08:58 - works will essentially in now if I type
09:00 - hello it's just gonna add five to the
09:02 - end so just mush that together alright
09:05 - so I think that's all four strings for
09:06 - right now there is a lot more to talk
09:08 - about with strings again try to remind
09:09 - me to link this website that has a bunch
09:11 - of different methods that you can use
09:13 - for Strings
09:14 - I haven't shown all of them or even like
09:16 - most of them to be honest like there's a
09:17 - replace method which will replace a
09:19 - certain item in the string with another
09:21 - item we have split which will split this
09:23 - string we'll talk about that one later
09:25 - just lots of stuff you can do here I
09:27 - just want to give you as an introduction
09:28 - and illustrate kind of how these work
09:30 - and how you can use the methods and you
09:31 - know how I did something like text trim
09:34 - even though text isn't actually string
09:35 - but it's storing the string value stuff
09:37 - like that so anyways if you guys enjoy
09:39 - it as always leave a like subscribe to
09:41 - the channel down below and I'll see you
09:42 - guys another JavaScript tutorial

Cleaned transcript:

hello everybody and welcome back so in this video we are we talking about string methods and concatenation of strings now we've dealt with strings a little bit before I've showed you as a few things we can do with them but I just want to show you a few other properties of strings because there is actually a lot and there's a lot of things that you kind of need to learn to deal with them properly and that's also something you're gonna be doing a lot in JavaScript is manipulating strings and user input and all of that so what I want to do is kind of have an example here where we're gonna get the user to type something and we're gonna modify the string they type in and just print it and show you what it looks like so to do this we're gonna say you know I probably should have kept this from the last time var text equals in this case I guess we'll say document dot get element by ID don't what was it valium I think it was value okay let's change this now to be a mp4 input and what I'm gonna do is simply just console dot log or actually we'll put that value in this output tag so what we'll say is output dot inner HTML equals and in this case text now let's just look at this example quickly to see how this works I'm also going to talk about this page in a second so let's refresh this let's type hello and then we can see obviously it shows up down below now this is where I'm grabbing some of these string methods from this just has a nice list of them I'll try to leave a link to it but remind me if I forget which is likely so those methods like starts with substring substring to local lowercase to string to lowercase to uppercase trim I'm not going to go through all of them but I'll show you what some of them do and why we might even actually want to use them so the easiest one to illustrate is to uppercase now you guys can probably guess what this is gonna do but essentially whenever you have a string object which in this case text is because this right here is gonna be storing some string value right this is going to be equal to a string so text now is storing some string which means that I can actually manipulate the variable text by calling you know some string methods on it so let's do this and let's refresh so when I do that and I type let's say hello we can see we get hello now in all upper cases so what to uppercase does is essentially take this string and create a new string is completely uppercase letters with whatever this string was now if I decide to add you know an uppercase o at the end we still are gonna get this because everything just goes uppercase now the same works for two lowercase like that so let's look at this so I go to lowercase and I type low then we're gonna get lowercase hello so this is often useful especially when you're asking maybe a question or something that could be right or wrong because you don't know if someone's gonna type in the answer with upper cases or with lower cases or maybe you know say they're gonna type in the answer to a question like maybe the answer is blue and they type blue with a capital B well is that wrong if B your answer that you had was blue with a lowercase B no the answer is still correct but if you're comparing you know blue like this with let's say something like blue obviously you know these two are not the same so what you would do is take that users input make it all lowercase so then that way you can compare if the value of your two strings are actually the same so that's where we use to lower case and dot uppercase now what we can actually do is starts with and ends with as well and this is gonna give us a boolean so starts with is gonna tell us if the string starts with a certain character so what we need to do is inside of here put the character we want to see if it starts with now maybe we want our string to start with a number sign or maybe we wanted to start with an @ sign like if we're doing a mention of someone on social media or something so what I can do is refresh this and now if I type say hello we're gonna get the value false but if I type at hello like this we get the value true because our string started with this character now same goes with ends with we have ends with we can use that same character again so in this case we'll do hello false hello with one of those at the end and what do we why are we not getting correct here let's see if this works hello hmm interesting why we keep getting false let me look at this okay so we got true there I think I actually had a space afterwards and that's why I wasn't working and that's actually the next one I'm going to talk about so notice here we're getting true but if I had a space then we get false so I think that's what was happening was essentially this string has a space at the end so that's why that was working so actually what I want to show you now is how can we get rid of that space so in that last instance right our string actually did end with this add sign but since we had a space at the end it wasn't counting because it was gonna look like something like I think we had like hell at like that so this was our string so obviously we see it ends with this but there is a space so how can we get rid of any of those spaces at the end or at the beginning of that string that we don't want well this is where we can actually use a method called trim now what trim is gonna do is simply remove any leading or trailing white spaces from our string so this is really useful because sometimes maybe someone's typing in their name or something and they type in like space hello well you don't want to store space hello you just want to store hello so in this case actually let's refresh this and if I do hello and like a bunch of spaces we're good okay so we're obviously gonna get false because there's a bunch of spaces but let's do this same example zoom hello at and then a bunch of spaces and click well our answer is true because we actually removed all these spaces when we did this trim here so that's what that does it actually removes any spaces I think a better example might be if we just actually print out text trim and I'll do some leading spaces so if I go like hello and just do a bunch of spaces here then technically when we printed this it should be expand we run this we just oh well I got to refresh this let's go hello do this we just get hello there's no spaces before that because we trimmed off all of those spaces so that's what those methods do now notice that I used two of those in combination with each other right so I had dot trim which returns to me a new string so that's gonna give me that hello without all those spaces there so it removes all those and then what I did was dot ends with like that right so what these methods do is they don't modify the original string they actually create a new one that can be used in whatever context you want right so if I have this you know let's do this trim what I'll do next is all this console dot log the actual value of text and show you guys the text isn't changing when we do this dot trim this just creates a new string they get stored in our inner dot HTML output it doesn't actually modify text so to illustrate that let's refresh this to do a bunch of spaces for hello click we can see that change but now if I go to inspect and we look at the console here which I think is right here we can see that we get hello and we actually have a bunch of spaces before that now I realize that sometimes it's hard to see the actual spaces so I'm gonna show you another property we have strings called lengths now what this does is it's different than a method which are what these are that we've been calling with these dot and then these brackets it actually tells you how long the string is which is kind of useful so in this case let's refresh this let's go a bunch of spaces hello click and in this case obviously we know that the string is only of length I believe 6 but here we're getting length 23 and that's because we've added a bunch of the spaces beforehand so it's printing out that length to us now this length property is really useful because sometimes like say you have a password you want to check well that password has to be of length at least 250 or something like that right or you know 250 25 10 whatever you want it to be like you need to have it of some certain length so what you do is you could check the length of whatever that user typed in say okay is it greater than H is it greater than 9 does it contain an add sign does it start with a capital whatever any of those you can check all that and if that's true you could say okay this is a valid password you can say okay no that's not a valid password so as that is a little bit about strings I mean I think I've showed you guys concatenation before where essentially we've had something like you know hello plus and then maybe in this case if we do text actually let's do this what I'm gonna do is simply say ask the user to type in their name now so we'll say to actually type something sure and we'll say you typed like that and then space now I think I showed you guys how this worked but essentially concatenation with strings is just adding them together so what we're gonna do here is that you typed and then just add this text trimmed value after so in this case if i refresh this we can close this console window actually let's get out of that and I type hello it'll say you typed hello right and that'll just print that out and show that to me now let's say I wanted to actually you know maybe print some numbers I want to print some other things well what I can do is I don't need to put them in strings I can say like plus five if I wanted to and I think I showed you guys how this works will essentially in now if I type hello it's just gonna add five to the end so just mush that together alright so I think that's all four strings for right now there is a lot more to talk about with strings again try to remind me to link this website that has a bunch of different methods that you can use for Strings I haven't shown all of them or even like most of them to be honest like there's a replace method which will replace a certain item in the string with another item we have split which will split this string we'll talk about that one later just lots of stuff you can do here I just want to give you as an introduction and illustrate kind of how these work and how you can use the methods and you know how I did something like text trim even though text isn't actually string but it's storing the string value stuff like that so anyways if you guys enjoy it as always leave a like subscribe to the channel down below and I'll see you guys another JavaScript tutorial
