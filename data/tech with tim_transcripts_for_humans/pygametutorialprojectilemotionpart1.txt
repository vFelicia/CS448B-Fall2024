With timestamps:

00:00 - hey guys and welcome back to another
00:02 - YouTube video so in today's video I'm
00:05 - going to be doing a another tutorial in
00:07 - Python using PI game so this one is
00:10 - gonna be projectile motion so in one of
00:14 - my previous videos I showed you guys a
00:17 - game that I made it was like a mini golf
00:19 - game where it had a ball that could jump
00:22 - around the screen something like this
00:24 - right now obviously it was bouncing and
00:27 - it was a little bit more advanced but it
00:29 - ran off this basic principle of
00:31 - something called projectile motion now
00:33 - if you're not in physics or not in math
00:36 - projectile motion is just pretty much
00:38 - how a projectile moves in two dimensions
00:41 - at least the way that we're gonna be
00:42 - doing it with no air resistance and a
00:45 - constant gravity acceleration and no
00:48 - acceleration in the in the x-direction
00:50 - so pretty much you can see here this is
00:53 - what I'm gonna be showing you guys how
00:54 - to do today now it seems pretty simple
00:56 - but it's a lot more advanced than it
00:59 - looks and it deals with some principles
01:02 - I usually learn in grade 11 and grade 12
01:05 - and it kind of a prerequisite for this
01:08 - is I'd suggest you're probably in high
01:11 - school and with decent math background
01:14 - so you can kind of understand what's
01:15 - going on
01:15 - if you don't um have a good math
01:18 - background or you're not good at math
01:19 - don't worry you can still follow along
01:21 - with the tutorial and just copy what I'm
01:22 - showing but don't stress too much about
01:25 - trying to understand it all if you're if
01:27 - you don't have great math background so
01:30 - this is probably gonna be a little bit
01:32 - of a longer video as I am gonna explain
01:34 - somewhat in depth how all this works and
01:36 - then it's probably gonna be in about two
01:39 - parts as well so I'm gonna try to keep
01:40 - this first part maybe about 10-15
01:42 - minutes and then same for the second
01:45 - part so let's get started right away so
01:47 - like I mentioned we're gonna be doing
01:48 - this in Python so let's open up a new
01:51 - file and we're gonna start with our
01:52 - imports we're gonna need to import pie
01:54 - game we're gonna need to import math now
01:56 - we're going to create a basic pie game
01:58 - screen again I'm gonna go kind of fast
02:01 - for some of these beginner steps or
02:04 - these beginning steps just because it's
02:05 - pretty straightforward and if you guys
02:08 - don't know how to use PI game you might
02:09 - want to go watch my PI game programming
02:11 - tutorials first
02:13 - they might help out with this video so
02:17 - we're just gonna set up our screen here
02:18 - and I mean you guys can make it as wide
02:21 - as you want I'm just gonna set mine
02:23 - equal to 1200 by 500 - like that and
02:30 - then well we don't need to set a caption
02:33 - that's fine so we're gonna start by just
02:35 - creating a class now this class is just
02:37 - gonna be our object which is a ball
02:40 - which can be shorter on the screen I'm
02:41 - gonna call it ball you guys can call
02:42 - whatever you want and then we'll start
02:44 - off with our net function like this and
02:47 - we'll do self
02:49 - X Y and then radius and cover because
02:53 - it's gonna be a ball so we don't need a
02:55 - width and height Finch do self taught x
02:57 - equals x straight forward so if the wife
03:00 - is y and so on all right now we need our
03:10 - other function here our draw function
03:14 - it's gonna take two parameters here self
03:16 - and the window and then inside here
03:20 - which could do my game dot draw dot
03:23 - circle I think that's how you spell
03:26 - Circle and then for the circle if you
03:29 - guys don't know draw a circle pretty
03:31 - much it just takes window color I
03:33 - believe let's do self self dot color and
03:38 - then it takes a position this is gonna
03:39 - be the middle of the circle the position
03:41 - so self dot X and self dot Y like so and
03:46 - then it takes your radius so self dot
03:50 - radius now this is gonna seem weird but
03:52 - I'm gonna do minus 1 for this radius
03:55 - here actually so now what we're gonna do
03:59 - is we're just gonna copy this alright
04:01 - and we're gonna paste it again now the
04:03 - reason I'm doing this is so that we can
04:04 - get an outline for our circle so for
04:07 - this next one we're gonna do radius
04:09 - minus one so this means it's gonna draw
04:11 - one fewer so that we it looks like we
04:15 - have a one pixel outline and I'm just
04:17 - gonna set this equal to black hard-coded
04:19 - in here so this way we start by drawing
04:21 - a black circle and then on top of it we
04:23 - draw a white circle with one less of the
04:25 - radius so
04:26 - we see that black outline and you guys
04:28 - will see what I'm talking about when
04:29 - we're moving the ball around on the
04:30 - screen now we're gonna put it in a
04:34 - function here that we're gonna start
04:35 - working on a little bit later we're
04:37 - gonna call it ball path I mean it
04:40 - doesn't really matter what you call it
04:41 - but that's what I like to call it and
04:43 - we're gonna put the parameters in and
04:44 - then we'll we'll come back to it in a
04:46 - bit so just fill this in for now power
04:49 - angle and time and some of you guys in
04:51 - physics might see what we're gonna be
04:53 - doing with this function where should I
04:55 - leave it right now we're gonna make it a
04:57 - static static method as well sorry not
04:59 - function method inside here we know such
05:01 - a straight path okay now I know I'm
05:05 - whizzing through this right now but this
05:06 - is just because this stuff is pretty
05:08 - basic and this is just setting up our
05:09 - screen and setting up everything which I
05:12 - don't really need to go over in depth I
05:13 - hope you guys know that already
05:14 - so redraw window and then we'll just do
05:19 - window fill and I guess we'll give it
05:22 - like a nice gray background here I mean
05:25 - you can make it whatever you want and
05:27 - then we're gonna just do hi game dot
05:31 - display dot update and we'll include the
05:36 - rest of our stuff in there after so now
05:38 - let's let's get into our our main loop
05:41 - here and our global variables so we'll
05:44 - just do run equals false well run oops
05:49 - what am I saying
05:50 - Rennick was true well run and then we'll
05:54 - do our main event loop so for event and
05:57 - pygame don't event dot gets and then if
06:02 - event dot type equals equals pi game dot
06:06 - quits and you guys know what to do here
06:09 - we're just gonna do run equals false and
06:12 - that side of our loop will do my game
06:14 - don't quit like so all right so let's
06:17 - take a quick breather here for a second
06:18 - and go over what we've done right now so
06:20 - we've just created a class which is our
06:22 - ball object or will not object ball
06:24 - class and then we've created our redraw
06:27 - window function which we're gonna use to
06:29 - redraw the window so we'll put that into
06:31 - our main loop here I'm going to call
06:33 - that every frame and then we've created
06:35 - a just the event loop in here just to
06:39 - see
06:39 - if we quit then it's gonna quit so now
06:42 - what we need to do is we need to create
06:44 - our global variables and we're gonna
06:47 - have to create one called well it's
06:49 - gonna have to be the ball object so I'm
06:50 - gonna call mine golf ball you can call
06:52 - yours whatever you want and we're gonna
06:54 - set equal to a ball object I'm gonna put
06:56 - mine at 300 and then 494 don't ask why
07:01 - hunt number I'll tell you guys in a
07:02 - second and then the color will be 255
07:05 - 255 255 so fives our radius this is our
07:08 - Y and this our X all right so now we
07:12 - have our golf ball object so now we can
07:14 - go back into redraw window and we can
07:16 - just do golf ball dot draw and put win
07:20 - in there and we're almost ready to go
07:23 - here so I'll just show you if I run the
07:24 - program right now everything should be
07:26 - working you can see we have a little
07:27 - white golf ball and it's on the screen
07:29 - now obviously it's not moving around yet
07:31 - but that's what we've accomplished so
07:33 - far all right so now we're gonna go into
07:36 - the next step so now that we have the
07:37 - golf ball drawn and we've got through
07:39 - all the tedious stuff we now need to
07:41 - figure out some of the math that we're
07:43 - gonna be using
07:43 - - well propel the golf ball so we now
07:47 - need to figure out also when we are
07:49 - gonna propel the golf ball so the way
07:50 - that I like to do it is I let just like
07:52 - to have a line between my mouse and the
07:55 - golf ball and then that line is gonna
07:57 - indicate what the angle we're shooting
07:58 - at in the amount of power that we're
08:01 - using now this doesn't work perfectly
08:05 - because it's kind of exponential the
08:07 - longer the line gets exponentially the
08:08 - amount of power but for our purposes it
08:10 - works fine so I'm gonna create a
08:13 - variable out here actually we'll create
08:15 - it in here which is going to be set
08:17 - equal to the line we're gonna set equal
08:19 - to a list and we're gonna do two
08:21 - positions in here like this now the
08:23 - first position is gonna be where at
08:25 - vollis so we're gonna do ball art golf
08:27 - ball golf pulled out X and golf ball
08:31 - know why like that and then the next
08:34 - position is going to be the position of
08:36 - our cursor on the screen so to get that
08:38 - position we have chef to do pause is
08:39 - equal to PI game dot Mouse don't get
08:44 - underscored pause like so and then in
08:46 - here you can just simply put pause now
08:49 - what's gonna happen here is we're now
08:52 - going to create a list
08:53 - it's just gonna have it's gonna have
08:55 - that line going between the ball and our
08:57 - cursor and this way we can decide where
08:59 - we're gonna be shooting it and we can
09:01 - just see it better now that we have the
09:03 - line we need to draw the line so to draw
09:05 - the line we have to go back into our
09:06 - redraw window function we're just gonna
09:08 - do pygame don't draw dot line then
09:11 - inside here we're gonna start with our
09:13 - window our color which I guess we're
09:15 - just gonna be block in this case and
09:17 - then we're gonna do we need the two
09:20 - coordinates so we're gonna do line 0
09:23 - like that and blind 1 and that should be
09:28 - it for the line and let's try our
09:31 - program again and see what we get and
09:33 - yes now we get a line like this and did
09:35 - I say to make the line black well I made
09:37 - it white so that's okay you guys can
09:38 - make whatever color you want does really
09:40 - matter and you can see it just kind of
09:42 - follows along as I move my mouse so we
09:45 - can determine now what angle are gonna
09:47 - be shooting at and the direction of or
09:49 - the power of that shot so now that we
09:52 - have that done it's time to get into
09:54 - some of the trickier stuff so let's
09:58 - start off here by setting X equal to 0
10:01 - and y equal to 0 these are going to be
10:03 - the variables that we use to determine
10:07 - where our ball was shot from so once we
10:11 - click the mouse button which has got
10:12 - what we're gonna be using to shoot the
10:14 - ball we're gonna store the position of
10:16 - that bowl in these variables that we can
10:17 - then access them after we're also gonna
10:19 - need a variable called time it's gonna
10:21 - set this equal to 0
10:22 - we're in a variable called power it's
10:24 - gonna be set to 0 again angle same thing
10:28 - 0 and then shot and this is gonna be
10:30 - equal to false all right we'll do shoot
10:33 - actually so now we need to see when
10:37 - we're gonna be shooting so I said if we
10:39 - press the mouse button you guys can make
10:40 - it space you can make whatever you want
10:41 - we can do if event or event dot mouse
10:46 - button down oops so this just means any
10:50 - mouse button can be middle mouse button
10:52 - left mouse button right mouse button
10:54 - then we're gonna shoot so we're going to
10:56 - shoot is equal to true
11:00 - now there's something here we have to do
11:02 - first you have say if shoot equals
11:05 - equals false this
11:06 - that we're not already shooting because
11:08 - if we do that then it's gonna mess
11:10 - things up if we're already shooting and
11:12 - we try to shoot again hope that makes
11:14 - sense when we shoot here we're now gonna
11:17 - have to set our X Y time power angle and
11:20 - this is where we get into the more
11:21 - complex stuff so this parts easy but
11:23 - just set X equal to golf ball about X
11:25 - and then we're gonna set our y equal to
11:29 - golf ball don't why so we know where we
11:32 - initially shot from and now we have to
11:35 - get our power so we'll actually we'll
11:38 - set time equal to 0 here - and now for
11:40 - our power so I mentioned that our power
11:43 - is gonna be the the distance of that
11:46 - line so if I know cell equals 0 for now
11:49 - if I run the program you can see that
11:51 - well we have an issue just because I
11:53 - haven't finished yet but the longer the
11:55 - line gets the more power we're gonna
11:57 - have well even was that issue mouse
12:01 - button down there's apparently no Oh
12:04 - if event dot type people didn't so I
12:07 - went down my bad there guys so make sure
12:08 - you fix that mistake it's just right
12:10 - here so let's run it again make sure
12:12 - that works mouse button down is not
12:16 - defined event type equals equals all
12:19 - right just give me a second to figure
12:20 - this one out
12:21 - ah Pegeen
12:24 - don't menace button down that's what we
12:27 - need it sorry about that
12:28 - all right so ho let's run hit one more
12:30 - time hopefully this one we get it
12:32 - working there we go you can see so we
12:34 - have the line like this we're gonna
12:36 - shoot with a lot less power and if we
12:38 - have the line like this we're gonna
12:39 - shoot with more power clearly so how do
12:41 - we do that now the first thing we need
12:43 - to do is we need to get the length of
12:45 - the line so I'm not sure if any of you
12:47 - guys remember from grade 9 or 10 the
12:49 - length of the line formula if you don't
12:51 - don't worry I'm gonna show it to you
12:52 - right now pretty much it's the square
12:54 - root so we need math dot square root of
12:56 - the change in X plus the change in Y and
13:01 - both of those are squared so I'm going
13:03 - to just start by doing this just to
13:05 - remind myself so we're gonna square
13:06 - something and add it and then we're
13:08 - going to swear something else now this
13:12 - is where our line function comes in
13:14 - handy our line
13:16 - list sorry so in our line right here we
13:20 - have a tuple and then we have another
13:22 - tuple so we need to find this minus this
13:26 - right as a position so let's start by
13:29 - doing that let we're gonna start with Y
13:31 - here so we'll just do line and then
13:35 - we're gonna do 1 1 minus line and then 0
13:44 - 1 like that so the reason we've done
13:46 - this is because our first position is
13:48 - the starting position of our line and
13:51 - where the golf ball is the second
13:53 - position is our mouse so if our mouse is
13:55 - over here then we need to pretty much
13:57 - subtract the the ending position by the
14:01 - starting position to figure out how much
14:03 - we changed in distance it's not really
14:05 - that big of a deal because our ball is
14:06 - only going to be ever shot from a
14:09 - certain Y level but if we had our ball
14:11 - elevated or landed on top of something
14:13 - then this would definitely matter
14:14 - all right so now the next part we need
14:16 - the X so we're just going to line and
14:20 - then in this case 1 0 to access the x-
14:27 - line and then 0 0 like that alright so
14:33 - we've got that now that's gonna be our
14:35 - power but the thing is if we if we do
14:38 - this then you're gonna notice we're
14:40 - gonna have power going from like say for
14:41 - example blanco this line is 10 and then
14:44 - up here it's five hundred five hundred
14:46 - power means we're moving out five
14:48 - hundred meters per second which means
14:50 - you won't even be able to see the ball
14:52 - move across the screen because it's
14:53 - gonna move so fast so we're gonna
14:54 - actually just divide all of this by
14:56 - eight so that we get smaller numbers for
14:58 - our power now the next one the angle
15:01 - okay so this is where we get into even
15:04 - more mouths so the last one with ya okay
15:06 - it's somewhat difficult the angle we're
15:08 - gonna have to use a bit of trig so I
15:10 - already have a function I pre wrote here

Cleaned transcript:

hey guys and welcome back to another YouTube video so in today's video I'm going to be doing a another tutorial in Python using PI game so this one is gonna be projectile motion so in one of my previous videos I showed you guys a game that I made it was like a mini golf game where it had a ball that could jump around the screen something like this right now obviously it was bouncing and it was a little bit more advanced but it ran off this basic principle of something called projectile motion now if you're not in physics or not in math projectile motion is just pretty much how a projectile moves in two dimensions at least the way that we're gonna be doing it with no air resistance and a constant gravity acceleration and no acceleration in the in the xdirection so pretty much you can see here this is what I'm gonna be showing you guys how to do today now it seems pretty simple but it's a lot more advanced than it looks and it deals with some principles I usually learn in grade 11 and grade 12 and it kind of a prerequisite for this is I'd suggest you're probably in high school and with decent math background so you can kind of understand what's going on if you don't um have a good math background or you're not good at math don't worry you can still follow along with the tutorial and just copy what I'm showing but don't stress too much about trying to understand it all if you're if you don't have great math background so this is probably gonna be a little bit of a longer video as I am gonna explain somewhat in depth how all this works and then it's probably gonna be in about two parts as well so I'm gonna try to keep this first part maybe about 1015 minutes and then same for the second part so let's get started right away so like I mentioned we're gonna be doing this in Python so let's open up a new file and we're gonna start with our imports we're gonna need to import pie game we're gonna need to import math now we're going to create a basic pie game screen again I'm gonna go kind of fast for some of these beginner steps or these beginning steps just because it's pretty straightforward and if you guys don't know how to use PI game you might want to go watch my PI game programming tutorials first they might help out with this video so we're just gonna set up our screen here and I mean you guys can make it as wide as you want I'm just gonna set mine equal to 1200 by 500 like that and then well we don't need to set a caption that's fine so we're gonna start by just creating a class now this class is just gonna be our object which is a ball which can be shorter on the screen I'm gonna call it ball you guys can call whatever you want and then we'll start off with our net function like this and we'll do self X Y and then radius and cover because it's gonna be a ball so we don't need a width and height Finch do self taught x equals x straight forward so if the wife is y and so on all right now we need our other function here our draw function it's gonna take two parameters here self and the window and then inside here which could do my game dot draw dot circle I think that's how you spell Circle and then for the circle if you guys don't know draw a circle pretty much it just takes window color I believe let's do self self dot color and then it takes a position this is gonna be the middle of the circle the position so self dot X and self dot Y like so and then it takes your radius so self dot radius now this is gonna seem weird but I'm gonna do minus 1 for this radius here actually so now what we're gonna do is we're just gonna copy this alright and we're gonna paste it again now the reason I'm doing this is so that we can get an outline for our circle so for this next one we're gonna do radius minus one so this means it's gonna draw one fewer so that we it looks like we have a one pixel outline and I'm just gonna set this equal to black hardcoded in here so this way we start by drawing a black circle and then on top of it we draw a white circle with one less of the radius so we see that black outline and you guys will see what I'm talking about when we're moving the ball around on the screen now we're gonna put it in a function here that we're gonna start working on a little bit later we're gonna call it ball path I mean it doesn't really matter what you call it but that's what I like to call it and we're gonna put the parameters in and then we'll we'll come back to it in a bit so just fill this in for now power angle and time and some of you guys in physics might see what we're gonna be doing with this function where should I leave it right now we're gonna make it a static static method as well sorry not function method inside here we know such a straight path okay now I know I'm whizzing through this right now but this is just because this stuff is pretty basic and this is just setting up our screen and setting up everything which I don't really need to go over in depth I hope you guys know that already so redraw window and then we'll just do window fill and I guess we'll give it like a nice gray background here I mean you can make it whatever you want and then we're gonna just do hi game dot display dot update and we'll include the rest of our stuff in there after so now let's let's get into our our main loop here and our global variables so we'll just do run equals false well run oops what am I saying Rennick was true well run and then we'll do our main event loop so for event and pygame don't event dot gets and then if event dot type equals equals pi game dot quits and you guys know what to do here we're just gonna do run equals false and that side of our loop will do my game don't quit like so all right so let's take a quick breather here for a second and go over what we've done right now so we've just created a class which is our ball object or will not object ball class and then we've created our redraw window function which we're gonna use to redraw the window so we'll put that into our main loop here I'm going to call that every frame and then we've created a just the event loop in here just to see if we quit then it's gonna quit so now what we need to do is we need to create our global variables and we're gonna have to create one called well it's gonna have to be the ball object so I'm gonna call mine golf ball you can call yours whatever you want and we're gonna set equal to a ball object I'm gonna put mine at 300 and then 494 don't ask why hunt number I'll tell you guys in a second and then the color will be 255 255 255 so fives our radius this is our Y and this our X all right so now we have our golf ball object so now we can go back into redraw window and we can just do golf ball dot draw and put win in there and we're almost ready to go here so I'll just show you if I run the program right now everything should be working you can see we have a little white golf ball and it's on the screen now obviously it's not moving around yet but that's what we've accomplished so far all right so now we're gonna go into the next step so now that we have the golf ball drawn and we've got through all the tedious stuff we now need to figure out some of the math that we're gonna be using well propel the golf ball so we now need to figure out also when we are gonna propel the golf ball so the way that I like to do it is I let just like to have a line between my mouse and the golf ball and then that line is gonna indicate what the angle we're shooting at in the amount of power that we're using now this doesn't work perfectly because it's kind of exponential the longer the line gets exponentially the amount of power but for our purposes it works fine so I'm gonna create a variable out here actually we'll create it in here which is going to be set equal to the line we're gonna set equal to a list and we're gonna do two positions in here like this now the first position is gonna be where at vollis so we're gonna do ball art golf ball golf pulled out X and golf ball know why like that and then the next position is going to be the position of our cursor on the screen so to get that position we have chef to do pause is equal to PI game dot Mouse don't get underscored pause like so and then in here you can just simply put pause now what's gonna happen here is we're now going to create a list it's just gonna have it's gonna have that line going between the ball and our cursor and this way we can decide where we're gonna be shooting it and we can just see it better now that we have the line we need to draw the line so to draw the line we have to go back into our redraw window function we're just gonna do pygame don't draw dot line then inside here we're gonna start with our window our color which I guess we're just gonna be block in this case and then we're gonna do we need the two coordinates so we're gonna do line 0 like that and blind 1 and that should be it for the line and let's try our program again and see what we get and yes now we get a line like this and did I say to make the line black well I made it white so that's okay you guys can make whatever color you want does really matter and you can see it just kind of follows along as I move my mouse so we can determine now what angle are gonna be shooting at and the direction of or the power of that shot so now that we have that done it's time to get into some of the trickier stuff so let's start off here by setting X equal to 0 and y equal to 0 these are going to be the variables that we use to determine where our ball was shot from so once we click the mouse button which has got what we're gonna be using to shoot the ball we're gonna store the position of that bowl in these variables that we can then access them after we're also gonna need a variable called time it's gonna set this equal to 0 we're in a variable called power it's gonna be set to 0 again angle same thing 0 and then shot and this is gonna be equal to false all right we'll do shoot actually so now we need to see when we're gonna be shooting so I said if we press the mouse button you guys can make it space you can make whatever you want we can do if event or event dot mouse button down oops so this just means any mouse button can be middle mouse button left mouse button right mouse button then we're gonna shoot so we're going to shoot is equal to true now there's something here we have to do first you have say if shoot equals equals false this that we're not already shooting because if we do that then it's gonna mess things up if we're already shooting and we try to shoot again hope that makes sense when we shoot here we're now gonna have to set our X Y time power angle and this is where we get into the more complex stuff so this parts easy but just set X equal to golf ball about X and then we're gonna set our y equal to golf ball don't why so we know where we initially shot from and now we have to get our power so we'll actually we'll set time equal to 0 here and now for our power so I mentioned that our power is gonna be the the distance of that line so if I know cell equals 0 for now if I run the program you can see that well we have an issue just because I haven't finished yet but the longer the line gets the more power we're gonna have well even was that issue mouse button down there's apparently no Oh if event dot type people didn't so I went down my bad there guys so make sure you fix that mistake it's just right here so let's run it again make sure that works mouse button down is not defined event type equals equals all right just give me a second to figure this one out ah Pegeen don't menace button down that's what we need it sorry about that all right so ho let's run hit one more time hopefully this one we get it working there we go you can see so we have the line like this we're gonna shoot with a lot less power and if we have the line like this we're gonna shoot with more power clearly so how do we do that now the first thing we need to do is we need to get the length of the line so I'm not sure if any of you guys remember from grade 9 or 10 the length of the line formula if you don't don't worry I'm gonna show it to you right now pretty much it's the square root so we need math dot square root of the change in X plus the change in Y and both of those are squared so I'm going to just start by doing this just to remind myself so we're gonna square something and add it and then we're going to swear something else now this is where our line function comes in handy our line list sorry so in our line right here we have a tuple and then we have another tuple so we need to find this minus this right as a position so let's start by doing that let we're gonna start with Y here so we'll just do line and then we're gonna do 1 1 minus line and then 0 1 like that so the reason we've done this is because our first position is the starting position of our line and where the golf ball is the second position is our mouse so if our mouse is over here then we need to pretty much subtract the the ending position by the starting position to figure out how much we changed in distance it's not really that big of a deal because our ball is only going to be ever shot from a certain Y level but if we had our ball elevated or landed on top of something then this would definitely matter all right so now the next part we need the X so we're just going to line and then in this case 1 0 to access the x line and then 0 0 like that alright so we've got that now that's gonna be our power but the thing is if we if we do this then you're gonna notice we're gonna have power going from like say for example blanco this line is 10 and then up here it's five hundred five hundred power means we're moving out five hundred meters per second which means you won't even be able to see the ball move across the screen because it's gonna move so fast so we're gonna actually just divide all of this by eight so that we get smaller numbers for our power now the next one the angle okay so this is where we get into even more mouths so the last one with ya okay it's somewhat difficult the angle we're gonna have to use a bit of trig so I already have a function I pre wrote here
