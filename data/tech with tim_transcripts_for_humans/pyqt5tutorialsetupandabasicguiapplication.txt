With timestamps:

00:00 - hey guys and welcome to a brand new
00:02 - tutorial series on PI QT 5 in Python now
00:06 - PI QT is a application or a framework
00:09 - sorry for Python that allows you to
00:11 - build GUI applications very quickly now
00:14 - what I'm showing you right here actually
00:16 - is the main kind of interface that
00:18 - you're gonna be able to use its called
00:19 - QT designer to create your graphical
00:22 - user interfaces now let me show you how
00:24 - easy this is compared to some other
00:25 - things that you might have tried to use
00:27 - before so for example say I'm creating a
00:29 - GUI I want to have a label I drag in the
00:31 - label I want to throw a button somewhere
00:33 - we'll find a button there we go maybe we
00:35 - want some checkboxes we want them to be
00:37 - here let's throw them in right I'm just
00:39 - showing you how easy and how quickly you
00:41 - can actually design and create a
00:42 - graphical user interface and you don't
00:44 - have to go back and forth from code and
00:46 - modify the positions and change all of
00:48 - that and this is just something that's
00:50 - super simple and it makes your life way
00:52 - easier especially if you're trying to
00:53 - create some kind of simpler applications
00:55 - and you don't want to spend a lot of
00:56 - time messing with the graphical user
00:58 - interface part of it you just kind of
01:00 - want things to work and you know
01:02 - sometimes it's really nice to be able to
01:03 - just come into a design or drag-and-drop
01:05 - it and see exactly what it looks like
01:07 - without having to keep running the code
01:09 - and all of that so anyways that was just
01:11 - kind of a little bit of a tease on what
01:12 - we're gonna be getting into in this
01:13 - series and we're learning how to use
01:15 - that properly and how that actually
01:16 - works but in today's video we're just
01:19 - gonna be setting up pi QT 5 and creating
01:21 - a very basic application by just writing
01:23 - a little bit of code so what that
01:25 - designer actually does is it generates a
01:27 - bunch of code for us and you pretty much
01:29 - just take that code and use it so you
01:31 - kind of drag and drop stuff it says this
01:33 - is the code that you would need to
01:35 - create that then you can use that code
01:36 - so anyways what we're gonna do now is we
01:39 - need to install and get that tool that
01:40 - QT designer from PI cutie so we're gonna
01:43 - open up a command prompt and we're gonna
01:45 - be using PIP to install this now if for
01:47 - some reason when you type pip in here
01:49 - and you hit enter it doesn't work
01:51 - that means python and pip are not
01:53 - installed in your systems path so to fix
01:56 - this I'm gonna direct you to a video I
01:58 - have in the top right hand corner of my
01:59 - screen it's called how to install Pi
02:01 - game but it shows you how to fix your
02:03 - pip if it's not working so if your pip
02:05 - is working what we're gonna do is type
02:07 - pip install and then PI QT 5 don't
02:11 - install for is that is the one
02:13 - Python 2.7 and we're gonna be using
02:14 - Python 3 next we're gonna do pip install
02:17 - pi QT 5 - tools now this is gonna give
02:22 - us that QT designer and a few other
02:24 - tools we might want to use later on with
02:26 - pie cutie once we're done that we're
02:29 - actually ready to start writing some
02:30 - code and pop up our first main window so
02:33 - let's close that and let's get into some
02:35 - kind of text editor here so I'm just
02:38 - gonna be using sub line text now quickly
02:40 - before I go on something I forgot about
02:42 - PI QT is it is actually cross compatible
02:44 - and cross-platform which means that any
02:47 - code you write here will actually work
02:48 - on Mac it'll work on Linux it'll work on
02:51 - iOS it'll work on Android now I'm
02:54 - probably not gonna be showing you how to
02:55 - package this up for all those different
02:57 - os's but it's nice to know that your
02:59 - code will actually scale and work for
03:01 - any OS that you want it to anyways what
03:05 - we're gonna do now is just type a few
03:06 - import statements here so we're actually
03:08 - gonna start with from PI QT 5 make sure
03:12 - to capitalize that P in the queue we're
03:14 - going to import and to start QT widgets
03:19 - like that now next we're gonna say from
03:23 - PI QT 5 dots QT widgets like that we're
03:29 - going to import Q application Q main
03:35 - window and finally we're going to import
03:39 - q actually I think that's actually all
03:42 - we need for that one yep and the last
03:44 - import statement is sys so that's all we
03:47 - need to import for right now later on
03:48 - we'll probably be importing some more
03:49 - things up here from PI cutie but to
03:51 - create a basic application that's all we
03:53 - need so when we're working with PI Q T
03:55 - the first thing we need to do when we're
03:58 - creating an app or creating a GUI or
03:59 - whatever it is is define an application
04:02 - so what we're gonna do is create a
04:03 - function that's gonna do this for us and
04:05 - we'll just run that function at the end
04:06 - of our code so I'm gonna call this
04:08 - function window and inside of here what
04:10 - I'm going to do is just say app and
04:12 - that's gonna be equal to Q application
04:15 - now this is where we always have to
04:17 - start off some kind of application and
04:19 - what we need to do is we need to pass
04:21 - sys dot RB inside of here now I believe
04:26 - what the
04:26 - is doing and I could be incorrect is
04:28 - just giving some kind of config setup
04:30 - for a cue application so it knows what
04:33 - OS it's running on kind of how to
04:34 - display the window because based on what
04:36 - OS you're running it's gonna be some
04:38 - difference that's right so that's kind
04:40 - of what this is doing just getting our
04:41 - application set up you don't have to
04:42 - worry about it too much the next thing
04:44 - we need to do is create some kind of
04:45 - window or some kind of widget that we're
04:47 - actually gonna show in our application
04:50 - so in my case I'm gonna use Q main
04:52 - window but you may see some people in
04:54 - tutorials using q widget it's kind of
04:57 - similar but we're just gonna use Q main
04:58 - window so what I'm gonna do here so when
05:00 - equals in this case Q main window like
05:04 - that alright so the next thing we're
05:06 - gonna do is actually set the size and
05:08 - title of our window so if we want to set
05:11 - the size of our window and actually the
05:12 - position of it on the screen what we
05:14 - need to do is call a method called set
05:17 - geometry it's gonna say geo geometry I
05:22 - think I spelled that correctly and then
05:24 - inside of here what we're gonna do is
05:26 - give four arguments the first one is
05:28 - gonna be the exposition the next one is
05:30 - gonna be the Y position and the last two
05:32 - are going to be the width and B height
05:35 - now the exposition actually stands for
05:38 - where on your screen you want to show up
05:41 - so if I put this to zero and I put my Y
05:44 - position to zero what's actually gonna
05:46 - happen is our window is gonna show up in
05:48 - the top left-hand corner of your screen
05:50 - now if you set this to let's say 1920 by
05:54 - 1080 it's gonna show up in the bottom
05:57 - right hand corner of your screen and you
05:59 - actually won't be able to see it now let
06:01 - me just quickly illustrate how this
06:03 - actually works so that any of you that
06:04 - don't understand this coordinate system
06:06 - kind of can get this pretty quickly so
06:08 - this right here is actually in computers
06:11 - typically when we're doing graphics is
06:13 - actually 0 0 now excuse me cuz I'm
06:15 - drawing with my mouse so this is kind of
06:16 - difficult to do so what happens is when
06:19 - we say something like 100 100 we're
06:21 - gonna go 100 pixels this way and then
06:24 - we're gonna go 100 pixels down now since
06:27 - we're starting with the top left hand
06:29 - corner what that means is this window
06:31 - will now be moved
06:33 - oops I don't know how that happened so
06:36 - it looks more something like
06:38 - so we're gonna move the top left-hand
06:39 - corner of the window to be at position
06:41 - 100 100 and that's gonna go for all of
06:44 - our widgets as well let's say we place a
06:46 - widget inside of our window it may be
06:48 - like 50/50 well the top left-hand corner
06:51 - of that widget will be at 50/50 which is
06:53 - something that's important you're gonna
06:54 - have to account for when we're kind of
06:56 - moving and placing things so hopefully
06:58 - that makes a bit of sense so anyways I'm
07:00 - just gonna set mine arbitrarily to be
07:01 - like 200 200 and then for a width and a
07:04 - height let's go with 300 300 awesome so
07:09 - now that we've done that we're gonna set
07:11 - a window title this is what's gonna show
07:13 - up on the top little bar you can see
07:15 - like up here this is what the window
07:16 - title is kind of from my sub line text
07:18 - similar thing here for the pie cutie
07:20 - sure I say Wynn dot set a window title
07:25 - like that and then he renamed whatever
07:27 - you want so in this case I'm just gonna
07:28 - say like tech with Tim which is the name
07:33 - of my channel and now what I'm gonna do
07:36 - is actually put some stuff inside of our
07:39 - window now before I do that I want to
07:41 - show you what this looks like so you can
07:42 - get an idea and then we'll start adding
07:43 - some things so to actually show our
07:46 - window we need to call window dot show
07:48 - and after that we need to write this one
07:51 - line that looks a little bit confusing
07:53 - but essentially what it's gonna do is
07:54 - make sure that our window shows up
07:57 - nicely and we'll exit when we click the
07:59 - X button you don't have to read too far
08:00 - into it but it just means that we get
08:02 - what's known as a clean exit so I'm
08:04 - gonna do sys dot exit app dot exe
08:07 - underscore like that now again this just
08:10 - means we're waiting for this cue
08:12 - application to exit and when that
08:14 - happens then we're gonna exit and close
08:16 - the application so let's run this
08:18 - program now oops
08:20 - I gotta actually call this function if
08:22 - we want anything to show up so let's do
08:23 - that at the bottom of our program and
08:25 - you can see we get tech with Tim we get
08:27 - a window that let me run again that
08:29 - initially showed up at what I say 200
08:31 - 200 with height and width 3 out of 300
08:34 - now if I change this again to be like a
08:35 - thousand you can see that now the window
08:37 - is showing up further so it's actually
08:39 - useful and you can pick kind of where
08:40 - you want it to show up so anyways this
08:42 - is kind of boring we need to add some
08:44 - stuff into our window and
08:45 - look at it so what I'm gonna do is
08:47 - actually just create a label and throw
08:48 - that label on our window and then we're
08:50 - gonna end the tutorial there so if I
08:52 - want to create a label what I'm gonna do
08:54 - is say label equals in this case QT
08:57 - widgets dot Q label I hope you guys are
09:01 - noticing that everything kind of starts
09:02 - with Q here and inside of this we're
09:05 - actually gonna do is say where we want
09:07 - this label to be a little bit confusing
09:09 - because sometimes people want to put
09:11 - what's on the label but what we're gonna
09:13 - do is set window because that's where
09:14 - it's gonna be showing up next we're
09:17 - gonna say label dot set text and this is
09:20 - where we can change what it actually
09:21 - says so in this case we'll just say my
09:23 - first label like that okay so now that
09:27 - we've done that we can move the label if
09:30 - we'd like to do that so to move it we
09:32 - can do label dot move and with move this
09:35 - will just take an XY position and it'll
09:38 - move it there so let's say we want to do
09:39 - 50/50
09:40 - remember that's from the top left hand
09:42 - corner so down 50 to the right 50 and
09:45 - that's where the top left-hand corner of
09:47 - our widget will be so let's run this and
09:48 - see what we get and we get my first
09:50 - label positioned at 50/50 again you see
09:52 - it's at top left hand corner and that's
09:55 - inside of our main QT window so anyways
09:58 - that has been the basics of setting up
10:00 - PI QT getting a very basic window going
10:03 - here I just showed you the label widget
10:04 - in the next videos we'll go in more
10:07 - depth we'll do a few other different
10:08 - things with this and then very shortly
10:10 - we'll get into the actual QT designer
10:12 - talk about how that works and how to use
10:15 - the code that it generates in our actual
10:17 - application here we're gonna start kind
10:19 - of basic and just build our way up and
10:21 - if you guys have any recommendations of
10:23 - stuff you'd like to see definitely leave
10:24 - it in the comments down below with that
10:26 - being said I will see you guys in the
10:27 - next video

Cleaned transcript:

hey guys and welcome to a brand new tutorial series on PI QT 5 in Python now PI QT is a application or a framework sorry for Python that allows you to build GUI applications very quickly now what I'm showing you right here actually is the main kind of interface that you're gonna be able to use its called QT designer to create your graphical user interfaces now let me show you how easy this is compared to some other things that you might have tried to use before so for example say I'm creating a GUI I want to have a label I drag in the label I want to throw a button somewhere we'll find a button there we go maybe we want some checkboxes we want them to be here let's throw them in right I'm just showing you how easy and how quickly you can actually design and create a graphical user interface and you don't have to go back and forth from code and modify the positions and change all of that and this is just something that's super simple and it makes your life way easier especially if you're trying to create some kind of simpler applications and you don't want to spend a lot of time messing with the graphical user interface part of it you just kind of want things to work and you know sometimes it's really nice to be able to just come into a design or draganddrop it and see exactly what it looks like without having to keep running the code and all of that so anyways that was just kind of a little bit of a tease on what we're gonna be getting into in this series and we're learning how to use that properly and how that actually works but in today's video we're just gonna be setting up pi QT 5 and creating a very basic application by just writing a little bit of code so what that designer actually does is it generates a bunch of code for us and you pretty much just take that code and use it so you kind of drag and drop stuff it says this is the code that you would need to create that then you can use that code so anyways what we're gonna do now is we need to install and get that tool that QT designer from PI cutie so we're gonna open up a command prompt and we're gonna be using PIP to install this now if for some reason when you type pip in here and you hit enter it doesn't work that means python and pip are not installed in your systems path so to fix this I'm gonna direct you to a video I have in the top right hand corner of my screen it's called how to install Pi game but it shows you how to fix your pip if it's not working so if your pip is working what we're gonna do is type pip install and then PI QT 5 don't install for is that is the one Python 2.7 and we're gonna be using Python 3 next we're gonna do pip install pi QT 5 tools now this is gonna give us that QT designer and a few other tools we might want to use later on with pie cutie once we're done that we're actually ready to start writing some code and pop up our first main window so let's close that and let's get into some kind of text editor here so I'm just gonna be using sub line text now quickly before I go on something I forgot about PI QT is it is actually cross compatible and crossplatform which means that any code you write here will actually work on Mac it'll work on Linux it'll work on iOS it'll work on Android now I'm probably not gonna be showing you how to package this up for all those different os's but it's nice to know that your code will actually scale and work for any OS that you want it to anyways what we're gonna do now is just type a few import statements here so we're actually gonna start with from PI QT 5 make sure to capitalize that P in the queue we're going to import and to start QT widgets like that now next we're gonna say from PI QT 5 dots QT widgets like that we're going to import Q application Q main window and finally we're going to import q actually I think that's actually all we need for that one yep and the last import statement is sys so that's all we need to import for right now later on we'll probably be importing some more things up here from PI cutie but to create a basic application that's all we need so when we're working with PI Q T the first thing we need to do when we're creating an app or creating a GUI or whatever it is is define an application so what we're gonna do is create a function that's gonna do this for us and we'll just run that function at the end of our code so I'm gonna call this function window and inside of here what I'm going to do is just say app and that's gonna be equal to Q application now this is where we always have to start off some kind of application and what we need to do is we need to pass sys dot RB inside of here now I believe what the is doing and I could be incorrect is just giving some kind of config setup for a cue application so it knows what OS it's running on kind of how to display the window because based on what OS you're running it's gonna be some difference that's right so that's kind of what this is doing just getting our application set up you don't have to worry about it too much the next thing we need to do is create some kind of window or some kind of widget that we're actually gonna show in our application so in my case I'm gonna use Q main window but you may see some people in tutorials using q widget it's kind of similar but we're just gonna use Q main window so what I'm gonna do here so when equals in this case Q main window like that alright so the next thing we're gonna do is actually set the size and title of our window so if we want to set the size of our window and actually the position of it on the screen what we need to do is call a method called set geometry it's gonna say geo geometry I think I spelled that correctly and then inside of here what we're gonna do is give four arguments the first one is gonna be the exposition the next one is gonna be the Y position and the last two are going to be the width and B height now the exposition actually stands for where on your screen you want to show up so if I put this to zero and I put my Y position to zero what's actually gonna happen is our window is gonna show up in the top lefthand corner of your screen now if you set this to let's say 1920 by 1080 it's gonna show up in the bottom right hand corner of your screen and you actually won't be able to see it now let me just quickly illustrate how this actually works so that any of you that don't understand this coordinate system kind of can get this pretty quickly so this right here is actually in computers typically when we're doing graphics is actually 0 0 now excuse me cuz I'm drawing with my mouse so this is kind of difficult to do so what happens is when we say something like 100 100 we're gonna go 100 pixels this way and then we're gonna go 100 pixels down now since we're starting with the top left hand corner what that means is this window will now be moved oops I don't know how that happened so it looks more something like so we're gonna move the top lefthand corner of the window to be at position 100 100 and that's gonna go for all of our widgets as well let's say we place a widget inside of our window it may be like 50/50 well the top lefthand corner of that widget will be at 50/50 which is something that's important you're gonna have to account for when we're kind of moving and placing things so hopefully that makes a bit of sense so anyways I'm just gonna set mine arbitrarily to be like 200 200 and then for a width and a height let's go with 300 300 awesome so now that we've done that we're gonna set a window title this is what's gonna show up on the top little bar you can see like up here this is what the window title is kind of from my sub line text similar thing here for the pie cutie sure I say Wynn dot set a window title like that and then he renamed whatever you want so in this case I'm just gonna say like tech with Tim which is the name of my channel and now what I'm gonna do is actually put some stuff inside of our window now before I do that I want to show you what this looks like so you can get an idea and then we'll start adding some things so to actually show our window we need to call window dot show and after that we need to write this one line that looks a little bit confusing but essentially what it's gonna do is make sure that our window shows up nicely and we'll exit when we click the X button you don't have to read too far into it but it just means that we get what's known as a clean exit so I'm gonna do sys dot exit app dot exe underscore like that now again this just means we're waiting for this cue application to exit and when that happens then we're gonna exit and close the application so let's run this program now oops I gotta actually call this function if we want anything to show up so let's do that at the bottom of our program and you can see we get tech with Tim we get a window that let me run again that initially showed up at what I say 200 200 with height and width 3 out of 300 now if I change this again to be like a thousand you can see that now the window is showing up further so it's actually useful and you can pick kind of where you want it to show up so anyways this is kind of boring we need to add some stuff into our window and look at it so what I'm gonna do is actually just create a label and throw that label on our window and then we're gonna end the tutorial there so if I want to create a label what I'm gonna do is say label equals in this case QT widgets dot Q label I hope you guys are noticing that everything kind of starts with Q here and inside of this we're actually gonna do is say where we want this label to be a little bit confusing because sometimes people want to put what's on the label but what we're gonna do is set window because that's where it's gonna be showing up next we're gonna say label dot set text and this is where we can change what it actually says so in this case we'll just say my first label like that okay so now that we've done that we can move the label if we'd like to do that so to move it we can do label dot move and with move this will just take an XY position and it'll move it there so let's say we want to do 50/50 remember that's from the top left hand corner so down 50 to the right 50 and that's where the top lefthand corner of our widget will be so let's run this and see what we get and we get my first label positioned at 50/50 again you see it's at top left hand corner and that's inside of our main QT window so anyways that has been the basics of setting up PI QT getting a very basic window going here I just showed you the label widget in the next videos we'll go in more depth we'll do a few other different things with this and then very shortly we'll get into the actual QT designer talk about how that works and how to use the code that it generates in our actual application here we're gonna start kind of basic and just build our way up and if you guys have any recommendations of stuff you'd like to see definitely leave it in the comments down below with that being said I will see you guys in the next video
