With timestamps:

00:00 - I've been coding for nearly 10 years and
00:03 - let me tell you that I've made tons of
00:04 - mistakes and wasted countless hours
00:06 - working on the wrong skills please don't
00:10 - make the same mistakes as me
00:13 - back 10 years ago when I started coding
00:15 - I spent nearly two years learning HTML
00:18 - CSS and JavaScript just to find out that
00:21 - I hated web development and didn't want
00:23 - to continue doing that next I learned
00:26 - PHP Yes you heard that right for some
00:28 - reason I learned PHP then I decided to
00:31 - learn C sharp because some random person
00:33 - that I met said that that was the best
00:34 - programming language to learn the point
00:37 - is that I didn't have a plan I didn't
00:39 - have a goal and I had no idea what I was
00:41 - doing why I was learning what I was
00:43 - learning and this led to literally years
00:45 - of my life being spent doing something
00:47 - that was pretty useless to me that was
00:49 - not something that I wanted to pursue
00:51 - the point is that I didn't have a goal
00:53 - in mind for what I wanted to do and I
00:54 - definitely didn't have a plan I was
00:56 - pretty much just a lone kid sitting in
00:58 - my room aimlessly watching YouTube
01:00 - tutorials having no idea what I was
01:03 - going to do with what I learned what I
01:04 - wish I knew back then was that I should
01:06 - have spent some more time defining my
01:08 - programming goals coming up with some
01:10 - kind of plan and having a direction and
01:12 - vision for where I wanted to go with
01:14 - this programming Journey the key
01:16 - takeaway for me is that I should have
01:17 - spent a bit of time messing around in
01:19 - some different languages looking really
01:21 - to see what was out there and
01:23 - determining what I liked before I just
01:25 - put my head down and started learning a
01:27 - bunch of skills that now today I really
01:29 - don't use and that in hindsight was a
01:31 - fairly large waste of time now to
01:33 - continue my story after a few years of
01:35 - pretty slow progress and learning I
01:37 - finally found a language and Niche that
01:39 - actually interested me now this was
01:41 - building games in Python at this point I
01:43 - was still a very amateur programmer but
01:45 - I had the basics of a few languages
01:47 - under my belt and I was finally creating
01:49 - some actually interesting projects and
01:51 - things that I enjoyed working on now
01:53 - every time I built a new game in Python
01:55 - my code got slowly better and better and
01:57 - I eventually started creating some
01:59 - really cool projects and building some
02:00 - confidence in programming the issue here
02:03 - was I was doing pretty much all of this
02:04 - on my own I had no Mentor I had no
02:07 - support network I didn't really have
02:08 - anyone to talk about programming with
02:10 - and I definitely didn't have anyone to
02:12 - give me any advice tips or guidance for
02:14 - what I should do next now really what
02:16 - this meant is that I just kept making
02:18 - games in Python for about two years I
02:21 - kind of got stagnant in my journey and
02:23 - my learning and I didn't really learn
02:24 - anything new I just got really good at
02:26 - Python and making games and in hindsight
02:28 - that was a bit of a mistake now what I
02:30 - wish I had done back then is gone out of
02:32 - my way to find some kind of community
02:33 - group of friends or mentor and start
02:36 - taking Making Connections in the
02:37 - programming space more seriously I think
02:40 - if I had done this I would have rapidly
02:41 - increased the speed at which I learned
02:43 - different programming languages I was
02:45 - kind of aware of different things in the
02:47 - industry not to mention if I had people
02:49 - to ask for advice tips or help I think
02:51 - that just really would have propelled me
02:53 - forward and allowed me to get past just
02:55 - making games in Python a lot faster now
02:58 - fortunately for you if you're watching
03:00 - this video you don't need to make the
03:01 - same mistake as me I'd encourage you to
03:03 - go out there find some kind of community
03:05 - for example you could join my Discord
03:07 - server or you could check out the
03:09 - sponsor of this video formation is the
03:11 - sponsor of today's video and is here
03:13 - here to help you find a programming
03:15 - mentor and land a software engineering
03:17 - job formation has a top tier team of
03:19 - Engineers from meta and Nextdoor who
03:22 - have interviewed thousands of candidates
03:23 - and trained hundreds of interviewers
03:25 - during their tenure this Insight is what
03:27 - allows formation to create better and
03:30 - more effective ways to prepare you for
03:32 - working at Fang level companies
03:33 - formation helps Engineers gain
03:35 - confidence build a foundation for
03:37 - Success prepare for interviews and much
03:40 - more fellows at formation receive
03:42 - mentorship one-on-one support unlimited
03:45 - mock interviews and unlimited assistance
03:48 - until they have an offer letter in hand
03:50 - on average fellows that completed the
03:52 - program last year saw an increase in
03:54 - compensation of over 96 000 US Dollars
03:58 - now the best part of all of this is that
03:59 - you can apply for the program for free
04:01 - by clicking the link in the description
04:03 - and whether or not you're accepted
04:05 - you're still going to gain invaluable
04:07 - career advice and insight through their
04:09 - assessment and free interview tip guide
04:11 - which is a great resource for for
04:13 - helping you land your dream job at a
04:15 - Fang company don't forget to apply for
04:17 - free from the link in the description to
04:19 - become a fellow app formation and land
04:22 - your dream software engineering job
04:24 - thanks again to formation for sponsoring
04:26 - this video now after spending most of my
04:29 - high school career looking at Python and
04:31 - making games in Python I went off to
04:33 - University where I studied computer
04:35 - science now in University I took all
04:37 - kinds of courses obviously math courses
04:39 - computer architecture data structures
04:41 - and algorithms but I also took a few
04:43 - programming courses where I learned
04:45 - python Java go ocamel SQL if you
04:49 - consider that a programming language and
04:51 - a bunch of other programming languages
04:52 - as well now during this time I was
04:54 - essentially forced to learn all kinds of
04:56 - different programming languages and to
04:58 - constantly adapt to different
04:59 - Technologies Frameworks or whatever it
05:01 - was we were learning in class now even
05:04 - though I wouldn't say this was the most
05:05 - enjoyable time in my life this is really
05:07 - where I built the strong programming
05:09 - Foundation that I have today and built
05:11 - the confidence to feel like I could
05:12 - write code in any language any framework
05:15 - and really learn anything that I needed
05:17 - to so really I wish that I had done this
05:19 - earlier in my journey that I had stepped
05:21 - outside of my comfort zone looked at
05:23 - different languages Technologies and
05:25 - Frameworks and just played with a bunch
05:27 - of stuff to build that confidence and
05:29 - learn a bunch of new things really when
05:31 - you stick with what you're comfortable
05:33 - with you're not learning as much as if
05:34 - you dive into a project that you never
05:36 - thought you could complete before so I
05:38 - would encourage any of you to step
05:40 - outside your comfort zone pick some kind
05:42 - of project that you never imagined you'd
05:43 - be able to create and then go out there
05:45 - and build it you might not complete it
05:47 - it might seem daunting but I promise you
05:49 - that working on something that seems
05:51 - really challenging or difficult really
05:53 - is the best way to get better and that's
05:54 - what I wish I had started doing earlier
05:56 - in my career now any of you that have
05:58 - been here for a while will remember that
06:00 - I started taking this YouTube channel
06:01 - seriously as I was in university now
06:03 - what I did was post hundreds of videos
06:05 - on different programming languages
06:07 - topics modules Frameworks whatever you
06:09 - could imagine and this is really what
06:11 - leveled me up to the next step in my my
06:13 - programming Journey where I was having
06:15 - to learn all of these new different
06:16 - topics and not only learn them but be
06:19 - able to explain them to people on
06:20 - YouTube so as I continued to post
06:22 - YouTube videos I realized quite quickly
06:24 - that although raw programming skill was
06:26 - pretty important so was the ability to
06:29 - communicate to explain to break down a
06:31 - topic clearly and to make someone
06:33 - understand it and this was a skill that
06:35 - I started developing that I realized
06:37 - many other people especially in
06:38 - University or in computer science
06:40 - weren't even really considering and
06:42 - definitely weren't taking too seriously
06:43 - so as I started to develop and improve
06:46 - my communication skills I saw the
06:48 - benefits of this immediately where all
06:49 - of a sudden I started standing out in
06:51 - lectures groups Etc and even though I
06:54 - wasn't necessarily the best programmer
06:56 - if I could be one of the best speakers a
06:58 - lot of people gave me more attention or
07:00 - just assumed that I was good at
07:02 - programming now this skill is what
07:03 - eventually led me to actually land a job
07:05 - at Microsoft and to get offers from
07:07 - companies like Shopify while I was
07:09 - applying for internships when I was only
07:11 - 19 years old now I don't say any of this
07:13 - to brag but just to drive the point home
07:15 - that I really wish I had focused more on
07:17 - communication skills earlier in my
07:19 - career earlier in my journey because a
07:21 - lot of the opportunities I have today
07:23 - came up because of my ability to
07:25 - communicate I'd even go as far as to say
07:27 - that communication skills have carried
07:29 - me much further than my programming
07:31 - ability and even though I've never been
07:33 - the best programmer in the room I could
07:35 - make up for it by being charismatic easy
07:37 - to understand and talk to and able to
07:40 - kind of break down my thoughts and
07:42 - articulate my thought process which is
07:44 - something that I see a lot of
07:45 - programmers really struggle with so
07:47 - hopefully you take this point to heart
07:48 - and you too start working on your
07:50 - communication skills as well as your
07:52 - programming skills so my next point to
07:53 - share with you has to do with my
07:55 - experience working at Microsoft back in
07:57 - 2020 as a software Edge during intern as
08:00 - I joined this role I was very quickly
08:02 - thrown into the world of software
08:03 - engineering I had my first experience
08:05 - actually working in a team environment
08:08 - now this meant I very quickly had to
08:09 - learn git testing and other tools and
08:12 - kind of pursue seizures in the software
08:14 - development life cycle now as I
08:16 - completed my three months at Microsoft I
08:18 - did learn a lot of technical skills I
08:20 - got some great experience and met some
08:21 - great people and I had a fantastic
08:23 - Mentor who was one of the top software
08:25 - Engineers on our team and really in our
08:27 - organization who shared a lot of great
08:29 - information with me and kind of inspired
08:31 - me to level up and see what was possible
08:34 - if I continued with programming now at
08:36 - the same time that there was some really
08:37 - great software Engineers who were just
08:39 - really really talented and kind of
08:41 - motivational to me there was a lot of
08:43 - people that was working at Microsoft
08:44 - that didn't strike me as the best
08:46 - Engineers that in fact didn't really do
08:48 - very much and kind of just played the
08:51 - corporate culture game and that's what
08:53 - this point is about when I worked at
08:54 - Microsoft I got exposed to this kind of
08:56 - large company corporate culture at like
08:58 - a Fang you know tech company and I
09:01 - realized that quite a few people that
09:02 - were working there didn't really do that
09:04 - much they did the bare minimum to get by
09:07 - they weren't the best software engineers
09:09 - in the world and they simply were good
09:10 - enough to pass their interviews they had
09:12 - kind of the community education skills
09:13 - to get by and really to fake it until
09:16 - they made it so the point here is that a
09:19 - lot of people that are working at these
09:20 - companies are not as good as you might
09:21 - think they are they're not these Idols
09:23 - or amazing software Engineers that you
09:25 - might imagine and they're definitely not
09:27 - any better than you might be and that's
09:29 - kind of one thing that I realized when I
09:31 - stepped in that I didn't need to have
09:32 - this imposter syndrome that I wasn't
09:34 - necessarily going to be worse than other
09:36 - people there and that most people in
09:38 - Tech and most people in life in general
09:39 - don't really know what they're doing
09:41 - they just kind of have that confidence
09:43 - and arrogance that makes people believe
09:45 - that they do so the key takeaway I took
09:47 - from this experience is that people are
09:49 - not necessarily as good as you might
09:51 - make them out to be they're not these
09:52 - Pro level software Engineers that just
09:54 - know absolutely everything a lot of them
09:57 - are figuring it out day by day just like
09:59 - you are and that's a reason why you
10:01 - shouldn't feel like you can never be on
10:03 - their level I know a lot of you watch
10:04 - this Channel and maybe even compare
10:06 - yourself to someone like me and you say
10:08 - oh I'm never going to be there or I'm
10:09 - not as good as you the reality is a lot
10:11 - of times people are kind of so
10:12 - self-imposing their own restrictions
10:14 - they're defining what they're capable of
10:17 - and I think if you set your bar a little
10:19 - bit higher look a little bit further and
10:21 - just realize that not everyone's kind of
10:23 - as amazing as you might make them out to
10:24 - be that you're going to get a lot
10:26 - further so hopefully you get the message
10:27 - that I'm trying to send here which is
10:29 - that most people really are not experts
10:32 - they're not complete professionals they
10:33 - don't know exactly what they're doing
10:35 - they're figuring it out day by day and
10:37 - they've simply had the confidence to say
10:38 - you know what I don't know what this is
10:39 - but I'm gonna go in there and I'm gonna
10:41 - figure it out and I think you should
10:42 - have that as well I know it's difficult
10:44 - to get over imposter syndrome but trust
10:46 - me people are not as great or as much
10:49 - better as you as you might think and you
10:51 - can definitely reach their level if you
10:52 - put in the effort and the work so to end
10:54 - this video the last thing I'll say is
10:56 - that there's no one way to become a
10:58 - software engineer or a developer
11:00 - everyone's journey is different some
11:02 - people do it in a few months some people
11:04 - it takes years and you saw in this video
11:06 - that I had a very unconventional Journey
11:08 - where I started learning how to code
11:09 - when I was quite young and I spent
11:11 - almost five years kind of just doing
11:12 - random coding stuff with no real
11:14 - direction or vision and still I ended up
11:17 - where I am today so please don't worry
11:19 - if you feel like you're behind people or
11:21 - you're not at the same level as someone
11:22 - else everyone goes at a different pace
11:24 - and as long as you keep going you will
11:26 - eventually get to where you want to go
11:28 - so I'd love to hear from you was this
11:30 - video helpful do you have any tips or
11:31 - things that you wish you knew before you
11:33 - started learning how to code if that's
11:34 - the case please leave them in the
11:36 - comments down below and if you're
11:37 - looking for programming mentors then
11:39 - again make sure to check out the sponsor
11:41 - of this video don't forget to apply for
11:43 - free from the link in the description to
11:46 - become a fellow app formation and land
11:48 - your dream software engineering job
11:50 - thanks again to formation for sponsoring
11:52 - this video
11:54 - [Music]
12:00 - thank you

Cleaned transcript:

I've been coding for nearly 10 years and let me tell you that I've made tons of mistakes and wasted countless hours working on the wrong skills please don't make the same mistakes as me back 10 years ago when I started coding I spent nearly two years learning HTML CSS and JavaScript just to find out that I hated web development and didn't want to continue doing that next I learned PHP Yes you heard that right for some reason I learned PHP then I decided to learn C sharp because some random person that I met said that that was the best programming language to learn the point is that I didn't have a plan I didn't have a goal and I had no idea what I was doing why I was learning what I was learning and this led to literally years of my life being spent doing something that was pretty useless to me that was not something that I wanted to pursue the point is that I didn't have a goal in mind for what I wanted to do and I definitely didn't have a plan I was pretty much just a lone kid sitting in my room aimlessly watching YouTube tutorials having no idea what I was going to do with what I learned what I wish I knew back then was that I should have spent some more time defining my programming goals coming up with some kind of plan and having a direction and vision for where I wanted to go with this programming Journey the key takeaway for me is that I should have spent a bit of time messing around in some different languages looking really to see what was out there and determining what I liked before I just put my head down and started learning a bunch of skills that now today I really don't use and that in hindsight was a fairly large waste of time now to continue my story after a few years of pretty slow progress and learning I finally found a language and Niche that actually interested me now this was building games in Python at this point I was still a very amateur programmer but I had the basics of a few languages under my belt and I was finally creating some actually interesting projects and things that I enjoyed working on now every time I built a new game in Python my code got slowly better and better and I eventually started creating some really cool projects and building some confidence in programming the issue here was I was doing pretty much all of this on my own I had no Mentor I had no support network I didn't really have anyone to talk about programming with and I definitely didn't have anyone to give me any advice tips or guidance for what I should do next now really what this meant is that I just kept making games in Python for about two years I kind of got stagnant in my journey and my learning and I didn't really learn anything new I just got really good at Python and making games and in hindsight that was a bit of a mistake now what I wish I had done back then is gone out of my way to find some kind of community group of friends or mentor and start taking Making Connections in the programming space more seriously I think if I had done this I would have rapidly increased the speed at which I learned different programming languages I was kind of aware of different things in the industry not to mention if I had people to ask for advice tips or help I think that just really would have propelled me forward and allowed me to get past just making games in Python a lot faster now fortunately for you if you're watching this video you don't need to make the same mistake as me I'd encourage you to go out there find some kind of community for example you could join my Discord server or you could check out the sponsor of this video formation is the sponsor of today's video and is here here to help you find a programming mentor and land a software engineering job formation has a top tier team of Engineers from meta and Nextdoor who have interviewed thousands of candidates and trained hundreds of interviewers during their tenure this Insight is what allows formation to create better and more effective ways to prepare you for working at Fang level companies formation helps Engineers gain confidence build a foundation for Success prepare for interviews and much more fellows at formation receive mentorship oneonone support unlimited mock interviews and unlimited assistance until they have an offer letter in hand on average fellows that completed the program last year saw an increase in compensation of over 96 000 US Dollars now the best part of all of this is that you can apply for the program for free by clicking the link in the description and whether or not you're accepted you're still going to gain invaluable career advice and insight through their assessment and free interview tip guide which is a great resource for for helping you land your dream job at a Fang company don't forget to apply for free from the link in the description to become a fellow app formation and land your dream software engineering job thanks again to formation for sponsoring this video now after spending most of my high school career looking at Python and making games in Python I went off to University where I studied computer science now in University I took all kinds of courses obviously math courses computer architecture data structures and algorithms but I also took a few programming courses where I learned python Java go ocamel SQL if you consider that a programming language and a bunch of other programming languages as well now during this time I was essentially forced to learn all kinds of different programming languages and to constantly adapt to different Technologies Frameworks or whatever it was we were learning in class now even though I wouldn't say this was the most enjoyable time in my life this is really where I built the strong programming Foundation that I have today and built the confidence to feel like I could write code in any language any framework and really learn anything that I needed to so really I wish that I had done this earlier in my journey that I had stepped outside of my comfort zone looked at different languages Technologies and Frameworks and just played with a bunch of stuff to build that confidence and learn a bunch of new things really when you stick with what you're comfortable with you're not learning as much as if you dive into a project that you never thought you could complete before so I would encourage any of you to step outside your comfort zone pick some kind of project that you never imagined you'd be able to create and then go out there and build it you might not complete it it might seem daunting but I promise you that working on something that seems really challenging or difficult really is the best way to get better and that's what I wish I had started doing earlier in my career now any of you that have been here for a while will remember that I started taking this YouTube channel seriously as I was in university now what I did was post hundreds of videos on different programming languages topics modules Frameworks whatever you could imagine and this is really what leveled me up to the next step in my my programming Journey where I was having to learn all of these new different topics and not only learn them but be able to explain them to people on YouTube so as I continued to post YouTube videos I realized quite quickly that although raw programming skill was pretty important so was the ability to communicate to explain to break down a topic clearly and to make someone understand it and this was a skill that I started developing that I realized many other people especially in University or in computer science weren't even really considering and definitely weren't taking too seriously so as I started to develop and improve my communication skills I saw the benefits of this immediately where all of a sudden I started standing out in lectures groups Etc and even though I wasn't necessarily the best programmer if I could be one of the best speakers a lot of people gave me more attention or just assumed that I was good at programming now this skill is what eventually led me to actually land a job at Microsoft and to get offers from companies like Shopify while I was applying for internships when I was only 19 years old now I don't say any of this to brag but just to drive the point home that I really wish I had focused more on communication skills earlier in my career earlier in my journey because a lot of the opportunities I have today came up because of my ability to communicate I'd even go as far as to say that communication skills have carried me much further than my programming ability and even though I've never been the best programmer in the room I could make up for it by being charismatic easy to understand and talk to and able to kind of break down my thoughts and articulate my thought process which is something that I see a lot of programmers really struggle with so hopefully you take this point to heart and you too start working on your communication skills as well as your programming skills so my next point to share with you has to do with my experience working at Microsoft back in 2020 as a software Edge during intern as I joined this role I was very quickly thrown into the world of software engineering I had my first experience actually working in a team environment now this meant I very quickly had to learn git testing and other tools and kind of pursue seizures in the software development life cycle now as I completed my three months at Microsoft I did learn a lot of technical skills I got some great experience and met some great people and I had a fantastic Mentor who was one of the top software Engineers on our team and really in our organization who shared a lot of great information with me and kind of inspired me to level up and see what was possible if I continued with programming now at the same time that there was some really great software Engineers who were just really really talented and kind of motivational to me there was a lot of people that was working at Microsoft that didn't strike me as the best Engineers that in fact didn't really do very much and kind of just played the corporate culture game and that's what this point is about when I worked at Microsoft I got exposed to this kind of large company corporate culture at like a Fang you know tech company and I realized that quite a few people that were working there didn't really do that much they did the bare minimum to get by they weren't the best software engineers in the world and they simply were good enough to pass their interviews they had kind of the community education skills to get by and really to fake it until they made it so the point here is that a lot of people that are working at these companies are not as good as you might think they are they're not these Idols or amazing software Engineers that you might imagine and they're definitely not any better than you might be and that's kind of one thing that I realized when I stepped in that I didn't need to have this imposter syndrome that I wasn't necessarily going to be worse than other people there and that most people in Tech and most people in life in general don't really know what they're doing they just kind of have that confidence and arrogance that makes people believe that they do so the key takeaway I took from this experience is that people are not necessarily as good as you might make them out to be they're not these Pro level software Engineers that just know absolutely everything a lot of them are figuring it out day by day just like you are and that's a reason why you shouldn't feel like you can never be on their level I know a lot of you watch this Channel and maybe even compare yourself to someone like me and you say oh I'm never going to be there or I'm not as good as you the reality is a lot of times people are kind of so selfimposing their own restrictions they're defining what they're capable of and I think if you set your bar a little bit higher look a little bit further and just realize that not everyone's kind of as amazing as you might make them out to be that you're going to get a lot further so hopefully you get the message that I'm trying to send here which is that most people really are not experts they're not complete professionals they don't know exactly what they're doing they're figuring it out day by day and they've simply had the confidence to say you know what I don't know what this is but I'm gonna go in there and I'm gonna figure it out and I think you should have that as well I know it's difficult to get over imposter syndrome but trust me people are not as great or as much better as you as you might think and you can definitely reach their level if you put in the effort and the work so to end this video the last thing I'll say is that there's no one way to become a software engineer or a developer everyone's journey is different some people do it in a few months some people it takes years and you saw in this video that I had a very unconventional Journey where I started learning how to code when I was quite young and I spent almost five years kind of just doing random coding stuff with no real direction or vision and still I ended up where I am today so please don't worry if you feel like you're behind people or you're not at the same level as someone else everyone goes at a different pace and as long as you keep going you will eventually get to where you want to go so I'd love to hear from you was this video helpful do you have any tips or things that you wish you knew before you started learning how to code if that's the case please leave them in the comments down below and if you're looking for programming mentors then again make sure to check out the sponsor of this video don't forget to apply for free from the link in the description to become a fellow app formation and land your dream software engineering job thanks again to formation for sponsoring this video thank you
