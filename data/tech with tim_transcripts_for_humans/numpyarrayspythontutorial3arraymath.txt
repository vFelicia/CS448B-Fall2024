With timestamps:

00:00 - hey guys and welcome back to the third
00:01 - video in my numpy tutorial series in
00:04 - today's video I'm gonna be going over
00:06 - all of the different math operations
00:08 - pretty well that we can do on different
00:11 - arrays of different sizes I'm going to
00:12 - be talking about dot products inner
00:13 - products
00:14 - element wise operations a bunch of fun
00:17 - stuff so make sure you guys stick around
00:19 - for the whole video so anyways I've just
00:22 - got two arrays here x and y and what I
00:25 - want to do is I want to add the elements
00:26 - so like 1 plus 5 2 + 6 3 + 7 4 + 8 so on
00:30 - so intuitively you think you can just do
00:33 - this x + y and in that case you would be
00:35 - correct so you can apply the standard
00:38 - operations addition subtraction
00:40 - multiplication and division which I will
00:43 - go through now there's another way that
00:45 - you can do this as well and you can do
00:46 - NP don't add and you can do X comma Y
00:49 - like so and you get the exact same
00:51 - result again if we want to store these
00:54 - values we need to store them in a new
00:56 - array so if I do something like Z equals
00:59 - prints ad then we have that now stored
01:01 - in a new array called set next one is
01:04 - subtract so let's do the same thing here
01:06 - so X minus y you can see we get negative
01:09 - 4 negative 4 negative 4 negative 4 now
01:11 - same thing if we do NP dot subtract x +
01:17 - y and the exact same thing now it's the
01:21 - identical for multiplication and
01:23 - Submission but I do want to show you
01:25 - multiplication because some of you that
01:26 - know a bit about linear algebra might be
01:28 - confused on how this multiplication
01:30 - works so if I do X multiplied by Y any
01:35 - of you that don't know linear algebra
01:36 - gonna say okay I'm just gonna get 1
01:37 - multiplied by 5 2 by 6 3 by 7 and you'd
01:40 - be correct in that case this is because
01:42 - we're doing element wise multiplication
01:44 - now what that means is we're simply just
01:46 - multiplying all of the corresponding
01:48 - elements so like Row 1 column 1 Row 2
01:51 - column 2 so on we're just multiplying
01:52 - those together and stirring them in a
01:54 - new array if we want to do matrix
01:58 - multiplication which I'm going to show
02:00 - later it's a different command now same
02:02 - thing here we go multiply and that X Y
02:06 - then we get the same thing and division
02:09 - I don't think I need to talk about it
02:11 - too much we get the exact same thing
02:13 - element-wise and you can do em pedo
02:15 - divine now last one to show here and
02:18 - this one there's no like short form for
02:21 - it you have to type NP dot s QR t if you
02:24 - want to get the square root of every
02:25 - element so for example at X and we get
02:28 - the square root so these are useful
02:29 - operations and they're good to know and
02:32 - it's also neat that you can ignore using
02:34 - this like dot multiplied I'll subtract
02:35 - and you can simply just apply the
02:37 - operation like you would think you'd be
02:38 - able to do okay so now let's talk about
02:41 - dot products so I'm going to create two
02:43 - new arrays here I'm going to V is equal
02:45 - to NP ray and in this case let's just
02:50 - give it values of nine ten let's go W is
02:53 - gonna be equal to NP dot array values uh
02:58 - oops what am I saying here eleven and
03:01 - thirteen just do this why not okay so we
03:03 - have V and W now if I want to take the
03:06 - dot product of these two vectors I could
03:08 - go through the tedious picking out each
03:11 - element in the array and doing it myself
03:12 - but like you might assume numpy has a
03:16 - trick for that so we can simply do
03:17 - something like V dot W in this case
03:21 - we're gonna get a scalar which is two to
03:23 - nine now if you guys don't know anything
03:26 - about linear algebra and you don't know
03:27 - what this is don't worry about it simply
03:29 - what this dot product does is it's gonna
03:31 - multiply the corresponding value so
03:33 - we're gonna say nine x 11 plus 10 x 13
03:38 - and that's the value that we get here 2
03:41 - to 9 now another way we can do this is
03:44 - NP dot dot and then in here we'll put
03:47 - our two so we say V and W like so and
03:49 - we're gonna get the exact same answer
03:52 - now this dot product is only going to
03:54 - give us a scalar if we're multiplying
03:56 - vectors of the same size so we have a
03:59 - vector or I'm saying vector but really
04:02 - is an array as well of 1113 so this is a
04:05 - 1 by 2 and this is a 1 by 2 so that's
04:07 - gonna allow us to give a dot product
04:09 - that gives us a scalar now i want to
04:10 - show you an example of what happens if i
04:12 - multiply vectors matrix is whatever
04:15 - arrays of different size and show you
04:18 - what we get so if I do something like
04:21 - let's see here NP dot dot and I remember
04:25 - I made X&Y up here
04:27 - we have multiple dimensions in here so
04:29 - we have two rows and two columns of x
04:31 - and y we actually get what's known as
04:34 - the inner product of these matrices
04:37 - matrix --is so we didn't simply just dot
04:40 - product like all the vectors in here
04:42 - together and add them we actually did
04:45 - the inner product now I'm not gonna
04:47 - explain the inner product cuz now we're
04:48 - getting too far until linear algebra but
04:50 - that's how you can do that with matrixes
04:52 - if you guys know what those are okay now
04:55 - another thing that we can do is we can
04:57 - transpose a matrix or a vector and what
05:00 - that simply means to do is to write all
05:02 - of the rows in columns and all of the
05:05 - columns and rows so like vice versa so
05:06 - you're pretty much just flipping all of
05:08 - the rows into columns so I'll show you
05:10 - what I mean here so I'm just gonna print
05:12 - X and you can see that we get a matrix
05:14 - that goes 1 2 3 4 now if I do X dot T
05:20 - and this is all you have to do is just
05:22 - very simple this is going to transpose
05:24 - our matrix and you can see that we now
05:26 - get 1 3 2 4 so this column has been
05:29 - written as the row and then this column
05:31 - has been written as the second row again
05:34 - if we wanted to
05:35 - well reverse the operation so we said
05:38 - like I don't know H equals X dot T that
05:42 - H is gonna be our transpose matron we go
05:44 - 1 reverse'
05:45 - and you know HT and we're gonna get back
05:47 - to 1 2 3 4 now the last one I want to
05:51 - show is some now we can numpy has a
05:56 - built in some functions already starting
05:58 - and MP dot some and just give it an
06:00 - array here so I'm gonna give it X and
06:03 - you can see we get a sum of 10 plus 1
06:05 - plus 3 plus 2 plus 4 all the way around
06:08 - 1 plus 2 Plus 3 plus 4 gives us 10 and
06:11 - if we want to sum just one row or or
06:14 - just all the rows or all the columns or
06:16 - so on like that we can actually do
06:19 - something which is really cool and
06:20 - suppose NP dot some will give it our
06:23 - array X and we can specify an axis that
06:26 - we want some and I'll show you what this
06:28 - prints up so the axis is gonna be which
06:31 - column you want to sum so if I do that
06:33 - you can see we get 4 & 6 so we have our
06:35 - column here which is gonna be or sorry
06:39 - our row actually because I said
06:40 - axis equals zero naught x equals 1
06:42 - excuse me there so we get 1 3 which is
06:46 - the first sum 4 and we get 2 4 which is
06:48 - the second sum of 6 and it stores that
06:51 - in well a new array so if now if I want
06:54 - to sum all the columns not the rows I'll
06:56 - do axis is equal to 1 and you can take
07:00 - it 3 7 so 1 plus 2 3 plus 4 and we get 3
07:05 - 7 like that
07:06 - now I encourage you guys to play around
07:08 - with a lot of stuff I've shown here
07:10 - there's a lot of cool things you can do
07:12 - with them and I'm only kind of showing
07:14 - the basis because I want you guys to
07:16 - discover them on your own
07:17 - anyways that's been it for this video if
07:19 - you guys enjoyed please make sure you
07:20 - leave a like and subscribe and I will
07:22 - see you again in the next one
07:23 - [Music]

Cleaned transcript:

hey guys and welcome back to the third video in my numpy tutorial series in today's video I'm gonna be going over all of the different math operations pretty well that we can do on different arrays of different sizes I'm going to be talking about dot products inner products element wise operations a bunch of fun stuff so make sure you guys stick around for the whole video so anyways I've just got two arrays here x and y and what I want to do is I want to add the elements so like 1 plus 5 2 + 6 3 + 7 4 + 8 so on so intuitively you think you can just do this x + y and in that case you would be correct so you can apply the standard operations addition subtraction multiplication and division which I will go through now there's another way that you can do this as well and you can do NP don't add and you can do X comma Y like so and you get the exact same result again if we want to store these values we need to store them in a new array so if I do something like Z equals prints ad then we have that now stored in a new array called set next one is subtract so let's do the same thing here so X minus y you can see we get negative 4 negative 4 negative 4 negative 4 now same thing if we do NP dot subtract x + y and the exact same thing now it's the identical for multiplication and Submission but I do want to show you multiplication because some of you that know a bit about linear algebra might be confused on how this multiplication works so if I do X multiplied by Y any of you that don't know linear algebra gonna say okay I'm just gonna get 1 multiplied by 5 2 by 6 3 by 7 and you'd be correct in that case this is because we're doing element wise multiplication now what that means is we're simply just multiplying all of the corresponding elements so like Row 1 column 1 Row 2 column 2 so on we're just multiplying those together and stirring them in a new array if we want to do matrix multiplication which I'm going to show later it's a different command now same thing here we go multiply and that X Y then we get the same thing and division I don't think I need to talk about it too much we get the exact same thing elementwise and you can do em pedo divine now last one to show here and this one there's no like short form for it you have to type NP dot s QR t if you want to get the square root of every element so for example at X and we get the square root so these are useful operations and they're good to know and it's also neat that you can ignore using this like dot multiplied I'll subtract and you can simply just apply the operation like you would think you'd be able to do okay so now let's talk about dot products so I'm going to create two new arrays here I'm going to V is equal to NP ray and in this case let's just give it values of nine ten let's go W is gonna be equal to NP dot array values uh oops what am I saying here eleven and thirteen just do this why not okay so we have V and W now if I want to take the dot product of these two vectors I could go through the tedious picking out each element in the array and doing it myself but like you might assume numpy has a trick for that so we can simply do something like V dot W in this case we're gonna get a scalar which is two to nine now if you guys don't know anything about linear algebra and you don't know what this is don't worry about it simply what this dot product does is it's gonna multiply the corresponding value so we're gonna say nine x 11 plus 10 x 13 and that's the value that we get here 2 to 9 now another way we can do this is NP dot dot and then in here we'll put our two so we say V and W like so and we're gonna get the exact same answer now this dot product is only going to give us a scalar if we're multiplying vectors of the same size so we have a vector or I'm saying vector but really is an array as well of 1113 so this is a 1 by 2 and this is a 1 by 2 so that's gonna allow us to give a dot product that gives us a scalar now i want to show you an example of what happens if i multiply vectors matrix is whatever arrays of different size and show you what we get so if I do something like let's see here NP dot dot and I remember I made X&Y up here we have multiple dimensions in here so we have two rows and two columns of x and y we actually get what's known as the inner product of these matrices matrix is so we didn't simply just dot product like all the vectors in here together and add them we actually did the inner product now I'm not gonna explain the inner product cuz now we're getting too far until linear algebra but that's how you can do that with matrixes if you guys know what those are okay now another thing that we can do is we can transpose a matrix or a vector and what that simply means to do is to write all of the rows in columns and all of the columns and rows so like vice versa so you're pretty much just flipping all of the rows into columns so I'll show you what I mean here so I'm just gonna print X and you can see that we get a matrix that goes 1 2 3 4 now if I do X dot T and this is all you have to do is just very simple this is going to transpose our matrix and you can see that we now get 1 3 2 4 so this column has been written as the row and then this column has been written as the second row again if we wanted to well reverse the operation so we said like I don't know H equals X dot T that H is gonna be our transpose matron we go 1 reverse' and you know HT and we're gonna get back to 1 2 3 4 now the last one I want to show is some now we can numpy has a built in some functions already starting and MP dot some and just give it an array here so I'm gonna give it X and you can see we get a sum of 10 plus 1 plus 3 plus 2 plus 4 all the way around 1 plus 2 Plus 3 plus 4 gives us 10 and if we want to sum just one row or or just all the rows or all the columns or so on like that we can actually do something which is really cool and suppose NP dot some will give it our array X and we can specify an axis that we want some and I'll show you what this prints up so the axis is gonna be which column you want to sum so if I do that you can see we get 4 & 6 so we have our column here which is gonna be or sorry our row actually because I said axis equals zero naught x equals 1 excuse me there so we get 1 3 which is the first sum 4 and we get 2 4 which is the second sum of 6 and it stores that in well a new array so if now if I want to sum all the columns not the rows I'll do axis is equal to 1 and you can take it 3 7 so 1 plus 2 3 plus 4 and we get 3 7 like that now I encourage you guys to play around with a lot of stuff I've shown here there's a lot of cool things you can do with them and I'm only kind of showing the basis because I want you guys to discover them on your own anyways that's been it for this video if you guys enjoyed please make sure you leave a like and subscribe and I will see you again in the next one
