With timestamps:

00:03 - foreign
00:08 - I will share with you how to set up your
00:11 - development environment for writing
00:12 - python code I myself have been writing
00:15 - python code for over 10 years I've been
00:17 - teaching python code for about five and
00:19 - I have messed around with pretty much
00:20 - every tool that you can imagine so what
00:22 - I'm going to show you here is personally
00:24 - my environment this is what I recommend
00:26 - and use on a daily basis and that's
00:28 - going to include all of my tools for
00:30 - virtual environments my code editor my
00:32 - formatters my autocomplete my extensions
00:36 - pretty much everything I use on a daily
00:38 - basis so with that said let me show you
00:40 - how to set this up after I set up the
00:42 - Segway to our sponsor before we get
00:45 - started I need to thank lenode for
00:46 - sponsoring this video I've been using
00:48 - and working with lenode for nearly three
00:50 - years now and they've consistently been
00:52 - my go-to choice for hosting my
00:54 - applications and servers in fact right
00:56 - now I'm using the node to host the
00:58 - official Tech with Tim Discord bot a
01:00 - website multiple of my domains and a
01:02 - kubernetes cluster now lenode was just
01:04 - recently acquired by Akamai and as a
01:06 - part of this acquisition they're going
01:08 - to be adding more than a dozen new data
01:10 - centers around the world in the next
01:12 - year lenode makes it super easy to spin
01:13 - up servers with their one-click app
01:15 - Marketplace and have tons of written
01:17 - guides and YouTube videos on their
01:19 - channel to help you get started now if
01:21 - you're having any issues you can reach
01:22 - out to the 24 7 support team and
01:24 - actually talk with a real human being
01:26 - now the nodes pricing is simple with no
01:29 - hidden fees and full transparency and
01:31 - you can test out the node services for
01:33 - free by using the link in the
01:34 - description and claiming in a 100.60 day
01:37 - credit for any new accounts it's been an
01:39 - absolute pleasure to work with lenode
01:40 - over the past few years and one last
01:42 - thank you to them for sponsoring this
01:44 - video alright so let's go ahead and dive
01:46 - into this now just as a quick table of
01:48 - contents I'm going to show you what I
01:49 - use for virtual environments what I use
01:51 - for my code editor what I use for my
01:53 - formatter for my autocomplete for my
01:55 - terminal and then all of the extensions
01:57 - and actually a bonus tool at the end
01:59 - that you guys can hopefully find some
02:01 - value in
02:05 - so let's get started here the first
02:08 - thing we need to set up for our
02:09 - development environment is something
02:11 - that can handle virtual environments now
02:13 - if you're not familiar with virtual
02:15 - environments this allows us to have
02:16 - multiple python versions installed on
02:18 - our computer and different versions of
02:21 - those versions separate environments for
02:23 - each project that we work on this way we
02:26 - can separate out the packages that we
02:28 - need and kind of keep our dependencies
02:29 - separate and nice and clean it is not a
02:32 - great idea to only have one version of
02:34 - python and just dump all of your
02:35 - dependencies into that oftentimes you
02:37 - need to switch between different
02:38 - environments that's we'll use a virtual
02:40 - environment for so the virtual
02:42 - environment software I use is called
02:44 - Anaconda there is a built-in one called
02:46 - ven V or vnvv I don't know exactly how
02:49 - you pronounce that anyways I like
02:51 - Anaconda this is the one I've been using
02:53 - for a very long time and I'm going to
02:54 - recommend that you download it now I'll
02:56 - leave a link to the download in the
02:58 - description however there is a few notes
03:00 - to keep in mind while you're installing
03:02 - this software specifically I'm going to
03:03 - bring up a tab here you want to make
03:05 - sure that when you go through the
03:07 - installation process right here is where
03:09 - it is you click this button let me zoom
03:12 - in that says add Anaconda to my path
03:15 - environment variable now it tells you
03:17 - it's not recommended to do this but I
03:19 - guarantee that for 99 of you you want
03:21 - this on your path and having it on your
03:23 - path allows you to use this command
03:25 - directly from your normal terminal
03:27 - rather than having to open up the
03:29 - Anaconda terminal so make sure you add
03:31 - this to your path if you don't add it to
03:33 - your path or you already have it
03:35 - installed I will leave this link in the
03:37 - description that shows you how to add
03:39 - this to your path
03:40 - um right here see add Anaconda to path
03:42 - if you don't already have it installed
03:44 - if you're not sure if you have it on
03:46 - your path or not then what you can do is
03:48 - open up any random terminal so it
03:50 - doesn't matter if your terminal command
03:52 - prompt and you can simply type conda and
03:54 - if condo works you have it on your path
03:56 - if it doesn't then you should add it
03:58 - before going through the rest of this
04:00 - video alright so at this point in time
04:02 - I'm going to assume that you have
04:03 - Anaconda stult regardless though listen
04:06 - to this next minute or two because this
04:07 - is going to be important to make sure
04:09 - you don't mix up your different python
04:10 - versions so many of you very likely have
04:13 - multiple python versions on your
04:15 - computer and you have that because
04:16 - you've gone to the python website and
04:18 - you've downloaded multiple versions of
04:21 - it so maybe you downloaded 3.9 a year
04:23 - ago and then you downloaded 3.11 now
04:25 - where you downloaded 3.7 five years ago
04:28 - or whatever it was either way chances
04:30 - are you have another version of python
04:32 - on your computer now the way you can
04:33 - check that at least on Windows
04:35 - is you can search for idle in your
04:38 - windows kind of search bar here if
04:40 - you're on Mac you can go to the
04:41 - spotlight search and Linux probably a
04:42 - similar thing you can see here though
04:44 - that I have idle which is kind of the
04:46 - default code editor that comes with
04:48 - python from the python website and I
04:51 - have two of them here right 3.8 and 3.10
04:54 - now what this is telling me that is that
04:56 - I actually have two python interpreters
04:58 - on my system that are different versions
05:00 - and this means that I may be installing
05:03 - dependencies into the wrong version so I
05:05 - would highly recommend that you
05:06 - uninstall all of these python versions
05:08 - unless you know what you're doing in my
05:10 - situation I know what I'm doing with
05:11 - these so you don't mix them up in the
05:13 - future just keep that in mind you may
05:15 - have multiple python versions and you
05:17 - may be installing packages into the
05:18 - wrong version now if you don't have any
05:20 - of these idle packages and you added
05:22 - conda to path chances are that the
05:25 - python version you're going to be using
05:27 - when you type the command python or
05:28 - python3 depending on your operating
05:31 - system is going to be the python
05:33 - provided by Anaconda now Anaconda that
05:36 - has something known as a base
05:37 - environment that base environment is
05:39 - what you use by default no matter what
05:42 - now if you change the environment then
05:44 - you can use a custom environment but for
05:45 - any of you that don't have additional
05:47 - python compilers or sorry interpreters
05:49 - the python version you're going to be
05:50 - using is the base version or the base
05:53 - environment from Anaconda I know this is
05:55 - a little bit confusing but I just want
05:57 - to make this clear because this is the
05:58 - biggest mistake everyone makes when they
06:00 - set up their python development
06:02 - environment really what you need to
06:03 - understand is which one you're using at
06:06 - any point in time so I'll show you how
06:07 - to set that up but first let's look at
06:09 - how to create different virtual
06:10 - environments using Anaconda so the first
06:13 - thing I want to type here is condom
06:15 - again at this point it should be
06:16 - installed and added to your path once
06:18 - we've typed conda and we know that this
06:20 - command is working we can create a
06:21 - virtual environment so let me make this
06:23 - full screen so to do that we're going to
06:25 - type conda create
06:27 - dash dash name and then give our virtual
06:30 - environment a name in my case I'm going
06:32 - to give mine the name of programming
06:34 - expert which is the best platform to use
06:36 - if you want to learn how to code it more
06:37 - about python check it out from the link
06:38 - in the description and then I can
06:40 - alternatively specify what the version
06:42 - of python is that I want to use for this
06:44 - virtual environment
06:45 - so I can say python is equal to and then
06:48 - give it a version 3.9 3.8 any valid
06:51 - version
06:52 - so I'm going to go 3.9 here when I do
06:54 - 3.9 it is going to download this python
06:57 - version for me and install this in a new
06:59 - virtual environment now keep in mind
07:01 - these virtual environments can be fairly
07:03 - large so you don't want to create too
07:05 - many if you don't actually need them so
07:07 - I'm just running through the
07:07 - installation steps here once it's done I
07:09 - will be right back all right so now that
07:12 - this has been created what I can do is
07:14 - use this virtual environment right now
07:17 - notice when I type python I'm using
07:19 - python version 3.10 you can see that
07:21 - from right here now that's not the
07:23 - version that I use to set up my virtual
07:24 - environment I use 3.9 so if I want to
07:27 - use this virtual environment I need to
07:28 - type the command that's right here
07:31 - conda activate and then I'm going to
07:34 - type programming expert okay so that's
07:36 - the name of my virtual environment and
07:38 - then you're going to see kind of a
07:39 - parenthesized name of your environment
07:41 - and now this terminal is going to be
07:43 - using the python version from this new
07:45 - virtual environment so now if I type
07:47 - python notice I have my version 3.9 now
07:50 - this also means that if I want to
07:52 - install any packages and I use a command
07:54 - like pip or pip3 which should just be
07:56 - working by default in this environment
07:58 - it's going to install them in 3.9 not in
08:02 - my 3.10 version so hopefully that makes
08:05 - a bit of sense but this is where you
08:07 - would kind of separate out your
08:08 - different dependencies for different
08:09 - projects and create different virtual
08:11 - environments for any different project
08:13 - that you're working on that has well
08:15 - different dependencies okay
08:17 - so that is kind of the basics here
08:18 - there's a lot more you can do with conda
08:20 - but I imagine for many of you all you're
08:22 - going to need to do is set up a python
08:23 - version install some dependencies and
08:25 - then you need to know how to use it and
08:27 - stop using it so if I want to stop using
08:29 - this I'm going to type conda deactivate
08:31 - and that's going to remove me now out of
08:34 - this environment now let's say that I
08:36 - want to now get into the base
08:38 - environment for Anaconda again for any
08:40 - of you that don't have other python
08:41 - versions installed that's what you're
08:43 - going to be using by default otherwise
08:45 - though for me if I want to be in the
08:47 - base version of Anaconda I need to type
08:49 - conda activate now this again brings me
08:52 - into the kind of standard python version
08:54 - for Anaconda and now if I type python
08:57 - I'm using python 3.8 which is what came
08:59 - with the Anaconda I installed a very
09:01 - long time ago right back in 2020.
09:04 - anyways I'm going to quit python here
09:06 - and I'm going to type deactivate so it's
09:08 - just important that you understand the
09:09 - difference here you have your base
09:10 - environment you have any custom
09:12 - environments that you create and you
09:14 - have any other python interpreters on
09:15 - your system and you want to know which
09:17 - one you're using and don't get mixed up
09:19 - with your dependencies all right so
09:20 - sorry for the quick cut here but I'm
09:22 - just going to run you through a few
09:23 - useful conda commands you may want to
09:25 - use so first one is conda info dash dash
09:29 - envs this is going to list out all of
09:31 - the different environments that you have
09:32 - on your system pretty useful to know and
09:35 - then another one you may want to use is
09:37 - deleting an environment so to do that
09:39 - you're going to use condo or condo sorry
09:41 - EnV
09:43 - and then remove and then dash n for name
09:47 - and then the name of the environment you
09:48 - want to remove
09:49 - so let's say I want to remove say
09:51 - programming expert and then that will
09:53 - delete the environment okay that's
09:55 - really all you need to know about
09:56 - Anaconda there is also a graphical user
09:59 - tool you can use that kind of shows you
10:01 - some information so you can open that up
10:03 - if you want but for me I always just use
10:05 - it from the terminal now let's head over
10:06 - to vs code and see how we can use these
10:08 - conda environments
10:13 - all right so I've opened up visual
10:15 - studio code this is the code editor that
10:18 - I recommend for python development yes
10:20 - there is a million other ones that you
10:21 - can use but the one that I always use is
10:23 - Visual Studio code it's also just good
10:25 - to get practice with this because if you
10:27 - ever work in another language chances
10:29 - are you're going to be using visual
10:30 - studio code so I would highly recommend
10:32 - just use this you know get away from pie
10:34 - charm get away from those other ones use
10:36 - vs code that's my recommendation after
10:38 - 10 years of Python Programming anyways
10:40 - how do we set up vs code it's actually
10:43 - very very simple to set it up for
10:44 - writing python code once you install vs
10:47 - code there's a little uh kind of
10:48 - extensions button here so click on
10:50 - extensions and you can see I have a
10:52 - bunch right I've already installed a
10:53 - bunch of extensions for you guys what
10:55 - you're going to want to install is the
10:56 - python extension this is provided by
10:58 - Microsoft fun fact I actually worked on
11:00 - this extension uh when I worked at
11:02 - Microsoft has almost 70 million
11:04 - downloads now this is a very good
11:06 - extension and this pretty much sets
11:07 - everything up for you automatically so
11:09 - install this python extension you might
11:11 - have to like restart vs code and now we
11:14 - can actually create a python file and I
11:16 - will show you how to run it and change
11:18 - The Interpreter that you're using so
11:20 - what I've done here is I've just opened
11:22 - up vs code notice I'm not in a folder or
11:24 - anything like that and if I get out of
11:26 - full screen mode which you can get into
11:27 - by pressing f11 on your keyboard I can
11:30 - go file and then I can open a folder for
11:33 - example if I want to start working in
11:34 - some kind of project
11:36 - so I'm going to type open folder I'm
11:38 - going to go to my desktop and let's just
11:40 - make a folder
11:41 - and call this tutorial
11:43 - okay uh of course I have a tutorial
11:45 - folder uh let's rename this to python
11:49 - EnV
11:50 - okay
11:51 - so this is typically how I start a new
11:53 - project I open up a folder inside of
11:56 - this folder I can write anything that I
11:57 - need okay now I have a folder open if I
11:59 - want to create a new file I can press
12:01 - this button and I can do something like
12:03 - test dot pi all right I've got a python
12:05 - file open let's type print
12:09 - hello world and what you're going to see
12:11 - now just zoom in a little bit is that we
12:13 - have this button up here in the top
12:15 - right hand corner that will run our
12:16 - python code for us we also can run and
12:19 - debug I'm not going to talk about that
12:21 - right now okay so now the question
12:23 - becomes when I press this run button
12:25 - what interpreter is going to be used am
12:26 - I using 3.9 am I using 3.11 am I using
12:29 - the conda base interpreter and that's
12:31 - going to be different for all of you the
12:33 - way to change this once you have the
12:34 - python extensionist installed sorry is
12:36 - to hit control shift and the letter P on
12:39 - your keyboard and then to type the
12:41 - following
12:43 - Python and then select interpreter so
12:46 - I'm going to hit select interpreter and
12:48 - you're going to see here that it gives
12:49 - me every single one of the virtual
12:52 - environments that I have this is done by
12:54 - the python extension and it shows me
12:56 - every single interpreter here so this is
12:58 - where you select the python interpreter
13:00 - you want to use now notice the default
13:02 - one is 3.10 you can actually set this by
13:05 - kind of clicking on this button here and
13:06 - changing what the default interpreter
13:08 - path is anyways I'm not going to do that
13:10 - here but you can see that you can change
13:12 - which one you want so I can use for
13:14 - example 3.10 and then I can run this and
13:17 - it will run this using python version
13:19 - 3.10 now of course you could also just
13:22 - go in the terminal and you could
13:23 - activate the virtual environment you
13:24 - want so I can say activate uh I think I
13:27 - had one called say Robert and then I
13:29 - could say Python and then test dot pi
13:32 - and I can just run it myself in that
13:34 - environment however I know a lot of you
13:36 - want to use this button so that's how
13:38 - you change The Interpreter there you go
13:40 - that's all there is to it that's how you
13:42 - use vs code for python font development
13:48 - alright so now for the next part of this
13:50 - video I'm going to show you how to set
13:51 - up python formatting now to do this from
13:54 - vs code you can hit control s and it
13:57 - should actually just give you a um kind
13:59 - of pop-up here when you try to save a
14:01 - file that requires formatting like mine
14:02 - does right now and it should say do you
14:04 - want to install black or do you want to
14:06 - install Auto Pep 8 or one of these
14:07 - python formatters now this command never
14:10 - works for me but for you guys it might
14:11 - and what you can do is hit yes or change
14:13 - it to use one of the different
14:15 - formatters personally I like using black
14:17 - as my formatter but it doesn't really
14:19 - matter Auto Pepe is going to be the same
14:21 - and I've never used this Yap F1 so I
14:24 - don't know use whatever one you see fit
14:25 - I'm sure they all do a very similar
14:27 - thing okay so this pop-up though for
14:29 - some reason you don't get it showing up
14:31 - right when you're inside of a python
14:32 - file and you're saving hit Ctrl shift p
14:35 - on your keyboard and then type format
14:37 - and then document with then hit Python
14:40 - and if you don't have a formatter
14:42 - installed it should pop you up here with
14:44 - this pop-up and then you can press this
14:46 - button now for me because I have kind of
14:48 - of a messed up environment because of
14:49 - all the tutorials I do you can see this
14:51 - doesn't work for me so I actually get a
14:53 - mistake now I'll show you how to fix
14:54 - this error if this pops up for you so
14:57 - I'm just going to clear this here first
14:58 - I'm going to change into an environment
15:00 - I want this formatter for so I'm going
15:01 - to say
15:02 - let's go conda activate and let's
15:05 - actually activate our base environment
15:07 - then inside of here I'm going to type
15:09 - pip install black and that will install
15:12 - the formatter for me okay so I'm going
15:15 - to install that inside of here notice
15:16 - it's already installed in my base
15:18 - environment and that's fine now if
15:20 - you're on Mac or Linux you may need to
15:21 - use the PIP 3 command just keep that in
15:24 - mind
15:24 - okay so now that black is installed I'm
15:27 - going to change my python interpreter I
15:28 - can do that by hitting down here as well
15:30 - by the way uh to my base environment
15:33 - which is this one now that I'm in my
15:35 - base environment if I save I should get
15:37 - Auto formatting and you can see that I
15:38 - do it automatically formats my data here
15:40 - for me alright so that is formatting one
15:43 - last thing you should have a look at is
15:44 - the formatting kind of configurations so
15:47 - I'm going to go to the settings in vs
15:48 - code and I'm going to type format here
15:51 - and you can change a few of the options
15:53 - here so that you format when you say
15:55 - paste something in I hate that that
15:56 - really annoys me so I turn that off or
15:58 - you can format on Save I put this on so
16:01 - every time I hit save it automatically
16:02 - formats the file you also can manually
16:05 - invoke a format by doing Ctrl shift p
16:07 - and then you can say format document or
16:09 - you can save without formatting the
16:11 - document which is what I do quite a bit
16:13 - alright let's move on to the next topic
16:18 - all right so the next topic is
16:21 - autocomplete now this is very important
16:23 - especially if you're writing a lot of
16:24 - code and by default the python extension
16:27 - does have an autocomplete which I
16:28 - believe is called Jedi it might be
16:31 - different now either way there is a
16:32 - default autocomplete for almost every
16:34 - programming language based on the
16:35 - extension you install in Visual Studio
16:38 - code now I don't like the default one so
16:41 - instead I use tab 9. now this is not a
16:43 - sponsorship for top nine this is a paid
16:45 - product I pay for this they do have a
16:47 - free version as well but this is
16:49 - personally what I recommend for an
16:50 - autocomplete especially if you code a
16:52 - lot I think it's like 20 bucks a month
16:53 - or something anyways I use this that's
16:56 - what I use you don't have to use this
16:57 - okay so if you want to use that you can
16:59 - download it
17:00 - um I'll even let you guys find the link
17:02 - on your own so you don't think I'm
17:03 - giving you an affiliate link or anything
17:04 - like that and to see tab 9 you can see
17:07 - that I have it activated here in Visual
17:09 - Studio code and if I click on this it
17:11 - gives me kind of like some stats and
17:12 - stuff about this all right anyways there
17:16 - you go that is tab 9 now if you don't
17:18 - want to use tab9 which most of you will
17:19 - not be using because you don't want to
17:20 - use a paid version you of course can use
17:22 - GitHub copilot there's a little button
17:24 - here that you can click on
17:25 - for kind of activating copilot now I
17:28 - don't have copilot hence why I'm not
17:30 - using it otherwise I probably would
17:31 - other than that if you want to set up
17:33 - your autocomplete you can go to settings
17:36 - and it's actually called intellisense so
17:39 - if I type intellisense here something
17:42 - should be popping up all right so the
17:44 - option here is actually under language
17:46 - server so if you go to Python language
17:48 - server you can change the language
17:50 - server which is what provides your
17:52 - intellisense or the autocomplete for you
17:54 - you have Jedi pylance which is a more
17:57 - advanced version actually now that I
17:58 - remember hearing about it so you can
18:00 - change it to pylance and then you'll be
18:02 - using that by default for your um what
18:04 - do you call it your python autocomplete
18:06 - anyways you shouldn't really need to
18:07 - configure this it should be set up for
18:09 - you but I just wanted to let you guys
18:10 - know I do use a special autocomplete I
18:12 - think it's worth it but it's up to you
18:17 - all right so now we're moving on to the
18:20 - last section which is kind of extra
18:22 - extensions or let's call it like a bonus
18:24 - now for visual studio code you can see
18:26 - when I go to this extensions pane here I
18:28 - have a lot of extensions now I work in a
18:30 - lot of different programming languages
18:31 - so that's why I have so many so some of
18:34 - the key ones I have if I kind of go
18:35 - through them here is code spell checker
18:38 - I love this one because I make a ton of
18:40 - spelling mistakes and this really saves
18:42 - me quite a bit from pushing in kind of
18:44 - mixed up variable names or comments or
18:46 - something along those lines so I would
18:48 - highly recommend you download the code
18:50 - spell checker all of these you can just
18:51 - search and you'll find them yourselves I
18:53 - have the Django extension this gives you
18:55 - some Snippets and some more syntax and
18:58 - kind of code completions for Django and
19:01 - then I'm trying to find any other python
19:02 - related ones I have a Jinga now if you
19:05 - ever worked in Django then you probably
19:07 - want the Jinga extension which makes
19:09 - writing your Jenga HTML a little bit
19:11 - more readable
19:13 - and I think that's about it
19:16 - um I have this prettier extension this
19:19 - works for other code files unfortunately
19:21 - not for python this will automatically
19:23 - format say JavaScript code or Json code
19:26 - so it's nice because oftentimes I'm
19:28 - working with Json files or other types
19:29 - of code of course I have the tab 9
19:32 - extension and then I have a WSL as well
19:35 - which actually a lot of you will
19:36 - probably like so that you can have some
19:38 - Linux like commands inside of Windows
19:41 - and I believe if you use Powershell
19:42 - which is one of the terminal options you
19:45 - can use in vs code here by just going
19:47 - here and selecting Powershell so where
19:49 - it says new terminal just hit Powershell
19:51 - uh you'll get access to a lot of WSL
19:53 - commands I think that's by default now
19:55 - in Windows but don't quote me on that
19:58 - all right so with that said guys I think
20:00 - I'm gonna wrap up the video here this
20:03 - was really all I need to show you for my
20:05 - python environment setup the most
20:07 - important part being the interpreters
20:09 - once you understand the interpreters
20:11 - it's very simple to you know kind of
20:13 - mess with your python environment change
20:15 - things around but it's definitely a big
20:16 - headache if you don't understand that
20:18 - you have multiple versions on your
20:19 - system and you're using the PIP command
20:21 - and you have no idea where you're
20:22 - installing packages so with that said
20:24 - I'm going to wrap it up here I hope you
20:26 - guys found this helpful and I look
20:27 - forward to seeing you in another YouTube
20:28 - video
20:30 - [Music]
20:32 - foreign
20:34 - [Music]

Cleaned transcript:

foreign I will share with you how to set up your development environment for writing python code I myself have been writing python code for over 10 years I've been teaching python code for about five and I have messed around with pretty much every tool that you can imagine so what I'm going to show you here is personally my environment this is what I recommend and use on a daily basis and that's going to include all of my tools for virtual environments my code editor my formatters my autocomplete my extensions pretty much everything I use on a daily basis so with that said let me show you how to set this up after I set up the Segway to our sponsor before we get started I need to thank lenode for sponsoring this video I've been using and working with lenode for nearly three years now and they've consistently been my goto choice for hosting my applications and servers in fact right now I'm using the node to host the official Tech with Tim Discord bot a website multiple of my domains and a kubernetes cluster now lenode was just recently acquired by Akamai and as a part of this acquisition they're going to be adding more than a dozen new data centers around the world in the next year lenode makes it super easy to spin up servers with their oneclick app Marketplace and have tons of written guides and YouTube videos on their channel to help you get started now if you're having any issues you can reach out to the 24 7 support team and actually talk with a real human being now the nodes pricing is simple with no hidden fees and full transparency and you can test out the node services for free by using the link in the description and claiming in a 100.60 day credit for any new accounts it's been an absolute pleasure to work with lenode over the past few years and one last thank you to them for sponsoring this video alright so let's go ahead and dive into this now just as a quick table of contents I'm going to show you what I use for virtual environments what I use for my code editor what I use for my formatter for my autocomplete for my terminal and then all of the extensions and actually a bonus tool at the end that you guys can hopefully find some value in so let's get started here the first thing we need to set up for our development environment is something that can handle virtual environments now if you're not familiar with virtual environments this allows us to have multiple python versions installed on our computer and different versions of those versions separate environments for each project that we work on this way we can separate out the packages that we need and kind of keep our dependencies separate and nice and clean it is not a great idea to only have one version of python and just dump all of your dependencies into that oftentimes you need to switch between different environments that's we'll use a virtual environment for so the virtual environment software I use is called Anaconda there is a builtin one called ven V or vnvv I don't know exactly how you pronounce that anyways I like Anaconda this is the one I've been using for a very long time and I'm going to recommend that you download it now I'll leave a link to the download in the description however there is a few notes to keep in mind while you're installing this software specifically I'm going to bring up a tab here you want to make sure that when you go through the installation process right here is where it is you click this button let me zoom in that says add Anaconda to my path environment variable now it tells you it's not recommended to do this but I guarantee that for 99 of you you want this on your path and having it on your path allows you to use this command directly from your normal terminal rather than having to open up the Anaconda terminal so make sure you add this to your path if you don't add it to your path or you already have it installed I will leave this link in the description that shows you how to add this to your path um right here see add Anaconda to path if you don't already have it installed if you're not sure if you have it on your path or not then what you can do is open up any random terminal so it doesn't matter if your terminal command prompt and you can simply type conda and if condo works you have it on your path if it doesn't then you should add it before going through the rest of this video alright so at this point in time I'm going to assume that you have Anaconda stult regardless though listen to this next minute or two because this is going to be important to make sure you don't mix up your different python versions so many of you very likely have multiple python versions on your computer and you have that because you've gone to the python website and you've downloaded multiple versions of it so maybe you downloaded 3.9 a year ago and then you downloaded 3.11 now where you downloaded 3.7 five years ago or whatever it was either way chances are you have another version of python on your computer now the way you can check that at least on Windows is you can search for idle in your windows kind of search bar here if you're on Mac you can go to the spotlight search and Linux probably a similar thing you can see here though that I have idle which is kind of the default code editor that comes with python from the python website and I have two of them here right 3.8 and 3.10 now what this is telling me that is that I actually have two python interpreters on my system that are different versions and this means that I may be installing dependencies into the wrong version so I would highly recommend that you uninstall all of these python versions unless you know what you're doing in my situation I know what I'm doing with these so you don't mix them up in the future just keep that in mind you may have multiple python versions and you may be installing packages into the wrong version now if you don't have any of these idle packages and you added conda to path chances are that the python version you're going to be using when you type the command python or python3 depending on your operating system is going to be the python provided by Anaconda now Anaconda that has something known as a base environment that base environment is what you use by default no matter what now if you change the environment then you can use a custom environment but for any of you that don't have additional python compilers or sorry interpreters the python version you're going to be using is the base version or the base environment from Anaconda I know this is a little bit confusing but I just want to make this clear because this is the biggest mistake everyone makes when they set up their python development environment really what you need to understand is which one you're using at any point in time so I'll show you how to set that up but first let's look at how to create different virtual environments using Anaconda so the first thing I want to type here is condom again at this point it should be installed and added to your path once we've typed conda and we know that this command is working we can create a virtual environment so let me make this full screen so to do that we're going to type conda create dash dash name and then give our virtual environment a name in my case I'm going to give mine the name of programming expert which is the best platform to use if you want to learn how to code it more about python check it out from the link in the description and then I can alternatively specify what the version of python is that I want to use for this virtual environment so I can say python is equal to and then give it a version 3.9 3.8 any valid version so I'm going to go 3.9 here when I do 3.9 it is going to download this python version for me and install this in a new virtual environment now keep in mind these virtual environments can be fairly large so you don't want to create too many if you don't actually need them so I'm just running through the installation steps here once it's done I will be right back all right so now that this has been created what I can do is use this virtual environment right now notice when I type python I'm using python version 3.10 you can see that from right here now that's not the version that I use to set up my virtual environment I use 3.9 so if I want to use this virtual environment I need to type the command that's right here conda activate and then I'm going to type programming expert okay so that's the name of my virtual environment and then you're going to see kind of a parenthesized name of your environment and now this terminal is going to be using the python version from this new virtual environment so now if I type python notice I have my version 3.9 now this also means that if I want to install any packages and I use a command like pip or pip3 which should just be working by default in this environment it's going to install them in 3.9 not in my 3.10 version so hopefully that makes a bit of sense but this is where you would kind of separate out your different dependencies for different projects and create different virtual environments for any different project that you're working on that has well different dependencies okay so that is kind of the basics here there's a lot more you can do with conda but I imagine for many of you all you're going to need to do is set up a python version install some dependencies and then you need to know how to use it and stop using it so if I want to stop using this I'm going to type conda deactivate and that's going to remove me now out of this environment now let's say that I want to now get into the base environment for Anaconda again for any of you that don't have other python versions installed that's what you're going to be using by default otherwise though for me if I want to be in the base version of Anaconda I need to type conda activate now this again brings me into the kind of standard python version for Anaconda and now if I type python I'm using python 3.8 which is what came with the Anaconda I installed a very long time ago right back in 2020. anyways I'm going to quit python here and I'm going to type deactivate so it's just important that you understand the difference here you have your base environment you have any custom environments that you create and you have any other python interpreters on your system and you want to know which one you're using and don't get mixed up with your dependencies all right so sorry for the quick cut here but I'm just going to run you through a few useful conda commands you may want to use so first one is conda info dash dash envs this is going to list out all of the different environments that you have on your system pretty useful to know and then another one you may want to use is deleting an environment so to do that you're going to use condo or condo sorry EnV and then remove and then dash n for name and then the name of the environment you want to remove so let's say I want to remove say programming expert and then that will delete the environment okay that's really all you need to know about Anaconda there is also a graphical user tool you can use that kind of shows you some information so you can open that up if you want but for me I always just use it from the terminal now let's head over to vs code and see how we can use these conda environments all right so I've opened up visual studio code this is the code editor that I recommend for python development yes there is a million other ones that you can use but the one that I always use is Visual Studio code it's also just good to get practice with this because if you ever work in another language chances are you're going to be using visual studio code so I would highly recommend just use this you know get away from pie charm get away from those other ones use vs code that's my recommendation after 10 years of Python Programming anyways how do we set up vs code it's actually very very simple to set it up for writing python code once you install vs code there's a little uh kind of extensions button here so click on extensions and you can see I have a bunch right I've already installed a bunch of extensions for you guys what you're going to want to install is the python extension this is provided by Microsoft fun fact I actually worked on this extension uh when I worked at Microsoft has almost 70 million downloads now this is a very good extension and this pretty much sets everything up for you automatically so install this python extension you might have to like restart vs code and now we can actually create a python file and I will show you how to run it and change The Interpreter that you're using so what I've done here is I've just opened up vs code notice I'm not in a folder or anything like that and if I get out of full screen mode which you can get into by pressing f11 on your keyboard I can go file and then I can open a folder for example if I want to start working in some kind of project so I'm going to type open folder I'm going to go to my desktop and let's just make a folder and call this tutorial okay uh of course I have a tutorial folder uh let's rename this to python EnV okay so this is typically how I start a new project I open up a folder inside of this folder I can write anything that I need okay now I have a folder open if I want to create a new file I can press this button and I can do something like test dot pi all right I've got a python file open let's type print hello world and what you're going to see now just zoom in a little bit is that we have this button up here in the top right hand corner that will run our python code for us we also can run and debug I'm not going to talk about that right now okay so now the question becomes when I press this run button what interpreter is going to be used am I using 3.9 am I using 3.11 am I using the conda base interpreter and that's going to be different for all of you the way to change this once you have the python extensionist installed sorry is to hit control shift and the letter P on your keyboard and then to type the following Python and then select interpreter so I'm going to hit select interpreter and you're going to see here that it gives me every single one of the virtual environments that I have this is done by the python extension and it shows me every single interpreter here so this is where you select the python interpreter you want to use now notice the default one is 3.10 you can actually set this by kind of clicking on this button here and changing what the default interpreter path is anyways I'm not going to do that here but you can see that you can change which one you want so I can use for example 3.10 and then I can run this and it will run this using python version 3.10 now of course you could also just go in the terminal and you could activate the virtual environment you want so I can say activate uh I think I had one called say Robert and then I could say Python and then test dot pi and I can just run it myself in that environment however I know a lot of you want to use this button so that's how you change The Interpreter there you go that's all there is to it that's how you use vs code for python font development alright so now for the next part of this video I'm going to show you how to set up python formatting now to do this from vs code you can hit control s and it should actually just give you a um kind of popup here when you try to save a file that requires formatting like mine does right now and it should say do you want to install black or do you want to install Auto Pep 8 or one of these python formatters now this command never works for me but for you guys it might and what you can do is hit yes or change it to use one of the different formatters personally I like using black as my formatter but it doesn't really matter Auto Pepe is going to be the same and I've never used this Yap F1 so I don't know use whatever one you see fit I'm sure they all do a very similar thing okay so this popup though for some reason you don't get it showing up right when you're inside of a python file and you're saving hit Ctrl shift p on your keyboard and then type format and then document with then hit Python and if you don't have a formatter installed it should pop you up here with this popup and then you can press this button now for me because I have kind of of a messed up environment because of all the tutorials I do you can see this doesn't work for me so I actually get a mistake now I'll show you how to fix this error if this pops up for you so I'm just going to clear this here first I'm going to change into an environment I want this formatter for so I'm going to say let's go conda activate and let's actually activate our base environment then inside of here I'm going to type pip install black and that will install the formatter for me okay so I'm going to install that inside of here notice it's already installed in my base environment and that's fine now if you're on Mac or Linux you may need to use the PIP 3 command just keep that in mind okay so now that black is installed I'm going to change my python interpreter I can do that by hitting down here as well by the way uh to my base environment which is this one now that I'm in my base environment if I save I should get Auto formatting and you can see that I do it automatically formats my data here for me alright so that is formatting one last thing you should have a look at is the formatting kind of configurations so I'm going to go to the settings in vs code and I'm going to type format here and you can change a few of the options here so that you format when you say paste something in I hate that that really annoys me so I turn that off or you can format on Save I put this on so every time I hit save it automatically formats the file you also can manually invoke a format by doing Ctrl shift p and then you can say format document or you can save without formatting the document which is what I do quite a bit alright let's move on to the next topic all right so the next topic is autocomplete now this is very important especially if you're writing a lot of code and by default the python extension does have an autocomplete which I believe is called Jedi it might be different now either way there is a default autocomplete for almost every programming language based on the extension you install in Visual Studio code now I don't like the default one so instead I use tab 9. now this is not a sponsorship for top nine this is a paid product I pay for this they do have a free version as well but this is personally what I recommend for an autocomplete especially if you code a lot I think it's like 20 bucks a month or something anyways I use this that's what I use you don't have to use this okay so if you want to use that you can download it um I'll even let you guys find the link on your own so you don't think I'm giving you an affiliate link or anything like that and to see tab 9 you can see that I have it activated here in Visual Studio code and if I click on this it gives me kind of like some stats and stuff about this all right anyways there you go that is tab 9 now if you don't want to use tab9 which most of you will not be using because you don't want to use a paid version you of course can use GitHub copilot there's a little button here that you can click on for kind of activating copilot now I don't have copilot hence why I'm not using it otherwise I probably would other than that if you want to set up your autocomplete you can go to settings and it's actually called intellisense so if I type intellisense here something should be popping up all right so the option here is actually under language server so if you go to Python language server you can change the language server which is what provides your intellisense or the autocomplete for you you have Jedi pylance which is a more advanced version actually now that I remember hearing about it so you can change it to pylance and then you'll be using that by default for your um what do you call it your python autocomplete anyways you shouldn't really need to configure this it should be set up for you but I just wanted to let you guys know I do use a special autocomplete I think it's worth it but it's up to you all right so now we're moving on to the last section which is kind of extra extensions or let's call it like a bonus now for visual studio code you can see when I go to this extensions pane here I have a lot of extensions now I work in a lot of different programming languages so that's why I have so many so some of the key ones I have if I kind of go through them here is code spell checker I love this one because I make a ton of spelling mistakes and this really saves me quite a bit from pushing in kind of mixed up variable names or comments or something along those lines so I would highly recommend you download the code spell checker all of these you can just search and you'll find them yourselves I have the Django extension this gives you some Snippets and some more syntax and kind of code completions for Django and then I'm trying to find any other python related ones I have a Jinga now if you ever worked in Django then you probably want the Jinga extension which makes writing your Jenga HTML a little bit more readable and I think that's about it um I have this prettier extension this works for other code files unfortunately not for python this will automatically format say JavaScript code or Json code so it's nice because oftentimes I'm working with Json files or other types of code of course I have the tab 9 extension and then I have a WSL as well which actually a lot of you will probably like so that you can have some Linux like commands inside of Windows and I believe if you use Powershell which is one of the terminal options you can use in vs code here by just going here and selecting Powershell so where it says new terminal just hit Powershell uh you'll get access to a lot of WSL commands I think that's by default now in Windows but don't quote me on that all right so with that said guys I think I'm gonna wrap up the video here this was really all I need to show you for my python environment setup the most important part being the interpreters once you understand the interpreters it's very simple to you know kind of mess with your python environment change things around but it's definitely a big headache if you don't understand that you have multiple versions on your system and you're using the PIP command and you have no idea where you're installing packages so with that said I'm going to wrap it up here I hope you guys found this helpful and I look forward to seeing you in another YouTube video foreign
