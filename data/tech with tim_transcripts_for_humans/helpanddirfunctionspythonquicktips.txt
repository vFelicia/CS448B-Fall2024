With timestamps:

00:00 - in this Python quick tips video maybe
00:02 - talking about the derp and the help
00:03 - function and how they can well help you
00:05 - and speed up your time developing when
00:07 - you're looking for simple syntax or
00:09 - methods for specific classes or objects
00:12 - now what is derp and what is help well
00:13 - some of you might have seen this before
00:14 - but essentially what derp will do which
00:16 - is a method like this is list all of the
00:19 - methods associated with any object so in
00:21 - this case when I say object I mean it
00:23 - could be an instance of an object or it
00:25 - could be the class name itself so if I
00:27 - do something like dirt int well
00:29 - obviously we know int isn't an object
00:30 - itself it's just the class and I run
00:32 - this what we get is a list of all of the
00:35 - methods that int has implemented so we
00:37 - see like ad and bool like all these
00:39 - different things it shows us all of them
00:41 - now I can do the same thing for string
00:43 - and you can see we get all these
00:45 - different methods like starts with strip
00:47 - all the ones that you know exist on
00:48 - string same thing with bool and you get
00:51 - the point that any object this will work
00:53 - on essentially listing all the methods
00:55 - that are involved which is pretty useful
00:56 - the next method we have is called help
00:58 - now what help will do is actually give
01:01 - you a bit more detail and read out the
01:02 - doc strings as well as the included kind
01:04 - of information with all the methods now
01:07 - this is kind of long because this is on
01:09 - string you can see it's giving us a
01:11 - little description as well as all the
01:12 - methods and what parameters they take
01:13 - now how do we use this on our own
01:15 - objects well this is where it gets kind
01:17 - of cool if I create a class let's call
01:19 - it my object like this what I can do is
01:22 - I can call help and I can call dirt on
01:24 - it so let me just implement a little bit
01:26 - of functionality here so that this makes
01:27 - a bit more sense and then we'll get into
01:29 - it so what I'm gonna do is I'm actually
01:30 - gonna create a doc string here and what
01:32 - I'm gonna say is this is a custom object
01:36 - for testing like that and that's my doc
01:41 - string and now what happens if I call
01:43 - you know print help on my object like
01:49 - that is I will actually get this same
01:52 - helpless for my own custom object so it
01:54 - says class my object this is what
01:56 - inherits from built-in style object it
01:58 - has my object name which is the
01:59 - constructor for that and then it says
02:01 - this is a custom object for testing and
02:03 - gives me this init method with a default
02:04 - initialized self now if I want to change
02:07 - the doc string for this all I need to do
02:08 - is just write something here and say
02:10 - this is
02:11 - an it like that now if I run this we see
02:14 - that this now gives us this is an it so
02:17 - this is kind of how help and dirt work
02:18 - and the reason I want to make you aware
02:19 - of this is when you're writing code this
02:21 - is the reason you want to include dock
02:23 - strings and make your methods meaningful
02:25 - so that if someone is trying to use your
02:27 - code later on with classes and objects
02:29 - all you need to do if they want to see
02:30 - if something works is just call help on
02:32 - it they don't need to have the source
02:33 - code and then they'll actually be able
02:35 - to read all of the information about
02:37 - that so the parameter names as well as
02:39 - you know what this method kind of does
02:40 - from what's inside of your doc string so
02:42 - anyways this has been helping der pretty
02:44 - straightforward to use them can
02:46 - definitely save you a lot of time and
02:47 - something to think about when you're
02:48 - writing classes and just code for other
02:51 - people

Cleaned transcript:

in this Python quick tips video maybe talking about the derp and the help function and how they can well help you and speed up your time developing when you're looking for simple syntax or methods for specific classes or objects now what is derp and what is help well some of you might have seen this before but essentially what derp will do which is a method like this is list all of the methods associated with any object so in this case when I say object I mean it could be an instance of an object or it could be the class name itself so if I do something like dirt int well obviously we know int isn't an object itself it's just the class and I run this what we get is a list of all of the methods that int has implemented so we see like ad and bool like all these different things it shows us all of them now I can do the same thing for string and you can see we get all these different methods like starts with strip all the ones that you know exist on string same thing with bool and you get the point that any object this will work on essentially listing all the methods that are involved which is pretty useful the next method we have is called help now what help will do is actually give you a bit more detail and read out the doc strings as well as the included kind of information with all the methods now this is kind of long because this is on string you can see it's giving us a little description as well as all the methods and what parameters they take now how do we use this on our own objects well this is where it gets kind of cool if I create a class let's call it my object like this what I can do is I can call help and I can call dirt on it so let me just implement a little bit of functionality here so that this makes a bit more sense and then we'll get into it so what I'm gonna do is I'm actually gonna create a doc string here and what I'm gonna say is this is a custom object for testing like that and that's my doc string and now what happens if I call you know print help on my object like that is I will actually get this same helpless for my own custom object so it says class my object this is what inherits from builtin style object it has my object name which is the constructor for that and then it says this is a custom object for testing and gives me this init method with a default initialized self now if I want to change the doc string for this all I need to do is just write something here and say this is an it like that now if I run this we see that this now gives us this is an it so this is kind of how help and dirt work and the reason I want to make you aware of this is when you're writing code this is the reason you want to include dock strings and make your methods meaningful so that if someone is trying to use your code later on with classes and objects all you need to do if they want to see if something works is just call help on it they don't need to have the source code and then they'll actually be able to read all of the information about that so the parameter names as well as you know what this method kind of does from what's inside of your doc string so anyways this has been helping der pretty straightforward to use them can definitely save you a lot of time and something to think about when you're writing classes and just code for other people
