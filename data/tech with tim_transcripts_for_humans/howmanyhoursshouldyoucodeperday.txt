With timestamps:

00:02 - [Music]
00:08 - so recently i've been spending quite a
00:10 - bit of time writing code and much less
00:12 - time filming videos and i've noticed
00:14 - that the amount of hours i spend coding
00:16 - really changes the amount of
00:18 - productivity or efficiency i'm getting
00:20 - in those hours what i mean by that is if
00:22 - i spend say 10 11 12 hours coding i'm
00:25 - not necessarily getting as much done per
00:27 - hour as i would if i was only spending
00:29 - three or four now i know that seems
00:31 - obvious but i think there's a really
00:33 - good sweet spot that i've discovered
00:34 - over the past few weeks i'm going to
00:36 - share that with you in this video in
00:38 - fact what specifically i'm going to do
00:40 - here is try to answer the following
00:41 - questions what's the minimum amount of
00:43 - time you should spend coding what's the
00:45 - maximum amount of time you should spend
00:47 - coding and what is that sweet spot what
00:49 - is kind of the ideal amount of time to
00:51 - spend per day working on some coding
00:53 - project now of course this won't be one
00:55 - size fits all this is really just from
00:57 - my experience and what i've noticed and
00:59 - i'd love to hear your thoughts on this
01:00 - in the comments down below now one other
01:02 - thing i've recently realized is that i
01:04 - always have about a one minute intro and
01:06 - at this point in time i share with you
01:08 - the sponsor of this video before we get
01:10 - started i need to thank sencha for
01:12 - sponsoring this video sencha provides
01:14 - the fastest javascript grid and over 140
01:17 - high-performing ui components that you
01:20 - can use to build stunning applications
01:22 - with sencha you can lower your
01:23 - maintenance costs build apps faster and
01:26 - deploy sophisticated looking elegant and
01:28 - enterprise-grade fintech applications
01:30 - with ease sencha's grid provides row and
01:33 - column operations rendering and
01:35 - scrolling importing and exporting and
01:37 - much much more about 60 of fortune 100
01:40 - companies like apple adobe and microsoft
01:43 - rely on sencha and their javascript
01:45 - components and libraries and you can
01:47 - join them today by clicking the link in
01:49 - the description and checking out sencha
01:51 - for yourself for free thanks again to
01:53 - sencha for sponsoring this video now
01:55 - let's get into it alright so the first
01:57 - question i told you i would answer is
01:59 - what is the minimum amount of time you
02:00 - should spend coding in a day now i just
02:03 - want to say that this doesn't really
02:04 - apply to people that only have maybe 20
02:06 - or 30 minutes to code and they're kind
02:08 - of fitting coding into whatever else
02:10 - they're doing i'm really talking about
02:12 - people where their full-time job or
02:14 - their full-time thing is writing code
02:16 - and they're trying to determine if it's
02:18 - worth it to even begin coding based on
02:20 - the amount of time that they're going to
02:22 - have now this really applies to me
02:24 - because i have a bunch of other stuff
02:25 - that i need to do usually when i'm
02:27 - writing code and so i need to decide if
02:29 - you know i only have an hour or an hour
02:30 - and a half if it's actually worth my
02:32 - time to get in and start coding as
02:34 - opposed to doing some other tasks so
02:36 - with that said really for me i think
02:39 - that a decent minimum amount of time to
02:41 - code is about an hour or an hour and a
02:43 - half now i know that might seem like a
02:45 - lot but really for me i find that i
02:47 - can't start being productive in a code
02:49 - base or in a coding session until i
02:52 - spend about an hour kind of getting into
02:54 - it getting my mind into that flow state
02:56 - you know getting more familiar with the
02:58 - code reminding myself of some of the
03:00 - logic and stuff that i may have maybe
03:02 - forgotten from the past day or that i
03:04 - need to conceptualize before i can start
03:06 - actually writing something and for me
03:08 - really between 60 and 90 minutes is
03:10 - usually how long it takes before i start
03:13 - really getting productive you know being
03:15 - more fluent on the keyboard i kind of
03:17 - know what i'm doing and i'm actually
03:19 - writing a good amount of code in the
03:21 - time past that so that's what i'm gonna
03:23 - say for a minimum amount of time at
03:24 - least for me for some of you it may only
03:26 - take five or ten minutes for some of you
03:28 - it may take two hours you do need to
03:30 - figure that out but usually i won't
03:32 - actually start doing any coding unless i
03:34 - know i'm going to have a minimum of an
03:36 - hour maybe even 90 minutes to be able to
03:38 - get something done because again until i
03:40 - get to that hour mark i'm usually not
03:42 - being very productive and i'm just not
03:44 - yet in that flow state which as we all
03:46 - know is super important when it comes to
03:48 - coding because you have to be very
03:50 - focused to really be productive and get
03:52 - a lot of non-buggy and accurate code out
03:55 - so let me know in the comments if you
03:56 - guys agree with this do you think that's
03:58 - a decent minimum how long does it take
04:00 - you to get into your flow state and when
04:02 - do you start to really feel productive
04:04 - when you're writing code alright so now
04:05 - we'll move on to question number two
04:07 - which is what is the maximum amount of
04:09 - time that you should start coding so as
04:11 - i stated before usually i start to get
04:13 - productive and actually kind of do a lot
04:16 - of work as soon as we get to that 60 to
04:18 - 90 minute mark now once i get to that
04:20 - point i'm usually quite productive for
04:22 - two to three hours before i start to see
04:25 - any kind of drop off in the productivity
04:27 - so you really have at least i really
04:29 - have you know a solid three or four
04:31 - hours per day where i'm getting a ton of
04:33 - code out this is good code it's high
04:35 - quality i'm not tired yet and i'm
04:38 - confident in what i'm right now as soon
04:40 - as i start to get past three or four
04:42 - hours so i'm at let's say the four hour
04:44 - mark from what i've started to code
04:45 - usually i'm okay i can still write some
04:47 - decent code my productivity doesn't fall
04:49 - a ton but i do start to see a drop off
04:52 - and every kind of hour past that four
04:54 - hour mark if i was trying to quantify
04:56 - this i'd say i'd be maybe 10 or 15
04:58 - percent less productive so by the time
05:00 - i'm getting to maybe seven or eight
05:02 - hours of coding i'm now at a point where
05:04 - i'm maybe at half the productivity i was
05:07 - a few hours ago and at that point i
05:09 - don't really find it worth it to
05:10 - continue coding unless i really need to
05:13 - get something done because again i'm not
05:15 - being very productive and my time is
05:17 - probably better spent in a more low
05:19 - effort type of task that doesn't require
05:21 - the amount of focus that coding and
05:23 - working in kind of a large complicated
05:25 - code base does so for me i really think
05:28 - that a decent maximum for writing code
05:30 - in a day especially if you're not taking
05:32 - a major break in between coding sessions
05:34 - is between six to seven hours now that
05:36 - might even be a lot i'm sure many of you
05:38 - by the time you get to even three hours
05:40 - or four hours are probably burning out
05:42 - already you've probably exerted a ton of
05:45 - focus a ton of you know muscle brain
05:47 - power uh and you're getting tired at
05:49 - that point and that's totally reasonable
05:51 - for me i'll usually still kind of push
05:53 - forward even if i'm being a little less
05:55 - productive just so i can get some more
05:57 - code out and that's why i usually try to
05:59 - cut my sessions at again kind of that
06:01 - six seven maybe eight hour mark
06:03 - depending on the day and depending on
06:04 - how much i need to get done now all of
06:06 - this does change a little bit if you are
06:08 - taking breaks throughout when you're
06:10 - coding and depending on the length of
06:12 - that break right for example probably
06:14 - the best days i have coding or when i
06:16 - wake up nice and early maybe 7 a.m start
06:19 - coding by 7 30 i'm kind of into it by 8
06:22 - 30 and i have a nice three hours of
06:24 - productivity that brings me until about
06:26 - noon and then i take like a one or two
06:28 - hour break i'll have lunch maybe watch a
06:30 - few videos maybe do something really low
06:32 - effort that doesn't require a ton of
06:33 - thinking and then jump back into coding
06:36 - at 2 2 30 and code until maybe 6 or 7 pm
06:39 - which at that point i would then stop
06:40 - for the day and do whatever i'm gonna do
06:43 - those are when i'm the most productive i
06:44 - have a really solid break enough to kind
06:47 - of refresh the brain
06:48 - and to maybe even have a nap or
06:50 - something so i'm no longer kind of
06:51 - exhausted or burnt out from the coding
06:53 - session so that is what i feel like for
06:55 - the maximum let's go with you know seven
06:57 - hours just to kind of give a definitive
07:00 - answer here again i know many of you are
07:01 - probably going to be before that number
07:03 - but if we're picking an absolute maximum
07:05 - for me i think that's a really solid
07:07 - place to kind of stop especially if i've
07:09 - only been taking a short you know five
07:11 - or ten minute breaks uh and not had kind
07:13 - of this large lunch break or this large
07:15 - time to kind of regroup regenerate and
07:18 - get back into the coding all right so
07:20 - now that i've answered those two
07:21 - questions i will answer the final
07:22 - question which is what is the ideal
07:24 - amount of time to spend coding in a day
07:27 - now my answer for this is going to be
07:29 - between five and six hours now for a lot
07:32 - of people i have a feeling they're gonna
07:34 - say something between three or four or
07:35 - between four and five for me personally
07:38 - i find that five to six is really good
07:40 - and i'm getting quite a bit of work done
07:42 - while still staying productive and not
07:44 - really burning myself out or being too
07:46 - fatigued so let me just walk through
07:48 - kind of why i came up with that number
07:50 - so as i said before a really kind of
07:52 - definitive minimum for me is about an
07:53 - hour i'm not going to write any code
07:55 - unless i have at least an hour to get
07:56 - some stuff done and once i get to that
07:58 - hour mark i'm usually fully in the code
08:00 - base i'm very focused i'm at my maximum
08:03 - productivity i'm usually able to
08:05 - maintain that productivity level so
08:06 - let's say a hundred percent for between
08:08 - three to four hours so by the time i'm
08:10 - getting to four four and a half hours
08:12 - there is some drop-off in productivity
08:14 - for me that i notice i start to get a
08:16 - bit tired i'm less focused it requires
08:18 - maybe more energy or more thinking to
08:20 - solve some complicated problems however
08:23 - i'm still probably at eighty percent 75
08:26 - 70 productivity and to me it's still
08:28 - worth it to keep working at that point
08:30 - it's not until i get to that six hour
08:33 - mark where i start to see a more
08:34 - significant drop off and by the time i'm
08:36 - at seven eight etc i'm now at maybe 60
08:40 - 50 productivity and at that point my
08:42 - time is probably better spent doing
08:44 - something else that's not as intense
08:47 - maybe as coding not as uh you know focus
08:50 - intensive and uh i would then go and do
08:52 - that now as i said before this really
08:55 - all changes based on the way that you're
08:56 - taking breaks for me personally when i'm
08:59 - in my flow state when i'm really coding
09:01 - and nice and focused i don't like to
09:02 - take breaks i like to just power through
09:04 - sometimes i won't even eat lunch i'll
09:06 - just go because i really want to get
09:08 - everything done and i know that if even
09:10 - i take a five or ten minute break
09:12 - especially if i don't have a bug or
09:13 - something in my pro program i could lose
09:16 - complete focus and it might take me
09:17 - another few minutes to get back into the
09:19 - code base now i know some other people
09:21 - are completely the opposite they're
09:23 - really good at taking you know five
09:24 - minute breaks every half an hour or
09:26 - something like that that helps them
09:28 - focus that helps them you know stay
09:30 - motivated in the coding and that's what
09:32 - works for them for me i like to just
09:34 - power through and kind of go as long as
09:36 - i can until my efficiency starts to
09:38 - really drop off maybe i take one or two
09:40 - small breaks in that time but generally
09:42 - i'm coding the entire time until i'm
09:45 - just too fatigued or my productivity is
09:47 - too low to kind of warrant or justify
09:49 - going forward so there you go that is my
09:51 - answer the ideal amount of time again is
09:53 - going to be about six hours at least for
09:55 - me i think for many of you it's probably
09:57 - gonna be closer to four to five and i
09:59 - just want to give you kind of something
10:01 - you can look at if you want to see some
10:03 - real evidence of this or antidotal
10:04 - evidence of this so i've done a lot of
10:06 - coding live streams on this channel i've
10:08 - done some that are four hours long i've
10:10 - done some that are eight hours long i've
10:11 - done 10 i've done 12 i've done 18 hours
10:14 - and in those streams it's a very
10:15 - interesting kind of psychological
10:17 - experiment to watch me in the first
10:19 - let's say half an hour to watch me at
10:21 - the three hour mark and then to watch me
10:23 - at like the 10 or 11 hour mark you can
10:25 - just see by the time i'm past eight
10:27 - hours i'm completely exhausted i'm not
10:30 - as motivated as i was before i'm getting
10:32 - really very little work done i'm having
10:35 - all kinds of bugs in trouble i'm getting
10:37 - very frustrated it's very difficult for
10:39 - me to communicate especially when i'm
10:40 - trying to talk to like a live chat while
10:42 - i'm coding whereas you go to like the
10:44 - two or three hour mark and it looks like
10:47 - i'm like super energized you know i'm
10:48 - talking all the time i'm going very fast
10:51 - i'm coding like you know very quickly
10:53 - compared to later in the uh the live
10:55 - stream and it's always funny for me to
10:57 - go back and kind of reference those
10:58 - different points and it reminds me that
11:00 - hey once you get to this point it's
11:02 - really not worth it to continue and of
11:04 - course i'm still going to do these live
11:06 - streams they're fun you guys enjoy them
11:07 - and it's an interesting kind of coding
11:09 - challenge but i would never recommend to
11:11 - anyone coding for longer than eight
11:13 - hours at a time unless they had some
11:15 - massive deadline that they really needed
11:17 - to get done so with that said i do think
11:18 - i'm gonna wrap up the video here i am
11:20 - very curious to hear what you guys think
11:22 - about this i have a feeling a lot of you
11:24 - are probably gonna disagree with me on
11:26 - the ideal amount of time to code that's
11:28 - why i tried to preface many times in
11:30 - this video that everything i'm saying is
11:31 - really just from my experience and kind
11:33 - of the way that i feel about it so
11:35 - please do leave a comment down below let
11:37 - me know what your ideal amount of time
11:39 - to code is when you feel most productive
11:41 - and i hope you enjoyed this video if you
11:43 - did make sure to leave a like subscribe
11:45 - to the channel and i will see you in
11:46 - another one
11:49 - [Music]

Cleaned transcript:

so recently i've been spending quite a bit of time writing code and much less time filming videos and i've noticed that the amount of hours i spend coding really changes the amount of productivity or efficiency i'm getting in those hours what i mean by that is if i spend say 10 11 12 hours coding i'm not necessarily getting as much done per hour as i would if i was only spending three or four now i know that seems obvious but i think there's a really good sweet spot that i've discovered over the past few weeks i'm going to share that with you in this video in fact what specifically i'm going to do here is try to answer the following questions what's the minimum amount of time you should spend coding what's the maximum amount of time you should spend coding and what is that sweet spot what is kind of the ideal amount of time to spend per day working on some coding project now of course this won't be one size fits all this is really just from my experience and what i've noticed and i'd love to hear your thoughts on this in the comments down below now one other thing i've recently realized is that i always have about a one minute intro and at this point in time i share with you the sponsor of this video before we get started i need to thank sencha for sponsoring this video sencha provides the fastest javascript grid and over 140 highperforming ui components that you can use to build stunning applications with sencha you can lower your maintenance costs build apps faster and deploy sophisticated looking elegant and enterprisegrade fintech applications with ease sencha's grid provides row and column operations rendering and scrolling importing and exporting and much much more about 60 of fortune 100 companies like apple adobe and microsoft rely on sencha and their javascript components and libraries and you can join them today by clicking the link in the description and checking out sencha for yourself for free thanks again to sencha for sponsoring this video now let's get into it alright so the first question i told you i would answer is what is the minimum amount of time you should spend coding in a day now i just want to say that this doesn't really apply to people that only have maybe 20 or 30 minutes to code and they're kind of fitting coding into whatever else they're doing i'm really talking about people where their fulltime job or their fulltime thing is writing code and they're trying to determine if it's worth it to even begin coding based on the amount of time that they're going to have now this really applies to me because i have a bunch of other stuff that i need to do usually when i'm writing code and so i need to decide if you know i only have an hour or an hour and a half if it's actually worth my time to get in and start coding as opposed to doing some other tasks so with that said really for me i think that a decent minimum amount of time to code is about an hour or an hour and a half now i know that might seem like a lot but really for me i find that i can't start being productive in a code base or in a coding session until i spend about an hour kind of getting into it getting my mind into that flow state you know getting more familiar with the code reminding myself of some of the logic and stuff that i may have maybe forgotten from the past day or that i need to conceptualize before i can start actually writing something and for me really between 60 and 90 minutes is usually how long it takes before i start really getting productive you know being more fluent on the keyboard i kind of know what i'm doing and i'm actually writing a good amount of code in the time past that so that's what i'm gonna say for a minimum amount of time at least for me for some of you it may only take five or ten minutes for some of you it may take two hours you do need to figure that out but usually i won't actually start doing any coding unless i know i'm going to have a minimum of an hour maybe even 90 minutes to be able to get something done because again until i get to that hour mark i'm usually not being very productive and i'm just not yet in that flow state which as we all know is super important when it comes to coding because you have to be very focused to really be productive and get a lot of nonbuggy and accurate code out so let me know in the comments if you guys agree with this do you think that's a decent minimum how long does it take you to get into your flow state and when do you start to really feel productive when you're writing code alright so now we'll move on to question number two which is what is the maximum amount of time that you should start coding so as i stated before usually i start to get productive and actually kind of do a lot of work as soon as we get to that 60 to 90 minute mark now once i get to that point i'm usually quite productive for two to three hours before i start to see any kind of drop off in the productivity so you really have at least i really have you know a solid three or four hours per day where i'm getting a ton of code out this is good code it's high quality i'm not tired yet and i'm confident in what i'm right now as soon as i start to get past three or four hours so i'm at let's say the four hour mark from what i've started to code usually i'm okay i can still write some decent code my productivity doesn't fall a ton but i do start to see a drop off and every kind of hour past that four hour mark if i was trying to quantify this i'd say i'd be maybe 10 or 15 percent less productive so by the time i'm getting to maybe seven or eight hours of coding i'm now at a point where i'm maybe at half the productivity i was a few hours ago and at that point i don't really find it worth it to continue coding unless i really need to get something done because again i'm not being very productive and my time is probably better spent in a more low effort type of task that doesn't require the amount of focus that coding and working in kind of a large complicated code base does so for me i really think that a decent maximum for writing code in a day especially if you're not taking a major break in between coding sessions is between six to seven hours now that might even be a lot i'm sure many of you by the time you get to even three hours or four hours are probably burning out already you've probably exerted a ton of focus a ton of you know muscle brain power uh and you're getting tired at that point and that's totally reasonable for me i'll usually still kind of push forward even if i'm being a little less productive just so i can get some more code out and that's why i usually try to cut my sessions at again kind of that six seven maybe eight hour mark depending on the day and depending on how much i need to get done now all of this does change a little bit if you are taking breaks throughout when you're coding and depending on the length of that break right for example probably the best days i have coding or when i wake up nice and early maybe 7 a.m start coding by 7 30 i'm kind of into it by 8 30 and i have a nice three hours of productivity that brings me until about noon and then i take like a one or two hour break i'll have lunch maybe watch a few videos maybe do something really low effort that doesn't require a ton of thinking and then jump back into coding at 2 2 30 and code until maybe 6 or 7 pm which at that point i would then stop for the day and do whatever i'm gonna do those are when i'm the most productive i have a really solid break enough to kind of refresh the brain and to maybe even have a nap or something so i'm no longer kind of exhausted or burnt out from the coding session so that is what i feel like for the maximum let's go with you know seven hours just to kind of give a definitive answer here again i know many of you are probably going to be before that number but if we're picking an absolute maximum for me i think that's a really solid place to kind of stop especially if i've only been taking a short you know five or ten minute breaks uh and not had kind of this large lunch break or this large time to kind of regroup regenerate and get back into the coding all right so now that i've answered those two questions i will answer the final question which is what is the ideal amount of time to spend coding in a day now my answer for this is going to be between five and six hours now for a lot of people i have a feeling they're gonna say something between three or four or between four and five for me personally i find that five to six is really good and i'm getting quite a bit of work done while still staying productive and not really burning myself out or being too fatigued so let me just walk through kind of why i came up with that number so as i said before a really kind of definitive minimum for me is about an hour i'm not going to write any code unless i have at least an hour to get some stuff done and once i get to that hour mark i'm usually fully in the code base i'm very focused i'm at my maximum productivity i'm usually able to maintain that productivity level so let's say a hundred percent for between three to four hours so by the time i'm getting to four four and a half hours there is some dropoff in productivity for me that i notice i start to get a bit tired i'm less focused it requires maybe more energy or more thinking to solve some complicated problems however i'm still probably at eighty percent 75 70 productivity and to me it's still worth it to keep working at that point it's not until i get to that six hour mark where i start to see a more significant drop off and by the time i'm at seven eight etc i'm now at maybe 60 50 productivity and at that point my time is probably better spent doing something else that's not as intense maybe as coding not as uh you know focus intensive and uh i would then go and do that now as i said before this really all changes based on the way that you're taking breaks for me personally when i'm in my flow state when i'm really coding and nice and focused i don't like to take breaks i like to just power through sometimes i won't even eat lunch i'll just go because i really want to get everything done and i know that if even i take a five or ten minute break especially if i don't have a bug or something in my pro program i could lose complete focus and it might take me another few minutes to get back into the code base now i know some other people are completely the opposite they're really good at taking you know five minute breaks every half an hour or something like that that helps them focus that helps them you know stay motivated in the coding and that's what works for them for me i like to just power through and kind of go as long as i can until my efficiency starts to really drop off maybe i take one or two small breaks in that time but generally i'm coding the entire time until i'm just too fatigued or my productivity is too low to kind of warrant or justify going forward so there you go that is my answer the ideal amount of time again is going to be about six hours at least for me i think for many of you it's probably gonna be closer to four to five and i just want to give you kind of something you can look at if you want to see some real evidence of this or antidotal evidence of this so i've done a lot of coding live streams on this channel i've done some that are four hours long i've done some that are eight hours long i've done 10 i've done 12 i've done 18 hours and in those streams it's a very interesting kind of psychological experiment to watch me in the first let's say half an hour to watch me at the three hour mark and then to watch me at like the 10 or 11 hour mark you can just see by the time i'm past eight hours i'm completely exhausted i'm not as motivated as i was before i'm getting really very little work done i'm having all kinds of bugs in trouble i'm getting very frustrated it's very difficult for me to communicate especially when i'm trying to talk to like a live chat while i'm coding whereas you go to like the two or three hour mark and it looks like i'm like super energized you know i'm talking all the time i'm going very fast i'm coding like you know very quickly compared to later in the uh the live stream and it's always funny for me to go back and kind of reference those different points and it reminds me that hey once you get to this point it's really not worth it to continue and of course i'm still going to do these live streams they're fun you guys enjoy them and it's an interesting kind of coding challenge but i would never recommend to anyone coding for longer than eight hours at a time unless they had some massive deadline that they really needed to get done so with that said i do think i'm gonna wrap up the video here i am very curious to hear what you guys think about this i have a feeling a lot of you are probably gonna disagree with me on the ideal amount of time to code that's why i tried to preface many times in this video that everything i'm saying is really just from my experience and kind of the way that i feel about it so please do leave a comment down below let me know what your ideal amount of time to code is when you feel most productive and i hope you enjoyed this video if you did make sure to leave a like subscribe to the channel and i will see you in another one
