With timestamps:

00:00 - hey guys and welcome to this second
00:02 - video in my kevie programming tutorial
00:05 - series whatever you want to call it so
00:07 - today we're gonna be working more with
00:08 - the UI so actually building I don't know
00:11 - like a few we're gonna have some labels
00:12 - you know some text boxes maybe a button
00:14 - or two I'm gonna show you how we can do
00:15 - that in the next videos we get into some
00:17 - more complex stuff but for now we're
00:18 - just gonna go through like the basics of
00:20 - how we set up a window how we can get a
00:22 - few different widgets and stuff in there
00:24 - and all that cool stuff so we've already
00:26 - imported label up here we need to import
00:29 - a few other things before we actually
00:30 - get started so I'm gonna say from Kibby
00:32 - dot UI X dot and we're actually the site
00:35 - grid layout we're gonna import grid
00:37 - layout again you should be noticing this
00:40 - trend here we have the capital right for
00:41 - the class name and we're also gonna
00:43 - import text input so from kibbe dot u IX
00:48 - dot text input import text input now
00:53 - what I want to build here as our first
00:56 - little application is just something to
00:58 - ask the user for their name their last
01:00 - name and their email in the next video
01:02 - we'll add a button to that and we'll let
01:04 - it we'll get that information and check
01:06 - if it's like valid or whatnot or do some
01:08 - stuff with that okay I'm sorry excuse me
01:10 - so essentially what we were doing here
01:13 - is when we wanted to draw something to
01:14 - the screen we were just returning what
01:16 - we wanted to draw which was just a label
01:18 - right now this is probably not very
01:21 - practical if we wanted to draw two
01:23 - labels well how would we do that
01:25 - right so we don't we don't know so what
01:28 - we have to do actually is we're going to
01:29 - create a new class and this class is
01:31 - gonna hold all of our kind of design
01:33 - elements all right so it's not gonna
01:35 - have the logic it's just gonna hold like
01:36 - buttons widgets text whatnot okay so I'm
01:39 - gonna say class I'll just say my my grid
01:42 - for right now okay we call whatever you
01:44 - want and we need to inherit from
01:46 - something so in Kivi we actually have
01:49 - these things called layouts now there's
01:51 - different kind of layouts there's like
01:52 - box layout grid layout there's a bunch
01:55 - of other ones but right now we're gonna
01:56 - use a grid layout and a grid layout it
01:58 - essentially has well grids that we can
02:00 - place items into so we have like a
02:02 - certain amount of columns a certain
02:04 - amount of rows and then based on that
02:05 - when we start adding items to the grid
02:07 - they're gonna go in accordingly so
02:09 - they're gonna start at the top left and
02:10 - they're gonna go if we only had two
02:11 - columns if we added three items
02:13 - that we'd have like one here one here
02:16 - and one down here and you'll see what I
02:17 - mean as we kind of get going through
02:20 - this okay so that's the first layer
02:21 - we're gonna use this grid layout we'll
02:23 - talk about a few other layouts later on
02:24 - okay so grid layout now inside of here
02:27 - what we need to do is need to create an
02:29 - initialization so that when we create an
02:31 - instance of this we set it up somehow so
02:33 - what we actually have to do to do this
02:35 - is define underscore underscore omit
02:37 - underscore underscore I mean of self we
02:39 - actually have to have a parameter which
02:40 - stands for key words okay so these two
02:43 - stars just stand for we can take an
02:46 - infinite amount of key words so we don't
02:47 - know how many we're expecting we could
02:49 - get seven we could get twelve we could
02:51 - get done right so this just says we're
02:53 - gonna handle as many as as come in and
02:56 - they'll come in as a list and we can
02:57 - parse through them all right okay so
02:59 - that's how we do that now what we
03:01 - actually need to do is need to call this
03:03 - grid layouts constructor so when we if
03:06 - we're inheriting from it we need to
03:07 - first call that instructor and this is
03:09 - again goes with object-oriented
03:10 - programming if you don't understand this
03:12 - please go watch my videos on
03:13 - object-oriented programming again
03:15 - there'll be a link in the description so
03:16 - super dot underscore underscore and Nitz
03:18 - underscore underscore and then here
03:21 - we're gonna do star star Korg's but
03:24 - inside of the super we need to type
03:26 - something else we're gonna type my grid
03:29 - okay and then we're gonna type self and
03:33 - I'm not gonna talk exactly about what
03:35 - this is kind of doing but essentially
03:36 - we're just calling the the grid layouts
03:39 - constructor giving it a few parameters
03:40 - and just setting it up so we're ready to
03:43 - go so now in here we're also gonna
03:44 - change a property that is that belongs
03:47 - to grid layout so we're gonna say
03:49 - self-thought calls equals two now what
03:52 - this stands for is the amount of columns
03:53 - equal to two now obviously play with
03:56 - this if you want to have one column one
03:57 - have four columns I think you guys know
03:59 - how to change that number accordingly so
04:01 - now instead of actually returning this
04:04 - label here we're gonna return my grid
04:07 - now the reason we can do this and if wow
04:10 - I really butchered that typing is
04:12 - because when we inherit from grid layout
04:15 - we get the properties of a grid we get
04:18 - the fact that it has like a width a
04:20 - height as columns as widgets attached to
04:22 - it so when we return this so my grid
04:25 - from the
04:27 - like this build method here we can
04:28 - actually draw all the widgets and
04:30 - everything that belonged to my grid
04:32 - which is inherited from grid layout okay
04:34 - and that's the beauty of kind of
04:35 - inheritance and object-oriented
04:36 - programming when we're doing something
04:37 - like creating a GUI or graphical user
04:39 - interface okay so next thing we need to
04:42 - do is we need to add a few widgets so to
04:44 - do this we're gonna start by just adding
04:45 - a label widget then we'll add a text
04:47 - input widget and we'll go through what
04:48 - all these do okay so we gonna say
04:49 - self-thought add widget again the reason
04:51 - we can call this add widget is because
04:53 - that is a part of grid layout class and
04:56 - somewhere in there there's a method
04:57 - that's called add widget that's why we
04:59 - can do that
04:59 - so in here we'll do label and then for
05:01 - the text of our label we'll just say
05:03 - name so I'm gonna do like name last name
05:06 - and email and those are gonna be the
05:08 - kind of things that I have in my window
05:10 - and you guys will see what I mean in a
05:11 - second okay the next thing we're gonna
05:12 - do is gonna say self dot name is equal
05:15 - to and this is a bit different than the
05:17 - other one we're going to say text input
05:19 - okay and we're gonna say multi-line
05:23 - equals false now the reason we're doing
05:25 - this obviously is because it'll default
05:28 - to have multiple lines in our text input
05:30 - box but we only want one and that's
05:33 - obviously because we're just getting a
05:34 - name and we don't want to select Cascade
05:35 - down right so we'll do that okay next we
05:39 - need to add this text input widget to
05:41 - our widgets so we'll say self-thought
05:44 - add widget and here we'll just do self
05:46 - dot name and that's all we need to do
05:48 - right now to see a name a text input box
05:52 - and then just like add these widgets the
05:55 - screen so actually let's just run this
05:56 - right now and see what's happening if I
05:58 - made any mistakes or not
05:59 - okay so awesome so right now I know this
06:01 - doesn't look really like a text box but
06:03 - you can see that if I click on it I can
06:04 - actually start typing whatever I want in
06:06 - here so this is our label this is our
06:08 - text input box so I can resize this and
06:10 - you can see that it'll automatically and
06:12 - dynamically change if I go to something
06:13 - like this you can see name and then we
06:15 - have that so we can type it like that
06:18 - and this is working great okay so we've
06:20 - done that so let's add a few more
06:22 - widgets into our box and see how that
06:24 - works so we'll just actually copy these
06:26 - because we're gonna do the same kind of
06:28 - thing so we'll just copy these here and
06:30 - let's just change a few names so instead
06:32 - of name we'll say last name so maybe it
06:35 - will change this to first name first
06:38 - name last name
06:38 - we'll make our variable last
06:41 - and then obviously when we're adding it
06:43 - we're gonna have to do last name here as
06:45 - well okay so this one let's grab an
06:48 - email so let's say this is kind of like
06:50 - a forum like they're gonna type in their
06:52 - name their last name and the email and
06:54 - maybe they'll be a part of like an email
06:55 - list or something I don't know we can
06:56 - you guys can imagine whatever you want
06:58 - for this and email and now let's run
07:01 - this and see what it is looking like
07:03 - okay so awesome first name last name
07:05 - email and we can see that we have resize
07:09 - ability and we can type into all these
07:11 - text boxes if you hit enter it actually
07:12 - escapes them because it's only one line
07:14 - and you can't go down to another line
07:16 - right so that's awesome okay so that is
07:19 - great that's how we build kind of this
07:21 - so now let's go to actually add like a
07:23 - button down here or let's see what
07:25 - happens when we mess around with the
07:26 - amount of columns and let's see what we
07:28 - can kind of do to play with this so if
07:30 - we want to change the amount of columns
07:31 - so let's say six columns here okay
07:33 - and let's run this and see what we get
07:35 - now well would you look at this now
07:37 - everything is showing up in the same
07:40 - column so this might not be exactly the
07:42 - way we wanted it to look but this is
07:44 - what happens when you add six columns
07:46 - right it automatically makes it one row
07:47 - and it just adds everything in there
07:49 - what happens if we do three columns now
07:52 - it's gonna be a bit messed up and you
07:54 - can see we're getting like a
07:54 - checkerboard pattern because we this is
07:56 - the way that it works so instead of us
07:58 - in other language you have to specify
08:00 - like what column and what row you want
08:02 - everything to being Kibby just
08:03 - automatically does it for us and it'll
08:05 - just figure out those things so if we do
08:07 - four let's try this now you can see that
08:10 - we get first name last name email and
08:12 - then it's leaving kind of a blank space
08:14 - to add something else so this is all I'm
08:16 - gonna show you guys for right now in the
08:18 - next video actually we're gonna add a
08:20 - button to this we're gonna make the
08:21 - button kind of have an event and then
08:23 - we're gonna go into the kibbeh language
08:25 - which is a design language kind of
08:26 - similar to CSS which is going to allow
08:28 - us to add some more properties to all of
08:30 - these things make things look a bit
08:31 - nicer and then we'll get into some more
08:33 - logic stuff and we're gonna keep going
08:35 - on this and hopefully be building an app
08:37 - near the end of this tutorial series if
08:39 - there's anything that I missed or
08:40 - anything you guys want to see in future
08:41 - videos that maybe I didn't talk about
08:43 - please let me know in the comments down
08:44 - below as always this tutorial will be up
08:46 - on tech with Tim net you guys can go
08:48 - look at and feel free to contact me on
08:50 - discord in Twitter
08:51 - [Music]

Cleaned transcript:

hey guys and welcome to this second video in my kevie programming tutorial series whatever you want to call it so today we're gonna be working more with the UI so actually building I don't know like a few we're gonna have some labels you know some text boxes maybe a button or two I'm gonna show you how we can do that in the next videos we get into some more complex stuff but for now we're just gonna go through like the basics of how we set up a window how we can get a few different widgets and stuff in there and all that cool stuff so we've already imported label up here we need to import a few other things before we actually get started so I'm gonna say from Kibby dot UI X dot and we're actually the site grid layout we're gonna import grid layout again you should be noticing this trend here we have the capital right for the class name and we're also gonna import text input so from kibbe dot u IX dot text input import text input now what I want to build here as our first little application is just something to ask the user for their name their last name and their email in the next video we'll add a button to that and we'll let it we'll get that information and check if it's like valid or whatnot or do some stuff with that okay I'm sorry excuse me so essentially what we were doing here is when we wanted to draw something to the screen we were just returning what we wanted to draw which was just a label right now this is probably not very practical if we wanted to draw two labels well how would we do that right so we don't we don't know so what we have to do actually is we're going to create a new class and this class is gonna hold all of our kind of design elements all right so it's not gonna have the logic it's just gonna hold like buttons widgets text whatnot okay so I'm gonna say class I'll just say my my grid for right now okay we call whatever you want and we need to inherit from something so in Kivi we actually have these things called layouts now there's different kind of layouts there's like box layout grid layout there's a bunch of other ones but right now we're gonna use a grid layout and a grid layout it essentially has well grids that we can place items into so we have like a certain amount of columns a certain amount of rows and then based on that when we start adding items to the grid they're gonna go in accordingly so they're gonna start at the top left and they're gonna go if we only had two columns if we added three items that we'd have like one here one here and one down here and you'll see what I mean as we kind of get going through this okay so that's the first layer we're gonna use this grid layout we'll talk about a few other layouts later on okay so grid layout now inside of here what we need to do is need to create an initialization so that when we create an instance of this we set it up somehow so what we actually have to do to do this is define underscore underscore omit underscore underscore I mean of self we actually have to have a parameter which stands for key words okay so these two stars just stand for we can take an infinite amount of key words so we don't know how many we're expecting we could get seven we could get twelve we could get done right so this just says we're gonna handle as many as as come in and they'll come in as a list and we can parse through them all right okay so that's how we do that now what we actually need to do is need to call this grid layouts constructor so when we if we're inheriting from it we need to first call that instructor and this is again goes with objectoriented programming if you don't understand this please go watch my videos on objectoriented programming again there'll be a link in the description so super dot underscore underscore and Nitz underscore underscore and then here we're gonna do star star Korg's but inside of the super we need to type something else we're gonna type my grid okay and then we're gonna type self and I'm not gonna talk exactly about what this is kind of doing but essentially we're just calling the the grid layouts constructor giving it a few parameters and just setting it up so we're ready to go so now in here we're also gonna change a property that is that belongs to grid layout so we're gonna say selfthought calls equals two now what this stands for is the amount of columns equal to two now obviously play with this if you want to have one column one have four columns I think you guys know how to change that number accordingly so now instead of actually returning this label here we're gonna return my grid now the reason we can do this and if wow I really butchered that typing is because when we inherit from grid layout we get the properties of a grid we get the fact that it has like a width a height as columns as widgets attached to it so when we return this so my grid from the like this build method here we can actually draw all the widgets and everything that belonged to my grid which is inherited from grid layout okay and that's the beauty of kind of inheritance and objectoriented programming when we're doing something like creating a GUI or graphical user interface okay so next thing we need to do is we need to add a few widgets so to do this we're gonna start by just adding a label widget then we'll add a text input widget and we'll go through what all these do okay so we gonna say selfthought add widget again the reason we can call this add widget is because that is a part of grid layout class and somewhere in there there's a method that's called add widget that's why we can do that so in here we'll do label and then for the text of our label we'll just say name so I'm gonna do like name last name and email and those are gonna be the kind of things that I have in my window and you guys will see what I mean in a second okay the next thing we're gonna do is gonna say self dot name is equal to and this is a bit different than the other one we're going to say text input okay and we're gonna say multiline equals false now the reason we're doing this obviously is because it'll default to have multiple lines in our text input box but we only want one and that's obviously because we're just getting a name and we don't want to select Cascade down right so we'll do that okay next we need to add this text input widget to our widgets so we'll say selfthought add widget and here we'll just do self dot name and that's all we need to do right now to see a name a text input box and then just like add these widgets the screen so actually let's just run this right now and see what's happening if I made any mistakes or not okay so awesome so right now I know this doesn't look really like a text box but you can see that if I click on it I can actually start typing whatever I want in here so this is our label this is our text input box so I can resize this and you can see that it'll automatically and dynamically change if I go to something like this you can see name and then we have that so we can type it like that and this is working great okay so we've done that so let's add a few more widgets into our box and see how that works so we'll just actually copy these because we're gonna do the same kind of thing so we'll just copy these here and let's just change a few names so instead of name we'll say last name so maybe it will change this to first name first name last name we'll make our variable last and then obviously when we're adding it we're gonna have to do last name here as well okay so this one let's grab an email so let's say this is kind of like a forum like they're gonna type in their name their last name and the email and maybe they'll be a part of like an email list or something I don't know we can you guys can imagine whatever you want for this and email and now let's run this and see what it is looking like okay so awesome first name last name email and we can see that we have resize ability and we can type into all these text boxes if you hit enter it actually escapes them because it's only one line and you can't go down to another line right so that's awesome okay so that is great that's how we build kind of this so now let's go to actually add like a button down here or let's see what happens when we mess around with the amount of columns and let's see what we can kind of do to play with this so if we want to change the amount of columns so let's say six columns here okay and let's run this and see what we get now well would you look at this now everything is showing up in the same column so this might not be exactly the way we wanted it to look but this is what happens when you add six columns right it automatically makes it one row and it just adds everything in there what happens if we do three columns now it's gonna be a bit messed up and you can see we're getting like a checkerboard pattern because we this is the way that it works so instead of us in other language you have to specify like what column and what row you want everything to being Kibby just automatically does it for us and it'll just figure out those things so if we do four let's try this now you can see that we get first name last name email and then it's leaving kind of a blank space to add something else so this is all I'm gonna show you guys for right now in the next video actually we're gonna add a button to this we're gonna make the button kind of have an event and then we're gonna go into the kibbeh language which is a design language kind of similar to CSS which is going to allow us to add some more properties to all of these things make things look a bit nicer and then we'll get into some more logic stuff and we're gonna keep going on this and hopefully be building an app near the end of this tutorial series if there's anything that I missed or anything you guys want to see in future videos that maybe I didn't talk about please let me know in the comments down below as always this tutorial will be up on tech with Tim net you guys can go look at and feel free to contact me on discord in Twitter
