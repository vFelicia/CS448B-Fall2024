00:01 - okay
00:03 - look at that we're live and look at all
00:04 - of our attendees filing in city Lance hi
00:09 - everyone how's it going go ahead and try
00:14 - it open the chat we have the Q&A panel
00:19 - as well here we go well uh I'll take a
00:26 - few minutes to let people file in here
00:29 - and then we'll go ahead get started my
00:31 - name is Alex Koontz curriculum developer
00:34 - academy look at that we got a question
00:37 - coming in awesome
00:40 - Kenny's that what you guys want to
00:42 - introduce yourselves hey guys I'm Kenny
00:52 - I'm the Kirkland developer here at OCAD
00:54 - me as well and we're really excited to
00:56 - have you all here
00:57 - I'm seeing a lot of hellos panelists but
01:00 - feel free to say hi to everyone to watch
01:01 - a sauce yeah and folks from all over it
01:05 - looks like seeing Paris Dubrovnik South
01:09 - Africa England side Zoe I saw people
01:14 - loving your background of OMG it's full
01:16 - of stars I'm actually currently doing
01:24 - project in Keith's eyes and it's all
01:29 - about space oh yeah I've had space and
01:35 - stars on on the mind you could say oh
01:49 - yeah I also feel it's funny because my
01:52 - my headphones kind of make me a Princess
01:55 - Leia buns oh cool we have some questions
02:01 - in which lessons have you worked on yeah
02:04 - Anna Lee is a I've written a lot of the
02:07 - Python data science stuff
02:09 - Kevin's that you want to talk about what
02:11 - you guys did on yeah
02:13 - I've done a lot of random stuff I worked
02:17 - on our learn HTML learn CSS we're done
02:20 - some data science stuff we've done our
02:22 - learn Alexa course which was really fun
02:25 - I created the learn how to code course
02:29 - and code foundations pass that was
02:31 - really great and c-sharp so kind of all
02:35 - over the map yeah so we actually created
02:38 - a so that this learn from me what's the
02:42 - name of the course though learn how to
02:45 - code Morse you use a bunch of p5 in
02:48 - making like the visualizations today's
02:51 - that we used to create cool yeah so you
03:06 - can see it all in action yeah I guess
03:21 - I'm also like so in that respect that
03:22 - I've just worked a bounce between so
03:24 - many things started off working a lot in
03:27 - our learn JavaScript
03:29 - introduction to JavaScript course I've
03:34 - done learn go
03:36 - lastly learn Swift and also some phaser
03:39 - work that also uses JavaScript so well
03:43 - bursting this but I have never done p5
03:45 - yet as of today so I'm very excited to
03:48 - play the role of this student yeah I see
03:51 - I see we got a question that we're
03:52 - saying do we already need to know some
03:53 - JavaScript to do this absolutely not
03:55 - this is built for complete beginners if
03:58 - you if you know some JavaScript already
04:01 - it might it might help but totally
04:04 - totally good if you're a complete
04:05 - beginner so let's work on getting people
04:09 - into the course that we're working on in
04:11 - the chat I am going to post a link to
04:16 - the specific project that we're working
04:18 - on let's see
04:25 - so if you go to that that URL this
04:31 - should be this should be the project
04:33 - that you're working on you'll need to be
04:34 - signed into a code Khadem e account and
04:36 - so so we if you haven't signed up for a
04:42 - free code cat me account we also have a
04:43 - link to do that let's grab that link
04:51 - again the this project should be open to
04:56 - free users so if you don't have a code
04:58 - Academy account sign up for a free
04:59 - account using that link that I just I
05:02 - just posted and then go back to this
05:05 - project I see a question in the chat is
05:10 - do we have to install a lot of stuff for
05:12 - this project nope we're gonna do it all
05:14 - on code Academy and everything should be
05:16 - like pre-installed for you
05:19 - is this a custom made project yeah so
05:22 - over the past week I put together this
05:24 - project for this um for this session and
05:27 - so yeah it kind of kind of custom-made
05:30 - for a live you know sixty minute maybe
05:33 - ninety minute coding session it's not
05:36 - another question about we work with
05:38 - technical writers to build the course or
05:39 - if we mostly do them ourselves
05:41 - most of the Suffolk Academy has actually
05:43 - been created in-house but now as we try
05:46 - to expand our content library we're also
05:48 - working with other content assessed
05:51 - against other technical writers also
05:53 - some subject matter experts so yeah
05:57 - question
05:58 - I'm currently reading a we're building a
06:01 - lot of course it's on our right now and
06:04 - we're we're making a course that's about
06:08 - like linear regression and a little bit
06:10 - more like advanced in terms of like the
06:11 - math or the stats behind it and so we
06:14 - have the great author we said a grad
06:17 - student at Columbia that's working on
06:19 - that so we'll like reach out and get uh
06:20 - get subject matter experts for when we
06:23 - don't know uh don't know the material
06:28 - okay cool so I'm gonna share my screen
06:30 - which will be this project that we're
06:33 - going to be doing today
06:37 - and if people in chat could like start
06:42 - giving thumbs up set you are sitting on
06:44 - this project page that would be that
06:48 - would be great
06:50 - we won't get started once we kind of
06:52 - have a critical mass of people that are
06:55 - that are on the project page I saw a
06:58 - question from Rebecca can you advise how
07:01 - to log in if you already had the free
07:02 - the free to trial so this project should
07:05 - be free for everyone correct Alex yep
07:07 - yeah so code can be is actually entirely
07:10 - free you can always upgrade to our pro
07:13 - offerings but this project should be
07:15 - free so you can use the same email even
07:20 - if you've already gone through our free
07:21 - trial and re4 user yep and again if you
07:25 - don't have an account you should be able
07:28 - to sign up for an account and not have
07:31 - to like put a credit card down or
07:33 - anything to get a free version of an
07:35 - account and then again go to the link
07:36 - which I'll post one final time and
07:42 - that's the project that we're going to
07:44 - be working in post again just in case
07:56 - for people funneling in a little bit
07:57 - late okay cool and let's go ahead and
08:02 - get started so you should you should see
08:07 - a little bit of code and then the output
08:10 - here and we'll talk about like all the
08:12 - different programming languages that go
08:14 - together and what we're actually working
08:16 - in here but before we get started we
08:19 - want to start with just like a little
08:20 - bit of interaction and experimenting
08:22 - with the code that we already have
08:24 - so the first thing that I want people to
08:27 - do is to just change this number inside
08:29 - background from 200 to 20 and then hit
08:32 - save you should see you are visually the
08:36 - visualization update where the
08:37 - background turns blacker one of the
08:45 - things
08:45 - I really want people to I want to
08:47 - encourage people to do is totally
08:49 - experiment as we're going through this
08:50 - um like oh what happens if I change this
08:54 - first number in ellipse to ten rather
08:56 - than 100 what happens if I change it to
08:59 - 300 rather than rather than 100 right so
09:05 - really you can't basically you can't
09:07 - break things if you ever get your code
09:08 - in a state where you think it's broken
09:11 - or not working you can hit this refresh
09:13 - button down in the bottom part of the
09:15 - screen and that will send you back to
09:16 - the kind of starting state so that will
09:21 - delete all your code which might be
09:22 - scary but if but you know don't be
09:24 - afraid to play around change things up
09:26 - and go through what all of these numbers
09:28 - mean how things are working but I really
09:30 - want to encourage people to experiment
09:33 - on your own as weird as we're going
09:34 - through this okay cool so let's talk
09:39 - about what p5.js is what javascript is
09:43 - what hTML is so one thing that I want
09:47 - people to do is to take a look at the
09:50 - files that we currently have in our
09:53 - workspace you'll see three final three
09:56 - files one is called final yes that's
09:59 - kind of the final final project that
10:02 - we're going to be working towards so we
10:04 - don't need a look at that right now but
10:06 - the files that I want to look at right
10:08 - now our sketch Jas and index.html and so
10:15 - if you've ever done any sort of web
10:16 - programming before you might have heard
10:18 - of index.html and yeah I will do me
10:23 - anomaly
10:23 - screen a little bit hopefully that makes
10:25 - it a little bit better yeah right so so
10:35 - we have a HTML page and we have a dot
10:38 - J's file and so what we're doing is we
10:41 - are making a website and you know right
10:44 - now my output doesn't really look like a
10:46 - traditional website basically it's only
10:48 - this kind of canvas that I can draw this
10:50 - shape on but if I wanted to I could
10:53 - incorporate this canvas into you know
10:56 - any website that I was building where I
10:58 - could
10:58 - and you know any sort of HTML or CSS or
11:01 - any of the kind of web development stuff
11:03 - that you could learn elsewhere you could
11:05 - take the skills that you're learning
11:06 - here in this very specific like p5.js
11:10 - course and apply that to a website that
11:13 - you are making on your own so I really
11:18 - love p5.js at just a learning tool I
11:21 - think it's like it's a really
11:22 - interactive visual way to learn
11:24 - JavaScript fundamentals and so that's
11:27 - what I use it for I use it like not in a
11:29 - website type of way I used it as a
11:31 - teaching tool for fundamental
11:34 - programming topics but really what it is
11:36 - is it's part of like this JavaScript
11:38 - ecosystem where you could be embedding
11:41 - these things in in websites and HTML
11:44 - pages and all that sort of stuff so I
11:47 - know that you're a p5 expert what's your
11:50 - sense of like how p5 is used within like
11:53 - creative coding versus you know web
11:56 - design that sort of stuff sure yeah so
11:58 - p5 is actually sort of the second
12:04 - iteration a set of creative coding tools
12:06 - that originally started with processing
12:08 - so if you've heard of processing that is
12:11 - written in Java and it was started to
12:14 - get artists and educators a way to get
12:17 - into coding so it definitely comes from
12:19 - the standpoint of bright creative coding
12:22 - using it to do interesting art projects
12:24 - or anything really where you can express
12:26 - yourself creatively so p5 yeah where I'm
12:31 - most often seen it are in art projects
12:33 - but also as an educational tool so the
12:36 - New York Department of Education
12:38 - actually has a program called CS for all
12:40 - and they have a lot of curriculum
12:43 - materials for teaching students how to
12:45 - build stuff in p5 you can see things
12:48 - like data visualizations as well or just
12:52 - creating sort of like yeah fun animated
12:55 - things to add to your personal website
12:58 - people are doing really interesting
13:00 - things with the 3d aspects of creative
13:03 - coding right now as well so yeah lots of
13:06 - different applications
13:08 - before joining code Academy I taught
13:10 - high school cs4 for a while
13:12 - when I used I used p5 in like all my
13:14 - intro courses and even some of the most
13:17 - advanced courses I have some some
13:20 - projects for my students that I want to
13:22 - demo at the end of this course if we
13:24 - have time because you really can do
13:27 - really really cool things with p5 and I
13:30 - was proud of them and want to show it
13:31 - off but anyways let's get back to
13:36 - talking about kind of this setup here
13:39 - which is kind of the most boring part of
13:41 - this so we'll try to get through the
13:42 - setup quickly and then we can get on to
13:44 - making some interactive drawings if we
13:47 - dig into this that looks really quick
13:51 - there's also a poll going on so for
13:53 - people who are super focused on what you
13:55 - have to say if you just have a chance
13:56 - select an option there in the poll so
13:58 - that we can see the range of experiences
14:00 - of everyone chimed in that would be
14:02 - fantastic
14:03 - pull yeah it looks like already we have
14:05 - most people have never used p5 before
14:07 - which is really cool and we will link to
14:09 - awesome awesome p5 resources as well I
14:13 - know both Zoe and I really really love
14:16 - p5 and so it's exciting to see you know
14:18 - 94% of people that have never used it
14:20 - and are being introduced to it all you
14:22 - guys have to sell it on me today before
14:28 - so he will be playing the role of the
14:31 - students ok so going back to looking at
14:34 - this index on HTML file which basically
14:37 - we are going to ignore for 95% of the
14:40 - session and we're just going to talk
14:41 - about it here in in the setup you'll see
14:44 - that me we have a we're connecting the
14:48 - HTML file to a file called sketch j/s
14:51 - that was the first file that we were
14:53 - that we were working in where there's
14:56 - like references to an ellipse and a
14:57 - background and all of these kind of you
15:00 - know visual elements that this is what's
15:02 - producing the canvas over here and so
15:06 - basically all the HTML is doing right
15:08 - now is saying connect my HTML page to
15:11 - that specific JavaScript file if you
15:14 - want a preview of where we're going you
15:17 - can switch this file name which you'd
15:19 - finally us and run your code and what
15:24 - that does is that's going to switch
15:26 - the the file that the HTML the HTML file
15:30 - is talking to to this other file which
15:32 - has a bunch of other code in it and look
15:35 - at this we got a little game then we're
15:36 - gonna that we're gonna make so basically
15:42 - that that's all the HTML is doing I'm
15:44 - gonna switch it back to sketch touch I
15:46 - guess which is our starving starting
15:50 - jobs for file there's one other part of
15:53 - this HTML file that I want to cover and
15:55 - Kenny might be able to actually answer
15:57 - this well where here's this script up
16:01 - top where there's this kind of like
16:02 - random URL and so this is kami you want
16:06 - to describe what this URL it was doing
16:09 - or like what the idea of a library or a
16:11 - package in JavaScript is oh so kind of
16:14 - like two separate questions there right
16:16 - like let's answer the script part first
16:18 - what we have here in the script is
16:21 - called the CDN or content distribution
16:23 - network um and that's basically saying
16:25 - like I have a lot of code that's stored
16:28 - at this web address and I don't want to
16:31 - include all those lines of code directly
16:34 - into my project so I have no idea how
16:38 - big p5 actually is but it could be like
16:40 - thousands of lines long so we directly
16:42 - include that into our file but it might
16:44 - just look really clunky and it might be
16:47 - hard to navigate
16:48 - so what other people have done is create
16:51 - at this CDN this content distribution
16:52 - network so that we can link directly to
16:56 - that to that code and it works really
16:59 - fast because there's different spots
17:01 - along in the world so depending on where
17:04 - your location is you will get the
17:06 - closest distribution network so whatever
17:08 - server is actually spinning it up and
17:10 - providing it to your computer so that's
17:14 - that's the heart of the script there as
17:16 - far as libraries go a library you can
17:19 - think of as pre-written code right so I
17:22 - saw the question before about what's the
17:24 - difference between vanilla JavaScript
17:26 - and p5.js and we've kind of mentioned
17:29 - that p5.js is a library so what the
17:33 - creators of p5.js have done is they've
17:35 - taken then the vanilla JavaScript just
17:37 - plain JavaScript on its own
17:39 - made it easier to do a really specific
17:41 - task and in this case I'm seeing some
17:45 - comments about Candice as well and
17:47 - that's right we're working we're using
17:48 - p5.js to manipulate that canvas this and
17:53 - you're an artist you also know the
17:55 - chemistry draw on it to make shapes
17:56 - that's what we're gonna be using
17:57 - javascript to do so p5.js is that subset
18:01 - or this library of JavaScript that we'll
18:03 - be working with today yeah I always kind
18:06 - of think of it like if you're a video
18:08 - game player like libraries or packages
18:11 - and I saw there was a question that like
18:12 - is this like a module in Python and yeah
18:14 - they're all kind of similar where it's
18:16 - kind of like blowing its content that
18:18 - you can add on to your programming
18:19 - language where you know noir vanilla
18:21 - JavaScript wouldn't know what what an
18:23 - ellipse is but if we install p5 or if we
18:27 - like add-on p5 that will give us access
18:30 - to being able to use this ellipse
18:31 - function and the create canvas function
18:33 - and all of these like p5 specific things
18:36 - if you take a look and you certainly
18:38 - don't need to do this if you go to this
18:41 - web address you can you can see the p5
18:47 - code like the source code for p5 so this
18:50 - is like you know I certainly don't
18:53 - understand what's going on here the
18:55 - people that wrote p5 wrote this code but
18:58 - this is like what we are importing into
19:00 - our into our projects you give us access
19:02 - to p5 cool that's all of the set up
19:08 - again but all of this is kind of like
19:09 - the really technical set up that when
19:12 - I'm teaching this to my intro students I
19:14 - don't really go that far into the depths
19:16 - because the fun part is like diving into
19:19 - p5 and starting to experiment with all
19:21 - the cool things that you can do with it
19:23 - so let's go back to our sketch dot JS
19:25 - file again make sure that your index dot
19:29 - HTML file is talking to that sketch lock
19:30 - draya's file it should be by default and
19:37 - let's go ahead and get started
19:40 - so again feel free to play around with
19:42 - all of these functions and things that
19:44 - we're doing on your own as we're going
19:45 - through this we're going to kind of walk
19:46 - you through a couple of little exercises
19:49 - that we drew up for you so the first is
19:52 - player
19:53 - this this ellipse function we have four
19:57 - parameters here and I think a really
19:59 - good exercise is to go into the p5
20:02 - documentation and try to understand what
20:05 - is going on with these four numbers this
20:08 - is like an essential skill that all
20:10 - programmers eventually learn is to learn
20:13 - how to dive into documentation so this
20:16 - is the p5 documentation specifically for
20:19 - an ellipse and you can see that an
20:24 - ellipse has four parameters X Y W and H
20:28 - and so those correspond to the x
20:33 - coordinate of the ellipse the y
20:34 - coordinate of the ellipse the width of
20:36 - the ellipse and the height of the
20:37 - ellipse and so if I go back to my p5
20:40 - code I can make another ellipse and I
20:45 - wrote in the exercise here try to make a
20:48 - perfect circle with a radius of 100 in
20:50 - the center of the canvas so right now my
20:54 - canvas is 500 pixels wide and 500 pixels
20:58 - tall so if I put on ellipse right at 250
21:02 - 250 so 250 pixels over and 250 pixels
21:08 - down now don't put the center of this
21:11 - new ellipse right in the center of the
21:12 - canvas and then let's make it let's make
21:16 - it wider than it is tall so I'll make it
21:18 - a hundred pixels wide and 20 pixels tall
21:26 - cool
21:34 - and pause for four questions there feel
21:38 - free to play around with making multiple
21:41 - ellipses on your canvas you can make
21:45 - them overlap so any are you seeing any
21:54 - kind of common questions that are
21:55 - happening yeah I'm all in each one of
22:02 - them cool yeah a comment I saw in the
22:08 - chat is that you can make it a perfect
22:09 - circle by removing the fourth one there
22:12 - the parameter so that one set the width
22:14 - and the height to 20 in this case looks
22:20 - like an eye
22:21 - yeah it does okay cool so next I wanted
22:27 - to show this is again a little bit of
22:29 - like setup or technical stuff that is
22:34 - less fun than like all the cool
22:36 - experimenting that we're gonna be doing
22:38 - in p5 but it's something that's gonna be
22:41 - useful and that's kind of debugging your
22:43 - code so what happens if we make an error
22:47 - in our code how do we know how do we
22:50 - know what's happening it looks like
22:52 - nothing is changing or nothing is
22:53 - showing up so I'm going to produce an
22:56 - error in my code I'm gonna delete one of
22:58 - these commas so this ellipse function is
23:01 - now not going to work
23:03 - and I'm gonna run my code and nothing
23:08 - shows up right so if that happens that
23:10 - usually means there's an error in your
23:12 - code somewhere and we want to learn a
23:15 - little bit how to debug this again
23:17 - hopefully we're gonna be doing stuff
23:18 - that is simple enough that we'll be able
23:21 - to kind of spot errors by hand like oh
23:25 - I'm missing a comma there but if you
23:26 - want to look if you want to see the
23:28 - error messages the way to do that in
23:30 - JavaScript is to open up the console in
23:33 - your web browser and so there are a
23:35 - couple of ways to do this and depending
23:39 - on what web browser you're using there
23:41 - are different ways to do this but I'm
23:43 - going to right click
23:44 - and click on inspect this opens up this
23:50 - big panel over here that you might not
23:53 - have seen that before if you've never
23:55 - done any sort of web development this is
23:58 - showing all the HTML on our page so you
24:00 - know there's a lot of different HTML
24:03 - sections on a code Academy page but if
24:06 - you go over to console you'll now see
24:10 - where error messages are sent from
24:12 - JavaScript one thing to note is that
24:17 - there are a lot of there are a lot of
24:22 - warnings that pop up based on like
24:26 - things that we're doing on code Academy
24:27 - behind the scene that's right there's
24:29 - like some devtool thing that you know
24:31 - there's a lot of things going on on the
24:33 - code counting backend
24:34 - I hid those warnings just to get them
24:37 - out of the way and you'll see that okay
24:39 - now I see an error on sketch j/s on line
24:43 - eight and it's something about oh
24:45 - missing parentheses after argument list
24:47 - that's not a great error message because
24:49 - really the error is like I'm missing a
24:51 - comma
24:51 - rather than missing a parenthesis but
24:54 - you can even see that okay there's an
24:57 - error somewhere on in my sketch dot J's
24:59 - file on line eight so that's that's the
25:04 - way that I would recommend to debugging
25:06 - again that was right-clicking going to
25:09 - me inspect and then opening up the
25:12 - console over here cool can he's--oh any
25:21 - any thoughts or compliments about any of
25:24 - that stuff
25:25 - all right a question just came in in the
25:28 - chat though so guys if you have
25:29 - questions try to use the keyway because
25:31 - I feel like chat is just running through
25:34 - easier for us to identify but one
25:37 - question came in about semicolons right
25:39 - now because I see in the setup function
25:41 - we're using a service with a semicolon
25:44 - [Music]
25:46 - don't need semicolons is there something
25:49 - going on their house yeah so I will
25:52 - preface this with saying I am NOT a
25:54 - JavaScript expert I would say that I am
25:56 - like an expert in p5 where I make these
25:59 - like the way that I use p5 is to hack
26:02 - together cool art projects basically and
26:04 - so I definitely don't know a ton of like
26:10 - proper JavaScript I would say I'm
26:12 - certainly not a web developer I've never
26:14 - made a website in my life and so I don't
26:18 - know like proper JavaScript so maybe
26:19 - this is a question better for you Kenny
26:21 - okay what's what's the deal with
26:22 - semicolons in JavaScript um there's like
26:26 - a meme that says like yeah you kind of
26:28 - need them kind of Donuts it's optional
26:31 - honestly but the goal of the semicolon
26:33 - and you'll see this for a lot of other
26:35 - languages is that it terminates a line
26:37 - so each line contains like a statement
26:39 - of code javascript has an interpreter
26:43 - that automatically inserts semicolons
26:46 - for you so when the computer reads it
26:48 - there will be seven colons for it it
26:49 - knows when to or it smartly guesses when
26:52 - she insert that semicolon for you and
26:55 - there's like really rare cases in which
26:57 - a missing semicolon is actually going to
27:00 - break your code but since you're sharing
27:02 - your screen right now Alex in June you
27:04 - want one thing and take line seven and
27:07 - put it on line six
27:11 - keeping the semicolons there yeah and
27:14 - save your code yeah okay so that's still
27:19 - make sense right because there's
27:20 - background 200 semicolon eclipse with
27:24 - all the arguments semicolon so the
27:26 - computer actually reads it as two
27:27 - separate lines yeah if we remove that
27:29 - and try to save it yeah we got an error
27:35 - got higher and we can look up what that
27:37 - error is by going into our console stop
27:41 - telling on yourself Alex and Sam right
27:46 - we can go into our console we can see oh
27:47 - there's an unexpected identifier again
27:49 - kind of a confusing error message
27:51 - basically what that means it's like oh
27:53 - I'm now seeing you know JavaScript is
27:56 - seeing the closing parenthesis and isn't
27:59 - expecting to see us
28:00 - face and the letter e after that it's
28:03 - expecting to see something like a
28:04 - semicolon or a new line but you can
28:06 - basically see okay we have an error on
28:08 - line six somewhere that's about two
28:13 - police siren four chat my admirers are
28:18 - like installing a refrigerator right
28:19 - house there's like horrible drills going
28:21 - on in the background that was concerned
28:22 - uh would be loud like five hundred
28:33 - people for people asking about how to
28:39 - open up the console in different web
28:40 - browsers another tool that all
28:44 - programmers use is pulling it so if
28:46 - you're on Safari or if you're on Firefox
28:48 - and the and the behavior is slightly
28:51 - different
28:52 - I know I know in some web browsers you
28:53 - need to like dive a little bit deeper
28:55 - into the Preferences and like turn on a
28:58 - click box to to allow access to
29:02 - developer tools or the console but
29:05 - basically my recommendation is Google
29:08 - open console in Safari or Firefox or
29:11 - JavaScript and try to follow those
29:13 - instructions and one question I want to
29:16 - answer I saw so people asked about doing
29:18 - this off of code Academy so you can
29:20 - definitely do this on your own computer
29:22 - with a text editor like yes code slam
29:25 - text but p5 actually has their own
29:27 - editor that they've built in the browser
29:29 - and what's great is that it already gets
29:30 - you set up with the correct files and
29:33 - the set up and draw functions so I'm
29:36 - gonna drop their editor into the zoom
29:39 - chat so people can check that out I also
29:42 - like using a glitch if anyone's used
29:44 - switch before or repla so those are two
29:48 - different browser-based IVs that you can
29:51 - run p5 from as long as in glitch and
29:54 - rumblin you'll just have to link the
29:56 - library but in the p5 editor the library
29:58 - is already linked for you cool oh okay
30:03 - I'm gonna I'm gonna move on if again the
30:06 - I think the discussion about like
30:08 - opening the console I think that's a
30:09 - good one but I want to get to some of
30:11 - like the exciting parts about p5 so
30:14 - can always link back and talk more about
30:17 - like debugging and error messages and
30:19 - the console at the end of the session
30:22 - um step six here again I'm gonna kind of
30:26 - fly through a little bit quickly
30:28 - it's basically introducing another
30:29 - function of drawing a shape which is a
30:32 - rectangle you can look at the
30:34 - documentation for this rectangle but
30:36 - it's very similar to the ellipse where
30:39 - I'm gonna give it a coordinates and then
30:44 - a width and a height so I'm gonna make a
30:49 - let's see I think I said try to draw one
30:55 - that overlaps of my ellipse so I'll put
30:59 - it at 200 so 200 in the x-direction
31:05 - let's see 150 in the y-direction so
31:08 - that's coming down and then I'll make it
31:12 - really skinny and very tall hmm one
31:22 - thing to note about this rectangle
31:25 - function is that unlike the ellipse one
31:27 - where the position was in the ellipse
31:32 - the position was measured from the
31:33 - center the rectangle function this
31:36 - position is measured from the top-left
31:39 - corner
31:39 - so this point 200 over and 150 down
31:44 - that's the top left corner of this
31:46 - rectangle so that's just another shape
31:53 - that you can that you can draw p5 has a
31:56 - bunch of other shapes triangles
31:57 - quadrilaterals you know a bunch of other
32:00 - shapes cool all right here's where
32:04 - things get fun um what I want you to do
32:08 - is to replace one of these the
32:14 - x-coordinate of one of your ellipse with
32:17 - ellipses ellipse what is it with the
32:23 - variable mouse X and we'll talk about
32:25 - what this variable is and what it means
32:27 - and where it comes from but go ahead and
32:30 - replace the x-coordinate of an ellipse
32:32 - with mouse X and run your code and then
32:35 - mouse over your your canvas you'll see
32:42 - that the ellipse and follows your mouse
32:44 - now I also skipped fill so let me
32:56 - quickly do fill and then we'll talk
32:57 - about what's what's happening here
33:01 - another function that you might want to
33:03 - use its fill this sets the color of all
33:06 - of your shapes and it takes three
33:09 - numbers between 0 and 255
33:12 - so again just as an example I'm gonna
33:14 - put any kind of three random numbers
33:16 - here at all my shapes have turned green
33:22 - and I'm gonna go one step further and
33:24 - I'm gonna change let's say this second
33:29 - second number to announce Y and now as
33:37 - my mouse goes up and down the color of
33:39 - my the color of my shapes change okay
33:44 - cool so we just did a ton of new stuff
33:47 - Zoe do you want to talk a little bit
33:50 - about what these in the house X and
33:52 - mouse Y variables are and how the
33:55 - Drollet works
33:56 - sure so Mouse X and that's why our
34:01 - values that are part of the p5 library
34:04 - and what they do is that they grab the
34:07 - current coordinates the current location
34:09 - of your cursor so Alex do you mind
34:11 - passing over the canvas again yeah cool
34:16 - so as you can see I know it's kind of
34:18 - glitchy because of zoom video stuff but
34:20 - this circle is currently following where
34:24 - Alex's cursor is on the x-axis
34:28 - specifically so as he moves his cursor
34:30 - to the left the ellipse will move to the
34:34 - left
34:35 - similarly with the fill function right
34:38 - here it's changing the color
34:40 - you of the green value based off of
34:43 - where Alex's cursor location is on the
34:46 - y-axis so that's why we're getting the
34:49 - color changes as he moves the cursor up
34:51 - and down it's changing that green value
34:53 - and changing the overall color a draw
34:57 - loop so the drama loop is something
35:00 - pretty specific to p5 so as you notice
35:04 - we started off this project with two
35:07 - built-in functions already our two
35:09 - functions that are written they're
35:10 - already set up and draw and to do
35:12 - something p5 you really should have both
35:13 - of them set up runs just once at the
35:16 - beginning of your program so that's why
35:19 - we have the create canvas function there
35:20 - that's where we're determining the size
35:22 - of our canvas and then in the draw loop
35:24 - the draw loop runs I believe it's 60
35:26 - frames per second and what happens is
35:30 - it's going through everything that's in
35:31 - that function 60 times in one second so
35:34 - if you're familiar with the concept of
35:36 - animation animation is really just a
35:38 - still image that gets repeated at such a
35:40 - fast time that to our eyes it appears
35:42 - like movement is happening same things
35:45 - happening in the draw loop and I can
35:48 - demonstrate this Alex would you mind
35:49 - moving the background to the setup
35:51 - function here's one way that you can
35:54 - actually see this happening in real time
35:56 - if we move the background to the setup
35:58 - function that means that it's only going
36:00 - to be drawn once and then everything
36:02 - that happens in the draw function is
36:04 - going to be drawn right on top of that
36:06 - so it should happen now is you can
36:08 - actually see every single iteration of
36:10 - this of the shapes getting drawn and it
36:14 - leaves this kind of trace element to it
36:17 - which is kind of cool and something you
36:18 - can play around with creatively too if
36:21 - you like that kind of look especially
36:24 - because you can get rid of what do you
36:27 - call it the line that goes to the stroke
36:28 - yeah like a stroke stroke so we have
36:33 - this built in no stroke function that
36:35 - will take off that black line that you
36:39 - have on either side and then you can
36:40 - actually see how this can become really
36:44 - interesting paint program if you had
36:48 - something if you had a circle that was
36:49 - attached both your mouse X and mouse
36:51 - wine curse
36:53 - so if you want to yeah Alex will change
36:55 - the second program return bass why
36:58 - here's a good demonstration of
37:00 - commenting I'm gonna comment down some
37:02 - of these other shapes just so I know I
37:04 - only have the ellipse that's connected
37:05 - to my nose so now the circles are just
37:10 - gonna follow wherever alex has this
37:12 - cursor on the canvas and you start to
37:14 - get this really cool paint program and
37:17 - you can change the fills so again it's
37:19 - dependent on where the cursor is and so
37:24 - he just summed out the red value so it's
37:26 - equal to wherever the cursors position
37:28 - on the campus for Mouse X yeah so I
37:32 - wanted to talk a little bit about one of
37:34 - the other things that we did very
37:35 - quickly here was add this film function
37:37 - which takes three parameters so the way
37:41 - that colors work in p5 by default is by
37:44 - you using RGB color values so you can
37:48 - kind of think of it as the first value
37:51 - is the amount of red you want in your
37:53 - color the second value is the amount of
37:55 - green that you want your color and the
37:57 - third value is the amount of blue that
37:58 - you want your color and the amount goes
38:02 - from 0 to 255 and so you can you can
38:07 - actually see when I mouse over past 255
38:13 - the color kind of stops changing right
38:16 - you can think of like okay this this
38:18 - number here goes beyond 255 it becomes
38:21 - 500 right when I'm down in the bottom
38:23 - right corner where I'm 500 pixels over
38:26 - and 500 pixels down and so it's as if I
38:30 - had subbed in 500 500 there and that's
38:34 - gonna just be that yellow that we saw
38:37 - when I was down this bottom right corner
38:40 - so you can see if you go past 255 it
38:44 - just kind of maxes out to whatever the
38:45 - 255 value would be can I also say
38:49 - something specific about the film yes
38:51 - function so Phil is going to determine
38:54 - the color for any shapes that come after
38:56 - it so if you want to change the color
38:58 - for a shape so it's different from the
39:02 - one before it so if you notice before
39:04 - when
39:04 - we're drawing and we had a bunch of
39:06 - shape stuff they were all the same color
39:07 - and all changing the same way but if you
39:09 - call the fill function again before
39:12 - another shape that you want to have a
39:14 - different color - then you yep so you
39:17 - just took call fiddle again with a
39:19 - different set of values for the color
39:21 - that you want yeah so this will make it
39:23 - so the matter I feel I fill with certain
39:27 - color and then draw the circle that's
39:30 - attached to my mouse and then I changed
39:33 - the fail I changed my paintbrush and I
39:35 - draw two more circles so we should see
39:40 - one circle it's connected to the color
39:42 - is connected to my mouse and then the
39:44 - other two circles are just this ugly
39:45 - gray colors I made one good a tool that
39:51 - I use and this is like you know a very
39:53 - basic tool if you just Google RGB color
39:57 - picker Google has this nice little color
40:03 - picker and you can see that like okay
40:05 - this blue value would be 64 37 196 so if
40:12 - you want to like you know if you don't
40:14 - want to do the guesswork of what is this
40:15 - color gonna make if I put in these three
40:17 - values you can you can use this tool and
40:20 - get or you know whatever pretty colors
40:22 - that you want let's see I see someone
40:30 - says no stroke is causing my shapes to
40:32 - the shape to disappear that's probably
40:34 - because you don't have a fill see if I
40:38 - turn off my fill meaning the fill is
40:40 - just empty and I've also no I feel is
40:44 - white so if I also if I also didn't have
40:46 - a background oh so if you turn off your
40:49 - if you do no strokes and their shapes
40:51 - disappear
40:52 - you're probably painting white shapes on
40:54 - a white background with no border hey
40:58 - guys it's ELISA I've been over here in
41:01 - stealth mode sorry there's a question
41:06 - from an anonymous attendee if they
41:07 - joined late how do they find the lesson
41:10 - yes um so let me grab I'm asking that
41:17 - because if we see it one
41:18 - there's probably number of people
41:20 - totally
41:22 - so in chat I'm posting the link to all
41:25 - of the lessons that we're doing for this
41:26 - entire conference and the one that we
41:30 - are working on specifically is the
41:33 - fourth one creative coding with p5.js so
41:37 - if you want this specific project
41:41 - it's that link and then if you want to
41:47 - do later sessions you can click on this
41:49 - learn from code a home conference and
41:51 - that will take you to all the other
41:52 - sessions that we're going to be running
41:53 - today thanks thanks for guys Natalie so
41:57 - yeah thank you there is a question about
42:01 - why are we using functions that we're
42:03 - not calling them yeah which is a
42:05 - question that comes up a lot of folks
42:07 - that program before and they get into p5
42:09 - so people is a little interesting in
42:10 - this way the set up and the draw
42:13 - functions are two functions that you
42:15 - actually don't need to call I looks I
42:20 - don't know if you know a bit more about
42:21 - about why that is but I think you know
42:24 - p5 was really designed for folks who
42:27 - actually don't have familiarity with
42:28 - coding and so I think they're trying to
42:31 - make it as easy as possible for folks
42:33 - just start would be my assumption yeah I
42:35 - think that's probably true you can
42:36 - always think of like the setup function
42:38 - gets called once at the start of your
42:40 - program and then the draw function gets
42:43 - called 60 times a second so if you're
42:44 - familiar with loops and programming you
42:46 - can imagine as if somebody has written a
42:48 - loop that happens
42:50 - 60 times a second and the draw function
42:51 - is being called in there okay cool so
42:55 - again we're able to make cool drawings
42:58 - but we're also learning some kind of
43:00 - programming fundamentals I think the the
43:03 - fundamental programming concept that
43:05 - we've seen so far is this idea of
43:07 - variables where this variable is storing
43:14 - a value and then we are plugging that
43:16 - value into this film function so that's
43:19 - kind of big programming concept number
43:21 - one that we've learned is this idea of
43:22 - variables if we have time we can define
43:25 - some of our own variables the other
43:28 - programming concept that I want to cover
43:30 - is the idea of
43:33 - so a conditional is kind of a branch in
43:37 - your in your program where if one thing
43:40 - is true then a certain certain chunk of
43:43 - code is nothing to run and if it's not
43:45 - true then another a different chunk of
43:49 - code is gonna run so you can see that
43:51 - kind of the pseudo code for this is if
43:53 - some condition of walk a else code block
43:57 - the and so I'm gonna show that off in
44:00 - well first of all I'm gonna clean up my
44:02 - my canvas a little but I'm gonna do just
44:05 - an ellipse that follows my mouse maybe
44:09 - we can move the background back to write
44:13 - the background you can kind of think of
44:15 - that as like painting over all of your
44:17 - old work so when I move the background
44:20 - into the draw function now what I'm
44:22 - doing is I'm still drawing an ellipse
44:24 - sixty times a second but I'm also
44:26 - painting over all of those old ellipse
44:28 - that's okay cool
44:36 - so I'm gonna write a conditional here
44:38 - and my condition is going to be checking
44:42 - where the checking to see if my mouse is
44:46 - on the right side of the screen and so
44:50 - that condition is is now is Mouse X
44:53 - greater than or or equal to I suppose
44:57 - 250 so before we hit run and in fact
45:01 - their abuse index error if I hit run
45:02 - right now but I mouse greater than or
45:06 - equal to 250 is false false false false
45:08 - false well name right now is the double
45:10 - here and then as soon as I pass that 250
45:13 - mark which is somewhere in the center of
45:14 - this canvas it would flip to true right
45:17 - now my mouse X is greater than or equal
45:19 - to 250 so if that condition is true I
45:23 - want to let's say fill my circle with
45:27 - red
45:33 - if that condition is not true which is
45:36 - this else statement I'm gonna fill my
45:38 - circle with green so depending on where
45:45 - my mouse is I'm gonna set a different
45:47 - fill and then no matter what right I'm
45:50 - gonna draw an ellipse afterwards right
45:52 - the ellipse is outside of these curly
45:54 - brackets saying what to do if if this is
45:57 - true or if it's not true
45:58 - let's go ahead and run this we'll see so
46:03 - the condition is false right now now sex
46:05 - is not greater than or equal to 250 and
46:07 - now it's true right so that's that's the
46:12 - idea of a conditional and programming
46:14 - where I'm able to ask a question I'm
46:17 - able to say is my mouse on the left side
46:19 - of the screen or the right side of the
46:20 - screen and do different things depending
46:21 - on it so Zoe what are some cool creative
46:26 - coding things that we could do with this
46:35 - I mean changing the shape the color
46:42 - change the shape of it too you could
46:48 - even have things you can actually add I
46:50 - mean this is getting a little far
46:52 - advanced so probably know what we're
46:53 - gonna do but just for the sake of
46:54 - examples you can bring shapes into p5
46:57 - you can bring shapes videos gifts in so
47:00 - you could have the video change or image
47:04 - change depending on where it is on the
47:05 - campus but yeah changing changing what
47:11 - the shape is changing the dimensions of
47:15 - the shape that you're working with yeah
47:20 - so here let me run my code again so now
47:22 - you'll see both the color and the shape
47:25 - will change depending on if my mouse is
47:27 - on the left or right side of the screen
47:31 - okay we have how light does this go to
47:34 - this goes to new as well good so we do
47:39 - have we do have a good amount of time so
47:41 - maybe we can slow down a little bit and
47:42 - answer questions are you seeing any
47:44 - super common questions that we can
47:46 - answer
47:46 - well to Joseph's specifically you just
47:50 - pasted his code in the text and when I
47:53 - copied and pasted his code in it seems
47:55 - like there that you have background in
47:58 - the stouts so I see background instead
48:01 - of back ground with a G yeah and ellipse
48:05 - as well it was two Wells rather than one
48:08 - yes yes
48:10 - caching errors so that was the power of
48:12 - debugging yeah and again I'll show this
48:15 - off and so I'll run my code with a typo
48:18 - with ellipse and now you can see that so
48:24 - running yeah maybe my connection to code
48:27 - captain e has gone out and i refresh
48:29 - that page questions coming in the Q&A
48:35 - panel we have to answer a hundred and
48:38 - ten so far have the chat to money bad
48:46 - typing yes you can see hey I just
48:49 - introduced the typo and it's not working
48:52 - so again I'm gonna just demo opening up
48:55 - my console and you can see that ellipse
49:02 - is not defined with one L so basically
49:06 - it's saying hey you're trying to call a
49:07 - function that I don't know what it means
49:08 - because I don't know what this this type
49:12 - of week and you can see that it's on
49:13 - line 14 of my code any other any other
49:24 - common questions that you think is worth
49:27 - we're talking about right now Kenny or
49:28 - are people see me pretty good one really
49:32 - early on I think this will probably
49:34 - relate to our next topic but it seems
49:35 - like my mom was trying to run final that
49:40 - Jay has to see the final project and
49:43 - they weren't able to get anything
49:45 - happening so once we get up to that
49:47 - point I think it'd be nice to just like
49:49 - really iterate but what we did to get
49:51 - final the final solution
49:53 - mm-hmm sure yeah if you want to see the
49:56 - final final solution if you go back to
49:58 - your HTML page
50:00 - and again this is kind of all we're
50:03 - doing here is creating an HTML page and
50:05 - we happen to be connecting sketch js2
50:08 - that HTML page if you change the file
50:11 - that the JavaScript file that's talking
50:14 - to this HTML page from sketch to final
50:19 - we now have we have now have this
50:22 - project maybe this is a good time to
50:26 - talk about what's going on in this
50:29 - project so Zoe as you'll see how this
50:33 - project is like a long game where you're
50:35 - trying to get to the end and if you won
50:42 - but if you walk into the walls it says
50:47 - you are dead go back to the green school
50:48 - and start over
50:49 - so how do you imagine conditionals are
50:52 - being used in a project like this yeah
50:54 - and I'd imagine something that is able
50:57 - to detect if the lip sees this is really
51:01 - interesting challenge actually this is
51:05 - edge detection so somehow it's able to
51:09 - determine if it has touched something
51:13 - that has value hmm yes so maybe you can
51:21 - somehow right basically you have to
51:23 - think about the question that is being
51:24 - asked which is the question that seems
51:26 - to being asked here is have I running to
51:29 - the wall where has my mouse gone over
51:31 - the wall and Zoe is Zoe is saying like
51:33 - okay maybe one way to detect that is
51:35 - this be able to say he's my mouse over
51:38 - this red filfil value the way that it's
51:41 - actually working is rather than saying
51:43 - is my mouse over this red fill value
51:45 - we're saying is my mouse in a very
51:47 - specific like region of this dream and
51:49 - so you're doing it with coordinates yes
51:53 - I'm doing it with coordinates there
51:55 - might be a way to do it with color color
51:59 - value but I'm not exactly sure I don't
52:01 - know I would love to know this because
52:02 - this is actually something that comes up
52:03 - a lot with building games and b5 is edge
52:06 - detection collision detection right yeah
52:10 - so let's step back Dental
52:15 - I'll come back here let me
52:21 - okay ready movies well I'm gonna draw a
52:25 - rectangle in the middle of the screen or
52:27 - like middle issue of the screen so what
52:30 - X 200 Y 300 I'll make it a hundred wide
52:33 - 250 small and then I'm also going to put
52:38 - on ellipse that follows my mouse 50 so I
52:47 - want the x-coordinate of the ellipse to
52:50 - be Mouse X the y coordinate to be mouse
52:53 - Y and I'll make it a small little circle
52:58 - really fast people reading we get to
53:00 - friend this project I've noticed I've
53:02 - been doing this a couple times the
53:03 - questions but p5 has their reference
53:06 - online so I seem just got a lot of
53:09 - questions about how do you add text how
53:11 - do you change the kind of color type if
53:13 - you want to use like names of colors
53:15 - versus RGB values I highly recommend you
53:18 - go check out p5 p5.js org slash
53:21 - reference a lot of those questions will
53:23 - be answered for you there yeah we've
53:26 - linked it to a couple of places in the
53:28 - reference over here on the left and so
53:31 - if you click on that this one sent you
53:33 - two ellipse then you can say you can
53:35 - look at reference and you can see
53:39 - there's a bunch of stuff about color
53:41 - here are all the other shapes that you
53:43 - can draw lines and points text is I know
53:50 - text it's called the text function so
53:52 - typography here's how you write text but
53:56 - you can change the font you can change
53:57 - the font size you can change the style
53:59 - you can change the width all that sort
54:01 - of good stuff so again that was going to
54:04 - p5 and clicking on the reference if
54:09 - you've been documentation for all that
54:10 - sort of stuff and as you can see there's
54:16 - here's the built-in Mouse stuff there's
54:18 - also one that's kind of useful is mouse
54:21 - is pressed so you can there's a built-in
54:24 - variable that will be either true or
54:26 - false depending on
54:27 - your mouse is pressed here's a little
54:29 - example where if mouse is pressed I draw
54:32 - a circle otherwise I draw a rectangle so
54:37 - Mouse's press is the cool little thing
54:39 - that gives you more more interactively
54:42 - alottoni there I'm seeing two questions
54:45 - in the Q&A panel where they're asking
54:48 - about
54:49 - rotating or turning it looks is there
54:52 - can we look into that yes that
54:55 - unfortunately is not super easy I think
54:57 - unless unless I don't know an easy way
55:00 - to do it the way that I have done that
55:02 - in the past is so you can rotate the
55:12 - entire canvas and then draw normally so
55:16 - let me bring it in this and this gets
55:22 - like fairly complicated so in setup I'm
55:25 - going to rotate the entire canvas you
55:28 - can see that this parameter has
55:31 - something to do with pi you can think of
55:32 - that as like the amount of like you know
55:35 - the angle that you're rotating it around
55:37 - so if I do this I lost my can actually
55:44 - cook anything I do this that didn't work
56:15 - well I'm flying eight I've never
56:18 - oh I deleted my opening curly bracket
56:28 - that didn't even work I thought wrote a
56:32 - tribute rotated the entire canvas so
56:34 - like basically zero zero was not no
56:38 - longer that's in the top right corner it
56:40 - would be
56:41 - down here and then it would draw
56:43 - everything on the diagonal oh no that
56:45 - you want to get I believe it's translate
56:47 - translate okay I think that's maybe what
56:53 - you're looking for yeah so translate and
56:55 - rotate are used in conjunction with each
56:57 - other all the time
56:58 - yeah again this is me kind of your
57:05 - learning live mmm also do not cease work
57:12 - okay um but that's a that's a good thing
57:17 - to just grab the exact code here
57:21 - sorry Alex what are you trying to do
57:23 - we're trying to draw a shape at an angle
57:28 - so rotate the shape okay
57:34 - there we go yeah interesting so maybe
57:43 - maybe if I threw it down in the draw
57:46 - function work but there's a there's a
57:49 - square that's rotated where basically
57:52 - I've rotated the entire canvas what I
58:00 - believe changes the origin yes exactly
58:02 - yes
58:04 - so 0 0 is now in the very center of the
58:06 - screen rather than the top-left corner
58:08 - yeah and then rotate is we're taking
58:10 - that canvas yeah that's a good question
58:14 - though and that's the kind of stuff
58:15 - that's super fun where it's like if you
58:17 - want to do this sort of thing you can
58:19 - you know basically google it and you
58:22 - will find somebody that has that
58:23 - question before and then you can play
58:25 - around with it so thanks for them
58:30 - I don't know I'm curious though like if
58:32 - he if you put that yeah click code that
58:35 - you have highlighted directly into draw
58:37 - instead would that work the same way or
58:40 - let's see what happens
58:44 - so that is working the same way and now
58:47 - let me switch
58:53 - I'll see if I can get this worked I'm
58:55 - gonna follow my mouse what do you think
58:58 - it's gonna spin Oh
59:00 - oh yeah like so I believe that translate
59:05 - it only it kind of like defies the draw
59:08 - loop I remember because I was actually
59:09 - doing this for my 100 days of coding I
59:11 - was trying to get us like an earth to
59:13 - rotate and so it actually it will end it
59:19 - doesn't apply cumulatively like other
59:21 - animations do in the draw loop
59:24 - I actually just linked to gene Kogan has
59:28 - really great peopie of transformations
59:30 - article online so I just threw that into
59:33 - the chat but he he talks a lot about
59:35 - getting things to rotate and I believe
59:38 - he has a specific thing about animating
59:42 - rotation that he does that has to do
59:47 - with using a certain so whether you're
59:55 - rotating something a lot so max s are
59:57 - rotating it along a separate access yeah
60:00 - yeah I'll put a pump--ow stuff so yeah
60:06 - Jason in the chat I mentioned try rotate
60:09 - see is that something in the
60:10 - documentation that sounds like that's
60:15 - part of the 3d stuff would be my guess
60:18 - yes so Z values only exist in 3d space
60:22 - so I see that so that's the 3d
60:30 - documentation is also cool but good call
60:35 - on looking into the documentation that's
60:37 - exactly what you should be doing great
60:41 - okay I'm gonna go back to this idea of
60:45 - kind of edge detection and so the the
60:52 - problem that I'm gonna try to solve here
60:53 - is how do we tell when this circle is
60:56 - inside the square so so far we've been
60:59 - able to say I know when my circle is to
61:02 - the left or to the right of this square
61:04 - and so or
61:06 - the left left half of the canvas or the
61:09 - right half the canvas the question of is
61:12 - my circle inside the square is a little
61:14 - bit more complicated there are in fact
61:15 - four statements that we have to think
61:17 - about it's is my circle below the top of
61:21 - the square and is my circle to the left
61:24 - of the right of this where and is my
61:26 - circle above the bottom of the square
61:28 - and is my circle to the right of the
61:32 - left side of the square right there are
61:33 - four conditions that all have to be true
61:35 - at the same time you don't know for me
61:36 - to be inside this square and so this is
61:40 - a really good example of using something
61:44 - called boolean operators which kind of
61:45 - lets you combine your your conditionals
61:50 - that you're writing in these if
61:51 - statements so I can say something like
61:53 - for right now let's just do use my
61:57 - circle in the bottom right corner
61:58 - so is it below the halfway point and is
62:03 - it to the right of the halfway point so
62:05 - to the right of the halfway up at
62:07 - halfway point is is Mouse X greater
62:11 - actually I'm gonna do this above drawing
62:15 - in a circle because we're gonna change
62:17 - the color of the circle so so that is my
62:21 - mouse on the right side in screen that's
62:22 - is Mount X greater than or equal to 250
62:25 - and again it's only 250 in this case
62:27 - because my canvas is 500 by 500 now I
62:31 - want to say okay it's the right it's on
62:33 - the right half the screen and it's on
62:35 - the bottom half of the screen getting
62:37 - that it will be in the bottom right
62:38 - corner to use and in JavaScript it's two
62:42 - ampersands so mouse is on the right side
62:46 - of the screen and my Y position of the
62:50 - mouse is on the bottom of the screen
62:54 - so that's Mouse y greater than 250 and
62:58 - if this is true I'm going to again just
63:02 - for like testing purposes I'm gonna film
63:05 - red otherwise I'm gonna fill with our G
63:17 - so not true here because I'm only on the
63:22 - right side of my screen I'm not right
63:24 - and bought them but it is true down here
63:27 - right answer we can almost even like
63:29 - draw where this is true right if I got
63:31 - rid of this rectangle I can kind of draw
63:39 - where this condition is true and you'll
63:40 - see that it's only true in the bottom
63:43 - right section of the screen so an
63:51 - exercise that I that I would do with my
63:53 - students as like a homework exercise is
63:54 - I would draw out different regions and I
63:58 - would say you know how how would you
64:00 - like write the write the conditional
64:03 - that changes the circle to read when
64:05 - you're in the bottom right or the top
64:07 - left you know write a conditional that's
64:12 - true when you're inside a rectangle in
64:14 - the center of the screen so let's do
64:16 - that let's do rectangle in the center of
64:18 - the screen so I'm about to call on you
64:22 - to do some math one of us should be able
64:35 - to answer it so okay all right okay so
64:38 - I'm drawing not a friend Kenny so I want
64:43 - my circle to be red
64:46 - when I'm inside this square and so I
64:49 - need a rate of conditional and again
64:50 - it's gonna be four conditions because
64:52 - I'm gonna say I might below the top am i
64:53 - above the bottom and like the right of
64:55 - the left side and then to the left of
64:57 - the right side so what would the
65:00 - condition for am i below the top of the
65:03 - Missis we're V alright so we're drying
65:06 - it at 100 or 200 sorry why see already
65:18 - yes exact infuse because of this zero
65:22 - zero starting talk about math the zeroes
65:25 - are starting up
65:26 - left corner not in the middle so why
65:28 - those increases as you go duck yes so
65:30 - 200 so it's Mouse y is greater than or
65:33 - equal to 200 that means I'm below the
65:36 - top of my rectangle yes and all right
65:40 - let's do let's do above the bottom of
65:42 - the rectangle so it's 70 okay so it
65:49 - would be 270 so less than 270 what is
65:53 - less than 270 I'm sorry that's why yep
65:56 - so we care about them else why because
65:57 - again we care about that why they
65:58 - thinking about the Y values yeah so I
66:01 - want mouse Y to be less than 270 and so
66:06 - I just got that from looking at the Y
66:07 - value parameter which is 200 and then
66:10 - the height parameter which is 70 and
66:12 - just added 70 to 200 cool and then let's
66:15 - do left wall so left is being drawn at
66:20 - 100 so greater than 100 for Mouse X yep
66:24 - now it's X we care about left and right
66:26 - for this case its greater than 100 and
66:29 - then we're done
66:30 - yeah so the edge of the right wall is
66:33 - gonna be a hundred and fifty because the
66:35 - width is 50 so adding that to 100 so
66:37 - we're gonna make it less than 150 I can
66:41 - do that the support was you know what it
66:46 - took me over the edge I gotcha
66:50 - Oh
67:01 - ha ha I wrote Mouse X so that one's good
67:07 - that's my Y is greater than the top my Y
67:10 - is less than the bottom my X is greater
67:13 - than the left side but then I was
67:14 - checking the mouse X for the right wall
67:17 - when I want to be tracking me sorry I
67:20 - was checking the mouse Y but I want to
67:21 - be checking them out sex there we go
67:29 - that error that I made actually is a it
67:32 - was unintentional but it's a good
67:33 - learning moment in that that was a
67:35 - logical error there was nothing wrong
67:37 - with my syntax so if I
67:39 - you know I have that be have them house
67:42 - why and I'm like oh shoot it's not
67:44 - working if I went in and looked at my
67:46 - console there wouldn't be an error being
67:47 - thrown anywhere right the JavaScript is
67:49 - happy with this but it was a logical
67:51 - error in that me translating my you know
67:55 - my thoughts to code I didn't do that
67:58 - correctly and so it wasn't behaving as I
68:01 - expected to do Alex I always just blame
68:04 - the computer as I don't think I do
68:06 - anything yeah why don't you understand
68:13 - my intentions changing color - yeah so
68:22 - the condition the thing that we are
68:23 - branching on in this condition so again
68:26 - we just did a bunch of work - for the
68:28 - logic of am i inside the rectangle or am
68:30 - I not inside the rectangle oh but sorry
68:33 - I think I misunderstood your question
68:34 - you're saying why is the rectangle also
68:35 - changing yes
68:37 - yeah so that's it that's a great
68:39 - question
68:40 - the rectangle is also changing because
68:45 - basically it's on the next opening of
68:48 - the the draw function so I set the fill
68:52 - I draw the ellipse and then the draw
68:54 - function starts again and the fill is
68:56 - still set - I started the draw function
68:59 - again I draw my next rectangle and the
69:01 - fill is still set to whatever it was set
69:03 - based on this conditional so it's like
69:05 - you know I never if I changed the film
69:08 - down here to black I believe this will
69:13 - make the rectangle always black because
69:16 - I set the fill for the I set the fail I
69:20 - draw the ellipse I then set the fill to
69:22 - black and then draw the rectangle and
69:24 - then I checked to see you what the next
69:26 - well that should be drawn as I see the
69:31 - code that makes the ellipse trail this
69:33 - was this is because we're currently not
69:35 - drawing the background I draw a
69:37 - background I make it background or some
69:43 - color
69:46 - the background again you can kind of
69:48 - think of the background as painting over
69:50 - all of your old all of your old drawings
69:53 - where at the start of the draw loop I
69:55 - just paint over everything that I
69:57 - previously did and then draw a new a new
70:00 - rectangle so the you know the stuff is
70:04 - still there but I'm just like painting
70:05 - over it Alex I saw a request in chat for
70:08 - us to drop the curtain code might be
70:17 - ugly do ya play around with it that's
70:25 - what we're doing right now so encourage
70:27 - you all on the chats also play around
70:29 - with it yeah absolutely
70:30 - your output doesn't have to look
70:32 - anything like art but you can change the
70:34 - background color you can change the
70:36 - color of the rectangles or the circles
70:39 - there you like time check is almost
70:42 - 11:40 cool okay so I I think there's so
70:50 - much stuff that I want to do I think can
71:00 - we see in the chat would everybody like
71:02 - a five-minute breather in between now
71:05 - and the next session can we just see yes
71:07 - as a knows in the chat okay okay so for
71:27 - the final 15 minutes what I want to do
71:28 - is I want to just show the code for this
71:31 - pretty little maze game that I made and
71:33 - we can talk about it I want to show off
71:36 - cool projects that you can make with p5
71:38 - and then I want to answer questions if
71:40 - people have questions so let's look at
71:44 - this final J house code the first thing
71:49 - I want to point out is run it whoops and
71:53 - let me again switch the HTML to be
71:55 - talking to final
72:01 - right so there are a couple of things
72:07 - here that we haven't talked about yet
72:10 - where I'm creating my own variable based
72:14 - on whether or not and you know I'm dead
72:16 - in the game and that variable is
72:19 - changing so that's something that we we
72:21 - didn't get to is like creating our own
72:22 - variables so far we've only used now sex
72:24 - and that's why the thing that I want to
72:26 - show is the really really complicated
72:29 - conditional statement that I wrote to
72:32 - check whether I'm inside these walls and
72:35 - so that is this mess again I can like I
72:39 - don't know if it's useful posting this
72:40 - in chat or not but this is a giant crazy
72:45 - conditional that is checking am i inside
72:48 - this rectangle or this is a this is a
72:52 - logical operator that we didn't get to
72:54 - just like I was able to use and to say
72:56 - am i below my below the top and I both
73:00 - my the bottom and my to the last and am
73:03 - I to the right another logical operator
73:05 - that you can do it or so basically what
73:08 - this is is am I in this rectangle or am
73:12 - I in this rectangle or am I in this
73:15 - rectangle or this one or that one
73:16 - so it's this big big big if if statement
73:19 - that if I'm inside any of these
73:22 - rectangles I said that two variable comb
73:28 - is alive so actually actually what I did
73:31 - was am i inside the path not the not the
73:33 - rectangle so am I in the path so am I in
73:36 - that rectangle or that rectangle or that
73:38 - rectangle so it's a big crazy
73:41 - conditional checking to see if I'm on
73:42 - the path I'm storing that in a variable
73:46 - named is alive and then if I'm alive and
73:51 - I'm not dead again don't worry too much
73:54 - about this am I not dead and basically
73:59 - what that is doing is that's making it
74:00 - so when I die I have to go back to the
74:02 - start to come alive again so if I'm
74:07 - alive then I set the fill of my circle
74:10 - to
74:12 - what is that so the nice steel and if
74:14 - I'm dead I set it to red so that's kind
74:21 - of what basically I think that's as far
74:23 - as we got into this game of you can make
74:25 - really complicated you can make really
74:29 - complicated edge detection now based on
74:31 - ands and ORS so we have any we have any
74:38 - questions about that in chat someone
74:44 - asked if s which case yeah so a switch a
74:48 - switch statement is similar to an if
74:50 - statement I think a switch statement
74:52 - might be more appropriate if we had more
74:56 - things that we wanted to do right now
74:58 - we're only interested in doing one thing
75:00 - or the other a switch statement might be
75:03 - appropriate if there were like four or
75:04 - five things that we wanted to do so if
75:06 - case one is true do thing one if case
75:09 - two is true do you think - if these
75:11 - three is to do things three right now
75:12 - we're kind of binary we only have two
75:14 - different cases but yeah switch a switch
75:17 - statement is similar to what we're doing
75:19 - there um Deborah the entire code from
75:24 - this example is in your you you already
75:27 - have access to that it's named final dot
75:29 - J s and again to see that open up the
75:33 - HTML file and change the change the
75:37 - JavaScript file that your code is
75:39 - talking to from sketch which is the
75:42 - first file that you were working in tune
75:44 - final J s and then if you run that code
75:47 - should pop up question about if we did
75:54 - it based on the the color that the mouse
75:56 - is touching would that be easier that
75:59 - would certainly be easier but I think
76:00 - I'm not aware of p5 i don't think the p5
76:05 - we don't have actually we don't have
76:09 - like variables associated with the mouse
76:10 - of what color it's touching we only have
76:12 - the position of the mouse so if you look
76:14 - at the references in the reference Docs
76:17 - yeah that's a good point
76:19 - here's all of the things that you that
76:21 - p5 who knows about the mouse it was its
76:24 - position
76:25 - in those if the mouse button is pressed
76:27 - in Italy stuff about the mouse wheel but
76:30 - it doesn't really know that the mouse is
76:34 - sitting over a certain color
76:41 - excellent question from Alessandra are
76:45 - there good p5.js open-source projects so
76:48 - this is a good time to shout out really
76:52 - awesome p5 creators my favorite and I
76:56 - think Zoe's favorite as well is one of
76:58 - Zoe's professors from NYU
77:00 - he runs a YouTube channel called the
77:02 - coding train where he he does projects
77:06 - in p5 I would really recommend looking
77:09 - at the coding train yeah is that awesome
77:12 - dude yeah he's a great teacher and he
77:15 - makes really really cool projects it's
77:17 - like you know these are these are
77:18 - basically 15 minute long videos where if
77:21 - you want to code along with him he shows
77:23 - you writing up the code but then you get
77:28 - to see his cool output too if this one
77:30 - ends with co-op it's part one of two
77:32 - bleed yeah it's great and some of these
77:36 - are actually real classes that you teach
77:38 - is that nyg oh so he has his whole
77:40 - section on nature of code which is also
77:42 - a book that you can find online
77:44 - but that was a class in my program at
77:47 - ITP
77:48 - so you can have access to that without
77:50 - going in way people yeah I know I know
77:53 - Schiffman is like part of the people
77:57 - that build p5 were part of that
77:58 - organization yes so he's part of the
78:00 - processing foundation the person who
78:03 - actually started p5 is Lauren McCarthy
78:05 - who also used to be a teacher ITV she
78:08 - was with my teachers she's over at USC I
78:11 - think UCLA weren't one of those close in
78:13 - LA and she was the student of Casey
78:18 - Ria's and then fry and MIT were the
78:20 - creators of processing so she and Daniel
78:25 - Shipman kicked him off p5 at ITP nyu
78:29 - actually the year i started in 2015 but
78:32 - it's open source so if you're also
78:34 - interested in working on the project and
78:36 - on the codebase itself they were really
78:38 - he's saying open-source community yeah I
78:41 - wanted to show off something that my
78:44 - students did women uh when I was a
78:46 - teacher this was all done this was all
78:48 - done in p5 this was these were my most
78:51 - advanced students they they had done
78:53 - like three or four years of computer
78:54 - science at this point and so they were
78:57 - you know they were pretty comfortable
79:00 - with coding and so this was a project on
79:02 - genetic algorithms which is like a type
79:04 - of MLA I thing so they wrote this
79:09 - program to algorithmically draw
79:13 - different drawings so in this case the
79:15 - most everyone so you'll see as the
79:18 - program runs we're finding better and
79:20 - better and better
79:20 - drawings of Mona Lisa so this was a this
79:25 - with a cool little one cool any uh I
79:37 - feel like now is a good time to answer
79:40 - questions we'll hang out for a bit if
79:42 - you guys want to take off or take a
79:43 - break before the next session I suppose
79:46 - I should like a link to the next
79:48 - sessions that in chat right now thank
79:59 - you for joining everyone this was super
80:00 - fun i yeah yeah I'm putting a link to
80:17 - the discord server in the chat also so
80:22 - if everybody here wants to keep chatting
80:24 - with each other the people that were
80:27 - over in the HTML session right now
80:29 - they've all moved over to discord so
80:32 - maybe there's some opportunities you
80:36 - guys are awesome it's ELISA
80:38 - thanks ELISA I just like the question
80:41 - about glitch Alex do you mind a gating
80:43 - to glitch sure I by the way I just
80:47 - posted the links to the next such and
80:49 - where's it glitched on iOS
80:51 - I believe said yeah no that's not it
80:58 - JK sir my mommy
81:01 - it's just glitch calm okay so glitch
81:07 - allows you to do projects just right
81:11 - from your browser rather than doing it
81:13 - on your computer and then having to
81:14 - upload your files to get them online and
81:17 - it will generate a webpage for you so if
81:20 - you saw I'll just create a new project
81:22 - and it gave it the automatically
81:23 - generated name marble - classic - fire
81:26 - plant so if you Alex you go to show for
81:29 - a second that's right this little
81:32 - sunglasses are and you go to in a new
81:34 - window actually in a new oh there we go
81:39 - so you actually have a cool new web page
81:41 - right now that anyone any of you guys
81:44 - can visit at marble - classic - fire
81:48 - planet dodge I think it's like glitch
81:50 - dot me is the full URL do you mind going
81:54 - back to the the picture or a second so
81:56 - you can see the full URL yeah dot glitch
81:59 - dot me so if you want to have a project
82:01 - immediately hosted online it's super
82:03 - easy to do that with glitch the other
82:05 - great part about glitches Alex if you
82:07 - don't mind going back to the home page
82:12 - so the the really powerful thing about
82:15 - glitch is it's can it's a community of
82:18 - creators and you can remix different
82:22 - people's projects so if Alex you can go
82:26 - back to there's a way to get back to the
82:30 - home screen quickly but glitch will have
82:35 - like different projects featuring you
82:38 - can go look through curated collections
82:40 - that people have woo ideas that's a
82:42 - great one why don't you go to starter
82:44 - charge a yes so this is what it looks
82:48 - like when you're looking at someone
82:49 - else's project it would load the project
82:51 - below and you can see the project itself
82:54 - there should be a link yeah on the
82:58 - there's there's usually like a remix
83:00 - your own button so it's kind of right
83:02 - below where the project is
83:04 - so let's if you click on that remix your
83:05 - own if you scroll down so if you click
83:10 - that you it immediately Forks that
83:13 - specific project basically makes a copy
83:15 - of that project with all the code in it
83:18 - for you to play with so actually when
83:22 - I'm teaching p5 I usually do a template
83:25 - in glitch and so then learners can just
83:30 - take what I've built and then remix the
83:32 - code from there so it's really fun to be
83:35 - able to like experiment with different
83:37 - projects if you see a project that you
83:38 - think it's really cool and want to know
83:40 - how it's built or you want to modify it
83:42 - glitch is a really great place to get
83:44 - started for that yep
83:46 - I'm seeing comments in the chat about
83:50 - like coach Adam II Pro and paid paid
83:53 - coke Adam II one thing that so for
83:57 - people that don't have Coke Adam a pro
83:59 - so coke at me pro gives you access to a
84:02 - bunch of courses and and our projects
84:04 - and quizzes and all that sort of stuff
84:06 - but we have you know the you know the
84:10 - address for the scholarship thing so if
84:21 - you don't have a pro account if you we
84:26 - started a co-captain scholarship
84:28 - so right now due to Kobe 19 and everyone
84:30 - being at home we want to give access to
84:34 - two scholarships for students that are
84:37 - stuck at home and teachers that are
84:38 - second home and you need resources so if
84:41 - you go to if you Google and Coke Adam a
84:43 - scholarship or go to Coke Adam EECOM
84:45 - slash learn from home if you have a dot
84:49 - edu or a dot k12 or other email
84:54 - addresses I think work at this point
84:56 - you can get a 90 day scholarship for pro
85:00 - and that will give you access to all of
85:01 - our courses so go there if you want to
85:07 - want to play around with coke add
85:10 - anymore
85:11 - until when so when we started the
85:13 - scholarship we said that it was going to
85:15 - be 90 days the idea was going
85:17 - to the end of the school year I think
85:19 - that is still currently the plan and so
85:22 - we're like thirty days into that so if
85:23 - you sign up for a scholarship here you
85:25 - should get about sixty days of free Pro
85:30 - again this is only people that have a
85:33 - dot edu or like a education email
85:37 - address yeah exactly and even if you
85:40 - don't have a dot edu but you have like a
85:42 - I think we're working with this new
85:43 - system that Spotify uses to to check out
85:46 - educational credentials and if you have
85:49 - any troubles will see mail or customer
85:52 - service team yeah yeah cool question are
86:01 - there curriculum resources for p5.js
86:03 - it's not on code Academy yet although
86:04 - Zoey and I would love that to be the
86:06 - case perhaps give us feedback I've
86:25 - talked with my friend who works at the
86:27 - New York Department of Education where
86:28 - they use P five in the classroom and so
86:30 - it'd be a really great opportunity for
86:32 - their students but I think the lots of
86:33 - students he finds an awesome
86:35 - introduction and its really kid-friendly
86:38 - too I also used to teach with girls who
86:41 - code I would use P five for projects
86:43 - there too but it's also you know just
86:46 - because it's great for beginners doesn't
86:48 - mean specifically for kids
86:49 - tons of adults use it tons of
86:50 - professionals use it all the time so
86:51 - it's really really adaptable for
86:55 - everyone yeah I really think it's the
86:57 - best way to teach you know programming
87:00 - again it's like it kind of wrapped up in
87:02 - all of this like web devs system where
87:05 - it's like a little bit clunky at first
87:06 - of like oh this is a JavaScript page and
87:09 - it's connecting to HTML but like as soon
87:11 - as you get set up and going I find that
87:13 - it's an amazing way to teach the core
87:17 - concepts because it's so visual it's so
87:19 - interactive you know back when I was in
87:22 - high school learning computer science it
87:25 - was like you know write an if statement
87:27 - and print out hello if it is true and
87:29 - like you know I'm sad
87:31 - if it's not true it's just like so much
87:33 - more fun to be able to do these like
87:35 - super interactive drawings so yeah yeah
87:38 - I know I ate a Python class when I was
87:39 - at it and graduated NYU and it was like
87:42 - build a mortgage calculator but I think
87:44 - you know valuable for some people but I
87:46 - was like man my first class was with Dan
87:49 - Schiffman learning p5 I'm like really
87:52 - really happy about that even that's not
87:56 - something you end up using in your
87:57 - professional life I think yeah it's
87:58 - still it's still really fun and a great
88:00 - way to practice programming so the next
88:04 - session is starting at noon in three
88:07 - minutes so we're coming into your coffee
88:09 - time guys if you want to go grass take a
88:11 - break something I just posted the links
88:14 - to the registration page for the two
88:16 - other sessions we're doing in Curtis
88:20 - Swift which is the permanent language
88:23 - that Apple uses to make hot and then
88:26 - that we are doing learn CSS so if you're
88:29 - if this like web dev related stuff
88:31 - interests you and you want to learn some
88:34 - web dev stuff in earnest of like making
88:36 - actual websites as opposed to little
88:37 - canvases Lauren CSS would be a good
88:39 - place to go there yeah absolutely and
88:43 - you can combine HTML CSS JavaScript last
88:45 - les plug pp5 works with dom manipulation
88:50 - and interactive stuff like that too so
88:52 - you can combine all of this stuff
88:53 - together to make really awesome websites
88:55 - yeah so cool thanks for thanks for
88:59 - joining up really thank you everyone
89:02 - Kenny's gonna be in that CSS lesson
89:04 - Kenny is doing back-to-back sessions
89:06 - he's doing Kenny is doing four and a
89:07 - half hours straight of teaching so good
89:09 - job Amy
89:10 - no I'm taking in our audience
89:13 - participation sitting here and looking
89:16 - pretty that's what we hired you for
89:19 - exactly alright I'm gonna stop the I'm
89:27 - gonna stop the if I can figure out how I
89:30 - do that thank you for joining everyone
89:32 - yeah thanks secure as they say talk to
89:35 - you later