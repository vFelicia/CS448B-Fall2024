00:00 - what is up everybody I am Brendon I'm a
00:03 - full-stack developer based in Brooklyn
00:04 - New York and today I'm going to be
00:06 - walking you through how to create a
00:07 - website so I'm going to be showing you
00:10 - how to set up the structure of our
00:11 - website we're gonna cover the
00:13 - relationship between a URL and a web
00:15 - browser I'm gonna add some content to
00:17 - our website and then show you how to
00:19 - view your website in the web browser and
00:21 - then at the very end I'll show you what
00:23 - you can build when you add a tiny little
00:25 - bit of CSS to our website so let's jump
00:28 - in okay let's start off by making sure
00:31 - you have a text editor installed you
00:33 - think of a text editor as the microsoft
00:35 - word for code it's a piece of software
00:37 - that serves is the environment in which
00:39 - you write and manipulate code if you
00:41 - don't have one installed I'd recommend
00:43 - you head to code Visual Studio com to
00:46 - download the Visual Studio code or vs
00:49 - code for short text editor it's a
00:51 - completely free download and it is
00:53 - available on every operating system out
00:55 - there now there are a bunch of different
00:58 - text editors out there there's sublime
01:00 - there's atom which I've used in the past
01:02 - I'm sure there's others floating out
01:03 - there they all basically accomplish the
01:05 - same thing so you do you but I'm going
01:09 - to use vs code for this tutorial so once
01:11 - that's downloaded go ahead and open up
01:13 - vs code the first thing we need to do is
01:16 - create an outer directory to house our
01:18 - project directory is just another word
01:21 - for a folder once we create that
01:23 - directory we can then create an HTML
01:25 - file that will serve as the home page
01:27 - for our website now there are a few ways
01:30 - of creating this folder and file if
01:32 - you're feeling comfortable with the
01:33 - command line I challenge you to use it
01:35 - if you don't know what the command line
01:37 - is we offer a course on code Academy
01:39 - that teaches you how to use it and I'll
01:42 - include a link to that course in the
01:43 - description below but for this tutorial
01:45 - I'm going to assume that you don't know
01:47 - the command line and I'm just going to
01:48 - use the standard way of creating a
01:50 - folder in file I'm going to be using my
01:52 - trackpad and the text editor user
01:54 - interface enough Jib jabbing let's start
01:57 - doing something so I'm going to click
01:58 - the file option at the top of my window
02:00 - then click open I'm going to navigate to
02:06 - a special folder I've already created
02:08 - reserved for all of my code Academy
02:10 - related projects code Academy
02:13 - and then I'm going to click this new
02:15 - folder button at the bottom right here
02:16 - I'm sorry to bottom left and I'm gonna
02:19 - call this folder hello underscore HTML
02:21 - so create that and then I'm gonna open
02:24 - it
02:29 - and cool so I've got my folder opened
02:32 - here next let's add our HTML file I'm
02:35 - going to call this one index dot HTML
02:38 - notice how this file ends in a dot HTML
02:41 - if you're writing some CSS or some
02:44 - JavaScript you would instead use a dot
02:46 - CSS or a J yes for JavaScript and that
02:50 - goes for whatever language you're
02:51 - writing in now why have I called this
02:53 - file index dot HTML whenever you make a
02:55 - website it's best practice to name the
02:57 - homepage of your website index because
02:59 - web browsers have been built to expect
03:01 - an index.html file as the home page of a
03:04 - website also other developers will know
03:07 - exactly where to look to find your home
03:08 - page because it's the industry standard
03:11 - to use index so I'm going to hit enter
03:14 - and you'll see the index.html file is
03:16 - automatically opened up on the right
03:18 - side of our screen here and we can start
03:19 - putting some code inside that file ok so
03:22 - let's add some HTML boilerplate now
03:25 - every HTML file requires some starter
03:28 - code in order for web browsers to be
03:30 - able to read it this is what's referred
03:32 - to as boilerplate now there's actually
03:35 - two ways to do this the first is using
03:37 - the built in HTML boilerplate templates
03:40 - included in our text editor I'm using vs
03:43 - code so depending on which text editor
03:45 - you're using this may or may not be an
03:46 - option for you but I'm going to type
03:48 - HTML and then you'll see a bunch of
03:52 - different HTML boilerplate options I'm
03:55 - actually going to navigate down to the
03:57 - third one and what I'm going to do is
04:00 - I'm going to hit enter and boom I've got
04:02 - my boilerplate ready to go if your text
04:05 - editor does not have this option you can
04:07 - go over to this article on code Academy
04:09 - comm and copy the template we've
04:11 - included here and paste it back in your
04:14 - HTML file now don't worry
04:17 - I'll include a link to that article in
04:19 - the description below both of these
04:21 - options worked fine though I'm actually
04:23 - just going to keep that first one I had
04:29 - now before we start adding content to
04:31 - our website one thing I'd like to point
04:33 - out is the fact that every HTML file has
04:36 - two main sections the head
04:39 - and the body the head section is
04:43 - reserved for things that are not
04:45 - important for humans things like linking
04:47 - to CSS stylesheets or JavaScript scripts
04:50 - there is one exception however and
04:52 - that's the title tag that you see up
04:54 - here this is the name of the tab you see
04:57 - from the web browser so if you notice up
04:59 - here it says how to create a website
05:01 - that is completely controlled in the
05:04 - title which is relevant to humans
05:06 - because you know when you're viewing
05:07 - tabs you're like Oh which one's open on
05:08 - here HTML tutorial BAM got it
05:11 - but anyway the body is reserved for the
05:14 - actual content of the site things that
05:16 - humans actually see like text images
05:19 - links and videos etc now what I like to
05:22 - do is indent the head and body section
05:24 - like this so that I can clearly see
05:27 - they're enclosed in HTML tags again you
05:29 - don't need to do this but it just helps
05:31 - me for my eyes so I can clearly see that
05:33 - you know everything is enclosed in this
05:35 - HTML tag and I've got my main head and
05:38 - then I've got my main body section right
05:39 - here let's actually start adding some
05:42 - things to our website inside the body
05:45 - section let's create a heading I'm going
05:47 - to add in h1 and then hit tab and what
05:51 - v/s code is going to do is it's
05:53 - automatically going to create an opening
05:55 - and closing h1 tag the H in h1 stands
05:59 - for heading there are actually six other
06:01 - heading tags there's h1 h2 h3 h4 h5 and
06:04 - h6 the numbers correspond to how
06:07 - important the heading is in regards to
06:08 - SEO one being the most important and six
06:11 - being the least when you start playing
06:13 - with HTML you'll eventually realize that
06:15 - h1 tags automatically get assigned at
06:18 - the largest text size compared to the
06:19 - other heading tags so h2 would be a
06:22 - little smaller than h1 h3 would be a
06:24 - little smaller than h2 and definitely
06:26 - smaller than h1 and so on and so on
06:28 - ok so let's put some text in between
06:31 - these tags so I'm going to put howdy
06:34 - folks it's everyone's favorite
06:41 - entertainer dot dot okay and I'm gonna
06:45 - save that really quickly I use the
06:47 - command
06:48 - I'm on Mac command s
06:50 - and we have that saved and we are good
06:53 - to go and finally we've got a website
06:55 - with some actual content now you might
06:57 - be wondering how do we view this website
06:59 - we apparently created well how would you
07:01 - view any website you'd open up a web
07:04 - browser and enter a URL in the address
07:06 - bar to go to that site for example let's
07:09 - go to code Academy dot-com slash learn
07:12 - slash learn dot each night dot - HTML
07:24 - okay so we're looking at the HTML file
07:27 - for the learn HTML section of the code
07:30 - Academy site first things first let's
07:32 - talk about the URL I just entered itself
07:34 - because I bet you didn't know this so
07:36 - the URL which stands for Uniform
07:38 - Resource locator it's just a path to a
07:41 - specific file in this case we're
07:43 - currently looking at the learn HTML
07:45 - resource which is inside the learn
07:47 - directory located on code Academy comm
07:50 - server
07:51 - hence code Academy com slash learn the
07:54 - directory slash
07:56 - learn - HTML the actual resource or file
07:59 - we want to look at therefore the
08:02 - structure of the URL is much more
08:04 - descriptive than you think
08:05 - now with this context a web browser is
08:07 - simply a piece of software that can
08:09 - interpret and render HTML files just
08:12 - like how you'd use a media player to
08:14 - listen to music or Microsoft Word to
08:16 - read and edit a dot doc file so if a URL
08:18 - is just an address to a specific file or
08:21 - resource on your computer it seems to
08:23 - reckon that we can use a web browser to
08:24 - even view a resource on our own computer
08:27 - so let's look back at our text editor
08:29 - and try and piece together the URL for
08:32 - our index.html file we know based on
08:35 - this navigation bar over here that our
08:38 - index.html file is located in our hello
08:41 - HTML folder and if you remember from the
08:44 - beginning I had placed this folder
08:45 - inside my codecademy folder so so far
08:48 - our URL looks like this and this is not
08:52 - valid HTML code by the way but I just
08:54 - want to show you here so the URL
08:56 - currently looks like this so code
08:58 - Academy folder and we placed the hello
09:00 - HTML folder inside that
09:03 - inside that is this file that we're
09:05 - currently writing in index dot HTML
09:07 - however I know that this is not the full
09:10 - picture of the actual address of this
09:12 - index.html file because the computer I'm
09:14 - on has multiple accounts on it meaning
09:17 - that this file is likely located in
09:19 - another file that represents my account
09:21 - which contains all of my folders and
09:23 - files and none of anyone else's so let
09:27 - me show you a cool trick here I'm gonna
09:28 - right click on index dot HTML and click
09:31 - on the copy path option I'm going to
09:34 - paste that and you'll see here something
09:36 - very interesting notice how there's a
09:38 - user's folder and inside that a Brenden
09:40 - folder and then inside that codecademy
09:42 - folder inside that hello HTML folder and
09:44 - finally inside that the index.html file
09:47 - this is the full path of this index dot
09:50 - HTML resource located on my computer and
09:53 - let me just get rid of this for now
09:55 - actually let's comment it out I'm gonna
09:57 - hit command forward slash and command
10:00 - forward slash and that has been
10:02 - officially commented out meaning it's
10:04 - not going to throw any errors when we go
10:05 - and try and reload this page okay so
10:09 - let's add a new tab here and then I'm
10:12 - going to paste that path that I had
10:13 - copied before and boom we've got our
10:18 - website now I want to point out the
10:19 - difference between the URL we just
10:21 - pasted and the one we were looking at
10:23 - before this one is considered a local
10:27 - URL because it points to a specific file
10:29 - located on my computer that means it's
10:32 - local whereas the codecademy one let me
10:35 - open that up over here this one is
10:38 - considered a remote URL because it's a
10:40 - path to a file on a remote computer
10:42 - Codecademy comms computer you'll also
10:45 - notice that the remote URL is prepended
10:47 - by the letters HTTPS here HTTP stands
10:52 - for hypertext Transfer Protocol secure
10:54 - which is the special series of hoops
10:57 - your web browser must go through in
10:59 - order to request data from someone
11:01 - else's computer
11:02 - but don't worry web browsers
11:04 - automatically handle all of this hoop
11:05 - jumping underneath the hood so you don't
11:07 - have to worry about it
11:08 - now back on our website you might notice
11:11 - something annoyingly obvious our web
11:14 - site doesn't look that good
11:16 - mean it's a little too plain vanila you
11:18 - know unfortunately we can't handle any
11:21 - styling through HTML that's actually
11:23 - where CSS comes to play and at the end
11:25 - of this video I'll actually show you
11:26 - another version of the site that
11:28 - illustrates what you can accomplish with
11:29 - CSS but for now it would be sweet
11:32 - if we had an actual image to go along
11:34 - with this h1 tag we created to show off
11:37 - everyone's favorite entertainer so let's
11:40 - add an image to our website so to add an
11:45 - image I am going to hit enter and then
11:48 - I'm going to type the letters IMG and
11:51 - then hit tab you'll notice a few things
11:54 - that stick out about this HTML element
11:56 - first there is no closing tag and
11:58 - there's honestly a bunch of different
12:00 - HTML tags that don't require closing
12:02 - tags luckily I don't have to memorize
12:04 - the ones that don't because my text
12:06 - editor knows it for me but second
12:08 - there's some text that comes after the
12:09 - letters IMG the one we're going to be
12:11 - using is SRC short for source so
12:14 - whatever URL of an image we supply to
12:16 - this SRC attribute will be rendered on
12:19 - our website as an image so I've got a
12:22 - picture of my favorite entertainer over
12:24 - here not Drake Gris and I'm gonna copy
12:26 - that URL
12:27 - sorry Drake I mean I love you but come
12:30 - on it's gritty so I'm going to copy that
12:33 - URL go back to the text editor and paste
12:35 - it in between the quotation marks of
12:37 - that SRC attribute paste so I'm going to
12:40 - command S Save come back over to our web
12:43 - browser refresh that tab and boom gritty
12:47 - in all his glory alright so that's it
12:49 - for our website again it's certainly not
12:51 - the most aesthetically pleasing website
12:52 - in the world but at least it's something
12:54 - but before we go I want to show you what
12:57 - you can accomplish with some CSS so I've
13:00 - added a little bit of CSS to my old
13:02 - website and you can see how much of a
13:04 - difference it is I mean this compared to
13:07 - this it's like night and day I've got my
13:09 - navbar I've got my button when you hover
13:11 - over it the style changes and it just I
13:14 - mean it looks like a legitimate website
13:15 - so this is what it looks like when you
13:17 - combine HTML with just a little bit of
13:19 - CSS already folks so that is how you
13:23 - create a website in a nutshell we did a
13:25 - lot today we set up the structure of our
13:27 - website using our text editors user
13:28 - interface we
13:30 - the HTML boilerplate code to the
13:32 - index.html file we then use the web
13:35 - browser to view that file we talked
13:38 - about the differences between a remote
13:40 - URL and a local URL we talked about HTTP
13:44 - which is the protocol web browsers used
13:46 - to view data located on someone else's
13:48 - computer we then added some content to
13:50 - our website including an image of gritty
13:52 - and at the very end I showed you what
13:54 - you could accomplish formatting slash
13:56 - style wise with a little bit of CSS so
13:59 - that is it for this walkthrough and I
14:01 - will see you in the next one bye