00:00 - hi my name is Stephanie I'm a software
00:02 - developer based in Baltimore and in this
00:04 - video we're gonna go over what it takes
00:06 - to get a developer team started we'll
00:09 - also cover what typical development
00:10 - teams look like some tips that make them
00:12 - effective and some neat tools that you
00:14 - can use to make collaboration easier
00:16 - before you start assembling your team
00:18 - you should have an idea of what you want
00:20 - your project to accomplish from there
00:22 - you can figure out what skills you need
00:24 - in order to make this project happen do
00:26 - you need someone who can do the
00:27 - front-end development and another for
00:29 - back-end or what's in full stack
00:31 - developer suffice and what about UI UX
00:34 - designers and people who can also do
00:36 - data analysis so now it's time to
00:38 - assemble your team if you're not sure
00:40 - where to start looking don't worry
00:42 - Coke ad amis got your back it can be a
00:44 - bit intimidating to reach out for the
00:46 - first time but remember everyone has
00:48 - been in your shoes at one point the
00:50 - developer community is supportive and
00:52 - inclusive and always ready to help coke
00:54 - adam ii has set up several spaces for
00:56 - you to connect with other programmers
00:57 - hop on a project or start your own
00:59 - there's the forums the Facebook group
01:03 - and the lifelong learner slack community
01:05 - for pro users the pro sock community has
01:08 - some extra resources and guidance for
01:10 - working on group projects from other
01:12 - people who've worked on them before
01:13 - links to all of these spaces are down
01:15 - below don't forget there are also local
01:18 - meetups once you've got a team going
01:20 - it's a good idea to set up a meeting to
01:22 - make sure everyone is on the same page
01:24 - here you can outline all the
01:26 - requirements that your project should be
01:28 - able to accomplish figure out what each
01:30 - person wants to accomplish and set team
01:32 - norms like what tech is each person used
01:35 - to working with and how much time can
01:37 - they commit things like that this part
01:40 - is really important because it aligns
01:42 - everyone's expectations with the team
01:44 - goals I've been on teams where we
01:46 - weren't clear enough with our
01:47 - expectations from the beginning and
01:49 - there ended up being a lot of unfinished
01:51 - work so some of the members had a
01:53 - shoulder on more of the work to make up
01:55 - for the missing gaps there is one time
01:58 - where we had one team member that could
02:00 - no longer make the time commitment but
02:01 - the show must go on
02:03 - right so we familiarize ourselves with
02:05 - the skills and contributions the member
02:07 - was making and filled in those gaps my
02:10 - experiences for this team ended up being
02:12 - really helpful in my later
02:13 - working in the industry because it's
02:15 - common to have team members jump to
02:17 - different projects your team may also
02:19 - want to consider setting brawls to be
02:21 - better organized particularly if you
02:23 - have a larger team with a more ambitious
02:25 - project as you're figuring out what
02:27 - roles each person will fulfill take a
02:29 - look at what each person can bring to
02:31 - the table in what they want to improve
02:33 - group projects are always a good
02:35 - learning opportunity and the best place
02:37 - to explore out of your comfort zone and
02:39 - try something new
02:40 - not everyone is going to be perfect in
02:42 - every role but you have your team
02:43 - members to rely on for feedback and
02:45 - suggestions for improvement you may also
02:48 - want to have someone to fill the team
02:50 - leader role to make sure that the team
02:51 - as a whole is organized and on track and
02:54 - if you have a more ambitious project
02:56 - like creating a mobile app for a lawn
02:58 - care service your team may also want to
03:00 - assign leads to own different parts of
03:02 - the project these leads will take
03:04 - ownership of a feature and make sure
03:06 - that it gets done this can be especially
03:08 - helpful if you're in a situation where
03:10 - the majority of your members are remote
03:12 - most enterprise teams follow a
03:14 - development methodology to organize
03:17 - their work it gives the team
03:18 - transparency so every member is kept up
03:21 - to date with the project's progress and
03:23 - contributing together as a team if you
03:25 - have a sizable team like more than two
03:27 - or three people
03:28 - I recommend following one of these
03:29 - methodologies it'll help move your
03:32 - projects progress along more quickly and
03:34 - help you learn how to work as part of a
03:36 - real-world dev team we've got lots of
03:38 - resources on the different structures
03:39 - you can follow down below it's up to
03:41 - your team in your dynamics to figure out
03:44 - which one will work best if you're not
03:46 - sure which one to choose and you want
03:47 - more structure try shooting for scrum
03:49 - first otherwise go for Kanban and then
03:52 - make modifications toward something that
03:54 - will work unfortunately we can't read
03:57 - each other's minds so that's why I'm
03:59 - making sure you're regularly
04:00 - communicating with your team is really
04:02 - important this can be anything from
04:04 - getting help on something you're stuck
04:06 - on to sharing a new find that you have
04:08 - for doing something there is one time
04:10 - where I hadn't updated my team that I
04:12 - was working on a new task and our tech
04:14 - lead hadn't updated our team that there
04:16 - was going to be a change in the task I
04:18 - had picked up so when I was done with a
04:20 - task I found out that all my work had to
04:22 - be scrapped because we were changing our
04:24 - approach one way to avoid all that
04:27 - is to schedule a recurring meeting for
04:29 - everyone to get together and also people
04:31 - can update their progress in the project
04:33 - it can be once a week or twice depending
04:35 - on availabilities during these meetings
04:38 - the team you can check in and identify
04:40 - the project's progress relative to the
04:42 - team's goals and if needed they can
04:45 - readjust the priorities and tasks
04:47 - assignments if you have a more casual
04:49 - project then you can be more informal
04:51 - with your team particularly if you don't
04:53 - really have a deadline in mind otherwise
04:55 - you may want to start with a more
04:57 - structure system of how your work is
04:58 - going to be created reviewed and
05:00 - accepted so this means setting
05:02 - priorities and deadlines on the tasks
05:04 - that your team has split out you can
05:06 - also take advantage of gits pull
05:07 - requests to review each other's work and
05:09 - gain insight into your teammates
05:11 - perspectives pull requests are probably
05:14 - where I've grown the most as a
05:15 - programmer because there's so many
05:17 - different ways to do something when I
05:19 - get feedback of my code the reviewer can
05:21 - highlight a really clever way I hadn't
05:23 - thought of before it also forces me to
05:25 - be more attentive to details and pushes
05:27 - me to find creative and optimal
05:29 - solutions take advantage of your
05:31 - collaborative environment to ask
05:32 - questions and also help your team
05:34 - members with errors you don't always
05:37 - have to know the right answer to
05:38 - something right off the bat but when
05:40 - there's a question that you can't answer
05:41 - it's a good opportunity for you to
05:43 - research the answer together working on
05:45 - a team is exciting especially with how
05:47 - much more you learn than if you were to
05:49 - develop on your own so it can be
05:51 - tempting to over-promised but don't let
05:54 - that discourage you just take it as a
05:56 - learning opportunity to get to know your
05:57 - own limits and pace better and next time
06:00 - you can make the right adjustments now
06:02 - that everyone is organized and ready to
06:04 - roll it's time to start working on the
06:06 - project I'll link any resources I
06:08 - mentioned down in the description there
06:10 - are a lot of great online tools that can
06:12 - help you share and collaborate on some
06:13 - quick code snippets you can use jsfiddle
06:16 - repli'd or cop√°n io just note that
06:18 - jsfiddle and code pen are really more if
06:21 - you're writing code for front-end web
06:22 - development they are low commitment
06:25 - since you don't even need an accountant
06:27 - to use any of these and they also do the
06:29 - hard work of setting up the environment
06:31 - with the basic dependencies you need so
06:33 - you can just start coding right away but
06:35 - for collaborating on a large-scale
06:37 - project
06:38 - I highly recommend
06:39 - using get coke Adam II has a free course
06:41 - and some helpful videos on giving you
06:43 - started with git if you haven't used it
06:45 - before what's great about it is that
06:47 - it'll help your team with version
06:48 - control especially when you and your
06:50 - other teammates are working on the same
06:52 - files at the same time you can also use
06:54 - github or git lab to store all of your
06:56 - projects they'll help you build out your
06:58 - repertoire and you can share them with
06:59 - anyone even potential employers feel
07:02 - free to check out the link below on more
07:04 - info about git and github pretty much
07:06 - every team I've worked on uses good and
07:08 - I even use git lab in my work now you'll
07:11 - also want some kind of way to track your
07:13 - tasks and assign them to team members if
07:15 - you're just getting started asana and
07:17 - Trello are some solid options that will
07:19 - give you the functionality you need and
07:21 - more for communication slacking discord
07:24 - are really good options they make it
07:26 - really easy to share files code snippets
07:28 - and make video and voice calls the video
07:31 - calls also have screen sharing available
07:32 - you can also quickly look for previous
07:35 - messages or shared files from any given
07:37 - person at any given time including
07:40 - yourself and if you want to be super
07:42 - hardcore
07:42 - there are a lot of integrations you can
07:44 - insert it into your channels like asana
07:46 - and Google counters if you're in the
07:48 - post Lac community you can just get
07:50 - started with dmsr private channels but
07:52 - it's also pretty easy to just set up
07:54 - your own free workspace these are just
07:57 - some things to keep in mind as you're
07:58 - working on a team not every solution
08:00 - will work for every situation but
08:02 - starting a group project is a great way
08:05 - to build out your team skills good luck