00:03 - i think we're live
00:07 - all right how are y'all doing
00:13 - are we live think so
00:18 - yeah all right
00:23 - you think we're live how we all doing
00:37 - neat cool welcome to
00:40 - uh codecademy live so what we're going
00:43 - to be doing
00:44 - in this session is to be starting to
00:47 - learn how to build some ios apps
00:51 - welcome to everyone coming in now at the
00:52 - live stream and hi deb people who are
00:55 - joining at some point in the future
00:57 - excited to have you all here
00:59 - we'll be keeping an eye on chat
01:01 - throughout this so feel free to have any
01:03 - questions or anything else you want to
01:04 - chat about
01:05 - as uh things come up that we're going
01:07 - over
01:08 - uh so we're gonna get started in just a
01:10 - sec but before we do just a way of
01:12 - introductions my name is ben
01:13 - and i could count me for about six
01:16 - months or so
01:17 - and in previous lives before this i used
01:20 - to be a
01:21 - middle school math teacher an ios
01:24 - teacher at a boot camp and an ios
01:25 - developer at a point of sale company
01:27 - so excited to be sharing some swift ui
01:30 - stuff with you
01:30 - in this live stream series so we're
01:33 - starting today
01:34 - and galena yeah um so hey everyone
01:37 - my name is elena i'm a curriculum
01:38 - developer here at codecademy alongside
01:41 - ben on the mobile team and we've been
01:43 - working on some ios content that we are
01:46 - very excited to share with you today
01:50 - perfect so without further ado let's hop
01:52 - right into it here so go ahead
01:54 - share out what we're going to be looking
01:55 - at so
01:57 - this is our skill path here
02:01 - so what we're going to be covering is a
02:03 - lot of the same content
02:04 - from our skill path which is build ios
02:07 - apps the swift ui
02:08 - so as part of this uh skill path center
02:11 - platform we teach you
02:12 - how to work in swift how to learn the
02:14 - basic building blocks of the language
02:16 - and then also how to build out an
02:18 - application
02:20 - over the course of this live stream
02:21 - series we're going to be skipping some
02:23 - of the language stuff and getting right
02:24 - into the swift ui content and focusing
02:26 - on
02:27 - how to build your own application in ios
02:30 - so a little bit of a preview of what
02:31 - that's going to look like is
02:33 - it's a little quiz app that we're
02:35 - building out so you're going to be able
02:36 - to
02:37 - present them with some information
02:40 - upfront
02:40 - and then guide people through a quiz
02:43 - that they can complete
02:44 - so we're going to be building that out
02:45 - together if you have
02:47 - things up and running where you can be
02:48 - building that out yourself great if you
02:50 - want to be following
02:51 - following along and just learning and
02:52 - picking up later that's good too
02:55 - so let's go ahead and get right into it
02:56 - so we're going to be building out some
02:57 - kind of quiz app
02:58 - so if you don't have xcode installed
03:01 - already and you're interested in
03:02 - building some ios
03:03 - applications xcode's going to be the
03:05 - best place to start
03:07 - so how do you do that in the app store
03:09 - there is
03:10 - an application which is called xcode
03:13 - which you can find in the develop
03:14 - category
03:16 - and inside here i have it already so i
03:18 - just have open next to it if you don't
03:20 - have it and you want to
03:21 - download it now so you can follow along
03:22 - live follow along later
03:24 - then you can go ahead and get that so
03:25 - you can follow along i already have
03:27 - xcode so i'm just going to go ahead and
03:28 - open it
03:30 - and then we're going to be building an
03:31 - ios application i got a bunch of
03:33 - projects here i've made before but we
03:35 - want to start our quiz out fresh
03:36 - i'm going to go ahead and build a new
03:39 - project
03:42 - and we can see a bunch of options come
03:43 - up for what we want to build
03:45 - now expo is a great tool for developing
03:48 - anything
03:48 - in the apple ecosystem you can build
03:50 - things for all platforms
03:52 - build ios apps you can even build
03:53 - watched apps or tv apps
03:55 - so there's a lot of great tools you have
03:57 - access to we're going to go ahead and
03:59 - just build an ios application here
04:02 - now this is going to be some kind of
04:04 - close outlook let me get some lights
04:06 - back on there we go
04:07 - so we're going to be building some kind
04:08 - of quiz app here uh and josh about an
04:10 - hour or so for this particular live
04:12 - stream then we have four of these in the
04:13 - series
04:15 - uh so we're going to go ahead and call
04:17 - this some kind of quiz app
04:20 - for team i have this as my personal team
04:22 - if you don't have anything yet you can
04:23 - set that up with apple it's not really
04:25 - an issue
04:27 - bundle identifier don't have to worry
04:28 - about it all and then the big thing we
04:29 - have to make sure is that
04:30 - interface should be set to swift ui
04:33 - there's really two kind of frameworks
04:34 - for building
04:35 - applications using ios it's either
04:38 - swift ui or storyboard supposedly is the
04:42 - newer way that was introduced by apple a
04:44 - year or two ago
04:44 - so you're going to want to make sure
04:45 - that you're using swift ui to take
04:47 - advantage of like the new tools that it
04:49 - has to offer
04:50 - uh keep this as swift ui app again
04:53 - new swift drive way of doing things and
04:55 - make sure the language is swift
04:58 - don't have to worry about core data and
04:59 - tests and then you can go ahead
05:02 - save your project wherever it is that
05:04 - you want to save your project
05:07 - click create and then it will go ahead
05:09 - and pause for a second
05:10 - and generate an initial project for you
05:13 - now
05:13 - before getting into it let's take a look
05:15 - at what we're presented with in the
05:17 - xcode
05:18 - interface here so we have our
05:21 - files on the left so we can see all the
05:23 - default files that are made when we have
05:25 - gone ahead and just created something we
05:27 - have our content
05:28 - editor in the left here where we can go
05:30 - ahead and be writing code we'll be
05:32 - mainly in there
05:33 - and you can look and see this automatic
05:35 - preview updating pause
05:36 - which is interesting let's go ahead and
05:39 - resume that
05:40 - if you don't have anything up there yet
05:42 - then you can go ahead and find that same
05:44 - thing to expand this
05:45 - in this option right here is what makes
05:47 - this canvas show up
05:49 - now you notice when we do that that we
05:51 - have a little iphone that shows up right
05:53 - here
05:54 - you can choose what kind of iphone you
05:56 - want by selecting it from this
05:57 - menu so this is an ipod touch we're
05:59 - looking at i have not had an ipod in
06:01 - quite some time
06:02 - uh so if you want to be switching it to
06:04 - a different kind of device
06:06 - you can go ahead and switch that from
06:07 - this menu here so you can see what it
06:09 - looks like
06:10 - on let's say a 12 pro max and it'll go
06:12 - ahead and start here and preview
06:14 - everything that your application has so
06:15 - far you can also change it not just to
06:18 - iphones but you can also see what it
06:20 - would look like on the ipad
06:22 - and so then after pausing for a second
06:24 - they'll go ahead and show you
06:26 - big interface right here and yeah all
06:28 - the content from the live stream is
06:29 - going to be saved and you can view it
06:30 - from youtube afterwards
06:33 - great so we can see already there's a
06:35 - lot of ways we can be previewing our
06:36 - application
06:37 - so that's a great place to start let's
06:39 - go ahead and make something that doesn't
06:41 - just say hello world
06:42 - in it i'm going to change this back to
06:43 - the iphone at 12 pro max
06:46 - and if you want to as well if you have
06:48 - an actual iphone you can plug it into
06:50 - your computer
06:51 - and then right here instead of no
06:52 - devices your actual iphone will prop up
06:55 - and you can build it right to your
06:56 - iphone and use it there for now we're
06:58 - going to be working inside of
07:00 - xcode as the tool here so
07:03 - we're going to have our preview window
07:04 - right up here make sure that it's going
07:06 - to load in
07:07 - so we have our hello world text great
07:09 - now we want to make a quiz app we just
07:10 - don't want to say hello world
07:12 - so let's go ahead and start editing when
07:14 - you click on the text in the middle
07:16 - we can see that it selects the text in
07:17 - the editor and also
07:19 - shows up a bunch of options on the right
07:21 - in this attributes panel
07:23 - you can go ahead and make sure that this
07:24 - is big enough for you to see i'm just
07:26 - going to put this presentation though
07:27 - real quick
07:29 - uh let's always forget where
07:32 - presentation mode
07:33 - is
07:37 - all right i always change where uh
07:39 - settings are
07:41 - all right let's not worry about that too
07:42 - much fun zoom in okay
07:44 - so we can see that it tells us we've got
07:46 - our text here
07:48 - as we select it now inside the
07:50 - attributes panel we can change
07:52 - a bunch of the features of what this
07:53 - text looks like we can say something
07:55 - else like
07:57 - this is new text and then we can see it
08:00 - changing
08:01 - in our actual simulator in real time
08:03 - after
08:04 - if your preview is an opening then make
08:06 - sure to select here
08:08 - and click on canvas and that goes ahead
08:10 - and it shows and hides it
08:13 - and sometimes it's just really slow if
08:14 - it's just being slow just give it a
08:16 - couple minutes
08:18 - okay so we can see that we can update
08:19 - the text here great so we can change the
08:21 - text and we can also change the text
08:23 - from this side
08:24 - so if we want to go ahead and call this
08:26 - something like quiz time we can see that
08:28 - as we type
08:29 - it changes in live updating here so we
08:31 - can go ahead
08:32 - and see what it looks like so we've got
08:34 - our quiz on
08:35 - great now it's a little small it's in
08:38 - the middle of the phone
08:39 - usually apps don't look like this so we
08:40 - might want to add some styling
08:42 - by clicking on the text again we can go
08:45 - ahead and check out the different
08:46 - modifiers that are available
08:48 - just like if you were in microsoft you
08:50 - know google docs microsoft word or
08:52 - whatever
08:52 - you can go ahead and change any of the
08:54 - properties that you're interested in
08:55 - it's a little bit small in the middle so
08:57 - let's go ahead and change this from
08:58 - inherited
08:59 - just means take whatever anyone else is
09:02 - doing
09:02 - and change that to like large title now
09:05 - a couple things happen we can see that
09:07 - the preview updates the text becomes
09:09 - much bigger which is great
09:10 - we can also see this modifier added here
09:12 - on line 13.
09:14 - what this means is that we applied this
09:16 - dot
09:17 - font modifier to text which makes
09:20 - the font appear as a large title instead
09:22 - of what it was by default
09:25 - just like we can change it from the
09:26 - attributes menu here we can also change
09:28 - it by
09:30 - going into this editor here and changing
09:33 - from any of these options for what we
09:35 - wanted to look like so we could say
09:37 - is a footnote going to be the right size
09:40 - and then say oh that makes it much
09:41 - smaller so that's probably not what we
09:42 - want
09:43 - and we can go ahead and change it back
09:44 - to a large title
09:46 - typically as you build bigger and bigger
09:48 - applications you do more of your work by
09:50 - working
09:50 - in the editor directly it's a really
09:52 - great tool to be able to kind of
09:53 - quickly see all some of the options
09:55 - available we can change the font
09:58 - we can also change the color so we can
10:00 - make this text
10:01 - any color we like so we can change it to
10:03 - be read instead of something else
10:05 - and then we can go ahead and see that
10:06 - update as well
10:08 - great starting text is pretty easy so we
10:10 - can have this is
10:11 - all starting off our application already
10:14 - has this here for us
10:15 - we can just go ahead and play with these
10:16 - modifiers
10:19 - my zoom video is covering the top part i
10:21 - drag the right side
10:22 - uh sure let me i'm going to start
10:26 - dragging things out
10:27 - thank you for that and you can let me
10:28 - know what seems reasonable how's this
10:38 - better we'll say this is better okay
10:41 - go ahead and keep fixing if we need to
10:43 - this looks good okay
10:44 - cool uh so we've gone ahead and added
10:47 - some text to it
10:49 - now let's say we want to have more text
10:51 - usually we just wouldn't want just one
10:53 - piece of text in the application we want
10:54 - a bunch of stuff that we were saying
10:56 - so there's a bunch of ways we can do
10:58 - that the easiest is we can look at this
11:00 - little plus button right up here
11:01 - this lets us access the object library
11:04 - which has all of the different things
11:05 - that we can add to our application
11:08 - by clicking plus here we can see all of
11:10 - the views that are available to add into
11:12 - our app
11:12 - we have buttons and color pickers and
11:15 - forms and labels and all the
11:17 - other good stuff that we might be
11:18 - interested in putting together so we can
11:20 - go ahead and get started by adding
11:22 - another text view we can see all the
11:24 - different kinds of text things that crop
11:25 - up
11:26 - and then just picking that up and
11:28 - dragging it into our application
11:30 - now we can't just drag it down here it
11:32 - kind of needs to know where it fits in
11:34 - so we're going to go ahead and wait till
11:36 - it tells us it's going to do something
11:37 - and here we say
11:38 - we can see that it says add text to a
11:41 - new vertical stack
11:43 - along with existing text so i'm going to
11:45 - drag that in right here
11:47 - and release now
11:50 - we see that this text added in the
11:51 - editor as this preview is updating it's
11:53 - okay if it takes a minute to do that
11:55 - sometimes it can be a little bit slow
11:57 - and now notice here that something else
11:59 - got added as well
12:00 - it doesn't just say that we have the
12:01 - text and we can see the text show up
12:03 - here
12:03 - we also have this v stack that just kind
12:05 - of appeared when we drag something in
12:08 - a v stack stands for a vertical stack
12:10 - means we want to have
12:11 - a bunch of different views that are all
12:14 - on top of each other
12:16 - so the other kind of views which we're
12:18 - going to see later you can have
12:19 - horizontal stacks which mean you want
12:21 - your view side to
12:22 - side and you can have z stacks which are
12:26 - when you have your views kind of stacked
12:27 - up on top of each other like pieces of
12:29 - paper
12:31 - so let's say here for our quiz we'd want
12:33 - to say maybe what question we were on
12:36 - so we could say question one of four and
12:39 - we can see
12:39 - as we are changing the text here our
12:41 - previews can be updating
12:43 - and then once it wakes up it'll go ahead
12:45 - and then update here
12:47 - now let's say we want to add another
12:49 - text we saw that before is added to a b
12:51 - spec
12:51 - let's go ahead and try adding the text
12:54 - ourselves without
12:55 - trying to use this object library so
12:56 - let's do it directly in the editor
12:58 - i'm going to go ahead and try to make a
13:00 - text right here
13:02 - and see what happens so maybe this
13:04 - should be the question itself
13:06 - question here
13:10 - now note when we put this question in
13:13 - something weird happens we can see a
13:15 - whole other phone appears below this a
13:17 - whole other simulator
13:18 - so what's going on here now what's
13:21 - happening is that
13:22 - it's getting a little bit confused
13:24 - because it thinks that it's only able to
13:26 - display a single view at a time
13:28 - even if that view gets really
13:29 - complicated like we have a
13:31 - vertical stack that has a bunch of
13:33 - horizontal stacks inside of it those
13:35 - horizontal stacks vertical ones
13:37 - our content view our main piece of uh
13:40 - information
13:41 - is only going to be able to display one
13:43 - view so if we try to give it two things
13:46 - it gets confused and says i can show two
13:48 - different things
13:49 - but i don't know what i i only know how
13:51 - to be working with one view at a time
13:56 - so what we can do to resolve that is we
13:58 - can just move that inside the v stack
14:00 - we can then go ahead and get rid of this
14:02 - here add it back
14:04 - in the v stack then our second preview
14:07 - will go away and the text will appear
14:09 - under here
14:10 - great that's a little placeholder
14:12 - question and we'll go ahead and change
14:13 - these later on
14:14 - let's make this something uh something
14:16 - tricky like what is one plus one
14:19 - some tricky we'll figure it out now we
14:22 - can see that the text kind of bunched up
14:24 - here so let's go ahead and fix that by
14:25 - looking at some more modifiers
14:27 - so if we click on one of these here we
14:29 - can see a bunch of options appearing
14:31 - same as before
14:32 - we messed around some of the font before
14:34 - let's go ahead and look at this padding
14:36 - option
14:37 - now you can see that we have a bunch of
14:39 - different sides we can add padding on
14:41 - and then this little check mark here so
14:43 - if we turn this on
14:45 - it adds a padding property and then just
14:47 - gives a little bit of breathing room for
14:49 - the view
14:50 - you can customize how much padding you
14:52 - want or which sides you want it on
14:54 - but most of the time working with
14:55 - defaults is going to be fine
14:57 - until you get to be building more
14:58 - complicated user interfaces
15:01 - so we can do the same thing with our
15:02 - question itself and we could probably
15:04 - make the question a little bit bigger
15:06 - too
15:06 - let's go ahead and take care of both of
15:07 - those now that we've seen
15:09 - the interfaces for doing that let's go
15:11 - ahead and then change
15:13 - the uh font from this to let's say
15:16 - title nice and big
15:19 - get to see that update which is great
15:21 - then we can go ahead and
15:23 - also change this to make sure that it
15:25 - has the padding it needs
15:28 - now you can see that this kind of has
15:29 - this weird placeholder everything where
15:31 - it
15:32 - kind of looks like regular text but you
15:33 - click on all of it this is what the
15:35 - default is that it's giving you
15:37 - you can either just use the default or
15:39 - in this case padding by itself
15:41 - just defaults to padding around all
15:43 - sides which is going to be
15:44 - more than enough for our main use case
15:47 - here
15:48 - okay so we've gone ahead and we have
15:52 - some basic information here deployed
15:54 - uh our quiz doesn't do anything right
15:57 - now though we've got our title we've got
15:58 - our question
16:00 - we got nothing to actually select on and
16:02 - it's a little bunched up still
16:03 - even though we have that padding uh it
16:06 - would be nice to have the quiz
16:07 - at the top like a proper title or a
16:10 - heading
16:10 - and then the caution text right below it
16:13 - and then this kind of somewhere in the
16:14 - middle
16:15 - so a really important question when
16:17 - you're working with applications and app
16:19 - developments is how to position things
16:21 - on the screen
16:22 - different technologies have different
16:24 - ways of presenting information
16:26 - if you're used to web development as
16:27 - well you've probably heard of or used
16:29 - css to be able to lay things out which
16:32 - is kind of the set of rules for what
16:33 - things should look like
16:35 - in swift ui we have our own way of
16:37 - determining layout and we don't need a
16:39 - separate file for it
16:40 - we can do that all by using special
16:43 - kinds of views
16:44 - that tell other views how they should
16:46 - arrange themselves
16:48 - one of those kinds of views is called
16:50 - the spacer
16:52 - a spacer is a special kind of view that
16:55 - just takes up as much room as it
16:56 - possibly can
16:58 - so inside of our v stack if we want to
17:00 - go ahead and push this to the top and
17:03 - push this kind of to the bottom we can
17:05 - put a spacer right
17:06 - in the middle is here and just say go
17:09 - ahead and stretch those out and have the
17:11 - spacer take up the room that it needs
17:14 - so let's go ahead and add that spacer in
17:17 - and we can see that we can position it
17:19 - anywhere we like inside
17:23 - we can see the text added in the editor
17:26 - and then once this goes and updates
17:27 - we'll go ahead and see what kind of
17:28 - impact that's having our code
17:31 - great so we can see that all the space
17:33 - up here is taken up by this new spacer
17:36 - view
17:38 - which is just saying hey stretch it out
17:41 - give us some breathing room between the
17:42 - top and the bottom
17:45 - now let's say that we say well the
17:46 - question should be all the way at the
17:48 - bottom we want to kind of push that up a
17:49 - little bit
17:50 - we can use another spacer to do the same
17:52 - thing we added before using the object
17:55 - library we can also go ahead and add
17:56 - that
17:57 - just using copying and pasting in our
18:00 - editor here
18:02 - and as always we want to just kind of
18:03 - wait and check in to see what our
18:05 - updates looking like
18:06 - great we can see that it now looks like
18:08 - it's in the middle here
18:09 - for where our question is uh if we
18:13 - wanted to bump it up a little bit more a
18:14 - little bit less we could either change
18:16 - the spacer
18:17 - to make it take up a different amount of
18:18 - room or
18:20 - you can kind of use a little trick to
18:21 - have two spacers
18:24 - which tell this to be proportioning
18:26 - itself a little bit differently
18:28 - having two spacers below it and one
18:30 - spacer up above kind of gives you this
18:32 - ratio where this should be twice as big
18:35 - as this so you can use a little bit of
18:36 - that reasoning to try to position where
18:38 - you want your views to be
18:40 - okay so we've got some introduction up
18:43 - at the top we've got what kind of
18:44 - question we're on
18:45 - and one we've got some question text
18:47 - that we have in the middle
18:50 - now it's not a very good quiz if we
18:52 - don't have any way of actually answering
18:54 - it or anything that we can address to be
18:57 - kind of working with our quiz
18:59 - so how can we actually add in some
19:01 - options for answering
19:02 - well we can add in some buttons for
19:04 - interactivity so something we can tap on
19:06 - to actually have something that we can
19:08 - work with so let's go ahead and add a
19:10 - button
19:11 - again we can do that either using the
19:13 - editor and just start typing it in
19:15 - seeing what happens or we can kind of
19:17 - browse around the object library to see
19:19 - what kind of views are good
19:20 - we can see button right at the top here
19:23 - selecting it tells you a bunch of
19:24 - different information
19:25 - about all the different things that you
19:27 - need to use for it
19:28 - and that's all things that you'll work
19:30 - with more as you start
19:32 - to be building more complicated apps so
19:34 - we can go ahead and take this button
19:37 - drag it right in and we can notice a
19:39 - bunch of different options
19:41 - uh we can see kind of what we were
19:42 - hinting at before can make it show up
19:44 - horizontally somewhere
19:46 - we actually just want it to be part of
19:48 - this
19:49 - part of this vertical stack right here
19:50 - so i'm just going to insert it in this
19:52 - vertical stack
19:54 - and we can see that we actually wanted
19:55 - the bottom so let's go ahead and fix
19:57 - that
19:59 - and now let's take a look at what
20:00 - happens when we add our button
20:03 - it's it's usually useful to look at some
20:05 - of the keywords you get with what swift
20:07 - is telling you for
20:09 - uh what's showing up here so we can see
20:10 - that it wants some kind of action
20:12 - and some kind of content so the content
20:15 - is going to be the view here that is the
20:18 - button is displaying
20:20 - uh and kathy if you're seeing it can't
20:22 - preview
20:23 - uh good tips are to try to go ahead and
20:26 - just close and reopen your canvas here
20:29 - to build again using command b or just
20:31 - to quit xcode and reopen it again
20:33 - xcode has a lot of great virtues as a
20:35 - piece of software
20:36 - that's also known to be a little bit
20:38 - finicky sometimes so sometimes just
20:40 - trying to like
20:41 - turn it off and on again can be a good
20:42 - step in the right direction
20:44 - especially because swift ui is a very
20:46 - new technology
20:48 - so what do we do with our button here so
20:51 - we've got our content this is what's
20:53 - displaying here
20:54 - we can make our content what we want it
20:56 - to display so we can make it a text that
20:58 - reads what we're interested in
21:00 - so we can say this should be a text that
21:03 - says
21:04 - let's say two seems like a good way to
21:06 - answer this question
21:08 - and then once our preview updates it'll
21:10 - go ahead and change it
21:11 - to what we just changed it to here nice
21:13 - and easy now
21:15 - this could be anything it doesn't just
21:17 - have to be a text you could have
21:18 - another button you could have an image
21:20 - you can have another kind of view that
21:22 - we that you can preview from here
21:24 - often text is going to do the job just
21:25 - fine though
21:27 - now the action is a little bit more
21:28 - interesting so
21:30 - we want our buttons to do things when we
21:32 - select them
21:33 - right now if we just go ahead and click
21:36 - on this it
21:37 - wouldn't do anything we haven't
21:38 - specified what we want to have happen
21:41 - when the button is selected that's where
21:44 - this action comes in
21:46 - so what we can do for the action is we
21:48 - have a little bit of a strange syntax
21:49 - for it if you
21:50 - uh that we use these open and close
21:52 - curly braces here
21:55 - now if you've used some other
21:57 - programming languages
21:58 - before and are familiar with the concept
22:00 - of a callback that's essentially what
22:02 - we're adding in here
22:05 - so callback in javascript or like a
22:08 - lambda
22:09 - in python is kind of conceptually what
22:11 - this is
22:12 - but for now if those are new terms for
22:14 - you or this is all
22:15 - kind of some new things that you're
22:16 - learning that's all good and then you
22:18 - can think that these
22:19 - curly braces you just put as bits of
22:21 - syntax and then what goes in between
22:23 - them is the thing you
22:24 - that you want your program to do so
22:28 - what do we want our program to do when
22:29 - the box was tapped
22:31 - well we wanted to let's keep it simple
22:34 - initially by just having it
22:35 - print something to show us what what
22:37 - happened
22:38 - so we can go ahead and say that this
22:39 - should print
22:41 - you selected to
22:47 - so when the preview updates nothing
22:48 - should happen right away since we
22:50 - haven't changed what this looks like
22:52 - we've just changed a little bit about
22:53 - what the behavior is
22:55 - okay so now we have this what is one
22:57 - plus one we have this two here
23:00 - let's go ahead and see if this works
23:02 - let's go ahead and click this
23:03 - run button to start our live
23:06 - preview of the application here now
23:09 - you'll notice
23:10 - that you have this live preview button
23:12 - right now we're just kind of
23:13 - looking at it in a static state where we
23:15 - can click on things and edit them
23:17 - we can simulate what a real phone would
23:19 - look like by clicking this plus button
23:21 - this play button here
23:23 - when we do that the preview will load
23:25 - for a second and then it will go ahead
23:27 - and display as
23:28 - the regular kind of phone interface here
23:32 - now note that as i click on things it's
23:33 - not changing anything on the right
23:35 - anymore because this is kind of a real
23:36 - phone that we're simulating
23:38 - now we added a button we wanted to print
23:40 - something which in swift is just the
23:42 - keyword that
23:43 - shows something up just for people who
23:45 - are working as
23:47 - the developers for it if you are an end
23:49 - user
23:50 - you don't get to see anything that's
23:51 - printed that's just for you to use as
23:53 - your developer
23:54 - so let's go ahead and click on this it
23:57 - doesn't seem like it's doing anything
23:59 - yet
24:00 - while the canvas here is usually pretty
24:03 - good
24:04 - at displaying the same things that a
24:06 - phone will it's not always exactly the
24:08 - same
24:08 - it's a pretty new tool that was added as
24:10 - part of swift ui
24:12 - so there's some elements where it
24:13 - doesn't do exactly the same kind of
24:15 - thing that a real phone would do so how
24:18 - can we see if this is
24:19 - this button is actually working well
24:21 - there's a great tool that you have
24:22 - access to
24:23 - in uh an xcode which is
24:26 - not just this canvas here but you can
24:28 - actually create
24:29 - a whole like fake instance of an iphone
24:32 - a whole simulated iphone
24:34 - and play around with that to get to see
24:36 - what your application does
24:38 - instead of clicking the play button here
24:40 - we have a play button here
24:42 - let's go ahead and click on that and
24:43 - then get to see what happens
24:47 - we can see that this time it has this
24:48 - kind of lengthier build message
24:50 - it's actually always doing that a little
24:52 - bit in the background it's always trying
24:54 - to build
24:54 - and run your app okay so now
24:58 - we have this whole other phone here
25:00 - which is this whole other program you
25:01 - can kind of see from my bar here
25:03 - i have this simulator that simulator is
25:06 - this program right here that we're
25:08 - running
25:09 - and this preview is pretty simple there
25:11 - aren't a lot of options that you have
25:13 - inside of the editor for it this
25:15 - simulator
25:16 - is a full feature does a lot of
25:18 - different things you can
25:20 - rotate things you can take things so
25:23 - it's always good fun
25:24 - you can rotate it you can change what
25:26 - the keyboard looks like so
25:28 - you can simulate face id lots of
25:29 - different things you can do with the
25:30 - simulator
25:32 - so we can go ahead and then click on
25:34 - this
25:35 - too and now we get to see the message
25:38 - showing up inside here
25:40 - so our message pops up as we click on
25:43 - the button
25:45 - great so we know that we've correctly
25:48 - hooked up our button we got a button in
25:50 - we have our text in it's displaying the
25:51 - thing that we want to
25:53 - uh so what does this do so aside from
25:56 - like uh
25:57 - you know as i was mentioning this is a
25:58 - full simulator so we get to go ahead and
26:00 - use
26:01 - anything that we want to inside of a
26:03 - phone so if you click on this home
26:05 - button
26:06 - you actually see this is this is this is
26:08 - a real phone here that looks just like a
26:09 - regular iphone would
26:11 - so it has all the things you would
26:12 - expect you can go ahead and go into
26:14 - settings and you can
26:15 - change things if you wanted to go into
26:18 - accessibility
26:19 - and change different features around to
26:20 - make the text on the phone bigger
26:22 - to make sure that your app is responsive
26:25 - to that
26:26 - you can go ahead and do that and that's
26:27 - all something that you have access to
26:29 - because
26:30 - this really simulates almost everything
26:31 - about a phone uh the only thing you
26:33 - can't do on this is actually call people
26:36 - that'd be cool and you also can't take
26:38 - photos on it
26:39 - so if you find yourself ever needing to
26:41 - make an app that has uh
26:43 - taking photos that's one of the things
26:45 - that you can't do
26:46 - on a simulator you actually need to be
26:47 - connecting your own phone
26:49 - so that you can be making sure that it
26:51 - can take photos as you'd expect it to
26:53 - it does have its own photos so if you
26:55 - just need to use someone's photos
26:57 - uh you can test those features out and
26:59 - it comes pre-selected with some
27:01 - so it's a really great tool if you're
27:03 - doing more development work
27:05 - the simulator while the preview is great
27:07 - the simulator is much more fully
27:09 - featured and sometimes can fix some of
27:11 - those smaller issues
27:12 - where maybe you're not seeing the
27:14 - behavior you'd expect like we wanted to
27:16 - see this printed
27:18 - okay so we've gone ahead and then shown
27:21 - that
27:21 - as we run this and then we can go back
27:23 - into our quiz up
27:24 - we can go and see that we get more you
27:27 - selected too as this happens
27:29 - that's great um but we can see it's kind
27:31 - of a weird button to click on it's
27:32 - really small it's
27:34 - uh not super obvious like what what it
27:37 - looks like so let's go ahead and fix
27:38 - that
27:38 - by making the button a little more
27:40 - prominent using some of those modifiers
27:43 - that we've taken a look at already
27:46 - okay so how can we go ahead and fix that
27:49 - if we click on the button and let's go
27:51 - ahead and resume this so that we can
27:53 - kind of see all of those changes
27:54 - happening in real time
27:56 - uh also quick note on if you aren't
27:59 - using this thing at the bottom
28:00 - you can kind of drag it up then you can
28:02 - also drag it down
28:04 - and that just kind of disappears and you
28:05 - can drag it back up when you need it
28:06 - again
28:07 - there's lots of powerful stuff you can
28:09 - do with the console but we're not going
28:10 - to get into that too much right now
28:12 - so let's go ahead and then make our
28:14 - button a little bit better here
28:16 - so what we would love to do is make it
28:19 - so that there is some kind of um
28:22 - some kind of border around it so it was
28:24 - a little more obvious what was happening
28:26 - uh and joshua i believe this
28:29 - they're weekly on wednesday at the same
28:31 - time uh we can double check that with
28:33 - you
28:35 - okay so we want to make this a little
28:37 - bit more obvious for what
28:38 - this button should be doing what it
28:40 - should look like now
28:41 - we'd love to add a bordering i don't see
28:43 - any border
28:44 - modifiers here to be using though we've
28:46 - got this padding maybe we'll need that
28:48 - uh but we don't have a border that we
28:50 - can be working with
28:52 - so how do we find that well what we can
28:54 - do is we can go ahead and add in a
28:57 - modifier here
28:58 - where we go ahead and see all the
29:01 - different things that we can modify as
29:03 - part of the view
29:04 - now notice we've got fonts just like
29:07 - we've had above we have all those other
29:09 - stuff which we haven't looked at so far
29:11 - and you can just kind of search for
29:12 - things that you're interested in as we
29:14 - type in
29:14 - border we can see that that's one of the
29:16 - options
29:18 - if we go ahead and click on that it's
29:19 - going to then apply our border group
29:21 - looks like it was thinking we're in the
29:23 - wrong spot if we go ahead back to our
29:25 - button
29:26 - go type in our border modifier
29:30 - and then we can see that it's adding a
29:32 - border modifier to our hold button here
29:36 - now we can see that it has two things
29:38 - that we care about in borders we can
29:40 - change what color it is
29:42 - and so we can see what that looks like
29:44 - we can also change how wide it is
29:46 - now if we make it wide here you can say
29:49 - like
29:49 - well this doesn't really make it that
29:51 - much more clear right we
29:53 - can barely see it at all because it's
29:55 - just so small and kind of scrunched
29:57 - together
29:58 - so be great to add some padding to this
30:00 - so that we can have
30:02 - our button better be actually clickable
30:04 - and selectable
30:06 - so let's go ahead and add some padding
30:10 - huh this doesn't seem like it did we
30:12 - wanted to at all
30:13 - we can see that we have the padding
30:15 - around it now and you can tell by the
30:17 - outline on this that the padding is
30:18 - being applied
30:20 - but it's still super shrunk and we can
30:22 - barely read the text because the border
30:24 - is overlapping on it
30:25 - now why is this happening uh this is
30:28 - because the
30:29 - order in which you apply modifiers makes
30:32 - a difference
30:34 - we have a regular button which just kind
30:36 - of looked like that basic
30:37 - bluetooth that we saw before modifiers
30:40 - are applied
30:41 - to views in order so we start and we say
30:45 - first we're going to apply the border
30:48 - then we're going to apply the padding if
30:51 - we apply the border first
30:53 - then it makes the kind of scrunch
30:54 - together thing that we can see right
30:56 - here
30:58 - then we apply the padding so that that
31:00 - little scrunch together thing is padded
31:02 - we want the opposite of that we want to
31:04 - pad it first and then put the border
31:06 - around the rest of the padding
31:08 - now it's hard to move around the
31:10 - different attributes in here
31:12 - we could delete the border and try to
31:14 - add it back in
31:15 - it's a lot easier for these kind of
31:17 - things to work with the editor
31:18 - and then just swap their order around so
31:20 - we can go ahead and then just
31:22 - make our padding appear where the border
31:25 - was
31:29 - now we can see it updates and does the
31:31 - thing that we want to
31:32 - so that's a that's that's a tricky thing
31:34 - that can come up when you're working
31:36 - with modifiers is the order in which
31:37 - you're applying things makes a big
31:39 - difference
31:40 - so if you're seeing something really
31:41 - weird happen make sure that the order in
31:43 - which you're adding the modifiers
31:44 - kind of matches what you expect the
31:46 - behavior to look like
31:48 - uh we can change this color here to be
31:50 - any color we like
31:53 - and then say this width is fine great so
31:56 - if we can
31:56 - kind of see from this already what it
31:58 - looks like you can also
32:00 - if you want to check to see in a
32:02 - simulator
32:03 - that's bigger than this you can go ahead
32:06 - and run it there just kind of confirm
32:08 - what it looks like
32:09 - note of course for most everything
32:10 - you're doing these will line up
32:12 - they'll be the same so you can just work
32:14 - mainly from the preview
32:15 - though occasionally there will be some
32:17 - differences between them
32:19 - okay so we've got one uh answer here now
32:22 - this would be pretty easy quiz if this
32:24 - was uh this was the extent of it other
32:26 - than the fact that we're just
32:27 - asking what uh one plus one is which is
32:29 - not the most uh tricky question to be
32:31 - working with
32:32 - so we'd love to add some more questions
32:33 - to our quiz now we can add some more
32:36 - questions
32:36 - by putting some more buttons in uh we
32:39 - mentioned before that we can have a
32:41 - vertical stack
32:42 - where we can add our buttons all on top
32:44 - of each other
32:45 - we'd love if you remember briefly from
32:47 - kind of the
32:48 - image that we had here note that the
32:50 - buttons for quiz up we kind of want to
32:52 - be
32:52 - side by side next to each other a
32:55 - vertical lamp a
32:56 - vertical stack or a v stack lets our
32:58 - views be on top
32:59 - and a horizontal stack lets them be
33:02 - right next to each other
33:03 - so we can go ahead and add an h stack or
33:06 - horizontal stack
33:07 - and then put the button inside that now
33:10 - again we could do that just from the
33:11 - editor but there's some great tools we
33:13 - can use from the object library to go
33:14 - ahead and make that happen
33:16 - as we select this button we note that we
33:19 - have a bunch of places we can drag it
33:21 - one of the options is we can drag it
33:23 - right here and it says
33:24 - add button to a new horizontal stack
33:27 - along with existing start
33:28 - which is exactly what we'd like to do we
33:31 - drag our button in
33:34 - we wait patiently for uh things to
33:36 - update uh
33:38 - or click resume that's often something
33:41 - that you might need to do
33:42 - and then if it's not updating make sure
33:44 - this thing will kind of rotate around as
33:46 - it's thinking
33:46 - so just kind of wait for that to be done
33:48 - and then we can see it turns green and
33:50 - we've got our button here great
33:52 - so we can go ahead and then say we've
33:54 - got a bunch of buttons we want
33:55 - uh let's just go ahead and have some
33:57 - simple answer choices where we've got
33:59 - you know one two three four and whatnot
34:01 - so we could go ahead and just kind of
34:03 - copy this whole button down in this h
34:06 - stack
34:07 - and then say we want our options to be
34:10 - one
34:12 - two then we can make more buttons by
34:16 - copying
34:17 - and pasting and saying we want to select
34:20 - three as an option and then we could
34:23 - have more options we want to
34:25 - select all of this and then paste this
34:28 - here
34:29 - and then say that we have four as an
34:31 - option
34:32 - okay now if you've done development work
34:35 - before
34:36 - it should be a little uneasy when you
34:38 - see a lot of copying and pasting happen
34:41 - typically when you're copying and
34:42 - pasting a lot and a lot of repeated
34:45 - things
34:45 - there's probably going to be a good
34:47 - opportunity to make that code a lot
34:49 - better
34:50 - now and that's certainly going to be the
34:52 - case here now we can note that for our
34:55 - buttons
34:56 - they're all the same except for one
34:58 - number
34:59 - in a print and then one number in the
35:01 - text
35:02 - so we would want to have some way of
35:06 - generalizing this so that it's kind of
35:08 - like its
35:09 - own button thing that we can work on
35:12 - here
35:13 - now sometimes yeah okay so
35:16 - what we want to do is build a new view
35:19 - of our own just like we have a content
35:22 - view that shows all of this
35:23 - we want to build a new view that's just
35:26 - a button with all these properties that
35:28 - we all that we want to have
35:30 - we can do that by just copying all this
35:33 - button
35:35 - and then making a new view right down
35:38 - here
35:39 - now notice we just kind of copy some of
35:42 - the syntax
35:43 - if you're not super familiar with uh
35:45 - swift yet that's totally fine
35:47 - struct is a keyword that means we have a
35:49 - structure so it's the kind of thing that
35:50 - we want
35:51 - then we've got the name of the thing we
35:53 - note that the
35:54 - kind of thing that it is is a view and
35:57 - then we just describe
35:58 - what the body should look like so we can
36:01 - start defining a new structure right
36:03 - here
36:03 - where we say that we want to have a
36:06 - let's say an answer button
36:08 - which is some kind of view then this is
36:12 - going to have some kind of
36:14 - body property and we can see that it
36:17 - already knows what we're supposed to be
36:18 - writing in so it's just going to go
36:19 - ahead and help us
36:21 - and then we can just add one of these
36:22 - buttons in here now to make sure that
36:26 - the error should go away on their own
36:28 - uh and kind of resume to make sure that
36:31 - everything's woken up
36:32 - and then you can enter in command b to
36:34 - build things if it's gotten a little bit
36:36 - out of sync
36:38 - great now we have this answer button now
36:40 - we can use this answer button instead of
36:42 - having all these things being copied and
36:44 - pasted
36:45 - so let's take a look at making instead
36:48 - of copying and pasting
36:49 - all of the specs here let's just have
36:51 - four answer
36:52 - buttons and get rid of
36:56 - all of this great
36:59 - so anytime you can delete a lot of
37:01 - things at once
37:03 - uh that's a good refactor and in our
37:05 - skill path we have a lot of refactoring
37:07 - that we do where we kind of
37:09 - show you how to use best practices to be
37:11 - putting content together
37:14 - now we can note that we we still have a
37:17 - little bit of copying and pasting
37:18 - but also this isn't quite what we wanted
37:21 - right we have
37:22 - all of these here say 4 on them and we
37:25 - they don't even have the right answer
37:26 - showing up
37:27 - so that's not what we want to have for a
37:29 - quiz we want to have a bunch of
37:30 - different answers
37:31 - at least one of them should be the right
37:32 - answer now
37:34 - the easiest way to do that is to make
37:36 - our answer button
37:37 - have some kind of changeable thing that
37:40 - we can put into it
37:42 - you'll notice when we made a text we
37:45 - gave our text
37:46 - some interesting information we said
37:48 - you're a text that displays
37:50 - quiz time you're a text that displays
37:53 - question one out of four
37:54 - you're a text that displays what is one
37:56 - plus one we can make
37:58 - our answer button be that kind of view
38:01 - that knows how to change itself based on
38:03 - what we want to display
38:06 - so we want to change well what should
38:08 - the actual answer be what should the
38:10 - text be
38:11 - and we note that that's some kind of
38:13 - string property
38:15 - based on what the text is that's put in
38:18 - we want to go ahead and display that
38:21 - now if you are unfamiliar with this
38:25 - syntax this is called string
38:26 - interpolation
38:28 - uh this is a way of making it so that
38:29 - you can put variables
38:31 - inside strings we get into this much
38:33 - more in our swift courses
38:35 - you can also just use the kind of plus
38:37 - button to just add them together that
38:38 - will work too
38:40 - uh and then we just want to display the
38:42 - text
38:44 - right here okay now
38:48 - this is set up to display exactly what
38:50 - we want
38:51 - but our answer button's up here
38:52 - complaining why are they complaining
38:54 - it's often very useful in xcode to be
38:57 - clicking on these errors and getting to
38:59 - see what the problem is
39:00 - this tells us hey you said that answer
39:03 - buttons needed text to display
39:05 - and i don't know what the text would be
39:07 - tell me so you click on okay you say fix
39:10 - and then you can enter the text that you
39:12 - want to be displaying each of these will
39:14 - have the same
39:15 - issue coming up and we can go ahead and
39:17 - resolve each of them
39:21 - and say okay three
39:24 - and four
39:28 - okay great so this is already
39:31 - much improvement over first time when we
39:33 - just had a bunch of copy
39:35 - and pasted information down so what can
39:38 - we do from here
39:39 - well we can first resume to make sure
39:41 - that this worked correctly which is
39:43 - always a good thing to check on
39:45 - i can wait for the preview to update and
39:48 - then wait for the preview to update
39:49 - and then see that we've got one two
39:51 - three four great
39:53 - now there's still a little bit of
39:54 - copying and pasting and probably more
39:55 - than we'd like
39:56 - we can see that we have answer button
39:59 - displays four times and if we had
40:01 - more things that we want to be adding
40:03 - well let's say that
40:05 - the product team comes back to us and
40:07 - tells us that we should have six
40:08 - questions in each of our quizzes not
40:10 - four we have to copy
40:12 - and paste more answer buttons and that's
40:15 - pretty verbose to have to write
40:17 - each of the things out and change them
40:20 - to whatever we want to change them to
40:22 - fortunately there's a way that we can
40:24 - introduce a structure to make this a
40:26 - little bit
40:27 - more straightforward uh if you have
40:30 - learned it all about
40:31 - loops or iteration from other
40:33 - development that you've happened
40:34 - swift swift ui has the same concept that
40:38 - we can use
40:39 - there's a special kind of structure
40:40 - which is called a four
40:42 - each and a four each as our
40:45 - kind of tool tip says here in very
40:47 - formal way is a structure that computes
40:49 - views on demand from an underlying
40:50 - collection of identified data
40:52 - what this means is we can tell it uh we
40:55 - want you to do the same thing a bunch of
40:57 - different times
40:58 - so we can go ahead and then choose what
41:01 - we want this to look like
41:02 - so we can go ahead and make a for each
41:04 - we can go ahead and specify that we want
41:07 - to have our for each have some data
41:11 - we want our for each to have something
41:14 - that we're iterating over
41:16 - and then we're gonna have the thing
41:19 - inside that
41:20 - here now we need to say what we want to
41:23 - be going over what are the different
41:24 - things we want to be talking about
41:26 - but we kind of want to go over numbers
41:28 - here so we want to start at one
41:30 - and then we want to go up to uh but not
41:34 - including 5. we can get rid of these
41:39 - then inside here we say okay well what
41:42 - are we at right now
41:45 - this represents the current index so
41:47 - we're going to start at one and then go
41:49 - up to one two three
41:50 - four and five from there we can go ahead
41:53 - and then specify that what we want to
41:56 - show
41:57 - so we can say that we want an answer
41:58 - button that has a text
42:00 - where the text is a string that
42:03 - represents the index
42:08 - and now we see the button show up and
42:09 - we've gotten rid of another few lines of
42:11 - code
42:12 - the great thing about this structure is
42:14 - if we change the different scale of
42:16 - numbers that we want
42:17 - say from only going from one to five we
42:19 - go from one to eight
42:23 - we don't have to add any more copied and
42:25 - pasted answer buttons it just goes and
42:27 - right adds those views for us so we can
42:29 - have some additional
42:30 - answers super easy super convenient
42:34 - so what can we do from here uh we have
42:37 - our
42:38 - answer buttons we can show the different
42:40 - things we're interested in
42:41 - but our question is not super
42:43 - interesting by itself oneplus one isn't
42:45 - the most engaging of different
42:47 - things to work with so let's go ahead
42:48 - and update our question to be a little
42:50 - bit more interesting
42:52 - we can go ahead and then let's change
42:54 - the
42:55 - question we're using to be something
42:57 - else
42:58 - so let's go ahead up here and just like
43:01 - we added some text up here
43:02 - we can add a more interesting question
43:04 - and some impossible answers
43:07 - so let's say that we've got our question
43:08 - text
43:10 - or just our question and our question is
43:13 - what was the first computer bug
43:19 - uh this is we go over in the course as
43:21 - well and then we've got some answers to
43:23 - what that question could look like
43:24 - we can then go and replace this what is
43:26 - one plus one with a more interesting
43:28 - question
43:32 - and then when we resume we should be
43:34 - able to see that updating
43:39 - in good time
43:42 - great uh now you can see actually that
43:44 - now that this is a little bit long it's
43:46 - kind of weird that the text
43:47 - like isn't centered so you can go ahead
43:49 - and clean that up by just
43:50 - clicking on the text itself and then
43:53 - just centering it
43:55 - so oftentimes it's easy to make those
43:57 - adjustments by using this attributes
43:59 - editor on the right
44:03 - great so i cleaned that up now we can go
44:06 - ahead
44:07 - and change instead of one two three four
44:10 - those aren't very good answers to this
44:11 - we can add some different options to be
44:13 - using for answers
44:16 - we can make a possible answers array
44:18 - which is going to be
44:20 - all of the different things that well
44:21 - someone get out the answer
44:23 - if i if you know what what it is i can
44:25 - see if you get to it before we before we
44:26 - get to it here
44:27 - here's something just not then we'll get
44:29 - to the real one it could be a fly
44:33 - it could be an ant
44:36 - it could be a beetle and then there's
44:39 - one of them actually
44:40 - if anyone knows can put it in chat what
44:42 - the actual first uh
44:43 - first computer bug is the story behind
44:45 - this is uh
44:46 - it used to be that computers weren't
44:48 - just uh little things in your pocket
44:50 - they were
44:50 - enormous things with a bunch of moving
44:52 - components and pieces
44:54 - so that there was originally a actual
44:57 - bug
44:57 - yeah i know right josh there's an actual
45:00 - bug
45:01 - that got stuck inside the computer that
45:03 - was responsible for errors
45:05 - so the actual bug was a moth right
45:08 - galena
45:10 - okay so there's an actual moth that like
45:12 - got inside one of these giant computers
45:14 - and caused all kinds of questions
45:16 - so lots of interesting stuff there uh
45:19 - and that was
45:20 - for and we go into some of this in our
45:22 - course as well
45:23 - all right so these are all the possible
45:24 - answers now it would be great instead of
45:27 - seeing one two three four
45:29 - if we could see well the actual answer
45:32 - for what we were working with yeah
45:34 - exactly actually it was muff
45:37 - uh so instead of going just through one
45:40 - through five
45:41 - let's go ahead through each of the
45:43 - possible answers we have
45:46 - uh so in our for each we can go over
45:50 - each of the indices in our possible
45:54 - answers
45:55 - and now we can get the index from there
46:00 - when we resume we can see that it's not
46:02 - doing anything different we still have
46:03 - four things because we have four options
46:05 - but we're kind of looking at the wrong
46:07 - thing for each of them we're just
46:09 - actually we're going from zero to three
46:11 - now because the first index and arrays
46:13 - is it index zero thanks glad you're
46:17 - enjoying it
46:18 - uh so what do we want to do with this
46:20 - here well we'd love to get the actual
46:23 - like fly or moth or and or beetles so we
46:25 - can be quizzing our learners on it or
46:27 - people who are trying to
46:28 - work with the quiz app to do that
46:30 - instead of just looking at the index
46:32 - let's get the array at that index
46:36 - and then use that as the text for a
46:38 - question
46:40 - and index
46:44 - once this updates now we can see those
46:47 - answers cropping up here
46:50 - great so let's go ahead and then run
46:52 - this in our simulator and take a look at
46:53 - what we have
46:55 - just to make sure everything's hooked up
47:01 - so in our side of our simulator we can
47:04 - see it's asking us what's the
47:05 - first computer bug you can note that you
47:06 - get some small differences right
47:08 - the text is a little because these yeah
47:10 - this is resized a little bit
47:12 - so it is it is always good to check to
47:14 - see what the differences are between the
47:16 - two
47:17 - as we tap things we can see it tells us
47:19 - what our selection is
47:22 - great so we know that we can ask people
47:24 - questions we can
47:25 - render those corrections we can ask
47:28 - people questions
47:29 - take possible answers and display them
47:31 - and what we're going to be doing over
47:32 - the course of our next section is
47:34 - starting to learn
47:35 - well right now this is just printing out
47:36 - for us as developers how can we start to
47:38 - use this information
47:39 - and display it to actual uh users of our
47:43 - application
47:45 - great so it's all hooked up there's one
47:46 - last thing that we'd like to do
47:48 - before kind of stopping with our first
47:50 - screen and then we should have some time
47:51 - to take any questions that people have
47:53 - uh we'd love for to add a little bit of
47:55 - color to our application here
47:57 - uh right now it's just kind of this
47:59 - basic white background which is fine but
48:00 - maybe you want to
48:01 - spruce it up a little bit add some more
48:03 - customization
48:05 - there's a few different ways we can add
48:06 - color one of them
48:08 - is by kind of using that same structure
48:10 - that we talked about before
48:12 - uh we can use v-stacks to display things
48:15 - vertically we can display h stacks
48:17 - display things horizontally
48:19 - and you can use z stacks to display
48:21 - things on top of each other
48:23 - what we'd like to do is have a z
48:26 - stack where we display first a
48:28 - background color
48:29 - then we display the rest of our
48:31 - application on top of that
48:33 - so that we can all of the colors in the
48:35 - background
48:36 - we can do that by see if this works nice
48:40 - if you command click on v stack you can
48:42 - see that embed in z stack comes up as an
48:45 - option
48:46 - this doesn't always work i was trying
48:47 - this earlier and this option just didn't
48:49 - show up for me
48:50 - if it doesn't show up you can just write
48:51 - the text in yourself
48:53 - uh if it does show up then you can use
48:54 - it which is much more fun
48:56 - click on embed in z stack and it just
48:58 - adds that now we don't expect anything
49:00 - to change from our preview
49:02 - because we haven't done anything we've
49:03 - just kind of added more structure but
49:05 - there's nothing in our z-stack
49:08 - now what we can do is we can add a color
49:10 - to our z-stack
49:13 - a color is actually a basic view just
49:16 - like a text or a spacer is
49:18 - um or a button you can also just have a
49:21 - color which is just a regular view that
49:23 - you can use
49:25 - when you're building a color you can
49:27 - have it taken
49:29 - well this rgb color space don't have to
49:31 - worry about too much
49:32 - some a red a green a blue and an opacity
49:36 - as you mess around with these you can
49:38 - kind of see what the colors are going to
49:40 - look like
49:40 - as you are playing around with it let's
49:43 - just enter some
49:44 - values in here and then
49:47 - see what happens we've added this color
49:49 - great so we can see that we have this
49:51 - color added to our view
49:52 - now uh it's not exactly right it
49:56 - doesn't look like it's actually fitting
49:57 - on the top of the bottom and it's like
49:59 - kind of more not opaque enough as we
50:02 - want it to be
50:03 - so we can fix the opacity by just going
50:05 - and changing it to be
50:06 - instead of let's say one we make it a
50:09 - little bit more see-through which lets
50:11 - the background
50:12 - white bleed through a bit more great
50:15 - it's a lot more mild
50:16 - we still have this disconnect here
50:17 - between the top and the bottom bars it
50:20 - didn't quite get filled in
50:21 - we can fix that by adding a modifier to
50:24 - our color this area
50:26 - is called the safe area that represents
50:29 - like when you're on a simulator you can
50:30 - see that you don't see anything
50:32 - interesting here
50:33 - but on a real simulator you can see that
50:35 - there's useful information here
50:37 - you have the time on the top left you've
50:38 - got like your wi-fi status
50:40 - your battery by default your application
50:44 - doesn't let you like
50:45 - change what's happening here because
50:47 - it'd be pretty bad as a user if
50:49 - this information was blocked entirely
50:51 - you couldn't see what time it was
50:53 - unless you knew that that was what you
50:54 - were signing up for and what the app
50:56 - like as a game or something
50:58 - if we just want to have a little bit of
51:00 - the background color bleeding into that
51:02 - then what we can do is we can add a
51:04 - modifier that says don't worry we know
51:06 - we're doing we're not going to block
51:07 - this for people or we don't care that we
51:09 - are blocking it
51:10 - and we can do that by adding in the
51:12 - ignores safe area modifier
51:16 - uh we can see that it didn't get added
51:17 - to the right spot you can see here
51:19 - this is what we want and add it to the
51:21 - whole z-stack so now
51:23 - all this kind of bleeds in because it
51:24 - doesn't know that there's supposed to be
51:25 - this little uh
51:26 - that little notch there so we can
51:28 - instead take this ignore a safe area
51:31 - and then put it inside here so that our
51:33 - colors go through but nothing else does
51:36 - okay so now we've got our color added
51:39 - uh and so we can get to see our
51:41 - application a bit better
51:43 - one last thing that we can do just
51:45 - because it's fun is we've been playing
51:46 - around with this canvas the whole time
51:49 - why is this canvas showing up it's
51:51 - actually just these lines of code right
51:53 - here
51:53 - if we get rid of them it goes away we
51:56 - got them back
51:57 - it comes back so that's what this is
51:59 - coming from is this code right here
52:01 - and what this also means is you can
52:03 - change around what this should be like
52:05 - to add in different previews if you add
52:07 - in remember when we
52:08 - uh way back earlier when we went and
52:10 - added another text and then we split off
52:12 - and saw two different views
52:14 - that actually might be kind of a good
52:15 - thing when you're previewing
52:17 - so you can just get to preview what it
52:20 - looks like with different setups
52:22 - so if we add in another content view
52:24 - here we can see
52:26 - eventually i know
52:29 - what's our preview it should be adding
52:32 - another preview down there let's go
52:34 - ahead and resume this
52:40 - [Music]
52:42 - yeah whatever so typically that should
52:44 - work it's doing something funky
52:45 - probably because i got rid of it there
52:47 - but what i wanted to showcase is that
52:48 - you can preview
52:49 - uh inside the preview you can also set
52:52 - different settings
52:53 - so one example is we've been looking at
52:55 - this on kind of like a regular
52:57 - kind of like daytime phones for our
53:00 - colors
53:00 - but phones actually introduce a dark
53:02 - mode as well
53:04 - so what we can do is we can make sure
53:05 - that we're adding in so
53:07 - we know what it looks like when dark
53:09 - mode is selected
53:10 - so we can change this preferred color
53:12 - scheme and say what does it look like in
53:13 - dark mode
53:15 - and then when the preview updates now it
53:18 - switches to the ios default dart mode
53:20 - and we can get to see what our
53:21 - application looks like to make sure
53:22 - it still works correctly that's one
53:24 - reason why changing the opacity is
53:26 - useful
53:27 - if our opacity is still one then we can
53:30 - see this doesn't reflect the dark mode
53:31 - really at all it's our own color
53:33 - when we have an opacity that's less than
53:35 - one it lets the dark mode color bleed
53:38 - into the color we selected
53:39 - to make it more black instead of the
53:41 - other case when we had light mode
53:43 - where it made it more white colored so
53:46 - now we can see what our application
53:47 - looks like
53:48 - in dark mode or we could take a look at
53:50 - what it looks like
53:51 - when it's not dark mode by just having
53:54 - another content view up here i'm gonna
53:56 - try this again we'll see if it works
53:58 - either way it's not a big deal so we can
54:00 - still have both of those previews
54:02 - available
54:04 - okay so to recap we saw how to go
54:07 - and get started with a new xcode project
54:10 - we saw how to put together some basic
54:12 - views
54:12 - using both the kind of object library
54:16 - here and also by typing into the editor
54:18 - and then we also took a look at how to
54:20 - add in view modifiers
54:22 - and in the editor and in this attribute
54:26 - panel that we have here we then saw that
54:28 - we could extract
54:29 - views into their own structures uh we
54:32 - could add
54:33 - properties into them so that we didn't
54:34 - have to be copying and pasting as much
54:36 - and we could take use of some more
54:38 - complicated uh structures like a for
54:40 - each
54:41 - that lets us iterate over a bunch of
54:43 - different uh indices
54:44 - so we can display the right kind of
54:46 - answer for each of those
54:48 - so what we're going to be covering over
54:50 - the course of the next section is
54:52 - how do we make these views do something
54:54 - right now they did a great job of
54:56 - printing to the bottom
54:57 - but if i told somebody to get this on
54:58 - their phone they won't be able to see
55:00 - that it doesn't show up anywhere on the
55:01 - phone
55:02 - so take a look at how to do that using
55:03 - state
55:05 - is a big idea with that if you'd like to
55:06 - preview on that uh
55:08 - the app state property is how we can be
55:10 - modifying those
55:11 - which we'll take a look at then so we
55:14 - have a few minutes left if you have any
55:16 - questions you can feel free to get them
55:17 - in chat we'll kind of hang around and
55:18 - try to do our best to address those but
55:20 - it's been a pleasure getting to showcase
55:22 - some of the uh swift ui content that we
55:25 - have up on the codecademy platform
55:27 - uh and hope that you've enjoyed getting
55:29 - started in swift ui or learning a new
55:31 - framework if this is uh
55:33 - kind of your entrance into ios
55:35 - development so thanks evan for tuning in
55:37 - and then
55:38 - if you have any questions you can feel
55:39 - free to put them in chat and we'll hang
55:41 - around for a few minutes to address
55:46 - those
55:53 - well while we're waiting on questions
55:54 - galena because i know you were picking
55:56 - up
55:56 - uh such guys a new framework right like
55:59 - we both learned that
56:00 - a few months ago uh what was something
56:02 - that you found
56:03 - maybe interesting or surprising about it
56:05 - especially coming from a web background
56:08 - oh yeah that's a really great question
56:09 - um
56:11 - i think one thing i i appreciated uh
56:14 - well
56:14 - i guess i'll speak more to coming from a
56:16 - ui kit
56:17 - uh experience is that swift ui is so
56:21 - much more so much less verbose
56:22 - and um more intuitive
56:26 - than ui kit was and i think that's one
56:28 - thing that i really like about this
56:29 - framework
56:30 - and one thing that i think learners will
56:32 - appreciate as they're going through the
56:33 - skill path and building this application
56:35 - um it's very readable and
56:39 - pretty simple in my opinion to pick up
56:41 - having a ui kit
56:43 - experience yeah definitely and most of
56:46 - my
56:47 - my professional experience is working in
56:48 - ui kit as well and ui kit
56:51 - to make to build the same sort of thing
56:53 - that we put together
56:54 - just in a little under an hour while
56:57 - taking our time to
56:58 - kind of figure out what's happening
56:59 - would take much longer in ui kit
57:01 - it's um trying to explain how to space
57:04 - things out
57:04 - and make things show up and the
57:06 - storyboard interface is
57:08 - much more complicated you can still do a
57:10 - lot of things with it it's still widely
57:11 - used in the industry and we're going to
57:13 - make sure to cover that on the platform
57:15 - but it's very easy to get started with
57:17 - swift ui and it's fun to be able to
57:19 - build something that
57:20 - already looks like it's starting to be a
57:22 - real application
57:23 - just from making moving a few views
57:25 - around
57:26 - yeah yeah
57:30 - cool um great well if people have
57:33 - questions you can feel free either to
57:35 - put them in chat
57:36 - still take a look at them or you can
57:38 - feel free to reach out on
57:40 - discord or on the forums for like
57:42 - anything that you're wondering about
57:44 - skill pass or about swift or about
57:46 - anything that's happening on the
57:48 - codecademy as a platform
57:49 - uh it has been a pleasure getting to
57:52 - start this live
57:52 - stream series with all of you and then
57:55 - we'll be going and running these at the
57:57 - same time each week or
57:58 - next week we'll be kicking off and
58:00 - continuing with
58:01 - state so thanks everyone for tuning in
58:04 - uh and then we'll see y'all next time
58:11 - uh alberto says swiss ui ideal for big
58:13 - projects or small projects
58:15 - it's a great question there are it is
58:17 - very
58:18 - new as a framework so some people are
58:21 - some companies are starting to use swift
58:23 - ui
58:24 - entirely for projects so there are real
58:26 - production big projects that use swift
58:28 - ui
58:29 - at most larger companies it's too new to
58:32 - only use swift ui
58:33 - so you'll still see a lot of code there
58:35 - as well it's mature enough as a
58:37 - framework that i would recommend
58:40 - starting with swift ui and there's ways
58:42 - of integrating ui kit
58:44 - uh into your project if you discover
58:46 - something that your application is
58:48 - having a hard time doing
58:50 - yeah cool yeah god thanks you enjoyed it
58:56 - great so i think that's all we got so
58:58 - thanks again for uh
59:00 - forever's questions uh thanks again for
59:01 - tuning in and we'll see y'all next week