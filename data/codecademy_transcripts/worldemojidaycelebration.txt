00:00 - hello everybody welcome to code CAD me
00:03 - live today's Friday July 17th we're
00:05 - doing a special event today to celebrate
00:08 - world emoji day as well as we just did a
00:12 - course job on learning mojiko my name is
00:15 - sunny
00:15 - I'm a senior combed Avella / here at
00:17 - code Academy and I have here with me the
00:20 - star of the show
00:21 - Theo the creator of emoji code Thea hi
00:26 - everyone my name is Theo tail Lightman
00:29 - as we would say here and yeah I'm the
00:32 - creator of the Moshe code I'm really
00:34 - excited to be here today it's such an
00:36 - honor to appear here and have an real
00:39 - course created for Moshe code and I'm so
00:41 - excited but we're going to demo the code
00:46 - in a little bit right yeah yeah it's
00:49 - gonna be super fun it's a very different
00:51 - episode I guess we're gonna do a little
00:53 - QA in the beginning and some of the
00:57 - questions that we come up came up with
00:59 - were from our learners from you know
01:01 - Facebook group discord Twitter and as
01:04 - well as some of the questions from our
01:05 - team and we're gonna dive into a little
01:09 - course demo towards the end of the
01:11 - course end of the livestream but we
01:14 - highly encourage you all to to ask
01:16 - questions in the YouTube chat throughout
01:19 - and we'll try to you know answer some as
01:22 - we go but if you you can also wait to
01:24 - the very end of the end of the lecture
01:25 - to cool should we get started yeah
01:28 - absolutely
01:29 - cool let's start with a simple one and I
01:32 - need you to answer that answer the
01:34 - question just like that okay okay the
01:36 - question from a learner from Facebook
01:39 - group very easy question ready okay yeah
01:42 - what are your top three emojis well I
01:48 - mean the emojis I like the most like we
01:51 - surely are probably the grape the
01:54 - clearness yeah I mean you could have
01:56 - guessed that and also like all of the
02:01 - animals like the pig I really like the
02:04 - pig or the Swan or the donut I mean the
02:07 - donuts but not anymore but and I liked
02:12 - it because they wish
02:13 - using a thing but it's not these are not
02:15 - the ones I'm I'm just a regular emoji
02:18 - use it with I don't know laughing face
02:21 - smiling face okay nice so a lot of these
02:26 - are actually like made their way into
02:28 - the language so that's done yeah
02:30 - certainly cool here's another question
02:32 - from discord our learner from discord
02:36 - how did you get started coding and also
02:39 - how does one get from you know learning
02:43 - you know starting to code to designing
02:45 - their own programming language like you
02:47 - did yeah that's an interesting questions
02:50 - though and maybe how did I start to code
02:54 - and learn to code actually when it was
02:56 - about seven years old so have
03:00 - questions-- experience in that and yeah
03:06 - what does it take I mean actually
03:09 - creating a language is not that
03:11 - difficult with today's tools and if you
03:14 - start slowly you don't have to create
03:16 - like I don't know another C++ on day one
03:19 - and then it's not not that difficult to
03:22 - actually push these tools like LLVM
03:24 - enriched emotion code feels today it's
03:26 - anybody can create a language really I
03:28 - mean it's not that it's not like you can
03:34 - just throw together some language
03:35 - structs like it's been a while and then
03:37 - you have the language you need to think
03:39 - about it but I think most people that
03:41 - really know to program can also build
03:43 - language nice yeah I feel like you know
03:47 - learning how to write your own compiler
03:49 - learning you know how to design your own
03:51 - little language on paper is part of a
03:53 - lot of CS undergrad courses but um but
03:58 - let's dive because you do just say this
03:59 - this this part I did not know you
04:01 - started coding when you were 7 years old
04:03 - what yeah not to you know no not many
04:07 - people code when they're 7 right that's
04:08 - so yeah well well the reason really is
04:11 - that my father is a professor of
04:13 - computer science so yes I had a bit of a
04:16 - background there and but the story is
04:20 - really that I watched I really enjoyed
04:22 - watching my father do all kind of things
04:24 - at his computer and
04:26 - one day he was was just automating some
04:28 - of his work I think using AppleScript I
04:30 - don't know if you know AppleScript
04:32 - that's a really basic trip yeah I was
04:36 - watching a Steve Wozniak or Steve Jobs
04:39 - like memory and they taught by Apple
04:40 - script very nice yeah but it's kind of a
04:45 - weird language but it was actually its
04:47 - language I first picked up I watched my
04:49 - father use it and I was like oh can I do
04:52 - that too I want to learned it too if I
04:54 - thought it was like oh yeah sure you're
04:55 - going to learn Apple scripting when
04:58 - you're that young and yeah sure
05:00 - here have taken my manual and go and
05:04 - what I did was actually I opened the
05:07 - manual I realized it was in English I
05:09 - didn't speak English at the time so I
05:11 - just started to type out the examples
05:14 - from the book and we're doing that I
05:16 - actually learned to program somehow and
05:19 - I also learned a bit of English I mean
05:21 - one of the first words I learned from
05:25 - doing that was public code yeah because
05:27 - there was there was an example where you
05:30 - could enter or select the city's name
05:32 - and then it would show you the zip code
05:34 - of the city and right yeah just like
05:36 - that but also a lot of of Scratch
05:39 - programming at the time and yeah yeah
05:44 - okay so just just so that the the viewer
05:47 - is know so your basin are you based in
05:49 - Zurich right now yeah and we search
05:52 - right now yeah that's awesome and yeah I
05:56 - mean I think I told you this before I
05:58 - mean I used to live in Germany around
05:59 - that time 2nd 2nd grade
06:01 - so that's crazy that you kind of learn
06:04 - English through a program like Apple
06:06 - script right that's yeah we're we're use
06:10 - case yeah that's actually actually funny
06:13 - because when like sometimes in the early
06:18 - days of learning English I would like
06:20 - refer to the programming structs and try
06:24 - to use them in not like words in
06:27 - conversation but if I was like in
06:28 - vocabulary I would think what's it
06:30 - called in the programming language and
06:32 - oh ok so one day was looking for the
06:35 - word to return right to return something
06:37 - and I couldn't come up with return and
06:39 - it was things
06:40 - yeah I know that from programming and
06:41 - actually I used the word repeats then
06:43 - and the people I would was talking to
06:45 - were really confused yeah yeah cool
06:50 - that's a that's a great story so here's
06:54 - another question from our learner from
06:56 - our learners what dev Anju so his
06:59 - question is what are some of your
07:00 - favorite projects that were built in
07:03 - emoji code oh that's a funny question
07:08 - and I mean there's a desert-like console
07:12 - argument parcel written emoji code and
07:15 - you repeat that one more time
07:17 - I like a console command line interface
07:21 - argument parser I'm not sure what's the
07:24 - right word for that CLI argument parse
07:27 - or something like that I really like
07:28 - that one because a lot of thought went
07:31 - into it then there's I really like that
07:34 - one too there's a machine learning
07:37 - notation
07:38 - yeah there is there is a machine
07:40 - learning implementation promotion code
07:42 - really it's written from the ground up
07:43 - in emotion code and it has its own like
07:47 - you probably know from pipe numpy and
07:49 - there is numpy another piping program
07:53 - we're really not sure how pronounce it
07:54 - and and it's called
07:58 - number all correctly like lol okay like
08:07 - that yeah probably I really know if
08:11 - that's the creator of it is watching now
08:13 - I love how here and what I also love I
08:22 - mean I created myself but I also love to
08:25 - chase in parts because the chase of
08:27 - course that's integrated in a motion
08:29 - code is written in emotion could I mean
08:31 - I wrote it myself but it's it's really
08:33 - funny to see how you can really write
08:36 - like a parser in emotion code to see I
08:41 - mean you definitely put a lot I mean as
08:43 - we're doing research so me and my
08:45 - coworkers Kenny we we we actually work
08:48 - with you to to write the Larry Moe G
08:49 - code that that just went live on code
08:52 - cam and
08:52 - we look through your documentation and
08:54 - hopefully you know a scuzz can link out
08:56 - the documentation page in the YouTube
08:59 - chat but you obviously you know put a
09:01 - lot of love into it's the pretty deep
09:03 - language I was very surprised because
09:05 - last year we did all code and this year
09:08 - we did mochi code said Stefan what did
09:10 - you do a sorry and didn't get you
09:11 - last year we did for April force we did
09:14 - a language on a course on lock code lol
09:18 - code oh oh yeah programming language and
09:23 - I think we talked a little bit about
09:24 - before before this zoom called weather
09:27 - emoji code is a Satori program manager
09:30 - or not but yeah but you obviously put a
09:33 - lot of thought and research and years
09:35 - right into this so you know definitely
09:37 - big thumbs up alright here's another
09:41 - question so cook enemies based in New
09:45 - York City and we have learners all over
09:47 - the world but sometimes I feel like you
09:51 - know people in tech in America are don't
09:55 - really know that much about the tech
09:57 - industry internationally you know in
09:59 - Asia and Europe I mean when we think
10:01 - about you know European tech companies
10:03 - we I mean the only three that I like you
10:06 - know usually people know her you know
10:07 - Spotify SoundCloud from Sweden what's
10:13 - the one Skype from Denmark from back in
10:15 - the day when they started early 2000s
10:18 - I've been following this flying car
10:20 - company based in Germany called lilium
10:22 - but besides but outside of that like we
10:25 - were pretty oblivious to what's going on
10:27 - in Europe so can you give us can you
10:29 - give me at least this was a question
10:30 - from me what are your thoughts on the
10:33 - tech scene in in Europe right now
10:37 - okay yes so actually I work with quite a
10:43 - few startups and I think I mean it's the
10:48 - first thing that comes to my mind right
10:49 - now because you mentioned so many many
10:51 - American companies that have become
10:53 - really large and I think one of the
10:56 - major differences is in I think it's
11:01 - it's way more easy to to fund a new
11:05 - company
11:06 - in the u.s. you can easily say okay I
11:08 - found I get I don't know what you call
11:11 - it an LLC I think and and start working
11:16 - as a company right without all of the
11:18 - liability on my own person and that's
11:20 - that I think is a huge difference
11:23 - because it's it's way more difficult in
11:25 - Europe or at least the countries I know
11:27 - to to you either work under your own
11:30 - name with all of the liability and I
11:33 - think this is one of the big differences
11:36 - in in culture in general I think it's
11:41 - quite similar maybe people in Europe are
11:43 - still a bit more like uptight not not as
11:47 - much open to for instance working
11:49 - remotely I think during the last months
11:52 - they have has been a huge shift of
11:54 - course and working remotely but I think
11:57 - this is generally something where the
11:58 - u.s. is yeah in the lead actually yeah
12:03 - interesting yeah so that's very
12:04 - different
12:05 - okay that's that's that's a very good to
12:06 - know because I world cool and then
12:13 - before we jump to our course demo do you
12:16 - have any tips or coding advice for
12:19 - learners for kogami learners like what
12:21 - any any any tips and tricks for people
12:24 - who are learning to code in 2020
12:27 - learning to code in 2020 is of course a
12:30 - lot different from when I learned to
12:32 - code but I think it's important and this
12:36 - was really important for me at the time
12:38 - to remember you can't or if you have a
12:40 - normal computer you can't destroy your
12:42 - computer by programming it so I can't
12:45 - repeat I'm real quick yeah you can't
12:47 - destroy your computer by programming it
12:49 - right you can try everything your
12:51 - computer is not going to blow up and
12:53 - your computer unless you delete the
12:56 - operating system is not going to stop to
12:57 - work right have a compiler or an
13:00 - interpreter that instantly gives you
13:02 - feedback whether your program is
13:03 - syntactically correct and I think this
13:05 - is really really the really great thing
13:08 - about programming you have instant
13:09 - feedback about whether the thing you do
13:10 - works and you can try pretty much
13:12 - everything without ever risking I don't
13:15 - know money your life
13:18 - marchings justjust try it and see what
13:21 - would happens that's usually that's
13:23 - really what I did - of course right I
13:24 - also tried to see could I write a
13:27 - programming language with emojis and it
13:29 - obviously worked yeah what was that was
13:32 - that the why behind the emoji code well
13:35 - it has always been a dream of mine since
13:38 - I still own to program at very young age
13:40 - to create my own language so maybe kind
13:44 - of what just wanted to try yeah maybe
13:47 - maybe that's it's one of the reasons
13:48 - that I feel like that's a very common
13:50 - question I think we discussed this
13:51 - before like why do yeah yeah sure people
13:54 - people keep asking why all the time
13:55 - multiple issues on github I think about
13:58 - the topic and yeah that means like I
14:02 - still work on emotion
14:04 - it's very recent it's very simple to
14:06 - answer because it's just such a deep
14:08 - learning experience there are so many
14:10 - things involved in creating a
14:11 - programming language so and yeah that's
14:14 - just
14:17 - ya know I think that's a great great
14:20 - great great reason actually I think
14:21 - people a lot of times in tech just kind
14:23 - of think about things like how I feel
14:28 - like the mainstream technology is just
14:29 - think about you know whether it scale or
14:32 - not whether it can you know drive
14:33 - revenue or not but a lot of time people
14:35 - forget like some of the greatest
14:36 - inventions in tech aren't just from
14:39 - people who are trying to challenge
14:40 - themselves try to you know learn about
14:42 - things tinker with things you know build
14:44 - things you know break them down pick
14:46 - them apart ain't even like the world
14:49 - wide web for example like it all started
14:51 - from a proposal right so big thumbs up
14:54 - you know right on I think you're
14:55 - definitely on the right track you know
14:57 - and this is a great inspiration for a
14:58 - lot of our learners to that you don't
15:01 - have to you know build something so - to
15:06 - - you know - you don't have to learn a
15:08 - code to you know try to get that salary
15:10 - or try to you know creators don't
15:12 - absolutely really great point I mean I
15:15 - come exactly from from just learning to
15:18 - code for fun for me out of curiosity
15:22 - yeah that's this really curiosities I
15:24 - think really a key point in learning to
15:26 - program oh yeah now this is a great I'm
15:29 - so
15:30 - we did this I mean we've been yeah we've
15:32 - been working together for I mean since
15:34 - april fools really like yeah it probably
15:36 - says March alright yeah
15:38 - this is the first time we actually never
15:40 - did an interview live - so I'm very
15:42 - happy this is going anyways
15:46 - I think that's all for our Q&A bit if
15:49 - you have questions in the chat if you
15:51 - have questions you know make sure to
15:52 - type in the chat on YouTube and I think
15:55 - we should just start get start with
15:56 - showing people what what the heck is a
15:58 - mágico like what the you know do the
16:00 - demo yeah sure
16:02 - you ready absolutely I'm gonna share my
16:07 - screen real quick
16:08 - ooh there's a new option who can share
16:09 - only host cool all right so we're now on
16:19 - the learn emoji code web page let me
16:22 - know if typing the chat if you see it in
16:25 - the YouTube chat people seeing it I oh
16:34 - wait the YouTube chat is a little bit
16:36 - delayed it looks like it's like one
16:37 - minute delayed okay so type in the chat
16:41 - if you can see it yeah at least I can
16:44 - see it and you get a call yeah but just
16:48 - wait a minute just in case okay so I
16:54 - think we're in cool hello s suck girl
16:59 - Nalla oh fed a cool we got a little you
17:02 - know a bunch of familiar names in here
17:03 - very awesome cool so learn emoji code
17:06 - here's a Laney I think we should just
17:09 - get started with the very first module
17:11 - which is hello world hello world a
17:14 - little quiz a little project cool so
17:22 - introduction to emoji code and you know
17:24 - Theo make sure to chime in if you if
17:27 - there any you know teaching teaching
17:29 - moment so you find I mean not a teaching
17:32 - moment but I absolutely adore that
17:34 - illustration of the right hand side it's
17:37 - it's all right absolutely it's so emoji
17:39 - cooked a lot yeah it's great yeah so
17:41 - this is done by 10
17:43 - one of our designers I cook at me you
17:45 - know just brilliant designer cool so
17:49 - emoji code is an open source fully blown
17:51 - strongly typed programming language
17:54 - consisting of emojis and here's a little
17:56 - history from Theo about why he did you
17:59 - know why he created emoji code and here
18:02 - at Konami we believe that emojis have a
18:06 - very powerful and expressive force that
18:08 - brings smiles and fun to conversations
18:10 - especially in text messages and slack
18:13 - messages and also emails and we built
18:16 - this with you and hopefully it will
18:18 - inspire you the learner to you know down
18:21 - the road create your own programming
18:22 - language or create your own compiler
18:24 - okay so next cool the first a little
18:30 - symbols the emoji symbols that we see so
18:33 - when we write emoji programs and files
18:37 - they usually have five extension that
18:40 - looks like this dot emoji
18:41 - see emoji see okay but here's a very
18:44 - cool part that didn't want to do tell me
18:46 - an email that you can actually have a
18:50 - grape emoji as a file extension yet oh
18:53 - cool I mean maybe I need to say
18:57 - something about this because I was
18:59 - always using emoji file names but it
19:01 - turned out the emoji code community
19:03 - really enjoys using emoji file names
19:05 - yeah one of their requests to use an
19:08 - emoji file name so we decided to
19:12 - introduce the hips I mean really
19:14 - embodies what you know emoji code stands
19:16 - for right so this file is called hello
19:19 - dot emoji see and here's the first
19:22 - little emoji that we're gonna see that
19:23 - we learn about I'm not sure how to
19:25 - pronounce this emoji see but it's
19:27 - basically like a race car
19:28 - yeah it's called the starting flag a
19:31 - starting flag call right India's
19:34 - document I call it that I don't know if
19:35 - you're something official yeah like I've
19:38 - seen on Wikipedia called like checkered
19:39 - or something like that okay but you know
19:42 - you've probably seen this with you know
19:44 - a NASCAR or fast and furious right it's
19:46 - the beginning of a race and that kind of
19:48 - means the beginning of a blog the
19:53 - beginning of the code that would be
19:55 - executed when the compiler X
19:57 - about a compiler when the program runs
19:58 - correct because some of the stuff you
20:00 - mentioned I remember we talked about
20:02 - this
20:02 - Ashley live outside of the checker block
20:04 - sure yeah so I don't know if you know
20:07 - Java or C sha or counseling courses
20:14 - right now o or C obviously or C++ then
20:17 - you always have a main method of a
20:18 - function and just does this starting
20:22 - flag block is just like the main
20:23 - function actually main method because
20:26 - obviously you can also have classes or
20:29 - where you type some in improve methods
20:31 - in emoji code and these would of course
20:34 - not be defined inside two main function
20:36 - so they'll live either above it or below
20:38 - it correct exactly cool and then we have
20:42 - two more emojis to learn the grape emoji
20:44 - and the watermelon emoji so the grape
20:46 - emoji means the beginning of a code
20:48 - block and watermelon emoji means n
20:51 - difficult block so I think of them as
20:53 - like the squiggly brackets the curly
20:55 - braces and you know I guess like C++
20:59 - Java JavaScript but what so I was
21:03 - looking out here github repo what made
21:05 - you decide to use these two symbols like
21:06 - the checker one meets like that starting
21:08 - point one it makes a lot of sense but
21:11 - the fruits one is it just like personal
21:12 - preference or yeah it's pretty much well
21:15 - it's personal preference and in the
21:18 - early days of emoji code I thought it
21:20 - would be a good idea to use emojis for
21:24 - language like syntax or let's let's put
21:27 - it in another way I decided to use
21:30 - emojis that are very rarely used to
21:32 - express something meaningful for things
21:34 - that are just boilerplate actually right
21:37 - it doesn't really matter if you put I
21:39 - don't know a curly brace there or a
21:43 - dollar sign in C right yeah the curly
21:47 - brace can weigh as little meaning as
21:49 - those scrapes and watermelons I mean
21:52 - just except for the fact of course that
21:55 - we we as humans perceive like those
21:58 - braces curly braces as belonging
22:00 - together but it's actually just a matter
22:02 - of time and you will perceive the
22:03 - watermelon at the grape is belong to
22:06 - head - yeah cool yeah and also I
22:10 - see it has the squiggly bracket but yet
22:13 - totally understand the the dollar sign
22:14 - thing cool so let's try this out real
22:17 - quick so provided program has a single
22:20 - line of code hello world will learn
22:21 - about light too in the next exercise but
22:23 - this basically prints out a message the
22:26 - terminal hello comma world exclamation
22:28 - mark so it prints out everything inside
22:30 - here okay
22:34 - so here's basically what I think of as
22:37 - like the print statement right the print
22:38 - method the smiley face opens that starts
22:42 - it and then the exclamation mark that
22:43 - ends it and inside we have a text string
22:47 - so ABC means it kind of wraps to ABC's
22:52 - emojis basically wraps the the string
22:56 - that's inside of it so here's something
22:58 - I actually do want it you know I guess
23:01 - it's like a feature request again for me
23:04 - okay so sometimes you know when you you
23:11 - know emoji emojis yeah emoji picker
23:14 - right like here you have the control
23:17 - command space among Mac right now so
23:18 - control command space and then to have
23:21 - this stay persistent after you if you
23:24 - just press one if you just use Y emoji
23:26 - the emoji picker disappear right and
23:28 - then to have to make it persistent you
23:31 - got to drag it and it'll stay so you can
23:33 - type more and more emojis and after a
23:35 - while you know the emoji code symbols
23:37 - the syntax will appear in the frequently
23:39 - use but I was thinking it would be
23:41 - really cool ever super easy if we just
23:42 - actually create your own sort of like
23:45 - emoji picker only that only has it's
23:50 - basically like you know this what screen
23:51 - guys this big but but it only had the
23:54 - emojis that you know yeah obviously to
24:02 - think about that quite if your editor
24:07 - syntaxes and plug-ins for for sublime
24:10 - text there is one at least for text made
24:13 - there is one and so these are the 20 to
24:15 - see use myself so know about them and
24:16 - where you just have to type I don't know
24:19 - some letters and hit the tabulator key
24:21 - or whatever key and then we'll insert
24:24 - the right
24:24 - emojis and there were also people who
24:27 - had the idea to create a custom keyboard
24:29 - layout and assign I think I was a
24:31 - burglar
24:32 - laya to the keyboard key easy there are
24:34 - all kinds of ideas yeah ultimately emoji
24:37 - code is a language and not my ve so yeah
24:40 - we leave that up to the operating system
24:42 - providers to provide emoji boot support
24:46 - okay well I tried yeah so let's run this
24:50 - code real quick so it prints out you
24:52 - know somebody's name right here
24:53 - right Thanks so strings and I think we
24:57 - kind of learned this in the last
24:58 - exercise right strings just similar to
25:01 - other you know data types
25:03 - other types in other languages string is
25:05 - we're words or pieces of text that the
25:08 - computer treats as a single item so
25:10 - here's an example of a string is another
25:12 - one and here's another one and here's
25:13 - another one so you can have numbers and
25:16 - also other emojis inside the string cool
25:20 - so we're gonna let's just do one of them
25:22 - so let's print out a string so this is
25:27 - actually how I do it I just put all the
25:30 - emojis in there and I copy paste so
25:33 - prison that's pretty made up all we have
25:35 - you know number of characters so let's
25:36 - do 2020 run cool my copy and paste this
25:45 - so we want one with just letters blah
25:49 - blah and then when I do one with both
25:55 - numbers I guess whatever we want so
25:57 - let's do showcase three different
26:03 - members emoji code just like every most
26:06 - languages it kind of like goes from top
26:08 - to bottom left to right cool
26:12 - I actually really like this exercise
26:16 - because the errors even the errors and
26:18 - emojis are a little bit different which
26:20 - I really appreciate
26:21 - just like this so here's an example of
26:25 - emoji code air and for most learners at
26:28 - code cami you're gonna see plenty of
26:30 - layer errors in your journey to learn to
26:33 - code so let's you know kind of break
26:36 - this down a little bit the first
26:37 - bit of the error is the filename okay so
26:41 - in this case it's example died emoji see
26:43 - this number right here is the line
26:46 - number where the compiler thinks there
26:48 - is a mistake okay and the second number
26:52 - is a character number in that line so
26:54 - the zero character it says index zero
26:57 - index zero zero indexed line three and
27:01 - what is there
27:02 - it says unexpected end of the program
27:04 - okay so for this little exercise right
27:10 - here we want to run the code and then we
27:13 - need a pin point where there is I really
27:16 - like how you know you even have emoji
27:18 - code like err emoji right here and then
27:21 - you know usually you have like an up
27:22 - arrow arrow to point to where you know
27:24 - the compiler thinks is a problem and you
27:26 - also have an emoji here so I really
27:27 - appreciate that yeah and really like I
27:33 - mean I really like this step of the
27:35 - lesson because it's really something
27:37 - people struggle with an emoji code
27:39 - because if you're not yet used to
27:40 - reading emoji code you're just
27:42 - overwhelmed by all these colorful little
27:44 - signs and people tend to miss that the
27:46 - places where the errors in the code are
27:49 - so I think it's really great that you
27:51 - immediately teach people to to like deal
27:54 - with errors exactly what you mentioned I
27:57 - think yeah it was really important to me
27:59 - that the error message be customized
28:01 - with emotions yeah that's true that's
28:04 - awesome this this exercise actually was
28:06 - created by Sarah one of our co-workers
28:09 - all my co-workers so all credit goes to
28:13 - her great let's see also by the way for
28:17 - all the learners like sometimes the
28:18 - error they're weird that error think
28:22 - there's a mistake can be a little bit
28:23 - misleading like compile errors sometimes
28:25 - are not exactly other it can be before
28:27 - it - right so you really got a look in
28:30 - the code - so this is saying that I like
28:33 - to the character three zero one two
28:37 - three somewhere right here it's actually
28:41 - right here cool I'm gonna run it again
28:43 - ooh there's another problem okay so line
28:48 - their character three and
28:51 - think it's missing a they pull up the
28:54 - emoji picker one more time oh sorry here
28:57 - it's a great I'll run it one more time
29:00 - okay here's your Moyers line six
29:04 - character one cool I think it's missing
29:06 - a smiley face and then this one see this
29:12 - one is pretty misleading right it says
29:13 - line six and then but it's actually
29:16 - right here cool
29:18 - I think we're good cool comments so here
29:25 - you know just like every programming
29:27 - language and markup languages they're
29:28 - usually comments in the syntax in the
29:32 - program so there's single line comments
29:35 - and multi-line comments single line
29:37 - comments this is pretty self-explanatory
29:40 - it's a thought bubble right it's almost
29:42 - like things that it's not said unspoken
29:44 - I really like that that looks like this
29:48 - and then for multi-line comments let me
29:53 - zoom in real quick to begin the comment
29:56 - you use these two emojis a thought
29:58 - bubble and this sort of like arrow soon
30:00 - emoji and then to end it you have this
30:03 - arrow and in thought bubble to end the
30:07 - multi-line comment okay so everything
30:09 - here will be common to that will not be
30:11 - executed by the program cool so let's
30:16 - try this out real quick let's say
30:18 - somewhere in the program we're gonna
30:19 - create a thought bubble that says emoji
30:31 - and as you can see the the terminal the
30:35 - message will not has not changed right
30:37 - because we this stuff is actually not
30:40 - printed out only this line of code like
30:42 - four is printed out well and let's at
30:45 - multiline coming here what should we say
30:47 - yeah how you feeling today Ashley what
30:50 - do you what are your a pretty great
30:52 - actually it's well emoji day so pretty
30:54 - great I think yeah that very nice okay
31:00 - and then here's some review that we did
31:03 - for this lesson
31:04 - and it's a pretty short lesson this is a
31:06 - basically like a preview a hello world
31:08 - the traditional hollow world with
31:09 - comments you know explain what you know
31:11 - all the little symbols mean let's try
31:15 - this out let's try it let's try the quiz
31:16 - out with the view to chat actually this
31:19 - question is pretty simple
31:21 - we should going to blank to output a
31:22 - message in the terminal okay so this is
31:25 - basically fill in the blank we want to
31:28 - complete this program right here cool
31:36 - got it
31:37 - nice true or false emoji codes the real
31:40 - program language that can be used to
31:42 - develop applications true is that false
31:47 - well the app would be for a program like
31:50 - this so type in the chat one two three
31:54 - or four
31:56 - well zoom that zoom in a little bit
31:59 - what would the output beef or program
32:01 - like this 1 2 3 or 4 so type in the
32:08 - YouTube chat so I'm getting a bunch of
32:16 - slack messages I should actually be oh
32:18 - boy I wish
32:27 - oh wait I think I think this to the
32:31 - YouTube chain is a little bit delayed so
32:33 - we might have to wait this out okay okay
32:36 - so Sarah Baghdad said three and she is
32:41 - correct because only the stuff that's
32:45 - part of the only the spec string is
32:46 - printed out remember this is just the
32:48 - syntax that says this is a text string
32:51 - so the ABC emojis won't be printed oh
32:54 - cool
32:55 - which one is a single line comment in
32:58 - emoji coud type in the chat one two
33:02 - three four we won't we went over this
33:04 - pretty quick but hopefully you caught
33:06 - yeah you you you there's definitely a
33:13 - lag so as we wait for the chat to - to
33:17 - answer this question one two three four
33:20 - what are some of the another question
33:22 - for you Thea what are some of the
33:23 - upcoming features of emoji code and so
33:27 - as you might you know might not know the
33:31 - current version code is 1.0 better -
33:34 - this means we're actually nearing the
33:37 - grand release of version 11.0
33:40 - so what's really coming up is some
33:43 - improvements to the compiler so the
33:44 - compiler will be the compilers sometimes
33:48 - can be a bit bad at sizing certain
33:51 - certain uses of well you types in the
33:54 - Moshi code and there's what going what's
33:56 - going to be optimized in the next
33:57 - version or yeah awesome
34:00 - so people says some people are saying
34:03 - three and some people are saying in wine
34:04 - that you did chat so the first one is
34:06 - actually multi-line comment here it's a
34:11 - checker block so this is one is not
34:12 - correct here is a text string so this is
34:15 - also not correct so it's for a thought
34:20 - bubble right a single thought bubble
34:23 - very nice
34:26 - cool so now we have block letters do you
34:30 - want to do this or do you think we
34:33 - should do this or move into the next
34:34 - lesson okay I think we should move ahead
34:36 - because there's really something for
34:39 - people to figure out on their own I
34:40 - guess well they completed the lesson
34:43 - alright so folks watching make sure to
34:46 - check out the first project we're gonna
34:48 - move on to variables we have about 20
34:52 - minutes so we should we should be good
34:53 - to go
34:54 - well actually let me go here real quick
34:59 - okay cool variables similar to a lot of
35:06 - strongly typed languages there are types
35:08 - right we're not gonna die you might you
35:11 - deep into types in this lesson but
35:13 - here's just so that you know one two
35:15 - three four and that represent integers
35:16 - such as zero such as 420 such as
35:19 - negative 34 we have decimal numbers or
35:22 - floating-point numbers a hundred that's
35:24 - a symbol for it which I really like
35:26 - okay this one is not a decimal yeah this
35:30 - was actually this was the chest but
35:32 - somebody from the community too
35:34 - so it was in former times it was a
35:36 - completely different symbol and it was
35:38 - quite a bit of debate about rights and
35:39 - floating-point numbers and it finally
35:42 - turned out most of the people like this
35:45 - one the best
35:45 - okay so I mean I like this yeah so so
35:50 - 3.14 negative two hundred point zero
35:52 - anything with a floating-point ABCD text
35:56 - strings sequence of characters as you
35:59 - seen in the previous lesson you know
36:00 - it's wrapped with ABC emojis here's a
36:04 - really good one
36:04 - the okay emoji represent truth values
36:07 - the thumbs up true and thumbs down on
36:09 - these false cool
36:18 - okay Hostin therapist this one is pretty
36:23 - self-explanatory if you've programmed
36:25 - before in another language so constant
36:28 - variables are variables that you can
36:30 - modify the value in the program right so
36:32 - you create it and it'll stay the same
36:33 - throughout the program so for this very
36:39 - similar to other programming languages
36:41 - step there is the sort of assign
36:44 - operator right in other languages
36:46 - usually the equal sign so a mojiko we're
36:49 - assigning we're declaring a constant
36:52 - name pi PI that's the name of the
36:54 - variable and we're storing the value
36:58 - 3.14 into this variable pi okay
37:02 - I think because the version of Unicode
37:08 - or something that we're using on code
37:10 - kami this symbol actually looks a little
37:11 - bit slightly different than what you
37:13 - have on your documentation but it is yep
37:17 - so check yeah it's that's actually a
37:20 - little tiny detail of emojis as there
37:22 - are today because some of the symbols we
37:26 - know as emojis were actually in Unicode
37:28 - before they were emoji picker so there
37:32 - are two versions of those Unicode
37:34 - symbols but the compilers doesn't care
37:36 - about whether you know use the emoji one
37:38 - okay
37:38 - plain old one so let's try this out we
37:45 - want to declare a constant name year
37:46 - with a value of the current year 2020
37:49 - I'm sure that copy and paste it
37:56 - something wrong
37:59 - we come to this grill quick pace of the
38:08 - scent
38:10 - all right string interpolation
38:16 - okay so here's another feature that I'd
38:18 - love to have loved to have and in a 1.0
38:23 - so I feel like if you look at all the
38:25 - other you know top the most popular
38:26 - programming language is JavaScript
38:28 - Python and so on
38:31 - I've notice that usually what they've
38:34 - I'm they I'm sure each every language of
38:38 - their own problems as a scale right for
38:41 - a different use case it's that they were
38:43 - used for but I feel like they've all
38:46 - gotten the very basics right and one of
38:50 - the basics I think is so necessary for
38:55 - like programming is the ability to to
38:57 - print area so I love I might you know
39:02 - make a poll requesting your every boat
39:04 - like it'll be great if you can you know
39:06 - just print out a variable without using
39:10 - stream table yeah so I mean I'm going to
39:16 - respond to it and the reason why there
39:20 - is knows that feature today is because
39:23 - as you've mentioned before emoji code is
39:27 - actually I really designed emotion code
39:30 - light like any proper language every
39:33 - reason there is no such print function
39:36 - or something like that is because we
39:37 - don't have we don't have functions the
39:40 - emoji code has just objects like each
39:42 - other that would mean we would have to
39:44 - introduce a class like system and then
39:46 - it would be like a child system dot out
39:48 - dot print whatever and this just doesn't
39:51 - feel right I did such such a function or
39:56 - method okay again I tried yeah but
40:02 - open open it open an issue and be test
40:04 - and we we can go into lengthy discussion
40:07 - right there anyways so to pronounce
40:11 - train you something call strain to
40:13 - it's basically construct a string with
40:16 - you know and you can sprinkle in a
40:18 - constant and a variable or other things
40:21 - as part of the string literal okay and
40:23 - to do so you use the sort of magnet mo
40:26 - G's that wrap around the variable so
40:29 - suppose we have a constant named height
40:30 - right we declare a variable constant
40:33 - variable called height and we assign a
40:35 - value 3,000 if you want to print out a
40:38 - string that basically that want to print
40:42 - out the value of three south through the
40:44 - value of height instead of then you know
40:46 - the name of it then we then we wrap this
40:49 - variable in magnets so the output would
40:53 - look like this Alice Honnold climbed El
40:55 - Capitan which is three thousand feet
40:57 - without a rope so everything is the same
40:59 - here except this right here as you can
41:03 - see instead of printing the variable
41:04 - name it print out the value of height
41:06 - which is 3000 okay so let's try this out
41:09 - real quick so people understand you know
41:11 - a little bit more so to output the
41:12 - constant year using this print method Oh
41:18 - so we're basically throwing in the year
41:20 - as part of this print message so that's
41:23 - that let's do this real quick I copy in
41:29 - this APC the current here is a copy this
41:35 - in right here
41:47 - Oh something's wrong turn your is here
41:50 - oh boy oh whoops
41:58 - mr. closing ABC emoji is it weird to
42:04 - look at somebody programming or in a
42:06 - program language that you like past
42:13 - weeks I've gotten used to people
42:15 - creating a lesson about language I
42:18 - created so I kind of used it now but it
42:21 - is somewhat strange and funny at the
42:24 - same maybe I'm a tester right it's
42:30 - almost like you're getting customer
42:32 - feedback yeah I mean I have seen other
42:35 - other people friends and people are
42:37 - taught or talked to about emotion code
42:41 - use it but it's still different to see
42:45 - like a whole company look for course
42:48 - about totally it's still different than
42:50 - you demoing it's on YouTube it's still a
42:53 - lot different cool all right so
42:57 - arithmetic operations this is pretty
43:01 - self-explanatory
43:02 - addition subtraction multiplication
43:04 - division a modulo symbol looks pretty
43:07 - cool it's like the garbage symbol right
43:10 - it's like the remainder whatever is left
43:12 - so you throw it out but you like it I
43:14 - like it up yeah okay that's great
43:16 - because when I first introduced it the
43:19 - first feedback in god was pretty
43:20 - negative because the person told me and
43:22 - something like nada loop is is a really
43:26 - useful operator
43:27 - why would you use the waste to make for
43:28 - his turns that was not intentional but
43:31 - no I I love it I think it really
43:35 - separated from the pack of these ones
43:38 - right here so that's a pretty
43:42 - self-explanatory here we're doing a
43:44 - addition right so we're declaring a
43:46 - variable called score score one we're
43:49 - storing the result of this into square
43:51 - one which is six right and so on so in
43:56 - the co-editor we have already declared
43:57 - initialized a variable called amount
44:00 - that has a value of 18.9 now they're a
44:03 - new variable named tip actually I'm
44:05 - gonna pull up the emoji picker I feel
44:07 - like it's a disrespect to to copy and
44:09 - paste well well I copy and paste all
44:17 - emoji code samples all the times so
44:21 - let's do a mount we're gonna do multiply
44:28 - 0.2 cool something's wrong mmm maybe
44:37 - there's a testing problem yeah I think
44:39 - so because your code looks good looks
44:42 - good and maybe if you use the emoji
44:45 - multiplication sign like the third in
44:48 - the first row oh I probably know it
44:56 - maybe if you copy and paste it from your
44:57 - error message you know right there a
45:02 - couple but they all look the same
45:04 - yes okay so there's probably with the
45:08 - testing good yeah okay but anyways
45:11 - that's how you do it I'm gonna change
45:14 - this for after the lecture it's funny
45:16 - actually because I mean I've tested - -
45:19 - and it worked for me yeah I'm not sure
45:21 - it's we use regex regular expressions on
45:24 - the back end so it's usually like
45:26 - probably like extra space or missing
45:27 - space or something like that
45:28 - okay mutable variables so instead of
45:32 - constants with immutable variables where
45:34 - the values can be modified throughout
45:36 - the program and here's one way here's
45:39 - how we need to clear a mutable variable
45:42 - so instead of just doing that a sine
45:44 - operator the like right arrow
45:46 - there's two new emojis that you have to
45:49 - throw in the crayon Moche and the new
45:50 - emoji okay but pretty much the same
45:52 - thing so to clear a mutable variable
45:55 - named quarter so let's do crayon and
46:02 - that let's do
46:05 - and then let's do right arrow whoops
46:19 - putting the variable value eight there
46:23 - so nothing should happen and there is a
46:26 - warning oh I like this I never noticed
46:28 - this but this is the warning saying that
46:34 - quarters even though it's a we made it
46:37 - as a mutable variables was never mutated
46:39 - was never modified so this is not a
46:42 - error it's a warning it's basically
46:45 - saying that consider making quarters
46:47 - variable into a constant variable scope
46:51 - operator assignment
46:53 - so here's ways here are ways that you
46:55 - can modify a mutable variable there's
47:01 - something called addition assignment
47:03 - subtraction assignment multiplication
47:04 - assignment division assignment module
47:06 - assignment and they're pretty much the
47:09 - same thing as they're equivalent to so
47:12 - suppose I have something that looks like
47:13 - this actually let's let's copy this code
47:16 - in there I'm going to comment this out
47:23 - suppose we declare so only look at this
47:25 - code line six right here
47:26 - so suppose we declare a variable called
47:28 - I little mutable variable high and we
47:31 - start it as zero now let's say we want
47:34 - to print out let's do
47:39 - [Music]
47:49 - so let's do it we want to print out I
47:52 - and then we want to comment let's just
47:54 - comment out line 10 line 11 for now okay
47:58 - so only focus on this code right here so
48:00 - we're creating something a variable
48:02 - called I storing 0 into it and we want
48:04 - to print out it should be 0 cool and
48:07 - this is a little warning that you can
48:08 - ignore when we do something like this on
48:11 - line 11 a line 12 sorry we can comment
48:15 - this out what we're doing is this we're
48:18 - incrementing I by 1 so now I is 1 and
48:23 - what this means is this is actually the
48:25 - equivalent of something that looks like
48:27 - you know I I plus 1 something like that
48:34 - we're adding 1 to I itself and when we
48:39 - do something like this let's uncomment
48:40 - this line of code on line 16 we're
48:44 - basically saying instead of incremented
48:45 - by 1 we want to increment it by 5 so if
48:48 - you print this line of code again it
48:51 - will be 6 because 1 plus 5 is 6
48:54 - okay so a little little shorthand I
48:57 - guess for not only adding but adding and
49:01 - also reassigning and this is subtracting
49:04 - and reassigning what multiplying and
49:07 - reassigning dividing and reassigning
49:09 - finding the remainder and reassign okay
49:12 - so in the co-editor we have already
49:13 - declared and initialized a variable
49:15 - called level so use addition assignment
49:18 - to increment level by 2 so I'm actually
49:21 - just gonna copy this code right here
49:22 - instead of doing plus 1 wouldn't do to
49:25 - and I'm gonna do level so here this is
49:27 - saying that we're taking level and we're
49:29 - adding 2 to it so when we run it oh
49:32 - whoops
49:33 - oh I common this code out before so I'm
49:37 - that uncommon to back cool there's a
49:42 - little bit it's a little bit buggy right
49:44 - now because I have
49:49 - cool and now we want to and for I don't
49:54 - know if you can see this for learners at
49:55 - home there's actually a plus symbol
49:57 - right here plus emoji right here
50:00 - due to our co-editor background it's a
50:03 - little bit it's hard to tell so we're
50:07 - gonna do the same thing but instead of
50:12 - addition assignment we're gonna use
50:14 - subtraction assignment okay so now we're
50:16 - decremented by one and now we want to
50:20 - print out the result of level so let me
50:23 - just go in here smiley face a PC for the
50:29 - text string we'll do string
50:31 - interpolation two of them and then we
50:35 - want to print a level and if you really
50:37 - want you can actually have you know the
50:39 - current level is blah nice cool so
50:48 - that's emoji code for for a hello world
50:50 - and and variables make sure to check out
50:53 - the projects there's a piggy bank
50:55 - project there's what emoji are you
50:57 - projects when you know you get into
50:58 - conditionals with emojis there's a block
51:01 - letters projects a lot of projects but
51:04 - that's pretty much a demo of the course
51:06 - we're already an hour into the the
51:09 - stream should we should we open the
51:14 - floor to more questions yeah sure sure
51:19 - so YouTube chat make sure - I'm gonna
51:23 - unshare my screen cool and then maybe we
51:31 - can let me go over to our YouTube page
51:34 - real quick so that we can make sure to
51:38 - ask any questions for Theo about emoji
51:41 - code about the emoji code course about
51:44 - software compilers language whatever
51:49 - whatever and I guess I can start one off
51:53 - before the questions start coming in but
51:55 - what are some of the what what are some
51:58 - of the things that you really learn what
52:02 - are some the highlights like that
52:03 - you spend you know months and years on
52:05 - this so like what are the highs and lows
52:06 - of building this language out like what
52:10 - are some of the findings the learning
52:12 - components of designing your own
52:14 - language hmm
52:15 - so I think something you will really
52:19 - soon is that the most like natural and
52:22 - obvious things in modern programming
52:24 - languages are the most complicated ones
52:26 - for instance automatic memory management
52:29 - we all in I don't know child c-sharp
52:32 - sweep we all create objects and they
52:34 - simply disappear when they no longer
52:36 - need that you - garbage collection or
52:38 - automatic reference counting and this
52:40 - turns out this is actually one of the
52:42 - most difficult things to get right you
52:45 - don't want to slow down the program you
52:47 - won't want to come to collect it also
52:49 - for unlikely the right moment and so on
52:52 - that's this is actually one of the the
52:55 - like deepest learning experiences that
52:57 - had to the looping emoji code
52:59 - interesting memory management yeah yeah
53:01 - and sorry just for learners at home like
53:07 - new coders so garbage collection is a
53:10 - form of automatic memory management and
53:14 - it relieves the program or the coder
53:16 - from performing manual memory management
53:19 - okay and this is where a memory
53:23 - management manual memory management
53:24 - swear you know programmer specifies what
53:27 - objects to allocate or objects to
53:30 - deallocate and returns to the memory
53:33 - system oh it's like a like a CS concept
53:36 - a lot of coders who are learning you
53:37 - know Python JavaScript might not know
53:39 - right now and they shouldn't care about
53:41 - it that's what I mean right this is
53:42 - something so natural when programming
53:44 - today it said that but actually it's
53:46 - quite a bit of work that that's that's
53:48 - what I meant right yeah and and also
53:51 - with with with typing so things like we
53:56 - we also in modern languages we can just
53:59 - cast values at runtime we can say okay
54:01 - this is I don't know an instance of
54:02 - object or instance of any or something
54:05 - like that
54:05 - and and I cast it to whatever whatever I
54:09 - want to cast it to if it's at least of
54:11 - that type and it just works and
54:13 - implementing debt is actually quite
54:16 - difficult
54:17 - because you need to somehow know the
54:19 - type of the value at runtime and
54:21 - probably that was already a bit
54:22 - complicated I don't know who wants to
54:27 - yeah let's see let's see if there are
54:30 - questions from the YouTube chat okay
54:34 - this is such a great question from will
54:35 - filled Minh how much time have you spent
54:38 - developing emoji code and I don't know
54:43 - how I spent questions
54:45 - I haven't counted any hours I mean it
54:48 - has been developed over the course of
54:50 - six years I guess so but but that
54:56 - doesn't mean I have been working on
54:57 - emoji code five basic research is
55:01 - obviously not I can't tell you yeah
55:04 - that's still wild oh that me six years
55:07 - is a pretty long time so definitely you
55:09 - know thumbs up easier so from nine from
55:14 - from it from nan myself on YouTube chat
55:17 - is there an emoji editor out there is
55:21 - there what an emoji editor yeah I think
55:23 - it's like a mojiko editor is there an ID
55:25 - no and in former times and there was an
55:30 - emoji ID eat like anybody at an editor
55:33 - but we I gave up supporting them because
55:36 - ultimately was too too much work or yeah
55:42 - but a benefit let's put it like that and
55:45 - then somebody saw this actually very
55:48 - common I totally agree with this from
55:49 - the high span does link who's in vine
55:52 - this link I think this language is
55:55 - perfect to visualize how code works and
55:57 - I really think so they really make I
56:00 - think any sort of newer fresh program it
56:03 - was like this really make you rethink
56:05 - about really like help me look at
56:08 - growing mean in a different light
56:10 - absolutely yeah certainly that that's
56:12 - that's what I meant in the beginning
56:15 - when I talked about the word it was was
56:17 - looking for and it was speaking about
56:19 - code and that's there's also thing I
56:21 - realized we don't code thinking about
56:23 - the words that actually are there by
56:25 - type for it doesn't really matter to if
56:28 - it says for or if it's
56:30 - I don't know emoji with some arrows in
56:33 - it that's not not how we program
56:35 - actually it's the same with mathematics
56:37 - by the way those are also just fine
56:39 - somebody made up here's another question
56:43 - from hosing mine again
56:44 - so hey Theo are you from Germany no I'm
56:49 - not in Germany am i as I mentioned
56:52 - before I'm in Zurich Switzerland right
56:54 - now but then actually from Austria and I
56:58 - think I wonder I wonder why that
57:00 - question came up possibly I don't know
57:08 - but I can we talked about this before
57:10 - you know I used to live in Germany I
57:11 - think you know I've been to Zurich when
57:12 - I was a little kid so I'd love to love
57:14 - to go back sometimes from Nanny mins oh
57:19 - no where would you want to see this in
57:21 - five years and where do you think it's
57:23 - going I have no idea I wouldn't never
57:28 - ever gonna have thought that that would
57:31 - be a code Academy course about it when I
57:33 - started I would have never thought that
57:35 - people were actually going to build
57:37 - things in it and I have no idea where
57:39 - they will be in five years maybe also
57:42 - after everywhere is gonna be written in
57:43 - oh she couldn't we'll see yeah I mean I
57:48 - think it's a great such a fresh such a
57:50 - cool language hopefully hopefully more
57:54 - and more people you're using the brand
57:55 - to you know make more people aware of it
57:57 - is it possible from non myself again is
58:00 - it possible to create a script font of
58:04 - tiny animated emoji is it possible to
58:08 - create a script a font of animated emoji
58:13 - hmm I understand don't get to the
58:16 - question if you I mean you can't create
58:19 - a custom font with animated symbols if
58:21 - that's the question but not sure how
58:26 - yeah cool
58:30 - I think that's around and we I mean
58:33 - we've did it for a whole hour
58:36 - so I'm very happy how this turned out
58:38 - thank you Jeff do for for you know I
58:42 - mean we try to do this course on
58:44 - april fools and you know Kobe hits and
58:47 - you know we didn't want
58:48 - I think the marketing team didn't want
58:49 - to be too tone-deaf so we kind of
58:51 - backlot this until we found a better day
58:53 - which is now world emoji code I just
58:56 - want to thank you so much again for
58:57 - helping out with the course for
58:59 - reviewing the course for giving me ideas
59:01 - for the course
59:03 - it was absolutely my pleasure it's great
59:06 - fun if you're if you're ever you know in
59:08 - New York again I'd love to you know grab
59:10 - a drink with you to thank you again in
59:12 - person so yeah thank you thank you
59:15 - everybody who's watching let us know in
59:18 - the comments below on facebook and
59:20 - youtube if you want to see more
59:21 - interviews like this and say bye to Theo
59:24 - everybody and I think we're gonna call
59:25 - it happy moving everyone cool