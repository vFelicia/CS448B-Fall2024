00:00 - how's it going everyone I'm Carlos with
00:02 - code Academy and in this video we'll
00:03 - learn how to use Visual Studio in order
00:05 - to create and develop a razor pages
00:07 - application we'll start by generating a
00:09 - project template explore the folder
00:11 - structure to see how the application was
00:13 - built and then run it to see it live now
00:16 - visual studio is currently available for
00:17 - Windows and Mac and if you're in a Linux
00:20 - you can use a separate program like
00:21 - monodevelop
00:22 - or you can use a dotnet CLI which we'll
00:24 - cover later in this video so let's start
00:27 - out by launching Visual Studio and right
00:30 - off the get-go
00:30 - we'll be provided with two options want
00:33 - to open up a project and another to
00:35 - create a new one using a template so
00:37 - we're gonna go ahead and create a new
00:38 - one so let's click on you a visual
00:43 - studio provides us with a wide range of
00:45 - templates depending on what kind of
00:46 - project you want to build from multi
00:48 - platform to create cross-platform
00:49 - applications to iOS from mobile
00:52 - development to dotnet core console
00:54 - applications and others and the
00:56 - templates provide us a skeleton for the
00:57 - app that allow the user to get up and
00:59 - running in no time so we'll be using
01:01 - asp.net core to build a razor pages
01:04 - application so let's go to the dotnet
01:06 - core tab and select web application
01:09 - under the app section well click Next so
01:13 - here we'll be able to select the target
01:15 - framework for a project I'll be using
01:17 - net core 3.1 which already have
01:19 - installed so I'll be selecting that and
01:21 - then we won't be using authentication
01:23 - for apps so we can leave this as no
01:25 - authentication then we can click Next or
01:28 - we'll be naming project so let's go
01:30 - ahead and name our project test app
01:33 - which will also be the name of our
01:35 - solution now if you're wondering what
01:37 - exactly is the difference between a
01:38 - project and a solution well the project
01:41 - contains all the files required to
01:42 - compile and execute the code and is
01:45 - defined with a dot C as projects tension
01:47 - and the file name and a solution is
01:49 - simply a container for one or more
01:51 - related projects and is defined by a dot
01:54 - SL an extension and the file name also
01:56 - make sure to keep note of the location
01:58 - which is where your project will be
01:59 - stored in since we'll be using the.net
02:01 - CLI and navigating to that directory in
02:04 - order to run the application so once you
02:07 - create this a folder with our project
02:09 - name will be created containing our main
02:11 - project and solution folder let's go
02:13 - ahead and create it
02:19 - now we can see on the left-hand side our
02:21 - solution pad here and I'll zoom in a bit
02:24 - more so you guys you can see in here we
02:27 - can view and manage the project or
02:29 - solution and the files contained within
02:30 - so let's expand our project to see what
02:33 - folders and files are created you'll see
02:35 - we have a dependencies folder a pages
02:38 - folder and properties
02:40 - www root app settings program and then
02:44 - startup dots yes so let's go ahead and
02:47 - go over watch what is included in each
02:49 - one and what they're used for
02:50 - so the first folder we'll look into is
02:53 - the dependencies folder and this folder
02:54 - simply contains their framework and
02:56 - packages that are required for the
02:58 - application to run next we'll look into
03:01 - is the pages folder now this folder
03:03 - contains all the pages required for a
03:05 - project each RAZR page is made up of two
03:08 - files a dot CSS HTML file which contains
03:10 - RAZR syntax which is a combination of
03:13 - HTML markup and c-sharp code and a dot c
03:17 - HTML dot CS file which holds a the logic
03:20 - and behavior for each page we'll find a
03:23 - launch sending stock JSON file within
03:25 - the properties folder and in this file
03:27 - we have the settings are going to be
03:28 - used when we run the dotnet core
03:30 - application the most important point
03:32 - that you need to keep in mind is that
03:34 - these settings will only be used with
03:35 - your local development machine
03:37 - also note that launch setting star Jason
03:39 - is only used by Visual Studio if there
03:42 - are settings that your application needs
03:43 - to use you'll be storing them in apps in
03:45 - Jason which we'll look into in a bit
03:48 - now that www root folder contains all
03:51 - the static files that the application
03:53 - can use so any HTML or CSS or JavaScript
03:57 - files will be stored in here we cannot
03:59 - place a nice eShop or RAZR files in here
04:02 - by default razor pages uses the CSS
04:05 - library called bootstrap which can also
04:07 - be found in this folder under the Lib
04:09 - directory all application settings will
04:12 - be contained in the app settings Jason
04:14 - found from a database connection string
04:16 - to an access token asp.net core will
04:19 - load the values from this file and from
04:21 - the configuration file related to your
04:22 - current environment now there will be
04:25 - two main environments you'll be working
04:26 - under
04:27 - which describes the environment you're
04:29 - providing to the customers and
04:30 - development which is the environment
04:32 - which developers work on so if you're in
04:34 - a development environment it will load
04:36 - up the app settings development Jason
04:38 - found and if you're in the production
04:40 - environment it will load up the app
04:42 - settings dot JSON file and her project
04:45 - will find that that there are a few
04:46 - settings already created for us for
04:47 - example the log level property under
04:49 - logging specifies the minimum level to
04:52 - log for selected categories by default
04:55 - our application will log anything under
04:57 - the information category which is given
04:59 - when a method ends normally it's also
05:01 - important to note that any changes made
05:03 - here will require us to restart the
05:05 - application to take effect next file we
05:09 - have is a program dot C as file which is
05:11 - a c-sharp file that contains the entry
05:13 - point for the program and in this file
05:15 - the main method is a first method which
05:17 - gets invoked lastly we have the startup
05:20 - dot CSV file which is a c-sharp file
05:23 - containing the startup class where the
05:25 - applications features and services are
05:27 - configured so if you go ahead and look
05:29 - at our application for that file and we
05:31 - look at this configure method which is
05:33 - this whole block of code this method is
05:36 - called by the runtime and it's used to
05:38 - configure the HTTP request pipeline so
05:41 - we can see how it starts out by allowing
05:43 - redirection allowing the use of static
05:46 - files use of routing authorization if
05:49 - required all the way up to giving access
05:51 - to any endpoints that we create now that
05:54 - we have an understanding of your folder
05:55 - structure let's go ahead and run the
05:57 - application to see what happens so let's
05:59 - go ahead and click the Run button on the
06:01 - upper left corner which will compile our
06:03 - code and run the application now we'll
06:06 - see that a pop-up comes up saying that
06:09 - there is no HTTP development certificate
06:11 - found in a just an HTTP development
06:14 - certificate ensures that any information
06:16 - that is being passed from your browser
06:18 - to the server as that is hosted on is
06:20 - secure and encrypted now there's a lot
06:22 - more to it than this from encryption to
06:25 - digital signatures but for now all you
06:27 - need to know is that a certificate
06:28 - simply allows traffic to travel safely
06:31 - from a browser to a server so let's go
06:33 - ahead and install and trust this
06:35 - certificate and that dialog will display
06:39 - asking for your passwords
06:40 - enter your password and select ok once a
06:45 - build a successful Visual Studio
06:47 - launches your browser and navigates to
06:49 - localhost 5001 and we're able to see our
06:53 - out template application now let's go
06:56 - ahead and run our application from the
06:57 - command line using don''t CLI although
07:00 - it's not necessary and we can build and
07:02 - run our application from visual studio
07:04 - it will still be useful for more
07:06 - advanced techniques in the future such
07:08 - as restoring dependencies for a given
07:10 - application or maybe updating specific
07:12 - packages now in order to do so we first
07:15 - need to install the.net core sdk which
07:18 - is found in dotnet Microsoft comm slash
07:21 - download go ahead and download the
07:23 - latest build if you're using windows you
07:27 - can launch the Visual Studio installer
07:29 - from here we'll be able to modify
07:31 - installation programs so we can click on
07:33 - modify and in here we can really
07:35 - customize visual studios with setting up
07:38 - packages for the platform in our case
07:40 - who want the SDK so we can navigate to
07:42 - the individuals component tab and check
07:45 - it from the list under the dotnet tab
07:47 - you'll see that I already have it
07:49 - installed so I don't need to modify it
07:51 - once you're set
07:52 - you can modify Visual Studio and it will
07:54 - install the SDK for you ok so back in
07:57 - our project make sure your application
07:59 - is not running you can stop your
08:01 - application from running by clicking on
08:03 - the stop button on the upper left hand
08:05 - side it's open up a new tab and let's
08:08 - open up a terminal you can use whatever
08:10 - terminal program you're comfortable with
08:12 - I'll be using I turned form I'll go
08:15 - ahead and zoom in a little bit more ok
08:19 - so first we're going to do is navigate
08:21 - to our project directory so I know my
08:24 - project is under a project directory in
08:26 - my home folder so let's go ahead and
08:28 - navigate to project stamp and here we'll
08:32 - find that we have our solution file and
08:33 - our project so let's go ahead and go
08:36 - inside our project and then I'll clear
08:38 - this and then list what's contained and
08:40 - that directory and we'll find all the
08:42 - files and folders that we were talking
08:44 - about earlier that essentially allow us
08:46 - to run our application next thing we
08:49 - want to do is check if dotnet is
08:51 - installed and we can do this by running
08:53 - the command on
08:54 - so that was installed properly it will
08:56 - give you some information about the
08:58 - usage with some options you can provide
09:00 - to the command if it wasn't installed
09:02 - properly you would probably receive an
09:04 - error that says something like that net
09:06 - is not recognized as an internal or
09:08 - external command so you would have to go
09:10 - through the installation process again
09:12 - so once you confirm that the dotnet is
09:14 - installed you can go ahead and run
09:16 - dotnet run this will log some
09:20 - information indicating that are the port
09:22 - our app is running at and now we can
09:25 - actually navigate to the same URL
09:26 - localhost 5001 and see our template
09:30 - application running so you can see here
09:32 - the logged information about the ports
09:34 - and that it's actually running
09:36 - successfully so let's go ahead and go to
09:38 - localhost 5001 and you'll see our
09:42 - application is running now you can shut
09:45 - down the application by we're going to
09:47 - your terminal and just doing ctrl C now
09:50 - if you're curious about other commands
09:52 - that are available we can also run
09:54 - Dutton it help and let me clear our
09:56 - terminal here we can run that nethelp
09:59 - in order to actually give us information
10:01 - about some sdk commands that we can run
10:04 - for our application formatting you
10:06 - packages with add to managing
10:08 - development certificates with dev shirts
10:10 - you can also just run it by doing Donna
10:13 - - - H which will be the same command
10:16 - visual studio is filled with many useful
10:18 - features that will make building and
10:19 - structuring an application a very fluid
10:21 - and streamlined process we'll be going
10:24 - more in depth into a lot of features
10:25 - provided as we go through the lessons
10:26 - but I hope this video gave you a better
10:28 - understanding on how a template
10:30 - application is built with Visual Studio
10:32 - thank you all for watching and I'll see
10:34 - you next time