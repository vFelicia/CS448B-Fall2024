hey there how's it going everybody in this video we are going to secure our web server by enabling HTTPS on our website with a free certificate using a service called let's encrypt so we can see I have my website up here now and in the last video we added a custom domain name and my domain name is wwm I awesome app calm but we can see in the upper left here that it says that this is not secure so it says your connection to this site is not secure so in order to get that to be secure so on most websites you'll see a little lock in the top left there we need to add an SSL or TLS certificate and we're going to do that using a service called let's encrypt so I have let's encrypt pulled up here in my browser and let's encrypt is a certificate authority that lets anyone obtain renew and manage certificates for their site now there are nonprofit and provide all of this for free and it's easy to get running on our server so let's go ahead and get started and see how to do this so first of all you're going to want to SSH into our server so if you're coming to this tutorial and haven't seen the previous videos in the series then it's not a big deal but you will need SSH access to your server in order to get this running and that's something that we covered in previous videos and once we're in our server we simply need to run a few commands so in order to find the commands that you need to run for your operating system you'll simply want to go to the let's encrypt website which we have pulled up here and then you're going to want to go to the getting started page now from here if we look in the section where it says that we have shell access they recommend using this cert bot client so the cert bot client makes it super easy to get these certificates working on our server so I'm going to click on this cert bot link and once you click on that cert bot link now you're just going to want to choose the web server and operating system that you're using so for our Django site we are using Apache and a boon to 1804 so I'm going to it says I'm using and then there's a drop down I'm going to select Apache and then it says on and that's our operating system now I'm going to select Ubuntu 1804 but you are going to want to choose your web server and your operating system so these are the instructions for Apache on a boon to 1804 so this page here gives you all of the commands that you're going to need to run on your server and they also have a lot of explanation as to what you're doing with these commands if you read through this now I suggest that you read through this page if you'd like to see more information about these commands but I also have all of these commands pulled up in a text file here on my machine and I'll have these available on my github as well if anyone would like to follow along and copy these and also again this is for Apache and a boon to so if you're using a different web server or operating system then you're going to need to get the commands for your server and your OS so I have those commands here and if I pull up my terminal I'm also SSH into my django server okay so I'm simply going to copy these commands into my terminal since I'm a slow typer and I'll do these one at a time so these are the commands that cert bot gave me so I will just paste these in one at a time so first we have our sudo aptget update and I'll have to put in the sudo password and I will some of these commands will take a little bit of time so if there's one that takes too long I will just skip forward it through that okay so now we want to do this sudo aptget install software properties common so I'll run through that okay that finished pretty quickly sudo apt repository universe so we are adding a repository here so I will run through that okay so that one took a little longer to install for me so I just fast forwarded through that if you need to pause until that finishes then feel free to do that but I'm just going to fast forward so that we can move on here so now I'm going to add a another repository here and this is a PPA cert bot so I will run through that and here on this one it's asking us to hit enter to continue so I'll just hit enter to continue there okay and once that is complete we need to do a sudo aptget update again so I will paste that in okay and lastly here we have the sudo aptget install python cert bot apache so I will clear my screen and run that and this one will also add if you want to continue so I will just hit enter for the default of yes and let that install okay so once that is finished we are ready to run the cert bot command but if you've been following along with these videos then we actually need to make a change to one of our config files at this point because we're going to run into a problem if we don't make a couple of changes so first of all let's update our Apache configuration file so that we have our domain name in the server name variable so to update that I can say let me clear my screen here I'll say sudo nano and that is at ford slash et Cie ford slash apache to ford slash sites available sorry that this is going on to another line here I want this large enough to where you all can read it and now that is within Django project comp so I will run that and actually just so we can read a little better let me expand this over our text file there for a second so now down here we're going to set this server name to our website so I'm going to uncomment out that and then I'm gonna put in my domain name which is my awesome app com and I'm also going to just bring this down a line here to spread that out a bit now there's also one more thing that we're going to change temporarily here in our configuration file so when we run that cert bot command it's going to try to create an SSL configuration and using this existing file and some of the configurations that we have in this existing file aren't allowed to be duplicated so we need to temporarily comment out some of these commands and will uncomment out those once it creates the new configuration successfully so the ones that we need to comment out are down here at the bottom if I scroll down a little bit these WSGI commands here so I'm just going to comment these out for now and now I will hit control X Y to save and then hit enter to keep that same file name ok so now I'm going to run the cert bot command for Apache and this will automatically update a lot of our configurations to work with these certificates so that command if I look back at the text file here is sudo cert bot Apache so I'll copy that let me clear my screen here make this large again and I will paste that in and now it's going to ask us a couple of questions here so you can see that it's saying to input our email address so I will just put in my email address khorium Schaefer at gmail.com now it's asking us to agree to the Terms of Service here so I will agree lastly it's asking us if we it wants us to share our email address and that is so that it can send the emails about the nonprofit like let's see there were encrypting the web AFF news campaigns I'm gonna say no to that one that one's not necessary that's optional so I'm just gonna say no to those emails and now it's saying which names would you like to activate HTTPS for the only one that it has here is w WMI awesome app comm so it says to select the appropriate numbers or just hit enter to accept all of these up here so I'm just going to hit enter to do that one okay so we can see that did a couple of things up here so it said that it created an SSL v host within our sites available folder at Django project /l e slash ssl.com it also enabled some Apache modules here and also made a few more changes as well so now it's asking us if we would like to redirect or not so right no redirect means that we could go to HTTP version of our website and HTTP if we redirect it makes all of the requests redirect to secure HTTP access now I almost always choose redirect I'm not sure why somebody would allow HTTP access instead of a secure access but I always want us to be on the secure version of the website so I'm just going to say to redirect okay and then it says congratulations your certificate and chain have been saved it tells you the locations and also it changed our configurations okay so now let me clear my screen here and let's cat out the configuration file that we had before so I'm just going to hit up arrow a couple of times now Nano is where we change that file but I'm just going to do a pseudo cat on that to display that file and own in its entirety so now if we look at this so I'm scrolled up at the top here let me scroll down to the changes that it made so you can see that we still have our aliases still have our directories we have our commented out section here but at the very bottom it put this code here so it turned the rewrite engine on and it is rewriting our conditional where if the server name is equal to my awesome app comm then it'll rewrite us to the HTTPS version of that so that's what redirects us to the secure version of our website so the secure version of our website I'm going to clear my screen here now I'm going to hit the up arrow one more time now instead of this Django project kampf remember it created this other configuration file Django project Ellie ssl.com I'm going to print that out so now if I scroll up here we can see that it's basically the same except instead of port 80 it's at port 443 that's the ssl port if I scroll down here a little bit it copied all of this stuff here so we have our aliases have our directories we have our commented out WSGI variables there which will have to uncomment it but also down here at the bottom we have our SSL certificates so we can see that it's linking to our files so that's the reason that I commented out these WSGI lines here because if you didn't comment those out and it tried to recreate this new SSL configuration then you would get an error that says that you're not allowed to duplicate these commands so now I'm just going to delete those commands from the other configuration and then uncomment out these here in the new configuration so first I'm going to clear my screen here I'm going to do a sudo nano back on our original Django project dot configuration so I'm gonna run that so this is the one that is on port 80 so I'm going to come in here and I'm simply going to remove a few things from this configuration so remember we have all of this information in our new configuration file so we can delete most of this from our original configuration so within nano you can hit ctrl K to remove a line so I'm just going to remove our aliases I'm going to remove this directory here and I'm going to remove our WSGI commands now be careful not to delete the rewrite lines here we want to keep those rewrite lines so basically all we need in our port 80 logic here we have our server name and all that that's good but really we just want to rewrite all that traffic from port 80 to HTTPS so I will save that by hitting ctrl X Y to save and then hit enter and now I'm also going to edit the new configuration file so that is Jango underscore project Ellie SSL comm so I will edit this file and in here I'm going to keep everything that we have right now but I'm just going to uncomment out our WSGI lines and I'll go ahead and remove those empty lines there as well so I will uncomment out these lines here and that will allow our webserver to talk to our Jango code so now I'll save that by hitting ctrl X Y to save and then hit enter okay so that should get our website working correctly now for most websites that automatic cert bot command is going to run without any issues but in our case we had to make those couple of changes now if you have any problems with the automatic cert bot command running into any issues then and you still haven't fixed them with what we did in this video then I'd recommend going back to their website and looking at the cert only installation and walkthrough from there that will allow you to modify your configuration files manually instead of it changing those automatically for you but I've always found it easier to let it do most of that stuff automatically like we did here okay so we are just about done but there are a couple more things that we need to do now one thing I want to point out is that if you test your Apache config it might look like it has some issues so if I say Apache CTL config test and run that then we can see that it thinks that we have some syntax errors so it says a syntax error on line 51 with this SSL certificate file it says that it doesn't exist or that it is empty but really that's just a permissions issue you should run that command using sudo and you'll find that you don't have any syntax problems so if I rerun this Apache CTL command config test but put sudo in front of it then we're not going to have that issue we still get that we have a warning here that says could not rely be reliably determine the server's fully qualified domain name but that's something that was already there I don't worry about that for now it's nothing that will affect our website in any way okay so now that we have all of this working all we have to do is allow HTTP traffic to our website and then it should just work so if you've been following along with this series then if you remember we set up a firewall and originally we only allowed HTTP traffic so we can allow HTTP traffic simply by saying sudo ufw allow HTTP so if I run that that's going to allow HTTP traffic now you can disallow HTTP traffic if you'd like but since we're redirecting that traffic anyway I'm just going to leave it there so now let's restart our web server for these changes to take effect and then we will test it out in the browser so now say sudo service Apache to restart so I'll restart that server and now let's bring this up in our browser so I had my browser open here now remember this was the non secure version of our website so let me reload this okay and when I reloaded that we can see that now we have HTTPS instead of HTTP and also we have a lock here in the top left so if I click on that lock it says that our connection is secure so that is good that is definitely what you want in a production website so now let's just test a little bit of functionality I'm not going to test everything here so our user name was Cory M Schaefer actually I believe that user name oh yeah that user name was actually just Cory M s so I login with that Cory M s user that we created and I believe the password for that okay so we are logged in here and now just let me try to update a post so we can see when I go to one of the posts that I've created we're still on a secure site here it still HTTPS so all of this is HTTP traffic and we can do everything that we did before so my latest updated post I'll just update that that to be my latest post so paste that still on HTTPS secure connection that's good I'd go back those changes took effect so it looks like everything is working with our secure connection now one thing about these certificates is that they last for I think around 90 days and after that they'll need to be renewed now we won't want to do this manually every 90 days so let's just set this up to where it does it automatically so let's go back to our web server and let me clear the screen so first let's do a dry run of what a renew would look like so to do a dry run I can say sudo cert bot renew and that would renew our certificate but to do a dry run of this they have a command that is dry run so I'll run that okay so that just simulated a renewal it didn't actually renew our certificate but we can see that the simulated renewal looks good it says congratulations all renewals succeeded so now let's create a cron job that will run this renew command every month or so so like I said the certificate is good for 90 days but we can just run the renew command every month or so and that'll be fine now if you've never run cron jobs before basically it's a way to run commands at certain intervals I have a separate video on working with cron in general if you would like to learn more about it in detail and I'll leave a link to that video in the description section below but for now let's say that we want to edit our crontab to run this every month so we're going to want to edit our crontab with sudo so that the commands that we add to that will run as root so I'll say sudo crontab e and now it's going to ask us to choose an editor if we haven't selected a default so I'm just gonna hit one to do Nano here since that's what we've been using and now I will scroll down here and this documentation will help you with crontab as well if you've never used it so it'll kind of give you an idea of what all of these placeholders are but for hours let's say that we wanted to run that renew command at 430 a.m. on the first of every month so I will put in a 30 for the minutes a 4 for the hour a 1 for the day of the month and then just an asterisk for the month and the day of the week that means it will run every month and on any day of the week ok so now the command that we want to run is sudo cert bot renew and also I'm going to tag on a quiet there too that way it runs in the background now you don't want to do that dry run here because we actually want to renew this every month so we don't want to put the dry run option there so if this looks good then we can save this by hitting ctrl X Y to save and then hit enter ok so now you should have that certificate working on your server and that renew command will get run every month so that this is automatically renewed for us so that's good ok so I think that is going to do it for this video hopefully now you feel comfortable setting up SSL encryption and HTTPS for your websites using a service like let's encrypt now as usual there's still a lot that we can do with this website I'm still going to do a video showing you all how to deploy to a service like Heroku we'll also see how to use a Postgres database instead of SQL Lite like we're using now and also I prefer to have my website set up so that the WWV version of a website gets redirected to the non WW version of a website so for example ww twitter.com gets rid of the WW part and just read redirects you to Twitter calm and I can show you how to do that in a future video as well so those will be the next videos that I work on it for this series but if anyone has any questions about what we covered in this video then feel free to ask in the comment section below and I'll do my best to answer those and if you enjoy these tutorials and would like to support them then there are several ways you can do that these easy ways to simply like the video and give it a thumbs up and also it's a huge help to share these videos with anyone who you think would find them useful and if you have the means you can contribute through patreon and there's a link to that page in the description section below be sure to subscribe for future videos and thank you all for watching you