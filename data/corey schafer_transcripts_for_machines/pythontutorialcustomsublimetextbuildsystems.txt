hey everybody how's it going in this video we'll be learning how to create multiple Python build systems within sublime text so that we can run Python 2 or Python 3 now this can be extremely useful if you're working on multiple projects and need to switch between different versions of Python so if we look at my sublime text here up here in tools and build systems you can see that I have two custombuilt systems one for Python 27 and one for Python 3.5 so depending on the project I'm working on it's as easy as coming in here and choosing a different version if I want to run the program with that different version so let's go ahead and recreate both of these build systems from scratch so that we can see how we did this so to create a new build system we just come to this exact same location and instead of selecting a build system we can come down here to new build system to create a new one now this is going to open up a new file called untitled dot sublime build but before we make a new build system let's actually see where this is going to get saved too because some people create these build systems by accident and they don't know where to go in order to delete them so these are actually going to get saved to our packages folder so to view where your packages folder is if I click here on sublime text and the top left go to preferences then I can go to browse packages is it this is going to open up the location of my packages folder now I'm on a Mac and we can see that on a Mac it's within our home folder library application support sublime text and then packages so within this packages folder I'm going to navigate within this user folder here and now we can see our custom build systems so I have this Python to seven sublime build and I have this Python 3 5 sublime build so now let's just go ahead and delete both of these and will recreate both of them from scratch so I'm just going to open up the sublime text documentation online here and they have an example of a Python build system and we're just going to go ahead and modify this to the versions that we want to use now if you want to know where this documentation is online then just google sublime text build systems and it's one of the first results that pops up ok so let's go ahead and paste this into our custombuilt system and then I'll explain exactly what's going on there so I'm going to go ahead and highlight all of this and paste that in okay so first of all we have this command statement now what this is doing is it's just like let me open up my terminal here this is just like typing in a command in the terminal so this Python and then U and then file would be the same as doing Python you and then the path to whatever file that we want to run with Python now that's going to use our system's default Python so in order to explicitly set the specific version that we want to use then we have to know the path to that Python interpreter so first let's go ahead and create our Python 27 build system now my operating system shipped with Python 2.6 and Python 2.7 and that's located within user bin Python 2 6 and python 2 7 now if you want to check the location of a specific Python interpreter then what you can try is you can go to your terminal and type which and then try something like python 2.6 or python 2.7 and that will show you the location of that command so now I'm just going to go ahead and grab this location here and instead of this default Python I'm just going to go ahead and paste in the user bin Python and instead of 2 6 there I'm actually gonna use 2 7 I'm gonna go ahead and save this file now and I don't want to overwrite the entire file name here I want to leave this dot sublime build but I'm just going to replace untitled with Python 2.7 and let's go ahead and save that so now if I go back to our user folder here now we should see this Python 7 sublime build in our users folder and if I go to tools and build systems now we should see that Python 7 build system available okay so before we make our Python 3 build system let's go ahead and take a look at exactly what this other stuff is doing so first of all what is this you option doing here now I'm not going to go too in depth in this video but basically what this has to do is with our output buffers so just to quickly show what this is good for I'm going to remove this you option and come over here to this test file called buff pie and within this code what we're done is we are printing out hello world once every second for 5 seconds now without that vashu option if I run this you can see that we don't have any output and then after 5 seconds you can see that all that output comes at once so in order to correct that and get it the war to work the way that we expected to work then I can put back in that you option and save that and now if I go back to that Python file and run that now you can see that the output is like we would expect it so that is what the you option is good for there now as far as the file regex and the selector I just usually leave these alone so the file regex has to do with how our output is displayed and the selector has to do with if we go to tools and build systems it has to do with how this automatic build system works but I'm going to go ahead and just leave those as is so now to make our Python 3 build system I'm just going to copy all of those lines of code there I'm gonna go to tools build system new build system and let's go ahead and just paste all of that into this file here now just like we did with Python 2 I'm going to go over here to our terminal and first you have to have Python 3 installed and after you install it then it will most likely put it in a position if we do a which python 3.5 it'll mostly likely put it in your user local bin folder so I'm just going to go ahead and copy this location here and put this in instead of our Python 2.7 I'm going to use this Python 3.5 now I'm going to go ahead and save that and again be sure not to overwrite that sublime build I'm just gonna call this Python 3.5 and let's go ahead and save that so now if I go to my tools and build systems now you can see that we have both of those custom build systems available so I have a couple of files here that we can test this out with so I'm going to use this file here to check the Python to build system if I run this I'm printing out the executable and you can see that this is a little bit different than what we had in our build system file this user bin Python 2 7 is what you would expect to print out when we print out that executable but really on the Mac that's really just a symlink to this location so that worked fine and now if I go to tools and build system and choose Python 3.5 and run this now you can see that I get an error and that's because in this file I'm using Python 2 code so let's go over to this other file which uses Python 3 and now if I run this file now you can see that it printed out the Python 3 interpreter there so now depending on which project you're working on you can just come in here and go to build system and switch between python 2 and python 3 just at the click of a button so i think that's going to do it for this video I hope that helped if you ever need to run multiple versions of Python within sublime text but if you do have any questions just feel free to ask in the comment section below be sure to subscribe for future videos and thank you all for watching