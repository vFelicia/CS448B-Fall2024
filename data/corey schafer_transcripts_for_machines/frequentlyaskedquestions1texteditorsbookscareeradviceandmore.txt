hey there how's it going everybody in this video I'd like to answer some of the most common questions that I get on this channel so if you've ever looked at the comment section of my videos then you may have seen some of these because they tend to pop up a lot I also get a lot of these within personal messages as well now if you'd like to jump forward to any specific question and answer then I'll go ahead and put each question in the description section below and also the time that you can jump to for each answer so let's go ahead and get started okay so first of all the most common question that I get is what text editor that I'm using in my videos and the text editor that I'm using is sublime text with a custom theme and this is sublime text here and if you watch my videos this probably looks familiar now the custom theme that I use is called pre Don now I've been using sublime text for some time now and I really like it now I do have a video where I walk through how I installed and set up my sublime text now the packages that I go over in that video are kind of focused more around web development than Python programming but if you just want to see how I set up the color theme and things like that and that's a good one to watch now I've been meaning to create another video where I walk through a Python specific set up using sublime text but I haven't quite got around to that yet and speaking of sublime text another common question that I get is how I'm running my Python code from within sublime text so sublime text has these build systems that they use to execute code from different programming languages and you can see the build systems if I go to tools and build system here and you can see that they list all of these languages here now you might notice that your sublime text has this set to automatic now depending on how you're using python and sublime you may need to create a custom build system I always make custom build systems because I like to be able to quickly switch between different versions of Python and also between different Python virtual environments now I have a separate separate video on specifically how I set up these build systems if anyone is curious how I did that okay now another that's along the same lines as those first two is which ibe our text editor I recommend for other people to use so just because I use sublime text in my videos that doesn't necessarily mean that I recommend that other people use it the reason that I use sublime text in my videos is because it has this very and simple clean layout that allows me to hide just about everything except for the code and the output so it really allows the viewer on the videos to focus on just the code and nothing else but with that said I don't necessarily think sublime text is superior to the other options that are out there so I've heard great things about the atom text editor which is kind of similar to sublime text but apparently it comes with some package management stuff that's builtin as far as IDs go there's a lot of good reasons someone would prefer an IDE over a text editor because most IDs have great code hinting and popup documentation that allows you to quickly find what you're looking for instead of needing to get on Google and Google method names and things like that also they have a lot more indepth debugging features that allow people to pause the code in the middle of its execution and inspect exactly each variable and what it's assigned to and things like that now as far as IDs go it sounds like most people enjoy using PyCharm now I have PyCharm installed on this machine but I haven't really had a chance to learn how to navigate through it yet so I can't really speak with much experience as to how good it is but uh I've heard it praised by so many people that I think it's safe to assume that it's one of the best IDs out there for Python programmers now at my current fulltime job we all use the Eclipse IDE here with the pydev plugin for python development now I know a lot of people kind of have some mixed feelings about Eclipse some people love it and some people hate it I'm kind of indifferent to to eclipse so I don't necessarily love it or hate it I think it can be overly complicated as far as the layout goes but once you learn how to use it then it can have some useful features so I do have a separate video on how I set up my anklets environment with the pydev plugin so that you can run Python code now some people have asked me to do a similar video on how to install and set up pycharm but the only reason I haven't done that is because I really feel like the videos that the creators of PyCharm have put put together are way better than anything that I could do myself so instead I usually try to point people in the direction of those videos but uh you know honestly whenever it comes to text editors or these IDs I think it really comes down to personal preference I found a balance that I like but there's still some people out there who love using Emacs or vim or things like that I would say whatever allows you to write code at a faster pace without things getting in your way and that's what I would recommend so if you something that has a lot of features and you then you're gonna want to make sure that those features are helping you write your code more quickly and just aren't getting in the way so I'm not sure if that fully answers that question but really I just think that it depends on personal preference and that you should just try out different ones and get familiar with them and see exactly what you like okay and another common question that I get whenever I do videos like this is how I get these slideshows to work like this within the browser now this is a project called reveal j/s and I'm on the website here you can see that they have a test presentation and things like that but really this just is for the presentation but if you actually want to go to the project then that's over here on github it's a github comm slash ha camel reveal dot j/s now I started using this because I saw a couple of people who are using it in some conference videos and I thought the concept seemed pretty interesting now it does have a slight learning curve because your entire slide show is in HTML but it has a lot of features that I like so I've started using it for almost all of my slide show presentations now if you do look at the github page here for that project then it does give you a good walkthrough for how you can download this and get started with installing it and using it okay another question that I get a lot is what Python books that I recommend so I don't really have a terrific answer for this because I've always been the kind of person who learns better from watching videos and looking through documentation and examples and things like that but I have read to Python books that help me a lot so those are about the only two that I can recommend so when I first started writing Python I got the book learning Python by Mark Lutz now this is a really big book I've never read the entire thing but it has so much information that if you ever had any questions or anything that you didn't quite understand then I could always just go to the table of contents and there was usually like an entire chapter devoted to the concept that was giving me trouble so I'd say that this book is for beginners to intermediate so if you already consider yourself an intermediate programmer then you may learn things from this book but you may get more out of this second book that I recommend and that second book is fluent Python by Luciano Ramon who now this is more of an intermediate to advanced level book he gets more into data types design patterns good pythonic code and things like that now I know that there are likely a ton of other great Python books out there but like I said I'm kind of the person who learns more from videos and walkthroughs so I haven't really read through a lot of books that are out there but I did find that these two books were very useful for me but if you have any book recommendations that helped you out a lot then feel free to mention those in the comment section below and maybe I'll post a link to those in the description section ok so another question that I get a lot is why I don't answer more comments now I wanted to bring this up because I wanted everyone to know that YouTube has been having some trouble with their comment system for some time now and now I read pretty much every comment that I get and will usually try to respond to as many as possible but lately I've been running into this problem where I'll write out a long response and I have a screenshot of some of these but I'll write out a really long response to a comment and then I go to post it and then you can see down here this little red air here comment failed to post now that's really frustrating for me too because sometimes it'll take me a lot of time to write out a response and sometimes I can't even post it now sometimes it'll work if I reload the page and try again and sometimes it doesn't so this is an issue that I suspect will sorted out with YouTube in the near future but for now if you write me a comment and I don't answer then there's a chance that I tried to respond and that I got this comment failed to post err so hopefully that'll get sorted out soon and I won't run into those issues as often now another common question that I get a lot is people asking how they can get a job working in Python and this sudden isn't only for Python I guess it goes for any programming language but I guess the best advice that I can give is to have some sample code or projects available on you know something like github or on a personal website so that you can point potential employers to some of your work now if you already have something like that then I would say that the next step would be to get in touch with the employers so I'd recommend you know trying out websites like hired comm now I've never personally used hired but I have heard that they do a good job of getting people in touch with employers and they even offer signing bonuses if you do get a position now if there's a specific company or organization that you're interested in then I would check out their website specifically for a list of open positions or you can email their HR department for possible positions that might not even be open yet now I do have a video on how to prepare for an entrylevel Python interview it just goes over some of the basics of what to expect in a first interview I have had some requests to put together a video on how to prepare for a more advanced Python position and I marked that down as a video that I'd like to put together in the future okay so next question so should I learn Python instead of you know fill in the blank whatever language so I get a lot of questions about people asking for career advice so people will ask me whether they should learn Python over JavaScript or C++ or Java or if they should do frontend development or backend development and all kinds of questions like that so really this just isn't a question that anyone can answer but you everyone likes different things I used to program in JavaScript fulltime as a frontend developer making web applications and then I started programming in Python doing more serverside development and like that a lot more but that was my experience and my own personal preference I'm sure that a lot of people out there would have had opposite feelings so my best advice here would be to do your best to get exposed to as much as you can and not be afraid to get out of your comfort zone it's really easy to just stick to what you know but maybe someday you know you'll have to set up a web server or something like that and just really realize that you love Linux system ins system administration you'll never know unless you're exposed to it at some point and the field of computer science is growing so fast and quickly and it's so broad that it's difficult to even give a starting point to these types of questions I mean I had trouble deciding exactly which path I wanted to go down also and I still consider switching focus to different areas at some point so again I would just say to try a little of everything that computer science has to offer and see if anything really ignites a passion that you didn't know that you had so some of the more exciting and growing fields within computer science right now you know you have machine learning artificial intelligence data science systems administration frontend development back in development and there's just a ton of others and you can even find a lot of jobs where you're going to be responsible for multiple roles and positions like that can be intimidating because you know you have to learn more but it can also help with exposing you to those areas that you later discover that you did want to focus on now one thing that I always try to emphasize is that no matter which path you take it will always be beneficial to have a firm grasp on some computer science fundamentals so things like algorithms and data structures and design patterns and things like that and also one more thing is that if you ever do choose a field that doesn't make you happy then don't let yourself stay there for too long you should definitely move on and try something else because you're gonna be most happy when you find something that you're really passionate about and something that you're proud to be working on ok so this will be the last question of the video it's another one that's kind of focused on career advice and I'm kind of surprised that I get this one as often as I do but I get asked by a lot of people on here whether they are too old programming or if they're too old to get a fulltime job in programming now I wanted to answer this one because this is pretty common thing for people to ask themselves so sometimes it's easy to believe that everyone in computer science got started when they were young like if you listen to programming podcasts and things like that it seems like every guest mentions how they got started with programming when they were like eight years old by taking apart calculators and reprogramming them into computer games and crazy things like that so then you kind of get stuck with this feeling that you just don't have a chance of catching up to these people when you're just getting started at your age so if you're in your 20s or your 30s or your 40s or even older it always feels like you're playing catchup to everyone else so I wanted to tell you a little bit about how I got started because I wasn't one of these people who started when I was super young I went to college for computer science but I really only did enough to get by and passed the test I wasn't really taking it all in at the time now I'm not gonna give my exact age now but it wasn't really until my late 20s that I really buckled down and got serious about learning programming in depth and after I really started to get serious about learning these things I always kicked myself for not taking it more serious at a younger age so I'd be like man if I'd only been this dedicated back in college and I'd be so much better than I am right now but I found that after I started making these videos that I would get messages from people who were in high school and they would be asking if it was too late for them to learn because everyone that they know started out like before they were teenagers and I was always amazed that these high school kids would think that they were too far behind so at about that point that's when I kind of realized that you're always gonna find people who started out younger or who have more experience and there's nothing that you can do about that but that doesn't mean that it's too late for you to get started so if programming is something that you enjoy and you keep at it then after a while you're just gonna start to pick up more and more so when I really buckled down and started trying to learn this stuff it really only took me about a year or two to get to the point where I felt like I could really contribute to projects that I cared about so it doesn't take very long to reach that initial stage to where you and you know get a job and start doing some good work so I usually tell people of any age that if they really enjoy programming that it's almost never too late to get started so let's say that you're you know somebody who's 50 years old well if you dedicate yourself and push yourself to learn these things and I honestly think that you could get an entrylevel job by the time you turn 51 and that's not to say that you get that entrylevel position and you're completely done I mean it's a job that requires constant learning and adapting and when you take a job like this you're signing yourself up for a lifetime of learning new skills and technologies hopefully that's part of the reason that you love it and why you want to do it for a living so I know that was a long answer to that question but I do get that a lot so I kind of wanted to give some encouragement there so I think that's gonna do it for this video if anyone has any additional questions or if I didn't answer any of these adequately then just feel free to comment down below and I'll do my best to answer any additional questions and if you enjoy these tutorials and would like to support them then there are several ways you can do that the easiest way is to simply like the video and give it a thumbs up and also it's a huge help to share these videos with anyone who you think would find them useful and if you have the means then you can contribute through patreon and there's a link to that page in the description section below be sure to subscribe for future videos and thank you all for watching