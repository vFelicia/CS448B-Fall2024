hey everybody how's it going uh in this python video we're going to be looking at what is the difference between St Str and re um now this is a question that I see that gets asked a lot um but if you uh go and try to test this out on your own or try to figure it out uh by yourself sometimes the answer isn't extremely obvious um so for example I have a little test file here um so if I save and run this you can see that I have a variable a that's equal to a list of 1 2 3 4 and variable B that is a sample string and if I print out Str Str and re of a down here they are both exactly the same thing of a list and if I print out St Str of B and R of B which is a string you can see that they're very similar uh this one doesn't have quotes around it and this one does have quotes around it so just from these simp test uh it's not extremely obvious as to what the difference between these are um so first of all let's go ahead and uh take a look at the python documentation for these now I have this blown up really large uh so that you guys can um so that you guys can read it so within the python documentation this is for Str Str it says that it returns a string containing a nicely printable representation of an object for Strings this Returns the the string itself uh the difference with RP re is that St Str does not always attempt to return a string that is acceptable to eval and its goal is to return a printable string um so let's take a look at what re is okay so it says that it returns a string containing a printable representation of an object uh this is the same value yielded by conversions reverse quotes it is sometimes useful to be able to access this operation as an ordinary function for many types this function makes an attempt to return a string that would yield an object with the same value when passed to eval um so I think that's enough for that so A even reading through the documentation doesn't M uh make it extremely clear as to what the difference between these are especially if you don't know what this uh eval is now if you dig deeper and you start uh looking at sites like stack Overflow and things like that to answer this question then you'll see kind of the consensus to this answer is that the goal of rpr is to be unambiguous and the goal of St is to be readable um so what does that mean exactly uh well let me show you an example of when something needs to be unambiguous and when something needs to be readable so I have a terminal pulled up here here and I already have a python interpreter started and I've already uh made a couple of variables here so I have variable a and I have variable B and without knowing what they are let me print out these variables as strings so if I do Str Str a then you can see that it looks like a date 2015 and then it's got this little uh tag on the End plus Zer looks like a time or a time zone or something like that so let me do St strb so it's the exact same thing so on the surface A and B are the same if you just look at the uh Str Str or what's returned by Str Str now if we look back here um at what we have written out here the goal of Str Str is to be readable and it is very read readable it looks like a date you can tell that this is probably the year the month the day and then hour minute second things like that now uh the goal of rpr is to be unambiguous so let's run these same values through re so if I run rpr a you can see okay this is a date time and then uh has the year the month and then you can see the time zone info here is uh UTC and if I do the same thing to B then it's just a string so that's what it means to be unambiguous um whenever we ran re on a and we can see that it's a datetime and what it meant in the python documentation about being able able to pass something to eval pretty much just means that uh now not all of them return values like this but pretty much it means that you should be able to uh put this in to Python and run it as a command so date time. dat time I should be able to copy this and paste it down here in The Interpreter and run it now in that case I got an error because the TZ info actually needs to be uh pz. UTC or something like that but really you can see that uh this line here uh hold on let me go ahead and clear the screen and rerun these again um so you can see that the that this line here it looks more like a python uh command than this one up here this one's meant to be readable and this one is meant to be unambiguous so to kind of drive this point home let me bring up the file U that does the same thing as what I just had there in The Interpreter and just ignore these print statements here I'm just uh doing a cheap way of adding in new lines um but you can see here that I have a is equal to date time. dat time UTC now things like that and then B I just set equal to the string representation of a now whenever I print out the Str Str uh values of these variables you can see that they look the same just like they did in the terminal window I had pulled up and the r values here you can see that one is date time. dat time and the other one is just the string representation um of that variable so really a good way to think of this is that the representation the rpr um is really used for is is really meant for developers like if I'm debugging something and something's not working the way that it's supposed to to you know this might be a good example maybe you get a a value back from a database that's a date time and you forget to convert it to a date time and it's just a string well if you just print out the string you're not going to be able to tell that that's a string it's just going to look like these values down here it's going to be uh the Str Str value is just going to look like this they're going to be the same but if you print out the rpr value of it then you can obviously see that it's either a string or that it's a date time um so that's meant for developers and if you're G to uh show if you want something to be uh userfriendly for somebody who's a nondeveloper then you want to use Str Str because um someone who's less familiar with programming they don't want to see this date time. dat time TZ info stuff like that it's going to be confusing to them this is a more userfriendly version of that so I hope that made sense to you guys I hope that uh it kind of uh cleared up when you would use one over the other um so but if you guys do have any questions you know just ask in the comment section below um and be sure to subscribe for future tips and tutorials and uh thank you guys for watching