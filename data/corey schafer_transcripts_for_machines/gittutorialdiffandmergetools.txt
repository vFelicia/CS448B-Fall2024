hey everybody how's it going today I thought we could take a look at get if tools and merge tools if you've ever used to get in the terminal before then you may have noticed that the diffs and the merges aren't the easiest things to look at or do for example I'm in a git repository right here if I open up some of the files that are within this repository and I start making some changes here and do one more down here let me save those and now within the repository if I do a git diff then you can see the previous lines are here in red and then the new lines are here in green and the changes I made here's one here and then this 1 2 3 4 so it's not too bad whenever you have a few lines of code to see what it is that you've changed but you know if you have hundreds of lines of code with it stacking one on top of the other like this it may be hard to visualize what changes that you've made but luckily there's tools that really improve this visualization for you to where you can compare them sidebyside and it will highlight exactly the words that have changed and and things like that so the one that I'm going to show you guys today there's a whole lot of these out there but the one that I've been using lately is called diff merge so let me go ahead and pull this up now to get started with this you'll download it just like you will any other program you click on the download button here and I'm on OS X so I would install this OS X installer there's also this OS X dmg but I would recommend choosing choosing the installer and I'll explain why here in a second so go ahead and download that just to be a little quicker here I've already downloaded it and you can see here I have this dot pkg file instead of the dmg file so if you install this just open that and then go through this installation agree to the terms things like that and then go ahead and install it i've already installed this so I'm just going to exit out here but for you just go ahead and click that install button and finish the installation now the reason I recommended that we chose that installer instead of the dmg file if you look at their this is their documentation here if you just google diff merge OSX then it will show you how to set this up as your merge tool and you can see here that they have their settings for OS X Linux and windows so you can find whatever operating system your work you work with but you can see the first line here it says first confirm that user slash bin slash diff merge is present and that's the command then it needs to find in order to set this up as your diff or merge tool now whenever I try to installing this as the dmg then that didn't work for me so to test this we can just copy this directory here and we can pull up our terminal and if I just do an LS user slash bin and hit that and scroll up to the Dee's here and you can see differed right there so that installation work and then installed everything that we needed it to install now to finish setting this up as your diff tool then you'll have to run these git commands here which goes into your config file and changes your diff tool to diff merge I kind of have trouble on my machine here copying and pasting these line breaks here I went ahead and just searched differ j OSX and this i'd better luck with this fourth option down here this two bit labs they have pretty much the exact same config but they have everything on one line so let's go ahead and run through and copy and paste these in and set our config file to where this we're using differs as our diff tool and our merge tool so i'm going to go through and go ahead and do all of these ok I went ahead and fast forwarded there a little bit so that you didn't have to see me copy and paste all those git config lines in but once you have all those line to change your get config file you can test to make sure that that went through by typing git config and then we can do a global ghost list check that and you can see here that we have our div tool equal to diff merge with some other options here and we have our merge tool whoops we have our merge tool set to diff merge with some other options here as well so to test to make sure if this works if we just do a regular get diff like we did before then it's going to give us the default get diff that's what we saw before and what you're used to in the terminal if we want to actually use the git if tool that we just configured then that's exactly what type in we can get diff tool and it'll ask us we've changed one file do you want to open this and get merged you can type in Y or just hit enter and it will open up your changes within if merge and you can see here that this is kind of a lot a better look than your typical git diff that you have in your terminal you have a sidebyside comparison and also shows you the exact words that you've changed and also you can go through and interactively change your get diff here so we see all of our div and we can click on the lines that are different if we click on this line here say we wanted to keep this one change but we wanted to revert these back to the original you know with within the terminal you would have to type in get diff and then you'd have to open up the file go in and make those changes manually and here you can just select hey I want to apply these changes from the left at this line so click on this button here and you can see that it changed these lines back to the original and left this change in here then we can just click Save and then this go ahead and close this down and now if we type in get diff like we normally did before within the terminal then you can see the two changes that were made towards the top of the file are now gone and it's only left with these changes made at the autum where it says one more here so let me clear this out and I've also set up an example for a git merge already I've already set up my repository in a way to where I am going to have a merge whenever I try to merge a branch left created so if I run git branch you can see that I created a branch called test merge and it's going to cause a merge conflict when I try to merge that in with master so I'm going to go ahead and do that now get merge that's merge and you can see here it says Auto merging to txt and that there is a conflict and then I need to fix the conflict or to fix the conflicts and then commit the result so if I do a git merge tool then it'll launch diff merge and let me explain exactly what is going on here within diff merge so this over here is currently what's on our master branch to the left to the right is what is on our test merge branch and in the middle this is the change that it's trying to resolve both our master branch and our test merge branch changed this same file and that's where we have the merge conflict so to resolve this we could either bring in our changes from the left and use what is currently on our master branch or we could click over here bring in our changes from the right and use what is in our test merge branch or we could compromise between the two and I will just change this manually and this is kind of a compromise between the two and then I can just save that and if I come over here and close it now that merge conflict should be resolved and we can just do a git commit like we normally would and that should take care of it so now if I do a git log you can see that we were successfully merged the branch test merge so you can see how having a visual representation of these dips and these merges could really be beneficial to kind of see the changes and not only see the changes be able to interact with your merges in a way that you can't do within terminal and it makes merges and and seeing things like that a lot easier and this isn't the only tool that's out there there's tons of tools out there like this and ways to set them up this is a free version that I've been using and that I kind of enjoy but you know go out there and try a few that you find and see what you like best so that about does it for this video you know if you guys have any questions about this stuff just ask in the comment section below be sure to subscribe for future tips and tutorials and thank you guys for watching