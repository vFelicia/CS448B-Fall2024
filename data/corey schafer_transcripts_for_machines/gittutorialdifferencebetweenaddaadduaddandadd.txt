hey how's it going everybody in this video we're gonna be taking a look at get add and all the different ways that we can add files to the staging area now there's a lot of confusion as to the different syntaxes that you can use with get add so for example you can use get a dash a dash you some people do get add with the current directory and a lot of people are unclear as to exactly what changes these are adding to the staging area to get ready to be committed so in this video we're going to take a look at all of those and hopefully clear up some of that confusion so just to show you what we're working with here I'm going to run a git status to show you the current state of our working directory so we've kind of got all the bases covered here we have a file that is being deleted from our repository we have a modified file we have a deleted file within a subdirectory a modified file within a subdirectory we have a dot file which is a good ignore file here we have a new file within our sub directory and a new file and our top directory so let's go ahead and run through these git add commands and see exactly what each one of them does so first of all we have get add dash a and now you can also write all but a is the shorthand notation for that so if I run git add dash a and then I run a get status what that's going to do is it's going to stage all of the changes all the modified deleted and new files and the dot file in the entire working tree so when I say that it does the entire working tree so let me reset these back to where they were and by the way if you run a reset what that does is it just on stages all of the changes there so what I mean by it doing the entire working tree was even if I was in my sub directory here and I go into minder if I do get add a within here and then run a get status that you can see that it still got all of those changes even though some of the changes were up one directory so let me go ahead and run a git reset here to get back to where we were and now let me go back up to my top level directory here and now you can also add directories onto the git add commands so if I do get add a and then specify my der that I only want to add the changes within that directory and then run that if I run a get status here you can see that added all of the new modified and deleted changes within that directory but it didn't touch anything up here in the top level directory because we specifically told it that we only wanted to add changes within that directory so let me reset those changes and move on to the next example now that get add a is actually the default behavior for git add so I can leave off the a and if I just did so my Durer here then it's going to do the exact same thing as if we had run get add capital a so if I look at my git status here then you can see that it just did the exact same thing but we didn't need to specify the a now that behavior is actually new to get version 2 and get version 1 if you left off that a what it would do is it would ignore the deleted files now if you still want that get version 1 functionality then you can still do it but you just have to do I'd get add and you can either do no all and if I do that on my dirt and then do a git status you can see that even within my dirty even though I specified it it did not stage this deleted file here now instead of no all you could also use it is ignore removal I believe but that's a little long I usually just use no all so let's go ahead and reset those chain just and clear that out so you can also do a git add you option and this is the same as update now what the get add you does is it adds all of the modified and deleted files but not any untracked files not any new files and it does that for the entire tree so I just ran that if I do a git status then you can see here that it got all of the deleted and modified files but not any of these untracked files here so none of these new files were added so let me run a git reset here and clear this out now just like with the a you can specify a directory so if I do get a you and do my dirt and then do a git status then you can see that it got all of the modified and deleted files within my der but it didn't get this new file here and it also did not get these deleted and modified files in our top directory so I'll reset those changes and clear that out now a lot of people use the syntax git add and then the dot which is the current directory so if we run that and run and get status then you can see that it got all of the changes and it leaves a lot of people to believe that this is the exact same thing as running git add a because it looks the same as long as you're in your top directory but let me show you how this is different so if I reset these changes here now if you remember the a is the default get functionality so get add dot in the current directory is the same as running get add a in the current directory so if you're in your top directory then it will be the same as running get add a now where it's different is if we CD down into our sub directory here now if I run get add dot it's the same as running get add a in the current directory and what the going to do is it's going to add all of the changes in our current directory but not in our comp directory so now if I run and get status you can see that it didn't get anything within our level up here so in our directory one level up it didn't get any of our bolita the modified new files or the hidden files so how that's different from the get a a is that if you run this from anywhere it does all of the changes in the entire working tree like we showed before but I'll go ahead and show it one more time so if I'm running to get status now you can see that it got all of those files even the ones that were up a directory okay so let me go ahead and reset these changes and clear this out okay and let me go up to my top directory here now one last thing that I see people using a lot that I wouldn't recommend whenever they're trying to add all of their changes to the staging area is sometimes I'll see people do get add star now the reason I wouldn't recommend this is because the star is a shell command it's it's not something that gets specifically knows how to use it's just going to take everything that's passed to it what I mean by that is if I do an LS star you can see the files and the directories that's going to be passed and to get add so it's going to find our modified files our new files and it's even going to find that directory here and the files within that directory but notice that it didn't find the deleted files because those are no longer on the file system only get knows about those and it also didn't find our hidden files so if I was to run get add star which is the same as get add a star because a is the default if I was to run that and then I ran get status you can see that we might get some unexpected results because I said that it couldn't see the deleted files but one deleted file got added to the staging area and this deleted file didn't and the hidden file didn't get at it so what exactly is going on here well I don't know for 100% sure but I think what happens here in this talk directory if I do the LS star again I think it's also passing my dirt to get add so get knows what to do with that deleted file when we add my dirt so if we were to reset this and then clear that out so let's change into our subdirectory and now if we run get add star within here and then did it get status you can see that it didn't get either of those deleted files it didn't get the one in the top also didn't get the one in the current directory and it also didn't get any of these toplevel files the hidden files or anything like that so that's why I wouldn't recommend using the git add star unless you really know what's going on in the background it's a lot easier to understand using the dot for the current directory or even specifically typing in the directory that you want to add so I would stick to the git command so get a a you and things like that and I just wouldn't use that star so that about does it for this video I hope that that clears up any confusion as to the differences between the different ways to add files to the staging area if you do have any questions or if anything about that was confusing then just ask in the comment section below be sure to subscribe for future videos and thank you all for watching