hey everybody how's it going in this video we're going to be looking at how we can customize our terminal with some prebuilt dot files so in the previous videos we looked at the differences between the bashore profile and The Bash RC files and we also saw how we could modify these files in order to customize our prompt uh but really we only scratch the service of the potential of what these files can do so in this video we're going to look at some popular dot files that other people have put together online and look through some of them and see if we can figure out exactly what's going on the amount of helpful stuff that some people have managed to put into these files is pretty impressive so with that said let's go ahead and get started uh so first things first I want to point out here that I'm starting off from a completely clean slate so I removed the bashore profile and The Bash RC files that we had built in our other videos so now I have a completely uncustomized command prompt uh so let's go ahead and go grab some dot files so if you just do a Google search on dot files then one of the first results is a link to a GitHub page with a lot of great information so I'm going to go ahead and go into this so they give information on what dot files are and also a link at the bottom here has a link to a few different tutorials to where you can learn more about these but we've already been looking at uh the basics of these files in our previous videos uh so let's scroll back up to the top and they also uh give some links to some popular dot file repositories so let's go ahead and dive into someone else's repository and see what they've done with setting up their dot files now one of the more popular ones and one that I base my own dot files off of is this uh matius binds I hope I said that right uh so let's go ahead and take a look at his repository so you can see here that this repository is pretty popular it's got a lot of stars and a lot of uh Fork repositories off of it um so if you scroll down here to the bottom then he gives a set of instructions here for how to use his repository and he also mentions that if you want to give these dot files a try then you should Fork this repository review the code and remove the things that you don't want or need and that's exactly what we're going to do so let's go ahead and download this repository and just jump right in um so we could do a get clone into a local directory or we could just download the zip file from this page and since we're already here I'm just going to go ahead and grab this ZIP file and you can do that with this button right here so now that that's downloaded let's go ahead and extract that and back in the terminal I'm going to go ahead and open this up in Sublime so I'll do Sublime and I'll drag this in here so if we look at the directory structure of this repository uh it can be a little intimidating at first but let's just go ahead and take a look at the two two files that we've already looked at in our previous videos uh that is the bashore profile and The Bash RC files okay so right off the bat we can see that this is slightly different than what we did in our previous videos so instead of sourcing The Bash RC file from the bashore profile he's actually doing the opposite and within his bash RC file here he is sourcing his bashore profile so now let's look at his bashore profile file and look at some of the customizations that he's made now I'll explain what I can with these files but truthfully uh there's so much information in here that I don't know exactly what everything does uh but he's done a pretty good job of commenting a lot of this code for us so if we scroll down through this file then it's not exactly clear where he is customizing The Prompt so in our last video we learned that to customize the prompt we need to change the PS1 variable and that's nowhere to be seen in The Bash RC file or the bashore profile so where exactly is this getting changed uh well there is some interesting lines here towards the top of this file uh right here with this for Loop and what this is doing is that it's looping through different dot files and running some checks on them and if they pass those checks then it is running Source on those files which if we remember that means that it will run the code within those files and also just a quick side note here if ever want to know what these checks are doing uh then what we can do is you can open up your terminal and to learn what those checks are doing you can run a command uh called man which will look up the manual page for test and this will show you all of the uh checks that you can perform so he was using dasr and you can see that the description here for R is true if the file exists and is readable and he was also using F which is true if the file exists and is a regular file uh so that's useful whenever you're looking through these files so back to the loop here uh the files that he is looping over there is a path file a bashore prompt exports aliases functions and extra so it looks like he wanted to break up his DOT file so that each one had a specific responsibility and that's a really good idea because other wise these files would just be jampacked with so much information in one place so the bashore prompt is likely where he is customizing The Prompt uh the alias' file uh is where he can apply some command shortcuts that he likes uh and so on so let's take a second and imagine what's going on so far so when he first runs his terminal it's going to run his bashore profile file uh and if the terminal is is a subshell which we talked about in a previous video then it'll run the bash RC file which in turn the bash RC file calls the bashore profile uh so no matter what this is the code that's going to get executed and when this code gets executed it's going to Loop through all of these dot files that he specifies here and run each of those files if they exist so now let's go over here and open up this bashore prompt file and take a look at that and let me go ahead and just set this to uh bash syntax okay so this is the great thing about downloading these dot files uh from other people and seeing what they're doing because these guys have put in a lot of effort to make the additional checks that we didn't go over in our previous videos um so I'm not exactly sure what this check is doing here it looks like it has something to do with the 256 color settings uh this prompt get function right underneath here uh this is what allows us to add git information to our prompt so if we're within a git repository then the git branch and some information about the status of our current Branch will show up within the terminal prompt so you can see here within this function it does certain checks to add things to your prompt so right here it's checking for uncommitted changes in the index uh check for unstaged files and things like that so if we go down here past the git stuff uh now we'll start seeing some stuff that should look a little bit more familiar to us um so here we can see uh the tput commands and we saw some of these in our previous videos uh so here we have the reset values uh here are the bold and also we have some other useful colors now in addition to the tput colors uh it looks like he's also running a check here which has some fallbacks if tuut is not available so that's nice to have and it's set up in a way to where these variable names are the same so you have orange equal to the tput here and also orange equal to the fallback so then you can just use that orange variable anywhere in your script and you don't have to worry about whether or not it was set using the tput or the fallback so let's keep going and see what else we have here um so here are a couple of useful conditionals um right here so in this first conditional here he's checking if the user is equal to the root user and if so then we're going to set the user style color to red and if not then we're going to set it equal to Orange and this next conditional here is checking whether we are currently using SSH and if so then we're setting the host name to a bold red and if not then it's going to be set to Yellow so it gives us some nice visual feedback as to whether we're logged in uh to a different machine or logged in as the root user and now down here towards the bottom uh we're finally seeing where we're actually setting the PS1 variable and this should look familiar because it's similar to how we customize our terminal towards the end of the previous video but there is a little extra functionality here than what we had uh so first of all uh this top line here he has commented that it sets the terminal title to the current working directory so that's pretty interesting so then we can just walk down and see how this gets built up uh so then we are applying bold and then we have the user style and then the username and then down here we have the host and then the working directory and now this next line here is pretty interesting so this is where we're using the prompt git function that we saw at the top of this file and it's adding the desired colors if if we're within a g repository okay so those are all of the prompt customizations uh before we apply these customizations to our own terminal uh let's quickly take a look at some of these other files that we have in the repository uh So within this alias' file here you can see some of the shortcuts that he's added for himself uh So within his terminal he can just type dot dot and it will take him up a directory and typing three dots will take him up two directories and so on so some of these other ones would be pretty useful also so uh right here we can see that he is detecting which uh LS flavor is in use and depending on that it will uh set certain colors accordingly so i' go ahead and look through these files on your own and see if there's uh anything that um these people might use that you could also like to use for yourself now another file that I wanted us to take a look at is this OSX file um so this is pretty interesting here so uh here he has his file set up in a way that it will set all of his Mac settings exactly how he likes them so that's what's so powerful about these dot files um so say for example if he was to have his computer stolen or if he had his hard drive crash or something like that then what he could do is he could download his repository onto a brand new computer and then run these files and just have thousands of settings changed exactly how he wants them in a matter of minutes so I would look through files like that also and see if there's anything in there that interests you so there's a lot of uh cool Snippets to choose from and all of them seem to have uh good comments saying saying exactly what they do okay and one more file here before we apply our changes to our prompt uh so I also wanted to show you this brew. sh file that he has here so this is a bash script that he can run to install command line tools that he finds useful uh so for example he can install core utils which will install G core utilities um this uh Brew install bash right here will install bash 4 and that may not come with your computer by default so all kinds of useful stuff okay so now that we've looked at some of those other files that come with repositories like this uh let's go ahead and get back to actually customizing our prompt so when you download these repositories um you can just pick and choose what you want from these files uh that you want to use for yourself so specifically we're going to be grabbing these files that are needed in order to customize our terminal prompt so also first of all before you do this uh if you currently have dot files that you're using for yourself like The Bash RC files or bashore profiles uh then you'll want to move those to another location or be sure to back them up so that they're safe so that if you don't like any of the changes that you've made for any reason then you can just restore those back so with that said I'm going to go ahead and just start grabbing a few files from his repository here so I'm going to go ahead and do a CP to copy and that uh repository is located in my downloads folder and files master and what I want to grab out of here is I want to grab the bashrc file and I'm going to put all of these in my home directory so I'm going to go ahead and grab that bash RC file I'm going to grab the bashore profile and I'm also going to grab the bashore prompt so now I'm going to go ahead and close down the files uh from his repository and I'm going to go ahead and open up the ones that are on uh within my home directory so the one specifically I'm going to open up the bashore profile and I'm also going to open up the bashore prompt file and again I'm going to go ahead and set this to the bash syntax okay so if I go over here to this bashore profile uh then remember we have these checks in place so that it only tries to Source these files if they exist so it's not a big deal that we only grabbed the bash prompt file because these other files just won't meet these conditionals and it won't try to do anything with them and I'm going to go ahead and leave these other customizations in this file uh but you can read through these comments and if there's anything that you don't like then you can just go ahead and delete that section from the file okay so this bashore profile does Source our bashore prompt uh so now that we have these files in place if I go back here to my terminal and I quit out and open it back up then these changes should take place okay so now you can see that our prompt is customized uh I'm going to go ahead and minimize a couple of things here to get a few things out of the way now this looks similar to uh how we had it customized in one of our previous videos uh but this is a little bit more powerful than the ones that we made before uh so for example if you remember we had that code in our bashore prompt. file uh that should display Branch information if we're currently in a git repository uh so let me go ahead and navigate to an old get repository that I used in a previous project so I think that was in projects and demos get done and that was stash demo and you can see here that we're now currently in a get repository and you can see here where it says that we're on the master Branch um so also let's go ahead and open up the if I do an LS in this directory I have this one file in this get repository so let me make a change that file really quick and I'll just make something really simple here return a * B and save that so now if I go back and clear my prompt out now you can see here in my prompt that it put an exclamation point here uh to show that we have uncommitted changes in our Branch so this visual feedback is a great thing to have in your prompt so just knowing what branch we're on at a glance without needing to type it in over and over that's a huge plus so really if you were happy with a customized prompt like this then you could just stop there uh but really quick let's take a quick look at how we can customize some of these values uh just slightly and that should kind of get you on your way to being able to customize your own prompt in any way that you want so I'm going to go ahead and just let this take up half the screen here and I'll go into my bash prompt here and go down to the uh PS1 values okay so let me just make a couple of changes here uh so first of all the yellow value that I usually use uh is a little different I like to use the value uh 228 for the green value I like to use a green value of 71 and for the blue I like to use 153 and I'll post a link to this color chart for these values in the description below uh so that you can see where I'm getting these values from and now if I scroll down to the PS1 values here I mostly like how this prompts already set up but for the sake of showing how we can change it let's just make a few adjustments here so let's say that instead of wanting this at here um let's just take this out with these spaces and let's just put in an actual at symbol and also I really don't like this lowercase w for the directory uh so if we look in the terminal then you can see what this lowercase w does is it tells our prompt to show the full path to where we currently are but whenever you get deep down into a directory structure uh you can see how this becomes really long and right now when this is just taken up half the screen it's causing our prompt to wrap around so instead I'm going to change this lowercase w to an uppercase W and what that's going to do is it's only going to display uh the last part of this path instead of the entire thing and lastly here just one last change uh for this get prompt uh instead of this Violet and blue I'm just going to do a blue and a blue and I'll save that so now if I go back here to my terminal uh to apply these changes I can just run Source on my bash prompt file so I can do a source and that's within the home directory and this is bashore prompt okay so now if we run that then all of the colors should be updated and we also have this shorter directory path now so that's looking good and if there are are any additional changes that you want to make to customize your prompt then hopefully after a few of these videos then you'll feel comfortable just kind of hopping in here and editing some of these values to whatever it is that you want them to be okay so I think that's going to do it for this video I hope everyone found this walkth through useful a lot of people have been asking me to make a video on how I customize my command prompt and I could have uh probably made a very short video specifically on just that uh but I think these dot files are so useful that I really wanted to show a bigger picture of what all can be done with them so if you have the time go and give some of those other repositories a look and see what all they have to offer there's a lot of uh great aliases and and functions and tips that people put in there and it's all very well commented and documented and it's also a great way to learn a lot more about these types of files but if anyone does have any questions uh you know feel free to ask in the comment section below uh be sure to subscribe for future videos and thank you all for watching