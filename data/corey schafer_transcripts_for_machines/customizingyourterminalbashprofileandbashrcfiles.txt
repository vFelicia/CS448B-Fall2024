hey everybody how's it going I've been getting a lot of questions from people lately asking me how I customized my terminal and if I would do a video showing how to set it up so in the next few videos I'm going to show you how you can customize your own terminal now there's a lot of different customizations that you can make which will help you be more productive and also it's just nice to set up an environment that is unique and also pleasant to work with on a daily basis so some of the customizations that you can make you can simply just change the colors like I've done here you can add aliases which will allow you to have shortcuts for certain commands you can add a get prompt which will if you're inside a git repository it'll show you what get branch you're on you can also add get Auto completion and you can also export certain variables like if you need to change your path variable you can do that as well so all kinds of stuff so in this video to get started out we're going to be taking a look at the files that we need to edit that will allow us to customize our terminal so first of all why do we need to edit files you may have seen people customize their terminal just by typing directly into it so for example I could customize my prompt in the terminal by typing something like PS 1 equals and I'll just do a custom with an arrow and a space here and if I run that you can see that this did customize my prompt so I have a custom prompt here now that I just changed from within the terminal but the problem is that this is only temporary so if I quit out of the terminal and open this back up now you can see that it's back to the way that it was so we need to add these customizations to specific files so that they are applied every time we run the terminal so the files we're going to edit are the dot ashe underscore profile and the dot bash RC files located in our home directory and these are dot files so if I do an LS on my home directory then I need to put in this a tag here so that it shows all of the dot files and if I scroll up here to my dot files you can see that I have a dot bash underscore profile and also have a dot bash our see now if you don't see these files and that's okay you can just create them if they don't already exist so I'm going to go ahead and get rid of the customizations that I've made to my terminal and the way that I'm going to do that is that I'm just going to move those Bosch files into a temporary folder for now so I'm going to move my Bosch underscore profile into dot files so I will move that there and I'll also do that with the Ashe RC file to that dot files is just a temporary directory that I made so that could stash these away somewhere for now so now if I quit terminal and I open it back up then my customizations should be gone so you can see here all the colors that I had previously aren't here anymore and if I was to go into a git repository or something like that then it wouldn't show me my git branch or apply any of the other customizations that I've made so now that I have my new terminal window open up here I'm going to recreate my Ashe underscore profile and my bash RC file now I'm not going to go into too much detail about why we need these two files instead of just one but long story short the bash underscore profile is a file that is used for something called a login shell and the bash RC file is used for non login shells so I'm not going to go into the exact differences in this video but let me go ahead and just recreate these and we can kind of take a look at what I mean by that so I'm going to go ahead and create that bash underscore profile and then I'll also create a bash RC file so now I'm going to open up each one of these and sublime text and add an echo statement so that you can see when each one is executed so now I'm within my bash underscore profile and what I'm going to do is I'm just going to put in an echo statement and I'm going to echo out from bash underscore profile and I'll go ahead and save that now if I go back to my terminal here I'm also going to open up my bash RC file within sublime and in this case I'm just going to do an echo and I'm going to do from bash RC and save that so now let me go ahead and quit out of terminal and open it back up and see which one of these files gets executed so if I open terminal back up you can see that it ran our code from bash underscore profile but not from the batch RC file and that's because this is a login shell on the Mac and it is run every time we open up a new terminal now I don't think that's exactly the case on Linux but I'm not 100% sure about that so these login shells are also run anytime you SSH into a machine and things like that now the bash RC file is run when we start a non login or a sub shell so if I just type in bash here then what it's going to do is it's going to start a sub shell and you can see as soon as I start that sub shell it runs the echo statement that we put into our bash RC file hear this from bash RC now this is different for some people but I personally like my customizations to be the same whether I am in a login shell or a non login shell so there's a simple trick that we can do which will allow us to modify just a single file and it will be applied to all of our shells so to do this I'm going to open up my bash underscore profile again in sublime text and all I'm going to do is call my bash RC file from within this file so to do this we're just going to type in this command and you can find this online and copy and paste it if you want but I can type if bracket F dash F and then I'm going to say within my home directory here dot bash RC and then close that bracket off then and source dot H RC and then to close out that if statement we can just type in Fi okay so basically what this code is saying it's saying that if the bash RC file exists then execute the code in that file so now imagine what's going on here so as soon as we open up a login shell and it runs the code that's it within our bash underscore profile it's going to run this code which in turn runs the bash RC file and if you run a sub shell then it's also going to run the bash RC file so now we can add all of our customers a to our bash RC file and not really have to worry about our bash underscore profile anymore so they actually see this at work I can go back over here to my terminal and if I quit out of the terminal and I'll close that and if I reopen it you can see here now that it's echoing the statement from our bash RC file which is what we wanted and if I was to run a sub shell here with bash then you can see again that it ran the code from the bash RC file so now we can add all of our customizations to a single place so if I was to open up the bash RC file in sublime text and I was to do something instead like I did earlier of PS 1 equals and then I'll just do the same thing custom arrow with the space and if I save that and then open back up my terminal again I'll close out of that and open it up now you can see I have a custom prompt here and if I run a sub shell then I still have that custom prompt so I think that's going to do it for this video now we have our files set up in such a way that we can add all of our customizations to one file and in the following videos I'll show you more specifically exactly how I customized my own terminal and it can give you some ideas of how you want to customize yours as well so I hope this video was useful I hope it helps you somewhat understand the difference between the bash underscore profile and the bash RC files but if you do have any questions just ask in the comment section below be sure to subscribe for future videos and thank you all for watching