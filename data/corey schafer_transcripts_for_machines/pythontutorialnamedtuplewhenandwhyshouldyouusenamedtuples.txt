hey how's it going everybody in this python video we're going to be taking a look at named tupal and what named tupal are and why we would use them um so you can think of a name Tuple kind of like a lightweight object that uh works just like a regular Tuple but it's more readable um so what do I mean by this so say that we want to represent uh RGB color values red green blue color values in code and say that we choose a tupal to do this so here is a regular tupal so we have color equal to and this will be our red uh 55 will be our red 155 will be our green 255 will be our blue so let's say that we wanted to print out the red value so in order to print out that red value we would just do print color and then we would do index of zero and if we run that code then you can see that we got 55 for the red value now what's going to happen here is that someone else is going to come and look at this code or even you could come and look at this code weeks and months later and they're going to read this and they're not going to know what's going on we have color equal to these numbers and then we're printing out uh the index of zero you know what are these numbers somebody could look at this and think you know is this H saturation and light or I don't know what's going on here so it would be really nice if this was more readable now the first idea that might pop into your head is to use a dictionary um so let's see what that would look like so let's grab a dictionary representation of this and let's paste this in here now instead of printing out this index of zero down here uh let's print out red and let's save that and if we run it you can see that we got the same thing it's 55 so what is wrong with this why wouldn't we choose to use a dictionary uh well first of all maybe we chose to use a tupal for a reason um so T pools are immutable um which means that you can't change the values maybe that's something that we wanted um and also dictionaries uh require a little bit more typing here so if we made more than one color we'd have to come in and type all this out every time we created a new color so a named tupal is kind of a good compromise between the tupal in the dictionary uh between readability and also it gives you the functionality of a tupal so let's go ahead and see what this would look like um so let me copy the example I have here and paste this in and let's go ahead and go over this and for now I'm going to go ahead and take out these values here okay so first of all to use the name Tuple uh first we have to import it so from collections import name Tuple and then this line here is the syntax that we use for name tupal so we'll do that we want a color equal to name Tuple and then the name of our name tupal and we'll do this as color I have all this typed out up top but I just want you to see uh if you are making one your yourself the steps here so the name tupal is named color and then these are going to be the values of the tupal so the values that we want for our tupal are red green and blue so that's what the syntax looks like to create a name Tuple now let's take a look at the advantages over a regular tupal here now if you remember when we created a regular tupal uh we just did the values like this and it wasn't very readable and now we are saying that we want this variable color equal to color which is what we called our name Tuple here and right now we have 55 155 255 and that is red green and blue now I can still use this just like a regular tupo if I wanted to come in here and I wanted to do the in print the index of zero which would be our red value then I can print that and it prints out 55 but um I can also come in here and print these out by name so I can say color. red and print that out and you can see that it's 55 now you can see this is already a lot more readable than our regular tupal because whenever we come in here or somebody else comes in and looks at our code they're going to see okay they're printing out color. red so and then they're going to look up here and say okay this is a color uh with three values here and they can make a guess as to what that is now if you want to be really explicit you can actually come in here and uh add all these values in so that whenever you come back uh you know EX actly what those values are but even without those there um somebody's going to be able to come in and see okay uh you created this from uh this color here and then they can look back at the name tupal where you made that definition and they can see that it's red green and blue uh with the regular tupal you didn't have that that was that information was nowhere to be found and now if you remember also it's this is a lot less typing as well if you remember our dictionary here every time if we were to make a new color or something like that and I'll just call this something else so it doesn't collide with our other one so with our dictionary this uh we had all this typing to do uh but if I wanted to make another color from a name tupal then I don't have to type out all this stuff I can just do okay I want a color and white would be 255 255 255 and that's done and then later in the code if I wanted to print out um say the blue value of white then I would just do white. blue and you can see that that is 255 and uh that's also a little bit easier to write than the dictionary if you remember the dictionary we can't do this do syntax we'll get an error uh we have to put that in Brackets which isn't a big deal but it's a lot more typing it's a uh lot easier just to come in here and use the do syntax so hopefully that kind of clears up what a name tupal is and why exactly you would use one and also hope you can see how this is a lot more readable than what a regular tupal might be so whenever um someone else read your code or whenever you come back to your code in a couple of weeks or months uh then you're going to be able to take a look at this and see almost instantane instantaneously what's going on and with the regular Tuple example that we used um that would have been really hard so yeah I hope that cleared any uh questions that you had about name tupes um if you do have any questions then just ask in the comment section below um be sure to subscribe for future python videos and thank you guys for watching