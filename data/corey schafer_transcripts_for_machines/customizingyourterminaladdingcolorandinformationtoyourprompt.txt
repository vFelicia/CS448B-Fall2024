hey everybody how's it going in this video we're going to be customizing our terminal and changing the colors of our prompt now to do this we're going to be modifying our bash RC file here if you haven't watched my previous video explaining the difference between the bash underscore profile and the bash RC files and where they belong and you should go ahead and check that video first but with that said let's go ahead and get started so right now I currently have my terminal open which is an uncommon Allah scratch and I also have my bash RC file opened up in sublime text here now in order to customize my prompt I'm going to edit the PS 1 variable and we saw this a little bit in the last video so first let's just do something extremely simple here so I'm going to do PS 1 equals and I'm just going to do an arrow and then cut that off and save it and right under here I'm also going to export this PS 1 variable and close that off and save it and also notice that I put a space here after this arrow and that's just to give us some space so that our text isn't bumping right up against that so now back here in our terminal we could either quit out of terminal and open it back up and see those changes or we can do something called source and then we'll just source that bash RC file and what that's going to do is it's going to go in and rerun the bash RC file and it should pull in all those changes so now you can see when I source that file that I now have this new prompt here which is what we set the ps1 variable to so that's a good start we could come in here and we could you know add in some static text whatever we wanted it to be and any time we save it and then resource that file now you can see that we have our static prompt here but most likely we're not going to want our prompt to be static we're not just going to want to have the same text all the time it would be nice to have some dynamic information in there like like who were logged in as what machine we're on or what directory we're currently in so in order to add information like this to your prompt you can use special escaped characters that represent this information so for example one of these special characters is the backslash u so I'm going to leave the arrow in there and just do a back slash you before that arrow and now if I save that and source the bash RC file again now you can see here that my username is before the arrow so now we have some dynamic information that we're using as our prompt so the backslash u represents the username of the current user but there's also some other special characters that we can use here as well and I have a couple of them written down so backslash H is the host name up to the first dot the backslash n is a newline backslash s is the name of the shell backslash T is the current time there's the backslash you that we've already seen the backslash lowercase W is the current working directory and the backslash uppercase W is the base name of the current working directory so let's say that you wanted to customize your prompt to look something like this maybe you want to do the user name and at the host name and then a space and then the directory and then we want our arrow in for the prompt so I'm just going to push this over here to the side and let's go ahead and change this ps1 variable to match what we want here so backslash you will be the user name and now we want an @ sign so we'll just type that in and now we want the host name so we can do a backslash H and now we want a space and then the directory now for the directory we have two choices here we can do a lowercase W which will print out the full path or the uppercase W which will only print out the base name of the working directory that you're in so if you're in your home directory slash desktop it's only going to print out desktop and that's usually the one that I like because it takes up less space so I'm going to go ahead and put in a capital W there and then let's put in a space there and save that and now let's go back to our terminal and source this file and see those changes so now you can see that our custom prompt has our username at and then the name of the computer that were logged into and then a space and then the base name of our directory and we're in our home directory now so files to CD to the desktop and now you can see that it has the best stop there and now I'm just going to go ahead and CD back into my home directory okay so now this is looking pretty good we've customized it in a way that we want but it's still pretty boring it would be nice to add some color in there so let's go back to our bash RC file now there's a couple of different ways in which we can add color and we'll look at a few of those options in a later video but right now we're going to only use a command called T put now I'm not going to go too much into the syntax that bash uses here we could do a whole series on videos on bash scripting but for this walkthrough I'm just going to show you what we need to do in order to get our colors working within the prompt so in bash we can do something called command substitution with a dollar sign and parentheses here and if we put a command inside of these parentheses then what that's going to do is it's going to give us the result of that command and replace the dollar sign and parenthesis with the result of that command so it may make more sense to see an example here so if I go back to my terminal and I type in echo and then I echo out your current directory is and then I do the dollar sign parentheses now for the command I'm just going to type in PWD here for a print working directory command now if I run this you can see that what it echoed out was your current directory is and then printed out the result of the PWD command so that's what this command substitution does it takes a command and it replaces all of this with the result of that command so what the T put command does is it can change the foreground text color so we can use that same technique and if we put that command before some text then it will apply color to that text so for example if I was to do echo and then I was to do our command substitution here and I was to do T put and then set AF which sets the foreground color and then I'm just going to do a color value of one six six and then outside of that command substitution I'm just going to put in some text this is orange so if I run this command then it should echo out this is orange and apply orange text to it now if you're wondering where I got the number 166 for that color of orange you can do a Google search for a 256 color chart and get results so for example if I pull up the Chrome page that I have opened up here so I did a Google search for a 256 color chart and this is the Wikipedia page for that now if we go down here to 166 then you can see that it matches that orange that I just printed out so if you do use the T put command then you can choose the colors that you want to use from one of these charts here okay so that is an example with the echo but what if I applied this to my prompt so I'm going to go ahead and copy this T put command that I just used and I'm going to put this same command right before the backslash you on our ps1 variable so I'm going to put that in there and save that and I'll get rid of this text down here and now I'm going to go back to my terminal here and do a source on the bash RC file okay so you can see that it worked and it applied it in orange color to the entire prompt but it also did something a little unexpected so if we type in a command you can see that everything is orange so all of the commands and the output that's because we never explicitly said where we wanted the orange color to stop so to do this we're going to need to run another t put command that will reset our styles and the command that we can use to do that let's see we can do actually I'm just going to copy this T put command here and paste it in down here now to do this it is T put and then for the command we can do SGR 0 so that will reset our formatting and what we want to do is we want to add this where we want the orange to stop so say that I want the orange to stop at the end of the prompt then I'll just go ahead and paste that in there and if I save that with the reset at the end now if I come over here and I source the bash file again now if I type in commands then my commands and the output should be the default color and the prompt is still the color that we just now gave it okay so this is good so far but let's add a couple more colors in into the prompt here so let's say that I want to make this host yellow and the current directory green so what I'm going to do here is I'm going to go ahead and make this a little bit bigger here so that I can fit in some more values now to make these different colors I'm just going to copy this T put command here so we just want to put the color before what we want to be that color so I have this t put command here and it's going to be orange until we either reset it or change it so right after the username I'm going to paste in another t put command and I want this one to be yellow and I looked up all these colors beforehand so the yellow that I want is going to be 2 2 8 now I'm going to paste another one before the directory here and I want this one to be green and the green value that I'm going to use is 71 and now I also want to leave this reset value in here so that the green doesn't leak over into our commands and our output so I'm going to go ahead and save that and open back up the terminal here and run a source on that bash RC file and let me go ahead and clear the screen so we can see a little bit better and now you can see here that our terminal prompt is exactly how we wanted to look we have our user name is orange our computer that our host name that we're on is yellow and then our directory is green so fast the CD and the desktop and you'll be able to see that a little bit better so this is starting to look good and it's starting to look how we want it to be customized but you can see here that our ps1 command it's starting to get long and hard to read and also hard to maintain so really a technique that some people use is to break this up so if you do a PS one equals and then whatever it equals here you can also do a PS one plus equals and it will keep on appending to that variable so really what I can do is I can do one of these values at a time and just do them line by line so if I want my username information here now I'm going to go ahead and grab the host information here and cut that out and paste it in down here and I'm going to put in the semicolon and now I'm going to create a another line here and in that off with the semicolon and now I'm going to go ahead and grab this next command which is our current directory and the arrow so let me cut that out of there and paste it in and now lastly I'm going to do one more line of this ps1 variable and in that out with the semicolon and I'm just going to grab this reset command here and cut that out and then place it in here and you can see how now this is a little bit more manageable in what's going on and you can also leave yourself comments here so if I was to leave a comment where I could say orange user and then another comment down here that is yellow host and you get the idea so you can just kind of comment it and so that you can keep traffic track of exactly what's going on so now just to make sure that that worked I went ahead and saved it and let's go ahead and resource our a char C file and let me clear this out so that we can see a little bit better and also I'm going to CD back to our home directory so now I'm going to try to source that bash RC file okay so you see that we kind of ran into an issue here where it's the cursor position is acting up now the reason for that is that we need to wrap our commands with the special escape characters so that the so that bash knows how to properly handle the cursor and these look like this right here so we have a backslash and then a bracket and then after our command we're going to have the backslash and an end bracket so I'm going to copy this here and before every T put command I'm going to paste that in and then I'm going to go ahead and grab this ending one here and copy that and then after every T put command I'm going to paste that in then I'm going to go ahead and delete this here and save it no no right now this might seem like a lot to remember but just stick with me we're going to be learning about a few things that makes all this stuff a lot easier to work with okay so now if I open back up my terminal and I run that source command with the that was kind of the weird cursor position there but now with those escape characters in if I was to retype that out then I shouldn't have those issues anymore so you can see that now it's working like it should be so to finish up here the way that my prompt is usually set up and the way that you've probably seen it look at other videos is very similar to this here so let me go ahead and grab some code that will make it look exactly like it does in my other videos so I'm going to grab this information here and copy that and I'll go ahead and minimize that and I'm just going to paste this into our bash RC file so let me kind of explain what's going on here and again I apologize for not going to in depth on the syntax here but for the sake of time I just want to show you how mine is set up and we'll look a little further into the syntax in a future video so first of all here with the ps1 variable you can see that now we have this new thing where we're putting in these words instead of T put so what that's doing so instead of putting the t put statement every time you want to use a specific color or the reset you can instead specify a variable that's easier to remember so for example here I can do orange equal to that t put command yellow equal to this one now this is one that we haven't seen yet this bold here we can do a t put bold and then also we have our reset command and then when we want to use one of these values what we can do is when we do our ps1 equalto and then there's those escape characters that were you're talking about the backslash bracket and then we have the closing bracket here and now instead of a command substitution we're substituting in these variables so instead of a parenthesis that is now embrace so what I'm doing here is I'm saying that I want everything beyond this to be bold and I'm going to start off with a new line here and then on the new line adding to our PS one command per variable still I'm saying that I want this to be orange with the backslash username and then on the next line I'm saying that I want to say space at and I want that to be white and then yellow with the host and then another white with an in statement there and then the green working directory and then finally a new line at the end and then a dollar sign that is white and then I do a reset on all of the formatting so I know that looks like a lot but let me save that and then go back to the terminal here and now if I source that file again then this probably looks a little familiar if you've seen any of my other videos this is how I have my prompt set up so if all that you want to do is customize your prompt with the wording and the colors then you can go ahead and play around with commands like this and setting the PSone and exporting the ps1 variable but there's really a whole lot more that you can do with your customizations so that's going to go ahead and do it for this video but I want to do some future videos on something called dot files now that files are basically the files that we've already been looking at so the dot Asch underscore profile and the dot a char C file now there's several other files just like that that we haven't quite gone over yet but now that we've seen some of the basic commands that we can use within these dot files so for example what we've done to the a char C file over here now that we've seen some of the things that we can do within these files in the next video we'll download some of the dot files that other people have put up on github and look at some of the functionality that other people have managed to squeeze into their dot files and it can be extremely powerful the way that they've done this so be sure to check out that video and we'll take a look at some of those files that are popular online and we'll see how we can set up a get prompt and get Auto completion and color codes for fallback values like if if we don't have these t put values available then we can use different values and really all kinds of stuff so we'll just download some of those files and look through them and see exactly what's going on but hopefully in this video we gave everyone a basic understanding of how we can modify the Bosch RC file to customize our terminal but if you do have any questions specifically with this video just ask in the comment section below be sure to subscribe for future videos and thank you all for watching