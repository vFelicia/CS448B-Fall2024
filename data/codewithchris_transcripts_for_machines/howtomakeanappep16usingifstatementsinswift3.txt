hey everyone welcome to Lesson 16 of how to make iPhone apps with no programming experience in this lesson you're going to learn about the if statement which allows us to express some logic in our code so let's get started with that in a playground so I can show you how it works before we implement it into our actual xcode project call this the if playground just going to save it on my desktop here all right let's start by declaring two uh two variables here V AAL 10 and VAR b equal 5 an if statement will allow us to compare the two numbers and to do something so we start off by using IF for if and then we can put some sort of condition okay so let me put the condition is a is L than b and now we open up a curly bracket like that and pressing enter and xcode after you open a curly bracket will usually uh xcode will automatically fill this ending bracket in for you so this code reads if a is less than b then do whatever code in here if this is not true let's say that a well it is not true right now now a is 10 and B is 5 so a definitely is not less than b then it's just going to skip over whatever you put into these curly brackets so that lets you execute some block of code on a certain condition now we can specify the other Branch so if this is true then do this block of code else do another block of code so your code can now take two directions based on this condition so if it's true it's going to do this block of code or if it's false it's going to do this block of code so it's either going to do this block of code or that block of code it's not going to do both okay so it's going to take either one branch this Branch right here or this Branch right there another cool thing about the if statement is that you can test for multiple conditions so so here I'm testing for a is less than b then this will happen if a is greater than b then this will happen but what if a equals B well I can test for that by in between the if and the else I can start another Branch so I would say else if a equals b equals equals actually then I can open up another branch of code so let me first explain this equals equals sign this is comparing if a is the same as b or a is equal to B do not use a single equal sign because we use single equal signs to assign values into things so as you can see up here with these two variables uh in order to compare we use the double equal sign like that so what happen happens here first xcode checks this condition and if it's true then it executes this block of code and it skips everything else um if this is false then it's going to check the next line or the next condition and it's going to check this and if this is true it's going to execute this block of code and Skip everything below it and then finally else is kind of like the catch all or the fall back and if none of the conditions above it are true then it's going to execute this block of code code okay so this is kind of this uh sort of structure that we're going to follow in our war card game project we're going to compare the two card numbers uh and then there's a situation where they might be equal and then this last case is for if um the other number is greater and this is the other number is less than before we move on let me show you a couple of other operators and a couple of other cool things with if statements for example we can do less than or equal to or you can do greater than or equal to you can also chain these statements together so you might want to test for something like this if a is greater than b let's say we had another variable here and let's just call it one so if a is greater than b and you wanted another condition you can can do something like this so this end statement means that this condition has to be true and this condition has to be true in order to satisfy the whole condition okay so if both of these conditions are true only then will it come into this branch of code if either one of these are false then it's going to not satisfy this condition and it's going to go go down and and check the next if statement aside from and you can do double Ampersand sign you can do or so doing this we'll check if either this is true or this is true that will be enough to satisfy uh this condition and it'll come into here this block of code and it'll skip everything else so the or statement gives a little more flexibility you're testing either if this is true or if this is true and if any of them is true then that's fine right but the end is more strict and you need both of those conditions to be true in order to satisfy this branch of code okay so keep that in mind because we'll probably be using that in a future app now let's jump into our xcode project our war card game and let's Implement that okay so here we are we are looking at viewcontroller.swift I'm going to come down here when the deal button is tapped we are going to do a couple of things here um compare the card numbers so start an if statement if uh left number is greater than right number right right left card wins we have else if left number double equal sign right number then it's a tie and then finally else and in this case the right card wins all right so now we've set up our if statement so that we can consider each of these cases and do something in response to these different situations in the next lesson we're going to finish this off by updating the labels in our storyboard thanks for watching guys and I'll see you guys in the next lesson bye for now