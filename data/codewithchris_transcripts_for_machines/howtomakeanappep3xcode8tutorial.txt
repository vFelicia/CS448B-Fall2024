hello welcome to lesson three of how to make iphone apps with no programming experience in this lesson I'm going to give you a walkthrough of the Xcode 8 application and this is going to be very useful for you because we're going to be spending a lot of time in Xcode building our applications now again I'm using Xcode 8 beta but by the time this video comes out or shortly after Xcode 8 will officially be available in the Mac App Store in the previous lesson we had used a playground to dabble in some Swift code well this time we're going to create a brand new Xcode project this one right here if you don't have this welcome screen you can always go up to file new and project like that and it's going to ask you what type of project you want to create you can see here that you can create a game master detail application page based application and so on but we're going to start with a single view application and this is going to be your basic application with just a single screen that doesn't mean that you can create any of these other types of apps but if you work to create an app that was more suited for this type of structure it just gets you started in the right place but even if you start with a single view application you can still get to these places and for the purposes of this walkthrough I'll be using a single view application make sure that you're under iOS though because there's other types of applications you can build with Xcode so under iOS single view application and here it's just a single view this may be a Xcode 8 bug but it should say single view application so for my product name I'm just going to call it it doesn't matter what we call it actually at this point I'm going to call it Xcode tour and you may not have a team under this dropdown don't worry about that organization name you can just put your name unless you have a company you can put that and the identifier usually is comm dot followed by your organization name and it's going to automatically upend your product name to it to create a unique identifier for this application now this part is very important make sure under language you choose swift we do not want to work with Objective C at least not in this video so we're working with Swift device you can leave as iPhone here and all of these I've left unchecked so uncheck them if they are checked click Next and we're going to I'm going to save it on the desktop but you can save it wherever you see fit and under source control here I have this unchecked okay we can go through that in the future but for now let's create our project so right now we have a brand new basic app project and with this I'm going to show you the main areas of Xcode now right off the bat you're going to notice that Xcode is separated into four major regions first of all you have this tab bar at the top and kind of similarly to the playground that we used in the last lesson there's a little status indicator here telling you what the project or what Xcode is doing currently right now it's at the ready it's not processing or loading anything you've got this play button icon similarly to what you saw in the playground and when you press this it's going to run your project in the Xcode simulator we're going to see in a quick second and then here you can actually choose different types of simulators we're going to do that in a quick second but before we do that let me show you the other three major regions on the leftmost side you have your file Navigator and here you can browse through the different files of your project you can see here we've got a couple of them take note that this actually these are tabs they just look like icons but you can actually click these in their different tabs by far we'll be using this file navigator tab the most now the middle region is your largest region because that's where you're going to be doing most of your editing whether that's code or the user interface or project settings and this is called the code editor area and this area changes depending on which file you have selected right here we have Xcode our root node selected and right here we see our project properties so we can modify some attributes of our project but if you select the code file so let's say I select view control a lot swift you can see that this code editor region changes to as you would expect a place for you to edit code now if I select may not storyboard this middle region changes to what is called interface builder and it's going to allow us to visually design our our app in our view moving on we've got assets dot exe assets and here you don't see much right now but this is actually the asset library for your app and here you're going to add all of the graphics for your app and you're going to be able to give them metadata such as modify the names and the sizes and stuff like that so that you can use them in your project so quickly going through the last two files launch screen dot storyboard is another interface builder file that lets you modify the launch screen for your app and info.plist is another sort of configuration file for your app and this is another view where you can add new key value pairs or simply attributes to configure your app or you can modify the existing ones don't worry about this too much right now I know it might look confusing we won't spend very much time in this file at all so I want to go back to the storyboard or interface builder because I want to show you on this righthand pane what this is all about so you know how I said this middle region changes depending on what you select from the file navigator well this rightmost pane changes as well depending on what you select in this middle region this pane is actually separated into two panes the top half actually it's not half it's about 75% because it comes from here all the way down to this part it's called the attributes inspector and it also has a couple of tabs as you can see here so what happens is when you're building your layout visually let's say I've got a button and I want to modify well if I highlight and select the button in this visual interface builder this attributes inspector is going to show me the attributes for that button and I'm going to be able to modify the properties for that button to configure things like size color text stuff like that and down here on the bottom right half of the screen I've also got a couple of tabs this is called the library pane and most of the time we're going to be working with these library objects here on this tab take note that there are two types of views that you can have for a library pane you can click this button to go to this sort of view but I find that this ListView is a lot more helpful because it has the name of the element so if you're not used to what the icons represent yet you should stick with this ListView so let's do a quick demonstration down here there's a filter box I can type in button I'm going to click and drag this button from the library pane onto my interface builder storyboard view so I am going to do that you see the button there in my view if I tap on that button you can see here on the upper right hand side that it shows me the attributes for that button and I can change stuff like the text for it I can call it my button and I can change things like the type of font it uses the font size the color and so on so one thing that you might run into if you have a small screen size let's say you're working on your laptop and you don't need all of these panes at once you can use these buttons up here to hide and show different panes so you can see that I can click this button hides in shows the utilities pane that's the name for this whole thing I can press this one and it will hide the file navigator pane and there's an a fourth area that we haven't seen yet and that's this button here that brings up this bottom pane it's kind of like the in our playground in the last lesson where we saw the output well when we're building our app if there are any problems when running our app chances are there's going to be some error messages that show up here and similarly we can write code to output or print as you saw in the previous lesson to print out different variables or print out different statuses that would give us an indication of how the project is running this is helpful when there's a bug in our app or a problem and we're trying to track down exactly where it's happening so this is called the debug area here and in the future you're going to learn how to use this to solve crashes and errors in your own project now there are a couple more things with interface builder that I can show you guys but I'm going to save that for a future lesson when we actually start working with interface builder right now I want to show you guys the iPhone simulator so let me go ahead and go up to here it's selected iPhone se by default that is fine I'm going to click this Run button and it's going to build our project it's going to compile all the code and it's going to launch this simulator this iPhone simulator and our app as it is now is going to show up inside here now by far the question I get most is how do I change the size of the simulator because sometimes although on the screen you see that this is a fair size but if you're working on a laptop screen sometimes this simulator can be pretty huge and take up the entire screen you can go up here under the simulator menu to window and go under scale and then you can choose one of these options or you can see the hotkeys for this is command v command for command 3 which is the current setting command 2 and command 1 so let's try that out on our keyboard so this is command 5 you can see that it's really small and this is command 1 where you can see it's so large that I need to scroll so a set a command 3 you can choose one that's comfortable for your screen size so there's your tour of Xcode it may look overwhelming but you know what as we start building apps together you're going to get more and more familiarized with Xcode and it's going to become second nature it's going to become really familiar to you so if you haven't downloaded Xcode already I would highly recommend that you do so now if you're serious about building and try it out try out a new project and just jump through the different paints like I did in this lesson you're going to need Xcode soon anyways if you want to follow along again thanks for watching and I'll see you guys in the next lesson bye for now