hi and welcome to my Swift tutorial for beginners in this video we're going to go through another collection type called the dictionary now these are really common especially when you're working with data from a remote database or from a third party API all right stay tuned I'm looking at the Swift documentation here and they give a really good example about the dictionary collection type and before we go into the actual example let's take a look at the differences between dictionaries and race which we went over in the previous lesson and talk a little bit about what makes them different and when you would use one over the other so in the previous lesson when we talked about arrays I said that it's kind of essentially a list of your data with order 0 all the way down sequentially now order matters write that data at index 0 is different from the data at index 1 2 or 3 the dictionary on the other hand is unsorted there is no order now how do you put data into a dictionary well data is put in as key value pairs so each piece of data that you put into the dictionary you have to give it an associated key to retrieve that piece of data later on think of it as kind of like well a dictionary where you have maybe the word being the key right when you're flipping through a dictionary or you're looking for the word the value that you get from finding that word is the definition so you can kind of think of it like that or in this case the example that they give is that the value is the airport name whereas the key is the airport code now one very important thing that I need to stress is that the keys have to be unique right or else it's not going to work if you have two different pieces of data with the same key how are you gonna distinguish between the two when you look them up now why don't we jump into the playground and let me show you an example of how to declare a dictionary and some of the ways that we can use it alright first let's declare a dictionary so I'm gonna say var my dictionary equals and just like an array you start with two square brackets like that and then inside you specify the data type of the key followed by a colon and then the data type of the actual value that you're trying to store so in this case I'm going to put string colon string which means that my keys are going to be strings and my values are also going to be string and just like you saw in the previous lesson about how to declare an empty array you can do the same thing I'm going to declare an empty dictionary just like this so essentially this is the type of the dictionary alright so let's go ahead and put some data into our dictionary so we're gonna type my dictionary and then we're gonna have two square brackets in an index you would put the index in here right well for the dictionary instead you put the key in here now our keys are strings right so I'm gonna go ahead and put a new string key in here and then assign it the value that is going to be associated with that key now the example that I want to use is cars and license plates because the license plates are unique as well so why don't we just make one up so let's say something like that and let's say that this is a red Ferrari and just like that I've put in some data into my dictionary with this associated key now how do we go ahead and retrieve that value well let's try to print that out first you go to my dictionary and then you put in the square brackets and you pass in your key so ours would be SJD two nine three so let's go ahead and print that so you can see that it is a red Ferrari notice that it's wrapped in here in an optional type the reason for that is because if you try and access let's say a key that doesn't exist let me just make something up let's just say one and there is no key in our dictionary with one you know as the key when you run it you actually get nil so that's why what you get from this is an optional type it could be a string or it could be nil all right so I'm going to write down some comments here assigning data into a dictionary this is declaring an empty string straight in dictionary this would be retrieving a value as optional string so typically when you try to retrieve the value for this key you would assign it to something like that let's say my car is equal to this and then you would have to check using one of those methods we talked in the optionals lesson like checking it against nil using equal equals or using optional binding or anything like that okay so how about placing the value for a key so let's say we changed cars but we kept the same license plate well in order to change the data for that key you would just assign it something different so let's call it block Lambo all right so just like that we've replaced the value for that specific key now let's say that you've sold the car and you've kept the license plate so here's how you remove a value for a key equals nil simply by assigning it now like that you're essentially removing the data for that key and the last thing I want to show you is how to iterate or go through the items of the dictionary and remember there is no order but we can still loop through the items of an of a dictionary by using the for loop so it would be for something right for something I'm not I don't want to write it right now I just want to fill in the other part for something in my dictionary and then in here do stuff for each item of the dictionary now what is this something in here well since dictionaries work in key value pairs right so we basically use something called a tuple and a tuple you can think of it as like a collection of variables and what we're going to put in here is let's say key and value so it's going to take each item out of the dictionary it's going to put the key into this variable and it's going to put the value into this variable all right so we can do something like this print key let's say I'll see what that does we should put another car in here just to make things a little more interesting let's just use okay let's try to print this now so we get our two keys but we only have one ah that's because we're we removed this car for this key why don't we go ahead and comment that out so we still have two cars in our dictionary and why don't we run it now so now you can see the two keys we can also print out the value instead you'll see our two cars here now we can use them separately we can insert the key say is a value could do that so that's how you iterate through a dictionary so that pretty much wraps up using a dictionary and you will find that it will come in handy alongside using a race when it comes to organizing your data so if you liked this video please hit the thumbs up button and please subscribe if you haven't already now click on over to the next lesson and we'll talk over there