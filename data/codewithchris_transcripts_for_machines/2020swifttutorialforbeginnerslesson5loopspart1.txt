hello and welcome to lesson 5 of my Swift tutorial for beginners video series now in the last two lessons you learned how to write code that can be executed based on some conditions now let me introduce you to something called loops loops allow you to repeat a block of code multiple times and while this might sound a little bit boring and repetitive it's actually quite useful let me show you how they work so now I'm going to demonstrate for you the for in loop and this is going to allow you to loop a block of code for a set number of times let's jump into the playground that I have prepared well I haven't actually prepared anything cuz it's a blank playground but let me present to you this dilemma so if we were to print hello in the console and let's say I wanted to print this five times now I could just write five lines of code like this you know you get the picture but we can use a foreign loop to condense this code into just a couple of lines and let's take a look at the syntax for a foreign loop so true to its name the key words to use are four and in you start with the keyword four followed by some sort of variable name now you don't have to use the VAR keyword here you just give it a name and then you write in and then you specify a range so there's a lower range followed by three dots and then an upper range and I just want to mention that it's an inclusive range so if your range is one to five it's going to loop from one to five and that would be a total of five times and then you follow that by a set of braces inside the braces is where you put your code and that code is going to be looped for whatever range that you've specified so I know that this is yet another set of keywords and another sort of syntactical structure that you have to remember but remember what I said don't try to memorize anything as long as you do the exercises and worksheets after each of these lessons and you just spent 15 minutes even just trying it out and playing out with it you will remember the keywords to use and the structure of a foreign loop you don't have to memorize anything so that is really the way to go and don't forget I do have a cheat sheet for you to download on the resources page for this video series which you can find the link to in the description below the video so have that cheat sheet besides you and if you ever forget you just refer to it alright now let's jump back to our playground and let's take a look at doing this for in loop so I'm going to just create my loop right up here so for and then I'm going to use the variable name counter in right and then I specify a lower to upper range and I'm going to do one dot dot dot five and I'm going to put my braces so inside these braces we're going to put our print hello so let me erase four of them cut that one and then let's paste it inside there and we're gonna run our code boom so now we have hello five times how easy was that sure enough it's run our code from one to five now the question is what is this counter for what is this variable name for well the thing is for each iteration of the for in loop the counter refers to that number so in the first iteration of the loop counter actually contains one in the second iteration counter contains two and so on and so forth so let's say I wanted to print out the counter maybe I wanted to print out numbers one two five I could print counter and then I can run that and then you're going to see one two three four five output instead now one cool thing is that you see that there was this yellow warning here and that was Xcode just telling us that hey if you if you don't need to use that variable then you don't have to specify it but since we started using it in this print they meant that warnings gone away so let me tell you what that warning was all about why don't we go back to hello and then that little warning is gonna come back and it's telling us that this counter was never used consider and this is kind of cut off let me see if I can show you consider replacing it with an underscore or removing it so what what happens is that if you actually don't need to use that sort of counter you can replace it with an underscore like that and that's gonna be fine that's perfectly valid for in Lupus syntax now I want to show you one more thing that might get you tripped up when you're working with loops why don't we add this to counter variable back because we're going to need it so let's say I want to display or let's say I want to add up all the numbers from 1 all the way up to 5 and I want to get the sum of all of those numbers you know you might do something like this you might say you might declare var sum equals 0 and then remember that this counter contains these numbers for each iteration right so I might want to do something like this plus equals counter and I think this is the first time you've ever seen the plus equal operator right like this this is just an increment operator so what we're actually saying is basically add whatever a counter is added to some so if sum is 10 encounters 5 well sum is now going to be equal to 15 so another way to think about it is that it's equivalent to writing some equals sum plus counter okay it's kind of just like a shorthand all right so in every iteration we're basically adding 1 and then adding 2 and then adding 3 and we're collecting it inside this variable sum so what I want to do now is just print sum and now let me run it what would you expect to happen let's take a look and get one two three four and five well that's not what we expected right why is that well let's take a look so in iteration number one we declare a variable called sum we've set it to zero and then we're adding one to zero and then we're printing that and so we get one well in iteration number two counter is now two and then we are declaring some and setting it to zero so we're essentially adding two to zero was just two and so it prints sum and we get two and so on and so forth so the problem is that in every iteration of the loop we are declaring some and we're setting it to zero so we're not really getting that addition of the counter through the iterations like we want and if you notice you might say why am i able to declare some so many times right because in the very first lesson I told you that when you declare a variable up here like this and like STR you don't need to read Eclair it in order to assign it something else right so I can assign Tom to STR up here and that would be perfectly fine however if I try to declare STR again you know like this I'm gonna get an error 'invalid read Declaration of St art where you can't do that so why is it that I can do that here right in every single iteration we're declaring a variable called sum and setting it to zero well the reason is because every iteration it's almost like a clean slate there's no recollection of what happened in the previous iteration so that's why that's happening essentially we're resetting some every single iteration what we want to do instead to get the desired effect is that we should move this declaration out here and set it to zero and then inside each iteration we are essentially just adding the counter to some and we are going to get the desired effect if we do it this way so outside here I'm gonna print some let's stop it and run it again and so we get 15 and that's the numbers from 1 to 5 all added up now as you can see up here we've declared some we've set it to 0 and then down here in the for loop in the first iteration counter is 1 so we're adding that to 0 and so sum now is 1 and in the second iteration we're not resetting in some counters 2 this time and we are adding 2 to 1 so we get 3 and then so on and so forth and then the loop ends after 5 iterations and then we print sum so that's why we get a single number here so I just wanted to go through that quick example to illustrate kind of how loops behave because I know a lot of beginners who get tripped up with something like that all right recap time so use a 4 in loop to execute a block of code for a set number of times and each time your code runs is called an iteration of the loop now be sure to practice with the worksheet for this lesson because loops are powerful stuff in the next lesson I'll show you some other kinds of loops just click on over there for the next lesson and I'll see you there