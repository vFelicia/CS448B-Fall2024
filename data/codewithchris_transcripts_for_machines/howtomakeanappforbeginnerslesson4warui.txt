hi welcome to lesson 4 of 10 it cooked with your new skills in Auto layout and stack views it's time to put your skills to the test by the end of this video you're going to have built the user interface for our war card game app we're gonna start a brand new Xcode project make sure you're looking under the iOS tab at single view app let's click Next for the product name I'm going to call it the war app and the rest of the details should be the same as your previous project so you don't need to change any of it the only thing I want you to make sure of is that the language says Swift and if it doesn't just hit this dropdown and select it let's click Next and then let's save it on the desktop or anywhere you'd like the first thing we're gonna do is add the graphic assets into our Xcode project so below the video you're going to find a link to download these assets it's called lesson for assets just go ahead and click that link and download that zip file save it on your desktop and I've already done that so I'm gonna go ahead and double click that zip file to unzip it after you unzip it you're going to get a folder if you open up that folder you're gonna see all of the graphic assets for our project now you might notice that each of these assets come in a set of three so let's open up a set of these assets I'm going to open up back dot PNG this is the back of the card let's open up back at 2x dot PNG and back at 3x dot PNG if I spread them out a little bit you can see that back dot PNG is the original size back at 2x thought PNG is two times that size and the 3x version is just 3x the size of the original and the reason why we have three different sizes for the same graphic asset is to accommodate the different iPhone screen resolutions so the retina screens use the at 2x version and the larger screens like the iPhone 8 plus use the at 3x version let's go ahead and close these now we're gonna actually just add all of these to our project so first go into the asset library for your Xcode project and then go back to the folder hit command a on your keyboard to select everything and then let's drag and drop them into our asset library and you're going to see that Xcode is smart enough to group all of the different sizes together so if you click on let's say back you're gonna see the 1x 2x and 3x group together like that so you should have back background car 2 all the way to card 14 deal button and logo now let's go back to the main dot storyboard and in the lower right hand corner in the library pane make sure you're looking at this object library tab and the filter box let's type in image view and let's drag and drop that guy right there and make sure you've selected it in the document outline let's go to add new constraints we're gonna uncheck constraint margins and I'm going to pull down these little drop downs and I'm going to choose view inside of safe area because I want this background to be edge to edge let's go ahead and do that and then let's change all of these to 0 so 0 Tab 0 tab 0 tab hitting the tab button on your keyboard just helps you jump from box to box and I just want to draw to your attention if you change it to view now or you click view again like I'm doing now that number changes so just be cautious of that and make sure that those are zeros and in any case even if you add the wrong constraint you know how to edit or remove it and we add it because we learned that in lesson two so let's go ahead and add these four constraints you're going to see your UI view stretched from edge to edge even all the way to the top and of yours doesn't look like that just go in the document outline delete all four constraints and try that again okay so now having the image view highlighted in the inspector pane on the right hand side choose image and let's choose background like that the second thing we're going to do is we're gonna add a stack view a vertical one because we're gonna have the logo and have the cards everything is kind of stacked in a vertical fashion so let's go down here in that filter box let's search for a stack view I'm going to add a vertical stack view like that and now we're gonna set some constraints for it click add new constraints I'm going to remove constraint margins and I'm gonna put zeros for all of them again but this time I'm gonna leave them relative to the safe area because I don't want the elements in the stack views to be blocked by anything so let's add those 4 constraints you'll see that they are edge to edge except for the top here where the status bar is covered okay so we're good for that and now it's time to add some elements so let's go back to the stack view here and again we're going to search for image view so go ahead and drag that into the stack view in the document outline you should see the stack view right here and then you can see the image view is inside of the stack view if you collapse the stack view that image view should be inside of it okay and the background is outside it's behind the stack view okay so we've got this image view here we are going to add another stack view and this time it's going to be a horizontal stack view so rather than dragging it onto the screen here I'm actually going to drag it into the document outline and the way I've done it here is I've put it inside the stack view but below the image view so if you collapse the stack view both the horizontal stack view in the image view should be inside of it and in fact I'm actually going to click this you can hit enter and I'm going to just rename this right now and call it the root stack view so when I refer to the root stack view you know I'm talking about this guy the stack view that contains everything ok so we've got this stack view this horizontal one right here and in the filter box we're going to type in an image view again and we are going to drag this into the document outline and this time I'm going to put it inside that horizontal stack for you okay so if I collapse this you should see that image view being tucked inside of it I'm gonna do that again because we have two cards and again you can put it inside now if you accidentally put it on the outside let's say you know you put it somewhere like that and then you collapse that stack view and that image view is still there just go ahead and put it inside like that you can rearrange them and sometimes it takes a little bit of patience to get it just right okay so we've got to image views here these two represents the two cards so it's starting to get a little bit confusing in the UI here so let's start setting some images and start naming some of these things so I'm going to call this the card stack view and you can hit enter to rename it and this one I'm going to change the distribution to fill equally and so you can see that change down there and for this image view I'm going to click it and in the inspector property I'm going to choose back and then this one I'm going to choose back as well so don't worry that it doesn't look quite right right now all right so there's our card stack view containing the two card images for this one above it this one is supposed to be the logo so I'm gonna scroll down and choose a logo like that and then right now it really doesn't look right but we can deal with that in a second okay and now we're gonna go to button and we are going to drag this button now this part is going to be a little tricky because we want to put it into the root stack view but below the card stack view and sometimes when you drag this button here it wants to put itself inside this card stack view look I've just accidentally put it inside the card stack view and you can see there's a card there's a card hand then there's a button beside it that's incorrect I actually want the button outside of it so an easy way to position it is if you drag this guy out and then just drag it in between the logo and the button like that you know it's not supposed to be there but now you can collapse this card stack view and then just move this one above the button and so that's an easy way to get get what you want for the route stack view what we can do now is actually highlight it on the right hand side change the distribution to fill equally so that's going to give an equal amount of space to all of the elements inside of it so the next thing we're going to do is we're gonna add some labels so let's go down here in the bottom right let's choose label or type in label rather and let's drag this label and again I'm going to just drag it into the document and put it below that button you know everything should actually be inside of this root stack view so I just want you to do a sanity check here so collapse that root stack view you shouldn't see any elements outside of that stack view if they are just click it and drag it into the root stack view and inside the root stack view you should have the logo the card stack view which contains these two card images and then a button and then the label so let's add a couple more labels let's click and drag that guy and put it in between the button and the label let's click it and do that again we're gonna add a total of four let's do that again okay and then I'm going to select all four labels you can hold down command and you can individually select all four and then let's change the color of the text to white and then now what we're going to do is to let's select it from here we're going to select that label and hold down command and select the second label and we are going to click this button to put them both into a stack view and so that's gonna put them into a vertical stack view we're gonna do the same for these two bottom ones click this guy hold down command to select this guy simultaneously and then we're going to click this button and embed that into a vertical stack view as well so now in the document outline below this button element you should have two vertical stack views inside of each of them you're gonna have two labels okay now let's collapse these two staff use a hold down command select both of them simultaneously like that and then let's click this embed in stack view again so now you're gonna have a vertical stack view with two vertical stack views inside each of them containing two labels however for this stack view that contains all of this stuff below it we're gonna change this to a horizontal axis so go on the righthand side and inspector pane and let's change that to a horizontal and then you're gonna get something that looks like this it still doesn't look quite right but we're gonna fix it so in this horizontal stack view that you just changed let's change the distribution to fill equally and then for this first stack view in here let's change the alignment to Center and let's change distribution to fill equally and then for this one that contains the labels on the righthand side we're going to do the same alignment is Center and distribution is fill equally so now it's starting to take shape okay so for this label that is on top on the left hand side let's change that to change the player the text the player and then let's change the font to a bold type of font and then for this one right here we're going to change that to CPU and then we're going to change the font weight to bold and then for this label right here we're going to change that to zero for this label we're going to change that to zero okay so now we have pretty much all the elements on the screen it still doesn't look quite right but we're not done yet so for this button let's go here and change the image to deal button and let's erase that text right there okay starting to take shape for this logo up here I want you to click that and right now it's set the scale to fill so it's stretching it out and I want to change that just the center instead and so where it's not going to try and stretch it it's just going to Center that image inside of the image view and for these guys right here instead of scale to fill you know it's really pulling it in all directions to fill up the image view I'm going to change it to aspect to fit and same thing for this guy I'm going to change from Seattle Phil to aspect fit and then you get something like this which looks like what you intended so one thing is that one thing we can change is for this route stacked view if you feel like it's stretching all the way down here too much we can just bump everything up a little bit so for this route staff you select it let's go into size inspector and scroll down to all of the constraints that relate to the rootstock view and for this one that aligns the bottom of the stack view to the safe area let's click Edit and let's change that constant to something like 20 and then you're gonna see it bump up just by a bit alright so let's take a look at this UI in a couple of different orientations and devices so down here it says view as iPhone 8 I'm just gonna open that up and I'll leave it at portrait right now so we'll test out the portrait ones first let's choose the iPhone 10 yea let's minimize it a little bit so we can see everything and if your screen turns white and you can't see anything just change the zoom level here if you can't see that these zoom controls just hide this document outline by clicking this button here that's gonna create more space here to allow you to see those zoom buttons all right let's see the iPhone 8 plus like you see my screen just turned white let's just zoom in and zoom back out this is the iPhone se this is the iPhone 4s okay so that now let's check out the horizontal ones or landscape orientation so change the orientation looks pretty good you know the cards are kind of small which is something that we can definitely address clicking that now looks a little messed up but that's just kind of a refresh issue so let's zoom out and zoom back in and you can see that it looks fine now on these bigger screens you can see that the cards are really smaller and the reason for this is because the root stack view we told it to distribute its spaced equally between all of the elements so the logo gets an equal chunk of space the cards get an equal chunk of space the buttons the labels down here they all get an equal chunk of space if we wanted these cards to be bigger we would actually have to tell that root stack view instead of distribution fill equally and we might say something like fill and then you can see it looks a lot better right but the problem is if we change the distribution to its fill if we go back to the portrait orientation you can see that the things start to look scrunched up so this real solution here is if we have distribution to be fill equally for this vertical orientation but for the horizontal orientation you know that we could change the distribution to fill and that is something that we can do actually I'll show you that in a second but first we need to talk about something called size classes size classes are basically categories of screen sizes because there are so many devices and two orientations for each device that Apple decided to separate all of these into different categories of screen sizes so when you're adding a constraint you are able to say something like add this constraint for all size classes as in all categories of screen sizes or only add this constraint for a specific size class so this gives us some flexibility to change the layout depending on a specific size class let's say your app might look different on the iPad size classes versus like a smaller device like an iPhone and each size class is defined by two parameters a height and a width now the height can be compact or regular and the width can also be compact or regular so for instance one size class might be compact width and compact height another size class might be compact width but regular height and in the case where you don't care about size classes and you want to add your constraint for all size classes it would be any width and any height now let's dive back into our Xcode project and I can show you how we can add a constraint for a specific size class now the first thing I want you to look at is down here in the view as iPhone 10 you can see the size Clause here that this is it is compact width and compact height let's change it to the portrait orientation and you can just see that size class changes to compact width but regular height so just to reiterate what we want we want distribution to be fill equally on the compound with and regular height or actually we want it to be filled equally for any size class but when it comes to this size class right the compact width and compact height we want distribution to be fill instead all right so that's just for that case just for that size class of compact width and compact height we want distribution to be fill otherwise we want fill equally for all other size classes so this is where you're going to let's set it back to fill equally and we are looking at this size class right now right compact width and combo tight and we're going to click this very for traits button and we're going to introduce a variation based on the width and the height so we're going to click both and then just click out of that and this section turns blue and it shows you your you are currently varying for all of these screens all of these screens are in this size class or in this category of screen size I don't know if you've noticed but we are actually missing a screen size there was one to the left of this iPhone 10 and that was the iPhone 8 plus now let's take a look at Y varying for this size class doesn't include that iPhone 8 plus so I'm gonna click done varying to kind of get back to all size classes and let's go ahead and click this iPhone 8 plus well this iPhone 8 plus is not in the same size class as these other guys it's in the regular width and compact height and the reason is is because the screen is just so big that it it counts as regular width it doesn't count as compact width whereas these other guys like the iPhone 10 counts as a compact width so if we wanted you know to also add our constraint for this size class as well what we're going to do is we're going to click on vary for traits but we're going to introduce the variations simply on the height we're gonna say that for any compact height size class we don't care about what width it is whether its regular width or compact width we don't care we only want to care about the height so if it's compact height right now you can see that it includes the iPhone 8 alright whereas before when I varied on both of them both the high end the width it did not so I'm just gonna vary on the height right now all right so I'm gonna have this blue section here and it tells us we are varying for the compact height devices and what I'm going to do is go up to distribution it should be set to fill equally right now click this little plus icon beside distribution and here I can say again you can kind of set the variation that you want leave it as width as any and the height is compact click Add variation and then now you can see that you can actually change this value specifically for this size class which is compact height so I'm going to change this to fill and now it's basically going to use fill equally for all cases except for size classes of compact height in that case it's going to use fill all right let's click done varying down here and then let's test this out so if I go into portrait mode you can see that it uses fill equally it still looks good but when I go into landscape mode you can see that it uses fill and my cards look bigger than they were before let's go check out the iPhone 10 see how big those cards are when I go into a portrait you can still see that everything is spaced out evenly all right so let's run this in the simulator as a last task and I'm going to choose the iPhone 8 plus simulator this time all right so here we are with the portrait orientation I'm gonna press command and the right arrow and here we have the landscape orientation and then let us stop this project and let's choose a small one like the the 5s and let's launch that oh and we've actually popped up a different simulator so here we have the portrait orientation let's press command right arrow and here we've got the landscape one and both look pretty good that's awesome right if you're having trouble putting this layout together just leave me a comment below and I'll jump right in to help out also make sure you download my Xcode project so that you can compare it with your own you can get it by following the link in the description below now I want to turn it over to you now that we've built the war card game user interface was it easier than you expected or was it harder than you expected let me know by leaving a quick comment below if you like this video please subscribe to my channel by hitting the subscribe button below if you don't want to miss a single video make sure you click that Bell icon as well remember you can download my Xcode project that I showed you in this video by clicking on the link in the description below thanks for watching and I'll see you in the next video