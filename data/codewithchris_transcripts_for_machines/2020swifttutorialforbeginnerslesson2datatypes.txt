hello and welcome back to my Swift tutorial for beginners this is lesson 2 if you missed less than one then I highly recommend that you start there first now back in lesson 1 you learned all about variables and constants and how they're used to keep track of the data in your app now the data in your app can be as simple as text or numbers but it can also be complex such as photo data or maybe employee records in a company database in Swift there are different data types to categorize these different kinds of data and that is today's topic so let's dive in so I thought a brand new playground here and I want to show you something that I did a little preview for you in the last lesson so here we have a variable called STR and we've assigned a piece of string data or text data into that variable and I showed you last time that you're not able to do something like this when you reassign data to a variable you can't change the data type now data types were something that we glossed over in the previous lesson but that's what we're going to talk about here today so in Swift there are different types of data so far you've been introduced to strings which is essentially just text data and I know that's a little bit of a weird name for text data but you can think of it as a string of characters at least that's how I thought of it when I first started and then it is for integers these represent whole numbers positive and negative and then you have your decimal numbers and you actually have two data types to represent your decimal numbers where you have a float and you have double the only difference is that double is more precise so we can actually store a longer decimal numbers and then lastly for this slide at least we have boolean or just bool and this represents true or false data it's perfect for data where there is only one of two options so those aren't the only data types in Swift however they're probably the most common that you'll work with for a while and also when you get a little more advanced you're going to be able to create your own data types that are more complex than the ones that I just showed you just as a quick example you might create a data type called person which includes a lot of information like your age your hair color your eye color your ethnicity your likes and dislikes and all that sort of stuff that's a lot of data but it's all related to one type which is a person so a quick example quick preview but for now let's just focus on these common simple data types now what I want to do is I want to focus on the practical side of data types so I'm going to show you in terms of declaring variables and constants how you would specify the data type for your variable or constant so in the last lesson you learned that in order to declare a variable you would use the VAR keyword followed by the variable name and for constants you would just use the let keyword and then you would use the assignment operator in other words the equal sign to assign some sort of data into that variable or constant well one thing that I did leave out was an optional part of this variable or constant declaration and that is that after your variable or constant name you can put followed by the data type that you expect this variable or constant to keep track of so in this example we are assigning some string data to our variable if I were to explicitly declare that my variable can only hold string data I will put colon followed by string which is the data type name so now let's take a look at our playground again Y up here in this variable declaration was there no datatype specified well that's because you don't really have to do it if you don't specify the datatype what's going to happen is it's going to take on the datatype of the first piece of data that you assigned to it so if my first piece of data was actually an integer like 100 then my variable STR would now be an integer datatype variable so now you can see that this line actually doesn't produce an error because I can reassign data to my variable as long as it's the same data type that it took on in the first place now just a quick note why is it that if this variable isn't type of variable why is it that I can't assign a piece of string to it what's happening under the hood well the thing is different types of data are stored differently in memory and so when you declare a variable STR and you say that it should store integers well to put it in simple terms it's just going to be set up to store integers if you were to say that that variable would store string data it's going to be set up a different way now there is a data type which gives you more flexibility in terms of storing different kinds of data but that's a topic for another day and the second thing is that it actually helps you as a coder because imagine if your variable can store any kind of data you don't know what to expect but the fact that you know this variable STR can only store numerical data or integers to be specific that sets your own expectation as a coder sometimes having too much freedom is not a good thing because that offers more opportunities for errors and when we're programming and when we're coding the greatest enemy is actually us making mistakes either in our logic or in the way that we've coded something so that's a little bit about why there are data types now let's do some quick examples of some of the data types that we've talked about so we've got STR here so let's leave this as a string alright and let's do let's do another one called a I know I'm not following my same rules about having descriptive variables but you know what we could do that let's call an integer do 100 do a float and this could be like a 0.1 or two if you double you know I'm not and you could do a bar rule this is the datatype for that and then this can be true or false and like I mentioned before you don't have to explicitly specify the data types like this it's going to take on the type of the first piece of data that you assigned to it now this part is a little tricky because float and double both represent decimal numbers it's just that double is more precise so if you remove that data type or what kind of data type is float and double or sorry these two variables what are they well it turns out that double is the default decimal datatype for swift so this one would actually be a double data type that's what the system is going to treat that as and then boolean is just boolean if we remove that it's going to see true and it's going to make this variable a boolean type okay so before moving on to the next lesson let's do a quick recap in this lesson you learned about the most common data types that you'll be working with you also learn that you can explicitly specify the data type when you declare your variable or constant and if you don't do that the variable or constant is going to take on the datatype of the first piece of data that you assign to it and then the last lesson I did forget to mention that I have a swift cheat sheet available for you to download and reference so you can have quick access in case you forget the syntax or maybe data types or anything else and it's very handy to keep besides you as your learning Swift great progress so far let's keep moving I'll see you in lesson 3 just click the thumbnail right over there