so you want to be an ios developer well what technical skills are recruiters looking for these days and what can you learn to maximize your chances to get your foot in the door and also what do you not need to know so i'm going to assume that you're not currently an ios developer and if that is true i want you to keep one thing in mind as you're applying for jobs you only need one employer to give you a chance because once you're in you can learn on the job you can learn from more experienced ios developers and you can build up your resume to maximize your chances of someone taking that first chance on you make sure you know these eight things that i'm about to share with you in this video they're the same things that i look for when i interview ios developers and surprisingly only three of them are ios specific alright let's dive in all right before we start just want to say these are not in any sort of priority order the first one is source control because when you're applying for a job most likely you'll be working as part of a team and source control is the best way to work harmoniously with your team now you might argue that if you find a job and you're the first and only ios developer that you don't need to know this i would say that that is not recommended as your first ios job because you want to work with people who are more senior than you so you can learn and plus being the only ios developer on the team there's a lot of pressure on you and that may not be ideal for a beginner so as to what source control you should learn and use it changes from a work environment to work environment but i think as long as you know sort of the basic concepts and you know how to merge and resolve conflicts you'll be in a good place next up we have ios concurrency now you don't need to be the master of multithreaded programming but you need to know the basic concepts because otherwise you're going to reach a point where you're going to be looking at code you're going to be trying to figure out what is happening and you're not going to understand why the app is behaving a certain way so know the difference between the main thread and background threads and how they work together to perform tasks like networking data fetching updating the ui and things like that number three is the swift programming language it goes without saying that if you're going to be building ios apps knowing swift is a must but how much swift do you need to know so definitely you need a baseline working knowledge you need to be able to build apps and write swift code but do you need to know things that are a little more complicated like for example generics do you need to know how automatic reference counting is working behind the scenes and things like that i would say that it's important that you can read code because even if you are not using let's say generics in your daily routine programming with swift but you're going to be spending a lot of time reading your team members code whether that's for code review or maybe you're part of a larger project and you need to understand how a feature works you're going to be reading a lot of code so i think it's important that you at least understand how these things work and you can recognize it when you're reading the code so that you can follow the logic and and know what's happening even if you are not using it as a habit in your programming number four design patterns and algorithms so why reinvent the wheel design patterns are solutions to common architecture problems that come up during programming so i would say it's most important to know the common ones such as singleton factory and you can probably google this and and find out another thing are algorithms so these are sort of known efficient ways to solve things that come up in programming know your sorting algorithms chances are these will be tested in an interview and then lastly no big o notation even if you're not super familiar with it at least know what it is and know how to evaluate some pieces of code get some practice in and if you are if this term is unfamiliar to you it's basically a way of evaluating how efficient uh your code is number five is xcode goes without saying that you need to know how to navigate and use xcode for building apps however more importantly you should also know how to debug with xcode so get used to the basic debugging tools such as setting breakpoints and stepping through your code and using the console window and things like that you should also know how to create and run test cases and as a bonus know how to measure the performance of your app using the tools that xcode gives you the next item is networking rarely these days are there any apps that are not connected to some sort of service so you should familiarize yourself with the concepts such as the difference between asynchronous and synchronous https and http and you should also know how to work with apis and with apis probably comes json is the responses are usually returned in json so you should know how to decode and encode json with swift as well now every api will be a little bit different but you do want to demonstrate that you have worked with some apis and so it's not going to be completely brand new to you number seven is swift ui or ui kit now the ui framework that you should learn largely depends on the type of job that you want ui kit has definitely been around a lot longer so there are a lot more opportunities for developers who know ui kit and it might actually make you more marketable when you're looking for a job however on the flip side swift ui is newer and it's sort of the the future as apple sees it and more and more people are going to adopt swift ui but as for now there may be limited job opportunities to work with SwiftUI so that's going to limit the pool of jobs available to you but you could also argue that the employers that are looking for swift ui experience they're going to be more innovative because they're adopting new technologies it also could be an indication that you are going to be working on a brand new swift ui project or you're going to be adapting a ui kit project towards swift ui whereas for ui kit you could be maintaining an existing ui kit app and the last thing to know is a database technology now personally my opinion is that i don't think it matters what you know as long as you show that you've worked with databases before because you're not going to know exactly you know what database your future workplace is going to be using so by demonstrating on your resume that you've worked for or worked with let's say cloud firestore before then the interviewer knows that you understand database concepts that you've worked with a database before and it's not completely brand new to you now it's important to keep in mind that nobody knows all of this stuff from the getgo and if you are applying to a beginner role knowing all these things will definitely give you an advantage unfortunately here's the bad news even knowing all these technical skills that's only half the battle there's another half consisting of your soft skills which are arguably even more important than the technical skills we'll cover those next time for now start learning swift and xcode in our 14 day challenge over there and if you're past that level check out the video description where i will link to different sources to learn the eight things that we covered today thanks for watching and i'll see you in the next video