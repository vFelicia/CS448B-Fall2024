hey code crew in this video you're going to continue building the ios notes app by implementing the ability to add update edit and remove notes if you haven't seen the earlier lessons i'll link to the playlist below and also on a card on the screen all right ali over to you all right now what we're going to do is we're going to add a function that allows us to add a note to our database and using lml5 is super easy so what we're going to do is we're going to make a new function after fetch notes and we can call it add note and this function will take in a date which is a string a title which is a string and a note which is a string and now what we're going to do is we're going to write alamo fire af dot to the funk we're going af dot request and we're going to add our url which is the same thing as the fetch row but we're just going to change the fetch to a create and then we're going to write a comma after the string and then we're going to write method is equal to post dot post so that tells it is a post request and the encoding url encoding dot h ttp body and now we can send in the headers so the header will be an array and it's going to have a title and the title will be the title we pass in and it's also going to have a date which is the date we pass in and it's going to have a note which is the note we pass in like that and then we can write dot response json and then we can put two curly brackets around that and just write response in like that so that should be enough and we should be able to actually send a note to the server and the headers are the exact same headers we used in postman when we added the headers for title date and no and we passed in these values now it's the same thing but we're just passing in the value the user writes so what i do now is if i go into my view controller if i go into my storyboard i see that i need a view controller for this screen because this screen the main screen has a view controller which is the file we have called the view controller but we need another view controller for this screen so what we're going to do is we're going to right click the folder and click new file and we're going to make it a coco touch class and we can just call it add note view controller and it's a sub class of if you just search right there ui view controller and make it language swift and that's fine and you can add it and make sure your target is your notes app so once that's done we've got a add note view controller we're gonna go to storyboard and what you do is you just click on the top bar of your second screen and in the identity button click that and your class is gonna be add note view controller so now we're able to interact with this screen using our new file which is add no view controller and if you want to make sure it works this print so once we restart our app it should say controller connected when we go to that screen so i see my data here i click add no and it says controller connected which means this view controller is connected now what we're going to do is we're actually going to add ib outlets from our main storyboard to the view controller so we need ib outlets for the text box the text field and the save button and delete button so let's import the text field and make sure it's an outlet and you can just name it title text field like that and you can import the text box just option drag it as well make sure it's outlet and you can call in note or body text view let's also import the save button and let's just call it save button like that and now we also want to add a function so drag the save button to your screen again but change it from an outlet to an action and you can just call this save click and if you want to make sure this works you're going to say print saved so once i restart my app and click the button it should say saved i go here and i click save and you see save down here so i know my button's connected now what we want to do is actually use the function we created over here add note and we want to pass in this data as the actual data so i'm going to go to my add note view controller and i am going to so when we click the save button what i want to do is api functions dot functions dot add note and what's the data we want to add well i want to add for the date i'll just put a string right now i'll just call it placeholder because we actually have to do a bit more work to get the actual date out but we can set up these two the title and the note well the title is just title text field dot text or the note is just body text view dot text and you can make these optionals actually it's going to tell us right here so you can either make it optional or force unwrap let's just force unwrap it for now okay now we're going to restart our app and we're going to click add note so now let's clear this out and say this is the first note from the iphone and in the title we can say this is the iphone's note now we click save so now we don't have any feedback but if we go back here and refresh our actual fetch route it should show a new note and it does right here it says this is the first note from the iphone this is the iphone's note and also if i restart my app i should also see my new data there so i restart the app and we see this the iphone's note here so now we have to add some feedback so we know if the note has saved or not because i can enter i can enter a new note and save it but i don't know if it's been saved or not but it's working in the background we can see right here so we'll start working on that we also need to implement the delete button and we also need to be able to edit a note as well all right so now that we've added the feature to add a note and all fetch all notes from the database i want to add the feature to update a note so when i open my app and i click on a note i want it to go into this add note screen but instead of having a blank screen or this data here that we're going to remove eventually i actually wanted to have the note itself so for example if i write this is the iphone's note and i click on it i want it to go into this screen and the title should already say this is the iphone's note and this body should be whatever i set in my database so then i can just edit it maybe so this is iphone's now updated and save that and it should update the note so the first thing we're going to do to do that is i'm going to go to my prototype cell and i'm going to option drag it into the next view controller just like that and now it's going to say selection segway and i'm going to choose show and it'll actually give you two lines now so the first line is the segway from the add note button to the next screen and now we've also added a segway when we click an actual table of yourself it'll also go to the add note screen so for example if i rebuild my app now now i can click any of the notes and it goes into the screen so the next part is i have to pass this data so for example the title and the actual note i have to pass it to this screen and prepopulate the text fields with that data so the first thing i'm going to do is go into my add note view controller and i'm going to declare a variable called note so i can just say var note bar note colon note question mark so that means there's a that means i've declared a note object and it can be no so i don't have to give it instantly i only have to pass the object when actually click on a note in the table view so i'm googling my view controller i have to pass whatever note the user clicked to the actual view controller so the way i'm going to do that is using a segway to pass the data so i'm going to write override func and i'm going to prepare and you see the first one prepare for segway ui storyboard segway just click that so i'm going to write let vc equal storyboard dot destination or sorry segway segway.destination as and then i'm going to give it the name of the view controller i'm going to so the view controller we're going to when we actually click something so for example i'm on the main screen which is the view controller called view controller and i click something and i go into this view controller which is called add note view controller so then i'm going to say as add no view controller now i'm going to give it an if steam i'm going to say if segway dot identifier equals something i want to pass some data so what is the identifier well if i go back to my main.storyboard if i click on the second segway so the segway from the table view to the add note screen if i click on that i see it has the identifier property so let me set this identifier to update note segway because that's what it is so it's a it's a segue to update a note so now since i've defined it as update note segue i can actually reference it in my view controller so if i write segway.identifier is equal to update note segway what i want to do is i want to write vc.note so and remember.note is the note property we defined in our view controller our add note view controller we gave it the property of note so that's what we're accessing and that is going to be equal to notes array to the notes table view dot for selected index path for selected row dot row just like that and now it gives me a force unwrap so we can just force unwrap it and now it works so what that does is is that if the identifier of the segway is update note segway so that means only if i'm clicking from a table view cell to the note add note view controller so that removes the other segue which is from the add note button to this add note view controller so i'm only i'm only specifying when you click so i'm only specifying when you click from the table view and i'm not specifying when you click from the add note because when i click the add note button i want to have this empty i don't want to have any prepopulated data but when i click from the table view i want it to say the data it already has right so for example when i click update i want the title here to be update so that's what this line does if segway.identifier is equal to update node segwit so that's what if segwit.identifier does it just specifies that i'm clicking the main table view and i'm not clicking the add no button and then i'm giving the next view controller add no view controller i'm passing our actual notes object so notes array is the array of notes we have and notes table view dot index path for selected row.row basically is the index is the index i click so for example when i click the first one it's going to pass in zero so that just means notes array to the zero so i want the first item in my notes array when i click the third one notes table view dot index for selected path row so it gives me the third item in my notes array that's all it does so now if i go to my add note view controller if i in the muted load i can just say print note like that or we can even do print no dot title so now if i restart my app and i click a note it should give me the notes title in the actual debug console down here so when i click update i see it says optional update so if i change that from optional to uh to required and rebuild my app i see when i click for example this is the iphone's note it prints out this is the iphone's note so now what we're going to do is we can save text field or title text field dot text is equal to note dot title and we can also say body text view dot text is equal to note dot note and let's make these required so now if i restart my app and i click for example update now it says updated and it has my note body for example when i click this is the iphone's note this is this is the iphone note and has the note body here so now i can edit it and i can save it but when i save it and i restart my app it doesn't save to the same note so if i restart my app you'll see that it didn't save the same note actually create a new note so if i write this the iphone update and save that and restart the app it says it adds a new entry instead of using the same entry and the reason that happens is because we're still making the save button add a new note so you see on the save click it says add note well when i click a note and i update it i want to use my update route we defined in the server so if we go back to our server we define this update route and i want to use this right so now what we're going to do is we're going to go into xcode and go to our api functions file and we're actually going to create a new route to update so i write func update note and it'll take in the same things it takes in a date which is a string it takes in a title which is a string it takes in a note which is a string but it also now takes in an id which is a string because remember we have to specify the id of the item we want to update and then we can update it so now i go into xcode and around that i'm going to write af dot request and i'm going to give it the url i can just copy the previous url and change it from create to update and the method will still be dot post because we're still it's still a post row and the encoding will also be the same and we can also copy the headers but we also have to add one more header and we'll do that right now so we copy the headers but we also add the underscore id header so underscore id or not the underscore id you can just call it id and we'll define that as id and the reason we write id is because our server is expecting something called id so what that means is the title of our updated note will be the title we pass in the date will be the date we pass in and the note will be the updated note we passed in and we're also going to pass in the up the id of the note we're updating and now what we can do is write response dot response json and with two curly brackets we can just say print response or we don't even need a print statement we can just say dot response json and the reason it's giving me an error is because i haven't written response in and then i can write print response like that so i'll know if i fail or not and for the add note as well we should also add print response so we know if it fails or not so now that i've got my update note working or my function working i want to go into my add note view controller and right now i'll change this and i'll actually write api functions dot functions dot update note and the date will be less let's just hard to code a date right now it's called placeholder the title will be and we can just copy what we had for the previous route which was adding a note but we also have to specify the id so the id will be note id and now that route works so now if i restart my app i see i see everything here so for example i click on title and i change this from title to updated title and when i click save it shouldn't add a new note but it should modify the note i had previously so i click save and i restart my app and i see updated title now so it clearly worked so i'll try one more time new item i can write new item updated and i click save and it's not going to add a new item to my array but it's just going to update that old item i previously had so i restart my app and you can see new item updated so that works so now i know that it works and i can update a note but now when i click add note my app crashes and the reason it crashes is because for example at the very beginning remember when we specified the titles text field to be the notes title and the body to be the notes body which allowed us for example when i click updated title and i rebuild my app because it crashed so for example when i click updated title it prepopulates the field with the title when i click add note i'm not sending any data of the note i want to prepopulate because when i go into my view controller i only sent the data of the note when it was update note segway but when i click the actual add note button that's not the same segue so this data isn't being sent to our add no view controller but we're trying to make our text field something that's nil which is why it crashes so what i can do now is create another variable called update and i'll set that by default to false like that so now what's going to happen is when i go into my view controller alright vc.update is equal to true all right so now i'll go back into my add note view controller and on view did load i'll say if update equal equal true then i only want to prepopulate it otherwise i want to leave it blank and same for the safe click so right now how do we know which one i want to do so how do i know if i want to save a note or if i want to update a note well in my safe click i can also say if update equal equal true i want to update my note so i'll put my update route or my update function inside the if statement and otherwise i'll put it in the else and otherwise so if i'm not updating i'm adding a note like that so now if i refresh my app i'll see that if i click update it works it prepopulates the field and but if i click add note it also works and it doesn't prepopulate the field but it gives me an empty feel and also we can just remove this block of text by going to our main storyboard and clicking on our text field and we can just make this empty like that and also in our text field on the top we can set some placeholders so we can say enter a title like that so now if i refresh my app i'll see that if i click any of these notes i'll get the note here and if i click add note i'm going to get a blank field so i can say another note and i'll type in this is another note and i'll save that so now if i restart my app i'll see i got this is another note and it says this is another note now i can write this as another note updated and when i save that and restart my app this time it'll update that note and we got this is another note updated so now that's working let's do a few more small fixes the first thing is when i click my save button when i click my save button i wanted to go back to the screen so right now when i click save nothing happens so to go back to the main screen when i click the save button in the save button i'm gonna write self dot navigation controller dot pop view controller animated true so what that'll do is when i click the save button it'll go from this screen back to this screen so let's run our app again and i click save and it goes back to that original screen so i'll click save and it goes back to the original screen i add a new note or a new note new note and i'll click save and it should go back to the main screen and it does and the next thing is when i go back to the main screen i want it to update my notes so right now i have to restart the app every time to see my new notes so the way i'm going to do that is by going into my view controller and right now we're actually right now we update the array in the view did load but there's another function called view will appear override func view will appear so fielded load only gets called when the app restarts for the first time so that's why the updated note i have to restart my app but view will appear it's called every time the view will appear so i click a new note i click save and the view is going to appear and that's when it updates this so in this i'll write the exact same functions i can just copy paste it so i'll just copy it and paste it in here so api functions.delegate we don't need that but what we do need is api functions of fetch notes and the fetch notes remember when we made a protocol it'll update our array and it'll refresh the table view so now if i restart my app i can see that if i write update new and i click save now it updates automatically without having to restart my app and also i can also add in my view will did appear so if i write override func the view did appear i can also copy this exact same code and just paste it here so now both it gets updated when the view will appear and when the view actually appears it gets updated last time just to make sure everything works properly so now we'll restart our app and you'll see if i write this is the ninth note and i click save it'll show this is the ninth note and i can see this is the ninth note updated and i click save and i'll see this ninth note updated so i don't have to restart my app anymore so that's pretty much it so we've got now we can add a note we can update a note and we fetch all the notes the last thing our server could handle was deleting a note so now let's get started on the next part which is being able to click the delete button so if i go to my simulator i click the delete button it should delete my note so when i click on any of these notes and i click the delete button i want to delete the note but when i click the add note i don't want to see the delete button because you can't delete something you haven't added so firstly let's deal with that part so what i'm going to do is i'm going to go in my add note view controller right here and firstly i'm going to import the delete button so you can work with it let's go into the main storyboard on one side and my view control on the other and i'll just option drag the button into the actual file and i'll just call this delete button and i'll also add a function so i'll change this from an outlet to an action and i'll call this delete click and just to make sure my delete works i'll write print deleted so when i restart my app i should see print deleted or i should see deleted when i click the button so i click the button and i see deleted so i know it's connected all right so the first thing i want to do is make sure that when i click the add note button i don't see the delete button so what i'm going to do is i'm going to make a view will appear just like how we did in the previous view controller so right override func view will appear and in here i'm going to say if update is equal to false so that means if we're not updating something which means we're adding something i want to self dot delete button dot is enabled is equal to false and self dot delete button dot title is equal to empty so the first part makes it that the button is not clickable and the second part makes it that the keyword delete is gone so it's just gonna be an empty button so if i restart my app now i'll see that when i click add note i don't see anything up here but when i click any one of the notes i can actually see the delete button so that's working now so the next thing i want to do is actually make the delete button work so the delete button is super easy to use just like how we made just like how we made one of these functions where it sends the id and it sends its note and the date and the title for the delete button we just need to send an id so what we can really do is just copy this whole function so i'll just copy this whole function and i'll paste it down here and i'll call this delete note but we don't have to specify a date a title or a note we just had to specify the id because if you go back into our server when we're deleting something all it takes in is an id and it just deletes that id so i'll just specify one id and i'll remove everything else just like that so now everything else is the same it's going to say af dot request it's going to have your url and you're going to change it from update or whatever you copied it to delete the method is still.post and the encoding is the exact same and the header is only one which is id and that's the id and now what we can do is we can go into our add note view controller and we can say api functions dot functions dot delete note and it takes in one id and the id will be note dot id just like that and we can actually make this force unwrap because we know we're not going to get a nil because when i go back to my simulator i've removed the functionality of the delete button when we're adding a note so the only time the user sees the delete button is when we have a note so when i click delete i'm always going to pass in a note id and it's never going to be no and that's why i can force unwrap it so now let's restart this and see what happens so when i click add note i don't see anything here that's good let's say i want to delete this is ninth note updated so i click delete i don't see anything happened here but if i go back i see it's been deleted so with the briefs i don't see anything happen in this screen is before because we forgot to pop the view controller so just like how we did in the safe click where we had self.navigation.pop view controller we'll copy that and we'll paste it in the delete button so now let's restart our app and if i click any one of these and i delete it it'll go back and it deleted the note so i can delete all the notes i want just like that so so far we've got the functionalities for adding a note so let me clear everything out alright so i can add a note i'll say this is the first note and you can add a body so this the first note and i can save it and it saves my note here and obviously if i restart my app it's saved in a database so it's always going to be here so this is the first note i can also update the note so i can write this is the first note that i updated and we'll see that i updated the note i can also delete the note and i won't see anything here the notes app is nearly done in the next lesson you're going to do some code organization and some styling now i have a question for you what do you think about full stack ios development is it better to have a hosted backend like firebase or to do it yourself like we've done in this app series let me know what you think by leaving a quick comment below and on your way down there please give this video a thumbs up if you enjoyed it and subscribe so you don't miss the next lesson and lastly if you want to see more app series like this and courses on other ios topics be sure to check out cwc plus i'll leave a link to it on the end screen and in the description below alright i'll see you in the next lesson