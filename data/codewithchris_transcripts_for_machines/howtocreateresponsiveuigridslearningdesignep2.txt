Today I'll share with you how to create responsive grids or achieve responsive layouts using grids in Figma. But before we get started, if you're still trying to work your way around Figma, we have a comprehensive Figma Basics tutorial that you can watch to get started. It covers all the fundamentals of designing with Figma, which makes it perfect for any beginner in the world of UI design. The video is up there in the card, so make sure to watch it if you want to learn more. Hey everyone, it's JC here Designer Tool with Chris the Place to Learn iOS app Development I was a copywriter by profession, but I always had a passion for design in general, and later on develop a strong interest in UI and UX design. Now I'm becoming a better designer every day through practice and study, and this series is about the journey. If you have an interest in design and want to learn more about this field, I hope I can inspire you to pursue it without further Ado. Let's start learning design. There are four main things that we'll talk about in this video. First, the importance of having grids. Second, the most popular grid systems you can use. Third, how to set up responsive grids that you can use and reuse for your projects. And lastly, we'll take a look at a real world example of how having a grid can help you. Chapters and time stamps are available below. If that's your thing and with that out of the way, let's get started. So first things first, why responsive grids? So one of the very first things that I learned when I started in this field is how important it is to have a structure for our design. When I was starting out, I would just align UI elements according to my taste. If I see that it's aligned, then it's good to go. If it's not, I just rely on the alignment options and stigma or just drag them until they snap on the same baseline, same line, height and all those things. Sometimes I would also calculate the spacing between elements and just remember them all throughout the process of designing the UI. However, as I progressed and learned more about designing UI, I realized that my old process was counterproductive and would result in poor UI organization because it did not follow a grid structure so much so that when the UI was applied in advice of a different size, it would result in pure chaos and me having to adjust leeway elements from scratch again. Now, all of these things can be avoided with a responsive grid system. A grid system is a somewhat invisible structural guide that will allow you to find some rhythm in your design, since everything from text to buttons to images will be placed consistently throughout the screen. Now, if you're wondering how to create a grid layout grid structure a Grid system. First, you need to know what they are and some of the most common systems out there. So grid systems, what exactly are they? Well, in UI design, there are two most common systems that you can use. There's the eight point grid system and the four point grid system. What these eight point and four point essentially mean is that your UI elements will be divisible by those numbers. So if you follow the eight point grid system, your elements will be divisible by eight, whereas if you follow the four point grid system, they will be divisible by four. So in that case, for example, your margins will be 20 or 16. If you follow the four point grid system because 28 or 16 are divisible by four and your input field could be twelve pixels in height, your buttons will be 24 pixels in height. The spacing between two input fields will be eight pixels and so on. Basically all of them or most of them, for example, can be or should be divisible by four. So personally, I prefer to use the four point grid system because it's more granular, meaning you can be a little bit more intricate with your design, especially in Sigma, which has a dense workspace that is geared towards productivity and efficiency. And apart from that, companies like Google and their Material Design system also use a four point grid layout in terms of Apple's own design system. I'm not too sure which one they use, but regardless whether you go for eight point or four point, the principal and the goal is still the same, having consistent, structured and responsive user interface. And once you get familiar with the principle behind these grid systems, you'll be able to create a grid system yourself for your app, and you'll no longer have to worry about it looking funky when displayed on a bigger screen, like an iphone 13 Pro Max or a smaller screen like the iphone 13 Pro Mini or iphone 13 Mini. So yeah, those are some of the fundamental things that you need to know about grid systems. There's still a lot to learn about them, but I won't go over the more advanced stuff to keep this video short. But if you want to learn more, I'll put some links in the description for some articles that you can read like this one by drade. Shepper on Miyama. I'm not so sure how to pronounce the name. He has an article link in the description. Give that a read if you want. So all said and done. We've touched on the rationale behind the grid system. Now it's time to put that into application and set up a responsive grid system in Figma. Right now we have a Figma file. So first things first on your Figma workspace, we want to create a frame or press the frame tool. Select whichever screen size you want. I'll choose the iphone Eleven Pro or iphone Ten. Let's rename this as demo. So at this point it really doesn't matter whichever screen size that you choose because we're creating a responsive grid after all. But I just have a strong preference for this size right here because I think it's one of the most common screen sizes around the world. I'm not so sure I don't have the data for that. So yeah, I just want to put that out there. So from here, let's lock this frame, then go to Layout Grid. Make sure the frame is selected. Layout grid. And then on the right panel, click on the plus icon and go to the settings of this tab and make sure to select columns first. And now you'll see we have columns displayed in red just by clicking columns. So you can change the color of this column by going here, change it to whatever you want an example. But let's just keep it to red at 10% because it's the default. So from here, what we want to do is to change all is that most of the values that are displayed on the screen, so count is simply the number of columns that will be displayed in our frame. So for our four point grid system, we're going to have count set to four. So type can be thought of as the position of the columns. So if you set that in the center, the columns will be in the center, and if there's Resize, it will stay in the center. So put that on the left will stay on the left, which are regardless of your screen size and right and so on and so on. So in our cases, we want to create a responsive grid for various sizes of mobile devices. We want to set it to stretch. Whenever we Resize the frame, the layout grid follows the size of our Artboard, which is basically the behavior of a responsive grid or a responsive design. So let's get stuck to default. It's margin margin is basically the margin or space between the actual workspace or UI and the device. So think of this frame as the screen dimensions of an iphone ten. So when you play on present, you'll see the iphone ten device right here just like that. So this white space, the actual UI. This covers edge to edge. So when we're designing UI, we almost never want to create elements outside the safe area because it could result in a poor user experience and unpleasant look. So we always want to set our margins into something that's divisible by four as well, such as 16 or 20. So next is the gutter. The gutter is basically the spacing between columns. So having gutters are quite useful, especially if you are planning to design a carousel or something with a horizontal scroll feature. So we also want to set this to something that's divisible by four, which is eight, and that's it. Okay. So our column settings are done. Next, we're going to want to apply another layout grid so under a panel, just click on the plus icon again, click on the settings and choose rows, so this will be pretty quick. Just want to make sure that count is set to 1000. The type is set to top height is set to four, divisible by four, offset zero and gutter zero just like that. So the reason behind this setting is that whenever we want to snap a UI element to our horizontal axis, the baseline of that property will always be divisible by four because of our height that's set to four. And because our count is set to 1000, this row basically goes on and on, which can be useful. If you have a very long app page, though, if you happen to find yourself exhausting all of the 1000 rows just like this, then you may have to rethink your app design. Okay, so yeah, just keep it reasonably long because we don't want to design if it scroll depending on your intention. So save that. And now you have your solid grid system. Now, from here, we want to make sure that we will be able to reuse this grid system for all the pages in our app project. So to do that, we'll have to create a style out of this layout grid property. So click on Style right here. Click on the plus icon and click on. Let's rename this to maybe mobile, just like that mobile. So if you watch our previous lesson on styles and components on Sigma, then you already have an idea on how to do this. If not, I highly suggest that you watch that video because familiarizing styles and components can really work wonders for your workflow. Okay, so let's check the styles again. As you can see, the columns and rows we just made are already combined in one style, this mobile style. So we just click on. For example, let's create another one another iphone X, and click on the upgrade mobile. And basically the rows and columns have been applied, so that just gives us easy access in the future. From here, there's one less thing that we need to do, and it's outside this layout grid property. So on your Figma workspace, click on this Sta icon, the Figma menu or main menu. Click on Preferences and choose Nudge amount, and here we'll change the big nods to four instead of ten. So in case you didn't know, nudge refers to the movement of an element in pixels. So if you click on a button, for example, let's create a button right here. Let's first hide the upgrade so we couldn't. Have a better visualization. So here's a button. And if you click on the arrow key one time, that's a small nudge, and it will move one Pixel to the right. As you can see, there's the X axis, let's move that to the right. There is one nudge. So now our X value is 21. Press the right arrow key again, 22, three, four. Basically, that's the small nudge. So if your small nudge is set to ten, then every time you press any of your arrow keys, the element will move ten pixels to that direction. So ideally a small nudge is always set to one, so you can make very little adjustments in your UI just like that. So big nudge, on the other hand, is when you hold shift plus any arrow key on the keyboard. So since our big nudge is set to four whenever we hold shift and the right arrow key, for example, let's set this to back to 30. So let's hold shift and press the right arrow key. The element will move four pixels to the right. So as you can see, we went from 30 to 34 by pressing Swift and the right arrow key. Press that again, remove another four pixels with a total of eight pixels since the original position. So we're now 38 pixels from the left or since we started. So regardless of how many times you press shift and the arrow key, you can rest assured that the position will always be divisible by four. So now you have a grid system that you can use for a whole project. So just a quick demonstration with our grid systems in place, let's put some basic UI elements and see how this would work for our demonstration. Let's just remove this frame because we don't need it anymore in here. I already have some premade UI elements or organisms. If you watch our previous video that we just need to put on our frame with the grid in place. So let's just remove this frame ungroup. So these are just organisms that I could just drag and drop on the frame. So first things first, let's create a frame iphone Eleven Pro. So on and using our style we made earlier, let's just click on this mobile and you can always adjust the opacity of this. So just go to maybe five and same goes for here five. And if you want to disable them or hide them temporarily, you can just always as a shortcut, you can press CTRL G on your keyboard. If you are in the Mac, press CTRL G just like that little grid invisible, or you can just press this icon right here. But if you want to work fast, use the shortcut. So our UI premade UI elements, let's just drag and drop this one so as you can see, it snaps on our grids or lines that we just set a while ago. So regardless of the position that we set this on. It will always be divisible by four as you can see 36. And just like that. Okay. Next is learn courses with CWC plus all those things. Let's just drag it here. So let's just make sure to select both, make sure that they are divisible by four, like maybe 16 or even twelve or eight, and make sure that they're aligned just like that. So here, let's make sure that they are divisible 432 and this is eight. Let's just disable that. Maybe that's okay. Just an example. So here, let's make sure that this is divisible by four. Again. 34. Put that on. So as you can see it, snaps. So this is the button. The height of this button is 44, which is divisible by four. And as you can see, it, snaps just right to that rows that we made a while ago. So here's the top row, the bottom row. I mean the bottom line, top line and snaps on from top to bottom. So that's the first half of our UI. And from here, let's just drag it here. Just get Chris assets right here. Just drag and drop them. Make sure that they are divisible before again, maybe 24, maybe 16, maybe 812, something like that from here. Make sure. Yeah, they are 24. But you want to make sure that they have a little more space to make this 32. This one will be twelve, just like that. As you can see again, I want to make sure that it's 20 pixels. So let's make sure that it will snap. So that's the beauty of this mail grid, because it will snap on that column, the edge of that column just like that. So as you can see right here, it doesn't exactly snap on this top row, because the baseline of our font also goes beyond that top row line this line. So it will follow if you set them individually in this 1212. What's going to happen is that it will really not snap to that rows that we just made earlier. So make sure that it will snap just like that, just like that. So you can always just set this. You can always just adjust the line height of this font and make sure. And now they are twelve. And from here, as you can see when you click on that, it snaps, you click on this, it taps, and when you click on them both, you can see they're divisible by twelve. So let's double check on our first carousel list. So this is a carousel, by the way. So if you want to see the list all the way to the right, so you just need to Uncheck clip content here. Let's just move it right there and that's it. Let's remove this again. Yeah. Let's just drag it here. Make sure that this is left and right and top drag it like that. Then same goes for the next item. So we can just fast forward this. Now one thing left for us to do is to Resize this. Make sure that the space is around 64, maybe or 80 because we want it visible before again. So 80 is somewhere here. There you go, 64 other and let's just adjust the bottom again. There you have it. It snaps perfectly and it snaps perfectly. Remove this guide. It's just a rectangle that I often use serve as a guide. And when we remove the layout grids and press on present, it will show us this UI. You can see if you click on the frame. Press present. It shows us the UI, and it looks good. It has the rhythm. It has that structure because we followed the four point grid. So as you can see, each item on the carousel span three columns and the second teaser. I mean, the second item is on the fourth column and it sort of bleeds over the edge of that device. So this is one of the few instances where you can design outside of the margins or the safe area of the UI because we intended or we want people to scroll or we want people to interpret that. This is a scrollable list, just like that when you scroll also functions just like that. So that's the beauty of the four point grid. We have the structure. We don't have the status barrage here, but that's okay because this is just to give you a demonstration on how UI grids work. So we have the four column grid, the 1000 rows, and all those sort of things. As you can see, we have a bit of mistake right here. For some reason, I think the second has a bit more space than usual right now. I see. Okay, so here we go. Just like that. So the second one is correct. It's the third one that isn't first and third one, third rows. That's better. All right, let's make some more adjustments. Just like that. We just made some editing and present again. Now you can see it's much more structured, much more consistent. So, yeah, that's the beauty of the four point grid system again, or any other grid system, because you can easily spot some mistakes, some inconsistency on your design, and you can remedy it immediately. So that's just one very spontaneous instance that I gave you. So because we follow the grid system, any inconsistency will be spotted immediately, and we can easily resolve that. And now we have a responsive grid system and a more structured UI. All right. So that's all the basics of creating responsive UI grades and Figma before we end. I just want to inform you guys that our chat mini course is now live in our CWC plus program. So in there you'll have access to lessons on how to design and develop a simple chat app, plus all other courses in our CWC plus catalog links in the description. If you're interested so with that out of the way, I hope you learned something like and subscribe if you did leave a comment, if you have any questions or suggestions and again, thank you for learning design with me and I'll see you in the next video. Bye.