hello it's Chris here quick question which pay wall do you think generates more Revenue by the way this is an app called Emoji me sticker maker the answer is paywall a it generates 50% more conversions than paywall b now if you want to check out more of these tests go to the app Master's YouTube channel but I'll let you in on a little secret just because someone got this result doesn't mean that it'll work exactly the same way for your app I mean there are so many different variables different industry different audience perhaps different platform and the list goes on if you want results like these for your app you have to run your own experiments on your own pay walls and that's why I was so excited when Revenue cat asked if I wanted to cover their new pay walls and experiments features finally an easy way to deploy High converting pay walls and to run split tests on them special thanks to revenue cat for sponsoring this tutorial Revenue cat helps you generate more revenue from your app and they do this in several ways making it easy to add inap purchases and subscriptions to your app giving giving you accurate analytics across platforms and helping you optimize your Revenue through AB testing and in today's video we're checking out their latest feature to help you make more money pay wall and pay wall experiments let's Dive Right In hey check this out I was able to customize my pay wall in the dashboard and then with one line of code display that pay wall in my app I'll show you how to do this but before that we need to take a step back in order to sell something on your pay wall you have to have something to sell right so here's the setup that I've done before creating my pay wall so first I set up the products I want to sell inside App Store connect and in this case I have an annual a discounted annual and a monthly subscription next I created my free revenuecat account over at revenue cat.com and then I linked my Revenue cat account to my App Store connect account and this is just done by pasting a secret key from App Store Connect into my Revenue Cat Project next I created Revenue cat products that map to the products in app store connect and I reference it by the App Store connect product ID and then I created a pro tier inside Revenue cat and they call this an entitlement but essentially it's something that buying those products can grant access to so then I linked up the three Revenue cat products to this entitlement that means that if you buy any one of them it will unlock this Pro tier entitlement next I created three offers in Revenue cat so an offer is what gets presented on a pay wall one offer is the standard everyday pricing the other offer is for sales and the last offer is something that I wanted to test by offering multiple durations of subscriptions and this is something we'll get to in the later part of the video next in each of my offers I created product slots they actually call them packages but I think of them as slots on my offer where you can attach the products that you want in that offer finally I assigned the products into the appropriate slots in my three offers and now I'm ready to create a pay wall for each offer by the way I've got a video showing how to do all of this configuration step by step just check out the video right over here now let's take a look at how easy it is to create a pay wall in Revenue cat so here I am in my Revenue cat dashboard looking at my project as you saw in the slides before we have three offers and you can create a pay wall for each of them so I'm going to go ahead and create a pay wall for my standard offer which is a single option of an annual subscription so click on ADD pay wall and we can select one from the gallery as a starting point for customization there are three currently but there will be more in the future so this one is good for if you have several different options this one is good for if you have a single option this one is also a single option this one seems more visual I like that one I'm going to stick with this one as a start starting point and there are don't be fooled there are a lot of fields here but not all of them are necessary are absolutely required so first of all I'm going to change the photo here I have one prepared on my computer I think yeah this one right here and just in case you are wondering I got these illustrations from icons8.com so that changes that and actually this placeholder content is not too far off from what my image suggests so I'm going to go ahead and type the title as well all right so there's the title there's a little blurb that you can show you can customize any of the colors and you can even show um you can select different colors for dark mode so up here in this preview you can select dark mode like that and you can see what that would look like and customize the colors for that as well so I'm going to change it back to light mode for now and let's take a look at what package means so as I alluded to in the slides before a package is kind of like a slot for a pay wall since this pay wall displays one purchase option I have the ability to select one thing and in um this pay wall for my standard offer offing only has one package anyways that's why there's no selection here if my offering had the monthly and the annual option then I would be able to make multiple selections here so I'm going to go ahead and select this button for my annual plan and then this package details is basically it's this text up here and you can see in the watermark it says full access for just and then there's these two squiggly brackets that is a dynamic variable so you can insert ERT information about your packages pricing and different things like that actually in the revenue cat documents for creating a pay wall it lists all these different variables that you can insert into that text so I'll link to this document in the description below the video but we will probably use let's see here we'll probably use this one which is what they suggest in the placeholder as well so let me go ahead and copy and paste and get full access for only and then you have to have these opening squiggly brackets paste in my variable close the squiggly brackets now you might think you typed it in wrong because in the preview it shows this it shows the variable name right but if you go up here into display settings you have to check this variable preview values and it will substitute that variable for the actual data you're trying to insert so that you can see what you're doing see how it's going to look like if you have an introductory offer like a sale or something like that you could type that here as well but we don't have that for this particular package and then for the call to action you can change the color for light mode and dark mode I'm going to leave it as green here and you can also um fill this out like enroll now for example if you have a trial that's where you would put that call to action there and then for footer links you can put your terms of service or privacy URLs here and then you're done don't forget to hit save though or create pay wall in this case so what you're doing here essentially is designing how your pay wall is going to look now typically this is done in a piece of design software such as figma and then you're going to have to translate that design into code and then to uh integrate that in your xcode project however with Revenue cat you don't have to do any of that let's take a look at how easy it is to deploy your pay wall inside your app so right here I'm looking at at my excode project I have not integrated any Revenue cat stuff just yet I want to show you how easy it is to do this so first of all we have to install the revenue cat libraries or SDK into our exco project if we take a look at the docs again and we scroll all the way up to installing the SDK let's click on iOS I want to show you how easy this is and that's why I'm going through this with you we can use Swift package manager to install it and we just copy this URL go up to file go up to add package dependencies and then we just search for it and that's the one let's click on ADD package and wait for this to go for what we're doing we don't need this one and we don't need this one so Revenue cat this is the core functionality Revenue cat UI this is some of that pay wall stuff that you're going to see all right so now that that's added here in my app entry point I can import Revenue cat and then inside the initializer so let's do that here we are going to connect our app to our Revenue cap project by adding our API key here uh configure with API key let's go and grab that from here uh so we're going to have to get out of there for a second I'm going to grab my API key here just going to paste that in here and then we also want to set the log level to debug and this is going to be very helpful as we are configuring and building our app and just testing the inapp purchases and speaking of debugging Rue cat actually has this really helpful tool for developers this debug Revenue cat overlay if we just attach this to our root View and I run this this is going to give us all sorts of information such as whether or not it can actually um connect to our Revenue Cat Project and fetch the data so that you're not wrestling with those issues so you can see right away that when I launch my app I see all of this information SDK version status is okay that's connected and everything like that so this is super duper handy so now we are actually ready to go we have installed the SDK and now we're ready to present our paywall simply as easy as that so I'm going to get rid of this debug overlay for a second and with one line of code I can show a pay wall present pay wall if needed here and there are actually two of them here so this one I can control by passing in a Boolean whether or not it should present the payall but this one is even more handy I can just specify the entitlement and that I've specified as the pro tier you saw this earlier when we were going through the diagram right whenever someone buys any product it entitles them to unlock this Pro tier so here using this second option and you specify the identifier of that entitlement it will basically do the checking to see if the user has the pro entitlement or not and if it doesn't it will present the pay wall because if that user has already unlocked that Pro entitlement it shouldn't show the pay wall that is going to do the detection for you so that is the single line of code I'm going to run the app and it's going to display the pay wall for me just like that I don't even have to code this up right all I did was customize it through the dashboard right here now this isn't the only way to display your pay wall you can also integrate it as part of your own custom pay wall design let's take a look at how we can do that so if we don't want to show it as a full screen pay wall what we can do is instead integrate it as part of our Custom Design so I'm going to get rid of this modifier for just a second here and inside content view right now I just have a scroll View but I have um just put together a simple pay wall a custom one here which I will show you let's put an instance of that right there and if we take a look at the preview here is what it looks like so it's got a whole bunch of uh placeholder text but that's okay for the purpose of this demonstration because I want to show you how you can add uh the pay wall functionality to this custom View and oh at the top first you have to make sure you import Revenue cat UI so that you can access this modifier and this is just pay wall footer that's it this modifier right here and it just adds that down there so let's take a look at what this looks like so here is our custom pay Wall Part and this part is supplied by Revenue cat you don't have to even write any code to handle the purchasing or anything like that all done for you and don't forget you always have the option of retrieving the offer data yourself and displaying your own buttons but at that point you're pretty much building your own pay wall and you're losing many of the cool features such as ease of deployment and this next feature that I'm going to talk to you about which is customizing your pay walls dynamically this is one of my favorite features let's go back to the full screen pay wall I am going to remove this stuff here we're going to go back to the app entry point and we are going to display the full screen pay wall again okay and then now we can go into the dashboard and we can change some of the information here and it will be reflected in the app without having to change any code in there so that is really cool you could for example change the image so why don't we change it to this one change it it to that one right there and then let's also change this text all right okay don't forget to save it and then if we go back to the app and rerun it we should see the changes so if you imagine your app is in the App Store and you can change up how your pay wall looks the copy the images without submitting any updates without going through the review process again all of it done dynamically from the revenue cat dashboard super awesome so let's say you're happy with your pay wall how can you be sure that you're maximizing the lifetime value or LTV of your users would not offering a monthly option be better or perhaps offering a trial would up your conversions and hopefully people stick afterwards and become paying customers well to answer these questions we can run Revenue cat experiments let's see how a revenue cat experiment lets you pit two offers against each other to see which offer would generate a higher lifetime value for your customer and it does this by showing one offer to half of your new users and the other offer to the other half of your users then Revenue cat will track the revenue generated by these users over time so that you can determine which offer is ultimately better now before you start an experiment you really need to decide what you want to test first if you're not sure they have some ideas for you to try in this article Link in the description below now once you know what you want to test you need to create a second offer with the change that you want to test and Associated pay wall for that the original offer is called the control and the one you're testing is called the treatment and they have a great article here for things to keep in mind when creating the treatment offer again link to this article in the description below so now you're ready to start an experiment so inside inside the revenue cat dashboard first of all actually I want to explain to you what my offers are and what I want to test so my standard offering is one annual plan so you saw my pay wall it's just a single button that says enroll now but I'm wondering if we offer a monthly plan as well on that pay wall would that ultimately generate more lifetime value per customer on average or would sticking with my standard offering be better so that is what I want to test this offer versus this offer now I should go into pay walls and I should create a pay wall for that uh treatment offer right so you go ahead and click on ADD pay wall and this one would be a good one because this one shows multiple plans and tiers right so I'm not going to go through that again but you can create the pay wall there and once you have a pay wall for your control offer and your treatment offer you can go into this experiments Tab and create your first first experiment now just a note if you're not on the pro tier plan of Revenue cat you need to be in order to run experiments however the pro tier plan is free up until you are making at least $2,500 with your app per month if you are not making that much money with your app don't worry about it pro tier is still free you just get to use all of these features and play with them and test them out for free if you are making more than $2,500 per month mon with your app then I believe Revenue cat takes about 1% as a fee for the pro tier so let's go ahead and create the new experiment and there are honestly not a lot of fields to fill out here so let's give your experiment a name so I'm going to say annual versus annual and monthly and the control is my standard offer and the treatment which is the thing I want to test it against uh is the annual and monthly offer and then down here I just have to select my segmenting criteria that is what portion or segment of my users do I want to enroll into this experiment first of all you have to select which apps you want to be part of this experiment since I only have one app that's fine which countries so this is users users from which country do you want to involve all countries uh what amount of those users so 100% would be every single new user would either see like they would be part of this experiment and half of them would see the control the other half would see the treatment if you say let's say I know 50% that means that this 50% of users is not going to be part of this experiment they're only going to see the standard offer but the other half that is enrolled in this experiment half of that is going to see uh the control pay wall and the other half is going to see the treatment pay wall so that's 25% and 25% essentially a quarter of your users going to see this another quarter is going to see that and then this 50% right here they're not involved this in this experiment so they'll just see whatever you have set just the standard and then you can go ahead and click create experiment now I have I don't have any running experiments and because they take time time to see results I am just going to show you what results would look like in this uh documentation so you're going to see a chart that looks like this which tracks re like actual Revenue that has been realized by users over time so users um from pay wall a will be one color users from payall B will be another color and you're going to see this Revenue which one's going to be higher easy to see but there are also in addition to this graph some useful metrics and charts to look at so you're going to see something like this this tracks conversion rate like how many people actually sign up through the pay walls from your control versus your treatment has the change been positive or negative and then paying customers so there is a difference between conversion and paying customers simply because conversion could mean trial conversion but that doesn't actually mean a pay Pay customer right so paying customers has uh the control work better to generate paying customers or has the treatment pay wall worked better and then this one is probably the most important one is actual realized Revenue which pay wall has generated more revenue for you don't underestimate this feature guys this is super duper important and can make a significant impact to your app this summer I attended the mobile growth Summit here in Toronto and I listened as expert took to the stage and shared their wisdom about growing app businesses I watched as the head of marketing of multiple big apps and companies such as wealth simple Tim Hortons and more talk about how they run experiments and run tests to figure out what converts the most users and what generates them the most Revenue they test things like which signup incentives work better which pay walls work better when to show the pay walls should we offer trials or not all of those questions they test and test than test my takeaway was that if you are not running these tests yourself to collect this data and figure out these questions you're probably leaving a lot of money on the table and that's why I'm so excited about these new Revenue cat features because it gives us Indie developers the power to play alongside the big cats so here's how you can get started using Revenue cat pay walls and experiments just go to revenue cat.com click on get started and sign up for a free account pay walls are on the free tier experiments are on the pro tier which is also free until you hit $2,500 in Revenue a month now if you like this tutorial and you want me to dive deeper into Revenue cat and explore more of the features that can help you make more money please drop a comment below with the text more Revenue cat thanks so much for watching I'll see you in the next video