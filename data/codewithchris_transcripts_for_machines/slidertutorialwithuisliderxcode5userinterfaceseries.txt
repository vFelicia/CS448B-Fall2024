hey guys welcome to this code with chris lesson and in this video i'm going to show you guys how to add a slider to your app and handle the user interaction with it so that you can get the value from the slider whether it's all the way to left all the way to the right or something in between and you'll find that it's actually pretty easy to do so we're going to start by launching xcode and creating a sample demo project and i usually just go with single view application because that starts us off with storyboard a single view controller in a single view which we can get started to modify now for your project settings it really doesn't matter too much what you put in here since it's just a demo i'm going to call it slider demo i'm just gonna save it on my desktop okay so the first thing you'll want to do is go to your storyboard and this is where you're going to customize the view for your app if you launched it right now this is exactly what you'd see a blank white screen so down here on the right hand side at the lower right hand side this is your object library and if you don't see this go all the way up here in the upper right and there's a button here to slide out this panel if you don't have it okay and then down here you might not see these elements and there's four more tabs here that a lot of beginners can't find sometimes so make sure you're on this one which is the object library and you can just search for slider there and it's going to filter it out and you're going to see the the ui slider the so ui slider is actually the name of the class that this element represents and you'll see in a moment what that means so i'm going to just drag this into the middle of my view here i'm gonna stretch out the width by grabbing these handles and just dragging it like that i'm also going to add a label to the view and i want this label so go ahead and type in label and it'll filter it and i want to add a label because i want to be able to display the value the current value of the slider so i'm just going to put it in the middle there and now in the upper right pane this is the inspector pane again there are six different tabs here one of them this one here is the attributes inspector and here you can actually customize some properties of that element so i've got my label selected i'm gonna click this alignment and just center align that so now we've got two elements on the in the view and the next thing we're gonna do is we're going to have to add code to handle the event when the user interacts with this guy and the way we do that is we need to expose both of these elements to the view controller because the view controller is the the thing that handles all of the interaction with the view and that's where you can express your logic in objective c code so what we're going to do is go into the upper right hand corner here there's this button called the assistant editor so when you click that it actually splits your view into it splits your editor into two panes it's just gonna expand it on the left hand side we want to keep the view here on the right hand side however we want to make sure that we're looking at viewcontroller.h so i'm just going to click here in this breadcrumb and switch it to viewcontroller.h okay and this is where i'm going to expose these elements i'm going to connect them to some ib outlet properties of this class now pay attention this is what i'm going to do i'm going to hold down control on my keyboard and i'm going to click the label and i'm going to drag it you'll see this blue line come out and i'm going to drag it in between the at interface and at end okay i'm going to let go and i can name it now so i'm going to call it let's call it the value label and this gray circle this grey dot here represents that it this property this ib outlet property is connected to this element so you can see here if i highlight it it highlights that label now one thing that beginners one mistake that beginners make a lot is that let's say they they want to change this name um or they did something wrong they'll delete this whole line and then they'll hold down control and they'll do it again and this time they may call it something like slider label and the problem with this is that if you right click the element you'll see that this element is actually connected to value labels still i mean it is connected to slider label but it's also connected to value label property which does not exist anymore so if you run this it's going to crash so you have to click this x here and break this connection because this outlet actually doesn't exist anymore we deleted it okay so i'm gonna do the same thing with the slider hold down control click and drag it right here i'm just gonna call this the slider and once again if i highlight if i move my mouse over this gray circle it's going to highlight that guy to indicate that it's connected now i've got two properties that i can reference slider label and slider and these two properties are going to reference these items because we just connected them so now i'm going to switch back to single view actually i'm going to go back to assistant editor but i'm going to go to viewcontroller.m okay and i'm going to do the same thing with the slider i'm going to hold down control click and drag and just insert it into there and this time i'm going to call this slider changed and now what we're actually doing is adding an action method okay the difference is that before we were doing that control click drag thing in the dot h file and that's the interface that's where you declare things in the dot m file this is where we can add some logic to the events that happen but first we gotta create a method to handle that action so what we've just done here is that we've connected this method called slider changed to the value changed event if i right click this slider again you can see here these are all of the events that can happen for the slider and the value changed event is hooked up to this method slider changed which is right here okay so now i can do something so this green text is a comment so it's not actually code it's just reference for myself or anyone else who is reading the code so when slider value changes this the code below is executed okay so what sort of code do i want to execute well first of all i want to get the value the current value of the slider and i'm going to put it into a string so a string is a piece of text this is a string variable so i'm going to say slider slider value okay so this is a string variable and i'm going to use this method of the nstring class and it's going to allow me to basically create a string from a decimal so stay with me here self dot slider dot value okay so self.slider is referencing let me go back to the dot h file is referencing this guy okay so that's self dot slider and dot value is getting the value is accessing the value out of that element okay so this line self dot slider dot value is actually retrieving the value of the slider element and what i'm doing here with the string with format is that i am passing it basically this percentage f is a wild card it can represent any sort of decimal value and the value happens to be a decimal value so i'm feeding this wild card with my slider value and it's going to create an ns string and it's going to assign it to this variable and the reason it needs to be an ns string i need to you know turn that decimal into another string is because my label so self dot slider label i want to set the text you can see here that the text property accepts an ns string type right so now i can use this assignment and assign it slider value which i've created right here and so what this does is that each time the slider value changes it's going to grab the slider value okay it's going to turn that decimal into a string which is a fancy name for his piece of text it's going to store it into slider value and then i'm going to assign slider value into the text property of the label and effectively that's how we change the text so i'm going to give this a run and you'll see how it works okay so see as i'm moving it with every move that slider changed event is actually firing and this method this code right here is actually being executed okay yeah so it was as easy as that to add a slider to your app and capture that event in a future lesson i'll show you guys how to style the slider as well and a lot of times apps use sliders for let's say volume controls or zoom level controls or something like that so if you learned something new from this video and you enjoyed it please share it with your friends and colleagues with the share buttons below and also check out my paid video course which goes through the fundamentals and the foundations of building ios apps so you can check that out through the annotation on the screen or in the description below just follow the link there thanks for watching and i'll see you guys next time bye you