hello welcome to learn twist for beginners lesson 5 in today's lesson we're going to talk about loops when you're writing your app there is going to be many times you're going to find yourself needing to repeat pieces of code for instance let's say you're showing five things in your app and you need to turn each of them red so a loop is going to allow you to just write that single line of code to turn something red and you can repeat it five times for each of those five objects and that's going to save you from having to write out that code five times so that's a very simplified example let's me you're going to use them a lot so let's take a look at how to use them so there are three types of loops we're going to cover today we're going to start with the for in loop as you can see in the Swift programming guide here so let's go ahead and start a new playground in our Xcode and I'm just going to call this the loop playground and save it on my desktop now a four in loop allows you to repeat a piece of code a certain specified number of times if you have a list of data otherwise known as an array which you're going to learn about in an upcoming lesson you can also use a for in loop to go through each of those pieces of data in that array and execute some sort of code on it so this is perfect for the example we mentioned in the intro about having five objects or five items on the screen and you need to turn each of them red for example so let's start with learning how to use a four end loop to repeat a piece of code for a specified number of times and when you guys learn about arrays I'll show you how to use a for loop to go through each piece of data in that array so as you can see true to its name the key words to use here are four and in so you start with the keyword four and next you have a variable name now you don't have to this variable using the VAR keyword like you've learned in the previous lessons you can simply have a name for this variable because you're only going to refer to this variable within the for in loop this variable that you specify here is going to keep track of which iteration of the loop is currently running next up you have the keyword in and then you have the lower range followed by dot dot dot and then the upper range and that last part there after the in keyword is the range which your for loop is going to run in and it's inclusive of those numbers so for example if you have one dot dot dot five it's actually going to run five times and then after that you open a set of curly brackets and inside the set of curly brackets that's where you're going to put the code that you want to repeat for that number of times so let's jump back to the playground and let's do a quick demo on for in loop so I have the four keyword here and for my variable I can specify something like index and then I would put in and let's use that same example one two five and then I open up a set of curly brackets and then here I'm simply going to print hello and we're going to see this in the console down here it is printed at five times now part of the reason why you specify a variable name here called index is because you want to use that that number or this variable inside your for loop here so for example I can do something like this or I can say print index and you're going to see that index changes from one two three four five depending on which iteration of the loop it is it keeps track of basically where we're at in this range right here as we're looping through it but again what we've specified here is a count is only available inside the scope here in between these curly brackets I can't specify you know printing index out here it's not going to recognize it okay so we can't do that and furthermore if you don't need to use index inside your for loop you can very simply place an underscore there so this is perfect for the example that we had initially where we're just printing hello five times we don't really need a counter of any sort where we don't need to refer to index we don't care which iteration is currently at one thing I want to mention which is confusing often for beginners is this idea of scope here for example if I wanted to sum up the numbers from one to five and I wanted to print out the result after the for loop let's say I declare a variable up here and I call it sum right equate it to zero and then I say something like sum plus equals and actually let's add this index variable back here and I go like this now you haven't seen this plus equals sign yet but this operator basically equates to something like this it takes some and it adds the index so this is equivalent to writing this is just kind of like a short form okay so first of all if I declare this variable called sum is inside my for loop inside these curly brackets well this variable is only available within that scope within these two curly brackets I can't go out here outside of the for loop after it's run five times and print out the result of some see you can see that it can't find this variable even though I've declared it in here okay so why don't we move this print statement to the forloop what would you expect to happen in this case well we get one two three four five again and why is it that this sum isn't increasing why isn't it continually adding index to it and you know why aren't I getting the sum of the numbers from one to five by the last iteration of the loop well what's happening is that in the first iteration of the loop we're declaring some equals to zero and then we're adding index to sum which is one and then we're printing some so that's why we get one down here in the second iteration of the loop what we're doing is we're declaring some again we're setting it to zero and we are adding this time the index is 2 and we're adding two to zero right and then it's going to print two so that's why you can see the output two right there well right now you might point out to me hey Chris I thought you said that you can't read it clear the same variable you know in the first iteration of the loop we're declaring var sum right and then in the second iteration of the loop weari declaring var sum that's that's illegal that's not allowed in fact you might say that you know if I declare var string again up here it's going to throw an error all right we can't read Eclair the same variable because we've declared this guy up here we can't read Eclair using the bar again and I would say that's true except that in each iteration of the loop it's almost as if it doesn't remember what happened in the previous iteration there's no memory or recollection of the previous iteration so each iteration is kind of like a clean slate and it's going to execute this code right here so just to say that again you're right if you're saying that I can't read Eclair some right because if I try to do that right here Xcode would throw an error however inside of a loop in this scope right here each iteration of the loop is like a clean slate okay now if I wanted to actually find out the sum of the numbers from one to five what I would actually do is I would move this declaration up here outside of the loop and then what I would do this way I could move this print statement outside of the loop and what this foreign loop will do is simply loop from one to five each time adding index to the sum and now I'm actually keeping track of the sum so you can see that after five iterations of the loop adding the numbers from one to five into sum which started out as zero the result is 15 down here and that's from this print statement okay so I'm going to stop the lesson there while the syntax for the foreign loop is actually pretty simple and in the concept of repeating a piece of code for a certain number of time is pretty simple I want to give you some breathing room to digest what we talked about in regards to the variable scope so I would recommend that you try declaring and creating this loop on your own computer try declaring the variables inside the loop and outside the loop and see where you can access them and use them and where you cannot and it's really going to help and aid you in your learning if you like this lesson please give the video thumbs up and subscribe to channel it's going to help the channel gain some more exposure and visibility and it's really going to help me out so thanks a lot for watching and I'll see you in the next lesson bye for now you