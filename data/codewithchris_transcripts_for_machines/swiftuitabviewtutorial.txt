hi I'm Chris and in this video I'll show you how to use a swift joid tab view which will give you those nice tabs along the bottom so here I have a brand new xcode project and this is the default view let's start by changing the vstack into a tab view now notice that it is a layout container just like the vstack is and you essentially put the views inside of it that you want as separate tabs but it's not enough as you see we have an image and a text element inside the tab view but we don't have any tabs well what you're missing are modifiers called tab item on each of the elements so for example if I wanted to put this image in its own Tab and the text in its own tab I would add the tab item modifier to both of them so in this tab item modifier I would first of all let's add a text element to represent a tab as you can see in the preview we have tab two and that is going to be where my text element is uh going to reside now I'm going to add another tab item modifier to the image element and I'm going to call this tab one and now you get tab one and tab two and you can see in tab one I have the image if I click on tab two I get the text element now in truth you probably wouldn't put a single element inside a tab you would probably put a view consider consisting of many different things so feel free to create your own View and you can create an instance of that view here instead of using an image element and uh you could just add the tab item modifier to it to put that whole view into its own tab now for these tabs let's add an icon as well so I'm going to use SF symbols for this uh let's use plus I'm just going to use any random uh SF symbol just to demonstrate stra these just happen to be the ones that I remember off the top of my head so you can see we have two tabs just like that now if you want a third tab go ahead and create it like so and now we have three different tabs and that's how simple it is to use the tab view to create a tab bar in your app oh and one quick thing if you want to download the sample code for this we've got it all in a single handy xod project in fact it contains a sample code for all of the Swift UI components so that you can learn from it or copy and paste the code into your own project just visit cc. Swift ui kit it's a free download I'll leave it in the description below the video too all right now back to the tutorial now some of you may be asking well how do we detect what tab is currently selling selected or how do I control through code which tab gets selected well in the tab view up here there's a parameter called selection and in order to use that we first have to create a state variable up here so let me demonstrate and we'll call this uh selected Tab and I'm going to initially set this to zero now uh now that we have a state property we can set the selection print parameter of the tab view to be a binding of that and that binding allows twoway read and write to this property that means that when the user interacts with the tab View and Taps on a tab it's going to relay that information and write it into the selected tab so that you can read this variable and see which tab is selected in the reverse way you can programmatically through code set the selected tab to a specific Tab and and then it will trigger that tab to become the active one there is one further step that we must do so in addition to just having that property and setting this binding you also have to add a tag modifier to each of the tabs so that you can identify and differentiate between the different tabs so let me show you that tag and I'm going to Simply you can use a string I'm going to use a number just so it's straightforward like that and so if I set the selected tab initially to one then when I launch this app this tab will get selected right that's the middle tab if I wanted to be that I could change it to that and then I'm going to run the code again and now by default this tab is selected now when I select a tab through the user interface like the user does this it is going to write whatever tag number this active tab is into that property so now that this tab one is selected selected tab is going to be a zero because the tag is zero for this tab one hopefully that makes sense that's how easy it is to detect which tab is selected as well as programmatically control which is the active tab so I hope you've enjoyed this tutorial for more Swift UI tutorials check out the playlist and if you are a beginner starting your IOS app Journey check out my 3hour beginner Master Class great way to Kickstart your journey all right thanks for watching and I'll see you in the next video