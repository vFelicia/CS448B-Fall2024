hello and welcome to lesson 3 of my Swift tutorial for beginners video series now that you know all about variables constants and data types it's time to start having some fun in this lesson we're going to talk about a staple construct that exists in all programming languages in some form or another and yes I'm talking about the if statement let me show you what they're all about so the reason I'm so excited to show you how to use if statements is because starting from now you're going to be able to write code that can make its own decisions you're gonna be able to write some app logic so why don't we start here with a constant and we're just gonna use a letter A we'll say a equals 10 and I'm going to print a string down here let me just open up the console so you can see something and I want to say and say a is less than 10 or how about is less than yeah other a is less than 10 now this is going to print regardless right because well first of all I have to run my playground so there we go a is less than 10 well this actually isn't true right because a is 10 so it's not actually less than 10 and in this case I don't want this to show up well the problem is that that line of code is there right so it's going to be run and it's gonna show up what we can use here is an if statement so we can add and condition and we can say that we only want to run this print statement based on some sort of condition that we can test so let's see how we can do this with an if statement so it all starts with the if keyword followed by a space and then your condition which are going to test I'll show you how to write that condition in just a second but for now let's continue with the rest of the if statement then you're gonna have a space and then you're going to have a set of braces or some people call it curly brackets inside those braces you're going to have the code that is only going to be run if the condition equates to true if that condition turns out to be false then the code inside of your braces will not be running so now let's jump back to the playground and see this in action so I'm going to use the if keyword here followed by a space and the condition that we want to test is is a less than 10 right so we're going to do a and this is the less than operator it's going to check is the left side less than the right side so on the left side we've got 8 on the right side we're going to put 10 right followed by a space and then we're gonna open up an opening brace and I'm going to go under the print statement and close that brace and press tab here so we've got our line of code inside of an opening and closing brace and this is our condition here so that actually doesn't matter if you want to put your brace down here or up here to make sure there's a space in between your opening brace and your condition now let's try to run our code and press this blue button here this time and you can see that now the console is empty so what happened here was that it checked the condition a is less than 10 and because a is 10 it's clearly not less than 10 the condition equated to false and so it didn't run the code inside here now why don't we make that condition true now all I need to do is say is a less than or equal to 10 in that case this condition would be true all right let's press run and then you can see it printed down here all right so that's really cool because now you can write code that can be run based on a condition however oftentimes we've got multiple choices that can be made like for example do you want a Big Mac or do you want chicken McNuggets so we're gonna do this using another feature of the if statement called an else if Clause let me show you how that works so right underneath the closing brace of your if statement you can put the keyword else space if and then you would have another condition then followed by another set of braces now what's going to happen here is that it's going to check your first condition in your if branch if that happens to be false it's going to skip right down and it's going to check the condition in your else if branch if that also happens to be false then it's just going to skip again and it's not going to do anything however if one of those conditions were true then it would run that branch of code and keep in mind it's only ever going to run one branch of code so imagine yourself standing in the middle of crossroads there's two paths one on your left and one on your right there's only one path you can go down right so that's kind of like how the if statement works except that it evaluates the conditions from top to the bottom so the first condition that is true it's going to run that block of code and then it's just going to ignore everything under that if statement so let's jump back into the playground and let me show you how this works so we can say something like let's make a 20 now alright so if we've run this code right here that's not going to run because it's false now we're going to use else space if space and let's say is a greater then 15 and then I'm going to print a is greater than 15 right so if you run this if statement what would you expect to happen it would evaluate this right and since that's false that's going to skip down and it's going to check this which happens to be true and it's gonna print that so let's give that a run we've got a is greater than 15 printed down here now let me show you something else what if a was 5 and then we changed this condition like that so this condition test is a less than or equal to 10 and this one is is a less than 15 they're both true right I guess I'm gonna have to change this to or us it doesn't make sense so that both of these conditions are true what would you expect to happen when I run my playground right here well it evaluated this condition which happened to be true so it jumped into here this fork of the road right and it executed that branch of code and it ignores everything else it doesn't check the second condition at all so that's really something to keep in mind so another cool feature of the if statement is that you can stack these elsif clauses if you've got more things to check more conditions to check you can just add them to the bottom like that so if a is greater than you know 30 I'm just making stuff up at this point but you can keep going and keep going the only thing is that you don't want to make it too too long there is actually another kind of decision tree sort of structure that you can use it which I'll tell you in the next lesson but in this one just keep in mind that you can check multiple conditions but you don't want to abuse it now I want to tell you about this last feature of the if statement which is the else clause so the else Clause is kind of like a catchall bucket if none of the conditions at the top evaluate to true it's going to keep checking from the top down right if none of the conditions above the else branch is true then it's just gonna end up executing the code inside of the else branch so the way you include this else branch in your if statement is you use the else keyword and then you just open a set of braces there's no need to specify a condition because remember the point of the else branch is to execute some code just in case nothing above it got executed so let's jump back to the playground and take a look so we've got a is less than 10 a is less than 15 and a is greater than 30 well there's a gap right in between 15 and 30 so if I said something like you know a is equal to 25 and I ran the code right here nothing would execute because none of this is true let's just print something here print a is greater than 30 all right so nothing gets executed right here but if I add an else branch right open up a set of curly brackets or braces here it is something else so why don't we give that a run and you can see that indeed it falls into this catchall branch of code so now I've shown you all the basics of the if statement however it can get a lot more complex because your conditions inside your if and else if branches can get really complex let's say we introduce another variable here let B equals 10 you can start to change these conditions together so for example if I wanted to check that a was less than 10 and also that B is greater than 5 and I want both of these conditions to be true in order for that branch to be executed I can use the double ampersand symbol which represents that I want both of those conditions to be true in order for that branch to be executed so let's do B is then I say greater than 5 or less than 5 I think less than 5 and this actually would not be true right because a is 25 and B is 10 so it's gonna skip here so why don't we modify this a little bit why don't we say a is less than 10 and B is greater than 5 so while this part is true let me just run this and I'll show you what the output is right it still falls into here why well although this is true this is not true and when you use this double ampersand sign right here you're basically saying that you need both of those conditions to be true in order for the whole condition to be evaluated as true however if you don't care and you only want one of those dishes to be true you know eitheror then you can use the or operator which is actually a set of double pipes I don't know if they're called pipes but this key is on on my keyboard at least is above the return key and you have to hold shift to get them so double pipes will give you the or operator and let me run this code to show you what that looks like so we come into here and execute this now this this statement is a little bit misleading now so I'm just gonna call that branch one branch to branch three and let's say I'm say catchall all right so I can run that and show you that this gets printed because we're using the or operator either if either a is less than 10 or B is greater than 5 then we're good we're gonna execute that branch and that's exactly what we get here branch 1 now I'm going to blow your mind further because we can further chain these things so what you can do is you can wrap this condition right in a pair of parenthesis like this and then you can say and let's say we've got a third one and let's say we want either B is greater than 5 or a is less than 10 and you know C is equal to 1 right and if we run that it would come into here because this part evaluates the true and this also evaluates to true now we can even go further and we can start wrapping that in a pair of parenthesis and you can test as many things as you want and you can build this massive condition but just keep in mind that the more things you put in there the more complicated it's gonna get and the harder it is for anyone to understand I want to draw your attention to one thing though and that is this equality operator here when we're testing equality we don't use the single equals operator here because remember that's for assignment when you do that you're trying to assign one into the constant C when you want to test for equality you use double equal sign and you when you want to test for inequality you can use exclamation mark equals and that is testing that C is not equal to one so if I run this code right here I would get catchall reason is because although this evaluates to true this does not evaluate to true and because we're using the end operator there we need both sides of that to be true now if I change this to an or and I ran it we would get French one because even though this isn't true this is true so it's kind of a little bit of logic there which is fun to do and it takes a little bit of practice to wrap your head around now what I wouldn't do highly highly recommend that you do not do this is don't memorize these key words don't go and try to memorize all I need the if keyword I need a condition here all the operators I can use don't do that because I'm gonna introduce more keywords to you and more syntax to you and it's not going to be fun for you to try to memorize it and it's not practical I've talked all about being practical and what I want you to do instead is spend 30 minutes take a look at the worksheet for this lesson try out the if statement on yourself on a playground and in 30 minutes of learning you're going to learn a lot more and it's gonna sink into your head a lot more you're going to remember it a lot more than it would if you had try to memorize this so how to recommend that do instead of trying to memorize remember I have a swift cheat sheet and worksheets for you to practice what you've learned in today's lesson I highly recommend you go through that because I don't want you to make the same mistake that I did when I first started now let's do a quick recap you learned that you can use the if statement in order to execute code based on a condition you also learn that you can use the else if Clause to specify alternative branches of code to run based on other conditions and finally you have the else Clause to run some code if all of the conditions above it are not met now one key thing to remember is that the conditions will be checked from top down and the first condition that is true that's the branch of code that is going to be executed and the rest of your if statement is going to be ignored now if you haven't already make sure you hit that subscribe button below to support the channel alright great job on this lesson just click over to the next one and we'll talk there