hi welcome to lesson 9 this is a fun lesson today in this video we're going to make the card images change as you tap on that deal button let's jump right in so here we've got our Xcode project the first thing we're going to do is try to change these images through code click on this UI image view and then in the inspector panel you can see here this is the image property and in the drop down we can simply select let's say card 10 alright for that one let's click on this guy and let's change that to card 13 so we've got a 10 and a king this one's got its image property set to card 13 and this one here the left one has got its image property set to card 10 now let's set them back to the back because we're gonna try to do what we just did through code let's jump into our view controller and let's go down here to the deal tapped function this fires when the deal button is tapped we're gonna erase that line that printed out the deal text in the console and so we've got an empty function and let's just scroll up a little bit to remind ourselves that the left image view is connected to this property and the right image view is connected to this property alright you can see that this property is type of UI image view and this property is also a type of UI image view so let's go down here and let's type left image view in order to access that object that we have in the storyboard and let us use dot notation to access the image property now you can see that on the left hand side here it says UI image don't mistake this for a UI image view which is what we have here a UI image represents an image ok and the UI image view which is what we have you know up here the left image view in the right image view these are used to display UI images so going back here let me show you that autocomplete menu again let's delete that and hit dot and then tap image you can see here the description for this property says the image displayed in the image view so what we have to do is actually we have to assign a UI image object to this image property because this lefthand side tells us what data type that this property expects so let's go ahead and choose that and we are going to hit equals and now we are going to create a new UI image object now UI image is also a class from the UI kit we're going to do this UI and make sure you're typing you know capital u capital i' and that capital i' and then all lower cases ma GE it's actually it makes a difference in matters same thing for here this image property is a lowercase I so when you're following me typing out this code you gotta kind of have to type it out a letter for letter and also another mistake I've seen before is make sure you have spaces before and after your equal signs something like that is not the same thing alright so go like that and then in order to create a new object of that class remember you use the rounded brackets like that so here we are creating a UI image object and we are assigning it to the image property of the left image view so it's going to display this UI image but you know what this UI image is empty it we haven't specified what image we want to show from the asset library right in our asset library we've got all of these great card images so back in the view controller here the UI image class actually has a way for us to when we create that object pass in that image that we want the UI image to represent as a data input so let me show you what that is I'm going to open up the left bracket you can see here you could just create a UI image object with a set of brackets like that or you can choose one of these functions that lets you pass in a data input and which returns a UI image object presenting that data input let's scroll all the way down to this one here named and you get to pass in a string representing the asset name that you want this UI image to represent so go ahead and select that and then you're gonna pass in a string right let's put card 10 now this actually also has to be exact if you go in to your asset library if this saves card 10 with a lowercase C with no space in between the D and the 1 you know word for word letter for letter character for character you have to use that exact same asset name here otherwise it's not going to find it so this line basically you are accessing the left image view on the storyboard you are accessing its image property and then here you are creating a UI image object using a special function that lets you specify the asset name that you want that UI image to represent and then we are assigning that object to the image property and that's actually going to do the trick so if we run our project right now you are not going to see it because we haven't tapped on the deal button yet but as soon as we tap on this deal button it's going to run this deal tapped function and it's going to change see if this looks like an empty space for you that means you might have either made a typo in the asset name here or you might not actually even have the asset in your asset library here so double check those two things now we're going to also change the right card so go ahead and do right image view dot image equals UI image open that up you could use autocomplete go all the way down named like that and then we'll pass in card 13 and let's press command R to run the project or you can just tap on that little play icon up there and let's tap on the deal button and then you're going to see that happen if I tap on it again nothing's gonna change because our code just sets these two image views to these two specific images now the next thing we have to worry about is how do we randomize it when we tap on this deal button well in order to do that we're gonna have to learn how to generate some random numbers so let's go down here and let's generate a random number we're gonna store it into a constant let's say left random number equals and there's a special function that we use it's called arc for random and as you start typing a RC it should actually pop up and you're not going to use arc for random you're gonna scroll down a little bit you're gonna use arc for random underscore uniform it's gonna let you specify an upper bound for you to randomize on and so we have cards number let's go back to our asset library here cards number two all the way up to 14 however it's we can only specify an upper limit for that arc for random underscore uniform function so that function is actually going to randomize an integer from zero all the way up to the limit that you specify minus one meaning that if you pass in an upper limit of 15 it's gonna randomize a number from 0 to 14 and if we get 0 or 1 we don't have cards 0 to 1 and we only have starting from 2 so I want to randomize from 0 to 12 and then add 2 to the result which is going to give us the same thing so in order to randomize all the way up to 12 we have to pass in an upper limit of 13 because that's how this function works here when you specify an upper bound let's say we put in 13 it's going to go from 0 to 12 and then what we're going to do is we're going to add 2 to that result and this is going to give us 2 to 14 which is exactly what we have in terms of the card names and now I think you're getting an idea of how we're going to do this randomization so what I'm going to do is actually randomize two numbers select write random number equals art for random uniform and we are actually going to do the same thing for the right side and we just want a different random number and we're going to print this out so let's try it out print left random number is and then remember we learned how to substitute variables into strings backslash pair of rounded brackets and then we put the variable name so left random number and then after we randomized the right one let's also print that out right random number is make sure you put right random number this time all right and now let's press command R and rerun our app all right and now we're going to click the deal button and we should see the random numbers printed out in the console all right so we've got 9 and 11 2 and 5 9 and 14 and 13 and 11 and we can keep going and I just want to make sure that we don't see any moves ero ones or anything beyond 14 because we don't have those cards all right so we can generate random numbers just like that and now going back to the Xcode project here's a neat trick if you want to stop a line of code from running but you're not sure if you might need it soon you can actually just put two forward slashes and treat it as a comment just like that and that line of code is now treated as a note or a remark so it's not going to be run as code and then later when you need it you can just erase those two forward slashes like that and then you know you still have it but I want to warn you against doing this too much because it can get pretty messy if you just leave commented out code everywhere so only use this in a very temporary sense because not only can you comment out a line like this but you can actually comment out a whole chunk of code or a section of code if you do forward slash star you can see how everything turns green beneath it and where you want it to end you go star forward slash like that so everything in between these two symbols is going to be treated as a comment so that's how you comment out entire chunks of code let's delete that all right so now I think you can see how we are going to combine this random number with setting the image right we actually just did it up here we're gonna use variable substitution so instead of card 10 let's erase that slash and then open up a pair of brackets and then here put left random number and then down here instead of 13 let's erase that slash open up a pair of rounded brackets and put the right one all right and now we can actually just run our project press command R and you can see that the random numbers are being basically combined with card to generate our asset name so that's why the cards are named as they are here like this now if you're clicking through these cards and some of the times you see an empty card or a blank card that probably means that one of your assets might be named incorrectly because the reason why it would be blank is because I can't find that asset name in this lesson you learn how to change the image of a uiimageview through code he learned how to randomize numbers and insert variables into strings I can't stop tapping the deal button in the next lesson you're going to learn how to update the labels and count score if you liked this video please subscribe to my channel by hitting the subscribe button below and if you don't want to miss a single video make sure you tap on that Bell icon as well thanks for watching and I'll see you guys in the next lesson