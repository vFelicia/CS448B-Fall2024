hello and welcome to lesson 7 of how to make iPhone apps with no programming experience in this lesson I'm going to talk to you about stack views I'm going to tell you about what they are and how they're used and then finally how we are going to use them to create our card game user interface so let's take a simple example like this form on this iPhone app it's got two labels and two text fields and button so in order to lay this out with auto layout constraints you're probably going to have to add a rule to dictate how far down the label is from the top of the screen and then how far down the text field is from that label and then from that text field how far down is the next label and so on and so forth like that describing kind of the vertical positioning of those elements and then next you're going to have another set of rules where you're describing the horizontal position for each of these elements so how far to the right is each label position and how far to the right is each text field position and for the button as well so each of those things is a rule there's an easier way so the stack view is a container view it can contain other elements so instead of putting all of these labels text fields and the button into our view directly we're going to put them into the stack view so that the stack view contains all of these elements and then we're going to place the stack view on The View so why would we want to do that well the stack view allows the elements inside of it to stack on top of each other either vertically or horizontally in this case we're probably going to want all of the elements to stack vertically and then with one configuration you can change the amount of space in between each element as well so rather than having a horizontal and vertical rule for each element uh we're just going to position the stack view how we want it and then we're going to let the stack view handle the positioning of the elements inside of itself we simply have to tell the stack view to stack all of the elements inside of it vertically with a space in between them which we can specify how small or large that space is like I mentioned as well you can also specify that the elements are going to stack horizontally so let's say if you have three buttons that are side by side instead of specifying rules for each of those buttons to position them you can just throw them all into a stack view specify that the elements inside that stack view are stacked horizontally and then indicate an amount of space in between each element the beauty of Stack views is that you can put a stack view inside of another stack view so take this stack view for example that we have containing the three side byside buttons well I can throw this entire stack view into the first stack view that I specified with the form and I can put this stack view as the last element of the stack in our first stack View and then our user interface is going to look something like this awesome right and you're not just limited to nesting two stack views you can Nest as many stack views together as you'd like in order to build your user interface so once again let me show you what the UI would look like without stack views look at how many Auto layout constraints we would have to manually specify and then now look at it using the two stack views all right now let's quickly jump into xcode and I want to show you exactly how you would specify a stack view in interface Builder so here we are in an xcode project that I created just for the purpose of this demo and what I'm going to do here is I'm just going to drag through three buttons from my object Library onto our view so let me filter our object list just going to add a button here instead of dragging three buttons actually what I can do as a shortcut is highlight that button and then press command D on my keyboard to just duplicate that button and so I can do that like that so now I have three buttons If you don't want to do the command D way you can always just drag three buttons from the object Library down here so in order to put these three into a stack view I can highlight the three either from here in my document outline or I can hold down command and click each of these to highlight all three of them but it's important that we have all three of them highlighted because we want all three of them to be included into our stack View and then we're going to go down here and click this button that says stack okay and if you notice in the document outline line all three of these buttons now are inside of this stack view container view okay and they're still stacked vertically and that's because if you highlight the stack View and you go over to the attribute inspector on your right you can see here that the axis is vertical now I can change it to horizontal like that and now they're uh stacked side by side but without any sort of Gap right so I just need to bump this spacing up so let's say 30 and now you can see that they're all uh there's a space of 30 in between each button so instead of specifying Auto layout constraints for every single button all I had to do was throw them inside a stack view configure it and then now all I have to do is position the stack View using Auto layout constraints so I save a lot of time and it's a lot easier to troubleshoot and debug to if you have layout issues so I'm just going to the easiest thing is just horizontally and vertically Center that stack view so there we go I just had to specify two Auto layout constraints for my stack view as opposed to probably six of them if I didn't use the stack view in order to position each of these buttons now how are we going to use the stack view to build our war card game let's take a look so what I have here is the completed UI for the war card game and I'm showing you this because usually when you build an app before you start you're already going to have an idea of what the user interface is going to look like either as a design composite from your designer or maybe it's just a sketch in your notebook that you created yourself but when you're looking at that user interface when you sit down an xcode to build it you have to figure out how you're going to arrange these elements and when we're thinking in terms of Stack views you're thinking in terms of which elements are side by side and which elements are on top of each other so let me take this war card game design and break it down for you to show you how it's comprised of multiple stack views so if I'm looking at this user interface the first thing I'll notice are these two prominent cards side by side so in my head I would already be thinking that these two cards belong in a horizontal stack View so they're arranged horizontally next I noticed that here in the player label and this number here these two are stacked on top of each other so this is probably going to be a stack view itself and likewise here is another label and then another number label these are stacked on top of each other so this these two elements are going to be in their own vertical stack View and then look at how they're arranged side by side side with a large gap in the middle so I can actually put this stack view together with this stack view inside of a horizontal stack view like that so what we end up having is this horizontal stack view which contains the score labels we have a button on top of that and then on top of that we have another horizontal stack view which contains the two cards and on top of that we have an image so you can see that all of these elements are arranged on top of each other vertically stacked so I can throw all of these things into another stack view so on the left hand side you can see that's exactly what I have here I have the background image first of all that spans uh from edge to edge and that's not inside a stack view uh because that's not really stacked on top of anything it's really behind everything so I put the image as the lowest element or the base element you could say and then I put the stack view in front of that uh but this stack view contains all of the other elements and it's a vertically aligned stack view so what we have in here is the logo first and then we have a stack view which contains the two cards it's a horizontally aligned stack View and then we have the button below that and then we have another stack view which contains two stack views two Mini stack views and each of these mini stack views are vertically aligned containing two labels but this stack view itself is horizontally aligned so that's why this stack view is beside this stack view right here uh and there's a space in between them so hopefully this lesson gave you an idea of how you can construct your user interface using stack views in the next lesson we're actually going to build out this user interface so hope to see you there thanks for watching and I'll see you later bye