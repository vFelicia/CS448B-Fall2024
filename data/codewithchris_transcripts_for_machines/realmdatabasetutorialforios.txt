hey code crew what's up have you heard about core data before it allows your app to store and retrieve data locally on your device handy stuff for sure right in today's lesson I'm going to show you very quickly how to use something called realm database it also allows you to work with local data sets on your device and it's very easy to set up and use best of all it's free because it's open source in the next few minutes you're gonna see just how easy it is to get up and running with realm database alright let's get to it alright so the first thing we're going to do is visit realm io go up to the top under products open it up and click on database now the platform is a paid offering from realm that offers data synchronization and other stuff like that if you need it you can check it out but we're going to be working with the free open source realm database so go ahead and click that this is click start it brings you to some documentation so go ahead and choose Swift and we can use cocoapods to install the realm libraries which is great for us it's so easy to do if cocoapods is something that's new to you make sure you check out the video that i'm going to display on the screen right now or in the description below where i show you how to setup cocoa pods on your machine it's basically helps you manage thirdparty libraries and to install and update and remove them very easily alright so we're going to set up our Xcode project now and use cocoa pods to install the realm libraries let's go ahead and create a new Xcode project a single view app I'm gonna call this realm demo 3 because I've done this a couple of times now and we're gonna save it on the desktop and then we're going to go ahead and close this and then we are going to open up terminal we're going to navigate to that project directory realm demo 3 now that I'm in my project directory I'm going to use the pod init command to initialize my project to use cocoa pods now I have a pod file which I am going to open up in a text and specify that I want to use the realm libraries so if you can remember from the documentation here the pot is called realm swift alright so let's go ahead and add this to our pod file save it and we're gonna go back to terminal and then type in pod install and this may take a while for you if this is the first time you're doing this but because I've done it a few times this part is really quick now we are going to go back to our project directory and open up the XC workspace file now you can see under this pods project we have the realm libraries at this point what I usually like to do is build the project just press command B just to make sure that everything is compiling and that we're starting off with a code base that compiles and builds now this could also take a while so while this is going on let me explain to you kind of how Realm works now we talked about realm being a local database so that means all of the data that you create store retrieve it's all locally on the device I'm how it's all stored and managed is in this one file called the realm file so when you're creating data and you're saving it to your local database what you're actually doing is you're opening up that realm file and then you are putting data in there and when you retrieve data you're also opening up this realm file and you're grabbing data from there now realm has this app called realm studio which is essentially like a you can think of it as a realm file browser which lets you open up any realm file you need and you can browse the data and you can also edit it and you can add data but there are some limitations to it you can't like change data types of the columns and stuff like that but it's still better than not having it at all now you can download realm studio if you scroll down a little more you can see here you can get a image what it looks like here and you can download it for a couple of different platforms so go ahead and do that I already have it installed on my machine in fact maybe I'll launch it now just to show you guys what it looks like now there is one tricky thing with using a roam studio to open up your realm file and that is that you need to know the path or the directory path to your run file in order to open it up okay so if you click this open round file it's gonna open up a Finder window for you to navigate to your run file and open it up I have a demo one that I can just open up and show you what it looks like so you can see the classes on the lefthand side here and so in our demo that I'm going to show you today we're gonna create a new custom class and then that's going to show up on the lefthand side and on the righthand side where you see like these columns of data each row represents I guess a record or an object of that class you can think of it each of these columns is a property of that class so don't worry if this sounds confusing right now we're gonna go into Xcode and we're gonna try this out oh yeah the tricky thing is that you need to find a directory path to your run file right I'll show you how to do that very easily alright so let's go back to our Xcode project it's compiled succeeded you're gonna go into the view controller and here in the viewdidload I'm just gonna write some code here let's import realm swift at the top so we can basically specify that we're using these rome libraries so the next thing we're going to do is to open up the realm file for this app and you can do that just by creating a new realm object now if no realm file exists for this app when it executes this line of code it's going to create one but otherwise it's going to open up the realm file and the reason we need a reference to the Rome file as I mentioned before whenever we save data or retrieve data we are working with that realm file right so we need a reference to it so this is going to give us that now doing this can throw an error for instance if it doesn't have enough space on your device to create a new Rome file or maybe I can't find the Rome file or something like that it could throw an error so you can either perform error handling or you can just do this and you can ignore the error handling which is oddly enough what they show in the realm documentation but just understand that I think it's rare but this could throw an error and if you wanted to be extra safe about it you can wrap it around in a do catch block and do some error handling for this part all right so this is going to return our reference to the realm object we are going to assign it to a constant called realm and now for the part about finding out the path of the realm file so we can open up in Rome studio we can just output it to the console so we can find out what the path is to the Rome file by going around our configuration the default configuration and printing out the file URL so let's give this a try I'm going to run the app right now and there's not going to be anything in our database because we haven't saved anything yet but we're going to try to open it up anyways so you can see what it looks like so now inside the console you can see this part you see our run file is called default realm and there's this path to that file in the simulator well what we're gonna do is just copy that and the easiest way to open this guy up if you've already got realm studio installed is just type open space and then paste that URL or file path sorry and it's going to open up that realm file using rum studio as you can see here there's just a bunch of like system classes here because we haven't created that custom class we haven't saved any data to our loan file yet all right so we can go ahead close that we're going to now create a custom class and try to save some data to the rum file I'll show you how to do that let's choose new file choose a swift file we're going to create like a cat class something fun and we're going to import realm with the Swift so class cat now the way that we indicate we want to save this class or instances of this class into the realm file all we have to do is make sure that that class is a subclass of object now object is actually a realm class and it contains all of the code under the hood to save instances of this class into the run file and retrieve it and you don't have to worry about any of that all you have to do is make sure that any data or classes that you want to save into the realm file that you subclass object now in terms of properties of our cat class we can have something like name we can have like a color we have a gender and if we want to save these properties into the realm file as well they're going to show up as columns in the database all we have to do is make sure we have objectivec dynamic these keywords here in front of those properties so I'm going to go ahead and save this class and then in view controller let me create a new cat object and let's use a far because name is equal to let's call this cat moe let's it was a male cat and it's going to be color is going to be orange alright so we already have a reference to our realm file from up here it's so in order to add this object essentially saving it to the round file we have to wrap this in a write statement now every time you need to do something with the run file such as you know you're changing it adding something to it updating something in it deleting it something from the realm file you need to wrap it in this realm dot right statement or method in here we are going to realm dot add and we're gonna add my cat like that again this method call can throw an error so we need to either do some error handling with a do catch statement or just put or just do try exclamation mark to ignore all of that ignore any potential errors that might be thrown so let me run this now and we can take a look at the data inside of our run file alright so here is that file path again then change out the change okay so here we have our cat class on the left now right and we have this object and we've successfully saved this to our our Rome file now if I run this again this time let me change my cat to Joe it's gonna save it another it's gonna save another row into the room studio so you can see it there so from realm studio like I mentioned you can actually edit the data so if you just double click and then you type in black so you see that changes and we can do it again Tom gray so it's running the project now and you can see it appear in Rome studio now I want to show you how you can retrieve some data so for instance if I wanted to get all of the cat objects back from my realm file I could do realm dot objects and you can see here you pass in the type of the object that you want to retrieve and it gives you back a results object which lets you you can browse through your objects that way it kind of works like a know rate so objects we're gonna pass in the cat datatype so the way we do that is by using cat dot itself here and let's assign this to let's say let results equals and then what we can do is let's say we're going to print out results the first element let's print out the name of that guy okay so you can see there in the console it says mode now you can also do some filtering so for instance if you want to look for cats with the name mo or you want to look for gray cats or something like that there is a method you can use called filter and so it works like this we can say name equals and you have to wrap it in quotes like this let's say I'm say Jo and we can print out the number of results that we get back instead so you can see here we get one result if we change the color let's say two of the cats were orange instead you know and you search color is equal to orange then we would expect to get back to results right so you can see here that there's two in the console now furthermore you can also sort so you can sort by certain key and there's different things you can sort by I would recommend if that's something that you need to do take a look at the documentation there's a lot of good information here so that's a simple example of how easy it is to read and write data and realm database now there's obviously a lot more that you can do with realm database but I hope this video gave you a taste of just how easy it is to write and read data using room database now if you liked this video please make sure you subscribe to my channel just click on that subscribe button below and if you want more tutorials like this one make sure you visit my website coded with Chris calm and signed up for the newsletter because I release videos to the newsletter before they get published anywhere else now I want to turn it over to you does roam database seem like something you could use for your app let me know by leaving a quick comment below alright so thanks for watching and I'll see you guys next time bye for now hey did you join my free Facebook community yet that's where I hang out along with a ton of other people learning iOS just like yourself I also post early access to all my videos inside that group before I put them on YouTube you can also get help with any questions you're having visit the link below click on the join group button and I'll approve your request right away alright so I'll see you in there talk soon