hey guys it's Chris here I'm back with another video from my course and this one deals with how to troubleshoot some landscape orientation layout issues as well as some issues with checking some text fields for empty empty text fields before submitting data to our database before I jump into that lesson I just want to mention one thing and that is that I'm not posting these videos from my course to my youtube channel to entice you guys to join the course it's just that I've been working on the course and I haven't had that much time to produce new YouTube content and I don't want to leave you guys hanging so I genuinely think that what I'm teaching in this course lesson is applicable and helpful for you guys as well and so that's why I'm posting here so don't there's no hidden agenda I think that most of you already know that I do have a course on my site and I've been running it for three years so it's nothing new this is a bit of a new content some new modules for the course and I recognize the courses aren't for everybody so don't be scared that now I'm only focusing on the courses and not YouTube that's not the case I do have a lot of content planned for the YouTube channel coming up it's just that I want to finish off the course first and I don't want to have a dry spell on my YouTube channel so I'm posting some stuff from the course here and I hope you guys can appreciate that and I hope that it's helpful for you guys too okay so now on to the video this video is going to be talking about the landscape view for our guidebook app and you can go to you can rotate the simulator by holding down command and pressing left or right you can notice immediately that the images in the back of the cells they're stretched with twice so that's going to be a pretty easy fix other than that the scrolls fine let's check out the map there's our map that works fine as well let me jump back to places let's go into one of these guys now it's going to harvest and you'll notice that the image kind of overflows its boundaries so we're going to have to set the clipping for that so it doesn't overflow and maybe adjust the content mode as well for that to reposition it and this description is fine the reviews these reviews are fine I guess there's some empty ones here which now that I'm reminded it to do that we have to prevent people from submitting empty reviews and let's write a review this guy is a problem because there's not enough space for it so let's go ahead and address these problems one by one first of all we're going to jump into the storyboard and for the uiimageview here I'm just going to set the content mode by default of scale to fill and I'm going to change it to a spec to fill that's going to correct that problem of the stretching now moving on to the detail view controller here if we take a look at the this is the cell image view right see content view weight looking at the wrong thing here so down here in the document outline this is the place image view this is the top half view here what we can do actually is we can set for the top half view can set clip to bounce and what that's going to do because the image view is inside of it if not going to show that overflow it's actually going to clip that so let's quickly run our app and take a look at our two changes there okay so right away you can see that these are no longer stretched and now you can see that it also doesn't overflow okay so let's address this one here this problem of there not being enough space for this child view controller right now this top path is half the screen and this bottom half from this purple line downwards is the second half of the screen while this works beautifully you know for a profile view it's again half and half it doesn't work so well for a landscape view so what we can do is specifically for the landscape view change it so that we do maybe 25% for the top and like 75% for the bottom you know just a different ratio so we give ourselves more space on the bottom ok so now let's go back into our storyboard and do some cool stuff with the constraints and take a look at which constraint we have to modify here this one bottom half equals the top half for the width note that's not the one we want we want the height one so this one is bottom half the height is equal to the top half height and by making them equal they will be 50/50 right now this multiplier is the the value that I want to change for the landscape orientation so what I can do is I can pull this up here this tray here which is dictating what size class we're looking at if we tap on this landscape icon right here it's going to change the size class so you can see this is compact width and compact height if I go back to the portrait see this is a compact width and regular height so let's switch it to the landscape one and for that same constraint that I have highlighted here bottom half height is equal to top half height what I want you to notice for these constraints that we have here is here it has this check mark beside installed and that is basically saying that these constraints are installed for any size clause so no matter what device what orientation this constraint exists what we want to do is we want to let me just get that constraint back here what we want to do is we want to specifically install a constraint for this size class compact within compact height so how you can do that is you can click this button very first traits and you can say that I want to install straits based on both the width and the height and it's going to take the size class that you're viewing so I'm viewing the landscape one which is compact click on back type so instantly this bottom part turns blue and now whenever I'm working with constraints it's going to install it specifically for this size class rather than for everything so I'm going to highlight that constraint that we're looking at that equates the two halves for equal height and I'm going to click this plus icon and I'm going to add this variation for compact with compact height and I'm going to add this variation down here and I'm going to uncheck installed so that it's not so that this variation that I'm about to do is only installed for the combat with combat height and I'm going to change this multiplier here so for the bottom half equal to the top half I'm going to put a multiplier of two and that's going to basically say the bottom half site should be two times greater than the top half height now if for some reason in your project and you might have this reversed you might have the top half equals the bottom half in that case you would want the top half to be equal to 0.5 times the bottom I hope you understand what I'm saying this constraint is basically setting the first item so if you have the first item as the bottom half like I do I want the bottom half to be two times larger than the top half right that's going to give me more space in the bottom half however if you have the first item as the top half then you're basically specifying the height for the top half so you would say I want the top has to be half as big as the bottom half height so that's why you put 0.5 if your first item is top half and if your first item is bottom half you would put 2 and effectively that would give you a proportion like this where the bottom half is 2 times greater than the top path and again this is only installed for this size class which is this landscape size class so I'm going to click done varying now and I want to make sure that when I go back to the portrait view right that you can see that constraint which I modified now is greyed out why is it grayed out because you can see it's only installed for compact height and compact width and now I am looking at the compact width and regular height size clause so what I want to do now is I can very for traits again based on the width and the height and now I can create a new constraint for the two halves so hold down control drag from the bottom half to the top half and let's check this one equal Heights so taking a look at this new constraint that popped up you can see this one is only installed for compact width and regular height and this one says the bottom half should be equal to the top half making them 50/50 now I'm going to click done varying now when I click the landscape one see it uses the other constraint which is only installed for this guy and it gives more room for the while if I go back to the portrait it uses the other constraint which makes them equal house and this is going to give me more space for that write reviews child view controller so let's run the project okay so you can see here now that I can actually write in the text fields now while I was working on this one of the things that really bothered me especially in the landscape view because you don't have much space is tapping on an empty area to dismiss the keyboard I did this a lot I actually tapped this area because this is the biggest empty area you can tap and looks empty although the button is actually this full width so I would tap on this empty area thinking that I just want to dismiss the keyboard but I would actually submit the review so I found that really annoying and that is probably bad bad design on my part so I'm actually going to color this button give it a background so you can see where it starts and where it ends so I'm just going to click this submit button here and quickly change that background color I'm going to give it this gray color but at the same time I want to make it kind of have rounded rounded edges because these text fields also have rounded edges so let me just double check in the right reviews child ooh controller yeah we do have an outlet for that submit button so I'm just going to and button set it right here submit button layer dot corner radius equals five point zero okay so now let's work on this to do here submit tap check that the text field text video are empty and I'm going to just throw up an alert if they are empty and exit this function if they try to submit kind of an empty text field or text view so let's say I can check it like this if name text field text you can see that this is an optional one right so if I can if I say it's either nil or maybe name text field oops double equal remember so if it's nil or if it's completely empty then return to do show and alert however this only checks if the text field hasn't then basically doesn't have any white space in it or is completely empty string if they for some reason go in the text field and they start pressing spacebar like that this isn't going to capture that so what we must do is actually take this text and we need to strip out all white spaces and then check if it's empty string and you can actually do that pretty easily using some builtin functions so you can go trimming characters here and in the character set you can type in character set dot white spaces and new lines and that is going to take that text field and it's going to trim out all the white space and then compare it to that okay so I'm just press ENTER there and we're going to check if the Revue textview dot text and you'll notice that this one is not optional here right so there will be something in it so I'm just going to check it for that and again we're going to have to trim it for the character set dot white spaces and new lines so those are the three things that we are going to check in if any of them are empty we're going to show an alert so let's quickly drum up an alert here I don't like using the word error I'm just going to say almost there please double check that you've filled in the name and the review fields and for the style we're just going to have this as an alert and we're going to have to add an action to it so the user can dismiss the alert so let action equals UI alert action okay style is default handlers no and then we're going to add the action to the alert add action create another and action so be alert so I'm going to use present we're going to present the alert let's have true for the animated and nothing for the completion and then this is key because we want to get out of this function after this point so that we don't actually save the review to firebase so let's try this out here okay so see even if I put some spaces in here I try to click submit you can see that it doesn't allow me to do it it doesn't allow me to do it so anyways that's great one more thing that I want to address is this right here it looks kind of strange you know it's functional but it doesn't look centered you know write a review should probably in the B in the middle there in description should be in the middle so I'm going to show you how to vary that as well and it's actually easier than what we had to do for the other one okay so we're looking at the detail view controller again and you can see here that this nav button stack is is what we need to change right if I go into the landscape orientation here you can see that it does look that that kind of strange spaced out look that it's got going on what we need to change is we had a constraint here for the width of the nav button stack you can see here that we are saying this constraint is saying actually the nav button stack width is equal to the bottom half width minus a constant of 40 and that is going to take 20 from the left 20 from the right what we want to change for the landscape specifically is to change this constant to maybe something like 150 so I was playing around with these numbers and you know 150 or 140 seems about right to me right now it is just minus 40 so negative 40 so what we can do is again we can vary four traits so this is the constraint in question let's vary four traits based on the height and the width because I am looking at the landscape right now and this time I'm going to add a variation for the constant here so I'm going to click plus and this is just double check that compact compact at that and I'm going to change that for negative 140 and I'm going to click done varying now so you can see that when I go into portrait mode it's going to basically use this constant for everything but if I'm in this size class compact width compact height it's going to use this so my constraint is installed for everything right I didn't have to change this part I was able to add a specific variation for the constant property of my constraint which is really cool the reason why we couldn't do that with the other constraint you see here this bottom half equalled the top half constraint we we didn't we couldn't do that we have to create a separate constraint and kind of make this one only installed for this one because the multiplier which we wanted to vary doesn't have that ability to create a variation for that property whereas the constant does so with this nav button stack it's a lot easier to do and just create a variation for that specific constant you don't have to create a new constraint all right so see looks like that and then if I go back into portrait mode looks like that okay so I hope that was helpful and I'll see you guys in the next lesson bye for now