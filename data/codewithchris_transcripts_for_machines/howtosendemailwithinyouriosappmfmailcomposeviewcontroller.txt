hey guys welcome in this video I'll show you guys how to implement functionality where your user can send email from within your app and a lot of apps use this functionality to send feedback or report bugs or something like that where they click a button in the app and it brings up their compose email dialog and the user can just you know you can prefill some information like the to field and the subject field then the user just types in their message and then hit Send so it's very simple to do that and I'll show you how we're going to start by creating a single view a demo Xcode project and we're gonna call this one mail demo I'm just gonna save it on the desktop the first thing we will want to do is scroll down to the frameworks and libraries and add a framework called message UI framework so just type in message it'll show up double click it to add it just verify that you've added it there and then we're going to go into our storyboard and let's add a button so make sure you're looking at this objects tab that's a common problem and this button is to toggle this pane if you don't see it at all so type in button we're going to drag it here I'm just gonna elongate that a little bit and I'm gonna call this button have hoods sendmail and keep in mind there are a couple of tabs here too so if you don't see anything make sure you're on the attributes inspector tab and that you've highlighted your button in order to see the properties here okay the next thing we're going to do is just open up the assistant editor make sure I'm looking at view controller dot M and I do this pretty much in all my demos just to illustrate some simple some simple concepts and how to's usually invoked by a button and I'm gonna hold down control here and a click and drag into an empty area and I'm just going to name this method send mail tapped so this method is going to be triggered by this event so the button actually has a whole bunch of events that you can choose that's the one we want and that represents when the user taps on the button and lifts his or her finger while still within the area of the button so that's what touch up inside means so we're gonna click connect and now we have this method that's going to be triggered when the user taps the button so I'm just going to flip back to single view here and up here actually I'm gonna be a little preemptive I'm going to go into view controller dot H I'm gonna import here message UI and you'll see why I'm doing it in the dot H and a sec because I'm going to need I'm going to need to access some classes in this framework from the dot H file but first we're going to view controller dot m and upon this send mail tapped method we are going to create a new MF mail compose viewcontroller I'll just call this male composer equals MF mail compose viewcontroller allocate it initialize it and here we can set some properties if we want to prefill some some of the fields we can go male composer set subject to a particular string let's say it's feedback let's say app feedback right and let's do male composer set two recipients and we can do an inline declaration of an array because it accepts an array of email addresses so we can do this and inside our array we can put a single email and say we can put test at test com all right and if you want it to do more you can put a comma and do another email that's the beauty of using an array for that and finally to display the actual compose window all we have to do is go self present this one right here present view controller we want to want to animate it so I'm just going to pass in the mail composer and made it yes so we can see it's sliding up and here it gives you an opportunity to provide a block of code that is going to be executed upon the completion of showing the compose dialog but I don't want to execute any code I'm just gonna put meele and let's run it and give it a whirl actually before we do that let's say construct male compose view controller object and set initial properties display the male composer alright so I'm gonna press command R to run or you can press this icon right here to run it so I'm gonna hit send mail and there we go so we have the subject prefilled and the to field prefilled just like we've indicated here and the user can very simply do that just type in their message and I'm gonna hit send I'm not sure if it actually sent because this is an ax simulator probably not yeah probably not but if this were the actual user's device it would actually send it from their default email account and we want to implement now what happens when the user clicks cancel okay let's say the user deletes the draft you can see that nothing happens right the reason nothing happens is because we need to handle the case when the mail controller is dismissed basically when that event happens and then we got a call something to the effect of the opposite of this right because we manually called present view controller to throw up this male composer dialog but we also have to manually remove it when it's finished so what we do is we go into view controller dot H and we say that this class conforms to the EM F message the MF mail compose view controller delegate okay and this protocol has a method that we need to implement in order to handle that event so I'm going to go to the dot M so we can implement it and it's basically for male composed controller did finish with result and basically this method that this delegate method is called when the male compose dialogue is finished whether that be the user clip to send to send it or they click cancel to cancel it so in here we want to dismiss the male control the male composer so all we do is say self dismiss view controller animated yes and again nothing for the completion block there's one last step so even though the view controller conforms to this protocol and it implements this method that did finish with the result we have to set this view controller to respond to this object so what we do is middle composer dot delegate equals self I'll see what okay actually there's that's not the property I need to do yes that's the one so mail compose delegate is the one that we want to set the view controller as and so the view controller has set itself as the object to be notified when this event happens so let's run it again pressing command R to run it and now we go send mail and if I click cancel the lead draft this time you can see that this fires and it actually removes the the mail compose dialog so if this whole delegate protocol thing is confusing to you we actually go through it in my video course so that might be something that you want to consider joining I use these YouTube videos to show how to do very specific things but if you want a step by step starting from scratch type of learning experience then I provide that in the course so consider checking that out so that's it for this quick video thank you for watching and don't forget to subscribe and share this video if it was helpful to you and I'll see you guys next time thanks for watching bye