okay so what's an iPhone application without some user interaction right so now in this next demo you're going to practice how to handle user interaction for buttons and how to let the user into text into a text box and we'll make that text change the hello world label all right let's do it so we're going to learn how to handle some basic user interaction and get you guys familiarized with how to hook up the UI elements you create in the zip files to the view controller so that you can manage those UI elements so let's get started by creating a brand new project I'm going to go to Xcode create a new Xcode project and I'm going to choose single View application for these settings I am going to just name mine user interaction demo you can name it anything you want actually and for devices we just want to choose iPhone and use automatic reference counting and the other two are unchecked you starboard zone unit click Next and save it somewhere and if you guys forget what the create new project settings are I'll have the link to the article where I explain them in the description of this video so you can go ahead and check that if you're curious okay so let's start by adding some UI elements to our view so go ahead and click view controller zip and then down here in the lower righthand corner now a couple of you guys have stumbled on this in the comments so I just want to point out that in the lower right hand corner here there are a couple of tabs so yours might be on file template library code snippet library the one we want is objects and it's this third icon right here so once you're on here you actually have these UI elements that you can drag on to the screen so I'm going to add a label just drag that onto my view put it in the middle I'm going to stretch it out a bit and then I am also going to add a a button and lastly I'm going to add I'm going to search for text field and add a UI text field to our screen as well so the last practice that we did was a simple hello world that we just put a label on the view and then we renamed it hello world and we ran the simulator this time we're going to allow the user to type in some custom text in here and when they click the button it's going to change the label so I'm going to teach you how to handle that you know basic sort of typing and button handling interaction okay I'm just going to hit the button here and change the name change text okay and what you want to do now is in the upper right hand corner here you see this little icon that looks like a tuxedo well that's called the assistant editor and if you click that you'll see that it opens up two panes so if you've got a small laptop screen it might be a little hard to see if you need more space there's these icons up here in the upper right called view and you can actually hide specific tabs of your interface so right now what we want to really see are the two panes so what assistant editor does is in your main view you've got the zip file here assistant editor tries to show you the companion file for for the file you're looking at so remember we we talked about a class having a dot H and a dot M file so if you are looking at a dot H file and you opened up assistant editor then it might open up the dot M file as the companion file and viceversa so we know that the zip file is a view and each view is managed by a view controller so when we open up assistant editor it attempts to figure out what file I should open and right now it's it's thinking view controller dot H which is exactly what we want and if your file on the right pane is not view controller dot H then here are a couple of ways that you can choose so you can can hit this button here and you can choose or here or if that doesn't work you can hit this little icon right here and you can choose counter parts you know there's a couple of files in your project that you can choose and so once you have the zip file on your left hand side and the view controller dot H on the right hand side what we want to do now is a beause these UI elements to the view controller so that the view controller has references property references to these elements so that we can modify them I'll show you what I mean so on your keyboard you have to hold down the control button and then I'm going to while holding down the control button click and drag and you'll see that there's a blue line following your mouse as soon as you do that don't let go of control and then drag it over here under the interface file sorry in under the interface line in the dot H file and then let go of the click so while still holding control and what pops up is a little dialog asking you what do you want to name your property and I I don't think we've gone through properties in the last lesson yet but keep in mind this is a practice so I'm going to tell you what to do in this practice video and then the following video is a recap where I explain what happened and what the app flow was and kind of go more in depth about what you did for now I just want you guys to follow along and try to practice so what I hadn't type here is I'm going to call it the change text button so this is a very easy way for you to create properties that reference your UI elements by doing this control click I'm go also going to control click the text box and I'm going to call it custom text field and then I'm going to do the same thing with the UI label so cold down control click drag and call it we call it the hello label okay so now we've created three properties that represent the three UI elements and so now our view controller we can reference these properties to control the elements here and so let's let's run our application to see what we get so you know at this point button doesn't do anything and the text field brings up the keyboard but you can't dismiss the keyboard and clicking the button doesn't do anything okay so let's stop it and let's look at how to handle a button press so now what we want to do is we're going to stay in an assistant editor on the right hand side you want to go into the implementation file because we want to create a method to handle the button click so in the dot M file all you have to do is use the control click and drag for the button and then just drag it in an empty space here to create a new method I'm going to call it to change text click now whenever that button is clicked it's going to call this method and if you remember back in the dot H file we've created properties for all of these things so what I can do is I can say first I'm going to store the text in the custom text field in a variable so I'm going to create a new string variable called custom text and inside this variable I'm going to put in the property that we created was custom text field and it has a text property so what this does is it's going to take the text from this custom text field and it's going to grab the text property of that UI element which is the text that the user filled in and I can put it into this variable called custom text the next thing I'm going to do is reference the label hello label and change its text so the label also has a text property I'm just going to assign it the custom text variable so it's going to put whatever text is in the custom text variable into my hello world label so now let's run that and see what happens so I'm going to fill in some text here maybe let's put it something more concrete say hello rightclick change text so you change the text here now this keyboard is still is still up so we got a final way to address that so stop the simulator and what we want to do is say after we hit the button and it changes the text we also want to call a method on the custom text field called resign first responder and this method will actually cause the keyboard to disappear so let's run our simulator and try it out so now I hit hello and you can see the keyboard disappears but there's also another situation where we would want the keyboard to disappear right if we want it to cancel out of it we didn't want to change the text and you want to you know click somewhere out here you want it also to to make the keyboard disappear so what we got to do is add another method so you'll actually see that it will attempt to prefill it for you and in the next lesson when we go through storyboards and navigating multiple views then I talked about method overriding but this is a little preview of what's to come you are actually overriding this method so what happens is when the user taps on the screen it'll trigger this method so that's the perfect method we want to use to resign first responder and cause that keyboard to disappear so now let's run it again and now you can see that I can tap anywhere to get rid of the keyboard and changing the text will get rid of the keyboard as well so that was pretty easy now you've learned how to use a UI text field and you've learned how to handle button presses so now let's go to the next lesson and explain the app flow and talk about what's happening behind the scenes as always don't forget that there are notes in the description below that you can go to the text version and you can ask any questions here or on my site and I will answer them and if you felt that you've learned something please share it with any friends or colleagues that would be interested in iPhone development and help me spread the word thank you so much for watching and I'll see you guys in the next lesson bye bye