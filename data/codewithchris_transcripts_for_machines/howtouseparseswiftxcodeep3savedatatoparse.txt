hey coders how's it going it's Chris here and today we're going to look at saving and retrieving some data from our parse back end from the Xcode project so just to give you a quick recap in the last lesson we had created a parse demo sample application so just ignore all of these other things down here this is the one that we created parse demo if you click into it we don't have any data in here but we're going to be able to see some really soon so let's go ahead and open up the Xcode project which we created in the last lesson we had also integrated the parse library so let me open up that XC workspace file and here we go we added this code to set the application ID in the client key now in the view controller I'm gonna show you how to save an object first and before we do anything let's import parse up here and then in the viewdidload I'm just going to write save an object with some properties and parse everything revolves around something called a PF object so say for example this was an address book application and I wanted to save some information on a friend well I would create a PF object like this so let friend equals PF object and there's an initializer called class name and I'm going to give it a class this is going to be stored in the parse back end with this class name and all objects with this class name are going to be stored together so let me give you an example so let's say friend the the class name is let's say contact okay and I'm going to say friend and I'm going to give it a property name how first name actually like that equals John and another one last name equals Smith and let's say email is John Smith at parse example.com now what I've done here is create a brand new PF object with the class name contact and then I've set a couple of properties just like a dictionary so I gave it a key first name assign the value to it give it another key last name assign the value to it and all this stuff here so I've got this PF object with these things set now if I want it to save it into the back end all I would do is I would call friend and it has a method save right it can either call save and this will synchronously save and throw an error if I can't perform the save and synchronously means that it's gonna pause the execution of everything while it's trying to save but what we probably want to do is save in the background instead so you can see here it saves it as synchronously so we can either just call save and background and not worry about it or we can call save in background with block and this is gonna allow us to handle the result of the save whether it's successful or it failed there's another one called save eventually and as you can read here it saves the object to the server at some unspecified time in the future so even if parse is currently inaccessible so save eventually is okay if you don't need that data saved right away and the benefit is that if the user doesn't have an internet connection at the moment when the user does and they're running the app then it will save it at that point so right now I'm gonna do save and background with block I'm going to double click this block to open it up there are two parameters one is a boolean and one is an error so this one is just this boolean determines if it's successful or not and this error if it isn't successful will contain an error message so inside this block this block of code after it saves we can say if successful the save worked else it failed to save so we can execute some code in either case like this so take a note that this code is running in the viewdidload of the view controller so as soon as I run the app like I'm going to do right now it's gonna perform this code you know create this contact it's going to save it in the background so let me just run the project and then we'll take a look at our parse backend to see if the data saved so we're not gonna see anything visually on the view because we we didn't say anything like that we probably should have put a print statement in here to know if it worked or not so right now we can't tell but let's check the backend and we should be able to see something so I'm on the parse backend for the demo app that I created says we have no classes let me refresh it and we should see that one here right if you take a look at the left first you can see contact is this new kind of datastore that we have and this name for this store corresponds to the class name that we gave in here all right so so it's not like a traditional database where we have to create our database tables first in a traditional let's say MySQL database we would probably have had to create a contact table and then we would have to create columns like email first name last name stuff like that but with parse if you try to save something under contact and you know you have these properties and it doesn't detect that you have that in your backend it's just going to create it for you so that could be handy and it also could be messy if you don't know what you're doing or you know you make a typo or something like that so you have to be careful so right here we seek in the email that we saved we see the first name and the last name now if I went back into my Xcode project and I change this class name to lets say friendly contact or something like that if I ran this code again it would detect that hey we don't have a store for this class friendly contact so it's gonna create another one it's gonna create another store called friendly contact and then it'll have a single row there but if I you know keep the class name contact but this time just change it to something like Tommy Smith and then I run this again then instead it's going to add this row of data into the same table or same store like that see so now I have two rows of data now each parse object has an ID and this is automatically generated when you save the object before we end this lesson there's one more thing I want to point out and it's if you click these three dots and you go to Doc's and under iOS go to guide there's some good information on what we just talked about so scroll down you can read this stuff on your own time and it would be really great to know if you're working with parse but what we covered today in this lesson is basically this section here the PF object it tells you about the parse object and we also went through this saving objects note that the code by default is in objectivec but there is a toggle to toggle all the code to Swift so you can just click this little button here and you can see the Swift equivalent so in the following lesson we're going to talk about retrieving the objects from our data store so thanks for watching and please like the video subscribe if you haven't and please share it with your friends if you found it useful thank you so much and I'll see you guys tomorrow bye you