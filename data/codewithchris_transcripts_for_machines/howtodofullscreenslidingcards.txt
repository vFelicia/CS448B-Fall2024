hey cuckoo how's it going in today's lesson I'm gonna show you how to do something like this yeah so typically used in welcome screens onboarding sequences Wizards and stuff like that and you won't believe how easy it is to do so let's jump into Xcode right now and do it together all right so we're gonna get started with a brand new Xcode project go ahead and start one I'm really liking the dark mode of this Xcode 10 under iOS let's choose single view app and for the project name I'm just gonna call it our slides demo and I'm gonna save it on the desktop here alright so first things first I downloaded some images from pixels comm and you can grab some too for your slides or you can use any one I'm just gonna drag them in here and these are the images that we're going to show in our fullscreen slides now let's dive into the storyboard the first thing we're gonna do is add a scroll view to our view so let's do that and we're going to add constraints for all four edges now I want it to be a full screen experience and I want the image to go underneath the knotch and so I'm going to uncheck constraint margins and I'm gonna make these constraints all relative to the view rather than the safe area because the safe area doesn't go underneath the knotch all right so let's do that so we've got our scroll view here next we're gonna add four image views inside that scroll view now before I do that I just want to show you a little diagram about how these image views will be positioned in terms of the auto layout constraints because as I'm doing it if you're not sure what's going on it might be a little bit confusing so all of the UI image views will be zero margin at the top and zero margin at the bottom to ensure that it's a full screen experience the first image view on the left however it's gonna have a left constraint that's zero to the scroll view and then the second UI image view I'm going to set its left side constraint to the rightside constraint of the first image view so it's going to sit to the right side of it and then for the third image view I'm going to set that guy's left side constraint equal to the right side of the second image view and then lastly for the fourth one I'm going to set the left constraint equal to the right side of the third image view but however for the last UI image view that's the rightmost one we're going to also make it zero constraint to the scroll view on the right hand side so that is gonna allow the scroll view to calculate and know how wide its content is and so it can scroll because otherwise it doesn't know how far it can scroll so that's why it's very important for the leftmost and the rightmost image views to have those left and right constraints relative to the scroll view all right so now you understand what we're gonna do let's get started so I'm gonna press command shift + L to bring this guy up and we are going to add the image view and just in case you didn't catch that that was the shortcut for this guy you can also just click this button if you want alright this is our first image view so we are going to specify constraints top bottom and left and all of these will be relative to the scroll view anyways but you can double check because this image view should be sitting inside the scroll view so make sure of that oops I didn't want to add this right side one be careful not to do that so just top bottom and left all right it's also going to complain now because we have to add some height and width constraints to the image view I forgot to specify that but all of these image views are going to have the same height and width as the scroll view that's what's going to make them like a full screen card so hold down control click your image view drag it to the scroll view let go and then you can select equal widths and equal Heights however once you click 1 the menus gonna disappear so if you want to select multiple just hold down command on your keyboard and it'll allow you to select multiple like that another way you could do it is just to have both elements highlighted by holding the shift' and selecting both them with your mouths and then you can come into this menu and just choose equal it's an equalize so both are good options you're gonna see some auto layout errors right now because it's saying that the scroll view doesn't know how wide its content is but of course that's totally expected because we haven't added all of our image views yet and it's gonna be that rightmost one which is kind of gonna close that or have that rightmost constraint so that the scroll view can calculate the total width all right so for this image view let's set some of its attributes for the image I'm going to choose the first one and we're going to do aspect fill for the content mode and we're gonna choose clip to bounds as well and that's just going to allow the image not to overflow the balance of the image view I'm going to just press command D to duplicate this guy and I'm gonna drag it inside the scroll view and change the image to two these are fine now we're going to set some constraints so you know the top and the bottom are going to be zero relative the scroll view however this one this left one is going to be zero relative to the first image view right it's gonna be zero to the right edge of the first image view the only problem is in this menu right here you can't find the first image view because both of them are overlapping and in order for you to see the first image view here in this menu you have to move the second image view so that it's not overlapping with the first one it's kind of hard to drag it out right now so what I'm gonna do is just leave it relative to the scroll view right now but I'm gonna edit that leftside constraint after it's added so let's go ahead and add these three constraints I know this left one is relative to the scroll view which is not what we want but we'll edit it so let's select this second image view go into the size and Specter and for this leading space constraint if you doubleclick it it's gonna let you edit it so you can see that the leading constraint for the second image view we're gonna change it it is going to be relative to image view number one and also the trailing side of it so when you do that you're gonna see that the second image view is right here oh and also it's like super wide right now because we didn't set equal Heights and widths for the second image view so we have to do that so all the image views need to be equal height and width to the scroll view all right let's duplicate this again let's drag it here let's change the image to the third one did it do it okay and this time I'm going to add the height and width constraints first like that and so like that boom boom boom top is scroll view bottom a scroll view left is also scroll view but again we're gonna edit it after the fact so let's click that leading constraint so the leading edge of the third image view should be the same as the trailing edge of the second image view and take note of this constant right this should be zero but sometimes it defaults to a number based on whatever position it is right then then there in the storyboard but you want to make sure that there's zero offset because you want the leading edge equal to the trailing edge so that they're sidebyside alright so we've got one two and three we're gonna do the fourth one now this one's going to be the tricky one because we have to specify a right side constraint all right so let's go image for this is the prettiest picture in my opinion alright so we're gonna add constraints for this guy it'll be zeros all around scrollview bottom a scrollview right side ah this side now we have some choices right make sure you choose scroll view okay so this right side is zero to the scroll view because that's going to cap things off and allow the scroll view to calculate the total width left side is still scroll view but we're gonna change this so it's relative to the third image view alright so we add those four constraints and again we forgot to add the height and width so let's hold down control drag this guy equal Heights and widths alright and then size inspector of the fourth one doubleclick the leading constraint so the leading edge of image view 4 should be equal to the trailing edge of number three and this constant this is crazy number we're gonna change it to zero so now everything is neat and tidy what do we have we have one one two three and four all right so why don't we just run our demo right now just to make sure it's Scrolls you can see that there aren't any auto layout constraint errors let me just bring this simulator here if we could drag this guy okay so here we go see it's scrolling but this is like smooth scrolling right it's not scrolling slide by slide and the way you do that is if you hold your sorry if you click your scroll view and you enable paging that's gonna have that behavior where your scrolling slide by slide so let's enable paging and try this again so you can see now it looks like you know pages you're scrolling through pages of something which is what we want the last thing we want to do is just add those paging dots that you see a lot in onboarding and welcome sequences and it's a great idea because it allows the user to see at a glance how many pages are available for them to scroll through so in order to do that yeah we have to add another control it's called the page control and this guy we are actually going to add it no we're not adding it into the scroll view or adding it outside because it's kind of sit on top as of now though it's sitting behind the scroll view so we are just going to close the scroll view like this and we're going to drag the scroll view below it I know it's kind of counterintuitive but the closer the element is to this root view the more behind it is so the page view is actually in front of the scroll view right now okay so what we're gonna do you can see it's sitting right there in the middle we're gonna have some constraints to that guy so let's horizontally Center it in the container and then we're going to make it like 20 from the bottom I'm gonna leave all of the margins as is so it's gonna sit right there it's kind of hard to see unfortunately we can change the colors again it kind of depends on the slides you can add some sort of background or change the tint color for some sort of treatment if you want but I'm gonna leave it as is okay so the question is how do we update because it's not going to update out in its own just because you added the page control how are we gonna update the current page well first of all we have to detect what page were on in the scroll view and for that we're going to have to do some calculation because this scroll view has a property called offset or content offset on the xaxis so you can detect basically how far you've scrolled or how far the user has scrolled inside that scroll view so on the first slide the offset would be zero let me just show you that again so right now the offset would be zero the width of this is 375 so if the user Scrolls to the second screen the offsets going to be 375 and if they scroll to the third screen it's going to be like 375 plus 375 which is 750 yeah to be 750 order to calculate what page were at all we need to do is take that offset and divide by 375 so this would be page zero right at this point it would be 375 divided by 375 would just give us one so that's page one and then this would give us page two and the last page would give us page three and we would simply use that number after we calculate that page index we would use that number and set a property on the page control called current page now that property just basically changes which dot is highlighted or we got to change the number of pages to four pages actually so there's four dots and the current page it's gonna start at zero and that's fine all right so let's let me show you how to do what I just described let's go into assistant editor and we're gonna hook up some of these elements to our code so that we can actually perform these calculations so we're gonna add the scroll view and if you're unfamiliar with how I'm adding these as outlets you can check out this video actually watch my beginner series because I talk about how we're doing this assistant editor just shows you the storyboard with the code behind for this view controller but this is all stuff you'll learn in my basic series if you haven't gone through that yet so I'm not gonna spend that much time talking about that right here in this video so first let's hook up the scroll view so that the view controller can detect that content offset and those like scrolling events of the scroll view and the scroll he talks to the view controller through its protocol you don't know what that is again I've got a video and a series on that so you can check it out in the video card in the upper right hand corner right now alright so wait we're going to do this is I'm gonna create an extension for this view controller and we are going to conform to the UI scroll view delegate here and before we handle any of its methods let's don't forget I always forget this part actually is to specify that the viewcontroller is the delegate for the scrollview so after we do that the scrollview is going to report to the view controller whenever scrolling is happening so there is a delegate method called did scroll and in here we can calculate the page index so let page index equals the scroll view dot con is an offset or content offset there we go content offset and this is a CG point so there's an x and a y we're interested in the X we're just gonna divide this by 375 and we're going to round this to an int just convert it to int and that's going to round things and then we're going to set the page control we're going to set the current page property to the page index so let's take a look at this and see if it works hope I'm not missing anything all right so yeah you can see the dot updating damn some of these dots are really hard to see but I think you can use a different tint color she'd like again if you want the source code you'll find it in the description below all right so pretty easy stuff right if you want to see more tutorials like this make sure you subscribe and support the channel don't forget to hit that Bell icon if you want to be notified of any new videos that come out and now I have a question for you guys do you like the new dark mode from Mac OS Mohave let me know by leaving a quick comment below yes or no personally I really like it and I'm really enjoying it oh yeah and if you want the source code for this project I'm gonna be posting it in my facebook community it's free to join I'll be posting the source code for all my videos there every time a new video is released so make sure you follow the link in the description below just a request to join I'll approve you right away and you'll be able to download the source code for the video thanks so much for watching I'll see you guys next time bye for now