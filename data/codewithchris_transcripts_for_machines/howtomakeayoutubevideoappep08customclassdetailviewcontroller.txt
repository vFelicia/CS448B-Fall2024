hey coders what's up Chris here with episode 8 of how to make a YouTube video app in the previous lesson we had added our second view controller so let me demonstrate here in the app when we select a video from this list we go to a second view controller which we added to the storyboard and then it also shows this back button here and we we clicked that it comes back to this main UI tableview so in this episode what we're going to do is create the view controller class that is going to control this secondary detail view and we're also going to be adding the UI elements to this detail view so let's jump straight into our storyboard in our Xcode project you can see here that I've got a zoomed out view now I want to demonstrate something so remember when we were working with this view controller right here with our UI tableview and when we wanted to add the table view to our view controller dot swift by creating this IB outlet right here we were able to do that by clicking the assistant editor button here and it would show us the view controller on the right hand side and on the left hand side we would have our our view controller so we were able to hook it up as IB outlets now let's click the second view controller which we added you can see here on the right hand side that it shows the you actual UI view controller class that we can edit and that's because by dragging a view controller to the storyboard this is the actual UI view controller class from the UI kit framework as you can see here if I go to view controller swift this is the view controller class which is a subclass of the UI view controller so we need to create our own subclass of the UI view controller and it maybe we'll call it detail view controller or video detail view controller and then we got it in the storyboard we got to specify that this view controller right here is an instance of that detailed video or sorry video detailviewcontroller so let me show you how to do that we're going to go here on the file navigator we're going to rightclick or ctrl + click and then go to new file choose the cocoa touch class and we're going to call this the video detail view controller make sure it's a subclass of uiviewcontroller spelled exactly like that with a capital u IV and then a capital c controller and you can uncheck also create zip file language to make sure that swift click Next and then let's save it in the project folder okay so now we have a new class called video detail view controller dot Swift we're going to jump into our storyboard and this time I'm going to let's go back to the single V right here I'm gonna click this second view controller and over here in the inspector pane I'm going to choose this tab right here it's the identity inspector and under the custom class I'm gonna be able to select the class which we just created it was called video detail view controller so now I'm basically telling Xcode that this instance on the storyboard is an instance of the video detailed view controller so now let's click this guy let's click assistant editor and we can see on the right hand side instead of showing the UI view controller class like it did before it's showing me the video detail view controller and in this way we're ready to add elements onto the storyboard of this guy and then connect them as IB outlets over here okay so now let's add our elements onto this storyboard so first of all I'm going to search for web view and you can see here displays embedded web content it's going to allow us to embed our YouTube video so I'm just gonna drag it and put it right here next we're going to search for label so we're gonna add two labels one for the title and one for the description so I'm gonna drag one and put it underneath the webview and drag another one put it underneath the webview there and now we're gonna add some constraints for all three maybe I should have added it for the webview before adding the labels but let's see how this works out okay so we're gonna click the webview and then I'm going to click this menu down here to open up the new constraints menu I'm gonna uncheck constraint margins I'm gonna enable the left top and right constraints for the top I'm gonna put zero but I'm going to make sure it says the top layout guide and the reason why I'm choosing the top layout guide is because it's embedded into a navigation controller so I don't want it right up as you can see here in the simulator it's got this bar right here and the layout guide is going to be right underneath that bar so I want it to be zero against the top layout guide if I say zero against the view the web view is actually going to reach all the way up here behind this bar and this bar is gonna be blocking half of the web view so I'm going to say lost the constraints there okay uncheck constrain the margins left top right I'm going to park it against the top layout guide and I'm gonna put zero for the left zero for the right zero and for the height I'm just going to put 184 now it's going to be the same situation as the stable cells in our UI tableview where we're going to have to adjust this height constraint based on the width of the view and we're gonna have to calculate it and do that programmatically so I'm gonna add these four constraints now all right and then now we're going to add some constraints for the label before we update constraints so for the label let's set the properties first actually so here I'm gonna say number of lines is zero so that it's multiple lines for the text I'm gonna choose custom font and choose bold for the title maybe make it even a little larger let's say size 20 okay I want to park it underneath the webview so let's add some constraints to that guy uncheck constrain margins left let's say it's 20 right let's say it's 20 and you can see these numbers changing on me make sure it doesn't change on you and 20 there we go for the top I'm gonna park it against the webview so let's say it's 20 from the webview as well and we also have to give this guy a height so let's say 100 make sure it's got enough for a couple of lines maybe it's a three line video title for the description let's add some constraints for that uncheck constrain margins let's do left top and right so for the top I want to make sure it's parked against the title label let's say 20 and left this 20 and right is 20 as well so we're not gonna put a height for this guy so let's make sure that this description can be multiple lines as well by changing the number of lines to the zero okay now finally let's click this guy and update all frames let's choose an element first scroll down update frames for all views in the video detail controller okay so we've got them relatively in the places that we want that's the title label that's the description label which is going to fill up the bottom of the screen and we've got the web view here so let's go into the assistant editor and hook up these elements to our video detail view controller so I'm gonna hold down control click our web view and drag a line to create an iboutlet let me call this guy web view okay now let's do the same thing for the title label I call this the title label let's do it for the description let's call it the description label okay I'm gonna save it now let's go back to the standard editor or single view and let's run it to see what we have we shouldn't see anything in the web view because it's blank but let's click this cell so now we have our web view it seems a little bit off actually like there's this huge gap here so let's revisit the constraints but we do have our loops but we do have our title label and description here which is good so we're gonna go back to our storyboard now just to take a look at that top constraint for the web view it's open up the document outline open up this constraints so it says here web view top equals the top layout guide bottom and constant is 0 so let's try something where instead let's delete that constraint I'm gonna highlight this constraint and hit delete and we're gonna try to add it again so click the web View open up this menu uncheck constraint margins let's so we can either choose top layout guide current distance it's 0 from top layout guide or we can choose it from the view but the current distance is 64 which I assume is that distance that covers the top bar so let's give that a try let's make it relative to the top of the view but with a 64 margin okay now let's give it a run and maybe that will work better for us okay so I think it did so the web view is right up against this edge here which is what we want when we actually put the video in there I don't think we'll be able to scroll so in the next lesson we're actually going to fill in the video we're gonna fill in the title in the description and we're gonna hook it up so that when we tap on a cell it actually passes the video we chose to the detail view so it knows what to display so I want to thank you watching and sticking around if you liked this video and you like the series please share it with your coworkers and friends please give me a like and a subscribe and we're nearly finished the app so I'll see you guys tomorrow at 12 talk to you later bye for now