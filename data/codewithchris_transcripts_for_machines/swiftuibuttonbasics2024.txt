hello let's talk about buttons in Swift UI so in this video we're going to cover a basic usage example we're going to talk about the button style modifier and how you can use preset button Styles and then if you want to go custom we're going to show a couple of different examples of custom buttons and lastly we're going to dip a little bit into accessibility with buttons all right so let's dive into xcode and take a look at a basic usage example so here I have an xod project I'm going to get rid of this more complicated button we will get there I promise so in Swift UI you can create a new button component simply by typing button with a capital B and there are a couple of different ones here let's use this one title key in action so here you can put a string with whatever button text you want and then for the action this parameter you put a code block to execute when the button is tapped on and a code block is indicated with two curly brackets like this in between the curly brackets you put the code that you want to execute uh we'll call it action and this is what it looks like in the preview so let me zoom out a little bit so you can see the screen there's our first little button now I want to warn you that when you do what we just did here you can also doubleclick or hit enter from here and it's going to turn this into a shorthand what's called a trailing closure so all it did was it took your block of code right the two curly brackets and it moved it behind the rounded bracket and it took out this parameter label right so we can do it manually like this so that's just something I want to warn you about but they they are exactly the same thing this is just a shorthand and again this is the where you would execute the action so this is your most basic button let's dive into how to style this button so if we wanted to let's say apply a default style we can apply the button style modifier to this button component and there are a couple of different styles that we can use so inside these rounded brackets hit Dot and then you can select from five let's start from bordered and see how that looks so that's going to apply this nice gray border onto your button now it's a border button now you might say that's kind of a plain looking button I want a colored background so in that case you want the bordered prominent style so let's apply that to this button here and you get a nice bold button now if you want to change the color for that button you can simply add an additional modifier and change the tint color to Green let's say let's take a look at a couple of different other button Styles so this one we are going to take a look at borderless if you don't want any border this is the default button it actually looks like the basic button and then lastly actually not lastly we have a couple of different ones we have plane so this button Style Just removes all the Frills from it there are no indications for when you're tapping it see there's animations but this one doesn't even have anything and there's no color to it so this is a very plain button that could probably hide as a label which would be really confusing for users so I wouldn't recommend that and you also have automatic this is the last one and automatic is cool because the way that this looks depends on what platform the user is running your app on so if it is on iOS if you have your button set to automatic it's going to take the borderless style because that is what a default button in iOS looks like however if your user is using your app on let's say Mac OS then the default buttons on Mac look like a bordered button so that's what automatic does now let's take a look at a couple of different custom buttons so I'm going to do that up here remember before when I first showed you we chose this one button with a title key and an action well this allows you to put a string to represent the button now we want to choose action and label and inside label we can actually put any other view that we want and action is the same thing this is a block of code that you want to run when the button is tapped on so inside here let's fill this in first this would still be to execute the action whereas the label now you can put whatever you want So Right Now by default it is using a text label called button but what I've done is I've added an image to this x code project called donut so we're going to try to add that in there so we're going to use an image view instead and we are going to put donut that's really really big so we're going to say that it is resizable and then we are going to uh constrain its height to let's say 40 and we probably want to maintain the aspect ratio all right so there's our little donut button okay now let's take a a look at an icon with text button so we type in button again and this one is kind of the same thing as this one except that when I hit enter here it is going to create a shorthand again so this is actually the action and this is going to be whatever label I want take a look at this this block right here here is this one right and then this label part back here is this block of code but gone are the rounded brackets so this is just another shorthand way to write this let us take a look at an image with icon so in this case icon I'm going to use some SF symbols so you can download this SF symbols app through if you just Google SF symbols you'll find it and these are all um symbols that you can use that's already on the system and you don't need to add any additional assets to your project so let's take this one for example and we're going to copy the name and to use this icon you use an image view with the system name initializer and then you put in the name as a string so there we have our icon uh I'm going to also add a text label and call say uh upload so this is now our button now if you wanted an icon only button that would be the same as this one except that it would look like that with just icon Now using what you learned in the uh button Style what we talked about you could make this a bordered prominent icon button take a look at that you could do the same thing with this one so you can combine button styles with um with custom buttons now I want to talk about a couple other modifiers that you can use to customize the look and feel of your button for example fonts so if we wanted to change let's use one of these buttons down here let's use this bordered button so we can use the font modifier and you can specify a for example a system font that's a different size well 10 would be smaller uh let's say 30 and that would be larger or perhaps you could specify a um one of the different font styles the default font Styles or presets so you do large title or perhaps you could do uh there's headline it's different styles presetting iOS so that's how you would change the font you could even use custom fonts here now we're not going to cover that in this tutorial but I do have an article on the website covering how to use custom fonts and I'll link that in the description below if you're interested but you would use this font modifier as well you could also use foreground style and that can change the uh the text color maybe that is not visible enough but there that's red text and don't forget the Bold modifier which just makes your text Bol so there are a ton of other modifiers that we haven't covered but those are some of the basic ones that you can customize the look and feel of your buttons now let's transition to talking about accessibility which is really really important for your app if you want to make sure that anybody can read what's on your screen you can add some labels to your buttons um for the accessibility options like screen readers and things like that so for example for this green button all you have to do is use the accessibility uh modifier so that as you can see there are a lot of different options here and I would recommend exploring some of these but two that I want to point out that you might want to consider adding is this one here label it adds a label to the view that describes its contents so you can apply this to most any components I believe in on the UI so you can describe what it is to let's say a screen reader and this one gives a hint on what happens after you tap on the button so that's very useful as well two last things here here's a video series going through all of the other Swift UI components and here you can find a single xcode project with example code for all of the Swift UI components thanks for watching and I'll see you in the next video