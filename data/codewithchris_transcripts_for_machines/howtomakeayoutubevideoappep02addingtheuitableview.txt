a coders what's up I'm Chris and welcome to episode two of the how to make a YouTube video app series in the previous lesson we had created the Xcode project together and I had also went through some of these files in the file navigator to explain what they're for and their purposes let me just pull up our demo app that I showed you yesterday for a quick second so yesterday after releasing that video I went back and I reviewed some of the code I wrote last year and to be honest some of the stuff is actually pretty complicated particularly the feed parsing and working with the YouTube API it gets pretty nitty gritty and I don't know if it's going to be for everyone I was wracking my head about how I was going to explain it because I want this series to be accessible to everyone and I want everyone who is watching this to be able to create an app that displays and plays YouTube videos so for example grabbing these videos dynamically and then parsing that video ID to grab the comments and grab the description that stuff was actually pretty involved so I think true to what I said I'm going to create a simple version first and what that's going to entail is a scrollable list of videos that look like this so we're going to be able to have the video thumbnail and title and stuff like that and when you click into it you're going to be able to play the video and you're going to be able to read the title in the description but the title and description will probably have to be hardcoded into the app rather than dynamically fetched through the YouTube API and if you're not familiar with the term API essentially it's just that Google has a bunch of URLs which you can hit and you can pass in IDs and stuff like that to get more information about any particular video or playlist or something like that but where the difficult part is is that you're going to have to sign up for a YouTube application so that you can get an application key so it knows who is calling those URLs and then when you call those URLs in the API to return data it returns it in the form of data feeds which kind of look like like this like this snippet of JSON here but imagine in a much larger file with lines and lines of this kind of stuff so our iPhone app is going to have to go through a file like this and basically extract out all the information that we need so I think end to end if I were to explain it properly the way I'd want to it'd probably take me somewhere around 20 videos to do to complete so what I've decided to do instead is is do a simple version which I think I can do in a handful of videos and that way very quickly you can have your own app which has a scrollable list of videos like this with thumbnails and stuff and you can click into it and then you can view details about this video and then you can click this and you can play the video in your app and I think that would be an awesome milestone for you guys to be able to hit first so in this video we're going to start by implementing this scrollable list which is essentially what's called a table view and I know that's kind of a funny name because it doesn't resemble a table at all but from here on out I'm going to refer to it as a UI table view or a table view so you know that I'm talking about this type of scrollable list and each of these thumbnails you see here is actually a table cell when you configure the basic table view it's just going to be a line of text and that's going to be your cell so we're going to have to customize the cell to display an image like this and all this fancy stuff here but let's jump back to our Xcode project and let's go into the main dot storyboard first so we've got an empty view here this is what you should be seeing with a view controller and if you don't have these panels on this I don't worry about it for now what you really need is this panel on the right hand side and this button expands or hides it and then down here you should be seeing a bunch of these elements and if you don't make sure that you're on the right tab here which is third one called the object library and furthermore your storyboard if you double click here you you're going to be zoomed out like this you want to double click an empty area to make sure you're zoomed in so you see the view controller in its full size because you won't be able to add any elements on to this view if you're in this sort of zoomed out view right here I'm going to double click an empty area to zoom back in and then down here I'm going to search for table view okay and it's going to reveal a couple of options what we want to choose is this one right here called table view not the table view controller we want to drag this table view onto your view controller it doesn't matter where you put it and if you can't place it into your view just double check that you're not in this zoomed out view right here double click any white area to zoom back in so the first thing I'm going to do is I'm going to click the table view so you can see all these little handles on it and then we're going to add some auto layout constraints so something that you should have went through in the start here lessons on my channel page but you go here click this menu and it's going to give you some options on how you want to position and size the table view so I'm going to uncheck constraint margins and I'm going to enable all four margins and I'm just going to put click these little dropdowns here sorry and choose view because I want to position that margin relative to the view and not the bottom layout guide so these ones should already be view the left and right it's just the top and bottom that have the layout guides I'm going to put them all to zero and then what I want to do also in this little dropdown is choose just choose all frames in containers and basically what this does is after you add these four constraints it's going to automatically apply those four constraints and it's also going to do it for all the other elements in your view so when you do that automatically you should see your table view take on those four constraints that you added and if you forgot to select this little dropdown for update frames don't worry you can manually do it so make sure that your table view is selected and then go here and you can choose update frames it's grayed out for me because my frames are already updated so now we have our table view conforming to the entire view this lefthand side is called the document outline and it's very helpful to see what sorts of elements you have in your view sometimes you have elements overlapping each other and they're hard to select or hard to click and you may not know that something is there but if you take a look at your document outline you're going to be able to see the list of your elements and basically it's also a sort of zorder or layering so anything that is closer to the top right here is at the bottom I know that's counterintuitive but if you think about the view as the bottom layer so the table view is on top of the view so anything you add below the table view will be actually on top of the table view if you don't see this document outline go down here there's a little icon here to slide it out next what we want to do is we want to add a reference to this storyboard element from our view controller because remember the view controller is where we're going to add all the logic to handle the user interaction and it's kind of going to supply the data for the view so right now the view controller not Swift class doesn't know anything about that table view because all we've done is added it to the storyboard so what we're going to do is add what's called an iboutlet to our view controller and that iboutlet is going to give us a reference to the table view so that the view controller can control the table view this was also done in the start here lessons on my channel page so you go up here click this what's called the assistant editor and if you're running out of space you can always hide that right panel so what I want you to do is click the table view either from the document outline or from the storyboard itself hold down control and then click and drag this little blue line over here and then let go I want you to call this you just call it the table view click connect' and now what has happened is that the view controller has a reference to this table view object in your storyboard and that name that it's going to reference that element is table view or whatever name that you gave it and actually here's where a lot of people get stuck connecting IB outlets and maybe potentially deleting this but when you run your app it's going to crash because you deleted it and maybe you added it again but you didn't remove the previous reference so I actually created a video it's called common mistakes with iboutlet properties which I'm going to link to here or at the bottom of the video as well and if you're having trouble creating this IB outlet or you're running into difficulties you racing the outlet maybe you spelled the name wrong and you want to redo it that video that quick video shows you how to do that and to make sure that you haven't done anything wrong and the app doesn't crash I want you to click this lefthand button that says build and run so what that's going to do is it's going to launch your simulator and it's going to launch your app you're going to see this sort of thing here right here says back to Tron videos but you won't have that so ignore that because I just launched this app on top of the other app so you're not going to have this back to Trump videos but you should see this sort of scrollable list and then you can use your mouse and you can click and drag you can scroll it now if you don't see this go back to Xcode if you see something down here like a bunch of text chances are that your app is crashed or if you see your Xcode project jump to a line and then it's highlighted green and it said Sega board or something like that that's a crash as well so chances are you you might have messed something up with the iboutlet so I would highly recommend you go to the common mistakes video which I'm going to link to to fix that problem okay so the last thing I'm going to do in this video is I'm going to stop the app right here by clicking this icon beside the play icon I'm going to go back to single view by clicking here standard editor I'm gonna go storyboard make sure I'm looking at the inspector pain okay what I'm going to do is I'm going to click my table view and on this tab right here there's a couple so make sure you're looking at the attributes inspector and I'm going to change this prototype cells to one and right away you can see that we have one cell and that's just going to be a basic cell with a label although you can't see the label now because there's no text in it but we're going to be customizing this prototype cell to be adding the image and all of that fancy stuff that you saw in the Trump videos app okay so this is a good stopping point for this lesson make sure that you are able to add table view add a table view cell and then furthermore hook up that table view as an iboutlet to your view controller and then run your project and make sure it doesn't crash okay thanks for watching and if you guys enjoyed it I hope you'll like subscribe and share it and I'll see you guys tomorrow at 1200 eastern time bye for now