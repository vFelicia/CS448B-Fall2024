hi welcome to lesson 8 you're almost there only three lessons to go in this video I'll show you how those Swift basics you've been learning about apply and relate to our Xcode project by the end of this video you'll learn how to write code in the view controller to manage and access the elements in the storyboard I'm also going to show you what to do when your app crashes which happens more often than you think all right let's do it right here we have the Xcode project that we started back in Lesson four well we're gonna continue working on it right now let's jump into viewcontroller.swift where I'm gonna point out a couple of things to you based on what we've covered in the previous couple of Swift lessons starting from line 9 we've got import UIKit now you definitely know what that is because you've seen it in the playground UIKit is a library of code that's provided by Apple in the import statement is basically saying to use it now on line 11 we've got class view controller that is a class your view controller is a class and you can see this is the starting curly bracket for it and this is the ending curly bracket so all of this stuff inside is part of the class there are some things that I'm gonna gloss over right now because you will learn about it in the future and I don't want to confuse you now and one of those things is this this UI view controller part it's something called sub classing which allows you to build your class off of an preexisting class rather than starting from scratch but we're not gonna talk about sub classing in this lesson just kind of keep in mind that that's what this part of the code does basically view controller as a class that builds off of the UI view controller class and down here you have some functions now there is an override keyword before the fu NC but ignore that for now it has to do with sub classing and so here's your function it's called viewdidload and then you've got an opening curly bracket and a closing one and then the code inside here is the code for your function super is another keyword that has to do with sub classing so we're gonna ignore that for now and same thing goes for this function did receive a memory warning okay so this is another function isn't this cool this was stuff that you were learning about in the past couple of Swift lessons and now we can relate it directly back to our Xcode project so your view controller is a class that means for it to do anything the view controller has to be turned into an object right so let's go into the main dot storyboard and I'll show you something else that will blow your mind look at all of these elements that we added to the view are those objects are those classes what are those things that we are adding and customizing to this view believe it or not we're actually creating objects when we drag these elements onto the view well you might ask objects come from classes right what sorts of classes do these elements come from well all of these elements in the object library down here in the lower right hand corner these are actually classes in UI kit stuff like this label this button you know text fields and stuff like that these are all classes and so now this name object library is a little more significant to you right that's right UI kit is actually a library of classes that apple provides and it contains useful classes such as buttons labels image views all the stuff that you've been using and a lot more for instance by dragging and dropping this UI image you here I'm actually creating an object of this class click it and check out the stuff in the inspector pane all of these things that I can configure they are properties of the UI image view class you see the interface builder here is simply a visual way to make it easier for us everything we're doing here in the storyboard we can actually do through code in fact we can completely omit using the storyboard and instead write code inside of the view controller here to create all of the objects set their properties and then place them into the view however that is definitely more of an intermediatetoadvanced thing that you'll eventually get to for beginners who are just starting out I highly recommend using the storyboard so these elements in the view here are objects how can I get access to them from the view controller that's where IB outlet properties to play let me show you how to expose these elements from the storyboard to the view controller as an iboutlet property now there are multiple ways of doing it but the easiest way is just to select the view controller here in the document outline to make sure that you have it highlighted and then go over here in the upper right hand corner and click on this little icon that looks like two intergenic circles this is what's known as the assistant editor and it basically kind of splits your screen into two so on the left hand side you can view your storyboard and on the right hand side you can view the code now I want you to go over here to this little breadcrumb navigation and make sure that where my mouse is hovering yours also stays automatic if it doesn't just go ahead and click it and then scroll down to automatic here you should see view control a lot swift if you've got it highlighted here because basically the automatic setting will show what's relevant on the righthand side according to what you select on the left hand side so if you've got the view controller selected this automatic setting should be showing you view controller without Swift the reason is because this view controller here this note in the document outline is actually the visual representation or you could call it the object of this view controller class here now what I want you to do is on the right hand side in the view controller right underneath class like inside the class but above the viewdidload function just press ENTER a couple of times on your keyboard to create a little bit of space and make sure you don't do it here but you do it here right inside the class right after that starting curly bracket for the class so right here it creates some space and then on the left hand side it and in the document outline click on this first card this is the left card right here and you can see that being highlighted if I click this one you're gonna see the right card being highlighted so go ahead let's click the left one we'll start with that and now hold down control on your keyboard and while still holding that down click this image view in the document line and start moving your mouse and dragging it you're gonna see a blue line follow your mouse as long as you're holding out of that control button and you haven't let go of the mouse yet so drag it over here on the right hand side where we created that space and you should see that little note saying insert outlet or outlet collection and now you can let go of your mouse and you can let go of control and out pops this little menu here and you can see that the connection type is set to outlet and the object is view controller and we're going to name our IB outlet property now you can ignore the rest here well the type should be uiimageview you shouldn't need to change this if you selected the right element here you should automatically have this type as uiimageview okay so here I'm gonna call it the left image view like that and I'm going to click this connect button so there we have it it automatically generates this property for us now this property is special in that it has this special keyword here iboutlet and you can see that var keyword there and maybe I should just minimize that pane so we have a little more space and you can see this is the name that I gave the property and this is the data type right that the property is going to hold there are a couple of things that we're going to ignore right now I'll explain it down the road that is this week in this exclamation mark you don't have to worry about that for now but what you should know is that what we've just done is we've connected this element here this left card view it to this iboutlet property here so that this property will actually point to this uiimageview object and since we have a reference to that object we can use dot notation like you learned in the previous lesson to access all of the methods and properties of that uiimageview object right so if we wanted to change that image we could call functions on it we could you know set its properties and we can do that I'll show you that in a second but right now I just want to go over some common mistakes we want to double check that we've connected it right so what I want you to do is go back here on the left hand side the storyboard and then right click your left image view you can see that it even changed its name here you can either rightclick it in the document outline here or rightclick it in the storyboard either way it should pop up this little context menu for that element and under referencing outlets you should see the property name which is left image view followed by view controller if this is the object which contains that property this shows you that this element is connected as an llet property to this class right here and it also gives you this little X button for you to break that connection if you don't see this that means that you might have connected the wrong element so let me show you how to fix that what you're going to do first is you need to find out which element you accidentally connected so what I would do is I would go right click this guy and then check you know right right click a couple of elements which you think you might have dragged it could be potentially this card stack view right because if you're clicking this you might have accidentally selected the stack view instead you know so sometimes it's just easier to connect it from the document outline rather than clicking it from here but anyways after you find out the one that you accidentally connected go ahead and click X to break the connection and then go back to the view controller here and then delete that ible property and now you can start from scratch again essentially so again let's do it one more time for practice on the left hand side here I have selected the left uiimageview hold down control on the keyboard click and drag over here I let go and then I can now name my outlet left image view and I'm going to click connect now another mistake that sometimes happens is that you made a typo while you named that outlet property so some people might just go ahead and correct it let's say they they forgot to capitalize something and they might just change it here I'm just gonna maybe I'm gonna add a letter like that let's pretend I am correcting a typo but if you do this things will break let's go back to the lefthand side and rightclick that you are image view you can see here that the referencing outlet it's connected to left image view right but I've just changed that property name to left image views so when you run your app it's going to be looking for that property to assign the object to it's not gonna find that property and it's gonna break so if you made a typo don't just erase it or correct it here you will actually have to just go ahead and delete it and then go back here on the lefthand side right click click this X to break the connection first and then do it all over again so hold down ctrl click and drag it here left image view connect all right let's connect the other image view so I'm going to click on this one hold down ctrl click and drag it here make sure you don't drag it into this existing outlet you can see here it highlights the outlet in blue you don't want to do that otherwise you're gonna have connected two outlets to the same property and bad things can happen so just make some space if you need to and connect it down here I'm gonna call this the right image view just like that and you'll actually notice that this gray circle is filled in it's if you hover over it it tells you what it's connected to you see and when it's filled in that means it's connected let me just show you here I'm gonna break the connection in the storyboard here and now you can actually see that it has turned hollow and that means that this property isn't connected to anything now I find that this is not the most reliable way to tell because sometimes when you just open your Xcode project it doesn't really update these little circles so there are times when I know they are connected but they still show Hollow so I wouldn't put too much emphasis on using this but anyways here's another way to connect your outlet if you already have the property here you can rightclick here new referencing outlet you can this little circle here you can actually click this plus icon you can let's drag it to the viewcontroller node here let go and you can actually select the property make sure you select the correct one though right image view and now you can see that this is filled in and when you hover over it it should highlight the right image view but you know I wouldn't attempt to do it the way I just showed you if you're not comfortable with things yet just connect it using the ctrl click and drag method that's the easiest way for beginners to learn I feel so now and go back down here under the stack view we are also going to connect the labels so there are two labels that we want to connect this zero under player so hold down ctrl click and drag down here I'm going to call this the left score label and for this one click drag hold down ctrl as well I forgot to mention write score now before I connect this one I'm going to purposely make a typo let's call it write score labels and that and when I connect it I've noticed oh man I made a typo so I am going to actually just correct it like this you can actually see when I did that this became disconnected and if I right click my label here it's still connected to write score labels but I don't have that property and I'm going to run it for you right now and show you what happens so it's gonna crash and because we have assistant editor open both the panes changed to here but it's gonna highlight this red line here which doesn't really tell us much what you want to do actually is go down to the lower right hand corner into this console area where there's a lot of gibberish but this is essentially where you can find the detailed error message the last line tells you terminating with uncaught exception of type NS exception that's basically just telling you that the app crashed what you should do is you should scroll all the way up all the way up to the top usually and you're going to find actually a more detailed error message more plain English that you can read to stuff here bla bla bla bla bla and then down here this class is not key value coding compliant for the key rights core labels now this lion might not make any sense to you this class is not key value coding compliant for the key but however over time when you see the same message over and over again you kind of learn to understand what the cause of that is and in this case it's because it's trying to look for write score labels but however we don't have that property you know this is a heck of a lot more easy to understand then you know reading any of this and this is just a generic message which doesn't tell you what's wrong so in this console area you scroll all the way up and then you read what the error message is so let's go back to the storyboard and let's fix this error and resolve this crash so we're gonna click on the storyboard the left hand side changes of our assistant editor and on the right hand side you should see the view controller if you don't click on the view controller up here make sure that this side is set to automatic like that and we're gonna fix this right score label so this one this is connected to an outlet that doesn't exist anymore so go ahead and click X and then we are going to take this new referencing outlet and connect it to a preexisting one and that's right score label and so now this guy's filled in if I hover over this circle you'll see that this right score label is highlighted so we know which one it's connected to okay so now we've got four iboutlet properties and they are connected to these objects that are on our storyboard and since these properties are outside of any functions and they're inside our class we can actually access them from inside any function so let's just do a little test here and viewdidload for example I can say left image view right that's our property name up here dot and then these are all of the and functions that are available for a UI image view object and I can access this property called image right and then I can go ahead and what I can set that and change the image we're not going to do that right now we're gonna do this in the next lesson but for now I just wanted to show you that we can access this image view here and we can access the image property using dot notation like that so let's go ahead and delete that so you know the image property that I just showed you let's click this button to go back to the single view editor and let's click this button to get our inspector pane back if I click this image view see right here in the inspector pane this image drop down here well that is the image property that I just accessed in the view controller right so if I set that with code that's the equivalent of setting it here to one of these image assets see I choose card 14 use whatever and simply by connecting this element as an iboutlet property to the view controller the view controller now can write code to manage this element in the Cir board okay so now the next order of business is how do we run some specific block of code or a function when the deal button is tapped here because essentially when this button is tapped we want to run code that will change these images right well we can use something called an IB action function so very similar to IB outlet property but this one is a function so let me show you how to connect that we are going to go back to a system editor so let's hit view controller on the right hand side it should be set to automatic view controller and we were connecting the outlets up here because that's where properties go inside the class but now for a function we only have to put it inside of the class right so this last curly bracket this one is the ending curly bracket for the class so we want to put our function inside of the class right so you have to make sure that you create some space before this last curly bracket all right this curly bracket is for this function all right so right here would be a good place to put the function to run when the deal button is tapped we don't have to write the function all we have to do is go over here on the left hand side and click on the button element from the document outline hold down ctrl on your keyboard click and drag all the way here and then let go of your mouse button and out pops this little guy but before you connect it change the connection type to IB action instead okay and the object is view controller the name I'm gonna call it deal tapped and the you can leave the rest of it as is the event is touch up inside now touch up inside is basically the event when the user taps on the button and lets go of the finger while still within the button all right this is essentially tapping of the button there's also other ones if you click it there's like touch drag outside touch drag inside this touch up outside which is actually when the user taps on the button but slides their finger off the button and then let's go so that doesn't count as a tap and we don't want that this is the one we want touch up inside let's click connect and now you can see that it actually connected a function C F UNC and the function name is deal tapped and inside its got a parameter you don't have to worry about what that is but it's essentially the button that triggered that event so in between these two curly brackets that's where we write the code for our function hit enter a couple of times and in here I'm just gonna print out a statement so we can test it out I'm going to say deal like that and in the next lesson we'll actually put some real code in there but this looks like an iboutlet property except it's a function you can see this keyword here ib action and you can see this if i hover over this it goes over the button now in terms of troubleshooting similar to iboutlet properties if you accidentally made a typo or something like that or you might have connected the wrong element simply go ahead let's delete this IB action altogether let's rightclick that and you're gonna see all of these events under touch up inside it's connected to the viewcontroller deal tapped but I just erased that function so it doesn't exist click this X to break that connection and let's go ahead and do it again so I'm going to hold down control drag the button let go there and I am actually going to oh don't forget to change the connection type to action I often times forget to do that and let's call it deal I'm gonna accidentally miss type it again so deal taps okay I'm going to connect it and then realize oh no I made a typo and then I go ahead and correct it here but notice now it's not connected to anything right the button here it's connected to deal taps which I just got rid of now I only have deal tapped so if you make a mistake like that break the connection and you can actually touch up inside move to the right and this this is a low prone to error actually because you might be hovering over the wrong circle so if you just move your mouse over here click and drag it to the view controller here and you can select an IB action function and then you can see it connected right or if you don't want to do it that way just you know delete this break the connection and then use the control drag method and reconnected oh but anyways let's test out this function here so let's use print let's use deal like that and let's run our app again now if you don't see this and it crashes or something like that then you know you've probably made a mistake connecting your outlets so go through the troubleshooting steps that we've gone through in this video now clicking the deal button we should see something pop up in the console so you can see the each time we hit deal this function is being fired and it's printing deal into the console alright so in this lesson you'll learn about iboutlet properties and how they can be used to expose the elements in the storyboard to the view controller you also learned about IB action functions which let you write code in a response to events from the storyboard you learn how to correct any mistakes you might have made when connecting iboutlet properties or IV action functions and finally when your app crashes you learned about how to find that detailed error message which is so crucial to understanding why your app is crashing there's no worksheet for this lesson but I highly recommend that you replicate what we've done in this video in your own Xcode project and if your app is crashing remember to go through those steps that we covered in this video if you like this video please subscribe to my channel by hitting the subscribe button below if you don't want to miss a single video make sure you click that Bell icon as well thanks for watching I'll see you guys in the next lesson