hey everyone welcome to lesson 13 of how to make iphone apps with no programming experience in this lesson we are going to learn how to work with the images that we added to our asset library if you remember back in lesson 6 we added all of these great images into our asset library and these names that you see here card 2 3 4 and so on Jack King Queen these are the names that we are going to use to refer to these images and as I mentioned before there are three different sizes for each image and Xcode is going to choose the appropriate image to use depending on what sort of screen the user is using on their device so far we have added a couple of the images into our storyboard here and we saw how to do that by simply selecting the element and then going over to the right hand side inspector pane let me just go back into the standard editor so there's a little more space so for example we selected an image view that we added to the storyboard and then we were able to set the image property to the back image asset as you can see here well if you remember we added IB outlets for these two image views I'm going to show you how you can manipulate this image view to show a different image through swift code because we're going to need to do that when the user taps on the deal button we're going to want to programmatically randomize the cards and display the appropriate image in this UI image these two right here okay so let's quickly jump into the view controller and take a look at what sort of IB llet properties we added before so first we added this one left image view and as the name States this is the image view on the left hand side and then the one above it right image view is the one on the right hand side so we also hooked up this function right here deal tapped to fire whenever the deal button is tapped on by the user so here if we wanted to set the image for let's say the left image view we can refer to that property by name so left image view and so what do we set in order to set a new image well the image view has an image property that we can set and it accepts a type of UI image object as it says here so let's set that equals remember we use the equal sign to assign something into the lefthand side okay so what is a UI image object let's go into the UI kit reference because the UI image is one of those classes that comes with the UI kit framework you search for a UI image you can see here that it's an object that manages image data in your app we're going to have to create a new UI image object and then somehow set it to point to the image in our asset library so clicking into this class let's take a quick read here and here there's a section on creating image objects and you can see here that there's an initializer method where you can pass in a name so okay let's do that and here's also some sample code you can see here that they create a UI image and they can specify the image to initialize that object with we're going to do just that so we're going to create a new image uiimage and while we could just create an object like this and pass it into the image property of the image view this wouldn't really display anything because this UI image object is not really set to an image that's not really initialized to an image there is a different method that we can use or initializer function that one right there named and then we can pass in a string which is going to be the name of the image offset so let's just say we're going to set it to card ten okay so let's just type that in right there and let's do the same thing for the right image view image property equals UI image and we're going to use this one named let's set this one to Jack okay so let's give this a run by pressing command R it's going to build our project and it's going to launch the simulator and display our app there alright so there's our app I'm going to tap on the deal button and actually that generated a crash in our app so this is a good opportunity to to troubleshoot this so if I look at the error message down here it said that unexpectedly found nil while unwrapping an optional value so nil means it's an empty value and this is referring to this line of code right here highlighted right image view dot image I have a idea of what's wrong if you take a look at this line of code up here this iboutlet property you notice how all of the other lines have these grade in circles well this top one right image view has a empty circle and that's exactly the you know the line of code that's failing right here so to me that tells me that for some reason the right image view out I be outlet is not connected to the image view element in our storyboard so let's go ahead and stop our project we can verify that very quickly just going to the storyboard this is the right image view I'm going to right click this or you can even click control leftclick yep if you don't have a 2 button Mouse and you can get the same menu to pop up ya notice that there are no connections for this image view right for this guy if I do that you can see left image view it's connected to this view controller if I pull it out a bit see it's connected to view controller so how we're going to fix that well for the right image view let's pop open this menu let's create a new referencing outlet drag this guy either to this yellow dot or circle here or to the view controller here and it's going to pop up all of the iboutlet properties that you can connect that element to now I'm going to connect it to write image view remember that's the one that it's supposed to be connected to okay so there we go now when I rightclick on this guy make sure you're selecting the image view if I right click on it I can see that the right image view is connected to the view it's connected to this right image view IV outlet property going back to view controller now you can see that the circle is grayed in okay so if you ever come across a crash and you see an error like this it means that it's trying to use something is trying to use that property but it unexpectedly found that it was empty rightly so because right image view this property wasn't actually connected to the element so when I tried to use this it was empty now let's press command R and run the project and try this again alright here we go so tapping the deal button this time right it goes into our deal tapped method and it executes these two lines of code which changes the images of our two image views and that's an example of how you can manipulate the elements in your storyboard through Swift code in the following lesson we're going to learn how to randomize numbers you know right now when we tap deal it's always going to be 10 and Jack because that's what we've said it to here want to randomize that and set the different images depending on the random numbers that we generate alright so thanks for watching I hope it was helpful to see how to debug that error and I'll see you guys in the next lesson bye for now