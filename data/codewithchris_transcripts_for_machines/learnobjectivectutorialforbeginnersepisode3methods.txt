hey guys today we're gonna be talking about how to declare methods in objectivec and how to call the methods that you declare so you guys might notice that the font size is huge now I hope you guys have no trouble seeing this and I'll make sure that I upload my video in 1080p okay on to method declaration so again I created a brand new project if you want to download this exact one the link is in the description but it's just your basic single view application so you know you've got your view controller app delegate and stuff like that but what I want to call to attention is the view controller class so I might not have mentioned it yet but in objectivec classes are defined by two different files when you create a new class you'll get a dot H file and a dot M file and the dot H file is the interface for your class and this basically you list out methods properties variables things that you want other classes to be able to use and interact with in your M file that is the implementation file and that's the place where you actually write the code for the methods that you've declared in your interface now you can declare a private interface and we'll get to that in the next video about scoping but for this video just know that in the H file that's where you declare all your properties and methods in your and your M file you you implement them so that's important to note because we're going to be talking about method declaration here now let me type out a sample declaration for you guys now let's take a look at the different parts of this declaration this minus sign denotes that this is an instance method so this is a method that you can call on an instance of this class alternatively alternatively you can declare it with a plus sign and that means that it's a class method so you don't necessarily need an instance to call this method now the thing in the bracket is the return type of the method so in this case we're returning nothing but you could very well you know return an integer or some other class anything you'd want in the next part we have is the method name now what would it look like if we wanted to add some parameters to the method alright so that is a method signature with one integer parameter being passed in so the format is and then the type of the parameter followed by the name of the parameter now what would it look like if we had two parameters I'll show you that now this syntax is a little bit tricky because this you know it follows the same format as this first part just with the second parameter this is the label and this is the type of the second parameter and this is the name of the second parameter and then so on and so forth if you wanted to declare a third parameter you would have label colon return type parameter name okay so let's talk about calling methods now so let's jump into our implementation file I'll just copy that okay so I'm gonna implement our sample method with parameter but I'm gonna use this opportunity to show you guys how you would call another method in the last video we created a class named my class so I'm gonna do the same thing here just so I can declare it and show you guys how to call a method of it so you're gonna go to a new class and then call it my class and it's a subclass of nsobject I'm gonna put it in the root and then in my class I am going to add a method called do something so you notice that standard convention in objectivec method names start with a lowercase and then in my view controller class foanna to use it I began have to import that so this is all stuff we've learned before now let me declare a new instance of my class so remember in the last video we saw you know this allocation and initialization in this sort of syntax now this is calling methods of my class so alec is a class method of my class all of nsobject and same thing with the knit so if I wanted to call our instance method I'd have to do it on an instance of my class but we don't want class we want the instance and I call that method but there's something wrong here let me see oh I see so I wrote the method in the implementation file instead of the header file so let me copy and paste that and let me put it into the header file so there you go and now if we go back to the view controller that's gonna go away what's it saying here ah right so our method that week declared sample method with parameter is supposed to return an integer in this case it's telling me that I'm not returning it so let's go into my class and let's make do something return an integer and then let's implement it in the dot M file of my class and let's just make it return a number like 100 and if we go back here we can just return the result of the do something method which will be a hundred hey guys so that was episode three of learn objectivec that rhymes so anyways next episode we're gonna be talking about variable and method scoping and now for your fun fact of the day did you know that it took over 200 patents and 156 suppliers across three different continents to make the iPhone Wow that blows my mind as always please like comment and subscribe if you haven't done so already and stay tuned for the next video see you guys later you