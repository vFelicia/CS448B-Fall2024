hi welcome to lesson 10 by the end of this video you will have completed the war card game project all that's left to do is to count score and update the labels in order to do that though we need to write Swift code that can compare two numbers and then execute a different branch of code depending on the outcome in other words you're going to be writing Swift code that can make its own decisions that's step one if you want to build a terminator alright let's get this show on the road so here I've got a playground and the only thing I have right now is a constant called X and I've set it to equal to ten and now I'm going to show you how to write what's called an if statement in this if same lets us test conditions and if the condition that we're testing is true then we can choose to run some code and this is how we are going to actually compare the two numbers in our war card game project when we randomized those two numbers so let me show you how to write this if statement we start off with the keyword if and then we do space and then we write our condition or expression here and in this case I'm going to test this condition is X greater than 14 and if that is true that I want to run the following code we open up a code block with a pair of curly brackets and inside here let's just print hello so I'm just gonna put a comment here this code will run if X is greater than 14 since X is actually 10 and this is not true it's not going to run this statement here it's not gonna run any of the code in here I can put lots of code statements in here if I wanted to now let's change X to 15 in this case this becomes true and then it's going to run the code inside the if statement and therefore we see this hello statement down here now the cool thing is that I can actually expand my if statement into multiple branches I can test many things have all wanted to and the way we do that is this first test that we use if the second test we use else space if and then I can test another condition I can say is X less than ten all right if that's the case then let's print I don't know let's just print a and then I can go on and I can test something else is X let's do equal to and it opened up another code block if that is true now here's the interesting thing I want to show you if X is equal to 12 I don't use the single equal sign I use a double equal sign and this is to test equality why is this the case well because the single equal sign is used for assignment you learned this back in the first Swift lesson where we talked about variables and constants this equal sign is to use to assign this data on the righthand side to the variable or to the constant so if I use the single equal sign here Xcode will actually think we are assigning this to that when we actually want to compare so you use the double equal sign to test for equality all right so in this case I mean I just print B so far we've said that you can test a single condition and then you can test other conditions after that and there is actually a last part to the if statement which is the else keyword and there is no if in this case this is kind of like the last resort if none of these conditions up here are true then this is kind of like your catchall let's open up a code block and let's just print C in here so this entire thing is your if statement let's talk about how this code is going to be run so when it comes here it's going to test the statement is X greater than 14 and if it is it's going to come into this this is called a branch of the if statement and it's going to execute this line and it's going to skip everything else because in the entire if statement it's only going to choose one branch to go into so in here this is true so it comes into this branch and it's gonna skip the rest how about if we change X to nine now a is printed so what's happening here well it's gonna test this condition first and that's false so then it's going to test the next one and in this case it's true so then it's gonna come into here and it's gonna skip the rest now let's change X to 12 and you kind of get the idea right you test this one false it'll test the next one that's false then I'll test the next one and this is true so it's gonna come in here and it's gonna skip this guy now if I just made a c13 would be I guess the sweet spot here and we get C because it's gonna test these conditions all of them evaluate to false and then it's going to come down here and this is kind of the last resort where if none of this is true then it's going to come into this branch of code I want to point out that you can actually just omit the else if you wanted to and if you did that nothing would happen because they would check all of these conditions all of them are false so it's not going to do any of it and furthermore you can have more elsif branches if you want or you could just have one or you can simply have none in just a simple single branch if statement let me just hit undo here I want to point out something else here and that is that this whole thing is a single if statement I know I've said this before but I want to tell you what the implications of that are it means that only a single branch of this if statement is going to be executed right it's gonna go into the first one that is true or since we have an else clause it's going to come into this last branch this is different then if I had done something like this if I had done something like this these are separate if statements this is a single if statement this is another if statement and lastly this is the third if statement so that means in this case I could have multiple things printed so let me change this to that and if I had this as let's say 15 well you can see Hello is printed you can see a is printed and you can see that C is also printed right and the reason for this is because this is a single estimate it's going to test this if it's true then it's going to print this now on to the second if statement this is true so that's gonna print this third if statement it's gonna test this that's false then it's going to come into the else branch all right this is very different than if I had made these branches of my first if statement now this is a single if statement it's only gonna choose one branch to go into it's gonna test each of these conditions and go into the first one that is true in this case this one and it's gonna skip the rest so I just want to make that distinction to you and the last thing I just want to say about if statements before we move on is that testing these conditions can actually get pretty complex because there are things called boolean operators where you can chain multiple conditions together so I'm just going to do a very quick example this isn't something that we're going to need for our war card game project but you know good to know this stuff so for example I can test if X is greater than 14 and Y is equal to 10 I use a double ampersand symbol like that space and then I can test that so this is going to do two tests and they both have to be true in order for it to come into this branch because it's an end okay you can actually chain a whole bunch of these together now I want to show you or and that is these two double pipes on my keyboard I have to hold down shift and hit the backslash key in order to get these symbols here this is the or operator that means that if this is true or this is true then it will come into here only one of these two conditions needs to be true you know one can be false for example let's say I change X to ten right this is false however this is true and since it's an or it will still come into here and print hello however if this is and claws then they both have to be true you can see down here it actually comes down to print see down here okay so that's the end and or and you can chain multiple statements together and actually let me show you one more thing so this is equality if Y is equal to ten all right if you want to test inequality use that exclamation mark equals and that is going to say if y is not equal to ten and just to whet your appetite a little bit and show you some more things that you can do with this statements you can even include these brackets so you can say something like if this and this are true or you know X plus y is greater than twenty nine or something like that so in this or statement either this is true or either this is true and that's what those brackets allow you to do kind of like group things together or if we had another thing that's like a string like that you can do tests like if Z is equal to test then we could print hello or you know you can do not equal to test and you can actually even do greater than but in this case it's kind of weird to say if it's greater than or less than a but essentially it doesn't care about the string length so even though test is four characters and this is only one character it basically tests character by character if this is greater than a then it's going to be considered true you know and if we had two letters like that it would also it would basically test this letter against this letter and then e is considered greater than a right and so this would be true and it come down here but I don't usually see this happening a lot using equality symbols using greater than or less than with strings I just wanted to show you that that was possible all right so now we're going to go back into our war card game project and use if statements to compare this course so we're going to first go into the view controller that's Swift and when deal tapped in here we are randomizing to numbers right the left random number and the right random number and then we are setting the images in fact we should probably write some comments so I think we can get rid of this print statement here let's get rid of these print statements and down here I'm gonna write randomized to numbers change the image views and down here we are going to compare the numbers all right so I can say if the left random number is greater than the right random number and then we open up a pair of curly brackets right in this case the left side has one because it's got the bigger number and I'm gonna do here else if write random number is greater than the left random number then do this and then for the last Clause there's only one more possibility right and that is if they are equal so I can either you know just use an else statement like that or you can just do you know if left the random number is equal to right random number if you want to be a little clearer you can do that as well so there are three different cases so in order to keep a score we actually need a counter of some sort so we're gonna go all the way up here and we are going to write two properties to keep track of the scores so let us write a left score we're going to just set that to zero and we are also going to do a write score also equal to zero I'm going to scroll all the way back down here so if the left random number is greater than the right random number then we're going to increase this the left score so you can either do left score equals left score plus one or you can actually do a shorthand way and that is to use the symbol plus equals and that just means to increment so we're going to increment whatever left score is by one all right we're going to do the same thing here if the right random number is greater than the left number then we are going to do the right score plus equal one and if you want to decrement you can actually do minus equal just a quick note all right so here update the score now update the label to reflect that new score and we have an iboutlet property for that left score label all right we connected it before so we can do left score label and the label has actually got a text property and you've said it before let's go to the storyboard let me click this label you can see here in the inspector panel there is this text property right here all right so we can use dot notation start typing text and it expects a string all right so we can try to assign it this left score which is an integer and you can see what happens all right and Xcode is going to complain cannot assign value of int to a type of string so we need to somehow convert this int data to a string data all right we need to represent that number in the form of a string so you can actually create a new string object and pass in an integer to create a string version of that integer and you do it like this okay so we're gonna do the same thing here update the score update the label and make sure you're incrementing the correct score right here we are incrementing the Left score and updating the left score label here we're going to update the right score and update the right score label dot text equals a new string and in this string object we are going to initialize it with the right score and let us run our project and see how that looks for a tie I'm not sure what we want to do there so I'm just gonna actually leave that empty so 10 is greater than 6 so we have this updated this is greater than 5 so we have this is 2 now it looks like the player is winning all the time there we go CPU gets one on the scoreboard 10 is greater than 5 all right pretty cool right now the last part is how do we get this app onto our device so what you're gonna do is you're actually going to plug it your device into your computer and then if you go back to Xcode here and you pull down this where you select a simulator you go all the way up here you're gonna see this menu node well mine say is no device is connected to my Mac because I don't actually have a phone there but if you have connected your phone or your iPad here you're gonna see that device appear here and you just want to select it so this is what I get because I don't have a device but when you select it it should have your device selected and then all you need to do is hit the Run button and you're going to run that app on your device and even after you disconnect your device you'll still have that app on your phone and you also might get a prompt if it's the first time you're using your device with Xcode you might get a little popup asking if you want to use this device for development then you just say yes and off you go not bad right look at how far you've come seriously give yourself a pat on the back if you finish this project I want you to go to the lesson page scroll down and click on that tweet button to let me know I love hearing from people who have completed this project and I'll also put your name on the wall of fame that is exclusively for people who have finished this project and if you haven't gotten this project to work yet remember you can always download my Xcode project and compare it against your own also don't be afraid to ask for help just leave a comment below in the next lesson I'll show you where to go from here and what to learn next alright see you there