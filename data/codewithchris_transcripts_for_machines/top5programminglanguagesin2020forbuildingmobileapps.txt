hey code crew in this video I'll reveal my thoughts on what the top 5 programming languages for mobile apps are now just to burst your bubble right away there is no universal top language and that's because it largely depends on what your goals are are you looking for a job are you looking to build a app for a specific platform or are you trying to keep your options as open as possible all of these are factors to consider and we're gonna break it down in a variety of different angles in this upcoming list alright stay tuned hey there my name is Chris and if this is your first time here welcome to code with Chris where we'll teach you how to build an app even if you've never coded before before I revealed my list I want to pose a question to you what do you think is the best programming language for building mobile apps let me know by leaving a quick comment below and on your way down there if you wouldn't mind please hit the thumbs up button and subscribe if you haven't already I really appreciate that alright let's get started with number five and number five we have dart for building crossplatform native mobile apps using flutter a quick note if this is your first time hearing the term crossplatform it means that you can write a single codebase and deploy your app on multiple platforms such as iOS and Android awesome in theory but not so smooth sailing in practice now before we get too far off topic I'm not here to debate whether or not flutter is a good mobile crossplatform framework the topic of this video is to evaluate and rank programming languages so let's take a look at dart and what it's good for and what may be not so good about it dart is a relatively new programming language developed by Google described as a client optimised language for building fast apps you can build apps on mobile on desktop and even for backend so what are some pros and cons of Dart there are multiple ways to use dart for example dart comes with a dart virtual machine which allows computers to execute dart code or you can convert your dart code to JavaScript and use it wherever you can use javascript or you can compile your dart code to native code for running on Android and iOS you get the idea it's pretty versatile Pro number two it's designed to be fast in fact I've read that dart code which is converted to JavaScript can actually run faster than handwritten JavaScript if you're wondering how this can be it's because when your handwriting or hand typing JavaScript you follow common patterns and structures of the language whereas when the code is being converted from dart to JavaScript the dart2js compiler can make a lot of optimizations and shortcuts sacrificing the legibility and clarity of hen written code for speed and performance instead is it sad that a machine can write better code than a human developer can alright so what's not so great about dart well my biggest gripe about dart is that although it seems like a really cool language it doesn't seem like the first language I would choose to learn especially when it comes to some of the other languages that you're going to see in the rest of this video if you're in the boat where you're short on time and you have to choose only one programming language to invest your time into learning then there are a ton of other more popular languages out there that will give you a better return on investment especially from the angle of keeping your options open and finding jobs and now this brings us to language number four at number four we have HTML CSS and JavaScript for building mobile apps using PhoneGap okay first of all I realize that I just need three things and also if you want to get really technical with me technically HTML and CSS aren't programming languages but in my opinion for someone who is nontechnical or someone who just wants to get into the coding world for the first time I think HTML and CSS are great gateway languages to learn to get your feet wet and kind of make your way into that technical world the reason is because learning HTML usually leads to learning CSS and JavaScript because they all play so nicely together and before you know it you're going to be fullon into web development all right back to PhoneGap PhoneGap now owned by adobe allows you to build crossplatform apps using HTML CSS and JavaScript the apps are essentially rendered in web views which may not look like or perform as well as apps that are written natively for this specific platform that they're targeting for example using swift for iOS or using Kotlin for Android now I'm not a huge fan of PhoneGap but the reason its number four here in my list is because HTML CSS and JavaScript are great languages to know how to use anything web related like websites or web applications you'll come across HTML CSS and JavaScript now the biggest Pro in terms of learning these technologies is that they are so widely used that these skills will be applicable for other uses as well not just building mobile apps Pro number two it's easy to pick up I think HTML and CSS are great and simple languages to start learning for someone who is not technical or hasn't coded before it's simple fun and engaging and you can start to see results right away even with knowing just a few HTML tags and now what's not so good about learning these skills for mobile app development if your goal is to build a mobile app then these skills might not be the best fit because I don't believe that PhoneGap is the best solution for building crossplatform mobile apps it might work for some people if those are the skills that you've already had it might be a easy way to get your foot in the door to building mobile apps but if you're starting fresh and your goal is for building mobile apps then I think some of the other solutions on my list are going to be better suited before we get into number three I just want to say that today's video is sponsored by Atlantic dotnet Atlantic net provides great VPS hosting and they are offering a free one gig virtual server with SSDs free block storage and free snapshots for an entire year in addition to that get $25 and free credits to use on any other services they offer try Atlanta net to develop test or launch your next project ease of use is something that I like as it frees up my mind to focus on coding I also like that they have roundtheclock phone support so if I happen to get stuck I can contact them easily so visit Atlantic dotnet slash code with Chris and enter the code Chris to get your $25 free credit these guys are great give them a try and don't forget to use the coupon code Chris to get your $25 free credit which is an exclusive offer to you guys now back to our list at number three we have JavaScript for building crossplatform mobile apps with react native yes we're still talking about crossplatform apps single codebase deployed on multiple platforms well what makes PhoneGap sit on number four on our list and react native sit on number three well they both use popular widely used programming languages PhoneGap with HTML CSS and javascript and react native with javascript and they're both crossplatform technologies but this is where we need to make a distinction with react native and flutter you use JavaScript and dart respectively to code once and then that code gets translated into code that is native to the platform it's getting deployed to this makes sure that the resulting app is fast and performs like an app written with a native language would with PhoneGap however you're essentially just building in html5 web app that gets displayed through a webview on whatever platform you're deploying to so yeah react native wins over PhoneGap they're in my opinion so what's good and what's not so good about react native one of the biggest benefits of react native over PhoneGap and flutter is that you're working with JavaScript one of the most popular programming languages out there even if you decide not to pursue building mobile apps anymore you can still use JavaScript for tons of other things like web apps and serverside code Pro number two working with a popular programming language also means that there's a lot of support in a huge library of reusable code modules and packages in terms of what's not so good from what I've read and heard building crossplatform apps with react native may still not be quite on par with actual native apps written with Swift and Kotlin or Java so far we've talked about three programming languages and three crossplatform technologies for building mobile apps it's nice to imagine investing in and learning a single programming language that would allow you to build apps on multiple platforms in reality though it's not so realistic to have a single codebase that can be both an Android app and an iOS app just using these two platforms as an example both of them have very different guidelines on how user interface elements should look like how navigation should work and so on so even if you had a single codebase you'd probably have bits of code in there purely dedicated to tailoring the apps look and feel and maybe even behavior depending on whether the app is being run on iOS or Android furthermore if Google or Apple announces a new feature coming out on their latest version of their operating system it might not be immediately supported by your crossplatform technology of choice so you see if your goal is to build the best possible user experience for a specific app platform then go with the native language for that platform which brings us to number two and number one these two are tied for first place depending on which platform you want to build for Swift for iOS and Kotlin for Android these two along with Java for Android are considered firstclass languages for their respective platforms and that means that using them you're going to get the best support the most control of and the most access to the platform itself and all of the features of the platform now I do want to speak a little bit about objectivec versus Swift and about Java versus Kotlin in regards to objectivec it's still in use and there are a ton of legacy iOS apps out there but Apple develops Swift to be better and faster so if you had to choose only one either objectivec or Swift I don't see a reason to choose Objective C fun fact Stack Overflow conducted a survey in 2019 asking developers for the most loved dreaded and wanted programming languages Objective C got second place for the most dreaded language as for Java versus it's a harder choice because Java is still the number one most popular language according to this language index although developers agree that Kotlin is more concise than Java and it's also easier for beginners to learn the reality is that Java is so prevalent that learning it is never a bad thing for your career and I think this is where you have to ask yourself what your goals are because my list changes depending on what you're trying to achieve let's talk about that if your goal is to build crossplatform apps then I would say react native is your best bet it's got a larger community and more support compared to dart and flutter + learning JavaScript opens doors for you beyond mobile apps if your goal is to provide the best experience possible then go with the firstclass language for the platform you're building for Swift for iOS and Java or Kotlin for Android if your goal is to keep your options open to explore other platforms and for maximizing job opportunities then I would suggest sticking with JavaScript or Java well I hope that was insightful for you guys do you agree or disagree with me please let me know by leave me a quick comment below I'd love to hear from you guys and lastly don't forget to give this video a thumbs up and subscribe if you haven't already hit that Bell notification icon so you don't miss the next video thank you so much I'll talk to you next time