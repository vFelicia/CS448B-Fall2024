in the last lesson you built this user interface but in order to handle Taps on this button to change the cards up top we're going to need a little bit of Swift Code by the end of this lesson you'll be writing your own Swift Code statements and you'll realize that it's not so hard to read or write so please watch Until the End alright let's buckle up and let's go first of all let's make sure we're all on the same page what is coding well to me it is just the act of writing out code statements which represent instructions that we want the computer to do and then the computer reads the code statements and carries out our instructions well what is Swift then well Swift is the coding language that we use to write those code statements just like a language for instance English or Spanish has a structure and it has rules to follow and it allows us to express ourselves the Swift coding language is the same it has a structure and a grammar which we follow in order to write Swift Code statements these Swift Code statements are then converted into machine code which the computer can understand and carry out now you might ask why not just write machine code and skip this extra step well Swift code is easy to read write and to manage for us human beings but machine code is not so that's why we need this step now the thing that converts the high level code like Swift code to machine code is called a compiler in this case with building iOS apps xcode performs this compilation step now that you understand what it is let's try writing some Swift Code statements of our own and I know the perfect place to do this we're going to experiment with some Swift Code in something called xcode playgrounds now if you're brand new to this video series we downloaded and installed xcode back in lesson one so if you don't have xcode ready yet just go ahead and watch lesson one right over there and come back to this lesson when you have xcode ready to go now a playground is a lightweight way for us to practice with and experiment with swift code without creating a brand new app project which has a ton of views already set up for you and things that we don't need so here's how we can create our playground make sure that xcode is in Focus you can click on xcode the dialog window right here go up to file and then go new and choose playground you're going to get something like this now we are going to go under iOS and we're going to choose blank and that's going to be the most basic of basic playgrounds for us to test our code with click on next and we are going to save this somewhere I'm just going to call this a Swift Code playground you can call it whatever you'd like is we're just going to use it to test some code okay so now uh first of all I'm going to close this left hand Navigator because we don't need that by clicking that button and then I'm going to make this window a little larger so we can see what we're working with okay so if you're following along you should have something that looks like this now in this brand new playground we have this single Swift statement you can ignore the import statement for now let's focus on this line of Swift Code and let's see what that does VAR greeting equals hello playground let's dissect this Swift statement first of all we're going to talk about this hello playground part on the right hand side of the statement now this is a piece of Text data and you've seen this before in the user interface that you've previously built I've highlighted the pieces of text Data here now I shouldn't really surprise you apps are all about manipulating data pulling data from various sources manipulating that data showing that data to users through the app user interface interacting capturing user interaction as data and then processing that storing data and retrieving data to and from databases and so on and so forth later on in this lesson we're going to talk about different types of data that you can work with but for now let's go back to the code statement this is a piece of text Data I want to ask you a question where does this piece of text Data live or in other words where does it exist well it exists in the computer's memory this is memory space that is allocated for our app to function okay great now how do we refer to this piece of data in the memory so that we can work with it and manipulate it so walk with me through this scenario imagine you have your first Swift Code statement that creates this piece of data in the computer's memory in your second Swift Code statement let's say you want to work with this piece of data perhaps you want to manipulate that text Data change it to all capitals or or maybe you want to take it to display it on the user interface or something like that but how do you retrieve it and access it from the computer's memory we need some way to be able to access and reference that piece of data in memory and this is where the rest of that Swift Code statement comes in let's go back to it this is a variable and it is something that allows us to keep a reference to something else think about it like a sticky label that you can stick on a piece of data in this case our variable or label if you want to think about it that way is called greeting and the equal sign is what is called an assignment operator now its job is to assign the data on the right hand side to the variable on the left hand side it's like the process of sticking that label onto that piece of data right here VAR is a special Swift keyword and what it does is create a new variable so if you read this entire Swift code statement from left to right these are the instructions it would be giving to the computer when the computer executes it so starting from the left first of all create a variable named greeting next assign to this variable the piece of text Data hello Playground now after this code statement is run we now have a way to refer to that piece of Text data in memory anytime we want to get access to it we just have to use the variable name in this case that is greeting in fact take a look at this second line this code statement prints out the text Data let's see how we can try this out on the playground the xcode playground has a way for us to run or execute the code to see what the results are or the output so here in the lower left hand corner you'll find this small play button and if you tap on that it's going to execute the playground now the first time you tap on it you can check the status bar it'll tell you it's running and what after you click it you're going to see the output now right here you won't see anything aside from something appearing over there because we haven't printed anything out but in the lower right hand corner you see this other button this brings up this little window down here and this is called the console area this is where output will happen so let's go ahead and write that second print statement and try out printing out our variable so I'm going to type in print Open Bracket greeting remember this variable is going to reference hello playground so let me hit stop here and hit execute again and this time it's going to run both lines of code starting from line three and then line four and you're going to see the result of line 4 printing out the text Data into the console here now I want you to notice something in line three we had the VAR keyword but then in line four when we wanted to use that variable we did not have to use the VAR keyword again because remember this VAR keyword is a special Swift keyword to create a new variable in line four we're not creating a new variable we are simply calling it and using the data that it references that's why we don't use the VAR keyword there now if you want to use proper terminology this process of using the VAR keyword to create a new variable is actually called declaring a new variable now I only use the word creating because in my experience teaching this creating makes more sense to beginners but now that I've explained this to you I'm going to start using the word declaring just so that in the future if you learn from different other training materials you won't get confused when you see them saying declaring now I want to show you something cool about variables remember that analogy about the variable being like a label that you can stick on data well just like labels how you can peel it off something and stick it on something else you can do the same thing with variables so in fact I can assign something else to my variable so let me reference the variable like that notice I don't have to use VAR again because I only need to create it once at the very beginning so greeting I'm going to use the assignment operator and I am going to assign another piece of data a different piece of data to it like that now if I moved my print statement so let me command X to cut it paste it here command V now if I do that what do you think this is going to print out let's go ahead and try it out so I'm going to hit stop and then hit run and it prints out I can write Swift because this has now assigned to my greeting variable the piece of text Data I can write Swift now what happens to the first piece of text Data hello playground while the computer will detect if nothing else needs to use that piece of data it's going to clear it out from memory I mentioned before that there are different types of data that you can work with so here is a list now it's not exhaustive but these are the most common and basic data types that you will begin working with so first of all let's talk about the string data type this is what we've been working with so far it's text Data I know that's a little bit of a weird term but think of it as a string of characters and in fact this is the terminology for text Data across most programming languages so when you hear string think of text next up we have int and double so int represents integer data so those are like whole numbers including negatives and doubles are decimal numbers or fractional numbers Boolean or Bool for short stands for true false not type type of thing this data type is useful when there are only two options like a light switch on or off now let's go into our playground and let's try out some of these data types alright so first of all let's try out the numbers because we already did strings like this is a string right here so that's Text data so let's try out an INT Pi we'll print out my int notice I'm using the VAR keyword to create a brand new variable called my int and I'm assigning to it the integer five and then I'm printing that let's see what we get in the console window so we get that five all right let's try to look at my double I'm just going to create the Boolean too now you'll notice as I'm typing autocomplete pops up and this is something in xcode that helps you xcode get into detect what sort of variables you have and as you're typing as I'm typing m y I can narrow down it Narrows out down the list to some possible selections and I I don't have to type out the rest of it I can just move down press enter and there we go so let's go ahead and execute this run this and see what we get all right so there's our string data there's our integer data there's our double data and there is our Boolean data so that just in case you didn't know uh that is going to be the flip side of false it's just going to be true all right next up now that you know about data types I need to mention that when you declare a new variable you also need to specify what data type it is going to be referencing now you might be saying that's not true here's the thing we've been using a short form to declare these variables right here here is the actual way after the variable name you put a colon followed by the data type that is to be expected that this variable will be referencing whether that's string int double Bool or something else now here's the kicker variables can only store data of the same type that you declared for that variable now you might be thinking looking at this playground where have I declared any data types in these variable declarations and none of them have that colon data type well what is happening here is a shorthand I don't have to say what type of data it'll hold but the system will look at what type of data I'm assigning to it and then it's going to know oh okay so this greeting variable is actually a string data type variable this my int it looks at this data that I'm assigning to it for the very first time and it's going to know oh this is an INT data type variable so the same thing goes for the other variables this is going to be a double this is going to be school now why is this important to know well let me show you an example for this variable greeting it is of the string data type so I can assign these two pieces of string to it in fact I can reassign another piece of Text data to it however let's say I try to assign an integer to it we're going to if we try to run this we're going to get an error cannot assign value of type int which is this to type string which is the greeting now even if we do not declare the data type up here so let me just get rid of that and let me run it again it will still end up with the same error because the first time you assign data to that variable you're locking in the type it's going to look at this and it's going to say this is string data type this is going to be a string data type variable and that's what it is from that point on okay so that's just something that is important to know now one last thing I want to show you before we move on from this lesson is something called a constant now constants are a special type of variable instead of using the VAR keyword to declare a new variable we use the let keyword to declare a new constant now everything about a constant is the same as a variable from how it's used to how it's declared and how it can only store data of the same data type as what you declare it with now the only difference there's one single difference and that is that with a constant you cannot reassign data to it once you assign data to it it is constant all right you guaranteed that that is the piece of data that it's affixed to think of it as like a label but instead of just sticking it on the piece of data you are super gluing it on with some industrial grade stuff and you cannot rip it off okay that is like a constant so let's go back to the playground and let's try this out so for example uh if I change this VAR for the greeting variable to a let that changes it to a constant we're going to get an error here because we cannot assign a value greeting is a let constant we've already assigned it this value so we cannot reassign it however if I change my int to a let constant this is going to be perfectly fine I can run this and it's going to produce output however if I try to reassign something to that label let's say 40 we are going to get an error now you might wonder why would we ever want to use a let instead of a VAR well the reason is that variables have special allowances in memory some stuff under the hood that gives us this flexibility but it comes at the cost of not being as efficient or optimized as a constant so if you know something is not going to change or you want the assurance that it will never change as you are using your constant then you should use the let keyword and in fact xcode will help you optimize this if you use VAR keywords and xcode detects that hey you've never reassigned anything into this variable why not use a let and it's going to prompt you as you're coding in in an actual app project it's going to prompt you why don't you change this VAR to a let instead because it's not going to impact anything and in fact under the hood there's going to be a Teensy bit of optimization congrats on writing your first Swift Code statements if you're learning a lot from this video series please support me by giving this video a thumbs up and if you're not shy please drop a comment below and let me know whether or not you are able to follow along this diagram sums up what you've learned today you learned about what variables are how to declare them and how to use them you learned about data types and finally you also learned about constants great progress today we are going to continue learning Swift and we're getting closer and closer to going back to that war card game and adding user interaction in this lesson you learned about code statements in the next lesson we're going to learn how to batch these code statements up so that we can execute them as a group so that we can assign that group to the button tab on the war card game and that is how we are making our way towards adding interactivity to that work our game click over here to go to the next lesson and I'll see you there