hey guys welcome to another lesson of code with Chris this is the Objective C series and in this video we're going to continue to talk about properties and I'm gonna show you what actually happens under the hood when you declare a property like we did in the previous video so alright let's get started hey guys so here I have our properties project that we created from the last video and you can download this project from the link in the description below or from the annotation on the screen in the last video what we did in car dot H was create a couple of properties and then in viewcontroller.m there's a couple of examples of how to set the properties and how to retrieve them well I want to show you what is actually happening under the hood so what if you go back to car dot H for example I declared a property here called name which is of anise string type and you know that's it you can use your property but what's happening under the hood is an instance variable gets created for you and then a getter and a setter method gets created for you as well so let me show you what that means using this name property as an example so I'm gonna declare a private interface here and declare our private instance variable name and then a method to to set the property so by default the the method that gets created for you is set and then the property name that you declared before and then a method to return the value when you retrieve the property and by default this method would be named the same name as your property so all of this code kind of gets created for you it kind of happens behind the scenes when you declare a property like this and as a result you can actually in viewcontroller.m you see how we use the dot notation here you can actually do something like this and instead go set name to set your property and you can do this even without writing any of the code we have here even without declaring the setname method here the reason that sometimes you might want to explicitly type some of this out is for example if there was a situation where I wanted to set the mileage of the car whenever the name gets set I could do that right here and say something like selfthought mileage equals 10,000 if I go back to view controller dot M whenever name gets set now the mileage would get set to 10,000 automatically for my object because I have this code right here even if I didn't do it this way if I didn't explicitly use the setname method even by using the dot notation and I by assigning some value to the name property this setname method would get called so this is called the setter method for my name property and this is the getter method for my name property and up here this is just the private instance variable that tracks the value that my property holds and in here in the setname method you don't have to be limited to setting other properties you could be calling other methods you could have all sorts of for a practical example would be let's say that I wanted the name to always be stored in lowercase I could do something like making sure that the that the name is in lowercase here by converting it so I could do something like using this helper method lowercase string to take whatever value someone is setting to my name property and then taking the lowercase string and then assigning it to the property and if you choose you know you could always go back to just having the plain implementation if you remove all of this stuff your name property still works as expected you can assign and retrieve values from it so that wraps it up for properties at least until we get to interface builder but for your fun fact of the day did you know that in WWDC coming up next week well it's bad to mention dates and videos because who knows when you're gonna be watching this but in WWDC 2013 iOS 7 is going to be announced then supposedly they're gonna change the whole user interface from all this glossy gradient II type of user interface into a more flat and monotone type of interface so did you guys know that and what do you think of it let me know in the comment section below and I'll see you in the next video you