hello welcome to lesson 14 of the learned Swift for beginners series in this video you're going to learn our properties which is something that we have been using already together since the class's lesson but we haven't formally introduced them yet so this video is for that in addition to that I'm going to show you some other cool things you can do with properties that you can't do with variables okay so let's get started so here I have a playground which defines two classes blog post and person you might recognize this from previous lessons and in both of these classes we've defined some variables here well properties are nothing more than variables that are associated with a class like this so for example in this blog post class I have a title property body author and number of comments and if I create a brand new blog post object from this class so let's say let my post equals new blog post like that and then in order to access this title property I would use a dot notation I would say my post dot title and I'm going to assign something to this property and let's just call it title of post like that and in order to retreat that value from that property I would just use dot notation again and this would return the value inside that property so you can see that property is just like a variable where it stores a value and you can retrieve it but I don't know if I mentioned this before and that is that properties are independent between objects so remember we have defined this blog post class right here and from this class we can create many blog post objects for instance here I've created a blog post object and I've assigned it to my post now let me create a second blog post object I'm going to call this my post and I'm going to create a brand new blog post object from there so I have assigned title of post to the title property of this guy right here right that doesn't affect my new blog post object so I can assign my post to title equals another title like that and if I display this title you can see that it shows another title so the properties are really variables that are attached to the blog post objects that I create and although each blog post object has a title property the values that they store are independent of one another okay so the second thing I wanted to point out with properties is that when you're working inside your class so let's say we're working on this blog post class and we create some functions here let's say add comment and we're going to create a function like that and we're going to create another function maybe called share share article okay these don't really have to do anything I'm just I just need to create two functions for the sake of creating two functions to demonstrate this purpose okay so just disregard what what I'm calling them because they're not really going to do that function okay so what I wanted to point out is that these properties that you define inside the class they can be accessed inside any of the functions inside that class so inside add comment you know I might be performing some code to add a comment and I would be able to access let's say you know I can print title or something like that right that would access this guy well actually that's an optional so using what we learned let me just force and wrap it but my point is is that I can access these properties here you know or I can print let's say body for example you know and here likewise I can also print body and within all the functions inside this class I can access any of these properties up here and I can set them to from within any of these functions however if you declare a variable inside of a function that is what's called a local variable and the existence of that variable is limited to the scope of that function so what that means in plain English is if I declare a variable here let's say var my comment equals you know some comment like that I would not be able to access this variable inside this function here so if I try to you know print my comment you're going to see it throw an error here saying that my comment was never used oh wait that's regarding this guy right here so this is just an optimization Xcode this yellow little triangle means that it's a warning it's not really an error so it's fine Xcode is just warning you that you declared this my comment variable and you'll find it something but you never use it so consider consider changing its name to an underscore which which is an optimization but we are going to use it so Xcode is just proactive because every time you're typing code it just scans your code and it tries to tell you about these optimizations that you can do okay so that's kind of a side note back to the main point I was trying to make and that is if you look at this error here on use of unresolved identifiers my comment that means that Xcode doesn't know what you're referring to when you try to print my comment here so even though we declared it here and we assigned it inside this function this variable because you declare the inside here is the scope of this variable or its existence is limited to whatever is inside these two curly brackets you know it's limited to the code inside this function if I wanted it to be accessible everywhere you know I would create a property and I would use that instead so that's probably something you're going to get used to as you're doing more coding is the scope of where you declare things so this is called the local variable because we're declaring it inside the function and these properties that we declare up here to hold values are accessible inside the whole class so what that means is that let me just delete these two functions for now so what that means is that if you have a function that let's say calculate the result or perform some sort of calculation like for example add up comment total or comment count or something like that and the point of this function is to maybe sum up the number of comments that this blog post has and then at the end of the whatever you know you're performing calculations here I'm do some calculations and come up with as a result arrive at a result now what do you do with that result right you can either when you learn this in the functions lesson is that you can specify a return value so this just specifies that when you call add up common count it's going to return a number for you so now you can say you know return whatever the result is whatever variable is stored in write you can return it to the caller another thing that you can do to make it accessible later on because remember any variables that you declare inside here are local variables and they live and die inside this function here so if I didn't do the return value route and I arrived at some sort of calculated result and I wanted to save it for use for later on I would probably assign it to a property so I can say number of comments equals whatever result that I arrived that and by doing this when I call this function it's going to do some calculations calculate the result the total number of comments right and then it's going to assign it into this property and now I can use the number of comments in other functions or later on if I left it as a local variable it would again when this function finishes that would be lost okay so that's the difference between the lifetime or the scope of property versus local variables and now for the third thing that I want to show you in this lesson is something called computed properties and it's one of those things that makes properties a little more special than just plain old variables here so let me let me get rid of these two here so that we can I start fresh and we're back to where we started in this lesson you can do what's called a computed property and what that is is it just returns and what that is is it lets you do some calculation and return a result when you call it property so let me demonstrate here so let's say that we have let author equals person right so there is our author and let's set the author's name Chris change which is my name and now let's create a blog post my post equals blog post okay and now let's assign the author property of the post right let's assign author into it now author right here is this person this person object that I created and finally let's set the title let's say learn Swift for beginners ok so what do we have here we have an author object which has the name set to Christian we have a blog post object with the author set to this person object that I created and I also set the title to learn Swift for beginners now what I wanted to show you is I'm going to create a computed property up here I'm just going to add a comment so that just to make it stand out a little bit so I can save our full title is a string and I'm going to open up a set of curly brackets right right after it and what I'm going to say is check if title and author on not nil check that title and author or not now because title is an optional write an author is also and optional and you learned about these in the previous lesson so you know what they mean they could return nil which is nothing right when you unwrap it so I'm going to use an if statement just to check so if title is not equal to nil and and that's the double ampersand which represents an end condition so if title is not nil and author is also not nil both of these conditions have to be true then I'm going to run this code inside then return title and remember because title is an optional string right that means I have to unwrap it to get the value inside and I'm going to use the exclamation mark to force unwrap it that means I'm going to tell Xcode I'm just going to unwrap that optional and use whatever is inside whether its value or or whether it's no and I know for a fact that it's not no because I just checked it up here right so I can safely and confidently do this so I'm going to say bye and then plus and I'm going to do the same thing with author I'm just going to force and wrap it and use it okay so let's see what it's saying here cannot be applied to string and person that's right okay so author is a person right so I can't I can't append a person object to the string what I meant to do actually is I meant to unwrap the author right to get the person object and then call its name property that's what I actually wanted to do okay so right here Xcode is complaining that missing returned in a function expected to return a string so this computed property here when it gets called full title it's supposed to return a string and if title is not nil and author is not no it is going to return a string but what is one of these things are nil either or in that case I'm just going to use the else branch here I'm just giving the return let's say let's do another check else if title is not nil so it's not equals nil then return just the title oops force and wrap that finally if the title is nil then I don't know what we can do other than return an empty string or let's say no title let's do that okay so this is awesome now this is a computer property and I hope you can see that from this demonstration what that means it's a property where basically you can perform some code you can do some calculation you can combine a bunch of things and return a result return something so if I say down here if I say my host dot full title what do you think it's going to display let me print it out because it's kind of truncated over here and used to print so it prints down in the consult it's learned Swift for beginners by Chris chain and I didn't have to set that right because this is a computed property this full title property is calculated by grabbing the title and appending by and then appending the author name and if we didn't have an author so let me just let me just get rid of this line here for setting the author if we didn't have an author it would just print out the title and if I get rid of the title and it doesn't have a title then it's going to print no title and that's all of this logic here in my computed property okay so that's computer properties there's also additional things which we won't cover in this lesson we'll probably do another video on properties and that is getters and setters and property observers but this is a really great start to taking a look at properties so thanks for watching please like the video and please subscribe if you want to see more of these videos and yeah I'll see you next time bye for now you