hello welcome to lesson two of how to make iPhone apps with no programming experience in today's lesson we're going to jump right into Swift Code because I know for a lot of you who are just starting out the most intimidating aspect of building apps is the coding side of things so I want to show you in today's lesson that Swift Code doesn't have to be hard to understand and I bet you by the end of this lesson you'll be surprised at how you are able to follow along and interpret Swift Code and hopefully you won't be as intimidated by coding as you were when you started out to get the most out of this lesson and if you're serious about app development I do recommend that you open up xcode and you follow along and just typing the Swift Code out as you're following along even though you're not really building anything it's going to create this mental shift in your head that you can do this and you can write Swift Code so once again if you missed the last lesson you can download xcode from the Mac App Store uh just search for xcode right here I'm using a beta version of xcode hopefully by the time you're watching this you will be able to download this xcode version 8 officially released in the Mac App Store I just want to get ahead of the game so I'm recording this on a beta version of version 8 even if you have version 7 or you can only download version 7 right now don't worry about it just just go ahead with it it's not going to look much different if at all okay so the thing I'm going to start with first is a playground so here is's the welcome dialogue of xcode and you can just click this get started with a playground if you don't see this simply go up to your xcode menu here go file new and choose playground what you're going to get is a dialogue that asks you to name your playground I'm just going to leave it as my playground and I'm going to choose platform iOS make sure you're not selected Mac OS or TV OS choose iOS click next and you're going to save it somewhere I'm just going to save it on my desktop since it's temporary and this is what your playground screen looks like so what a playground is it's a place where you can try out some Swift code without necessarily committing to a fullfledged app project which comes with views and uh view controllers and other things like that right here all we're doing is we're going to be able to write some Swift Code it's going to execute the code and output something on the right hand side here now you you might have noticed that it took a while for this to show up uh up here on this status bar it says Ready well when you first launch your playground it might be spinning and it might say loading something well when it's ready it should have processed whatever is down here another thing to double check is if you go down here into this play Arrow I want you to click it and hold it and a menu will pop up mine is set to automatically run which means whenever I type new Swift code into the window it's going to automatically run that Swift Code and I want you to uh check that off as well so make sure you have this selected and not manually run so what this is here this main part this is where you write your Swift Code it's the code editor and on the right hand side here you're going to see some output based on what you're typing in here one more thing before we continue on a lot of people ask me about line numbers I think by default they should be enabled but if for some reason you don't see these line numbers enabled just go into your xcode preferences under text editing and you can say show line numbers here all right so let's get started first of all we're going to ignore these two lines we're going to save that for the end of the video and I'll explain to you what those are first of all I want to focus on this so take note here that I've got a piece of text the only thing that really makes sense here h playground and it's surrounded by quotations and when you do that it highlights it in Red so you can easily tell it's a piece of text next we have this keyword here VAR and you know that it's a keyword because it's highlighted in pink so what are we doing here well we've got this piece of text hello playground and we need to store it somewhere so what we're going to do is declare a variable that's what v stands for and we're going to use this variable you can think of it as a bucket or a label that can store something or you can label something that you can reference later and we're naming this variable St Str okay so this keyword V is to declare a new variable St is the name of my variable and equals is me assigning this piece of text into this variable so now whenever I access this variable St Str I can retrieve my piece of text so once again V declaring a variable naming the variable an equal sign is assigning whatever is on the right hand side into that variable in this case on the right hand side of the equal sign I have a piece of text called hello playground so let me write now print is another keyword and I'm going to print Str Str and press enter so it may take a while for your playground to run if it's set to automatically run and when it does you can see the output here now you'll notice that it has a sln at the end of hello playground and that sln just stands for a new line break so it starts a new line the next time you print something now you may wonder why is the output here hello playground when I assign this piece of text into this variable and then why does it output again when I use the keyword print furthermore you may notice that down here this little tray has come up and you can also see Hello playground as well well what's going on is that this area right here at the bottom is actually the output of your program or your Swift code right here on the right hand side this is just kind of like a a guide that's showing you what's going on with each of your lines of code so here it's just showing you what you've assigned into the variable and here it's just showing you what the output is but really the output of your program is down here whereas the right hand side is kind of just a a check or a guide for each of your lines of code to show you what's going on okay so now let's declare our own variable and assign something else into it VAR I'm going to call this variable a I'm going to put equals and I'm going to put the number five so here instead of a piece of text I'm assigning the number five into my variable a so you can see here it is telling me that I've assigned five into my variable but you'll notice that nothing shows down here unless I use the print command so let me declare another variable now VAR b equal 1 and again that's a separate variable and I'm putting one into B now with variables remember I told you that it's like a label you can use to retrieve whatever you stored into it well I can do something like print a + b what that's going to give me is six and you can see here because I used the keyword print it is showing up here and you can see it's on a new line now because there is a sln by default when you use the print command uh it's going to append that sln to your output okay now I'm going to show you something else another key keyword it's called the if statement now this keyword if allows you to check a certain condition and if that condition is true to perform a set of actions and if the condition is false you're able to do something else so let me say if a + b is uh greater than 8 now we know for a fact that a plus b is 6 so it's not going to be true so how do we write the sections that execute whether it's true or false we use these curly brackets here and there's another keyword called else and we open up another set of curly brackets so let me go through what this means with you so if A+ B is greater than 8 then execute the code in between these curly brackets else if that isn't true then execute whatever code is in here so it's either going to execute the code inside these curly brackets or the code inside these curly brackets based on this condition so let me demonstrate here let me print print a piece of text here and say true and print a piece of text here that says false let's see what it says in the output down here now it says false and that's right right a a plus b is 6 it's not greater than 8 so that's why it's doing this code and not this code now what if we change the variable up here let's say that we made B five as well so now A plus b is 10 and it's greater than 8 so it's going to run this piece of code instead and you can see down here in the output it says true so congratulations you've written your first pieces of Swift Code and I'm sure that you were surprised your able to understand all of that it's not as difficult as you might think you even expressed some logic in your Swift Code now let me go back and explain to you what these two line means so this top one in green is called a comment and it's signified by these two slashes right here anything in that same line you can write is just a documentation or a comment for yourself as the coder this isn't code that's going to get run so for example we can write a comment like this declare two variables A and B and here we can say you know print out A+ B right here it doesn't make much sense because our code is so short but imagine if you had a complete app project with lots of code and chances are you're going to forget what you wrote you know a year down the line so writing comments is definitely helpful and recommended now import UI kit what does import mean import means it's another keyword that adds UI kit to your project now UI kit is a set of helpful libraries and classes that Apple provides for us to build apps with and it contains instructions for things like buttons and Views and labels and that sort of thing we're going to be working with uiit extensively so don't worry about that for now but whenever you start a new app project you're going to see this Port UI kit at the top okay so that does it for this lesson I hope you were able to follow along and try it out on your own computer as well in the next lesson I'm going to walk you through xcode and show you all of the different uh main areas of xcode that you'll be using okay I'll see you in the next lesson bye for now