hello welcome to this lesson where we are going to integrate the parse framework into our Xcode project now I'm on parse comm and I'm going to open up the documentation so that we can refer to it while we are setting up the project so let's go to the docs link on the parse home page and we're going to download the SDK here under iOS and we're going to choose this one SDK and I'm gonna save it on my desktop but there's actually a QuickStart and so up here click QuickStart we're gonna select data we're gonna select mobile iOS and there's no Swift but I'm gonna show you how to integrate it with our Swift project so just choose objectivec and we're going to choose the existing project because the V choose new project it gives you an Xcode project to download which is objectivec so we're gonna choose this existing project so we've already done this part and download the SDK and the next step is that we gotta unzip that and then add those framework files to our Xcode project so let's go to where I downloaded that zip file I'm gonna unzip it and there are all the frameworks that we have to add to our Xcode project now let's create our Xcode project so I have Xcode open I'm going to create a brand new Xcode project it's gonna be a single View application and I'm gonna call this the simple chat up now for organization name and identifier you can just put whatever is relevant to you language make sure that this is Swift though and devices iPhone use core data is unchecked click Next and I'm just going to save this on my desktop okay so now we have our basic simple application I'm going to go back to that folder which where I downloaded all of the parse frameworks then I'm gonna highlight them all and I'm gonna drag them right under that root node right there make sure that this is checked copy items if needed what this will do is actually copy those frameworks from your desktop into the project folder where you saved your project and that just keeps all of your files together in one neat place so make sure that this is checked click finish and then you're going to see all of these framework files in your file navigator now so going back to this documentation we've done step two okay now let's look at step three we have to add all of these other dependencies to our project ok so the list of them are right here and this is why we have this open so we can refer to this list as we add them so let me scroll up here let me open up Xcode and move it right here so that we can see actually let me shrink the window a bit like that hopefully you can see everything but where you want to go is click this root node of your project so you get to see all of the settings and then make sure you're looking at this general tab right here scroll all the way down and you should see a section that says linked frameworks and libraries and you can already see the parse frameworks that you've added should be listed there if they're not you can just highlight these guys in your file navigator and then click and drag them into this section but they should be there now click this little plus icon that you see it says add items and click plus and one by one we need to search for these guys so let's say audio toolbox there's the one double click that and they'll it's gonna add it and click plus again a search for CF network that's the next one double click it to add it and we're gonna repeat this process for all of those so make sure you get all of them because if you miss one and you try and use a specific feature that relies on that dependency um it won't work so I'm at mobile core now about core services next is quartz core security framework now if you're not using all of the features of the parse platform you probably don't need all of these frameworks either but for this demonstration I'm going to add all of that rather than figure out which ones I need and don't need just for the data part okay down to the last two so there's a couple here make sure you're selecting the right one according to that documentation SQL light again there are two of them that are very similar and according to the documentation I should selected this one without the 3.0 I should select this one okay now that we've done that step let's go back into our Xcode project and clean it up a little bit what you can do is highlight all of these frameworks rightclick it or hold down command and click if you don't have a two button mouse and then select new group from selection and name it frameworks so that just tucks them away into a group nicely now if you elect to create a group and then drag them into the group instead of doing that then just go back to your project settings and make sure that none of these frameworks and libraries are read because if they are read that means it can't find it you just you just moved them and then all you would need to do is just delete the read entry and then read rag it from where your new location is in your project into that section okay now let's do a simple check so let's go prod product and select build just to make sure everything's working and building and compiling okay succeeded chances are if you have some red entries in here then you wouldn't have been able to succeed in building it okay so let's go back to the documentation and let's see what we have to do so now we have to connect our app to parse let's see what we've got here we have the app delegate actually before we do this so this here is objectivec code and we're working with a swift project so if we want to use objectivec code in our Swift project we need to create what's called a bridging header and the frameworks these parts frameworks are objectivec so we're gonna have to do that and all you need to do is rightclick your project folder here go new file so we're going to add an objectivec file I'm just going to go to iOS source make sure you're up here choose objectivec file and you can call it your app name and just save it in your project folder and it's going to ask you would you like to configure an objectivec bridging header because it recognizes that you're using a Swift project right now but you're adding and objectivec file so select yes and what it's going to create for you is this bridging header dot H right here we're going to delete the dot M because we don't need that and all we need is actually this bridging header so in this bridging header we're going to write objectivec code to import the parse files into a C right here says use this file to import your targets public headers that you would like to expose to Swift because we're going to be using the parse classes inside our Swift files and those parse classes are written in Objective C in here we're going to write hash or pound import and do that to import the parse headers from the parse framework so this specifies the parse framework and this is the header file for the parse classes and if you look here in the documentation this is what you would have to do normally in an objectivec project and you would have to do this in every single class where you want to use the parse classes in but for Swift we have this bridging header which we write this import statement once and it's going to be imported into all of our Swift classes that we want to use so let's go to app delegate dot Swift now and look at this did finish launching with options make some space here before the return statement and this is where we are going to do this code so like I said this is objectivec code but we're gonna translate it to Swift so this line we don't really need to worry about it's optional it's just enabling the local data store this one again is optional what we're interested in is this line here where we specify our app ID and our client key so we need to find out what those are in the previous video we created a parse app instance so go ahead and log in to parse now if you don't have an account just create an account so what you're gonna see is the dashboard here this chat app is the one we created in the previous lesson so if you don't have that just click create new app and then just give it a name and you'll have this what we're going to do is we're going to hover over this little gear icon here and click Keys okay and here all my keys it doesn't matter if you see them although you should keep your own keys private but because this is just the public demonstration feel free to use my keys okay so copy the application ID go back to Xcode okay so we got to go parse dot C if we didn't do this bridging header and you don't get this autocomplete then just double check that you have the bridging header and inside that you have that import statement correctly we're going to choose this method set application ID and intercepts a string there's my application ID let's go back here copy the client key and for the client key let's pass that in as well so that's all we need to do here let's go back to the documentation okay and it also recommends to compile and run it just to make sure nothing's broken and you go back you can do command B to build it so while that's building let's take a look at the next line okay so we don't need to do that because of our bridging header and this code right here what it does is create a new parse object it gives it a record name and then it gives it a specifies a column sets a value and then saves it to the database so the cool thing with parse is that if you create an object of specified class and you specify a column that doesn't exist then and you save it then it's actually want to create that record type and it's going to create that entry so in you know back in our chat app parse instance if I go into core up here and take a look at our data right now we have no classes and we have no data so I can either you know add a new class here but I don't even need to do that so I can add a new class here I can you know specify all of the properties that that class would have or I could just go to view controller under the viewdidload I can say let test object be of type PF object equals PF object we're going to create a new PF object i with a class name let's say test class and then we're gonna say test object some property equals some value and then I'm going to say test object dot save we're gonna call this save in background with block method on that object and here you can pass in a block basically it's going to be a chunk of code to execute as soon as it's successfully saved and we're gonna put nil in here because we don't want to do anything after it's saved but you could and you will we probably will when we start implementing our chat app but the purpose of these three lines is just a test that we've set everything up correctly because after running these three lines if our application ID is correct if our client key is correct if you know everything is set up properly then we will see this entry you in our parse admin dashboard so let's hit command R and run this app right now in the simulator and let's see if we get our new class with the sample property and sample value there it goes okay so we don't see anything because these three lines don't display anything on the screen and by default our single view application is just a blank for you okay now we go back here let's refresh this page sure enough under data you can see now we have one class which has one record or one row and it has C this property and this value here so this confirms that we've set up parse correctly with our Xcode project in subsequent lessons we're going to create our class here and then we're going to start setting up the user interface for our simple chat app if you guys want to download the source code as in my particular Xcode project I'm going to make that available in the link below the YouTube video and you can download it but I'm going to erase the application ID and the client key from my project so that you're going to have to set up your own parse app instance and put in your own keys okay so that's it for this lesson thanks for watching and I'll see you guys next time