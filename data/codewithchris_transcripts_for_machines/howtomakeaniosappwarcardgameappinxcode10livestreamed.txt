hmm hey guys okay let me hold on you guys see me so I hope you guys can also see my screen I'm starting a little bit early let me just minimize that starting a little bit early just so we can iron out any technical difficulties because last time it was pretty embarrassing I didn't have the software setup so you guys couldn't see my screen alright cool so in today's session I want to go through with you guys just setting up the Xcode work hard game project and Xcode 10 I mean and if you've gone through this again then it's gonna serve a bit as review but if this is new to you I think you're gonna learn a lot the hardest thing that we're probably gonna go through building this sort of app is mmm the content resistance priority and content hugging priorities if so if you kind of understand that already then just sit back and relax and this stuff will be pretty much review but I think we're gonna have time at the end of that to do like a Q&A session let me know if you guys can hear me by typing in the chat he fixed the screenshare yeah mr. yep I'm gonna build the whole thing it's actually not gonna take too long hey guys wow so many people already thanks for joining me and how many of you guys were actually here last week when you guys saw that I couldn't share my screen you guys who were here for that let me know and we're just gonna start we're gonna give another minute for people to join in and we're gonna gonna start sound is good you guys can see my screen we're ready to rock and also um when I tried to show my entire desktop I felt like it was hard to make out the actual file navigator and hard to see the screen so I actually zoomed in a little bit onto Xcode so let me know when I start building the app um how that is like should i zoom in more for next time and I'll take that into consideration so that I can adjust it because I want to make sure that you guys can see what I'm doing otherwise it would be pointless awesome Sergio and Robert I'm glad you guys are back I didn't I didn't lose your faith okay so we're gonna begin now it's one o'clock I want to make sure that I'm cognizant of your guys time so just a couple of words of introduction to begin with so welcome to the code with Chris livestream this is the second time I'm doing this and so if I'm a little bit nervous cut me a little bit of slack I think I'll get more comfortable with doing live streams as we go on and also Adrian is manning the chat so say hello to Adrian and to make his life easier make sure you guys if you have like a question type it all into the one message and send that don't break it up until like five messages and try not to spam the chat as well or else he's gonna have a really hard time yeah and the last thing is that if you guys aren't in the Facebook community yet you can go ahead and join that where they're supporting students were they're discussing different topics and stuff like that if you didn't know about it it's at facebook.com slash groups slash code with chris communty alright so we're gonna begin and if you have any questions I'll be checking the chat periodically and I will try to answer all the questions at the end depending on how much time we have all right so here I am in Xcode 10 we're gonna start a single view application and I'm just gonna title this war card game demo I'm just gonna save it to the desktop now this app does use some graphic assets some of them I created myself some of them that is particularly the playing cards I got off of someone else who released them for free I think they're not for free anymore but I'm still using them right now so if I get in trouble I'll change them but you can download the same assets from code with Chris comm slash lesson 4 and there's just a link to the zip file here under image assets so those are the image assets that I'm going to be using just in case you want to follow along or you want to do it yourself try it yourself so I've got that unzipped on my desktop right here so the first thing I'm going to do is I'm actually just gonna add all of these images into my asset library so we have them so let's jump into the asset library here if you're not sure this is the first time you're seeing this you're new to iOS app development this is where we keep all of our image assets that we're going to use in our app and you might notice that each asset actually has three different sizes because the iPhone has different resolutions depending on what device it is so recently I actually picked up the iPhone 10s max so I'm really happy about that because it was like four years since I've upgraded my phone I was using the iPhone 6 plus and that still uses the 3x graphics but I mean the phone now it's so fast I I didn't know what I was missing because I would like switch apps and then I'd have to wait like five seconds before it's switch but now it's like instant I don't know if you guys picked up the new devices or not but man they're getting way too expensive to buy every year and I certainly I didn't I waited four years before I I upgraded mine anyways that's just a tangent what we have right here we have the background image we have the back of the cards we have cards from all the way to King and then ace so you'll notice that I number these cards a certain weight I name them CA Rd all in lowercase with the number that's because when we randomize these cards we're basically gonna generate a random number from to see so car two right here all the way to 14 so number from 2 to 14 and then I just append card to it and then we can load up this graphic asset that we have in the asset library we also have some buttons and a logo actually we have one button and one logo I think the interesting part especially if you've never done Iowa's app development before is going to be this part working in the storyboard and seeing all of these elements come together now I know some of you guys that are gonna ask this question and I talked about in the last stream but you can generate all of this UI stuff through code you don't have to use the storyboard but for people who are just starting out I feel like it's it's a lot more intuitive it's a lot less intimidating and to be able to see something just come together and visually like that gives beginners especially a lot of motivation to continue and feel like they can do this and feel like it's something that they can achieve so that's a lot of reason why I stick to using storyboards for all of my tutorials and demos because my target audience is more of on the beginner side I want to get the thing that gives me joy the things that the reason why I started doing this in the first place was introducing like non coders complete the people who didn't program into the world of programming and building apps and seeing like their face light up and seeing just their mind open up feeling like they can do this now and that gave me the most joy so that's that's where that's where I focus my teaching all right so where are we here the first thing we're going to do is add a UI image view into the the view here this is going to be our background image so we're gonna add some constraints if that's new to you these constraints are basically rules that tell the system how to position all of the elements you're laying out so as you're gonna see for this UI image view right we can set its property there's a drop down here we can set it to background but it's just gonna be this little image right so we need to add some rules to tell the system how wide it is how tall it is how to position it and that's done through constraints so all you need to do is click the element and then go down here there's a menu where you can specify new constraints we're gonna specify four constraints and we're basically specifying margins against the four sides at this point right here and there are a couple of options you can do here so constraint two margins will basically there are some set margins for text so let's say you're laying out a label or a textview or something like that there are by default our margins on the left and right sides so the text doesn't go all the way to the left or all the way to the right so if you want things to reach all the way pass the margins to the very edges of the screen you're gonna uncheck constrain to margins and furthermore because like the iPhone 10 the new iPhones have a notch at the top and so there is something called a safe area where if you lay things out inside the safe area you can be guaranteed that it's not going to be blocked by the notch or blocked by any sort of elements like that if you want things to ignore that safe area then you have to make sure that you pull down these dropdowns here and by default they're set against the safe area we're going change them to the view to make sure that this background just goes edge to edge on all four sides of the screen that's why we're going to do that and I'm going to reset them to all zeros so we have a background like that and when you change the width and height of the image view what ends up happening also is that it stretches the image to fit and so you can change this property called the content mode so by default it scales the image but sometimes it gets stretched out you can't really tell with a green background but if you have like the card images or the logos you're gonna see that they're gonna be stretched so instead we're going to change it to aspect fill and that's just going to maintain the aspect ratio of the original image so it doesn't just get a little skewed alright so the next thing we're gonna do is we're gonna add a stack view we're gonna use a vertical stack view and a stack view is an element where you can put other elements inside and helps you order it there's like a horizontal stack view and a vertical stack view which just stacks things either horizontally like sidebyside or vertically on top of each other so in our UI here I don't I don't know if you've seen it but basically we have a logo at the top then we have two cards sidebyside then we have a button to deal the cards and then below the button we have to score counters side by side so we're going to use a series of stacked views to create this sort of layout and we're gonna fine tune it using the content hugging and content compression resistance priorities so first thing to do is to add that vertical stack view because this vertical stack view is going to contain all of the elements so I'm going to add that right here as well and because this stack view contains the elements and I don't want any of the elements to be blocked by like the notch or any other hardware element when I specify the constraints for this guy I'm going to leave it as constraint to the safe area and I'm actually going to specify I'm gonna specify all four for now but at the end when we try to make this work for landscape and portrait you're gonna see that maybe we should take away that bottom constraint because that ends up stretching it all the way to the bottom and it ends up spacing all the elements out a little too much and so we might end up removing this bottom constraint but I'm gonna leave it here for now so add 4 you can see it just starts clinging onto all four and just give me a second when I double check that you guys are still seeing what I'm doing it's one of my worst verses like I'm just talking and talking and talking and no one sees me or no one like my mic suddenly cuts out or the screen goes blank so we're all good all right we're gonna add the logo now so the logo is another image right so we're gonna add another uiimageview so let's go ahead and do that just gonna drag it in there and I'm gonna change the property for this image view to the logo now as you can see it's gonna get all stretched out and that's because the stack view tries to fill up all its space with the elements that it contains right now it only contains the logo and so it's trying to stretch it all out we can change a couple of the properties to address this so you can see here on this lefthand side this is called the document outline and it basically lays out shows you all of the elements that you have in your view but it doesn't in a way where you can understand which elements are in front of each other so this guy is the root view of the view controller this is basically what the user is going to see on the screen so anything that is close to the view is actually farther back so you can see we have the background here and then on top of the background is the stack view and then you can see how this logo image is like tucked into the stack view that means that the logo is inside the stack view I know it's a little counterintuitive because you think things in front should be at the but it's not so things that are closer to the user in front of everything else is actually closer to the bottom of this document outline just so you know okay so we're gonna add a couple of other elements in here we're gonna add oops we're gonna add a horizontal stack view this time because we're gonna add the two card images all right so I'm gonna just gonna drag this horizontal stack view in here so now the stack view has two elements inside it has two local and the horizontal stack view and it's trying to stretch it all out to fill up all of that space in the vertical stack view but how does the system know which element it should stretch out and which one you know it should give more space to because before when we just had the wore logo it was easy just stretch that guy out to fill up the space but now we have two elements so which one is it gonna stretch out so you can see here it's selected the horizontal stack view to stretch out we can actually finetune that and tell the system which elements should be compressed or stretched out if there's more space or not enough space and that's when those content hugging and content compression resistance priorities come into play which will finetune at the end okay so now what we've got here is a horizontal stack view right we're gonna add two image views into this horizontal stack view so that we can display two cards sidebyside so let's go ahead and do that all right so there's one image view and this is a second one if your UI is starting to get kind of messy you can also drag it directly into the document outline like this you just have to make sure that what we have here is the vertical stack view contains the logo which contain sorry can these the logo end the horizontal stack view and inside the horizontal stack we've got two image views like this so we're gonna set some properties on this horizontal image view so for the distribution we're going to fill equally that's gonna give equal space to both image views so can see that instantly makes them equal we're gonna add some spacing in between them let's say 30 and right now I'm just gonna put some card images in here just so we have something to see and something to look at but of course we're gonna be randomizing that at the end all right so what's next we have a uibutton this is the deal button so I'm going to add this element and I'm gonna drag it into the document view you just have to be careful because for example if I do that I've actually put the button inside the horizontal stack view now which I didn't walk sorry didn't want I want this button to be in the same level as the logo and the stack view and as you can see I've actually put the button outside of that vertical stack view so you just have to be very careful there there we go we've got the button inside now so that stack view contains to the logo you know the horizontal stack view and then this button and we're just gonna add that last stack view the horizontal stack view which contains the to score counters before we start adjusting things and trying to make things look good and so I've got that horizontal stack you in there and we've got a couple of labels now for the labels we actually have like a player label and then the score and then on the righthand side we have like a CPU label and then the score underneath and so what we're gonna have to do is we're gonna have to add two vertical stack views into the horizontal stack view I know it's a little confusing at first but once you start doing it it's it's gonna be a lot easier to understand how to use stack views to build this guy up I'm gonna review what this looks like with you in just a second I'm just gonna add a couple of more stack views in here I'm probably gonna lose you here if you you've never done this before actually it's probably easier if I just add these elements first and then explain to you what's happening all right so let's we've got all of the elements on our screen I know it doesn't look like what it's supposed to but we're gonna fix it in a second but first let me review what this hierarchy looks like so we've got the vertical stack view right against the green background and inside the vertical stack view we have a logo we have a horizontal stack view which contains the two card images we have a button under that and then we have another horizontal stack view underneath that inside that horizontal stack view we have two vertical stack view sidebyside and in each of these vertical stack views we have two labels so this is going to have the effect where the labels are on top of each other so now we're going to customize some of these elements before we position them so let's say for the button for example we can change the image of the button to the deal button image and then we can just erase the text like that so that's going to give us our graphic there and then for these labels we can actually we can multiselect them you just select a few of them like this and then we're gonna change all of them to have a white color and we're gonna maybe give it a slightly bigger font if we wanted to and for these these two in particular up here these let me see if I can select that again we're gonna make these bold let's go to custom let's change it to a bold and let's change the text in them so this one let's just say this is the player label this guy is the CPU label and then we'll have this is zero and then this is zero okay so now let's start positioning some of this stuff because this doesn't look the way we want to at all all right cool so first of all why don't we change this horizontal stack view and change the distribution to fill equally and then we're also going to add some some padding between these labels like this let's say 30 now this is a completely arbitrary right whatever I want to fill them at the alignment we can change this one to trailing right so it's up against that side and you know how it's sticking to the very edge of the screen we can adjust the margins of the vertical stack view in just a second so that we don't have it's sticking right leg up against the edge of the screen for this vertical stack view right here I want to change the spacing to 20 so that there's like a couple of what do you call it a couple of spacing a bit of spacing in between each element for this logo it's completely warped we're gonna change that to aspect fit and these cards are kind of warped we're gonna go aspect fit an aspect fit this one actually looks bigger than this one to me maybe I think my eyes are playing tricks on me okay so let's address this issue where these are as close to the margin see this vertical stack view we can actually adjust the constraints after we've added them all you need to do is highlight that element go into the size inspector tab here and then you can see all of these different elements if you double click one of these constraints it jumps you directly to that constraint but if you just need to edit the spacing like the constant of the constraint then you can just click on this edit button here so I can go ahead and change that from 0 to let's say 20 and that's gonna see push that out a little bit same thing with this leading 1 we're gonna just change that to 20 and so these are not so close to the edge there and now another thing we talked about the content hugging and content compression resistance priority right if we for example bring this guy up and we can change the orientation to see how this UI would look in a landscape sort of view there's still enough space for all of the elements so my point is kind of wasted but I want to tell you what those two things are the content hugging and content priority sort of content compression resistance priorities in case you've never heard of them before so huh actually no a good good thing is it is if I go into kind of like a smaller size class let's say this guy yeah so you can see the logos gone right there right so at different screen sizes we have different sort of screen real estate and how does the system decide which elements to squish the compress and if on the other hand there's a lot of space how does it decide which elements to give more space to to stretch out that all has to do with these two properties right here content hugging priority and content compression resistance priority and the you come in here is you select the element and then you go into the size inspector on the right hand side here and near the bottom you'll see these two attributes there's a horizontal and a vertical for each and this basically says for example the content hugging party if there is too much space right the higher priority the the highest content hugging priority means that it's gonna think of it as hugging the content it's not gonna allow it to expand so the element which has the lowest content hugging party will get will be the one that gets stretched out so you can kind of control it right I think by default they're all like 251 for this one so it's kind of random but if you wanted to control it you would basically go through all of the elements and decide you would assign different priorities let's say on the vertical aspect if I expect there to be more space on certain screen sizes and I want the cards to stretch out then I'm going to give the cards the lowest vertical hugging content priority so that means that the cards will get stretched out versus there anything else so the opposite is content compression resistance party on a screen which has no space or too little space which element gets squished and the element with the lowest resistance priority is the one that gets squished or it might completely disappear so as you can see it shows our logo to get squished here if we wanted to change that all we needed to do would be to highlight our local here and then give it a high resistance priority on the vertical axis right and then it's gonna make sure because this guy right now has the highest compression resistance priority it's not going to squish it it's gonna squish the other elements which has a lower resistance priority so that's how you kind of control that stuff all right so you know how this UI looks it's going to depend on how you adjust those different priorities but what I want to do on these larger screens like this is I don't particularly like that all of these elements stretch all the way to the bottom of the screen and there's so much space and it's because we have our vertical stack view stretched out all the way to the bottom of the screen and so it's gonna have to try to space those elements out for the whole the whole view height wise but however if I go into the size inspector for that route stack view and we double click that bottom constraint and we just go ahead and just completely blow it away that's going to allow that vertical stack view to to just have a natural size depending on what the elements are inside of it and so you can see that this looks a lot more natural all right we're gonna hook up some of the code now so this is the storyboard this is the view we've been using interface builder if that's new to you that's what it's called to build this sort of interface but now we have to expose all of these elements to the code behind or the view controller so that we can write Swift code to dynamically power these elements one way you can do that there's multiple ways but one way you can do that is just click on this button up here called show the assistant editor and it's going to show the view controller for this particular view as long as up here you have it set to automatic now actually this is a source of confusion for a lot of beginners and sometimes it's set to manual or it might have selected something else so then what they see on the righthand side isn't what they should be seeing if they want to hook up like expose these elements to the code behind what you should do is just click this go to automatic and then select view controller or whatever it suggests as the automatic thing so that when you select one of these elements inside that view it's going to show you the corresponding view controller on the righthand side ok so all we need to do is expose some of these elements so that we can controller through code we're going to need to expose the the card image view both of them so we can change the images through code we're going to have to handle taps on this button and we're gonna have to change the scores on these two labels right here so first of all we're gonna create some space underneath here inside our view controller class and we're gonna hold down control on our keyboard and just click this card and simply drag it a blue line should be following your mouse and you just let go and the connection type should be outlet and then you can just name it or whatever you want so this could be let's say this is the this is the player card okay and we're gonna do the same thing for this one this guy is going to be the CPU card and then we've got this label here so let's call this player scorer label and then we've got this CPU label as well all right and finally we've got the button so for this button instead of exposing it as an iboutlet property which is you can think of it as just exposing the element to have a reference to that element in the storyboard we're going to hook this guy up with an IB action Handler and so that is actually a function where you can type in code that would happen if the user were to tap that button so in Xcode 10 it's pretty smart because it's going to know that's what you're trying to do so you hold down control again it's the same procedure but this time when you drag it you're going to put it down here underneath this function and the connection type is action instead of outlet I'm gonna name this deal tapped all right so now all we have to do is randomize a number and one way we can do that is use this function called arc for random underscore uniform and we can specify an upper bound now if we specified 14 this would basically randomize numbers from 0 to 13 and I always kind of forget this but if I remember correctly if you specify an upper bound of 14 it's going to give you 0 to 13 and we'll find out soon enough anyways because we have card starting at 2 we need to go from 2 to 14 and instead right so that random function is going to give us starting at 0 so we need to add 2 to that 0 so whatever the number gives us we're just going to add 2 to it so if it randomizes 0 we're gonna essentially treat that as a 2 if it randomizes 1 we're gonna treat that as a 3 the problem is if we specify an upper bound of 14 and we get 13 and we add 2 to that we're gonna get 15 and we don't have cards that go up to 15 right we only have 2 to 14 and so instead I'm gonna specify an upper bound of 13 and so the highest number is going to give us is 12 so 12 plus 2 is 4 team and that's going to be our upper bound with what we have here in terms of card images too so I'm gonna specify an upper bound of 13 so let's write this gives us numbers from 0 to 12 then we add 2 just so you don't forget all right so we're gonna specify so we're going to randomize a number from 0 to 12 and then add 2 and then we're going to assign this to a variable here so we can keep track of it so we're gonna say let let player number equals that and then we're gonna randomize 1 4 I'm just going to copy and paste we're going to randomize 1 for CPU so CPU number is the same thing right there and then now we're going to change the card image or the the image view for the player card all right those warnings are just saying that we haven't used this constant yet but we're not finished coding it up so we can ignore those for now so the player card which is an image view element actually has an image property which we can set to a UI image view object so we're gonna create a new UI image view object and the UI image sorry I was saying UI image view object no we're gonna set it to a UI image object the UI image class has an initializer which accepts a string specifying the file name or the graphic asset name so for example we would specify card 10 if we wanted to show car 10 and this would essentially take that graphic asset that we have in our graphic asset library and it would create a UI image object and then set it to the player card image view only problem is we want to randomize that right we don't want to show car 10 every single time and so instead of specifying tender we're just going to put our player number all right this is the number which we randomized here the problem is that we can't add a string which is this piece of text with a number so we can just convert this number to a string as well like that and then that's going to allow us to add that random number to the end of the word card and then we're going to essentially change the image in that image view now we're going to do the same thing here in CPU card and so we can test it out now before before we go any further let's do it this way so it's gonna take a while to boot up the simulator and run meanwhile let me check out some of your guys comments oh thank you beasts motor this is going to be recorded so every week I'm gonna try to do a live stream and I'll record it and even if you can't make it at that time you can always catch up on it later alright so we've got this loaded up when I tap on deal it's gonna fire up this function right here okay and it's going to randomize two numbers and display them in the image views as well all right so we can see this happening if you happen to get a blank card that means that it couldn't find that image that we're trying to specify and if that were to happen to you then I would double check the random numbers range that you have set because you've probably specified a number and it attached it to the word card and it couldn't find that graphic asset in your asset library and so that's why it ends up showing a blank so and what we're going to do next is show the update the scores for the player in the CPU so we have the two labels exposed as iboutlet properties so we actually have a reference to those elements from here and we can say update labels and the easiest way that I did it before that I felt like made it easier for beginners to understand was to have a separate property here to keep track of the score so you know you have a player score and a CPU score like this and then they would both be initialized to 0 sorry I don't know what I'm doing brain fart okay so we have our properties player score in CPU score they both initialized to 0 and 0 and if we were to update the labels while first we would update the score update the score and then we update the labels right so in order to determine who wins it's very easy the way that we've set it up basically the higher the random number the better off you are because in here in that our asset library the lowest card is 2 so that's card 2 and the highest card is ace which is card 14 and so what we end up doing is just comparing it so we basically say if player number is greater than the CPU number then we update we increment the player score that means they won right so we can append 1 to whatever score it was and that's what this plus equal means it's just incrementing it right there and then we can update the player label at the same time so let me erase this and we can say player score label is now has a text property and that is equal to the string the converted string of player score so we're basically converting that integer that number into a string so that we can set it to the text property of the label else if CPU number is greater than the player number then in this case the CPU 1 so we increment the CPU score instead and because this was a beginner tutorial I didn't handle what happens in a tie I know some some people who who got the hang of this really quickly and wanted to go beyond this they wanted to figure out like well if there's a tie because I think in the real war card game what happens is like you you open up another set of cards right and then whoever ends up winning gets gets like all of the points like wins the whole round so I didn't implement anything like that and I just left a tie scenario alone I didn't do that and another another word is that you know I'm using things like if statements and you know I'm talking about like properties and stuff like that if this is like your first time very first time learning iOS development seeing Swift code this is probably still going to confuse the hell out of you right there's no way I can take an hour to explain everything from the very very beginning and so what I would recommend is you follow our beginner series which is just a ten lessons long and you actually build up this very same app except that I take it like step by step very slow assuming you know nothing and that whole thing is probably like three hours long maybe but yeah so like I'm going through this live version pretty quickly and I know that if this was the first time you're seeing this you have no idea what these keywords are right if elseif and stuff like that but I would recommend that you go back and watch the beginner series instead and maybe Adrienne can provide a link to it but you'll also find if you just visit my channel page it's like the first playlist and then that will teach you stuff from the very very beginning and we'll talk about things like if statements else ifs you'll know what stack views are auto layout constraints and there are exercises you can do as well so I highly recommend that okay so now what we have is the score updating I think so let's give this a run and let's check it out yeah so it seems to be working so I saw a comment in there talking about talking about taking this further and doing like a back end to it I think that would be very interesting like if you actually could connect to a live player and do it if any of you guys want to dig into that feel free highly recommend that you join our Facebook community to do it in there so that we can all talk about it and discuss it but my whole point of doing this war card game in this very very simple form was just to get people's feet wet right I know a lot of you guys who are watching right now you've been following cold with Chris and the channel for a while now this is probably like easy stuff for you but yeah so that that's why I don't tend to take this further than this because this is kind of the most basic app that I can think of that still semiinteresting for beginners to do so that's why I keep it like that but there are other app tutorials on my channel that are completely outdated by now so I'm talking about like there's we have a soundboard app we have a youtube feed app which were which you can like connect to a channel and show videos and we have like a shopping app with moulton so those those tutorials are kind of outdated now unfortunately but I hope that you've noticed in the past weekend this week we're putting a lot more emphasis and producing content because I'm finished with producing the courses that I was so busy doing before so now I'm my focus is back to creating content for this channel for you guys and doing live streams with you guys getting to know you guys and really finding out what you want to learn so long story short I want to hear what sorts of app tutorials you guys want to see on this channel if there's any particular tutorials on the channel you think should be a priority to be refreshed and updated let me know I have a couple of app ideas that I actually want to build out from the ground up with you guys I think that would be really cool to follow along my I think my main difficulty is I mentioned before that I I get the most joy out of seeing people who have no coding and in bringing him them into the coding world and seeing their face light up and that light bulb moment go off in their head and then realizing that this is possible ballast balancing creating content for you know those people versus doing content for people who are beyond that you know people like you guys who some of you guys who have been following code as Chris a little longer and I don't just want to focus on the beginner stuff because you know I have a confession to make if you will is and that's that like I've been doing the beginner stuff for so long that I won't say my brain has rotted but like I'm just so used to teaching that stuff and then I have my personal and family life as well and so I don't have you know that much time to keep my skills sharp in terms of the more advanced and intermediate stuff and so that's why I also want to cover that stuff and learn a long side it's almost like I have to relearn a lot of that stuff because things are constantly changing right so that's why I also want to do more intermediate advanced topics which I will have to do learning myself and that will put myself in your shoes as well so we can learn together and I can continue also to update the inner stuff for all of the beginners who come on the channel yeah let's check out the chat now I think we've got about 15 minutes left so these motor social networking apps personally interests me you know that is that is something that I I never understand like people a lot of people want to do social networking apps but then I don't really understand what that means like do you want to make your own Facebook do you want to make your own Instagram like what does a social networking app mean to you let me know because a lot of people they say they want to do social networking apps and my the thing I would fire back at you is can you be more specific and really iron out like what people are able to do in that social networking app idea of yours someone asks can we download the source code yeah I'll make this available for you guys and the image assets I have a link to the image assets I think it might be on this page actually no I think it was on the old version of this page but like in one of my really old videos I had to link to the image assets but you can download them from here from this code with Chris calm slash lesson 4 and whether or not you can use that in your own project that you published commercially I I don't think so anymore because I think he changed the licensing terms before it was like completely free do whatever you want with it but for my self here I'm just I'm not even publishing these up sorry it's just for demo purposes so I don't think I'm gonna get in trouble for using it like this but if you were gonna publish your app then I would make sure you double check twice what's the difference with the x10 version of this app versus others no there's there's really no difference yeah I just did this kind of on the fly and I didn't there wasn't anything different aside from that object library being moved I think a lot of people might be confused with that so that really is the only difference but in terms of like the auto layout stuff and laying out your elements nothing's really changed I did this more of like an exercise for myself and also for the benefit if there were any beginners in the audience today if you guys have any questions for me right now go ahead and type into the chat No see if I can answer them okay so someone's build box I did want to check out build box before if you're not familiar with it it's like I guess a draganddrop visual builder for games and I'm sure I'm sure you can add like bits of code to it but it's supposed to be like building games without code so you can go and check that out and someone's saying sorry you're saying it's not that great I haven't tried it myself because when I was interested in is actually really expensive I think they've lowered the price of using the software now and I'm not sure if you published games using build box if if they take a cut of it or anything like that I'm not sure but in the last livestream someone mentioned that I should start covering sprite kit which I'm 100% behind all right guys Sirdar asks hikers how do we add functionalities into our app icon on the iPhones main menu like me a 3d tap on the icon and see some extra like that force tap a 3d touch top you know honestly I'm not sure but I know it's probably not that hard to do I'd have to check out the SDK and take a look at the iOS documentation for that so you know what we'll write that down as a content suggestion so it could be come up as a future tutorial but in all honestly I don't think it'd be very hard to do things like that usually usually you might even be able to specify an appeal list it might be a P list thing okay so I think Adrienne's doing a pretty good job with the questions actually nothing too much there if you guys have any suggestions for what you want me to cover in like a future live stream or any like tutorial requests please let me know I really want to do stuff that you guys want to see and this week the other tutorial that I'm gonna be publishing on the channel is how to integrate AdMob ads with with firebase so I've been actually using the community posts to ask you guys to do polls to see if you guys want to see that sort of content or not and you guys have been great like I think the last poll I asked the AdMob question I don't know if you saw it you've seen it but they were like 700 replies and 61% of you guys said you wanted to see it like about 20% said it could be useful and another like small percentage is like 14% of you guys said you completely didn't want to see something like that so it's very good feedback right and of course I can't cater to every single person I can't make everyone happy but at least this gives me sort of a barometer of whether or not I should proceed with that content you know because I don't want to waste my time and I don't want to waste your time to be honest yeah AdMob ads would be awesome cool it's actually really easy to do I think you're gonna be surprised once you see the video yeah I see my my own because I have a laptop here and I'm seeing my own live stream just so I can see the chat and I can see my own screen to see what you guys are seeing and I realize I talk with my hands a lot hey Luca hey Robert good suggestion so Robert suggests small talk about being a mobile app developer how to start a career in the field so specifically like working as a mobile app developer right not not being an indeed app developer building your own apps and try to make money off of that right because that part I don't know too much about and there are actually a couple of indie app developers that are on YouTube and they've published apps and stuff and they they do videos about I guess vlogs about their process and all that stuff and so I thought it'd be really interesting to interview them maybe I can reach out to them and grab an interview and see what it's actually like to be to make a living from developing apps and all these obviously for me I don't make a living from building apps and I don't build apps I don't do consulting anymore so I don't work for a company 100% of my income is coming from support of you guys through YouTube and through my course my private courses on my site where where you can get a bit more of my time to help you individually on your iOS journeys but I can talk about like based off of my experience of working in software consulting as a mobile app developer I can tell you things change so fast though like honestly that was five years ago and even the tools that we use I'm meeting up with some of my ex colleagues tomorrow for lunch so I'm gonna bring that up and ask them you know what sorts of tools they used these days and how it's changed since we were working together but you know it was a lot of fun but for me maybe it was just a company it was very very stressful because you know that the businessperson is selling these projects to clients and clients are paying like 50k upwards of 50 K to build like a mobile application and the team is like maybe one or two developers a designer project manager so it's like four people delivering this big project over like a month and there would be consistently kind of like tight timelines and things always go wrong you can't expect anything to go perfectly and so I would end up having to pull like a lot of late nights and that was fine before I had kids and before like when I was younger and I was able to do more of that type of hard work but now I think like I would just be completely wiped if I had no sleep and I pull an allnighter I don't think I could function the next day and then I just started questioning myself if healthwise that was like the right thing for me and I don't mean to scare you guys are looking for jobs because I know a lot of companies out there aren't like that you know so I'm saying my company was a small company they might not have been selling their projects correctly they might not have been scoping it out making sure there's adequate like time and budget to do things and instead putting that pressure on the employees right so this is like an isolated experience I'm not telling you that this is what it's like to work in iOS out there it's just you know I can only speak to what I've experienced so I know for consulting the benefit is that you get to work on a lot of different app projects because it was cool like every two months every month to two months we would be working on a different app and starting all over from scratch getting requirements from the client like designing it building it and then you know I think you get a lot of good experience that way versus if you worked at like one company let's say mmm a big company like a bank who has a mobile app and you would just be working on that same app for years on end right you'd be maintaining it it'd be like probably a much larger app but you would be working essentially on different features or making new features of the same app and also the timelines probably wouldn't be as strict and probably wouldn't be as hectic so that's in my eyes that's kind of the difference between consulting and working in the industry is what is what that term is yeah Robert I'm sharing some personal stories yeah for sure for sure also my wife Ellen is also working with me now on code with Chris and before she was also working with me in the software consulting company and so she was working as a project manager and so she would you know scope out the timeline and scope out the tasks manage the client expectations and you know do they do the meetings with the client all that stuff so she has perspective from that end of things whereas I was a senior software developer so I would lead the team of developer so it's cool I think I can get hurt if I can convince her to get on the camera I can get her to do some some talks too to share her side her point of view from the project manager side of the software development industry so Robert regarding the recent workflow so I mentioned that I'm going to start I'm gonna start a series on this channel where I'm I'm taking one of my app ideas and I'm just going to start it from do it from start to finish and we're gonna publish it together and so that's what I'm hoping will be helpful for you guys to see that workflow all the way from you know from specifying requirements and all that stuff to design a like to doing the information architecture like the wireframes first and then turning into a design and then development and bringing those design pieces into development and then publishing it together I'm gonna hold like a special celebration or stream you actually hit publish and get it into the App Store iliyan we're ninja thanks thank you for your kind words alright so I think that's that about wraps it up for today my plans are to do another livestream next week and I'm gonna show you guys something else maybe we'll do something a little harder maybe we'll just pick one of the apps that are outdated in our channel and update them together I'll show you code that's for sure I'm not gonna as much like you know I don't know what's more helpful to you guys would it be more helpful if I just did a live stream and just did an hour of Q&A and you guys just you don't throw in the questions and I'll answer them for you or would you rather see me build something teach something see my screen do that let me know I want to make the livestream helpful for you guys so siddharth says he created a notetaking app called dark pad in it and it's published in the app store so guys check him check it out support him leave him a positive review you made six dollars with a banner ad that's awesome because I to be honest I actually I did I did release an app with some banner ads and didn't do that that well but we'll see we'll see we'll build some apps together and we'll publish into this story all right I'll see you guys later okay I'll see you guys next week same time same day next week see you guys later bye for now