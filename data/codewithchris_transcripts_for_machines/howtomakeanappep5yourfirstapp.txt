hello welcome to lesson 5 of how to make iphone apps with no programming experience in this lesson you're going to build your first iPhone app we're going to create a brand new Xcode project just like in the Xcode tour lesson and I'm going to spend a little more time going through the different files of your project with you this time so let's go ahead and create a brand new Xcode project if you don't have this welcome screen again you can go to file new project and we're going to choose single View application make sure you're looking under iOS I'm going to call this hello world its traditional in programming to name your first simple app hello world and just to output this phrase hello world so we're going to do that in this lesson now you may not have anything under team don't worry about it and organization name you can put your name or the company name and the identifier is usually comm dot your name or company name and make sure that you're selecting Swift here and make sure that you've selected iPhone otherwise you're not going to see the same things that I'm seeing on my screen and make sure that the rest of the options are unchecked click Next I'm going to save this hello world project on my desktop and under source control create git repository is unchecked now let's click create so it's going to create our basic barebones single screen application on the left hand side we have our file Navigator let's go through these files and what they mean so app delegate dot Swift now the app delegate handles a lot of the high level app events that can happen when your app is running on a device things such as the user pressing the home button and your app going into the background and then subsequently the user bringing your app back into the foreground or your application finished launching or or your application is terminated so events like that that happened to your app at a system level app delegate dot Swift gives you a chance to handle or write code against those events so there are a lot of comments here that tells you what sorts of events are happening and where you can write code to run if those events happen so for example here application did enter background if we put some code into this function it's going to run this code whenever the app goes into the background so for instance you may want to save some data before the user dismisses your app into the background and likewise application will enter foreground right before that happens you may want to run some code to prepare the view or something like that or to bring the data back so those are just some examples of things that you can do in response to these system level events ok next up we have the view controller dot Swift as you learned in the previous lesson the view controller is responsible for managing the interaction between the model the data and the view that the user sees in this basic single view application we don't really have a model or data but we do have a view and that's in the main storyboard so what is the storyboard well it actually is a visual diagram or flow of our app where we can see all of the views of our app and how they flow together in this single view application we only have one view right here and this arrow that you see to the left well this arrow denotes the entry point for our app and right now it's pointing to this view which makes sense because we only have one view and this view is controlled or managed by the view controller file here this view controller that Swift now typically in a more complex application in this main dot storyboard file you may see multiple views and you may have multiple view controllers each controlling a view here in this single view application you only see this one view you can also zoom in and out by clicking these arrows here or you can double click even we're going to get back to the interface builder in a second and I'm going to show you some more cool things with it but first let's go through the rest of the files in our project as I told you before this is the asset library this is where we group our graphic assets together so for example here we have a listing for app icon now why do we have so many slots for app icons well we can specify different icons for different sizes for example our app icon can show up as a notification in that case there would be two sizes and different sizes as opposed to if let's say the user was searching on their phone and our app showed up as a search result that would be under here spotlight and then just here would be the app icon on the dashboard of the iPhone itself now we have 2x and 3x sizes because two X's Retina screens and 3x is the iPhone plus screens similarly when we create graphics for app let's say we have a button graphic that is going to be listed on the left here when we tap it it's going to have slots for the 2x version and the 3x version in the future I'm going to show you how to create those different sized graphic assets okay moving on we have launch screen storyboard now this is the launch screen for your application you can customize it visually not much to say about that here info.plist we can configure some values for applications such as the version number and stuff like that we're not going to be needing to use this at least for now so let's move on back to the main dot storyboard now I mentioned before that the first app that we're going to create is going to be a hello world type of application so what we're going to want to do is put a label onto our view we're going to want to Center that label and change the text of that label to hello world let's start by going over to the right side under the library pain make sure you're looking at this tab right here I'm going to search for a label it's going to show me the label element and I'm going to drag that on to the view like that by default it's says label if I tap the label and make sure that it's highlighted on the attribute inspector I can change the text to hello world like that there we go now it's a little bit cut off but that's okay I'm just going to lengthen up like this and what we're going to do here is just run the application so I'm going to go up to the upper left hand corner and click this play button I have iPhone se selected okay so we see the hello world label and I don't know if you can tell but it's actually offcenter a little bit now why is that well it is pretty much in the center in my view here on the storyboard but it doesn't seem to be in the center here now the reason for that is because we don't specify position and size just by dragging and resizing things here there's actually a more complex system in play where we need to specify rules that govern how this label is laid out right now all we did is we added a label to the view and we haven't specified any sort of rules regarding how it should be laid out and the system I'm referring to is called Auto layout and the rules which I refer to are called constraints so what I want to show you how to do right now is add two constraints to this label one to vertically Center it and the second constraint to horizontally Center this label what I want you to do is make sure that you have your label selected by tapping on it and then once that is selected go down here to the lower right hand corner where you see these buttons here if you click this one that looks like two horizontal bars and this is the alignment menu we're going to be able to check off horizontally in container and vertically in container and the button now updates to add to constraints if I click this button it's going to add those two constraints to the label now in my view it hasn't updated yet to apply these two rules so what I need to do is make sure that my label is selected once again and go down to this button here resolve auto layout issues and scroll down to update frames either all views in View controller or update frames in selected views and that's going to Center my label and apply those two rules now if you didn't see anything in this menu here make sure that your hello world label is selected first before you go down to this menu to update frames or else it will be blanked out okay another thing I want to point out to you is that this area right here in your interface builder this lefthand side now don't confuse this with the file navigator see this is the file navigator here these are the files of your project but when you're an interface builder there is another pane here that lists all of the elements in your view if you don't see this there's a button down here in the lower left hand corner that says hide document outline okay this thing is called your document outline it's going to show you everything you have in your mu let me click this button to demonstrate see it hides it if it's hidden for you click this button again to show this document outline because you can see the view is here you can see that we have our hello world label here and then under here when we added the two constraints it added it under here so if you ever accidentally added a constraint or you want to change your constraint you can either select the constraint here and go into your attributes inspector and you can edit these properties and values or you can quite simply delete these constraints from the document outline so let me show you how to do that select the constraint delete delete' and now my hello world has no again so I'm going to have to select hello world go back down to this menu and check off those two to add these two constraints now one cool feature of Xcode 8 is that you can preview what your view looks like in different devices and orientations now you couldn't do this before in Xcode 7 so check it out down here it says view as iPhone 6s ok I'm going to click this and it opens up a bunch of devices and orientations for example I can see how this would look on an iPad now I probably have to zoom out a little bit I can see how it looks on the smallest iPhone which is the 4s I'm going to have to zoom in a little bit more and furthermore how would look in landscape orientation so with this you can see how your view is going to look like in all sorts of different devices and orientations and you can adjust your elements or add specific rules to certain screen sizes or orientations to accommodate for those devices and orientations ok now finally let's go and run our application now and make sure that that label is centered ok and now you have it hello world centered in the middle of your view you've built your first very simple iPhone app in the next module we're going to build a more complex app where you're actually going to add more graphics you're going to add Swift code and you're going to build more complex layout so hope you've been able to follow along so far thanks for learning with me and let's continue on to the next lesson you