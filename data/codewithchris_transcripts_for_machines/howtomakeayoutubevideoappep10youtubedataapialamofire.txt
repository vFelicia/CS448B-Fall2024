hey coders what's up I hope you guys are having a great day Chris here and as promised we are going to start with the dynamic version of the YouTube app or the so called advanced version we're going to build off of the simple hardcoded data version so for those of you guys who are just joining us in late November we started building a YouTube app but it was the so called simple version where we had hardcoded the video data or the video IDs that we wanted to display inside of the Xcode project and so it wouldn't update dynamically but it was a lot easier and a lot simpler for beginners to follow a bunch of you guys expressed interest in learning how to do the dynamic version which is to have the app go through the YouTube data API download feeds parse the feeds to display the latest content from the channel now if you haven't gone through the simple version yet or you're a beginner just starting out with Swift and building apps I would recommend you do the simple version first and furthermore we're gonna build off of that simple version so so think of this as a continuation of that simple version YouTube app series if you haven't watched it I'm going to link to it on the screen so click that it's gonna open up the video series in a new window for you so please check that out first alright with that out of the way let's take a look at how we're going to accomplish this what I have here is the getting started guide for the YouTube data API there is going to be a couple of things you need to do first before you're going to be able to work with the API and to retrieve data hopefully you're able to go through the Moulton shopping app videos last week so we also worked with an API in that video series anyways with the YouTube data API you're going to need a Google account in order to access the Google developers console and we're gonna have to create an API key and then we're going to need to create an application or register our app with it that's going to give us this API key which we're going to include in every single one of our requests to retrieve data so for example if we go over to the reference section and we take a look at playlist items and we a list of playlist items we can make a request like this and then we can specify different parameters we're gonna have to pass in the API key and it's gonna return to us a response in JSON which we're going to parse and retrieve those playlist items so for example the most recent uploads is actually a playlist so we're going to be working a lot with playlists okay so how are we going to make these requests and parse the responses well we're going to use a library called Alamo fire it's a really popular library used in a lot of popular apps that allows you to very easily handle networking in your app so scrolling down a little bit more we can see that there's a way to install it through cocoa pods which which we learned in a previous video if you didn't see that video click on the thumbnail in the upper right hand corner and you can jump to that video and watch that section to install cocoa pods and learn how we can include libraries for use in our Xcode project okay so with that said let's first of all install Alamo fire in our YouTube app project so I'm going to open up terminal and I am going to go to my YouTube app folder so I've got it on my desktop I'm gonna go with CD desktop and it's under YouTube it's under YouTube app and here I'm gonna type in pod in it now if I open up the folder in my Finder window I'm gonna see that I have a pod file and all I'm going to do is open it up in my text editor and let's follow these instructions here to install it okay so let's uncomment the platform uncomment use frameworks and inside here let's put pod ELMO fire comma tilled 3.0 okay save it that should do it I don't know if we'd need this line up here I'm going to close the file go back to terminal and in here I'm going to say pod install so wait a while while it retrieves Alma fire and installs it okay so it's complete and from this point on we open up the XC workspace file when we want to launch our project we're not going to do that just yet we're actually going to jump back over to the guides getting started because we're going to jump into the Google developers console to retrieve that API key right here so I'm going to click this link and I'm going to switch accounts to my code with Chris email by the way don't use that email right there it's my personal email and I won't answer any questions on it so if you want to reach me you can use the contact form at the bottom of code with Chris calm alright so let's see what we got here Google API is to click that and right away we can create a new project so I'm gonna call this the YouTube app demo alright it gives me a project ID right here let's see what the Advanced Options aren't all right we don't need to worry about that it would not like to be emailed and okay click yes create that okay so down here you can see that it's creating it and here our page has been refreshed so what we gotta look at is the YouTube data API right here and I want to enable this API and by doing that it tells me that the API is enabled but I can't use it in my project until I create credentials so click the go to credentials right now to create them alright so what type of API are using I'm using the data API version 3 and where will we be calling it from I'm going to choose iOS what credentials do I need let's click that and it seems like the only action I can do here has cancelled so let's go back see what happens ok so here you need credentials to access the api's let's click a new credential so I'm going to choose API key I'm going to choose iOS key and here I'm going to just say let's see Google verifies that each request comes from an iOS app that matches one of the bundle identifier is listed below although this is optional so we don't actually have to specify a bundle identifier but if you want you can make it so that only requests from your apps bundle identifier is accepted and where is the bundle identifier well let me show you really quickly in your Xcode project if you click on the root node and go to your project properties this is the bundle identifier so if you wanted you can copy this and you can paste it here and only requests from that app will be used will will be accepted essentially so here I'm going to call this the my YouTube demo key create okay and now we've finally got an API key after all those steps you only need to do this once though so why do we need an API key to access the YouTube data API well one thing is so that YouTube or Google can identify who's calling their API and they can contact you if something is wrong or something comes up with that another thing is that they actually have a quota so you can't overuse the API but for our purposes I don't think we would ever go past that quota anyways okay so we're going to need to keep this API key handy and if you guys don't want to go through the trouble of creating a Google account and signing up for this API key I'm just gonna make this public so I'll include it in the link below the video and you can use my API key I hope that's not against the rules but hopefully you guys don't tell anybody either but at least that's gonna get you guys up and running quickly and so that you can hit the API and retrieve some videos so that's it for this video I want to thank you for watching I want to thank you for subscribing and sharing and generally supporting code with christen the code with Chris YouTube channel so thank you so much and I'll see you guys in tomorrow's video bye for now you