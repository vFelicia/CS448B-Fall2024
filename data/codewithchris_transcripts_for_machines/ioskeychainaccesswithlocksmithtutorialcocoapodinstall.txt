hey coders it's Chris here I hope you guys are having a great day and today I'm here to talk to you about locksmith it's a library in which we can use to work with keychain in Swift so if you've ever had the need to store data across sessions in your app you've probably used or heard of or read about something called NS user defaults which is great for storing stuff like high scores or user preferences things like that which are not sensitive there are ways to peek into what is stored in the user defaults so you wouldn't want to store any sensitive information in there if you need to store passwords usernames and sensitive data you would want to store them in keikain so this library called locksmith provides a very easy way to store some data into the keychain and to retrieve it we're going to be using cocoapods to install it as we'll see in a quick second and I just wanted to show you very quickly how easy it is to do so so in order to save data we use the class method saved data and you can see here that we can provide a key value pair and then also you can specify a user account when you load the data you're going to be loading all of the key value pairs from the specified user account into a dictionary and then you can go access the data from there ok so let's get started and install locksmith as a cocoapod now if you don't know what cocoapods is just check out the video in the upper right click it open up a new window for you that's where we're gonna walk through how to setup and install cocoapods it's really quick and simple and you only have to do it once let's start by creating our Xcode project I'm gonna create a brand new Xcode project as a single view application let me just readjust this window single view application I'm gonna call this the locksmith demo make sure that the language is Swift and device iPhone is fine and you can just ignore the options underneath and I'm gonna save it on the desktop now we're gonna go ahead and close the project because we're going to create the pod file and a press command space bar and type in terminal to open up the terminal and we're going to browse to the desktop where I saved the project I'm gonna type PWD to see where I am and LS to list the directory contents and CD the folder name desktop to go into that folder LS to list it again and I'm gonna type CD lock and then I'm gonna press tab to autocomplete that folder name so here I'm in my project folder I'm going to write pod space in it and that's going to create a pod file in my project folder here I'm going to right click that and open it up in my text editor sublime text and then here we're going to uncomment the platform line and we're going to get rid of the hash symbol in front of use frameworks as well because this is Swift project that we're working with and we're going to just copy this line under cocoa pods and we're going to paste it in between the target and the end tags let's save the file we can close this file now and go back to terminal and then we can type in pod space install and that's going to read the pod file and install the locksmith pod alright so there we go and we can open up the project folder again and now we have a couple more files we're going to be opening up the xc workspace file from now on so let me readjust that again I'm going to press command B just to build the project make sure everything's fine and build successfully I'm going to go into the view controller and here we're going to import locksmith and then in the viewdidload I'm just gonna show you a quick demo of saving some data so we type in locksmith dot save data and we're gonna use this method here where we pass in a key value pair and for some account and notice this keyword throws okay so if it can't save this data it's gonna throw an error we're going to need to use some error handling in order to catch that error if it can't save the data so let's specify the parameters first so here let's say that I have a key value pair of let's say it's a password the password would be you know something like that or something more secure than that hopefully and for the account and maybe this would be my apt name okay so now if it can't save this key value pair it's gonna throw an error and in order to catch it what we do is we wrap it in a do catch block like that and we also have to put the keyword try in front of it so just like that it's going to try to execute this method and save the password the key value pair rather and if it can't it's going to come into here could not save the data into keychain and then you're going to have to probably display a message to the user or maybe try it again or something like that you know handle the air somehow and then in terms of retrieving the data let's just retrieve it right after so we say let dictionary equals locksmith dot load data for a user account and the user account we're looking for is that so what I'm going to do is just hit a breakpoint right there and set a breakpoint right there and let's run the project so xcode is just warning us that we've never used this constant that we declared but that's okay okay so it's loading okay it's hit this line of code here where it's gonna try and save that password so I'm going to just step over this breakpoint step over it so it didn't come in to catch so that means it should have successfully saved and now it's stopped at this line where it's going to load that data back up into this dictionary constant I'm gonna press step over to execute this line okay now we're gonna use the console down here we're gonna check out what's inside dictionary so pio dictionary it's gonna print the object and you can see that it does have one element inside it's got a key value pair you know key is password and the value is the actual password so it successfully loaded the data and really that's how simple it is to securely store some data for your app so the next time you need to store something sensitive between app sessions consider using locksmith now I've actually only touched upon the surface of it that was the quick start with save data load data and then there's also update and delete so you can try those out for yourself and there's also more that you can do with it that I won't get into it's something for you to read if you're interested now tomorrow is New Year's Day so I won't be publishing a video but I hope you guys have a happy new year and I'll see you guys in 2016 now hope you guys continue to watch my videos and support the channel in 2016 I know I've hit kind of a good stride in producing these videos every weekday and I hope you guys are enjoying them so thank you again for watching and please share the video like and subscribe if you enjoyed it and want more and I'll see you guys on Monday 2016 alright have a happy new year and talk to you guys later bye you