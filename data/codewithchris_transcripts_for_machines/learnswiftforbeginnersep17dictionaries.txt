hello welcome to lesson 177 of the learn Swift for beginners Series in this video we're going to go through another collection type called the dictionary in the previous lesson we went through the array you can see here on the left hand side and with an array we had a collection of items where the order mattered so you can see in this example here in the Swift programming language guide six eggs is in spot number zero whereas bananas is in index 4 right well a dictionary on this right hand side here is a collection type where order does not matter so in arrays we retrieve the item by this index here and with the dictionary because order doesn't matter we retrieve these values using a key so each value has an Associated key when you put it into the dictionary and you need to pass it that same key and it's going to return for you the value now which collection type you use to organize your data is going to depend on obviously what sort of data you're storing does order matter if it does then the easy ANS is to use an array if it doesn't then maybe consider using a dictionary so this is a good example airports have these airport codes right so each airport has an Associated key and that's a a good point the keys should actually be unique for each uh value that you put in another great example of when to use a dictionary and this is the example that I'm going to use in this video is um license plates so for example each license plate is tied to a car and each license plate is unique so the key can be the license plate and the value can be maybe a description of the car or something like that let's jump into xcode um in this new playground that I have here and let me show you how to declare a new dictionary and how to work with it so why don't we declare a variable here and let's call it C DB to represent car database and let's uh looks like my playground has crashed okay and what we're going to do here is to declare a new dictionary so we use the keyword dictionary and followed by that we have these angle brackets where inside we specify the data type of the key followed by the data type of the value so for example let's pull up that example again in here this dictionary the key would be a string and the value would also be a string and so in between these two angle brackets we would just put string comma string and in order to create a um a new dictionary object we would just end off with those two brackets and like that we have an empty dictionary which stores key value Pairs and a key value pair is just a fancy name for one of these pairs of data you know a key and a value um this dictionary stores key value pairs where the key is a string and the value is a string as well now there is an easier way to write this out without having to write so much like let me show you that second way VAR car DB uh let's just say db2 is equal to use the square brackets and then you specify the data type of the key followed by colon and then the data type of the value and again we have these two brackets here to create a new instance of that dictionary or new dictionary object and that's equivalent these two are the same thing doesn't this look very similar to uh declaring a brand new array don't get confused so for example declaring a new string array would look like this would be my empty array that is expecting to contain string objects and this is an empty dictionary that is expecting to contain key value pairs where the key is string and value is string as well okay so we're going to stick with this sort of Declaration here so I'm just going going to go ahead delete this array example that was just for demonstration and delete that so now we just have C DB is an empty dictionary now how do I assign something into the car database dictionary well I would do car DB and then I would use these two square brackets here and I would pass in a key or I would specify a key rather and this key would be a license plate right so you know this is going to be different depending where you are in the world um but let's just say it's like that and then you assign the value into the dictionary for that key so this would be let's say a blue uh Ferrari now this value blue Ferrari is tied to this key jsd 238 how do I retrieve the value well it's very simple I just give it the key so if someone were to look up this license plate let's say I'm I print this out like that it would print out blue Ferrari but notice that it's wrapped in an optional tag because for example if I passed in a key that doesn't exist right let's pass in like ASD 238 then you can see there is no no value for that key right so that's why it returns nil so that's why when you access a dictionary and you pass in a key it returns to you an optional uh whatever data type that your value is so when you pass in a key into your dictionary to retrieve a value um just expect that it is an optional and you may need to unwrap it and check if it's nil before using it okay so what if I wanted to uh let's let's label this so before we continue on this is declaring a new dictionary this is uh adding key value Pairs and this is retrieving data and how do we update a value for a key well it looks exactly like this up here so you specify the key that you want to update the value for and here we can say that this guy now is a red Ferrari maybe it got a paint job or something so when you pass in this key from now on you're going to get this new value because this basically overwrote whatever was there before and in order to remove a value remove a key value pair let's say you can do something like this you pass in the key 238 and you assign it nil and actually that is going to remove the key value pair from your dictionary now I'm going to show you how to iterate over all of the key value pairs in your dictionary so why don't we just add a second key value pair in here so so that we have more than one item to display okay and this one can be a green uh Lamborghini I think that's how you spell it I don't have one so I don't know for sure and now let's iterate over it wish I had one though iterate over it we use a for Loop so we can say for um essentially for each key value pair inside the dictionary do something and the way you specify this is you pass in um we use what's basically called a tupple okay and so you can think of a tupple as a set of variables or a bunch of variables so we'll we're going to say uh license car in cdb now the in keyword shouldn't be new to you because you guys learned about the for Loop in a previous Swift lesson so um basically what should be new to you though is this this is a tupple so for each tupple in this dictionary we can do something what's going to happen is it's going to uh grab each key value pair and the key is going to be inside license and the value is going to be car like that so now inside this for loop it's going to iterate twice and I'm going to find this key or this license inside this license variable and I'm going to find the car uh this string here blue Ferrari or green Lamborghini inside this car variable and it knows even though there's no data type associated with this tub because my dictionary is string string for the key and the value I'm going to Simply print car like that and you can see that H it's just it's printing one key value pair here it's printing one car but I have two items and the reason is because we've actually removed a key value pair with this statement here so if I just comment this guy out we have our two cars and it's a red Ferrari because we changed it up here now I can also print out the license I can say you know license um you know I can say something like car has a license like that has a license so that pretty much wraps up using a dictionary and you're going to find that it will come in handy alongside arrays in organizing your data so thanks for watching if you like this video please give it a thumbs up and please share it with anyone you know who's also interested in Swift thanks for watching I'll see you guys next time