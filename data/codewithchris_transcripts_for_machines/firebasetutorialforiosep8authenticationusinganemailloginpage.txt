hey guys is Chris here in today's tutorial you're going to learn about firebase authentication specifically we're going to build a login page together that is going to set the email and passwords that the user can use to create an account or to sign in now eventually we're going to deal with all of the different firebase authentication methods like Google signin and facebook login and stuff like that but in today's lesson we're going to look at email and password specifically okay so the best part about it all is that it's actually not very hard as you're going to find out now before we get started there's one thing I want to say I'm going to try something a little different in today's video and that is one lucky subscriber and it could be you is going to win the app or game of their choice from App Store now if the winner turns out to be you you're going to be able to pick any app or game I'm going to buy you a final money and then I'm going to gift it to you so watch to the end of this video to find out how that lucky subscriber could be you okay so with that said let's get started so we're going to start by creating a brand new Xcode project it's going to be a single View application and I'm going to call this a custom email login now most of these settings you should have already if you've built any other apps before but you should just double check that the language is Swift okay I'm going to click Next save it on my desktop and that's all we want to do right here now we're going to jump into the firebase side of things because we want to create that firebase app that is going to store our users so let's create a new project in firebase and I'm going to call this custom email login and I'm just going to change this to Canada now we're going to click Add firebase to your iOS app so this bundle ID we're just going to quickly jump back into Xcode here this is our bundle identifier you can get to this page from clicking here under general and that's where the bundle identifier is now paste it into there and you can give this the nickname email login and add the app now it's going to create a configuration file for us to download and it should start automatically I'm going to save it on my desktop there and we're going to add this into our project just by simply clicking and dragging this guy into Xcode now make sure copy items if needed is checked on so that it copies it into our project folder and click finish so now that it's there let's go back here continue and now we have to install the firebase libraries with cocoa pods and this is stuff that we should have done before in the previous firebased lessons to offer this project but I mean you should know how to do this so I'm going to close out this Xcode project I'm going to open up terminal and then I'm going to navigate to my project folder so it is custom and you can press tab to complete the folder name for you and here I am inside my project folder so I'm going to type in pod space in it and if I open up my project folder now I have a pod file so I'm just going to open this in my text editor and here we're going to add some firebase libraries so firebase core we need that so we're going to paste it down here but we're also going to need another one so let's go to the documentation so I'm just going to click continue here and we're going to do that in a sec but what I want to do is jump to the documentation I will show you the different firebase libraries we can add so other documentation this gift sort of guide is really helpful we're going to need this under authentication as well but what I want to go through here is down here just under iOS under get started the available pods section tells you which parts you need to add depending on which features you want to use so we're dealing with an authentication now we also want to add this pod as well so go ahead and copy that and paste that under there so I'm going to save it and we can jump back into terminal and we can do a pod install so it's going to go ahead and it's going to do that really fast because it did it before I've done this before but for you it might actually take a while it might actually take ten fifteen minutes five minutes you know however long it takes to download all of this stuff furthermore if you get an error message about saying something like your cocoa pod libraries are out of date or something like that you can simply go back to the first lesson in this series and then just install cocoa pods again and it's going to actually update the files and then you can come back here and you can do a pod install for us now everything is good to go we're going to go back to our project folder and now we're going to open up our XC workspace file and inside this file we need to configure it for firebase got last step which we skipped a couple of minutes ago so import firebase here in your app delegate duck twist and then under here before the return statement we're going to say fire app and notice that we have a fire off now so far our app sought configure okay so now we have our Xcode project connecting to this this firebase app that we have on firebase okay so here jumping back and forth but this is kind of necessary we're going to set up the authentication method for our app first so if you click authenticate in here you can go to sign and methods right now everything is disabled we're going to enable email and password okay so go ahead and save that now it would be very helpful for us to have the authentication documentation handy so under there under authentication iOS and password authentication telling us to do pod far based off but guess what we already did that so we can jump straight to this part in fact we already did this you know in the app delegate far out configure we did that and here's the thing to note we are looking at this one create user with email okay so that's using fire off right we're going to create a new user using that function by passing in the email and the password and for signin we are going to do this one signin with email and password like done so now back to our Xcode project we need to create some sort of UI that contains some text fields for the user to enter in their email or password so let's jump into the storyboard and quickly do that so I'm going to move kind of quickly here and if you can't follow along or you're having trouble following along check in the description below the video for the link to this project and you can just download the Xcode project and look at the source code and run it and play with that so background I'm going to choose the screen I really like the screen for some reason it reminds me of Evernote which I really like except that it went paid and I stopped using it so now I'm using OneNote but I would really prefer to use Evernote if I had the money to pay for it so first we're going to start with a segmented control and this control is going to let us choose sign in or register so I'm going to change the title for the first segment to sign in and toggle to the second segment here I'm going to call it register and then we're going to have a label right underneath that and this label is going to be just saying either sign in or register I'm going to make this text white and next we're going to have we're going to have some other labels actually so we're going to have a label here that says this is the email field and I'm going to change that to white I have a label here and this is going to be for the password and the color is going to be white as well and then we're going to do text field I'm going to add two text fields one for the email one for the password like that and finally we're going to have a button now this is all going to come together soon I promise this button I'm going to call it signin for now okay so now let's just put some of this stuff in to stack views first of all we're going to add these two things into a stack view so give me a horizontal stack view and it's going to squish it like that for now that's going to be fine we're going to add these two put it into a stack see by clicking this button below so now both of these guys are in horizontal stack views as you can see from this document outline and now we're going to highlight all of these elements I forgot to mention you can highlight elements by holding down the command button and clicking each one but it's going to be very hard it might be a little difficult okay so I've selected them all like that another way you can do it is simply probably easier is to highlight doc I hold down shift and then click the last element it's just going to highlight it all before before you pop these guys into effect view itself I want to make sure that you have the correct order because once we pop it into a staff you the order matters so the first element on top here I want you to have the segmented control and then define and label and then the stack view for the email stack for you for the password and then the signin button lastly so if you have that order and you have them all highlight it like I do now you can click the stack view button and now it's going to dump it all into a stack view it's all squished it's fine we're going to add some constraints to this guy first so highlight that stack view we're going to go down here we're going to vertically center it in the container and we're going to add some constraints so that it left and right specifically zero zero so that it hugs the two edges there you add these two constraints and now I'm going to update frames and now it's going to sit in the middle furthermore we're going to we're going to change the spacing to 30 spread them out a bit and we're going to change the alignment to Center so you see all the elements here are aligned to the left I'm going to change that to center so they're all Center aligned and as for the email and password fields they're so squished right so highlight this stack view with the email and we're going to have to give it an idea of what it's what it should be so we're going to put 0 0 for the left and right constraints so it reaches all the way across like that okay and for the second stack 3 for the password 1 I'm going to do the same thing I'm going to do that and lastly let's add some spacing let's work on the password faculty first so select the stack view with the password and the text field in it and give it a spacing give it like 20 something like that and for the email 1 I'm going to have to play with this a little bit just so 40 now maybe 60 that's too much 55 something with that maybe it's 50 that looks about right to me if you want to be precise about it you can spend a little more time on it now what we're going to do is we're going to connect all of these elements to our view controller via IB outlets so that we can manipulate them we can read its values and stuff like that so go ahead and click assistant editor up here and usually I tend to run out of space so I'm going to use this document outline to connect my outlets now create some space up here because that's where we're going to do our outlets hold down control click and drag this segment to control over here and create an outlet I'm going to call this my let's call it the fine and selector and for the label here we're going to add an outlet for that you call this the signin label and for this email text field we're going to need that we call this the email text field we're going to need the password text field squared text field okay and the signin button right here and this part signin button so it's about the tests on signin button in this part when you're connecting the outlets some people end up making mistakes maybe they make a typo or they end up dragging the wrong element for example if I was dragging the text field I might have accidentally did it for the label instead and so people get into these weird states where the wrong things are connected and it's going to work right now but when you run your app things are going to go bad or when you try to like a signed text to read the text from this property right here it's not going to work because it's actually a label and not a text field because you connected the wrong thing so in order to fix that all you need to do is you can go in your document outline you can rightclick it and you can see what property this element is connected to so you can see here for my password text field if I rightclick it it is connected to this outlet called password text field if I had connected my label I would see it if I rightclick my label here I would see something here connected to that property all you need to do is click the little X to break that connection so for example I'm going to do this with my password text so I'm going to click this little X break the connection and now it's not connected to anything in fact you can see this little circle this little dot is not filled in which means this property is not connected to an element so now what you can do is rightclick your text field and then click this little circle under the side name referencing outlet as you can see there in st. Joe I get up to here and then choose the property and here don't make the mistake and connect it to the wrong property they'll connect it to the email text field or else you're going to have to fix things again connect it to password text field okay so that's just a little segue to tell you about that we also want to handle a couple of events so for example is the user select signin versus register we want to know about that so hold down control click and drag it down to here under override function did receive memory warning this time we're not adding an outlet we're adding an action ok and this is a signin selector change for the type I'm going to to segmented control just so the parameter is of type of segmented control we're not done yet we need to add another action under signin button ok so we're going to add an action and this is going to be signin button tap and the type is UI button Connect you should see something like that now so far all we've been doing is hooking up our user interface we haven't actually done anything with firebase yet now this could have been a separate video in itself and that's why I'm moving kind of fast because I don't want to spend that much time on just the user interface because the point of this video is to show you guys how to do firebase authentication but that pretty much does it for our UI okay so let's write a little bit of code right here when the user taps on this segment of the control and changes it from sign in or register that matters to us right because when the user hits this button we need to know if we're telling firebase to register a new user as and create a new user or to try and sign in the user right so we need to keep track of whether whether the user has the fine and tab highlighted or the register tab highlighted now what you can do is you can just check the assignment selector to see if segment 1 is selected or segment 2 is selected and because you know segment 1 is sorry I think it's segment 0 because the index for the segment start at 0 segment 0 is sign an assignment 1 it's registered but you have to know that and it might be unclear for someone else who is reading your code so what I like to do is just a little more work it might be a little extra code but I find that it's worth the clarity that it provides so I'm going to create a boolean variable just to signify if it's in if it's sign in or not and to start I'm going to set it to true because by default it is set to sign in and when the assignment selector has changed I basically say is sign in I'm just going to need to flip this from true to false or false to true and one trick you can do is you can just add that exclamation mark which represents which stands for not so if I do this it's just going to say is sign in is equal to the opposite of whatever is sign in right now so that's true this is going to flip it to false and assign it back here so this is flip be boolean okay and here going to check the bool and set the button and labeled ok so because if is sign in we're going to want to say define then label dot text is equal to sign in and sign in button dot to set title is sign in for control state press dot choose normal and otherwise we want to say the sign and label dot text is equal to register in the signin button dot set title to register for control state normal okay so that's going to handle our UI now this is the fun part here we want to say check if it's signed in or register so again we do if it is sign in right then sign in the user with firebase I'll register the user with firebase okay so now we can jump back to the documentation here before we can actually use the sign in or the create user functions our view controller needs to know about the firebase classes and libraries so we need to go up here above view controller and just import firebase and an import firebase off do I not need to do that might just need that so here we can do firebase off dot off like that and we can pretty much just follow this right where are we here signin right we can pretty much just follow this so you can do far off dot auth dot signin and autocomplete is gonna be really nice here so press ENTER so we need to provide it with the email and the password has two strings and then we can open up this completion closure to handle the result okay so before we pass in the email in the password what we want to do is probably just check about the fields aren't nil or if they aren't empty in fact you would probably want to do some no form validation on the email and password just to make sure that they're correct and especially if you're registering a new user with firebase on you and you want to make sure that their password is secure and contains a certain number of characters or capitals or whatnot then you would probably want to do some validation but I'm not going to do all that in this lesson because my main focus is wanting to show you guys these firebase authentication functions here so I'm just going to leave this as a to do or maybe we'll do it in a followup lesson or maybe a separate lesson to teach you guys how to do some validation but here I'm just going to do a basic check to see if email and password are both filled in so we can use optional binding on the text fields so let's let email equals email text field text comma and path equals password text field like that and inside here I know that both of those fields are filled in so I'm just going to copy this and only we're only going to do this if those two fields are filled in so here I can simply pass an email email like that and here can pass and pass like that okay so here for the completion closure I'm going to double click it and that's going to open up the closure I'm going to this parameter is going to contain the user which notice is an optional and the error is also an optional so user and error if the signin was successful then we should get a user so we can check that check that user isn't nil if let you equals user then user is found go to Home screen or wherever you know you want to send the user after else error check error or check error and show message for registering a user down here we're going to use the fire auth off create user with email and password so again we just pop it in the email is path and for this completion closure double click it again it has the same thing so user error so if let u equal user check that user isn't no user is found go to Home screen L error check error and show message okay so that should be it now what we need to do is in our main storyboard we need to add another screen for them to actually visit after three days completed to sign in on registration so I'm going to add another view controller here and I'm very simply going to just set the color and add a label and just say you're in and change that to white and then we're going to Center that label horizontally and vertically inside this container update frames so that's it and how are they going to get from this view controller to this one well we can create a manual segue so up here I'm going to click this guy hold down ctrl on my keyboard drag it over here and click show it's going to create this segue here that we manually invoke but we got to give it an identifier so call this go to home go back to the view controller and now we can invoke it after the user has logged in so there's something wrong here cannot convert value of type UI text field ah my mistake here what we want to check is the text property of the text field I forgot to do that for this password we want to be grabbing the text from the text field and checking if that is nil okay so now that gets rid of all of those errors so if the user isn't know we're going to go to the home screen by invoking that segue we just added so perform segue with identifier go to home and the sender is self and the sender is basically who is calling or performing that segue and self is just view controller so that's why I have that there and perform segue is a function of view controller but because we're inside where this code is inside of a closure here we need to use the self keyword like that okay so self dot perform segue go to home so all right so now we're ready to try this out let's run the project and keep an eye on our firebase app in the users section here let me just separate this into two little windows like that alright so one thing that I might not have done we'll see if it will see if it happens but the keyboard might block the signin button which is ironic because I just did a video on that so we're just going to register that I forgot to add the code to dismiss the keyboard so we're going to choose register first okay and I put in my email you guys want to send me some fan mail go on right ahead and actually this password this is kind of embarrassing because my password is going to be seen by everyone and we got to set this password to secure text entry right so we're going to do that in just a sec so I can click register and hopefully that populates the user here reload boom alright there's our user so there's not email for everyone to see this message here you're in alright cool so let's stop the project let's go back to the storyboard let's change this text field to secure text entry okay right now I have the password text field selected secure text entry boom okay and what we also want to add in the view controller dot Swift down here and this is this is getting sticky because we have so many brackets here and that you can get you know pretty confused but make sure that you put it if you want to start a new function the safest way just grab the last bracket and put it above that okay but another thing you can do is you can start separating your functions into different sections using the mark keyword make sure you show you guys that another time so we want to override the touches began and we want to say email text field resign first responder and password text field resign first responder and this is just going to dismiss the keyboard when the view is tapped on okay so now let's run it again and try to sign in with this new user that we created all right we're under sign in here and moment of truth let's go here sign in boom we're in all right so that's going to do it for our email and password authentication with firebase now we did a lot of work just building this demo just building the UI building you know all the forms and arranging them into a form with Auto layout and stuff the actual part of connecting to firebase to create a user or sign in the user was actually pretty simple once you're so you know even though this video was long I mean most of the work was just to build our UI here in fact when I was reading the documentation in firebase they also had some sort of prebuilt UI that you could use maybe we'll take a look at that please drop an authentication solution far with UI auth maybe we'll take a look at that in the future but I want to show you guys how to build in login form and how to sign in users and create users using email and password authentication so I hope you are able to build this out for yourself if you weren't able to or you just want to download the project check the link below those in the description of the video for downloading this Xcode project so I hope you enjoyed that tutorial now let me tell you about how you can win the app or game of your choice so number one you have to be a subscriber it goes about things I hit that subscribe button below if you're not already number two is give this video a like by hitting the thumbs up button below the video as well and lastly comment below by answering this question well it's just one app or game that you can list out so let me know the only rule I have for this contest or giveaway is that the app or game that you choose cannot exceed $10 USD now the reason I say that is to give more people chances to win the more I do this because if I don't put a cap on it and there's some apps or games out there that are like twenty thirty dollars I'm going to go broke so there's still a lot of things to you buy for $10 USD and I hope you guys enjoy it oh yeah one last thing I'm going to choose the winner randomly and I'll reveal who that is in the next video so stay tuned make sure you watch that video to find out who wins and probably also for another chance to win as well okay so thanks for watching I'll see you guys in the next lesson bye for now Oh batteries