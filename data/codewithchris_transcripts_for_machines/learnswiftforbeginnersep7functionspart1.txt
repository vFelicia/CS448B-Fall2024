hello welcome to learn Swift for beginners lesson 7 in this lesson you're going to learn about functions how to use them what they are and this is a critical part of the Swift programming language if you want to build apps with it so let's get started so here I've got a brand new xcode playground where we're going to take a look at what functions are and how to use them how to define one how to call one if you don't know how to start a new playground just go back to lesson one of this learn Swift series okay let's start with what a function is at its very core a function simply allows you to take a chunk of code give it a function name and then whenever you call that function name it's going to execute that chunk of code now that may seem simple but over the course of the next couple of videos you're going to see just how complex and Powerful functions can be functions are really useful because it allows us to break down and group our code code into smaller chunks and we can organize them so that each function or each chunk of code has a specific task and when you want to do that specific task then you just call that function so let's see how a function is defined in Swift Code and then we'll jump into some examples in our playground so here we have the Syntax for our basic definition of a function now it can get more complex than this because there are a lot more features of functions that we can use but we're going to explore those in the next couple of videos for this example here is your kind of basic definition of a function you start with the funk keyword that's fun NC followed by the function name now this function name is what you're going to use to call the function now right after the function name you have two parentheses or two rounded brackets in this basic definition there is nothing in between these two brackets no spaces nothing in the next two videos you're going to see what those brackets are used for but for now those brackets are just there as part of the definition there's nothing in between them and then you're going to have a set of curly brackets and as you would expect in between the curly brackets you would put the code for the function so whenever you call the function name that code in between those curly brackets that code is going to be executed all right let's jump into the playground and do some examples I'm going to declare a function that is going to add two numbers together and it's going to print the result to the console so I'm going to start by using the funk keyword to declare a function and now I have to have a uh function name so I'm going to say add two numbers that's my function name and you'll notice that I'm using the same uh camel case as I do for declaring variables where I start with a lowercase letter of the first word and the following words uses a capital letter then I have my two rounded brackets like that followed by a set of curly brackets like that and sometimes when you type in this first curly bracket or the opening bracket and then you press enter xcode will automatically add this ending curly bracket for you okay so in between the two curly brackets I am going to say let a = 1 let b = 2 and I am going to uh let C equals a + b okay and then finally we're going to print the result of C so you can see here that nothing actually happens because this function hasn't been called this code is sitting here if we had written this code instead of putting it into a function so let me just delete this for now like that and this is what we've been doing so far before we learned about functions we would just declare these constants here and then print C and you would see all of this stuff in the output now I'm just going to undo those two deletions so to wrap this code inside of a function now you can see nothing gets output until I actually call the function to execute this code right here so uh how do we call a function so in order to call a function you just have to write the function name followed by the two rounded brackets now because we don't have anything inside these two rounded brackets that's all we have to do but as you're going to learn in a couple of videos later um if we have something in between these brackets the calling the function would require a little more work but for this basic function we can uh invoke that function simply by writing its name so add to two numbers as you can see here autocomplete even suggests it so all I have to do is highlight that line press enter and what happens now we get three output into our console because by calling that function it just ran the code down here and I can call this again as many times as I'd like and anywhere I'd like one benefit is that if you need to execute a chunk of code several times this is a big savings rather than writing this code out multiple times I just put it inside a function give it a name and now I can invoke that piece of code Whenever I Call this function name like this so it helps you reuse code especially if that chunk of code is going to be used multiple times in your app you don't want to write out the same chunk of code multiple times in and around your app because it makes it really hard to debug for example if you've got an issue with this chunk of code and imagine if you had it repeated several times in your app in order to fix it you'd have to fix it in every single one of those places but if I have this chunk of code inside this function um I would only have to troubleshoot and debug this piece of code once here and as soon as I change this let's say I Chang this a to a two and let's say that fixed my code and you can see here wherever I call add two numbers the code is updated so I only need to update and change the code in one place whereas if I wrote this chunk of code out in multiple places in my app I would have to change it in all of those places another benefit I mentioned is that it lets you group this chunk of code that performs a specific task into a function that describes what that chunk of code does so it helps you organize your code so there is one more thing I want to mention about functions and that is about scope so same thing we learned about inside of Loops in terms of defining variables applies here as well so let me give you an example of what I'm saying so let's say I get rid of those two function calls and we simply have this function here we have these three constants C is obviously four right and inside this function I'm printing C so outside of my function let's say I want to print C well that is actually going to throw an error that doesn't work why because the constants and variables that you declare inside a function can only be used in the function in between these two curly brackets and likewise if I declared another function really quickly so inside this function I also cannot access the constants that I declared here so if I declared a constant like that D equal 1 I can't say you know uh what let e equal C minus D or something like that um inside this function it's not going to recognize what C is right here so let's get rid of this first okay so there you can see the error it doesn't know what c is because C is defined inside add two numbers and so it only recognizes C within this scope a b and c in fact so inside here inside this function I'm free to declare a again because it only applies Within These brackets like that so I can have a minus D and let's end off by printing e okay so the main takeaways for this lesson right here you've learned about what functions are and why they're beneficial you you've learned how to define a simple function you've learned how to call that function so you can execute the code inside of that function and furthermore you learned about the scope inside of a function and just to remind you about that it's that whatever you declare inside of the curly brackets of a function is only recognized and can be used inside of those curly brackets in the next video we're going to build upon what we learned here in this lesson and you're going to learn how to make functions even more powerful so thanks for watching if you like the video please give it a thumbs up it helps this video get seen by more people and subscribe for more thanks and I'll see you in the next lesson