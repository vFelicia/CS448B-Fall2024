hey guys welcome to lesson 11 of how to make iphone apps with no programming experience and in this lesson we are going to take a look at the asset library in your Xcode project and how to add images into the project so that you can use them so I've got some beautiful card images here and let me just show some of them to you guys here's the Queen and there's a king now I'm not the original creator of these images I'll link and provide credit to the original author of these images below but he released them under the Creative Commons license so we're able to use them for our demo here and I don't have all of the cards for each suit I picked a couple from each suit just to make sure that we have ace all the way up to King so we have what is that 14 cards so for the purpose of our war card game I'm not going to use all 52 cards now before we add these images into our Xcode project for use take a look at these file names so I have for example I have the King card which is right here and then I have another one with then at 2 X suffix and then I have a third one with an at 3 X suffix well what are those let me just open them up and you can see so the app 2 X is literally just 2 times as large and 3x is 3 times as large and the reason that I have this is because we have a couple of different iPhones with different resolutions so we have the original iPhones which would use these ones and we have the retina iPhones which would use the at 2x and then now we have the iPhone 6 iPhone 6 plus which at the larger screen sizes use the at 3x the beautiful thing is that we don't have to manage which version to display as as we add all three versions and we name it according to this sort of nomenclature so at 2x4 the double the size and at 3x with three times the size as long as we name it like that and we add all three versions to our Xcode project the app is going to pick the appropriate version to display to the user depending on what sort of screen resolution that they have although creating graphics is beyond the scope of this course what you want to do is create your graphic asset at the largest size so whatever size you're thinking of create it at three times the size and then you want to take that larger size and scale it down to create the other two otherwise if you start with creating your graphic at this size and then you enlarge it to two X and then you enlarge up to 3x the 2x and 3x versions won't look very good and it may actually be blurry because you're scaling the image up so you actually want to work at this largest resolution and you want to scale it down to produce your other two copies in your graphic software such as Photoshop or sketch where you're creating your art assets you'll have the ability to scale it down and create these two versions manually but actually there's an app that can help you do that really easily and it's called prep oh it's available in the Mac App Store for free so let me show you guys how it works so here I have the app store listing for prep oh if you just open up Mac App Store on your computer and search for peple you'll find this app and it's again it's free and it's a handy little tool to help you create the at 2x and the 1x versions so let me demonstrate how it works very quickly this is what prepa looks like and I'm gonna go back to my finder for my king I'm going to delete the at 2x and the 1x versions okay so that just leaves me with this remember you want to create your artwork at the largest size right so when we create our art asset we're gonna name it whatever at 3x okay and then very simply you just drag this guy and drop it into here and then once you drag in all of the images that you want to convert or create the smaller versions of you just click export and you choose a location so I'm just gonna choose this and then if I go back to my finder you'll see that it's created the app 2 X version and the 1 X version so when you're working with a lot of art assets this can be a real time saver because you don't have to manually create the smaller versions in your graphics editing software instead you can just drag all of them in here and then do a single export to create all of those different versions ok so now let's go into our Xcode project and see how we can add the art assets into the project okay so right here I'm looking at the storyboard of our war card game Xcode project and you'll notice in the file navigator that we have this entry called images thought x.c assets and here there's a single entry for your default project and we close this pane so there's a lot more to look at and this is where you're going to add your app icons but we're not gonna do that right now this is called your asset library and this is where you're going to put all of the images for your app and it helps you manage your different versions so you can see that there's spaces for the 2x and the 3x versions so what we want to do when we add an image asset we're gonna right click here or if you have a single button Mouse you hold down ctrl and click you can get this menu as well and we'll hit new image set ok and then you just want to highlight that by default it's going to name it image and you can press ENTER to rename it or you can just click it once and then wait for the text box to pop up so I'm gonna name this card one OK and this is going to be my ace so let me open up find her again and grab my images so you can see here in the image asset library this is card one is the new image set that I created and on the right hand side there are three spots for each of the different resolutions that I need to add for this single image so I'm going to go back to my finder scroll down for my ace and then I can drag the 3x into the 3x slot and the 2x to the 2x slot and then this one into the One X so just like that whenever I want to use this image I can refer to it by this name card one and it's going to use the appropriate size depending on what type of screen the user is using my app on now here's a tip if your file name is not going to be different from what you want to name your image set you can actually just drag it on so let me demonstrate so for card I'm going to grab these three and then I'm just going to click and I'm gonna drag it here and just like that it creates an entry based on the file name and I'll add all of the different resolutions based on your at 3x in your at 2x suffixes or alternatively we can go like this again and create car 3 and you can come here you can highlight all three resolutions and you can click and you can drag it here as well it's going to be smart enough to add card three dot PNG to the One X card 3 at 2x dot PNG to the the second one and the last one to the highest resolution so it's not going to switch it around and mess up your resolutions so I'm just gonna go ahead and do that for cards 4 to 10 just drag it into our image asset library okay so now I've got one to ten I want to add my Jack Queen and King as well but I don't want to just drag it into my asset library because I actually want to name it well I suppose we can name it afterwards so let me just drag it on like that and then I can rename my jack to card eleven and you'll see why I want to name it this way a little later card 13 because we're going to be randomizing a number from 1 to 13 and then referring to the card by the number instead of Jack queen or king I have a couple more image assets here I have a background and I have a card backing so I'm going to drag these guys in here as well so this is just a card back and the green felt is the background we're gonna use okay so now we actually have some great image assets for our app now let's take a look at how we can actually add these images to our UI image views so I'm going to go into our storyboard I'm gonna open the inspector pane again because we're going to be modifying some of the properties the first thing I'm going to do is click the UI image view that's supposed to represent our background so I have this guy highlighted so its properties are going to show up in the inspector pane on the right hand side I'm going to flip these tabs up here till I get to this tab where you can set the image for this guy and if you hit the drop down you'll actually see all of our different image assets in here so I'm going to select background which is the green felt background and you can instantly see that it set that image as the image for our UI image view I'm going to do the same thing for the cards just as a demonstration but I'm gonna remove it after because we actually you know we don't want the cards to be hardcoded or rather we want the cards to dynamically change depending on when we click the play round button we want to randomize which cards to show okay so I'm just gonna choose let's say car ten here and let's say card 12 card 12 card 13 I mixed it up a little bit so let's go to image assets here the King should actually be card 13 and the Queen should be card 12 so I'm just gonna change that quickly okay so now this is better car 12 is Queen and card 13 is king so going back to our storyboard so you can see how easy it is to add images to your Xcode project and then set the images in your UI image views but obviously we don't want to leave our app like this so let's modify the button tap method to dynamically change these images when the button is clicked okay so let's go into our view controller dot Swift file because that's where the play round tapped method is located and in this method the code gets executed when the button is tapped so right now this line of code we had set just to test things out and it changes the button title to play round so we don't want to do this anymore instead we want to set the two UI image views to a different card actually let's make things more interesting let's go back to here and let's change these to the card backs and then I'm gonna save it go back to view controller dot Swift and then in here we want to manipulate those two UI image views and set the image property of them how do we do that well we exposed those two UI image views here as iboutlet properties remember so we can refer to these guys using these properties so I'm going to say self dot first card image view and Xcode autocompletes it after I type a couple letters I just thought the press Enter so now this is referring to the uiimageview object for the first card view I'm gonna press dot because I want to access one of the properties and image is the property that I want to access so let me step back for a second when I press dot and I press I here it goes to image so that's the property name but on the left hand side here you can see that this is the type of object that this property needs or expects so I know that it needs a UI image object so what I'm gonna do is create a new UI image object and UI image is one of those UI kit classes okay so I can do that very simply remember that in order to create a new object of a class you just write class name and write these two brackets so what happens when we create a new object well the anit method gets fired right let's pull up the documentation for the UI image class so here I've got the UI kit framework reference which I showed you guys in a previous lesson and I told you guys we're gonna use this a lot so I'm going to search here for UI image and there it is a UI image object is a high level way to display image data so let me click into that class and you can see here that it's got a special init method called well it's called an it but it accepts one parameter called named so let's click that and let's see what that does so it tells us that the method is in it and this is a parameter that is of type string so we can pass in a string in here and it returns a UI image object for us so let's see the name parameter name of the file okay the method looks for an image with specified name in the applications main bundle all of the images that we added into the asset library are in the applications main bundle so all we need to do if we go back into our Xcode project is specify one of the names in here okay so let's call that special initializer method and if I just open up a bracket in here Xcode will instantly tell you you know what sorts of things are available and here is the method that we're looking for so I'm going to click that and now we can just specify a name let's say card one okay and basically what's going to happen is a new UI image object is going to be created using its custom special initializer method that accepts a string parameter it's going to look for card one in the asset library and it's going to basically create a UI image object that is initialized for this image asset and it's going to assign that UI image object into the image property of our UI image view okay so let's run it and see what happens okay so here we see all of the image assets which we set in the storyboard so when I click play it's going to execute that code which will change the image that's set in this card so you see it's set it to card 1 when I click play because this is the line of code see self thought first card image view is the iboutlet property which refers to this UI image object right and the image property of that object is what we must set in order to change the image so we did that in this line and we're setting that image property to a new UI image object which using this custom initializer method we can pass in the name of an arc asset to use and so that's how that works so let's do it with the second one self thought second card image view dot image equals UI image named let's say card 11 gonna run it again so I click play both cards are going to get the image property updated see so the next step in the next lesson is going to just randomize it instead of setting it right now we're hardcoding it to the ace and the Jack I just want to point out one thing is that when we're in the storyboard and we're changing the image for the uiimageview through this inspector pane you can see here this is the image property we're just setting it visually here versus doing it through code and setting it here by passing it a new UI image object the great thing is that by doing it through code it kind of gives us the flexibility to dynamically change the image if we want okay so I'll see you in the next lesson where we learn about how to randomize a number and then set the corresponding image