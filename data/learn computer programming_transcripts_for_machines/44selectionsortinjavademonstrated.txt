welcome back students in this video lesson we will learn selections art in our a in selections art technique sorting takes place by stepping through all the elements one by one either smallest our largest element and swapping it into right position on each pass this algorithm selects a that largest or smallest of the remaining unsorted element and places them in the right order for example consider this array let us imagine that it needs to get sorted in ascending order in this technique it will search for the least value of that array in the beginning and swap the value at first index in this example we have 11 as the least number at index number for so value at index number for and value at index number 0 will get swamped here you can see it is having two main steps one is searching for the element and the other one is swapping searching will happen in the inner loop and the swapping will happen in the outer loop if the length of the array is n and then n minus 1 iterations we required for swapping here the first element got shorter so again it will search for the least element in this part of the array here we get 14 as the least number so the value at index number 3 will get swapped with the value at index number 1 now the remaining array from 2 to the last element so here we can again see 21 is the least element so 21 gets swapped with value at index number 2 now the fourth iteration that is index number 3 and 4 gets swapped to arrange in the particular order after n minus 1 swapping other get shorter and I will explain elaborately working up selection shock let us have array like this I already told you swapping will be in the outer loop and the searching will be in the inner loop for outer loop we need n minus one iterations that we will write is equal to zero is lesser than a RR dot length minus one now to search the least value in the array we will consider the first one is the least one and then we will compare with the rest of the element so temporarily to consider the first element as least element I will have variable count MV that is minimum value and index for that I will take it as minimum index so that is the index which is having the minimum value now I will assign the value that is a rrf ie temper over lead to minimum value and the index is for my that is I here in this example I will be 0 that is EMI is 0 ARR of I that is MV will become 15 now inner loop to search again we need n minus 1 iterations already we are having value of this first index as youngbae so we can compare with the next element that is j equal to i plus 1 so the starting index value will be 1 and the last index value will be 4 that is I will be 3 3 plus 1 4 so J will go from 1 to 4 in this example let us start comparing the element to compare the elements we will use the condition that is a or rfj that is here 25 we will check whether it is lesser than younghui that is 15 if that is true then we will put a or R of this value into minimum value if it is not true then it will not put the value into MV same like that the index number of J also will put in mmike so it will do until the last index here when the iterations get completed it would have searched for minimum value and index for that so it will come out of the loop let us know how it will do in this example so yeah RR of J that is I plus 1 0 plus 1 will become 1 it will have 25 as its value so this 25 and 15 is compared 15 is lesser than 25 so it is this becomes false now J will become 2 15 and 18 both are compared again 15 is lesser so it is false now when J is 3 the value at 3 will be 12 which is lesser than 15 so what happens here ARR FJ that is yaara 3 value 12 will go and story MV and then the index of that value will go to my so J will go to ma that becomes 3 now at index number for 10 nice available so 12 and 10 will get compared so according to here are our FJ that is 10 is lesser than yum V that is 12 when it is true it changes the value to yum V so young V becomes 10 in the Nehemiah becomes 4 when the first pass get over we will have the minimum value of that array element now we can swap the elements having least value and the first element we already know how to swap the values so we will have one more variable called temporary where we will put the ice value so the 15 will go on store in temple now yeah RRR mi so that is 10 will go to the air RFI so then get store in first index now we will have already the value of the first index which was there in temp that will be stored to value at EMI so it becomes 15 so this is the first pass the least element has gone to the first index now is 1 so that value will go to MB that is 25 here now J will be I plus 1 that is 2 a 2 we have 18 18 is lesser than 25 that is true Soyoung we will become 18 and then M maybe comes to next ARR of 3 will be 12 so 2 and is lesser than 18 this is true so young we will become 2 you may become index after all you will be 3 now J will be 4 at 415 is available 15 is not lesser than 12 so it is wrong so when J is equal to 5 it comes out of the loop value at index number 1 and value at index number Creek should get swapped so value at index number 1 will go to 10 and then value at 3 will go to 1 that is 12 and value at M my that is value at 3 will get stored the value of temple so at the end of the second pass these two index get arranged so at the beginning of pass 3 I will be 2 and then ARR fi will be 18 here J will be I plus 1 that is 2 plus 1 will be 3 at 325 is available 25 is not lesser than 18 so it is wrong now Jay will become four at four we have fifty and this 15 is lesser than eighteen it is true so what happens young we becomes 15 my becomes four when J is five it is false it comes out of the loop now it gets swept now I becomes three so young we will be 25 and it will get compared with J that is at four it is 18 it is true and then what happens MV becomes 18 ma becomes four so here are 5 it becomes false it comes out of the loop then we'll get swapped and then when I becomes 4 it is false so it will come out of this loop so by the time all the elements get sorted so after that we will print the sorted array now let us go to the program and just write the codes and execute I will create a class called selection sort class selection sort instead of taking input using Java Ottawa I will take as argument so I go public static all right ring off instead of main I will go salt I will take integer type array int arr let me create the variables in either int young v mi Ling pimp let me how I and J owns so now array comes as argument I will write the far far I is equal to 0 I is dresser them a are a dot length minus 1 I plus plus so I am V is equal to v RR half I then my is equal to I now let me have the next Farlow far J is equal to I plus 1 J is lesser than ya rabb dot length then J plus plus I check the condition if a are of lesser the minimum value then what happens minimum value becomes ARR of J and then minimum index becomes J so now I come out of fog loop I swept so temp is equal to PR R of I and then yeah rap of ie is equal to PR a half ml now ARR half mi is equal to tempo now swapping it over now we will come out of this outer for loop now we can print this out an array so for that we will give a message system dot out dot print line off sorted arrays so I need a for loop far is equal to 0 is lesser then a RR dot length I plus plus system dot out dot print off I will go ARR half I then plus some space here take notice so let me compile this no syntax error so now I will give the array inside the flower brackets now I will give 7 198 2365 12 minus 34 so array length ultimately it will take how much ever we you okay so we can see here minus 34 1 7 12 only 365 98 so it is sorter actually the program is very simple in elaborated way I have explained you how it works now let us know the difference between bubbles art and selections are in bubbles at adjacent elements are swept but here largest are smallest so whichever order we required according to that elements are swept then bubbles are swapping happens in inner loop but in selections art we have seen that swapping happens in the outer loop so it is slower selection serratus faster comparing to the bubbles are bubbles art is not so efficient assertions art is more efficient than the bubbles art students I hope this was very helpful to you to learn selections art keep watching my videos thank you students