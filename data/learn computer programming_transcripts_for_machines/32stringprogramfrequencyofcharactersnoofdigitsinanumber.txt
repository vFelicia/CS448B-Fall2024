welcome back students today we are going to discuss about two more programs where we use string functions the first one is to print number of digits present before and after the decimal point of a double type number the next one is finding frequency of a character in a string first I will explain the idea of find the digits before and after decimal point of a number so here the number is given as double type for example I have three hundred and forty five point six seven two one so here the output should be the number of digits available before the decimal point so that is three here and then after the decimal point that is for this example for this we take a double type number and then what we do is convert into a string type we already learnt about wrapper class using wrapper class we will convert this double type into string type so if we write this string function this double type number will get converted into string type now we can easily find how many characters are there before this decimal point using the index well and also we can find the number of characters after this decimal point this number I will take it as an example number one so here we have the index for this string now say number of digits before decimal point after decimal point index always start from 0 so 0 1 to 2 will be the index number of once placed so later that you will get a dot that is a decimal point as it is starting from zero if we take the index of this point that is dot then we will have the number of digits before the decimal point so we can extract the index of dot there but if we want to know the number of digits after this decimal point then what we can do total number of digits present here digits present before the decimal point otherwise we can do last index index of point instead of this we say length minus one index of point so that we can get the result so that is 8 minus 1 that is the 7 is the last index here then 7 minus index of this dot is 3 so 7 minus 3 becomes 4 see one two three four digits are there so here in this first example I have index of dot is three so three characters are three digits are present before the decimal point and for number of digits after the decimal point we take the total length of this that is 8 minus 1 is the last index that is 7 minus the index of this dot that is 3 so we get 4 see there there are 4 decimal places let us check with another example here I have another number so index of this dot is 5 so 1 2 3 4 5 numbers are present there before the decimal point and then here there are 3 digits after the point so what we do the total length of this is 9 minus 1 is the last index we get 9 minus 1 that is 8 minus index of dot is 5 so we get 3 as answer so this is the logic of extracting the number of digits present before and after the decimal point this is an good example program how to convert from double type to a string type let us go to the program now I will have double type input double D is equal to double dot parse double of BR dot treat line up as we are having I wa dot star here we will have throws ioexception so whatever we have taken the number as d we will convert it into string so we will give string let us have yes is equal to the wrapper class double dot to string of that B which we have used to store the value of digits before the decimal point I will have integer variable called B in B that is before yes dot index of the character dot to store after the decimal point I have int a is equal to last index we are arriving by one lesser than the length so yes dot length of minus 1 minus B let us print both the results so before I have B plus digits every single so digit I put s in the black digits before the decimal point compile this I give some number so three digits before the decimal point four digits after the decimal point let us do the next program that is counting the occurrence of character in a string that means how many time a particular character has appeared in the given string I copy the course from the previous program here program to class name as frequency enter a string so string s is equal to BR dot readline half let us discuss first how we will take the occurrence of each character for example we will take a so we will count how many years are there in this string and then we will count for the next character that is next alphabet B like that we will keep on doing approach that if mixed characters that is upper case and lower case both are given we have to check for both the upper case and lower case so instead of that what we are going to do is we are going to change to uppercase or lowercase and then we will check for the occurrence of the uppercase or lowercase here we will convert into uppercase so s is equal to s dot to upper case off we need an integer variable to count so we will have int count so default value is zero there first let us check only for J for the given string so we need a far loop to go from the beginning of the string to the ending of the string so we write here far in is equal to 0 I is lesser than yes dot length off then I plus plus it will go once from the beginning to the end of the string here we will check just only for the first alphabet a if yes dot character at I is equal to equal to a if this is true we are going to increase the count by one so count plus plus let us print the result of this count ow yeah plus count close main attack across the dress compare this this is counting character way see that it is converted into uppercase and then it is counting here we have done only for checking character a like this if we want to check all the characters that is from A to Z we need one more follow far so let us take character type character J is equal to that is a when J is lesser than or equal to Z J plus plus so let us open the bracket here then close it here so now we are not only checking for a we are every time checking for character J so we will queue here J so now what it happens it takes a and then it takes whether character at every index is equal to J or not then if it is true then count will get increased by 1 so until the last it will check and then prints the count of not a count off we will put here one more thing J so after a get counter and then when it becomes B it should become 0 then only it will again count for B so what we do here count is equal to 0 so we reset that to 0 me shall be supposed to give 1 plus let us compile this you know stream program see it has counted all the alphabet from A to Z so few alphabets are not available that so the occurrence of that is 0 so if we don't need this to be printer we will give one more condition here when this will get printed means if count is not equal to 0 so let us compile this string handling is challenging so you can see that whichever alphabet is available only occurrence of that has been counted and printer students these many programs what we have see where the example for string handling programs this would have been very helpful to learn the string functions after completing the syllabus I will give more programs so let us start new topic in the next discussion until then thank you students