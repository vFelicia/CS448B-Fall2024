welcome back students in this video tutorial we will learn a program to remove the duplicate elements of an array let us consider an array with some repeated elements to find whether the element is repeated or not we will take the first element and then we will compare with the other elements when it is finding the same value and then it will be replaced with the value at last index here and then the last index will be removed that is the length of the array will be made to decrease by one this will be the first pass we will take the value at index number one again we will compare with all the values of the array if it is finding and then again it will replace and remove the last index otherwise it will come to the third pass that is indexed two will be there so this will be repeated n minus one time where n is the number of elements in the array so this will be the outer for loop so we will have four is equal to zero is lesser than length minus 1 I plus plus at every pass it should compare the element with the other elements we will have next far load that is J is equal to I plus 1 so that is the element next through the I so to compare we will have if condition element at I is equal to element at J here I is 0 element that is 12 so J will be 1 at 115 is available so these are not equal so it will move to the next J's value that is 2 so 12 and 18 will be compared again this is not true now J will be 3 this both are equal now when it is equal we will take the way knew at last index that is 67 here so we will overwrite value at last index to index at where the values repeater so we have to write the core a FJ is equal to EF L minus 1 here L minus 1 is the last index then we will decrease the array length by 1 by giving L minus minus now at second pass I becomes 1 so 15 will be there 15 is compared with the other elements it is not finding the repeated value now I will become 2 so R 18 is available compares with this at index 5 it will find 18 so at last index we have 83 value at index 5 also will become 83 and then this last index will be removed that is the length of the array decreases by 1 so this will be repeated for ice value 3 and ice value 4 also so when I becomes 1 lesser than the last index the total iterations get over by this time all that duplicates might have been removed let us go to the program and execute I will create a class let us have an argument instead of taking the input from the user so I write method prototype so our D so integer array called a half so I declare the array length and initialize L as a dot length when we give as an argument it will be difficult as to compare so I will print the array again here so I will write to write all the elements of an array I give farlow int I is equal to 0 I is lesser than L and then I plus plus so system dot out dot print line now let it be print and then we will give a 1/2 I then plus some space so it will print all the elements in the same line let me give a new line now let us write the outer for loop far int I is equal to 0 I is lesser than the L minus 1 I plus plus power J is equal to I plus 1s in the loop so that is J is lesser than L then J plus plus so now we will compare it if J of I is equal to equal to a of J then we will replace a of J will be a of last index value then we will decrease the array length that is l minus minus we supposed to you int here so now we will come out of both the far loop we will print the new array so let us intimate as new array without reputation so we will write Farlow int I is equal to 0 is lesser than L I plus plus so system dot out dot print off a of I plus cap so let us compile this no syntax error we will run this so we are giving s argument here 1 2 3 and then I repeat to now 7 9 12 let me repeat again some other element 765 32 okay so given arrays they're already now new array without repetition see there this two is removed so that thirtytwo has put it into that place seven nine twelve is there so seven is repeated so 65 is protecting that place if you have string type array then instead of giving this equal to equal to you already know we can have equals ignore case of so dot equals ignore case of then here we will have string type so here you can give equal to equal to true or else without true also will be working that means it will take it as true when it is not equal to you can you just not let us compile this no syntax error so when I give argument here I should give each element with double quotation so I write here keyboard Mose for CPU again I give four so let us Q okay so you can see that the second time phone has disappeared so it is working well I hope you learnt well keep watching my videos thank you students