[Laughter] hello everyone welcome back today we are going to start learning about dictionaries in Python let us see how to initialize a dictionary dictionaries come under collections but it is a special type I will tell how first let us consider a list I have e ID meaning employees ID in a list I'm having here 2 3 4 5 6 5 4 7 87 4 5 okay here these are the elements that means values these values are referenced by the index number which by default starts by zero and then it keeps continuing the index number or the reference is not seen by us it is automatically given by the Python language when we come to the dictionary instead of this square bracket we have the flow bracket and the references index numbers are not there instead of that the creator gives the reference that is called key now I give here a name of a employee Rahim and then the key that is the reference and the value these are bifurcated using the colon now this together becomes an item now the second item will be having the reference given by the Creator which I give here as murali similar way I have the third item here giving Al so now this is a dictionary each item that is key and value pair is bated using the comma Now execute this so now if we want to see what is in Eid we will be getting this dictionary we can create the empty dictionary mentioning one the flower bracket without any item in it for example I have rcore n meaning RO number is equal to it is empty diction accessing the value if I want to access the value I can mention the name of the dictionary e ID in the square bracket as we used to give in the list the index number here we will give the key that is for example I give murali so now I will get the value which is mural's value that is 6547 in case we give which is not having the reference Eid it will be giving you the error ABC changing the value of an item and adding a new item now let us learn first to insert a new item see here rore n is empty one let me have one item there for that I will be giving rcore n inside the square bracket I will give the new key what I wanted to add for example Samir and then I give equal to 19 so now this item is added that means Samir as a key and 19 as a value let us check rcore n similar way we can add n number of items the items will be added at the end let me add one more mad is equal to 15 so now you can see that it is added now in case I need to change the value by mistake I put 15 here I want that to be 13 I will be giving rcore n the same key I will be giving and then equal to the new value so rcore and it is updating the value one thing you wanted to note down here the keys that means the references cannot be duplicated so it is unique one more thing you wanted to remember is the keys must be immutable type see there I have given the names in the code which is a string immutable type a number I can give so let me add new one rcore n 18 is equal to see there 18 is an integer that is also immutable type RAV so this is also accepted right so Keys cannot have mutable data type there it means in Python there are two data types which are mutable which is list and the dictionary itself yeah dictionaries are mutable as we are changing the value we could see that we changed 15 to 13 so we change the value of a dictionary so that comes under mutable in Python only dictionary and list are mutable all other data types are immutable we know let me create one more dictionary I have sales is equal to a dictionary having Monday sales in different branches see there I have given three different values but we cannot give like that but we can give this as a list so values can be any type it is even changeable that is mutable so this get accepted so now if I want to add an item here for Tuesday sales of Tue is equal to I give here as a list different values so again if you see there there are two different typ items I said keys are immutable right let me give one list there and check so this is mentioning the key here I give the value as a list simply I give 1 comma 2 as a list there is equal to let me give just W so the list cannot be accepted there unhashable type right one more thing I wanted to tell you is until python 3.6 version dictionaries were unordered collection but 3.7 and above it is ordered collection let me summarize what we learned now keep watching my channel keep learning and keep sharing let us meet in the next class thank thank you