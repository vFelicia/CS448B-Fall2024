welcome back students today we are going to see while look using while loop we are going to do few programs finding the sama digits of a given number finding whether the given number is amstrong number or not finding whether the given number is palindrome are not so these are the general programs before going to the program let us learn how we are going to extract the digits of a given number for example let us take n is equal to 6 7 8 9 so we have to extract each visit to get the total of all the digits that is 9 8 7 & 6 when we divide a number by 10 and take the remainder the last digit that is once remains us the remainder so the condition given here is when n is greater than 0 now n is 6 7 8 9 so it is true now we have a variable called LD that is last digit which is equal to n more 10 so when it is dividing by 10 and getting the remainder 9 remains as LD the next step we need to extract 8 so we have to remove this mine so that is once that can be done dividing by 10 so when we divide and get the quotient 6 7 8 remains and this is the first round and the second done again it is going to do from the beginning because already it is youngness 6 7 8 9 then more 10 will become 8 the next time again we are going to divide by 10 and get it to become 67 Soyoung is 67 again more it becomes 7 then Yong is going to be 6 when we divide by 10 and the last round last digit will be six and then when we divide this by 10 zero is the quotient then the condition doesn't satisfy it will come out of the loop so this is how we are going to extract each digit from a given number let us go to the program new class a special number 8 let us take parameterised input so we will have name called input itself integer number Sen let us have D that is in D or capital W and then some we have to initialize as 0 here then we will go to condition while n is greater than 0 we will have a block of course so now first time we are going to extract the last digit by saying B is equal to n more then then the last digit is going to be added with the sum to find the sum of that number so sum is equal to sum plus D so next we have to remove the last digit for that we have n is equal to n divided by 10 so ultimately once you get removed and then new n becomes after removing the last digit so it will continue up to n is greater than 0 when it is false it will come out of the loop and then we will here print the sum of all the digits system dot out dot print line of sum of all the digits present in given number is equal to plus some so let us compile this no syntax error let us run this program let us give fifteen so sum of all the digits present in this given number is 6 so 1 plus 5 is 6 let us try with the bigger number some of all the digits present in the given number is 31 I already told you while loop can be used when we doesn't know how many times we have to run the loop so we doesn't know here in this program how many times it is going to be executed if we give two digit number two times five is it number means five times it will get executed so we have given only the condition n is greater than zero number of times ultimately it decides until n is going to be greater than zero this is the benefit of while loop let us see how to find whether the given number is an strong number or not let us first know what is Armstrong number when a number is equal to the sum of nth power of digits in that number the number is called Armstrong number for example if we take a number two three four five then there are four digits available so 2 to the power 4 plus 3 to the power 4 plus 4 to the power 4 plus 5 to the power fourth we calculate the sum of this if the sum of this is equal to the given number that is 2 3 4 5 then it is called Armstrong number generally we will have threedigit amstrong numbers for example 371 so there are 3 digits that is 3 to the power 3 plus 7 to the power 3 plus 1 to the power 3 so this is 27 7 to the power is 343 plus 1 so the sum of this becomes 371 which is again equal to the given number so it is amstrong number so let us do a program now here instead of finding the sum of each digit we are going to take cube of each digit so that is d into D into D so we need to argue the condition to find whether the given number is equal to the sum of this number but originally the number doesn't remain as we have given because here it is manipulated again and again by dividing by 10 so let us put this into a variable called X X is equal to M so what we do we preserve the copy of the given number in X so we will not lose the number given by the user now we will have the condition here if some is equal to equal to X then we will say given number is Armstrong else not a I'm strong number so here we have to declare in X then everything is fine compile this so let us give the I'm strong about that is 371 itself or even 370 also am strong number given number is I'm strangled and then 153 also I'm strong number let us have 153 yes given number is I am strong number let us knew other than the strong number just for verification 475 so given number is not a I am strong number now let us do a program to find whether given number is palindrome are not apparent row number is a number when it has been reversed also use the same number so let us learn how it works before going to your program it will be easy to do a program then so let us have n is equal to 1 2 3 4 and then when we reverse that the new number should be there for that we initialize RS 0 the condition while n is greater than 0 we have to take the remainder so we are doing n mod 10 then we get 4 as the number here we will have our into 10 to make that remainder to the higher place value here R is 0 so 0 plus D it becomes for the next round n is equal to n by 10 we are going to remove this 4 by dividing that by 10 we will have 1 2 3 now the next round D is equal to 3 after getting the remainder now R is 4 already here so what happens 4 into 10 so the ones place moves to the next higher place that is tends by multiplying by ten so it becomes 40 plus the remainder here that is B is 343 it becomes and then again we are going to divide this one 23 divided by 10 and then we will get to a less the answer the third round D becomes 2 and then 43 we already have into 10 so 43 becomes 4 30 and then this last digit is going to be added with this does become 432 now n is equal to 1 now the last 3 days it is 1 we are going to multiply this R into 10 that is 432 into 10 plus 1 so it becomes 4 3 2 1 then when we divide that one by 10 it becomes 0 which is false then it comes out of the loop so this is the working of reversing a number so we will compare this with the original number given by the user so if both are same then it is said to be a palindrome number so let us go to the program so we will modify this program instead of sum we will have R then while n is greater than 0 D is equal to n mod 10 then we are not having the sum instead of that we are going to have R is equal to R into 10 plus D then young is equal to n mod 10 so we have already stored the number in variable called X so we are going to check whether R is equal to equal to X R naught then if it is true then it is going to be pairing wrong number it is palindrome yes it is not a palindrome let us run this program what is q1 for one given number is palindrome let us give some other number this is not a palindrome number so it should say yes this matter parent remember students I hope you clearly understood how to use while loop and then do these programs