With timestamps:

00:01 - [Music]
00:10 - hello Arduino people welcome back to the
00:14 - Arduino basics tutorial series in this
00:16 - lesson lesson number nine we're gonna be
00:18 - tackling a color sensor specifically
00:20 - when you're looking at this color sensor
00:22 - here they say is the TCS 3200 color
00:28 - sensor comes with four bright white LEDs
00:31 - on it and then the little sensor is in
00:33 - the middle the wiring for this one's a
00:34 - little bit more complicated in some of
00:36 - the others because we have to use the
00:37 - sensor off of the breadboard just
00:39 - because the way the pinout works and the
00:41 - way we try to connect it to the
00:42 - breadboard gets really messy so it
00:44 - actually works better for us to just
00:45 - connect it loose off the breadboard and
00:48 - then we'll use it accordingly let's
00:49 - start with the wiring and then we'll
00:51 - explain from there the first part of the
00:52 - wiring diagram is one we're already
00:54 - familiar with which is wiring up an RGB
00:56 - LED to our Arduino board with a 220 ohm
00:59 - resistor on the ground wire so you'll
01:01 - see pin 9 10 and 11 are running for the
01:04 - blue green and red pins of the RGB LED
01:08 - the long leg of the RGB LED is running
01:10 - through a 220 ohm resistor with a ground
01:13 - wire to connect the ground channel on my
01:15 - breadboard so that is wiring that we're
01:16 - all ready for so step one would be
01:18 - getting that rig to wire up your color
01:20 - sensor you're gonna want a
01:21 - female-to-male wire to run off of each
01:23 - of the pins of the color sensor well go
01:26 - through the pin out and how towhat
01:27 - connect this to the breadboard or to the
01:28 - Arduino let's start with the pins that
01:30 - are going to connect directly to the
01:31 - Arduino you can see pins 4 7 & 8 are all
01:35 - going to be connecting to our pin up pin
01:37 - number 4 is actually gonna go to the out
01:39 - pin and these are labeled exactly as
01:42 - they're written on this diagram so
01:43 - you'll see them on your thing as out so
01:46 - the out pin on our color sensor is gonna
01:48 - run to pin 4 on our Arduino s2 is gonna
01:51 - run down to pin number 7 and the s3 is
01:54 - gonna run to pin number 8 those are the
01:56 - only three pins that are gonna connect
01:58 - directly to our Arduino board the rest
02:00 - of the pins on the color sensor are
02:01 - actually going to connect to our
02:02 - breadboard mainly to voltage around so
02:04 - VDD is going to come connect to the
02:06 - voltage row on the other side of it zero
02:10 - is going to connect to ground s1 is
02:12 - going to connect to volt and then
02:14 - round is going to connect to ground and
02:16 - this oh we pin we are leaving
02:17 - unconnected so this pin is not going to
02:20 - get connected so all in all there should
02:22 - be seven wires coming out of your color
02:23 - sensor three of them are going directly
02:25 - into our Dino pins four seven and eight
02:27 - the other four are going into voltage or
02:29 - ground wires according to this pin now
02:31 - you're just gonna have your sensor loose
02:33 - it's not gonna be directly plugged into
02:34 - your breadboard so you'll have to sit it
02:36 - down somewhere where the wires allow
02:37 - beside your breadboard or beside your
02:39 - Arduino okay that's it for the wiring
02:41 - take a minute make sure you've got it
02:42 - all set up properly according to the pin
02:44 - out and then we'll move along and look
02:46 - at the code so here we are inside of a
02:48 - new sketch for lesson number nine we're
02:50 - gonna be working with a color sensor
02:51 - this is going to be the most code that
02:53 - we've written so far because there's a
02:54 - lot going on with reading values
02:56 - analyzing those values and then using
02:58 - those values to display a color on an
03:00 - RGB LED so stay with me and be sure to
03:02 - pause the video so you have time to
03:04 - properly type up the code on your own to
03:06 - start we're gonna declare a whole bunch
03:07 - of variables that we're gonna need to
03:09 - use throughout our program so let's go
03:11 - through all the variables we've got red
03:13 - pin green pin and blue pin pin nine ten
03:16 - and eleven for our RGB LED s27 s38 and
03:21 - el pin 4 these are the ones that are
03:23 - connected directly to our color sensor
03:25 - we then have three integers we'll use
03:26 - later for calculating the red green and
03:28 - blue color strengths that we're gonna
03:30 - read in from the color sensor and then
03:31 - finally an unsigned integer for pulse
03:34 - width remember integers are positive and
03:36 - negative unsigned integers are not going
03:38 - to be positive or negative they're gonna
03:39 - be unsigned which just means that you
03:41 - get a wider range of values and we're
03:42 - gonna use pulse width as well to do with
03:44 - the input from the sensor jumping into
03:46 - our setup function we'll start by
03:48 - setting up our serial monitor
03:50 - now that our serial monitor is set up
03:51 - let's go ahead and set up our pins as
03:53 - either inputs or outputs so our RGB pins
03:57 - are all going to be outputs just like
03:58 - they were in previous programs for our
04:00 - color sensor pins we plugged in three
04:02 - wires from the color sensor two of them
04:04 - are going to be outputs at seven and
04:06 - eight and one of them is going to be an
04:07 - input that is full pin mode for s2 is
04:11 - output pin mode s3 is output and pin
04:14 - mode for out pin is input so this is
04:17 - going to allow us to have the pins
04:18 - connected to the color sensor read
04:19 - properly as put or input values so
04:22 - there's all the tabbing in a setup
04:23 - function now we're ready to jump down
04:25 - into the loop
04:26 - so the way the color sensor works is
04:28 - that we send values of high or low two
04:31 - pins s2 and s3 and depending on what we
04:34 - send dictates whether it's sending us
04:37 - the red green or blue values that it is
04:40 - sensing using the sensor if we send a
04:44 - low to both s2 and s3 then we are
04:47 - telling our color sensor that we want to
04:49 - read red color from the sensor so we do
04:53 - a digital right to send a low signal
04:55 - over pins s2 and s3 this is telling the
04:58 - color sensor please give me the red
04:59 - value that you're reading with your
05:01 - sensor we then use the pulse width
05:02 - variable to store the pulse that we read
05:06 - in through that pin number four okay
05:09 - using a low signal so this is saying
05:13 - check that input pin of four for the
05:16 - signal store it in pulse width now it's
05:18 - going to give us a range from zero to
05:21 - 2560 give or take a little bit so we're
05:24 - gonna need to do some math to manipulate
05:26 - that range in our favor okay so to do
05:31 - some of that math let's have a look at
05:33 - what's involved we're gonna use that our
05:35 - color strength variable that we set up
05:36 - at the beginning because remember we're
05:38 - dealing with red right now we start by
05:39 - doing this divisor pulse width divided
05:41 - by ten and then we subtract one so we're
05:44 - taking this number from 2560 into that
05:46 - range of zero to 255 which is the range
05:49 - that we need for color values okay now
05:52 - we can actually increase that value 10
05:55 - okay in order to increase the
05:56 - sensitivity of the reading from the
05:58 - sensor so this number you may need to
06:00 - play with a little bit depending on the
06:01 - sensor that you're dealing with and
06:02 - we'll explain that a little later when
06:03 - we look at the output then I do a 255
06:06 - minus the color strength okay and this
06:08 - allows me to now have a color between 0
06:10 - and 255 so a small pulse width is going
06:13 - to be a strong color map okay and a
06:15 - large pulse width it's gonna be a poor
06:18 - color match and that's what we want okay
06:20 - so this is gonna help us narrow this
06:21 - down into an actual color value from a
06:24 - pulse width so we're now going to repeat
06:26 - this code twice once for green and once
06:28 - for blue but we're going to send
06:29 - slightly different pulses to the s2 and
06:33 - s3 pings so for green we need to send a
06:36 - high to both s 2 and s
06:38 - three so we do that and then we do all
06:41 - the same values now you'll see that my
06:42 - division here is by fourteen and not by
06:45 - ten this was due to the sensitivity I
06:47 - was having with my color sensor when we
06:49 - go to look at the output later you'll
06:51 - see you might need to adjust that
06:52 - slightly in order to make sure that
06:54 - you're getting the readings that you
06:55 - want from your color sensor I should
06:57 - mention at this point that there are
06:59 - more advanced ways to fine-tune the
07:01 - actual values of your color sensor feel
07:03 - free to do some digging online and you
07:05 - can get into that more in depth but
07:06 - because of the sake that this is an
07:07 - introductory tutorial series we thought
07:10 - it was best not to go into those
07:11 - technical details well now do this one
07:14 - final time for blue with blue we're
07:17 - gonna send a low to s two and a height s
07:19 - three you'll see my divisor in this case
07:22 - is 11 again all dependent on sensitivity
07:25 - I'll show you later how we can play with
07:27 - those values if we need to so at this
07:29 - point we have a red green and a blue
07:31 - reading from the color sensor and all
07:33 - we're doing in this lesson is we're
07:34 - trying to decide which color is most
07:36 - prominent of the three and we're going
07:37 - to use that color to display a color on
07:40 - the RGB LED but before we get into the
07:43 - led let's remember that the serial
07:44 - monitor can also be very helpful in
07:46 - debugging and understanding our code so
07:49 - let's do a little bit of a print out to
07:50 - the serial monitor so that we can
07:52 - analyze things as we're testing so what
07:56 - you'll see I printed out is the our
07:58 - color strength value a space the green
08:01 - color strength of space the blue color
08:02 - strength and then a space with a newline
08:04 - character and then I wait a quarter of a
08:08 - second okay and this is just going to
08:10 - allow me to constantly see the values
08:11 - that the color sensor is reading so that
08:14 - if I wanted to troubleshoot if I'm
08:16 - having issues with sensitivity I can see
08:18 - what's coming up on my color sensor in
08:20 - our final step we need to decide which
08:22 - color is the most prominent so which
08:24 - color is the largest value and then
08:27 - based on that we need to set the color
08:29 - on our RGB LED so we're going to do this
08:31 - with a series of if statements to check
08:33 - which value is actually the biggest so
08:37 - the first one I put in if red color
08:39 - strength is greater than B color
08:41 - strength and red is greater than green
08:44 - and that means the red is the biggest of
08:47 - the three colors therefore we're going
08:49 - to set red to 255 and set green
08:52 - to zero this just sets them up to write
08:55 - to the LED later on in the code we're
08:58 - now going to do a similar statement for
09:00 - blue and for green so we have an
09:05 - else--if for green is bigger than blue
09:07 - and green is bigger than red then set
09:09 - the green value and zero out the other
09:11 - two if blue is bigger than green and
09:14 - blue is bigger than red then set blue
09:17 - and zero out red and green so our red
09:20 - green and blue values now should either
09:22 - be all red all green or all blue so now
09:26 - we can write that value to the LED now
09:28 - in this case I'm using all 255 so it
09:30 - wouldn't matter if I use digital or
09:32 - analog rights but just for the sake that
09:34 - I might not want to go full brightness I
09:35 - think it's best for me to use analog
09:37 - rights so here you can see analog right
09:40 - the red pin the red color value green
09:42 - pin the green color strength and blue
09:44 - pin the blue colour strength and this
09:46 - will write those values out to our RGB
09:48 - LED now that we've decided which ones
09:51 - bigger from the color sensor we can set
09:53 - the values on the actual LED so coming
09:56 - into this serial monitor just to show
09:58 - you a little bit more my RGB is
09:59 - currently turned on to red and if you
10:01 - look my red value is clearly the highest
10:04 - that's showing up in my serial monitor
10:05 - over here if I put the blue in front
10:08 - you'll see that the blue value on the
10:10 - end is now coming in as the highest
10:12 - reading so what I recommend when you're
10:14 - setting those denominators for devising
10:16 - have a nice clear red green and blue
10:18 - object that you want to stick in front
10:20 - of your color sensor and then make sure
10:22 - that the values are working out so that
10:24 - the value that you want is two coming in
10:26 - higher and if that means you have to
10:28 - adjust the denominator a little bit
10:29 - that's okay so here's my green you can
10:32 - see that now my greens coming in around
10:34 - 160 my right and my blue are both coming
10:36 - in around 100 so Green is clearly the
10:38 - dominant color so it turns my green LED
10:41 - on so that's how you can set up the
10:44 - denominator is a little bit and it just
10:46 - might take a little bit of practice to
10:47 - fine-tune it like I said you can get
10:50 - more technical with how you find doing
10:51 - these color sensors but this seemed like
10:53 - a good introduction for somebody who
10:55 - wasn't quite ready for all the technical
10:56 - details involved in trying to set up
10:59 - your sensor to be properly calibrated
11:05 - great job with the main lesson in Lesson
11:07 - number nine this was a tricky one right
11:09 - from the start so just getting to the
11:11 - point where you got the bass lesson
11:12 - working is a huge success awesome if you
11:14 - want an extension on this let's go with
11:16 - something a little bit more
11:17 - straightforward how about you add yellow
11:19 - as a colour that it can recognize and
11:21 - write to the RGB LED now you may need to
11:23 - do a little bit of googling about how to
11:24 - read in that yellow value or how you
11:26 - might want to set that up that's okay if
11:28 - you want to do that just make sure you
11:29 - understand code that you find and don't
11:32 - just copy and paste it in blindly good
11:33 - luck all right so this lesson was pretty
11:36 - tricky and the extension added a whole
11:37 - other level but if you really want a
11:39 - challenge for this you can do a bit of
11:41 - research online and the next step to
11:43 - this would be instead of just looking
11:45 - for the dominant color to actually get
11:47 - the hue of a color and write that to the
11:49 - RGB LED so for example if you had a more
11:52 - pinkish color coming in from the color
11:54 - sensor so looking at all three color
11:56 - values so looking at all three color
11:58 - values the red the green and the blue
11:59 - together and seeing what colors they
12:01 - make up this might take a little bit
12:03 - more work in calibrating your sensor
12:04 - properly but it is possible to use
12:06 - analog rights to your RGB LED reading in
12:09 - the inputs properly from the sensor to
12:12 - actually have it match as close as
12:13 - possible the actual hue of the color
12:16 - that it's reading in front of it you'll
12:18 - want to use lots of color cards of
12:20 - different colors to put in front of the
12:22 - sensor to help you calibrate this to get
12:23 - it working successfully best of luck as
12:25 - you work on the challenge and I'll see
12:27 - you back here in Lesson number 10 thank
12:29 - you so much for watching feel free to
12:30 - like the video and subscribe to our
12:32 - channel to stay up to date as we
12:33 - continue the tutorial series
12:35 - [Music]
12:40 - [Music]

Cleaned transcript:

hello Arduino people welcome back to the Arduino basics tutorial series in this lesson lesson number nine we're gonna be tackling a color sensor specifically when you're looking at this color sensor here they say is the TCS 3200 color sensor comes with four bright white LEDs on it and then the little sensor is in the middle the wiring for this one's a little bit more complicated in some of the others because we have to use the sensor off of the breadboard just because the way the pinout works and the way we try to connect it to the breadboard gets really messy so it actually works better for us to just connect it loose off the breadboard and then we'll use it accordingly let's start with the wiring and then we'll explain from there the first part of the wiring diagram is one we're already familiar with which is wiring up an RGB LED to our Arduino board with a 220 ohm resistor on the ground wire so you'll see pin 9 10 and 11 are running for the blue green and red pins of the RGB LED the long leg of the RGB LED is running through a 220 ohm resistor with a ground wire to connect the ground channel on my breadboard so that is wiring that we're all ready for so step one would be getting that rig to wire up your color sensor you're gonna want a femaletomale wire to run off of each of the pins of the color sensor well go through the pin out and how towhat connect this to the breadboard or to the Arduino let's start with the pins that are going to connect directly to the Arduino you can see pins 4 7 & 8 are all going to be connecting to our pin up pin number 4 is actually gonna go to the out pin and these are labeled exactly as they're written on this diagram so you'll see them on your thing as out so the out pin on our color sensor is gonna run to pin 4 on our Arduino s2 is gonna run down to pin number 7 and the s3 is gonna run to pin number 8 those are the only three pins that are gonna connect directly to our Arduino board the rest of the pins on the color sensor are actually going to connect to our breadboard mainly to voltage around so VDD is going to come connect to the voltage row on the other side of it zero is going to connect to ground s1 is going to connect to volt and then round is going to connect to ground and this oh we pin we are leaving unconnected so this pin is not going to get connected so all in all there should be seven wires coming out of your color sensor three of them are going directly into our Dino pins four seven and eight the other four are going into voltage or ground wires according to this pin now you're just gonna have your sensor loose it's not gonna be directly plugged into your breadboard so you'll have to sit it down somewhere where the wires allow beside your breadboard or beside your Arduino okay that's it for the wiring take a minute make sure you've got it all set up properly according to the pin out and then we'll move along and look at the code so here we are inside of a new sketch for lesson number nine we're gonna be working with a color sensor this is going to be the most code that we've written so far because there's a lot going on with reading values analyzing those values and then using those values to display a color on an RGB LED so stay with me and be sure to pause the video so you have time to properly type up the code on your own to start we're gonna declare a whole bunch of variables that we're gonna need to use throughout our program so let's go through all the variables we've got red pin green pin and blue pin pin nine ten and eleven for our RGB LED s27 s38 and el pin 4 these are the ones that are connected directly to our color sensor we then have three integers we'll use later for calculating the red green and blue color strengths that we're gonna read in from the color sensor and then finally an unsigned integer for pulse width remember integers are positive and negative unsigned integers are not going to be positive or negative they're gonna be unsigned which just means that you get a wider range of values and we're gonna use pulse width as well to do with the input from the sensor jumping into our setup function we'll start by setting up our serial monitor now that our serial monitor is set up let's go ahead and set up our pins as either inputs or outputs so our RGB pins are all going to be outputs just like they were in previous programs for our color sensor pins we plugged in three wires from the color sensor two of them are going to be outputs at seven and eight and one of them is going to be an input that is full pin mode for s2 is output pin mode s3 is output and pin mode for out pin is input so this is going to allow us to have the pins connected to the color sensor read properly as put or input values so there's all the tabbing in a setup function now we're ready to jump down into the loop so the way the color sensor works is that we send values of high or low two pins s2 and s3 and depending on what we send dictates whether it's sending us the red green or blue values that it is sensing using the sensor if we send a low to both s2 and s3 then we are telling our color sensor that we want to read red color from the sensor so we do a digital right to send a low signal over pins s2 and s3 this is telling the color sensor please give me the red value that you're reading with your sensor we then use the pulse width variable to store the pulse that we read in through that pin number four okay using a low signal so this is saying check that input pin of four for the signal store it in pulse width now it's going to give us a range from zero to 2560 give or take a little bit so we're gonna need to do some math to manipulate that range in our favor okay so to do some of that math let's have a look at what's involved we're gonna use that our color strength variable that we set up at the beginning because remember we're dealing with red right now we start by doing this divisor pulse width divided by ten and then we subtract one so we're taking this number from 2560 into that range of zero to 255 which is the range that we need for color values okay now we can actually increase that value 10 okay in order to increase the sensitivity of the reading from the sensor so this number you may need to play with a little bit depending on the sensor that you're dealing with and we'll explain that a little later when we look at the output then I do a 255 minus the color strength okay and this allows me to now have a color between 0 and 255 so a small pulse width is going to be a strong color map okay and a large pulse width it's gonna be a poor color match and that's what we want okay so this is gonna help us narrow this down into an actual color value from a pulse width so we're now going to repeat this code twice once for green and once for blue but we're going to send slightly different pulses to the s2 and s3 pings so for green we need to send a high to both s 2 and s three so we do that and then we do all the same values now you'll see that my division here is by fourteen and not by ten this was due to the sensitivity I was having with my color sensor when we go to look at the output later you'll see you might need to adjust that slightly in order to make sure that you're getting the readings that you want from your color sensor I should mention at this point that there are more advanced ways to finetune the actual values of your color sensor feel free to do some digging online and you can get into that more in depth but because of the sake that this is an introductory tutorial series we thought it was best not to go into those technical details well now do this one final time for blue with blue we're gonna send a low to s two and a height s three you'll see my divisor in this case is 11 again all dependent on sensitivity I'll show you later how we can play with those values if we need to so at this point we have a red green and a blue reading from the color sensor and all we're doing in this lesson is we're trying to decide which color is most prominent of the three and we're going to use that color to display a color on the RGB LED but before we get into the led let's remember that the serial monitor can also be very helpful in debugging and understanding our code so let's do a little bit of a print out to the serial monitor so that we can analyze things as we're testing so what you'll see I printed out is the our color strength value a space the green color strength of space the blue color strength and then a space with a newline character and then I wait a quarter of a second okay and this is just going to allow me to constantly see the values that the color sensor is reading so that if I wanted to troubleshoot if I'm having issues with sensitivity I can see what's coming up on my color sensor in our final step we need to decide which color is the most prominent so which color is the largest value and then based on that we need to set the color on our RGB LED so we're going to do this with a series of if statements to check which value is actually the biggest so the first one I put in if red color strength is greater than B color strength and red is greater than green and that means the red is the biggest of the three colors therefore we're going to set red to 255 and set green to zero this just sets them up to write to the LED later on in the code we're now going to do a similar statement for blue and for green so we have an elseif for green is bigger than blue and green is bigger than red then set the green value and zero out the other two if blue is bigger than green and blue is bigger than red then set blue and zero out red and green so our red green and blue values now should either be all red all green or all blue so now we can write that value to the LED now in this case I'm using all 255 so it wouldn't matter if I use digital or analog rights but just for the sake that I might not want to go full brightness I think it's best for me to use analog rights so here you can see analog right the red pin the red color value green pin the green color strength and blue pin the blue colour strength and this will write those values out to our RGB LED now that we've decided which ones bigger from the color sensor we can set the values on the actual LED so coming into this serial monitor just to show you a little bit more my RGB is currently turned on to red and if you look my red value is clearly the highest that's showing up in my serial monitor over here if I put the blue in front you'll see that the blue value on the end is now coming in as the highest reading so what I recommend when you're setting those denominators for devising have a nice clear red green and blue object that you want to stick in front of your color sensor and then make sure that the values are working out so that the value that you want is two coming in higher and if that means you have to adjust the denominator a little bit that's okay so here's my green you can see that now my greens coming in around 160 my right and my blue are both coming in around 100 so Green is clearly the dominant color so it turns my green LED on so that's how you can set up the denominator is a little bit and it just might take a little bit of practice to finetune it like I said you can get more technical with how you find doing these color sensors but this seemed like a good introduction for somebody who wasn't quite ready for all the technical details involved in trying to set up your sensor to be properly calibrated great job with the main lesson in Lesson number nine this was a tricky one right from the start so just getting to the point where you got the bass lesson working is a huge success awesome if you want an extension on this let's go with something a little bit more straightforward how about you add yellow as a colour that it can recognize and write to the RGB LED now you may need to do a little bit of googling about how to read in that yellow value or how you might want to set that up that's okay if you want to do that just make sure you understand code that you find and don't just copy and paste it in blindly good luck all right so this lesson was pretty tricky and the extension added a whole other level but if you really want a challenge for this you can do a bit of research online and the next step to this would be instead of just looking for the dominant color to actually get the hue of a color and write that to the RGB LED so for example if you had a more pinkish color coming in from the color sensor so looking at all three color values so looking at all three color values the red the green and the blue together and seeing what colors they make up this might take a little bit more work in calibrating your sensor properly but it is possible to use analog rights to your RGB LED reading in the inputs properly from the sensor to actually have it match as close as possible the actual hue of the color that it's reading in front of it you'll want to use lots of color cards of different colors to put in front of the sensor to help you calibrate this to get it working successfully best of luck as you work on the challenge and I'll see you back here in Lesson number 10 thank you so much for watching feel free to like the video and subscribe to our channel to stay up to date as we continue the tutorial series
