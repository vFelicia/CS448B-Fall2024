With timestamps:

00:03 - welcome back humans
00:04 - this is let's learn python i'm adam
00:07 - we're going to jump into unit two
00:09 - topic number five where we're going to
00:11 - learn about turtle graphics
00:13 - talk a little bit about nested loops
00:15 - make things look a little prettier
00:16 - or at least give us the ability to do
00:18 - something that involves graphics which
00:19 - is kind of neat this early on in coding
00:21 - there's lots of people who teach coding
00:23 - and they do a lot of graphic stuff early
00:24 - on
00:25 - personally i'm kind of a believer of you
00:27 - learn the foundations
00:28 - and we do a lot of that with text and
00:30 - then we bring in graphics when the
00:31 - time's right
00:32 - but hey everyone's got their way and
00:34 - there's no wrong way as long as you're
00:35 - getting in there and you're learning
00:37 - you're doing the right thing before we
00:39 - get into today's stuff we're going to
00:40 - jump back first we're going to look at
00:41 - the challenge from the last lesson
00:43 - so this was the challenge from last time
00:44 - it was all about this kind of user menu
00:46 - this text
00:46 - mine looks like this yours might not but
00:49 - i just wanted to show you a little bit
00:50 - of the code that's going on in the
00:51 - background so
00:52 - if i go to blue pill it gives me that
00:54 - the nice printer that gives me a second
00:56 - choice
00:56 - no i'm not sure brings me back red pill
00:59 - it ends
01:00 - so if we look at the code here i have a
01:02 - string variable
01:03 - inside my while true loop i'm asking for
01:05 - a string variable that i'm getting from
01:06 - the user and there's my prompt you'll
01:08 - notice the use of the special characters
01:09 - i use backslash ends in here
01:11 - i wanted to jump to new lines i wanted
01:12 - to make it look a little nicer would you
01:14 - like the red pill of the blue pill and
01:15 - tell them to enter r
01:16 - b i just use these parentheses to imply
01:18 - it then i'm going to compare their
01:19 - choice
01:20 - did they pick r did they pick b if they
01:22 - picked r
01:23 - the whole thing's done we just print the
01:25 - statement and then we break
01:26 - and that ends the loop that ends the
01:28 - program if they chose the blue pill
01:31 - i give them their print and then i take
01:33 - a new choice you'll notice i used a new
01:34 - variable name i don't want to override
01:36 - this variable that i've already created
01:38 - called choice so i call this one choice
01:40 - two
01:40 - use the input are you sure about your
01:42 - choice if they chose y
01:45 - i say so long and i break if they chose
01:47 - anything other than y then i continue
01:49 - which just resets the while loop
01:51 - and runs it again asking the first
01:52 - prompt to get in order to make it to
01:55 - this
01:55 - else it had to not be r and not be b
01:58 - so if i made it here then it was an
02:00 - invalid choice
02:01 - try again and then i continue which
02:04 - brings me back up and reruns it
02:06 - again so that's the code structure that
02:08 - i use in terms of this if and else and
02:10 - alif and break and continue
02:12 - uh for like a user menu or or a user
02:15 - choice
02:16 - so it should work well for you for any
02:17 - program where you want to have that
02:19 - the kind of looping menu where people
02:21 - can make a choice from them
02:22 - which we're going to do in our unit
02:23 - project as well so i wanted to go over
02:26 - that before we jumped into today's stuff
02:27 - which is
02:28 - turtle graphics so looking at turtle
02:31 - graphics well turtle graphics just
02:32 - sounds like a weird thing to say
02:34 - we're just talking about graphics but
02:36 - it's because there's a
02:37 - library in python called turtle and what
02:40 - we're going to do first is we're going
02:41 - to import it
02:41 - so we're going to import turtle okay
02:44 - lowercase t
02:44 - this is a built-in python library that
02:46 - allows these little graphics windows
02:48 - these little turtles now they can look
02:49 - like turtles or they can look like
02:50 - arrows
02:51 - they look like arrows by default you can
02:53 - make them look like something else
02:55 - we're going to set up a window we do
02:57 - this using a variable name i called mine
02:59 - win
02:59 - you could call it something else if you
03:01 - wanted and this is dot notation we're
03:02 - going to talk more about this deeper in
03:04 - the course but
03:05 - this is accessing the turtle library or
03:07 - the turtle class
03:08 - and from it calling on this function to
03:11 - run
03:12 - so turtle.screen is going to return a
03:14 - window which i'm going to store in my
03:15 - win variable
03:16 - and then tommy is the name that i gave
03:18 - to my turtle you could give yours
03:19 - another name you don't have to give it a
03:21 - real name you could just call it t
03:22 - equals library dot and then the
03:26 - turtle returns a turtle object which i'm
03:29 - storing under the name
03:30 - tommy and then using that name and the
03:33 - dot notation of calling functions
03:35 - tommy dot tommy dot i can call functions
03:39 - on my turtle and there's so many
03:40 - different functions that i can call
03:42 - i'm going to go through a couple basics
03:44 - with you and show you how they look and
03:46 - then we will look at the actual
03:47 - documentation for turtles you can see
03:49 - all the functions that are available so
03:51 - i'm going to do tommy dot pen size
03:53 - 5 give it a nice thick pen size for
03:55 - drawing
03:56 - i'm going to set tommy's color to blue
03:58 - you'll notice it's in quotation marks
04:00 - so tommy dot color and then i'm going to
04:03 - do a for loop so i'm going to do for i
04:04 - in range 4
04:05 - i'm going to move tommy forward by 100
04:07 - pixels
04:08 - pixels remember the tiny little dots
04:10 - that make up our screens
04:12 - and then he's going to turn left 90
04:14 - degrees he's going to repeat that four
04:16 - times
04:16 - so if you can apply he's probably going
04:18 - to draw a square
04:19 - and then i have this window exit on
04:21 - click the exit on click function makes
04:24 - it wait
04:24 - for us to click our mouse on the screen
04:26 - before the graphics window suddenly
04:28 - disappears
04:29 - which is just helpful for looking at our
04:30 - graphics let's run this and we'll see
04:32 - how it looks
04:36 - and there we can see it pops up this
04:38 - turtle window this graphics window
04:40 - and it drew over up over down and then
04:43 - the arrow
04:44 - turned one last time to the left 90
04:46 - degrees and the box was
04:48 - blue so let's mess with our code a
04:50 - little bit so here
04:52 - let's say we want to do a triangle
04:53 - instead so i'm going to change this to
04:56 - 3 i'm going to change my turn
04:59 - to 120 because that will leave a 60
05:01 - degree angle on the inside
05:04 - and i'll make it red so i'm going to
05:06 - save that
05:07 - click in this window it disappears and i
05:10 - run again
05:11 - there's my triangle okay so you start to
05:15 - see the idea now the turtle is currently
05:17 - a little arrow
05:18 - that's what it looks like and then this
05:19 - is its trail that it leaves behind as it
05:21 - moves
05:22 - so we're back looking at the code now so
05:24 - now you can see the basic
05:26 - setup of a turtle graphics program we
05:28 - should look and see
05:30 - what all the methods or all the
05:32 - functions are available to us
05:34 - we'll talk briefly about a few of them
05:36 - and we'll look at a little bit more
05:37 - advanced example that uses nested loops
05:39 - and then i'll hit you with the challenge
05:41 - nice short one today
05:42 - this website i've linked in the comments
05:44 - this is the turtle documentation for the
05:45 - actual python library
05:47 - this is right on the python.org website
05:50 - and
05:50 - what we're going to do is we're going to
05:51 - scroll down here we're going to look
05:52 - mainly at now you can read through this
05:54 - in more detail
05:55 - i just want to look at some of the
05:56 - methods so for turtle motion
05:58 - you've got movement draw methods we did
06:00 - forward we could have shortened it and
06:01 - done fd
06:02 - backward right left there's a go
06:06 - to or a set position where we can
06:08 - actually
06:09 - put the x and the y variables in to send
06:12 - it to a specific position
06:14 - okay within our our space which is
06:16 - really cool to be able to do that
06:18 - to move it within our space okay we can
06:21 - also see some other ones
06:22 - like setting the x or y we can do a
06:25 - circle so drawing a circle just using
06:27 - straight up like tommy dot circle
06:29 - we can do that we can check on the state
06:32 - so what is the position what
06:34 - is the x coordinate and get an answer
06:35 - back we can set the pen
06:37 - either down or up so that's going to
06:39 - tell us whether it's drawing a trail or
06:40 - not drawing a trail
06:42 - if we pick the pen up and move it it's
06:44 - not going to leave a trail behind it
06:46 - if the pen is down and we move it it's
06:48 - going to leave a trail
06:50 - okay we can change the color which we
06:52 - saw we can change the fill color
06:54 - there are some functions to do filling
06:56 - so filling inside of a shape
06:58 - we can clear we can do all kinds of
07:00 - stuff we can hide the turtles show the
07:02 - turtle
07:03 - the turtle being the actual symbol in
07:05 - the middle like mine's an arrow
07:06 - and then there's some more advanced
07:07 - stuff further down related to the screen
07:09 - in the window that we're not going to
07:11 - get into
07:11 - so let's come back to our code let's
07:12 - just add a little element here so let's
07:14 - test a couple of those out let's add a
07:16 - go to
07:17 - so tommy dot go to and let's send them
07:21 - to
07:21 - oh i don't know um 0
07:25 - comma negative 300 and then let's do a
07:29 - tommy doc color blue
07:33 - and then a tommy dot circle and let's
07:36 - see what happens when we run that
07:41 - oh it doesn't like the because i didn't
07:43 - give it a radius for the circle
07:45 - let's do it again let's say the radius
07:47 - is
07:48 - 50.
07:52 - so it drew my triangle it did a go-to
07:55 - where it went down to x of 0
07:58 - we're still at 0 0 here in the middle x
08:01 - of 0
08:02 - and down 300 then it drew a circle with
08:05 - radius 50.
08:06 - if i didn't want this line i could use
08:08 - that pen up function
08:10 - so before my go-to i can do tommy dot
08:13 - pen
08:13 - up and then after the go to
08:16 - tommy dot pen down run that
08:23 - and there we go draws the shape
08:25 - separately cool
08:26 - now that we've covered the basics of
08:28 - turtle we're going to jump in and do
08:29 - something a little bit more advanced so
08:30 - let's run something and then we're going
08:32 - to go back and look at how we did it
08:34 - i'm going to speed this up just so it
08:36 - goes a little faster for you i've got it
08:38 - set to
08:38 - its max speed right now but i'll speed
08:41 - it up in the video
08:47 - hey look at that a little spirograph
08:49 - that's cool
08:50 - drew a bunch of circles shifted them
08:52 - this is a nested loop problem
08:54 - now let's look at the code and see how
08:55 - we did it all right so i import my
08:57 - turtle
08:57 - nothing fancy there i set up my window i
09:00 - set up my turtle
09:01 - none of this is new pen size is five i
09:03 - did the speed command
09:05 - speed zero is going to set it to the
09:06 - fastest speed cool
09:08 - did that set the color to red again
09:10 - nothing fancy
09:12 - now my loops i did for i in range six so
09:15 - i'm going to do this six times
09:16 - going to run 0 1 2 3 4 5. if i is less
09:20 - than 2 so it's
09:21 - the first or the second run and we're
09:23 - gonna make sure tommy's color is red
09:25 - if i is l if i is less than four so that
09:28 - would be my next two
09:30 - is going to be green so that would be
09:31 - when i is two and three
09:33 - and then else so now my eye must be four
09:36 - or five
09:37 - and i'm going to set him to blue once
09:38 - his color is set
09:40 - i'm going to run a for loop j in range
09:42 - 360.
09:44 - this is inside of this loop so these
09:46 - loops are nested
09:47 - so i'm already doing an i that's going
09:49 - to run six times and then i'm doing a j
09:51 - 360. now this is going to draw a circle
09:52 - the old-fashioned way
09:54 - so 4j in range 360. tommy.forward1
09:58 - tommy.left 1. so 360 times it's going to
10:01 - go forward one
10:03 - left one okay and that's going to create
10:05 - a circle
10:07 - now we could replace this whole loop
10:10 - with
10:10 - a circle command but this allows us to
10:12 - do other stuff as well maybe we don't
10:14 - want to do a circle
10:15 - maybe we want to do some other type of
10:17 - drawing here instead so we could do that
10:20 - inside of our loop then you'll notice
10:21 - this line of code now where is this
10:23 - block wise
10:24 - well this line of code is part of this
10:26 - loop because it's indented
10:28 - right but it is not part of this loop
10:32 - so this line of code is only going to
10:33 - run six times and what it does is after
10:35 - the first circle is drawn
10:37 - it's going to shift tommy to turn 60 to
10:40 - the left
10:41 - and then restart the whole process so 6
10:44 - times 60 is 360. so what happens is
10:46 - tommy draws a circle
10:48 - then shifts draws a circle shifts and by
10:50 - the time he's done he'll be right back
10:52 - to where he started
10:53 - because those left turns of 60 six times
10:56 - works out to 360 degrees
10:58 - this is one example of how you can kind
10:59 - of play around with these turtles to
11:00 - create
11:01 - these kind of spirograph things and you
11:02 - can get really cool that if you do some
11:04 - googling around turtle graphic
11:06 - spirograph
11:07 - there's some crazy cool stuff that
11:08 - people have created i just wanted to
11:10 - introduce it and kind of show you a
11:11 - little bit of that code structure
11:13 - that we can use to create something like
11:15 - that and again
11:16 - the nested loop here is a bit redundant
11:18 - because you could use a circle command
11:20 - but you can kind of change the way that
11:22 - works in that maybe you don't go the
11:24 - full 360
11:26 - right maybe you go 120 and then you just
11:29 - do it a bunch of times instead so let's
11:31 - say i just did
11:32 - 120 here so i'm not going to do the full
11:34 - circle i'm just going to do a third of
11:36 - the circle
11:37 - right and then maybe i want to take this
11:39 - range and instead of just doing this you
11:41 - know
11:42 - six times maybe i want to do it 60 times
11:46 - and i only want to turn six each time
11:50 - and then i'm going to take these to 20
11:52 - 40.
11:53 - we're just going to add a tommy.go200
11:59 - with a pen up before it and a pen down
12:01 - after
12:07 - and now we're going to try running that
12:11 - so we get a third of a circle shoot back
12:14 - turn third of a circle shoot back turn
12:17 - a third of a circle we're going to watch
12:21 - this go
12:23 - i'll fast forward it here
12:35 - there we go so you see the way that
12:37 - worked did it all in red then all in
12:38 - green and on blue
12:40 - you can do all kinds of wild stuff now
12:42 - that we're done talking about turtle
12:43 - graphics a little bit about nested loops
12:44 - and nested loop structure
12:46 - indentation i want to talk about your
12:48 - challenge
12:49 - i want you to use a circle when you use
12:51 - turtle and i want you to make me
12:55 - a set of these
12:58 - weren't able to have the olympics this
13:00 - year because of covet all that fun stuff
13:02 - so
13:02 - let's honor them let's do some olympic
13:04 - rings here we go so we can draw the
13:07 - olympic rings
13:08 - using the same commands that we just
13:09 - talked about using turtles colors
13:11 - set positions circle commands maybe
13:13 - loops we can even make this better once
13:15 - we learn functions
13:16 - uh but yeah this is what i want you to
13:18 - do for the challenge i want you to make
13:19 - me some olympic rings
13:20 - good luck with it i think it'll go fine
13:23 - this is a nice little wrap up before we
13:24 - do our end of unit project which is what
13:26 - we're going to be doing next
13:27 - so thanks for sticking with me hopefully
13:29 - you got some of the turtle graphics you
13:30 - can have a little bit of fun with it
13:31 - you can get pretty interactive you look
13:33 - at some cool turtle graphics projects
13:34 - online
13:35 - there's some amazing stuff people have
13:36 - done with turtle graphics that just get
13:37 - a little bit more advanced
13:39 - check them out see if you can mess with
13:40 - their code understand their code that's
13:42 - a huge part of learning how to code
13:44 - like the video share subscribe to the
13:46 - channel if you want to keep up as we're
13:47 - going through this course
13:48 - i'm glad to have you here hit me up in
13:50 - the comments you have questions
13:51 - bye humans we will see you soon

Cleaned transcript:

welcome back humans this is let's learn python i'm adam we're going to jump into unit two topic number five where we're going to learn about turtle graphics talk a little bit about nested loops make things look a little prettier or at least give us the ability to do something that involves graphics which is kind of neat this early on in coding there's lots of people who teach coding and they do a lot of graphic stuff early on personally i'm kind of a believer of you learn the foundations and we do a lot of that with text and then we bring in graphics when the time's right but hey everyone's got their way and there's no wrong way as long as you're getting in there and you're learning you're doing the right thing before we get into today's stuff we're going to jump back first we're going to look at the challenge from the last lesson so this was the challenge from last time it was all about this kind of user menu this text mine looks like this yours might not but i just wanted to show you a little bit of the code that's going on in the background so if i go to blue pill it gives me that the nice printer that gives me a second choice no i'm not sure brings me back red pill it ends so if we look at the code here i have a string variable inside my while true loop i'm asking for a string variable that i'm getting from the user and there's my prompt you'll notice the use of the special characters i use backslash ends in here i wanted to jump to new lines i wanted to make it look a little nicer would you like the red pill of the blue pill and tell them to enter r b i just use these parentheses to imply it then i'm going to compare their choice did they pick r did they pick b if they picked r the whole thing's done we just print the statement and then we break and that ends the loop that ends the program if they chose the blue pill i give them their print and then i take a new choice you'll notice i used a new variable name i don't want to override this variable that i've already created called choice so i call this one choice two use the input are you sure about your choice if they chose y i say so long and i break if they chose anything other than y then i continue which just resets the while loop and runs it again asking the first prompt to get in order to make it to this else it had to not be r and not be b so if i made it here then it was an invalid choice try again and then i continue which brings me back up and reruns it again so that's the code structure that i use in terms of this if and else and alif and break and continue uh for like a user menu or or a user choice so it should work well for you for any program where you want to have that the kind of looping menu where people can make a choice from them which we're going to do in our unit project as well so i wanted to go over that before we jumped into today's stuff which is turtle graphics so looking at turtle graphics well turtle graphics just sounds like a weird thing to say we're just talking about graphics but it's because there's a library in python called turtle and what we're going to do first is we're going to import it so we're going to import turtle okay lowercase t this is a builtin python library that allows these little graphics windows these little turtles now they can look like turtles or they can look like arrows they look like arrows by default you can make them look like something else we're going to set up a window we do this using a variable name i called mine win you could call it something else if you wanted and this is dot notation we're going to talk more about this deeper in the course but this is accessing the turtle library or the turtle class and from it calling on this function to run so turtle.screen is going to return a window which i'm going to store in my win variable and then tommy is the name that i gave to my turtle you could give yours another name you don't have to give it a real name you could just call it t equals library dot and then the turtle returns a turtle object which i'm storing under the name tommy and then using that name and the dot notation of calling functions tommy dot tommy dot i can call functions on my turtle and there's so many different functions that i can call i'm going to go through a couple basics with you and show you how they look and then we will look at the actual documentation for turtles you can see all the functions that are available so i'm going to do tommy dot pen size 5 give it a nice thick pen size for drawing i'm going to set tommy's color to blue you'll notice it's in quotation marks so tommy dot color and then i'm going to do a for loop so i'm going to do for i in range 4 i'm going to move tommy forward by 100 pixels pixels remember the tiny little dots that make up our screens and then he's going to turn left 90 degrees he's going to repeat that four times so if you can apply he's probably going to draw a square and then i have this window exit on click the exit on click function makes it wait for us to click our mouse on the screen before the graphics window suddenly disappears which is just helpful for looking at our graphics let's run this and we'll see how it looks and there we can see it pops up this turtle window this graphics window and it drew over up over down and then the arrow turned one last time to the left 90 degrees and the box was blue so let's mess with our code a little bit so here let's say we want to do a triangle instead so i'm going to change this to 3 i'm going to change my turn to 120 because that will leave a 60 degree angle on the inside and i'll make it red so i'm going to save that click in this window it disappears and i run again there's my triangle okay so you start to see the idea now the turtle is currently a little arrow that's what it looks like and then this is its trail that it leaves behind as it moves so we're back looking at the code now so now you can see the basic setup of a turtle graphics program we should look and see what all the methods or all the functions are available to us we'll talk briefly about a few of them and we'll look at a little bit more advanced example that uses nested loops and then i'll hit you with the challenge nice short one today this website i've linked in the comments this is the turtle documentation for the actual python library this is right on the python.org website and what we're going to do is we're going to scroll down here we're going to look mainly at now you can read through this in more detail i just want to look at some of the methods so for turtle motion you've got movement draw methods we did forward we could have shortened it and done fd backward right left there's a go to or a set position where we can actually put the x and the y variables in to send it to a specific position okay within our our space which is really cool to be able to do that to move it within our space okay we can also see some other ones like setting the x or y we can do a circle so drawing a circle just using straight up like tommy dot circle we can do that we can check on the state so what is the position what is the x coordinate and get an answer back we can set the pen either down or up so that's going to tell us whether it's drawing a trail or not drawing a trail if we pick the pen up and move it it's not going to leave a trail behind it if the pen is down and we move it it's going to leave a trail okay we can change the color which we saw we can change the fill color there are some functions to do filling so filling inside of a shape we can clear we can do all kinds of stuff we can hide the turtles show the turtle the turtle being the actual symbol in the middle like mine's an arrow and then there's some more advanced stuff further down related to the screen in the window that we're not going to get into so let's come back to our code let's just add a little element here so let's test a couple of those out let's add a go to so tommy dot go to and let's send them to oh i don't know um 0 comma negative 300 and then let's do a tommy doc color blue and then a tommy dot circle and let's see what happens when we run that oh it doesn't like the because i didn't give it a radius for the circle let's do it again let's say the radius is 50. so it drew my triangle it did a goto where it went down to x of 0 we're still at 0 0 here in the middle x of 0 and down 300 then it drew a circle with radius 50. if i didn't want this line i could use that pen up function so before my goto i can do tommy dot pen up and then after the go to tommy dot pen down run that and there we go draws the shape separately cool now that we've covered the basics of turtle we're going to jump in and do something a little bit more advanced so let's run something and then we're going to go back and look at how we did it i'm going to speed this up just so it goes a little faster for you i've got it set to its max speed right now but i'll speed it up in the video hey look at that a little spirograph that's cool drew a bunch of circles shifted them this is a nested loop problem now let's look at the code and see how we did it all right so i import my turtle nothing fancy there i set up my window i set up my turtle none of this is new pen size is five i did the speed command speed zero is going to set it to the fastest speed cool did that set the color to red again nothing fancy now my loops i did for i in range six so i'm going to do this six times going to run 0 1 2 3 4 5. if i is less than 2 so it's the first or the second run and we're gonna make sure tommy's color is red if i is l if i is less than four so that would be my next two is going to be green so that would be when i is two and three and then else so now my eye must be four or five and i'm going to set him to blue once his color is set i'm going to run a for loop j in range 360. this is inside of this loop so these loops are nested so i'm already doing an i that's going to run six times and then i'm doing a j 360. now this is going to draw a circle the oldfashioned way so 4j in range 360. tommy.forward1 tommy.left 1. so 360 times it's going to go forward one left one okay and that's going to create a circle now we could replace this whole loop with a circle command but this allows us to do other stuff as well maybe we don't want to do a circle maybe we want to do some other type of drawing here instead so we could do that inside of our loop then you'll notice this line of code now where is this block wise well this line of code is part of this loop because it's indented right but it is not part of this loop so this line of code is only going to run six times and what it does is after the first circle is drawn it's going to shift tommy to turn 60 to the left and then restart the whole process so 6 times 60 is 360. so what happens is tommy draws a circle then shifts draws a circle shifts and by the time he's done he'll be right back to where he started because those left turns of 60 six times works out to 360 degrees this is one example of how you can kind of play around with these turtles to create these kind of spirograph things and you can get really cool that if you do some googling around turtle graphic spirograph there's some crazy cool stuff that people have created i just wanted to introduce it and kind of show you a little bit of that code structure that we can use to create something like that and again the nested loop here is a bit redundant because you could use a circle command but you can kind of change the way that works in that maybe you don't go the full 360 right maybe you go 120 and then you just do it a bunch of times instead so let's say i just did 120 here so i'm not going to do the full circle i'm just going to do a third of the circle right and then maybe i want to take this range and instead of just doing this you know six times maybe i want to do it 60 times and i only want to turn six each time and then i'm going to take these to 20 40. we're just going to add a tommy.go200 with a pen up before it and a pen down after and now we're going to try running that so we get a third of a circle shoot back turn third of a circle shoot back turn a third of a circle we're going to watch this go i'll fast forward it here there we go so you see the way that worked did it all in red then all in green and on blue you can do all kinds of wild stuff now that we're done talking about turtle graphics a little bit about nested loops and nested loop structure indentation i want to talk about your challenge i want you to use a circle when you use turtle and i want you to make me a set of these weren't able to have the olympics this year because of covet all that fun stuff so let's honor them let's do some olympic rings here we go so we can draw the olympic rings using the same commands that we just talked about using turtles colors set positions circle commands maybe loops we can even make this better once we learn functions uh but yeah this is what i want you to do for the challenge i want you to make me some olympic rings good luck with it i think it'll go fine this is a nice little wrap up before we do our end of unit project which is what we're going to be doing next so thanks for sticking with me hopefully you got some of the turtle graphics you can have a little bit of fun with it you can get pretty interactive you look at some cool turtle graphics projects online there's some amazing stuff people have done with turtle graphics that just get a little bit more advanced check them out see if you can mess with their code understand their code that's a huge part of learning how to code like the video share subscribe to the channel if you want to keep up as we're going through this course i'm glad to have you here hit me up in the comments you have questions bye humans we will see you soon
