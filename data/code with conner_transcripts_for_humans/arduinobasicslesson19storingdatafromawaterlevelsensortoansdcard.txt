With timestamps:

00:01 - [Music]
00:11 - hello Internet students welcome back to
00:14 - the Arduino basics tutorial series this
00:17 - is lesson number 19 in this lesson we're
00:19 - going to be wiring up a water sensor and
00:21 - then writing the data from that water
00:23 - sensor to an SD card compared to the
00:26 - last two lessons this one will be
00:27 - relatively short because we've already
00:29 - started to learn all of the structure
00:30 - that we need it's just a matter of
00:32 - bringing in a new input which in this
00:33 - case is a water sensor let's have a look
00:35 - at the wiring let's start by reviewing
00:38 - the wiring for our SD card reader and
00:40 - writer module from top to bottom we're
00:42 - going to ground then we're going to 5
00:45 - volts then we're going to pin 12 pin 11
00:50 - pin 13 and then finally pin 10 so coming
00:56 - down we're going from our miso or Mis oh
00:59 - is pin 12 our mo si is pin 11 our s CK
01:06 - is going to 13 and then our signal pin
01:09 - our CS is going to 10 so that's going to
01:12 - wire up our SD you'll see I used a
01:14 - breadboard here just to make use of the
01:16 - voltage and ground rows here is my water
01:18 - level sensor so it's got clearly labeled
01:21 - pins and ass a plus and a minus the
01:24 - minus is going to go to ground the plus
01:26 - is going to go to voltage and the S or
01:29 - the signal we're gonna bring to one of
01:30 - the analog inputs on our Arduino in my
01:33 - code I use a zero for this this is what
01:36 - our wiring diagram is going to look like
01:37 - for our water level sensor that's gonna
01:39 - write down it to an SD card meet me over
01:42 - in the coding environment once you have
01:44 - this done and we'll get started with
01:45 - writing the code here we are in our
01:47 - coding interface for lesson number 19 I
01:50 - have a new file we're gonna start by
01:52 - setting up our libraries and our global
01:54 - variables that we need throughout our
01:56 - class so the only library we need is our
01:58 - SD library we don't need one for the
01:59 - water level sensor as it just uses an
02:01 - analog read on a standard analog pin
02:03 - variables we need our file object which
02:06 - is called my file we have a string file
02:08 - name which i've called water dot CSV so
02:11 - we're gonna store our data as a
02:13 - a separated value file so make it easier
02:15 - to import it into spreadsheets if we
02:17 - want to graph the data I have an int for
02:19 - the water value which I've currently set
02:21 - to zero and an int for the water pin
02:23 - which I've said to a zero jumping into
02:26 - our setup function we're going to set up
02:28 - our serial monitor for debugging and
02:30 - we're gonna wait for the serial monitor
02:31 - to be launched so we're gonna do a
02:33 - serial dot begin
02:34 - 9600 and little while not the serial so
02:37 - it'll wait while the serial port
02:39 - connects before it moves on with the
02:41 - rest of the code so if you remember
02:43 - lesson 17 when we worked the SD card we
02:45 - wrote a couple of methods we wrote one
02:47 - to initialize the card we're gonna just
02:49 - bring that entire method in to this
02:51 - program so I'm gonna go here in between
02:53 - my setup and loop function and I'm gonna
02:56 - add in the methods that we decided to
02:58 - add in soul
02:59 - there's my initialized card method from
03:01 - lesson number 17 not gonna bother
03:03 - changing it this is gonna allow us to
03:05 - initialize the SD card for writing and
03:07 - reading
03:08 - so I will call initialize card from the
03:11 - setup we're gonna say a little more code
03:13 - from lesson 17 we're gonna put the if
03:14 - statement in that's going to check it
03:16 - the file name already exists if it does
03:18 - it's going to remove that file and print
03:20 - a debug statement letting us know if st
03:22 - not exists file name this will return
03:24 - true if the file name already exists on
03:26 - the card st don't remove file name so
03:29 - get rid of it and then print a debug
03:31 - statement saying that the file had
03:33 - already existed it's been removed and
03:34 - overwritten and last thing of the setup
03:37 - function is we have to write headers to
03:39 - our file so we're gonna steal the write
03:41 - header method from lesson 217 as well
03:43 - and we're going to call it from the end
03:44 - of our setup function now when I bring a
03:47 - write header in we will have to modify
03:48 - it a little bit so let's do that now so
03:50 - here I am underneath the initialize card
03:52 - method make some room and I will paste
03:55 - my write header method so this opened up
03:58 - our file with the right file name as a
04:01 - write it checked it the file opens
04:04 - properly and then it printed debug
04:06 - statements to say that it was writing
04:08 - the file name and then it printed to the
04:10 - actual file to comma separated values so
04:14 - in the previous lesson it just said time
04:16 - and value so I've changed that to read
04:19 - time comma water level and that those
04:22 - will be the headers that we'll use for
04:24 - this lesson and then I close the file
04:26 - the else statement is if it didn't open
04:28 - the file properly it prints that act so
04:31 - looking at our setup function at the
04:33 - moment it sets up serial and waits for
04:34 - it it initializes the SD card it makes
04:38 - sure the file name doesn't already exist
04:39 - if it does removes it then it writes the
04:42 - header value to our file so that will
04:44 - write time and water level comma
04:46 - separated values to the top of our file
04:48 - now we're entering our loop function and
04:50 - so we're going to set it up so that we
04:52 - read the value from the water level
04:54 - sensor print a debug statement to serial
04:56 - and then also write that data to the SD
05:00 - card so first things first my water Val
05:02 - variable is gonna be equal to an analog
05:04 - read on the water pin that's gonna read
05:06 - in the value from the water level sensor
05:08 - I'm then going to print that as a debug
05:10 - statement and I have a five-second delay
05:12 - after that in between here is where I'm
05:15 - going to need to write the data to my
05:17 - card so remember from lesson 17 we have
05:19 - the right data method well we're gonna
05:21 - call that here and then we're going to
05:23 - copy and paste it over from lesson 17
05:25 - and just make a couple of tweaks I'm
05:26 - gonna go above my loop function and I'll
05:28 - paste that right data function right
05:32 - data now we still want to store the time
05:34 - values milliseconds and a coma but then
05:37 - we want it to print the water Val as
05:39 - opposed to that value variable that we
05:41 - had been using in the previous lesson we
05:42 - want it to print the water Val that it
05:44 - had just read from the analog pin zero
05:47 - and then we close the file that's all we
05:49 - have to do there to write this data to
05:51 - the font so if I look at my loop it's
05:53 - gonna read the sensor debug statement
05:56 - write the data to the file and then
05:59 - delay five seconds so this is all we
06:01 - need in our code let's run through it
06:03 - really quickly just to make sure we
06:05 - understood it we're gonna set up our
06:07 - serial we're gonna initialize our card
06:09 - we're gonna check the filename and if it
06:11 - exists we overwrite it and remove the
06:13 - old file name we're gonna write the
06:15 - header values which should be the time
06:17 - and the water level then we're going to
06:21 - come into the loop function where it's
06:23 - going to read the sensor print it to the
06:25 - debug or to the serial write it to the
06:28 - card wait five seconds and then repeat
06:30 - and it will continue to do this
06:32 - indefinitely
06:33 - all right let's push it out to our board
06:34 - and let's see how it works all right so
06:36 - we got the serial monitor open we see
06:39 - that it initially
06:40 - Sicard successfully that the file had
06:42 - already existed because I've been doing
06:43 - this before the video started so it's
06:46 - been overwritten
06:47 - it says writing to water dot CSV and you
06:49 - can see it's writing a water value on 0
06:51 - every 5 seconds now at the moment I
06:54 - don't have my sensor sitting in water so
06:56 - I'm gonna pick up my sensor here and I'm
06:59 - gonna dip it into some water so now
07:08 - we're seeing 522 or go a little bit
07:11 - deeper 536 537 and we're starting to see
07:20 - that water data going up now one thing I
07:24 - find with these water sensors is they
07:27 - take quite a while for the water to draw
07:29 - off of them so you will see lower levels
07:31 - so you see I brought it up out of the
07:33 - water a little bit I'm into the 300s now
07:35 - if I remove it from the water entirely a
07:37 - little tink on the side of the water
07:39 - bottle what you'll see is it's not gonna
07:43 - drop right to zero right away here we
07:48 - are at 75 so when you're coding for this
07:52 - you need to take that into account if
07:54 - you were using this as some type of
07:56 - system to kind of be monitoring water
07:58 - levels and maybe having like a trigger
08:01 - mechanism so if you had electronics that
08:03 - were sensitive you didn't want them to
08:04 - get wet just be aware that once they
08:06 - once the sensor gets wet at all
08:09 - it does take quite a bit of time for it
08:10 - to completely dry off and go back down
08:12 - to a water level of zero so you are
08:14 - gonna have to have a bit of a buffer
08:16 - there at the bottom so before we call it
08:18 - done let me turn off my Arduino plug my
08:21 - SD card into my computer and have a look
08:23 - at the actual CSV file so I went into my
08:25 - SD card and I opened up the water dot
08:28 - CSV file and they brought me in here
08:31 - with all this data and you can see my
08:33 - time and my water level time in
08:35 - milliseconds starting at zero there's
08:38 - where I submerged it there's where I
08:39 - lifted it up a bit
08:40 - and then there's where I removed it from
08:42 - the water completely and you can see
08:44 - this on a graph which is nice when we
08:46 - bring in a CSV file we can easily make
08:47 - graphs from them you can see not in the
08:50 - water here and also not in the water
08:52 - here and you can see the difference
08:54 - because the sensors wet here oh so this
08:55 - is the great thing about being able to
08:56 - do this that's it for the bass lesson
08:58 - we're getting into kind of the real use
09:00 - of Arduino is now which is working a
09:02 - sensor boxes is a really common use for
09:04 - Arduino gathering sensor data store it
09:06 - or send it off remotely we'll see you in
09:08 - the extension in just a minute
09:10 - great job on the bass lesson in the
09:12 - extension all I want you to do is add a
09:14 - buzzer to your circuit and I want you to
09:17 - wire that buzzer so that it goes off at
09:19 - a certain threshold so if the water
09:21 - level hits 200 300 400 whatever you're
09:24 - going for
09:25 - I want the buzzer to sandwhich to act as
09:27 - a bit of an alarm you can choose how you
09:29 - want it to go whether you want it to go
09:31 - for 5 seconds until the delays over and
09:33 - then turn back off or as long as the
09:35 - water level is above a certain value it
09:37 - will continue to keep the buzzer on
09:39 - until the water level comes back down so
09:42 - whichever way you think would work best
09:43 - for this lesson but that's what I want
09:45 - you to do for the extension for this
09:47 - activity all right so last two lessons
09:49 - have been really big so challenge on
09:51 - this one we're going to keep pretty
09:52 - small you've already got it working with
09:54 - a buzzer writing device the SD card
09:56 - let's add in a visual element so we like
09:58 - the sound to alert us from the buzzer
10:01 - that the water level has reached a
10:02 - certain threshold
10:03 - let's bring in an LED as well so let's
10:06 - bring in a nice bright red LED and have
10:09 - that LED turn on if the water threshold
10:11 - is past a certain point and then it can
10:13 - turn back off if the water threshold
10:15 - goes back down I wouldn't recommend
10:17 - putting it at zero because like I said
10:19 - if it's water that's gonna come up and
10:21 - go back down like maybe in a sub pump
10:22 - you want to allow the sensor time to dry
10:26 - off after the water level goes back down
10:28 - so you might want to have the alarm
10:29 - closer to a hundred or maybe a little
10:30 - higher so that you know for sure that
10:33 - the water level is remaining there then
10:35 - it hasn't receded
10:36 - okay so let's add in an LED to the
10:38 - circuit then we've got ourselves a great
10:40 - little sensor box maybe get it set up in
10:42 - your basement with a battery and you can
10:44 - track that water data if you needed to
10:45 - check it out thanks so much for sticking
10:46 - with us for 19 videos I look forward to
10:49 - seeing you back for lesson number 20
10:51 - which will be our final lesson of the
10:52 - main series and then we'll be doing some
10:54 - extension videos after that if you like
10:56 - what we're doing like the video
10:57 - subscribe to our channel to stay tuned
10:58 - as we continue to create more content
11:00 - have a great day
11:01 - [Music]

Cleaned transcript:

hello Internet students welcome back to the Arduino basics tutorial series this is lesson number 19 in this lesson we're going to be wiring up a water sensor and then writing the data from that water sensor to an SD card compared to the last two lessons this one will be relatively short because we've already started to learn all of the structure that we need it's just a matter of bringing in a new input which in this case is a water sensor let's have a look at the wiring let's start by reviewing the wiring for our SD card reader and writer module from top to bottom we're going to ground then we're going to 5 volts then we're going to pin 12 pin 11 pin 13 and then finally pin 10 so coming down we're going from our miso or Mis oh is pin 12 our mo si is pin 11 our s CK is going to 13 and then our signal pin our CS is going to 10 so that's going to wire up our SD you'll see I used a breadboard here just to make use of the voltage and ground rows here is my water level sensor so it's got clearly labeled pins and ass a plus and a minus the minus is going to go to ground the plus is going to go to voltage and the S or the signal we're gonna bring to one of the analog inputs on our Arduino in my code I use a zero for this this is what our wiring diagram is going to look like for our water level sensor that's gonna write down it to an SD card meet me over in the coding environment once you have this done and we'll get started with writing the code here we are in our coding interface for lesson number 19 I have a new file we're gonna start by setting up our libraries and our global variables that we need throughout our class so the only library we need is our SD library we don't need one for the water level sensor as it just uses an analog read on a standard analog pin variables we need our file object which is called my file we have a string file name which i've called water dot CSV so we're gonna store our data as a a separated value file so make it easier to import it into spreadsheets if we want to graph the data I have an int for the water value which I've currently set to zero and an int for the water pin which I've said to a zero jumping into our setup function we're going to set up our serial monitor for debugging and we're gonna wait for the serial monitor to be launched so we're gonna do a serial dot begin 9600 and little while not the serial so it'll wait while the serial port connects before it moves on with the rest of the code so if you remember lesson 17 when we worked the SD card we wrote a couple of methods we wrote one to initialize the card we're gonna just bring that entire method in to this program so I'm gonna go here in between my setup and loop function and I'm gonna add in the methods that we decided to add in soul there's my initialized card method from lesson number 17 not gonna bother changing it this is gonna allow us to initialize the SD card for writing and reading so I will call initialize card from the setup we're gonna say a little more code from lesson 17 we're gonna put the if statement in that's going to check it the file name already exists if it does it's going to remove that file and print a debug statement letting us know if st not exists file name this will return true if the file name already exists on the card st don't remove file name so get rid of it and then print a debug statement saying that the file had already existed it's been removed and overwritten and last thing of the setup function is we have to write headers to our file so we're gonna steal the write header method from lesson 217 as well and we're going to call it from the end of our setup function now when I bring a write header in we will have to modify it a little bit so let's do that now so here I am underneath the initialize card method make some room and I will paste my write header method so this opened up our file with the right file name as a write it checked it the file opens properly and then it printed debug statements to say that it was writing the file name and then it printed to the actual file to comma separated values so in the previous lesson it just said time and value so I've changed that to read time comma water level and that those will be the headers that we'll use for this lesson and then I close the file the else statement is if it didn't open the file properly it prints that act so looking at our setup function at the moment it sets up serial and waits for it it initializes the SD card it makes sure the file name doesn't already exist if it does removes it then it writes the header value to our file so that will write time and water level comma separated values to the top of our file now we're entering our loop function and so we're going to set it up so that we read the value from the water level sensor print a debug statement to serial and then also write that data to the SD card so first things first my water Val variable is gonna be equal to an analog read on the water pin that's gonna read in the value from the water level sensor I'm then going to print that as a debug statement and I have a fivesecond delay after that in between here is where I'm going to need to write the data to my card so remember from lesson 17 we have the right data method well we're gonna call that here and then we're going to copy and paste it over from lesson 17 and just make a couple of tweaks I'm gonna go above my loop function and I'll paste that right data function right data now we still want to store the time values milliseconds and a coma but then we want it to print the water Val as opposed to that value variable that we had been using in the previous lesson we want it to print the water Val that it had just read from the analog pin zero and then we close the file that's all we have to do there to write this data to the font so if I look at my loop it's gonna read the sensor debug statement write the data to the file and then delay five seconds so this is all we need in our code let's run through it really quickly just to make sure we understood it we're gonna set up our serial we're gonna initialize our card we're gonna check the filename and if it exists we overwrite it and remove the old file name we're gonna write the header values which should be the time and the water level then we're going to come into the loop function where it's going to read the sensor print it to the debug or to the serial write it to the card wait five seconds and then repeat and it will continue to do this indefinitely all right let's push it out to our board and let's see how it works all right so we got the serial monitor open we see that it initially Sicard successfully that the file had already existed because I've been doing this before the video started so it's been overwritten it says writing to water dot CSV and you can see it's writing a water value on 0 every 5 seconds now at the moment I don't have my sensor sitting in water so I'm gonna pick up my sensor here and I'm gonna dip it into some water so now we're seeing 522 or go a little bit deeper 536 537 and we're starting to see that water data going up now one thing I find with these water sensors is they take quite a while for the water to draw off of them so you will see lower levels so you see I brought it up out of the water a little bit I'm into the 300s now if I remove it from the water entirely a little tink on the side of the water bottle what you'll see is it's not gonna drop right to zero right away here we are at 75 so when you're coding for this you need to take that into account if you were using this as some type of system to kind of be monitoring water levels and maybe having like a trigger mechanism so if you had electronics that were sensitive you didn't want them to get wet just be aware that once they once the sensor gets wet at all it does take quite a bit of time for it to completely dry off and go back down to a water level of zero so you are gonna have to have a bit of a buffer there at the bottom so before we call it done let me turn off my Arduino plug my SD card into my computer and have a look at the actual CSV file so I went into my SD card and I opened up the water dot CSV file and they brought me in here with all this data and you can see my time and my water level time in milliseconds starting at zero there's where I submerged it there's where I lifted it up a bit and then there's where I removed it from the water completely and you can see this on a graph which is nice when we bring in a CSV file we can easily make graphs from them you can see not in the water here and also not in the water here and you can see the difference because the sensors wet here oh so this is the great thing about being able to do this that's it for the bass lesson we're getting into kind of the real use of Arduino is now which is working a sensor boxes is a really common use for Arduino gathering sensor data store it or send it off remotely we'll see you in the extension in just a minute great job on the bass lesson in the extension all I want you to do is add a buzzer to your circuit and I want you to wire that buzzer so that it goes off at a certain threshold so if the water level hits 200 300 400 whatever you're going for I want the buzzer to sandwhich to act as a bit of an alarm you can choose how you want it to go whether you want it to go for 5 seconds until the delays over and then turn back off or as long as the water level is above a certain value it will continue to keep the buzzer on until the water level comes back down so whichever way you think would work best for this lesson but that's what I want you to do for the extension for this activity all right so last two lessons have been really big so challenge on this one we're going to keep pretty small you've already got it working with a buzzer writing device the SD card let's add in a visual element so we like the sound to alert us from the buzzer that the water level has reached a certain threshold let's bring in an LED as well so let's bring in a nice bright red LED and have that LED turn on if the water threshold is past a certain point and then it can turn back off if the water threshold goes back down I wouldn't recommend putting it at zero because like I said if it's water that's gonna come up and go back down like maybe in a sub pump you want to allow the sensor time to dry off after the water level goes back down so you might want to have the alarm closer to a hundred or maybe a little higher so that you know for sure that the water level is remaining there then it hasn't receded okay so let's add in an LED to the circuit then we've got ourselves a great little sensor box maybe get it set up in your basement with a battery and you can track that water data if you needed to check it out thanks so much for sticking with us for 19 videos I look forward to seeing you back for lesson number 20 which will be our final lesson of the main series and then we'll be doing some extension videos after that if you like what we're doing like the video subscribe to our channel to stay tuned as we continue to create more content have a great day
