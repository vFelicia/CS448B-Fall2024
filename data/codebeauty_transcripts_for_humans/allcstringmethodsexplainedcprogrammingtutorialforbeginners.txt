With timestamps:

00:00 - hi guys and welcome to my channel in
00:02 - this video I will teach you how to work
00:03 - with strings in C and some of the most
00:07 - important methods when it comes to
00:08 - working with strings as a developer you
00:11 - will very often need to work with
00:13 - strings in your career so this is very
00:16 - important topic and I recommend that you
00:17 - watch the entire video because in this
00:19 - video I will teach you everything that
00:21 - you need to know when it comes to
00:23 - working with strings so let's go
00:25 - straight to the point first thing that
00:27 - is important for you to know is how to
00:29 - compare two strings so let me show you
00:32 - how to do that on an example let's
00:34 - create a string variable let's call it
00:37 - Str Str one and here I will assign Value
00:41 - Salina that is my name okay and then
00:44 - let's create another string variable and
00:46 - let's say that it will be called Str
00:48 - str2 and here I will say code
00:52 - Beauty like this so what I want to do is
00:55 - I want to check if these two strings are
00:57 - equal so how can I do that well it's
01:00 - actually very easy and quite intuitive
01:04 - and you can compare strings using this
01:07 - operator so using equality operator so
01:10 - let's say
01:13 - console. right line and here I want to
01:16 - print the result if Str str1 is equal to
01:20 - Str str2 now the result of this
01:23 - operation here is going to be either
01:24 - true or false so one or zero depending
01:28 - if these two strings are equal or not so
01:32 - let's start the program and let's see
01:34 - what are we going to get as a result
01:37 - okay and you can see that the result is
01:38 - false because these two strings are not
01:41 - equal and then if I say for example code
01:45 - Beauty in both and then I start the
01:47 - program as you can see we will get true
01:50 - as the result so the same way that you
01:53 - can use this operator to check if these
01:56 - two strings are equal you can also use
01:59 - this operator
02:00 - to check if they are not equal so now if
02:04 - I start the program as you can see the
02:06 - result will be false because here I'm
02:08 - checking if string one is different from
02:11 - string two and as you can see they are
02:13 - equal so the result of this operation is
02:16 - going to be false okay so that is one
02:19 - way to compare strings and I want to
02:21 - show you another way that offers some
02:23 - additional options but before we go any
02:26 - further if you like my teaching style
02:28 - and if you like learning from my YouTube
02:30 - videos then I can definitely teach you a
02:33 - lot more in my practical programming
02:35 - course you can find it at this site here
02:37 - code Beauty
02:39 - academy.com and as the name itself
02:41 - implies it is extremely practical you
02:44 - will learn a lot you will practice even
02:46 - more and apply everything that you learn
02:48 - I will be there for all of your
02:49 - questions and help you to speed up your
02:52 - progress so that you can start your
02:53 - career as soon as possible a lot of
02:55 - students who enrolled in the course just
02:57 - three or four months ago have already
02:59 - started started their first job and I am
03:01 - very happy and very proud of that so why
03:05 - wouldn't you also be one of them and if
03:07 - you are still not sure if this course is
03:09 - for you or not there is a 7-Day money
03:11 - back guarantee which means that you can
03:13 - get all of your money back if you don't
03:15 - like it for any reason now instead of
03:18 - coming up with excuses use the discount
03:20 - code that I will leave in the
03:22 - description and learn programming this
03:24 - time for real because it can truly
03:27 - transform your future so let's get back
03:29 - to the top topic and let me explain
03:31 - another way to compare strings so
03:34 - instead of saying is Str str1 equal to
03:37 - St str2 this way what you can do is you
03:40 - can use equals method so you can say Str
03:43 - str1 dot equals and then inside these
03:48 - parentheses you will put your second
03:50 - string so here I will put Str str2 so
03:53 - this is another way to compare strings
03:56 - and now if I start the program we should
03:59 - get the result result of true because
04:02 - these two strings are equal and then if
04:05 - I change this if I say for example
04:07 - Salina again and I start the program now
04:10 - we get the result of false okay so now
04:14 - the question is what is the difference
04:16 - between this approach and the approach
04:18 - that I've shown you previously and the
04:20 - answer is that this approach here using
04:23 - equals method offers some additional
04:26 - options for example what you can do is
04:29 - is you can say here that you will have
04:32 - another parameter so here you can say
04:35 - string comparison dot ordinal ignore
04:40 - case so this option here and what this
04:44 - option will do is it will treat equally
04:47 - both uppercase and lowercase letters so
04:51 - if I say code Beauty like this and I
04:56 - start the program these two strings are
04:59 - going to be equal so both this string
05:01 - here and this string here are equal if
05:04 - you are using this option and then
05:07 - without this option if you just start
05:11 - the program you will see that these two
05:12 - strings are different because lowercase
05:15 - letters and uppercase letters are not
05:17 - the same but what you can do in case
05:20 - that you want to completely ignore
05:23 - casing and case sensitivity is you can
05:26 - use this additional option in
05:28 - combination with equals method so now I
05:31 - can write this any way I want I can say
05:34 - for example code Duty like this and they
05:38 - will still be equal because
05:40 - capitalization is not important if you
05:43 - are using this option so now the
05:45 - question is when is this option useful
05:48 - it is useful when you are for example
05:51 - comparing email addresses or when you
05:53 - are even comparing usernames because
05:55 - those two are very often not case
05:58 - sensitive which means means that it
06:00 - doesn't matter if you are typing with
06:02 - uppercase or lowercase letters they both
06:05 - will be treated equally also when you're
06:08 - searching on YouTube or Google or any
06:10 - other social media platform very often
06:13 - this option is used in order to
06:15 - completely ignore the casing because
06:18 - both uppercase and lowercase letters
06:21 - will be treated equally the important
06:23 - part is just to give you the word or the
06:26 - search term that you are looking for so
06:29 - those are two ways to compare strings
06:31 - the first one was with the help of
06:33 - equality operator and then the second
06:36 - one is with the help of this equals
06:39 - method you can use whichever one you
06:42 - prefer now while we are at the topic of
06:44 - lower and uppercase letters there are
06:47 - also two interesting and simple
06:49 - functions that you should know the first
06:52 - one is two lower and the second one is
06:55 - two upper so if I say Str Str do to
07:00 - lower what this method is going to do is
07:03 - it will convert this string to lowercase
07:06 - so if I start the program as you can see
07:09 - the entire string is now in lowercase
07:12 - letters and then if I say to Upper this
07:16 - method is going to convert this string
07:18 - into uppercase letters so if I start the
07:22 - program as you can see now our sdr1 is
07:25 - all uppercase so those are two very
07:28 - simple but quite useful functions that
07:31 - you should know about so two lower and
07:33 - two upper so this can also be useful
07:36 - when you are comparing two strings and
07:38 - you just want to compare if the content
07:41 - of those two strings is the same and you
07:43 - want to ignore letter capitalization
07:46 - what you can do is you can convert both
07:49 - of those strings to let's say lowercase
07:51 - and then compare them so let me show you
07:54 - an example of that so if I say please
07:57 - check if Str Str 1 is equal to Str str2
08:02 - what do you expect to get when I start
08:04 - the program let me know in the comment
08:05 - section okay as you can see the result
08:09 - is false because here it is taking in
08:13 - consideration the letter capitalization
08:16 - so what I can do is I can say please
08:19 - convert Str str1 to lower like this and
08:24 - then also convert Str str2 to lower like
08:28 - this and then compare them so if I start
08:32 - the program now what do you expect to
08:34 - get let me know in the comment
08:36 - section okay and as you can see now we
08:40 - get the result of true because before
08:43 - these two strings are compared they are
08:46 - both converted to lowercase and then
08:48 - they are compared so since their content
08:51 - is the same they are the same okay and
08:56 - then another useful method is converting
08:59 - numbers into Strings so I can say for
09:02 - example int number and here let's say
09:06 - 55 okay so in order to convert this
09:10 - number here into string I simply say
09:14 - number dot to string like this and here
09:18 - you will get this number in string
09:21 - format this can be very useful when you
09:23 - want to work with numerical data but in
09:26 - text format so what does that mean it
09:29 - means that for example if you want to
09:31 - perform different mathematical
09:33 - operations and calculations on this
09:35 - number then you should leave it in
09:37 - numerical data type so then it should be
09:40 - an integer or float or double decimal
09:43 - and so on but if you want to work with
09:46 - this number as part of a string then you
09:49 - can easily convert it into a string and
09:52 - then you can search through that string
09:54 - you can compare it with another string
09:56 - you can take a substring which means a
09:58 - part of that string and so on and that
10:01 - string can contain numbers of course and
10:04 - this method here is a way to convert a
10:07 - number into a string okay so now I have
10:12 - one trick question for you and that is
10:14 - the following if I say here number to
10:19 - string plus number to string okay so
10:23 - this is First Option and then the second
10:26 - option is this so number plus number
10:31 - what is going to be the result what is
10:33 - going to be the output of this line here
10:35 - and then this line here please pause the
10:37 - video and try to find the answer on your
10:40 - own and then write the answer in the
10:42 - comment section and then we are going to
10:45 - start the program together okay and as
10:48 - you can see the result is very different
10:51 - so we did not get the same result for
10:54 - this line here and then this line here
10:56 - so now the question is why and the
10:58 - answer is is very simple so this number
11:02 - here was converted into string format as
11:04 - well as this number here so that means
11:07 - when you try to sum these two it will
11:09 - simply concatenate them so we get the
11:12 - first number and then we get the second
11:15 - number and they are simply concatenated
11:18 - together because they were in string
11:19 - format and then in this second case
11:22 - number plus number they are in numeric
11:25 - data type so then they will be summed
11:28 - and we get the result of 55 + 55 which
11:32 - is
11:33 - 110 okay so let me know in the comment
11:36 - section if you get this answer right
11:39 - okay now let's talk about another
11:41 - interesting method let me show you how
11:43 - you can search for a specific term in
11:46 - text because that can be useful very
11:48 - often and it is very interesting to know
11:51 - so let me find some text and I will be
11:54 - back okay so here I have my website
11:57 - where you can learn practical
11:58 - programming now let's copy this text so
12:01 - that we have some text to use okay here
12:05 - I will create a string variable and I
12:07 - will call it
12:09 - text like this and then inside these
12:12 - quotation marks I will put all of this
12:15 - text so now what I want to do is I want
12:18 - to search for a specific term inside
12:21 - this text so how can we do that it's
12:25 - actually very easy you simply say text
12:28 - Dot contains okay so please check if
12:32 - this text here contains this word for
12:36 - example let's say
12:38 - practical so if I start the program it
12:41 - should tell me if this text contains
12:44 - this word so let's start the program and
12:48 - as you can see we get true because truly
12:52 - this text here contains the word that we
12:55 - are searching for and it is here and if
12:58 - I say for examp example refund and I
13:01 - start the program again we get true
13:04 - because our text contains word refund
13:08 - and it is here but if I say for example
13:13 - elephant and I start the
13:16 - program as you can see we get the result
13:19 - of false because our text does not
13:22 - contain word elephant and you can also
13:26 - have more than one word here you can
13:28 - have an entire search term so let's add
13:32 - some text here let's say for example
13:34 - this programming course will teach you
13:35 - to create innovate and solve real
13:37 - problems with code and it will help you
13:41 - to start a successful career okay so if
13:45 - I search for this part of the text so
13:48 - successful career those are two words
13:51 - and I start the program as you can see
13:53 - again we get true so you can put here as
13:56 - much or as little text as you want as
13:59 - long as this text contains whatever you
14:02 - put here you will get true and if it
14:05 - doesn't you will get false okay now
14:08 - there is another interesting method
14:10 - related to this that you can use and
14:12 - that is index off method so now I will
14:17 - start the program and here is the result
14:20 - that we will get now can you guess what
14:23 - is this number here what does this
14:26 - number represent pause the video think
14:28 - about it and then let me know what is
14:30 - the answer in the comment section and
14:33 - now I will explain it this number here
14:35 - is the index where this search term
14:39 - starts so what does that mean well this
14:42 - entire text is indexed so each character
14:45 - inside this text has its own index and
14:48 - those indexes start from zero so 0 1 2 3
14:53 - 4 five and so on so 167 is the index of
14:58 - the the first letter of this search term
15:01 - so letter s now because this is a bit
15:04 - too much to count let me show you on a
15:07 - smaller example and then you will
15:08 - understand better what index represents
15:12 - so if this text here is for example
15:15 - hello world like this and I am searching
15:19 - for the index of world if I start the
15:24 - program we get number six so H is zero
15:28 - and and then e is 1 and then 2 3 4 5 and
15:33 - then W is six so that is the index that
15:37 - we want because we are searching for
15:39 - this word here and please don't get
15:42 - confused by this empty space because it
15:45 - is also counted as character so once
15:47 - more 0 1 2 3 4 5 and then word starts at
15:53 - index 6 okay so when are these indexes
15:57 - useful they are very useful when you
16:00 - want to get a substring which means a
16:03 - smaller part of an existing string let
16:06 - me show you an example let's say that
16:08 - this text here is learn
16:13 - programming at and then this address
16:16 - here code Beauty
16:18 - academy.com okay so what I want is I
16:20 - want to get the index of this here so
16:25 - www if I start the program as you can
16:28 - see the index is 21 so that is where
16:32 - this address starts okay so now that I
16:36 - know that what I can do is I can use
16:38 - substring method so I can say please
16:42 - give me a substring of this text which
16:47 - substring well start at index 21 and
16:51 - then give me the next 25 letters and why
16:56 - 25 because I know that this address here
17:00 - has exactly 25 characters so if I start
17:04 - the program we will get this entire
17:07 - address okay so once more substring
17:11 - method is going to return us one part of
17:14 - this bigger string and it receives two
17:17 - parameters the first parameter is the
17:20 - index so where it should start and then
17:22 - the second parameter is how many
17:25 - characters it should take so here we are
17:28 - saying please start at the index of 21
17:32 - that is the index of this first W letter
17:35 - and then please take 25 characters so
17:39 - this entire address here has 25
17:41 - characters so that means that this line
17:44 - of code is going to print us this
17:47 - address okay so what are some other
17:50 - interesting methods that I can show you
17:52 - there are two interesting methods that
17:54 - you can use in order to check if a text
17:57 - starts with a certain string or if it
18:00 - ends with a certain string so let's say
18:03 - that the text is
18:07 - welcome and then let's say here you can
18:12 - learn C and then here I will put this
18:17 - exclamation mark at the end so what I
18:20 - want to do is I want to check if this
18:23 - text here for example starts with
18:25 - welcome how can I do that well I can
18:28 - simply say text Dot starts with and then
18:32 - here I will put the string that I want
18:35 - to check so I will put this word okay
18:39 - and I'm missing this closed parentheses
18:42 - so if I start the program as you can see
18:45 - we get true because this text starts
18:49 - with this word and then if I change it
18:52 - and put something else for example hello
18:55 - and I start the program as you can see
18:57 - now we get false and then the other
19:00 - method is used in order to check if this
19:03 - text ends with and then here I put
19:08 - whatever I want for example I want to
19:10 - put this exclamation mark So if I start
19:12 - the program we get the result of true
19:15 - and then if I put for example Dot and
19:19 - then I start the program we get the
19:21 - result of false because our text ends
19:24 - with exclamation mark okay now another
19:27 - Super useful thing that I I want to
19:29 - teach you is how you can replace one
19:31 - part of the text with something else so
19:34 - let's say for example that this text
19:36 - here says
19:39 - learncoding
19:40 - at
19:42 - google.com like this and then what I
19:45 - want to do is I want to replace this
19:47 - Google with code Beauty Academy so how
19:51 - can I do that it's actually very easy
19:53 - you simply say text. replace and this
19:58 - method receives two parameters the first
20:01 - parameter is what you want to replace
20:03 - for us that is Google and then the
20:07 - second parameter is what you want to
20:08 - replace it with and that would be code
20:12 - Beauty Academy okay so now if I start
20:16 - the program we get learn coding at and
20:19 - then as you can see the text was
20:21 - replaced so instead of google.com we
20:24 - have code Beauty academy.com and that is
20:27 - the best place to learn practical
20:29 - programming now another method that can
20:32 - be very handy sometimes and it is very
20:35 - short and simple is trim so how does
20:39 - trim work well let's say that here I
20:42 - have text that is starting with spaces
20:44 - and then I have Hello
20:47 - World and then I have some more spaces
20:51 - so if I want to get rid of these spaces
20:53 - at the end and then the spaces at the
20:55 - beginning what I can do is I can use
20:58 - trim method so I can simply say text.
21:02 - trim like this and if I start the
21:05 - program as you can see we don't have
21:06 - these leading and trailing spaces which
21:09 - means spaces at the beginning and spaces
21:11 - at the end of our text and then if I
21:14 - start the program without this trim
21:17 - method so I simply print the text as you
21:20 - can see our text will contain these
21:23 - spaces at the end and then spaces at the
21:26 - beginning okay now when can this trim
21:29 - option be useful as well it can be
21:31 - useful if you want to remove some other
21:34 - characters as well for example let's say
21:36 - that your text starts with these
21:38 - asterisk symbols these little stars and
21:42 - then at the end I will have some stars
21:44 - as well so how can I remove this symbol
21:47 - from my text well I can simply say text.
21:51 - trim and then inside these parentheses I
21:54 - will put single quotation marks and then
21:56 - inside these single quotation marks I
21:58 - will pass the character that I want to
22:01 - trim from my text and that will be this
22:04 - character here so now if I start the
22:07 - program as you can see this character
22:10 - was removed from the beginning and also
22:12 - from the end of my text okay so that is
22:16 - another interesting and useful method
22:18 - that you should know about because it
22:20 - can be handy sometimes in the future so
22:23 - you definitely should know about it okay
22:26 - and then the last method that I want to
22:28 - show show you today is how you can split
22:31 - the string by a certain separator so
22:34 - what does that mean well let's say that
22:37 - you have text that looks like this let's
22:39 - say apple and then comma sign and then
22:43 - banana and then comma sign again and
22:45 - then let's say orange okay and then
22:48 - let's say
22:51 - watermelon like this so let's say that
22:54 - for example I want to split this string
22:57 - based on this comma sign and I want to
23:00 - separate these fruits so that I have an
23:03 - array of fruits and each element of that
23:05 - array is one fruit so how can I do that
23:09 - well there is a simple method called
23:12 - split so what you can do is you can say
23:14 - for example text do split so please
23:18 - split this text and then here you are
23:20 - going to put inside these single
23:23 - quotation marks your separator so for us
23:26 - the separator is this comma sign so here
23:29 - I will put the comma sign and what is
23:32 - going to be the result of this split
23:34 - method is an array so let me create an
23:37 - array of strings so you simply say
23:40 - string array you use these square
23:43 - brackets in order to indicate that it is
23:46 - an array and I will call it
23:48 - fruits like this so please split this
23:53 - text and then store the result inside
23:55 - this array so now what I can do is I can
23:59 - iterate through this array I can say for
24:03 - each string fruit in this fruits array
24:08 - what I want to do is I want to Simply
24:11 - print that fruit so I will say console
24:14 - do right line and here I will print that
24:17 - fruit so now if I start the program as
24:20 - you can see we get each individual fruit
24:24 - as one element of our array so that
24:27 - means that this text here was split by
24:32 - this comma sign which is called
24:34 - separator and then if you have another
24:36 - separator in your text for example if
24:39 - this is your separator if this is a way
24:42 - for you to separate the elements inside
24:45 - this text then you can put that
24:47 - separator here and again the method is
24:51 - going to work just the same it is going
24:53 - to split this entire text based on this
24:58 - SE operator here that you have put as a
25:01 - parameter of your split method now this
25:04 - method is a bit more advanced when
25:06 - compared with the previous methods that
25:07 - I've demonstrated because if you're just
25:10 - a beginner and you don't know anything
25:12 - about arrays then it is going to be
25:14 - harder for you to understand this code
25:16 - so if you want to learn about arrays I
25:19 - will link that video here and I will
25:21 - also link it in the description so that
25:22 - you can watch it and once more I want to
25:25 - remind you that you can get my full
25:27 - practical programming course at this
25:30 - site here code Beauty
25:32 - academy.com and you can learn everything
25:35 - that you need in order to start working
25:37 - as a full-time software developer and if
25:39 - you decide to enroll make sure to use
25:41 - the discount code that I will leave in
25:43 - the description in order to save some
25:45 - money so thank you very much for
25:47 - watching if you have any questions
25:49 - related to this video or any other
25:51 - programming topic that you would like to
25:52 - see in the future on this channel leave
25:55 - those in the comment section and then if
25:56 - you enjoyed this video give it a big
25:58 - thumbs up so that I know to make more
26:00 - videos like this one in the future so
26:02 - thanks for watching and I will see you
26:04 - in another video bye

Cleaned transcript:

hi guys and welcome to my channel in this video I will teach you how to work with strings in C and some of the most important methods when it comes to working with strings as a developer you will very often need to work with strings in your career so this is very important topic and I recommend that you watch the entire video because in this video I will teach you everything that you need to know when it comes to working with strings so let's go straight to the point first thing that is important for you to know is how to compare two strings so let me show you how to do that on an example let's create a string variable let's call it Str Str one and here I will assign Value Salina that is my name okay and then let's create another string variable and let's say that it will be called Str str2 and here I will say code Beauty like this so what I want to do is I want to check if these two strings are equal so how can I do that well it's actually very easy and quite intuitive and you can compare strings using this operator so using equality operator so let's say console. right line and here I want to print the result if Str str1 is equal to Str str2 now the result of this operation here is going to be either true or false so one or zero depending if these two strings are equal or not so let's start the program and let's see what are we going to get as a result okay and you can see that the result is false because these two strings are not equal and then if I say for example code Beauty in both and then I start the program as you can see we will get true as the result so the same way that you can use this operator to check if these two strings are equal you can also use this operator to check if they are not equal so now if I start the program as you can see the result will be false because here I'm checking if string one is different from string two and as you can see they are equal so the result of this operation is going to be false okay so that is one way to compare strings and I want to show you another way that offers some additional options but before we go any further if you like my teaching style and if you like learning from my YouTube videos then I can definitely teach you a lot more in my practical programming course you can find it at this site here code Beauty academy.com and as the name itself implies it is extremely practical you will learn a lot you will practice even more and apply everything that you learn I will be there for all of your questions and help you to speed up your progress so that you can start your career as soon as possible a lot of students who enrolled in the course just three or four months ago have already started started their first job and I am very happy and very proud of that so why wouldn't you also be one of them and if you are still not sure if this course is for you or not there is a 7Day money back guarantee which means that you can get all of your money back if you don't like it for any reason now instead of coming up with excuses use the discount code that I will leave in the description and learn programming this time for real because it can truly transform your future so let's get back to the top topic and let me explain another way to compare strings so instead of saying is Str str1 equal to St str2 this way what you can do is you can use equals method so you can say Str str1 dot equals and then inside these parentheses you will put your second string so here I will put Str str2 so this is another way to compare strings and now if I start the program we should get the result result of true because these two strings are equal and then if I change this if I say for example Salina again and I start the program now we get the result of false okay so now the question is what is the difference between this approach and the approach that I've shown you previously and the answer is that this approach here using equals method offers some additional options for example what you can do is is you can say here that you will have another parameter so here you can say string comparison dot ordinal ignore case so this option here and what this option will do is it will treat equally both uppercase and lowercase letters so if I say code Beauty like this and I start the program these two strings are going to be equal so both this string here and this string here are equal if you are using this option and then without this option if you just start the program you will see that these two strings are different because lowercase letters and uppercase letters are not the same but what you can do in case that you want to completely ignore casing and case sensitivity is you can use this additional option in combination with equals method so now I can write this any way I want I can say for example code Duty like this and they will still be equal because capitalization is not important if you are using this option so now the question is when is this option useful it is useful when you are for example comparing email addresses or when you are even comparing usernames because those two are very often not case sensitive which means means that it doesn't matter if you are typing with uppercase or lowercase letters they both will be treated equally also when you're searching on YouTube or Google or any other social media platform very often this option is used in order to completely ignore the casing because both uppercase and lowercase letters will be treated equally the important part is just to give you the word or the search term that you are looking for so those are two ways to compare strings the first one was with the help of equality operator and then the second one is with the help of this equals method you can use whichever one you prefer now while we are at the topic of lower and uppercase letters there are also two interesting and simple functions that you should know the first one is two lower and the second one is two upper so if I say Str Str do to lower what this method is going to do is it will convert this string to lowercase so if I start the program as you can see the entire string is now in lowercase letters and then if I say to Upper this method is going to convert this string into uppercase letters so if I start the program as you can see now our sdr1 is all uppercase so those are two very simple but quite useful functions that you should know about so two lower and two upper so this can also be useful when you are comparing two strings and you just want to compare if the content of those two strings is the same and you want to ignore letter capitalization what you can do is you can convert both of those strings to let's say lowercase and then compare them so let me show you an example of that so if I say please check if Str Str 1 is equal to Str str2 what do you expect to get when I start the program let me know in the comment section okay as you can see the result is false because here it is taking in consideration the letter capitalization so what I can do is I can say please convert Str str1 to lower like this and then also convert Str str2 to lower like this and then compare them so if I start the program now what do you expect to get let me know in the comment section okay and as you can see now we get the result of true because before these two strings are compared they are both converted to lowercase and then they are compared so since their content is the same they are the same okay and then another useful method is converting numbers into Strings so I can say for example int number and here let's say 55 okay so in order to convert this number here into string I simply say number dot to string like this and here you will get this number in string format this can be very useful when you want to work with numerical data but in text format so what does that mean it means that for example if you want to perform different mathematical operations and calculations on this number then you should leave it in numerical data type so then it should be an integer or float or double decimal and so on but if you want to work with this number as part of a string then you can easily convert it into a string and then you can search through that string you can compare it with another string you can take a substring which means a part of that string and so on and that string can contain numbers of course and this method here is a way to convert a number into a string okay so now I have one trick question for you and that is the following if I say here number to string plus number to string okay so this is First Option and then the second option is this so number plus number what is going to be the result what is going to be the output of this line here and then this line here please pause the video and try to find the answer on your own and then write the answer in the comment section and then we are going to start the program together okay and as you can see the result is very different so we did not get the same result for this line here and then this line here so now the question is why and the answer is is very simple so this number here was converted into string format as well as this number here so that means when you try to sum these two it will simply concatenate them so we get the first number and then we get the second number and they are simply concatenated together because they were in string format and then in this second case number plus number they are in numeric data type so then they will be summed and we get the result of 55 + 55 which is 110 okay so let me know in the comment section if you get this answer right okay now let's talk about another interesting method let me show you how you can search for a specific term in text because that can be useful very often and it is very interesting to know so let me find some text and I will be back okay so here I have my website where you can learn practical programming now let's copy this text so that we have some text to use okay here I will create a string variable and I will call it text like this and then inside these quotation marks I will put all of this text so now what I want to do is I want to search for a specific term inside this text so how can we do that it's actually very easy you simply say text Dot contains okay so please check if this text here contains this word for example let's say practical so if I start the program it should tell me if this text contains this word so let's start the program and as you can see we get true because truly this text here contains the word that we are searching for and it is here and if I say for examp example refund and I start the program again we get true because our text contains word refund and it is here but if I say for example elephant and I start the program as you can see we get the result of false because our text does not contain word elephant and you can also have more than one word here you can have an entire search term so let's add some text here let's say for example this programming course will teach you to create innovate and solve real problems with code and it will help you to start a successful career okay so if I search for this part of the text so successful career those are two words and I start the program as you can see again we get true so you can put here as much or as little text as you want as long as this text contains whatever you put here you will get true and if it doesn't you will get false okay now there is another interesting method related to this that you can use and that is index off method so now I will start the program and here is the result that we will get now can you guess what is this number here what does this number represent pause the video think about it and then let me know what is the answer in the comment section and now I will explain it this number here is the index where this search term starts so what does that mean well this entire text is indexed so each character inside this text has its own index and those indexes start from zero so 0 1 2 3 4 five and so on so 167 is the index of the the first letter of this search term so letter s now because this is a bit too much to count let me show you on a smaller example and then you will understand better what index represents so if this text here is for example hello world like this and I am searching for the index of world if I start the program we get number six so H is zero and and then e is 1 and then 2 3 4 5 and then W is six so that is the index that we want because we are searching for this word here and please don't get confused by this empty space because it is also counted as character so once more 0 1 2 3 4 5 and then word starts at index 6 okay so when are these indexes useful they are very useful when you want to get a substring which means a smaller part of an existing string let me show you an example let's say that this text here is learn programming at and then this address here code Beauty academy.com okay so what I want is I want to get the index of this here so www if I start the program as you can see the index is 21 so that is where this address starts okay so now that I know that what I can do is I can use substring method so I can say please give me a substring of this text which substring well start at index 21 and then give me the next 25 letters and why 25 because I know that this address here has exactly 25 characters so if I start the program we will get this entire address okay so once more substring method is going to return us one part of this bigger string and it receives two parameters the first parameter is the index so where it should start and then the second parameter is how many characters it should take so here we are saying please start at the index of 21 that is the index of this first W letter and then please take 25 characters so this entire address here has 25 characters so that means that this line of code is going to print us this address okay so what are some other interesting methods that I can show you there are two interesting methods that you can use in order to check if a text starts with a certain string or if it ends with a certain string so let's say that the text is welcome and then let's say here you can learn C and then here I will put this exclamation mark at the end so what I want to do is I want to check if this text here for example starts with welcome how can I do that well I can simply say text Dot starts with and then here I will put the string that I want to check so I will put this word okay and I'm missing this closed parentheses so if I start the program as you can see we get true because this text starts with this word and then if I change it and put something else for example hello and I start the program as you can see now we get false and then the other method is used in order to check if this text ends with and then here I put whatever I want for example I want to put this exclamation mark So if I start the program we get the result of true and then if I put for example Dot and then I start the program we get the result of false because our text ends with exclamation mark okay now another Super useful thing that I I want to teach you is how you can replace one part of the text with something else so let's say for example that this text here says learncoding at google.com like this and then what I want to do is I want to replace this Google with code Beauty Academy so how can I do that it's actually very easy you simply say text. replace and this method receives two parameters the first parameter is what you want to replace for us that is Google and then the second parameter is what you want to replace it with and that would be code Beauty Academy okay so now if I start the program we get learn coding at and then as you can see the text was replaced so instead of google.com we have code Beauty academy.com and that is the best place to learn practical programming now another method that can be very handy sometimes and it is very short and simple is trim so how does trim work well let's say that here I have text that is starting with spaces and then I have Hello World and then I have some more spaces so if I want to get rid of these spaces at the end and then the spaces at the beginning what I can do is I can use trim method so I can simply say text. trim like this and if I start the program as you can see we don't have these leading and trailing spaces which means spaces at the beginning and spaces at the end of our text and then if I start the program without this trim method so I simply print the text as you can see our text will contain these spaces at the end and then spaces at the beginning okay now when can this trim option be useful as well it can be useful if you want to remove some other characters as well for example let's say that your text starts with these asterisk symbols these little stars and then at the end I will have some stars as well so how can I remove this symbol from my text well I can simply say text. trim and then inside these parentheses I will put single quotation marks and then inside these single quotation marks I will pass the character that I want to trim from my text and that will be this character here so now if I start the program as you can see this character was removed from the beginning and also from the end of my text okay so that is another interesting and useful method that you should know about because it can be handy sometimes in the future so you definitely should know about it okay and then the last method that I want to show show you today is how you can split the string by a certain separator so what does that mean well let's say that you have text that looks like this let's say apple and then comma sign and then banana and then comma sign again and then let's say orange okay and then let's say watermelon like this so let's say that for example I want to split this string based on this comma sign and I want to separate these fruits so that I have an array of fruits and each element of that array is one fruit so how can I do that well there is a simple method called split so what you can do is you can say for example text do split so please split this text and then here you are going to put inside these single quotation marks your separator so for us the separator is this comma sign so here I will put the comma sign and what is going to be the result of this split method is an array so let me create an array of strings so you simply say string array you use these square brackets in order to indicate that it is an array and I will call it fruits like this so please split this text and then store the result inside this array so now what I can do is I can iterate through this array I can say for each string fruit in this fruits array what I want to do is I want to Simply print that fruit so I will say console do right line and here I will print that fruit so now if I start the program as you can see we get each individual fruit as one element of our array so that means that this text here was split by this comma sign which is called separator and then if you have another separator in your text for example if this is your separator if this is a way for you to separate the elements inside this text then you can put that separator here and again the method is going to work just the same it is going to split this entire text based on this SE operator here that you have put as a parameter of your split method now this method is a bit more advanced when compared with the previous methods that I've demonstrated because if you're just a beginner and you don't know anything about arrays then it is going to be harder for you to understand this code so if you want to learn about arrays I will link that video here and I will also link it in the description so that you can watch it and once more I want to remind you that you can get my full practical programming course at this site here code Beauty academy.com and you can learn everything that you need in order to start working as a fulltime software developer and if you decide to enroll make sure to use the discount code that I will leave in the description in order to save some money so thank you very much for watching if you have any questions related to this video or any other programming topic that you would like to see in the future on this channel leave those in the comment section and then if you enjoyed this video give it a big thumbs up so that I know to make more videos like this one in the future so thanks for watching and I will see you in another video bye
