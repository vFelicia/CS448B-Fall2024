With timestamps:

00:00 - hi guys welcome to my channel in today's
00:03 - video I wanted to show you something
00:05 - that you are going to be using very
00:07 - often if you start on a programming path
00:09 - and that is if else statements so what
00:12 - is FL statement
00:14 - well if statement is something that is
00:16 - used when you want to execute part of
00:18 - your code so block of your code
00:20 - conditionally which means not always but
00:23 - only in a certain situation and then if
00:26 - you add else block to that that else
00:29 - block is going to be executed otherwise
00:32 - so in the situation where your F block
00:34 - is not executed your else is going to be
00:37 - executed so let me explain that to you
00:40 - in a simple example here I have opened
00:43 - my visual studio and let's quickly paste
00:46 - an exercise that we are going to do in
00:49 - this tutorial and that is this task here
00:53 - so let's say that our user has to enter
00:56 - a number a whole number integer number
00:59 - and then after that our program has to
01:01 - check whether that number is even or odd
01:04 - and has to write out that to our user so
01:07 - how we are going to solve this problem
01:09 - here well I'm going to explain this to
01:13 - you using diagrams because I believe
01:16 - that that is the best way for you to
01:18 - understand this if you haven't used this
01:19 - if-else statement before and then what
01:22 - we are going to do after we understand
01:24 - those diagrams well we are literally
01:26 - going to just translate that diagram
01:29 - into our C++ code so let me open my tool
01:32 - so here I have opened a tool that I'm
01:35 - going to be using for drawing diagrams
01:38 - it's called blank diagram you can use
01:40 - whatever tool you want you can use even
01:42 - a paint or a pen and paper if you want
01:44 - that will work as well so here I'm going
01:48 - to draw the flowchart of our program so
01:52 - how our program is going to be executed
01:54 - now let me add first here the shape and
02:00 - we are going to say that this is going
02:02 - to be the start of our program so I'm
02:03 - going to write out start and this
02:06 - indicates our main function let's say
02:09 - the first line of our main function so
02:11 - here our program start
02:13 - and then as we said in our task in our
02:16 - exercise our user has to enter an
02:19 - integer number and the shape that we are
02:22 - going to be using for that is this shape
02:24 - here so let me put this shape here and
02:28 - I'm going to write a text inside and I'm
02:32 - going to say int number so this shape
02:36 - here indicates that our user is going to
02:38 - enter some data in our program and what
02:41 - I'm using this shape because it looks
02:43 - like this it looks like a funnel so you
02:45 - can clearly visualize that something has
02:47 - to enter inside that shape so something
02:49 - has to be inputted in your program so
02:52 - I'm going to use this shape for that and
02:55 - then I'm going to say that our user has
02:58 - to enter an integer number which I'm
03:01 - going to call number so that variable
03:03 - I'm going to call number and what's
03:06 - quickly this arrow so that we know that
03:09 - this is the flow of our program so after
03:11 - it has started our user enters a number
03:14 - and then after that what we have to do
03:17 - is our program has to decide whether
03:19 - that number that user has entered is
03:21 - even number or odd number so how we are
03:24 - going to do that well the shape that I'm
03:27 - going to be using for that decision let
03:29 - me find it well it is this shape here so
03:33 - this diamond shape and as you can see it
03:36 - says decision on it so that's the shape
03:39 - that we are going to be using and inside
03:42 - this shape here I'm going to write a
03:44 - condition so as you can see our program
03:47 - flows this way and after it comes here
03:51 - as you can see it has one entry point
03:53 - and then it it can have multiple
03:56 - multiple flows that it can go to
03:59 - depending on this condition that we are
04:00 - going to put inside here but how we are
04:03 - going to decide whether that number that
04:05 - our user has entered is even or odd
04:08 - let me very quickly open my visual
04:10 - studio once more it is here and let me
04:15 - show you something I want to introduce
04:17 - you to an operator that is called modulo
04:20 - and that is used to show what is the
04:22 - remainder of dividing two whole numbers
04:24 - so I'm going to break out
04:26 - out and then what I'm going to write out
04:30 - is let's say 2 modulo 2 so this operator
04:37 - here gives you the remainder of dividing
04:40 - these two numbers and in this situation
04:43 - we are expecting to see a 0 because 2
04:46 - divided by 2 is 1 and then what remains
04:49 - after that operation is 0 and that what
04:51 - remains should be should be shown when
04:54 - we use this operator here so if I run my
04:57 - program you can see that we have gotten
04:59 - the expected result so we have gotten 0
05:02 - here but let me show you what happens if
05:06 - I enter for example 5 well what we are
05:10 - going to get is 1 because 5 divided by 2
05:13 - is going to be 2 and then that one that
05:16 - remains we can get using this operator
05:18 - and you see that it gives us the
05:21 - expected result so 5 modulo 2 is equal
05:24 - to 1 so this operator here is what we
05:30 - are going to be using to determine
05:31 - whether our user has entered even number
05:34 - or odd number because when we get the
05:36 - result of modulating two numbers when
05:39 - our result is 1 that means that our user
05:42 - has entered odd number and if we get 0
05:45 - as a result of this operation that means
05:48 - that our user has entered even number so
05:51 - I'm going to switch again to my diagram
05:53 - and then inside this decision here we
05:58 - are going to be writing we are going to
06:01 - write this condition here so I'm going
06:03 - to say number modulo 2 is equal to 0 so
06:10 - what this means it means that after a
06:12 - program has started and our user has
06:15 - entered the number that he wants an
06:18 - integer number we are coming to a
06:20 - decision point where we have to decide
06:22 - whether this number that he has entered
06:25 - after you modulate it with 0 whether
06:27 - it's a 0 remainder or some other
06:30 - remainder so in this situation when this
06:33 - is 0 we are going to execute a certain
06:35 - part of code and then let me add very
06:38 - quickly oh I'm impressed it already has
06:41 - this yes
06:42 - inside it and then we also have the snow
06:45 - on this on your line so in this
06:48 - situation where this results as the
06:50 - operation that is true we are going to
06:53 - execute this part code here so I'm going
06:57 - to add another shape which I cannot see
06:59 - but let me use this shape once more and
07:03 - I'm only going to rotate this shape like
07:06 - this and I'm going to delete this text
07:09 - and what we are going to be using this
07:11 - shape here for is to indicate that we
07:14 - are going to output something from our
07:16 - program so it looks like this which is
07:19 - clearly a visual of something is going
07:21 - to be outputted from it so it is just
07:23 - reverse of death shape here this funnel
07:26 - shape and then inside this shape let me
07:32 - write a text which is going to be let's
07:36 - say that in the case that this here
07:39 - results as a yes as a true operation so
07:43 - our number when it's modulated by 2 it
07:45 - gives a 0 remainder we are going to say
07:48 - that that number is even number so we
07:52 - are going to write that out to our user
07:54 - and then and the situation where this
07:58 - here results as a no so as the operation
08:01 - that is false let me write out that here
08:06 - and I'm going to say to our user so I'm
08:10 - going to write out my user that he has
08:12 - entered odd number and let's just join
08:16 - this here like this okay so our user
08:22 - enters a number then we decide if that
08:25 - number modulated by 2 gives us 0 and if
08:28 - yes we are going to write out our user
08:31 - that that is an even number if no we are
08:35 - going to write out our user that that
08:37 - number is odd number and this is here
08:40 - really our program what I'm going to add
08:42 - is let's say that after this our program
08:46 - is going to stop so I'm going to say
08:49 - here that this is the end
08:51 - my program like this and let's add one
08:55 - more stop of this flow here so in both
09:00 - of these situations after we have and
09:02 - after we have output it to our user the
09:05 - result of this program our program is
09:07 - going to stop and this here really like
09:10 - these two stop points look a bit ugly to
09:13 - me so what I'm going to do instead of
09:15 - this I'm going to delete this you could
09:18 - have as well left it like that like like
09:21 - it was before but what I'm going to add
09:23 - I'm going to add one more of these
09:25 - diamond shapes only this time is going
09:28 - to be smaller and I'm going to say that
09:31 - in this situation it is going to be used
09:33 - only to say that this decision here this
09:37 - this decision flow is going to be joined
09:39 - in this point here so like this I'm
09:43 - going to say whatever has happened
09:46 - whether this block of code or this block
09:49 - of code it has come to an end here and
09:51 - then after that from here I'm going to
09:54 - say now my program is going to stop like
10:00 - this and this let me remove this yes and
10:04 - this is going to be the flowchart of our
10:08 - program so our program starts that our
10:11 - user enters integer number then we
10:14 - decide whether that number modulated by
10:16 - 2 is going to give us 0 if yes we
10:18 - execute this else we execute this so if
10:23 - this is no and then we come to this
10:26 - which joints are a 2 but and then we can
10:29 - say that our program has ended and now
10:32 - let's translate this to our code here I
10:35 - have opened both my visual studio and
10:37 - also I have exported this diagram so
10:41 - that we can translate it literally we
10:43 - can look at this diagram and then
10:44 - translate that into code so now I'm
10:47 - going to delete all of this that we have
10:49 - written inside our visual studio and I'm
10:52 - going to look at this picture and just
10:54 - translate it into C++ commands so the
10:57 - first this first shape here says that
11:00 - user is going to enter integer number
11:03 - inside our program and we are
11:04 - to call that variable a number so I'm
11:07 - going to say int number and then this
11:13 - here this funnel shape really translates
11:16 - into C in command so user enters
11:20 - something inside our program and let us
11:22 - see in command and I'm going to say that
11:24 - user is going to enter a number before
11:28 - this I would like to add one more
11:30 - information to our user so that he knows
11:32 - what he should enter you could have as
11:34 - well put that to our diagram but I
11:37 - didn't want it to make that diagram
11:38 - crowded so I didn't but what we are
11:41 - going to add here is C out and then say
11:45 - please enter whole number like this so
11:54 - we write out the message our user and
11:56 - after that our user as you can see here
11:59 - enters integer number
12:01 - we had also to declare this int number
12:04 - variable because you can enter the value
12:06 - only for variables that you have
12:07 - previously declared and then after that
12:10 - our program comes to this decision point
12:13 - and how we can represent this decision
12:16 - inside our code is using if statement so
12:20 - we are going to write here F and then
12:24 - I'm going to put this condition here
12:27 - inside these parentheses so I'm going to
12:30 - say if number modulo two equals zero
12:37 - this here is operator of equals so
12:42 - whether this side is equal to this side
12:44 - since only one of these so like this
12:48 - this operator here is used to assign
12:50 - value to a variable so that was already
12:53 - taken so this here two of these signs
12:57 - are used to check equality of these two
13:00 - sides so whether this is equal to this
13:02 - and then what I'm going to say as you
13:05 - can see from my diagram here we check
13:07 - this condition here and if this
13:09 - condition is true if this condition is
13:11 - yes we are going to execute a certain
13:14 - block of code
13:15 - and that is this code here and how you
13:17 - indicate a block of code in your C++ is
13:19 - using these phrases here like this so
13:23 - this is your block of code that is going
13:25 - to be executed in this yes situation and
13:28 - then in case that this no here happens
13:32 - so in case that this results as false
13:34 - you are going to execute another block
13:37 - of code and we represent that block of
13:39 - code using else statement so we are
13:43 - going to say if this here is true
13:46 - execute one block of code else if this
13:50 - here is false execute another block of
13:53 - code so here what are if makes us do
13:58 - well it says that we only have to write
14:00 - out our user that he has entered even
14:03 - number because this shape here as you
14:05 - can see it looks like this and it
14:06 - represents that something should be
14:08 - outputted from your program so we are
14:11 - going to use for that our C out command
14:14 - so C out you have entered even number so
14:25 - like this and let's add a line so in
14:31 - case that this here result is true we
14:33 - are going to output to our user that he
14:35 - has entered even number else if this
14:38 - here results as false we are going to
14:41 - output to our user let me copy this like
14:45 - this and we are going to change that
14:47 - only to odd so in case that this here
14:50 - results as false we are going to output
14:52 - you have entered odd number so either
14:56 - this here is going to be executed or it
14:58 - does here depending on this condition
15:01 - and you can see that from diarrheal the
15:03 - diagram clearly so when your program
15:04 - comes to this decision point it checks
15:07 - this condition and if the answer is true
15:10 - or yes it is going to execute this else
15:14 - if the answer is no it is going to
15:16 - execute this and then after that it
15:19 - really just joins these two flows and
15:22 - then that s D that is the stop point of
15:26 - your program so we can write here C
15:28 - out thanks bye okay let's say that that
15:34 - is the last line of our program you
15:38 - don't I haven't put this on on my
15:40 - diagram right okay so I'm going to run
15:44 - my program now and as you can see it
15:49 - says please enter a whole number so this
15:52 - line here and if I enter for example
15:55 - eight it is going to come to this line
15:58 - here and it is going to modulate our
16:02 - eight with two and if the result is zero
16:07 - which it is it is going to execute this
16:09 - line here and right out you have entered
16:12 - even number oh thanks
16:15 - we are missing an S here and then it
16:18 - writes out thanks bye
16:20 - and let me add an S here okay and if I
16:24 - run my program again as you can see it
16:27 - asked me asks me again to enter a number
16:30 - and this time I'm going to enter five
16:32 - which we know that is an odd number it
16:35 - says you have entered an odd number
16:37 - because it has come to this decision
16:39 - point here it has tried to modulate five
16:42 - with two and the result of that was not
16:44 - zero
16:45 - so it has not executed this but it has
16:48 - executed this else statement and it has
16:51 - written you have entered odd number as
16:54 - you can see here and then this thanks
16:56 - bye okay so I hope that you have
17:01 - understood this and if you like me to
17:03 - use these diagrams to explain some more
17:07 - code that we are going to be using you
17:10 - can write that in a comments down below
17:11 - and I'm going to try to use more of
17:14 - these diagrams because I know that some
17:15 - people understand it better when there
17:17 - is a visual representation of your code
17:19 - I was one of those people when I first
17:21 - started learning programming so if you
17:23 - find it easier to understand when I use
17:25 - these diagrams I'm going to be using
17:27 - that so thanks for watching this video
17:30 - make sure to like it if you find it any
17:32 - helpful and also to subscribe to my
17:34 - channel and I'm going to see you in my
17:36 - next video

Cleaned transcript:

hi guys welcome to my channel in today's video I wanted to show you something that you are going to be using very often if you start on a programming path and that is if else statements so what is FL statement well if statement is something that is used when you want to execute part of your code so block of your code conditionally which means not always but only in a certain situation and then if you add else block to that that else block is going to be executed otherwise so in the situation where your F block is not executed your else is going to be executed so let me explain that to you in a simple example here I have opened my visual studio and let's quickly paste an exercise that we are going to do in this tutorial and that is this task here so let's say that our user has to enter a number a whole number integer number and then after that our program has to check whether that number is even or odd and has to write out that to our user so how we are going to solve this problem here well I'm going to explain this to you using diagrams because I believe that that is the best way for you to understand this if you haven't used this ifelse statement before and then what we are going to do after we understand those diagrams well we are literally going to just translate that diagram into our C++ code so let me open my tool so here I have opened a tool that I'm going to be using for drawing diagrams it's called blank diagram you can use whatever tool you want you can use even a paint or a pen and paper if you want that will work as well so here I'm going to draw the flowchart of our program so how our program is going to be executed now let me add first here the shape and we are going to say that this is going to be the start of our program so I'm going to write out start and this indicates our main function let's say the first line of our main function so here our program start and then as we said in our task in our exercise our user has to enter an integer number and the shape that we are going to be using for that is this shape here so let me put this shape here and I'm going to write a text inside and I'm going to say int number so this shape here indicates that our user is going to enter some data in our program and what I'm using this shape because it looks like this it looks like a funnel so you can clearly visualize that something has to enter inside that shape so something has to be inputted in your program so I'm going to use this shape for that and then I'm going to say that our user has to enter an integer number which I'm going to call number so that variable I'm going to call number and what's quickly this arrow so that we know that this is the flow of our program so after it has started our user enters a number and then after that what we have to do is our program has to decide whether that number that user has entered is even number or odd number so how we are going to do that well the shape that I'm going to be using for that decision let me find it well it is this shape here so this diamond shape and as you can see it says decision on it so that's the shape that we are going to be using and inside this shape here I'm going to write a condition so as you can see our program flows this way and after it comes here as you can see it has one entry point and then it it can have multiple multiple flows that it can go to depending on this condition that we are going to put inside here but how we are going to decide whether that number that our user has entered is even or odd let me very quickly open my visual studio once more it is here and let me show you something I want to introduce you to an operator that is called modulo and that is used to show what is the remainder of dividing two whole numbers so I'm going to break out out and then what I'm going to write out is let's say 2 modulo 2 so this operator here gives you the remainder of dividing these two numbers and in this situation we are expecting to see a 0 because 2 divided by 2 is 1 and then what remains after that operation is 0 and that what remains should be should be shown when we use this operator here so if I run my program you can see that we have gotten the expected result so we have gotten 0 here but let me show you what happens if I enter for example 5 well what we are going to get is 1 because 5 divided by 2 is going to be 2 and then that one that remains we can get using this operator and you see that it gives us the expected result so 5 modulo 2 is equal to 1 so this operator here is what we are going to be using to determine whether our user has entered even number or odd number because when we get the result of modulating two numbers when our result is 1 that means that our user has entered odd number and if we get 0 as a result of this operation that means that our user has entered even number so I'm going to switch again to my diagram and then inside this decision here we are going to be writing we are going to write this condition here so I'm going to say number modulo 2 is equal to 0 so what this means it means that after a program has started and our user has entered the number that he wants an integer number we are coming to a decision point where we have to decide whether this number that he has entered after you modulate it with 0 whether it's a 0 remainder or some other remainder so in this situation when this is 0 we are going to execute a certain part of code and then let me add very quickly oh I'm impressed it already has this yes inside it and then we also have the snow on this on your line so in this situation where this results as the operation that is true we are going to execute this part code here so I'm going to add another shape which I cannot see but let me use this shape once more and I'm only going to rotate this shape like this and I'm going to delete this text and what we are going to be using this shape here for is to indicate that we are going to output something from our program so it looks like this which is clearly a visual of something is going to be outputted from it so it is just reverse of death shape here this funnel shape and then inside this shape let me write a text which is going to be let's say that in the case that this here results as a yes as a true operation so our number when it's modulated by 2 it gives a 0 remainder we are going to say that that number is even number so we are going to write that out to our user and then and the situation where this here results as a no so as the operation that is false let me write out that here and I'm going to say to our user so I'm going to write out my user that he has entered odd number and let's just join this here like this okay so our user enters a number then we decide if that number modulated by 2 gives us 0 and if yes we are going to write out our user that that is an even number if no we are going to write out our user that that number is odd number and this is here really our program what I'm going to add is let's say that after this our program is going to stop so I'm going to say here that this is the end my program like this and let's add one more stop of this flow here so in both of these situations after we have and after we have output it to our user the result of this program our program is going to stop and this here really like these two stop points look a bit ugly to me so what I'm going to do instead of this I'm going to delete this you could have as well left it like that like like it was before but what I'm going to add I'm going to add one more of these diamond shapes only this time is going to be smaller and I'm going to say that in this situation it is going to be used only to say that this decision here this this decision flow is going to be joined in this point here so like this I'm going to say whatever has happened whether this block of code or this block of code it has come to an end here and then after that from here I'm going to say now my program is going to stop like this and this let me remove this yes and this is going to be the flowchart of our program so our program starts that our user enters integer number then we decide whether that number modulated by 2 is going to give us 0 if yes we execute this else we execute this so if this is no and then we come to this which joints are a 2 but and then we can say that our program has ended and now let's translate this to our code here I have opened both my visual studio and also I have exported this diagram so that we can translate it literally we can look at this diagram and then translate that into code so now I'm going to delete all of this that we have written inside our visual studio and I'm going to look at this picture and just translate it into C++ commands so the first this first shape here says that user is going to enter integer number inside our program and we are to call that variable a number so I'm going to say int number and then this here this funnel shape really translates into C in command so user enters something inside our program and let us see in command and I'm going to say that user is going to enter a number before this I would like to add one more information to our user so that he knows what he should enter you could have as well put that to our diagram but I didn't want it to make that diagram crowded so I didn't but what we are going to add here is C out and then say please enter whole number like this so we write out the message our user and after that our user as you can see here enters integer number we had also to declare this int number variable because you can enter the value only for variables that you have previously declared and then after that our program comes to this decision point and how we can represent this decision inside our code is using if statement so we are going to write here F and then I'm going to put this condition here inside these parentheses so I'm going to say if number modulo two equals zero this here is operator of equals so whether this side is equal to this side since only one of these so like this this operator here is used to assign value to a variable so that was already taken so this here two of these signs are used to check equality of these two sides so whether this is equal to this and then what I'm going to say as you can see from my diagram here we check this condition here and if this condition is true if this condition is yes we are going to execute a certain block of code and that is this code here and how you indicate a block of code in your C++ is using these phrases here like this so this is your block of code that is going to be executed in this yes situation and then in case that this no here happens so in case that this results as false you are going to execute another block of code and we represent that block of code using else statement so we are going to say if this here is true execute one block of code else if this here is false execute another block of code so here what are if makes us do well it says that we only have to write out our user that he has entered even number because this shape here as you can see it looks like this and it represents that something should be outputted from your program so we are going to use for that our C out command so C out you have entered even number so like this and let's add a line so in case that this here result is true we are going to output to our user that he has entered even number else if this here results as false we are going to output to our user let me copy this like this and we are going to change that only to odd so in case that this here results as false we are going to output you have entered odd number so either this here is going to be executed or it does here depending on this condition and you can see that from diarrheal the diagram clearly so when your program comes to this decision point it checks this condition and if the answer is true or yes it is going to execute this else if the answer is no it is going to execute this and then after that it really just joins these two flows and then that s D that is the stop point of your program so we can write here C out thanks bye okay let's say that that is the last line of our program you don't I haven't put this on on my diagram right okay so I'm going to run my program now and as you can see it says please enter a whole number so this line here and if I enter for example eight it is going to come to this line here and it is going to modulate our eight with two and if the result is zero which it is it is going to execute this line here and right out you have entered even number oh thanks we are missing an S here and then it writes out thanks bye and let me add an S here okay and if I run my program again as you can see it asked me asks me again to enter a number and this time I'm going to enter five which we know that is an odd number it says you have entered an odd number because it has come to this decision point here it has tried to modulate five with two and the result of that was not zero so it has not executed this but it has executed this else statement and it has written you have entered odd number as you can see here and then this thanks bye okay so I hope that you have understood this and if you like me to use these diagrams to explain some more code that we are going to be using you can write that in a comments down below and I'm going to try to use more of these diagrams because I know that some people understand it better when there is a visual representation of your code I was one of those people when I first started learning programming so if you find it easier to understand when I use these diagrams I'm going to be using that so thanks for watching this video make sure to like it if you find it any helpful and also to subscribe to my channel and I'm going to see you in my next video
