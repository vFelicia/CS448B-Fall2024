With timestamps:

00:00 - hi guys and welcome to my channel in
00:02 - this video i want to talk about
00:04 - enumerations or enums so
00:06 - let's get straight to the point so what
00:09 - is an enumeration you can understand
00:12 - enumeration as a special data type that
00:15 - consists of two parts
00:17 - an integer value and then a name that is
00:20 - used in order to describe that integer
00:22 - value so there are situations in real
00:25 - life where we use e-nouns without even
00:27 - being aware of it for example when you
00:30 - are ordering a lunch so you go to the
00:32 - food ordering machine and let's say that
00:34 - you see three options number one is
00:37 - pizza and then number two is burgers and
00:39 - then number three is pasta so that is an
00:42 - example where each number has a word in
00:45 - order to describe it so that you
00:47 - understand
00:48 - what is each option so the reason why
00:50 - enums exist is to make programmer's life
00:53 - easier because computers don't have any
00:55 - problem with remembering numbers but for
00:58 - us humans it is much easier to remember
01:01 - words that have meaning so the example
01:04 - that i gave where you have only three
01:06 - dishes it's kind of easy to remember
01:08 - when it's only three what each number
01:10 - represents but if you had an entire
01:13 - restaurant's menu with over 100 dishes
01:16 - then it would be very hard to remember
01:19 - which number represents which dish so
01:22 - that is the reason why enums were
01:25 - created in programming so that you can
01:27 - store something as an integer you can
01:29 - treat it as an integer in your program
01:32 - but again you have that word to describe
01:35 - what that integer means so now i'm going
01:38 - to show you how to create enum and how
01:40 - to work with enums in c plus but before
01:43 - i start writing the code i want to show
01:45 - you the extension that i'll be using in
01:46 - this video it is visual studio extension
01:49 - called visual assist and
01:51 - i often get questions related to how i
01:54 - write code how i avoid errors and what
01:56 - are some good extensions and
01:57 - productivity tools to use with visual
01:59 - studio so the one that i like is called
02:02 - visual assist and it is a great
02:05 - productivity tool that helps you with
02:07 - writing code reading code refactoring
02:10 - navigation and you can also use it to
02:12 - generate c plus code and also c and c
02:15 - sharp code so basically it improves
02:18 - visual studio experience by quickly
02:20 - identifying and fixing errors in your
02:22 - code and many senior developers use it
02:25 - and it also has great support for unreal
02:28 - engine so if your plan is to make games
02:30 - then you should definitely try it out
02:32 - and i'm going to leave a link that you
02:34 - can use to download it in the
02:35 - description
02:36 - and then if you want to see how to
02:38 - install it and learn about some very
02:40 - cool features that i like about visual
02:42 - assist i'm going to link a video in the
02:44 - upper right corner and i'll also link it
02:46 - in the description so that you can check
02:48 - it out and now i'm going to show you how
02:50 - you can create enums and work with enums
02:53 - in order to create an enumeration you
02:55 - say
02:56 - enum and then you give it a name let's
02:59 - say
03:00 - i color
03:01 - and then you need to put curly brackets
03:04 - like this and at the end you need
03:06 - semicolon so with this you have created
03:09 - an enumeration called eye color and it
03:11 - is empty for now so inside these curly
03:14 - brackets i am going to put the members
03:17 - for this enum and the members are going
03:20 - to be all the eye colors that i know off
03:22 - so let's say
03:24 - brown
03:26 - and then let's say
03:28 - blue
03:30 - and then green
03:32 - gray
03:34 - um and then heterochromia i believe that
03:36 - is when the eyes have different color
03:40 - like this and then let's say
03:42 - other for
03:43 - other eye colors
03:45 - okay so with this you have created an
03:47 - innovation called eye color and here are
03:50 - all of the eye colors that this
03:52 - enumeration contains so now your
03:54 - question might be
03:56 - salvina you said that each word
03:59 - represents
04:00 - a number so where are those numbers what
04:03 - number is for example this brown color
04:06 - so
04:07 - let's write a program that is going to
04:10 - give us the answer to that question so
04:12 - what i want to do is i want to create a
04:14 - variable that will be of this enum type
04:18 - so it will be of type i color and then i
04:21 - want to assign a specific value so some
04:23 - of these values to that variable and
04:26 - then we will print that variable in
04:27 - order to see which number or what we are
04:31 - going to get
04:32 - so let's do that
04:34 - here inside my main function i'm going
04:36 - to say
04:37 - eye color
04:38 - and i will create
04:41 - a variable called my eye color okay
04:45 - and here i will say that
04:47 - eye color will be brown because that is
04:50 - my eye color okay so if i say see out my
04:55 - eye color
04:57 - what do you expect to get if i run the
04:59 - program please pause the video and write
05:01 - your answer in the comments before i
05:02 - start this program so if i run this
05:05 - program you can see that we get the
05:07 - value of
05:08 - 0 so i wasn't flying after all
05:12 - and indeed these eye colors
05:15 - these eye colors here are represented as
05:17 - numbers and the numbers have been
05:20 - assigned by default so they start with
05:23 - zero the first member of your
05:25 - enumeration has the value of zero and
05:27 - then they increment by one which means
05:29 - that blue is one green is two gray is
05:33 - three and then four and five so those
05:37 - are default values that are assigned to
05:40 - the members of enumerations and then you
05:42 - can also assign your own values so how
05:46 - do you do that well
05:47 - you just say let's say blue is going to
05:50 - be equal to
05:51 - 5 and then this means that all the
05:53 - members after this value that we have
05:55 - changed are going to change as well so
05:58 - now green is going to be 5 plus 1 which
06:01 - is 6 and then gray is going to be
06:04 - seven
06:06 - eight and then nine and this one will be
06:09 - unchanged so if i run my program again
06:12 - you can see that brown is still zero
06:16 - but if i change this to
06:18 - other for example
06:21 - and if i run my program again
06:24 - you can see that we get the value of
06:26 - nine so blue is five this is six seven
06:30 - eight and there is your answer y other
06:33 - eye color so every other eye color will
06:36 - have the value of 9 okay so for the rest
06:39 - of this video i want to delete this
06:42 - value of 5 for blue and i want to assign
06:45 - the value of 1 to brown and by doing
06:48 - that you have assigned the value of 2 to
06:51 - blue and then 3 to green 4
06:53 - 5 and 6 to this member and you can also
06:57 - explicitly say 2
06:59 - and then
07:00 - three and so on but again you don't have
07:03 - to because those values are going to be
07:05 - assigned by default when you assign the
07:07 - value of one to brown
07:10 - quick digression uh if you watch the
07:12 - video until this part i'm very curious
07:14 - to know what is your eye color so let me
07:17 - know in the comments but don't write the
07:19 - word write the number instead and the
07:21 - reason is because
07:22 - it's kind of funny for me to read the
07:25 - comments of people who don't watch the
07:27 - entire video and how they get confused
07:29 - with the comment section sometimes
07:31 - and the reason why i'm okay with
07:33 - trolling this way is because
07:35 - i make these videos for people who
07:37 - really want to learn programming and who
07:39 - really want to understand a certain
07:41 - concept and remember how to apply it
07:44 - later instead of making a video for
07:46 - someone who just wants to
07:48 - write a quick answer for his homework
07:50 - and then completely forget about it in
07:52 - five minutes
07:53 - so
07:54 - you have my permission to troll in the
07:57 - comment section as well just don't be
07:59 - rude and another reason why i asked you
08:01 - to comment your eye color in the format
08:03 - of number rather than a string is
08:06 - because of the following
08:07 - when you ask the user to input his eye
08:10 - color he is also going to enter a number
08:14 - so whatever user is entering a value for
08:17 - enum he inputs an integer and then later
08:20 - you need to convert or cast that integer
08:24 - into your enum type so let me show you
08:27 - how to do that on an example so what i
08:29 - want to do is i want to get a number
08:31 - from my user so i want to ask him hey
08:34 - what is your eye color and then he will
08:36 - input a number between 1 and 6 and then
08:39 - i will convert that number into this
08:42 - enum type
08:44 - so let's delete this code and i will
08:47 - create a variable of type int i will
08:50 - call it user
08:52 - input
08:53 - and then i will say c in
08:56 - user
08:58 - input like this so the user will enter
09:01 - an integer that is going to be his eye
09:04 - color an integer between 1 and 6
09:07 - and then i need to cast or convert that
09:10 - integer into this enum type so let's
09:13 - create a variable of type
09:15 - eye color let's call it my
09:18 - eye color i'm going to delete
09:20 - this and then the value that i want to
09:23 - assign to this variable will be this
09:26 - integer here so i will say
09:28 - my eye color will be equal to
09:32 - user input but if i try to do this
09:35 - directly we will get an error
09:38 - um
09:39 - let's check that error here
09:42 - okay
09:43 - and the error says a value of type in
09:47 - cannot be assigned to an entity of type
09:49 - eye color so you cannot do this directly
09:52 - what you have to do instead is you need
09:54 - to
09:55 - convert
09:56 - or cast this
09:58 - integer into this eye color enum and
10:02 - then you can assign this
10:04 - to my eye color variable so now i'm
10:07 - going to very quickly pause this video
10:09 - and add a short description for every
10:12 - eye color that we have here
10:14 - and then i will be back to explain the
10:15 - code that i added so here i added a
10:18 - switch case and if you are not familiar
10:21 - with what switch case is i'm going to
10:23 - link a video in the upper right corner
10:25 - and i'll also link it in the description
10:27 - so that you can watch it and learn
10:29 - everything that you need to know about
10:30 - switch case so basically what i'm doing
10:34 - here is i say
10:36 - please check what value is stored inside
10:39 - my eye color variable
10:41 - and in case that it is brown you need to
10:44 - print this text in case that it is blue
10:47 - you need to print this text and then for
10:50 - green you need to print this
10:52 - and then gray heterochromia and other
10:56 - and then at the end of each case please
10:59 - don't forget to put break statement
11:01 - because if you don't you can get an
11:04 - error and again if you want to learn
11:05 - about errors that can happen in this
11:07 - situation please watch the video that
11:09 - will be linked in the description
11:11 - related to switch case so basically this
11:13 - is how you use enumerations with switch
11:15 - case and that is one of the most common
11:17 - uses and the most common examples where
11:20 - you are going to see enumerations
11:23 - so
11:24 - now if i run this program the following
11:26 - is going to happen our user first needs
11:29 - to input his eye color number and then
11:32 - we are going to cast that eye color into
11:35 - this enum type and then i will use that
11:39 - my eye color enum variable in order to
11:43 - switch on it and i will determine which
11:45 - one of these cases it is and i will
11:48 - print adequate text for that eye color
11:52 - so let's run the program and here we
11:55 - should enter a number so i will say one
11:58 - and if i press enter we are going to get
12:01 - this text here which says that 70 of the
12:04 - population has brown eyes making it the
12:06 - most common eye color worldwide
12:08 - scientists believe that everyone on
12:10 - earth had brown eyes around 10 000 years
12:12 - ago and people with brown eyes are less
12:15 - likely to develop eye cancer macular
12:18 - degeneration and diabetic retinopathy
12:21 - than those with lighter colored eyes
12:24 - okay that's great to know uh being a
12:27 - person with brown eyes myself
12:29 - and if you have some other eye color you
12:31 - can input another number and you will
12:34 - get a description for your eye color and
12:37 - i will also paste all of this code in
12:39 - the
12:40 - comment i'll pin it in the comments
12:42 - which you can use it if you want
12:44 - an important thing to keep in mind is
12:46 - that there are certain scenarios where
12:48 - you can reproduce a bug in this program
12:51 - and that would be
12:53 - if the user doesn't input a number
12:55 - between 1 and 6 in this line here so if
12:59 - the user inputs a number that doesn't
13:01 - exist inside this eye color enumeration
13:04 - you would have a bug so how can you
13:06 - prevent that bug from happening how can
13:09 - you fix it well there are two ways to do
13:12 - that the first one is to use a loop so
13:15 - that you can force your user to enter
13:17 - the number again and again and again
13:20 - until he inputs a number that exists
13:23 - inside this eye color enumeration so a
13:26 - number between one and six that would be
13:28 - the first way and the second way to
13:31 - handle the error if it happens is to use
13:33 - something called try catch which is used
13:36 - to handle exceptions and errors in your
13:38 - code and i will link both of those
13:40 - videos in the description so that you
13:42 - can watch it and figure out how to fix
13:45 - this
13:46 - bug that we have here i'm going to leave
13:48 - that for homework to you and if you
13:50 - manage to fix it uh please put it in the
13:53 - comment section so that other people can
13:55 - use it as well and so that i can review
13:57 - it okay so that is a bug that can happen
14:00 - in this program and those are two ways
14:02 - how to fix that bug and one final thing
14:05 - that i want to show you because it is
14:06 - used very often and because you will see
14:08 - it very often in programming
14:10 - is how to iterate through the members of
14:14 - an enumeration so in order to do that i
14:17 - will use for loop
14:19 - and i will delete this code here we
14:22 - don't need it anymore i will just keep
14:24 - this switch case
14:26 - okay so in order to iterate through an
14:29 - enumeration you use for loop
14:32 - like this and inside this for loop i
14:35 - will declare a variable of type int i
14:38 - will call it my i so the same name here
14:41 - my eye color i have it here
14:44 - and i will initially assign it the value
14:47 - of
14:47 - brown because that is the first eye
14:50 - color that i have inside my enumeration
14:53 - and then i will say
14:55 - my eye color
14:57 - is different than
14:59 - other
15:00 - and i will say
15:02 - my eye color plus plus like this
15:06 - and inside these curly brackets of my
15:09 - for loop i will put this switch case
15:11 - i'll actually just move this curly
15:13 - bracket at the end of switch case like
15:17 - this
15:18 - okay and with this we are going to
15:20 - iterate through every single eye color
15:23 - we will check which eye color is in the
15:25 - current iteration and we will print the
15:28 - description for that eye color and
15:30 - another thing that i want to do at the
15:32 - end is i want to print two end lines
15:35 - like this so that our text is formatted
15:38 - nicely so let's see what we have
15:40 - achieved by using this for loop in order
15:43 - to iterate through the members of an
15:44 - enumeration and then putting this switch
15:46 - case inside for loop so if i run the
15:49 - program
15:51 - okay
15:53 - we get the description for every single
15:56 - eye color that we have
15:58 - in our program
16:00 - okay
16:00 - and one very important thing to keep in
16:02 - mind is that if you are going to iterate
16:05 - through your enumeration like this so
16:07 - that in each iteration
16:09 - you increment
16:11 - the enum by one
16:13 - then these also have to be incremented
16:17 - by one so one two three four five six
16:21 - and so on so you cannot all of a sudden
16:24 - have 22 here for example because then
16:27 - you will get a bug so if i try to run
16:30 - the program now
16:32 - let's just close this
16:34 - okay
16:35 - and now if i scroll you can see that
16:37 - here we have the value for brown eyes
16:40 - and then here we have green eyes blue
16:42 - eyes are missing here because we changed
16:46 - the value to 22 here and that completely
16:48 - changed the behavior of our program so
16:51 - the general recommendation is to leave
16:53 - default values here or to have them
16:55 - increment by one like this if you are
16:59 - going to iterate through the members of
17:01 - your enumeration like this
17:06 - another very important thing that i
17:08 - would like to show you is how to use
17:10 - enumerations with functions and this is
17:12 - probably the most important and the most
17:14 - common use of enumerations in
17:16 - programming
17:17 - so let's delete this code here
17:20 - and then this also and what i want to do
17:24 - is i want to move this part of the code
17:27 - into a function so let's create a
17:29 - function here of return type void
17:32 - let's call it
17:33 - get
17:35 - eye color details
17:38 - like this
17:40 - and
17:41 - inside here
17:42 - i will move this part of the code paste
17:46 - it here
17:47 - like this
17:48 - and this function will receive a
17:51 - parameter that will be of enum type so
17:54 - here i will say
17:56 - eye color and i will call that parameter
17:59 - my eye color like this
18:02 - so what we have achieved with this is
18:04 - now i can do the following i can say
18:07 - get
18:08 - eye color details and here i can pass
18:11 - you see the values brown gray green
18:13 - heterochromia and other so let's say
18:16 - blue here is blue okay so now if i run
18:20 - the program
18:22 - we should get the details for blue eye
18:24 - color okay so now your question might be
18:27 - salvina why is this important it is very
18:31 - important because by using enumerations
18:33 - you define which values are legal to use
18:36 - and this means that when you forget
18:38 - about this code in a month or two or if
18:41 - you're working in a team and other
18:42 - people also read and maintain your code
18:45 - it will be much easier for them and for
18:47 - you to understand what will happen when
18:51 - you have a code like this
18:53 - instead of having a code like this for
18:56 - example
18:58 - so this is also valid and you could
19:00 - create a function that is called get eye
19:03 - color details 2 that receives integers
19:06 - so let's create that function i'll just
19:08 - copy this part here and then
19:10 - paste it and here i will say get eye
19:13 - color details 2 and it will receive an
19:16 - integer okay and here instead of
19:19 - receiving brown blue green gray let's
19:22 - say case one case two case
19:25 - three
19:26 - four
19:27 - five
19:28 - and six
19:29 - okay
19:30 - and now let's comment this part here and
19:32 - this code as well it will work so
19:34 - if i stop the program that we previously
19:36 - read and then i run it again
19:38 - as you can see again we get through the
19:40 - same result we get the result for blue
19:43 - eye color but this code here is much
19:46 - harder to understand than this code here
19:50 - so if you don't make it easier for
19:51 - yourself when you are writing the code
19:53 - then it will definitely be harder
19:55 - tomorrow or in a month or two when you
19:57 - need to come back and read this code in
20:00 - order to fix a bug or add a new feature
20:03 - so in this situation you always need to
20:07 - open that function and then read it in
20:10 - order to figure out what is happening
20:12 - and what this number two means whereas
20:15 - in this situation here you don't really
20:17 - need to go to the details of the
20:19 - function in order to know what this
20:20 - parameter here means
20:22 - now i know that some of you might ask
20:24 - okay salvina but what about using
20:26 - strings can i do something like this can
20:29 - i say for example
20:32 - get eye color details three and then
20:35 - pass this as a string
20:38 - okay well the direct answer is that you
20:42 - cannot really do this in c plus plus
20:44 - because the way that c plus plus
20:45 - compares strings is very specific
20:48 - but if you're watching this for the
20:50 - purpose of understanding enumerations in
20:52 - some other programming language then
20:54 - this function would look something like
20:57 - this
20:58 - so get eye color details and then here
21:01 - you can use cons chart pointer or you
21:04 - can use
21:05 - string
21:06 - and here you are switching on a string
21:10 - and here you have string cases
21:12 - brown blue green gray heterochromia and
21:16 - all of that is in the format of string
21:18 - so what is the problem here well the
21:21 - problem is following
21:23 - even if your programming language allows
21:25 - you to do this which c plus doesn't
21:27 - allow as you can see you can see all of
21:29 - these errors
21:30 - then you would have the following
21:32 - problem
21:33 - so you invoke that function and you pass
21:36 - a string to your function so it goes
21:38 - here and then it finds this blue case so
21:42 - it prints this value okay it works in
21:45 - that case but
21:47 - what if i do something like this
21:49 - what if i say for example gray will this
21:52 - work well the answer is yes it will work
21:54 - because we have gray here but what
21:58 - happens if someone else tries to type
22:00 - gray like this which is also something
22:03 - that a person could do because some
22:05 - people spell it with a some people spell
22:07 - it with e
22:08 - so what will happen in this situation
22:10 - here because gray with an e
22:13 - like this it doesn't exist inside this
22:16 - switch case so you will get a bug
22:19 - so this option here will not work and
22:22 - neither will options like
22:24 - brown with all uppercase or
22:28 - brown with all lowercase or for example
22:31 - if someone has
22:33 - red eyes so he types red and tries to
22:36 - invoke this function you will have a
22:38 - problem
22:39 - so again the best way to solve that
22:41 - problem is to use a function that
22:44 - receives enum type
22:47 - like
22:48 - this one does
22:50 - so this is our function so when you try
22:52 - to invoke that function here you will
22:56 - get
22:56 - all the valid options so if i type b you
22:59 - will get blue or brown those are options
23:01 - that exist inside this function so let's
23:04 - say
23:05 - blue
23:06 - so this is an important use of
23:08 - enumerations in programming which means
23:10 - using enumerations with functions using
23:13 - enumerations as parameters of functions
23:15 - because by using enumerations you
23:18 - increase compile time checking of your
23:20 - code and you avoid errors that can
23:22 - happen by using invalid constants like
23:25 - numbers and strings
23:28 - and this is because enumerations let you
23:30 - define which values are valid or legal
23:34 - to use in your program so here only the
23:37 - members of our enumeration are valid to
23:39 - use and other values are not and it is
23:42 - much better to know that during the
23:44 - compile time so while you are still
23:46 - writing your code rather than getting
23:48 - that error once your user runs the
23:50 - program and then the program crashes and
23:52 - he doesn't have absolutely any idea why
23:54 - the program has crashed
23:56 - so that would be all for this video if
23:58 - you enjoyed it please give it a thumbs
24:00 - up so that i know to make more videos
24:02 - like this one in the future and if you
24:04 - have any questions you can let me know
24:06 - in the comment section and then if this
24:08 - video was helpful for you make sure to
24:10 - share it with someone else who would
24:12 - also like to learn programming
24:15 - so all the code from the video will be
24:17 - pinned in the comment and then
24:18 - everything else that you need from this
24:20 - video i will put that in the description
24:23 - and then you can watch the videos that
24:24 - will be on the screen here i hand picked
24:27 - those videos for you and they are the
24:28 - best way for you to continue upgrading
24:31 - your programming knowledge so thank you
24:33 - very much for watching and i will see
24:35 - you in some other video bye

Cleaned transcript:

hi guys and welcome to my channel in this video i want to talk about enumerations or enums so let's get straight to the point so what is an enumeration you can understand enumeration as a special data type that consists of two parts an integer value and then a name that is used in order to describe that integer value so there are situations in real life where we use enouns without even being aware of it for example when you are ordering a lunch so you go to the food ordering machine and let's say that you see three options number one is pizza and then number two is burgers and then number three is pasta so that is an example where each number has a word in order to describe it so that you understand what is each option so the reason why enums exist is to make programmer's life easier because computers don't have any problem with remembering numbers but for us humans it is much easier to remember words that have meaning so the example that i gave where you have only three dishes it's kind of easy to remember when it's only three what each number represents but if you had an entire restaurant's menu with over 100 dishes then it would be very hard to remember which number represents which dish so that is the reason why enums were created in programming so that you can store something as an integer you can treat it as an integer in your program but again you have that word to describe what that integer means so now i'm going to show you how to create enum and how to work with enums in c plus but before i start writing the code i want to show you the extension that i'll be using in this video it is visual studio extension called visual assist and i often get questions related to how i write code how i avoid errors and what are some good extensions and productivity tools to use with visual studio so the one that i like is called visual assist and it is a great productivity tool that helps you with writing code reading code refactoring navigation and you can also use it to generate c plus code and also c and c sharp code so basically it improves visual studio experience by quickly identifying and fixing errors in your code and many senior developers use it and it also has great support for unreal engine so if your plan is to make games then you should definitely try it out and i'm going to leave a link that you can use to download it in the description and then if you want to see how to install it and learn about some very cool features that i like about visual assist i'm going to link a video in the upper right corner and i'll also link it in the description so that you can check it out and now i'm going to show you how you can create enums and work with enums in order to create an enumeration you say enum and then you give it a name let's say i color and then you need to put curly brackets like this and at the end you need semicolon so with this you have created an enumeration called eye color and it is empty for now so inside these curly brackets i am going to put the members for this enum and the members are going to be all the eye colors that i know off so let's say brown and then let's say blue and then green gray um and then heterochromia i believe that is when the eyes have different color like this and then let's say other for other eye colors okay so with this you have created an innovation called eye color and here are all of the eye colors that this enumeration contains so now your question might be salvina you said that each word represents a number so where are those numbers what number is for example this brown color so let's write a program that is going to give us the answer to that question so what i want to do is i want to create a variable that will be of this enum type so it will be of type i color and then i want to assign a specific value so some of these values to that variable and then we will print that variable in order to see which number or what we are going to get so let's do that here inside my main function i'm going to say eye color and i will create a variable called my eye color okay and here i will say that eye color will be brown because that is my eye color okay so if i say see out my eye color what do you expect to get if i run the program please pause the video and write your answer in the comments before i start this program so if i run this program you can see that we get the value of 0 so i wasn't flying after all and indeed these eye colors these eye colors here are represented as numbers and the numbers have been assigned by default so they start with zero the first member of your enumeration has the value of zero and then they increment by one which means that blue is one green is two gray is three and then four and five so those are default values that are assigned to the members of enumerations and then you can also assign your own values so how do you do that well you just say let's say blue is going to be equal to 5 and then this means that all the members after this value that we have changed are going to change as well so now green is going to be 5 plus 1 which is 6 and then gray is going to be seven eight and then nine and this one will be unchanged so if i run my program again you can see that brown is still zero but if i change this to other for example and if i run my program again you can see that we get the value of nine so blue is five this is six seven eight and there is your answer y other eye color so every other eye color will have the value of 9 okay so for the rest of this video i want to delete this value of 5 for blue and i want to assign the value of 1 to brown and by doing that you have assigned the value of 2 to blue and then 3 to green 4 5 and 6 to this member and you can also explicitly say 2 and then three and so on but again you don't have to because those values are going to be assigned by default when you assign the value of one to brown quick digression uh if you watch the video until this part i'm very curious to know what is your eye color so let me know in the comments but don't write the word write the number instead and the reason is because it's kind of funny for me to read the comments of people who don't watch the entire video and how they get confused with the comment section sometimes and the reason why i'm okay with trolling this way is because i make these videos for people who really want to learn programming and who really want to understand a certain concept and remember how to apply it later instead of making a video for someone who just wants to write a quick answer for his homework and then completely forget about it in five minutes so you have my permission to troll in the comment section as well just don't be rude and another reason why i asked you to comment your eye color in the format of number rather than a string is because of the following when you ask the user to input his eye color he is also going to enter a number so whatever user is entering a value for enum he inputs an integer and then later you need to convert or cast that integer into your enum type so let me show you how to do that on an example so what i want to do is i want to get a number from my user so i want to ask him hey what is your eye color and then he will input a number between 1 and 6 and then i will convert that number into this enum type so let's delete this code and i will create a variable of type int i will call it user input and then i will say c in user input like this so the user will enter an integer that is going to be his eye color an integer between 1 and 6 and then i need to cast or convert that integer into this enum type so let's create a variable of type eye color let's call it my eye color i'm going to delete this and then the value that i want to assign to this variable will be this integer here so i will say my eye color will be equal to user input but if i try to do this directly we will get an error um let's check that error here okay and the error says a value of type in cannot be assigned to an entity of type eye color so you cannot do this directly what you have to do instead is you need to convert or cast this integer into this eye color enum and then you can assign this to my eye color variable so now i'm going to very quickly pause this video and add a short description for every eye color that we have here and then i will be back to explain the code that i added so here i added a switch case and if you are not familiar with what switch case is i'm going to link a video in the upper right corner and i'll also link it in the description so that you can watch it and learn everything that you need to know about switch case so basically what i'm doing here is i say please check what value is stored inside my eye color variable and in case that it is brown you need to print this text in case that it is blue you need to print this text and then for green you need to print this and then gray heterochromia and other and then at the end of each case please don't forget to put break statement because if you don't you can get an error and again if you want to learn about errors that can happen in this situation please watch the video that will be linked in the description related to switch case so basically this is how you use enumerations with switch case and that is one of the most common uses and the most common examples where you are going to see enumerations so now if i run this program the following is going to happen our user first needs to input his eye color number and then we are going to cast that eye color into this enum type and then i will use that my eye color enum variable in order to switch on it and i will determine which one of these cases it is and i will print adequate text for that eye color so let's run the program and here we should enter a number so i will say one and if i press enter we are going to get this text here which says that 70 of the population has brown eyes making it the most common eye color worldwide scientists believe that everyone on earth had brown eyes around 10 000 years ago and people with brown eyes are less likely to develop eye cancer macular degeneration and diabetic retinopathy than those with lighter colored eyes okay that's great to know uh being a person with brown eyes myself and if you have some other eye color you can input another number and you will get a description for your eye color and i will also paste all of this code in the comment i'll pin it in the comments which you can use it if you want an important thing to keep in mind is that there are certain scenarios where you can reproduce a bug in this program and that would be if the user doesn't input a number between 1 and 6 in this line here so if the user inputs a number that doesn't exist inside this eye color enumeration you would have a bug so how can you prevent that bug from happening how can you fix it well there are two ways to do that the first one is to use a loop so that you can force your user to enter the number again and again and again until he inputs a number that exists inside this eye color enumeration so a number between one and six that would be the first way and the second way to handle the error if it happens is to use something called try catch which is used to handle exceptions and errors in your code and i will link both of those videos in the description so that you can watch it and figure out how to fix this bug that we have here i'm going to leave that for homework to you and if you manage to fix it uh please put it in the comment section so that other people can use it as well and so that i can review it okay so that is a bug that can happen in this program and those are two ways how to fix that bug and one final thing that i want to show you because it is used very often and because you will see it very often in programming is how to iterate through the members of an enumeration so in order to do that i will use for loop and i will delete this code here we don't need it anymore i will just keep this switch case okay so in order to iterate through an enumeration you use for loop like this and inside this for loop i will declare a variable of type int i will call it my i so the same name here my eye color i have it here and i will initially assign it the value of brown because that is the first eye color that i have inside my enumeration and then i will say my eye color is different than other and i will say my eye color plus plus like this and inside these curly brackets of my for loop i will put this switch case i'll actually just move this curly bracket at the end of switch case like this okay and with this we are going to iterate through every single eye color we will check which eye color is in the current iteration and we will print the description for that eye color and another thing that i want to do at the end is i want to print two end lines like this so that our text is formatted nicely so let's see what we have achieved by using this for loop in order to iterate through the members of an enumeration and then putting this switch case inside for loop so if i run the program okay we get the description for every single eye color that we have in our program okay and one very important thing to keep in mind is that if you are going to iterate through your enumeration like this so that in each iteration you increment the enum by one then these also have to be incremented by one so one two three four five six and so on so you cannot all of a sudden have 22 here for example because then you will get a bug so if i try to run the program now let's just close this okay and now if i scroll you can see that here we have the value for brown eyes and then here we have green eyes blue eyes are missing here because we changed the value to 22 here and that completely changed the behavior of our program so the general recommendation is to leave default values here or to have them increment by one like this if you are going to iterate through the members of your enumeration like this another very important thing that i would like to show you is how to use enumerations with functions and this is probably the most important and the most common use of enumerations in programming so let's delete this code here and then this also and what i want to do is i want to move this part of the code into a function so let's create a function here of return type void let's call it get eye color details like this and inside here i will move this part of the code paste it here like this and this function will receive a parameter that will be of enum type so here i will say eye color and i will call that parameter my eye color like this so what we have achieved with this is now i can do the following i can say get eye color details and here i can pass you see the values brown gray green heterochromia and other so let's say blue here is blue okay so now if i run the program we should get the details for blue eye color okay so now your question might be salvina why is this important it is very important because by using enumerations you define which values are legal to use and this means that when you forget about this code in a month or two or if you're working in a team and other people also read and maintain your code it will be much easier for them and for you to understand what will happen when you have a code like this instead of having a code like this for example so this is also valid and you could create a function that is called get eye color details 2 that receives integers so let's create that function i'll just copy this part here and then paste it and here i will say get eye color details 2 and it will receive an integer okay and here instead of receiving brown blue green gray let's say case one case two case three four five and six okay and now let's comment this part here and this code as well it will work so if i stop the program that we previously read and then i run it again as you can see again we get through the same result we get the result for blue eye color but this code here is much harder to understand than this code here so if you don't make it easier for yourself when you are writing the code then it will definitely be harder tomorrow or in a month or two when you need to come back and read this code in order to fix a bug or add a new feature so in this situation you always need to open that function and then read it in order to figure out what is happening and what this number two means whereas in this situation here you don't really need to go to the details of the function in order to know what this parameter here means now i know that some of you might ask okay salvina but what about using strings can i do something like this can i say for example get eye color details three and then pass this as a string okay well the direct answer is that you cannot really do this in c plus plus because the way that c plus plus compares strings is very specific but if you're watching this for the purpose of understanding enumerations in some other programming language then this function would look something like this so get eye color details and then here you can use cons chart pointer or you can use string and here you are switching on a string and here you have string cases brown blue green gray heterochromia and all of that is in the format of string so what is the problem here well the problem is following even if your programming language allows you to do this which c plus doesn't allow as you can see you can see all of these errors then you would have the following problem so you invoke that function and you pass a string to your function so it goes here and then it finds this blue case so it prints this value okay it works in that case but what if i do something like this what if i say for example gray will this work well the answer is yes it will work because we have gray here but what happens if someone else tries to type gray like this which is also something that a person could do because some people spell it with a some people spell it with e so what will happen in this situation here because gray with an e like this it doesn't exist inside this switch case so you will get a bug so this option here will not work and neither will options like brown with all uppercase or brown with all lowercase or for example if someone has red eyes so he types red and tries to invoke this function you will have a problem so again the best way to solve that problem is to use a function that receives enum type like this one does so this is our function so when you try to invoke that function here you will get all the valid options so if i type b you will get blue or brown those are options that exist inside this function so let's say blue so this is an important use of enumerations in programming which means using enumerations with functions using enumerations as parameters of functions because by using enumerations you increase compile time checking of your code and you avoid errors that can happen by using invalid constants like numbers and strings and this is because enumerations let you define which values are valid or legal to use in your program so here only the members of our enumeration are valid to use and other values are not and it is much better to know that during the compile time so while you are still writing your code rather than getting that error once your user runs the program and then the program crashes and he doesn't have absolutely any idea why the program has crashed so that would be all for this video if you enjoyed it please give it a thumbs up so that i know to make more videos like this one in the future and if you have any questions you can let me know in the comment section and then if this video was helpful for you make sure to share it with someone else who would also like to learn programming so all the code from the video will be pinned in the comment and then everything else that you need from this video i will put that in the description and then you can watch the videos that will be on the screen here i hand picked those videos for you and they are the best way for you to continue upgrading your programming knowledge so thank you very much for watching and i will see you in some other video bye
