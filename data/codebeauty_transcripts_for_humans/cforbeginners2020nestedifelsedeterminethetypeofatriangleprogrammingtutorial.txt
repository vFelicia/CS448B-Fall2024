With timestamps:

00:00 - hi guys welcome to my channel in this
00:03 - video I wanted to talk about if-else
00:05 - statements but a bit more complex
00:07 - a foul statement so that you can get an
00:08 - idea on how they are used in real life
00:11 - so if you are not familiar with that at
00:13 - all like you have never heard of a foul
00:16 - statement then you should probably first
00:18 - watch my first video of this subject and
00:21 - I'm going to link it somewhere here and
00:22 - then you can come back to this video but
00:25 - if you are already familiar with the
00:27 - very basics of if-else statements then
00:30 - this video is right for you so that you
00:31 - can upgrade your knowledge so keep
00:33 - watching so the problem that we are
00:36 - going to solve in this video is the one
00:38 - that students usually get on their exams
00:40 - a lot and with the knowledge that you
00:43 - get from this video you are going to be
00:44 - able to recognize and solve other
00:47 - problems of this type and also if you
00:49 - don't want to work with C++ this logic
00:52 - that I'm going to teach you today is
00:53 - going to be applicable in other
00:55 - programming languages as well so here is
00:57 - the text of my problem and it says that
00:59 - our user should enter the side length of
01:03 - a triangle so a B and C and after that
01:06 - our program should write out whether
01:08 - that triangle is equilateral isosceles
01:10 - or scalene triangle' and as you already
01:14 - may know equilateral triangle is the one
01:17 - that has all three sides of the same
01:19 - length isosceles triangle has two sides
01:22 - of the same length and then scalene
01:25 - triangle' is the one that has all three
01:27 - sides of different lengths so the way
01:30 - that we are going to solve this problem
01:32 - is we are going to really visualize the
01:35 - solution for this problem so that you
01:37 - can really understand it and that is
01:38 - going to be using diagrams the tool that
01:42 - I'm going to be using for drawing
01:43 - diagrams is called blank diagram you can
01:46 - use whatever tool you prefer even pen
01:48 - and paper if you want and the first
01:50 - shape that I'm going to put to this
01:51 - diagram is going to be this circle shape
01:54 - here let's say that it is going to
01:57 - indicate the start position of our
01:59 - program so here's where our program
02:02 - starts and after our program has started
02:05 - what we want is we want our user to
02:08 - enter side lengths of our triangle and
02:10 - the shape that we are going to be using
02:12 - for that is this funnel shape here so
02:16 - that you can clearly visualize because
02:19 - of this funnel shape that something
02:21 - should enter inside it something should
02:23 - be inputted in your program and what
02:28 - should be inputted is side lengths so a
02:31 - B and C and the type that I'm going to
02:34 - be using for these three variables is
02:36 - float Y float well because the lengths
02:41 - of sides of a triangle can be decimal
02:44 - point number or a floating point number
02:46 - so float and now let's put this arrow
02:50 - here so that you can oh so that you can
02:54 - visualize the flow of our program it
02:57 - goes like this
02:57 - and then after our user has inputted the
03:01 - side lengths what we should do is we
03:02 - should determine whether he has entered
03:05 - equilateral triangle isosceles triangle
03:08 - or squalene triangle and what I'm going
03:11 - to do next is I'm going to use this
03:13 - diamond shape here which indicates
03:16 - decision in your program and what I'm
03:19 - going to put inside this shape here is
03:22 - condition the first thing that we want
03:24 - to check is whether whether our user has
03:27 - entered equilateral triangles so whether
03:29 - these three sides are all of the same
03:32 - length whether these three variables
03:34 - hold the same value and let me make this
03:39 - a bit bigger and inside here I'm going
03:42 - to say please check if my a is equal to
03:47 - my B and also if my B is equal to my C
03:53 - like this so let me join these two and I
03:59 - want to explain two things when it comes
04:01 - to this first one is this operator here
04:04 - this end operator these two ampersands
04:07 - this is logical and operator and it is
04:12 - used as I'm going to just explain so
04:15 - this expression here is going to result
04:17 - as true expression only in a situation
04:21 - where this here is true and also an
04:25 - same time this here is true so in that
04:30 - case this whole expression is going to
04:32 - result as a true operation that is the
04:36 - logic behind this end operator and
04:38 - second thing that I want to explain is
04:41 - following so I have set here please
04:43 - check if my a side length is equal to my
04:45 - be length and also if my be side length
04:49 - is equal to my see side length what you
04:51 - have also what you can also put here is
04:54 - you can also say a because we have
04:57 - determined here that these two are of
04:59 - the same length so it really doesn't
05:01 - matter if you put here A or B whichever
05:05 - you prefer so in this situation where
05:09 - this results as a true operation we are
05:12 - going this way and what I'm going to do
05:15 - when this results as a true operation as
05:18 - a yes operation I am going to use this
05:22 - shape here let me just rotate it I
05:25 - really don't see a shape that that is
05:28 - this one so that's why I'm using this
05:30 - reverse funnel shape and I'm rotating it
05:33 - so that you can clearly visualize
05:34 - something something that is being
05:36 - outputted from your program let me
05:39 - delete this text here and make it a bit
05:42 - wider and I'm going to put text inside
05:48 - it and what I want to write out in this
05:51 - situation here where this results as a
05:53 - true operation where this condition is
05:55 - fulfilled is that our user has entered
05:58 - equilateral triangle because all three
06:00 - sides are of the same length so let me
06:02 - write it out so in case that this
06:12 - condition condition here is true we are
06:16 - going to write out for user that he has
06:19 - entered equilateral triangle and then
06:23 - let's check the situation where this
06:26 - here results as a no operation so in
06:29 - that case we have to determine whether
06:33 - our user has entered scalene triangle or
06:36 - a
06:37 - Solis triangle and for that I'm going to
06:40 - be using another of these diamond shapes
06:42 - so another decision that we have to make
06:45 - and let's put it here and know and the
06:52 - next thing that we want to check is
06:54 - following so I want to check when I was
06:58 - I have determined that my user has not
07:00 - entered all three sides of the same
07:03 - length I want to determine whether he
07:05 - has entered all three sides of a
07:07 - different length so I'm going to put
07:08 - inside the shape here another condition
07:12 - and I'm going to say following so please
07:16 - check if my a is if my a is not equal to
07:21 - my B and also at the same time if my a
07:25 - is not equal to my C and also at the
07:30 - same time if my B is not equal to my C
07:34 - like this so this is the next condition
07:38 - that we want to check and this operator
07:41 - here is called not equal to operator and
07:45 - it is really reversed from this equal
07:48 - operator it has reversed logic so in
07:50 - this condition here what we want to
07:52 - check is whether my a side length is not
07:55 - equal to my B side light and also at the
07:58 - same time whether my a side length is
08:01 - not equal to my C side length and also
08:03 - whether my B is not equal to my C and if
08:07 - this here results as a true operation
08:10 - that means that all of these three side
08:13 - lengths are not equal they all have the
08:16 - different lengths so in that situation
08:18 - we are going to go this way and we are
08:22 - going to write out let me copy this
08:24 - shape and here I'm going to say please
08:31 - write out my user that he has entered a
08:34 - triangle that has all three different
08:36 - side lengths and that is going to be our
08:41 - scalene triangle like this okay so in
08:49 - the situation where this here resolves
08:51 - as a true
08:51 - operation it means that all of these
08:53 - three are of a different length and we
08:55 - write out to our user that he has
08:57 - entered scalene triangle and then the
09:00 - situation where this here results as a
09:02 - no because we have previously determined
09:05 - that these three are definitely not of
09:09 - the same length and then we have in this
09:11 - condition here determined that these
09:13 - three are also not of a different length
09:16 - what is left is that the two of these
09:20 - two of these three sides are going to be
09:23 - of the same length and that is going to
09:26 - be the situation where we write out to
09:28 - our user oh I can copy this and we write
09:34 - to our user that he has entered
09:36 - isosceles triangle so let me write it
09:40 - out okay so these three are three
09:47 - potential end points of our program so
09:50 - three potential solutions to our problem
09:53 - and after we write out our user this or
09:56 - this or this I am going to really put
09:59 - this one diamond shape just to indicate
10:03 - that our decision has now come to an end
10:06 - we have solved this problem and we are
10:08 - going to join these paths in this shape
10:12 - here so I'm going to put this and this
10:18 - like this so now after we have decided
10:22 - whether whether it's an equilateral
10:24 - triangle or scalene or isosceles I can
10:28 - now say say you can resume the execution
10:30 - of my program normally so whatever I put
10:33 - after this shape here is going to be
10:34 - executed in either this case or this
10:38 - case or this case and what is going to
10:40 - be happening after the shape here is
10:43 - just stop so our program is going to
10:45 - stop but you can put a lot of code here
10:47 - if you need to so I'm going to say stop
10:51 - and let me delete this really I don't
10:55 - need it okay
10:57 - let's explain one more time this diagram
11:00 - so after our program starts our user
11:02 - should enter a B and C which
11:05 - represent side length of a triangle and
11:07 - I have used this float shapes and since
11:10 - those side lengths can be decimal point
11:12 - numbers and after our user has entered
11:15 - that we come to this decision point here
11:17 - and what we want to decide here is first
11:20 - thing we want to check whether all of
11:22 - these three variables are of the same
11:25 - value so whether he has entered three
11:27 - same lengths for a triangle sides and in
11:30 - case that this here results as a true
11:33 - operation we are going this way and we
11:36 - write out to our user that he has
11:38 - entered equilateral triangle and after
11:40 - that we go this way and our program
11:43 - stops in the situation where this here
11:46 - results as a no operation we want to
11:50 - check something else so we are doing
11:52 - this way and we come to another decision
11:54 - point and here we want to decide whether
11:57 - our user has entered a triangle that has
12:00 - all three different side lengths so
12:03 - after we have checked that they are not
12:06 - equal we want to check whether all of
12:09 - three variables are of a different value
12:12 - and in case that this condition here
12:14 - results as a yes operation that means
12:17 - that he has entered scalene triangle'
12:19 - but in case that this here results as a
12:23 - no operation we can now clearly say that
12:26 - he has entered isosceles triangle
12:28 - because we have checked here that these
12:32 - three sides are not the same and we have
12:34 - checked here that these three sides are
12:37 - not different so all of them are not
12:39 - different and that means that two of
12:41 - them have to be equal and in that
12:44 - situation we go this way and we write
12:46 - out our user that he has entered
12:47 - isosceles triangle and now we can go
12:51 - this way and you can see that in this
12:53 - situation as well our program stops here
12:57 - I have opened my flowchart and my visual
12:59 - studio so that we can just translate
13:02 - this diagram into our C++ code so the
13:05 - first thing here is our user enters our
13:08 - a B and C side length so let's declare
13:11 - three variables of type float and let's
13:15 - call them a B and C and now I'm just
13:18 - going to
13:18 - write out a message to my user so that
13:20 - he knows what he should enter so let's
13:22 - say see out and please enter a and then
13:26 - B and then C like this and then let's
13:31 - use our C in command so that he enters
13:34 - his values okay let's say the first
13:37 - thing that our user enters is going to
13:40 - be stored inside my a variable after
13:43 - that what he enters please target inside
13:46 - my B variable and then third value that
13:48 - he enters is going to be stored inside
13:50 - my C variable so now that we have
13:53 - entered our side length of a triangle we
13:56 - come here so to a decision point and we
13:59 - said that we represent this would
14:01 - if-else statement so I'm going to write
14:04 - here if and then inside these
14:08 - parentheses I'm going to say this
14:11 - condition here so please check IDs
14:15 - please check if my a is equal to my B
14:18 - and then also check is my B equal to my
14:22 - C like this and if this this here this
14:27 - expression here results as true
14:29 - expression I'm going to execute one
14:31 - block of code and that block of code is
14:33 - going to be this one here but if this
14:37 - expression here results as a false
14:40 - expression okay I am going to execute
14:43 - another block of code and that lock of
14:45 - code we represent with our else
14:47 - statement like this okay and then what's
14:54 - right this yes
14:56 - situation so let's write here C out
15:00 - equilateral triangle so like this oops
15:08 - you should put that not in a quotation
15:11 - marks okay so in the situation where
15:15 - these three side lengths are equal we
15:18 - write out for user that he has entered
15:20 - equilateral triangle but in the
15:22 - situation where this here results as
15:24 - false we have this else block to execute
15:26 - now let's find out what is inside our
15:29 - else block so it is
15:31 - this code here and there is another
15:34 - if-else statement so this if our
15:37 - statements statement is really nested
15:40 - inside this one here so it is nested
15:43 - inside this else block so here in these
15:46 - brackets here we are going to put
15:49 - another if-else statement so let me
15:52 - write out if and then inside these
15:55 - parentheses we put our condition from
15:57 - this decision here so from this diamond
16:00 - shape here and I'm going to write out
16:02 - this check if my a is not equal to my B
16:06 - and then is my a not equal to my C also
16:11 - and then is my B not equal to my C so in
16:17 - this condition here we check whether all
16:21 - of these three variables have different
16:24 - values here and if they do if this
16:28 - condition results as a true expression
16:31 - I'm going to write out let me just copy
16:34 - this and then we are going to adjust it
16:36 - I'm going to write out that my user has
16:40 - entered a scalene triangle as you can
16:42 - see here so when this goes in a yes way
16:46 - we write out that message so if this
16:50 - results as a true we write out that our
16:53 - user has entered scalene triangle but if
16:56 - this here result is a false then we are
16:59 - going to write out that our user has
17:02 - entered isosceles triangle and let me
17:06 - copy this like this okay so we have
17:16 - nested this if-else statement inside
17:19 - this else block so this if our statement
17:23 - is going to execute only in a situation
17:25 - where this here results as a false for
17:28 - false expression so this code here if
17:32 - you find it a bit unreadable I want to
17:34 - show you one trick so one rule that you
17:35 - can really follow and that is if you
17:38 - have only one command under this if or
17:41 - else statement you don't need to use
17:44 - these brackets so you don't need to say
17:47 - that you are going to execute a block of
17:48 - code since you are not you're going to
17:50 - execute only one command so you can
17:52 - really delete the this here like this
17:55 - and then also here since we have only
17:58 - one command both here and here we can
18:01 - delete these brackets here like this
18:06 - okay so now this code is a bit easier to
18:11 - read okay now as you can see from this
18:16 - diagram here it is literally translation
18:19 - of this here and vice versa so this code
18:22 - here is a translation of this diagram
18:24 - here and what it means is when our user
18:29 - enters three values for our sides of a
18:31 - triangle first we are going to check
18:33 - whether all of these three sides are
18:36 - equal if they are I'm going our program
18:39 - is actually going to say that our user
18:41 - has entered equilateral triangle but if
18:44 - this here result is false then we are
18:47 - going to our else block and then inside
18:49 - that else what we are going to nest
18:51 - another if-else so we are going to check
18:54 - another condition we are going to
18:56 - execute this if else here and this if
18:59 - else here is going to check following so
19:01 - it is going to say please check if all
19:05 - of these three variables are different
19:08 - values so if all three sides of a
19:10 - triangle have different lengths and if
19:13 - they do we can see that that is a
19:14 - scalene triangle but if they don't then
19:18 - since we have already checked that they
19:20 - are all that all of them are not equal
19:23 - and also we have checked here that all
19:25 - of them are not different we can say now
19:29 - that definitely two of these variables
19:32 - are equal and that means that our user
19:34 - has entered isosceles triangle and that
19:37 - is the program that we had here okay so
19:43 - I hope you liked this video and if you
19:45 - did this is a strong call to subscribe
19:48 - to my channel and to share it with
19:49 - anyone else who would like to learn
19:51 - programming and I'm going to see you in
19:52 - my next video bye

Cleaned transcript:

hi guys welcome to my channel in this video I wanted to talk about ifelse statements but a bit more complex a foul statement so that you can get an idea on how they are used in real life so if you are not familiar with that at all like you have never heard of a foul statement then you should probably first watch my first video of this subject and I'm going to link it somewhere here and then you can come back to this video but if you are already familiar with the very basics of ifelse statements then this video is right for you so that you can upgrade your knowledge so keep watching so the problem that we are going to solve in this video is the one that students usually get on their exams a lot and with the knowledge that you get from this video you are going to be able to recognize and solve other problems of this type and also if you don't want to work with C++ this logic that I'm going to teach you today is going to be applicable in other programming languages as well so here is the text of my problem and it says that our user should enter the side length of a triangle so a B and C and after that our program should write out whether that triangle is equilateral isosceles or scalene triangle' and as you already may know equilateral triangle is the one that has all three sides of the same length isosceles triangle has two sides of the same length and then scalene triangle' is the one that has all three sides of different lengths so the way that we are going to solve this problem is we are going to really visualize the solution for this problem so that you can really understand it and that is going to be using diagrams the tool that I'm going to be using for drawing diagrams is called blank diagram you can use whatever tool you prefer even pen and paper if you want and the first shape that I'm going to put to this diagram is going to be this circle shape here let's say that it is going to indicate the start position of our program so here's where our program starts and after our program has started what we want is we want our user to enter side lengths of our triangle and the shape that we are going to be using for that is this funnel shape here so that you can clearly visualize because of this funnel shape that something should enter inside it something should be inputted in your program and what should be inputted is side lengths so a B and C and the type that I'm going to be using for these three variables is float Y float well because the lengths of sides of a triangle can be decimal point number or a floating point number so float and now let's put this arrow here so that you can oh so that you can visualize the flow of our program it goes like this and then after our user has inputted the side lengths what we should do is we should determine whether he has entered equilateral triangle isosceles triangle or squalene triangle and what I'm going to do next is I'm going to use this diamond shape here which indicates decision in your program and what I'm going to put inside this shape here is condition the first thing that we want to check is whether whether our user has entered equilateral triangles so whether these three sides are all of the same length whether these three variables hold the same value and let me make this a bit bigger and inside here I'm going to say please check if my a is equal to my B and also if my B is equal to my C like this so let me join these two and I want to explain two things when it comes to this first one is this operator here this end operator these two ampersands this is logical and operator and it is used as I'm going to just explain so this expression here is going to result as true expression only in a situation where this here is true and also an same time this here is true so in that case this whole expression is going to result as a true operation that is the logic behind this end operator and second thing that I want to explain is following so I have set here please check if my a side length is equal to my be length and also if my be side length is equal to my see side length what you have also what you can also put here is you can also say a because we have determined here that these two are of the same length so it really doesn't matter if you put here A or B whichever you prefer so in this situation where this results as a true operation we are going this way and what I'm going to do when this results as a true operation as a yes operation I am going to use this shape here let me just rotate it I really don't see a shape that that is this one so that's why I'm using this reverse funnel shape and I'm rotating it so that you can clearly visualize something something that is being outputted from your program let me delete this text here and make it a bit wider and I'm going to put text inside it and what I want to write out in this situation here where this results as a true operation where this condition is fulfilled is that our user has entered equilateral triangle because all three sides are of the same length so let me write it out so in case that this condition condition here is true we are going to write out for user that he has entered equilateral triangle and then let's check the situation where this here results as a no operation so in that case we have to determine whether our user has entered scalene triangle or a Solis triangle and for that I'm going to be using another of these diamond shapes so another decision that we have to make and let's put it here and know and the next thing that we want to check is following so I want to check when I was I have determined that my user has not entered all three sides of the same length I want to determine whether he has entered all three sides of a different length so I'm going to put inside the shape here another condition and I'm going to say following so please check if my a is if my a is not equal to my B and also at the same time if my a is not equal to my C and also at the same time if my B is not equal to my C like this so this is the next condition that we want to check and this operator here is called not equal to operator and it is really reversed from this equal operator it has reversed logic so in this condition here what we want to check is whether my a side length is not equal to my B side light and also at the same time whether my a side length is not equal to my C side length and also whether my B is not equal to my C and if this here results as a true operation that means that all of these three side lengths are not equal they all have the different lengths so in that situation we are going to go this way and we are going to write out let me copy this shape and here I'm going to say please write out my user that he has entered a triangle that has all three different side lengths and that is going to be our scalene triangle like this okay so in the situation where this here resolves as a true operation it means that all of these three are of a different length and we write out to our user that he has entered scalene triangle and then the situation where this here results as a no because we have previously determined that these three are definitely not of the same length and then we have in this condition here determined that these three are also not of a different length what is left is that the two of these two of these three sides are going to be of the same length and that is going to be the situation where we write out to our user oh I can copy this and we write to our user that he has entered isosceles triangle so let me write it out okay so these three are three potential end points of our program so three potential solutions to our problem and after we write out our user this or this or this I am going to really put this one diamond shape just to indicate that our decision has now come to an end we have solved this problem and we are going to join these paths in this shape here so I'm going to put this and this like this so now after we have decided whether whether it's an equilateral triangle or scalene or isosceles I can now say say you can resume the execution of my program normally so whatever I put after this shape here is going to be executed in either this case or this case or this case and what is going to be happening after the shape here is just stop so our program is going to stop but you can put a lot of code here if you need to so I'm going to say stop and let me delete this really I don't need it okay let's explain one more time this diagram so after our program starts our user should enter a B and C which represent side length of a triangle and I have used this float shapes and since those side lengths can be decimal point numbers and after our user has entered that we come to this decision point here and what we want to decide here is first thing we want to check whether all of these three variables are of the same value so whether he has entered three same lengths for a triangle sides and in case that this here results as a true operation we are going this way and we write out to our user that he has entered equilateral triangle and after that we go this way and our program stops in the situation where this here results as a no operation we want to check something else so we are doing this way and we come to another decision point and here we want to decide whether our user has entered a triangle that has all three different side lengths so after we have checked that they are not equal we want to check whether all of three variables are of a different value and in case that this condition here results as a yes operation that means that he has entered scalene triangle' but in case that this here results as a no operation we can now clearly say that he has entered isosceles triangle because we have checked here that these three sides are not the same and we have checked here that these three sides are not different so all of them are not different and that means that two of them have to be equal and in that situation we go this way and we write out our user that he has entered isosceles triangle and now we can go this way and you can see that in this situation as well our program stops here I have opened my flowchart and my visual studio so that we can just translate this diagram into our C++ code so the first thing here is our user enters our a B and C side length so let's declare three variables of type float and let's call them a B and C and now I'm just going to write out a message to my user so that he knows what he should enter so let's say see out and please enter a and then B and then C like this and then let's use our C in command so that he enters his values okay let's say the first thing that our user enters is going to be stored inside my a variable after that what he enters please target inside my B variable and then third value that he enters is going to be stored inside my C variable so now that we have entered our side length of a triangle we come here so to a decision point and we said that we represent this would ifelse statement so I'm going to write here if and then inside these parentheses I'm going to say this condition here so please check IDs please check if my a is equal to my B and then also check is my B equal to my C like this and if this this here this expression here results as true expression I'm going to execute one block of code and that block of code is going to be this one here but if this expression here results as a false expression okay I am going to execute another block of code and that lock of code we represent with our else statement like this okay and then what's right this yes situation so let's write here C out equilateral triangle so like this oops you should put that not in a quotation marks okay so in the situation where these three side lengths are equal we write out for user that he has entered equilateral triangle but in the situation where this here results as false we have this else block to execute now let's find out what is inside our else block so it is this code here and there is another ifelse statement so this if our statements statement is really nested inside this one here so it is nested inside this else block so here in these brackets here we are going to put another ifelse statement so let me write out if and then inside these parentheses we put our condition from this decision here so from this diamond shape here and I'm going to write out this check if my a is not equal to my B and then is my a not equal to my C also and then is my B not equal to my C so in this condition here we check whether all of these three variables have different values here and if they do if this condition results as a true expression I'm going to write out let me just copy this and then we are going to adjust it I'm going to write out that my user has entered a scalene triangle as you can see here so when this goes in a yes way we write out that message so if this results as a true we write out that our user has entered scalene triangle but if this here result is a false then we are going to write out that our user has entered isosceles triangle and let me copy this like this okay so we have nested this ifelse statement inside this else block so this if our statement is going to execute only in a situation where this here results as a false for false expression so this code here if you find it a bit unreadable I want to show you one trick so one rule that you can really follow and that is if you have only one command under this if or else statement you don't need to use these brackets so you don't need to say that you are going to execute a block of code since you are not you're going to execute only one command so you can really delete the this here like this and then also here since we have only one command both here and here we can delete these brackets here like this okay so now this code is a bit easier to read okay now as you can see from this diagram here it is literally translation of this here and vice versa so this code here is a translation of this diagram here and what it means is when our user enters three values for our sides of a triangle first we are going to check whether all of these three sides are equal if they are I'm going our program is actually going to say that our user has entered equilateral triangle but if this here result is false then we are going to our else block and then inside that else what we are going to nest another ifelse so we are going to check another condition we are going to execute this if else here and this if else here is going to check following so it is going to say please check if all of these three variables are different values so if all three sides of a triangle have different lengths and if they do we can see that that is a scalene triangle but if they don't then since we have already checked that they are all that all of them are not equal and also we have checked here that all of them are not different we can say now that definitely two of these variables are equal and that means that our user has entered isosceles triangle and that is the program that we had here okay so I hope you liked this video and if you did this is a strong call to subscribe to my channel and to share it with anyone else who would like to learn programming and I'm going to see you in my next video bye
