With timestamps:

00:00 - [Music]
00:10 - hi
00:10 - everyone welcome to my channel my name
00:12 - is saldina i'm a software engineer and i
00:15 - make it
00:16 - and programming related videos here on
00:18 - youtube and in this video i will be
00:20 - doing something that i haven't done
00:22 - before and that is
00:23 - reviewing your code and we will see some
00:26 - errors that you guys have sent me
00:28 - so i get a lot of messages a lot of
00:31 - questions on my instagram
00:32 - on twitter and then here on youtube as
00:34 - well in the comments
00:35 - where you ask me for an opinion or for
00:38 - advice
00:38 - on certain errors that happen to you in
00:40 - programming
00:41 - and i try to answer as many of those as
00:44 - possible
00:45 - but it's just not possible to answer to
00:48 - all of you and i'm very very sorry
00:50 - but i thought that it would be a good
00:52 - idea to make a video related to that
00:54 - so that all of you can see it so here i
00:56 - am i'm making that video
00:58 - right now so in this video i will be
01:00 - reviewing some code and we will see some
01:02 - errors that can happen and that do
01:04 - happen very often
01:05 - and i'm going to do that boat manually
01:07 - and then i want to show you a very cool
01:09 - tool which is called
01:10 - pvs studio i'm going to leave details in
01:13 - the description down below so that you
01:14 - can check it out for yourself
01:16 - but what pvs studio is it is static code
01:20 - analyzer so it is basically a tool that
01:23 - reviews your code and helps you detect
01:25 - bugs and errors and security weaknesses
01:28 - in your code
01:29 - so in the case that you need another
01:30 - pair of eyes to look at your code and
01:32 - give you a few tips and recommendations
01:35 - it is a great tool to use and you can
01:37 - get it as a team license for teams up to
01:40 - nine people
01:41 - or you can get an enterprise license for
01:43 - bigger companies bigger departments or
01:45 - you can even request a free license
01:48 - if you are a student if you are working
01:50 - on some private projects or on some open
01:52 - source projects
01:53 - and then one very cool thing is that it
01:55 - is not only used to analyze c
01:57 - plus code but you can use it for c and
02:00 - then c
02:00 - sharp and java as well and i am
02:03 - wondering guys which team
02:05 - are you in are you team c plus or are
02:07 - you team c
02:08 - sharp or java or c i'm very curious to
02:11 - read your answers so please
02:13 - write me in the comments down below and
02:16 - if you ask me i'm definitely team c plus
02:17 - plus and then team c
02:18 - sharp those are just two of my favorite
02:21 - languages
02:22 - ever but i am very curious to read what
02:25 - you will answer to this question
02:27 - so um i'm going to leave all the details
02:29 - about pvs studio
02:31 - in the description of this video so that
02:33 - you can check it out for yourself
02:35 - and let's jump into the coding part
02:37 - right now because i
02:38 - am very very excited to do this here i
02:42 - have created a new project and
02:43 - i have this program that does basically
02:46 - nothing
02:47 - so what i want to do is i want to check
02:49 - if everything is okay with this code so
02:52 - far
02:52 - so if we have made any errors so far so
02:55 - i'm going to click on extensions
02:57 - and then pbs studio and here you have
02:59 - multiple options you can check your
03:00 - current file you can
03:01 - check open files or you can check your
03:04 - project
03:04 - selected items solution i'm going to
03:07 - select this first option so i'm going to
03:09 - check this current
03:10 - file and you get this window here
03:13 - and as you can see we have one error and
03:16 - that error is that my license will
03:18 - expire in five days okay so that is not
03:20 - here which is related
03:21 - to our code so we are just going to
03:24 - ignore it so we don't have code errors
03:26 - so far
03:27 - and let me show you how you can install
03:28 - this tool very quickly so you click on
03:30 - extensions and then manage extensions
03:34 - okay and then here you can search for
03:38 - pvs
03:39 - studio like this okay great
03:42 - it is this one here so pbs studio is a
03:46 - tool for detecting bugs and security
03:48 - weaknesses and so on
03:49 - okay so you will click download here and
03:53 - your download should begin i'm not going
03:55 - to do that right now because i already
03:57 - have it
03:57 - but once it is downloaded the
03:59 - installation is pretty simple so it's
04:01 - basically
04:02 - next next next finish installation so
04:04 - that should be
04:05 - simple okay now let's close this window
04:08 - here
04:09 - and as you could see we don't have any
04:11 - errors with this code so far so
04:14 - let's write some code and let's create
04:16 - some errors now
04:17 - so let's create an array of type in and
04:20 - i will call it saved money
04:24 - and that will be array of five elements
04:27 - and i want to initialize those elements
04:29 - here so the purpose of this array is
04:31 - following
04:32 - let's say that i want to save some money
04:34 - each month and i want to store that data
04:36 - in this
04:37 - array here so i'm going to save money
04:39 - for five months and i will store how
04:41 - much money i have saved
04:42 - each month inside this array here so for
04:46 - example the first month i have saved
04:48 - 100 dollars or euros or whatever
04:51 - and then second month i have saved 200
04:54 - and then
04:55 - 300 and 400 and 500
04:58 - fifth month okay so this is our array
05:01 - now what i want to do with this data
05:04 - here is i want to sum it
05:05 - after five months i want to know how
05:07 - much money i have
05:08 - saved in total so i'm going to create a
05:11 - variable
05:11 - of type int and i will call it total
05:15 - like this and i will initially give it a
05:18 - value of
05:19 - 0 and then i will iterate through this
05:21 - array here so i will say
05:23 - 4 int i is equal to 0
05:27 - and then i is less than or equal to 5
05:30 - and then i plus plus and what i will do
05:34 - inside this for loop is i will say that
05:36 - my total
05:38 - will hold whatever my total was
05:40 - previously holding
05:42 - plus current value of
05:45 - how much money i have saved in that
05:48 - month so save money off
05:49 - i okay now after i have done this
05:53 - i will just write out how much money i
05:55 - have in total so i will say
05:57 - total and then
06:01 - this value that is stored inside this
06:03 - variable here
06:04 - okay now if i run this program
06:08 - let's see what will happen well it says
06:11 - that in total i have minus 8
06:14 - billion something very very big number
06:16 - so i have tried to save each month and
06:19 - then at the end
06:20 - i have minus eight billion dollars you
06:23 - know so that does not make any sense so
06:25 - here we have a logical
06:27 - error okay so let's see what is this
06:30 - error that is happening
06:31 - so let's click on extensions and pvs
06:34 - studio check
06:35 - current file to see what kind of error
06:38 - pvstudio sees
06:39 - and it says array overrun as possible
06:43 - the value of i index could reach
06:46 - 5 and if i double click on that it will
06:48 - take me here
06:50 - and this part of code here is underlined
06:52 - and this is actually our compiler
06:54 - our compiler is underlying this and it
06:56 - says that
06:57 - okay it says index five is out of valid
07:01 - index range
07:02 - of 0 to 4. so this here this situation
07:06 - here
07:06 - says that this i is out of range of
07:09 - valid indexes
07:11 - that this array here can have and if you
07:13 - are familiar with arrays you know that
07:16 - indexing of an array starts with zero so
07:18 - the first element has index of zero
07:21 - and then one two three and four so valid
07:24 - indexes for this array here
07:26 - are from zero to four and here we
07:30 - have accidentally written that this i is
07:32 - less than or equal
07:33 - to 5 and that is making a problem so
07:37 - if i delete this part here so if i say
07:40 - that my i is just less than 5 this
07:44 - error should disappear so if i click on
07:47 - pvs studio and then check
07:48 - current file the error should
07:52 - disappear okay it has disappeared now so
07:55 - if i run my program
07:59 - this program is behaving as expected so
08:02 - this is one thing that very often
08:04 - happens you can accidentally write
08:06 - less than or equal to and then you can
08:09 - get a very very big logical error
08:11 - another thing that can happen is if you
08:13 - are typing very quickly and if you lose
08:16 - concentration for a moment and here
08:18 - instead of incrementing you decrement
08:20 - this counter so you say i
08:22 - minus minus you should get an error as
08:25 - well so
08:26 - if i try to build this program let's see
08:29 - what our compiler
08:30 - will tell us so here in this error list
08:33 - it says
08:34 - ill-defined for loop counts down from
08:36 - minimum so that's kind of helpful
08:39 - information and then another let's read
08:41 - this other
08:42 - warning it says reading invalid data
08:45 - from saved memory the readable size
08:47 - is 20 bytes but minus 4 bytes maybe a
08:49 - read so this
08:50 - is not really helpful for someone who is
08:52 - just starting
08:54 - and then this third message it says
08:56 - index minus 2
08:57 - billion something is out of valid index
09:00 - range 0 to 4.
09:01 - again this is not really helpful for
09:04 - someone who is just starting so
09:06 - let's see what our pvs studio has to say
09:08 - so i'm going to click extensions pbs
09:10 - studio check current file
09:13 - okay and this
09:16 - first error here says the condition
09:19 - i less than 5 or for loop is always
09:23 - true so this is actually a helpful
09:25 - message and
09:26 - if i click on this i will be taken here
09:29 - and it says that this condition here i
09:32 - is less than 5
09:33 - is always true but why is it always true
09:36 - because
09:37 - we have started counting at zero and
09:39 - then we
09:40 - try to decrement that value in each
09:43 - iteration and
09:44 - doing that we can never reach this
09:46 - condition here
09:47 - this condition here will never become
09:49 - false so that means that here we have
09:51 - created
09:52 - an infinite loop and here our previous
09:55 - studio says consider
09:56 - inspecting this for operators so
09:59 - consider inspecting this for loop here
10:00 - because
10:02 - it will not be executed at all or it can
10:05 - be executed incorrectly and in this
10:06 - particular situation
10:08 - it is going to be executed incorrectly
10:10 - so it is going to
10:12 - be an infinite loop which we don't want
10:14 - in this particular situation so
10:16 - i'm going to correct this error here so
10:18 - i'm going to return it to i
10:20 - plus plus but that is sort of a help
10:23 - that you can get from
10:24 - pvstudio and this here is a pretty
10:26 - simple program
10:27 - because it has just a few lines of code
10:29 - where all the bugs can potentially
10:31 - happen but
10:32 - imagine working on a very very big
10:34 - project
10:35 - and then something like this happens so
10:38 - imagine something like this happening
10:40 - on a program that a bank uses so you are
10:42 - trying to save money for a couple of
10:44 - months and then the program says that
10:45 - you are in debt
10:46 - that your balance is minus 2 000 or 20
10:50 - 000
10:51 - or something like this so this can
10:53 - create very very big issues and in this
10:55 - particular situation if you have a bug
10:57 - like this
10:58 - you will want to have all the help that
11:01 - you can get
11:02 - and sometimes that can be uh just the
11:05 - help that you get from your compiler or
11:07 - if you have a very very big problem
11:09 - you will definitely benefit from tools
11:11 - like pvs studio which will give you some
11:13 - additional information
11:14 - on that situation that is happening and
11:16 - on that problem that you are having
11:18 - and then there are other situations
11:20 - where you can have very very big
11:21 - problems
11:22 - but your compiler will not be helpful at
11:25 - all because your compiler will not be
11:27 - able
11:27 - to see those potential bugs that you are
11:30 - creating inside your code
11:31 - so in order to demonstrate that let's
11:33 - delete all of this code here because i
11:35 - will not
11:36 - need it anymore and what i do need is
11:39 - to create a function here so let's
11:42 - create a function of return type
11:44 - void and i'm going to call it my
11:47 - function like this
11:51 - okay and what i want to do inside this
11:54 - function is i want to create
11:56 - an integer pointer ptr
11:59 - so if you are not familiar with the
12:00 - topic of pointers make sure to watch
12:02 - the playlist that i will link here it is
12:04 - the playlist where i explain
12:06 - pointers in c plus because it is one of
12:08 - the most important topics in c
12:10 - plus and it is the example that i will
12:12 - be using here
12:14 - so i have created an integer pointer
12:17 - and i'm going to say now you will point
12:20 - to
12:20 - a new array of integers and that array
12:24 - will have
12:25 - five elements like this now what do i
12:28 - want to do
12:29 - with this array well let's do something
12:32 - very simple let's say
12:33 - ptr of two will hold the value
12:37 - okay it will hold the value of 10 like
12:40 - this and then let's just write out
12:42 - something let's say
12:44 - hi i am
12:47 - equal to and then ptr of 2
12:51 - okay so this here is pretty simple
12:54 - example that does basically nothing
12:56 - important nothing useful but i will use
12:58 - it to demonstrate a very very big
13:00 - issue that can happen in this situation
13:03 - so
13:04 - i'm going to invoke this function here
13:06 - so i'm going to say
13:08 - my function like this and
13:11 - i have successfully invoked this
13:13 - function so if i run this program
13:19 - it says hi i am 10. so
13:23 - nothing unexpected happened or did it
13:27 - okay um if i inspect my errors list
13:31 - it says that i don't have any errors
13:34 - so if you ask a compiler it will tell
13:36 - you that everything is perfectly
13:38 - fine so let's now ask pbs studio here it
13:41 - has already detected two potential
13:43 - issues
13:44 - but you can click pdf studio and then
13:46 - check current file just to be sure
13:49 - okay and it says
13:52 - visibility scope of the ptr pointer was
13:55 - exited without
13:56 - releasing the memory a memory leak is
14:00 - possible so what we have done here in
14:02 - this program is we have created
14:04 - memory leak where
14:08 - here so here we have said please
14:11 - give me in my dynamic memory give me
14:14 - array of five
14:16 - integers and this is going to be done
14:19 - in dynamic memory so once this function
14:22 - is finished once this function
14:24 - ends we are going to lose this ptr so we
14:27 - are going to lose
14:28 - the address of the first element of this
14:31 - array here so
14:32 - here if i try to do something like ptr
14:36 - i cannot access this variable here
14:38 - anymore
14:39 - this variable has its scope and that
14:41 - scope is inside
14:42 - this function here and once this
14:44 - function
14:45 - exits we are going to lose the address
14:48 - of this array here which means
14:50 - that we will not be able to deallocate
14:53 - this memory here
14:54 - now let's delete this okay here
14:58 - as you can see this memory leak is not a
15:00 - big memory leak here we are leaking
15:02 - five integers so we are leaking an array
15:05 - of five integers and that is not
15:07 - very big problem but usually what
15:09 - happens in real life is that you are not
15:11 - creating
15:12 - an array of five integers usually you
15:14 - are creating things that require
15:16 - much more memory than just an integer
15:19 - array of five elements
15:21 - so here as i said we are leaking five
15:23 - integers but imagine a situation where
15:25 - you're
15:26 - creating an array of 5000 or 50 000
15:30 - and not integers but objects of type
15:33 - user like this and this user has some
15:37 - pretty heavy data in it for example it
15:39 - has some
15:40 - images and things like that so here you
15:42 - are creating
15:43 - 50 000 users and to make things worse
15:47 - imagine not invoking this function only
15:49 - once but
15:50 - imagine invoking this function in a for
15:53 - loop for
15:54 - example so invoking it 100 times or 1000
15:57 - times or
15:58 - 100 000 times that is going to be a huge
16:01 - memory leak so what this line of code
16:04 - here does
16:05 - is it asks your operating system for
16:07 - dynamic memory so it says
16:10 - please can you give me new memory so can
16:13 - you give me dynamic memory that i need
16:15 - to store this data here and your
16:18 - operating system gives that memory
16:20 - to your program so it allocates that
16:23 - memory for your program
16:24 - and then once this function here
16:26 - finishes
16:27 - you will lose all the variables that you
16:30 - have created inside that function
16:32 - and that is this ptr variable here so
16:35 - that means that the address
16:37 - of this array here which was stored
16:39 - inside this
16:40 - ptr variable is lost now and now you
16:43 - will not be able to deallocate this
16:46 - memory here
16:47 - which means that you will not be able to
16:49 - say okay now i am done
16:51 - with this memory which is a lot of
16:53 - memory and now i'm going to return that
16:55 - back
16:56 - to my operating system because i don't
16:58 - have unlimited amounts of memory and my
17:00 - operating system
17:02 - maybe would like to give that memory to
17:03 - some other program
17:05 - so once this function here ends and you
17:08 - don't
17:08 - deallocate this memory here you are
17:11 - leaking
17:12 - that memory and that is exactly the
17:15 - error that you have here it says a
17:16 - memory leak is
17:18 - possible whereas your compiler here
17:21 - said expected a type specifier which is
17:23 - uh error that we have here because it
17:25 - does not know what is this user so i'm
17:27 - going to return this back to int
17:29 - okay now that error has disappeared but
17:32 - your compiler does not know that you are
17:34 - leaking
17:35 - memory here whereas your previous studio
17:37 - analyzer here says
17:39 - that a memory leak is happening so
17:42 - how do you fix this error here well
17:46 - for each new you need to have
17:49 - delete again you need to watch my c plus
17:52 - pointers playlist in order to understand
17:55 - pointers if you don't understand this
17:57 - already so as i said for each new you
17:59 - need to have delete so i'm going to say
18:02 - delete and let's delete this ptr let's
18:05 - see what is going to happen
18:06 - now so if i click extensions and then
18:08 - pbs studio check current file
18:11 - it says the memory was allocated using
18:14 - new
18:14 - array type operator but it was released
18:17 - using
18:18 - delete operator and then it gives you a
18:20 - recommendation here it says
18:22 - use delete array pointer etc instead
18:25 - so here we are trying to allocate memory
18:28 - for an array but we are not deleting
18:30 - that entire array so here we are leaking
18:33 - memory again
18:34 - so here i'm going to use these square
18:36 - brackets in order to indicate that i
18:38 - want to delete
18:39 - this entire array that i have allocated
18:42 - in this line of code here so now we
18:45 - shouldn't be
18:46 - leaking memory anymore so let's check
18:48 - that out i'm going to say
18:49 - pbs studio chat current file and
18:53 - let's see we have that error that we
18:56 - previously had which is your license
18:58 - will expire in five days but we do not
19:00 - have
19:00 - memory leaks anymore which is great so
19:03 - errors like this memory leaks are very
19:06 - common when you work with pointers in c
19:08 - plus and these memory leaks can create
19:10 - huge problems if you have them
19:12 - in your code and as you could already
19:15 - see in most cases you cannot really
19:16 - count on your compiler
19:18 - to tell you that you are leaking memory
19:20 - because in most cases it will not even
19:22 - be able
19:23 - to see that so tools like pvs studio can
19:26 - be
19:26 - very helpful in those situations you
19:28 - could see all those
19:30 - little tips and recommendations that we
19:32 - had from pbs studio that helped
19:34 - us to fix issues that we had related
19:38 - to leaking memory so those were some
19:40 - topics that i wanted to address in this
19:42 - video because many people
19:43 - when working with pointers will come
19:45 - across problems that they will not be
19:47 - able to fix
19:48 - or they will not even be aware that they
19:50 - have those problems
19:52 - that they have memory leaks until it
19:54 - gets to the point where it is
19:56 - unmanageable and they have very big
19:59 - problem they have huge problem
20:00 - so if you have any more questions that
20:04 - you would like me to make a video on
20:06 - please leave those in the comments down
20:08 - below and if you like this type of video
20:10 - please
20:10 - give this video a thumbs up so that i
20:12 - can know and i will make more videos
20:14 - like this in the future if you want me
20:16 - to
20:17 - so thank you very much for watching this
20:19 - video and i
20:20 - am going to see you in my next video bye

Cleaned transcript:

hi everyone welcome to my channel my name is saldina i'm a software engineer and i make it and programming related videos here on youtube and in this video i will be doing something that i haven't done before and that is reviewing your code and we will see some errors that you guys have sent me so i get a lot of messages a lot of questions on my instagram on twitter and then here on youtube as well in the comments where you ask me for an opinion or for advice on certain errors that happen to you in programming and i try to answer as many of those as possible but it's just not possible to answer to all of you and i'm very very sorry but i thought that it would be a good idea to make a video related to that so that all of you can see it so here i am i'm making that video right now so in this video i will be reviewing some code and we will see some errors that can happen and that do happen very often and i'm going to do that boat manually and then i want to show you a very cool tool which is called pvs studio i'm going to leave details in the description down below so that you can check it out for yourself but what pvs studio is it is static code analyzer so it is basically a tool that reviews your code and helps you detect bugs and errors and security weaknesses in your code so in the case that you need another pair of eyes to look at your code and give you a few tips and recommendations it is a great tool to use and you can get it as a team license for teams up to nine people or you can get an enterprise license for bigger companies bigger departments or you can even request a free license if you are a student if you are working on some private projects or on some open source projects and then one very cool thing is that it is not only used to analyze c plus code but you can use it for c and then c sharp and java as well and i am wondering guys which team are you in are you team c plus or are you team c sharp or java or c i'm very curious to read your answers so please write me in the comments down below and if you ask me i'm definitely team c plus plus and then team c sharp those are just two of my favorite languages ever but i am very curious to read what you will answer to this question so um i'm going to leave all the details about pvs studio in the description of this video so that you can check it out for yourself and let's jump into the coding part right now because i am very very excited to do this here i have created a new project and i have this program that does basically nothing so what i want to do is i want to check if everything is okay with this code so far so if we have made any errors so far so i'm going to click on extensions and then pbs studio and here you have multiple options you can check your current file you can check open files or you can check your project selected items solution i'm going to select this first option so i'm going to check this current file and you get this window here and as you can see we have one error and that error is that my license will expire in five days okay so that is not here which is related to our code so we are just going to ignore it so we don't have code errors so far and let me show you how you can install this tool very quickly so you click on extensions and then manage extensions okay and then here you can search for pvs studio like this okay great it is this one here so pbs studio is a tool for detecting bugs and security weaknesses and so on okay so you will click download here and your download should begin i'm not going to do that right now because i already have it but once it is downloaded the installation is pretty simple so it's basically next next next finish installation so that should be simple okay now let's close this window here and as you could see we don't have any errors with this code so far so let's write some code and let's create some errors now so let's create an array of type in and i will call it saved money and that will be array of five elements and i want to initialize those elements here so the purpose of this array is following let's say that i want to save some money each month and i want to store that data in this array here so i'm going to save money for five months and i will store how much money i have saved each month inside this array here so for example the first month i have saved 100 dollars or euros or whatever and then second month i have saved 200 and then 300 and 400 and 500 fifth month okay so this is our array now what i want to do with this data here is i want to sum it after five months i want to know how much money i have saved in total so i'm going to create a variable of type int and i will call it total like this and i will initially give it a value of 0 and then i will iterate through this array here so i will say 4 int i is equal to 0 and then i is less than or equal to 5 and then i plus plus and what i will do inside this for loop is i will say that my total will hold whatever my total was previously holding plus current value of how much money i have saved in that month so save money off i okay now after i have done this i will just write out how much money i have in total so i will say total and then this value that is stored inside this variable here okay now if i run this program let's see what will happen well it says that in total i have minus 8 billion something very very big number so i have tried to save each month and then at the end i have minus eight billion dollars you know so that does not make any sense so here we have a logical error okay so let's see what is this error that is happening so let's click on extensions and pvs studio check current file to see what kind of error pvstudio sees and it says array overrun as possible the value of i index could reach 5 and if i double click on that it will take me here and this part of code here is underlined and this is actually our compiler our compiler is underlying this and it says that okay it says index five is out of valid index range of 0 to 4. so this here this situation here says that this i is out of range of valid indexes that this array here can have and if you are familiar with arrays you know that indexing of an array starts with zero so the first element has index of zero and then one two three and four so valid indexes for this array here are from zero to four and here we have accidentally written that this i is less than or equal to 5 and that is making a problem so if i delete this part here so if i say that my i is just less than 5 this error should disappear so if i click on pvs studio and then check current file the error should disappear okay it has disappeared now so if i run my program this program is behaving as expected so this is one thing that very often happens you can accidentally write less than or equal to and then you can get a very very big logical error another thing that can happen is if you are typing very quickly and if you lose concentration for a moment and here instead of incrementing you decrement this counter so you say i minus minus you should get an error as well so if i try to build this program let's see what our compiler will tell us so here in this error list it says illdefined for loop counts down from minimum so that's kind of helpful information and then another let's read this other warning it says reading invalid data from saved memory the readable size is 20 bytes but minus 4 bytes maybe a read so this is not really helpful for someone who is just starting and then this third message it says index minus 2 billion something is out of valid index range 0 to 4. again this is not really helpful for someone who is just starting so let's see what our pvs studio has to say so i'm going to click extensions pbs studio check current file okay and this first error here says the condition i less than 5 or for loop is always true so this is actually a helpful message and if i click on this i will be taken here and it says that this condition here i is less than 5 is always true but why is it always true because we have started counting at zero and then we try to decrement that value in each iteration and doing that we can never reach this condition here this condition here will never become false so that means that here we have created an infinite loop and here our previous studio says consider inspecting this for operators so consider inspecting this for loop here because it will not be executed at all or it can be executed incorrectly and in this particular situation it is going to be executed incorrectly so it is going to be an infinite loop which we don't want in this particular situation so i'm going to correct this error here so i'm going to return it to i plus plus but that is sort of a help that you can get from pvstudio and this here is a pretty simple program because it has just a few lines of code where all the bugs can potentially happen but imagine working on a very very big project and then something like this happens so imagine something like this happening on a program that a bank uses so you are trying to save money for a couple of months and then the program says that you are in debt that your balance is minus 2 000 or 20 000 or something like this so this can create very very big issues and in this particular situation if you have a bug like this you will want to have all the help that you can get and sometimes that can be uh just the help that you get from your compiler or if you have a very very big problem you will definitely benefit from tools like pvs studio which will give you some additional information on that situation that is happening and on that problem that you are having and then there are other situations where you can have very very big problems but your compiler will not be helpful at all because your compiler will not be able to see those potential bugs that you are creating inside your code so in order to demonstrate that let's delete all of this code here because i will not need it anymore and what i do need is to create a function here so let's create a function of return type void and i'm going to call it my function like this okay and what i want to do inside this function is i want to create an integer pointer ptr so if you are not familiar with the topic of pointers make sure to watch the playlist that i will link here it is the playlist where i explain pointers in c plus because it is one of the most important topics in c plus and it is the example that i will be using here so i have created an integer pointer and i'm going to say now you will point to a new array of integers and that array will have five elements like this now what do i want to do with this array well let's do something very simple let's say ptr of two will hold the value okay it will hold the value of 10 like this and then let's just write out something let's say hi i am equal to and then ptr of 2 okay so this here is pretty simple example that does basically nothing important nothing useful but i will use it to demonstrate a very very big issue that can happen in this situation so i'm going to invoke this function here so i'm going to say my function like this and i have successfully invoked this function so if i run this program it says hi i am 10. so nothing unexpected happened or did it okay um if i inspect my errors list it says that i don't have any errors so if you ask a compiler it will tell you that everything is perfectly fine so let's now ask pbs studio here it has already detected two potential issues but you can click pdf studio and then check current file just to be sure okay and it says visibility scope of the ptr pointer was exited without releasing the memory a memory leak is possible so what we have done here in this program is we have created memory leak where here so here we have said please give me in my dynamic memory give me array of five integers and this is going to be done in dynamic memory so once this function is finished once this function ends we are going to lose this ptr so we are going to lose the address of the first element of this array here so here if i try to do something like ptr i cannot access this variable here anymore this variable has its scope and that scope is inside this function here and once this function exits we are going to lose the address of this array here which means that we will not be able to deallocate this memory here now let's delete this okay here as you can see this memory leak is not a big memory leak here we are leaking five integers so we are leaking an array of five integers and that is not very big problem but usually what happens in real life is that you are not creating an array of five integers usually you are creating things that require much more memory than just an integer array of five elements so here as i said we are leaking five integers but imagine a situation where you're creating an array of 5000 or 50 000 and not integers but objects of type user like this and this user has some pretty heavy data in it for example it has some images and things like that so here you are creating 50 000 users and to make things worse imagine not invoking this function only once but imagine invoking this function in a for loop for example so invoking it 100 times or 1000 times or 100 000 times that is going to be a huge memory leak so what this line of code here does is it asks your operating system for dynamic memory so it says please can you give me new memory so can you give me dynamic memory that i need to store this data here and your operating system gives that memory to your program so it allocates that memory for your program and then once this function here finishes you will lose all the variables that you have created inside that function and that is this ptr variable here so that means that the address of this array here which was stored inside this ptr variable is lost now and now you will not be able to deallocate this memory here which means that you will not be able to say okay now i am done with this memory which is a lot of memory and now i'm going to return that back to my operating system because i don't have unlimited amounts of memory and my operating system maybe would like to give that memory to some other program so once this function here ends and you don't deallocate this memory here you are leaking that memory and that is exactly the error that you have here it says a memory leak is possible whereas your compiler here said expected a type specifier which is uh error that we have here because it does not know what is this user so i'm going to return this back to int okay now that error has disappeared but your compiler does not know that you are leaking memory here whereas your previous studio analyzer here says that a memory leak is happening so how do you fix this error here well for each new you need to have delete again you need to watch my c plus pointers playlist in order to understand pointers if you don't understand this already so as i said for each new you need to have delete so i'm going to say delete and let's delete this ptr let's see what is going to happen now so if i click extensions and then pbs studio check current file it says the memory was allocated using new array type operator but it was released using delete operator and then it gives you a recommendation here it says use delete array pointer etc instead so here we are trying to allocate memory for an array but we are not deleting that entire array so here we are leaking memory again so here i'm going to use these square brackets in order to indicate that i want to delete this entire array that i have allocated in this line of code here so now we shouldn't be leaking memory anymore so let's check that out i'm going to say pbs studio chat current file and let's see we have that error that we previously had which is your license will expire in five days but we do not have memory leaks anymore which is great so errors like this memory leaks are very common when you work with pointers in c plus and these memory leaks can create huge problems if you have them in your code and as you could already see in most cases you cannot really count on your compiler to tell you that you are leaking memory because in most cases it will not even be able to see that so tools like pvs studio can be very helpful in those situations you could see all those little tips and recommendations that we had from pbs studio that helped us to fix issues that we had related to leaking memory so those were some topics that i wanted to address in this video because many people when working with pointers will come across problems that they will not be able to fix or they will not even be aware that they have those problems that they have memory leaks until it gets to the point where it is unmanageable and they have very big problem they have huge problem so if you have any more questions that you would like me to make a video on please leave those in the comments down below and if you like this type of video please give this video a thumbs up so that i can know and i will make more videos like this in the future if you want me to so thank you very much for watching this video and i am going to see you in my next video bye
