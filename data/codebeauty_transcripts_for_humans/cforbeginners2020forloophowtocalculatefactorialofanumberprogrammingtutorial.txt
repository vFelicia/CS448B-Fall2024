With timestamps:

00:00 - hi everyone welcome to my channel
00:02 - welcome to another video of C++ for
00:04 - beginners
00:04 - in this video I want to talk about for
00:07 - loops but before we start make sure to
00:09 - subscribe to my channel and hit that
00:11 - Bell icon as well okay so what I'm going
00:15 - to explain today I want to explain to
00:17 - you how for loop works and I'm going to
00:20 - explain that on a simple example which
00:22 - is calculating the factorial of a number
00:25 - so let me copy the text of our task here
00:30 - like this and I'm going to comment it
00:32 - out so what is the factorial of a number
00:36 - factorial of a number is usually defined
00:39 - as a product of all numbers between 1
00:43 - and that number that you want to call
00:45 - calculate the factorial of that means
00:48 - for example if your user enters number 6
00:51 - let's say and you want to calculate the
00:53 - factorial of number 6 you are going to
00:56 - do that in a following way so 1 x 2 x 3
01:02 - 4 5 and 36 ok and then this here is
01:11 - going to result in 720 so this 720 is
01:17 - really going to be the result of your
01:18 - factorial of 6 and this example here is
01:23 - what we want to really translate in our
01:25 - program so we want our user to enter a
01:27 - number and then we want to calculate the
01:30 - factorial of that number and write that
01:32 - result out to our user and we are going
01:36 - to use for loop for that so let me
01:39 - quickly declare a variable which is
01:43 - going to be called number okay like this
01:47 - and let's prompt our user that he should
01:50 - enter a number and then let's really
01:55 - store that number that our user enters
01:59 - in our number variable okay so after we
02:05 - have acquired a number that we want to
02:07 - calculate our factorial off let's
02:11 - explain how we are going to
02:13 - really do that so I'm going to do that
02:16 - using for loop and what is the
02:19 - difference between for loop and while
02:21 - loop and dowhile loop because we have
02:23 - previously talked about while loop and
02:25 - do-while loop as well you can find those
02:27 - videos on my channel if you're
02:28 - interested and I'm going to link those
02:30 - videos in the description of this video
02:32 - if you want to watch them so the
02:35 - difference is that usually when you use
02:37 - for a loop
02:38 - beforehand you should know how many
02:40 - iterations that loop is going to make so
02:43 - for how long your loop is going to run
02:46 - so let me show you the syntax of our for
02:50 - loop you say for and then you use these
02:53 - parentheses here in which we are going
02:55 - to put certain expressions in a moment
02:57 - and after that you put these curly
03:00 - brackets in which we are going to write
03:02 - out the code that is going to be
03:04 - executed in each iteration of our for
03:07 - loop so inside these parentheses here we
03:10 - need to put three things
03:12 - what are those three things the first
03:14 - one is going to be to set the initial
03:17 - value of our counter variable that is
03:20 - the first one after that the second is
03:22 - going to be to really put the condition
03:24 - that your for loop is going to check
03:27 - each time that it wants to run this
03:29 - block of code here so before each
03:31 - iteration it is going to check that
03:33 - condition so that is going to be the
03:36 - second thing and after that the third
03:38 - thing is going to be really a way for
03:40 - your counter value to come to that
03:43 - condition condition which means that you
03:45 - have to either increase or decrease your
03:47 - counter variable in order to reach that
03:50 - condition at certain point and then when
03:53 - that condition result is false your for
03:55 - loop is not going to be executed anymore
03:58 - okay so those are three things that we
04:01 - need to put in these parentheses here
04:03 - and let's now look at this example here
04:05 - because from here we are going to really
04:08 - deduct which conditions which
04:11 - expressions we are going to put here so
04:13 - if you notice this algorithm here
04:16 - because this is really algorithm nothing
04:18 - else you see that this is really a
04:23 - counter this behaves as counter so it
04:25 - goes one
04:26 - two three four and it really starts at
04:30 - one and then it goes up to that value
04:34 - that your user has entered so we can use
04:37 - that for our expression here the first
04:42 - expression is initial value of our
04:44 - counter we need to declare that variable
04:46 - and we are going to call that variable I
04:48 - you can call it counter or whatever you
04:52 - want really your compiler is not going
04:56 - to give you an error because of that but
04:58 - the common practice is to use a single
05:00 - letter variable name for this counter
05:04 - that you use in your for loop so I'm
05:06 - going to use name I for that and the
05:09 - initial value of my I counter is going
05:12 - to be one because as you can see here it
05:15 - really starts on one and then after that
05:19 - we need to put the condition that your
05:22 - for loop is going to check each time
05:23 - that it wants to run a new iteration and
05:25 - that condition as you can see here is
05:28 - really this this expression here this
05:31 - algorithm runs until it comes to this
05:34 - six until it comes to the value that
05:37 - your user has entered so we are going to
05:40 - put that here we are going to say please
05:42 - run this block of code here until my eye
05:45 - is less or equal to number like this so
05:51 - whichever number our user enters and
05:53 - then the third thing is going to be
05:56 - really to give our loop a way to reach
06:00 - this condition here at some point which
06:02 - means to make this condition here false
06:05 - and then leave our for loop and again we
06:10 - look here and you can see that your
06:13 - counter is really increasing in each
06:15 - iteration by one okay so here we are
06:19 - going to put I plus plus which is in
06:23 - each iteration going to increase the
06:25 - value of our I counter by one okay so
06:30 - after we have put these expressions in
06:34 - these parentheses of our for loop we
06:36 - need to really put a block of code that
06:39 - is going to be executed
06:40 - in each iteration of our for loop and
06:43 - I'm going to declare before this for a
06:46 - loop here I'm going to declare another
06:47 - variable which I'm going to call
06:49 - factorial and I'm going to give it a
06:52 - type of int okay you like this and I'm
06:59 - going to assign the initial value to my
07:02 - factorial factorial variable and that is
07:04 - going to be one and then how I'm going
07:10 - to use this factorial variable in each
07:12 - iteration of my for loop I want to say
07:15 - that my factorial is going to be equal
07:19 - to whatever my factorial was previously
07:22 - holding multiplied that by my current I
07:26 - value which means by the current value
07:28 - of my counter and how this is going to
07:32 - behave so let's say that our user enters
07:36 - for example number three and then your
07:39 - execution comes here and it says please
07:41 - declare of variable which is going to be
07:43 - called factorial and it is going to have
07:45 - a value of 1 so we have assigned that
07:48 - value here and then it comes to your for
07:51 - loop the first thing that your for loop
07:53 - is going to do is it is going to declare
07:56 - this I variable here and assign it a
07:59 - value of 1 so we are going to write that
08:03 - here so we are going to say I is equal
08:05 - to 1 and then it really goes here and
08:10 - checks this condition here before it
08:12 - determines whether it's going to run
08:14 - this block of code here or not so if
08:17 - this here results is true it is going to
08:19 - run this block of code here and if not
08:22 - it is going to leave your for loop so is
08:25 - your I less or equal to the number that
08:28 - our user has entered so your eye is
08:31 - going to be 1 and then that is less or
08:34 - equal to 3 so your for loop is going to
08:37 - execute this block of code here which
08:40 - means that it is going to come here and
08:42 - say factorial multiplied by 1 which is
08:45 - going to be 1 multiplied by 1 and that
08:48 - is going to result as 1 and it is going
08:51 - to assign the result of this here
08:53 - - your factorial variable which is going
08:56 - to stay one after that your for loop
08:59 - comes here and at this close bracket
09:02 - here it really goes here and it
09:05 - increases the value of your eye and this
09:09 - increment operator is going to increase
09:10 - it by one so your eye now becomes two
09:13 - and then after that it goes back here
09:16 - and checks this condition here so it
09:19 - says please check whether my two is less
09:23 - or equal to the number that your user
09:25 - has entered so 2 is less or equal to 3
09:29 - so it is going to run this block of code
09:32 - here again and that it is going to do
09:35 - following so it is going to say please
09:36 - multiply my factorial value so the
09:39 - previous value is my factorial was
09:41 - holding which is 1 by the current value
09:44 - of my eye which is 1 multiplied by 2
09:48 - that is going to result as 2 and that is
09:51 - going to be assigned to your factorial
09:53 - variable so we assign to here okay and
09:56 - then it goes back to these closed
09:59 - bracket and then it goes here increases
10:03 - the value of your eye again so your eye
10:06 - now is tree and then it really checks
10:10 - this condition here so whether 3 is less
10:12 - or equal to 3 the result of that is
10:15 - going to be yes so it is going to do
10:18 - this expression here again so the
10:20 - current value out here factorial which
10:22 - is going to be 2 multiplied by the
10:24 - current value of your counter variable
10:26 - which is going to be 3 so 2 multiplied
10:30 - by 3 that is going to be 6 and that is
10:32 - going to be assigned to your factorial
10:34 - variable after that it goes here and
10:37 - that it really increases again the value
10:40 - of your eye variable so of the counter
10:43 - that you are using in your for loop and
10:45 - that value becomes 4 now after that it
10:49 - is going to try to check this expression
10:52 - here so this condition here and 4 is not
10:56 - less or equal to 3 so your for loop is
11:01 - not going to execute any more and then
11:03 - your really your your execution comes
11:05 - here
11:07 - and at this line of code here it has the
11:10 - value of six in your factorial variable
11:12 - which means that we are left only with
11:16 - the need to write out this to our users
11:19 - so we need to say let's say if like this
11:24 - number okay and then let's say factorial
11:29 - of that number is going to be equal to
11:32 - and then let's write out the result so
11:36 - the result we are holding in our
11:38 - factorial variable like this so this
11:43 - should really write out the result of
11:45 - this here so the factorial of this
11:49 - number that our user has entered and if
11:51 - I run my program you can see that it
11:55 - asks us to enter a number I'm going to
11:58 - say let's say for example three and that
12:01 - if I press ENTER it is going to give us
12:03 - the result of six which is the correct
12:06 - result the one that we previously got
12:08 - let's run it one more time just check
12:11 - this number here so I'm going to say
12:14 - please give me a factorial of six and it
12:19 - calculates that the factorial of six is
12:21 - 720 as we did before so this is going to
12:26 - be really one way of writing this for
12:29 - loop for this current example so for
12:32 - calculating factorial I want to show you
12:34 - another way how you can do exactly the
12:37 - same thing so I'm going to really
12:39 - comment this part of code here so I'm
12:43 - going to say comment this block of code
12:45 - here and then there is another way to
12:48 - write these parentheses here so as you
12:53 - can see this example here is what we
12:55 - have used in order to write these
12:58 - expressions inside these parentheses but
13:00 - there is really one more way to
13:02 - calculate your factorial and that is
13:04 - going to be to start at this maximum
13:08 - value which means six factorial is equal
13:12 - to six multiplied by five by four three
13:17 - two
13:18 - why and that is going to be equal to 720
13:22 - so now you start your counter at this
13:25 - maximum value so this number that your
13:28 - user has entered and then you really
13:31 - decrease the value of your culture and
13:33 - you go until your counter value comes to
13:37 - one and that is the condition when you
13:40 - stop so your one value of a counter is
13:42 - going to be the last iteration through
13:44 - your for loop so now we are going to
13:46 - write out so actually we are going to
13:49 - really write our for loop using this
13:52 - algorithm here so we are going to save
13:54 - for and then also put this these
14:00 - parentheses which we are going to use
14:02 - for the block of code that we want to
14:03 - run through in each iteration and in
14:06 - these parentheses here I'm going to set
14:08 - the initial value of my culture that is
14:13 - going to be I is equal to and as you can
14:16 - see here our I starts at six so I'm
14:19 - going to put here six which means a
14:21 - number that our user has entered in this
14:24 - current situation it is six but since we
14:26 - want to calculate the factorial of
14:28 - whichever number our user decides to
14:30 - enter I'm going to use that variable
14:32 - here okay and then the condition that
14:36 - your for loop is going to check each
14:38 - time that it wants to make a new
14:39 - iteration and that is going to be please
14:42 - run this block of code here until my I
14:46 - is greater than or equal to one
14:51 - okay and then the last thing that we
14:55 - need to put here is going to be really a
14:56 - way for our for loop to stop at a
14:59 - certain point and if you look at this
15:03 - example here you see that your counter
15:05 - is decreasing by one in each iteration
15:08 - so we are going to put that here we are
15:10 - going to say I - - which means use this
15:13 - decrement operator on our I variable and
15:17 - then we are going to really use the same
15:19 - expression here okay and this is going
15:25 - to give us the exact exactly the same
15:27 - result as this code here dead so if I
15:29 - run my program you
15:31 - see that it asks number again so if I
15:34 - enter number six for example it is going
15:37 - to give us 720 as this code here did as
15:41 - well so let's repeat one more time there
15:44 - are three things that you need to put in
15:46 - these parentheses here in order to set
15:48 - up your for loop and the first one of
15:51 - those three is going to be to set the
15:53 - initial value of your I variable which
15:55 - means the initial value of your counter
15:57 - after that you need to put the condition
16:00 - which is going to be checked each time
16:02 - that your for loop wants to run an
16:03 - iteration and if this condition here
16:06 - results as true in your for loop is
16:09 - going to run this block of code here but
16:11 - if this condition here results as false
16:14 - your for loop is not going to run this
16:16 - block of code here but you are really
16:18 - going to leave your for loop and come to
16:20 - the next line after it and then the
16:23 - third thing that you need to put in
16:25 - these parentheses here is going to be
16:27 - really to either increase or decrease
16:29 - value off your counter variable so that
16:32 - it can reach this condition here at
16:35 - certain point and make it false so we
16:38 - have decreased it in this example here
16:40 - and we have increased it in this example
16:42 - here so those are three things that you
16:44 - need to put inside these parentheses
16:46 - here and you really need to separate
16:48 - those three using this semi column sign
16:52 - okay and there's one more thing that I
16:55 - need to mention and that is going to be
16:56 - really you can upgrade this program here
16:59 - so that it checks whether this number
17:01 - here is greater than zero because you
17:05 - cannot calculate factorial of negative
17:08 - numbers so our program is not going to
17:09 - behave as expected
17:11 - if you enter a negative number and also
17:13 - the factorial of zero is going to be
17:16 - equal to one so you can put that code
17:20 - here and determine whether your user has
17:22 - entered positive or negative number and
17:25 - in case that your user has entered
17:26 - negative number make sure to write out
17:28 - appropriate message to your user so I
17:31 - think that is all if you liked this
17:33 - video and if you learned something new
17:35 - make sure to subscribe to my channel and
17:37 - hit that Bell icon as well share it on
17:39 - your social media because it really
17:41 - helps me to reach a lot more people so
17:43 - that
17:44 - all of us can learn and operate our
17:46 - knowledge and programming and I'm going
17:49 - to see you in my next video bye

Cleaned transcript:

hi everyone welcome to my channel welcome to another video of C++ for beginners in this video I want to talk about for loops but before we start make sure to subscribe to my channel and hit that Bell icon as well okay so what I'm going to explain today I want to explain to you how for loop works and I'm going to explain that on a simple example which is calculating the factorial of a number so let me copy the text of our task here like this and I'm going to comment it out so what is the factorial of a number factorial of a number is usually defined as a product of all numbers between 1 and that number that you want to call calculate the factorial of that means for example if your user enters number 6 let's say and you want to calculate the factorial of number 6 you are going to do that in a following way so 1 x 2 x 3 4 5 and 36 ok and then this here is going to result in 720 so this 720 is really going to be the result of your factorial of 6 and this example here is what we want to really translate in our program so we want our user to enter a number and then we want to calculate the factorial of that number and write that result out to our user and we are going to use for loop for that so let me quickly declare a variable which is going to be called number okay like this and let's prompt our user that he should enter a number and then let's really store that number that our user enters in our number variable okay so after we have acquired a number that we want to calculate our factorial off let's explain how we are going to really do that so I'm going to do that using for loop and what is the difference between for loop and while loop and dowhile loop because we have previously talked about while loop and dowhile loop as well you can find those videos on my channel if you're interested and I'm going to link those videos in the description of this video if you want to watch them so the difference is that usually when you use for a loop beforehand you should know how many iterations that loop is going to make so for how long your loop is going to run so let me show you the syntax of our for loop you say for and then you use these parentheses here in which we are going to put certain expressions in a moment and after that you put these curly brackets in which we are going to write out the code that is going to be executed in each iteration of our for loop so inside these parentheses here we need to put three things what are those three things the first one is going to be to set the initial value of our counter variable that is the first one after that the second is going to be to really put the condition that your for loop is going to check each time that it wants to run this block of code here so before each iteration it is going to check that condition so that is going to be the second thing and after that the third thing is going to be really a way for your counter value to come to that condition condition which means that you have to either increase or decrease your counter variable in order to reach that condition at certain point and then when that condition result is false your for loop is not going to be executed anymore okay so those are three things that we need to put in these parentheses here and let's now look at this example here because from here we are going to really deduct which conditions which expressions we are going to put here so if you notice this algorithm here because this is really algorithm nothing else you see that this is really a counter this behaves as counter so it goes one two three four and it really starts at one and then it goes up to that value that your user has entered so we can use that for our expression here the first expression is initial value of our counter we need to declare that variable and we are going to call that variable I you can call it counter or whatever you want really your compiler is not going to give you an error because of that but the common practice is to use a single letter variable name for this counter that you use in your for loop so I'm going to use name I for that and the initial value of my I counter is going to be one because as you can see here it really starts on one and then after that we need to put the condition that your for loop is going to check each time that it wants to run a new iteration and that condition as you can see here is really this this expression here this algorithm runs until it comes to this six until it comes to the value that your user has entered so we are going to put that here we are going to say please run this block of code here until my eye is less or equal to number like this so whichever number our user enters and then the third thing is going to be really to give our loop a way to reach this condition here at some point which means to make this condition here false and then leave our for loop and again we look here and you can see that your counter is really increasing in each iteration by one okay so here we are going to put I plus plus which is in each iteration going to increase the value of our I counter by one okay so after we have put these expressions in these parentheses of our for loop we need to really put a block of code that is going to be executed in each iteration of our for loop and I'm going to declare before this for a loop here I'm going to declare another variable which I'm going to call factorial and I'm going to give it a type of int okay you like this and I'm going to assign the initial value to my factorial factorial variable and that is going to be one and then how I'm going to use this factorial variable in each iteration of my for loop I want to say that my factorial is going to be equal to whatever my factorial was previously holding multiplied that by my current I value which means by the current value of my counter and how this is going to behave so let's say that our user enters for example number three and then your execution comes here and it says please declare of variable which is going to be called factorial and it is going to have a value of 1 so we have assigned that value here and then it comes to your for loop the first thing that your for loop is going to do is it is going to declare this I variable here and assign it a value of 1 so we are going to write that here so we are going to say I is equal to 1 and then it really goes here and checks this condition here before it determines whether it's going to run this block of code here or not so if this here results is true it is going to run this block of code here and if not it is going to leave your for loop so is your I less or equal to the number that our user has entered so your eye is going to be 1 and then that is less or equal to 3 so your for loop is going to execute this block of code here which means that it is going to come here and say factorial multiplied by 1 which is going to be 1 multiplied by 1 and that is going to result as 1 and it is going to assign the result of this here your factorial variable which is going to stay one after that your for loop comes here and at this close bracket here it really goes here and it increases the value of your eye and this increment operator is going to increase it by one so your eye now becomes two and then after that it goes back here and checks this condition here so it says please check whether my two is less or equal to the number that your user has entered so 2 is less or equal to 3 so it is going to run this block of code here again and that it is going to do following so it is going to say please multiply my factorial value so the previous value is my factorial was holding which is 1 by the current value of my eye which is 1 multiplied by 2 that is going to result as 2 and that is going to be assigned to your factorial variable so we assign to here okay and then it goes back to these closed bracket and then it goes here increases the value of your eye again so your eye now is tree and then it really checks this condition here so whether 3 is less or equal to 3 the result of that is going to be yes so it is going to do this expression here again so the current value out here factorial which is going to be 2 multiplied by the current value of your counter variable which is going to be 3 so 2 multiplied by 3 that is going to be 6 and that is going to be assigned to your factorial variable after that it goes here and that it really increases again the value of your eye variable so of the counter that you are using in your for loop and that value becomes 4 now after that it is going to try to check this expression here so this condition here and 4 is not less or equal to 3 so your for loop is not going to execute any more and then your really your your execution comes here and at this line of code here it has the value of six in your factorial variable which means that we are left only with the need to write out this to our users so we need to say let's say if like this number okay and then let's say factorial of that number is going to be equal to and then let's write out the result so the result we are holding in our factorial variable like this so this should really write out the result of this here so the factorial of this number that our user has entered and if I run my program you can see that it asks us to enter a number I'm going to say let's say for example three and that if I press ENTER it is going to give us the result of six which is the correct result the one that we previously got let's run it one more time just check this number here so I'm going to say please give me a factorial of six and it calculates that the factorial of six is 720 as we did before so this is going to be really one way of writing this for loop for this current example so for calculating factorial I want to show you another way how you can do exactly the same thing so I'm going to really comment this part of code here so I'm going to say comment this block of code here and then there is another way to write these parentheses here so as you can see this example here is what we have used in order to write these expressions inside these parentheses but there is really one more way to calculate your factorial and that is going to be to start at this maximum value which means six factorial is equal to six multiplied by five by four three two why and that is going to be equal to 720 so now you start your counter at this maximum value so this number that your user has entered and then you really decrease the value of your culture and you go until your counter value comes to one and that is the condition when you stop so your one value of a counter is going to be the last iteration through your for loop so now we are going to write out so actually we are going to really write our for loop using this algorithm here so we are going to save for and then also put this these parentheses which we are going to use for the block of code that we want to run through in each iteration and in these parentheses here I'm going to set the initial value of my culture that is going to be I is equal to and as you can see here our I starts at six so I'm going to put here six which means a number that our user has entered in this current situation it is six but since we want to calculate the factorial of whichever number our user decides to enter I'm going to use that variable here okay and then the condition that your for loop is going to check each time that it wants to make a new iteration and that is going to be please run this block of code here until my I is greater than or equal to one okay and then the last thing that we need to put here is going to be really a way for our for loop to stop at a certain point and if you look at this example here you see that your counter is decreasing by one in each iteration so we are going to put that here we are going to say I which means use this decrement operator on our I variable and then we are going to really use the same expression here okay and this is going to give us the exact exactly the same result as this code here dead so if I run my program you see that it asks number again so if I enter number six for example it is going to give us 720 as this code here did as well so let's repeat one more time there are three things that you need to put in these parentheses here in order to set up your for loop and the first one of those three is going to be to set the initial value of your I variable which means the initial value of your counter after that you need to put the condition which is going to be checked each time that your for loop wants to run an iteration and if this condition here results as true in your for loop is going to run this block of code here but if this condition here results as false your for loop is not going to run this block of code here but you are really going to leave your for loop and come to the next line after it and then the third thing that you need to put in these parentheses here is going to be really to either increase or decrease value off your counter variable so that it can reach this condition here at certain point and make it false so we have decreased it in this example here and we have increased it in this example here so those are three things that you need to put inside these parentheses here and you really need to separate those three using this semi column sign okay and there's one more thing that I need to mention and that is going to be really you can upgrade this program here so that it checks whether this number here is greater than zero because you cannot calculate factorial of negative numbers so our program is not going to behave as expected if you enter a negative number and also the factorial of zero is going to be equal to one so you can put that code here and determine whether your user has entered positive or negative number and in case that your user has entered negative number make sure to write out appropriate message to your user so I think that is all if you liked this video and if you learned something new make sure to subscribe to my channel and hit that Bell icon as well share it on your social media because it really helps me to reach a lot more people so that all of us can learn and operate our knowledge and programming and I'm going to see you in my next video bye
