With timestamps:

00:00 - hi guys and welcome to my channel in
00:02 - this video we are going to talk about
00:03 - variables and data types you are going
00:06 - to learn what are variables what are
00:08 - data types what are most commonly used
00:11 - data types in programming as well as
00:13 - what are some common errors that happen
00:15 - to many beginners and we are going to
00:17 - demonstrate all of this in a simple
00:20 - program that we will create together and
00:22 - also I'm going to explain all of this on
00:23 - real world examples so that it is
00:25 - beginner friendly and you can understand
00:27 - everything and before we continue I want
00:29 - to say thank you to the sponsor of this
00:31 - video and that is me so my goal is to
00:35 - teach you practical programming so that
00:37 - you can finally start creating the
00:39 - applications that you want and so that
00:41 - you can get career ready skills and in
00:43 - this course you are going to learn
00:46 - everything that you need in order to
00:47 - start creating those applications that
00:50 - you want so it is going to be beginner
00:52 - to expert practical programming course
00:55 - everything that you need is going to be
00:56 - in one place and it is going to be
00:59 - explained in a beginner friendly way so
01:01 - that you can finally understand
01:02 - programming the course was released a
01:04 - month and a half ago and I can already
01:07 - say that I'm very proud of all of the
01:09 - students who have enrolled in the course
01:11 - and I'm also very proud of their results
01:13 - just today I was talking to a girl who
01:16 - enrolled in the course less than a month
01:18 - ago and the reason why she decided to
01:20 - enroll in this course is because her mom
01:22 - has a personal business she is producing
01:25 - jewelry for girls uh and her mom does
01:27 - not have enough money to pay to a
01:29 - professional programmer to create an
01:31 - application that she needs to manage her
01:33 - clients and to make her work easier so
01:36 - her daughter decided to learn practical
01:39 - programming with the help of my course
01:41 - so that she can create this application
01:43 - as a gift to her mother and in less than
01:46 - a month of learning from my practical
01:48 - programming course she was able to fully
01:51 - plan this application and create it
01:53 - herself so because of that story and
01:56 - many other stories that my students have
01:58 - shared with me I can say that I'm very
02:00 - very proud of the progress that they had
02:02 - made and also I'm proud of the work and
02:06 - the contribution that I am giving to
02:08 - those students so if you also want to
02:11 - learn practical programming if you want
02:12 - to start creating real applications I
02:15 - will leave a link in the description so
02:17 - that you can also enroll in my practical
02:19 - programming course we have a great
02:22 - community of striving developers that
02:24 - are ready to help you that want to
02:25 - collaborate and share their experiences
02:28 - and also I have a special gift for my
02:30 - YouTube viewers so the first 100 people
02:33 - who decide to enroll in the course using
02:35 - the link in the description will get a
02:37 - special discount so if you want to learn
02:40 - practical programming if you want to
02:41 - start creating real applications then
02:43 - don't miss this opportunity click the
02:45 - link in the description and I will see
02:47 - you in my practical programming course
02:49 - in a minute so with that being said
02:51 - let's continue with the topic of today's
02:54 - video so let's create an application
02:56 - where we can demonstrate variables and
02:59 - data types for that we are going to need
03:01 - Visual Studio 2022 Community if you
03:04 - don't know how to install it then make
03:05 - sure to watch my previous video where I
03:07 - explained that it will be linked here
03:10 - and also in the description so I already
03:13 - have visual studio 20202 so let's run it
03:17 - and the first thing that I want to do is
03:19 - I want to create a new project so click
03:21 - on create a new
03:23 - project okay here we are going to select
03:27 - C and here I will select console
03:30 - application so C console application and
03:33 - click on next okay and here we will give
03:37 - a name to our project let's call it
03:41 - variables and data
03:45 - types okay everything should be together
03:49 - everything together variables and data
03:52 - types and click on next and here you
03:55 - should select net 8.0 framework and
03:58 - click on create
04:01 - okay and this is going to create our
04:02 - project so this is the project that we
04:04 - get by default this is the most simple
04:07 - hello world application and if we run it
04:10 - we will simply get this hello world
04:14 - output in our console and then this is
04:16 - some junk text that Visual Studio
04:18 - creates this should not bother you right
04:21 - now so as I said this is the most simple
04:23 - application that we get when we create
04:26 - our project and if you don't understand
04:28 - this again make sure to watch my
04:30 - previous video previous video in this uh
04:32 - playlist it will be linked in the
04:34 - description okay so now I am going to
04:36 - delete this comment we will not need it
04:39 - and I will leave this part because we
04:40 - will need it later so now let's explain
04:44 - what are variables I'm going to give you
04:46 - an example from real life for example in
04:49 - real life you have different types of
04:52 - containers different types of boxes for
04:54 - storing different items for example you
04:57 - have one type of container one type of
05:00 - box that is used to store shoes and then
05:03 - another type of box another type of
05:05 - container that is used to store food and
05:07 - then this also is a type of container
05:10 - this cup that is used in order to store
05:13 - liquid so inside this you can put water
05:16 - milk tea juice and so on so the same way
05:20 - in programming variables are containers
05:23 - that are used in order to store
05:26 - different types of data for example in
05:29 - very Ables we can store an image a
05:32 - character a number a decimal number and
05:35 - so on now the same way that you wouldn't
05:38 - try to store shoes inside this type of
05:41 - container you also wouldn't try to store
05:44 - an image in a variable that is used to
05:47 - store numbers so each variable has its
05:51 - type and that type determines what kind
05:54 - of data it can store in programming we
05:57 - have simple and complex data types in
06:01 - this video we are going to learn what
06:02 - are most commonly used simple data types
06:06 - and then in some of the next videos in
06:08 - the future we are going to learn about
06:10 - complex data types so here on the screen
06:13 - I am going to put a list of most
06:16 - commonly used simple data types and
06:19 - those are integer it is used to store
06:22 - whole numbers so 1 2 3 4 5 0 -1 - 2 - 3
06:30 - and so on so that is int data type and
06:34 - then we have double and double is used
06:37 - in order to store decimal numbers so 2.5
06:42 - minus 2.5 and so on and then we have
06:45 - char and Char data type is used in order
06:48 - to store one single character that can
06:52 - be a letter or some special character so
06:55 - that is Char data type if you want to
06:58 - store more than one character then you
07:00 - use another data type and that data type
07:02 - is called string and inside string
07:04 - variable you can store your name or a
07:07 - name of the person that you like or an
07:10 - entire sentence or an essay so string
07:13 - variable can hold as many characters as
07:16 - you want and Char variable can hold only
07:19 - one and then another commonly used data
07:22 - type is bull and bull is used for
07:25 - variables that can have only two values
07:28 - true or or false one or zero an example
07:32 - of that is for example is user logged in
07:37 - that can have only two values either he
07:40 - is logged in or he is not logged in so
07:43 - true or false so those are most commonly
07:47 - used data types in programming so let's
07:50 - see how we can create a variable I will
07:53 - do it here above this line of code so
07:56 - here I want to create a variable that
07:59 - will be Ed to store whole numbers so
08:01 - integer numbers the first thing that we
08:04 - need to specify is the type of variable
08:06 - so since we want to store integer
08:08 - numbers the type will be int and then we
08:12 - give the name to our variable so let's
08:15 - call it YouTube
08:18 - subscribers because the number of
08:20 - YouTube subscribers can be an integer
08:22 - number you cannot have 2.5 subscribers
08:26 - so here I am going to write how many
08:28 - subscribers I have let me check that and
08:30 - I'll be back so I have
08:34 - 269,000 at the moment of filming this
08:36 - video let me know if that changed in the
08:38 - comment section so you put the value
08:42 - that will be stored inside that variable
08:44 - and then at the end you need to put this
08:47 - semic colum symbol because by putting
08:49 - that you say okay here is the end of the
08:53 - command that I have written so here I
08:55 - have created a variable called YouTube
08:57 - subscribers it is of typ type int which
09:00 - means that it can store only whole
09:02 - numbers and here I have assigned the
09:04 - value to that variable so now what I can
09:07 - do is I can take this variable and then
09:11 - here instead of writing hello world in
09:14 - my console I can simply pass the name of
09:18 - my variable and this here should print
09:21 - whatever value is stored inside this
09:24 - variable so console. right line and then
09:27 - here you put the name of the variable so
09:29 - now if I run the program Let's
09:32 - see we should get this value here as you
09:35 - can see it says
09:36 - 2690 0 okay now I have a question for
09:40 - you and that is the following what is
09:42 - going to happen if I try to store a
09:45 - decimal point number into this variable
09:48 - here we already said that this int
09:51 - variable is used in order to store
09:53 - integer numbers which means whole
09:55 - numbers so what will happen if I try to
09:58 - store here a decimal point number for
10:00 - example 2.5 let me know in the comment
10:03 - section okay so if I try to run my
10:06 - program as you can see we get errors
10:10 - which means that this here is not valid
10:14 - now depending on the programming
10:16 - language that you use there are two
10:18 - things that might happen in C as you
10:21 - could already see we will get an error
10:24 - and we will not be able to run our
10:25 - program and some other programming
10:27 - language will maybe just just take this
10:30 - whole part of the number and then it
10:32 - will completely disregard this that
10:35 - comes after decimal point that depends
10:38 - on the programming language that you use
10:40 - but those are two things that can
10:42 - potentially happen as you could see in C
10:45 - we get an error and this is not allowed
10:47 - so I am going to return this to as it
10:50 - was and now I'm going to show you how to
10:52 - create a decimal point variable so for
10:57 - that we use another data type and then
10:59 - is double so I say double and then I
11:03 - give the name to my variable let's say
11:06 - age okay and here I will store my age
11:09 - let's say
11:12 - 21.5 okay this is not my age but it's
11:15 - just an example guys so if you want to
11:18 - store a decimal point number you need a
11:21 - variable of type double so now I am
11:25 - going to put here age and if I run my
11:29 - program we will get 21.5 so whatever is
11:33 - stored inside this age variable that
11:36 - will be printed here okay so here you
11:39 - can already see a pattern when you want
11:42 - to create a variable you first specify
11:44 - its data type and then you give it a
11:47 - name is equal to and then you provide
11:51 - the value for your variable and at the
11:54 - end you put semicolon now let's see how
11:57 - we can create variables of the the other
12:00 - data types because there are some
12:01 - specific rules for example if you want
12:03 - to create a character variable the type
12:06 - would be Char and then you give the name
12:09 - to this variable let's call it
12:12 - gender okay is equal to and then you are
12:16 - going to assign the value which is just
12:18 - one character but you need to put it
12:20 - inside these single quotation marks so
12:24 - here you need to provide one character
12:26 - that will be the value for this
12:28 - variables so you can put f for female or
12:32 - M for male or c for cat or D for dog and
12:38 - so on this was much less complicated
12:41 - when I was first studying programming
12:42 - because there was just F and M nowadays
12:46 - there are a lot more potential values
12:49 - but I am just going to leave this to be
12:52 - an F because I am just an F you can put
12:55 - anything that you want as long as it's
12:57 - just one character because Char variable
13:01 - can accept only one character and if you
13:05 - want to store more than one character
13:07 - then you use a different data type and
13:10 - that is string so let's create a string
13:13 - variable let's say string and the name
13:17 - of this variable will be let's say first
13:20 - name okay and when you want to assign
13:24 - the value to a string variable you need
13:26 - to use double quotation marks so for
13:29 - Char you use single quotation marks and
13:32 - then for string you use double quotation
13:34 - marks and for numbers you don't need
13:36 - anything so here I will put my first
13:39 - name and that is
13:40 - Salina okay and then semic column at the
13:43 - end so this is how you create a string
13:46 - variable and then the easiest one is
13:49 - bull variable so type is called Bull and
13:53 - this variable can hold only two values
13:56 - true or false so the name of this will
13:59 - be for example is
14:02 - student and for myself I will say false
14:06 - because I am not a student if you are a
14:08 - student you can assign a different value
14:09 - you can say true and those are only two
14:13 - values that this bull variable can have
14:16 - so either true or false so here we have
14:19 - learned how we can create variables of
14:22 - different data types and we have learned
14:25 - one very important characteristic of
14:27 - variables and that is each variable has
14:30 - a data type and it determines what kind
14:34 - of data we can put into that variable
14:37 - the same way that type of container
14:40 - determines what kind of item we put into
14:43 - that container into this container we
14:45 - put liquid we don't put shoes now
14:49 - another important characteristic of this
14:51 - container is its size which means inside
14:54 - this glass I can put 100 milliliters of
14:57 - water or 200 milliliters but 500 I don't
15:02 - think so it would overflow because this
15:05 - glass has size so the same way our
15:09 - variables our data types have size for
15:13 - example integer variable can hold whole
15:17 - numbers but how big of a number can we
15:20 - put inside an integer variable well
15:23 - let's see I am going to copy this code
15:26 - and paste it here and here I will need
15:29 - to change the name of my variable
15:31 - because you cannot have two variables
15:33 - with the same name because you will get
15:35 - an error so let's change the name let's
15:37 - call it hold
15:40 - number okay so it can hold this number
15:44 - but can it hold this number let's see
15:48 - okay after some point you get this
15:51 - little red squiggly and that means that
15:54 - you have an error and the reason is
15:56 - because this number is too big and you
16:00 - cannot put it inside a variable that is
16:03 - of this type because integer type cannot
16:07 - store number that is this big the same
16:09 - way that inside this glass We cannot put
16:12 - a million liters of water okay for that
16:15 - we need a bigger glass and for storing a
16:19 - number that is this big we need a
16:21 - different data type and the name of that
16:24 - data type is long so here I will say
16:28 - long
16:29 - and as you could see that little red
16:32 - squiggly that we had here disappeared
16:34 - which means that we don't have a anymore
16:37 - so even though both int and long store
16:41 - the same type of data which means a
16:43 - whole number inside int we can store
16:47 - much smaller numbers and inside long we
16:50 - can store much bigger numbers like this
16:53 - one which I will not try to read the
16:55 - reason for this is because long data
16:58 - type takes a lot more space in memory
17:01 - than int data type which takes a lot
17:04 - less now each data type takes certain
17:07 - space in memory and now your question
17:09 - might be how can I know how much an
17:12 - integer takes how much a long takes or
17:15 - double or Char and so on well you have a
17:19 - special command that will give you the
17:22 - amount of memory that each data type
17:25 - takes for example here inside my console
17:29 - right line I can say please give me the
17:31 - size of and here inside parenthesis I
17:35 - will put size of what so I want size of
17:38 - int okay and then another line I also
17:42 - want size of long okay so if I run the
17:46 - program let's see here it says that int
17:51 - takes four bytes and long takes eight
17:55 - bytes which means that long is twice as
17:58 - big big as integer which means that it
18:01 - can take twice as big of a number as
18:03 - integer so now your question might be
18:06 - okay salinaa but four bytes isn't really
18:08 - a lot of memory so I will always use
18:11 - long you can always use long but there
18:14 - are two reasons why we have both int and
18:18 - long data type the first reason is that
18:22 - this need for saving memory comes from a
18:25 - different time from a time where I was
18:27 - very small and you were also very small
18:30 - and memory was very expensive nowadays
18:33 - you have phones that have 2 terabytes of
18:36 - memory but 50 years ago 4 megabytes of
18:40 - memory was much more expensive than what
18:44 - your phone costs now so in that time it
18:47 - was very important to save as much
18:50 - memory as possible so that is the first
18:53 - reason another reason is the following
18:56 - now you are creating just one variable
18:59 - of type int or long that is four bytes
19:02 - of difference but later when we learn
19:05 - how we can create arrays of variables
19:08 - how you can create for example a million
19:10 - variables then you have to take in
19:13 - consideration if those variables are
19:15 - going to be of type long or of type int
19:17 - because then it's not just four bytes of
19:20 - memory it's four million bytes of memory
19:23 - which is significant it will make your
19:25 - application heavier slower and so on so
19:29 - those are two reasons why you need to
19:31 - know the difference between int and long
19:34 - and now when you're just a beginner and
19:36 - you are learning it doesn't really
19:38 - matter for your tasks which one of these
19:41 - two you are using but in the future it
19:43 - might matter and it might be very
19:45 - important so that is why I'm telling you
19:47 - the difference between these two data
19:50 - types so once more long is twice as big
19:55 - as int which means that it can store
19:57 - twice as big number than integer so now
20:01 - the question is do you have to learn by
20:03 - heart how big of a number we can store
20:06 - inside integer for example and the
20:08 - answer is no there is another command
20:10 - that we can use for that so here inside
20:13 - my console right line I can say int dot
20:17 - please give me what is the Min value
20:20 - that can be stored inside this integer
20:22 - and then here I will say please give me
20:25 - int. max value which means the maximum
20:28 - number that can be stored inside an
20:30 - integer so now if I run my program let's
20:33 - see that okay so here we get minus 2
20:37 - billi 147 million and something and then
20:41 - this here is plus 2 billion 147 million
20:44 - and so on so this is minimum number and
20:47 - this here is maximum number that you can
20:49 - store inside an integer variable now if
20:52 - you know that you will be storing only
20:54 - positive numbers in your variable and
20:56 - not negative for example for our YouTube
20:59 - subscribers variable it can store only
21:02 - positive numbers you cannot have minus
21:04 - one subscriber if you want to say that
21:07 - specifically then you can use another
21:09 - data type and that data type is called
21:12 - unsigned int meaning there is no plus or
21:16 - minus sign in front of it just positive
21:18 - numbers and it is called uint so
21:21 - unsigned int and here you cannot store
21:25 - negative numbers so if I try to assign
21:27 - here minus
21:30 - 26900 as you can see we get this little
21:33 - red squiggly which means that we have an
21:35 - error so now the question is why would
21:37 - you use U int instead of int well you
21:42 - previously saw that the values for
21:44 - integer go from minus 2 billion and
21:47 - something to plus two billion and
21:49 - something but if you already know that
21:51 - you will be storing only positive
21:53 - numbers then that range can go from zero
21:57 - to 4 billion something which means that
22:00 - you have the option to store much big of
22:01 - a number if you know up front that you
22:03 - will be storing only positive numbers
22:06 - you don't need at all that negative
22:09 - range so let's demonstrate that let's
22:11 - remove this minus sign and here I will
22:14 - say u in minimum value and then u in
22:19 - maximum value like this and if I run
22:22 - this program as you can see minimum
22:25 - value of unsigned integer is zero and
22:28 - then maximum value is 4 billion and
22:31 - something which is much bigger than what
22:33 - we had previously with a simple int
22:36 - variable so again this is used with the
22:39 - purpose of saving memory and optimizing
22:42 - your application now when you're still a
22:44 - beginner it doesn't really matter you
22:46 - will not have an error if you always use
22:49 - long but if you want to optimize your
22:51 - application if you want to save some
22:53 - memory later when you become a good
22:55 - experienced programmer then you should
22:57 - know about these things so we talked
23:00 - enough about int and long and U in let's
23:04 - see if there is anything special about
23:06 - these remaining data types so Char as we
23:10 - said is used in order to store one
23:13 - character nothing special there and then
23:16 - string is used in order to store a
23:19 - string of characters so one or more
23:21 - characters for example a name a sentence
23:24 - an essay and so on nothing special there
23:27 - bull also just two values true or false
23:31 - nothing special but double is very very
23:35 - special double is used in order to store
23:38 - decimal point numbers but there are two
23:41 - more types that are used for the same
23:43 - thing for the same purpose but there is
23:45 - a difference between them so here let's
23:47 - create another variable of type
23:50 - double let's call it decimal number one
23:55 - like this and here I will say for
23:56 - example 2. five okay so this is how we
24:01 - create double variable but there are two
24:03 - more types that are used for the same
24:05 - purpose meaning to store decimal numbers
24:08 - those are float and decimal so I'm going
24:12 - to copy this and here I will say float
24:16 - and I will call this variable decimal
24:18 - number two okay and here in order to
24:21 - indicate that this is float I need to
24:25 - put F okay and that red squiggly error
24:29 - will disappear and then another type is
24:33 - decimal so here I will say
24:36 - decimal and here I will call it decimal
24:40 - number three and here I need to put m in
24:44 - order to indicate that this is decimal
24:47 - number so double does not have any
24:50 - suffix float has F and decimal has M so
24:55 - now the question is what is the
24:57 - difference between between these three
24:59 - so the difference is in their size which
25:02 - means how big of a number you can put
25:05 - inside each one of these three data
25:08 - types so let's check that again I will
25:11 - use size of operator so I will say
25:14 - please give me the size of
25:17 - double okay and I need another
25:20 - parenthesis and then I will also say
25:23 - please give me the size of float another
25:27 - parenthesis and then the last one is
25:30 - decimal so please give me the size of
25:33 - decimal so now let's run our program and
25:35 - let's check the sizes of these three
25:38 - okay and as you can see it says double
25:41 - is8 bytes float is four bytes and
25:44 - decimal is 16 bytes which means that
25:46 - float is the smallest and decimal is the
25:50 - biggest double is in the middle it is
25:53 - twice as big as float so depending on
25:56 - how big of a number you need to store
25:59 - you are going to use one of these three
26:03 - okay and one very important thing that I
26:06 - said and that I want you to remember is
26:08 - if you want to store a bigger number you
26:11 - need to use a bigger data type because
26:14 - that big number has a lot of digits that
26:17 - you need to write in your memory and a
26:20 - bigger data type has more space in
26:23 - memory where you can write all of those
26:25 - digits now the same applies for very
26:28 - small numbers for example you cannot
26:31 - store a number that is this big inside a
26:33 - float variable but you cannot also store
26:36 - a number that is this small inside float
26:39 - variable because both of these numbers
26:42 - have a lot of digits and for storing all
26:45 - of these digits you need bigger space in
26:47 - memory so even though the number is
26:50 - smaller you need a data type which is
26:52 - bigger which is more precise in order to
26:55 - store a number that has this many digits
26:59 - now let's talk about another very
27:01 - important topic and that is naming your
27:03 - variables there are many rules that tell
27:06 - you what you should do and what you
27:08 - should not do when naming your variables
27:11 - and I going to explain both so let's
27:13 - first start with the things that you
27:15 - should not do so let's create a variable
27:19 - let's say that I will create a variable
27:21 - of type double and I will call it age
27:25 - and here comes the first rule and
27:27 - immediately we get this red squiggly and
27:30 - the reason why we are getting this red
27:31 - squiggly is because we already have a
27:34 - variable with the same name we have it
27:37 - here so this error says a local a local
27:42 - variable or function named age is
27:44 - already defined meaning you cannot
27:47 - repeat the name and even if you change
27:50 - the type of this variable again it will
27:54 - not allow you to use a name that already
27:57 - exists so that is the first rule you
28:00 - should not have two variables with the
28:03 - same name there are certain specific
28:06 - situations that we will learn later in
28:08 - the upcoming lessons where you can
28:10 - create variables with the same name but
28:13 - for now at this level don't repeat the
28:16 - names of your variables there is plenty
28:19 - of names for example here you can say
28:21 - Age Two that is perfectly valid name and
28:24 - as you can see that little red squiggly
28:27 - disappeared which means that we don't
28:28 - have an error anymore so the first rule
28:31 - don't repeat the names of your variables
28:34 - the second rule is that the name of your
28:36 - variable cannot start with a number this
28:40 - here is not a valid name you can have a
28:43 - number at the end of the name or in the
28:46 - middle of the name but not at the front
28:49 - so the name of your variable cannot
28:51 - start with a number as you can see here
28:54 - we get identify expected syntax
28:58 - blah blah blah a lot of errors that are
29:01 - very hard to understand for beginners
29:03 - and the reason for that is because the
29:05 - name of the variable cannot start with a
29:08 - number so that is the second rule the
29:11 - third rule is that you cannot have
29:13 - spaces in the names of your variables
29:16 - for example this here is not valid so
29:19 - the name of your variable needs to be
29:22 - one single word or multiple words but
29:25 - written together with no spaces is also
29:29 - you can use underscore like this or for
29:33 - example you can say my age like this but
29:37 - you cannot use other special characters
29:40 - or space so you cannot say this nor this
29:46 - nor this so if you need to separate the
29:49 - words you can use underscore so those
29:52 - are some things that you cannot do now
29:56 - let's see what you should do when naming
29:58 - your variables I will give you one rule
30:01 - to rule them all so that you don't have
30:03 - to remember all of these individual
30:05 - rules and that is the following give
30:08 - meaningful names to your variables and
30:11 - use camel case what does that mean give
30:15 - meaningful names to your variables means
30:17 - name your variables according to their
30:19 - purpose for example YouTube subscribers
30:23 - age gender first name and so on you can
30:26 - also name these variables
30:28 - VAR one and then VAR two and then VAR
30:32 - three like this but this is not really
30:37 - understandable and in a few days you
30:39 - will not remember what VAR one
30:42 - represents what VAR two represents what
30:45 - word three and so on so for that reason
30:48 - give meaningful names to your variables
30:52 - that is first part and the second part
30:55 - is use camel case so what what does
30:58 - Camel case mean it means that the name
31:01 - of your variable should start with the
31:03 - lowercase letter and then if the name
31:05 - contains more than one word each new
31:08 - word should start with a capital letter
31:11 - and everything should be together for
31:13 - example like this or like this or like
31:16 - this or if you want to give a bigger
31:18 - name then you can use common case for
31:21 - that like this so here is a
31:26 - bigger name for my
31:30 - variable like this this is pretty big
31:34 - name but you get the idea of what camel
31:37 - case is so I believe that is going to be
31:40 - enough for this video if you have any
31:42 - questions or any topics that you would
31:43 - like to see in the future let me know in
31:46 - the comment section also if this video
31:48 - was useful if you enjoyed it give it a
31:51 - big thumbs up so that I know to create
31:53 - more videos like this in the future and
31:56 - if you want to learn practical
31:57 - programming if you want to learn how to
31:59 - build real applications then join my
32:01 - practical programming course the link
32:03 - will be in the description and there you
32:06 - can get career ready skills you will
32:08 - also join a community of very successful
32:11 - developers of thriving developers that
32:13 - can help you to optimize your progress
32:16 - and to learn programming as fast as
32:19 - possible also currently we have a
32:21 - special discount for the first 100
32:23 - people who sign up using the link in the
32:26 - description so if you want to learn
32:28 - practical programming click the link in
32:30 - the description and I will see you in a
32:32 - minute so thank you very much for
32:34 - watching and I'll see you in another
32:36 - video bye

Cleaned transcript:

hi guys and welcome to my channel in this video we are going to talk about variables and data types you are going to learn what are variables what are data types what are most commonly used data types in programming as well as what are some common errors that happen to many beginners and we are going to demonstrate all of this in a simple program that we will create together and also I'm going to explain all of this on real world examples so that it is beginner friendly and you can understand everything and before we continue I want to say thank you to the sponsor of this video and that is me so my goal is to teach you practical programming so that you can finally start creating the applications that you want and so that you can get career ready skills and in this course you are going to learn everything that you need in order to start creating those applications that you want so it is going to be beginner to expert practical programming course everything that you need is going to be in one place and it is going to be explained in a beginner friendly way so that you can finally understand programming the course was released a month and a half ago and I can already say that I'm very proud of all of the students who have enrolled in the course and I'm also very proud of their results just today I was talking to a girl who enrolled in the course less than a month ago and the reason why she decided to enroll in this course is because her mom has a personal business she is producing jewelry for girls uh and her mom does not have enough money to pay to a professional programmer to create an application that she needs to manage her clients and to make her work easier so her daughter decided to learn practical programming with the help of my course so that she can create this application as a gift to her mother and in less than a month of learning from my practical programming course she was able to fully plan this application and create it herself so because of that story and many other stories that my students have shared with me I can say that I'm very very proud of the progress that they had made and also I'm proud of the work and the contribution that I am giving to those students so if you also want to learn practical programming if you want to start creating real applications I will leave a link in the description so that you can also enroll in my practical programming course we have a great community of striving developers that are ready to help you that want to collaborate and share their experiences and also I have a special gift for my YouTube viewers so the first 100 people who decide to enroll in the course using the link in the description will get a special discount so if you want to learn practical programming if you want to start creating real applications then don't miss this opportunity click the link in the description and I will see you in my practical programming course in a minute so with that being said let's continue with the topic of today's video so let's create an application where we can demonstrate variables and data types for that we are going to need Visual Studio 2022 Community if you don't know how to install it then make sure to watch my previous video where I explained that it will be linked here and also in the description so I already have visual studio 20202 so let's run it and the first thing that I want to do is I want to create a new project so click on create a new project okay here we are going to select C and here I will select console application so C console application and click on next okay and here we will give a name to our project let's call it variables and data types okay everything should be together everything together variables and data types and click on next and here you should select net 8.0 framework and click on create okay and this is going to create our project so this is the project that we get by default this is the most simple hello world application and if we run it we will simply get this hello world output in our console and then this is some junk text that Visual Studio creates this should not bother you right now so as I said this is the most simple application that we get when we create our project and if you don't understand this again make sure to watch my previous video previous video in this uh playlist it will be linked in the description okay so now I am going to delete this comment we will not need it and I will leave this part because we will need it later so now let's explain what are variables I'm going to give you an example from real life for example in real life you have different types of containers different types of boxes for storing different items for example you have one type of container one type of box that is used to store shoes and then another type of box another type of container that is used to store food and then this also is a type of container this cup that is used in order to store liquid so inside this you can put water milk tea juice and so on so the same way in programming variables are containers that are used in order to store different types of data for example in very Ables we can store an image a character a number a decimal number and so on now the same way that you wouldn't try to store shoes inside this type of container you also wouldn't try to store an image in a variable that is used to store numbers so each variable has its type and that type determines what kind of data it can store in programming we have simple and complex data types in this video we are going to learn what are most commonly used simple data types and then in some of the next videos in the future we are going to learn about complex data types so here on the screen I am going to put a list of most commonly used simple data types and those are integer it is used to store whole numbers so 1 2 3 4 5 0 1 2 3 and so on so that is int data type and then we have double and double is used in order to store decimal numbers so 2.5 minus 2.5 and so on and then we have char and Char data type is used in order to store one single character that can be a letter or some special character so that is Char data type if you want to store more than one character then you use another data type and that data type is called string and inside string variable you can store your name or a name of the person that you like or an entire sentence or an essay so string variable can hold as many characters as you want and Char variable can hold only one and then another commonly used data type is bull and bull is used for variables that can have only two values true or or false one or zero an example of that is for example is user logged in that can have only two values either he is logged in or he is not logged in so true or false so those are most commonly used data types in programming so let's see how we can create a variable I will do it here above this line of code so here I want to create a variable that will be Ed to store whole numbers so integer numbers the first thing that we need to specify is the type of variable so since we want to store integer numbers the type will be int and then we give the name to our variable so let's call it YouTube subscribers because the number of YouTube subscribers can be an integer number you cannot have 2.5 subscribers so here I am going to write how many subscribers I have let me check that and I'll be back so I have 269,000 at the moment of filming this video let me know if that changed in the comment section so you put the value that will be stored inside that variable and then at the end you need to put this semic colum symbol because by putting that you say okay here is the end of the command that I have written so here I have created a variable called YouTube subscribers it is of typ type int which means that it can store only whole numbers and here I have assigned the value to that variable so now what I can do is I can take this variable and then here instead of writing hello world in my console I can simply pass the name of my variable and this here should print whatever value is stored inside this variable so console. right line and then here you put the name of the variable so now if I run the program Let's see we should get this value here as you can see it says 2690 0 okay now I have a question for you and that is the following what is going to happen if I try to store a decimal point number into this variable here we already said that this int variable is used in order to store integer numbers which means whole numbers so what will happen if I try to store here a decimal point number for example 2.5 let me know in the comment section okay so if I try to run my program as you can see we get errors which means that this here is not valid now depending on the programming language that you use there are two things that might happen in C as you could already see we will get an error and we will not be able to run our program and some other programming language will maybe just just take this whole part of the number and then it will completely disregard this that comes after decimal point that depends on the programming language that you use but those are two things that can potentially happen as you could see in C we get an error and this is not allowed so I am going to return this to as it was and now I'm going to show you how to create a decimal point variable so for that we use another data type and then is double so I say double and then I give the name to my variable let's say age okay and here I will store my age let's say 21.5 okay this is not my age but it's just an example guys so if you want to store a decimal point number you need a variable of type double so now I am going to put here age and if I run my program we will get 21.5 so whatever is stored inside this age variable that will be printed here okay so here you can already see a pattern when you want to create a variable you first specify its data type and then you give it a name is equal to and then you provide the value for your variable and at the end you put semicolon now let's see how we can create variables of the the other data types because there are some specific rules for example if you want to create a character variable the type would be Char and then you give the name to this variable let's call it gender okay is equal to and then you are going to assign the value which is just one character but you need to put it inside these single quotation marks so here you need to provide one character that will be the value for this variables so you can put f for female or M for male or c for cat or D for dog and so on this was much less complicated when I was first studying programming because there was just F and M nowadays there are a lot more potential values but I am just going to leave this to be an F because I am just an F you can put anything that you want as long as it's just one character because Char variable can accept only one character and if you want to store more than one character then you use a different data type and that is string so let's create a string variable let's say string and the name of this variable will be let's say first name okay and when you want to assign the value to a string variable you need to use double quotation marks so for Char you use single quotation marks and then for string you use double quotation marks and for numbers you don't need anything so here I will put my first name and that is Salina okay and then semic column at the end so this is how you create a string variable and then the easiest one is bull variable so type is called Bull and this variable can hold only two values true or false so the name of this will be for example is student and for myself I will say false because I am not a student if you are a student you can assign a different value you can say true and those are only two values that this bull variable can have so either true or false so here we have learned how we can create variables of different data types and we have learned one very important characteristic of variables and that is each variable has a data type and it determines what kind of data we can put into that variable the same way that type of container determines what kind of item we put into that container into this container we put liquid we don't put shoes now another important characteristic of this container is its size which means inside this glass I can put 100 milliliters of water or 200 milliliters but 500 I don't think so it would overflow because this glass has size so the same way our variables our data types have size for example integer variable can hold whole numbers but how big of a number can we put inside an integer variable well let's see I am going to copy this code and paste it here and here I will need to change the name of my variable because you cannot have two variables with the same name because you will get an error so let's change the name let's call it hold number okay so it can hold this number but can it hold this number let's see okay after some point you get this little red squiggly and that means that you have an error and the reason is because this number is too big and you cannot put it inside a variable that is of this type because integer type cannot store number that is this big the same way that inside this glass We cannot put a million liters of water okay for that we need a bigger glass and for storing a number that is this big we need a different data type and the name of that data type is long so here I will say long and as you could see that little red squiggly that we had here disappeared which means that we don't have a anymore so even though both int and long store the same type of data which means a whole number inside int we can store much smaller numbers and inside long we can store much bigger numbers like this one which I will not try to read the reason for this is because long data type takes a lot more space in memory than int data type which takes a lot less now each data type takes certain space in memory and now your question might be how can I know how much an integer takes how much a long takes or double or Char and so on well you have a special command that will give you the amount of memory that each data type takes for example here inside my console right line I can say please give me the size of and here inside parenthesis I will put size of what so I want size of int okay and then another line I also want size of long okay so if I run the program let's see here it says that int takes four bytes and long takes eight bytes which means that long is twice as big big as integer which means that it can take twice as big of a number as integer so now your question might be okay salinaa but four bytes isn't really a lot of memory so I will always use long you can always use long but there are two reasons why we have both int and long data type the first reason is that this need for saving memory comes from a different time from a time where I was very small and you were also very small and memory was very expensive nowadays you have phones that have 2 terabytes of memory but 50 years ago 4 megabytes of memory was much more expensive than what your phone costs now so in that time it was very important to save as much memory as possible so that is the first reason another reason is the following now you are creating just one variable of type int or long that is four bytes of difference but later when we learn how we can create arrays of variables how you can create for example a million variables then you have to take in consideration if those variables are going to be of type long or of type int because then it's not just four bytes of memory it's four million bytes of memory which is significant it will make your application heavier slower and so on so those are two reasons why you need to know the difference between int and long and now when you're just a beginner and you are learning it doesn't really matter for your tasks which one of these two you are using but in the future it might matter and it might be very important so that is why I'm telling you the difference between these two data types so once more long is twice as big as int which means that it can store twice as big number than integer so now the question is do you have to learn by heart how big of a number we can store inside integer for example and the answer is no there is another command that we can use for that so here inside my console right line I can say int dot please give me what is the Min value that can be stored inside this integer and then here I will say please give me int. max value which means the maximum number that can be stored inside an integer so now if I run my program let's see that okay so here we get minus 2 billi 147 million and something and then this here is plus 2 billion 147 million and so on so this is minimum number and this here is maximum number that you can store inside an integer variable now if you know that you will be storing only positive numbers in your variable and not negative for example for our YouTube subscribers variable it can store only positive numbers you cannot have minus one subscriber if you want to say that specifically then you can use another data type and that data type is called unsigned int meaning there is no plus or minus sign in front of it just positive numbers and it is called uint so unsigned int and here you cannot store negative numbers so if I try to assign here minus 26900 as you can see we get this little red squiggly which means that we have an error so now the question is why would you use U int instead of int well you previously saw that the values for integer go from minus 2 billion and something to plus two billion and something but if you already know that you will be storing only positive numbers then that range can go from zero to 4 billion something which means that you have the option to store much big of a number if you know up front that you will be storing only positive numbers you don't need at all that negative range so let's demonstrate that let's remove this minus sign and here I will say u in minimum value and then u in maximum value like this and if I run this program as you can see minimum value of unsigned integer is zero and then maximum value is 4 billion and something which is much bigger than what we had previously with a simple int variable so again this is used with the purpose of saving memory and optimizing your application now when you're still a beginner it doesn't really matter you will not have an error if you always use long but if you want to optimize your application if you want to save some memory later when you become a good experienced programmer then you should know about these things so we talked enough about int and long and U in let's see if there is anything special about these remaining data types so Char as we said is used in order to store one character nothing special there and then string is used in order to store a string of characters so one or more characters for example a name a sentence an essay and so on nothing special there bull also just two values true or false nothing special but double is very very special double is used in order to store decimal point numbers but there are two more types that are used for the same thing for the same purpose but there is a difference between them so here let's create another variable of type double let's call it decimal number one like this and here I will say for example 2. five okay so this is how we create double variable but there are two more types that are used for the same purpose meaning to store decimal numbers those are float and decimal so I'm going to copy this and here I will say float and I will call this variable decimal number two okay and here in order to indicate that this is float I need to put F okay and that red squiggly error will disappear and then another type is decimal so here I will say decimal and here I will call it decimal number three and here I need to put m in order to indicate that this is decimal number so double does not have any suffix float has F and decimal has M so now the question is what is the difference between between these three so the difference is in their size which means how big of a number you can put inside each one of these three data types so let's check that again I will use size of operator so I will say please give me the size of double okay and I need another parenthesis and then I will also say please give me the size of float another parenthesis and then the last one is decimal so please give me the size of decimal so now let's run our program and let's check the sizes of these three okay and as you can see it says double is8 bytes float is four bytes and decimal is 16 bytes which means that float is the smallest and decimal is the biggest double is in the middle it is twice as big as float so depending on how big of a number you need to store you are going to use one of these three okay and one very important thing that I said and that I want you to remember is if you want to store a bigger number you need to use a bigger data type because that big number has a lot of digits that you need to write in your memory and a bigger data type has more space in memory where you can write all of those digits now the same applies for very small numbers for example you cannot store a number that is this big inside a float variable but you cannot also store a number that is this small inside float variable because both of these numbers have a lot of digits and for storing all of these digits you need bigger space in memory so even though the number is smaller you need a data type which is bigger which is more precise in order to store a number that has this many digits now let's talk about another very important topic and that is naming your variables there are many rules that tell you what you should do and what you should not do when naming your variables and I going to explain both so let's first start with the things that you should not do so let's create a variable let's say that I will create a variable of type double and I will call it age and here comes the first rule and immediately we get this red squiggly and the reason why we are getting this red squiggly is because we already have a variable with the same name we have it here so this error says a local a local variable or function named age is already defined meaning you cannot repeat the name and even if you change the type of this variable again it will not allow you to use a name that already exists so that is the first rule you should not have two variables with the same name there are certain specific situations that we will learn later in the upcoming lessons where you can create variables with the same name but for now at this level don't repeat the names of your variables there is plenty of names for example here you can say Age Two that is perfectly valid name and as you can see that little red squiggly disappeared which means that we don't have an error anymore so the first rule don't repeat the names of your variables the second rule is that the name of your variable cannot start with a number this here is not a valid name you can have a number at the end of the name or in the middle of the name but not at the front so the name of your variable cannot start with a number as you can see here we get identify expected syntax blah blah blah a lot of errors that are very hard to understand for beginners and the reason for that is because the name of the variable cannot start with a number so that is the second rule the third rule is that you cannot have spaces in the names of your variables for example this here is not valid so the name of your variable needs to be one single word or multiple words but written together with no spaces is also you can use underscore like this or for example you can say my age like this but you cannot use other special characters or space so you cannot say this nor this nor this so if you need to separate the words you can use underscore so those are some things that you cannot do now let's see what you should do when naming your variables I will give you one rule to rule them all so that you don't have to remember all of these individual rules and that is the following give meaningful names to your variables and use camel case what does that mean give meaningful names to your variables means name your variables according to their purpose for example YouTube subscribers age gender first name and so on you can also name these variables VAR one and then VAR two and then VAR three like this but this is not really understandable and in a few days you will not remember what VAR one represents what VAR two represents what word three and so on so for that reason give meaningful names to your variables that is first part and the second part is use camel case so what what does Camel case mean it means that the name of your variable should start with the lowercase letter and then if the name contains more than one word each new word should start with a capital letter and everything should be together for example like this or like this or like this or if you want to give a bigger name then you can use common case for that like this so here is a bigger name for my variable like this this is pretty big name but you get the idea of what camel case is so I believe that is going to be enough for this video if you have any questions or any topics that you would like to see in the future let me know in the comment section also if this video was useful if you enjoyed it give it a big thumbs up so that I know to create more videos like this in the future and if you want to learn practical programming if you want to learn how to build real applications then join my practical programming course the link will be in the description and there you can get career ready skills you will also join a community of very successful developers of thriving developers that can help you to optimize your progress and to learn programming as fast as possible also currently we have a special discount for the first 100 people who sign up using the link in the description so if you want to learn practical programming click the link in the description and I will see you in a minute so thank you very much for watching and I'll see you in another video bye
