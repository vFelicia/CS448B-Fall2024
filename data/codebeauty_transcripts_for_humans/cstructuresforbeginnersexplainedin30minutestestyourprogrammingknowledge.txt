With timestamps:

00:00 - hello everyone welcome to my channel in
00:02 - this video i want to talk about a very
00:04 - important topic called structures and i
00:07 - will show you how you can build very
00:09 - interesting program and then considering
00:12 - that you always ask me to give you an
00:14 - example that you can use to practice on
00:15 - your own at the end of this video i have
00:18 - a perfect example that is going to serve
00:21 - as a test for your knowledge but don't
00:24 - just skip to that part because it is
00:26 - important for you to watch the entire
00:28 - video so that you can get the knowledge
00:30 - necessary in order to solve that task
00:33 - and then also for those of you that use
00:35 - instagram uh please take a screenshot of
00:38 - your code or take a picture of this
00:40 - video and put it to your story and write
00:42 - something like learning programming with
00:45 - true code beauty or learning c plus with
00:47 - true code beauty and don't forget to tag
00:50 - me because then i will be able to see
00:52 - your story and i love watching your
00:54 - stories so i will have a link of my
00:57 - instagram profile in the description of
00:59 - this video and then twitter as well for
01:01 - those of you that don't use instagram so
01:04 - without further ado let's start with
01:06 - today's video
01:08 - as i said in this video i want to talk
01:10 - about structures and for those of you
01:12 - that are familiar with the way that i
01:14 - teach you already know that i don't like
01:16 - to give definitions but i prefer to give
01:19 - you a real life example because that is
01:22 - much better for understanding
01:24 - so that is going to be the case for this
01:26 - video as well that is how i'm going to
01:28 - explain what are structures
01:30 - and in order to be able to understand
01:32 - what are structures you first need to
01:34 - understand what are basic or built-in
01:38 - data types and by this i mean data types
01:41 - like integer and float and double and
01:43 - pool and character and so on so if you
01:46 - are not familiar with those i will link
01:48 - a video here and in the description down
01:51 - below as well where you can watch
01:53 - everything that you need to know about
01:55 - data types and then you can come back to
01:57 - this video and learn about structures
02:00 - now for those of you that are familiar
02:01 - with those basic built-in data types i'm
02:05 - going to say that structures are a
02:06 - little bit more complex data type in
02:10 - what way
02:11 - well they are not built in but they are
02:14 - user defined data type now let me show
02:18 - you on code and on real life example
02:20 - what i mean by this what i mean by
02:22 - user-defined data type
02:25 - so let's say for example that you want
02:26 - to store the name of your smartphone in
02:28 - your program in order to do that you
02:31 - would have to create a variable of type
02:33 - string
02:34 - and then call it name or smartphone name
02:37 - i'm going to say name in this case and
02:39 - then here i'm going to assign
02:41 - iphone
02:43 - 12
02:44 - like this
02:45 - okay
02:46 - now let's create another variable let's
02:48 - say for example that we also want to
02:50 - store the information about how much
02:52 - storage space this iphone 12 has so i
02:55 - will create a variable of type int call
02:58 - it
02:59 - storage space
03:01 - and here i will say for example 32
03:04 - gigabytes although i might be completely
03:06 - wrong with this one i have no idea it is
03:08 - probably more something like 64 or 128
03:12 - so feel free to correct me in the
03:13 - comments down below but just don't be
03:15 - too harsh
03:16 - okay
03:17 - and let's create another variable also
03:19 - of type string and let's call it color
03:23 - and i will say that this iphone will be
03:26 - black
03:28 - like this
03:29 - okay
03:30 - and let's do uh the last one which is
03:33 - going to be float
03:34 - price
03:36 - okay and here i will say that this
03:38 - iphone 12 costs for example
03:41 - um 999.99
03:44 - again i have no idea and i might be
03:47 - completely wrong and it is probably more
03:49 - something like this i don't know uh so
03:52 - please comment the current price of
03:54 - iphone 12 if you're watching the video
03:56 - now and then if you're watching it three
03:58 - or four years since i published it uh
04:01 - please comment the current price of
04:02 - iphone 12 so that we have documentation
04:05 - or history of uh the price of iphone 12
04:09 - going down
04:10 - okay so i will delete this i will say
04:12 - that this is some sort of budget iphone
04:14 - or something like that
04:16 - okay
04:17 - so here i have created four variables
04:20 - name storage space color and price and
04:23 - they all describe a smartphone which is
04:26 - in this situation an iphone that has 32
04:28 - gigabytes of storage space it is black
04:30 - and it costs 999.99
04:35 - now what is going to happen if i want to
04:37 - describe another smartphone well um
04:40 - using the knowledge that we have so far
04:42 - i would have to copy these variables
04:45 - here so i will do that i will copy
04:47 - this and then paste it here and here i
04:50 - will say name to and then store space 2
04:54 - and color two and price two okay
04:57 - now here instead of iphone 12 i will say
05:00 - for example samsung
05:03 - galaxy oh
05:07 - uh s21 ultra
05:11 - like this
05:12 - and let's say for example that samsung
05:14 - has 64 gigabytes of memory and it is
05:19 - gray
05:20 - and
05:21 - uh it costs for example
05:23 - 888.88
05:26 - dollars okay and while we are talking
05:29 - about this please write me your answer
05:31 - in the comments down below which one do
05:33 - you prefer iphone or samsung i am very
05:37 - very interested to read what you are
05:38 - going to answer to this question
05:40 - now with that being said i also want to
05:42 - tell you about a problem that i see with
05:44 - this code here and that problem is
05:47 - following
05:48 - imagine if we wanted to describe two
05:50 - more smartphones or 200 smartphones or 2
05:54 - 000 smartphones
05:55 - then we would have very very big problem
05:58 - because using the approach that we used
06:00 - so far in order to describe 1000
06:03 - smartphones for example we would have to
06:05 - copy this 1000 times so at the end we
06:09 - would have name 1000 and storage space
06:11 - 1000 and color 1000 and price 1000 and
06:15 - so on and that would become very hard to
06:18 - maintain very very soon
06:21 - so that means that this approach here is
06:23 - not optimal and there is a better
06:26 - approach to solve this problem here now
06:28 - what is that approach well
06:30 - wouldn't it be very cool if we could
06:32 - group all of these variables here
06:35 - because after all they are part of one
06:38 - logical collection they all describe the
06:40 - same thing which is a smartphone so name
06:44 - storage space color price they all
06:46 - describe a smartphone in this situation
06:48 - so can we define our own data type
06:52 - called smartphone
06:54 - the answer to that question is yes we
06:56 - can and that is going to be user defined
06:59 - data type which is also called structure
07:02 - so how can we create a structure how can
07:04 - we create our own user defined data type
07:07 - well it's pretty simple you put
07:10 - struct keyword
07:13 - and then you give the name to your
07:15 - structure and in this situation i will
07:17 - call it smartphone
07:21 - like this and then you put curly
07:24 - brackets and at the end you need to have
07:26 - semi column it is very important to have
07:28 - this semicolon at the end
07:30 - okay now here i have created a
07:33 - smartphone structure but it is empty as
07:35 - you can see and what i want to put
07:38 - inside these curly brackets here well i
07:40 - want to put all of the variables that
07:43 - describe a smartphone i want to put all
07:45 - of the attributes that describe a
07:47 - smartphone and here we have uh defined
07:50 - for so name storage space color and
07:52 - price so i will put those here i will
07:56 - say that every smartphone has
07:58 - name of type string
08:01 - like this and then it also has storage
08:04 - space which is going to be of type int
08:07 - like this
08:08 - and then let's say string
08:11 - color
08:12 - and float
08:14 - price
08:15 - okay
08:16 - now here we have created four attributes
08:19 - that describe this structure here and
08:22 - you can create many more if you want so
08:25 - um you can create attributes that say
08:28 - what kind of battery this smartphone has
08:30 - what kind of cpu and then size of
08:33 - display and whether it has wireless
08:35 - charging or not and so on so you can
08:38 - recognize and define your own attributes
08:41 - your own members for this structure here
08:44 - but here i have four which is going to
08:46 - be enough for this example and then one
08:49 - very important thing that i want you to
08:51 - notice is that this structure here
08:54 - there is no data we don't assign data to
08:57 - these attributes here like we did here
09:00 - why well because this here does not
09:02 - represent data this structure here
09:04 - actually represents a blueprint this
09:07 - structure will serve as a model
09:10 - every time that we want to create a
09:12 - variable of type smartphone so when we
09:15 - decide that we want to create a variable
09:16 - of type smartphone this structure here
09:19 - will here will say hey your smartphone
09:22 - needs to have a name a storage space a
09:24 - color and a price so
09:27 - this structure here is a blueprint now
09:31 - uh your question might be okay salina
09:33 - how can we create a variable of type
09:36 - smartphone well the answer is pretty
09:38 - simple it is actually the same as if you
09:41 - wanted to create a variable of type
09:42 - integer or character or something like
09:44 - that so first you specify the type and
09:48 - then you give the name to your variable
09:50 - so let's do that same thing with our
09:52 - smartphone variable so i'm going to say
09:54 - the type which is
09:56 - smartphone like this and then i will
09:59 - give the name to my variable and let's
10:01 - call it
10:03 - smartphone like this only use this
10:06 - lowercase s because it is not going to
10:08 - allow you to use capital s here
10:12 - because that is already reserved for
10:14 - this structure here okay so i will use
10:16 - lowercase s and this is going to work
10:19 - because c plus is case sensitive
10:22 - language which means that it
10:23 - distinguishes between the lowercase and
10:25 - uppercase letters and that means that
10:27 - these two things will be two different
10:29 - things for your compiler because this
10:32 - has lowercase s and then this here has
10:35 - uppercase s even though they both say
10:37 - smartphone
10:38 - okay
10:40 - um now your question might be how can i
10:43 - define
10:44 - all of these values here so how can i
10:46 - define the name of the smartphone and
10:48 - its storage space and color and price
10:51 - well the answer to that question is
10:52 - pretty simple so you put the name of
10:55 - your variable so smartphone
10:59 - like this so this is the name of the
11:01 - variable and then this here is the name
11:03 - of the type or structure and then if you
11:07 - are using visual studio after you put
11:09 - this dot here you will get a list of all
11:13 - of the attributes of that smartphone and
11:16 - this list here is alphabetically ordered
11:19 - so color name price and storage space
11:23 - so let's define name first i will say
11:26 - that name is equal to
11:28 - iphone 12.
11:30 - let me copy this actually
11:32 - okay like this and then let's define
11:35 - storage space i will say
11:37 - smartphone dot storage space is equal to
11:40 - 32 and let's copy this two more times
11:44 - here i will say
11:46 - color
11:47 - and color is black let's copy this
11:52 - okay and then the last one is
11:55 - price and price is
11:58 - 999.99
12:01 - okay so with this we have successfully
12:04 - created a variable of type smartphone
12:06 - that has these attributes here and the
12:09 - values of those attributes are here and
12:12 - this is how we assign the values to the
12:15 - attributes of this user-defined data
12:18 - type now this here means that we can
12:21 - delete this part of the code here
12:24 - because we don't need it anymore because
12:26 - we literally have created the same thing
12:28 - here so i will delete it
12:31 - okay and then what i want to do is i
12:34 - want to do this same thing for our
12:36 - samsung galaxy smartphone so
12:39 - let's create another variable of type
12:42 - smartphone and in this situation i will
12:45 - call it smartphone2
12:48 - okay
12:49 - and then here i will say let me copy
12:51 - this
12:53 - okay so i will say smartphone 2 dot name
12:57 - will be samsung galaxy s21 ultra like
13:01 - this and then smartphone 2 dot storage
13:05 - space will be 64 and then smartphone 2
13:09 - dot color will be
13:12 - gray
13:13 - okay and then smartphone 2 dodge price
13:16 - is going to be
13:17 - 888.88
13:20 - okay so after we have done this i can
13:23 - delete this part here as well
13:26 - okay
13:27 - now with this code here we have created
13:29 - two variables of type smartphone this
13:32 - one here and then this one here and what
13:35 - i want to do now is i want to write out
13:37 - this data that we have here and then
13:39 - this data that we have here so let's do
13:42 - that
13:43 - let's say
13:44 - see out
13:45 - and then i will say here name
13:48 - and then what i want to do what i want
13:50 - to write out will be this name here so
13:54 - the name of my first smartphone so i
13:56 - will just copy this part here
13:59 - like this so again you put the name of
14:02 - your variable and then you put the name
14:04 - of the attribute of that structure that
14:06 - you want to access in this situation
14:08 - that is going to be name
14:10 - okay
14:11 - and then let's add endline
14:14 - okay and now i'm going to copy this line
14:17 - four times so here i want to write out
14:20 - storage space
14:22 - so storage space
14:24 - and then smartphone and instead of
14:26 - writing out name attribute i will write
14:28 - out storage space like this and then
14:31 - let's add
14:32 - gigabytes
14:34 - like this
14:35 - okay and then this third line will be
14:38 - color so i will say color
14:40 - and then here
14:42 - color and then this last one will be for
14:45 - price so let's say price is equal to
14:47 - smartphone dot
14:49 - price
14:50 - like this perfect so if i run this
14:53 - program
14:55 - as you can see here we have name is
14:57 - iphone 12 and then storage space is 32
14:59 - gigabytes and color is black and price
15:02 - is 999.99
15:05 - okay let's close this
15:08 - and for this second smartphone you can
15:10 - do this same block of code here so you
15:12 - can literally copy this part here and
15:15 - then paste it and instead of writing out
15:18 - smartphone.name you can write out
15:20 - smartphone2.name and then
15:22 - smartphone2.storagespace and
15:23 - smartphone2.color
15:25 - and so on
15:26 - but i want to show you something else
15:28 - and that is going to be how you can use
15:30 - functions in combination with structures
15:34 - now for those of you that are not
15:35 - familiar with functions at all i
15:37 - recommend you to watch my video related
15:39 - to functions or actually a playlist
15:42 - which i will link here and in the
15:44 - description of this video as well and
15:46 - there you can find everything that you
15:48 - need to know and learn about functions
15:50 - in c plus
15:52 - but for those of you that already are
15:54 - familiar with functions or that have
15:56 - watched that playlist that i mentioned
15:59 - i will just say that the main goal that
16:01 - we are creating and using functions is
16:03 - to make our code reusable so that we can
16:06 - instead of copying our code we can
16:09 - invoke that function and have that
16:11 - behavior that we desire and in this
16:13 - situation what i want to achieve is i
16:16 - want to create a function that is going
16:18 - to write or print all of the information
16:22 - about a smartphone whether it is this
16:24 - smartphone or this smartphone or any
16:27 - other smartphone if we decide to create
16:29 - 10 smartphones or a thousand smartphones
16:32 - we can just invoke that function
16:35 - and we can say hey
16:36 - here is a smartphone please print out
16:40 - the data that is related to that
16:42 - smartphone so
16:44 - as i said i want to create a function
16:46 - and let's do it here here i will say
16:50 - that the function will be of return type
16:52 - void so i will say void and then let's
16:55 - call that function print smartphone info
16:58 - so print
17:00 - smartphone
17:02 - info i hope that i didn't make any typo
17:06 - okay
17:07 - so what i want to do inside this
17:09 - function is basically this part here so
17:13 - this code here so i will just
17:15 - delete it from here and then i will
17:17 - paste it here inside my function so now
17:20 - as you can see this function here prints
17:22 - out the name of a smartphone and storage
17:25 - space and color and price and here we
17:27 - have an error which says identifier
17:30 - smartphone is undefined which means hey
17:33 - i don't know what is this smartphone
17:35 - here because i have my own scope which
17:38 - is from this curly bracket until this
17:40 - curly bracket here and i don't have any
17:42 - variable which is called smartphone now
17:45 - what we want to achieve with this
17:46 - function is we want to pass a smartphone
17:49 - as a parameter or argument to this
17:52 - function and then we want that function
17:54 - to write out all the data about that
17:57 - smartphone so what i'm going to do is
17:59 - i'm going to pass a structure here so i
18:02 - will say
18:04 - smartphone
18:05 - like this and then i will give the name
18:08 - to this parameter and that will be
18:10 - smartphone i want to use this name here
18:13 - because we already have it in the code
18:15 - if you wanted for example to use a
18:17 - different name for this parameter if you
18:19 - wanted to say for example my smartphone
18:22 - you would have to use this name here and
18:25 - then here and here and here as well
18:29 - but i'm going to return it to smartphone
18:31 - because it looks more professional so i
18:34 - will say that this function here
18:37 - receives one parameter of type
18:39 - smartphone which is called smartphone
18:41 - and here it just writes out the name the
18:45 - storage space color and price of that
18:47 - smartphone now
18:49 - considering that we have created this
18:50 - function here that means that we can
18:52 - invoke it and pass it any smartphone
18:55 - that we want and it should print the
18:58 - data of that smartphone so let's do that
19:02 - let's say
19:03 - print
19:04 - smartphone
19:05 - info like this and if i open
19:08 - these parentheses as you can see it says
19:10 - that it receives one parameter of type
19:13 - smartphone so let's pass it this one
19:16 - let's say
19:17 - smartphone
19:18 - like this
19:20 - okay and then let's invoke this same
19:23 - function for this second smartphone so
19:25 - i'm just going to copy it but instead of
19:27 - passing it smartphone variable i will
19:30 - pass it this variable here so i will say
19:32 - smartphone 2
19:34 - okay
19:35 - and if i run my program now let's see
19:38 - what will happen okay here we have
19:40 - information about our first smartphone
19:42 - which is iphone 32 gigabytes black and
19:45 - then almost a thousand dollars and then
19:48 - this second smartphone which is samsung
19:50 - galaxy s21 ultra which has 64 gigabytes
19:54 - it is gray and it costs 888.88
19:59 - and that is something that we have
20:01 - achieved using this function here which
20:05 - we defined
20:06 - here as you can see so that is how you
20:09 - pass a structure to your function so the
20:13 - approach is the same as if you wanted to
20:15 - pass any other parameter and again if
20:17 - you are not familiar with
20:19 - passing parameters to functions or
20:21 - functions in general i will have
20:24 - that playlist linked in the description
20:26 - of this video so make sure to watch that
20:28 - and then you will understand how
20:30 - functions work in detail now considering
20:32 - that we have been talking about
20:34 - structures in this video i want to show
20:36 - you something else so let's create one
20:39 - more structure let's create a structure
20:41 - called person and i will do that here so
20:44 - i'm going to say
20:45 - struct
20:46 - and let's call it person
20:49 - like this and then again curly brackets
20:52 - and then semicolon at the end and here i
20:55 - will put all of the attributes or at
20:57 - least some attributes that describe a
20:59 - person and i will say for example that a
21:02 - person has
21:03 - name
21:05 - like this that is going to be of type
21:07 - string and then i will say that a person
21:09 - has age for example again here you can
21:12 - add many more attributes that describe a
21:14 - person things like date of birth place
21:17 - where this person lives
21:19 - and then
21:20 - his or hers gender whether this person
21:22 - is married or not
21:24 - what kind of job they do and so on
21:27 - but i will use just these two and then i
21:30 - want to add one more and that is going
21:32 - to be i want to store the information
21:34 - about what kind of smartphone this
21:37 - person has so i want to say that every
21:40 - person owns a smartphone and then i want
21:43 - to store that data about what kind of
21:46 - smartphone that specific person has so i
21:49 - will create another attribute here and
21:52 - that will be smartphone
21:54 - [Music]
21:56 - like this and let's call it
21:58 - smartphone but with lowercase s like
22:02 - this so with this we have successfully
22:04 - created another structure which is
22:06 - called person and that person structure
22:09 - has three attributes and those are name
22:13 - age and then what kind of smartphone
22:15 - that person has so how can i create a
22:18 - variable of this structure here let's do
22:22 - that
22:23 - let's say here
22:25 - person
22:27 - like this and i'm going to call this
22:29 - person p for example
22:31 - so here i have created a variable of
22:34 - type person and that variable is called
22:37 - p now what i want to do is i want to
22:39 - assign
22:40 - values to these attributes here so name
22:43 - age and smartphone
22:46 - and let's do that here i will say p dot
22:49 - and then again if you're using using
22:51 - visual studio you will get help from
22:54 - intellisense which is going to give you
22:56 - all of these attributes that a person
22:58 - has those are age name and smartphone so
23:01 - i will say p dot name is going to be
23:04 - equal to
23:05 - salvina
23:07 - like this and then p dot
23:09 - h will be 26
23:12 - okay and then p dot smartphone here i
23:16 - need to assign a variable of type
23:19 - smartphone so let me choose which one
23:22 - this one
23:23 - or this one which one would you choose
23:25 - please write me that in the comments
23:26 - down below and um for this occasion i
23:30 - will go with this smartphone too so
23:32 - samsung galaxy s21 ultra please don't
23:36 - judge me
23:37 - okay so here i have created a variable
23:41 - of type person called p and then i have
23:43 - assigned um values to its attributes so
23:47 - saldena age 26 and then smartphone will
23:50 - be this variable here so smartphone 2.
23:54 - okay now what i want to do with this
23:57 - person is i want to create another
23:59 - function like this one here that is
24:01 - going to print all of the informations
24:04 - about a person so let's do that here so
24:08 - let's say void print
24:10 - person
24:12 - info
24:13 - like this
24:14 - okay
24:15 - and here i want to pass a structure
24:18 - which will be person structure so i will
24:20 - say hey this function here will receive
24:24 - a parameter of type person and i will
24:27 - call it person or p or something like
24:30 - that okay and what i want to do inside
24:32 - this function is i want to say see out
24:35 - and then name
24:36 - will be
24:38 - person
24:39 - okay
24:41 - person dot name like this and then add
24:44 - and line okay
24:46 - and then i want to do that same thing
24:48 - for age so i will say age will be person
24:50 - dot
24:51 - age and then considering that this
24:54 - person here has smartphone as well i
24:57 - know that i have this function here that
25:00 - already writes out information about a
25:02 - smartphone so what i can do is i can
25:05 - invoke this function here inside this
25:08 - function here so i can say
25:10 - print
25:12 - smartphone
25:13 - info like this
25:15 - and as you can see this function expects
25:18 - a variable of type smartphone so what i
25:21 - want to pass to this function will be
25:23 - person dot
25:25 - smartphone
25:26 - perfect
25:27 - okay so with this we have reused this
25:31 - code here multiple times so
25:34 - let's invoke this function here in our
25:36 - main function
25:38 - so i want to invoke
25:40 - it here i will say print person info and
25:44 - then here i want to pass a variable of
25:47 - type person any person we have only this
25:50 - one which is called pe so i will say
25:53 - print person info and then pass p okay
25:56 - and before i run my program let me
25:58 - comment these two lines so that we can
26:00 - see output of this function only so if i
26:03 - run my program now
26:06 - as you can see we get name which is our
26:09 - user name or our person name that is
26:11 - saldena ages 26 and then this name here
26:14 - which represents the name of our
26:15 - smartphone is samsung galaxy s21 ultra
26:18 - and then storage space is 64. color gray
26:21 - and price is 888
26:25 - okay let's stop this
26:28 - perfect now uh what happens if i decide
26:31 - to change a smartphone for example what
26:33 - happens if i decide to ditch this
26:35 - samsung galaxy and to buy this
26:38 - smartphone here so iphone 12 well i
26:40 - would say here
26:42 - smartphone so i just change it on one
26:45 - place and then if i run my program again
26:49 - as you can see we get different outputs
26:51 - so it is again salvina and then 26 but
26:53 - this time we have a different smartphone
26:56 - and that is iphone 12 32 gigabytes black
26:59 - and then a thousand dollars
27:01 - okay
27:03 - perfect
27:04 - now one thing that i promised you in the
27:06 - beginning of this video is that i will
27:08 - give you a task that you can use to
27:10 - practice on your own this is something
27:13 - that has been requested in many videos
27:15 - that i published so far and guys even
27:18 - though i cannot manage to answer to all
27:20 - of your comments and all of your
27:21 - requests i do read all of your comments
27:24 - and this is something that has been
27:26 - repeated in multiple comments so here it
27:29 - is i decided to create a perfect test
27:32 - for your knowledge so this here is going
27:34 - to be a perfect test of the knowledge
27:37 - that you have gained so far so in order
27:39 - to solve this task you will not use only
27:41 - the knowledge from this video but
27:43 - you will need to combine the knowledge
27:45 - from my multiple videos and i will link
27:48 - that in the description down below all
27:50 - of those videos
27:51 - so make sure to watch them all and
27:53 - understand them and it is going to be
27:55 - perfectly okay and perfectly normal if
27:57 - you need to re-watch some videos
27:59 - multiple times
28:00 - and then if it takes you multiple hours
28:02 - or days or even weeks to solve this
28:05 - problem because this here is going to be
28:08 - perfect test of your programming
28:10 - knowledge and of your understanding of
28:12 - programming
28:14 - and then another thing is that
28:16 - um once you solve this problem please
28:19 - paste your code in the comments down
28:21 - below and then one thing that i would
28:23 - like to encourage is to create a
28:25 - discussion about that code in the
28:27 - comments down below
28:29 - so you can take someone else's code and
28:32 - try to review that code try to
28:34 - understand it and run it in your visual
28:37 - studio and try to make improvements to
28:40 - that code because that is going to be
28:43 - the best way to learn uh because if you
28:46 - start working for any company chances
28:48 - are that you will not be working alone
28:50 - and you will have a team so you will
28:53 - need to read and understand other
28:56 - people's code and you will need to
28:58 - review it so
28:59 - it is better to prepare for that now
29:02 - so again once you solve this problem or
29:05 - just part of this problem please put it
29:07 - in the comments down below and then try
29:09 - to help other people try to give them
29:12 - advice on how they can improve their
29:14 - code and then what things can be done
29:15 - better or in a different way and so on
29:19 - so
29:20 - let me write the code of the program
29:22 - that i want you to build and then i will
29:25 - be back to show you how that program
29:27 - should behave so here i have built a
29:30 - quiz app as you can see and then i have
29:33 - hidden code so that you cannot see it
29:35 - because this is going to be a test for
29:38 - you so i will not show you the code i
29:40 - will only show you how this app should
29:42 - behave
29:44 - uh so the idea is to build a quiz
29:46 - application that has five questions you
29:49 - can create application that has 500
29:51 - questions if you want but in order to
29:54 - prove that you understand
29:56 - how this problem should be solved it is
29:58 - going to be enough to create just five
30:00 - questions so
30:02 - you have a quiz application that has
30:04 - five questions and each one of those
30:07 - questions will give you three offered
30:09 - answers two of those three answers will
30:11 - be incorrect and then one will be
30:14 - correct
30:15 - and your user will have to give his own
30:18 - response and he will have to choose
30:20 - between those three answers and then you
30:23 - write out the information to your user
30:25 - if he chose the correct or the incorrect
30:28 - answer so let's run this application so
30:31 - that you can see how it works
30:35 - okay so as i said here is the question
30:39 - what is the smallest country and then
30:41 - you get three answers
30:44 - uh usa india and then vatican city two
30:47 - of those three are incorrect and then
30:49 - one is correct so as you can see it asks
30:53 - me to choose between one and three so
30:56 - one or two or three and i will say that
30:58 - the smallest country is tree so vatican
31:01 - city and if i press enter as you can see
31:04 - we get correct okay and then it asks
31:08 - second question so what is the biggest
31:11 - animal in the world
31:13 - elephant blue whale or great white shark
31:17 - well let's say for example that the
31:19 - biggest animal is elephant so one
31:22 - okay
31:24 - and that is incorrect and then you get
31:27 - the third question and so on so this is
31:31 - the application that i want you to build
31:34 - and here i want to give you a few tips
31:37 - that will be useful for you in order to
31:39 - build this application so if you take a
31:42 - look at this quiz application you should
31:45 - notice a few things the first one is
31:47 - that question
31:49 - is going to be a structure and that
31:52 - structure that question structure will
31:54 - have two members at least two so the
31:58 - first one will be text of that question
32:01 - and then second will be an array of
32:04 - three answers
32:06 - now if you are not familiar with arrays
32:09 - i will recommend you to watch my video
32:11 - related to arrays which i will link in
32:14 - the description down below and then here
32:16 - probably
32:17 - so again each structure of type question
32:21 - contains text of that question and then
32:24 - an array of three answers two of those
32:26 - three answers will be incorrect and then
32:29 - one will be correct okay and then
32:32 - another thing that you should notice is
32:34 - that answer is a structure as well now
32:37 - this here is an answer and then this
32:39 - here and this here and this here as well
32:42 - and so on so each answer should have the
32:46 - text of that answer and then in the
32:48 - background you should store the
32:50 - information if that answer is correct or
32:53 - not so if it is true or false
32:56 - now another tip that i want to give you
32:58 - will be related to writing out these
33:01 - questions and then answers that belong
33:03 - to that specific question in order to do
33:06 - that you will need to learn again arrays
33:09 - and then you will need to learn about
33:11 - loops i recommend you to learn about for
33:14 - loop and then nested for loop as well
33:17 - and those videos will be linked in the
33:19 - description as well so i will make a
33:21 - group where i will link all the videos
33:23 - necessary for you to watch and
33:25 - understand in order to build this
33:28 - program here
33:29 - so you write out the question and then
33:31 - for each question you write out the
33:34 - array of three answers that that
33:36 - question has and then again you do that
33:39 - same thing for the second question and
33:40 - for the third fourth fifth and so on so
33:44 - this application here is going to be a
33:45 - perfect test of your programming
33:47 - knowledge and of your understanding of
33:49 - programming and this application is
33:52 - something that you can even put to your
33:54 - portfolio for your first job so you can
33:56 - say to your employer hey here is this
33:59 - very cool application that i built it is
34:01 - quiz application
34:03 - and then there are many ways that you
34:06 - can upgrade this application so you can
34:08 - for example add points to this
34:10 - application you can add multiple users
34:12 - you can add levels uh you can add
34:15 - certain money prices and so on
34:18 - but that can come up later when you
34:20 - progress with your programming knowledge
34:22 - and who knows maybe one day uh your
34:25 - application reaches millions of people
34:26 - and your application earns uh millions
34:29 - of dollars so a lot of people and a lot
34:32 - of money
34:33 - so i wish you a good luck with solving
34:35 - this problem here and building this quiz
34:38 - application
34:39 - and again it is going to be perfectly
34:41 - normal if it takes you multiple hours or
34:43 - days or weeks depending on how much of
34:46 - programming you have learned so far and
34:48 - it will also take you uh knowledge from
34:51 - multiple videos that i mentioned which i
34:53 - will link in the description down below
34:55 - as well and then you will also have to
34:58 - think
34:58 - and try to come up with your own ways to
35:01 - solve a specific problem because that is
35:03 - what programmers do it is not just
35:06 - copying and pasting code and
35:08 - understanding certain basic concepts it
35:10 - is more about connecting those concepts
35:13 - together and then trying to find a way
35:16 - an approach to solve a specific problem
35:20 - so again i wish you a good luck with
35:22 - solving this problem and then uh put
35:24 - your code in the comments down below if
35:26 - you solve this problem or if you solve a
35:28 - part of this problem and try to review
35:31 - code of other people
35:33 - and also if you think that i should make
35:35 - a video where i solve this problem
35:38 - together with you please write that in
35:39 - the comments down below as well if you
35:41 - want my solution so thank you very much
35:44 - for watching and i am going to see you
35:46 - in my next video bye

Cleaned transcript:

hello everyone welcome to my channel in this video i want to talk about a very important topic called structures and i will show you how you can build very interesting program and then considering that you always ask me to give you an example that you can use to practice on your own at the end of this video i have a perfect example that is going to serve as a test for your knowledge but don't just skip to that part because it is important for you to watch the entire video so that you can get the knowledge necessary in order to solve that task and then also for those of you that use instagram uh please take a screenshot of your code or take a picture of this video and put it to your story and write something like learning programming with true code beauty or learning c plus with true code beauty and don't forget to tag me because then i will be able to see your story and i love watching your stories so i will have a link of my instagram profile in the description of this video and then twitter as well for those of you that don't use instagram so without further ado let's start with today's video as i said in this video i want to talk about structures and for those of you that are familiar with the way that i teach you already know that i don't like to give definitions but i prefer to give you a real life example because that is much better for understanding so that is going to be the case for this video as well that is how i'm going to explain what are structures and in order to be able to understand what are structures you first need to understand what are basic or builtin data types and by this i mean data types like integer and float and double and pool and character and so on so if you are not familiar with those i will link a video here and in the description down below as well where you can watch everything that you need to know about data types and then you can come back to this video and learn about structures now for those of you that are familiar with those basic builtin data types i'm going to say that structures are a little bit more complex data type in what way well they are not built in but they are user defined data type now let me show you on code and on real life example what i mean by this what i mean by userdefined data type so let's say for example that you want to store the name of your smartphone in your program in order to do that you would have to create a variable of type string and then call it name or smartphone name i'm going to say name in this case and then here i'm going to assign iphone 12 like this okay now let's create another variable let's say for example that we also want to store the information about how much storage space this iphone 12 has so i will create a variable of type int call it storage space and here i will say for example 32 gigabytes although i might be completely wrong with this one i have no idea it is probably more something like 64 or 128 so feel free to correct me in the comments down below but just don't be too harsh okay and let's create another variable also of type string and let's call it color and i will say that this iphone will be black like this okay and let's do uh the last one which is going to be float price okay and here i will say that this iphone 12 costs for example um 999.99 again i have no idea and i might be completely wrong and it is probably more something like this i don't know uh so please comment the current price of iphone 12 if you're watching the video now and then if you're watching it three or four years since i published it uh please comment the current price of iphone 12 so that we have documentation or history of uh the price of iphone 12 going down okay so i will delete this i will say that this is some sort of budget iphone or something like that okay so here i have created four variables name storage space color and price and they all describe a smartphone which is in this situation an iphone that has 32 gigabytes of storage space it is black and it costs 999.99 now what is going to happen if i want to describe another smartphone well um using the knowledge that we have so far i would have to copy these variables here so i will do that i will copy this and then paste it here and here i will say name to and then store space 2 and color two and price two okay now here instead of iphone 12 i will say for example samsung galaxy oh uh s21 ultra like this and let's say for example that samsung has 64 gigabytes of memory and it is gray and uh it costs for example 888.88 dollars okay and while we are talking about this please write me your answer in the comments down below which one do you prefer iphone or samsung i am very very interested to read what you are going to answer to this question now with that being said i also want to tell you about a problem that i see with this code here and that problem is following imagine if we wanted to describe two more smartphones or 200 smartphones or 2 000 smartphones then we would have very very big problem because using the approach that we used so far in order to describe 1000 smartphones for example we would have to copy this 1000 times so at the end we would have name 1000 and storage space 1000 and color 1000 and price 1000 and so on and that would become very hard to maintain very very soon so that means that this approach here is not optimal and there is a better approach to solve this problem here now what is that approach well wouldn't it be very cool if we could group all of these variables here because after all they are part of one logical collection they all describe the same thing which is a smartphone so name storage space color price they all describe a smartphone in this situation so can we define our own data type called smartphone the answer to that question is yes we can and that is going to be user defined data type which is also called structure so how can we create a structure how can we create our own user defined data type well it's pretty simple you put struct keyword and then you give the name to your structure and in this situation i will call it smartphone like this and then you put curly brackets and at the end you need to have semi column it is very important to have this semicolon at the end okay now here i have created a smartphone structure but it is empty as you can see and what i want to put inside these curly brackets here well i want to put all of the variables that describe a smartphone i want to put all of the attributes that describe a smartphone and here we have uh defined for so name storage space color and price so i will put those here i will say that every smartphone has name of type string like this and then it also has storage space which is going to be of type int like this and then let's say string color and float price okay now here we have created four attributes that describe this structure here and you can create many more if you want so um you can create attributes that say what kind of battery this smartphone has what kind of cpu and then size of display and whether it has wireless charging or not and so on so you can recognize and define your own attributes your own members for this structure here but here i have four which is going to be enough for this example and then one very important thing that i want you to notice is that this structure here there is no data we don't assign data to these attributes here like we did here why well because this here does not represent data this structure here actually represents a blueprint this structure will serve as a model every time that we want to create a variable of type smartphone so when we decide that we want to create a variable of type smartphone this structure here will here will say hey your smartphone needs to have a name a storage space a color and a price so this structure here is a blueprint now uh your question might be okay salina how can we create a variable of type smartphone well the answer is pretty simple it is actually the same as if you wanted to create a variable of type integer or character or something like that so first you specify the type and then you give the name to your variable so let's do that same thing with our smartphone variable so i'm going to say the type which is smartphone like this and then i will give the name to my variable and let's call it smartphone like this only use this lowercase s because it is not going to allow you to use capital s here because that is already reserved for this structure here okay so i will use lowercase s and this is going to work because c plus is case sensitive language which means that it distinguishes between the lowercase and uppercase letters and that means that these two things will be two different things for your compiler because this has lowercase s and then this here has uppercase s even though they both say smartphone okay um now your question might be how can i define all of these values here so how can i define the name of the smartphone and its storage space and color and price well the answer to that question is pretty simple so you put the name of your variable so smartphone like this so this is the name of the variable and then this here is the name of the type or structure and then if you are using visual studio after you put this dot here you will get a list of all of the attributes of that smartphone and this list here is alphabetically ordered so color name price and storage space so let's define name first i will say that name is equal to iphone 12. let me copy this actually okay like this and then let's define storage space i will say smartphone dot storage space is equal to 32 and let's copy this two more times here i will say color and color is black let's copy this okay and then the last one is price and price is 999.99 okay so with this we have successfully created a variable of type smartphone that has these attributes here and the values of those attributes are here and this is how we assign the values to the attributes of this userdefined data type now this here means that we can delete this part of the code here because we don't need it anymore because we literally have created the same thing here so i will delete it okay and then what i want to do is i want to do this same thing for our samsung galaxy smartphone so let's create another variable of type smartphone and in this situation i will call it smartphone2 okay and then here i will say let me copy this okay so i will say smartphone 2 dot name will be samsung galaxy s21 ultra like this and then smartphone 2 dot storage space will be 64 and then smartphone 2 dot color will be gray okay and then smartphone 2 dodge price is going to be 888.88 okay so after we have done this i can delete this part here as well okay now with this code here we have created two variables of type smartphone this one here and then this one here and what i want to do now is i want to write out this data that we have here and then this data that we have here so let's do that let's say see out and then i will say here name and then what i want to do what i want to write out will be this name here so the name of my first smartphone so i will just copy this part here like this so again you put the name of your variable and then you put the name of the attribute of that structure that you want to access in this situation that is going to be name okay and then let's add endline okay and now i'm going to copy this line four times so here i want to write out storage space so storage space and then smartphone and instead of writing out name attribute i will write out storage space like this and then let's add gigabytes like this okay and then this third line will be color so i will say color and then here color and then this last one will be for price so let's say price is equal to smartphone dot price like this perfect so if i run this program as you can see here we have name is iphone 12 and then storage space is 32 gigabytes and color is black and price is 999.99 okay let's close this and for this second smartphone you can do this same block of code here so you can literally copy this part here and then paste it and instead of writing out smartphone.name you can write out smartphone2.name and then smartphone2.storagespace and smartphone2.color and so on but i want to show you something else and that is going to be how you can use functions in combination with structures now for those of you that are not familiar with functions at all i recommend you to watch my video related to functions or actually a playlist which i will link here and in the description of this video as well and there you can find everything that you need to know and learn about functions in c plus but for those of you that already are familiar with functions or that have watched that playlist that i mentioned i will just say that the main goal that we are creating and using functions is to make our code reusable so that we can instead of copying our code we can invoke that function and have that behavior that we desire and in this situation what i want to achieve is i want to create a function that is going to write or print all of the information about a smartphone whether it is this smartphone or this smartphone or any other smartphone if we decide to create 10 smartphones or a thousand smartphones we can just invoke that function and we can say hey here is a smartphone please print out the data that is related to that smartphone so as i said i want to create a function and let's do it here here i will say that the function will be of return type void so i will say void and then let's call that function print smartphone info so print smartphone info i hope that i didn't make any typo okay so what i want to do inside this function is basically this part here so this code here so i will just delete it from here and then i will paste it here inside my function so now as you can see this function here prints out the name of a smartphone and storage space and color and price and here we have an error which says identifier smartphone is undefined which means hey i don't know what is this smartphone here because i have my own scope which is from this curly bracket until this curly bracket here and i don't have any variable which is called smartphone now what we want to achieve with this function is we want to pass a smartphone as a parameter or argument to this function and then we want that function to write out all the data about that smartphone so what i'm going to do is i'm going to pass a structure here so i will say smartphone like this and then i will give the name to this parameter and that will be smartphone i want to use this name here because we already have it in the code if you wanted for example to use a different name for this parameter if you wanted to say for example my smartphone you would have to use this name here and then here and here and here as well but i'm going to return it to smartphone because it looks more professional so i will say that this function here receives one parameter of type smartphone which is called smartphone and here it just writes out the name the storage space color and price of that smartphone now considering that we have created this function here that means that we can invoke it and pass it any smartphone that we want and it should print the data of that smartphone so let's do that let's say print smartphone info like this and if i open these parentheses as you can see it says that it receives one parameter of type smartphone so let's pass it this one let's say smartphone like this okay and then let's invoke this same function for this second smartphone so i'm just going to copy it but instead of passing it smartphone variable i will pass it this variable here so i will say smartphone 2 okay and if i run my program now let's see what will happen okay here we have information about our first smartphone which is iphone 32 gigabytes black and then almost a thousand dollars and then this second smartphone which is samsung galaxy s21 ultra which has 64 gigabytes it is gray and it costs 888.88 and that is something that we have achieved using this function here which we defined here as you can see so that is how you pass a structure to your function so the approach is the same as if you wanted to pass any other parameter and again if you are not familiar with passing parameters to functions or functions in general i will have that playlist linked in the description of this video so make sure to watch that and then you will understand how functions work in detail now considering that we have been talking about structures in this video i want to show you something else so let's create one more structure let's create a structure called person and i will do that here so i'm going to say struct and let's call it person like this and then again curly brackets and then semicolon at the end and here i will put all of the attributes or at least some attributes that describe a person and i will say for example that a person has name like this that is going to be of type string and then i will say that a person has age for example again here you can add many more attributes that describe a person things like date of birth place where this person lives and then his or hers gender whether this person is married or not what kind of job they do and so on but i will use just these two and then i want to add one more and that is going to be i want to store the information about what kind of smartphone this person has so i want to say that every person owns a smartphone and then i want to store that data about what kind of smartphone that specific person has so i will create another attribute here and that will be smartphone like this and let's call it smartphone but with lowercase s like this so with this we have successfully created another structure which is called person and that person structure has three attributes and those are name age and then what kind of smartphone that person has so how can i create a variable of this structure here let's do that let's say here person like this and i'm going to call this person p for example so here i have created a variable of type person and that variable is called p now what i want to do is i want to assign values to these attributes here so name age and smartphone and let's do that here i will say p dot and then again if you're using using visual studio you will get help from intellisense which is going to give you all of these attributes that a person has those are age name and smartphone so i will say p dot name is going to be equal to salvina like this and then p dot h will be 26 okay and then p dot smartphone here i need to assign a variable of type smartphone so let me choose which one this one or this one which one would you choose please write me that in the comments down below and um for this occasion i will go with this smartphone too so samsung galaxy s21 ultra please don't judge me okay so here i have created a variable of type person called p and then i have assigned um values to its attributes so saldena age 26 and then smartphone will be this variable here so smartphone 2. okay now what i want to do with this person is i want to create another function like this one here that is going to print all of the informations about a person so let's do that here so let's say void print person info like this okay and here i want to pass a structure which will be person structure so i will say hey this function here will receive a parameter of type person and i will call it person or p or something like that okay and what i want to do inside this function is i want to say see out and then name will be person okay person dot name like this and then add and line okay and then i want to do that same thing for age so i will say age will be person dot age and then considering that this person here has smartphone as well i know that i have this function here that already writes out information about a smartphone so what i can do is i can invoke this function here inside this function here so i can say print smartphone info like this and as you can see this function expects a variable of type smartphone so what i want to pass to this function will be person dot smartphone perfect okay so with this we have reused this code here multiple times so let's invoke this function here in our main function so i want to invoke it here i will say print person info and then here i want to pass a variable of type person any person we have only this one which is called pe so i will say print person info and then pass p okay and before i run my program let me comment these two lines so that we can see output of this function only so if i run my program now as you can see we get name which is our user name or our person name that is saldena ages 26 and then this name here which represents the name of our smartphone is samsung galaxy s21 ultra and then storage space is 64. color gray and price is 888 okay let's stop this perfect now uh what happens if i decide to change a smartphone for example what happens if i decide to ditch this samsung galaxy and to buy this smartphone here so iphone 12 well i would say here smartphone so i just change it on one place and then if i run my program again as you can see we get different outputs so it is again salvina and then 26 but this time we have a different smartphone and that is iphone 12 32 gigabytes black and then a thousand dollars okay perfect now one thing that i promised you in the beginning of this video is that i will give you a task that you can use to practice on your own this is something that has been requested in many videos that i published so far and guys even though i cannot manage to answer to all of your comments and all of your requests i do read all of your comments and this is something that has been repeated in multiple comments so here it is i decided to create a perfect test for your knowledge so this here is going to be a perfect test of the knowledge that you have gained so far so in order to solve this task you will not use only the knowledge from this video but you will need to combine the knowledge from my multiple videos and i will link that in the description down below all of those videos so make sure to watch them all and understand them and it is going to be perfectly okay and perfectly normal if you need to rewatch some videos multiple times and then if it takes you multiple hours or days or even weeks to solve this problem because this here is going to be perfect test of your programming knowledge and of your understanding of programming and then another thing is that um once you solve this problem please paste your code in the comments down below and then one thing that i would like to encourage is to create a discussion about that code in the comments down below so you can take someone else's code and try to review that code try to understand it and run it in your visual studio and try to make improvements to that code because that is going to be the best way to learn uh because if you start working for any company chances are that you will not be working alone and you will have a team so you will need to read and understand other people's code and you will need to review it so it is better to prepare for that now so again once you solve this problem or just part of this problem please put it in the comments down below and then try to help other people try to give them advice on how they can improve their code and then what things can be done better or in a different way and so on so let me write the code of the program that i want you to build and then i will be back to show you how that program should behave so here i have built a quiz app as you can see and then i have hidden code so that you cannot see it because this is going to be a test for you so i will not show you the code i will only show you how this app should behave uh so the idea is to build a quiz application that has five questions you can create application that has 500 questions if you want but in order to prove that you understand how this problem should be solved it is going to be enough to create just five questions so you have a quiz application that has five questions and each one of those questions will give you three offered answers two of those three answers will be incorrect and then one will be correct and your user will have to give his own response and he will have to choose between those three answers and then you write out the information to your user if he chose the correct or the incorrect answer so let's run this application so that you can see how it works okay so as i said here is the question what is the smallest country and then you get three answers uh usa india and then vatican city two of those three are incorrect and then one is correct so as you can see it asks me to choose between one and three so one or two or three and i will say that the smallest country is tree so vatican city and if i press enter as you can see we get correct okay and then it asks second question so what is the biggest animal in the world elephant blue whale or great white shark well let's say for example that the biggest animal is elephant so one okay and that is incorrect and then you get the third question and so on so this is the application that i want you to build and here i want to give you a few tips that will be useful for you in order to build this application so if you take a look at this quiz application you should notice a few things the first one is that question is going to be a structure and that structure that question structure will have two members at least two so the first one will be text of that question and then second will be an array of three answers now if you are not familiar with arrays i will recommend you to watch my video related to arrays which i will link in the description down below and then here probably so again each structure of type question contains text of that question and then an array of three answers two of those three answers will be incorrect and then one will be correct okay and then another thing that you should notice is that answer is a structure as well now this here is an answer and then this here and this here and this here as well and so on so each answer should have the text of that answer and then in the background you should store the information if that answer is correct or not so if it is true or false now another tip that i want to give you will be related to writing out these questions and then answers that belong to that specific question in order to do that you will need to learn again arrays and then you will need to learn about loops i recommend you to learn about for loop and then nested for loop as well and those videos will be linked in the description as well so i will make a group where i will link all the videos necessary for you to watch and understand in order to build this program here so you write out the question and then for each question you write out the array of three answers that that question has and then again you do that same thing for the second question and for the third fourth fifth and so on so this application here is going to be a perfect test of your programming knowledge and of your understanding of programming and this application is something that you can even put to your portfolio for your first job so you can say to your employer hey here is this very cool application that i built it is quiz application and then there are many ways that you can upgrade this application so you can for example add points to this application you can add multiple users you can add levels uh you can add certain money prices and so on but that can come up later when you progress with your programming knowledge and who knows maybe one day uh your application reaches millions of people and your application earns uh millions of dollars so a lot of people and a lot of money so i wish you a good luck with solving this problem here and building this quiz application and again it is going to be perfectly normal if it takes you multiple hours or days or weeks depending on how much of programming you have learned so far and it will also take you uh knowledge from multiple videos that i mentioned which i will link in the description down below as well and then you will also have to think and try to come up with your own ways to solve a specific problem because that is what programmers do it is not just copying and pasting code and understanding certain basic concepts it is more about connecting those concepts together and then trying to find a way an approach to solve a specific problem so again i wish you a good luck with solving this problem and then uh put your code in the comments down below if you solve this problem or if you solve a part of this problem and try to review code of other people and also if you think that i should make a video where i solve this problem together with you please write that in the comments down below as well if you want my solution so thank you very much for watching and i am going to see you in my next video bye
