foreign hello fellow scratchers and what do you know about Mouse pointer lock and why is it something we should care about after all a mouse is a mouse and we can happily click buttons draw pictures and play our games but all these Mouse movements are restricted to the size of our application window so Along Comes Mouse pointer lock as the name suggests in this control scheme the pointer is locked in place on the screen and then it's up to us to choose what the mouse now does we'd often choose it to pan the background like this and the benefit is that we are now completely free of any limitations on the Windows size the mouse pointer is no longer moving you see and we can simply continue dragging forever this can be especially useful for panning mats in drawing apps and to control our 3D games you see with the mouse pointer lock enabled we can finally keep our Crosshair Central and freely rotate our view with the mouse without ever hitting the boundaries off the edge of the screen the sad news then is scratch doesn't support this mode at least not the vanilla scratch that we all know and love but I'm sure many of you have already heard of Garber muffin and his super impressive scratch mod named turbo War yes in Turbo warp we can load up our favorite scratch projects and run them so so much faster than in vanilla scratch gosh it's just a joy but it doesn't stop there Garber muffin also provides a special version specifically set up with mouse pointer lock enabled woohoo to try this out for yourself I've provided a link in the description under this video the site is found at experiments.turboar.org pointer lock a bit of a mouthful so you might want to follow that link so this looks like scratch right but right away you'll find the mouse in the running projects behaves very differently let's test this out make a forever Loop that sends the Sprite to the mouse pointer and click to make the mouse X and Y visible on the screen and so after clicking the green flag we have to kick again on the stage to activate the mouse first thing to note is that the mouse pointer has disappeared and that's fair enough we're replacing it with the Crosshair in our game anyhow to bring back the mouse cursor we just need to remember to hit the Escape key now if we move the mouse slowly to the left it Jiggles a lot and to the right hmm interesting we don't get very far and as soon as we stop moving it snaps back to the center so rather than the mouse X and Y representing the position of the mouse they are now reporting the distance that the mouse has moved since the last screen refresh we can test this Theory by changing the position of the Sprite by Mouse X and mouse y note that we are changing not setting the position now and look at that now it moves around just like a normal Mouse would I mean wow I have a Dango mouse cursor how cool is this well then shall we try this out with our awesome 3D raycaster to load your projects Into Turbo warp either they have to be shared on scratch or you have to save the project as a file on our computer then in Turbo warp we can use the file load from your computer and select a file and then we are ready to go in fact the game sort of works already only left and right movement is super sluggish and the up and down is just glitchy and this is to be expected also do notice that the Crosshair is jumping around all over the place so let's start there click into the Crosshair Sprite we want to fix this in place but only if we are running the project with the pointer lock enabled luckily we can detect this make a new variable let me get pointer lock for all Sprites and set it to and we're going to check whether the mouse X and mouse y are both equal to zero that means pointer lock will be true only if the mouse is perfectly centered on the screen when the flag is clicked so to fix the Crosshair in place we just want to stop it following the mouse surround the forever loop with an if pointer lock is equal to zero that's no pointer lock we can test that out and confirm that pointer lock is true and consequently the Crosshair no longer moves around with our mouse that is looking good so let's take a look at the player rotation click back into the player Sprite and find our player tick script we're going to have two modes of control so surround the get mouse turn with an if else block like this the default original control scheme is used when pointer lock is again zero but now when point lock is enabled we instead set turn directly to now remembering when the pointer is locked Mouse X returns how far the mouse has moved which is exactly what we want to turn by only we divide by four as otherwise it's a little too fast but you can find that out by having a play so I'm expecting this is going to be pretty awesome except what well something has gone very wrong here we're always turning left I can't understand what that would be unless oh man a turn by block has suspiciously appeared at the bottom of my script I bet it just accidentally attached itself that is the danger of leaving blocks floating around on your script area oh well here we go yes I can move left and right and the turn is perfectly synced to my mouse movements without any weird glidy after effects and we can turn right and keep turning and keep turning without ever hitting the edge of the screen it's awesome well then I guess we should also modify the up and down movements in the same vein we'll need to reposition this set camera Y block so that it only works like this when pointer lock is equal to zero and then in the else when point lock is enabled we need to change camera y by Mouse y instead I find that a good speed of movement can be got by multiplying this by 1.5 but we shouldn't also forget to multiply the value by Delta if you remember this was our frame rate smoothing value so that if the game runs faster or slower we allow for that here great run the project and see what you think and I've got to tell you this is the bee's knees it's exactly what we want our game controls to feel like so responsive and immediate in all directions the only gribe I have is that now we need to limit how far up and down we can look this was one place our previous Mouse limits actually helped us out so anyway it's a quick job if the camera y becomes greater than 180 that's the previous maximum Mouse y then we set camera y back to 180 so it can't get any larger else if camera Y is less than negative 180 we do the same setting camera y back to negative 180. wonderful assuming we didn't do anything wrong then we can give that a full test out and yeah it's really quite something when you remember that this is even running in scratch and because this is Turbo warp you'll find it also runs super well at even better resolutions without breaking a sweat so a huge shout out to Garber muffin for making this all possible if you want to bring your edited project back into scratch then just save it here and in scratch use the file load from your computer and once your project is officially shared it will work in both scratch and turbo warp with or without Mouse lock enabled of course we can always hope that one day scratch will officially support this awesome feature but until then turbo walk is the place to go and on that note this is the end of this little video please don't forget to smash that like button if you found this useful and want more exciting scratch topics like this covering it's been fun venturing a little further outside of our normal realm and do subscribe to the channel so as not to miss the next exciting video the moment it comes out and toggle that Bell icon to make absolutely sure and with that I wish you all the best for the week ahead and scratch on guys foreign