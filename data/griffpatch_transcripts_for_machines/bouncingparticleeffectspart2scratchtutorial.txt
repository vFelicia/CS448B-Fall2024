hello fellow scratchers welcome back to part two of our particle simulation tutorial and just in time for the new year right so we can expect some epic New Year firework shows I bet yeah last episode we put together some absolutely beautiful particle effects using clones and pen there's a link to the video in the top right corner of the screen now if you need to catch up today's episode is all about collisions how particles Collide and bounce off their surroundings and how to add some sound too boom Oh yes this is going to look and sound so good guys I'm super excited to get going so load up your projects from where we left off in the last episode and let's get scratching we'll Begin by creating a quick scene for our particles to bounce around in don't do this though in the backdrop instead create a new Sprite naming it level we do this because touching Sprite sensing blocks are way faster than the touching color blocks oh yeah make sure not to fill the background of this level Sprite with any color yes leave it transparent any actual backdrop artwork can remain in the actual backdrop costume behind everything else okay position the level Sprite at zero zero to ensure it's correctly centered on the stage and then Marvel at our project's Beauty pretty good you'll note the particles are disappearing behind the level Sprite Sprites always are drawn in front of the pen for generic fireworks this might actually be what you want but when included in games we are much more likely to want the particles to bounce around when they collide with the scenery so click into the particle Sprite and find the when I start as clone script this contains each particle's movement in a forever Loop and right at the bottom we already delete each particle that touches the edge of the screen well then we can duplicate that touching check and then also check for touching level give that a test and well there's not much to see as the particles were already hidden behind this level so we can't tell if that really worked so instead of deleting the particles at this point let's bounce them back upwards into the air first we must remember our particle is currently colliding with the level so we need to move it back out of the level first we'll simply reverse the last movement in the Y Direction Change y by with a subtract and we're subtracting the speed y variable and then we want to take the speed Y and reverse it to bounce back upwards and also reduce the speed a little so each bound is smaller than the last to do that we set speed y to speed y itself multiplied by negative 0.4 you can play around with that number to experiment with the bounciness of the particles perfect shall we give this a test smash that green flag oh yeah I'm loving this each particle is bouncing back and then settling on the ground wow that was easy the only problem is that after our 300 particles are spawned we run out of clones and the fun stops until we reset the project of course what we are going to need to do is despawn a particle when it stops bouncing and settles on the ground that is when the bound speed becomes really small we delete the Clone so after we have detected a collision we pop in a second if checking if the ABS the absolute value of speed y That's the speed after the bounce is now less than two the apps ensures we are looking for a speed y value between negative 2 and 2. and yes we then delete the Clone nice let's test this baby out dropping some particles and wow yes we still get the nice bounce and then the Clones are quickly deleted and so we are free to keep dropping more particles and more particles and the fun continues brilliant that does look really sweet okay so this may look like it would be enough for most situations but there is a small problem have you noticed it our particles Collide nicely with the ground but watch when they hit a vertical wall they just disappear we don't have any horizontal wall bouncing implemented well usually when I code collisions like this I will move the Sprite in the X Direction test for collisions and then resolve them right away if they do before then moving on checking in the y direction but because we need to move in the X and Y together to draw our particle Trails this method of collision detection was not possible so instead we are going to do this a bit in Reverse yes we've already moved in the X and Y directions and detected a collision here but we don't know whether this Collision was caused by the X movement or the Y movement let's see if we can work out which one it was start by separating off the set speed Y and the following scripts then after we've moved our particle backwards to the previous y position we use an if else block and check again to see if we are still colliding with the level now if we are not colliding that's the else Branch below then we know it must have been the Y movement that caused the Collision since we're now out of it so we drop the old vertical bounding script back into there but if we are still colliding then for sure we have bounced in the X Direction instead we'd better put the Y movement back to what it was change y position by speed y again and then we undo the X movement instead change X by and we subtract the speed X and then we can set our horizontal bounds by setting speed X to speed X multiplied by and this time I'll use negative 0.7 as I want the bounds to be more bouncy for the left and right bounces right so this script will of course be going back in here but hold on there we have one more Collision case we have not counted for what if both the X and Y movements cause a collision this is the corner case literally yeah we need one more if check are we still colliding after moving in the X Direction if we are then crazily we have to reundo our y movement change y by negative speed y and then copy our original vertical bouncing code again from down here to right under the change y this way we are now bouncing in both directions after a corner Collision finally we can pop this finished script into the awaiting if then wow I hope you are able to follow that it was all getting a bit scripty for my liking and it's prime time though to smash the green flag and test them out oh yes looking good do you see those cool horizontal wall bounces that sure is nice and I do enjoy dropping these particles from different heights watching how they interact with the walls and the floor but silent explosions that will never catch on to make this truly awesome we'll need to add some sound effects what can we find in the default scratch Sound Library a boom nope that's no good explosion no nothing there hop or squash pot perhaps oh gosh really oh go on then let's do this we should start the sound at the same time we create the Clones in the create particle script drop in a start sound right at the top make sure not to use the play sound and weight because otherwise the particles won't be cloned until the sound finishes playing here we go oh my this really oh no no this isn't good don't hold down the mouse button otherwise we get a hideous machine gun style raspberry sound and that's because we are starting the sound of fresh every screen refresh that's 30 times a second and when you start the same sound scratch always stops the previous sound first and this leads to that machine gun effect until you release the mouse and the sound is allowed to complete what we'll do to stop this is under the when flag clicked duplicate the wait until and have the first weight wait for the mouse to not be down instead this means we only trigger the explosion when the mouse changes from being not pressed to being pressed it's not going to repeat all the time that it's held down and to balance things out we'll now up the number of particles in each explosion from 10 up to 100 cool pound on that green flag and let it rip oh man though what have we created I think I love it but I'm not quite sure it certainly looks cool just a shame scratch doesn't have some better fireworks sounds but not All Is Lost the internet is a wonderful resource and we are bound to be able to find some more appropriate sounds there for example I quite like the website mixkit dot Co you can search for various sound categories like fireworks and then we get a few paid premium sounds that we really can't use but under these are some cool free samples too if you can't access this site don't worry I've created an asset project on my tutor account containing sounds and there's a link to that in the description under this video what I'm looking for is a clean sound a bang that Fades out uninterrupted by other sounds of course we can always cut off the start of a sample so it's often the last part of the sound that we'll keep ah this one I really like the sharp snap explosion at the end let's download fast whistle firework you can just ignore that popup the sound will download great so back into scratch then in the sounds tab of the particle Sprite import a new sound and select the fast whistle MP3 file if you've used my asset project then you can just use the backpack to drop the sound effects Sprite into the project and drag each sound into the projectile Sprite one at a time before we can use the imported sound we need to edit it to be just the part of the sound we need play the sound first and you can see that the actual snap bang sound is represented by the second large peak in the wave sample so click and drag to select everything from before that Peak and then click delete test that out to make sure it's what we wanted yeah nice and then give it a better name bang or snap right then clean up and then we can go back to coding switch the start sound to use the new bang sample okay guys now that is what I'm talking about how cool is that it makes such a difference having the right sound for the job and it's surprisingly addictive clicking around the screen and hearing that beautiful crisp snap of an explosion now this may be asking a bit much but do you think we could add some kind of tinkling as the Sparks bounce off the ground I searched around for a potential sound and the best I could find is surprisingly in the sparkle category within a sound named laser gun impact destruction listen to this um there that little last spark sound I love it download that sample and now back in scratch upload the sound unless you brought them in for my asset project of course and then delete everything except that last spark of the sample you may need to cut a little more off than you think we want to have the sound begin as quickly as possible so any delay left before the actual sound begins must be trimmed off you can always undo if you cut too much finally rename the sound Sparkle so this sound wants to be heard whenever a spark collides with the level that would be within the when I started clone for everloop under the first if touching level start sound Sparkle okay let's go are you ready boom and yeah it's not just you that really didn't sound good at all we just get this annoying uniform machine gun of tinkle sounds and it's not at all convincing perhaps we need to just play the sound less often we could limit the sound to just floor bounces by moving the start sound block down to just under the delete clone block here yeah no that's really no different in which case we could try limiting the sound to only the larger bounces surround the start sound with an if and use a greater than operator and then check if the ABS of speed Y is greater than oh I don't know um try 10. okay I don't hear anything now that was obviously too much try three right the sound is back and yep we have less impacts I think but the sound is still too uniformly repetitive I think the real issue then is that we need a mixture of sounds and the sounds should be allowed to overlap a little not just restarting like that machine gun the issue the way we do this is within the sound editor add a wand the end of the sparkle sample's name and then before doing anything more make the sound a lot quieter perhaps five clicks of the soft button next we duplicate the sound it'll automatically be renamed Sparkle 2 which is nice and then we'll change this second Sound by clicking the faster button duplicated gain and make that even faster again and then duplicate but this time we'll make it a bit softer and then perhaps one more slower and softer great that should do back into the code so where we are starting the sparkle sound we'll need a join block on the left we write Sparkle that should match the sentence case of our sample exactly all lowercase for me and then on the right we join this with a random number between one and five that matches our five possible sounds so we can click that and see the different names being listed cool right so drop that into the start sound block here goes nothing oh yes fantastic that is much improved the variant in sound is what carries it I think just a note though this sound on this screen grab that I'm showing you here is not actually as good as the actual sounds you'll hear in scratch some reason the audio conversion and compression has really rather messed up the high frequency Tinkles anyway what I will do is just make each of these Sparkle samples a little softer overall oh gosh well that is really as much as I was intending to show you today but as an added thought have you noticed how often explosive light affects glitter as they fall we can simulate that too with a small tweak but it's up to you whether you include this see what you think just surround our pen down block with an if and check if random number from 1 to 10 is greater than 3. that will cause us to only paint a random six of every ten particles to the screen that gives the whole thing a random glittery shimmery effect there what do you think another tweak that is cool is to make our explosions have a small upwards momentum as they begin under the create particle script after setting the particle speed change speed y by an extra six upwards this then Powers our explosion upwards as we click how about that I really like that little upwards thrust well then as I wrap up today I just wanted to give you a quick overview of the changes I made to create this scene obviously I added a simple gradient to the background and I filled the level in Black then in the scripts I split the main green flag script into four one just sets the default variables but the next three they are almost identical each one creating a forever Loop and waiting for a random amount of time before launching an explosion now the reason this is cool is that it creates a kind of firework show that feels more authentically timed with gas and then rushes of explosions that all add to the fun you'll note I have this find Space custom block this is important it avoids creating explosions that overlap the level giving them all a bit of space around them I've added a mediumsized Circle costume this is called spacer to ensure there is room around the explosion to make it look good the find Space block switches to this costume and repeatedly moves the costume around until it's not touching either the level or the edge of the screen only then does it hide again and then continue and that's pretty much it the particles are then created at the XY position we have just found I added a third input to this block only to allow each explosion to use a different sample so that they could overlap nicely so we get the overlapping sample sounds I also used a random if to create one of three different types of explosion from small to large and that special circular explosion too for fun so I hope that just shows you some of the fun you could have while playing around with this please do submit your projects to the scratch Studio Linked In the description I really cannot wait to see them and be as creative as you can what could you use these particles for if you enjoyed watching this tutorial then please do smash the like button I'd really appreciate that and subscribe to the channel so as not to miss the next exciting episode but that's the end of this tutorial I look forward to seeing you again soon thanks for watching have a great week ahead and scratch on guys foreign