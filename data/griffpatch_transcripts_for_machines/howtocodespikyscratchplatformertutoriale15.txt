hello fellow scratchers I'm Griff patch and as promised I'm back with another fun episode of classic platformer and this time we are introducing a brand new enemy class of the spiky red flying ball kind wow how cool is that yeah you don't want to be touching this guy right and stay tuned cuz later on in this episode we'll be adding a more complex movement mechanic designed to keep your players on their toes guys load up your projects from where we left off in the last episode and let's get scratching so my idea is to introduce a new flying enemy class and I think a good place for them to spawn is right here on the second scene so stop the projects right there and click into the enemy Sprite we are going to need a new costume for this and I'm thinking to make this guy like a really spiky ball almost like a red conquer with all those prickly spines all over them I find it easiest to create spikes around an object if you draw the opposite spikes first and then group them this then allows you to rotate them together around the middle of your enemy and ends up with a much more even result great I love that let's name this costume spike ball The Fearsome well maybe just spike ball so now that we have the costume drawn we need to officially add them to our level that's under the when I receive change scene script right duplicate an existing if check we want to only spawn the spiky enemy on scene scene two that's it if scene equals two then spawn and we can copy in the current Sprites X and Y position from the stage as for direction okay so this enemy wants to move up and down that's a direction of zero just remember that we can come back here and enter any direction that we want and that should allow the enemy to move in all sorts of directions now the name of this enemy can be Spike one and aha the first time we've had the opportunity to set the enemy type here on the left not being red Chomper enemy this time but a spike ball but hold that thought come down to our defined spawn scripts below what you'll notice is that the enemy type we pass in into our custom block here this input is never used in the script really yeah it's true because well this is the first time we've added a different type of enemy we are going to need a way to keep track of this input from now on make a new variable named type and make sure it's for this Sprite only and then we can set the type variable right away at the top here to the pin type input variable great now we have a record of what type type of enemy we are creating so what happens next well the new enemy clone is created with the type varable set scroll up to find the when I start as clone script here it is and as things stand this script is only relevant to our red patrolling enemy Chomper right now there's no point in trying to reuse the same scripts because the motion is going to be very different for our spikeball so instead let's make sure these scripts here only run for the enemy type name red if type equals red then yes we want to run these scripts but rather than Nest all these scripts inside one big if I prefer instead to use a guard condition where we say when this is not a red enemy we don't run this script stop the scripts here and Pop That in at the top it's up to you which way you prefer to do this perhaps the first was cleaner I don't know I just have this thing about avoiding nesting blocks within each other wherever possible so that's good we should Now find that the red enemies spawn as before but also that the spiky enemy is excluded as it has never been made visible on the screen what we can do now though is duplicate this when I start as clone script that's right we can have more than one run at once but this time we'll only allow a type of spike ball to ex excute this script to show this working switch costume to spike ball and then slap that green flag it's testing time red and red and spike ball woohoo sitting rather Riley on top of my Apple H we need them to start moving up and down whatever and since we are already pointing in the up direction we just move three steps forward worthy of another quick test and okay we are in business my plan though is to have them collide with the ceiling and then return back down once more but hold it right there not wanting to recode something we've done before if you can find our Define move left and right script you'll see that we have a very comprehensive list of Sprites to check the collisions with and yes we need to check them all again for the spiky enemy the answer is to refer back to our player Sprite and find our clever check touching solid script this worked wonders for the player and will work just as well for our enemies so drag it into the enemy Sprite but as you can see the enemy is checking for collisions with many more Sprites than our player does so tell you what let's shake this up a bit we'll keep the set touching block but rather than using the All logic I'm going to use addition adding together the results of touching level with the result of touching the edge of the screen the interesting result of touching both at the same time is that this will result in a value of two which is really rather neat then because the script is getting rather wide I'm going to break this into two lines using a change touching careful now make sure the first one was a set block followed by a change block and we change by touching safe zones add touching platforms Coolio that's all four possibilities let's see that in action when the enemy is touching the level we get a touching value of one and when they are not colliding a touching value of zero even more fun when they are touching the edge and the level we get a touching value of two pretty funky right and that means we can now really simplify the enemy touching scripts back up here we just need to ensure we check touching solid and then we want to know when we are not colliding with anything solid so that's simple it's just touching equals zero that's so much cleaner but don't assume we got it right test test test do red enemies still collide with the walls and turn around yes they do great job so now we can return to our spiky dude they must now check for solid collisions too that's in our second when I start as clone script make sure it's for the spike ball okay let me just move that out into some free space of its own after we move forward by three that's here we again check touching solid if touching is greater than zero then we have indeed collided so what do we do we do a 180 and turn fully around to point in the opposite direction also let's have the player wait before continuing on uh for just 0.2 of a second whoops I didn't mean to click the script then but actually that's pretty cool because it means we can see this script in action as they collide with the level pause and then set off back down again that's really neat personally though I feel that they are getting a little bit too close to the wall I want them to always leave a little Gap now we could already achieve this effect by using our safe Zone Sprite do you remember how we can draw out an area where our enemies can't enter this is great for adding special patrol zones for enemies see and it works a treat at least once you have them starting out of a zone that is but it is a bit annoying having to rely on all these safe zones when I want this to be the default behavior for this enemy so scrap that safe Zone and we'll do it another way all we need to do is have the enemy check for collisions just a number of steps ahead of where they are now that is we secretly move them not by three steps but three plus an extra say 16 steps but then as soon as we've checked the collisions we quickly move them back again by minus 16 steps that will leave us exactly where we expected to be in the first place just three steps forward does that make sense I hope so because that's all there is to it hit the green flag and let's see this in action up and down up down and we have a very clean 16 pixel Gap every time nice one and it's great fun dodging this new threat however I did expect this enemy to be a bit more deadly than this so we haven't yet added back in the collisions with the player but careful here because it's not as simple as just dropping them in this forever loop after all how would we check the collisions in this weight statement or a Glide if we were using them we need to look for a collision at the same time as running this script in which case we just need another when I start as clone script again running when the type is Spike Ball but this time forever checking for collisions with the player Sprite except we fell into this bug before if you remember with our collisions with the old red enemy over here we need to also check for invulnerable varable to stop the death sound looping over and over as we die only then do we go ahead and broadcast lose life see this in action we must reenter the scene so let me start this all over again and now a quick Dodge but yes we do now die from touching the spiky ball huzzah and hooray well that would be a fine time to stop the lesson but guys I don't want to shall we cram in one more enemy movement pattern before we end I'm thinking of placing a homing enemy right here at the top scene that is an enemy that follows the player let's start them up here a new spawn block is needed for scene 103 the enemy type can be spike ball space homing still a spike ball only a homing one give it a unique ID and fill out its starting X and Y position great so where are when I start as clone for spike ball we'll want a new script for the new homing spike ball Ball but before we action that come down to the checks for when the player touches the spike ball we just added because this type equals spike ball will not work when we're using a spike ball homing but we can make it work just swap the equals check for a green contains block now if the type varable contains the word Spike then it matches any spiky enemy at all cool you know what this is overly complicated let's remove the knot and just have the forever Loop inside the If instead yes it's more nested but it's perhaps easier to read in this case right back up and let's make that homing script duplicate the spike ball script and check for a type of spike ball homing we can discard all the movement scripts inside this rever Loop and start by waiting for one second then point towards the player and we'll begin our movement repeat 45 times and we're going to dash forward so move forward by four no maybe five steps at a time that will be fast go go go right here we are and oh man okay let's try that again up we go and this time no no okay I changed my mind move by four steps after all five was to too quick let's try that again well guys that brings us to the end of today's episode it was fun bringing more diversity to this classic platformer do smash that like button if you enjoyed this episode 2 and hey why don't you drop me a comment under this video with your ideas for enemies you'd like to introduce now in the coming episodes I'm switching it up and looking to introduce some more advanced player moves to like their sliding and the highly requested double jumping mechanic so do make sure to subscribe to the channel and check the Bell icon to ensure you don't miss the next exciting episode but until then do have a great week ahead and scratch on guys