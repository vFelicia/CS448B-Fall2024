hello fellow scratchers do you want more people to play your scratch games well then perhaps it's time to make your games mobile friendly yeah so many people want to play scratch on their mobile devices these days and to ensure they're not left out today's tutorial will cover the most asked for of mobile friendly control schemes the fixed mobile thumbstick control it has only two parts a fixed circular base and contained within a small draggable stick the whole thing stays neatly locked to one corner of the screen out of the way but the best part is that this little beauty can be dropped easily into almost any scratch project then with a little tweaking you'll have your game's mobile ready in no time indeed stay tuned because i'll be choosing a selection of your projects at random and we'll see just how easy it is to add and then play these games using it how exciting is that so are you ready yeah well let's get scratching so starting a new project we'll keep our scratch cat but make a new sprite for our controller naming it control stick then in the costume editor name the costume base we'll begin by designing the base of the thumb stick feel free to make this look any way you want and just take what i do as a guide i'm making an all black base drawing the initial circle while holding shift to ensure it's a perfect circle i'm aiming for a size of around 85 by 85 pixels then we must drag the shape until it snaps to the middle of the canvas like so this is such an important step so please don't forget to do this then purely for effect i'm drawing a second circle around the first but this one's just an outline without a fill again snap it to the center cool i like that next up we'll add a second costume this time naming it stick so why are we adding this to the same sprite rather than the simpler approach of adding a separate sprite for this the reason is if it's all scripted in one sprite that makes it far easier to backpack and copy into other projects so to draw the thumb stick i will use pure white but this does make it tricky to see when you're drawing this one is around 33 by 33 pixels again snap the circle to the center and again i'm drawing another circle around the inner one to make it look extra nice brilliant now we can just drag the joystick base on the stage to position it where we want the controller to appear in our game right time to lay down some code blocks when flag clicked switch costume to bass then set ghost effect to 60. and now we run the project cool this makes the joystick bass transparent that's very important so that we can see the game play behind it since we're using a single sprite we'll use a create clone of myself block to generate a separate sprite for the top thumb thumbstick and when i start as clone event block lets us continue the scripts for just the new clone so adding a switch costume to stick only affects the new clone sprite and we run the project and ah you might have hoped to see the white thumbstick appearing in front of the darker base but no it doesn't the reason is simple the clone has been created but clones always appear one layer behind their original sprites not in front as we need here so fix that with a go forward one layer and there we go the stick has appeared wonderful and i think we can risk making it a little less faint set ghost to 25 very attractive like a licorice wheel i do rather like licorice how about you yum shall we get this little stick moving around bring in a forever loop now any press of a touch screen is detected in scratch by the mouse down block so wait until mouse down this will pause the script until we touch the screen now we repeat until the user's finger is no longer touching the screen that is not mouse down then in here we can go to mouse position this will make the control stick follow the mouse until the user releases it it's testing time again now a little warning you have to switch to full screen mode to test the project from now on otherwise you'll end up grabbing the sprite on the stage as you drag and that messes things up no end oh yeah this is looking promising i can click and drag the little circle around and the larger circle stays still cool next we shall make the smaller stick return to the center when we finish dragging it drag in a new goto block and drop it in as the first block in the forever loop we want it to always start in the center the center is defined by the position of the base sprite here but not only is the control stick sprite not listed in the go to sprite list but there's the added confusion that we have two control stick sprites the original and the clone which sprite would scratch pick well the good news is it always chooses the original sprite and that is the base there's a few work rounds to get the same missing sprite name in this block today i'm going to use a variable to do the job scrap this default one and make a new variable naming it bass sprite or if you're daft like me call it myself and mark it for this lemon only right under the first green flag script set myself to the name of this sprite that is control stick i'm going to copy and paste it to make sure i spell it just the same capital letters and all great so now we can use this variable to tell the sprite where to go to and that is the original controller stick sprite give it a test we drag and release the stick and it springs back most satisfyingly to the center of the base that's great so if we're going to control our games with this stick we'll need a way of reading back a stick position from the thumbstick sprite first we'll get the direction of the stick to help us see what's happening i'm going to draw a little arrow on the thumb stick but don't worry i'll remove this once we're done make sure it points to the right we want to find the direction of the thumbstick from the thumbstick base but since we are coding within the thumbstick clone the thumbstick itself let's start by pointing back towards the base sprite that is the myself variable again gosh i really wish i'd call that variable bass sprite oh it would make so much more sense right now hindsight right now we can see as we drag the stick it does point back perfectly so if we were to flip it around 180 degrees turn 180 degrees there we go sweet it is pointing in the direction we are dragging it we're halfway there let's record this direction in a variable so it can be used in our games make a new variable named stick direction leaving it for all sprites then set stick direction to direction now we look at how far the player has pushed the stick away from the middle that is the amount of power applied to this movement make a new variable stick power also for all sprites and this we set to the distance between the thumb stick and the base distance to myself and it's testing time smash that green flag and watch those stick variables fly the stick direction tells us the direction the stick is pointing in and the power variable tells us how fast we are moving it in that direction we only have one problem the little thumbstick can be yanked right out of its base and across the screen that's not right no we must constrain it to the base circle and that would be around here yes a stick power of around 25 anymore and it will have gone too far so we can check for this with an if stick power is greater than 25. but hold on i feel this 25 will crop up again so let's make available to hold this value in name it max stick for this sprite only and we set it after the green flag is clicked to 25. great replace the greater than 25 down here with our max stick variable so if the stick power has gone further than mac stick then we want to move it back to the max stick distance 25 we can calculate the change needed by subtracting stick power from max stick this gives us the negative difference between these two numbers moving by this takes us back to here perfect so move steps with a subtract operator on the left we have max stick and from this we subtract stick power cool let's try it out oh man yes this is great the little stick control is nicely constrained inside the larger circle but we can still make finer movements within this area too and that's what we need however the stick power variable is unfortunately not capped at 25 okay no problem after moving the thumb stick back stuff in a set stick power to max stick again this will be 25 so checking that out and yep there we go it now maxes out at 25 but in all honesty when we use the controller in our games it is unlikely a power of 25 will mean anything to us better if the max power variable reads as one for max power and zero for no power that would make it consistent and simple to use bring in another set stick power block and we will simply divide the existing stick power value by max stick to ensure that the value never gets greater than 1. and the proof is in the pudding and there it is a maximum power of one achieved one more thing before we can try using this stick and that is when the stick snaps back to the middle after i release it the stick power available must reset too so up here set stick power to the empty value this indicates that we are not touching the stick at all pop it under the go to myself at the top of this forever loop great and the power resets do nothing as expected i'm really pleased with how this is behaving we'll be controlling a game with this in no time so i'll remove the small arrow from our stick costume and then click into the scratch cat sprite 1 sprite scratchy will help us test this controller out quickly now when green flag clicked forever this is our game loop now we'll check if the controller is being used if stick power is greater than zero then we simply point in direction and drop in the stick direction variable so what do we have here then we've only got a mobile stick that can change scrap cat's direction that's what how cool is this so how about a bit of movement two move forward by stick power steps but remember stick power never gets bigger than one that is never going to get anywhere fast so thrust in a meaty multiply block and make the stick power six times more speedy and now we are getting somewhere it is nice to have a stick that allows for slow or fast movement just as you need them so we can run away from a mob or skillfully edge around an obstacle at least that's the idea if it wasn't so fiddly to use on a touch screen okay let's talk about stick activation did you notice how the thumb stick gets activated even when we click as far away as this from the controller well that's no good if we want to be able to click on other buttons or elements on the screen without moving the thumbstick so this must be fixed the common technique used is to only allow the joystick to be activated when the mouse press begins in the area just around the thumb stick controller once activated it captures all movement no matter if you stray outside the activation area or not then on release of the mouse button the capture is over this also means you can't click outside the activation area and then drag over it to begin using the stick no it requires activation with a direct click cool shall we code that up switch to the control stick sprite this forever loop is getting too long we can break it up separate off the whole of this repeat until script this is specifically dealing with dragging the thumbstick around that is once it has been activated we'll wrap this up in a new custom block naming it stick drag please please please do not tick the run without screen refresh that should only be used if the script is supposed to run instantly but we know this script will run for as long as the mouse is held down so don't run without screen refresh don't right attach the new define block to the orphaned repeat until script before we make use of this new stick drag block we'll do a little rethinking of the forever loop here i think it makes more sense to replace this weight until mouse down with a repeat until mouse down the reason is that then we can continually reposition the thumb stick to match the position of its base just in case we ever move the bass around mid game well we might next bring in the if else block and drop in a less than operator now the mouse has been clicked but is it close enough to the thumb stick to activate it we check the distance to mouse pointer being less than hmm i'm thinking perhaps around 100 pixels for starters and in which case i'll just use the size block that starts at 100 and that also means that if we resize the controller sprite this check will scale with it so if we are within 100 pixels of the base of the thumb stick we can use a stick drag block this stick is activated but otherwise we clicked outside the activation area in this case we simply wait until the mouse is not pressed down not mouse down before we continue to loop around and wait for the next mouse press beautiful let's see this in action firstly when clicking on the stick i can use it as before and also i can still drag outside the controller and it keeps working it's captured the mouse input that's great but if i release a touch and start pressing elsewhere on the screen now the thumb control does not activate splendid let's see just how close i have to be to activate this thing actually it appears the activation distance may be slightly too lenient i think we should require it to be closer we can scale down this size from 100 to say around 60 by multiplying size by 0.6 now if i click around the stick i have to be really close yeah really close to activate it cool so you can play with this 0.6 number to configure how close to the control you want yours to activate the last action to confirm is that i can't control the stick by starting a touch outside of the activation area even if i then drag back in over the thumb stick no splendid it works great good job so this type of thumbstick control scheme is excellent for games like slytherio or that kind of genre where you want to point your avatar in any direction but what about other games where we would need to track the x and y directions separately let's change the player sprite to be like a standard platformer having an if left arrow pressed and an if right arrow pressed to move the player left or right respectively so the problem here is that our stick direction and stick power don't translate super easily to this instead what we want is our stick x and stick y variable instead of the direction and power the good news is that these values can be quickly calculated using our friend trigonometry stick x is equal to stick power multiplied by the sine of stick direction and stick y equals stick power multiplied by the cosine of stick direction and this will be used so much it makes sense to code it right into the control stick sprite itself so click back in there now find the define stick drag script and we'll begin by making two new variables stick x for all sprites and stick y also for all sprites then scroll down to where we set stick power and now we can set stick x to and here we go multiply stick power with the sign of stick direction yeah then duplicate that making sure to set not stick x but stick y and then change the sign for a cosine cos gosh you should be getting pretty familiar with us using the sine and cos blocks in this way they are just so useful and we'll use them like this over and over again so click the green flag and here are the stick x and y variables updating as we drag the thumbstick around hold on i note that when we release the stick these values are not resetting back to zero we should fix that we'll need a set stick x and stick y block but this time setting them both to zero yes having an empty value in here can cause us more problems than it solves so yeah set them to zero but where do we drop it in not in this custom block but back over here under the when i start as a clone just after we set stick power to the blank value that makes sense to do it all together a quick test and that is great the stick x and y values are resetting when i release the mouse well then let's see if we can plug this into our test game script click into the first sprite and well i guess we can actually just replace the whole left and right checks with a change x by and then multiply stick x by 6 for extra speed and this is a great test as it shows how we've completely separated the x and the y axis from each other i can drag the stick left and right to control the cat but the up and down axis does nothing at all but what if we didn't want to recode the whole control system and wanted to plug in to an existing game just mimicking the more conventional left and right key presses well in that case it might be best to count any movement of the stick past a certain distance say over 0.5 to mean that we are walking to the right or to the left or jumping to do this bring in an or so we can keep the left key press check in place and then add in a less than operator and for movement we check whether stick x is less than negative minus 0.5 negative 0.5 for the right control we do the same but check for stick x being greater than positive 0.5 so how does this play out trying some little movements first and that doesn't do anything no movement of our cat but as soon as we go over the threshold half goes our player splendid and that still works with any key presses too so that's fantastic right now to have a whole lot of fun we can't know how well this thumbstick works without dropping it into a few real scratch games and having a play but before we do i just want to make the thumbstick a little bit bigger it may work well on large pc screens but when played on a mobile phone not so much boy is this thing tiny no problem click into the control stick sprite and drop in a set size block before we set mac's stick and we'll try setting this to 200 percent yeah that will be huge and wowsers look at that great for players with big thumbs and small devices i guess but there's a problem we can't drag the thumbstick far enough to reach the edge of the base circle anymore and that's because we need to increase our max stick variable in relation to the sprite's size too well 25 is a quarter of the original size of a hundred so set max stick to size divided by four we get four by dividing 100 by our previous 25. there that's better we should just fix the position of our controller so it's fully on screen stop the project and drag the base to wherever you want it to sit and i think i'll try it on the right hand side for now instead yes that works so well perhaps it's just a little oversized though so maybe i'll size it back down to 140 and one more tweak drop in a go to front under the green flag script right at the start to make sure the controller is brought in front of all the other sprites in the project and now we open our backpack and drop the whole control stick sprite in there and i am so excited to try this out but even more excited to see how you guys will get on with this just remember the studio for this project is linked in the video description and it's going to be so fun because you get to choose any of your games to put in there as long as you've added a mobile joystick to show off okay so without any forethought at all let's find a fun looking project how about um snowy town by teen hey what's this mmo platformer well okay turns out this is a remix of one of my games who knew but why not i can confirm it does not have any mobile controls yet so perfect i'll look inside and locate the key press scripts here they are so first we need to open our backpacks and drag in the control stick sprite then back in the main game sprite i'll replace the wasd the was keys with our stick controls replace the right key presses checks with if stick x is greater than 0.5 and for the left movement stick x is less than minus 0.5 quick test here we go yeah look at this i can easily move left and right with the thumb stick now this may be a common issue though the thumbstick sprite is still not in front of the other sprites in the game to fix that perhaps we can just click into the thumbstick sprite and add a wait one second before it starts setting up the stick we could also trigger this off a broadcast event or any other way that works for you okay back in the game sprite the jump key is detected here i'll replace the space key check with a check for stick y being greater than 0.5 here we go again but this time dragonistic up lets us jump around two here b and we are off hey this isn't half bad what do you think should we try another game hey this looks fun click and jump by mangold658 another platformer huh let's see if we can switch it for the thumb stick control drag the control sprite from our backpack and we go searching for the key and mouse control scripts here they are in the ninja sprite check for stick x greater than 0.5 and less than minus 0.5 we've replaced the jump checks with a test for stick y being greater than 0.5 so how does this feel yeah we can move and jump the first spikes pose me no problem aha a sword fun wait a minute how do i use this sword oh man i think there must be another key for that um i should have read the instructions i guess we'd have to start getting creative with our controls to make this work fully mobile perhaps a tap of the screen to swish the sword or a swipe down or even clicking on the mob ah oh no ouch oh no ah oh oh no maybe i'm not the best at this game or it could be because i'm using my mouse rather than my thumb so i can record this video could be yep actually that must be it right ragequit let's find something a little bit different ah a car game highway madness by game central let's see oh well it turns out this too has mobile controls in place but it does suffer from a jiggling issue so perhaps our thumb stick can fix that locate the movement scripts drag in the control stick sprite and then check for stick x being greater than 0.5 or perhaps 0.3 to be more sensitive and then less than minus 0.3 so here we go and it surely works i might add that we could adapt this one to allow for smoother movement using the analog stick x variable rather than triggering off greater than and smaller than limits i think that would work even better however that's a cool game good work here is a slither io clone by slaud was taken oh wow i'm such a cute button of a snake yes so this works just like mice of the wire game control wise and the snake already follows the mouse but if you've played the mobile version of slytherio on your phone you'll know that this too will use a mini thumbstick so hey let's try doing the same here i'm going to make our stick base a slightly different color so that it shows up against the black just trying to figure out what i need to change okay for now i'm going to just drop in a set mouse direction block in here and set it to stick direction i probably need to check the stick power first but never mind let's see woohoo it's working great this is purely working by direction of the stick but that's all we needed really wow i'm still such a tiny snake what's going on oh wait oh yeah okay i didn't consider that the game would count me as pressing the mouse button down to accelerate all the time that's another issue that needs solving for this game to work fully mobile next up cube comics has created his own sputastic spin on lemonoid invasion wow it's looking great now this game is tricky to port to mobile because it's already controlled by the mouse and keyboard together the keyboard to move and mouse to aim and shoot the obvious option is to combine the two and have the ship fly and fire in the direction the thumb stick is pressed we'll start there so we can see that in action for simplicity and speed we'll change the control scheme over to use the thumb stick completely in reality we probably want a menu option or a key press to toggle between the two control schemes so in place of the key presses i just drop in stick x and stick y variables but careful it's too easy to forget what point towards does and think you can use the stick direction in there no no don't do that we are not pointing towards something at all we want a point in direction block to then point in direction stick direction right let's test okay this is working as i expected i'm finding i have to be super careful not to move too fast making aiming adjustments is causing the player to accelerate towards the very potato that i'm trying to avoid that's unfortunate the result is that i have to keep turning to retreat away to give me space to attack them again from a safe distance even so this is still quite fun i have had one interesting idea what if we split the joystick power into two regions so that pressing hard flies us around but more delicate presses only cause us to rotate so we can aim to implement this we leave the pointed direction as it is so it always turns but just surround the move blocks with an if and check for when stick power is greater than say 0.4 or maybe higher we can play with that value later and that should be all we need to do let's see that in action hey yeah look at this i can now use little movements to aim and then push further to thrust off across the level what do you think of that idea then pretty cool right i'm sure you guys can come up with some really interesting ideas to solve these problems too wow there's a lot of game types that would be interesting to try this thumbstick out on what i've learned from this experience though is that mobile controls in scratch are perhaps not the best it would be great if scratch embraced its mobile audience more fully and added native support for mobile touch joysticks or even better a mobile touch extension to grant us multitouch scratch blocks oh yes sign me up for that well okay guys as i said earlier i'm putting a link to the scratch studio for this tutorial in the description under the video you can submit any project you like so long as it uses the mobile stick control in some way but please if you don't mind only submit one project per user that would be great so choose carefully and that just leads me to say if you have enjoyed this video please smash the like button and don't forget to subscribe to the channel so as not to miss my next exciting tutorial if you'd like early access or priority comments then these are just some of the perks available to channel members look out for the join button lurking around under each video and on my main channel page right that's it from me have a great week ahead and scratch on guys if i release the touch and start pressing else let's see how blah blah blah blah blah blah the mobile touch joysticks or even better a more ball