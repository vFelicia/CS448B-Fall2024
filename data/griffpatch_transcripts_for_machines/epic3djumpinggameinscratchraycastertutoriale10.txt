hello fellow scratchers man I love this scratch raycaster series and I'm very excited to be coming back to add something new if you haven't yet followed along then now is a great time to start episode 1 and 2 are dead simple seriously fun and wow I can hardly believe the progress we've made since then which brings us back to today and we're going jumping mad adding the ability to jump over Nano and generally jump all around the level because it's far too much fun how cool is this So currently we only store a player X and Y position on the map now we're going to need to add the player's vertical position too player Zed and in episode 8 we already covered panning of the scene up and down but jumping is a little different as the Parallax effect requires further away elements to pan slower than those close oh wow look at all the tiny enemies spread around a level that is so fun and so if you've already caught up with episode 9 shout I'm ready in the comments and if not then not to worry you'll soon catch up because without further Ado we'll save our projects as a new copy for this is episode 10 guys let's get scratching okay so before we lay down any new code to make testing easier I want to temporarily disable the mouse controls don't worry we'll put them back at the end in the player Sprite scroll down to the Define player tick script this is where all the player movement happens I'm going to separate off all the mouse control code that's everything down to and including the first turn by degrees block and to make things clear let's wrap that in a custom block naming it Mouse controls and run without screen refresh so we can attach the new Define hat block to those Mouse scripts and then we'll make use of the mouse controls block right away however we are temporarily disabling the mouse controls aren't we so bring in an if else and drop the new Block in the first then Branch cool bring back the rest of the scripts from below popping them in on the end of R if the else block simply wants to set camera y to zero to ensure that we're looking straight ahead note that an empty if condition will always run the else Branch so our Mouse controls are now disabled I'm just going to move that Mouse controls definition into some free space down here excellent give that a quick run to confirm it works here come the Nanos yes I can wave my mouse around and it no longer rotates The View instead I am forced to use the keyboard also I don't really want the cursor to follow my mouse either so to fix that we can pop a set pointer lock into the else Branch too setting it to one and now the pointer becomes locked to the middle of the screen and we are running 100% mouse free I would also like to disable the enemy movement as they can often get in the way far too quickly when we're testing so click into the entity Sprite and scroll down to where the when I Stars clone script is and this is the simplest change just separate off the move custom block and do leave it nearby so that we can restore it later on ha these enemies are out of luck but that is much better for testing well then let's have some fun fun click into the pen Sprite this is where all the 3D drawing gets done specifically in the Define draw row block and now we are going to add player verticality you can see this is where we calculate the height of each vertical slice of wall based on its distance from the player and here is where we work out the top y position to begin drawing the wall downwards this is what we'll need to tweak but first we'll need to make a new variable player Zed to keep track of that vertical position making it for all Sprites and for fun switch the variable reporter to be a slider by right clicking it or with a long press on mobile so as I now slide this upwards I want the player to appear to rise up off the floor the effect of this is that the level should move downwards if you can remember way back to gosh like episode two of this series is it then this 1.5 represents how tall above eye level each wall starts so to shift this wall downwards by player Zed we'll use a subtract block subtracting our player Zed from the same 1.5 value now we don't need to worry about further away things moving slower as this is already accounted for in the height variable but we do need to compensate for it being multiplied by 10 so we divide player Zed by 10 first finally we can drop that in place of the existing 1.5 oh that line is getting a bit long for my liking but I'm going to let it slip this once because it is testing time so slap that green flag oh man yes see how easily the level now drops away below us I'm really loving that it's just too much fun trying this out all over our level but we do have to do something about these enemies the same vertical positioning should be being applied to them too what we will need is to duplicate this math script up to where we're multiplying by height and then moving over to our Define Stamp entity script this is where we yeah stamp our entities on the screen but enemies don't have a vertical Zed position specifically so we're going to replace this 1.5 or a zero to represent that position and then simply drop the script into the goto XY on the left there placing the blank value super easy right well smash that green flag oh yes did you see that I am liking what I saw the entities are now behaving exactly as we'd hoped keeping their feet firmly on the ground ground as I raise the player up and down he hey like this it makes me feel really tall however as fun as it is to look down on our level from above the rendering of the level from above will never look quite right as our raycaster is optimized to not draw any walls behind the First wall each Ray encounters as well as this we have a virtual ceiling in place and we are not supposed to be able to burst through it if you come up close to a wall and adjust the player Zed value you should find this looks fine up until around 13 or 14 but any higher and the illusion is lost so we'll have to remember that as we scrap the player Zed slider and code up some actual player jumping scripts 13 or 14 is the max so click with me into the player Sprite and yes we still want the player tick script only scroll right down to its bottom now we're looking out for when the player presses the space key if key space is pressed but we only want to jump when we are touching the floor so another if checking when player Zed is equal to Simply zero that will be the floor okay now we need some vertical momentum to jump up with make a new variable player speed Zed or player SZ for short for all Sprites now when we successfully jump we set player speed Z to not too much let's try two then to move the player up by this speed change player Zed by the player speed Zed SZ except we need to remember all our movements are scaled by our Delta value to allow for slow frame rates so change player Zed by player speed Zed multiplied by Delta next we account for Gravity change player speedz by netive 0.2 again we need to multiply that by Delta all that's left is to prevent the player falling through the floor if player Zed is less than less than zero then they Fallen too far so simply set player Zed back to zero but also let's reset the player vertical speed set player speed Zed back to zero also and are you ready for this run the game and press space Bo Bo oh man that's awesome and if you look our height is not going much above 10 so we are well within our acceptable parameters testing next to a wall in front of Nano they must think we are looking most odd hey I wonder if we can oh yes I know exactly what we are going to work on next jumping over enemies of course we'll need to account for the fact that some enemies are taller than other Frank so we are in the player Sprite and ah here is where we detect that the player is touching an entity and for reference we are still in the Define player tick script yes it's all happening in here today now the problem is touching entity doesn't tell us what type of entity we touched be that a nano or a much larger Frank so that's not going to work here we need to pull out the if to touching entity script and make sure to reattach the other script from below right we're going to move this touching script into the entity Sprite instead so before we do click first into the entity Sprite and yes this is actually where we're going to do the work in the when I start as a clone forever Loop we'll make a new custom block named hurt player and we'll run without screen refresh now drop the new block into the forever Loop so it runs each game frame and now we need those touching scripts from the player Sprite click back into the player and drag them right into the entity Sprite right they should have appeared somewhere nearby so attach them to the Define Hur player hat block but careful notice how we are looking for touching entities this is no longer correct we are now wanting to know if the entities are touching the player so make sure to switch that around a wonderful benefit of detecting cisions this way around is that each enemy can now control if and how much damage they inflict on the player we just need to code it up right here but for now let's just confirm this is working as expected yep touching Nano is a constant Health drain however it's not super obvious that we are taking damage is it really often first person games will flash a color on the screen to indicate damage has been inflicted so we're going to add a broadcast whenever the player is hurt broadcasting a new message player hurt the pen rendering is all done in the pen Sprite so clicking there now and we're going to create a new costume for this and zooming right out of the canvas draw a huge rectangle over the entire painting area snapping it to the center enter if you can now I don't want an outline but the fill that is important we'll switch to a radial gradient fill and the center that's the left hand color swatch click that and make it transparent then the right hand Swatch we want a deep red around a brightness of 60 or so now if we can make that visible on stage you can get a picture of what we are looking at perhaps set the size to 100 and the X and Y position to 0 0 there we go that should work great shall we code it up find some space and we'll trigger off a when I receive for the player hurt event okay so we're going to switch to the new hurt costume and then we'll make sure the size is set to 100 also a clear Graphics effect would be a good idea to reset any brightness or ghosting effects then position the Sprite in the center of the screen with a goto XY 0 0 and finally from the pen category we stamp our hurt costume on the stage Splendid are you ready to see this in action we're approaching a dangerous Nano and there it is our red overlay is working perfectly down goes our health and we are well aware of that because we can see the red colored border around the screen cool and now we are all set up to add the most awesome of scratch Sports Nano Leap Frog right now no matter what we do we continue to cide with this little guy but not for long look here still in the pen Sprite you can see that the costume one is the Nano and we no longer want to collide if the player's Zed value is greater than their height now costume 2 is a Frank and they are simply Too Tall jumping will still result in the player getting hurt okay then click back into the entity Sprite before we check for touching the player we'll drop in a new if check and we need an and so we can check if typ is equal to one for that is a nano and if player Zed is greater than around three then we are jumping over their head well if we are jumping then we won't be able to cide with any Nanos so we can stop this script and not bother to check for collisions with this entity wow that was quite easy question is does it work smash that green flag I'm testing walking collisions first and yep that works as before now with a run up jump and I didn't see a Flash and no not a single Health Point was lost that is great let's do it again whoops I think I just caught them there come on Hur up yeah got it hey you know we could easily add a score counter and track how many Nanos we jumped over and that would be too fun hold on let me just find a Frank uh Frank Where Are You Frank aha okay jump ouch yes as hoped jumping has no effect on reducing Collision pain from touching a Frank nice one so we are almost there before I finish though let's restore the enemy movement in the entity Sprite place the move script back into the when I started clone forever Loop before we detect the player collisions and in the player Sprite oh we can get rid of that old touching player script and then if you want to we can restore Mouse control by finding the Define player tick script and simply drop a not block into this if condition you could of course opt to switch this mode on or off in any way you feel best let's give that a quick test yeah there's the mouse ouch something is already attacking me but tell you what let's hide those excess variable reporters player Zed and speed Zed and that my friends is what you'd call a wrap and isn't this game looking fantastic I do hope you've enjoyed reengaging with this series if so then please like the video and and if you haven't already subscribed to my channel then why not subscribe now checking that Bell icon to ensure you are the first to know when the next video drops if you are Keen to see more videos in the raycaster series then drop me a comment because I still have a number of topics to explore like projectiles viewing enemies from different angles or perhaps even bringing Cloud multiplayer engine into the mix anyhows apart from to remind you that I have a glorious selection of the most practical mer available for the keenest of Channel supporters that is it for today so have a great week ahead and scratch on guys