hello fellow scratchers rotating platforms spinning turning rolling platforms of pure joy that's what they are people may have been wowed at seeing scratch games featuring moving platforms but man they will be simply blown away when they see these beauties indeed by the end of this episode 12 of our classic platformer series i'm confident we'll all be having awesome fun creating the most amazing levels you have ever seen now you may have noticed that these awesome demo scenes i'm flashing up often feature more than one platform on the screen at once if you've been following the series attentively then you'll know that this is something we haven't been able to do easily before but fear not we'll be addressing that problem today too oh yes this is going to be great now just before we dive in let's just wet your appetite did you know that when you stand on a rotating platform the movement of the player follows a perfect orbit around the rotating platform's center of rotation yeah look at that so just as moving platforms apply their movement to the player so a rotating platform applies their rotation to a player it's just going to take us a little more work to calculate the relative movement but hey that's what we're here to learn so what are we waiting for let's get scratching we begin where we left off in episode 11 and make sure we save a new copy for this is episode 12. we'll start by trying to get two platforms on the same scene for that we could do with a new scene with lots of empty space to play with click into the level sprite and enter the costume editor here is scene one and i want to make a new passageway through to the left from here great now duplicate scene one yeah it's autonamed as scene six for me but since this wants to be to the left of scene one drag it up above scene one in the sprite ordering then i'll rename it to scene zero hey so who thought scene one was the lowest you could go no no not at all we can even go negative without any problems which can open up a lot of fun right i need more space i'll flip the level horizontally to match up with the entrance and then shift over the walls to open everything up oops i need my left wall back there we go let's just slap the green flag and check that out aha splendid lots of space for movement and since i fixed the wall jumping bug last week i'm evidently trapped in this room so we need these platforms click into the platform's sprite cool this is costume one and it's our basic movement platform we can use that if you haven't already then run over to scene 0 stop the project and click the show button to make the platform sprite visible on the stage i'll position it at the highest point i want it to move to we'll be animating it down and then up from here in a loop but first we must set the start position under the when i receive change scene script we need a new if block checking if the scene hash is the new scene zero but we don't want this to be a door so chuck that away the previous scripts we used for animating a platform was the aptly named animate platform script although i haven't been using this since we last changed our level around let's just see what that script was doing okay so the way i left it we had it starting at a given position then animating through three different positions so yeah i'm going to change this to be a standard up and down movement for now if you want to keep your existing animation then just create a new custom block for this new platform animation and use that for this new platform instead the first change we make is to set the starting position of the platform here before we use the animating block go to xy and it kindly puts in the current position of the platform for us thanks scratch now the reason we do the go to before using this animate block is so each platform can start at a different position next find the define animate platform script again since we've already set the start position we can get rid of the initial go to xy block from in here now for the glide two blocks these need to move relative that is a fixed amount away from the current position the x positions can be simply replaced by the current x position i just want these platforms to move up and down without any side to side movement oh and look we don't want this third glide and weight this is just going to be a down and up movement now lastly the y's we first move down by 90 pixels so that's y position subtract 90. then to move back up 90 pixels y position plus 90. sweet that's nice and straightforward let's run that oh man i forgot to show the sprite didn't i how many times do i do that you've no idea drop a show block first thing in the animate platform script and we'll try that again yes now we are onto something nice to have a working platform in my game once more but our biggest challenges still lie ahead what we would like to do is drop in a second moving platform like this and then just change the starting position to put it next to the existing one but stop right there this is not going to work because this animate platform contains a forever loop it's never going to finish running and proceed onto the next instruction and hey even if it did we'd only be telling this same platform to animate up and down not a new one so nope chuck that away what we need is to use a clone of this platform to position and animate it independently of the first and this is exactly what we did in the enemy sprite so perhaps we can borrow some scripts from there just before we do though scroll across to find some free space ready for any enemy sprite scripts we might drag in now click into the enemy sprite so to make use of clones we have hidden the original enemy sprite this is because the original sprite acts as a clone making factory the factory itself is hidden but the clones that pop out of it are visible then we have this new when i receive about to change scene the delete this clone within causes all the existing clones to be deleted all except the original sprite of course as that is not a clone doing this before a scene changes sets everything up ready for a clean start and here's the actual change scene event receiver now look this is doing exactly what we want to do in the platform sprite for any scene we can have multiple spawn blocks one for each enemy in a scene the reason this is possible in this enemy sprite is that unlike in the platform sprite these spawn blocks do not just animate the original sprite but they position and then clone a new sprite the downside of this is that the animation of each sprite cannot be controlled in the change scene script but instead that gets done under a when i start as clone script over here this is a tad more tricky as we then need to find a way of knowing what kind of enemy or platform we are trying to animate but yeah we'll get around to that shortly okay first we need to copy some of the scripts from here into the platform sprite locate first the when flag clicked block and we'll drag it carefully into the platform sprite next up we want the when i receive about change scene and finally find the define spawn type script this will be useful for cloning the new platforms so drag it into the platform sprite cool these are the three scripts we needed so click back into the platform sprite and uh scratch look at that pile of blocks come on tidy them up there we go that's better now i realized that as you've been working on your platformers you most likely have lots of your own changes and scripts hanging around in here but hopefully the changes we make here now will make enough sense that you'll be able to adapt your scripts to work in the same way as mine first thing to do is replace the old door at and animate platform scripts in here with spawn blocks that create the clones the first input is asking for the type of clone to create this one is a door but back in episode 8 we cleverly named the door costume as key 1. do you remember that this simplifies the scripting the x and y positions come next copy these directly in also now dir direction this is new to platforms so just stuff in 90 so that the platform faces right the door app script is responsible for animating the door we should keep that for later once we bring in the when i start as a clone hat block splendid next we do the same for the animate platform script copy over the position from the go to block below the costume well check out the costumes oh yes it was still named costume1 that's original so if you haven't renamed it pop that in as the first input the direction can stay at 90. and then drag off the go to and animate scripts for later so far so good we just have one tweak to make i've noticed that the define spawn script is not doing anything with the type input guess our enemy sprite doesn't either yet then anyhow we need to be setting the costume to this value so that we can tell what sort of platform this is switch costume 2 and drop in the type input variable now this will become a door or a platform before it's cloned great so now to deal with these animating scripts like i said earlier these want to be triggered and a new when i start as clone block bring in an if and from the green operators category contains and what i suggest we do is use the costume name block on the left and on the right the word key you see this will now recognize any cloned platforms that is a door since they will have the word key in them for sure and therefore we pop the door app script under there to handle the door animations but you'll notice this door app block has its x and y and costume inputs already set but this new cloning strategy already has these details set up before the clone is created so how about for simplicity we just pass through the current x position y position and the costume name as it is unchanged this is getting a little bit messy let me just tidy this up right remember these animating scripts never end they are just forever loops after all so we don't need to worry about using an if else or a stop this script here okay if this isn't a door then under here for me it has to be a platform so i'll drop in the animate platform block right under there if you have different animation scripts for different scenes then you'll need to find a way to identify which script to run here you can always check the scene hash variable or the costume name or find any other way that works well for you let's give that a test it's good to check that the platforms are appearing yep there it is few and that it also disappears off screen yep good and finally i'm going to leg it all the way over to the right to ensure the door platform is also where i left it yes you'll want to test each type of platform you've got in your game good good good this is great news because now we can finally try putting these clones to good use how about we add in that second moving platform to scene zero find with me the when i receive change scene script here we go where scene is zero let's duplicate the spawn block and modify the x position to be negative 86 that should be on the opposite side of the screen and i'll also change the y a little too okay so if everything works as planned oh boy yes look at this we finally have two moving platforms on the same screen that's so cool and opens up a lot more opportunity for really cool level design we could even add back in some lava pools doors and platforms all on the same screen right oh yeah and man that's really what this episode is all about opening up cool opportunities because now we can finally look at introducing a new type of moving platform the rotating platform yeah this is what we've all been waiting for let's just start by experimenting a little click into the platform costumes and duplicate the existing costume one only i'll size it up into a rough square this one is 86 by 86 pixels let's see how that looks on stage yeah i like that having this rotating on the screen will look uber cool let's rename the costume as square splendid now knit back into the code and we can change the costume used by just one of these newly spawned platforms to square matching our new costume's name and case precisely so without any waiting around we can check that out in game hey hey there it is nice but enough of this up and down motion blah everyone's doing that the future is rotation first we need to decide how to tell the platform that it is a rotating platform we could use the costume name but to be honest we'll also need to store the direction and speed of rotation so what we can do is rightclick the spawn block and we'll edit its definition adding in the new label turn followed by an input named degrees that will be how much will be turning the platform by each frame now each existing spawn block has the turn input set to the empty value by default and that's perfect as a blank turn can indicate the platform is not rotating but this square platform i'll enter a turn of one negative values will spin anticlockwise and larger values spin faster just play around with this because it's super fun so where's our define spawn script here we go make a new variable to store the spin value name it turn and make it for this sprite only that's important otherwise all the blocks will end up spinning just the same then right at the top we set the turn variable to the value of the degrees input variable okay guys so now we have a way of identifying a rotating platform let's make it spin find the when i start as a clone script the doors are identified by the costume name containing the word key and everything else is up and down platforms so we now want to check for rotating platforms if turn is greater than the empty value that's the same as saying turn is not the empty value in which case this is a rotating platform so first set rotation style to all around so that we can see it actually rotating then bring in a forever loop in the loop we turn sprite clockwise by and drop in the turn variable oh whoops we also need a show block see i always forget and we wouldn't be seeing much at all let's give that a test and there we go a basic rotating platform very good but there's nothing like a little physical interaction to test things out and here we are standing on the pinnacle of our achievement and well you know something doesn't seem right do you see what it is the problem is that the surface of the platform is just sliding past under our feet and i'm not being carried along with it the good news at least is that our wonderful collision fixing code is successfully pushing us out of the ground at each point so if you didn't catch episode 8 for that then now is a good time to do so it will become even more important shortly so the problem we have is that our existing moving platform code simply takes the movement of the entire platform and applies that to the player using the platform dx and platform dy variables but for this rotating platform now this is more problematic because the platform's position as a whole is not changing nope it's just rotating so if the platform turns by say 45 degrees clockwise then if the player is positioned here we need to move them to here but if they were standing over here then they need to be moved to here and that's completely different direction of movement welcome to the complex world of rotation maths what is super awesome though is that the movement of the player has nothing whatsoever to do with the size and shape of the platform being rotated be it a square a circle or a complex rotating maze it matters not one bit to know where we will rotate to we start at the center of rotation that's here find the direction and distance to the player and then simply rotate that direction by the same 45 degrees the distance stays the same and tada this is the new position of the player as you can see we could do this trick using a number of scratch readings movements and rotations and position resets but if you've been following my 3d raycasting tutorial recently we have already covered some exciting rotation maths that can also solve this problem in a concise way let's look at it again here it is so simply put given a position x and y relative to the center of rotation and an angle of rotation we'll name this ccw standing for counterclockwise then the new position x2 y2 is given by this beautiful yet slightly scary formula if you do happen to understand this maths then hats off to you some of you though may feel uncomfortable about using something that you don't fully understand but let me just tell you don't sweat it in modern coding we make use of countless software libraries that we don't need or even want to understand how they work the important thing is that we know what they achieve and how to use them so where do we start can we find the when i receive tick platforms this script is where we record the movement of the platforms you'll see it calls the tick block just below and you can see it setting the platform dx and dy variables here this deals only with platforms that are changing position not rotating so pull the whole script over to the side and so that we can handle different platform types bring in an if else block just return this little go to xy to the bottom of the tick block that ensures that the platform's position is returned back to where it started before we did any collision detection so again we check if turn is greater than the blank value this is a rotating platform the else is therefore for the original moving platform so we can safely return those original scripts into there great it's rotation time firstly we must find out whether their player is actually standing on this rotating platform we do this as simply as possible by moving the platform up by four pixels change y by four and check for a collision if the platform is touching the player then okay now the tricky bit you ready oh yes a new custom block for the maths i think call it rotation maths ccw remember ccw stands for counter clockwise and add a numeric input also named ccw now naming it like this is useful so that we remember the direction of rotation needs to be inverted run without screen refresh and we are done we can make use of the block before we code it up if we are touching the player do the rotation maths by rotating by and remember to flip the direction 0 subtract turn okay time to flesh out that define rotation math script to try to make this as simple as possible let's split the maths up using many variables we need a dx for this sprite only d y for this sprite only syn sin for this sprite only and cos you guessed it for this sprite only there few now we need the position of the player but relative to the rotation center of the platform set dx to the player's x position subtract the x position of this platform and do the same for the d y setting it to the player's y position subtract the y position of the platform great the next step is to notice that we use the sine and cos of ccw twice each so to simplify the maths we can precalculate these values set the variable syn to the operator sine of the input variable ccw counterclockwise similarly duplicate that and set cos to the cosine of ccw cool and now in one swoop we will set platform dx and platform d y so after calculating the rotated position we need to be left with just the change in position to get that we will simply end by subtracting dx like that set the platform dy just the same only subtracting d y okay now follow these next steps carefully so as not to make a mistake bring in a subtract operator and under that an addition yep one of each now we need four multiplications put them either side of the subtract blocks on the far left drop in two dx variables and on the far right two d y variables now for the cos variable carefully now one goes in the top left and the other goes in the bottom right and the sine variable to the top right and the other to the bottom left i just love the pattern of this maths it's so cool now we plug it all together the right hand block drops into the right hand input a quick tip when dragging a rounded block into the input of another block aim the top left corner of the dragged stack at the input rather than where your mouse pointer is the top left corner is what matters there like that do the same for the d y multiplied by cos and now bring in the left hand multiples to both of them great well done so now making sure to drag this by the middle drop the minus stack into the set platform dx and the addition stack into the set platform d y yay this is a thing of beauty and guys i am just bursting to try this out because if everything has gone to plan that really is all we needed okay here we go oh yes right away we can see a huge improvement in movement look at that now something you can't see here is how important episode 8 has been to the success of these rotating platforms the reason for this is as we calculate the new position of the player after a rotation it is almost certain that part of the player will end up colliding with the platform this would be a disaster except that in episode 8 we created the most wonderful script called find closest space 2. this script runs right after the moving platform changes the player's position and as such it searches out the closest spot nearby where the player is no longer colliding and moves us to there this little fix is an absolute lifesaver and we don't even see it happening here but without it boom this would just all fall apart so yay do go back and watch that episode episode 8 again if you need a refresh and so we can now have some fun with other platform ideas why not try making long thin rotating platforms and change the direction of rotation like so yeah this is looking fun the way surfaces move and the player can slide or wall jump off them is so cool how about we make an interesting container shape stuff it on the same scene and make it rotate faster oh my gosh that's manic how can we even interact with this i feel like if i time it right i might be able to jump inside yeah and i'm in the collisions are working really well and i wonder if i'll get squashed if um ah yep deadly so next i'm thinking what this rotating container would be like on scene two instead gotta time this right too now these spikes are really awkward oh man come on yeah that was so cool question is can i get back no no i can't ah you know the best way of coming up with ideas from amazing levels is to do this kind of thing just try placing things in a scene and play test it to see what's fun you never know what will come out of it until you give it a go it's such a laugh and my best ideas come out of just play testing like this and on that note we are drawing to an end but oh my gosh i can hardly contain my excitement to see how you guys make use of these new platforms in your scratch games as always there's a link to the scratch studio in the video description below submit your projects and myself or curator will add it to the studio i hope you've enjoyed today's episode if you did then smash that like button and don't forget to subscribe to the channel so as not to miss my next exciting tutorial if you are a tutor or a dedicated fan then you might consider joining the channel membership to help support the channel further plus you get some epic perks like priority replies to comments early access to videos or the projects themselves and of course those super channel emoji gotta love them right that's it from me thanks for watching have a great week ahead and scratch on guys foreign