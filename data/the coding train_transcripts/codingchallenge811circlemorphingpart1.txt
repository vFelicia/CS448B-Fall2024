00:00 - hello you're watching a video where I'm
00:03 - watching a video look that's goal on and
00:05 - that's me last week look I trim my beard
00:07 - I'm the ID if you didn't watch this
00:10 - video before goal on a guest here on the
00:12 - coding train you have a wonderful
00:13 - lecture about interpolation in art
00:15 - history and art historical perspective
00:17 - and then showed 10 different ways of
00:20 - morphing from a circle to a triangle so
00:23 - now in this video I'm going to close
00:25 - that and there's a github repository
00:27 - which I will link to which has 10
00:30 - different 14 different ways why don't I
00:32 - say 10 so many different ways of
00:33 - transforming a circle into a square no
00:35 - actually I haven't looked at the code
00:37 - for any of these and so what I want to
00:39 - do and I have done this before I failed
00:42 - that it miserably I'm going to do this
00:43 - twice I'm gonna just try two different
00:45 - techniques in this video I am going to
00:47 - try to transform from a circle to a
00:52 - triangle and the the constraint that I
00:55 - want to give myself is that I only want
00:58 - to work with begin shape and end shape
01:00 - and a perimeter of points around a
01:02 - circle and then I want to be able to
01:06 - take that perimeter and make it a
01:07 - triangle come back there's lots of
01:08 - different ways I could do that
01:09 - the first way that I'm going to do that
01:11 - is just work with the exact same number
01:14 - of points but define the shape of the
01:17 - triangle and then move the points around
01:20 - and this is what unlocks a ton of
01:22 - creative potential as the points could
01:24 - spring back and forth they could mix
01:26 - themselves up they could use some kind
01:28 - of fancy bouncing easing algorithm they
01:31 - could twirl but I'm just gonna like move
01:33 - them from one spot to the other so I'm
01:34 - gonna set up a template from which you
01:37 - could be creative and you can make your
01:38 - own circle morphing example you could
01:43 - tweet it with a gif or whatever any way
01:46 - you like okay so let's get started doing
01:48 - this alright first actually before I go
01:51 - over there one thing we could notice
01:52 - here is that the points of an
01:56 - equilateral triangle rest on the circle
01:59 - and if I just for a second think of this
02:02 - as zero degrees this is 120 degrees this
02:08 - is 240 degrees so again I have a think
02:12 - of it as maybe I
02:13 - this is negative 90 I should be a little
02:15 - more thoughtful about the math but I
02:17 - think this is going to be useful because
02:19 - as I'm calculating these points I want
02:22 - to calculate these points as well to
02:24 - create both of those perimeters at the
02:26 - same time and there's so many different
02:27 - ways you can do this don't get me wrong
02:28 - I'm trying to pick the simplest not the
02:30 - most elegant beautiful or accurate just
02:33 - the simplest maybe it's not the simplest
02:35 - I'm sure you could think of some simpler
02:37 - ways but let's come back over to the
02:38 - code now so the first thing that I need
02:42 - to do is I need to have two arrays I'm
02:45 - gonna say let circle path be an array
02:49 - let triangle and look I don't know why
02:54 - but I'm feeling like I want these to be
02:55 - the same number of characters so circle
02:59 - path and triangle path I want a raise
03:01 - I'm gonna put vector objects ap5 vector
03:04 - object is just an X and a y so what I
03:07 - could do here in a really sort of
03:10 - simplistic way just for a second is I
03:12 - could and let's let's change angle mode
03:13 - to degrees just to like save ourselves
03:16 - some some pain so I'm going to say for
03:21 - let angle equal 0 angle is less than 120
03:26 - angle plus Plus now I probably want to
03:32 - have some sort of variable to keep track
03:35 - of like how many points so maybe let's
03:39 - just make a variable called it's spacing
03:41 - right now I this is not great but let's
03:43 - say we're gonna do something every 10
03:44 - degrees just have it be kind of low
03:45 - resolution right now so I say angle plus
03:47 - equal spacing so to get the points along
03:52 - a circular path I can use polar to
03:55 - Cartesian transformation which means
03:59 - that if I have a certain angle and a
04:02 - radius I can calculate the X Y here as x
04:06 - equals radius times cosine of the angle
04:09 - y equals radius times sine of the angle
04:14 - all right so that's something that I
04:16 - definitely can do that's how I want to
04:18 - create the vectors for every angle with
04:20 - a certain radius now here's the thing I
04:21 - really
04:22 - love to derive these formulas for you
04:24 - but I will point you instead toward a
04:26 - video where I do that it's a polar to
04:27 - Cartesian coordinate transformation
04:29 - video pretty sure I made one so now if I
04:32 - come back over here I'm gonna say circle
04:36 - but let's let V and let me just make
04:38 - this a so that it's not as long winded V
04:43 - let's say V for vector equals crea
04:45 - let me actually let X equal and I need
04:49 - some sort of radius so radius let's just
04:51 - say 104 right now x equals radius times
04:57 - cosine of the angle let y equal radius
05:00 - times sine of the angle let V equal
05:05 - create vector and being very long-winded
05:07 - here XY and now I'm going to say circle
05:13 - path dot push V so if I run this code
05:21 - and I look at circle path I can see I
05:25 - have 12 vectors and these are all the
05:28 - points 100 comma 0 ninety eight point
05:31 - four eight comma sin blah blah blah like
05:32 - so you can see all these points here now
05:34 - in theory the next point right with the
05:37 - angle at exactly 120 would be and this
05:41 - is a little bit silly that I'm going to
05:43 - do this because I definitely don't need
05:46 - to do it as three for loops but I'm just
05:47 - gonna divide it into three just for
05:49 - right now because I think this will help
05:53 - me and then and again
05:56 - absolutely all of you can think of
05:58 - magical ways so now this should give me
06:00 - all the points and honestly let's you
06:03 - know let's comment these out because
06:04 - let's just go what happen to get to that
06:06 - let's go to the draw part and because
06:09 - let's at least look at how do I draw
06:11 - that perimeter so now I want to say
06:13 - stroke 0 no fill begin shape and shape
06:20 - is it there's some fancy new es6 way I'm
06:23 - supposed to iterate through an array
06:25 - equals 0 that's not even for each I is
06:29 - less than circular path length I plus
06:33 - plus and now I'm going to say
06:37 - vertex so let me say let V let V equal
06:45 - circular path index I so I want to look
06:47 - at each of those vectors one at a time
06:49 - what am I doing here I wanna say begin
06:50 - shaping and shape to draw that path and
06:52 - I want to say V X V dot Y so let's see
06:57 - what do I get here well there it is
07:00 - that's part of it why is it up there I
07:01 - want to think about everything relative
07:04 - to the center of the of the canvas so at
07:06 - the beginning I'm also gonna say
07:07 - translate width / 2 height divided by
07:12 - two all right here we go there look
07:15 - that's 120 degrees part of a circle now
07:20 - could I possibly get the triangle path
07:23 - as well let's see if I can so I know
07:28 - that what I could do with the triangle
07:29 - path right here is I could say let a
07:35 - start equal zero
07:38 - let let a end equal 120 and then
07:45 - triangle path dot push I guess I could
07:56 - I'm just sort of working this out in my
07:58 - head right so I have X start Y start and
08:01 - this is very silly what I'm doing x and
08:04 - y and I'm just working this out so I
08:06 - want the start and end of this line
08:08 - that's the side of the triangle I want
08:09 - to start at 0 degrees at 120 degrees and
08:12 - so I need to do the start angle for the
08:17 - starting point and the end angle for the
08:20 - ending point and then I want to say
08:23 - create vector X s Y s and x and y n so I
08:34 - just want it this is just me working out
08:35 - the math right of how do I get I just
08:39 - want to get this is like this point and
08:41 - this is this point so if I do that a
08:43 - path between those I'll just draw a
08:44 - straight line so I'm this so many ways
08:48 - this could be improved but let's just
08:49 - see if this
08:49 - is right okay well I have to also draw
08:55 - the triangle path and yeah I guess I'll
08:58 - just do that as a separate loop triangle
09:03 - path and triangle path there we go so
09:10 - you can see now this it's going all the
09:12 - way I didn't have that loop go to the
09:14 - the next angle but the triangle side
09:16 - goes all the way that way okay so I've
09:18 - got both now here's the thing what how
09:21 - do I want to do this I want to figure
09:24 - out these points inside of this loop as
09:27 - well so I think what makes sense is for
09:29 - me to actually say start angle equals
09:31 - zero end angle equals 120 start angle
09:39 - end angle then I want to say start V
09:45 - equals create vector radius times cosine
09:50 - of start angle I just want to get those
09:53 - those points I'm gonna kind of do it in
09:55 - one line radius times sine why is
09:59 - everything so complicated start angle
10:02 - alright so I want to get that start V
10:05 - and that end V which will be end a and a
10:14 - so I think I created two vectors and
10:19 - they're really I could just call them
10:20 - start and end okay I wish I could
10:27 - there's so many ways that could be
10:28 - proved but I'm working it out I'm
10:29 - working it out okay now what I want to
10:32 - do is let's just say just to like sort
10:35 - of see what's going on here what if I
10:37 - just say triangle path dot push start so
10:41 - I'm just gonna put that start in a bunch
10:43 - of time so we don't need this anymore
10:44 - this was me just working it out so if I
10:48 - run this okay nothing but now what if I
10:52 - use oh there's a lurk function so
10:54 - there's alert function right if I use
10:56 - the lerp function if I have a start and
11:00 - I have an end
11:02 - and I lurk between those two values by
11:06 - 10% it's going to give me this point
11:09 - right here and I could do that with a
11:11 - vector I could use a lurk with the
11:12 - vector function linear interpolation to
11:15 - get ten percent from one XY to another
11:17 - XY so what I'm going to do now is say
11:25 - let so this should be the circle vector
11:28 - and the triangle vector equals start
11:34 - start I think if I say start lurk it's
11:38 - gonna give me a new vector hmm hmm I
11:40 - don't know let's see start lurk end and
11:44 - I need you know what I think I need to
11:47 - do I need to say P five dot vector when
11:50 - I say P five dot vector dot lerp and I
11:53 - want to say I'm going in between the
11:55 - start and the end and what is that what
11:58 - am I what's how far along am i the purse
12:01 - I'm a certain percentage a / n de- start
12:05 - a so the the amount to lurk is whatever
12:10 - that angle is / start end angle - start
12:15 - angle that's triangle vector triangle
12:19 - vector okay so this is now how I'm
12:22 - getting whoops kind of crazy so I'm
12:24 - getting the circular path the
12:25 - traditional way by calculating these
12:30 - points one at a time and then while I'm
12:32 - doing that I know this beginning point
12:34 - in this end point so let me calculate
12:36 - these points along the way and let's see
12:39 - if this works so let me try to run this
12:41 - whoops
12:42 - hit refresh Oh uncut type error hmm
12:46 - sketch that jazz line 19 Oh vectors
12:50 - that's an easy one it's just spot vector
12:54 - okay I see the circle hmm so circular
12:58 - path it has a bunch of vectors in it
13:00 - that looks like it makes sense let's
13:02 - look at the triangle path it has a bunch
13:04 - of vectors in it they all look like
13:08 - they're the same point oh I forgot to
13:11 - say the amount well I spent all that
13:14 - time calculating the amount I just say
13:15 - between the start and the end by a
13:17 - certain amount who myself a little more
13:20 - room here now let's try this one more
13:22 - time
13:23 - there we go yeah okay so it looks like I
13:26 - have the side of the triangle oh this is
13:29 - a lot of work by the way the nice thing
13:31 - about this if you just do the path stuff
13:33 - once you've gotta have it done for all
13:35 - the different ways you want to do your
13:36 - morphing but that said here we go so now
13:40 - there's gotta be a clever way I can go
13:42 - all the way to 360 right and I could
13:46 - probably use modulus to change the start
13:49 - and the end right yeah and so by the way
13:55 - there are all these great suggestions in
13:56 - the chat about how to do the morphing in
13:58 - a smarter way
13:59 - and I'll get to that but I wouldn't do
14:02 - it this way just this is this is gonna
14:04 - unlock or like a lock all the potential
14:06 - weight oh I guess I could just like
14:09 - copy-paste this but I can't bring myself
14:10 - to do this so what I want to do is this
14:14 - I want this to go all the way to 360
14:23 - right I want this to go all the way to
14:26 - 360 and then I want the if angle mod 120
14:37 - equals zero again this is only going to
14:39 - work from multiple some number that's
14:42 - going to like get to 120 but that's
14:47 - gonna be a multiple of one that's gonna
14:49 - divide into 120 with a remainder of zero
14:52 - if the angle mod 120 equals zero then I
14:55 - should be able to say start a equals
15:00 - start a plus 120 and end a equals end a
15:09 - plus 120 right I know I could do plus
15:11 - equals right I should be able to just
15:12 - move those and then I also need to redo
15:17 - these right so by the way I should
15:19 - really make a function let me just make
15:22 - a function polar Karthik polar to
15:27 - Cartesian
15:29 - and it just takes there are and an angle
15:33 - and it returns a create vector this is
15:38 - going to make our life so much less
15:39 - awkward R times cosine of the angle R
15:42 - times sine of the angle and I'm sure I
15:47 - could write that I should write that
15:49 - with the arrow notation but I'm not
15:50 - going to all right so I just want to
15:52 - make this function because that way now
15:54 - I can just say pole
16:00 - I could just say polar - polar what did
16:03 - I call it puller to Cartesian radius
16:07 - start a and end this is at least and
16:16 - radius end a and then here also I could
16:20 - say polar to Cartesian radius a right so
16:33 - this sort of makes things a lot less
16:35 - weird so hold on let me let me just put
16:40 - this back to 120 just to see if this
16:42 - still works yeah what I do
16:46 - polar to Cartesian ah saying is not
16:48 - define I did some crazy typing oh I
16:51 - pasted something in there I didn't mean
16:53 - to there we go that's still working now
16:56 - what I could do is I can make this 360
16:59 - and I can just do this again
17:03 - and reset these variables what will this
17:08 - do yeah yikes I got close so first of
17:13 - all that's the wrong place what is going
17:16 - on all right this is not correct I have
17:19 - to debug this
17:20 - I actually just debugged it and now I'm
17:23 - in the future kind of go through what I
17:25 - do bugs it but it took me like Alma
17:26 - probably like 45 minutes you know one
17:28 - wants to watch a 45-minute video let's
17:30 - figure out what's wrong so first of all
17:32 - I'm gonna make the spacing I'm gonna
17:35 - make this facing 30 so that it's less
17:38 - there's less points to work with I also
17:42 - just want to I think I'm just gonna not
17:44 - bother drawing the circle so no circle
17:49 - so I could just say the triangle is
17:50 - messed up and okay so what are some of
17:55 - the things that are wrong here ah okay
17:56 - this is definitely wrong
18:01 - this doesn't make sense a / n de- start
18:04 - a so let me figure out why that's wrong
18:06 - so if I'm going from zero to 120 that's
18:12 - gonna work because 60 is 50% of the way
18:16 - through now I'm going from 120 to 240
18:20 - 180 / 240 minus 120 what though I'm
18:25 - wrong so I need to take 180 minus 120
18:29 - actually but another way of thinking
18:31 - that is use the modulus operator so
18:33 - because really what I want to do is go 0
18:34 - 1 2001 2001 20 that's what I want to do
18:38 - go unleavened made a whole video
18:39 - tutorial also about the modulus operator
18:41 - that I will link to that you can watch
18:42 - all right so this let's take a look at
18:49 - this yeah that is not a tropical no no
18:58 - alright so one thing we could do here
19:00 - that'll help a little bit is I could let
19:05 - me just do this again and let me draw a
19:08 - little circles just to sort of see where
19:12 - those points are then we say fill 0 yeah
19:16 - look how interesting these points are
19:19 - kind of in the correct place but the
19:22 - path is going crazy all right
19:24 - hold on hold on a second let's look here
19:28 - and let me conside like because if I
19:32 - just go change this to 120
19:34 - oh that's not even right Oh hold on a
19:37 - second let's comment this out cool
19:43 - that's right there's something wrong
19:45 - with this modulus thing okay let's think
19:47 - about this let's think about this let's
19:51 - say what are the angles they're 0 30 60
19:56 - 90 120 150 etc what is zero modulus 120
20:02 - zero
20:03 - so I don't want to all of a sudden add
20:05 - 120 to start end right there at the
20:07 - beginning well that's a problem
20:09 - so actually what I want to do is they
20:11 - anticipate it I don't want to do it here
20:13 - I don't want to do it here I don't want
20:14 - to do it here I don't want it here ah
20:15 - before I get to the next one I want to I
20:18 - want to reap because I want to go from
20:21 - here to here that's the first part then
20:24 - I want to move start and to do the next
20:26 - part
20:26 - so actually what I want to do it's much
20:29 - simpler than all the other things I've
20:30 - been trying what I want to say A+
20:35 - spacing modulus 120 that looks right
20:42 - yeah that's right and so now I can do
20:47 - this what thank you thank you very much
20:53 - good night that's the end of this video
20:54 - goodbye thank you thanks for watching
20:56 - alright I can't believe I don't what am
20:58 - i yet like how long have you been
21:00 - watching so far I haven't gotten to the
21:01 - morphing yet but this is good we can
21:03 - come back over there we're getting there
21:05 - I'm sure : Levin did not have this much
21:07 - trouble I can now put the circle back in
21:11 - and I don't need to draw these little
21:13 - ellipses although they're useful to see
21:14 - and we now have the circle and the
21:17 - triangle now it's a little bit a little
21:20 - bit off I could probably think about the
21:24 - angles more thoughtfully but I'm just
21:26 - gonna I'm not I'm not really feeling it
21:28 - right now I'm just gonna rotate
21:29 - everything I think by what is it 30
21:32 - degrees here we go
21:34 - so and now you notice that those things
21:36 - haven't closed that's no problem I could
21:39 - just add this closed parameter to end
21:43 - shape and now I have the triangle and
21:45 - the circle and I can go back to spacing
21:51 - of 10 and there we go we now have the
21:54 - circle and the right oh thank you thank
21:58 - you thank you alright so now I need to
22:03 - do the morphing well guess what remember
22:05 - all that time I spent figuring out how
22:08 - to do
22:09 - well I can use lerp here what do I want
22:13 - to do I'm gonna have one more array
22:14 - which is the mo I'm gonna call this more
22:18 - path for morph and what I'm going to do
22:22 - is I'm going to just decide I'm just
22:25 - going to decide that in the beginning
22:28 - I'm going to just make it a circle so
22:30 - more paths push more path push that
22:36 - circle point so I'm just going to make
22:38 - them more that I'm just going to start
22:39 - as a circle so actually what I'm going
22:41 - to do now is I don't want to draw either
22:44 - of these I just want to draw the morph
22:48 - path I just want to draw the morph path
22:55 - and I'm gonna do that like this morph
22:58 - path and now okay there's the circle now
23:03 - what are we going to do I am going to
23:06 - say and I'm going to use the lerp
23:09 - function but I'm gonna do the lurk for
23:10 - each x and y instead of the p5 dot
23:13 - vector lerp I almost wish I had done
23:14 - that before but for example what if I
23:17 - say V equals V X equals lerp oh I need
23:27 - the okay so hold on let see circle V
23:31 - let's just I'm gonna use some sort of
23:33 - bad variable names but see V is for
23:35 - circle path index I T V is for triangle
23:44 - path index I I guess I could make a new
23:48 - vector each time but I'm gonna say V dot
23:51 - X equals lerp C V dot X T V dot X and
24:00 - let me put 0 in there I'm gonna make a
24:02 - variable amount and let's have amount B
24:06 - happening up here let amount equal 0
24:09 - okay so I'm gonna lurk the X by an
24:13 - amount and the Y by an amount and you
24:16 - know what this is so silly I don't
24:19 - actually need a whole separate array
24:20 - that's all this
24:22 - extra nonsense it could be useful but
24:24 - I'm gonna do this in a really simple way
24:25 - I just want to get an x and a y so I'm
24:28 - gonna say let X equal this let X equal
24:31 - that so I want to get a new x and a y
24:33 - which is some amount in between those
24:35 - two X comma Y so with the amount at 0
24:40 - what do I have all right a circle path
24:46 - where am I using more path still sketch
24:50 - line 20 get rid of the more path I don't
24:53 - need that anymore
24:54 - so ready my amount is 0 semicolon people
25:01 - are yelling at me semicolon semicolon oh
25:04 - and this should be a Y these should be
25:06 - wise circle with the mount at 0 it's
25:13 - circle with the amount at 1 it's a
25:16 - triangle with the amount at 0.5 it's
25:21 - kind of halfway in between okay now
25:23 - we're kind of done we're kind of done I
25:25 - could just I could do whatever now um
25:27 - what I'm gonna do though is I'm gonna
25:29 - let smoothly oscillate between 0 and 1
25:32 - so I'm gonna make a global variable just
25:35 - call it I'm gonna call it theta because
25:37 - I not using theta anywhere else and I'm
25:40 - gonna use the sine function I'm gonna
25:41 - say amount where do I have that amount
25:44 - variable amount equals sine of theta the
25:51 - sine of theta and theta plus equal zero
25:55 - point 1 so the sine function is a gives
25:58 - us a value that oscillates between
26:00 - negative 1 and 1 negative 1 in 100 I
26:03 - want a number that oscillates between 1
26:05 - 0 and 1 so what can I do there I could
26:08 - use the map function but probably really
26:10 - easily I could just add 1 and divide by
26:13 - 2 negative 1 to 1 adding one becomes
26:18 - between 0 and 2 dividing that by 2
26:20 - becomes 0 and 1 so here we go oh what's
26:28 - happening here
26:29 - everything was going so well but oh do I
26:33 - have like no loop going or something I
26:35 - forgot I'm in angle low degrees and
26:37 - everything I was thinking in terms of
26:39 - radians so let's go up by five there we
26:43 - go woo let's make the stroke weight a
26:46 - little bit wider thicker this is the
27:08 - most basic way the thing is this is all
27:10 - of the work I think because now I could
27:13 - do all sorts of other ways of moving the
27:16 - points around I could cafe them I could
27:18 - start deleting things out of the array
27:19 - added things to the array there's so
27:21 - many possibilities I hope this is a
27:23 - video that makes some sort of sense that
27:25 - you find useful in some way I I am going
27:28 - to do one more you're gonna see one
27:30 - after this that will be released at some
27:32 - point where I'm gonna do this you know
27:33 - really another way it's one of Golan's
27:36 - versions which I'm not sure which one
27:38 - where I'm gonna start just I'm gonna
27:39 - take one array it's sort two leading
27:40 - points so I'm gonna try that next but
27:42 - but make your circle morphing we're
27:45 - gonna this will be on github you can add
27:46 - to the readme too to link to your own
27:49 - version of this you can tweet with the
27:51 - hashtag circle morphing lets you could
27:54 - try more from a circle to a square or
27:56 - other shapes so many possibilities I
27:58 - can't believe how long this took me and
28:00 - how many problems I had and I hope you
28:02 - enjoyed watching this video thank you
28:07 - thank you thank you very much thank you
28:09 - thank you and good night
28:11 - [Music]
28:12 - [Applause]
28:18 - [Music]