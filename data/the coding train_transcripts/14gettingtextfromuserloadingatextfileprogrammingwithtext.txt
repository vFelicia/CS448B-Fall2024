00:00 - Hello welcome to another programming A2Z video tutorial. In this
00:04 - video tutorial I'm going to show you how to load a text from a file into your
00:09 - web page. And i'm going to use that for a lot of other examples and things that
00:12 - i'm going to do in later videos. So I'm
using the p5JS framework.
00:18 - Frst of all let me just show you
something that I have here I have a text
00:21 - file as part of my folder along with the
index.html and sketch.js file.
00:26 - I was thinking of sub directories and do
various things like that and this text
00:30 - file simply has a bunch of paragraphs of text from the wikipedia page on rainbow
00:36 - rainbow wikipedia page so the very first thing I can do that really makes it easy
00:42 - to load text is that i can write a
function called preLoad() and the preLoad()
00:48 - function is actually an event that
happens before setup() is called so one of
00:52 - the goofy things about javascript is
everything happens in this quote-unquote
00:55 - asynchronous manner meaning you start
loading files and you start doing
00:59 - something else and you start doing
something else and you try to do
01:01 - something that uses the file but maybe
it's not loaded yet and in a moment i'm
01:04 - gonna show you how to sequence this sort
of stuff and maybe later I'll even show
01:07 - you more sophisticated ways to sequence
the stuff but right now the easiest ways
01:11 - p5js says "Hey you don't want to
worry about all" that you can simply say
01:17 - loadStrings("rainbow.txt") into a global
variable called txt that I've made up as
01:27 - long as I put that in preLoad() by the
time I get to setup and I could do stuff
01:31 - to the DOM of the page.
01:33 - I know that that text will be loaded and
so what I'm going to do here is just add
01:38 - in here consol.log(txt) so we can
see what is it that's coming out of the
01:42 - file which might be something that you don't expect so I'm going to do this and
01:47 - you can see here it is now
01:49 - weirdly enough you can see like "why isthere this bracket there before there's
01:53 - a quote?" there seems to be some sort of...
then there's like this "year" there's a
01:58 - comma another quote. There seems to be
some sort of array here so let me do
02:02 - something to this file and we go to
rainbow.txt and I'm gonna say rainbow
02:06 - unicorn blueberry you know what''s good too
is mango
02:11 - who doesn't love mangos?
02:16 - Ok so I'm going to change the text file
to just have four lines in it and I'm
02:20 - going to refresh this page and now you can see more clearly what's happening so
02:24 - one of the things that loadStrings() does for you which is often very convenient
02:29 - but not always so convenient is that it
gives you a body of text as an array
02:33 - Each element being the array being each line of text in the file so you know if
02:38 - you have some sort of like... this could be
very convenient if you have a text file
02:42 - of words like you might have a text file
of words you're searching for and
02:46 - something has them all an array where
you load that text file that can be very
02:49 - convenient in our case here maybe what I
want to do and I'm gonna undo all this
02:55 - so I have my rainbow text back.
02:58 - Maybe what I want to do is just put all
this text onto the web page and so i
03:03 - might want to say in my code createP..
like make a paragraph with that text now
03:14 - let's see what happens
03:15 - and weirdly enough i love sometimes you
just gotta love javascript libraries
03:21 - like p5js it like figured out
something to do it took the array and it
03:26 - just like made a paragraph out of all the things in the array and I
03:29 - think it actually got everything but
another thing that I could do is I could
03:33 - use a function called join() which takes
all the elements of the array and joins
03:38 - them together and I could actually join
them with a  tag in between them so
03:44 - you can see now if i say join everything
in that array and put a br tag and I
03:49 - think I probably supposed to type it
like this as a self closing tag then
03:54 - what you'll see here if i refresh it is
now I actually and maintaining the line
03:58 - breaks from that file in terms of
rendering the stuff in that text file on
04:01 - the webpage so this is a very quick and easy way to pull in a text file and
04:07 - display that on the page so i'm going to
use this in later examples you can think
04:11 - of things you might want to do like : chop
up the text file count all the words in
04:14 - analyze it that sort of thing,
04:16 - load multiple text files you could call
loadString() multiple time but there's
04:20 - two more things I need to show you in
this video number one is you don't
04:23 - always just want to like load the file
04:24 - in preload. You might want to only load
the file with the user clicks a button
04:27 - or something like that and number two is
you might want the user to be able to
04:31 - submit an actual text file and i'm gonna
show you how to do that as well
04:35 - ok some of the chat actually by the way
asked how does one do csv files so you
04:41 - could actually load a CSV which is a
comma separated values file which is
04:45 - like a spreadsheet so to speak and then
parse it you split and chop it up with
04:50 - commas I might show you how to do that
in another video but there is actually a
04:54 - p5js function called load table which
knows how to load the csv file and
04:58 - something called the table for object
that you can traverse and iterate over
05:02 - as if it's a spreadsheet like
functionality but that's for another
05:04 - time.
05:06 - Ok so now let me get rid of preLoad() and what I'm going to do is I'm gonna go to
05:13 - my HTML file and I'm going to add a
button and i'm going to call this button
05:20 - give it an ID called loadfile and "load a
rainbow text" and now we can see if i go
05:29 - to the webpage we should see i have a
button called load rainbow text and if i
05:35 - go to the sketch what I want to do now
is first I want to access that button
05:42 - via its ID so I select it from the page
now I have a variable that knows about
05:48 - that button and then I could say button
. mousePressed() and I can reference a
05:55 - function I can say load I can write a
function called loadfile() so now i can
06:00 - write that function here so now I've
written a function called load file and
06:06 - what I want to do in that function is
call loadStrings() on that file name
06:11 - here's the issue though now that i'm not
using preLoad() I can no longer just set
06:17 - the result of loadStrings() to a variable
what I need to have now is a call back
06:21 - So i'm going to say load this text file
and then I'm going to make a function
06:26 - called fileloaded() fileloaded! And that
function Ooops i'm going to look so i'm just
06:33 - going to write it up here is going to be
the function
06:38 - that is triggered when the text file is
ready so there's a whole sequence
06:42 - happening here i press the button on the
mouse load file happens i call load
06:47 - strings when the text is ready i call
file loaded and what comes in there: data.
06:53 - I give this function an argument i'm
going to call it data i could call it
06:56 - text you can call it anything.And what I
can do now is I can say text oops ooooh
07:01 - text = data so what I'm doing is
I'm saying when the file is loaded the
07:07 - argument to this function is filled with
the stuff that's in that file I can set
07:11 - it equal to my global variable but I
actually don't really even need the
07:15 - global variable anymore.
07:16 - It sort of depends what I'm doing here
but what I'm going to do is instead
07:21 - whoops i'm going to get rid of this
global variable and what I'm gonna do is
07:24 - I'm going to take this and i'm just
going to put it in here and i'm going to
07:29 - say data so i'm going to create that
paragraph when the text is ready so I'm
07:33 - setting up now a sketch when i run the
sketch nothing happens but as soon as I
07:38 - say this I load that text and it appears
on the page. So this is how you can
07:42 - sequence the loading of data from a file and obviously again
07:46 - what could you do this more interesting than just display that exact text back
07:49 - to you or you  might  have different
buttons for different texts like choose
07:52 - your own source text for this web
application that you're making. That type
07:56 - of thing.
07:57 - Ok so we've seen almost everything now I
have one more piece of this
08:02 - What if instead of loading text from a
file i want the user to be able to, I
08:10 - want the user to be able to select a File
themselves so here's how I can do that.
08:18 - I can add to setup(), I can say createFileInput().
08:23 - I'm just gonna put that there with
nothing else just to see that this does
08:27 - something. And I'm gonna do this and you
can see look at this
08:31 - Just that createFileInput() has created this whole choose
08:36 - file no file chosen button thing on the
page so I'm getting a lot of
08:40 - functionality from the web browser for
free and of course i could style this
08:44 - differently i could change probably what
it says they're sort of choose file i
08:48 - could do a lot of custom stuff
08:50 - i'm using the basic raw default behavior
so when i press choose file it opens up
08:56 - a file menu for me and I could you know
go here and I could actually go and
09:00 - browse and behind you know my rainbow .
txt file and select it and you can see
09:07 - there it is now nothing happened
09:11 - so what I need to do is I need to set up
a callback for when the user selects a
09:16 - file and there's some complications here
because what if the user selects an
09:20 - image file?
09:21 - What if they select a text file what if
they select a you know, some other
09:28 - kind of files but I can't think of right
now so i might have to handle different
09:31 - kinds of files differently or do some
error checking in that type of thing but
09:35 - basically i know that i need a call back.
09:37 - So let's go and add a callback create
file input and i'm going to say i'm
09:43 - going to say fileSelected() so i'm going to write a function now called fileSelected()
09:50 - and I assume that file is going
to get some argument. That function is
09:53 - going to get some argument and I
don't know what's going to be there
09:57 - I could look up the documentation so i'm
just going to write console.log(file)
10:01 - Now i'm going to run this i'm going to
go back and select that rainbow file and
10:07 - you can see aaah look at this
10:09 - what did I get...I get a p5 file object so
there are lots of things here that i get
10:15 - i have what kind of file is it has a
type and subtype what's the name
10:21 - how big it is so that sort of thing
so number one thing that I can do here
10:26 - I can just say whoops... I could
say something like createP() you know
10:35 - file . name+ file . size plus file .
type so right now i'm going to create a..
10:45 - I could create a paragraph element with stuff stuff about that particular file
10:51 - so if I refresh the page, I select that
file you can see ah I got rainbow . txt
10:58 - We make this a little bigger so you can
see it it's got 12,000 some bytes in it
11:02 - that's way too big!
11:03 - It's a text file I could you know select
my HTML file it's still a text file i
11:09 - could look at the subtype I could try to
get I I feel like there must be an image
11:13 - file somewhere on this computer but I
don'... I'm not going to bother to look
11:16 - I'll let you experiment with that
yourself. So you can see I can have the
11:20 - browser I can have my code know about
the file that the user selected and even
11:25 - better i can get access to the contents
of that file and the way that I do that
11:31 - whoops but I just don't click here
11:36 - no stop there sorry uh I can explain the loss .... I want to show you what other stuff
11:45 - about the developer tools later when I
got lost in there.So what I want to do
11:48 - now is reproduce the contents of that
file and I'm going to say right here
11:54 - createP(file.data).I believe the actual contents of
12:02 - the file is in file.data so i'm going
to choose file I'm going to pick this
12:07 - And you can see there it is
12:09 - here's all the contents there now, it's not coming in as an array so I
12:14 - don't have the line breaks I could do it
replaced put  tags in it i'm not going
12:18 - to worry about all that right now.
12:19 - Ultimately I'm now have the user able to select a text file that I can process
12:24 - and return something back to the user.
12:27 - The other thing that I will mention here
is that I might want to protect and say
12:32 - "Hey!"
12:32 - only if file.type = txt then
create that paragraph otherwise say "I
12:46 - need a text file" so here with a little
bit if statement I can add some error
12:52 - check in here so if i run this again and
they choose file and I go somewhere on
12:58 - this computer under applications and I
....I don't know I try to get this
13:04 - chess application and I select that it
could say look here's this giant
13:09 - application, but I need a text file so
you can you can do some sort of error
13:13 - checking in that sort of thing.
13:16 - With with with in your code as well now
there's two more things about this
13:21 - Probably more than two .... there if you look in the documentation there is a way to
13:27 - allow ...and i'm going to look this up for you right now ... createFile Input p5 js.
13:33 - Hopefully this is going to bring me to
that page, it did not, so I'm going to
13:38 - find it myself i'm gonna go to a p5js.org I'm gonna go to libraries I'm
13:44 - gonna go to p5 DOM and I'm going to look
for createFileInput there is a second
13:51 - argument which if you add allows the
user to select multiple files you have
13:57 - to handle those a little bit differently
maybe I'll.. you'll see this in some of my
14:00 - examples or maybe i'll come back to this
in a future video so if you want the
14:04 - user to be able to select multiple files take a
look at this. That's there for you and  the
14:08 - other thing that I'll show you is that
you can have a user.. you can instead of
14:14 - having the user have to select the file
you can actually also have a user able
14:21 - to just take a text file and drag it
into the browser drop it in the browser
14:26 - have your program process that file and jeez why is my phone ringing
14:32 - incessantly turn that pop-up turning on
airplane mode.
14:37 - OKso if you want to learn how to do
that I'm going to publish examples that
14:45 - go along with the agency course that
have that in it but I've already made a
14:48 - video tutorial about drag and drop a
file into the browser so I'm just going
14:53 - to google drag-and-drop shiffman
14:55 - youtube and i'm sure this video is going
to come up right now so I'm going to
14:59 - reference you you'll find the link to
this video in this video's description
15:02 - probably some kind of pop-up thing
happening right now if you want to take
15:05 - a look at that you can go ahead and
watch the drag and drop a file video
15:08 - tutorial to see how that works
15:10 - alright thanks very much for watching
this concludes the sequence of videos
15:14 - about how to get texts from the user!