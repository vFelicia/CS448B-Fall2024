00:00 - OK.
00:00 - Back with another video
about Perlin noise.
00:03 - So far, I've got the
basics of Perlin noise,
00:05 - and with this particular
sketch is doing
00:07 - is just tying the
exposition of a circle
00:10 - to Perlin noise
values over time.
00:13 - What I want to do in this
video is show you two things.
00:16 - One, is I want to
add the y-axis just
00:18 - to sort of see what
happens if I do that.
00:20 - And then also show you how to
actually graph those values
00:22 - over time as opposed to just
seeing sort of a single value
00:25 - over time, which may
be useful, I think.
00:27 - So let's do that briefly.
00:30 - OK, so what I'm going to
do is I'm going to add--
00:33 - now, what's really
confusing here-- ah,
00:36 - is that I kind of was about
to type yoff equals 0.
00:41 - And that's not
really a good idea,
00:44 - because in the next
video, I'm actually
00:46 - to look at two-dimensional
Perlin noise.
00:48 - What does it mean
for Perlin noise
00:49 - to exist in
two-dimensional space?
00:51 - And in that sense,
I'm really going
00:53 - to have an x offset
and a y offset.
00:55 - I don't really have a y offset.
00:57 - Really, what I have
is I have a y value
00:59 - where I want the ellipse to be.
01:01 - So I could do this, right?
01:04 - And then put y here.
01:07 - I'm just going to add a y value,
which is also mapped to noise,
01:09 - and I could have that be
mapped between 0 and height.
01:13 - And then draw the
ellipse at x and y.
01:14 - So let's see what happens there.
01:17 - But you can see it's just
moving out along the diagonal.
01:19 - Why is that?
01:21 - Because the x and y
values are always equal,
01:24 - because I am asking for--
01:28 - I think we're going to need
a visual reference here.
01:30 - So I'm going to really
attempt to get a nice--
01:36 - this is the graph
of Perlin noise.
01:38 - If I'm saying, hey, draw
a circle at an xy-position
01:43 - and have the x value be
tied to this part of noise
01:47 - and have the y value be
tied to this part of noise,
01:52 - x and y are going to be
equal, meaning in the canvas
01:54 - if x or y are equal, it's
somewhere along this diagonal.
01:58 - So what I want to do is
I want to have x and y
02:00 - both be Perlin noise
values but not be equal.
02:03 - So I could have an
entirely other Perlin noise
02:05 - space, one-dimensional space,
and get the y values from that.
02:09 - Another thing I could do
is I could just say, hey,
02:12 - let me just get the y
values from some other part,
02:15 - like I'll get the
x values from here,
02:17 - and I'll get the y
values from over there.
02:18 - So in that sense, what I
need are two x offsets.
02:23 - Like, I want an x offset
1 that starts at 0
02:26 - and an x offset 2 that
starts somewhere else, like,
02:29 - really far away.
02:30 - How about 10,000?
02:32 - And so I want the x value
from one offset, the y
02:35 - value from another
offset, and both of these,
02:39 - they move through
Perlin noise space.
02:41 - Eventually xoff1 is going to
get all the way to 10,000.
02:45 - And you're going to
see repeating values.
02:47 - But it's going to take so
much time and xoffset2 will
02:49 - be somewhere else, and
you'll never notice that.
02:51 - So let's look at this.
02:53 - And now you can see I
have this kind of Perlin--
02:55 - it's almost like
wandering sporadic bee
02:57 - buzzing-like behavior.
02:59 - It's kind of nice, actually.
03:00 - I've got to move the
mouse out of the way.
03:02 - So this is actually, I think--
03:04 - I kind of--
03:05 - I think this is a
good moment to--
03:08 - I don't have this prepared.
03:11 - [MUSIC PLAYING]
03:14 - Right?
03:16 - This is a visual representation
of Perlin noise and music.
03:21 - OK.
03:23 - Ah.
03:25 - [INAUDIBLE]
03:26 - OK.
03:27 - Anyway.
03:30 - So this is the idea.
03:31 - I forgot what I was
doing, because I
03:32 - was so excited that I had a
moment to do something weird.
03:36 - Anyway, so you get the idea.
03:38 - Now, let's think about-- it's
kind of interesting-- oh,
03:40 - there's so much that I want
to keep going with this.
03:42 - Like, what if I put the y
values a little bit behind,
03:45 - you know-- but anyway, this
just gives you the basic idea.
03:48 - Now, let's do one more thing
in this particular video.
03:51 - And yes, so in the Chat,
a question was asked,
03:56 - and the question might
be around could you
03:57 - give two-dimensional
arguments to noise?
03:59 - And I could do that.
04:01 - And I'm going to do
that in a moment.
04:03 - And in fact, that's
how I'm really
04:04 - going to deal the
two-dimensional space.
04:06 - But I'm showing
you a kind of a way
04:08 - of getting multiple
kind of single values
04:12 - for two different parameters
using two different parts
04:14 - of the noise space.
04:15 - I know that's confusing,
but it will all become clear
04:18 - or if it doesn't become
clear, then all I
04:20 - have to say to you is--
04:21 - [MUSIC PLAYING]
04:24 - --this, because I don't--
04:25 - it's like-- oh.
04:29 - I have a cold so
nothing is going well.
04:32 - All right.
04:34 - OK.
04:35 - Oh, it's very hot in here.
04:37 - OK.
04:38 - So anyway, OK.
04:39 - I'm just going to
graph the values now,
04:41 - because I don't know what
I should be edited out
04:43 - of this, this particular--
04:45 - all right.
04:46 - Let's graph the
values, because I think
04:48 - that's going to be useful.
04:50 - OK.
04:51 - So what I'm going to do
is I'm going to comment
04:54 - some of this stuff out.
04:58 - And I am going to write
now a little for loop.
05:02 - So what I want to do is
I'm going to say var x--
05:07 - and I'm going write var x
equals 0, x is less than width,
05:11 - x plus plus.
05:12 - And I want to draw a--
05:16 - I'm just going to draw
a point at x comma 200.
05:21 - And I'm going say stroke 255.
05:25 - So now I'm going to
go back to the sketch,
05:27 - and we see there's this line
going across the middle.
05:30 - Why is there a line
going across the middle?
05:32 - Because I have a loop
for every single x value,
05:34 - draw a point there.
05:35 - All of the points are
next to each other.
05:36 - It looks like a line.
05:38 - So now what I want is I
want this y value to not
05:41 - be Perlin noise.
05:44 - I mean, I want it
to be Perlin noise.
05:47 - The heat, the 90-degree
New York City heat.
05:51 - So first, I'm going
to say random height.
05:55 - Now, look at this.
05:56 - Now I just got a whole lot of
random crazy points everywhere.
05:58 - So first of all, I want to stop
this animating for a second.
06:02 - So there's one way I can
stop it from animating,
06:04 - which I could say no loop.
06:07 - So now I have a bunch of
totally random points.
06:10 - And what I actually want to do
here is I want to connect them.
06:13 - So I'm going to say beginShape,
noStroke, or no noStroke, 255
06:24 - and noFill.
06:25 - And then I'm going
to say endShape.
06:29 - And I'm going to draw,
I'm going to say vertex.
06:34 - I forgot what I was doing.
06:36 - So instead of drawing
them in single points,
06:38 - if I say beginShape, endShape
with a bunch of vertices,
06:41 - it's going to connect them all.
06:43 - So now I'm going
to refresh this,
06:44 - and you could see this is
what I was trying to draw
06:47 - for you on the board before.
06:48 - This is now essentially
a graph of random values,
06:52 - a random value for each
point x along the x-axis.
06:55 - And by the way, if I
allow it to animate again,
06:59 - this is what you get, a lot
of totally random values.
07:02 - New random values every frame.
07:04 - But I don't want to put that in.
07:05 - Now, what I want to
do now is change those
07:07 - to Perlin noise value.
07:08 - So really what's
going on here is
07:10 - the y value is a random value.
07:15 - So instead of y being random,
what I want now is to say y
07:20 - equals the result of
the noise function.
07:23 - So first, let me just plug in
one point of time like noise0.
07:30 - And we could see, OK, first of
all, where are all the values?
07:33 - Well, remember, I get a
value between 0 and 1.
07:36 - So one thing I certainly need
to do again is map that value.
07:39 - And you know what?
07:40 - I'm tired of mapping.
07:41 - It's going to be simple just to
like multiply this by height.
07:46 - So you can see every
time I refresh it,
07:49 - I get one value across.
07:51 - That's because, as I
move from pixel to pixel,
07:53 - I'm not moving through.
07:56 - I'm not moving through
this noise space.
07:59 - I'm just staying at
one point in time.
08:02 - So now what I want
to do is I want
08:04 - to add an x offset
variable, start that at 0,
08:09 - get the noise value at x offset
and go up by some amount,
08:15 - like 0.02.
08:17 - And now when I refresh
that, you can see
08:18 - there's my Perlin noise graph.
08:21 - This is what Perlin noise
looks like when I graph it.
08:25 - Smooth randomness, as
compared to random.
08:31 - So you can really see
the difference now.
08:33 - I want to do a few
more things with this.
08:35 - There's a couple
things I want to do.
08:40 - One thing is, I just
want to show you
08:41 - what happens when I change
this particular parameter.
08:44 - So let me make this
0.01 instead of 0.02.
08:46 - And actually, let's
do something-- oh,
08:48 - the other thing, let's loop it.
08:52 - So you can see I'm adding the
loop back, and it's animating.
08:54 - But remember, the Perlin
noise values are fixed.
08:58 - So I'm always getting--
08:59 - if x offset always
starts at 0, I'm
09:01 - going to get the same values.
09:02 - So let me do something where
I make an increment variable,
09:07 - and I say that's 0.01.
09:10 - So I'm going to increase
by that increment variable.
09:14 - And now I can do things like
say what if increment is 1,
09:17 - you can see what
that looks like.
09:18 - What if the increment is 0.001?
09:21 - You can see how smooth that is.
09:22 - And I could easily
tie this to a slider.
09:24 - That would be a
nice thing to do.
09:29 - And you can see how
the graph changes
09:32 - based on that increment value.
09:34 - Now, there's another
thing I could
09:36 - do to this, which I think
would be kind of interesting.
09:38 - What if I want to kind of scan
across the Perlin noise space?
09:42 - What if I don't always want
x offset to start at 0?
09:47 - So in this case, I could
say start equals 0,
09:53 - x offset equals start, and
then I could say the start also
09:59 - changes by that increment.
10:02 - Now look at this.
10:03 - Now I'm sort of seeing--
and this is basically
10:05 - exactly what I did.
10:06 - I have a terrain
generator example,
10:09 - which does this in two
dimensions, which I recorded
10:11 - before I made this video.
10:12 - So things are a little
strange and out of order.
10:14 - But you can go to find that if
you look for YouTube Terrain
10:17 - Generator Shiffman.
10:19 - You could see sort
of-- but this is
10:21 - exactly what's happening now.
10:22 - This is a one-dimensional
terrain generator.
10:24 - I'm moving across this space,
moving across the Perlin noise
10:28 - space over time.
10:31 - Boy, there's so many things
I want to add to this.
10:33 - Let me think about it.
10:34 - OK.
10:34 - One thing I think I
should mention here,
10:36 - by the way, this
kind of looks like--
10:41 - it's like a waveform,
right, like a sine wave?
10:43 - I could easily just, by the
way, change the noise function
10:47 - to sine.
10:50 - And notice what I get.
10:51 - I get a sine wave.
10:51 - Now one thing the sine
wave-- unfortunately,
10:53 - the sine function gives me a
value between negative 1 and 1.
10:57 - So what I really need to
do is change the mapping,
11:01 - like add height divided
by 2 and multiply
11:05 - by height divided by 2.
11:06 - And now you could
see the sine wave.
11:08 - But interestingly enough, these
algorithms work the same way.
11:12 - They're just functions
that when you
11:14 - pass in a value that
changes over time,
11:16 - give you a new value, whether
it oscillates perfectly
11:19 - or it moves kind of randomly.
11:20 - So there's a lot of
possibilities here.
11:22 - And in fact, you
could add noise.
11:24 - I could also, like, I could say
like noise xoff times 10 plus--
11:37 - oh.
11:37 - No, no, no, no--
11:38 - y equals-- how come
that didn't work?
11:41 - I want to add-- oh, no, no,
no, yeah, yeah-- y is-- maybe
11:44 - 10 isn't enough-- times 100.
11:46 - Yeah.
11:47 - You can see now there's the
sine wave with a lot of sort
11:49 - of like randomness, a little
bit of randomness thrown in,
11:52 - because what I actually did--
and it's not offset very well.
11:55 - Let's actually
make this correct.
11:57 - I'm going to show you,
while I'm here, right?
11:59 - Let's say I have a noise value,
which is noise of x offset.
12:07 - Map the noise value
between 0 and 1
12:09 - to between like
negative 50 and 50.
12:13 - And then let me take a
sine value, which is map
12:17 - the sine wave of x
offset, which goes
12:20 - between negative 1 and 1
to between 0 and height.
12:25 - And then what I
want to do is say
12:27 - that var y equals those
two values added together.
12:33 - And now you can see I have the
sine wave with a little bit
12:37 - of noise added.
12:39 - And this, by the way, if
you took like letter forms,
12:41 - and you wanted to make
them appear a little bit
12:43 - like handwriting, you could add
a little bit of Perlin noise
12:46 - just to the pads between
those letter forms.
12:48 - So you can see there's a lot of
interesting possibilities here.
12:50 - I could kind of do the opposite.
12:52 - Like, I could say, well, let
me make noise the primary thing
12:56 - and make the sine
wave just, like,
12:58 - a little something
that adjusts the noise.
13:02 - And you could see now--
13:03 - I don't know if--
this is harder to see,
13:04 - but there's a little
sine wave in there
13:06 - that's kind of
adjusting the noise
13:08 - in a sort of perfect
amount, I think, by the way
13:10 - that I changed that.
13:11 - So there's a lot that
you could play with here.
13:14 - So I'm kind of messing
around, because I'm
13:17 - nearing the end of the point
where what I ultimately
13:19 - want to do is look
at then this is all
13:21 - about noise in one dimension.
13:23 - I'm drawing this graph
in two-dimensional space,
13:25 - but my values live
in one dimension.
13:27 - Thanks for watching this video.
13:28 - I'm ready now in the
next video to move
13:30 - from one-dimensional
Perlin noise
13:31 - to two-dimensional Perlin
noise, and I'll see you maybe
13:34 - in that video.