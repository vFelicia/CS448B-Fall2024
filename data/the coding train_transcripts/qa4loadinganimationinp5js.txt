00:00 - welcome to another Q&A video today's
00:03 - question comes from our Noah pull up our
00:06 - nose question in a moment but this
00:07 - relates back to a video tutorial I
00:09 - recently made about how to program your
00:11 - own loading animation in p5.js so here's
00:14 - my loading animation that I made in that
00:16 - example spinning spinning loading bar
00:18 - loading bar loading bar loading bar and
00:20 - so there we go everything's loaded and
00:24 - you can see that this this particular
00:25 - sketch was loading 10 sound files in the
00:28 - background so Arno submits a particular
00:32 - piece of code and this is our nose
00:33 - loading animation which I love it's a
00:35 - nice oh it happened so fast not enough
00:37 - to load but you can see these nice
00:38 - oscillating rainbow colors and this
00:40 - thing pops up I have our nose code right
00:44 - here this is my code my loading
00:46 - animation which if you recall from that
00:48 - particular example there is a function
00:50 - which receives a file named truckloads
00:54 - that file and has a callback and then
00:56 - counts if all of the songs are loaded
00:58 - and once all of the songs are loaded
01:00 - boolean variable is set to false and
01:02 - then a realist end drawn in draw so
01:06 - let's look at how the code is happening
01:08 - in our nose sketch so you can see
01:10 - there's a very similar thing going on
01:12 - there's a load audio elements function
01:14 - ah this is nice to see a load image
01:16 - elements function so there's both a
01:19 - callback for audio files and a callback
01:22 - for images and then you can see all of
01:26 - the songs are loaded all of the images
01:28 - are loaded and then there's some other
01:31 - stuff and then you can see what's being
01:33 - drawn based on whether loading is true
01:35 - or false ok so let's take a look at we
01:39 - see that this works let's take a look at
01:41 - the questions now so I'm going to go
01:42 - over here and find these questions ok
01:44 - how to use the file in the draw function
01:48 - I try to assign a var to target a
01:51 - specific image in the array but I didn't
01:54 - succeed okay so let's see I shouldn't
02:00 - look at the look and do distracted by
02:02 - your live chat ok so let's take a look
02:04 - at the code again and see what's
02:05 - happening so so so let's look at the
02:07 - images the image is being loaded are any
02:11 - I dot PNG so let's go
02:14 - oops I want to come here and find the
02:18 - code here let's look at this folder ah
02:20 - so this is my this actually comes from
02:22 - one of my other examples which I plan to
02:24 - do a video tutorial about where this
02:26 - like stick figure example so let's just
02:28 - say for example I wanted to display one
02:30 - of these images in the canvas like
02:33 - number 10 for example so in theory all
02:40 - of the images are in this images array
02:42 - so in draw and I'm gonna actually just
02:48 - comment this out this is the nice crazy
02:51 - thing that and and show you let's just
02:53 - try image images index 0 0 0 comma 0 so
02:59 - let's just see if one of those images
03:01 - will appear and we'll go back to this
03:06 - one loading loading loading loading
03:08 - loading up error cannot read properly
03:11 - ELT of undefined so what happened so
03:16 - let's take a look let's see if we can
03:17 - figure this out is that images array
03:19 - it's empty why is the images array empty
03:22 - so something is wrong with this code and
03:25 - guess what we're gonna do some live
03:27 - debugging on the air ok so let's take a
03:30 - look there is an array called images
03:33 - it's empty here Wow look at this so this
03:39 - should be what's missing here is in this
03:42 - image loaded callback right
03:44 - the callback is automatically passed a
03:46 - reference to the p5 dot image object
03:49 - that was loaded
03:50 - so this images dot push is the correct
03:53 - call to add something to an array but we
03:57 - just forgot to add that image itself so
04:00 - now if I run this again we should see
04:03 - once everything is loaded you can see
04:05 - there it is the image the image itself
04:08 - now interestingly enough the loading
04:10 - animation is still there let's see if we
04:12 - can look at the code and figure out why
04:15 - the loading animation is not there it's
04:18 - still there so where's that loading
04:19 - animation drawing
04:23 - I wonder I wonder if our dough is
04:27 - watching let's I don't see where that's
04:30 - drawn is it like us I wonder if it's
04:32 - like a fancy CSS thing or something so
04:35 - let's try I have a feeling that let's do
04:38 - this background 51 let's run it again
04:45 - yes okay so that loading animation is
04:47 - actually some maybe it's like a gif or
04:49 - something else that's on the page
04:50 - otherwise it's not actually part of the
04:52 - canvas so you can see once they've
04:53 - loaded and I covered it up by the way
04:55 - let's just wash it let's let's since
04:57 - we're here let's make a little animation
04:58 - do its little animation thing and so I'm
05:02 - going to create a variable called index
05:06 - and I'm going to set that equal to zero
05:07 - and I'm going to say images index and
05:11 - then I'm going to say index equals index
05:13 - plus one and I'm also going to add a
05:15 - little trick here I'm gonna lad the add
05:17 - the modulus operator to say modulus the
05:23 - length of the array modulus is the
05:25 - remainder of division so let's say that
05:27 - array was of length five we would get 0
05:30 - 1 2 3 4 then 5 modulus 5 would be 0 and
05:34 - 6 modulus 5 would be 1 right because 6
05:37 - divided by 5 is 1 remainder 1 so that
05:39 - modulus makes it 0 1 2 3 4 0 1 2 3 4
05:42 - it's up for the array is much longer and
05:44 - we can run this now and everything is
05:48 - loaded and we can see there's the little
05:50 - animation of the person walking next you
05:56 - can screen cap this and make this your
05:58 - animation in your program okay I can't
06:00 - believe I'm doing this ok so alright so
06:02 - we fixed our nose first question which
06:05 - is that the images were just not added
06:08 - into the array ok Oh Arno YZ Washington
06:11 - says it says I use CSS to make the
06:13 - loading animation great so that loading
06:15 - animation is there uh-huh
06:16 - hello Arno this is perfect I'm so glad
06:18 - that you're watching because I'm
06:19 - answering your questions live this is
06:21 - what I always wanted to do okay
06:24 - I mean I guess that's what I really what
06:27 - I wanted to do was I don't know what I
06:30 - never mind let's get let's Mike let's
06:32 - let's not get into my childhood dreams
06:33 - that have all come and gone but
06:36 - perfectly happy doing this
06:37 - okay if you need to load several images
06:40 - sounds that have different names how do
06:42 - you preload them okay so I think what
06:45 - this is asking and Arno is in the chat
06:46 - so you can let me know but I believe
06:50 - what Arno is asking is so let's look at
06:53 - this so what if what if you don't happen
06:56 - to have all of your images numbered like
06:58 - this you know you have an image cat dog
07:01 - turtle Nana T Hedgehog whatever dot PNG
07:04 - jpg so all the images have different
07:06 - names so I don't have a great answer for
07:10 - this on the one hand and an R know in
07:13 - the chat let me know if I'm answering
07:15 - this incorrectly but you can see how
07:18 - nicely it works to load all the images
07:20 - in a loop but you can certainly do this
07:26 - you know on the one hand the answer to
07:29 - this is you know Mouse PMG just calling
07:36 - this a few times you know a hedgehog and
07:41 - yellowtail you know I'm thinking about
07:47 - starting to give an interesting bird cat
07:48 - bird whatever so so this on one hand you
07:52 - could just sort of line by line load
07:54 - your images the on the other hand
07:58 - another possible thing you could do is
08:01 - just create an array of all the image
08:07 - file names and this could be in your
08:10 - code like this and then that is
08:16 - something you could loop through and
08:17 - load them and this in fact could come
08:20 - from a data file so you could have a
08:21 - JSON file that has all your image names
08:23 - in it and you just load that JSON file
08:25 - and then load the images based on what's
08:26 - in that JSON file and certainly you can
08:29 - read a directory of files if you search
08:32 - they load everything that's in this
08:34 - directory now that unfortunately however
08:36 - will require server-side programming
08:38 - because you can't do that from
08:39 - javascript in the browser now if you're
08:41 - in processing which we're not you know
08:42 - processing has is kind of a desktop
08:45 - application development you could just
08:46 - you know open a file open a directory
08:48 - and list all the files you could you
08:50 - something like no chance I'd certainly
08:51 - be opened at some point making a
08:53 - tutorial to show you how to do that okay
08:57 - so that I think our know hopefully that
09:00 - okay hopefully that answered that
09:01 - question okay so we're done with
09:03 - question number two and now we are
09:06 - aha as you will see in my sketch I have
09:10 - two different functions to load the
09:12 - images and the sounds because I didn't
09:14 - succeed in mixing them together in the
09:15 - same one is there any way to load every
09:17 - sort of file audio image file etc in the
09:19 - same function this is great question so
09:21 - first of all you know from my point of
09:24 - view you know I'm writing a program and
09:26 - I got a load a lot of images and they
09:27 - got a little lot of sounds big deal I
09:29 - have two separate functions it actually
09:31 - keeps my head clear things feel alright
09:33 - in the world it looks nice it's sort of
09:35 - tidy and organized fine you know because
09:37 - I don't have fifty thousand different
09:39 - kinds of files it's no big deal to have
09:41 - two separate things I'm using images and
09:43 - sounds in a kind of different way that
09:45 - said it's an interesting exercise to
09:47 - sort of think about what might be
09:48 - possible so I don't honestly don't know
09:51 - off the top my head kind of where I'm
09:53 - going with this but let's take a look at
09:54 - the code and see let's at least point
09:57 - out what's going on here so what Arnaud
09:59 - is asking about and let's see if I can
10:01 - remove some whitespace make things a
10:03 - little bit smaller so we can kind of see
10:06 - so you can see here there is a lot of
10:10 - duplicate code there's load audio
10:12 - elements which is and you know I might
10:15 - say I might take a little quibble a tiny
10:17 - broom with the name of this function
10:20 - because technically this function is
10:22 - loading one thing so it's not a function
10:24 - that you're say passing an array to or a
10:26 - list of things so I might rename this
10:28 - load audio element I might rename this
10:30 - load image element but I think what what
10:33 - the question that we're asking here is
10:35 - could I just write a function called
10:36 - load element and have it somehow know
10:39 - what to do whether it's a sound or a
10:43 - sound or image file and certainly we
10:46 - could write so one thing we could do is
10:49 - just add another argument you know I
10:51 - could based on the file name detect I
10:54 - could do some string parsing and say oh
10:55 - if the file is name dot mp3 then do this
10:58 - thing if it's name dot PNG then do this
11:00 - other thing but let's just say I'm gonna
11:02 - add another argument
11:04 - to this function called type and then I
11:07 - could do something like if type equals
11:09 - sound then I would say load sound like
11:16 - this else if type equals image and again
11:23 - I could just read the file directory the
11:26 - file name itself image loaded so now we
11:33 - have an interesting question though I
11:34 - still have one this would be load image
11:35 - right so now the thing though is like do
11:41 - I really need a sound loaded and an
11:43 - image loaded function so what if I just
11:45 - how could I combine those file loaded
11:49 - file loaded and what happens in these
11:51 - fun you can see that these two functions
11:53 - image loaded and sound loaded look
11:56 - mostly the same so what if I took the
11:58 - interior of that code right up here and
12:03 - wrote a function called file loaded and
12:11 - and I'm just gonna write in in here I'm
12:14 - just going to call it media because that
12:16 - media might be an image or it might be a
12:18 - sound and then I'll do the same exact
12:21 - thing here if type equals sound then
12:29 - what do I want to do I want to check the
12:32 - sound counter you know again I could
12:35 - actually just have one counter you know
12:37 - I don't need a separate sound counter
12:38 - actually I could just have one counter
12:40 - if counter equals total songs plus total
12:46 - images then loading sound I'm gonna you
12:53 - know sound and both of these things are
12:56 - true and I could just have I could just
12:59 - have one loading right I'm just gonna
13:01 - change this back to one loading right so
13:04 - now and not so here this comes out of
13:07 - here so for everything that's loaded I
13:09 - move whoops I move up one and now I'm
13:13 - just checking if the type is sound
13:16 - then put the media in the sound array
13:19 - else if the type is image then and what
13:25 - is it I assume the array was called
13:26 - images images push the media so you can
13:31 - see this is a kind of a nice this is a
13:33 - nice combining of those two functions
13:35 - I've now a generic load element that
13:38 - just takes a file name and a type and so
13:40 - then in this case I don't need a
13:42 - separate load audio element I don't need
13:44 - a separate load image elements and here
13:49 - I can just say load element and I can
13:55 - just say here sound as another argument
13:57 - and here I can say load element and I
14:00 - can just say image as an argument and
14:03 - then here I only have I don't need this
14:09 - anymore right because this should say
14:12 - loading is false so if if they've it's
14:16 - loading at the beginning and if
14:17 - everything is loaded then loading is
14:19 - false and so now I just have a single
14:21 - thing to check and I should be able to
14:22 - see that image so let's see if I might
14:24 - have made some mistakes but let's see if
14:26 - I got it right look oh wait no I'm on
14:32 - sorry I'm on the site okay ah so what a
14:34 - counter is not defined okay so I added
14:37 - this idea of a single counter instead of
14:39 - two different counters but I forgotten I
14:42 - don't need these ival so I need to
14:47 - define that at the beginning so let's
14:50 - see and it worked so you can see I was
14:53 - able to successfully take two separate
14:55 - functions a function that loads sound
14:57 - and a function that loads images and
15:00 - combine that to a general load element
15:01 - function whether I've really made the
15:03 - code better or not you know up in the
15:05 - air but as an exercise you hopefully
15:07 - that was helpful to you to see how that
15:08 - works okay I believe I have now answered
15:12 - all of these questions and so hopefully
15:17 - our know this was useful to you
15:19 - hopefully it's useful to other people
15:20 - have watched this video and again if
15:23 - you're looking for the code for this
15:25 - particular example
15:26 - look in this video's description which
15:28 - will link to our nose github repository
15:31 - and then I will as well publish the
15:34 - Revised Code to the coding rainbow code
15:36 - or maybe our no wolves up used by
15:40 - revised code in that github people who
15:42 - knows the code wherever it is it'll be
15:44 - in the video's description
15:45 - because I'll figure it out later okay
15:47 - thanks for watching and I will see you
15:49 - in another QA video ask your questions
15:52 - someday please thanks bye