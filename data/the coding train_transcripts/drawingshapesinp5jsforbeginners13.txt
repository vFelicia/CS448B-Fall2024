00:00 - [BELL RINGING]
00:01 - Hello!
00:02 - OK, it's time, it is
time to start talking
00:06 - about, and writing some code.
00:09 - What's going on here?
00:11 - You can see already that
there's this function setup,
00:14 - function draw.
00:15 - What is that stuff?
00:16 - There's curly brackets,
there's parentheses,
00:18 - let's hold off on
that for a second.
00:20 - Let's not get too
worked up about that.
00:22 - Let's focus-- just
for a moment--
00:24 - on create Canvas,
parentheses, 400 comma 400,
00:29 - closed parentheses, semicolon.
00:32 - I'm going to write that
out in a generic way.
00:36 - I'm going to say something
like, instruction, another word
00:41 - for that might be command.
00:46 - And the truth of the matter
is, the actual, technical name
00:49 - for what I'm writing
here is a function name.
00:56 - Function name.
00:57 - Instruction,
parentheses, some number,
01:02 - comma some other number, i don't
know, comma some other number,
01:08 - comma dot, dot, dot.
01:09 - Well, let's not put that there,
closed parentheses, semicolon.
01:15 - This is the syntax for executing
an instruction for the computer
01:21 - to follow.
01:22 - The name of the
instruction, parentheses
01:25 - that open and close, followed
by a semicolon, and some number
01:30 - of things in between.
01:31 - That number of things could
be zero, it could be one,
01:34 - it could be two, it could
be three, it could be four,
01:37 - it depends.
01:38 - So, now, if we go back to
create canvas, we can see,
01:42 - look, the instruction
is create Canvas,
01:45 - parentheses, 400 comma 400.
01:48 - So, ask yourself-- pause
the video for a second--
01:50 - what does 400 mean,
and what does 400 mean?
01:53 - I mean, it means the number
400, but why is it number 400?
01:56 - What is it doing?
01:58 - OK, are you back, did
you think about it?
02:00 - Well, one way to try
to figure this out
02:01 - is for me just to say,
well, why don't we
02:03 - just change the number to 200?
02:05 - And nothing changed,
why didn't it change?
02:07 - Because it ran the
program already.
02:09 - I have to tell it to
rerun the program.
02:13 - It's half as wide,
but just as tall.
02:18 - By the way, there's
this interesting button
02:20 - over here, auto refresh.
02:23 - So, notice how I
changed the code
02:25 - and then I had to run it again.
02:27 - That was a little
bit inconvenient.
02:28 - I mean, it's not so
bad, I'm happy to do it
02:31 - as often as I need to.
02:33 - But things might be a
little more convenient
02:34 - if I select that.
02:36 - Because, now, what if
I change this to 300,
02:39 - change this to 400, why
don't I change this to 800.
02:42 - It's always going to
update the drawing--
02:46 - the result of the
instructions-- here, [INAUDIBLE]
02:48 - if I have that auto
refresh clicked.
02:50 - I'm going to go back
to 400, and 400.
02:53 - So what those numbers define,
is the width and height
02:58 - of this thing called the canvas.
03:00 - This is the drawing
canvas, it's the thing
03:02 - that we're going to write
instructions to draw stuff
03:05 - into, move things around,
interact with things all,
03:07 - eventually.
03:08 - And the syntax for making this
is create Canvas 400, 400.
03:13 - Interestingly, what
happens if I delete this?
03:17 - So, p5, by the way, will always
put a canvas there for you.
03:22 - If you forget to
say, create Canvas,
03:24 - it made a canvas there for you.
03:26 - But it just didn't know
how big to make it,
03:29 - so it picked some arbitrary
size, probably 100 by 100.
03:32 - But let's put that back,
there's 400 by 400.
03:34 - There's a really important
thing that I want to talk about,
03:36 - but let's come back over here.
03:39 - So, create Canvas, this
is the function name.
03:45 - Let's use the real terminology.
03:48 - You can think of
it like a command.
03:50 - Create Canvas,
that's your command.
03:53 - These are called the arguments.
04:01 - I think earlier-- I
didn't actually say this--
04:02 - but if you were
giving me instructions
04:04 - to do some exercises, and you
said, do some jumping jacks,
04:08 - I would say, how many?
04:09 - You need to modify--
04:12 - you need to provide parameters--
04:14 - for how I should
execute the instruction.
04:16 - The instruction is, create the
canvas with the size of 400
04:20 - by 300 pixels.
04:22 - Meaning, create
area on the screen
04:25 - that I can draw to that's 400
pixels wide, 300 pixels high.
04:31 - If the concept of pixels is new
to you, on a computer screen,
04:36 - every single color that you see
is-- if you zoom way into it--
04:40 - is a single dot.
04:40 - Now, there's all sorts of
weird, funny business going on
04:43 - because we have all these
high density displays, now,
04:45 - that have multiple
pixels, for every pixel.
04:47 - But all of that
aside, the idea, here,
04:49 - is if I were to zoom way in--
04:52 - way, way, way, in--
and count all the dots,
04:57 - there would be 400 of them.
04:59 - And there's 400 wide and
let's change this to 300,
05:02 - just so we can see that's
a little bit different,
05:04 - 400 by 300.
05:05 - So this is the idea.
05:07 - Now, we have to ask a
really important question,
05:11 - I've totally forgotten
to bring this up.
05:13 - What is the difference
between JavaScript--
05:19 - and we haven't really gotten
to the drawing stuff yet,
05:21 - but don't worry we will--
05:22 - JavaScript and p5?
05:25 - Is create canvas p5
or is it JavaScript?
05:29 - Is 400 comma 300 p5
or is it JavaScript?
05:34 - This is not an easy
question to answer.
05:36 - And it's a question that
I hope will resolve itself
05:39 - for you over time, as you
program more, and more.
05:42 - And learn about other
libraries-- besides p5--
05:45 - that work with the
JavaScript language.
05:48 - But, the key thing is here, the
language, the syntax, the fact
05:52 - that you need parentheses,
and commas, and semicolons,
05:55 - and names of functions go here.
05:57 - That is the JavaScript language.
05:59 - To call a function
in JavaScript is
06:03 - to write the function name,
followed by parentheses,
06:06 - with commas for the
arguments, and a semicolon.
06:08 - That's JavaScript.
06:10 - Create Canvas is a
function that exists,
06:14 - that is defined
inside of the library.
06:17 - So, if you did not have p5, if
you weren't using the p5 web
06:21 - editor, you were in
some other environment
06:23 - and you wrote create
Canvas, you might
06:24 - get an error message
saying, I don't
06:26 - know what create Canvas is.
06:28 - All programming
environments and editors
06:30 - allow you to import
other libraries.
06:32 - But the p5 web editor
has done this for you.
06:35 - So the fact that we can
execute p5 commands,
06:39 - write create Canvas-- and
there's a lot more of them--
06:42 - means, is because we're
using the p5 library.
06:45 - The way we execute that
command, where the semicolon,
06:49 - goes where the parentheses,
go where the commas go,
06:52 - that is all the JavaScript
language, itself, the syntax.
06:55 - I hope that gives a little bit
of clarity, there's more to it
06:58 - than that, you'll have
many more questions.
07:00 - But, hopefully, I'll keep
answering that as we go.
07:05 - All right, so, now, where can
I find out about other commands
07:09 - that I can write,
besides create Canvas?
07:13 - And when I say commands,
I really mean functions.
07:16 - But I like to use the
word command at least
07:18 - at the beginning, because
it's a little clearer
07:20 - to talk about what we're
actually doing here,
07:22 - you and me.
07:23 - But, technically, these are
functions that we're calling.
07:26 - All right, so, the
answer to that question
07:28 - is the p5.js website.
07:30 - If I go to the
p5.js website and I
07:32 - click on this link
called Reference,
07:36 - this link on Reference
has every single function
07:41 - that's part of the p5 library.
07:43 - So, somewhere on here
I could do a Find,
07:47 - we can find create Canvas.
07:49 - And I could click
on create Canvas
07:51 - and learn more
about create Canvas.
07:53 - This is known as
the documentation.
07:55 - Programming languages,
and programming libraries,
07:58 - and frameworks, all--
08:00 - they should, at least--
have documentation
08:02 - where you go to read about how
the thing is supposed to work.
08:05 - I could make, like, thousands
of thousands of videos
08:08 - and just go through every one
of these, and explain it to you.
08:11 - But learning to
program is not just
08:13 - learning how to write the
instructions and the syntax.
08:15 - It's learning how to
read documentation.
08:17 - So the functions
that I want you--
08:19 - if you're watching this video
series, which I guess you are--
08:22 - to follow first, are the ones
that are under 2D primitives.
08:28 - This is where we're
going to start.
08:30 - There are lots of functions
that-- go and explore them all,
08:32 - don't listen to me-- but
for your first exercise
08:35 - after you watch this video,
just limit yourself to triangle.
08:38 - Rect, which is
short for rectangle,
08:40 - quad, which is any shape
that has four vertices to it,
08:46 - four sides, edges.
08:48 - Point, which is a single
point line, which is a line.
08:50 - Ellipse which is a
fancy name for circle,
08:53 - but it could be
sort of squashed.
08:55 - And arc, arc could probably
need it's own video
08:58 - to talk about how arc works.
09:00 - But you can explore these
and experiment with them.
09:04 - Let's just make a guess, let's
start with rect for rectangle.
09:09 - And let's not even
click on it yet.
09:11 - I'm just going to go over here.
09:13 - And now, I need to talk
about what Setup a Draw are,
09:19 - what are these blocks
of code, why did they
09:21 - start with the curly
bracket and end a bracket?
09:23 - I'm going to come back to that.
09:24 - For right now, we
should understand
09:26 - that Setup is the place
where create Canvas go.
09:29 - At the beginning, we're
going to set up our canvas.
09:31 - Draw is the place where
I'm going to put my stuff
09:34 - to draw stuff to the canvas.
09:35 - There's more to it than
that, but that's the way
09:37 - to think about it right now.
09:39 - So I'm going to go in here and
I'm going to zoom back out,
09:44 - R-E-C-T, find out
what it means to me.
09:50 - I'm going to put some
numbers in there.
09:52 - Shout them out, I
can't hear you, sorry.
09:56 - I'm going to say
like, 100, 50, 25--
10:00 - nothing's there
yet-- 75, 85, 75.
10:03 - Oh, look at that, suddenly
there's a rectangle there.
10:06 - So, even just through
guessing, right,
10:09 - we know the name of the
instruction, rectangle, rect,
10:12 - R-E-C-T. We know that we
need to then put maybe,
10:15 - some numbers in between
parentheses and then end with
10:17 - a semicolon.
10:18 - We could just try,
it'd be weirdly, like,
10:20 - could I put another
number there?
10:22 - I messed up, could I put
another number there?
10:25 - Oh, yeah, oh, look at that.
10:26 - What did that do?
10:27 - So what's going on?
10:29 - So, you know what, I'm
going to actually take
10:31 - the time to explain the
rectangle function to you.
10:34 - Then we're to look at
the reference page.
10:35 - And then I don't
need to do really,
10:37 - the other ones because you can
then, do this for yourself.
10:39 - You could type the command in,
you can type the numbers in,
10:42 - you can play around and guess.
10:43 - You can read the reference
page and try to fix it.
10:45 - Then you could ask me
questions in the comments
10:47 - and hopefully, I'll be
able to respond to you.
10:49 - OK, so I need to give
myself a little space, here.
10:54 - And what I want to do is
draw the canvas for you.
10:58 - Then, what I want to do is,
write out this function rect,
11:04 - and I'm going to say 100.
11:06 - What did I put,
actually in here?
11:08 - I put 100, 50, 25, 75.
11:11 - 100, 50, 25, 75.
11:17 - So how do these
arguments define the way
11:22 - to draw a rectangle, right?
11:23 - R-E-C-T means draw a rectangle.
11:25 - Here are the properties of the
rectangle that I want to see.
11:31 - In order to understand
what these numbers mean,
11:35 - we need a little bit
of background knowledge
11:37 - about this two dimensional
space, itself, of the canvas.
11:41 - We need to think
about something called
11:43 - a Cartesian coordinate system.
11:47 - So, a Cartesian
coordinate system--
11:50 - named for the French
mathematician Rene Descartes--
11:53 - Cartesian is a way of describing
a two dimensional space.
11:57 - And saying, like, this spot
can be identified by this quote
12:02 - unquote, x,y position, or
this horizontal and vertical
12:05 - position.
12:06 - If you've taken some type
of math or geometry--
12:09 - depending on where you are,
and your learning the world
12:13 - journey--
12:13 - you might have seen a
graph that looks like this.
12:18 - With some ticks on
it, up and down.
12:20 - And you might have
learned, like, oh,
12:22 - this is something
called the x-axis,
12:25 - and this is something
called the y-axis.
12:27 - And if I say, here's
a point 3 comma 4--
12:33 - and this is somehow, the point
0, 0, the origin, the center--
12:37 - 3 comma 4 would
be 1, 2, 3, go up.
12:42 - And then 1, 2, 3, 4
refers to this position,
12:46 - right here, within the
Cartesian coordinate system.
12:50 - A 2D canvas being
drawn by p5 is also
12:54 - a Cartesian coordinate
system, but it's a little bit
12:57 - confusing.
12:58 - Because this default-- the
standard way that coordinate
13:01 - system, and with pixels and
computer graphics define--
13:03 - does not look exactly like this.
13:06 - The equivalent of this
0, 0 being the origin
13:09 - is actually up here,
at the top left.
13:13 - And this is the
x-axis, horizontal.
13:17 - This is the y-axis.
13:19 - So if I were to say, 3 comma
4, and try to find that pixel,
13:25 - I would have to go 1, 2,
3 pixels over and 1, 2, 3,
13:29 - 4 pixels down.
13:30 - 3 comma 4 would be
this pixel, right here.
13:33 - But, truth of the
matter is, those
13:34 - are really, really tiny, right?
13:36 - This is very similar to
a piece of graph paper,
13:38 - and that might be a way of
kind of like playing, you know?
13:40 - You could stop and go get
a piece of graph paper.
13:42 - And try to, like, you know,
draw a big canvas on it,
13:46 - and try to position
where things are.
13:48 - That's the idea of
what we're doing, here.
13:50 - The pixels are really
tiny in many ways.
13:54 - So you have to more
imagine like, this is zero,
13:57 - this is pixel zero.
13:58 - And the width is 400--
14:00 - and this is going to this is
going to make you a little bit
14:03 - crazy--
14:03 - the last pixel is
actually pixel 399.
14:07 - Oh, that's so weird.
14:08 - Think about that, though.
14:09 - And I'm a little bit
off on a tangent,
14:10 - here but it comes
up again and again.
14:14 - Let's say it's 5 pixels
wide, there are five pixels.
14:19 - But the first pixel is 0.
14:21 - 0,1, 2, 3, 4.
14:24 - Five fingers, but
only got up to four.
14:26 - So this is, like,
foreshadowing, this
14:28 - is going to come up
but again and again.
14:29 - Counting from zero
is a thing that we
14:32 - do a lot in programming, which
is a little bit different.
14:34 - Because remember when I
was like, 1, 2, 3, 4, 5?
14:36 - They're five things, but
they're 0, 1, 2, 3, 4.
14:38 - All right, so, pixel
zero, pixel 399.
14:41 - So what does this mean, 150?
14:44 - This is the x location
of the rectangle,
14:47 - and 50 is the y location
of the rectangle.
14:49 - So let's just guess, maybe
pixel 100 is about, over here.
14:54 - Pixel 50 is about, over here.
14:56 - So, that's this pixel,
here, that's 150.
15:00 - This is the width
of the rectangle,
15:04 - and this is the height
of the rectangle.
15:08 - Maybe that's about 25 pixels,
maybe that's about 75 pixels.
15:12 - So that is how we
define the rectangle.
15:15 - The first two arguments are
the x,y of the top left,
15:18 - the third argument is the width,
and the last argument there,
15:22 - is the height.
15:23 - And there we see the rectangle.
15:25 - I clearly didn't
draw this perfectly,
15:28 - but if we come back
here, we can see
15:29 - that's exactly what
you see, right here.
15:32 - And I could start changing
these numbers around.
15:36 - And I could say, 150
and I could say 75,
15:41 - and I can move it over to 175.
15:43 - And it's going to be over there,
and I can move it up to zero,
15:46 - and it's going to be there.
15:47 - So, you can see, this is what
you can play around with, now,
15:49 - changing those numbers.
15:51 - I got to get something
off my chest.
15:53 - What we're doing, here,
seems like, this is what
15:55 - programming is, are you crazy?
15:58 - It would be so much easier
for me to do this in insert,
16:00 - you know, commercial
software that
16:02 - makes images or drawings here.
16:05 - That I don't want a
buzz market for free.
16:07 - [INAUDIBLE] Anyway,
the answer is true.
16:11 - This is only just the
way I want to start.
16:13 - The whole point
of programming is
16:15 - to write algorithms and
instructions for saying things
16:18 - like, spin around, move up
and down, bounce off the edge.
16:21 - How could I turn
this into the game
16:23 - pong, where that's actually the
paddle that moves up and down?
16:26 - I'm going to get there.
16:28 - So this is a little bit of-- not
really how programming works--
16:32 - but it's a good place to get
started, and feel comfortable.
16:35 - And so, basically, you know,
what your assignment is,
16:37 - if you choose to
accept this assignment,
16:41 - is to make your own drawing.
16:43 - Make your own drawing, maybe
make a drawing of somebody,
16:46 - a friend of yours or
someone in your family.
16:48 - A little portrait of
them or self-portrait.
16:50 - Or do something abstract, or
draw a landscape, or something
16:53 - that--
16:54 - I won't be [INAUDIBLE].
16:55 - So just try to make a drawing.
16:59 - All I did was show
you a rectangle.
17:01 - I've been talking for,
like, two and a half hours,
17:04 - all I got was this
rectangle on the screen.
17:06 - So how are you going
to do more than that?
17:08 - I'm going to leave you
to it, a little bit.
17:10 - And let me show you
how to get further.
17:14 - I'm going to go the
p5 reference and I'm
17:15 - going to click on the
rectangle function, right?
17:19 - This is where I am, remember,
p5.js.org/reference.
17:22 - I'm going to click on
the rectangle function.
17:24 - And first, we're to see
here's a nice little example.
17:27 - So, at the very least, I could
just take this and copy it.
17:32 - Shoot, I have to go back here.
17:34 - I could copy it into my
code and we could see--
17:38 - OK, does that look the
same as what's here?
17:42 - Yeah, kind of, this
is a smaller canvas,
17:43 - but it's the right idea.
17:44 - Oh, look, there's like another
argument, and it's round,
17:48 - and there's all the others.
17:49 - So this is what you can explore.
17:51 - But the point, here, is
that what I want to look at
17:53 - is, this is what's
really important.
17:56 - This is known as documentation.
17:58 - This is saying, this is
the name of the function
18:01 - and these are the arguments.
18:03 - X, y, w, h, these
are other arguments.
18:06 - The reason why they're
in these square brackets
18:08 - is they're optional.
18:09 - So you have to use
an x,y within height,
18:12 - you can optionally
add more arguments.
18:14 - And here, it's going to
tell you what they are.
18:16 - X is the x-coordinate
the rectangle.
18:18 - That's exactly what I
explained to you over here.
18:23 - Y is the y-coordinate, W is
the width, H is the height.
18:27 - And then there's these
other optional ones
18:29 - for rounding the edges.
18:31 - And I'm going to not
worry about that too much.
18:34 - Rectangle is maybe
not the best one
18:35 - to start with, because of
the extra added complication.
18:37 - But I could easily just go over
and now, click on say, Line.
18:42 - Oh, look at this, this
is what it looks like.
18:46 - The function name as line,
it takes four arguments,
18:49 - this is what I get.
18:50 - What are those arguments?
18:52 - x1, y1, x2, y2.
18:55 - X is the x-coordinate,
the first point,
18:58 - y1 is the y-coordinate,
the first point.
19:00 - Oh, yeah a line is a thing
that connects two points.
19:06 - Look at that, I've connected
to points with a line.
19:09 - So, now, I can come back here.
19:12 - And by the way, oh my God,
z, I could get in the 3D.
19:14 - Let's not get the
3D, right now, we'll
19:16 - save that for another time.
19:19 - So I'm going to go
back to the editor.
19:21 - And I'm going to say something
like, line 0, 0, 400, 400.
19:28 - There you go, look at that.
19:30 - There is a line.
19:31 - Oh, and maybe I
want it to be 400,
19:32 - 300 because I wanted to
go to the other side.
19:34 - Or I want it to actually
be, like, 0, 50.
19:37 - There's the line, right?
19:38 - You could see now,
that line is appearing.
19:41 - It is a line that connects two
points, zero comma 50, and 400
19:44 - comma 300, now, OK.
19:47 - Something is really
bothering me about the code.
19:50 - Don't be like me, don't be
me, be much more forgiving
19:54 - and relaxed about the world.
19:56 - But I cannot tolerate the
fact that this line of code,
20:00 - right here, is
starting over here.
20:03 - And this one is starting
a little bit over here.
20:05 - I'm kind of joking around.
20:07 - And look there's a
space here, but there's
20:09 - no space after this comma.
20:12 - One thing that is
important to note
20:14 - is, this is going to
work, no matter what.
20:19 - If your code doesn't line up,
or you put a lot of spaces
20:23 - in, or a few spaces in.
20:25 - These types of
things, white space--
20:27 - meaning space, and
return, and tabs,
20:30 - and all those sorts
of things-- do not
20:32 - affect the way the code runs.
20:33 - But they do kind of make the
code a little less readable.
20:36 - And p5 has a really
nice feature under Edit.
20:39 - Tidy Code-- which you
can also do Shift Tab--
20:42 - which will kind of fix the
indentation and white space
20:45 - for you.
20:45 - So I'm going to press
Shift Tab right now.
20:49 - And everything is all lined up.
20:50 - So, I encourage you
to use Shift Tab,
20:52 - you know, Save, after
you've done that.
20:54 - I didn't mention, by the way,
that you can see when it's last
20:57 - been saved right up here.
20:58 - It says, just now,
that'll change
21:00 - until like a minute later.
21:01 - And it also has Auto Save,
which you can adjust here
21:06 - in the settings.
21:07 - Auto Save on and
off, that's sort
21:08 - of an important little feature
just to quickly mention.
21:12 - All right, so, I'm almost
ready to finish this video.
21:18 - First of all, why is
the background pink?
21:21 - And why is the rectangle
white, and the line is black?
21:24 - Well, I haven't talked
about color, at all.
21:26 - So that's the topic
of the next video.
21:28 - These are arguments that
define the dimensions
21:31 - and the location of shapes.
21:32 - But those arguments don't
seem to define the color.
21:35 - So we have to look at
how do we define color.
21:37 - The clue to that is
somewhere in here, right?
21:39 - Background, the function must
be setting the background color.
21:41 - So, That's coming, play
around with that on your own,
21:44 - if you want.
21:44 - But that's what I'll talk
about in the next video.
21:46 - The other thing is--
21:47 - look at this-- the
line looks like it's
21:49 - going over this rectangle.
21:52 - What happens if I take
this line of code?
21:54 - I'm going to use command x for
Cut, and command v for paste.
21:59 - Now, look at this, zoom on in.
22:01 - The line is behind
the rectangle.
22:04 - So layering, the
layering of the shapes--
22:07 - what appears on top or behind--
22:10 - has to do with the order
of these lines of code.
22:13 - The order that the
code happens is,
22:15 - very important to
how a program runs.
22:18 - Not so important right now,
just drawing some shapes,
22:20 - playing around, experimenting.
22:22 - But this is a
crucial concept that
22:23 - will come up, especially once
you want to animate this stuff.
22:28 - So that's going to come.
22:30 - How does this
square move around,
22:31 - how can I interact
with the mouse?
22:33 - And the order is going to
become even more important then.
22:36 - OK, so here's your assignment.
22:38 - Make your own picture.
22:44 - Don't listen to me, and
use whatever you want.
22:46 - But if you want the
constraint, use only
22:49 - what's here under 2D primitives.
22:55 - and maybe not arc,
or play with arc.
22:58 - And I'll have to make a
video about arc or something.
23:00 - And can I show you
one more thing,
23:02 - do I want to show
you one more thing?
23:04 - I think something
will be really useful.
23:06 - I gotta show you one more thing.
23:08 - Where is this one?
23:09 - OK, attributes.
23:11 - These are some other
functions that you might
23:13 - be interested in exploring.
23:15 - And I'm going to come back
to stroke weight, for sure,
23:18 - some of these as we
talk about color.
23:20 - But at least one
rectMode, and ellipseMode
23:22 - are kind of important.
23:24 - So I'm going to just show
you something about rectMode.
23:30 - Remember how I said that
this x,y defines the top left
23:37 - location of the rectangle?
23:39 - Sometimes it's much
more convenient to draw
23:42 - where a square rectangle is
by setting the center of it.
23:47 - And let me show you
what I mean by that.
23:52 - For example, the center
of this canvas, right?
23:55 - What's the center of the canvas
if it's 400 wide and 300 high?
23:59 - The center is 200 by 150, right?
24:03 - So I'm going to put this
rectangle at 200, 150.
24:07 - And then I'm going to make
it 150 wide and 150 high.
24:12 - That's weird, oh, it's
not in the center.
24:15 - Oh, but the top left
is in the center.
24:17 - But what if I want
the rectangle, itself,
24:19 - to be center?
24:20 - Well, I could figure
out the math of that.
24:22 - I go, OK, so then
it's, like, 125, maybe?
24:26 - It's, like, that's
shifting it over.
24:27 - But I can use an attribute,
and the attribute rectMode
24:34 - is another function, I
can type center in here.
24:37 - This is an instruction,
a function,
24:39 - to set the mode of drawing
a rectangle to center.
24:43 - Which means-- now look at it--
there it is, in the center, OK?
24:48 - So, maybe, in your
exercise you might
24:51 - want to use rectMode in
ellipseMode, as well.
24:54 - We could click on this, and we
could see look, there's corner,
24:57 - there's corners, there's
a radius, there's center.
24:59 - So there's a few other ways of
defining how a rectangle is.
25:02 - But I think, for the
most part, you're
25:04 - just going to want the
default way, which is corner,
25:06 - or center, which is center.
25:09 - OK, you know, when I said I
was going to do these videos,
25:12 - I sort of imagined doing a whole
bunch of, like, two or three
25:15 - minute ones.
25:16 - I've completely failed at this.
25:17 - This has became kind of
a long one about drawing.
25:20 - But hopefully you've
got the basic idea,
25:22 - and I look forward to
seeing what you make.
25:25 - You can share links
to the p5 sketches
25:27 - you create after, watching
this video, in the comments.
25:30 - So, I'll click on
them, and look at them,
25:32 - and that'll be exciting, OK?
25:33 - Thanks for watching and
see you in the next video,
25:35 - where I'll talk about color.
25:36 - [BELL RINGING]
25:36 - [MUSIC PLAYING]