00:00 - This video is about the constructor function
00:03 - in javascript.
00:04 - tricky and confusing topic it relates to
how you generate objects and it's a
00:09 - different style than what Ishowed you
in the previous video with a literal
00:12 - object being made into an array and in
fact it's probably and I hate to use
00:16 - this term is slightly better style more
flexible style will afford you some
00:20 - possibilities and get past some
limitations that are here so let's first
00:24 - talk about why do we need this other
step we're going to talk about what that
00:27 - other step is the constructor function
so there's a couple reasons
00:30 - so this example first of all it has an
array at empty array and setup it puts
00:34 - four objects into the array there are
those objects and then in draw it calls
00:40 - function on those objects display the
objects move the objects. So where does this
00:43 - breakdown? There's a couple ways this
breakdown number one is it's a lot of
00:48 - code here and set up this is a simple
object just has an XY and two functions
00:52 - but you could imagine you could have an
object with 10 properties 15 properties
00:56 - five functions six functions you don't
really want like all this code inside of
01:00 - this loop and setup it's sort of hard to
manage to keep track of the number one
01:03 - to be nice if we could move this some where else to kind of if you're thinking like
01:06 - I know I could move into another
function that's basically what we're
01:09 - going to do to move into a special kind
of function called a constructor
01:12 - function.
01:13 - the other reason why you might need a
constructor function is you might want
01:16 - to make new objects in different places
in your code so you might want to start
01:20 - this programme with four objects and
then every time you click the mouse you
01:24 - get a new object and so you need the
literal object it set up when you make
01:29 - four and then you also need that in
mouse press when you make another one so
01:33 - you suddenly this code that the whole
point of it was to not have to write it
01:37 - again because inside a loop
01:38 - what if you need to do it later
somewhere else in the code if you have
01:42 - the constructor function that
constructor function is reusable so the
01:46 - purpose of the constructor function is a
special function to make the object for
01:51 - you so it's really like this is making
the object but i want to put that
01:54 - somewhere else.
01:55 - Essentially what you're going to just
reorganizing the code and some new
01:58 - possibilities will open up so let's look
at, before I even get to that let's look
02:02 - at what that does to the code. So pretend that this all this code didn't need to
02:06 - be here and in fact I'm going to like hit a lot of carriage returns go far down
02:11 - here and leave it down here
02:12 - I'm gonna comment it out so that it's
not affecting anything and come back up
02:17 - here and if you if I had a constructor
function I would be able to say
02:21 - something like this: new bubble this is new syntax with the keyword knew what
02:28 - the keyword knew it means is a
JavaScript make a new object. What kind
02:34 - of object? This bubble object.
02:36 - How do I know what a bubble object is? I'm going to write a special function
02:40 - called bubbles somewhere else somewhere
else that will explain what an object is
02:44 - generated make it put it here so that it
goes into the array. So and what's
02:49 - wonderful about this is this beautiful
lovely clean sort of like succinct
02:53 - syntax like all of the code for the
object is now somewhere else. We can see
02:57 - that the main program is just let's
start with an empty array let's put a
03:01 - bunch of things in it and let's make
those things move around the screen and
03:04 - do stuff. And so, with this all that's
left to do is define what it is to be
03:09 - that bubble object to write this
constructor function that makes that
03:12 - bubble object. So how do you do that? That's the next piece I want to come
03:15 - over here to the whiteboard and oops  hit my button again
03:19 - Oh come on button. There I am. Going to come over here and talk about that the
03:24 - syntax for that so what I think of what
a good way of looking at it is okay so
03:27 - we know how to write a literal object a
literal object i'm going to kind of
03:31 - squeeze over here and have some mixture
room I'm to have some extra room. I'm just going to say VAR B
03:36 - off a literal object is a collection of
name-value pairs properties have a
03:42 - property named X with the value of 100
have a property name why with a value
03:46 - with 50 a property name display and the
value of this property oh it happens to
03:52 - be a function and what do I do in that
function? I draw an ellipse I set a color
03:57 - and if I want to refer back to a
property of the object remember I have
04:02 - to say this another property have to say
this . x so this is the syntax that
04:07 - you're familiar with if you watched the
previous videos it's what I've used so
04:11 - far so. Then draw sort of magical line
here and what I want to do is look at
04:17 - this like a thing poking me. I don't
have a lot it looks like this big space
04:21 - here very cramped, camera
04:22 - lights, thing poking me.
04:26 - Um, so uh,  so over here what I want to do now
is look at how do I make this with the
04:31 - constructor function so the constructor
function is a function just like any
04:36 - other function in JavaScript so this
syntax in a weird sort of way almost
04:39 - goes back to something that you might be
a little more used to but with some kind
04:42 - of strange other nuanced and aspects to it. So to define a function in JavaScript
04:46 - simply write function, the name of that function, leave that blank for a second, if
04:55 - there are any arguments or parameters
parameters that function in parentheses
04:58 - and open curly bracket can you see that
yes and a closed curly bracket so a
05:02 - constructor function is a function just
like any other function however we
05:07 - intend to use this function in a special
case by invoking the new operator so i
05:12 - want to say new bubble mean I want to
execute a function called bubble with
05:17 - the new operator to make a new object. So a convention in how you name the
05:22 - constructor functions is to name it with a capital letter.
05:27 - ok so so this is a function named bubble
I've named it with a capital letter
05:31 - simply to note in my code that this is a
special functions that constructor
05:36 - function. The thing that javascript is
looking for is that new operator the
05:40 - thing that I have over here. It's going
to invoke that constructor function say
05:44 - hey constructor function make a new
object and just convention wise so I can
05:48 - keep track of what's doing what my code
i'm going to capitalize that a name that
05:52 - would be bubble capital B.
05:54 - I think this video earlier and had no
sound in it and I really explain that
05:58 - much better the previous video
05:59 - no one will ever see. I'm gonna keep
going something else I'm gonna do this
06:03 - video is gonna be better i'm sure
06:04 - ok so now once this function is
triggered with the new operator
06:08 - javascript says okay I'm going to make a new object. Now, the first thing to do is
06:13 - say what properties go into that new
object?  This is where the keyword this
06:19 - comes in again if I say this
06:21 - this . x equals 100 what I've done is
the new bubble object that this
06:27 - constructor has made attach the property
x to  this bubble object so in the same way
06:33 - that we added a property here saying x
colon 100 the constructor function is
06:38 - making a new object and attaching x 2 that particular object this object so I
06:43 - can then also attach a Y to it and I
could also goes the camera I can also
06:50 - attach a function to it. And i know this I'm gonna go off the screen here but you
06:57 - so actually let me, it's not a screen it's a whiteboard, but let me actually write this
07:02 - little smaller so you can see it this .
display equals function so you can see
07:11 - now
07:12 - Oh technical fail but I just going to
keep going here this is already my
07:16 - second try
07:17 - um look at that by the way that's the
thing this is the thing that was poking
07:21 - me just turn
07:23 - ok so you can see how this maps this is making a literal object make this object
07:29 - be with an X with Y with a display this
is in a way like a template. It's a the
07:34 - object doesn't exist yet but if you were
to call this function with a named
07:39 - bubble that an object will be created
with these properties. X will be attached
07:44 - to that object Y will be attached to the object display will be attached that
07:47 - object so literal object it exists
template idea of an object way of
07:53 - generating the object when you say new
bubble the object is made and you might
07:59 - think that at the end here you would
want to say something like return this
08:04 - so once the object is made you wanted
then send it back to where you wanted to
08:09 - make right here I set of the host the
camera
08:12 - I'm gonna have to remake this video again tomorrow I might do here I said new
08:18 - bubble I want this to evaluate to that
new object the new object here the
08:23 - reference that new object is the keyword
this but the thing about a constructor
08:27 - function is this is like what you don't
have to say this its inherent to how
08:31 - once you invoke the new operator that
that object will
08:34 - returns kind of unspoken. It's, you don't have to say it happens automatically for
08:39 - you.
08:39 - So this is the syntax one of the things
you might practice right and exercise
08:44 - that will give you at the end is take
something that you made in a literal
08:47 - object and try to convert it to this
constructor functions to text this is a
08:50 - really hard confusing thing to explain
and possibly understand hopefully i'm
08:54 - doing a slightly okay job. So let's do
that now in the code itself. Remember
08:58 - down here before I throw left my code. I had for the literal object commented out
09:03 - so now I can actually write that
constructor function so I'm gonna say
09:08 - function bubble. And now what are the properties? I had an X and a Y so I
09:15 - need to say this . x equals random 0 to width with this . y equals random 0 to  height so
09:22 - you can see instead of the literal
syntax I'm actually setting properties
09:26 - attached to this equal to the value that sort of more like code being executed
09:30 - line by line and then I can add the
display function and I can add the move
09:37 - function and I left a space here and then the nice thing is I can go and grab
09:43 - these lines not these haven't changed
those functions are exactly the same and
09:49 - i know im doing this kind of quickly
like if you're following along you can
09:53 - pause the video and try to sort of do
this yourself I'm i will upload the
09:56 - summer and try to put them in the
description on YouTube or Vimeo wherever
10:00 - you're watching this but you can see now
let me put a line break here you can see
10:05 - now this is the constructor function
this is a function whose sole purpose in
10:10 - life is to generate an object when you
say new bubble that object is made it's
10:15 - stored in the value of this X gets
attached why gets attached to it just
10:19 - like its attachment move gets attached
to an unspoken at the end that object
10:23 - this object is returned where where did
I say new bubble up here
10:28 - what do I do with it I put it in the
array boom boom
10:32 - I don't know there's a bubble pops but
so this function new bubble now notice
10:37 - interestingly enough and I hate to do
this to you but if I said this this
10:40 - would not work right the constructor
function is a function like any other it
10:44 - will be executed but all sorts of things
will break and not work
10:47 - this only works with javascript is
looking for that keyword new in order to
10:51 - know to make this a new bubble object
and and attach the properties to it so i
10:56 - put this in here and i run it we've got
four and again I've got the same magical
11:01 - thing as any and you know make 400
people so I'm running out of steam here
11:08 - so hopefully this so this you know right
now all I did in this particular example
11:14 - was take take the literal object that I
had in this loop up here and move it to
11:21 - a constructor function so in the next
video what I would like to do is kind of
11:26 - show you what sort of what what what you could really do with this because now if
11:30 - I have this constructor function I could say when I click the mouse also make a
11:38 - new bubble and how do I add this to the array right so this is what we need to
11:45 - look at I don't have to rewrite that
inspect constructor function can be
11:49 - reused anywhere in the code so this will
work yet this is the topic that I want
11:53 - to look at in the next video
11:55 - and how do I maybe assign parameters to arguments to it I want to make an object
12:00 - at this location at mouse X at my
mouse Y that's the topic I want to
12:04 - look at the next video. For now I would say, if you want an exercise for yourself
12:06 - go and find something maybe watch the
previous video I made you a little a
12:10 - literal object in a loop take that
literal object code out of the loop
12:14 - right the constructor function see if
you can get to perform exactly the same
12:17 - way.
12:18 - OK, so this is the end of this particular video. In the next one I'll look at a func.,
12:22 - of an array function called push an
array function called splice which
12:26 - allows you to add things to an array
and remove things from an array so we can
12:29 - have a much more flexible system.
12:33 - ok,
12:34 - and i'm going to hit stop now.