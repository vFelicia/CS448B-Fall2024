00:00 - okay welcome to part three so so far we
00:03 - have this system of agents they get a
00:06 - random set of weights which are
00:08 - visualized by these lines are they
00:09 - attracted to food or they are attracted
00:11 - to poison they're repelled by food or
00:12 - they're repelled by poison we're going
00:14 - to try to evolve these to some optimal
00:16 - weight but I need to do a bunch of
00:17 - things number one is a little bit of an
00:19 - issue where they sometimes kind of leave
00:21 - you know they're also dying out kind of
00:24 - quickly so let's let's try it up let's
00:25 - make it easier for them for a second
00:27 - let's increase the amount of nutrition
00:29 - for each piece of food I'm going to
00:31 - probably make it too easy right now
00:32 - which is maybe a bit of a problem let's
00:34 - decrease the amount of health that they
00:35 - lose so now this makes it easier for
00:37 - them we should see at least something
00:40 - that randomly gets some pretty good
00:41 - weights make its way around the screen I
00:44 - should also notice that when I took a
00:45 - break in between parts two and three
00:47 - that I I just made the or initial
00:50 - weights like within a lower range so
00:52 - okay so now this that one seems to be
00:55 - doing three well it does kind of like
00:57 - leave so one thing that I think is going
00:59 - to help it help these is to keep them
01:01 - within the window and I have an example
01:03 - that I made previously which is this
01:05 - example which is a steering behavior
01:07 - where it's desired velocity is to go
01:10 - back towards the center of the window if
01:12 - it ever gets within some range of the
01:15 - edge so I'm going to grab that code for
01:17 - that example which is on github right
01:19 - here
01:21 - and that bit that behavior is in this
01:23 - function called boundaries and I'm just
01:26 - going to copy-paste this function you
01:29 - know again I'm kind of moving away from
01:31 - the code everything from scratch in this
01:33 - particular video because I'm trying to
01:34 - stay with the core idea but you can see
01:37 - this is yet another so you can pause go
01:41 - find the link to that code and paste it
01:42 - in yourself but you can see is like if
01:44 - the exposition is within some distance
01:48 - so there must be what is d so D must be
01:52 - something that is a global variable in
01:55 - this example because I don't see it
01:57 - defined here like it's D must be let's
02:02 - look at that because we're going to need
02:03 - this let's let's go back to sketch KS
02:06 - bar D equals 25 so I want to be a little
02:10 - bit more thoughtful about this
02:12 - just going to put that in here it's a
02:14 - local variable and I'm going to call
02:15 - this I guess we'll just leave it called
02:19 - deke looks like that's distance from the
02:21 - edge that it wants to stay away and so
02:23 - it makes the vector that points away
02:25 - from the edge if it's within if the X or
02:27 - Y is near the edge and why is this if
02:31 - this top position is long oh yeah or if
02:35 - it's sorry if it's within less than D or
02:38 - if it's greater than height minus D so
02:40 - top and bottom okay
02:41 - so let's just go back to the sketch and
02:43 - add in now if I add this as another
02:48 - behavior boundaries is another function
02:51 - this should also have that boundaries
02:54 - function let's just see if that works
02:56 - let me clone these are clean that open
02:58 - anymore whoops something else up okay
03:01 - I've got an error what is this error
03:02 - boundaries is not a function vehicle
03:05 - index I'd boundaries this dot bo you
03:11 - know what I put it after the constructor
03:14 - so I have my brackets out of place so
03:17 - now it should be within there and
03:18 - attached as a function to each object
03:20 - and there we go so we can see let's see
03:22 - do they turn around you can see they're
03:24 - turning around now when they get the
03:25 - edge now the repulsion force might be
03:27 - stronger and it's like boundary force
03:29 - but we can tune that later but I think
03:32 - this is a little bit better we should
03:33 - see hopefully oh yeah you know what it
03:38 - is look at it this one can't even get
03:40 - this food because it's so repelled by
03:43 - this particular piece of poisonous over
03:46 - here so that's really giving them a
03:47 - struggle so this is why we need to add
03:49 - this other aspect with it which is a
03:52 - perception radiance so let's do that
03:54 - okay so I'm going to add that as two
03:57 - other pieces of DNA so what I want to do
04:01 - right now is I want to say in the
04:04 - constructor Scroll scroll Scroll scroll
04:05 - the scrolling song okay I am going to
04:08 - now add DNA to and DNA three and so this
04:12 - is I'm going to put some comments in
04:15 - here food attraction I'll just call this
04:19 - food weight poison weight
04:25 - I'm going to call this food perception
04:28 - poison perception and these should be
04:32 - some radius and let's just say
04:33 - arbitrarily right now within somewhere
04:36 - between ten and a hundred pixels
04:39 - somewhere between 10 and 100 pixels so
04:43 - these are can it see so now let's let's
04:46 - visualize that so let's go into the
04:50 - display function and also now say also
04:54 - draw an ellipse zero zero with a size of
04:59 - this DNA index two times two because the
05:04 - radius times two is the diameter and now
05:08 - I'm realizing my number should probably
05:09 - be smaller but let's just do this anyway
05:11 - and this is DNA three so I want to see a
05:15 - green circle for how close it can
05:17 - perceive food and a red circle for how
05:20 - close it can perceive poison okay here
05:23 - we go
05:24 - oh boy look at that too crazy so one day
05:27 - I need to say is no fill and now we can
05:32 - see that so there's a lot of debugging
05:34 - information here so I'm going to
05:36 - probably want to create a little
05:37 - interface where I can turn that off but
05:40 - you can see now I think these these
05:41 - thresholds look kind of reasonable
05:43 - although I do want to I think actually
05:45 - oddly enough I want to let them
05:48 - basically have there's no reason for me
05:51 - to really I'll give them a maximum to
05:54 - start with but I'm going to just give
05:55 - them no minimum to start with okay so
05:56 - you can see now now it's not actually
05:58 - doing anything with this information I
05:59 - just added those rid those properties to
06:04 - the object and visualize them but I need
06:06 - to go and look at that algorithm where I
06:08 - found the closest piece of food and it
06:10 - should only be affected by the closest
06:12 - piece of food which is within that
06:14 - visual threshold okay so let's look and
06:18 - say here where am i doing that eat so
06:23 - this is where I'm looking for the record
06:25 - a little bit of a tricky thing here
06:28 - we're going to figure this out but
06:30 - because the way I have the DNA and I'm
06:32 - trying to reuse this function but if the
06:35 - distance is less than record and the
06:39 - distance is less than this DNA let's
06:42 - just use index two right now right so if
06:46 - it only had one radius for both food and
06:48 - poison that's what we say as long as
06:51 - right it's within that it could only see
06:54 - it if that distance is less than that
06:56 - perception radius really easy thing to
06:58 - add problem is I need it to be two for
07:01 - the good food and you know what I could
07:04 - do is I could just do I'm just going to
07:06 - add an argument called index again
07:09 - maybe there's another for thoughtful way
07:11 - that I could I could actually no you
07:13 - know what I could do is I could pass in
07:15 - even better I'm going to pass in a
07:16 - variable called perception perception so
07:22 - as long as the distance is less than
07:25 - infinity and it's also within its actual
07:27 - perception then it counts as something
07:29 - you can see and up here what I'm going
07:32 - to do in the eat function now where is
07:34 - that each function please use a couple
07:35 - behaviors function is I'm going to say
07:37 - this DNA index two and this DNA index
07:44 - three so it's going to get like the
07:47 - weights the good weight applies to that
07:49 - steering force the bad way to flies to
07:51 - this during force the good perception
07:54 - goes to this eat function the bad
07:56 - perception goes to this eat function
07:58 - again I'm just showing you a framework
07:59 - imagine an object with all sorts of
08:02 - properties parameters that could that
08:04 - could be evolved these are just a few so
08:06 - now let's run this again and we should
08:08 - see that it's going to have it this one
08:13 - this one looks really really good so my
08:15 - suspicion here is that what it actually
08:18 - wants to be able to do is see food very
08:22 - far away but only see poison if it's
08:24 - within a short distance because let me
08:26 - tell you why I have this suspicion
08:28 - because it Maj ins a scenario imagine a
08:35 - scenario where there is a piece of food
08:37 - and there's a piece of poison
08:41 - and the vehicle is right here and it's
08:43 - coming here well if it can see that
08:46 - poison before at the same time it sees
08:48 - the food it's kind of just like turn
08:50 - around and go away but if it can
08:53 - actually if the poison right if the food
08:55 - radius is very very big but the poison
08:59 - radius is very very small its could it
09:01 - be able to get all the way up grab the
09:03 - food then suddenly no he's notice the
09:05 - poison and turn away so again I think
09:08 - we're just going to when I evolve evolve
09:10 - a kind of obvious result that I could
09:12 - design but the point of this is what if
09:16 - there's a much more complex scenario
09:18 - where you can't easily imagine what all
09:20 - the optimal weights and perception
09:23 - radius radii and all sorts of properties
09:25 - might be because there's so many
09:26 - different things at play then this
09:28 - evolutionary system is probably more
09:30 - useful or interesting to watch okay I'm
09:34 - going to go back I think we've now
09:35 - actually done everything but add to
09:37 - evolution okay look so this one has
09:41 - survived quite a long time it hasn't
09:43 - died it weirdly enough it's got this big
09:46 - perception radius for the poison but a
09:49 - very tiny perception radius for the food
09:51 - but there's here's the thing there's
09:52 - just so much food right I'm adding new
09:54 - food randomly but I'm not adding new
09:56 - poison randomly and there's only three
09:58 - poisons oh we've got it we've got to
10:00 - first make this a little bit harder for
10:01 - them so we're almost to the evolution
10:03 - let's make this a little bit harder and
10:06 - let's add let's say there's a 5% chance
10:11 - of every frame adding a new piece of
10:14 - food
10:15 - let's make there a 1% chance of adding a
10:18 - new piece of poisoned piece of poison
10:22 - every frame so again there's a probably
10:25 - much nicer way I could write this and we
10:26 - capsulate that into a reasonable
10:28 - function but we'll keep that for now so
10:29 - let's run this again and let's just let
10:32 - this go for a little bit I know maybe
10:34 - I'll edit right now and come back in a
10:36 - minute I'm going to edit and come back
10:37 - in a minute okay I'm back and let this
10:39 - run for a while and this seems to be the
10:40 - one that's survived and you can see that
10:42 - it's certainly got a optimal quality
10:46 - that I had described which is the
10:47 - ability to see the food farther than it
10:50 - can see the poison on the one hand I
10:52 - think it's just so much food
10:54 - for it because it looks like I don't see
10:56 - any red line coming out of the back I
10:58 - think it's barely not attracted to the
10:59 - poison
11:00 - but at least it's not attracted to it
11:02 - like it's not forward unless although
11:04 - it's drawing the red and the green I'm
11:07 - you know one thing that might be doing
11:08 - is drawing we're not able to see I'm
11:11 - drawing red and then green so there's an
11:13 - issue with my visualization let's fix
11:15 - that I think they're going to be a part
11:18 - four which is adding the evolution try
11:19 - to fix up some stuff right so I think
11:23 - there's a little bit of an issue here
11:24 - which is that I didn't really think
11:26 - about when I'm drawing my debugging
11:28 - stuff I draw the green stuff and then I
11:31 - draw the red stuff so interestingly
11:33 - enough that's not the problem
11:36 - I think it's weight is actually zero but
11:38 - as a little worried that if it has a
11:40 - forward fit you know I probably should
11:42 - do the green just go say the green is
11:46 - like stroke weight three just for the
11:49 - line and then the red has stroke weight
11:53 - everything else stroke weight too
11:54 - because then I should probably be able
11:57 - to see like if I can I can see like if
11:59 - they're both there the green kind of
12:01 - peeks out a little bit behind so that's
12:05 - sort of good to say oh so nothing
12:07 - survived there so I'm assuming ah
12:09 - something like got to run this a few
12:11 - times - this one looks pretty good
12:14 - although I would prefer for it to the
12:17 - red to be sort of it that's it okay
12:19 - let's try to make it a little bit harder
12:21 - this one is this one looks great let's
12:25 - try to make it a little bit harder for
12:26 - them let's go back to the health in
12:31 - update boy up going down a little bit
12:36 - faster now
12:37 - okay and let's let's give it just to
12:42 - start a little bit less food and a
12:47 - little bit more poison so let's see and
12:51 - let's run this okay let's see if
12:52 - anything survives and then we're going
12:56 - to be ready nothing survived let's try
12:59 - to get because I only right now here's
13:00 - the point I got to talk about why we do
13:02 - watch what why aren't I done well if I
13:04 - could just make millions of these
13:07 - and put them into a really large world
13:09 - maybe there's like so few parameters
13:12 - here that the optimal one might just
13:14 - kind of appear but the reason why I want
13:17 - to use evolution is only just starting
13:18 - with like ten of these or twenty of
13:19 - these and I want to be able to allow
13:22 - them to create copies of themselves to
13:26 - pass along their genetic information to
13:27 - the next generation so to speak and to
13:30 - have this possibility of mutation when
13:32 - they do that so maybe one that's doing a
13:34 - really good job but you know so it's
13:38 - copying itself and every time we copy
13:39 - itself it like it makes its read weight
13:41 - a little bit bigger or it's read weight
13:43 - a little bit smaller so it just makes
13:45 - subtle little tweaks and then those
13:46 - copies are better and so over time the
13:49 - ones we might hopefully see a sort of
13:51 - optimal result okay so I'm going to add
13:54 - that feature to this in the next part
13:56 - what part of my on the fun part 3 part 4
13:59 - will be the final part where I will add
14:02 - the evolutionary aspect to this
14:05 - particular coding challenge and sort of
14:07 - talk about what it is and some future
14:09 - possibilities for you so see you in the
14:11 - fourth part
14:18 - you