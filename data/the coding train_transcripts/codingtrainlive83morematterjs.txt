00:00 - [Applause]
00:00 - [Music]
00:00 - [Applause]
00:10 - did you think that learning coding would
00:12 - be really rough throw your hands up in
00:15 - the air and say enough enough do you
00:17 - want to learn to and make some awesome
00:20 - learn that anyone can when you're cing
00:24 - with coding train good morning
00:34 - whe you're a pro this is all brand
00:39 - new learn the overarching concepts and
00:42 - some fun stuff to and with Dan is your
00:44 - guide come along for
00:47 - the
00:50 - 8,912 oh hi cing train oh shoot pressed
00:54 - the wrong button my joke didn't work
00:56 - I'll try it the next
00:58 - time make a crazy pixel mirror to
01:01 - reflect your face you can make it jump
01:03 - to light speed into outer space you can
01:06 - generate a maze that can go on for days
01:09 - you can make your own terrain and some
01:11 - purple rain you can make a retro game to
01:14 - see how it's done and then tweak a piece
01:16 - to make it yours for everyone make some
01:19 - fract trees or Twitter BS if you please
01:21 - and when the C are you can make them
01:24 - your
01:26 - own
01:28 - 53,000 what
01:32 - 86 oh coding train
01:40 - right of follow the
01:45 - [Music]
01:47 - road coding train good morning I know
01:50 - there's an echo I'm going to be able to
01:52 - get rid of that uh I think I have gotten
01:54 - rid of the voice echo good morning that
01:56 - was my attempt of kind of getting that
01:57 - theme song back in there uh please let
02:00 - me know if I'm coming through loud and
02:03 - clear through the inter interweb waves
02:06 - of air radio frequency tube things um
02:10 - and uh my name is Dan uh I'm I I I'm I'm
02:13 - playing that song in intro video as a
02:15 - reminder that the new the new official
02:18 - coding Train theme song will be coming
02:21 - soon uh with a new video that's the old
02:23 - one when I had a different name ah good
02:26 - times good times happy memories um so
02:29 - what is this thing that you're watching
02:31 - um this is a live uh
02:33 - stream uh yesterday I had a live stream
02:36 - I brought new meaning to the word live
02:37 - stream actually but uh today is a new
02:39 - day a new frontier it's going to be uh
02:42 - I'm here on the internet my name is Dan
02:44 - and I do this every week uh typically on
02:47 - Friday mornings my time which is New
02:48 - York City eastern time around 10:30 a.m.
02:52 - although it appears to be almost 11:00
02:54 - a.m. which is usually about when I get
02:57 - started um so and what I do is is I talk
03:00 - about oh and I even have this up here
03:02 - this wasn't supposed to be up yet I talk
03:04 - about uh and present and attempt various
03:09 - uh things related to computer
03:11 - programming and code so uh that's what's
03:13 - happening here so I actually I'm like
03:15 - semi almost somewhat prepared if you
03:18 - could believe that in that I have an
03:19 - agenda it's in a Google doc which was up
03:22 - a second
03:24 - ago I also something really amazing has
03:28 - happened that's going to change my life
03:30 - on these live
03:32 - streams
03:33 - this is a box of tissues coding train
03:37 - brought to you by tissues when your nose
03:41 - is running you can use
03:43 - one to blow your nose into it and wipe
03:46 - your nose and then you will not find
03:48 - yourself throughout your entire tutorial
03:50 - scratching your nose and then having
03:52 - lots of YouTube comments saying why you
03:54 - keep scratching your nose and then you
03:55 - start to feel neurotic about it and it
03:56 - feeds back into your head and uh anyway
03:59 - so there you go that's gonna that's
04:00 - going to be that's a game Cher for me
04:03 - here on this YouTube live stream okay uh
04:06 - hello Switzerland hello Denmark I'm
04:08 - seeing people in the chat and I am
04:09 - seeing the requests that I get every
04:11 - week for a room tour and Studio setup
04:13 - please uh so I will do that today uh
04:17 - later today I I often do a bonus live
04:19 - stream Friday evening my time because I
04:22 - never get through everything in the
04:23 - morning I come back and try to do some
04:25 - more I don't know if I'll be able to do
04:27 - that today but what I will do is use the
04:28 - time that I often do do that to do a
04:30 - studio walk through
04:33 - okay so let's move on to the
04:43 - agenda where is it here it
04:51 - is where I need another button that I
04:53 - can press that
04:56 - goes because I'm obsessed with sound
04:58 - effects oop you don't like my sound
05:00 - effects then I challenge you internet
05:02 - give me some better ones or just tell me
05:04 - to stop okay um so this is what I'm
05:07 - looking at today um uh let me let me let
05:11 - me actually skip this stuff for right
05:12 - now and go over some announcements okay
05:16 - so two announcements about how things
05:18 - work about uh with some of my GitHub
05:20 - repositories number one is um if you
05:24 - would like to suggest topics for me to
05:26 - consider and approach and cover on a
05:29 - future uh in a future session um you can
05:32 - do so here at this um GitHub repository
05:35 - under the coding train organization
05:37 - rainbow Das topics really though I
05:40 - should probably change this to some kind
05:42 - of like train thing where these are all
05:44 - train stations and they're at certain
05:46 - times and there's a schedule and the
05:47 - train pulls into the station and then
05:49 - this topic is explored but you know
05:52 - anyway um and so um several uh viewers
05:57 - have been helping me organize and keep
05:59 - track of all these and there's some uh I
06:01 - want to thank Mi am SOI and um uh
06:04 - actually I don't know how to pronounce
06:05 - this name the username Callum in uh the
06:08 - patron group um and so um um you can see
06:12 - that there are some new uh tags uh and
06:16 - what I'm going to do is I'm actually
06:17 - going to go here and do sort by uh
06:20 - thumbs up and we'll see uh now uh some
06:24 - of these topics and also I should point
06:26 - out that when I cover a topic then uh
06:29 - the issue gets closed this is one that I
06:32 - did uh this is a coding challenge that I
06:34 - did maybe last week I think and uh then
06:38 - uh I post a link to the video so you can
06:40 - uh track this repository put your
06:41 - suggestions there um and I'm thinking
06:45 - about other ways of uh um I've had some
06:48 - great suggestions of other ways to maybe
06:49 - visualize this or or up voting
06:51 - techniques so that's that's coming so
06:53 - that repository is there ah the camera
06:55 - went
06:56 - off it wouldn't be the coding train
06:58 - without a camera shuts off after 30
07:00 - minutes like I could resolve this
07:02 - problem probably but it's just part it's
07:04 - part of the way that we code we spend 30
07:07 - minutes and then all of a sudden the
07:09 - camera's off then everybody the chat
07:10 - says camera's off and then I go and I
07:13 - turn the camera back on okay so that's
07:15 - that's actually probably less
07:16 - interesting of an announcement it's not
07:18 - really announcement it's more of a
07:19 - reminder that there is also um this
07:22 - repository rainbow code and this is what
07:25 - I'm more excited to show you um so this
07:27 - is the repository where I keep
07:30 - all the example code that mirrors
07:33 - exactly what I do in the videos now
07:37 - there's a it there's a bit of an issue
07:38 - with this in that sometimes I will
07:41 - produce code in a video that has bugs in
07:43 - it or mistakes in it or kind of terrible
07:45 - ideas in it for the most part I try to
07:48 - have the code in this repository mirror
07:50 - what I do in the live stream exactly so
07:53 - that if you have an improvement idea you
07:55 - can actually just you you can use the
07:57 - code that's exactly even with the
07:59 - mistake and kind of fix them as an
08:00 - exercise even yourself but sometimes I
08:02 - will sometimes the code in here if it's
08:03 - like really broken I will change it um
08:06 - but the more of the issue at play here
08:09 - is that I'm getting so many on Twitter
08:12 - uh over email so many
08:15 - wonderful uh variations on the coding
08:17 - challenges I'm going to um and I'm
08:19 - trying to figure out a good way to
08:21 - compile those and let people share them
08:22 - and I was getting them as poll requests
08:25 - and so it doesn't really make sense for
08:26 - me to take somebody's beautiful visual
08:30 - idea that builds on top of an example
08:32 - that I've made and alter the example
08:34 - code so what I've done here uh I'm going
08:37 - to go under challenges and I know one a
08:39 - challenge that has a particular I'm
08:41 - going to go to coding challenge uh 59
08:43 - steering paths so uh I would pull this
08:47 - up if I had thought about it but oh I'm
08:50 - really like standing in front of stuff
08:52 - today um so this is a coding challenge
08:55 - if you recall that made a text with
08:58 - little particles moving around and it
09:00 - wrote the word the particles wrote the
09:02 - word train I would show it to you now
09:04 - each coding challenge will have in the
09:06 - directory with the example code a readme
09:09 - file the nice thing about GitHub is if
09:11 - you ever name a file called readme.md as
09:14 - a markdown file it will actually just
09:16 - appear on it it will be rendered the
09:19 - markdown will be rendered on that actual
09:21 - page so now what I'm doing is on that
09:23 - page you can see Community variations
09:26 - and um these are submitted by people
09:29 - um poll requesting so I don't know if
09:32 - I'm I'm not logged in right now so I I
09:34 - would kind of go through how to do this
09:36 - but
09:38 - um um sorry I'm just I'm looking at the
09:40 - chat um I'm stop talking show us code oh
09:44 - oh you must not have watched this before
09:47 - because I spend a lot of time just
09:49 - talking uh you come back in like 15 or
09:51 - 20 minutes I'll start doing some
09:53 - code but um I'm G to um so uh if you're
09:57 - wondering how to do a poll request send
09:59 - me a tweet um I'm glad to sort of help
10:01 - walk you through that if you've made
10:03 - something and want a poll request um but
10:05 - I also have some you might be surprised
10:07 - to know that I have some GitHub tutorial
10:10 - videos that you could watch
10:12 - okay now um so let's look at some of
10:15 - these so let's look at
10:18 - um changes to make the vehicles flow
10:21 - between multiple words so this is a
10:24 - version that uh it says hi so this is
10:27 - looks like almost exactly what I did in
10:29 - the coding challenge where a lot of
10:31 - particles uh uh they have a whole base a
10:34 - Target location they move that that are
10:37 - along the paths of a letter form and
10:39 - then they uh flee they use a fleeing
10:42 - Behavior to move away from the mouse and
10:44 - then come back as the mouse moves away
10:45 - so
10:46 - now let's what happens if I press it
10:48 - says press the space bar o look at that
10:53 - there press the space r again and also
10:57 - let's try clicking the mouse
11:00 - it goes to clicking the mouse looks like
11:02 - it makes it go to a random location and
11:04 - then pressing the space bar and so
11:06 - interestingly you'll notice there has
11:08 - five characters whereas High only has
11:12 - two characters look what happens to all
11:13 - the other particles they kind of go down
11:15 - to the bottom so that's an interesting
11:17 - solution another solution especially if
11:19 - the co if the text were something that a
11:21 - user typed in is that you might think
11:23 - about just looking at okay I have a
11:25 - certain number of particles right now
11:27 - now I get new text let calculate how
11:29 - many particles I need for that if it's
11:32 - more than the number I have add the
11:34 - difference if it's less then delete the
11:37 - difference then set all the remaining
11:39 - particles to a new location okay so
11:41 - that's great to see uh let's look at uh
11:44 - Joseph cuchar changes to make oh I love
11:47 - this one to make the vehicles visible as
11:50 - polygons this is a really and actually
11:52 - this is super oops oh okay but there is
11:54 - a version I can look at this is
11:56 - incredibly relevant to a coding
11:58 - challenge I want to do today which is
12:00 - look at this this is the same idea but
12:02 - instead of the letter forms being made
12:06 - up of circles particles white things
12:10 - these are actually now polygons that are
12:13 - triang that are you triangles actually
12:15 - looks like uh triangle strips in a way
12:17 - that the the geometry is made up by a
12:19 - lot of triangles and this is something I
12:21 - actually want to cover later is how to
12:23 - build geometry out of triangles complex
12:27 - geometry out of triangle pieces and then
12:28 - how texture those from an image so we'll
12:31 - look at that uh later today and let's
12:33 - see what else do I got here uh gawa
12:36 - variant word morphing and rainbow
12:38 - colors oo oh look at this ah so this is
12:42 - great so this there's a different font
12:44 - there's some rainbow colors and now I
12:46 - can also put the text in like hello
12:49 - YouTube and there we go oh and look at
12:52 - this let me just delete the E whoa look
12:54 - at this that is really cool I love this
12:59 - um so great and then I can change the
13:01 - dot size and I can change the
13:05 - resolution so uh can we really see this
13:08 - though with that so
13:10 - resolution oh that makes it even more I
13:12 - want to make it like less yeah so you
13:14 - can see that resolution variable is a
13:15 - variable that kind of how many dots per
13:18 - spot along the path and with 0.01 you
13:20 - can barely see the text with 0 one you
13:23 - can see it more oh this is wonderful
13:24 - wonderful work okay uh which so that's
13:28 - the other thing want to mention so if
13:29 - you're doing stuff and you want to share
13:31 - it uh in a place that people can find it
13:34 - share it with me um this is a system for
13:36 - doing that now now at some point it
13:37 - might be nice to have an even more
13:39 - elaborate system um but I'm boy this mug
13:42 - it's the invisible mug what is in this
13:45 - invisible
13:49 - mug you can all try to guess today okay
13:53 - so that's what I've got to
13:55 - say as always I always forget the this
13:58 - dot this do
14:08 - all right just getting got to get the
14:10 - body moving here to get some energy
14:12 - going uh okay what else do I have uh to
14:15 - talk about uh okay uh so I talked about
14:18 - these two things aha store coming soon I
14:20 - have had
14:22 - requests I forgot for uh coding train
14:27 - related merchandise
14:29 - so uh this is a t-shirt sample that I
14:31 - received and there's a bunch of
14:32 - variations of that and some mugs maybe
14:34 - some other things eventually too so for
14:36 - those of you who are interested I will
14:38 - be uh sending out a link to a store
14:41 - where you can buy this sort of stuff if
14:42 - you are European or not just European
14:44 - but not from the United States um the
14:48 - the the system that I'm using currently
14:50 - is the shipping is a little bit
14:51 - expensive to outside the United States
14:52 - so um I'm working on also an alternative
14:55 - for people who are maybe not in the
14:57 - United States so uh but if if you have
14:59 - ideas uh the reason I mentioned European
15:01 - is just because I noticed it was
15:02 - particularly expensive to some European
15:04 - countries so um if you um and I'm also
15:08 - thinking like maybe I can use these for
15:10 - prizes and that type of thing at some
15:12 - point if I do some type of so if you
15:14 - have ideas for that I'd love to give
15:15 - some of those things away as a thank you
15:17 - to this wonderful warm and friendly and
15:19 - supportive audience who somehow tunes
15:21 - into this okay uh all right so that's
15:24 - another announcement I have aha okay now
15:27 - for all of you
15:29 - who have been asking me to do some
15:32 - tutorials that relate to machine
15:34 - learning the
15:35 - time has
15:37 - come I uh work at this uh place called
15:43 - NYU and uh I am currently teaching a
15:46 - class about uh simulation of natural
15:49 - systems in motion and animation code
15:51 - stuff based on the nature of code book
15:53 - that I've talked about probably a number
15:54 - of times but I am doing that the course
15:57 - uh restarts again
15:59 - um about two weeks from now so I'm going
16:02 - to go to github.com
16:04 - shiftman I'm going to show you two
16:06 - things number one uh
16:09 - repositories um I'm looking for ah this
16:13 - so I have a I have been working on a
16:16 - list of topics for a syllabus that's
16:18 - going to happen in the second half and
16:20 - as I part of the way that I do this is I
16:22 - kind of spend all week working on stuff
16:24 - here at this at NYU and then on Fridays
16:27 - I come and make videos about stuff that
16:28 - I was working on during the week so um
16:30 - this is coming if we look at the uh
16:33 - syllabus this is my current plan um week
16:36 - one I want to kind of just get started
16:40 - uh with
16:42 - um kind of thinking about algorithms and
16:44 - efficiency and maybe look at some kind
16:46 - of common uh almost computer science uh
16:50 - programming problems as a kind of I'm
16:52 - not sure if I'm going to actually do
16:53 - this the first week but this is what I'm
16:54 - thinking of then I want to uh kind of
16:56 - ease into the topic of machine learning
16:59 - by looking at some classic algorithms
17:01 - for doing two tasks that machine
17:04 - learning algorithms are particularly
17:06 - well suited to do one is classification
17:09 - so hey here's an image of a cat here's
17:10 - an image of a dog which or actually more
17:14 - like here's 100 images of a cat now
17:16 - here's here's a 100 images of a dog and
17:18 - maybe more like a million images of a
17:20 - cat or 100 million images of a cat would
17:21 - be better and then now here's a new
17:23 - image which one do you think it is
17:24 - that's
17:25 - classification um uh and then uh
17:28 - regression which is a technique um
17:30 - similar to classification but more about
17:32 - predicting it can be there's these are
17:34 - broad topics but I want to look at the
17:36 - the idea of regression as a prediction
17:38 - so instead of classifying it's either a
17:41 - or b here's a set of properties could I
17:44 - predict what um you know what the what
17:46 - the price of a house is going to be
17:48 - based on a set of inputs that type of
17:49 - thing the kind of classic or predict a
17:51 - stock price if I look at a time series
17:53 - so um after that actually you know I
17:55 - think I want to do this in another order
17:56 - I'm going to look at genetic algorithms
17:57 - which I've actually done a whole video
17:59 - series about already so this is one
18:01 - topic that I've actually done stuff
18:02 - about but I want to add to the genetic
18:03 - algorithms examples in particular by
18:06 - looking at evolving steering agents so
18:09 - Vehicles agents particles voids things
18:13 - that like move around the screen based
18:14 - on a set of rules how can we give them a
18:16 - virtual DNA and evolve them so that's a
18:18 - week that I'll do some videos about then
18:20 - I want to look at um neural networks in
18:22 - some ways from scratch like what are the
18:24 - basic mechanics of them a simple
18:26 - perceptron which is the simplest
18:29 - um neural network I want to look at um
18:32 - you know well what can it do what can it
18:34 - not do what happens if instead of we
18:35 - have this sort of like single neuron
18:37 - that has some inputs and an output what
18:38 - if we add a bunch of them together and
18:40 - kind of look at the mechanics of it and
18:42 - do some simple demonstrations but then
18:45 - ultimately the idea is once I get
18:47 - through that um what I would like to do
18:51 - is um uh move to using high so to get
18:54 - sort of like a foundation of
18:56 - understanding of how these things work
18:57 - but we're uh you know there's not
18:59 - realistic to
19:01 - implement super uh uh sophisticated uh
19:05 - neural network systems that you can
19:06 - train and do all sorts of stuff with
19:08 - that are already implemented and done in
19:09 - kind of a lot of Open Source libraries
19:11 - and tools so I might look at using
19:12 - something like tensor flow or other I'm
19:14 - I'm I'm happy to take your suggestions
19:16 - of other Frameworks for doing machine
19:18 - learning that we can make some simple
19:20 - examples reinforcement learning is
19:21 - something I want to take a really um big
19:24 - look at there's a wonderful example that
19:25 - was just uh here oh shoot this is a
19:29 - problem with using a computer in these
19:30 - live streams that doesn't uh steering
19:34 - wait I know self I'm just going to
19:35 - Google this driving car in the browser a
19:37 - Yan hum humon I'm not sure I'm not
19:39 - saying the the name correctly recently
19:41 - came out
19:43 - with uh it's actually on the here we go
19:47 - um this is a uh wonderful demonstration
19:51 - of this so this looks a lot like some of
19:54 - my examples in that there's a steering
19:56 - agent moving around the space and we
19:58 - could design a system using built on top
20:00 - of Craig Reynolds steering behaviors you
20:01 - know that I've gone through seek arrive
20:04 - path following flow field following and
20:06 - Reynold has a behavior that's obstacle
20:07 - avoidance which is very much a top
20:10 - down uh this is how you avoid obstacles
20:13 - let me give the instructions to the
20:15 - vehicle as opposed to a vehicle that's
20:17 - moving around the space it just sort of
20:19 - knows it's able to like just see is an
20:21 - obstacle in front or behind or to the
20:22 - left and the right and it's going to
20:23 - make a guess on what to do next and it's
20:26 - going to get some reinforcements like
20:28 - here's a little piece of cheese vehicle
20:30 - if you do a good job but if you don't do
20:32 - a good job like little electric shock so
20:34 - reinforcement learning kind of reward
20:36 - based system that over time uh an
20:39 - autonomous agent could learn how to and
20:41 - and universe is a open- source uh system
20:44 - that uses re that uses reinforcement
20:46 - learning to train an agent or a bot to
20:49 - play a video game so these are some
20:50 - things that I want to look
20:52 - at okay thanks for the talk code now
20:56 - it's coming don't watch the lot just
20:58 - watch the released videos if you just
21:00 - want the codee part that's my suggestion
21:01 - to you I don't know maybe I shouldn't
21:03 - talk so much what else am I supposed to
21:05 - do oh
21:12 - dance some new
21:16 - music oh I should play the uh kitten
21:20 - song uh okay where am I is
21:24 - there yes kittens thank you very much
21:27 - kittens and rainbows and um so then I
21:29 - also want to look at um uh certain kinds
21:33 - of so-called deep learning systems that
21:35 - are Recent research to work with images
21:37 - and text uh
21:39 - convolution and recurrent uh neural
21:43 - networks if only I had the graph of the
21:45 - live audience I should really put that
21:47 - up I should have like almost like I've
21:49 - got like a you know I'm a QVC
21:51 - salesperson or something with that like
21:53 - live graph of whether people are calling
21:55 - in to buy the product or not I don't
21:57 - know what I'm talking about have that
21:59 - the YouTube viewers are all dropping off
22:02 - now okay so that's coming uh any
22:05 - suggestions ideas thoughts about this uh
22:07 - file an issue on this repository send me
22:10 - a tweet I'm looking for examples I'm
22:12 - looking for ways to do this in a simple
22:14 - accessible way um that you can pull and
22:18 - also work with tools like creative
22:20 - coding tools like processing and P5 okay
22:22 - the other thing I'll just mention though
22:24 - related to this and I've had so much
22:26 - help with this that I I would be remiss
22:27 - not to mention it is under uh coding
22:30 - train organization there is also a
22:32 - machine learning repo that is just
22:34 - somebody made this is quite nice thank
22:37 - you um that uh has a lot of different
22:41 - resources and things that I have been
22:43 - compiling and honestly there is the you
22:46 - know just to mention this I this uh is
22:49 - also this link has a ton of resources at
22:52 - at it and even more than I have here so
22:54 - this is stuff that I'm thinking of
22:55 - looking at and things that I've been
22:56 - compiling okay oh I wanted to put
22:59 - this algorithm in the syllabus somewhere
23:01 - anyway
23:03 - uh okay
23:05 - um so let's see how am I doing here how
23:07 - am I doing store I mentioned machine
23:09 - learning syllabus oh okay we're good I
23:11 - got through all this nonsense now it's
23:13 - time
23:21 - for that doesn't work it doesn't work
23:23 - the way that I wanted to but I'm going
23:24 - to work on this okay uh work from the
23:26 - community
23:32 - okay so I've had a lot of people submit
23:35 - things to me in the last couple days and
23:37 - I'm I I I am I at 30 minutes yet no I'm
23:40 - not at 30 minutes so that's okay I I if
23:43 - so but I'm going to try to just click
23:44 - through these um so I can start getting
23:46 - to the tutorial stuff because I know a
23:47 - lot of people are interested in that but
23:48 - I want to show some of these wonderful
23:50 - projects uh here is one uh made by
23:53 - Jerome Martinez called The Maze Runner
23:56 - um this looks like what are the oh
23:57 - themes look at this can I have a little
23:59 - um I love this uh different color themes
24:01 - I can change the size uh and it looks
24:05 - like it is um uh this is now running in
24:08 - p5js wonderful so this looks like quite
24:10 - related to some making a maze and
24:12 - solving the maze at the same time great
24:14 - work thank you uh let's now look at uh
24:18 - uh Arno has submitted a couple projects
24:20 - that are for uh kids um this is a web
24:23 - app to help your child Express uh his or
24:26 - her feelings and find a solution with
24:27 - you so let's look at it in French
24:30 - come
24:33 - uh can you hear that music I love it uh
24:38 - I think I'm supposed to oh yeah I am
24:40 - afraid per afraid right very
24:48 - afraid KES how can I help you right yes
24:53 - uh sleep I need sleep this is awesome
24:56 - okay I'm about to try this with my own
24:57 - kids later I keep
24:59 - and then uh Arno whoops has another
25:01 - project about uh teaching kids to tell
25:03 - time uh which is really I think a
25:06 - exciting uh Innovative use of some
25:08 - interface stuff here so I can like turn
25:10 - the minutes off and off um I can change
25:13 - the hours and the minutes and I can try
25:14 - to guess I guess is the idea so it's
25:16 - hidden um but now I can show the time to
25:18 - find my answer great work um uh lost GH
25:23 - bear somebody in the slack Channel let
25:25 - me know if that's working and I'll show
25:26 - it if it is if it got fixed
25:28 - let's go to Taco Bank on Twitter this is
25:31 - a wonderful uh this is what one of the
25:33 - things that I love about what's
25:34 - happening on Twitter and Instagram and
25:36 - um a lot of artists are sharing short
25:38 - little uh animated Gifts of simple
25:40 - algorithms and this from what I
25:42 - understand is made only with The Arc
25:44 - function in processing so uh I love
25:47 - seeing stuff like this uh so if you make
25:49 - stuff like this and share your work this
25:51 - way please uh tag me on Twitter so I can
25:52 - take a look at shiffman um so this is uh
25:56 - Taco Bank on Twitter um okay uh now um
26:00 - ala submitted a bunch of code pin pens
26:04 - um this is a really nice use of
26:06 - oscillating oscillating simple harmonic
26:08 - motion um there's so much Beauty you can
26:11 - find in just the simple sine wave
26:13 - through geometry design layering
26:15 - offsetting period frequency um so uh
26:19 - this great great work I love to see this
26:20 - kind of stuff uh let's look at this one
26:24 - uh this is oh yeah this is
26:27 - me this spiraling parrot got to love
26:30 - that all these links by the way when
26:32 - this video gets archived links to all
26:33 - these will be in the description and uh
26:37 - here's another one oh another this is
26:38 - really so what I love about this is we
26:41 - can see the classic sine wave pattern
26:43 - that we're used to but now we have these
26:46 - uh circles that are really just moving
26:48 - up and down along a single axis with
26:50 - harmonic motion we can see the
26:52 - relationship between the sort the the
26:54 - graph of the sine wave and the harmonic
26:56 - motion of a single um
26:58 - uh a single object moving up and down or
27:00 - left and right great work okay uh I'm
27:04 - seeing in the chat that lost GH Bears
27:06 - project is working so let's try this now
27:09 - one thing I'm worried about so I have a
27:12 - problem I'm gonna I'm going to do this
27:13 - I'm going to throw a caution to the wind
27:15 - but if if somebody submits to me a
27:17 - project that uses uh audio in it and the
27:21 - audio is not something that I have a
27:22 - license to use on the YouTube channel I
27:24 - will get a copyright notice in the video
27:26 - and the live stream so I just have to be
27:28 - careful about that but I'm going to
27:30 - throw a caution to the wind
27:32 - here oh it's this is using the
27:34 - microphone so it's no problem uh hello
27:38 - hello hello hello hello oh I
27:42 - should as always I always
27:47 - forget oh wait this is lost GH Bears
27:51 - project and this is lost G spar's kitten
27:54 - sonse
27:58 - yes kittens thank you very much kittens
28:00 - and rainbows and cupcakes notice that
28:03 - look what I get I'm really losing my
28:11 - [Music]
28:17 - [Music]
28:24 - mind aerobics is this like a this is
28:26 - like an exercise show okay okay so thank
28:29 - you um thank you lost GH bear this is
28:32 - great if you this one of the wonderful
28:33 - things you can do with P5 uh is u in the
28:37 - browser is get microphone input
28:39 - visualize that input uh frequency
28:41 - analysis volume analysis that type of
28:43 - thing um there's no audio oh were you
28:46 - not hearing that
28:48 - audio oh that's so funny did you not
28:51 - hear the song uh okay I don't know
28:55 - what's going
28:56 - on uh okay um I'm going
28:59 - to keep going uh and then uh this is uh
29:05 - from Robin who writes I also I love
29:07 - harsh feedback on this one it's supposed
29:09 - to be a dynamic logo for website
29:12 - usage um once design is approved it will
29:15 - be adapted to fit inside a small Dom
29:17 - element powered by a footer okay so
29:19 - let's take a look at it um and those of
29:21 - you in the chat or I don't know if uh um
29:25 - how Robin you want to receive uh
29:26 - feedback but so this is a um an
29:29 - interesting use of computational design
29:32 - which is to say I want to make a logo
29:35 - that is dynamic it's procedural it's
29:36 - maybe different every time or it's
29:38 - animated and so um there's a lot of
29:40 - examples of this and uh actually if
29:42 - you're interested in this topic a
29:44 - reference that I would really recommend
29:46 - is um what's it called programming
29:49 - Design
29:50 - Systems by run Madson and I'd love to
29:53 - have run as a guest sometime uh ah this
29:57 - is the class I want the book here it is
29:59 - programming Design Systems uh run I
30:02 - think I probably mentioned this before
30:03 - is writing a free digital book that
30:05 - teaches a practical introduction to the
30:07 - to the new foundations of graphic design
30:09 - so foundations of graph graphic design
30:11 - through the lens of computation
30:13 - algorithms code and uh you know even if
30:16 - I were just we we we saw ala's project
30:19 - about um where are the chapters about um
30:23 - I think there's one I thought there's
30:25 - one about the sine waves somewhere here
30:28 - a chapter but anyway I'll I'll let you
30:30 - guys dig into this more yourself okay
30:34 - uh okay here we go now uh ah so these
30:39 - are some things so the be nice equation
30:41 - which I'm now officially calling it The
30:42 - be nice equation because by you know we
30:45 - could solve all a lot of the world's
30:47 - problems if we could actually just write
30:49 - an equation that would help people
30:51 - understand how to be nice maybe that
30:53 - equation will do that uh whoops this is
30:56 - a uh so this was the um fractal
31:00 - spirograph
31:03 - um there's a there's a trash can over
31:05 - there it didn't go in it but this is the
31:07 - uh fractal spirograph um belly spice on
31:10 - the fractal spirograph code challenge
31:11 - that I did and you can see here that
31:14 - what I love about this is it's the same
31:16 - idea but has a lot of now an interface
31:18 - that I can change things so let's play
31:19 - around let's put the circles inside each
31:21 - other let's add a bunch more children uh
31:24 - let's change this value um I don't know
31:27 - what this is oh my let's do this I don't
31:28 - know what I'm doing here um let's change
31:30 - the size or the speed I'm doing a
31:32 - terrible job uh show
31:35 - circles show drawing Point shows points
31:38 - look at this path color so pause
31:41 - animation so I kind of messed it up
31:42 - let's refresh it just to uh children I
31:45 - thought if I get more and more children
31:48 - yeah there we go so um so anyway so I
31:50 - encourage you this is a this is a lovely
31:51 - thing that I this is a thing that I love
31:53 - to see which is taking an existing
31:55 - system evaluating what are all the
31:57 - parameters of that system and then
31:59 - making an interface to control all those
32:00 - parameters to come up with a kind of
32:02 - design idea and this is a really nice
32:04 - example of that uh so thank you to uh
32:08 - habl wgq on
32:11 - GitHub uh and uh this is from gako this
32:15 - is this is this hearkens back I like
32:18 - really I these
32:22 - tissues it's new stick here uh tissue
32:24 - stick which is probably not good um
32:28 - ah I didn't answer the question so uh
32:31 - I'm gonna I'm going to ask lost GH
32:32 - Bear's question in a second so um this
32:35 - is uh I don't know if this is built oh
32:37 - it does say it's um based on my example
32:39 - but last fall the course that I
32:44 - um the course that I taught at NYU and
32:46 - did a lot of videos about involved
32:48 - programming with text so what are some
32:51 - algorithms and systems to generate text
32:53 - and this is a a technique called a
32:58 - uh American poet Jackson mllo and the
33:00 - way that it works is you get a seed
33:02 - phrase and it uh picks up words based on
33:06 - the letters in the seed phrase from the
33:07 - seed text and generates a poem out of
33:09 - that so I can hit go and I can refresh
33:11 - and I can get different ones so um this
33:14 - is a wonderful uh what I like about this
33:15 - is just the kind of simple interface and
33:17 - design of it the playfulness of the
33:19 - algorithm and so this great to see so I
33:21 - encourage you to check out some of those
33:23 - videos um and check out this work by uh
33:26 - gako on uh GI
33:28 - okay um I'm I'm done with my community
33:31 - set but I but I forgot that um uh that a
33:36 - lost GH bear had a question so if if you
33:38 - recall back to uh this particular
33:42 - visualization uh of microphone uh lost
33:44 - GH bear asks can you give me any advice
33:48 - of new of new ways to visualize in
33:50 - addition to what is there so first I
33:52 - would just like to throw that question
33:53 - out to the chat so those of you who have
33:55 - ideas of different um things that lost
33:57 - GH May lost GH bear might try please uh
34:01 - write those in the chat and hopefully
34:02 - lost GH bear can read along I would say
34:05 - you
34:06 - know do I have any idea here's the thing
34:10 - to give feedback on a project I think as
34:13 - often it's too easy to say you know what
34:15 - I think is a cool idea why don't you try
34:17 - to do it this way and so you know what I
34:19 - would kind of more uh say in terms of
34:22 - thinking about critique and feedback on
34:24 - a project is more to kind of think about
34:25 - asking questions like well what is it
34:28 - that you're trying to make and what is
34:30 - it that you're trying to express and uh
34:33 - is the idea to
34:35 - um to create you know what's the context
34:38 - here who's the audience uh and so I
34:40 - would think through those kind of
34:41 - details a bit more to try to inform some
34:43 - of your design decisions at the same
34:45 - time I think there's a lot of value in
34:47 - just kind of experimenting so go through
34:49 - and find a lot of examples that you like
34:52 - like the fractal spirograph or the pein
34:54 - noise terrain and look at what the
34:56 - parameters of those systems are and then
34:58 - try to plug those parameters into um
35:02 - into the volume of the sound or the
35:05 - frequency different the frequency array
35:07 - of sounds and see what kind of results
35:09 - you get so I think on the one hand it's
35:11 - thinking about context audience meaning
35:14 - like what what are you trying to express
35:16 - with this project and who who is it for
35:18 - um which might give you some more
35:19 - specificity in how you design but also
35:22 - simply um just playfulness and like just
35:24 - trying out a lot of different visual
35:25 - ideas and you've done that here the are
35:27 - some you know the the graph is quite
35:29 - standard but look for some non-standard
35:30 - examples okay uh so I'm just
35:34 - checking uh o my I'm getting a message
35:38 - from that my NES classic is arriving
35:40 - soon anyway um I'm just checking here
35:44 - because I want to make sure there's no
35:45 - urgent messages on my phone which there
35:47 - aren't okay so now we're really ready to
35:49 - get started with what today is for it is
35:52 - 11:30 it's 35 minutes so I like the
35:55 - introductory stuff to not be any longer
35:57 - longer than 30 minutes um which I um
36:00 - ideally like 15 or 20 minutes so I
36:02 - apologize for that going on a little
36:03 - long
36:07 - today um okay now let's see what we can
36:12 - do so I am going
36:15 - to
36:17 - um I'm looking here
36:21 - [Music]
36:23 - okay oh that's very loud
36:28 - I love
36:30 - that okay so let me see this is now I'm
36:33 - I'm to here so this this is what I want
36:35 - to do oh first of all
36:39 - okay people are talking in the hallway I
36:41 - can hear them uh I want to pick up with
36:46 - uh oops this camera is
36:49 - off a topic that I started last
36:52 - yesterday evening this crazy person
36:55 - whiteboard because yesterday in
36:57 - yesterday's live
36:59 - stream I focused on uh the general the
37:03 - broad topic of physics engines what is a
37:06 - physics engine why would you use a
37:08 - physics engine what kind of features do
37:09 - physics engines have and what are some
37:11 - possible physics engines that work in
37:13 - different contexts whether it's a
37:15 - programming language or running
37:16 - something in the browser that sort of
37:17 - thing so uh I did uh uh and then I um
37:21 - hope this camera is now
37:25 - off uh hold on a sec and then
37:29 - then then if I come back over here I
37:32 - made um an example so let's pull up that
37:35 - example from
37:38 - yesterday is it actually I already have
37:40 - terminal here uh and I can probably just
37:44 - run the server again and I can go
37:50 - to
37:53 - um so if someone wants to tweet at Leah
37:58 - Brew I shouldn't say this cuz now
38:00 - everybody's going to do it I was just
38:02 - going to say the um the creator of
38:04 - matter.js which is a physics engine was
38:06 - watching some of the stream yesterday
38:08 - and sent me some excellent uh advice uh
38:11 - which I'm going to read some messages uh
38:14 - that clarified a few things so this is
38:15 - the example that I built yesterday which
38:18 - is a simple example using the physics
38:21 - engine matter.js to handle
38:24 - collisions and also the the the physics
38:27 - of the
38:28 - system and uh um and the and rendering
38:32 - with p5js so what I want to do is
38:34 - continue this
38:36 - now okay let's see if I'm
38:39 - back uh let's see I hopefully I'm
38:42 - back
38:47 - uh okay so it says to me that I'm
38:50 - streaming so I'm going to in assume I'm
38:51 - back now I don't remember where I left
38:53 - off I should have used I should have
38:56 - used that moment for a PE break
38:59 - a P5
39:01 - Break um okay so one thing I want to do
39:04 - to this example is uh I want to improve
39:08 - it a little bit so I need to leave the
39:10 - code AS then I want to make some
39:12 - comments about it so I I need to leave
39:14 - the I want to um I want to leave the
39:16 - code AS is ah okay so I'm going to make
39:20 - a new folder matter JS I'm going to put
39:23 - this in here I'm going to call this uh
39:28 - 01 and then I'm GNA
39:31 - say O2 just going to do this so I I
39:35 - don't think this will get included in a
39:37 - so where where where how am I like I
39:39 - need to move this this can be over here
39:42 - okay so one thing I want to do is I want
39:45 - to create a
39:48 - um I'm just going to make a boundary
39:52 - object which is a little bit silly
39:55 - because
39:59 - um I could
40:03 - um I'm going to make a boundary object
40:06 - which is really just a um the same thing
40:11 - as one of the Box objects but with is
40:14 - static equal
40:17 - true uh I'm trying to think if this
40:19 - really this is UN necessary but I'm
40:21 - going to do it
40:23 - anyway because
40:26 - um uh because and
40:28 - so uh everything else can stay the same
40:32 - whoops this did not get saved where I
40:34 - thought it would get saved oh I'm in the
40:35 - wrong place uh I want to ah shoot sorry
40:39 - everybody I moved things
40:41 - around um don't say so hold on hold on
40:44 - hold
40:45 - on
40:47 - um if I go here whoa and open the
40:52 - console and move this out a little bit
40:54 - further here what What's happen
40:57 - happened ah what a
41:02 - disaster um ah I see this is where I
41:06 - want to
41:09 - be oh I made a new directory by accident
41:12 - of course of course okay don't worry
41:14 - everything's going to be everything's
41:16 - going to be back in a minute I just need
41:19 - to get myself set up here the way that I
41:21 - want to be set
41:23 - up uh hit
41:25 - refresh there we go I've got two
41:28 - examples
41:30 - going I want to then go to the desktop
41:33 - and I want to look at uh forget about
41:37 - this for a second and then I want to
41:39 - open up this in atom almost there and I
41:42 - want to go to the second one uh here um
41:46 - okay so what I want to do I just want to
41:49 - I want to improve on this example but
41:50 - there's a um so I'm going to O2 but
41:54 - there's a big there's a big problem with
41:55 - this example which is that I kind of
41:57 - hardcoded the floor so hard I what I
42:00 - want to do is be able to um adjust the
42:04 - uh adjust how the floor is give it an
42:07 - angle that type of thing without
42:10 - um without having to uh hard code and
42:14 - change it in a bunch of places so
42:15 - there's two ways I could do this number
42:18 - one is I could um I could just make the
42:22 - idea of a box more flexible and it could
42:25 - have static boxes and movable boxes but
42:27 - ultimately I kind of want to treat these
42:28 - things totally differently because I
42:29 - might this might change into something
42:31 - else later so I'm going to have some
42:33 - redundancy I'm not going to use this
42:35 - idea of inheritance and I'm just going
42:37 - to do save as in uh matter Basics I'm
42:41 - going to make a file called boundary. JS
42:44 - and I'm I'm GNA this won't be its own
42:47 - tutorial videos I'm just going to do
42:48 - this really kind of quickly it'll just
42:50 - be here in the live stream for you live
42:52 - viewers um I'm going to make a file
42:54 - called boundary. Js
42:57 - actually you know
43:02 - what never mind we're going to make a
43:05 - we're going to do we're going to do a
43:06 - part two here because this is worth what
43:08 - I'm going to do is change these into
43:10 - circles and change the boundaries
43:14 - okay why am I doing something that is a
43:16 - tutorial that I'm saying is not a
43:18 - tutorial okay so I'm in matter Basics
43:23 - okay ready everybody
43:28 - so this tutorial this particular video
43:31 - this is yes this is a continuation of
43:33 - what I did yesterday so I apologize to
43:36 - those of you who didn't watch
43:37 - yesterday's live stream it is archived
43:39 - and available in my channel you could go
43:41 - back and watch it but in the end all of
43:43 - these things that I'm doing will be
43:45 - edited into a sequence of shorter
43:47 - tutorial videos so for now just say
43:48 - Enjoy watch along you can go back and
43:50 - fill in the missing pieces later
43:54 - okay um because there's a bunch of
43:56 - things that I want to do and then I
43:58 - think um yeah
44:02 - okay hello welcome to a second video
44:05 - about using matter.js so in the previous
44:07 - video I kind of ended with this which is
44:09 - just a simple demonstration of falling
44:12 - rectangles landing on a ground so I want
44:14 - to do two things in this video to expand
44:16 - on our sort of knowledge and sense of
44:18 - what matter.js can do I want to change
44:20 - these falling rectangles into circles
44:24 - and I want to change the way that the
44:26 - boundary works
44:27 - in that I want to make the this bottom
44:31 - boundary I want to be able to put it as
44:32 - an angle and maybe put a bunch of them
44:33 - so there's one of the matter.js examples
44:35 - is essentially this let's just go to the
44:37 - website because I'm going to need I'm
44:39 - going to need the documents open for the
44:41 - documentation open so at some point here
44:44 - uh um one will come let's wait for
44:49 - it there no that's not
44:51 - it maybe that was it maybe it's not
44:54 - there look at all these demonstrations
44:56 - and there it is this one one I want to
44:57 - kind of make this that one do you see
44:58 - that one so let's um so what do I need
45:01 - to do so first of all in I did this sort
45:03 - of terrible thing where this bottom
45:05 - thing which I'm calling a boundary or
45:07 - the floor was kind of hardcoded so let's
45:09 - fix that um and there's going to be some
45:12 - redundancy here but I'm going to live
45:13 - with the redundancy I'm going to make
45:15 - another Javascript file called boundary.
45:17 - JS that's in the right place and then
45:20 - I'm not going to forget this time in
45:22 - index.html I'm going to add another
45:24 - reference to uh boundary.
45:28 - JS now what I want to do is this ground
45:32 - variable instead of creating the body
45:35 - right here I want to say new boundary
45:37 - which is my own thing and uh I'm going
45:42 - to use those same arguments 200 height
45:45 - uh and I'm going to get rid of options
45:47 - and then what I'm going to
45:48 - add under options is
45:54 - um in the boundary object
45:57 - whoops where is that boundary object oh
45:59 - it's says box here wait wait wait wait
46:01 - oh yeah box this needs to say
46:03 - boundary and I'm going to add is
46:08 - static true so by definition this idea
46:11 - of a boundary I mean boundary is
46:12 - probably the wrong word but is going to
46:14 - be something that's doesn't move that's
46:15 - inflexible that's in one place in the
46:17 - code okay so now uh I should then be
46:22 - able to say and let's make it a
46:24 - different color uh the the boxes are
46:28 - kind of like a white outline and a gray
46:30 - interior just so we see that it's
46:32 - something different let's give it a
46:34 - white outline and a uh I know I'm like
46:37 - afraid to use color a uh a black dark a
46:42 - black interior okay so everything should
46:45 - be the same right now I'm going to
46:47 - change things about boxes versus
46:48 - boundaries but now if I make the ground
46:51 - a boundary then I should be able to just
46:53 - say I don't need any of this down here I
46:55 - can just say ground. sh so if I ever
46:57 - change the way the boundary works then
47:00 - um I don't have to worry about that so
47:01 - let's see so this still works exactly
47:05 - the same way um and you know I'm I'm
47:08 - like annoyed with the fact that the
47:09 - outline is bleeding off the edge here so
47:12 - I'm going to kind of For No Good Reason
47:15 - uh change this to like you know what I'm
47:17 - actually going to do is I'm going to go
47:18 - into boundary and not have it have a
47:20 - stroke so I'm going to say um I'm not
47:22 - going to have any outline to that color
47:23 - I'm going to say no stroke okay there we
47:25 - go this is more like what I want okay so
47:27 - we're in good shape now here's the thing
47:28 - I want to demonstrate a problem that
47:29 - happened in the previous video let's go
47:33 - to this boundary uh where I'm creating
47:36 - it and let's it has a height right now
47:38 - of 100 pixels it's very thick I'm going
47:40 - to give it a height of like five
47:42 - pixels now you can see it's there
47:45 - there's like a boundary there and let's
47:47 - just see
47:49 - now now it's actually working just fine
47:53 - so we're lucky here one of the things I
47:54 - did yesterday was add the update upate
47:57 - time step in my draw Loop so there's
48:00 - sort of more up more physics updates per
48:02 - time that I draw it but I have a feeling
48:05 - that if I go back to what I did
48:07 - yesterday which is just tell the engine
48:08 - to run in the background rather than
48:10 - update it manually we might see the
48:12 - problem I had
48:13 - yesterday uh let's go back here okay
48:16 - let's see can I get this oh there we go
48:19 - so some of them disappear because that
48:20 - boundary is not very thick they're kind
48:22 - of like the physics gets confused and
48:24 - they're skipping over it so uh leab bruy
48:26 - uh
48:28 - the creator of matter.js sent me a
48:30 - message saying there's a so in the in
48:33 - engine. update that update function
48:35 - there's a correction
48:39 - fa okay I don't know what's going on
48:41 - today I used to have this problem where
48:43 - the stream the streaming computer uh
48:45 - would would freeze um and get
48:47 - disconnected and that problem I used to
48:49 - have it and just went away so I actually
48:53 - switch I'm using a soft piece of
48:54 - software called wirecast
48:57 - um and um wirecast um uh was it actually
49:02 - was having this problem so I reverted to
49:04 - an older version of wirecast and the
49:06 - problem went away now I'm having a
49:07 - different problem so I went back to the
49:08 - newer version so hopefully um hopefully
49:13 - this is going to be fine but
49:16 - uh okay so
49:19 - um let me I'm going to uh try to figure
49:22 - out where I was before and this will get
49:25 - edited eventually so um
49:30 - okay so okay so let me see here
49:34 - so engine update thank you so I'm going
49:37 - to change right now having engine I'm
49:40 - not going to say engine
49:42 - update in uh in draw I'm going to go
49:45 - back to having um engine. run in setup
49:49 - so this will allow with engine. update
49:51 - I'm manually telling the physics system
49:54 - to move ahead a moment of time every
49:57 - time through draw which is kind of good
49:59 - it's like move ahead draw move ahead
50:00 - draw with engine. run it's going to run
50:02 - on its own behind the scenes separate
50:04 - from how I'm drawing you'll actually
50:06 - these stuff appear to be moving faster
50:08 - because there's going to it's going to
50:09 - the engine's going to be running at 60
50:11 - frames per second where my actual draw
50:13 - Loop might be less so let me just do
50:15 - that still works fine but you know I
50:18 - don't know what's better I I anyway I
50:20 - feel like I have more control but what I
50:21 - want to show you is the issue is if I
50:24 - now change the um that boundary at the
50:27 - bottom to something like it's only like
50:29 - uh three
50:31 - pixels you can see that some stuff is
50:33 - working but let me go up here look
50:35 - sometimes the the rectangles like fall
50:38 - through the bottom did you see that one
50:39 - oh I was standing behind it it fell
50:41 - through let me find it get another one
50:43 - ah come on happen
50:47 - bug there you go you see some of them
50:49 - are falling through so the reason why
50:51 - this is happening is because there
50:53 - aren't enough time steps it the mo it's
50:55 - checking where the object is then it
50:57 - moves it and checks again and it's
50:59 - actually jumped over the obstacle so um
51:02 - there are there's a number of ways we
51:04 - could fix this number one the way I
51:05 - fixed it is just like okay just make the
51:07 - ground
51:08 - thicker and now this problem can't
51:10 - happen um and so that's one way of of
51:13 - fixing it um but there's actually um
51:17 - there's I'm going to put engine. update
51:19 - back into the draw
51:21 - Loop if you look in the documentation
51:23 - which I showed yesterday there are uh
51:25 - variables here there are arguments you
51:27 - can pass through about time steps and
51:29 - leabu uh on Twitter the creator of the
51:32 - matter.js library wrote to me and said
51:35 - the issue of skipping is best solved
51:37 - like you did by using thicker floor or a
51:40 - smaller time step or multiple updates
51:42 - per step so that's something you can do
51:44 - but uh leabu writes there is a feature
51:47 - called continuous collisions that I am
51:49 - working on that solves the issue for any
51:51 - time step so that's coming forward so
51:53 - that was great to hear that it's so
51:54 - wonderful to like do a tutorial about a
51:56 - physics engine and have the creator of
51:58 - the open source Library uh weigh in and
52:01 - provide feedback so thank you for that
52:02 - leabu on Twitter okay so now let's keep
52:04 - going with this the next thing I want to
52:06 - demonstrate is I want to see if I can
52:08 - turn that obstacle at an angle so uh
52:12 - let's look at the boundary object so
52:14 - this is where I'm creating the re
52:16 - rectangle object and it's the variables
52:18 - in this do body so what I'm just going
52:20 - to do is I'm going to say
52:23 - console.log this. body let's look at
52:28 - what some of the properties are and
52:29 - here's a property angle so this leads me
52:32 - to believe that I could most likely just
52:34 - set the angle to a value and it would
52:36 - change it so let's try that let's try
52:39 - saying something like this. angle equals
52:42 - Pi ided 4 which is about 45 degrees in
52:46 - radians right pi divided two is 90
52:48 - degrees so let's do that
52:51 - H okay let's see here let's try to look
52:55 - here console
52:57 - log uh angle did that come through ooh
53:03 - zero so why if I set it up here to an
53:08 - angle does it come out as zero down
53:13 - here what if I need to do
53:17 - it
53:20 - uh what if I do it after I add it to the
53:22 - world no what am I missing oh oh ah ah
53:28 - I'm just being silly it's this do body.
53:30 - angle so when I say this do angle this
53:33 - dot this dot this dot when I say this do
53:35 - angle I'm adding a property called angle
53:37 - to my boundary but remember my boundary
53:40 - object is simply a wrapper really for
53:42 - the matter.js body object so I need to
53:45 - say this body angle and that should fix
53:49 - this for me there we go so now we can
53:51 - see oh whoa weird stuff happening crazy
53:55 - weird stuff happening so what what have
53:58 - I missed here am I drawing it the wrong
54:02 - why is this I like what it's doing it's
54:05 - kind of like some
54:06 - weird crazy uh graphic thing that I
54:10 - didn't expect let's think about this I
54:11 - got to debug this what have I done wrong
54:13 - whoa so this is the classic thing that
54:15 - happens with physics libraries where I'm
54:17 - clearly not drawing it the way that the
54:20 - physics Library thinks it is
54:24 - um is it Poss possible that it wants I
54:27 - don't think it wants angles in uh
54:31 - degrees there might be an issue with
54:33 - setting the
54:34 - angle um angle previous angular speed
54:37 - angle Velo oh it has an angular
54:41 - velocity which it really
54:44 - shouldn't so did I give it an angular
54:46 - velocity by accident
54:49 - somehow uh is there an initial angle can
54:51 - I do this is this
54:54 - better if I just set it as an option at
54:57 - the beginning let's try
55:01 - that ah there we go okay so it looks
55:05 - like this is so this is a classic thing
55:07 - that happens with physics engine I
55:09 - violated the laws of physics by just
55:11 - setting its angle directly the only
55:13 - reason its angle would change is if a
55:15 - force some was probably added to it that
55:19 - instigated the oh I'm not looking at the
55:21 - chat um um so so I have a feeling that
55:24 - you just can't set the angle directly ly
55:26 - unless you kind of work with the
55:28 - mechanics of how the physics engine is
55:30 - behind the scenes so if I want to change
55:32 - its angle while it's running I need to
55:33 - maybe apply an angular velocity or an
55:35 - angular Force to have it turn so that's
55:37 - nice to see that that's uh fixed um so
55:40 - let's let's add a bunch of these um
55:43 - let's uh go to sketch. JS and let's say
55:47 - VAR U just call it boundaries as an
55:50 - array uh and what I'm going to do is I'm
55:54 - going to create um
55:57 - in I'm I'm going to create a bunch of
55:59 - them Let's uh let's say um
56:04 - boundaries dot uh boundaries. push so
56:07 - let me just push this
56:10 - boundary now here's the thing I want to
56:13 - give it an angle so let me give it an
56:15 - angle like uh the new boundary also has
56:17 - an angle of pi divided 4 so I can go
56:20 - into the boundary object and uh change
56:24 - add another argument like a for angle
56:28 - and put that in
56:30 - here and so what I want now is to um
56:34 - let's make it like pi divided by let's
56:36 - just you know Pi divide let's just let's
56:39 - just put some values in like 3 so it's
56:41 - at a slight angle let's not make it so
56:44 - tall 50 uh let's um so let's see here
56:48 - and uh let's um and then what I want to
56:52 - do is uh here say four VAR I equal Z I
56:56 - want to render all of the
57:00 - boundaries
57:03 - uh ah I I I for some reason today is the
57:07 - day where my code lines of code are so
57:09 - long and going off the edge uh
57:11 - boundaries. show so let's see what I've
57:13 - got going on here I have some errors
57:14 - sketch. JS line 20 what did I not do
57:17 - correctly here oops I got the semicolon
57:20 - in the wrong
57:21 - place uh matter Dess ooh type of
57:24 - undefined sketch 2 to um oh oh oh I
57:29 - don't need to add it here uh I wonder if
57:32 - that also caused a problem because I
57:33 - added it twice um but because it gets
57:36 - added the thing that I did is added here
57:38 - so I don't need that other that's been a
57:39 - mistake that's been in the code uh and
57:42 - let's see here okay so we can see here
57:43 - this is working I've got a boundary
57:46 - there and so now let's add some other
57:49 - ones let's add another one at uh height
57:52 - divided two uh and let's have it go the
57:55 - other angle
57:56 - the other direction so now and let's
57:58 - make these uh
58:01 - shorter with times 6 or whatever you
58:04 - know I could hard code values in and so
58:06 - now oh and let's move this one
58:09 - over oops let's like move this to 250
58:14 - 150 so you get the idea oh no that's not
58:16 - really right let's turn let's make this
58:18 - one uh you know let's what what's the
58:21 - size let's make this one 300 let's make
58:23 - this one 200 uh let's make this
58:26 - negative3 let's make this I'm sure I
58:28 - could make a clever Loop there we go uh
58:30 - this is kind of what I was looking to do
58:31 - but I want this one now to be much
58:32 - higher up uh which this bottom one uh
58:36 - this is the higher up one uh let's make
58:38 - that even higher up and let's make this
58:40 - uh then just like 20 here okay so you
58:42 - can see what I'm trying to do here I'm
58:44 - trying to create a system like now the
58:46 - friction is quite High look how much the
58:49 - friction is causing these things to stop
58:51 - so let's at least fix that in the
58:53 - boundary the friction is.3 I can't
58:55 - remember is it zero is no friction or a
58:59 - lot of
59:01 - friction that looks like they're sliding
59:03 - more or less I can't tell let's go to
59:05 - the box and also give it no friction
59:09 - there we go so now that's no friction
59:11 - but maybe I want a little bit of
59:13 - friction and maybe I want a little bit
59:14 - of friction on each uh and then uh also
59:18 - what what I said I wanted to do is I
59:19 - wanted to change the rectangles boy
59:21 - there that's really a lot of friction
59:24 - you can play around with those values
59:26 - um I'm going to put zero on the boundary
59:32 - um right look at all that
59:35 - friction uh oops I'm uh really was it
59:38 - really no friction with
59:40 - zero yeah um what I'm going to do is I
59:43 - am going to uh now also I want to change
59:46 - those rectangles into circles because
59:49 - why not uh so I'm going to go into the
59:52 - box and I could change the name of it
59:54 - from box but really what I want to do is
59:55 - change this is to Circle and I have a
59:58 - guess that what Circle wants is maybe XY
60:02 - whoops XY
60:05 - radius so XY radius I'm going to change
60:09 - that in sketch to just make when I click
60:11 - the mouse to add one with a single
60:16 - radius uh and then I am going
60:21 - to uh change the way that I draw it to
60:24 - be an ellipse
60:26 - uh
60:28 - with an r instead of a w and an H so
60:32 - let's do that and here we go uh what am
60:36 - I missing sketch. JS line
60:38 - 30 uh and I
60:41 - uh boxes. push push new box Mouse X
60:46 - Mouse y this closes random this I need
60:49 - another parenthesis there and here we
60:53 - go now it looks like my size is off so
60:56 - let's go look at the documentation it's
60:58 - kind of working you can see the circles
61:00 - are like hitting the uh they're they're
61:03 - kind of like above the actual um they're
61:06 - actually above the
61:07 - actual uh boundary so let's go to the
61:10 - matter.js
61:12 - documentation uh
61:14 - and let's fix this boy I'm spending a
61:17 - lot longer on this little example than I
61:19 - meant to let's go to the matter.js
61:22 - documentation let's go to uh bodies
61:26 - let's look for Circle XY radius I know
61:30 - what the problem is I was right all
61:32 - along but P5 doesn't expect a radius it
61:36 - expects a diameter so all I need to do
61:38 - to fix this is actually where I'm
61:40 - drawing and let me call this circle just
61:42 - to be uh consistent and in sketch. JS
61:47 - I'm going to now call this circles and
61:50 - I'm going to change this to New Circle
61:54 - and I've got to go through circles.
61:57 - length and change this to circles and
62:00 - now what I need to do I'm Gonna Leave
62:01 - This as box. JS just for right now I
62:03 - need to say this. R times two and
62:08 - now whoops uh sketch. JS line 30 I
62:12 - missed one reference ah circles.
62:16 - push so we can see there we go now these
62:18 - are kind of large so I know that let me
62:21 - just change this between five and 10 and
62:24 - I'm also going to do uh Mouse dragged so
62:28 - now what I can do is just add a lot of
62:31 - circles and we can see I mostly have
62:33 - that demo we had before and actually I'm
62:34 - kind of along the way of almost creating
62:37 - a kind of liquid simulation because if
62:39 - you could imagine if you were to change
62:41 - the way the behaviors of these kind of
62:42 - work make these really really tiny um
62:45 - you would almost have something that has
62:46 - a kind of like liquidy like quality to
62:48 - it okay so now what I've done is I did a
62:50 - second video where I showed you a bit
62:52 - more about how I can have two different
62:54 - kinds of objects the static ones we
62:55 - looked at did circles we kind of played
62:57 - around with friction a little bit so
62:58 - hopefully this helps you see a bit more
63:00 - about using matter.js and uh in the next
63:03 - video what I'm going to show you is how
63:04 - to actually have the mouse interact with
63:06 - this so I can kind of drag these objects
63:08 - around and toss them and I'm going to
63:10 - look at a concept called a constraint
63:11 - for that okay see you
63:13 - soon um in the chat c Manny um is uh
63:19 - telling me to increase the restitution
63:21 - to
63:22 - 0.95 in which
63:25 - in which object let's try it
63:29 - here and let's add it also in the
63:37 - boundary oh yeah it's more
63:40 - bouncy okay uh share the code the code
63:43 - will be shared so I always after every
63:46 - live stream I take all the code I upload
63:49 - it to GitHub etc etc how are we on time
63:51 - here it is noon it is noon o'clock
63:53 - that's not so bad
63:55 - I got lots of time left oh this is good
63:57 - I'm definitely gonna need a P5 break at
64:00 - some
64:04 - point okay so now the next thing I would
64:08 - like to
64:12 - do is look
64:14 - at um
64:17 - constraints so what I'm going to do to
64:20 - this particular example what might I do
64:23 - to oh you know what I really need to do
64:24 - here is is I need to remove the
64:29 - objects uh after so let me let's test
64:31 - something so I realized I forgot
64:33 - something that's kind of important here
64:34 - let's go to
64:37 - um let's change this to just add objects
64:42 - in the draw
64:44 - Loop and I'm going to add them at the
64:49 - top every
64:51 - frame so let's let this run for a little
64:54 - bit
64:57 - [Music]
65:03 - I'm expecting that eventually it's going
65:05 - to start to run really really
65:08 - slow I'm kind of amazed that it hasn't
65:12 - [Music]
65:17 - yet so the issue is of course that I'm
65:20 - creating all these objects and I'm
65:21 - putting them in an array and that array
65:23 - is getting bigger and bigger and bigger
65:25 - and bigger and bigger
65:26 - and now can you start to see it now it's
65:28 - really starting to chunk along so even
65:32 - though the stuff is way off the screen
65:34 - there's a couple issues number one my P5
65:36 - code is still processing all this stuff
65:39 - but even worse than that probably is
65:41 - matter.js is still trying to do all the
65:44 - collisions for all this stuff that's way
65:45 - somewhere where we don't even see it so
65:49 - what I need to add to this is some way
65:52 - of removing objects so um I'm going to
65:57 - do that in the next in the next
66:00 - sequence um and so the things that I
66:02 - want to add are let me let me get myself
66:04 - ready here I want to go to constraint
66:07 - maybe matter. constraint I want to look
66:10 - for it Mouse
66:13 - oh Mouse
66:15 - constraint so I want to create a mouse
66:20 - constraint
66:23 - um uh I should look at this in advance
66:28 - Mouse constraint Mouse I guess I could
66:29 - just look at the
66:31 - example
66:33 - uh matter.js
66:36 - [Music]
66:41 - um um let me look at
66:43 - this uh I'm looking for where are the
66:46 - examples
66:49 - examples uh uh examples
66:53 - examples I think a lot of these just
66:55 - have the mouse constraint in them um
66:59 - let's just look at this one I don't know
67:02 - Mouse constraint look just in advance to
67:05 - sort of see Mouse equals mouse. create
67:08 - Mouse constraint okay I need to create a
67:11 - mouse and then create the mouse
67:13 - constraint with the engine with the
67:15 - mouse and some okay so I think and then
67:17 - add it to the world I think I'll be able
67:19 - to figure this
67:20 - out uh and so I need both to create a
67:23 - mouse
67:27 - and uh a mouse constraint okay so we're
67:31 - going to try that so let me
67:35 - um so let me first back up here
67:40 - and uh just put it back I want to save
67:43 - what it was when I last left off which
67:46 - was this and now I need a
67:49 - new
67:53 - 03 matter mount
67:57 - um okay so what I'm going to add now is
68:00 - the mouse
68:02 - constraint uh
68:06 - okay okay um so
68:10 - let's do
68:16 - that okay so I want to make sure I'm in
68:18 - the right
68:21 - one
68:23 - sketch I'm in the right one now and now
68:27 - I'm in the right one here okay here we
68:33 - go which is better to learn JavaScript
68:36 - python or processing these are some very
68:38 - good questions all of the above how
68:40 - about
68:45 - that Mouse constraint
68:52 - okay uh here we go
68:57 - okay I'm back for more matter.js it
69:01 - matter.js to me to make never mind it it
69:04 - was going to work but it didn't okay so
69:06 - what I want to do this is what I left
69:07 - off in the last video and the thing that
69:09 - I want to add to this is a mouse
69:11 - constraint but you know what there's
69:13 - something that I really should add first
69:15 - which is that even though um there's all
69:18 - of these uh part all these I'm going to
69:21 - call them particles circles and they
69:23 - leave and then I add some more I have
69:25 - never actually told my code or the
69:28 - matter.js engine that those circles have
69:30 - left the screen we can now ignore them
69:32 - so it's going to start to run very very
69:34 - slow after a while so first of all let
69:36 - me just change something here to
69:37 - demonstrate this which is to say instead
69:40 - of adding circles when I uh drag the
69:42 - mouse I'm just going to every time
69:44 - through draw I'm going to add a circle
69:48 - uh at the
69:49 - top um and just so there's going to be a
69:51 - new Circle every frame so now it's doing
69:53 - this automatically and you know I kind
69:55 - want to move that top one a little
69:56 - further down that's not really a good
69:58 - reason to do this but uh let's do that
70:02 - yeah so this is a little better to sort
70:04 - of demonstrate just s see so now I move
70:06 - that a little bit down so we can see
70:07 - after a while I'm sure this is going to
70:09 - start running very very very slow so two
70:11 - things I need to do number one is I need
70:13 - to remove those objects from my array
70:16 - when they're off the screen but number
70:17 - two I probably also need to tell the
70:19 - physics engine stop trying to calculate
70:22 - geometry with them so I know how to
70:24 - remove them from my array so let's let's
70:25 - do that first so here in this this is
70:29 - where I'm kind of looping through and
70:30 - drawing all of them so I can write add
70:32 - some code something like if circles dot
70:35 - is off
70:38 - screen then
70:41 - uh then circles. splice I comma 1 so
70:45 - what what is what is this doing so this
70:47 - is the idea here if not if Circle index
70:50 - I if this particular circle is off the
70:53 - screen then I'm done with it and splice
70:57 - is a function that removes an object
70:59 - from an array so I want to remove the I
71:01 - object from the array and I only want to
71:03 - remove one object so splice allows you
71:04 - to remove like I and then the two after
71:06 - it if I wanted to but I don't want to do
71:08 - that here so is off screen this will
71:10 - just work right no it has no idea what
71:13 - is off screen is that's not some sort of
71:15 - function that exists um but it's
71:16 - something that I can write so I go into
71:18 - box. JS which really should be called
71:20 - circle. JS um I can write a function
71:23 - called is offscreen
71:28 - and what do I want to do well first I
71:30 - want the position of the particle so I
71:33 - can say VAR pause equals this. body.
71:36 - position and now I can say you know
71:39 - there's a lot of things I could evaluate
71:40 - here but I'm just going to do something
71:41 - really easy if pause. Y is greater than
71:43 - height plus like 100 like it's not only
71:46 - at the bottom it's like 100 pixels below
71:48 - the bottom then uh return true and yes
71:52 - yes yes yes actually so let's do this
71:53 - here everybody always complains I like
71:54 - to write silly code like
71:58 - this just to really kind of illustrate
72:00 - exactly what's going on if this is true
72:03 - return true otherwise return false but
72:05 - notice the way I just said that if this
72:07 - is true return true that's kind of silly
72:10 - this whole thing evaluates to true or
72:11 - false so something I can actually do to
72:13 - make my code a bit more concise is just
72:15 - return what this evaluates to so return
72:18 - true or false is pause y greater than he
72:21 - so so now we should this should kind of
72:24 - work
72:25 - and it's actually I I'm expecting it to
72:27 - work so let's just look here at um uh
72:31 - What's this called circles. length
72:34 - 144 145 so that's it's got to be working
72:37 - right if it's 145 now oh whoa but look
72:41 - what's going on see all this like crazy
72:43 - flickering what's that flickering so
72:46 - this is
72:47 - why you need that what I've done there's
72:50 - a flaw in what I've done a major flaw
72:53 - and I do have a video where I go through
72:55 - but I'm going to mention it right now
72:56 - because you don't want to go find that
72:58 - other video oops so this is an edit
73:01 - Point Mata
73:02 - sorry
73:10 - um so what's going on
73:14 - here here's the I'm going to do a quick
73:16 - explanation of this here's the
73:19 - array here's all the spots in the array
73:21 - 0 1 2 3 I'm looking at spot zero it's
73:24 - fine I'm looking at spot one it's fine
73:26 - I'm looking at spot two oh delete it so
73:28 - then this moves over here what used to
73:31 - be in three is now here so now I move
73:34 - and check the next
73:36 - one let me explain this again hold on I
73:40 - realized there's a way that that that I
73:42 - that I like to explain this that's a bit
73:44 - better let me try this
73:47 - again I just realized okay okay so
73:50 - what's the issue here I'm going to I'm
73:51 - going to do a quick
73:53 - explanation let's say I have an array
73:56 - and it has circles in
73:58 - it a b c d and e and C is actually the
74:03 - one that's off the
74:05 - screen C is the one that's off the
74:07 - screen a b d Etc e are all on the screen
74:11 - so I check zero oh it's on the screen I
74:14 - check one oh it's on the screen I check
74:16 - two oh oh it's not on the screen anymore
74:20 - delete it so I remove it from the array
74:22 - you know what happens when you remove
74:23 - something splice something from the
74:24 - array this is what happens to the array
74:27 - that those two elements move down one
74:29 - that's gone so now check three it's fine
74:33 - what happened I checked a b c and then I
74:35 - checked E I never actually checked D
74:37 - because when I was checking index 2 I
74:40 - removed it and then D slid into index 2
74:43 - so I just went un checked E so this is
74:45 - what's happening I'm kind of like
74:46 - skipping them and then I'm also like not
74:48 - rendering one because it like moved and
74:50 - it didn't get rendered which is why it's
74:51 - flickering so what I actually need to
74:53 - there's a bunch of ways I could resolve
74:54 - this I'm sure there's like a very fancy
74:55 - JavaScript using some kind of
74:57 - sophisticated array function that you
75:00 - all will let me know in the comments but
75:01 - a quick way I could do is just go
75:02 - through the array backwards I could also
75:04 - do something like just say I minus minus
75:07 - like let me just back up one let's add
75:09 - that into the
75:10 - code and now we should see we don't see
75:13 - that flickering problem anymore because
75:14 - I'm not skipping any so but I could also
75:16 - Loop through the array backwards um and
75:18 - now I can just check to make sure this
75:20 - is working you know it's
75:22 - growing but then it went down so
75:25 - definitely things are being removed now
75:26 - the thing is though I only removed
75:29 - them
75:31 - from uh I only removed them from the the
75:36 - array I think matter JS is still
75:39 - thinking about them it's still the world
75:41 - matters like this world is full of
75:43 - circles and I'm going to figure out if
75:44 - they're bouncing even though if they're
75:46 - like thousands of pixels below the
75:47 - screen so I don't actually know how to
75:49 - do this let's look at the matter D chest
75:52 - documentation uh this would be something
75:55 - that you would do in the world right
75:57 - because I say
75:59 - World um here I say uh world. add that's
76:05 - how I add a body to the world I'm
76:07 - guessing there's a remove function so
76:09 - let's go into the documentation
76:12 - world uh we see that there's an add
76:15 - function now add body that's add
76:18 - composit add constraint all bodies all
76:21 - compound all all clear that maybe clears
76:25 - everything clear uh how about
76:29 - remove ah
76:31 - remove generic remove functions removes
76:34 - one or many bodies constraints or
76:35 - composits to the given composite
76:37 - optionally searching its children
76:38 - recursively oh so there's all this kind
76:41 - of like ways that the bodies can have
76:42 - relationships that things can be like
76:44 - sort of tethered together if I remove
76:46 - one should I remove all the other ones
76:47 - but we're not in that sophisticated of a
76:49 - space right now so I'm just going to say
76:52 - I think what's going to work is is if I
76:56 - go to uh
76:58 - box if it's off screen what I might want
77:01 - to do is also do something like circles
77:07 - because I might want to do this in other
77:08 - place like uh
77:10 - remove from World okay you guys can
77:13 - think of a better function name for that
77:15 - remove from
77:17 - world uh so this do remove from World
77:24 - equals function and I'm just going to
77:26 - say world. remove World this. body so
77:31 - I'm pretty sure that that and there's a
77:33 - way that we can test this actually so
77:35 - let's
77:37 - um let's run this so there's how many
77:41 - and I probably shouldn't have let's hold
77:43 - on let's let's first comment this out so
77:48 - right now I'm not calling my own remove
77:49 - from world so I am going and what are
77:52 - I'm going to get rid of these console
77:53 - logging things that are are uh polluting
77:57 - my
77:59 - um um probably in the boundary yeah
78:03 - sorry uh okay so there's my array which
78:06 - is called
78:09 - circles
78:11 - 136 now there's also an
78:14 - array in matter which I believe is
78:20 - probably bodies
78:23 - dot or
78:25 - world do bodies I think the world itself
78:29 - keeps track of everything that's in it
78:31 - that's an array.
78:33 - link 9913 quick circles. length 147 so
78:38 - you can see matter dos thinks there's
78:41 - 913 things whereas I think there's only
78:44 - 147 so now what I should be able to do
78:46 - and let's be more precise about this
78:48 - actually let's just in draw let's
78:50 - console log these console
78:53 - log uh
78:56 - circles. length and then what did I say
78:59 - a world. bodies. length so let's look at
79:03 - both of these so we can see that they're
79:06 - kind of working together until they
79:09 - start to leave the screen my I'm
79:11 - deleting stuff but this just keeps going
79:13 - up and up and up and up and up so now
79:16 - what do I do if I put back in my
79:18 - function where I am additionally not
79:21 - only removing it from my array but
79:23 - telling matter digest to remove the body
79:26 - itself I think we're going to see this
79:29 - now be
79:31 - correct and there we go right
79:38 - uh uh wait hold on it's not exactly ins
79:43 - syane I mean it's a little bit off why
79:45 - is it off oh look at this oh boy oh boy
79:49 - something weird has happened look at
79:50 - this weird bug certain ones have stopped
79:52 - and been removed I have a feeling this
79:54 - has to do with the way that I'm going
79:55 - through the array oh I know what's the
79:57 - problem
79:58 - is look at this boy I've been really
80:03 - careless H splice it and then
80:05 - remove I removed it from the array and
80:08 - then the stuff slid down and I told to
80:10 - remove the one after it which wasn't
80:11 - actually removed from the array so that
80:13 - was a really bad bug this has got to be
80:16 - first so there might be a a different
80:18 - way I could think about organizing this
80:19 - to protect myself from that kind of
80:21 - error but this at least now we should
80:24 - see whoops we should see this fixed I'm
80:27 - in Mouse which I haven't even done yet
80:29 - okay so let's look Let me refresh here
80:31 - so let's see here now here we go once
80:33 - they start getting removed we should see
80:36 - that they're staying in sync uh there we
80:38 - go now one thing you'll notice if I just
80:40 - say no Loop here just to
80:42 - pause the sketch for a second you'll
80:44 - notice that the thing the number of
80:46 - things that matter doz thinks exist is
80:49 - always two more than what I think that's
80:51 - because there's two boundaries so this
80:53 - there's this is is I think an
80:55 - interesting question which is I've
80:56 - introduced a great deal of redundancy
80:58 - and that I'm keeping track of my like
80:59 - own arrays of stuff but matter.js
81:01 - actually keeps track of everything
81:03 - itself but I'm doing that just so I can
81:05 - have total control over the sort of
81:07 - visual design and and management of the
81:09 - entities and not have to rely on because
81:12 - I want to keep these things in separate
81:14 - arrays whereas matter.js the B's array
81:16 - keeps everything in one array but you
81:18 - know there's reasons why you might not
81:20 - do it one way or the other but okay so I
81:21 - said this was going to be that I was
81:22 - going to introduce the mouse but there
81:24 - was enough here just in looking at
81:26 - removing bodies from the world that that
81:28 - was a pretty good topic for this video
81:30 - and the next video the next thing I'm
81:31 - going to add is a mouse constraint where
81:33 - I can click on these things and drag
81:35 - them around so I'll see you in that
81:37 - video okay I looked at this chat uh uh
81:40 - but you guys I think I found yeah the
81:43 - chat was uh um okay the chat gave but I
81:46 - think I think what you're telling me in
81:47 - the chat is what I already figured out
81:49 - okay uh so now let's keep going here
81:52 - 1220 I'm good I'm good with
81:55 - time uh am I good with mental energy so
81:58 - this was matter do matter
82:02 - remove and now uh 04 matter uh
82:10 - Mouse the thing is the question I have
82:14 - here is this isn't the
82:18 - best you know what I'm going to do I'm
82:21 - going to do something a little bit
82:22 - different even though it's not what I
82:24 - said
82:27 - yeah I don't know what I'm doing here ah
82:30 - shoot I think I messed
82:34 - up
82:36 - whoa oh I renamed stuff and then it got
82:39 - confused a I think I can get rid of
82:42 - this
82:44 - um uh what I I think what I actually
82:47 - want to do is go into a different
82:51 - example so um
82:55 - this chat this chat this chat song ever
82:57 - forget to look at the this
83:00 - chat uh what I think I want to do let me
83:02 - go to matter Mouse is actually not do
83:04 - matter Mouse right now the mouse does
83:06 - not matter and I want to and which one
83:09 - I'm in I'm in ' 04 so let me go back to
83:11 - 03 and let me get rid of this uh console
83:15 - log or just comment it
83:17 - out and what I want to do make sure this
83:21 - is
83:22 - right um uh okay what I want to do
83:26 - actually and I'm going to say I'm going
83:28 - to start kind of over from
83:32 - scratch matter um
83:38 - constraint so what I want to do actually
83:41 - is I want to look at constraints between
83:46 - objects that
83:48 - aren't
83:51 - um that sorry I'm thinking I'm thinking
83:54 - I'm thinking that aren't the
83:57 - Mouse um and then do the mouse
84:00 - constraint after because that's going to
84:01 - make more sense uh especially because if
84:04 - I make a little like swinging chain
84:06 - thing that things are attached I'm going
84:08 - to want to swing that around with the
84:09 - mouse whereas this example isn't as this
84:11 - example is not as conducive to like
84:13 - clicking and dragging these things so
84:16 - um that's what I'm going to
84:22 - do okay I want to get to some coding
84:24 - challenges I want to get to the
84:26 - texturing geometry
84:29 - thing I have about an hour I have about
84:31 - an hour before I really need to get
84:32 - going so there's still that's still a
84:34 - solid amount of time uh okay so let me I
84:38 - need to start over from scratch a little
84:41 - bit um and I'm going to call I'm going
84:43 - to leave these as circles I'm gonna okay
84:47 - I'm gonna okay so let me close this and
84:49 - I'm going to rename this to
84:55 - rename a
84:57 - circle let me call it a
85:01 - particle I like the idea of calling it a
85:05 - particle because that kind of you know
85:08 - connects to other
85:12 - things
85:14 - um let me just see
85:16 - here um partic whoops ah
85:21 - particles sure I could do a find and
85:23 - replace I'm just being
85:26 - lazy and
85:28 - particle and
85:31 - index.html uh
85:35 - particle okay so this is the same oh I'm
85:37 - in matter. remove ah okay that's fine I
85:40 - want to look at matter.
85:43 - constraint and sketch. line
85:46 - 49 uh yeah I don't need this though uh
85:50 - okay great okay so now what I want to do
85:53 - is
85:56 - um get rid
86:00 - of
86:02 - this and I want to
86:06 - [Music]
86:07 - um just make one boundary that's more at
86:10 - the
86:15 - bottom uh and angle of
86:17 - zero
86:23 - oops okay
86:24 - okay so I've got a blank slate here so
86:28 - what I want to do is I want to create a
86:30 - swinging
86:31 - chain and here's the interesting thing
86:34 - and I I guess I'm going to say this
86:35 - again in a second but matter duts has
86:39 - this idea of composits and it has this
86:41 - idea of a chain that you can actually
86:43 - just like
86:45 - create but I'm not going to do it that
86:47 - way uh which may or may not be a bad
86:50 - idea but I would like to um so let me
86:54 - just I'm going to talk about this in the
86:55 - video I'm I'm I'm I'm out of water but I
86:59 - got a full box of Kleenex so think's
87:02 - going to be okay I might not be hydrated
87:05 - but my nose will not be
87:09 - running
87:12 - okay
87:14 - now uh okay so uh let's see what's going
87:20 - to happen next okay I need
87:25 - to uh where's my
87:28 - Eraser where is my Eraser where or where
87:32 - has my Eraser gone I found it over on
87:36 - the floor okay um I'm going to just
87:39 - erase all
87:41 - this oh my sad little friend there is
87:44 - gone
87:51 - okay okay uh here we go
87:57 - okay so
87:58 - now what I want to do is let's look at
88:04 - um let's look
88:06 - at
88:09 - okay probably should just look at demos
88:13 - here and change this okay
88:18 - to uh the one that I want to look at is
88:20 - maybe chains yeah this
88:27 - okay yeah see this is what I want to
88:29 - implement with then I
88:31 - can actually uh uh click on these things
88:37 - okay uh let's see here okay okay okay
88:41 - okay so where are we where are we where
88:44 - are we where are we composits matter.js
88:47 - and then
88:48 - constraint create
88:52 - options see the property section below
88:55 - for detailed information what you can
88:56 - pass body a body B
89:01 - ID
89:02 - label
89:04 - length resting length point a ah the
89:07 - offset constraint from the center of
89:10 - body a uh and then point B okay this is
89:14 - Trick there's a lot of tricky stuff
89:16 - associated with this so okay
89:19 - so
89:22 - uh uh C Manu WR clearly you ignored my
89:25 - HTTP over DNS idea I think you maybe see
89:28 - Manny is not talking to me okay
89:31 - um Adam has a console if I want not by
89:34 - default oh that's good to know I should
89:37 - um I should maybe consider looking at
89:38 - that okay uh let's get back to business
89:44 - here lot of things these libraries are
89:47 - always more complex and convoluted than
89:49 - I imagine okay um here we go
89:54 - oh boy my uh
89:58 - okay okay so here I am back in another
90:01 - video about matter.js the physics engine
90:04 - in this now one thing I didn't really
90:05 - realize is matter.js actually has a page
90:08 - on their website if you click on demos
90:10 - where all of the examples you can look
90:12 - at as demos and this is basically what I
90:13 - want to build I want to create a kind of
90:16 - like swinging thing like this that I can
90:18 - drag around with the
90:19 - mouse so and one of the nice things
90:21 - about the demos by the way is there's a
90:23 - whole interface here where I can play
90:24 - with a lot of these parameters density
90:27 - friction that type of thing so
90:30 - um so in that case um uh what am I
90:34 - saying in that case uh uh uh these are
90:37 - great to look at and sort of better than
90:39 - my strategy of like let me make the
90:40 - example like keep changing the values
90:42 - obviously I could like create a whole
90:43 - interface in my program but a lot of
90:45 - that is here for you to play around with
90:46 - so I highly suggest taking a look at
90:47 - that now here's the thing this demo I I
90:51 - I looked at it in advance this demo is
90:54 - actually created
90:59 - with okay I'm muted you know why I'm
91:01 - muted you got you guys can all since it
91:03 - crashed I used this moment to take a
91:05 - break okay um so I'm back streaming um
91:08 - no audio yes yes yes uh there I I
91:11 - there's actually an even newer version
91:13 - of wirecast than the one that I'm
91:14 - currently using and I wonder if um I so
91:18 - I'm going to download that and see if
91:19 - maybe that resolves the issue I haven't
91:21 - had this problem but now I have it
91:24 - anyway the good news is oops I didn't
91:25 - get oh look at that I didn't get
91:28 - too uh far where was I looking for
91:31 - chains I didn't um I didn't really get
91:34 - too far in that tutorial so let me just
91:37 - fix this over
91:40 - here and let's get going on this next
91:44 - one okay so I'm just going to jump right
91:46 - back in yeah and maybe I'll switch to
91:47 - using open broadcast studio OBS instead
91:50 - of wirecast and see if that resolves the
91:51 - issue only reason I use wirecast is it
91:53 - has some features that are really useful
91:54 - for me and that I can map uh hot keys on
91:57 - a keyboard to different shots so I can
91:58 - kind of like live change those and some
92:01 - other features I um but also I just need
92:04 - the time to have a day to like try
92:05 - setting up OBS okay here we
92:09 - go oh 10% battery hold on I'm
92:13 - gonna just bear with me for a second
92:15 - here I'm gonna do something I got to
92:17 - plug this
92:17 - in going to charge something here I this
92:20 - uh iPad that I use for sound the battery
92:23 - is about to die so I might as well
92:25 - charge it while I'm not using it where
92:27 - is a plug I need a plug I've used all my
92:30 - plugs that's crazy I could plug it into
92:34 - you know
92:36 - actually this is probably G to make
92:38 - something pop up
92:39 - automatically but I will do this for a
92:44 - second and I'm going to plug this in
92:47 - it's
92:48 - charging and I'm gonna yes that's good
92:53 - and here we go quick quit that
92:55 - okay
92:56 - oops I am back iTunes quit unexpectedly
93:00 - yeah I don't I want it to quit Okay um I
93:02 - just plugged it into my laptop
93:05 - okay here we go
93:08 - let's let's try
93:12 - to get this train going hopefully this
93:14 - train will have no further
93:17 - delays no further track issues that sort
93:21 - of thing okay
93:27 - uh here we
93:32 - go hello welcome to another matter.js
93:36 - physics engine tutorial video in this
93:39 - video I'm going to attempt to make
93:41 - something like this now you might be
93:43 - wondering huh look at that that's a
93:44 - matter.js page so one thing I didn't
93:47 - realize in my previous videos is that
93:48 - matter.js on the website has a page you
93:51 - can click on called demos where you can
93:53 - actually look at these different
93:54 - examples one by one and one of them is
93:56 - for creating these uh chains otherwise
93:59 - known as bodies connected by constraints
94:02 - and those constraints can be springy
94:04 - elastic constraints and so there's a lot
94:06 - of things you can build from this
94:08 - particular idea now another thing I'll
94:10 - notice about this demo page which is
94:11 - great is that it actually has an
94:13 - interface for manipulating a lot of
94:15 - these particular variables so you know
94:17 - I've been kind of in the code just
94:18 - changing numbers and refreshing
94:20 - obviously building an interface to sort
94:22 - of tweak and test different values is
94:24 - much better and this is built in right
94:25 - into the demo page so what I'm going to
94:26 - do is essentially what I want to try to
94:28 - do is recreate exactly this Chain by
94:31 - connecting a bunch of these circular
94:32 - bodies uh by constraints and here's the
94:35 - thing so looking I was looking at the
94:37 - matter.js documentation and it actually
94:39 - has something called composits so
94:42 - composits are composits module it says
94:45 - right here contains Factory methods for
94:47 - creating composite bodies so this is
94:49 - what you can use actually oh I just want
94:50 - to have a chain of things or I want to
94:52 - have a stack of things and there's even
94:53 - to composite for a car which is really
94:55 - just like a couple shapes and some
94:57 - Wheels maybe but um here's the thing I'm
95:00 - going to do this video and make this
95:02 - tutorial without using the built-in
95:04 - composits certainly if what I want is a
95:07 - chain using the built-in composite chain
95:10 - might make this easier but I want to
95:11 - build this in a flexible way that I
95:13 - could kind of make anything you know I
95:15 - could make a chain that has branches
95:17 - coming out of it so I want to have total
95:18 - flexibility to see what happens if I
95:20 - individually create all the particles
95:22 - and constraints one by one and attach
95:25 - them uh in a completely customizable way
95:28 - maybe this is a bad idea but I'm going
95:30 - to give it a
95:32 - try uh okay so what do I need to do so
95:36 - the first thing just to sort of work
95:38 - this out so okay this is my program
95:39 - currently this is where I am all it does
95:42 - all it has is a single ground body so
95:45 - it's the same ground body that I've had
95:46 - in previous videos I also made a change
95:48 - from the previous videos where that
95:50 - Circle object is now called particle but
95:52 - I haven't put any particle into the
95:54 - world uh I could however put one so I
95:58 - could say VAR P equals a new particle
96:01 - and I'm just going to make it at uh 200
96:04 - comma 100 with a radius of 10 and then I
96:08 - could just say in draw p. show oh it's
96:13 - actually pushing particles into an
96:15 - array so what happened p is not defined
96:18 - oh yeah but oh well I should I'm using
96:20 - that array so let me say particles. push
96:23 - p and then uh let me actually uh iterate
96:27 - over that array with my non for each
96:33 - Loop uh and uh just say uh particles
96:38 - index i. show so let me just get one
96:40 - thing so there's my one
96:41 - particle now I want to add a second
96:44 - one what I want to do is I'm so I'm
96:47 - going make that P1 and I'm going to say
96:50 - P2 is uh two
96:54 - 200 uh
96:56 - 150 and I'm going to push both of those
96:59 - into the
97:02 - array so there's two of them now these
97:05 - have no relationship they bounce off of
97:06 - each other and move apart what I want to
97:09 - do is I want to use something in matter.
97:13 - and this ex same idea so it's called a
97:15 - constraint I didn't spell that right
97:18 - constraint like train is in there I
97:20 - think somewhere right uh con con
97:24 - strain um it's called that in matter.
97:27 - jazz but if I were in box 2D this would
97:29 - be called a
97:31 - joint if I were in toxic Libs it would
97:34 - be called a spring so there's lots of
97:37 - other terms for the same thing it's an
97:39 - entity that connects two bodies now it
97:42 - does not have any geometry so the idea
97:44 - is if there are two particles I want to
97:46 - be able to connect them with this thing
97:49 - called a constraint but one thing to
97:50 - note about the constraint is it doesn't
97:52 - have geometry so something will fall
97:54 - through it so there are other scenarios
97:56 - where what you might want to do is make
97:57 - like a
97:58 - bridge and but it's sort of like a a
98:00 - springy bridge where you could what you
98:02 - could do is make a bunch of rectangular
98:04 - bodies that abut each other and then you
98:07 - could actually put con con connect them
98:09 - with constraints but leave there's very
98:10 - little space between them um so that's
98:12 - another scenario that I could do in a
98:14 - coding challenge or something but here I
98:15 - just want to be able to attach these two
98:17 - bodies now this is always much more
98:19 - complex than you think because there's a
98:22 - lot of things I need to set
98:24 - I need to
98:26 - say body which which two bodies so body
98:29 - a and body B but also I say where is the
98:33 - constraint attached is it at its Center
98:35 - or you know I could I might want to do
98:37 - something like this where I kind of
98:39 - connect them from uh the
98:44 - edges let me finding the button finding
98:47 - the button finding the
98:49 - button so uh in uh I'm matter dos I'm
98:53 - pretty sure has a way of doing this and
98:55 - I think it's
98:56 - called point a and point B so there's
99:00 - the bodies and then the point is the not
99:02 - the location of the constraint but the
99:04 - offset of the constraint relative to
99:06 - maybe the center point of the body then
99:07 - I also need usually a property called
99:09 - like length which is often the rest
99:12 - length so you think about a spring you
99:14 - know if you pull on a spring it starts
99:16 - to but eventually it comes to a rest so
99:18 - what is it sort of resting point where
99:20 - there will be no Force um either
99:22 - contract or expanding it so excuse me
99:25 - the rest length there's also what else
99:28 - would there be uh maybe there's a kind
99:29 - of like strength per uh option like how
99:32 - is it very rigid is it like a rubber
99:33 - band that type of thing so all just to
99:36 - make this single thing that connects the
99:37 - two bodies I need to set a lot of
99:39 - parameters so let's go try to do
99:42 - that um over here okay
99:46 - um so what I want to do is now I want to
99:51 - try to make a constraint so uh let's go
99:53 - look constraint I have that page open
99:56 - matter. constraint module contains
99:58 - methods for creating and manipulating
99:59 - constraints grats are are used to
100:01 - specify fixed distance between two
100:03 - bodies blah BL all this sort of stuff
100:04 - stiffness Springs or elastic so I think
100:07 - this is all I want matter. constraint.
100:09 - create so I'm going to say um I'm going
100:12 - to just make a a variable called
100:15 - options then I want to say
100:17 - matter. constraint. create now what I
100:22 - what I could do here is say con I could
100:25 - add another uh Alias just constraint
100:28 - equals matter. constraint right I think
100:30 - that's what I want here and then now I
100:33 - can just say sorry constraint. create so
100:37 - VAR I'm thinking here VAR constraint
100:41 - equal I want to so now I'm just going to
100:44 - that word constraint the more you look
100:45 - at it the more it looks like it's
100:46 - spelled wrong I think it's right I want
100:49 - to create a
100:50 - constraint and with options so create
100:55 - options so I could certainly put the
100:58 - object with all the parameters right in
101:00 - here but I just want to have a separate
101:02 - object where I keep track of this so
101:03 - what are the
101:04 - options uh see what property see
101:07 - property section below for detailed
101:08 - information on what you can pass via the
101:10 - options object ah properties body a body
101:13 - B ID label these are probably things to
101:16 - keep try that I don't need length so
101:17 - these are things that I need so let's
101:19 - look so body
101:21 - a I want to connect P1 that's the first
101:24 - one oh but it's not P1 right my particle
101:29 - is my own object particles the body is
101:31 - the thing that matter cares about so
101:33 - p1's body to
101:36 - body B p2's body and then I also have
101:41 - point a which is that offset which I'm
101:43 - just going to make oh how do I set the
101:45 - offset the offset is an object maybe
101:49 - with an X and A Y so I'm going to just
101:53 - just have that offset be an X and A Y of
101:55 - zero it probably does that by default so
101:58 - actually let's just not put it in there
101:59 - but if I wanted to offset it differently
102:01 - I think I would put this in as an
102:03 - option uh and then uh length is probably
102:07 - good so let's do a length let's let's
102:10 - give that as like 50 pixels between them
102:13 - and then what was the last one stiffness
102:16 - uh one means the constraint is very
102:18 - stiff 0 2 means it acts like a soft
102:21 - spring so let's try that
102:24 - stiffness let's try
102:26 - like three
102:28 - four so now I assuming what I then have
102:31 - to do is do uh
102:34 - world. addor comma constraint so I've
102:38 - also got to tell the physics engine to
102:40 - put that constraint in the world so now
102:42 - I've created a constraint between those
102:44 - two bodies with a specific rest length
102:47 - and a stiffness I've created it and I've
102:49 - put it in the world so now let's run it
102:54 - oops constraint oh because it is spelled
102:56 - wrong the more you look at it the more
102:58 - it becomes spelled wrong because I
103:00 - spelled it
103:01 - wrong constraint yeah that's why it's
103:04 - spelled
103:05 - wrong uh so let's see look at that whoa
103:09 - so you can see that that constraint now
103:10 - let's let's uh let's offset it a little
103:13 - bit so we can maybe see more what's
103:15 - going on there we go so you can kind of
103:18 - get the feeling like they're constrained
103:20 - together now the thing is I can't see
103:23 - anything but I could draw a line between
103:26 - them so now in draw I could do something
103:29 - like line uh this is a terrible way to
103:33 - do it particles zero
103:36 - dot body. position oh this is like the
103:40 - worst thing I could ever possibly do
103:41 - right draw a line between this first
103:44 - ones X and Y
103:47 - whoops and the second ones
103:51 - X and
103:55 - Y and let's see what we get here no I've
103:58 - got a line so you can sort of see now it
104:00 - sort of feels more like it's working so
104:02 - this is the whole thing again I can't
104:04 - say this enough about physics engines
104:06 - there's the actual physics and then
104:08 - there's what you're drawing mostly you
104:10 - want those things to match but sometimes
104:12 - you maybe you want to not reveal what's
104:15 - connecting what or maybe you want to
104:16 - draw that in a different way so there's
104:18 - a lot of possibilities to how you think
104:20 - about this so now here's the thing what
104:22 - I actually want want to do is create a
104:24 - chain of these
104:27 - so there's a bunch of different ways we
104:30 - could think about approaching this but
104:31 - let's just build with what we have so
104:33 - first of all this idea of creating two
104:35 - separate particles and pushing them and
104:36 - then creating this constraint here I I I
104:39 - need a a kind of loop to do this and
104:40 - again I could use the the built-in
104:42 - matter.js composits but I'm going to I'm
104:45 - going to be stubborn here and do this in
104:47 - my own way so I'm going to say VAR let's
104:49 - think of it as going let's actually have
104:51 - it Go horizontally so let's start as an
104:53 - X at like 20 pixels let's have X go all
104:57 - the way to you know the width minus 20
105:00 - which is like 380 and then I'm going to
105:02 - go uh I'm going to go every 20
105:05 - pixels so every 20
105:09 - pixels and I'm going to comment a lot of
105:11 - this stuff out I want to
105:14 - create a particle at X comma 100 so I
105:19 - want to put a whole row a row of
105:21 - particles across
105:23 - there we go now ignore the fact that
105:25 - that line is drawn there there's no I'm
105:29 - GNA I'm going to uh where where is that
105:31 - line drawn let's take that out comment
105:33 - that
105:34 - out and uh that's a lot that's a lot of
105:39 - stuff Let's uh let's let's move um every
105:43 - 40
105:44 - pixels okay great so we can see here
105:47 - there's a whole bunch of things now
105:48 - we're not really it's it's there's not a
105:49 - lot of interplay here because they're
105:51 - all perfectly falling it's almost like
105:53 - there is a
105:55 - constraint but let's change this now so
105:58 - what do I want to do I want to also make
106:01 - a
106:02 - constraint and what I want is
106:05 - for
106:07 - uh I want to say VAR p and then I want
106:10 - to say VAR
106:11 - previous equals particles oh let's okay
106:17 - let's create let's create a variable
106:19 - before the loop called previous and it's
106:22 - going to be equal equal to
106:24 - n then uh after I create that particle
106:28 - and in theory create the constraint I'm
106:30 - going to say previous is equal to
106:33 - P so what I want to do is I want to
106:35 - connect each particles with the previous
106:39 - one that's all I want to do so every
106:42 - time I go through this Loop make a
106:43 - particle add it and connect it to the
106:45 - previous one however I don't want to do
106:47 - that for the first one right so I do
106:49 - want to say only do this if if previous
106:53 - exists so only make this constraint if
106:56 - previous exists so now if I were to do
106:59 - that we can see look at this it's kind
107:01 - of you can see oh they're definitely
107:02 - connected There's a constraint and
107:04 - they're all like moving along that's
107:06 - cool now so that's pretty good now
107:08 - here's the
107:09 - thing what if I were to
107:12 - allow uh what if I were to allow one of
107:15 - them to be uh static so I could say I
107:19 - could I could add an oh Statics a bad is
107:22 - a keyword in JavaScript so let me what's
107:25 - another word I could use for static
107:27 - fixed so I'm going to say is
107:30 - static fixed so I could uh pass
107:36 - in uh you know I could say here like if
107:40 - there is no
107:42 - previous make
107:45 - uh let's see uh I'm trying to think of
107:49 - like there's like I just wanted the
107:51 - first one there's this is kind of I'm
107:53 - doing this in there's probably there's a
107:55 - nicer way to do this I'm sure but let's
107:57 - just say
107:59 - um let's just say uh fixed equals false
108:03 - so I'm going to pass in none of them are
108:05 - fixed but if uh previous if not
108:11 - previous then uh fixed equals uh fixed
108:17 - equals true so I'm just going to make
108:19 - the first one if there's no previous
108:21 - then I want it to be fixed so if I do
108:23 - this oops I've got an error on on
108:26 - particle. JS line number
108:28 - five uh which is oh there needs to be a
108:31 - comma here because I added another
108:33 - property and there we go so you can see
108:35 - that first one is fixed so what I also
108:38 - want to do is now I'm just going to like
108:41 - kind of change where they are I'm going
108:43 - to uh start this one in um I'm going to
108:47 - start it more in the center and maybe
108:51 - I'll add more of them but uh make them
108:53 - smaller and do something like this so
108:55 - you can see whoa and maybe that rest
108:57 - length should actually be uh something
109:01 - more like uh 20 and there we go so now
109:05 - you can see there's what I was kind of
109:07 - looking to do I created this idea of a
109:10 - chain that are all connected and if I
109:12 - made it much longer like if I went all
109:15 - the way up to 600 to add even more right
109:18 - you're going to see it's going to kind
109:20 - of even uh it's going to collide with
109:22 - the ground
109:23 - uh and kind of stop there that's sort of
109:25 - weird oh you know what it went through
109:27 - the bottom because the B it's around the
109:29 - bottom because the bottom doesn't extend
109:31 - past the screen so anyway you this could
109:34 - be obviously fixed in a lot of ways but
109:36 - let's just leave it at this so this is
109:38 - what I was attempting to do now here's
109:40 - the thing there's a lot of improvements
109:43 - that I could make for this potentially
109:46 - number one is um you know I've kind of
109:51 - got a lot of code just in the weeds here
109:54 - in the main program so in the same way
109:56 - that I had this idea of encapsulating
109:59 - this idea of a matter.js particle a body
110:02 - into an object that keeps track of its
110:03 - own body and other things I could now
110:05 - make a chain object and a chain is an
110:08 - object that keeps track of an array of
110:09 - particles in those constraints also the
110:12 - way that I'm created these constraints I
110:14 - didn't you know I didn't the same way I
110:15 - wrapped a body into a particle I could
110:17 - wrap a constraint into a spring so I
110:19 - could write my own show function so I
110:21 - could draw lines between those things
110:23 - that might be a bit more interesting uh
110:26 - you know um and so you know because
110:29 - maybe what I actually want to do is is
110:31 - render this in a different way so
110:32 - there's a lot of possible ways but this
110:33 - hopefully gives you the basic idea now
110:35 - the thing that I want to add in the next
110:36 - video is how can I actually click on
110:39 - this and drag it around so uh and and
110:42 - you know the other thing that you might
110:44 - think about doing is what if I were to
110:45 - connect them from the left to the right
110:48 - and then make it a kind of bridge that
110:49 - Things fall in and kind of rest on so
110:51 - that would be another thing to me maybe
110:52 - try play with the spring Val so many
110:54 - things you could try here so hopefully
110:56 - this showed you how constraints work in
110:59 - matter.js to give you a basic idea of
111:01 - what you could do and in the next video
111:02 - I'm going to add a mouse constraint see
111:04 - you
111:05 - there okay
111:11 - um uh okay
111:14 - so um all right so how's this going it's
111:17 - almost
111:18 - 1:00 now I'm I've gotten far with this
111:21 - but I'm I didn't really get get time to
111:23 - do the challenges might have to come
111:24 - back later
111:27 - today okay so let's see I I should at
111:29 - least do the mouse constraint thing
111:31 - let's do that um let me see what improve
111:35 - I'm going to make some improvements to
111:38 - this
111:41 - uh or maybe I'll just leave it no let me
111:44 - make some
111:46 - improvements
111:47 - whoa um let me do them kind of quickly
111:51 - here so M
111:55 - constraint and what I'm going to do is
111:56 - do
111:59 - uh a matter Mouse so one thing I'm going
112:03 - to do I'm just going to do this like I'm
112:04 - going to whip This Together
112:09 - quickly and I'm going to go here there
112:11 - we go and I am going
112:15 - to
112:18 - uh I'm going to add
112:21 - a object called a
112:26 - chain and I'm going to make
112:31 - chain and I should
112:34 - probably some is hard to know what to do
112:36 - I was gonna like do the whole thing
112:38 - where I encapsulate the whole thing in a
112:39 - chain that's going to take too long
112:41 - let's just go and add the um forget
112:44 - about this uh forget about this chain
112:48 - thing uh let's make sure this is still
112:50 - working I'm I'm kind of running out of
112:52 - steam a little bit here so this works
112:56 - let's just change the parameters a
112:57 - little bit so it's easier to grab onto
112:59 - the
113:00 - stuff
113:02 - um I am going
113:05 - to uh let me let me just add some
113:08 - drawing here so let what I'm going to do
113:16 - is
113:17 - um make these a little bit bigger
113:22 - we go yeah I'm just going to do that
113:24 - okay um
113:27 - okay so I am going to in this next brief
113:32 - tutorial I'm going to add a mouse
113:34 - constraint so that you can grab and move
113:36 - things
113:37 - around and I will
113:42 - also um that's
113:46 - it yeah okay uh okay so let's do that
113:56 - um let me press the button on the
113:58 - camera I think it works if I just come
114:00 - back here and press it every once in a
114:01 - while it gives me another half an hour
114:04 - and it is 1 o'clock this might
114:05 - unfortunately be the last thing that I
114:06 - do in this uh morning which is no longer
114:09 - even close to the morning I think I
114:10 - could use some lunch and I've got a lot
114:12 - of other things to do today if I'm going
114:14 - to make it back to to make some more
114:16 - videos but um let me
114:21 - um let's get let's make this happen
114:23 - let's make this
114:26 - happen
114:28 - Okay uh all
114:32 - right okay one more possibly many more
114:35 - but at least right now in this moment
114:36 - one more matter.js video so this is an
114:40 - example that I made in the previous
114:41 - video which has this nice chain of these
114:44 - circles and that are connected with
114:46 - these constraints and what I really want
114:48 - to be able to do is I want to click on
114:49 - it oh I want to interact with it so one
114:52 - what there's a there matter.js has built
114:54 - into itself something called a mouse
114:56 - constraint and a mouse constraint is a
114:59 - constraint that's not connected between
115:02 - the um not connected between two bodies
115:06 - but connected between one body and the
115:08 - mouse now what's interesting about this
115:10 - is you know you might want to eventually
115:13 - apply this to something that's not
115:14 - actually the mouse but you could make an
115:16 - interactive system where a connect
115:17 - sensor is like doing hand tracking and
115:19 - you're able to move things around with
115:20 - your hand all that is possible but I'm
115:22 - going to show it to you with the mouse
115:25 - so let's see how uh let's see how this
115:29 - works um okay so what I need to do is I
115:32 - need to go back to the matter.js
115:35 - documentation and I want to look at
115:37 - Mouse constraint so Mouse go just as
115:40 - with everything we've learned right now
115:42 - uh everything's namespaced under matter.
115:44 - something so I want to work with the
115:45 - mouse constraint so I want to make sure
115:48 - I add uh I'm going to say uh Mouse Mouse
115:53 - constraint equals matter. Mouse
115:55 - constraint so now I have that and then I
115:57 - create a mouse constraint by calling the
115:59 - create function so I am going to make a
116:04 - variable called M constraint for Mouse
116:06 - constraint for short Global
116:09 - variable and at the end of setup I've
116:12 - added all my particles all of their
116:14 - constraints I'm going to say m
116:16 - constraint equals Mouse
116:20 - constraint. create now the mouse
116:22 - constraint gets created with attached to
116:25 - a particular engine right it could have
116:26 - multiple physics engines within the same
116:28 - sketch pretty rare that you want to do
116:29 - that but it's possible so I'm going to
116:31 - put in engine and then I'm going to what
116:35 - else options so once again I'm going to
116:38 - make a set of options for this mouse
116:42 - constraint now what are those options
116:44 - got to go back to this the following
116:47 - properties are specified for objects
116:49 - created by Mouse constraint. create so
116:51 - these are the options that I need a body
116:54 - what is it connected to oh do I really
116:55 - need that no no no no that's not I'm not
116:58 - setting that that's going to happen by
117:00 - working with the mouse Collision filter
117:01 - other some
117:03 - constraint Mouse I know I need this
117:07 - because I need to tell matter.js about
117:10 - the mouse so I'm actually backing up a
117:13 - second I need to go look under Mouse so
117:15 - before we even do mouse constraint what
117:17 - I actually need is to add a reference to
117:20 - Mouse equals matter. Mouse
117:23 - so now I also need to
117:26 - say VAR Mouse equals mouse. create now
117:31 - here's the complicated
117:33 - question create element element HTML
117:36 - element so this is really interesting
117:37 - matter.js is a physics Ed that's going
117:40 - to handle that a lot of the interaction
117:41 - stuff behind the scenes for you so I
117:43 - actually just want to say just just
117:46 - attach yourself to a given Dom element
117:49 - that's on the web page that's going to
117:50 - get mouse events so that you matter.js
117:52 - can get those Mouse events and so the
117:54 - thing that I want is my canvas so how do
117:57 - I get the actual HTML element associated
117:59 - with my P5 canvas well this is
118:02 - how uh the canvas is made with create
118:06 - canvas but there's no reason why I
118:09 - couldn't put that into a variable create
118:11 - canvas actually returns a reference to
118:14 - the P5 canvas
118:16 - object and inside that canvas object is
118:19 - a property called elt
118:23 - which is actually the HTML 5 canvas
118:26 - associated with the P5 canvas P5 canvas
118:29 - is just a wrapper for the htl 5 canvas
118:31 - with some extra functionality so I can
118:33 - say create a mouse that's attached to
118:36 - the P5 canvas and
118:39 - then oh uh okay well I need to do that
118:42 - first and then I would do this now this
118:45 - is a little bit confusing it's like the
118:46 - property is mouse but it's set to Mouse
118:48 - which is this variable so I might just
118:50 - call this like my C I might just just
118:53 - for the sake of clarity I might call
118:55 - that canvas Mouse so I can see those are
118:57 - the options maybe that's all I need what
118:59 - are the chances that's all I
119:02 - need uh cannot read property creative
119:06 - undefined sketch. JS line
119:08 - 54 undefined mouse. creat canvas. what's
119:13 - undefined maybe
119:15 - mouse mouse equals matter. Mouse no yeah
119:19 - what did I miss here I'm looking in the
119:21 - chat to see if somebody sees it before
119:23 - me uh
119:25 - console.log
119:28 - mouse let's make sure that's not
119:30 - undefined oh it is
119:32 - undefined so what did I do wrong up
119:35 - here oh this is capital M there we go
119:39 - case sensitivity you got us again there
119:42 - we go okay there we go now what's the
119:46 - chance I can just click on these and
119:47 - have something happen this isn't doing
119:48 - anything so there's first of all there's
119:50 - a weird sort of thing that I know can
119:53 - happen oh also I didn't add it to the
119:56 - world so this is easy to forget I need
119:58 - to say world do add World comma M
120:03 - constraint because I want do I need to
120:05 - add the mouse to the world I don't think
120:07 - so maybe I do but I definitely need to
120:09 - add the mouse constraint to the
120:12 - world so it's not doing anything if I
120:15 - click on them but there is an issue
120:17 - there is a very significant issue that
120:19 - could be at play here that I'm not so
120:21 - sure about but I'm going to let's fix
120:23 - this issue before I find the other
120:25 - issues one thing you might not be aware
120:28 - of is that a lot of computers that you
120:31 - might be using uh have a screen attached
120:33 - to them that is a high density display
120:36 - meaning like a Mac retina or a plenty of
120:40 - other examples of this but that there's
120:42 - actually four pixels per every kind of
120:44 - single Pixel I mean there's really the
120:46 - the pixels are the pixels but there's
120:48 - more pixels per what we kind of like
120:50 - think are the units of measure
120:51 - measurements for the window and in that
120:54 - case the the coordinates might be off
120:57 - and so I can actually uh I can actually
120:59 - fix this if I go to Mouse constraint
121:04 - Mouse and look for Pixel ratio okay hold
121:07 - on where is that or is that in the
121:08 - constraint I know there's a pixel let's
121:11 - Okay so let's look console.log canvas
121:14 - Mouse so it might not be in the
121:16 - documentation but thanks to leabu on
121:18 - Twitter who pointed this out to me I'm
121:20 - going to run this again
121:22 - and let's look at this let's ah pixel
121:24 - ratio so there is a pixel ratio property
121:28 - to that Mouse and so I need that I need
121:31 - to make sure that pixel ratio is the
121:33 - right number and it's going to by
121:34 - default be one but if I'm on a high
121:36 - density display where the pixels are
121:38 - doubled it needs to be two so what I can
121:41 - actually just do here is I can say
121:43 - canvas mouse. pixel ratio I could just
121:47 - alter it like this now here's the
121:48 - wonderful thing P5 actually has a
121:50 - function built into itself which will
121:52 - dynamically discover like what is the
121:54 - pixel ratio so I can actually just set
121:56 - it equal to that function pixel density
121:59 - which will return so this code will
122:01 - actually work whether it's on a high
122:02 - definition High Den sorry high density
122:05 - display or not I don't think that was
122:06 - the problem here but we're we're
122:08 - certainly going to need that oh it was
122:10 - the problem look at that my mouse so
122:12 - that was actually all there was so
122:13 - that's great to see so now my mouse
122:15 - constraints are working so I can click
122:17 - on these things and now I can't click on
122:20 - the fixed one you can see a lot of
122:21 - there's a lot of like weird stuff going
122:23 - on here so there's a couple things I
122:25 - want to fix about this but so far pretty
122:27 - good number one is this is really I
122:29 - really need to see what I'm doing it
122:31 - would really be helpful for me to at
122:33 - least draw something when I click so
122:36 - what I want to look at is the properties
122:39 - of the mouse constraint so I want to
122:41 - look at the properties of the mouse
122:46 - constraint because I'm going to console
122:48 - log Mouse constraint now
122:52 - so let's look at this look at this body
122:54 - null there is no body because I'm
122:58 - currently not there is the that that
123:00 - property of the object is going to be
123:02 - associated with whichever thing that I'm
123:04 - clicking
123:05 - on uh so what I want to do is say for
123:11 - example if M
123:14 - constraint. body this means if a body
123:18 - exists that means I'm currently I've
123:19 - clicked on one of them so I just want to
123:21 - do I want to get VAR position equals uh
123:26 - M constraint. body.
123:29 - position and uh I want to um just
123:33 - quickly highlight it so I'm going to say
123:34 - fill uh I'm make it green and I'm going
123:37 - to draw just an ellipse there I this is
123:39 - totally like a wackadoodle thing to do
123:41 - because it makes no sense um but just to
123:43 - sort of see that this is working so you
123:45 - can see that now whichever one that I've
123:47 - clicked on gets highlighted as green so
123:49 - this is a way to figure out what's being
123:51 - clicked on by looking at the M Mount M
123:53 - constraint and seeing if it actually has
123:55 - a body associated with it um but really
123:57 - what I want to do is uh look at look and
124:00 - mouse has pixel ratio to Mouse has a
124:03 - position there so what I actually want
124:04 - to do is I want to draw a line so I also
124:07 - want to look at varm equals m
124:10 - constraint. mouse. position which I
124:13 - actually know is M Mouse X and mouse y
124:15 - because P5 will give that to me but I
124:17 - might as well just get it from the
124:19 - constraint just to be sure and now what
124:21 - I want to say is I'm going to have a
124:23 - green uh outline
124:26 - color and I'm going to draw a line from
124:29 - pause X pause y to MX m.x m.y now we're
124:34 - going to have an issue here which you'll
124:36 - see in a second so but this should show
124:39 - me which one I'm connected to so I'm
124:41 - going to zoom in just so you can see
124:43 - this I'm going to click on one of them
124:45 - now look at that now it's working it's
124:47 - showing what I'm doing and how I'm
124:49 - pulling it but I'm G to let me go
124:52 - uh let me try to go up to the top here
124:53 - to show you a sort of issue I'm going to
124:55 - click on the edge there click really
124:56 - high up on it look it's pulling it from
124:59 - the center but it's actually not pulling
125:01 - it from the center so no matter what I'm
125:05 - drawing my line based on the center of
125:07 - that body but I didn't click on the
125:09 - center of that body so the constraint is
125:11 - not actually attached to the center so I
125:13 - need to find out that offset position so
125:15 - if I go back in here in addition to
125:18 - body under constraint
125:22 - point a I think is the offset or could
125:27 - be point B I don't really know I think a
125:31 - so I should just read the documentation
125:33 - but I think a is probably well let's
125:36 - find out so I want to go to body.
125:39 - constraint. point A or B is going to be
125:42 - that offset position so I'm going to say
125:45 - VAR offset equals m
125:47 - constraint.
125:50 - body Dot constraint no no no m
125:53 - constraint.
125:55 - constraint. point a let's try that and
125:59 - so now I want to draw the line from
126:00 - pause X Plus offset dox and pause y plus
126:05 - offset doy okay let's see if this fixes
126:08 - this for us so I'm going to click here
126:11 - oh something crazy has happened so
126:14 - that's clearly not
126:15 - right I don't know what that is so maybe
126:18 - that's doing something point a is
126:20 - associated with the Mouse so let's try
126:23 - point B maybe that was the correct one
126:26 - and I'm sure if I read the documentation
126:28 - it explains it but I'm just doing this
126:29 - through trial and error to learn how it
126:31 - works yeah there we go so you can see
126:34 - I'm now actually attached to the correct
126:36 - part of it based on that offset and I
126:38 - can pull it around now one thing that
126:40 - I'm not showing you here there's a
126:42 - there's an issue with using circles in
126:44 - with a physics engine because there's a
126:46 - lot of angular velocity and Ro um
126:49 - there's angular velocity to what these
126:50 - things are doing and I can't see it and
126:52 - it's sort of weird to suddenly see that
126:54 - line kind of rotate around the thing so
126:56 - one thing just in terms of drawing if I
126:57 - used an image Sprite to draw there
126:59 - that's going to have like you know eyes
127:00 - on it and a nose or something I'd see
127:02 - this more easily but just for sort of
127:04 - debugging one thing I want to add here
127:06 - is just draw a line from the center to
127:09 - this to this R so this and uh it's
127:13 - already 255 so so if I do this we can
127:16 - see that line there so this is going to
127:18 - give me oh more of a sense of yeah you
127:22 - can see these things are kind of like
127:23 - spinning and what they're doing um as
127:25 - they're interacting now one thing is
127:27 - they they do they they have Collision
127:29 - geometry so you could make the argument
127:31 - here that I actually want to ignore
127:33 - their Collision AR that's another thing
127:35 - I could go there are actually Collision
127:36 - filters built into matter.js where I can
127:39 - tell certain things to collide with each
127:40 - other and other things not to collide
127:41 - with each other and you know you you
127:43 - could make a case maybe where I um I
127:46 - want these to be able to pass through
127:47 - each other in terms of how the behavior
127:49 - of this is working but anyway you can at
127:51 - least see here now how I'm able to use
127:53 - the mouse to kind of uh toss stuff
127:55 - around and interact with the elements in
127:57 - the canvas which is what I wanted to
127:59 - demonstrate in this particular video so
128:01 - thank you for watching uh and um this
128:05 - this matter.js this I'm kind of not
128:07 - finished because you know you might be
128:09 - in the future and you might see they
128:10 - like oh my goodness there's five more
128:12 - matter.js tutorials after this but right
128:14 - now the time at the time that I'm
128:15 - recording it right now this is the last
128:17 - one um there's plenty more aspects of
128:19 - matter.js but I will do some coding
128:22 - challenges to kind of make uh certain
128:24 - little mini projects with matter.js one
128:26 - of which I want to do is maybe like a
128:27 - Plinko machine so you might see that up
128:29 - at some point soon but write in the
128:31 - comments if you have other matter Dutch
128:33 - ask questions and maybe I'll make some
128:34 - future video follow-ups about that okay
128:37 - so thank you very much for watching and
128:39 - I'll see you in another video
128:41 - goodbye okay it is 1:10
128:46 - p.m. and here are the things that I
128:49 - didn't get to today
128:51 - I didn't get to doing the Plinko coding
128:54 - challenge I didn't get to looking at
128:56 - texturing geometry in processing in 3D
128:59 - in Java so that's um something I wanted
129:01 - to do with a flag coding challenge so
129:03 - I'm going to attempt to come back
129:05 - probably around 5 or 6 pm and do those
129:10 - coding challenges to try to like finish
129:12 - that stuff off for today uh but I think
129:14 - it's smarter for me to take a well first
129:17 - of all I don't have the time right now
129:18 - to keep going but I can't see how long
129:20 - this has been going because it stopped
129:22 - and started so many times but uh um I
129:26 - will I I've been I've been here for what
129:28 - did I start around 10 11 so a little
129:30 - over two hours so I think I'm running
129:32 - out of steam uh and so ah but I also did
129:37 - not do the studio walkthrough so it's no
129:41 - this is what happens I really want to do
129:43 - that studio walkthrough but every time I
129:44 - have a free minute I'm like a but
129:46 - there's more tutorials I could do so
129:48 - we'll see maybe I can kind of do the
129:49 - studio walkthrough just in like 10 or 15
129:51 - 15 minutes from my phone it's like a
129:52 - mobile live stream quickly before I do
129:54 - those coding challenges um now one other
129:57 - thing I want to mention which is really
129:58 - too bad that I'm doing this at the end
129:59 - because I really should have done it at
130:00 - the beginning but I I did uh I did pick
130:03 - this t-shirt which is from Google summer
130:05 - of code
130:06 - 2011 I'm not a I have no um I don't work
130:10 - for Google I do I do have I am
130:12 - participating in Google summer of code
130:13 - so I I do have some affiliation but this
130:15 - is not I'm not speaking for Google or
130:18 - Google sum of code here I'm speaking for
130:19 - myself but um I'm going to Google Google
130:21 - summer of code if you are a student this
130:24 - is a program that is now open in taking
130:26 - student applications um uh I want to go
130:29 - summer of code summer of Co
130:34 - code.google.com so this program works I
130:38 - I could there's a lot there's a lot to
130:40 - this program and I encourage you to read
130:42 - the website click on how it works go
130:44 - over all the FAQs see if you're eligible
130:46 - if you're not a student you might be you
130:48 - could be a mentor potentially um but so
130:51 - I'm encouraging you to apply I am
130:53 - especially encouraging you to apply if
130:55 - you are um uh a member of an
130:58 - underrepresented group because um you
131:00 - know one thing that these programs could
131:02 - really use is a diversity of voices so
131:04 - please if I can help you with your
131:06 - application um and encourage you to
131:08 - apply I would love to do that you can
131:10 - kind of make maybe tweet me at shiftman
131:11 - would be the best way so I'm going to
131:12 - click here on
131:13 - organizations and you can see there's a
131:15 - lot of open-source organizations that
131:17 - are involved in Google sum of code the
131:19 - one of the reasons why I'm bringing this
131:21 - up I would I would love to I would bring
131:22 - this up anyway because this is a great
131:24 - uh uh uh you know in case I didn't
131:26 - mention it if you are accepted into
131:28 - Google summer of code you work full-time
131:30 - over the summer on an open source
131:32 - project and are paid a stipend by Google
131:34 - which I believe is $5,000 uh don't quote
131:36 - me on that you have to read the FAQ but
131:38 - I believe that's the fee and you can do
131:40 - this from anywhere in the world you do
131:41 - not have to be uh um you can do it from
131:44 - anywhere um maybe there are some
131:46 - countries I don't know if there um but
131:48 - any read the FAQ it's not it's not
131:51 - United States uh specific um okay so I'm
131:54 - I'm going down I'm going down I want to
131:56 - go down and find under P processing but
131:59 - it's not under P you've got to keep
132:02 - going and actually go under
132:04 - T to find the processing foundation so
132:08 - I'm going to click on that and I'm going
132:10 - to read you the processing foundation's
132:11 - mission is to promote software literacy
132:13 - and visual literacy and to make these
132:15 - fields accessible to diverse communities
132:18 - so I'm going to click learn more and now
132:20 - there's even more you could read uh our
132:23 - goal is to empower people of all
132:25 - interest and backgrounds to learn how to
132:26 - program and make creative work with code
132:29 - especially those who may not otherwise
132:30 - have access to these tools and resources
132:32 - uh we do this by developing uh
132:34 - processing which is a Java based
132:36 - platform p5js which is a JavaScript
132:38 - based platform and processing. py which
132:40 - is actually a python mode part of the
132:42 - processing development environment so I
132:44 - encourage you to read more about this
132:45 - here uh chat where does that go to uh
132:49 - that's going to take you to the Forum so
132:51 - if you have an idea uh this is the place
132:53 - where you should post it to get feedback
132:55 - I check this about once a day and um
132:58 - this is one I haven't replied to yet
133:00 - this is one I haven't replied to yet
133:01 - either but you can see there's a couple
133:03 - ideas here uh and again you can apply to
133:05 - other organizations uh and then contact
133:08 - email I don't know where that goes to
133:10 - Twitter I don't know where that goes to
133:12 - um so uh I encourage you to think about
133:15 - applying um uh I assume oh view ideas
133:19 - list this is another place this is an
133:20 - important place to to go if you go click
133:21 - on this view ideas list this is a uh
133:25 - wiki page on the processing GitHub that
133:27 - goes through it you know it has some
133:29 - information about Google summer of code
133:31 - oh I need to update this because it says
133:32 - we are in the process of applying to
133:34 - Google summer of code so I need to
133:35 - update this Wiki to have the to say
133:37 - we're accepted and have links to it um
133:40 - and then um you can see some past
133:42 - summers that we've participated in with
133:44 - projects and then here you can read
133:46 - through and look at different things
133:48 - that we're thinking about but I would do
133:50 - would like to
133:51 - say you don't have to have an idea
133:53 - that's on this list you could have an
133:56 - idea of how processing a library that
133:58 - you've been thinking about could be good
133:59 - for processing or P5 or processing dipy
134:01 - a feature that you think those
134:03 - environments could really use so you can
134:05 - come up with really with your own um own
134:07 - proposal uh and then the other thing
134:09 - I'll mention I have mentioned this
134:10 - before but we are also participating in
134:12 - something called rails girls summer of
134:14 - code so this is another and this you do
134:17 - not have to be a student to apply to so
134:19 - this you can also look into as another
134:21 - place to apply to work on processing and
134:24 - other open source projects over the
134:25 - summer so um I'm trying to think of what
134:28 - else to say uh if you are accepted you
134:30 - work I think it's supposed to be
134:32 - full-time over the summer I don't know
134:34 - what that period is exactly and then you
134:36 - are also assigned to Mentor uh somebody
134:38 - who already works on processing or a
134:40 - related uh tool who then uh works with
134:43 - you over the summer to realize the goals
134:45 - of your project and evaluates your work
134:48 - um um but all the administration and the
134:50 - application process all of that is
134:52 - handled through Google so if you have
134:54 - questions about eligibility and what's a
134:56 - valid project versus not a valid project
134:59 - um in terms of um strict rules those are
135:02 - things you need to look at through
135:03 - Google okay um so I would like to take
135:07 - two or three minutes right
135:12 - now uh play my Goodbye music to answer
135:15 - any questions in particular if you have
135:17 - a question about Google summer of
135:19 - code um um and or anything I looked at
135:23 - today I'm going to I'm try keeping an
135:26 - eye on the YouTube chat and the slack
135:28 - chat the slack channel is for patrons if
135:31 - you're interested in supporting the work
135:32 - that I do uh you can sign up at the
135:34 - coding tr.com it's a monthly
135:36 - subscription fee to participate in the
135:39 - uh slack Channel where we discuss topic
135:41 - ideas and answer questions but everyone
135:42 - is always available uh to watch this
135:44 - stuff for free or you know whatever
135:46 - through whatever magical YouTube
135:48 - advertising thing that happens as well
135:50 - um
135:51 - room tour boy you guys really want that
135:53 - room tour okay I'm going to prioritize
135:56 - that uh I'm sorry if you asked me a a a
135:59 - message a direct message I'm not going
136:01 - to see those right now because I have to
136:02 - click around I just have a view of the
136:04 - live Channel right now um sorry lost J I
136:07 - will look at it and ask you after answer
136:10 - afterwards
136:12 - um so uh Daran asks I have lack of
136:15 - knowledge can I participate in Google
136:17 - summer of code so this is a very good
136:20 - question you you do not need to be an
136:21 - expert I encourage you to apply to
136:23 - Google summer of code especially even as
136:25 - a beginner one of the things we like to
136:27 - do with the processing Foundation is
136:29 - bring in new people to open source and
136:34 - you can't do that by only getting
136:35 - experts who have been working in
136:37 - whatever for many many years so to have
136:39 - new voices to have new energy beginners
136:41 - need to feel that they're welcome so I
136:43 - think it really then though if you're a
136:45 - beginner it's really about crafting a
136:47 - proposal around something that's
136:48 - reasonable so maybe you don't want to
136:50 - apply to revamp like a very complex part
136:54 - of the processing IDE but making a
136:56 - library that adds a sort of like
136:58 - mathematical algorithm that you know
137:00 - something about but maybe you're not as
137:01 - experienced of a programmer a mentor
137:03 - could help you realize that so I think
137:04 - it's really about crafting The Proposal
137:06 - with your skill
137:07 - [Music]
137:09 - set
137:12 - um I'm looking for more questions I
137:14 - actually don't see any more questions
137:15 - I'm seeing somebody say to that the
137:18 - question was I only see the last two
137:19 - comments is there a way to use keyboard
137:21 - with matter uh that um yes you
137:24 - absolutely can use the keyboard with
137:25 - matter but you're probably going to have
137:26 - to uh sort of an it depends type of
137:28 - thing because you can get the keyboard
137:30 - events are going to come through p5js
137:31 - and then you're going to call various
137:34 - functions associated with the physics
137:35 - Library based on those keys that are
137:38 - implemented uh processing yes where
137:41 - should I go if I want to Port processing
137:42 - to another language is it open source
137:45 - it's absolutely open source everything
137:46 - about processing is at github.com
137:51 - SL processing this is our processing
137:53 - Foundation uh GitHub page there's a
137:55 - repository for P5 P5 website the web
137:58 - editor processing Android pause for a
138:01 - second oh it ended processing do
138:04 - documentation sound so you can see
138:05 - there's a lot of repositories it's all
138:06 - open source uh um uh uh Michelle Michael
138:11 - Michelle in the chat asks you should add
138:14 - physics to processing uh so physics is
138:17 - not built into processing however there
138:19 - are many libraries are processing
138:21 - libraries that you can do uh with
138:23 - physics and I actually the reason why I
138:25 - looked at matter.js today is because I
138:26 - already have a whole set of tutorials
138:28 - about working with box 2D and toxic Libs
138:31 - which reminds me I should do an updated
138:33 - toxic Libs tutorial because you need to
138:35 - get the library in a slightly different
138:36 - way probably than I presented somebody
138:37 - help me remember that maybe I can just
138:39 - do that in a couple minutes later today
138:41 - um okay so thank you everybody uh it is
138:44 - 1:20 p.m. I believe this has been a 2
138:47 - and a half hour live stream though it's
138:48 - hard to say because it kept crashing uh
138:50 - thank thank you again for your support
138:52 - for watching for your kind words your
138:54 - feedback for your critical uh uh for
138:58 - your constructive feedback about things
139:00 - that I could do better I'm always happy
139:01 - to hear uh share with me things that
139:04 - you've made um and do not forget to make
139:08 - a self-avoiding random walk in the
139:10 - future so I'm I would like
139:13 - to uh see C Manny I think uh is working
139:17 - on some ideas around improving my topics
139:20 - suggestion system where you know I can
139:23 - get a a sense of what the audience is
139:25 - really interested in through more upo
139:27 - voting so if you really want me to do
139:28 - that self-avoiding walk I'm absolutely
139:31 - happy to do it um go find the GitHub
139:33 - issue on the rainbow topics repo and put
139:35 - a thumbs up on it and that will move it
139:37 - to the top right now okay um see you
139:41 - guys and I'll be back this evening I'm
139:44 - excited for that uh I I'll definitely be
139:46 - back even if all I do is the room tour
139:49 - I'll be back and at some point I will do
139:50 - those other things on my list it's just
139:51 - a matter of when I get to it okay um I
139:54 - got I got I got to turn this off now how
139:57 - do I do that I just pressed a button
140:00 - over here it's always this weird thing
140:02 - uh it's always this weird thing to turn
140:03 - it off something you know what this
140:06 - YouTube TV thing I'm kind of interested
140:07 - in I know if you guys heard about this
140:09 - is this G to help what I'm doing here
140:11 - and make it available in a different way
140:13 - for other people do I need to be more
140:14 - professional in my production values uh
140:17 - okay stay tuned I'm hopefully going to
140:18 - launch the coding train merchandise
140:21 - store uh next week and maybe if you have
140:23 - some ideas for some like little contests
140:25 - or something I could run to like give
140:27 - away some stuff I would love to give
140:28 - away some stuff as well so if you have
140:29 - any ideas about that send me your ideas
140:31 - on Twitter okay
140:33 - uh um okay uh and I'm going okay one
140:39 - question one last question because
140:40 - sandep posted it twice although I
140:42 - shouldn't reward the posting the
140:43 - question over and over again uh in your
140:45 - Mosaic challenge how to do with RGB
140:48 - values at least a hint h
140:51 - boy and I read that question so I have a
140:52 - coding challenge where I make a photo
140:54 - Mosaic just based on grayscale values
140:56 - with RGB values I might do something of
141:00 - looking at what one way I could do it is
141:01 - look at the average value the average
141:03 - color of a particular small image tile
141:06 - and then maybe look at the distance
141:08 - between that color and the um so instead
141:11 - of having specific images for certain
141:13 - grayscale values I could just have a
141:15 - pixel and try to find the image that's
141:17 - color most closely matches it but that's
141:21 - only a small little inkling of a way of
141:23 - doing this there's probably a lot of
141:24 - more sophisticated ways of really
141:25 - thinking about the um not just the
141:27 - average color of your tile but like kind
141:29 - of where the color is and that sort of
141:30 - thing but okay so I'm going to go and I
141:34 - will um so if uh um Co um wwtf blah blah
141:38 - blah blah blah asks what is the time
141:40 - commitment for Google summer of code
141:42 - read their FAQ on the Google summer of
141:44 - code uh website it goes through that in
141:45 - detail my sense is that they would like
141:47 - it to be kind of like a full-time
141:48 - activity that doesn't mean that you
141:50 - probably do the Google summer of code
141:52 - work I think in my eyes in like off
141:53 - hours but really you should read their
141:56 - FAQ there's very strict and specific
141:57 - rules about that I really shouldn't
141:59 - answer these questions because I'm not a
142:00 - representative of Google um and so you
142:03 - should there's actually a discussion gr
142:05 - list in a place where you can ask those
142:06 - questions about Google in terms of what
142:08 - those eligibility requirements are uh C
142:10 - Manny asked when is the World Tour I
142:12 - don't know I'm I would be love to go on
142:14 - a world tour I don't know what that
142:15 - means coding train live I there is a
142:18 - possibility that a coding train live
142:19 - might happen in a CT next fall because
142:22 - there's a thing that might happen that I
142:24 - could do something from with like a live
142:26 - I would love to do something with like a
142:27 - live studio audience I know that um
142:29 - there are people who do this there's
142:30 - like standup maths which is uh um which
142:32 - is something I think in the UK about
142:34 - like math stuff they do this I don't
142:35 - know if I'd be very good at that but
142:37 - anyway uh someday and Seb Seb Lee delile
142:41 - is an artist also in the UK who does
142:42 - some kind of like live coding stuff in
142:44 - live like in person um and actually I I
142:47 - do have access now with my subscribers
142:48 - to YouTube Studios which is there's one
142:50 - in New York there's one in London
142:52 - there's one in California there's a
142:53 - bunch and they have I think a theater
142:55 - there so maybe I should think about
142:57 - trying to do that so I could do a coding
142:58 - train if someone wants to help me figure
143:00 - this out or knows about YouTube Studios
143:02 - somebody works at YouTube can get in
143:04 - touch with me uh I would love yeah so I
143:06 - I might be in London over the summer in
143:08 - which case I would maybe try to do
143:09 - something there um U people are asking
143:11 - if that I don't know if that's really
143:12 - happening but so I would love to do I'm
143:13 - open to ideas love to do something like
143:15 - that I think that would be a lot of fun
143:16 - especially love to do it with like
143:18 - guests have other people come like kind
143:19 - of an evening different people doing
143:21 - coding stuff that's not just me in
143:22 - particular so let's think about that
143:24 - coding train Community choo choo we'll
143:27 - all take the train you know there's this
143:28 - thing by the way called Indie train game
143:31 - Jam train Jam train Jam hashtag let's
143:36 - look
143:39 - twitter.com I'm GNA go to
143:42 - uh hash train Jam I think look at this
143:46 - it's already 130 I'm still here uh yeah
143:50 - there's like a train Jam let's look at
143:52 - the which is which is like people doing
143:56 - making games on trains and I feel like
143:59 - what a wonderful idea I don't know
144:02 - that's all I have to say about the
144:03 - camera went off that means goodbye I'm
144:05 - out mic drop see you tomorrow oh no
144:07 - tonight later whatever it might be
144:08 - tomorrow your time