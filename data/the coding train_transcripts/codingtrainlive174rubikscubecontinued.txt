00:08 - [Music]
01:10 - hello happy Wednesday it is the coding
01:13 - training with your host me Daniel
01:15 - Shipman thank you to brilliant for their
01:19 - sponsorship of this livestream once
01:21 - again if you go to brilliant tot org
01:24 - slash coding train and sign up for free
01:26 - there that will let them know you found
01:28 - brilliant from this video and the first
01:31 - subscribers towards subscribers will get
01:32 - 20% off so I'll talk a little bit more
01:35 - about brilliant later I'm gonna try to
01:36 - solve one of the puzzles the daily
01:38 - puzzle for brilliance today in
01:40 - JavaScript but what I am here today to
01:42 - do is work on my Rubik's Cube problem
01:47 - because I am totally obsessed my house
01:49 - now it's not really a house apartment
01:51 - whatever we call it's the small box in
01:55 - New York City actually in Brooklyn New
01:56 - York is full of different cubes I've got
01:59 - the Scoob the pyramix the pyramix duo
02:02 - the 2x2 the 3x3 so many of these I don't
02:06 - know I don't know if this is a good
02:08 - thing but at least you know if I'm gonna
02:09 - get
02:10 - be looking at something while I'm
02:11 - walking down the street so much better
02:13 - to look at a cube than my phone which is
02:14 - really just not the way we should all be
02:16 - living as my mic working yes are people
02:20 - watching me I think so
02:22 - so here's the thing let me just get this
02:25 - shot up over here so I can see it
02:28 - welcome everyone I have a bit of a
02:30 - problem which is that I want to continue
02:33 - working on my Rubik's Cube code but and
02:35 - I have this new cube which is so much
02:37 - nicer but it's not solved
02:40 - I meant to solve it and I just ran out
02:43 - of time this morning so I'm gonna do the
02:46 - really awful embarrassing thing of
02:48 - trying to solve it relatively quickly I
02:50 - think I can do it within five or ten
02:52 - minutes I mean I know the discussion and
02:54 - the chat before I went live was all
02:56 - sorts of people talking about how they
02:57 - can solve a cube in 30 seconds or 20
02:59 - seconds or 45 seconds and there's C
03:01 - fought but bebop and we bop all sorts of
03:04 - different strategies I don't know any of
03:05 - that stuff but I want to learn I want to
03:07 - learn teach me about the ways of the
03:09 - cube I'm really obsessed but I have to
03:14 - stick to my thing that I do in life
03:16 - which is coding and live-streaming and I
03:20 - do think this is an interesting example
03:21 - that's getting out so much that has to
03:23 - do with arrays and multi-dimensional
03:24 - arrays and 3d rendering and eventually
03:28 - machine learnings I want to look at
03:30 - seeing if I can get a genetic algorithm
03:31 - to evolve the solution given any given a
03:36 - gift given a specific opening state and
03:39 - then see if there's any way to apply
03:41 - maybe neuro evolution or a neural
03:43 - network as well to optimize towards
03:46 - solving the cube without sort of preset
03:49 - algorithm alright so apparently the
03:54 - world-record holder of solving the cube
03:56 - is watching right now I'm saying that I
03:58 - can solve it in three point two six ten
04:00 - seconds all right so let me see here the
04:02 - let me see if I can get this solved this
04:05 - is the worst thing ever you can all
04:08 - shout at me in the chat about how I'm
04:10 - doing it wrong but I won't I won't be
04:14 - able to hear you I lost track of what
04:19 - I'm doing I'm solving the cube
04:23 - yes solving the
04:24 - cube how am i doing that like this
04:28 - where's that yellow side ah I dropped it
04:33 - what it might even what am I even doing
04:36 - with my life I can't okay I have to stop
04:40 - talking okay I got to go into my solving
04:59 - two cubes oh no no contest this week
05:07 - [Music]
06:02 - [Applause]
06:03 - [Music]
06:05 - [Applause]
06:07 - [Music]
06:10 - [Applause]
06:12 - [Music]
06:15 - [Applause]
06:18 - [Music]
06:49 - [Applause]
06:51 - [Music]
07:59 - that's the
08:01 - [Music]
08:09 - Oh
09:38 - [Music]
09:57 - I really I this is the step as soon as I
10:13 - can get to the part where I have this in
10:14 - the corners or as soon as I get the part
10:17 - we're gonna have the yellow I can do
10:18 - this instantly and I can never get the
10:20 - yellow side solved this is the problem I
10:23 - knew I should have done this because I
10:25 - really want to get to coding but I'm
10:26 - only ten minutes in things are things
10:28 - are going I'm starting to sweat all
10:30 - right let's just try yes there we go
10:35 - okay there we go okay I think I'm gonna
10:39 - get it now way ahead of the game
10:54 - [Music]
11:30 - okay there we go
11:34 - [Music]
11:42 - okay where do I turn this camera off
11:46 - there we go
11:47 - okay oh wait hold on look here's my cube
11:58 - this cube has a purple side isn't that
12:00 - interesting
12:00 - strange purple side or maybe it has an
12:04 - orange side all right stretch everybody
12:10 - stretch let's find the code I'm gonna
12:15 - open up my Rubik's Cube code I'm going
12:21 - to alright so here's the thing one thing
12:23 - I want to talk about very briefly is
12:24 - this is what I made last week and if I
12:27 - did things if I did it correctly the
12:30 - green side is now facing me and as I
12:33 - look to the top I see yellow as I looked
12:35 - at the bottom I see white as I look to
12:37 - the right I see orange as I look to the
12:39 - left I see red
12:40 - so I programmed this correctly now the
12:43 - thing is there is no such thing you know
12:46 - went the way that I learned to solve the
12:48 - cube in the last week basically is by
12:50 - thinking of the white as the top and so
12:54 - a front turn would be this or a turn on
12:58 - up clockwise turn would be like this
13:01 - counterclockwise would be like this but
13:02 - of course and yellow could also be
13:05 - conserved the top a tower could be the
13:06 - bottom and I could do everything
13:07 - relative to the white and the yellow
13:09 - side but of course you can do it any
13:12 - which way you want you could do this you
13:14 - could consider the blue the top and
13:15 - solve it that way it's symmetrical
13:17 - perfectly symmetrical on all sides but I
13:21 - think for me to be able to figure out
13:22 - the next step in terms of like actually
13:25 - doing some rotations of the cube I'm
13:26 - gonna stick with this white as the top
13:28 - convention and what I actually want to
13:31 - see then is when I run it when I run
13:35 - this code I want to see white there on
13:40 - the top so why what have I done in the
13:46 - way that I've programmed it
13:49 - incorrectly like I one thing that I
13:51 - could do because the z-axis Z would be
13:58 - front back is blue on the Y up is white
14:04 - I guess I could just always consider it
14:05 - yellow since that's how I have it maybe
14:07 - I should just do the top it's yellow
14:08 - since that's what everybody wanted
14:09 - anyway yes no it doesn't it doesn't can
14:19 - like do a weird like forehead erase my
14:22 - forehead with the cube thing all right
14:24 - because what I want because when I turn
14:28 - it clockwise I want to see a wait a
14:33 - second when I turn it clockwise all
14:34 - right so that's fine so this is Z here's
14:37 - the thing that I want to do let me let
14:39 - me add something to this just to figure
14:41 - out what I'm doing oh I'm gonna
14:44 - completely need to redo this this is
14:46 - ridiculous the way that I programmed
14:47 - this by the way is just totally not
14:49 - gonna work so I have to refactor this
14:51 - maybe I'm going to do that at the start
14:52 - of the next part okay
14:54 - all right audio people are telling me
14:57 - audio is everything fine because I'm
14:59 - gonna get started with some coding oh
15:06 - because they have unique first letters
15:09 - Oh interesting that's useful to know so
15:13 - I could actually do this this would be
15:16 - probably terrible would this be bad if I
15:21 - did it this way
15:27 - oh the audio is out of sync yes so if
15:30 - you're if this is the first time you've
15:31 - watched the live stream I have an audio
15:33 - syncing problem and it's on my end it
15:37 - pops some of its on the probably YouTube
15:39 - or your head but there is definitely an
15:40 - issue on my end because it consistently
15:43 - is out of sync even in the video that I
15:44 - recorded disc it has to be fixed and
15:46 - some people say oh no it's fine some
15:48 - people say it's way out of sync I don't
15:50 - know how to correct that so apologies
15:52 - for that
15:53 - hopefully best that I can that's what
15:55 - it's going to be today alright so let's
15:59 - get going
16:00 - so what my goal for today is to is to it
16:06 - is to code a rotation so I'm gonna do
16:11 - that and alright so let me just let me
16:20 - just actually get going
16:25 - woo oh I forgot that peezy cam has this
16:28 - thing where I can zoom in and out okay I
16:33 - think I should just for the sake of
16:36 - argument give it like a little maybe
16:44 - just like a little bit of rotation just
16:47 - so when I well that was a lot of
16:50 - rotation
16:59 - a little bit more I want to see the top
17:13 - that's useful to me I just want to see
17:15 - like a silhouette I start the program I
17:18 - want to see a slightly like skewed
17:21 - version of the cube okay all right here
17:25 - we go
17:39 - hello welcome to part 2 of my Rubik's
17:43 - Cube coding challenge I think if all
17:46 - goes well what I just want to have in
17:50 - this particular video is a single maybe
17:54 - clockwise that's counterclockwise
17:55 - clockwise turn so I want to be able to
17:58 - turn this sort of top row of the cube
18:02 - and once I figure out how to do that
18:03 - that it should be very easy for me to
18:05 - mop very easy but should be somewhat
18:07 - easy for me to extrapolate how to do all
18:10 - the different kinds of possible turns
18:12 - that one might do so that's well I'm
18:14 - hoping to get from the start of what
18:16 - you're watching right now to the end
18:17 - don't I have sort of a vague plan in my
18:21 - head of how to do this I'm sure that I
18:22 - will kind of do it in a weird way and
18:25 - you will have a more efficient or more
18:28 - logical or more elegant way of doing it
18:30 - and I can't wait to hear from you about
18:32 - that in the comments because I'm really
18:33 - excited about getting this project fully
18:35 - finished but I've just got to admit to
18:37 - myself that this is gonna be many parts
18:38 - so a lot of steps to getting the full
18:40 - Rubik's Cube simulation so I'm just
18:43 - gonna do it in parts so I have a simple
18:44 - goal I said it already 1 turn I
18:47 - definitely need to do some refactoring
18:49 - of this code before I do that because
18:51 - there's some things about it that I
18:52 - think are pretty weird and what are
18:58 - these things
18:59 - don't use the greenside for showing what
19:01 - you want to do it's a really good point
19:03 - all right so let's let's uh let me not
19:08 - have the green yeah let me switch to
19:16 - right because when I'm creating the cute
19:19 - oh you know what I should do all right I
19:22 - see let me think about this I'm gonna
19:25 - refactor this a little bit I'm gonna
19:26 - come back and start over let me let me a
19:28 - refactoring
19:36 - this is down should be fixing the Y and
19:43 - up-down
19:45 - so if up is white then a wonderful peasy
19:59 - cam that's interesting
20:02 - oh I see
20:15 - now this is gonna be wrong that's right
20:20 - that's right should be read and that
20:29 - should be to the right but it's oh the
20:32 - y-axis is flipped this is the problem
20:39 - yes I know in my real life cube I know
20:43 - but I think that I want to see I also I
20:45 - want on the real life cube I want to
20:48 - have maybe what did--what would be if
20:54 - yellow was considered the top
20:56 - what would you typically what would you
20:58 - consider to be the front I'm just gonna
21:04 - consider it blue just blue show no blue
21:06 - is kind of transparent to orange you can
21:08 - see I could do red yeah let's do orange
21:12 - I forget that the world is flipped here
21:16 - let me keep it as is
21:28 - I just want this to be
21:40 - this is so good this is I gotta get
21:42 - going
21:43 - it's a coding part to reorient my brain
21:45 - okay as I'm looking at it backwards also
21:53 - so if yellow is up let's just do this
22:00 - yellow is up yes
22:21 - this is really
22:26 - oh this is making me crazy yellow is
22:28 - gonna appear up so this is up right oh
22:35 - no wonder I'm just losing my this is
22:38 - really actually the down side and this
22:39 - is the up side
22:51 - but I want so that's fine I'm just gonna
22:54 - switch that I'm gonna keep white as on
22:55 - the top and then I have that wrong of
22:59 - course because everything is flipped but
23:03 - it's okay
23:04 - yellow is up white is down
23:18 - oranges right
23:26 - left is red that's good back front is
23:32 - green back is blue okay
23:36 - the yellow is now the top I fixed what I
23:45 - wanted to fix up down up left right back
23:56 - front back I just want to have it in
24:02 - that order
24:14 - here we go let's rich let's rotate it a
24:18 - little bit along the Y also
24:29 - why why
24:32 - a little bit more great that's what I
24:38 - want to see ah
24:39 - don't break the cube okay here we go
24:41 - everybody no no
25:03 - hello welcome to part 2 of my Rubik's
25:06 - Cube coding challenge this is gonna be a
25:09 - whole bunch of parts this is a much more
25:11 - complicated problem than I originally
25:12 - envisioned so I know where this is going
25:15 - or how well if this is gonna be
25:16 - successful but here I am and in this
25:18 - part I want to do one thing I want to be
25:20 - able to figure out how to take the data
25:22 - of the cube I have everything in this
25:25 - three-dimensional array a
25:26 - three-dimensional array of cubie objects
25:29 - and I want to just do a rotation so if I
25:32 - were to do the rotation something like
25:34 - this I want to do this one like
25:36 - clockwise or one counter clock that's
25:37 - clockwise that's counter clockwise
25:39 - rotation so I've got to figure out how
25:41 - to move all the cubes around and make
25:44 - sure the colors are on the right side
25:46 - when I move them if I can do one then I
25:49 - think I can extrapolate that to do all
25:50 - of them so I have a kind of vague idea
25:52 - in my head of a way of doing this I'm
25:54 - sure there's a more elegant approach
25:56 - I don't know this out as I go but I've
25:59 - looked forward very much look forward to
26:01 - your comments in the video description
26:02 - because I'll be coming back and doing
26:04 - part 3 and I will see your comments
26:06 - before I do part 3 so thank you thank
26:08 - you in advance for that okay so I
26:10 - definitely need to do some refactoring
26:12 - here and I think one thing that I want
26:14 - to do I'm thinking about this is I want
26:22 - to have yeah I want it that these colors
26:30 - are gonna have to change so the way that
26:32 - I programmed it right now is that all of
26:35 - these colors
26:36 - well let me sound is lagged everybody's
26:40 - talking about how fast they can solve
26:42 - the cue
26:48 - a 5d oh my goodness all right all right
26:56 - how am I doing this how am i doing this
27:00 - these are gonna change okay up down left
27:04 - right front back up down yeah this
27:13 - should be it so hold on left that's fine
27:17 - up down right left front back down this
27:21 - would be first then okay
27:35 - so here's the way that I'm thinking
27:36 - about doing this right now I have
27:39 - everything drawn in the Kyuubi object as
27:42 - four different six different quads and I
27:46 - have them in this specific order up down
27:48 - right left front back and those are up
27:51 - being yellow down being white and then I
27:54 - don't know if it's of course the
27:56 - orientation doesn't actually matter I
27:57 - can consider anything up or down or
27:58 - anything left or right but I'm picking
28:00 - something just for my own sanity right
28:01 - now so but that's those are gonna change
28:03 - as I turn right in a way like the cube
28:06 - even though the cubes physically move
28:07 - for me to move the data around I just
28:10 - need to move the colors around and then
28:11 - I might do some kind of animation with
28:13 - it but I think that's gonna be the way
28:14 - that I want to do it so in other words
28:16 - the cube is actually going to have like
28:20 - a configuration which is an array of all
28:25 - the colors and what colors are in which
28:27 - positions up down left right front back
28:29 - and of course in the real cube there's
28:33 - not colors on the parts you can't see
28:35 - but I'm gonna again willfully ignore
28:37 - that for right now so then I would be
28:40 - saying colors config zero and actually
28:45 - let's make this an object let's make a
28:48 - configuration of the cube I'm gonna call
28:52 - it a config maybe it's an order or
28:55 - something and it has this this sort of
28:58 - like array of the sides which is six six
29:04 - things and when I make a new config
29:07 - object actually I don't need to do that
29:09 - I just say sides equals an array 0 1 2 3
29:16 - 4 5 ok so that's and I guess I have to
29:20 - say new int to say it's a new integer
29:23 - array so that's the config the reason
29:25 - why I'm doing this is because then I can
29:27 - make a config object and when I make a
29:31 - QB it gets a new config and then maybe I
29:34 - will say write a function like int get
29:38 - int index and this is really this is
29:43 - really the side right and then I'm going
29:47 - to say
29:48 - return sides sides index aside so in
29:55 - other words I can say here now colors
29:58 - config get up config get down config get
30:10 - right and you know somebody told me that
30:13 - the reason why they're called up this is
30:15 - probably a terrible idea but the reason
30:16 - why they're called up down right and all
30:19 - of that is because right left front back
30:22 - is because those are unique letters so
30:24 - let's change it to that l AR l front did
30:32 - I say was that front yes front and then
30:37 - back okay so now and let me change these
30:43 - to just you d r l f b and again the fact
30:50 - that it's up down left none of that
30:52 - actually really matters i just need some
30:53 - kind of way to think about the cube i
30:56 - think this is a little bit crazy okay so
30:59 - that's the original configuration
31:00 - everything gets a config and then there
31:05 - we go still correct perfect okay so now
31:12 - what I need to do is I need to move the
31:18 - cube pieces around oh this is actually
31:23 - do i I just need to rotate them right
31:26 - because I don't actually what is it to
31:29 - to do this is actually not rotating the
31:35 - cube it's just turning all the pieces
31:37 - right I mean technically this piece goes
31:40 - I mean technically the way that this
31:41 - works I maybe I'm doing this in a
31:42 - horrible way I mean I should move the
31:44 - pieces uh I am gonna want to move right
32:05 - so
32:25 - so what I mean is if this is the one
32:30 - side of a cube and if I give them these
32:34 - index values for example 0 1 2 3 4 5 6 7
32:41 - turning the cube you know if this is 8
32:46 - this this piece doesn't move
32:49 - turning the cube on this face clockwise
32:52 - would result in 0 1 2 3 4 5 6 7 so I
32:58 - could actually move those cube objects
33:00 - maybe I should put not sure that this is
33:03 - necessary but let's try this let's try
33:06 - doing this let's try taking all of these
33:08 - cube objects and moving them around and
33:10 - I'm actually not going to move the cube
33:12 - objects I'm just gonna move the config
33:14 - cuz the config is the thing that I want
33:16 - to move the things they're all the same
33:17 - let's let's try it I'm not really sure
33:20 - let's try moving the config so in other
33:23 - words I'm gonna make a tab another tab
33:26 - let's call it like just moves and I'm
33:29 - gonna make a move which is turning the
33:33 - oh boy the green side is the worst side
33:35 - for me to use cuz you can't see it is
33:38 - that have to be facing forward
33:58 - I'm looking at the chat moving them
34:01 - won't rotate the layer yes it will yes
34:04 - well you'll see you'll see you'll see
34:08 - okay
34:09 - I wish the green thing maybe I can turn
34:13 - off the green screen for justices there
34:15 - I could there could do a hotkey to turn
34:17 - off the green screen and then I could
34:19 - see a turn or I could redo this right
34:25 - now so that blue is the front so I can
34:28 - demonstrate this but whatever I think
34:30 - it's fine all right we're just gonna
34:32 - have to live with the fact that the
34:33 - green side you're seeing is purple you
34:35 - can't see me turn it no that's no good
34:38 - whatever
34:49 - yeah I do okay
34:58 - people are writing image shot okay
35:05 - that's all right I'm realizing I need
35:12 - one more thing so one thing that might
35:13 - be useful is to keep track of this order
35:15 - which is zero zero one zero two zero
35:21 - what is this what is this 2 1 2 2 2 2 1
35:30 - 2 0 2 0 1 all right so this is this is
35:35 - the order of how I'm going to move the
35:38 - cubes and let's put them all in an array
35:43 - so let's actually let's make something
35:45 - called an an index pair and let's just
35:54 - call it a and B maybe I think I'm
35:57 - over-engineering this and then and then
36:11 - I need an array of all those nerves so
36:20 - it's 0 0 0 0 1 0 2 0 2 1 2 2 2 1 2 1 2 0
36:37 - 2 0 1 am I going to need this order
36:49 - so this is an array of the order so the
36:52 - reason why I'm doing this is because
36:54 - let's say let's say what I'm gonna do is
37:00 - I'm going to create I'm gonna create a
37:03 - rotation I'm gonna call it Z because I'm
37:05 - thinking in terms of Z I'm gonna take a
37:06 - clockwise z rotation so I'm going to say
37:10 - turn Z and what I need to do is go
37:15 - through the order and I want to make an
37:22 - array of configs for all eight of those
37:28 - and I want to say give me configs index
37:34 - I equals the cube I so a equals order I
37:45 - a B equals order I dot B and then I
37:57 - don't explain this in a second I'm
37:58 - thinking this through
37:59 - while I'm doing it and configs I is the
38:02 - cube at a comma B and then the Z is just
38:07 - the front would be to if the back is 0
38:09 - the middle is 1 the front is to dot
38:12 - config what I'm the reason why I'm doing
38:16 - this I'm just grabbing I'm just saying
38:18 - hey here's the cube give me all the
38:20 - configs in this particular order going
38:24 - go going through this way going put them
38:27 - in order the reason why is because then
38:29 - if I want to move them I can just do
38:31 - this
38:32 - I can do exactly the same thing but I
38:39 - can say cubes instead of an asset this
38:44 - would be me this would this is me just
38:47 - copying them over right this is me just
38:50 - saying hey take all the or the configs
38:53 - and put them in back in where you got
38:55 - them so if I were to now in setup call
38:59 - turn Z I should still see the key
39:03 - you exactly as is nothing has changed
39:07 - now what I could do is I could say I
39:09 - plus two - see this is what this is what
39:12 - I've been building - I plus two modulus
39:16 - order dot length because what I want is
39:20 - I want each one to get I guess I'm going
39:25 - the other way than I did here but I want
39:27 - like for example I want this spot to get
39:30 - to this gun I want to and end up here
39:32 - three would end up here that's counter
39:34 - I'm doing it counterclockwise but that's
39:35 - fine doesn't matter the counterclockwise
39:37 - or clockwise I just need to do it in a
39:39 - given direction so I'm just moving all
39:41 - those spots the thing is I don't think I
39:46 - can actually just set the configs one
39:53 - one is in the middle I did something
39:54 - wrong here my order is wrong someone in
39:56 - the chat is telling my order is wrong
39:58 - zero zero one zero two zero yeah yeah
40:00 - there shouldn't be any one one here oh
40:01 - and I don't have a one one okay I'm fine
40:03 - never mind headed that out
40:05 - all right over doing this but it's fine
40:13 - I said I in the back of my mind I feel
40:16 - like I'm overdoing this but it's fine I
40:18 - can peel some of it out later if I don't
40:19 - need it because another thing that I'm
40:21 - going to do here to overdo it is I am
40:24 - going to make a function which returns a
40:27 - config object called copy because I'm a
40:31 - little bit afraid of having the same
40:35 - pointer to different arrays all over the
40:36 - place so I want to say int int I'm just
40:40 - gonna make a temporary array that has
40:43 - the same number of things as the sides
40:46 - and then it processing has an array
40:47 - method called array copy a copy method
40:50 - where I can copy the sides into temp and
40:52 - then I can return a new config with temp
40:55 - and then aha
40:57 - I could overload the constructor and
41:01 - have another way of declaring it with so
41:05 - this is again this might not be
41:07 - necessary but I'm setting myself up for
41:09 - success later by having as much this is
41:11 - not usually how I work I usually just
41:14 - try to like hard code a lot of stuff in
41:15 - there but I'm trying to
41:16 - disorganized okay so I can make a new
41:19 - default configuration I can I can copy a
41:23 - existing configuration I can make a
41:25 - configuration from one I should probably
41:26 - actually just what I probably should do
41:28 - is just always copy it there but
41:29 - whatever
41:30 - such either six of one half dozen of the
41:34 - other
41:34 - so what I'm gonna do now is say configs
41:36 - I equals config start copy so in theory
41:40 - I have moved all the pieces the thing is
41:44 - while they're moving right
41:47 - while this seven is moving in a way I
41:51 - did it I'm doing a counter clockwise
41:53 - while this seven moves to here it's also
41:57 - turning so the config actually has to
42:01 - the new config has to move the sides the
42:05 - side that was here the caller that was
42:07 - here needs to end up here the color that
42:09 - was here needs to end up here let's just
42:10 - make sure that moving is actually
42:12 - working I have an idea for how to do
42:14 - that let's add let's add an extra color
42:17 - I have this this is a goofy idea what's
42:20 - a cos I'll just use black so I'm gonna
42:22 - add an extra color for which is index
42:26 - six I only have six real colors the
42:29 - seventh will be black and then I'm gonna
42:31 - in the Box in the QB function and they
42:35 - in the QB function I'm in a QB class I'm
42:38 - gonna write a function called highlights
42:39 - not really highlighting to turn it black
42:41 - but and I'm going to say config equals
42:45 - zero zero six six six six six six six
42:50 - six six
42:51 - so what this does a new config this is a
43:00 - little bit ridiculous but I'm just gonna
43:02 - like overwrite its configuration with
43:03 - all black so in other words what I can
43:06 - do now I'm going to comment out turn Z
43:08 - and I'm going to say cube zero zero zero
43:13 - which should be top left dot highlight
43:17 - so now I should be able to pinpoint any
43:20 - given QB okay it's back that's the back
43:25 - right that's right zero zero zero I want
43:27 - to see the one in the front so I can
43:29 - change this Z
43:30 - - and that's that now if I put turn Z
43:34 - this one should end up down here turns e
43:37 - that should move that two spots this way
43:39 - counterclockwise I worked so that cute
43:46 - move down and by the way if I wanted to
43:48 - do it clockwise right a clockwise
43:50 - rotation is just counterclockwise twice
43:53 - right that's the same thing one two
43:56 - boy I'm confusing myself hold on a
44:00 - second my my watch is beeping at me
44:03 - incessantly I'm gonna have to take it
44:05 - off right is if this is my cube this is
44:17 - counter clockwise this is clockwise one
44:20 - two I gotta do it three times three
44:22 - times would be the same right of course
44:28 - so no no so counter clockwise is one
44:33 - turn to the left three turn to the left
44:36 - is the equivalent of just turning it
44:37 - clockwise
44:37 - I could also move the pieces in another
44:39 - direction but I'm just curious let's
44:41 - just copy paste turn Z three times and I
44:44 - should see whoops that right over there
44:46 - good good good okay so now what I need
44:48 - to do is if I am going to call turn Z
44:53 - and move the pieces I also need to as I
45:00 - move them rotate Z I'm gonna that's a
45:07 - processing function but I basically need
45:09 - to take the configuration and rotate it
45:11 - so that what is rotating its Z mean it
45:14 - means top moves - right right loose -
45:18 - bottom bottom moves to left left moves
45:21 - to top and up so I could in the config
45:24 - class I could write a function called
45:27 - rotate Z and what I'm doing is I'm just
45:32 - oh I hope the order is the order is
45:34 - gonna be different let's do it this way
45:35 - I'm gonna now hard-code something I'm
45:37 - gonna say what was I saying I was saying
45:40 - sides
45:43 - is I'm getting up from right from right
45:52 - the color moves then I'm getting right
45:57 - gets from bop down and down gets from
46:05 - left and left left gets from up however
46:14 - not real however that's a problem
46:16 - because I overrode up so I need to just
46:19 - make a temporary variable to give me the
46:21 - color that's in up and then set that
46:27 - here so these numbers are really
46:29 - standings for color in the end
46:31 - ultimately they're not about being up
46:33 - down left right front back those are the
46:36 - actual colors those are the integers
46:37 - indicating the colors but it's easy for
46:39 - me to think of the orientation in terms
46:40 - up down left right front back so now if
46:43 - I do this I think that's right let me
46:46 - get rid of that highlighting let's look
46:51 - at the actual cube whoops
47:00 - let's look at the actual cube so you can
47:02 - see it oh this is like in the way here
47:04 - we move this over here let's look at the
47:07 - cube here so looking at green with
47:12 - yellow on top and then I made a
47:14 - counterclockwise turn that's orange
47:17 - there's a red and white yellow and red
47:22 - that worked that worked I turned it huh
47:27 - guess what I made a turn that's exciting
47:31 - I mean I may have overdone this like I
47:33 - don't know that I think this might
47:35 - actually work without with just doing
47:37 - the rotation like what if I just rotate
47:41 - the sides oh I got a null pointer Oh cuz
47:48 - I didn't put anything in well let's not
47:52 - worry about that right now no need to
47:59 - move them i spaghetti or shipments all
48:10 - right so the chat is telling me that
48:12 - there's no need to move the pieces which
48:14 - i think is correct so let me comment
48:17 - that out now that I did that that was
48:20 - kind of like a useful way of thinking
48:22 - about it for me I still need to know but
48:25 - so let me comment that out so what I can
48:28 - do is I can comment this out comment
48:34 - this out and I'm gonna say configs oh
48:37 - just cube a B index 2 dot rotate Z right
48:48 - oh no dot config dot rotate Z so that's
48:53 - the same great so okay so moving the
48:58 - cubes was interesting and maybe I'm
49:00 - going to need that later but I don't
49:02 - need it for right now that makes things
49:03 - a lot simpler so turn Z let's make a
49:08 - boolean for clockwise or
49:10 - counterclockwise
49:13 - clockwise so clockwise so what I just
49:19 - did here is this is a boolean
49:30 - if clock
49:32 - if clockwise do it this way otherwise do
49:38 - it this way and if it's clockwise we
49:45 - just need to go the other direction
49:47 - so down and up or switched right whoops
49:55 - shoot did I do that right
50:00 - no down and then up yes that's what I
50:06 - meant to do okay so that should be
50:08 - clockwise that should be
50:09 - counterclockwise there's got to be a way
50:11 - to refactor that into like a nice little
50:12 - loop or something but let's just let's
50:14 - just do that okay so now if I'm saying
50:17 - turn Z I need to say true would be
50:19 - clockwise and what did I do I turned it
50:24 - this way is that Orange no wait that's
50:26 - red oh wait no that's right what was my
50:30 - configuration to start with yep that's
50:32 - right
50:32 - red is with yellow yellows with orange
50:36 - oranges with white and white is with red
50:41 - I think that's right okay and then so
50:43 - actually let's do this let's now say
50:48 - let's do key pressed and I'm gonna say
50:54 - if the key equals F then I'm going to
51:01 - turn Z clockwise otherwise if it's I
51:06 - don't know capital F will it actually
51:08 - detect that key key equals capital F
51:13 - then I'm going to turn the
51:15 - counterclockwise
51:20 - okay did I turn it already
51:26 - wait no it shouldn't be turned when I
51:28 - start the program
51:31 - wait oh no it's not okay good
51:33 - F F so doing that four times gets me
51:39 - back right and if I do F back F
51:42 - lowercase F capital F so it's attorney I
51:45 - want to animate it that's gonna be I'm
51:46 - gonna animate it in a separate video I
51:48 - just want to I just want to get the
51:50 - turning working and guess what now I can
51:53 - do this as I can also have a index so
51:58 - it's not really a so in other words back
52:00 - would be back would be instead of having
52:04 - the number two here having zero so I'm
52:07 - going to say an index and then that will
52:11 - be here index so in other words I'm
52:14 - going to say that will be with two else
52:19 - if key equals B turns e0 true otherwise
52:27 - otherwise if key equals capital B turn Z
52:34 - with to false off with zero false so why
52:40 - does it not like that int index oh no in
52:44 - pulley and there we go okay so now I
52:46 - should be able to say so look at this if
52:51 - I say B it turned the back if I say F it
52:56 - turn the front if I do capital F I turn
52:58 - that back capital B turn that back ah
53:01 - [Music]
53:03 - okay people are telling me to use a
53:06 - switch statement all right we're gonna
53:09 - edit the part out of where I change this
53:11 - to a switch statement but I will do that
53:14 - I could never switch Java
53:22 - looks like I don't know why I have a
53:24 - mental block with switch switch key so I
53:29 - would say switch key and then : then
53:36 - case F right case at case F and then dua
53:43 - case F and then a semicolon no case F
53:48 - semicolon turns E break right I should
54:04 - also do well and then I'm going to
54:12 - refill the second okay
54:13 - case B and then break case be false
54:36 - mmm break it's not right it's not a
54:42 - switch statement F is true wise
54:49 - capital F is counterclockwise and and B
55:12 - is right
55:19 - Oh
55:22 - wait I told you I don't know a switch
55:24 - statement switch month yes what how did
55:32 - you wrong it sauce to be indented but oh
55:39 - where's the break
55:47 - yeah okay
56:05 - okay all right the chat complains and I
56:13 - switch this to a switch statement and
56:16 - actually I'm gonna take this and put
56:18 - this on my moves tab where I'm kind of
56:21 - working out all the moves stuff I don't
56:23 - know F and capital F is a little bit
56:25 - awkward but that's fine right that
56:26 - actually could work as maybe I'm gonna
56:28 - pick random moves config get int is
56:32 - redundant yes I know why is back backs
56:37 - not inverted Y is be wrong be false I
56:47 - think I I think half true yeah I think
56:51 - people are seeing the old people are
56:54 - behind everyone stills telling me that B
56:57 - is wrong
57:08 - but I
57:15 - it was a full tummy back is going the
57:18 - wrong way let me look
57:22 - clockwise would have red on top
57:36 - well I'm I don't know what you're what
57:38 - you're all thinking but I'm gonna leave
57:39 - it the way it is I mean sure you could
57:41 - say that if I'm looking at the cube and
57:43 - then I want to have the back facing me
57:45 - but no no the point is I want the back
57:47 - facing away and I want to turn it
57:48 - clockwise which is what that would be
57:54 - okay okay fine I'm believing it the way
58:02 - it is lowercase B is true and in fact
58:05 - let's do this all right let me add
58:08 - another thing to refactor this a little
58:10 - bit let me just say boolean clock what
58:14 - CW for clockwise equals true and boolean
58:19 - CC for counterclockwise equals false so
58:23 - I can say this is clockwise this is
58:25 - counter clockwise this is clockwise this
58:27 - is counter clockwise okay
58:29 - now oh I'm wrong
58:42 - all right everyone is telling me that
58:44 - it's wrong all right so I'm not all
58:46 - right that's fine and now the chat is
58:50 - telling me that according to cubing
58:51 - notation the back bead clockwise if the
58:55 - back was facing you so these should
58:57 - actually switch so this would be
58:59 - counterclockwise and this would be
59:00 - clockwise or whatever it doesn't really
59:04 - matter or yeah so I don't know what I'm
59:07 - gonna do I'm gonna leave it it doesn't
59:09 - really matter as long as I could do it
59:10 - one way or the other way
59:11 - my shuffling it randomly is gonna work
59:13 - out but I'm trying I'll try to be
59:15 - correct in terms of cubing notation okay
59:18 - so now if we did turn Z all we need is
59:23 - turn Y and and I can get rid of my extra
59:33 - code that I didn't need and turn Y is I
59:42 - don't need this anymore
59:43 - I don't need this anymore I don't need
59:50 - this anymore turn Y is gonna do exactly
59:54 - the same thing but the Y is going to be
59:56 - fixed and I'm not going to be rotating Z
60:01 - I'm gonna be rotating Y and so now I
60:08 - need an config
60:09 - I need a rotate Y this is now becoming
60:13 - very hard coded but that's fine and Y
60:16 - means if I'm rotating why I'm rotating
60:20 - from front to right right to back back
60:24 - to a left so front - right right
60:31 - - back back to left left to front or
60:37 - back to right right till right to front
60:45 - and left to back so that should be
60:49 - rotate Y so now if I go here
60:54 - let's try left which would be turn y0
61:05 - and right which would be turn y2 so
61:16 - let's see okay let's look at this all
61:21 - right right oh no that's not right I
61:25 - turned the bottom did that do a real
61:28 - move no wait no that that's that's wrong
61:37 - okay hold on Oh left and right is not
61:44 - turned Y left and right is turn around
61:47 - the x-axis left and right is turn left
61:52 - and right is turn along the x-axis so
61:55 - actually what am i doing now if I'm
61:57 - doing left and right I'm really wrote
61:59 - this is rotate X what did the let's but
62:02 - let's go to rotate Y which would be
62:10 - rotate Y would be front goes to top top
62:14 - goes to back back goes to bottom front
62:19 - goes to top top goes to back back goes
62:28 - to bottom which is down and this is up
62:31 - not top I could never remember that and
62:33 - down goes to front and then if I were to
62:37 - go the other way
62:38 - I would be going from back goes to up
62:44 - and up right back goes up up goes to
62:50 - front and front goes to down back goes
62:58 - to up up goes to front front goes to
63:01 - down that's
63:02 - right so hold on let's just put
63:07 - everything in there I'm sure I have
63:08 - something wrong now I need now I need
63:12 - four more moves four so I did I did what
63:20 - did I do
63:21 - I did front back I did left right which
63:28 - is turning along the X left and right is
63:31 - turning along the X and turning along
63:36 - the Y is up this is horrible this is no
63:50 - way I've got this right okay turn oh
63:52 - there is no turn X because I didn't make
64:00 - a turn X okay turn X is here keep that
64:08 - fixed and then rotate X okay okay let's
64:18 - see good chat telling me everything's
64:20 - wrong let's see okay so let's just see
64:23 - if my first ones are right the first
64:25 - ones I did was front and back front
64:28 - and then turn that there and then back
64:34 - back went
64:42 - yeah okay back when correctly turn that
64:45 - back whoops now all right so now let's
64:50 - try up which would be this no that's not
65:01 - right so up is wrong can I at least get
65:03 - it back yeah okay down two down actually
65:08 - nope down is wrong oh that that's weird
65:12 - down is wrong did I get right or left
65:14 - right right no it's totally wrong okay
65:30 - all right moves line 66 and 75 are wrong
65:38 - oh look at this
65:44 - look at this why what am i doing I have
65:49 - rotate Y twice in there for no reason at
65:52 - all rotate X twice in there okay let's
65:56 - see so let's try let's try right again
66:06 - does come back of it Wow whoa that's
66:12 - really interesting what am i doing -
66:15 - look at this 1,400 people are watching
66:20 - geez Louise very sweaty because this is
66:28 - very stressful my sweatshirt
66:37 - okay so somehow I did the first one
66:39 - correct so let me even though I had all
66:42 - this extra stuff in here oops let me
66:50 - save this down at the bottom should have
66:56 - practiced this before I got here let me
67:02 - take all this out okay
67:06 - so turning on the Z which for me is
67:10 - front and back is working correct so
67:13 - let's double check that
67:15 - yeah that's working you can do four
67:19 - turns in the back I can do I can do the
67:24 - turns along the back as well okay so
67:28 - that's working so this code is right for
67:32 - doing that
67:33 - rotation along the Z now turn Y turn Y
67:40 - is turning around the y axis which is
67:43 - pointing up so that should be top and
67:45 - bottom top and bottom top and bottom
67:59 - I'm shift people are giving me lots of
68:01 - interesting comments okay top and bottom
68:03 - so let me check am i doing
68:05 - top and bottom with turn Y so turn Y and
68:14 - up and down sorry up is turn Y for zero
68:18 - down is turn Y for to so that's correct
68:20 - it must be the shifting that's wrong so
68:24 - let's be more thoughtful about this this
68:30 - this is clearly where it's wrong it's
68:33 - got to be right so if I am rotating the
68:39 - Oh top there should be no up or down oh
68:48 - there's an up and down in there that's
68:50 - wrong I should be going from left to
68:53 - front from front to right right to back
68:55 - they're just wrong these are just plain
68:57 - wrong I should be going from left left
69:03 - to front front to back back to right
69:10 - then I should be going from left to back
69:17 - back to front and front to right
69:22 - I don't know why I had it like that okay
69:25 - so let's try rotate Y once the cat is up
69:28 - and down yeah there we go there we go
69:32 - I'm rotating the top and let's rotate
69:35 - the bottom there we go I'm shuffling it
69:42 - around I don't know if that's gonna keep
69:44 - working yeah and then here we go so now
69:49 - let me fix rotate X rotate X if I have
69:52 - my cube X is the horizontal access so
69:55 - I'm turning right and turning left which
69:57 - is going from front to up up to back
69:59 - back to back to down and so I'm going
70:06 - front to up up
70:12 - to back back to down yet front note back
70:20 - yes yes front to up up to back back to
70:25 - down or back sorry back to up the be I
70:33 - keep thinking his bottom I just can't
70:35 - get a back to up up to front front to
70:40 - down I might have my clockwise and
70:41 - counterclockwise mixed up so let's see
70:45 - so this is now right should be I should
70:48 - see green go to the top and white come
70:51 - to the bottom and I should see blue
70:53 - something went wrong no that's right
70:59 - blue oh wait a second well I went the
71:02 - other way
71:03 - wait what I can't get my cube oriented
71:07 - like it is here yellow with green on the
71:13 - right no wait how did I do this I have
71:21 - yellow they turned the green so it's
71:25 - white blue and white yellow and blue
71:29 - yellow and blue green and yellow that's
71:32 - right
71:42 - all right now do these all so first of
71:45 - all let's check my clockwise and
71:47 - counterclockwise will you please I need
71:51 - to just keep the cube in one place and I
71:54 - need to think of front clockwise back
71:58 - clockwise in the same direction could I
71:59 - please do that I right do I have to move
72:02 - to cubies it's not up to back what's
72:11 - wrong front goes to up up goes to back
72:20 - back goes to down back goes to up up
72:25 - goes to front front goes to down rotate
72:28 - why is wrong good luck editing this
72:31 - Mattia okay why what time is it I got
72:37 - like I gotta take a break in a minute
72:39 - do something slightly different rotate
72:42 - why is wrong left goes to front
72:45 - yeah that's wrong left goes to front
72:49 - front goes to right right goes to back
72:52 - how did I get that wrong or left goes to
72:55 - back back goes to right right goes to
73:00 - different yeah
73:07 - so what was wrong why so why should be
73:12 - up and down right red goes to here
73:19 - orange goes to here Green goes to here
73:21 - red is back down mr. dare okay
73:38 - making a cube class would make this a
73:40 - lot easier I sort of did that's what
73:43 - this is I just have this weird config
73:48 - array which makes no sense okay okay
74:03 - this is not gonna extrapolate
74:05 - particularly well to higher dimensions
74:07 - but fine let me think here the question
74:10 - is do I need to move the cubes around or
74:13 - will this continue to work as I shuffle
74:20 - all right so hold on now I'm gonna check
74:28 - to see if this works with multiple moves
74:32 - so let me do up let me do right no
74:40 - that's wrong of course okay I have to
74:46 - move the Q's I have to move the Q's so I
74:52 - do need moving the cubes good thing I
74:54 - have that code in there I have to move
75:00 - the cubes
75:20 - okay
75:26 - so if you're just tuning in this is the
75:31 - code that I wrote earlier that sorry and
75:45 - this needs to be index this needs to be
75:49 - index what's wrong here
76:03 - duplicate method right of course if
76:04 - you're just tuning in this is the code
76:06 - that I wrote earlier that actually moves
76:08 - the cubes whoops if you're just tuning
76:21 - in this is the code that I wrote earlier
76:23 - I don't know if I'm saying just tune to
76:25 - tune again this is the code that I wrote
76:29 - earlier that actually moves the cues
76:30 - which it appears that I also need
76:32 - because I could just turn the faces but
76:35 - once I start doing multiple turns
76:36 - they're not things are gonna be in the
76:38 - wrong place so I actually do need to do
76:40 - this shifting of actually moving them
76:41 - around I knew I needed that for a reason
76:43 - I knew it I knew it I knew it
76:46 - okay coming back coming back let's
76:50 - actually so let's get rid of turn Z
76:53 - where is that so this is my old turn Z
77:04 - come on camera come back on but Y is
77:11 - wrong still or people in the in the past
77:21 - so I'm just tell me why is wrong but I
77:26 - think people are in different parts of
77:27 - the stream which is the problem Y was
77:29 - fixed it was wrong now it's fixed so now
77:33 - I should be moving the cubes and
77:36 - adjusting the faces correctly so let's
77:39 - see if I do the only thing that's
77:41 - correct right now is turning along the Z
77:44 - which is front and back and that's wrong
77:49 - because my turning is not matched with
77:53 - my clockwise this is why I need to yeah
78:00 - so this is actually not this is booting
78:02 - this by definition is moving them
78:04 - counterclockwise oh look at this so this
78:07 - has to change
78:09 - this is for this is if not clockwise
78:16 - shift them ahead to modulus how many
78:21 - spots there are the other way what I
78:23 - would need to do if it's clockwise I
78:25 - would need to say I plus order dot
78:30 - length minus 2 modulus order dot length
78:34 - now this is something that I've
78:35 - encountered a lot right you can't do a
78:37 - minus and modulus to wrap around the
78:39 - front but if you add the number all the
78:42 - way so you're sort of like a head of the
78:43 - array then you shift back and then use
78:45 - modulus you'll be in the right place so
78:47 - this should be right now with front and
78:51 - back so let's see this should be front
78:52 - clockwise no it's switching everything
79:05 - all right let's hold on hold on a second
79:08 - everybody let's go back to my original
79:15 - debug let's go back to my original
79:17 - debugging method to comment to highlight
79:22 - one cube as black then I'm gonna take
79:27 - off this rotation thing actually I don't
79:31 - want to rotate it here that's maybe the
79:33 - problem take off that rotation thing so
79:36 - now if I call move this it should move
79:40 - to there wait why are they is there
79:47 - still a rotate happening somewhere oh
79:49 - there's a rotate I rotated twice no
79:55 - wonder I think I might have this right
79:57 - so this is the cube moving clockwise
80:02 - that's how it should move this is the
80:05 - cube moving counterclockwise that's how
80:08 - it should move now let's see if this
80:11 - moves the faces correctly white comes up
80:18 - yeah that's right okay I think I have it
80:22 - right does it is it doing
80:23 - counterclockwise correctly
80:26 - counterclockwise is
80:31 - a capital F yes
80:35 - okay it's working this is right so this
80:40 - is right now I just need to do this this
80:45 - is unfortunate but I what I'm gonna do
80:48 - is and boy I can't wait for somebody to
80:50 - tell me in the comments how to turn this
80:51 - into one function but I'm going to
80:53 - actually just delete these and make a y1
81:01 - and why the only thing that changes here
81:05 - is this becomes index and this becomes
81:08 - index and this becomes index and then
81:14 - rotate should be rotate Y think that's
81:17 - everything and again this really needs
81:19 - to be refactor I'm copying pasting all
81:21 - this code it's making my skin crawl but
81:23 - if I can get it to work I'll be happy so
81:25 - that's why and now this is X so turn X
81:32 - so the only things I'm changing our
81:36 - index goes here a and B are what's
81:38 - changing index goes here a and B are
81:41 - what are changing index goes here a and
81:43 - B are what are changing and then this is
81:45 - rotate X okay okay okay turn oh this is
81:53 - turn x and duplicate method oh because I
81:59 - what how many times if I am I have so
82:05 - many copies of the function no what did
82:08 - I do
82:08 - okay turn X this is turn Z what have I
82:14 - done
82:14 - that's turn Z this is me copying turn Z
82:19 - and then not using it well let's get rid
82:22 - of this this is turn Y right y yes
82:28 - rotate Y this is turn X yeah okay I
82:31 - think I had some extra copies of the
82:32 - function okay so let me just make sure
82:36 - turning turning Z still works okay that
82:40 - works
82:41 - and and turning so let's try the black
82:46 - cube is on the left so let's try left
82:49 - goat went down oh that's not right right
82:53 - right because if that cube is coming
82:57 - down yellow should be coming with it so
83:00 - the the rotation of Y is backwards so
83:11 - one way to do that is you know who knows
83:15 - what's clockwise and what's not
83:17 - clockwise but I could just walk these to
83:20 - look this is X actually sorry left is
83:24 - turning along the x-axis so I should be
83:26 - changing it here so let's just for
83:33 - whatever reason I wrote these
83:34 - differently okay so now let's try
83:37 - turning left
83:49 - wait did that did that actually work oh
83:52 - yeah that worked it just went the other
83:54 - way
83:56 - yeah it's going it's going the right way
84:00 - read staying there oh that's actually
84:02 - working it's just going
84:04 - that's who knows is that clockwise or
84:06 - counter clockwise
84:07 - what's the cubing notation I don't know
84:09 - but I can make it go the other way yeah
84:11 - okay that is working that is working
84:13 - okay and now let's get this back to here
84:17 - so now let me see if I did front I did
84:22 - left let's see if up works yeah that
84:29 - works so what if I do up and I move that
84:31 - there and then I do right and I move
84:35 - that there and then I do bottom whoops
84:37 - that's back B is back and then if I do
84:40 - left
84:40 - I think it's shuffling correctly I think
84:45 - it's shuffling correctly how do I get it
84:49 - back well I could shuffle it and then
84:51 - just play all the turns in Reverse right
84:53 - and I've solved the cube oh I got to get
84:54 - it to animate I think this is right
84:56 - let's I think I'm done with the turning
84:59 - phase the next part is going to be the
85:01 - animating but let's see let's see if I
85:04 - can follow along okay I know
85:06 - unfortunately all right let's do this
85:16 - this is way too big
85:20 - let me make this smaller so this can be
85:28 - back here put this here and put this
85:33 - here all right okay so let's see if
85:41 - I'm the red unfortunately didn't I can't
85:44 - do it this way facing you I've got to do
85:45 - it facing me so let's first do a front
85:48 - turn okay let's do a right turn let's do
85:59 - a back turn let's do a front turn again
86:11 - let's do a left counterclockwise turn it
86:18 - might not actually be kind of clockwise
86:19 - we're gonna do capital L so that move
86:22 - out this way alright let's see is the
86:24 - cube correctly configured yes on that
86:28 - side it is on this side it is on this
86:32 - side it is I dare I say that this is
86:36 - actually working
86:38 - yes okay I think that's working I mean
86:45 - if I code is terrible but I got it to
86:48 - work
86:49 - oh wait no I have to suck I shuffled my
86:51 - queue but that's fine I'll solve my cube
86:53 - later
86:54 - let's now this video is just about done
86:58 - but let's at least do a demonstration of
87:06 - well actually I don't know what else
87:08 - there is to do
87:15 - so left has counterclockwise and
87:18 - clockwise mixed up yes I will I'll deal
87:21 - with that later I'm gonna I'm not so I'm
87:23 - not leaving I'm just gonna be I'm gonna
87:24 - talk to you about a sponsor of this
87:26 - livestream brilliant for a minute I'm
87:28 - going to take a five minute break and
87:30 - then I'm gonna come back and when I come
87:31 - back I'm gonna do the animating which
87:33 - will make it much more interesting if I
87:34 - can actually watch it animate in turn I
87:36 - think that's gonna be famous last words
87:38 - slightly easier but we'll see we'll see
87:41 - we'll see okay people are telling me
87:45 - clap clockwise and counterclockwise are
87:47 - shuffled that's fine I don't care I'm so
87:49 - happy that I got this working okay we
87:52 - get rid of the okay hold on this is
87:55 - bothering me okay all right
88:19 - so before I go I'm going to change this
88:22 - key pressed function to move and I'm
88:25 - gonna give it the argument key although
88:28 - int I guess that's car key and then I'm
88:33 - going to create an array car moves
88:36 - equals up up down down whoops front
88:49 - front left left right right so these are
88:59 - all the possible moves now in draw I'm
89:02 - going to set the frame rate to one I'm
89:06 - going to pick a random number which is
89:10 - the zero between all the possible moves
89:13 - then I'm going to say the move is moves
89:18 - index R and actually I'm just gonna call
89:22 - the move function moves index R so what
89:25 - this should do what happen to my frame
89:29 - rate one its shuffling it how come frame
89:33 - rate one didn't work does it not work
89:35 - with PZ can hold I have a feeling it
89:37 - doesn't work with PZ cam no it's not the
89:43 - problem I know what I'm gonna do let's
89:45 - keep the frame rate and just say if
89:49 - frame count frame count module is 60
89:54 - equals zero then move so it's doing a
90:05 - move and I can get rid of highlighting
90:07 - this cube and I think we can make it
90:09 - move a little bit more quickly and then
90:11 - let's put the move on the screen also so
90:15 - let's say fill 255 and I'm gonna I'm
90:18 - gonna have a character called latest
90:22 - move which will be nothing to start and
90:29 - then I'm going to say text
90:31 - latest move I don't know put it in the
90:34 - top right I'm sure Pete this is gonna
90:36 - totally be messed up with PZ cam oh how
90:39 - do I have text with PZ cam this is gonna
90:41 - be a problem let's just let's just print
90:44 - line latest let's just do print line so
90:47 - I'm gonna figure out drawing text later
90:49 - I'm going to print line no moves index
90:56 - are so you'll see that in the console
90:59 - down here one with all these weird error
91:00 - messages and forget about the latest
91:02 - move and here we go so now you can see
91:10 - this is the end of part two this 741 our
91:15 - video that you just watched and
91:16 - hopefully had some editing in it that
91:18 - made it somewhat tolerable to look
91:20 - through in theory if I've done
91:22 - everything correctly what I'm doing now
91:24 - is I am playing a sequence of rubik's
91:28 - cube moves if I could follow it along
91:30 - and --there I'd have the exact same
91:31 - configuration here there's no reason why
91:34 - I couldn't undo it and play it in
91:36 - backwards to see it solve and I really
91:38 - should try to do that to make sure this
91:40 - works maybe I'll do that real quick I'm
91:44 - gonna take a break
91:45 - I really should try to blend play moves
91:48 - backwards to let it solve I'm gonna do
91:50 - that in the next video I'm you could try
91:52 - that as an exercise if you haven't
91:54 - gotten to part three yet in part three
91:56 - I'm also gonna animate these moves
91:57 - because it's really hard to see if it's
91:58 - doing it correctly so let's see hold on
92:03 - people are talking you have my move list
92:05 - wrong up up down down front front left
92:09 - left right right I forgot back
92:17 - one two three four five six seven eight
92:20 - nine ten eleven twelve that makes sense
92:22 - six times two sorry I forgot back and
92:27 - back so now if if everything is correct
92:30 - this Rubik's Cube is shuffling and I am
92:35 - in the next video going to just quickly
92:37 - to make sure everything's working
92:39 - correctly I'm gonna have it play it
92:40 - backwards to see if it can solve itself
92:42 - that's not really solving it's just
92:43 - playing the sequence backwards and then
92:46 - I am also gonna animate it so once we
92:47 - animate it will really see the Rubik's
92:49 - Cube come to life thanks for watching
92:51 - and see you in part 3 people Oh is
93:02 - something definitely wrong I'm not
93:06 - leaving I'm just these videos get Edit
93:08 - for those everyone who's new watching
93:10 - these videos get edited and uploaded as
93:12 - separate things later so they're there I
93:15 - don't know if they're more watchable or
93:16 - not but but that's why sometimes while
93:21 - I'm doing the livestream act as if
93:22 - something is finishing I will leave at
93:24 - some point in the next hour or so okay
93:27 - don't say goodbye I'm still here is it
93:31 - doing weird behavior that's impossible
93:34 - yeah oh no no no that's just if it's
93:41 - you're seeing multiple cubes change if
93:43 - it's a front move if it's a front move
93:45 - then it looks like a lot of cubes are
93:47 - changing and different rows but it's not
93:49 - it's just the front moving so it should
93:53 - be fine yeah the center point that that
93:54 - Center read should always be read is it
93:58 - ever gonna change it should never change
94:01 - it hasn't changed so I think it's okay
94:14 - I'm not sure lip all right so I need to
94:17 - take a I need to I need a minute I need
94:19 - to take a break from the Rubik's Cube so
94:21 - I was like to tell you about the sponsor
94:25 - of the coding train our friends over at
94:28 - brilliant org brilliant org is a website
94:32 - that has a lot of courses and puzzles
94:37 - and learning materials and forums for
94:39 - discussion I don't know if forum is the
94:41 - right word but you can have a discussion
94:42 - about the solution to various puzzles
94:44 - and I've been enjoying using it with my
94:47 - son who's 10 let's go to the brilliant
94:49 - website real quick and I'm what I would
94:50 - like to do is what I would like to do
94:55 - today is actually pick one of the
94:56 - puzzles and just see if I can whoops I'm
94:59 - on the wrong website I don't know what I
95:05 - typed in but I misspelled brilliant I
95:07 - think I'm on the website here and what
95:09 - I'm gonna do is go to the daily
95:11 - challenges these are the one of the
95:14 - favorite things I like about the
95:15 - brilliant website if you want to follow
95:18 - along and try to do this challenge with
95:20 - me you can sign up at brilliant org
95:21 - slash coding train you can sign up there
95:23 - for free there is a premium subscription
95:25 - for certain aspects of the website and
95:27 - the first 200 subscribers who sign up
95:29 - from the kodi train will get 20% off all
95:32 - right so let's go to this what's the
95:34 - overlap puzzle daily problem and let's
95:38 - let's read let's read it over this I
95:40 - looked at this on the subway this
95:42 - morning I haven't tried to solve it yet
95:43 - I do you think this one is a relatively
95:44 - simple one run there's a lot of really
95:47 - difficult ones and easier ones I wanted
95:49 - to pick one that I felt somewhat
95:51 - confident I could solve and so let's
95:53 - look at this so how many so this is
95:55 - about set theory and intersection of
95:57 - sets so we think of the sets of even
96:01 - numbers so let's let's diagram this a
96:02 - little bit where is my eraser
96:14 - so if I think of the sets of so one set
96:18 - is all the numbers from 1 to 100 another
96:22 - set is all of the perf all the even
96:26 - numbers just put that over here this is
96:30 - all of the even numbers this is 1 to 100
96:35 - and this is like a Venn diagram we've
96:38 - got going on here and then perfect
96:39 - squares so what's a perfect square
96:42 - a perfect square is any number that if
96:45 - you take the square root of it you'll
96:47 - get an integer not a not a not a decimal
96:50 - number so something like for something
96:52 - like 25 these are perfect squares so
96:54 - this actually shouldn't be too hard
96:55 - because we can basically say we know
96:58 - that this this has every number in it so
97:01 - this probably this is like the least
97:03 - then we may still want to say what are
97:04 - all the even perfect squares so the
97:06 - maximum number we can get one the 10
97:09 - squared is 100 so 10 is definitely in
97:12 - our intersection here 9 squared is 81 so
97:15 - that's not even so yeah I think it turns
97:18 - out that it'll be any even number that
97:20 - we square sorry so 8 6 4 2 not 1 squared
97:25 - is 1 so we have 4 8 36 64 100 so this is
97:31 - our these are all of our numbers that
97:33 - fit in each one of these categories
97:35 - right about this let's go over here and
97:39 - let's I'm I logged in hopefully I'm
97:41 - logged into my account I am I'm going to
97:44 - pick 5 and hope that I got right get it
97:46 - right
97:48 - [Music]
97:55 - Oh what are you streak golf or from
98:00 - tomorrow to extend my streak I guess
98:02 - like alright so I'm definitely gonna
98:04 - have to extend maybe next week when I
98:06 - come to my livestream you'll see I have
98:07 - an eight day streak that would be nice
98:08 - but let's do a little bit more with this
98:11 - let me go to the p5 web editor because I
98:13 - think what could be interesting here is
98:15 - let's say oh I'm not how come I'm not
98:18 - logged in here that's irritating what I
98:24 - want to do is I want to post a link to
98:26 - my solution and then see if I can get
98:28 - some comments from you and and in
98:30 - different and different examples of this
98:31 - so let's just say I'm gonna have make a
98:34 - canvas that's 200 by 200 so what I want
98:37 - is I want to visualize every single
98:39 - number so I need a 10 by 10 grid so I
98:44 - need to have in processing land I am now
98:48 - in JavaScript I'm now in JavaScript I
98:49 - need to have a number of columns which
98:53 - is 10 a number of rows which is also 10
98:56 - and then what I want to do is I want to
98:58 - say for let I equals 0 I is less than
99:01 - columns I I plus plus and let me just
99:05 - let me name this as a brilliant
99:08 - challenge then I want to say let me keep
99:12 - auto refresh on why not well that's a
99:14 - little dangerous here if I'm writing a
99:15 - loop let's do J goes from 0 J is a
99:20 - number of rows j plus plus so this is a
99:24 - nested for loop that allows me to if I'm
99:29 - doing everything correctly I'm gonna say
99:31 - stroke 255 fill 0 a rectangle from I
99:38 - times well and then I'm gonna have I
99:42 - need to have a width this is a square so
99:45 - I'm just gonna call it like just W for
99:47 - width and I'm going to say with divided
99:50 - by columns i x WJ x w with with i mean i
99:56 - can just use this because it's a square
99:57 - I can actually use the square function
99:58 - let's keep auto refresh on there's my
100:02 - grid what I might actually like to do is
100:07 - say with minus 1 just
100:09 - so I can sort of see it and then let's
100:11 - put let's do text-align:center text and
100:16 - then so what is the number the number is
100:20 - I plus J times the number of columns
100:24 - right that would give me every single
100:27 - number and let that'll give me every
100:30 - single numbers it's going to be 0
100:31 - through 99 and I want 1 through 100 so 1
100:34 - plus that and then let's also let's put
100:39 - x and y in variables because i'm going
100:45 - to need to use this a lot so x and y and
100:50 - then i want to draw that text at X comma
100:54 - Y and say fill 255 no stroke text size
101:01 - 32 so there's the oh but all the numbers
101:05 - are in the wrong place so we need to
101:07 - shift them over that's all so let me
101:09 - give myself a bigger canvas to work with
101:13 - and then let me shift the numbers over
101:16 - so X plus W divided by 2 y plus W should
101:21 - put it on the bottom - let's see - W / -
101:24 - let's say text align our said Center
101:28 - close enough so I should really be more
101:31 - thoughtful like need to shove these down
101:32 - a little bit let's just actually like do
101:34 - this manually let's say Y plus 16 no y
101:37 - plus 24 y plus 32 that's what I had y
101:41 - plus 4 feet there we go that looks good
101:43 - so now I have a grid of all the numbers
101:45 - so now what I want to do is let's
101:46 - determine if it's a even number so well
101:53 - if it's a number between 1 and 100 so
101:55 - let's say the range range equals the
102:01 - result of the number being greater than
102:04 - 0 and less than or equal to 100 greater
102:12 - than or equal to 1 and less than or
102:17 - equal to 100 this boolean value what
102:22 - kind of job
102:22 - scrip do I have wrong here am I like
102:28 - losing my mind
102:31 - shouldn't this evaluate to a boolean
102:33 - unexpected token I don't need Oh num num
102:38 - means here
102:38 - yeah sorry okay so if it's within this
102:44 - range let's draw the rectangle let's
102:48 - draw everything after
102:56 - so if range if it's in that range fill
103:04 - and I haven't calculated the number yet
103:06 - so this has to move up here if it's in
103:09 - that range fill zero okay so now is it
103:13 - what's the other one is it even even
103:17 - equals M nom nom modulus 2 equals 0 else
103:26 - if it's even
103:30 - let's give it like kind of a dark
103:33 - greenish color
103:44 - what have I got wrong here Oh Armour and
103:50 - the chat is telling me I could say
103:51 - text-align:center Center and then I can
103:56 - do this
103:56 - thank you for that that's perfect but
103:59 - why am I not seeing green green for even
104:06 - oh I forgot about fundamentals of
104:18 - programming I forgot about fundamentals
104:22 - of programming here which is that I
104:26 - forgot about the fundamental program
104:28 - here which I need they're all gonna be
104:30 - true range yeah so this is what I wanted
104:33 - to do I I don't know what I'm doing here
104:35 - really I just was gonna like so let's
104:36 - check for even first range there we go
104:40 - so now I can say okay those are all the
104:42 - even numbers now this is a fun one
104:44 - let's try to detect if it's a perfect
104:46 - square I'm sorry to say perfect equals
104:49 - so this would be true it's a perfect
104:51 - square if the square root of the number
104:55 - is a whole number in other words if the
104:57 - square root is equal to flooring the
105:00 - square root I think this would do it so
105:06 - I'm pretty sure and only give myself a
105:08 - little more space here I'm pretty sure
105:12 - that this would give me that that's the
105:17 - way to detect if something is a perfect
105:18 - square you take the square root of the
105:20 - number and if it's the same as flooring
105:22 - the square root then it's a perfect
105:25 - square so let's chest if and then let's
105:28 - so let's do if it's perfect
105:34 - else if it's even
105:41 - else if whatever elf else if it's F if
105:46 - it's in the range this is sort of silly
105:51 - because what I want to do ultimately is
105:53 - just show the intersection so I'm gonna
105:54 - say if it's a perfect square fill 0
105:58 - alright so that's a perfect square but
106:01 - it's got to be a perfect square and even
106:04 - and in the range and there we go is that
106:08 - what I had for 836 64 100 where's 8 wait
106:16 - hey why don't I get 8 that's fine what
106:20 - did I write 8 oh no no no for 8 3664
106:23 - wait 16 I had the wrong number there all
106:28 - the time I had the wrong number here all
106:33 - along I'm sure you were all telling me
106:35 - this this is for 1636 64 for 1636 64 100
106:43 - that's 5 and so now let's just say
106:46 - otherwise fill like let's get it kind of
106:50 - we can see there we go so this is my
106:52 - solution to the brilliant problem so now
106:57 - what I'm gonna do is I'm gonna I'm gonna
107:01 - go to the brilliant website do I have
107:03 - that still here or did I did I lose that
107:06 - let's go to brilliant org well camera
107:10 - went off and I'm gonna go what's the
107:19 - overlap I completed that challenge let
107:22 - me see here okay
107:24 - I programmed a little visualization in
107:29 - JavaScript with p5 GS that you can enjoy
107:33 - here and then oh I can upload an image
107:37 - so let's also do let's do a save save
107:44 - brilliant dot PNG no loop and so I have
107:54 - my PNG here
107:55 - now that I saved which is this and now
108:00 - let's let's see where is that downloads
108:05 - here it is let's upload that lets it
108:09 - preview there we go oh that's probably
108:13 - not a link so let me make this actually
108:16 - a link so I think oh it's markdown how
108:25 - nice
108:29 - so I think if I put this here and do
108:32 - source code and then do preview this
108:37 - should take me whoops
108:41 - this should take me to here I said take
108:48 - so long oh because I still have that
108:49 - save in there I don't want to keep no
108:51 - why does it take so long my browser is
108:55 - just being slow I think I'm not gonna
108:57 - worry about that
108:59 - and so now I am going to post this
109:03 - explanation and so now I'm going to ask
109:09 - you to if your so if you're interested
109:13 - if you feel like you have a few minutes
109:14 - right now to just help support the
109:16 - coding train go to brilliant org slash
109:19 - Kotick train sign up for a free account
109:22 - come here maybe make a version of my
109:24 - code post it post a comment on it
109:30 - give me some helpful claps I'm sure I
109:33 - got something wrong tell me about it
109:36 - but I'm sure you can make even you could
109:37 - be more thoughtful and beautiful about
109:39 - the visualization that you make so
109:40 - thanks I'm gonna be back to do animating
109:43 - the Rubik's Cube I'm gonna be back in
109:45 - about five minutes or so so what I'm
109:48 - going to do maybe I will leave this up
109:50 - here normally I just go to the coding
109:53 - train wallpaper but what I'm gonna do is
109:56 - I'm gonna make myself disappear which is
110:00 - this I'm gone now I'm going to put on
110:04 - some music
110:07 - [Music]
110:13 - I'll be back in about five minutes
110:16 - please you have a few minutes I took the
110:19 - time to sign up for bleed or get blade
110:21 - under 23 I'll be back
110:26 - [Music]
111:28 - [Applause]
111:28 - [Music]
111:30 - [Applause]
111:31 - [Music]
111:35 - [Applause]
111:37 - [Music]
112:14 - [Applause]
112:17 - [Music]
115:29 - as always I always forget the dis stop
115:32 - this stop just stop this stop this stop
115:58 - this stop and then read this stop this
116:00 - stop this this stop this stop this done
116:03 - and we do this stop just stop this stop
116:06 - stop stop
116:12 - [Music]
116:22 - [Music]
116:26 - this stock the stock never forget this
116:30 - stock I'm gonna do this stuff this stock
116:33 - this dad the star this stock song never
116:35 - forget the Vince dot misses somebody
116:37 - compose that song for me okay my mic is
116:40 - back my face is back up whoops
116:44 - my camera is off hold on a sec okay all
116:56 - right I'm back I hope you had a chance
116:58 - to sign up for brilliant and maybe share
117:01 - with me you were let's share with me
117:04 - your version of a solution to this
117:06 - challenge look at this we already got
117:10 - some comments that's people are watching
117:12 - the live stream awesome that's great to
117:14 - see you here thanks so much thank you to
117:16 - brilliant for the opportunity to talk
117:19 - about brilliant have the sponsorship of
117:21 - this channel it really helps me out and
117:22 - thanks to the audience for participating
117:25 - in this little quick challenge alright
117:27 - so I am going to put this away now
117:31 - and I I'm gonna save this code here I
117:36 - will post a link I guess I post it on
117:38 - the blame website to this code in the
117:40 - video's description but I'm gonna close
117:42 - out of the web browser and I don't need
117:52 - this anymore I don't need this and Here
117:57 - I am people in the chat are talking
118:00 - about a discord so let me let me say
118:02 - something about that so I believe there
118:05 - might be I'm like an old person so I
118:08 - really know about this stuff I believe
118:11 - that might be an unofficial discord for
118:13 - the coding crane which I would be happy
118:16 - for the community to self-organize I
118:18 - would point you to the coding train code
118:20 - of conduct which is on the github
118:22 - repository for the coding train even for
118:25 - an unofficial community associated with
118:26 - the this YouTube channel I do have an
118:30 - official slack channel this is by
118:34 - invitation only and the way to get an
118:36 - invitation is to sign up as a supporter
118:38 - of the coding train
118:39 - through patreon or through YouTube
118:41 - membership there's a little join button
118:43 - that you probably actually see right
118:44 - below watching this fair enough it's on
118:46 - mobile or desktop or whatever but
118:47 - YouTube has a membership which is
118:49 - basically a monthly subscription and I'm
118:52 - using and that's helping me maintain
118:55 - this channel and do this stuff so if
118:58 - you're interested in that whoa
119:02 - I think the stream went down all right
119:08 - up mmm yeah okay I think a green light
119:15 - so I think I'm back I don't know if
119:19 - anybody heard anything I said about
119:23 - discord and I just realized
119:34 - well let me check something
119:50 - you lost me after mentioning discord
119:53 - okay
119:53 - so I'm afraid to jinx myself and talk
119:56 - about it again but what I was going to
119:59 - say is a wait I'm getting
120:14 - okay um what's going on ah all right
120:23 - so I was saying something it's working
120:31 - now I see the green light I've shown
120:33 - about discord so I believe there might
120:34 - be an unofficial somebody might have
120:36 - spun up a discord that's a coating train
120:38 - I'm I was saying that I'm an old person
120:40 - I don't really know about this stuff I
120:41 - don't and but I so I support that if a
120:47 - community if the community watching the
120:48 - channel wants to self-organize I would
120:50 - point you to the code of conduct that I
120:53 - have in the github repository to adopt
120:55 - as well I do have a slack channel this
120:59 - is a private slack channel for patrons
121:02 - who sign up through patreon comm or
121:04 - joined as a YouTube member so there's
121:07 - YouTube has membership so I'm kind of
121:09 - using both of them maybe I need to think
121:11 - about if that really makes sense but
121:12 - that's what I'm doing right now so there
121:13 - is a smaller discussion group there that
121:16 - you are welcome to join if you have the
121:19 - ability to do so and I would thank you
121:22 - for your support
121:22 - okay so here we are
121:30 - [Music]
121:41 - going to see where I am here this is
121:55 - where I was before okay Oh I'm seeing
122:04 - red again now I'm seeing green I think
122:07 - there are some issues with the stream
122:10 - shoot how's it working for everybody
122:24 - yeah I'm seeing I'm I'm seeing in the
122:27 - open broadcast studio dropped frames so
122:32 - I might have to stop for today if this
122:33 - is I maybe I'll restart the computer
122:35 - that's about had this issue before yeah
122:40 - let me I'm going to I'm gonna restart
122:48 - the computer that's one thing I can try
122:55 - I'm singing Yellow and red still
123:08 - mmm not a good sign
123:22 - continuing close this yeah so I'm seeing
123:32 - red in the which is not a never a good
123:36 - sign
123:37 - let me ask let me is is everybody you
123:47 - can hear me but you can't see me let me
123:49 - hit record yeah this isn't good this has
123:54 - happened to me before in which case it
123:59 - seems to be some bottlenecks somewhere
124:03 - when I've checked my internet speeds
124:08 - everything seems great maybe this is the
124:15 - end of the stream for today well lost so
124:33 - many viewers so sad we had like 1500
124:36 - people watching yeah I know the stream
124:39 - is freezing
125:10 - Oh green I see green all back to orange
125:13 - back to yellow back to green
125:15 - let me just maybe the problem will go
125:20 - away and I will while that's happening
125:23 - I'm just gonna play around with this
125:24 - code for a little bit let's see here so
125:30 - for example these are the moves so let's
125:47 - do a string oh wait but my clockwise was
125:55 - wrong so let's look I hold on let's keep
126:01 - keep rest let me not have it move
126:05 - automatically alright let's see let's
126:17 - see if we can fix lower the bitrate yeah
126:29 - let me just see here so what what I
126:34 - would like to know is if okay if that is
126:37 - my cube is not solved all right let me
126:40 - solve the cube a run has 20 moves yeah
126:51 - so for me is that clockwise so I would
126:58 - say for me that's not clockwise that's
127:00 - counterclockwise so what is my
127:06 - convention oh yeah
127:11 - lower case is counter-clock lower case u
127:15 - is counterclockwise so that's right
127:20 - upper case U is clockwise okay now down
127:28 - that's counter clockwise lower case D
127:31 - upper case D is clockwise okay great now
127:42 - let me try write to me green being on
127:47 - top would be clockwise so that's
127:51 - clockwise so if I want to be consistent
128:01 - lower case these are backwards hold on
128:09 - lower case are up
128:22 - lower case up is counterclockwise
128:26 - clockwise okay so write lowercase R
128:31 - should be clockwise which is not so cc
128:40 - these are going backwards clockwise is
128:43 - wrong on turn X so where is turn X so
129:06 - two things are wrong rotate X is
129:08 - backwards and this is backwards so let
129:11 - me switch this and then let me also go
129:20 - to rotate X and put this here and put
129:31 - this here all right
129:41 - so now I should have clockwise so
129:50 - clockwise green should go to the top
129:53 - whoops
130:00 - no no caps counterclockwise yeah
130:04 - clockwise is capital R perfect that's
130:10 - good
130:10 - counterclockwise is the other way here
130:15 - left clockwise its capital L that's not
130:24 - right
130:29 - oh but what's counter on the left oh oh
130:40 - I see this is the front and back problem
130:49 - right because
131:00 - cuz right clockwise left clockwise is
131:06 - the other way well that's kind of
131:10 - annoying so I need oh it's green again
131:14 - it seems to be working
131:16 - I think it should be okay right now no
131:24 - that's a little bit better than it was
131:26 - before back to red
131:39 - Kevin is writing that's why you need
131:41 - consistency in what it means clockwise
131:43 - counter clockwise so yeah I see so it
131:59 - should always be opposite clockwise
132:02 - should be one way on one side and the
132:05 - other way on the other side so
132:07 - technically speaking this even though
132:11 - like this is clockwise this would
132:16 - actually be clockwise for the right even
132:21 - though this is clockwise the bottom this
132:24 - would actually be clockwise that's so
132:26 - weird though
132:34 - maybe I shouldn't call it I'm trying to
132:36 - figure out what's the right notation
132:38 - here that I should use so right now up
132:47 - and down clockwise clockwise
132:58 - so should clockwise here's my question
133:01 - and give me the answer in a full
133:03 - sentence its relative to the faces
133:06 - center so up and down would be clockwise
133:13 - in the same direction but right and left
133:18 - would be clockwise in opposite
133:19 - directions as well as front and back
133:24 - clockwise is always clockwise when you
133:27 - look at the side you're turning but what
133:29 - about for up what about up and down so
133:44 - by the way when you just write yes
133:45 - you're writing the answer to my question
133:47 - like 30 seconds later then I asked it
133:50 - there's a lot of chat so I can't
133:52 - actually determine up and down or up
134:02 - though so up and down are opposite
134:04 - because it says if I turned it to have
134:06 - it look at me yeah so clockwise
134:10 - clockwise clockwise ah so they are
134:17 - opposite okay great
134:19 - imagine looking directly at the face got
134:22 - it so how do I do that here because
134:25 - that's not how I thought about it
134:26 - but I can get this I can get this okay
134:29 - then let's get this right let's get this
134:31 - right but at least I know what it should
134:34 - be now so the only thing that what's
134:37 - right right now is I'm looking directly
134:40 - at the face and I'm gonna go clockwise
134:45 - great so that's correct counter
134:47 - clockwise now that's for now I'm not
134:53 - looking directly at the face am i yes
134:57 - looking directly at the face so now if
135:00 - I'm looking directly at the face for
135:02 - back and I want to go clockwise I didn't
135:08 - did I just go clockwise
135:13 - hold on I'm looking at the face for
135:19 - front and I want to go clock ah I
135:22 - switched it here I see so that's what
135:25 - I'm just gonna do my this is kind of
135:27 - wrong but I'll just do it that way so I
135:30 - see I see I'm gonna do it I don't love
135:33 - this but it'll work so I'm looking at
135:35 - this face and front clockwise back
135:45 - clockwise clockwise so now so that's
135:49 - right now let me do left left
135:57 - does that gonna go clockwise
135:59 - yes counter clockwise yes now right
136:13 - right is that gonna go clockwise no so
136:16 - right is wrong so I'm just gonna switch
136:19 - it why not right so left and right or
136:23 - right and now I have to do up and down
136:26 - so up if I'm looking at it is it going
136:31 - clockwise
136:32 - no that's counterclockwise so up should
136:38 - also switch and down and down
136:49 - am i going clockwise yes am i going
136:53 - counterclockwise yes okay how is the
136:57 - stream going still lagging I think I
137:05 - have it right now so front back
137:14 - clockwise should be actually
137:15 - counterclockwise if I'm looking at this
137:17 - direction yep right clockwise left
137:25 - clockwise should actually go the other
137:26 - way but it's that means and then top
137:33 - clockwise or up sorry so I just do up
137:37 - already up and then bottom or down yeah
137:45 - okay I've got it now yeah sorry about
137:50 - all the lag so this should be fixed now
137:57 - all right let's see if I can
138:04 - I don't like having the characters as a
138:08 - move because I would like to make a move
138:16 - class that has because that's way that's
138:19 - also gonna help me to animate it I don't
138:21 - know if I should do the third part with
138:23 - the terrible lag yeah
138:31 - the lag makes the livestream unwatchable
138:33 - which is very sad to me it could do the
138:38 - challenge anyway and it's being recorded
138:40 - to disk I also could move on with my day
138:53 - hums are your friend yeah
139:07 - Dheeraj is being kind saying i should go
139:12 - have lunch
139:12 - alright let's let me try doing the third
139:17 - part with the rotation why not I hope by
139:20 - the way I forgot to record two discs
139:22 - that first part usually I can still make
139:25 - the edited version by sucking it down
139:28 - from YouTube there was no lag or issues
139:30 - in the first part of the livestream
139:32 - right that was fine
139:34 - hopefully that works
139:41 - alright I'm seeing a lot of green now so
139:44 - I'm gonna I'm gonna push forward alright
139:54 - let me put this back in
140:05 - okay
140:09 - let's do this
140:13 - I'm recording two discs now okay okay
140:19 - hello welcome to part three of my
140:22 - Rubik's Cube series so so far what I
140:25 - have is I have a simulation of the
140:29 - Rubik's Cube and I'm shuffling it with
140:31 - all possible moves up down left right
140:34 - front back both counter and clockwise
140:37 - and counter clockwise now I'm not a
140:40 - hundred percent sure it's working
140:41 - correctly one is because they're not
140:43 - animating it it's I'm not I'm not a be
140:45 - able to visually just like see oh for
140:47 - sure it's working but also another way
140:50 - for me to test to be sure it's working
140:51 - is for me to do the a random move
140:54 - sequence in Reverse so if I were to pick
140:57 - 20 moves and then do those 20 moves in
140:59 - Reverse
141:00 - I should have the cube back in its
141:02 - original state so I do want to add the
141:04 - animation but I also want to make sure
141:06 - what I'm doing is correct before I add
141:08 - the animation so right now I just have
141:10 - an array with a character for each
141:12 - possible move as I am over-engineering
141:15 - this I think I might actually like to
141:17 - have a move class right so the move
141:21 - class would have a character for like
141:24 - which move it is and then it would also
141:28 - have a direction maybe one being
141:32 - clockwise and negative one being
141:34 - counterclockwise because that way I
141:37 - could and maybe let's make this as yeah
141:39 - I'm trying to but I want I need I need a
141:41 - function to be able to say do the
141:43 - opposite and if I just have lowercase
141:45 - and capital and I think if I could use
141:48 - math that would be ezel easier if I
141:49 - could multiply it by negative one so I'm
141:51 - gonna say a move is made with a
141:54 - character and a direction and I think
141:59 - what I would like to do here is I did
142:02 - have I did have these blends clockwise
142:05 - and counterclockwise let's just use one
142:08 - I'm gonna use the convention right now
142:09 - that one means clockwise and negative 1
142:12 - means counterclockwise so rather than
142:14 - use I'm just gonna one is clockwise and
142:17 - negative one is counterclockwise so I'm
142:21 - just going to put a note up there so now
142:23 - I can have the move which
142:28 - and I'll use I could use this or I'm
142:31 - just gonna use underscore so that's the
142:33 - move and then what I can do is I could
142:35 - say I could write a function reverse
142:40 - which basically what that does is it
142:42 - returns a new move
142:44 - with the same the same face but the
142:50 - opposite direction again this might be
142:52 - over till but I think this will be this
142:56 - will be nice so now what I want to do is
142:58 - I want to create this is still fine no
143:04 - no no I want to create an all moves
143:09 - array that has how many moves did I say
143:14 - it was 12 and I'll just manually set
143:21 - this up I'm going to let's so let's
143:26 - write a function that's like in it moves
143:31 - and I'm gonna say moves 0 equals new
143:42 - move up with clockwise
143:59 - and this should be all moves and
144:02 - realizing there's a little bit of a flaw
144:03 - here but so I have one two three four
144:08 - five six again this there of course
144:14 - would be another way to do this without
144:17 - hard coding it and if I ever want to
144:19 - make a cube that's not 3x3 I'm gonna
144:21 - have to refactor all this to think in
144:23 - terms of to automate this too to have
144:28 - algorithms that generate all the booze
144:29 - have everything indexed numerically but
144:31 - I'm gonna have up negative one and one
144:35 - down negative one and one right
144:41 - negative one and one negative one and
144:43 - one I'm doing what negative oh it
144:46 - doesn't really matter it doesn't matter
144:47 - the order I mean it should be consistent
144:49 - left negative 1 and 1 well up up down
144:54 - down right right left left front front
144:59 - what did I do wrong here something is
145:01 - wrong I have the real 1 0 1 2 3 4 5 6 7
145:03 - 8 9 10 11 that should be 12 how the heck
145:06 - am I ran out of space back there's not
145:11 - 13 of them back back up up down down
145:18 - right right left left front front back
145:20 - back 0 1 2 3 4 5 6 no there's no 6 in
145:24 - there
145:25 - 6 7 8 9 10 11 1 negative 1 1 negative 1
145:32 - let's just be consistent 1 negative 1 1
145:36 - 1 negative 1 1 negative 1 1 negative 1 1
145:40 - negative 1
145:41 - ok there's all the moves look at the
145:44 - chat is just 6 6 6 6 6 6 okay those are
145:49 - all the moves now I want to change this
145:56 - now to oh oh this is so sad so how could
146:02 - I turn a mu I could do that I need a
146:05 - unique code
146:07 - for each move this is why I would be
146:09 - nice to have a number all right let's do
146:12 - it this way each move also gets a number
146:16 - 0 1 2 3 4 5 which is just its index 6 7
146:28 - 8 9 10 there's a thing in programming
146:33 - called a for loop 10 11 okay and now my
146:39 - move object needs also an index and so
146:45 - let's also give it an index and that way
146:51 - the move so crazy is the order of the
146:58 - moves is up up down down right right
147:01 - left left front up down right left front
147:03 - back so this should be
147:08 - where's up down turn i have XY z-- and
147:12 - Z's and ups and downs I notation is
147:15 - insane I can't wait till somebody like
147:18 - redoes this in a completely logical way
147:19 - but this is up and down so up and down
147:23 - let's take this out here up down is
147:26 - first and index switch index is 0 up up
147:45 - down down now I want right and then left
147:58 - this is so crazy what I'm doing up up
148:03 - down down this is now very hard to read
148:06 - I've made a mistake here down down I'm
148:09 - gonna do right left that's turning axes
148:21 - right up let's put some comments in here
148:28 - up down right right up down right left
148:49 - so let's go get left here's six maybe
149:00 - this part shouldn't be in the video
149:04 - six seven left right left
149:20 - front
149:28 - back
149:35 - okay I think I'm good so I just numbered
149:38 - all the moves up down right left front
149:45 - back everyone got me to try anon
149:51 - you can't use email effectively in
149:54 - processing you could use X or with 32 to
150:00 - flip the letter case that's a good idea
150:06 - okay now
150:22 - all right so I have all my moves they
150:27 - all have an index they have a up down
150:30 - right left forward or back and a
150:32 - direction clockwise or counter clockwise
150:33 - and again all of the notation is
150:36 - completely arbitrary and this really
150:38 - means
150:44 - [Music]
150:52 - [Music]
150:54 - okay so now what I'm gonna do is I am
151:00 - going to pick let's just make sure a
151:02 - random index of all moves and I'm going
151:08 - to move that one according to its index
151:13 - and I'm going to print out its character
151:16 - its direction and its index just to see
151:23 - and this should be all news and what do
151:30 - I have Rubik's Cube move car int oh this
151:34 - is very silly but that's fine
151:36 - and index so the car is now completely
151:39 - unnecessary the character is completely
151:42 - that necessary I need a mapping of
151:44 - integer to character with enum but no
151:47 - pointer exception all moves are all
151:51 - moves length oh did I forget to call in
151:54 - it moves so I need to call in it moves
151:57 - to create those moves all right now
152:00 - we're back hopefully to what I had
152:02 - before shuffling the cube I swear
152:06 - everybody get to animating this at some
152:07 - point we're shuffling the cube okay now
152:11 - what I'm going to do is I'm going to
152:14 - count up to 20 so I'm gonna create an
152:19 - ArrayList I'm gonna call this an
152:23 - ArrayList of moves called sequence so
152:32 - every time I pick a move I am going to
152:36 - say sequence dot I'm add the that move
152:47 - so I want to say move M equals all moves
152:54 - index R then I'm going to move based on
152:58 - that index number then I'm going to
153:01 - print out the stuff now that I have this
153:02 - em just to see it and then I'm gonna add
153:06 - that to a sequence and then if if
153:12 - sequence dot size equals 20 then and I'm
153:20 - going to have let's see state equals
153:23 - zero then I'm going to say state equals
153:28 - 1 so if state so always every if state
153:34 - equals zero otherwise if state equals 1
153:42 - what I'm going to do is pop every move
153:46 - out of the array so I'm gonna say move n
153:50 - equals sequence dot pop that should get
153:54 - me the last one can I say pop with an
153:57 - ArrayList
154:12 - Java ArrayList pop
154:23 - because there's no pop function for
154:26 - getting the last one and removing it I
154:32 - guess not I could do remove the last one
154:44 - your else is on the wrong if a non pull
154:50 - request there's already an email or
154:52 - request whoops this is by the else's in
155:04 - the wrong place thank you chat so I
155:08 - guess there's no pop for a ray list but
155:11 - I can remove the last one by saying
155:13 - sequence dot size minus one that would
155:17 - remove the last one and then the move
155:19 - that I actually want next move is m dot
155:25 - reverse and then I want to say move next
155:31 - move M and so index and so I'm gonna say
155:36 - if sequin as long as sequence is not
155:40 - empty then do this right as long as
155:50 - sequence is not empty do all the moves
155:53 - in Reverse and then when if it's empty
156:03 - then say state equals 2 so it'll stop
156:08 - doing this there's no way this is right
156:10 - so in theory what I'm doing is I'm
156:13 - racking up a bunch of random moves 20 of
156:15 - them then I'm doing all those moves in
156:18 - Reverse and then I've done in it moves
156:22 - except I have some error somewhere I'm
156:24 - missing a curly bracket so what's wrong
156:28 - you know I'm missing a curly bracket
156:30 - somewhere ooh look here I think that's a
156:33 - missing in curly bracket okay
156:36 - what's the chance this was gonna shuffle
156:39 - the queue and then uncouple it back to
156:42 - the place I would you might probably
156:44 - like 10%
156:46 - [Music]
156:51 - it's going backwards now maybe oh it
157:06 - can't be the same index as the current
157:08 - move all right
157:10 - the index is revoir on O because I did
157:15 - my ridiculous index thing what a
157:17 - terrible idea
157:18 - oh so it's always plus all right oh oh
157:27 - boy my direction idea is like pointless
157:31 - all because all because I did all
157:35 - because I'm using a switch statement all
157:39 - because I'm using the switch statement I
157:41 - just had my if statement is there any
157:42 - way to do it and with a switch statement
157:45 - really what I want is really what I want
157:48 - is I want an if statement I'm going back
157:51 - to my if statement by golly because then
157:58 - I can get rid of this whole index
157:59 - nonsense that was the whole point of
158:03 - this matter we can like fast-forward
158:09 - through these little segments I'm gonna
158:12 - when you do an edited version even when
158:14 - I'm talking I think it makes sense to do
158:16 - that getting rid of this if index thing
158:19 - was a bad idea
158:20 - you don't like it don't like it at all
158:24 - I'm doing it and then where else are
158:29 - they using move forget this index
158:31 - nonsense it's such a bad idea
158:40 - let me have let me have my if statement
158:42 - please
158:51 - right if I could just move based on
158:54 - which move and which direction this will
158:56 - be so much easier if which oh I could
159:02 - still do it with an if statement inside
159:04 - of the switch statement switch which if
159:09 - the case is up turn oh and it's a silly
159:16 - just put the direction in there look
159:18 - that's what I should be doing
159:20 - put the direction in there oh this makes
159:21 - so much more sense case down turn why
159:26 - with the direction up or down this could
159:32 - be up no no no no no no no - case down
159:35 - is - with the direction case right case
159:48 - right is turn x2 and the direction oh no
159:58 - no but I have these all flipped no this
160:06 - is a bad idea because of the because of
160:14 - me wanting to conform to precisely
160:16 - clockwise and counterclockwise
160:25 - I'm gonna use my if statement I look
160:28 - forward to all of you re writing this
160:30 - code in a smarter way
160:41 - well somebody's telling me somebody is
160:45 - telling me that I can do a switch
160:51 - statement but I let me just know for
160:54 - sure that this is working correctly here
160:56 - we go
160:57 - I'm going to rewrite this with an if
160:58 - statement now
163:35 - and doing this in total silence because
163:38 - I want this to be fast worded in the
163:40 - edited version so I don't want to say
163:42 - anything important by accident
164:05 - all is right with the world
164:17 - ah look at that isn't this lovely look
164:26 - at that beautiful code up down down
164:32 - right right left left forward four back
164:35 - back yeah I think I got that all right
164:39 - and now now okay
164:43 - so what's what's wrong here so I'm still
164:46 - I'm making all the moves but there's a
164:50 - syntax error here where's the syntax
164:52 - error somewhere and there's no such
164:55 - thing as m dot index anymore that's good
164:57 - so I want to move m dot which m dot
165:02 - direction no such thing as index anymore
165:05 - and then the next move is I don't even
165:10 - have to make then I could just multiply
165:12 - it by negative one see I don't even have
165:14 - to do this but let's let's do this
165:17 - reverse thing anyway the next move which
165:20 - next move direction so that should be
165:23 - doing it backwards I have some error
165:26 - somewhere oh I forgot a semicolon okay
165:32 - let's see if this does it all right I
165:35 - want to actually hold on sorry
165:37 - I need to see some reporting about where
165:41 - I am so let's just do
165:44 - oh but text is text not going to work
165:47 - how do I use text and PZ cam
165:50 - that's the badges have to print print it
165:52 - so let's print so I don't need to print
166:00 - out the moves let's actually just print
166:04 - line a print line sequence dot size so
166:10 - we should see this count up to 20 and
166:12 - then back down
166:14 - [Music]
166:29 - [Music]
166:33 - it's shuffled it and solved it I mean it
166:35 - didn't actually solve it it just did it
166:37 - backwards so now I could do like you
166:41 - know forget the whole frame count thing
166:42 - just do it every frame and do like a
166:45 - hundred moves this is fun to watch
166:47 - shuffle shuffle shuffle shuffle shuffle
166:49 - shuffle and I can still spin around it
166:52 - while it's doing it and then BOOM thank
166:56 - you oh my god that's exciting
166:58 - alright remember how I said I was gonna
166:59 - animate it the whole point of this video
167:02 - is to animate it so how am I ever
167:07 - possibly going to do that so first thing
167:11 - first let's comment out this whole movie
167:15 - shuffling it thing so I'm actually let's
167:20 - put that in a function I'll call that
167:24 - function a shuffle so I have that code
167:28 - shuffle on shuffle
167:31 - okay so shuffling shuffle that's what
167:36 - that function is doing now this one the
167:40 - one hand animating it is really easy
167:41 - let's say I just want to animate one
167:43 - face
167:44 - well basically like what if I want to
167:46 - animate the front face the front face is
167:50 - the Z and when the front face is every
167:54 - cube when Z is equal to two so I could
167:58 - say if K in this case K is in a equals
168:00 - two rotate by some angle push and then
168:12 - well this is a little bit silly but I'll
168:14 - do this anyway pop and then otherwise
168:20 - show it anyway without that so I think
168:23 - this would be and then if I have an
168:25 - angle
168:31 - some angle if if I increment angle by
168:37 - some amount and I have to say rotate Z
168:41 - no Z what am i what's wrong here pushpop
168:50 - k equals to push rotate show pop
168:55 - otherwise show that's what I meant too
169:02 - many if statements all right there we go
169:06 - so on the one hand it's as easy as this
169:08 - right this is me spinning one of the
169:11 - sides you can see how it's coloured the
169:14 - other colors are still there okay
169:16 - so in the one hand it's as easy as that
169:18 - so what I need to do is let's say
169:23 - basically what I need to do is whenever
169:24 - I trigger a move the move is associated
169:29 - with a given I J and K oh boy
169:36 - this is tricky thinking about this
169:55 - that's front right so let's say I only
169:57 - want let's let's only do the move for
170:00 - front so what I think is that this angle
170:04 - this angle variable I think I can use
170:09 - this move class no yeah because I'm
170:16 - about to do a move first I need to
170:18 - rotate okay so I do this angle is gonna
170:21 - get reset to zero and I what I want is a
170:25 - boolean variable called animating so
170:27 - let's get the bear with me I think I
170:29 - have an idea here animating is false no
170:32 - when I'm about to do the move there's a
170:37 - function called start which animating
170:42 - would then be equal to true then there's
170:45 - a function called update where I would
170:47 - say angle plus equals zero point one if
170:51 - angle I only want to go to 90 degrees if
170:54 - angle is greater than or equal to half
170:56 - pi and this by the way this would be the
171:00 - direction so this would this is gonna
171:02 - also work for the direction I think if
171:03 - angle is greater than equal half high
171:06 - then I want to set the angle back equal
171:09 - to zero and animating equal to false and
171:13 - then I want to actually do so I want to
171:15 - do this fake animation and then
171:17 - manipulate the data and this is purely
171:19 - for the purpose of animating it fake
171:21 - animation then manipulate the data so
171:24 - let's just say that what I want to do is
171:27 - I'm gonna start with a move which is a
171:31 - new move which is front clockwise right
171:37 - I'm gonna make a front clockwise move
171:39 - and then and then I'm gonna say at in
171:45 - setup move got to start so this will be
171:49 - the current move we need a variable
171:51 - that's like current move so I'm going to
171:54 - say move current move start so I'm going
172:00 - to say here if current move animate as
172:04 - it was it animate animating
172:08 - animating so one thing would be if so I
172:13 - could always say current move update so
172:16 - I'm always updating the current move if
172:19 - current mood is animating do all this
172:25 - rotate Z current move dongle and I don't
172:31 - need this anymore so this is now doing
172:33 - it in that move little ki if current
172:40 - move current move start animating is
172:44 - true update angle it's coming out in it
172:53 - moves I don't want that doing anything
172:55 - with that array oh right only if it's
173:00 - anime but it isn't yeah
173:09 - this is really what I want if current
173:10 - move is animating and only I'm gonna
173:13 - have to figure out where I'm doing it
173:15 - but that's actually makes more sense
173:18 - otherwise show so update this should be
173:33 - if animating oh why why why
174:06 - let's look at current move animating
174:15 - true false false so quickly why was it
174:20 - false that quickly
174:32 - oh there we go point one was just too
174:36 - much great okay
174:38 - so look at this that was weird why is
174:44 - 0.1 to fast Oh am i inside the loop
174:49 - where I'm up no update current move
174:52 - animating rotate by the angle this
174:54 - should still be once per frame
175:06 - what's going on here
175:17 - I really like stuck here why is point
175:20 - one too big of a number
175:31 - yeah I could do I could lurk lerp would
175:33 - be actually a nice thing I like the idea
175:41 - of doing lerp
175:51 - but I still understand why this doesn't
175:53 - work
176:14 - I guess it was just that fast crazy
176:47 - hmm
176:55 - like I guess maybe it's
177:04 - angle initialization but I said it's a
177:09 - zero
177:18 - and this should really be up here
177:29 - yeah Oh
177:35 - yeah all right I'm stumped uh-huh I
177:38 - shouldn't be live-streaming for three
177:40 - hours it seems to start the rotation too
177:42 - late right
177:43 - there's a delay when starting up that's
177:46 - what the issue is okay anyway alright so
177:50 - there's just an issue where it's taking
177:52 - a while to render before but it's
177:53 - working the thing is you'll notice is
177:55 - when it finishes rotating it puts the
177:58 - angle back to zero so one thing is I
178:00 - could do is I could take this off oh but
178:08 - I'm sending up one thing you'll notice
178:12 - is it
178:13 - it turns animation off and sets the
178:15 - angle back to zero so even though it
178:17 - moves this stuff it's not in the right
178:19 - place so this is why I need another
178:21 - function I'm going to call it execute
178:23 - which is actually execute the move and
178:26 - what that is is call this move function
178:30 - that's the global move function move
178:33 - with so now if I do execute here it
178:40 - would actually animate it and then
178:43 - actually execute moving the data let's
178:44 - see if that works
178:47 - yeah see okay okay so now the only the
178:52 - thing that's hard coded here that's a
178:54 - big problem is this like I need each one
178:59 - of these moves to know which dimension
179:04 - its operating on which dimension its
179:10 - operating on and then I need to test for
179:14 - that here and then alright so so there's
179:23 - three oh there's three there's three
179:28 - possible dimensions so so this is only
179:36 - if
179:41 - this is if current move I think actually
179:46 - so I could do this which is up so up up
179:54 - goes with K equals two so there's three
180:03 - axes here so now I'm going to do the
180:06 - same thing
180:11 - well o could be down down o down would
180:15 - be if K equals zero again there's a
180:19 - better way to do this it's really up or
180:29 - down
180:40 - I'm thinking about this
180:47 - this dream is long and frustrating more
180:50 - hard-coding I know I feel like I'm so
180:58 - close to finishing this that's why I
180:59 - kind of want to keep going
181:14 - thinking about this the move could have
181:18 - the the move would make sense to have
181:21 - the number two in at zero or two the
181:25 - question is how do I have the access
181:43 - okay here's I've got it I've got it
181:47 - I think I've got it this could have an
181:56 - ayah J and a K bear with me and for any
182:03 - given move
182:13 - we're gonna set so which this which
182:17 - thing is actually false what I really
182:19 - want to do is up is our front is zero
182:24 - zero two back is zero zero zero right I
182:28 - want to not zero but it's it's so I'm
182:30 - gonna use a negative one so what I'm
182:33 - going to do is so for example this is
182:44 - there's redundant information in here
182:47 - but okay so every moves gonna have
182:56 - associated with it and I a J and AK a
182:59 - quaternion attorney ins is definitely
183:01 - the way so when I make the move this
183:05 - move that I'm making is negative 1
183:08 - negative 1 2 okay so what I'm saying is
183:17 - here if current move is animating let's
183:24 - just ask that for a second then what I
183:26 - want to know is if if I if current move
183:38 - dot I is not equal to negative 1 and I
183:45 - is equal to current move I this would be
183:53 - that would be for moving and in this
183:56 - case I want to do K so let's do okay
183:58 - current move K is not equal to negative
184:00 - 1 and K equals current move K
184:16 - then rotate I probably should be doing
184:19 - this inside the cube but whatever
184:21 - otherwise
184:31 - just show it without the rotation and if
184:40 - it's not animating just show all of them
184:42 - there's a lot of redundancy here it's
184:44 - kind of hate this code but I think I'm
184:46 - getting somewhere right what I'm saying
184:54 - is if we're animating check to see if K
184:58 - is the thing to rotate otherwise just
185:03 - show it without rotation okay oh okay so
185:06 - let's not worry about this right now
185:13 - this is would be the same it's just
185:17 - changing the direction okay so that
185:22 - works that rotated it and left it in
185:27 - position okay so now pretty sure if I
185:32 - were to say here right here
185:40 - so if current move dot J does not equal
185:46 - negative 1 and J equals current move J
185:51 - then
185:59 - do all of this but for the y-axis
186:14 - so that should do the y-axis and then oh
186:22 - this is like kind of the worst
186:32 - obviously I want to clean this up to not
186:34 - have all this redundant code but let's
186:36 - do the x-axis okay so that I wish it
186:46 - wouldn't
186:47 - I wish it would wait let's do current
186:49 - move to start e'en mousepressed okay so
186:58 - now it should do
187:00 - oh I click the mouse right I didn't mean
187:03 - let's do that again let's do that move
187:07 - boom that's clockwise front okay now
187:11 - let's make the current move the current
187:15 - move should be back which would be the
187:20 - same but zero index that's right
187:28 - I haven't accounted for the direction
187:30 - yet let's do right so right would be to
187:36 - Z 2 negative 1 negative 1 yeah that's
187:45 - right yes this is working left is the
187:51 - same but a zero oh that's not right ah
188:00 - because the left look at that it's wrote
188:03 - left his counterclockwise right it
188:06 - should be going the left clockwise
188:08 - should be going the other way so left is
188:12 - technically negative one would well no
188:16 - this doesn't do anything yeah that
188:19 - that's right so going counterclockwise
188:23 - is its default way oh oh I've really
188:28 - botched the whole clockwise
188:30 - counterclockwise
188:37 - I think I need to give up on trying to
188:38 - be clockwise and counter-clockwise and
188:40 - just have everything go in the direction
188:43 - of the axis like I need to forget about
188:45 - reel clockwise and counterclockwise
188:47 - that's going to make everything so much
188:50 - easier
189:08 - so where are these if I comment these
189:11 - out where are they being used like what
189:16 - if I just did what if I just used I'm
189:21 - just going to use the direction I'm
189:22 - gonna be consistent so this gonna make
189:25 - life so much easier this is so silly I
189:32 - am just gonna use the direction and by
189:38 - the way now I could just use the index
189:40 - but let's not let's not worry so we just
189:47 - need up down right left forward
190:07 - backward so much nicer up down right
190:14 - left forward backward so now just the
190:19 - turn functions the turn functions
190:35 - should just have a direction and then
190:44 - here should be I'm gonna break so much
190:54 - stuff by doing this but I'm gonna like
190:58 - it so much more and now
191:15 - okay then the rotate functions need this
191:24 - to be a direction
191:46 - it's not working oh where am I
191:54 - I've lost I'm lost I gotta go this is
192:01 - part three I'm gonna have to come back
192:02 - and do another time I should have just
192:07 - stuck with part one today
192:22 - let's go back to what I know sort of
192:26 - works what I started with front oh this
192:38 - should be negative
192:49 - okay front is working I can keep moving
192:54 - it awesome can I make it go
192:57 - counterclockwise now can I make it go
193:00 - counterclockwise so let's make a move go
193:02 - the other direction so it's still gonna
193:07 - rotate that way but the pieces
193:10 - interestingly enough are not turning
193:14 - correctly so let's make it go
193:16 - counterclockwise so what that should be
193:20 - is it should be plus equal 0.05 times
193:27 - the direction so it should go the
193:29 - negative way now there in this case it's
193:33 - going the right direction
193:35 - but it's going to spin forever because
193:37 - if it's greater than half pi or if angle
193:40 - is less than or equal to negative half
193:42 - pi that should be fine or I could have
193:44 - just done the absolute value of angle is
193:47 - greater than half pi let's try that that
193:51 - should work for either direction right
193:53 - so this should help me with the negative
193:55 - direction but why are the pieces when I
194:00 - do execute so it is turning the right
194:03 - way but the pieces are not moving so
194:06 - execute move which direction and so now
194:11 - if I go into that move function which is
194:16 - front so I get to oh I've got how easy I
194:23 - have all this nonsense here oh this is
194:25 - not bad oh I've made my life so much
194:27 - easier so much easier oh ok ok there we
194:36 - go now I can move it that way there we
194:42 - go and now I can move it the front face
194:48 - the other way there's just one in
194:50 - negative one there's no counterclockwise
194:52 - clockwise oh this is so satisfying ok
194:56 - great
194:57 - so now let's try some of these other
195:00 - moves like so let's go back to all
195:03 - moves all moves are up is negative 1
195:15 - negative 1 to negative 1 negative 1 2
195:21 - and by the way the character here is now
195:23 - irrelevant the character I'm like making
195:25 - irrelevant is just for me that is like
195:27 - to have that there to remember down is
195:31 - negative 1 negative 1 0 and I'm going to
195:37 - fill out the rest of these
196:10 - [Music]
196:15 - oh that's up I was just doing front that
196:19 - was front oops
196:21 - I'm doing these wrong I was doing front
196:23 - front is is this mmm negative 1 negative
196:29 - 1 to negative 1 negative 1 back and then
196:42 - up is why so that is negative 1 to
196:48 - negative 1 negative 1 down
197:01 - and and then right left front back okay
197:10 - so let's just do current move equals all
197:15 - moves index D let's try these one at a
197:18 - time let's hit the moves and say current
197:30 - move let's try them all I'm going to try
197:32 - them all one at a time
197:34 - zero what all right which one's work
197:43 - let's see if any of them work all moves
197:46 - front should work front so 8 9 10 and 11
197:50 - let's try 8 9 10 11
197:54 - where did I set that 8 okay that works
198:03 - 9 9 works 10 pretty sure that's doing it
198:16 - correctly 10 is working and 11 11 is
198:27 - working okay
198:32 - okay yes that's working now
198:39 - how come why is what is this supposed to
198:44 - be this one is supposed to be up so x
198:52 - and z are irrelevant up is to along the
198:57 - y axis and that should be where and that
199:05 - should be so J
199:26 - so that's actually bottom but so Oh
199:31 - bottom is rotating oh it's right and
199:34 - then the top is moving the top is
199:38 - changing its values while the bottom is
199:40 - moving
199:41 - I missed a direction equals one
199:43 - somewhere somebody's telling me
200:23 - this is so crazy because oh it's early
200:27 - up is why
200:37 - look at this up should be two there it
200:41 - is this is this is the problem up the
200:49 - top up is two down is zero in just the
200:53 - way that I've done it so now so but the
201:02 - the wrong the cubes are rotating in the
201:05 - the the rotation is happening and that's
201:08 - actually I have it all out of out of
201:11 - whack because Y is pointing down so
201:14 - really up should be zero but it doesn't
201:17 - actually matter I just need to be
201:19 - consistent and now the place where I'm
201:22 - not consistent is here so this should
201:25 - actually be four oh no this should
201:27 - actually be four going counterclockwise
201:35 - so now there we go
201:38 - so up is now the bottom but that's fine
201:40 - so this works so I've got
201:55 - okay so zero works
201:57 - let's try one this should now actually
202:01 - be the top I know the uploads no wait
202:10 - zero works I think I have to give up on
202:14 - this and come back to it because it's
202:18 - like two o'clock now
202:22 - the top if of the move function as an
202:26 - Direction equals one
202:27 - okay where's that top if of them oh
202:30 - sorry thank you there we go okay
202:35 - that's what I missed there we go
202:49 - I left this direction equals one here
202:52 - and everyone's been shouting on it
202:53 - that's why this move one is not working
202:55 - which is now the bottom the down
202:57 - whatever
202:58 - so all Moo's wait all moves zero let's
203:01 - just see this should work
203:03 - it's actually that bottom and then now
203:06 - if I do one this should be the top no
203:10 - counterclockwise yes yes yes
203:12 - that's that counterclockwise great and
203:13 - then two should be the other should be
203:17 - this that's working oh my goodness I
203:20 - think we're there I just check them all
203:21 - three other way amazing for
203:32 - yep four is working five other way yeah
203:42 - yep yep six six is working six is
203:53 - working seven just debugging at its
203:57 - finest seven is working eight eight is
204:15 - working nine I'll retry ten and eleven
204:22 - nine works ten
204:30 - 10 is working and then 11
204:35 - sorry about the lag everybody 11 is
204:39 - working ok all right everyone yes I have
204:47 - got this now
204:48 - here we go so I'm going to go back to my
204:51 - sequence and what I'm actually going to
204:54 - do now is I'm gonna create I'm gonna do
204:57 - the sequence in the set up so let's
205:01 - comment out this shuffle function it's
205:04 - sort of useful but what I want to do I
205:06 - what I want to do is that I want to just
205:09 - create I want to create the sequence in
205:11 - advance and just play it out so what I'm
205:14 - gonna do is create a certain number of
205:18 - moves so I'm going to do int total moves
205:21 - I'm just gonna say equals 20 and then
205:26 - I'm gonna say for int I equals 0 I is
205:29 - less than total moves i plus plus we're
205:34 - gonna pick a random move I'm gonna say
205:43 - sequence dot add all moves are then what
205:54 - I'm going to do is I am going to say for
205:59 - INT iyslah I is less than so I'm going
206:02 - to start it now I'm going to start the
206:04 - end of the array total moves minus 1 I
206:07 - goes all the way down to 0 I plus plus
206:13 - then I'm going to say move M equals
206:18 - sequence get I and then sequence dot add
206:23 - m dot reverse so this is me picking 20
206:28 - moves putting it into this sequence and
206:31 - then doing although and then adding
206:34 - those moves back in Reverse from the
206:36 - last one down to the 0 down to 0 that
206:39 - should work
206:40 - okay now so that's my sequence then
206:43 - current move and then I need a move
206:48 - index is zero the current move equals
206:54 - the sequence get move index so I and
207:03 - then I should say current move dot start
207:07 - so let's just think this should just do
207:09 - the first move
207:09 - oh I've got some sort of infinite loop
207:15 - what just happened here ad hold on this
207:25 - must be like some weird infinite loop in
207:27 - here okay that's fine
207:29 - so I got to there
207:37 - total moves is 20 so go up to 20 and add
207:43 - and then start at 19 oh this is - - that
207:50 - has to be - - okay no wonder so I should
207:53 - just see the first move there we go
207:55 - that's the first move now if so let's
208:04 - call update here then I could say if
208:08 - current move is finished right then move
208:15 - index + + current move equals sequence
208:20 - get move index current move start so
208:27 - this should do the moves one at a time
208:29 - but I don't have a finished function so
208:32 - if the move after it's executed I can
208:37 - say finished equals true and then I can
208:40 - just add another boolean I mean I think
208:43 - animating is kind of the same is that is
208:49 - the same variable but let's let's just
208:52 - use a separate variable just now to be
208:53 - safe so if I say boolean finished and
208:56 - then return finished and I'm gonna say
208:59 - boolean is finished just to make that a
209:02 - function and that should now get me
209:08 - going to the next move oh boy it's doing
209:13 - random moves oh no that was wrong
209:15 - Oh something bad is happening yeah some
209:21 - things that happen
209:34 - some of them are correct what's the
209:40 - chance that even with my mistakes it'll
209:43 - solve itself oh okay no shoot
209:55 - okay let's look at execute
210:18 - there couldn't take thee
210:40 - maybe my reverse function no no it was
210:43 - right it was broken even without like
210:46 - the moves just don't some of the moves
210:48 - don't work what's working wait
210:54 - oh no okay so all of a sudden they're
210:56 - which move was wrong
210:57 - so let's actually let's let's do let's
211:00 - do all the moves so let's change this to
211:04 - what's let's do all moves dot length and
211:14 - add all moves I I'm going to do all the
211:18 - moves one at a time one two three four
211:23 - five six seven eight nine ten eleven
211:31 - twelve okay so huh so they all move they
211:41 - all move one they all move correctly
212:09 - but if they're in the different order
212:23 - oh oh oh I think I know what the problem
212:32 - is I think I know what the problem is I
212:36 - need to make a copy of the move if I use
212:42 - the same move more than once the
212:44 - variables are not necessarily going to
212:46 - be reset correctly I mean you'd think it
212:48 - would be but I think that's not the case
212:50 - so what I should do is I should say when
212:56 - I'm calling the moves in the sequence
212:59 - okay let's let's go back to here I
213:01 - should say add all moves copy so I
213:06 - should make a function it's much like
213:09 - Reverse but it's really just making a
213:15 - new move object with all the same stuff
213:19 - I think maybe because like the finished
213:21 - variable or something so let's see if
213:24 - that fixes it so I'm going to add a
213:29 - whole bunch of random moves but if I'm
213:32 - using the same move twice let's see it
213:34 - this works now oh no no
213:45 - I know it's lagging everybody which move
213:55 - is wrong
214:13 - yeah all right I'm gonna end this
214:15 - livestream since nobody can watch it
214:17 - anyway let me
215:06 - know that I've got a no it's not any
215:10 - better