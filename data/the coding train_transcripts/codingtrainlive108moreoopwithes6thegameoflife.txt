00:03 - some crazy idea
00:13 - [Music]
00:24 - [Music]
00:38 - [Music]
00:51 - [Music]
00:58 - [Music]
01:02 - hello good afternoon hello happy Friday
01:06 - it has been a very long time since I've
01:09 - been here live streaming on YouTube in
01:12 - fact it has been actually I don't want
01:14 - to admit this it's been exactly three
01:17 - weeks one week was Thanksgiving last
01:21 - week I had strep throat which I highly I
01:24 - recommend not contracting I have been
01:28 - told
01:28 - well I'm no longer contagious and that
01:30 - also you cannot get strep throat from
01:32 - watching a live stream so assuming that
01:34 - that's all true I'm here you are here we
01:37 - are here together we will do some coding
01:39 - and that is that this is the coding
01:42 - train my name is Daniel Schiffman and I
01:48 - appear here most Fridays and in fact I
01:51 - have some announcements to make which is
01:52 - that I have now missed two Fridays
01:56 - for being sick actually one strip there
01:58 - and when I had this awful other cold
01:59 - thing and I'm wrapping up a few things
02:02 - at the end of the year my schedule is a
02:04 - little bit more flexible next week as of
02:07 - now I'm scheduled to do three one two
02:11 - three live streams next week and then I
02:14 - will be doing one final year-end live
02:17 - stream right now tentatively scheduled
02:19 - for Thursday December 21st now you might
02:22 - be asking I hope you can all hear me you
02:26 - might be asking you might be asking well
02:30 - how can I find out about the schedule
02:31 - and if so I have a new system which is
02:35 - really terrible but it's better than my
02:37 - other non-existent system and definitely
02:39 - let's help save net neutrality which is
02:43 - that the readme computer come alive to
02:46 - read me here I try to keep a schedule so
02:51 - this is oh this is wrong I've gotta
02:54 - trade this one it's going to be in the
02:55 - afternoon so this is today Friday
02:58 - December 8th all these times are Eastern
03:00 - Time New York City time that's my time
03:02 - zone this is today these are some things
03:05 - that I'm thinking about doing next
03:08 - Tuesday I will do a livestream in the
03:10 - morning next Thursday I will do one in
03:13 - the afternoon
03:14 - next Friday we'll do one in the morning
03:15 - then on Monday December 18th I will be
03:19 - roaming out of this room I can't switch
03:23 - my camera ooh there we go oh come let me
03:33 - try this again this bad stick that's not
03:35 - rehearsed I will be walking this way
03:37 - come on come on everybody
03:39 - oh look now come with me over here hey
03:50 - don't don't talk to me otherwise you'll
03:53 - be live on the Internet no no you can I
03:55 - just I'm doing this is some very bad
03:57 - schtick where I open the door there's a
04:03 - hallway out there where people sometimes
04:05 - say hello to me as you might have just
04:07 - noticed but on that Monday I will be
04:10 - leaving this room you might think that I
04:13 - live in this room I don't actually live
04:14 - in this room although New York City is a
04:17 - very expensive place where space is at a
04:19 - premium and I bet you this would go for
04:21 - quite a bit per month in rent if you
04:23 - wanted to live here but what I was
04:25 - saying is that I will leave this room go
04:28 - downstairs to the fourth floor with my
04:30 - robing roving mobile device and
04:32 - livestream the year-end show here at ITP
04:35 - New York University and show you a whole
04:36 - bunch of projects to be making all
04:38 - semester if you don't know what that is
04:40 - you can probably search on YouTube for
04:42 - winter show 2017 spring show - no winter
04:45 - show 2016 spring show 2017 those are
04:48 - some other live streams and videos that
04:49 - I've done come on this way oh my
04:55 - goodness what's happened here sorry hold
04:56 - on okay
05:02 - come on this way
05:11 - so boys that beat the train okay so
05:21 - looking at the chat Morocco somebody is
05:27 - actually watching this live stream from
05:29 - Morocco that is amazing to me hello to
05:31 - all the international users viewers this
05:37 - is called it TCU and I'm going to go
05:41 - with it all right so what's happening
05:44 - today what other things do I want to
05:45 - announce a couple things holidays are
05:48 - coming up I feel obligated to do some
05:52 - marketing here I have a new Amazon page
05:56 - if you go to amazon.com slash shop slash
05:59 - coding train
06:00 - I think nope the coding train the coding
06:07 - train yeah there we go
06:09 - if you go to amazon.com slash shop slash
06:11 - the coding train you can see here this
06:14 - is uh you can get your very own it's not
06:18 - a coding train train it's a so I've just
06:22 - created this page to collect different
06:25 - books and resources that I use in some
06:27 - of the videos and it's true if you go to
06:29 - this page and click on one of these
06:30 - links and shop on Amazon I get some sort
06:33 - of commission from that so I wanted to
06:35 - mention that that is there and available
06:36 - to you I also wanted to say that those a
06:39 - loud clap that it is the year and
06:42 - fundraiser for the processing foundation
06:45 - you can see here that we have a goal the
06:48 - processing foundation to raise $20,000
06:50 - in December and you can donate now if
06:53 - you want but my plan is December 21st
06:55 - will be a live telephone experience
06:58 - where I do coding tutorials all day I
07:01 - don't know if we play all day and
07:02 - hopefully have some guests or different
07:04 - things and as we watch the donations
07:07 - rise for the nonprofit foundation in the
07:11 - processing foundation I should also
07:13 - mention that briefly that for any of you
07:15 - who are patreon backers patreon.com
07:17 - slash coding training a couple things
07:19 - one is I have now sent out every single
07:22 - sticker and book reward
07:25 - - everything will stick her - everyone
07:27 - every book reward - every us address and
07:31 - the International Book rewards are going
07:34 - out as we speak so those will hopefully
07:35 - all be finished within a couple days
07:37 - it's just a lot more complicated cuz
07:39 - I've to fill out all these customs form
07:40 - so anybody has any brilliant ideas for
07:43 - how I can ship books internationally in
07:44 - a more efficient way so I want to
07:46 - mention that now I also know I don't
07:47 - want to belabor this point but I know
07:49 - there have been some recent changes in
07:53 - the patreon fee structure and there's
07:55 - been some controversy associated with
07:57 - that if anything that if you are a
08:01 - patron backer and anything about the new
08:04 - patreon changes is something that you're
08:05 - unhappy about it's nothing I have
08:07 - control over but I would love to hear
08:09 - from you about that and if for some
08:10 - reason you cancel your pledge because of
08:11 - that please let me know and I of course
08:13 - I understand
08:14 - backing anything on patreon patreon is
08:17 - just is certainly just an optional thing
08:19 - for people who are capable of doing so
08:21 - okay so hey Dan what's you doing today
08:29 - asks Levani and yogi in the chat so I I
08:34 - have some good and bad news the good
08:38 - news is here I am the coding train is
08:41 - here for you on Friday to do some coding
08:43 - stuff I do feel like what I really I
08:48 - need to just this needs to be finished
08:51 - so I have a holes for beginners I have a
08:57 - whole set of tutorials right here which
09:05 - is this playlist so this playlist is the
09:13 - beginner foundations of programming in
09:15 - JavaScript playlist as you go to this
09:19 - through this playlist and you look and
09:20 - you look and you look you see ah
09:23 - suddenly I get older I'm here talking
09:28 - about functions and return and I have
09:30 - this youthful glow around me and I'm
09:33 - making a video that's only seven minutes
09:37 - then you can see parts of my brain oh
09:39 - wait oh no this is Allah two minutes I
09:42 - was by joke was giving it's longer 20
09:44 - minutes so then I change and because
09:47 - what happened is I had a whole bunch of
09:49 - videos about making objects in
09:50 - JavaScript using constructor function
09:54 - and all about prototypes and that sort
09:55 - of thing and I am changing over today
09:59 - this year 2017 and 2018 will be the year
10:02 - of es6 for me and so I've been slowly
10:07 - replacing these videos so six-point-two
10:10 - got replaced 6.3 got replaced whoa
10:20 - oh my god I'm hearing some sort of
10:22 - horrible ad where's no no wait do you
10:28 - guys hear that what is this no stop
10:30 - where's that playing how come I can't
10:35 - see it okay
10:41 - it's come back to me I was really really
10:43 - trying to do some sort of dramatic
10:46 - something that's totally failed okay
10:50 - here we go wait wait
10:57 - yeah that's been replaced with classes
11:00 - what is an array that's just about an
11:02 - array a raising the loops arrays of
11:03 - objects yeah I look old I think I'm old
11:08 - in this one with a different yes yes and
11:11 - then mouse interaction with objects I'm
11:15 - wearing a coding train t-shirt that's a
11:17 - good sign that's been replaced removing
11:20 - objects from arrays that's been replaced
11:23 - checking objects intersection no and
11:28 - objects and images no so I feel like I
11:32 - should do these last three so today I'm
11:34 - gonna do that just to have that done
11:36 - it's out of the way it's finished this
11:38 - series is complete for all of you who
11:40 - want to spend your winter holiday break
11:42 - learning different JavaScript you won't
11:45 - be confused by the different styles of
11:49 - doing object-oriented programming in
11:52 - JavaScript in this video ok so that's
11:58 - what I'm gonna start with what else
11:59 - might I do today I've had a lot of
12:04 - requests to use WebGL have I or did I
12:08 - just make that up
12:09 - people asked about it I wanted to see if
12:13 - I had some time to revisit WebGL
12:14 - rendering in p5.js
12:15 - I am so excited I recently learned about
12:21 - these JavaScript array functions like
12:24 - map and fill and reduce I like use them
12:27 - all the time and I use them all the time
12:28 - with that arrow syntax and I actually
12:30 - really like it so I want to
12:33 - bring that joy of these array functions
12:36 - with the arrow syntax to you because in
12:39 - the future I want to do a lot of stuff
12:42 - around working with data vector data
12:45 - clustering some machine learning topics
12:48 - and having some of these concepts of
12:51 - array functions will be really helpful
12:53 - and this I'm kind of unsure about but
12:55 - it's been asked so many times it gets
12:59 - requested a lot let's actually take a
13:01 - look here let's go to rainbow topics so
13:05 - if you're wondering if this is a repose
13:07 - as a place where you can submit ideas or
13:10 - questions it's a place where the
13:14 - questions go to die because I never get
13:17 - to any of them but in theory it's a
13:19 - place where I can kind of like organize
13:20 - ideas for future streams and someday
13:22 - I'll catch up to all of these things but
13:25 - what you can also do here on this is I
13:29 - can sort it by most reactions most
13:33 - thumbs up reactions and let's see
13:36 - alright this is kind of chrome Chrome
13:39 - extensions that could be Dec could be
13:45 - closed that issue could be closed and
13:47 - links of the videos can be there so
13:49 - there's a bunch of things somewhere in
13:51 - here but it's not very high up this one
13:56 - here we go
13:57 - Conway's Game of Life that's six that's
14:00 - six six thumbs up but I get this in
14:04 - YouTube comments a lot people are really
14:06 - interested in me doing a coding
14:07 - challenge to implement this I do have
14:08 - some tutorials where I do it where I
14:10 - talk about it and I show some examples
14:11 - but I never actually sort of programmed
14:13 - it from scratch so that's something I'm
14:16 - thinking of doing today as a challenge
14:18 - and if you have any ideas for really
14:21 - simple 3d things I could do as a p5.js
14:26 - WebGL challenge I would love to hear
14:28 - about them maybe you can put them in the
14:30 - comments and any patreon backers who are
14:34 - in the YouTube chat if you catch some
14:36 - good ones you could paste it into our
14:37 - slack channel I do look at the YouTube
14:38 - chat but it tends to scroll by pretty
14:40 - fast I miss most things about it okay
14:43 - right so Luke is asking didn't you do
14:45 - Game of Life a while ago
14:47 - and I I don't know I have a video I
14:49 - search on YouTube game let's just look
14:51 - game of life
14:53 - so okay first of all we're getting
14:55 - everything about the actual the game of
14:56 - life that game game thing so that's not
14:58 - going to do us any good Conway
15:00 - so oh there I am seven point three the
15:04 - game of life and nature of code two
15:05 - years ago twenty eight K views so this
15:09 - is kind of a video oh look at that
15:11 - that's new I hover over it starts to
15:15 - preview me it's docked so this video I
15:21 - explain the game of life and I talk
15:24 - about it and then I show by code example
15:26 - but it don't actually build all of the
15:28 - code for it and what I'm discovering is
15:30 - there is an audience who really prefers
15:33 - the videos where I just kind of start
15:35 - with a blank file and just code the
15:37 - whole thing while I explain it as
15:38 - opposed to kind of a more like lecture
15:41 - tutorial thing where I point and talk
15:43 - and demonstrate things okay so that whoa
15:48 - Conway's Game of Life 3d and minecraft
15:51 - okay this might be something I have to
15:53 - do at some point okay so that's that one
15:58 - other thing I wanted to mention YouTube
16:01 - Schiffman I have this new community tab
16:07 - so this community tab is something that
16:10 - is now on YouTube apparently and you can
16:13 - see like oh I posted something about the
16:15 - Amazon shop I'm right I actually wasn't
16:19 - sure if which one of these I should do
16:21 - if I have time for just one so I can do
16:23 - polls here what happens if I vote for
16:25 - here oh boy
16:27 - this is very confusing oh wait no no ah
16:33 - whatever
16:34 - no go back this is my fake account for
16:39 - being live-streaming of course it knows
16:41 - and I don't know what the password is I
16:43 - think I got it so if I vote oh boy this
16:51 - is really I had to create a channel
16:52 - alright nevermind maybe this is a hassle
16:55 - I've been the straw poll thing is better
16:57 - but I can't see the results here unless
16:59 - I did as myself and I'm petrified to
17:02 - sign me into myself while I'm
17:04 - live-streaming in case I reveal some
17:06 - kind of YouTube something or other by
17:09 - accident alright anyway so that
17:11 - community tab is there I'm gonna try it
17:13 - you know mostly I use github the tools
17:16 - that I use associated with this channel
17:18 - are github for all of the code and lists
17:22 - that I'm making YouTube for publishing
17:24 - the videos and now this community tab
17:26 - Twitter for kind of making announcements
17:28 - and maybe patreon for some crowdfunding
17:30 - and this and slack as a private slack
17:33 - channel as a benefit to patreon backers
17:35 - okay 3d game of life Oh interesting
17:42 - what did it I don't know why I couldn't
17:46 - see that as obvious so maybe let's try
17:49 - that alright let's see here now what I
17:53 - need to do is I need to put my little
17:56 - green piece of paper on this laptop I'm
18:03 - gonna go over here
18:05 - [Music]
18:12 - Thank You ADA I believe that suggestion
18:15 - came from ADA 3d game of life so that
18:17 - seems like a perfect thing to do and
18:19 - also a reason to do it in p5.js I'm
18:22 - looking for something oh yes green paper
18:26 - [Music]
18:32 - [Music]
18:42 - now I've got my train conductor hat all
18:48 - right so I'm feeling a little bit more
18:55 - settled today this is my list I'm gonna
19:00 - try to do all those object-oriented
19:02 - programming in JavaScript videos that I
19:03 - feel like I just need to like getting
19:05 - out of the way I'm going to maybe talk
19:09 - about some es6 authors are these
19:11 - actually es6 with some advanced array
19:12 - functionality I'm maybe gonna look at
19:16 - WebGL and maybe I will code the game of
19:19 - life in two-dimensional canvas and then
19:23 - in WebGL
19:28 - looking at the shot so let's let's come
19:48 - back here to so let me look at these
19:54 - videos here for a second so what where
19:58 - did I where did I last leave off
20:05 - removing objects from arrays so this was
20:12 - what I did and if I go to the end of
20:17 - this video
20:18 - what happens at the end so if I click on
20:31 - right so if I click on it deletes the
20:35 - things so the okay alright so the next
20:38 - aspect of this that I'm going to look at
20:44 - is so let's find that example
20:57 - mmm where are those examples where I
21:00 - left off where did I put them what's in
21:05 - here all right might actually just have
21:07 - to go and grab the code from let's see
21:13 - grab the code from this actual github
21:15 - repository actually hold on I already
21:22 - have that downloaded here and where am I
21:28 - going to p5.js p5 GS what video is that
21:35 - and I'm looking at what was it oh why
21:44 - does this go to sleep don't go to sleep
21:49 - wait somebody's days I'm gonna prepare
21:51 - before I do a livestream already let's
21:58 - guess no night maybe it's eat is arrays
22:01 - oh that's dumb 7 is a raise yes moving
22:08 - objects from arrays 7.5 so in this is
22:12 - where I last left off with this bubble
22:15 - class there we go
22:17 - I will come and bring let's go grab 7
22:20 - let's put it on the desktop and let's
22:25 - I'm starting to think that I should use
22:28 - Visual Studio so many people just love
22:31 - Visual Studio and I kind of seen people
22:32 - using in and it looks so fancy and nice
22:35 - I really like Adam I know somehow the I
22:38 - think I had this reaction of like oh
22:39 - it's Microsoft Visual Studio and that
22:41 - old thing that I used to program and C++
22:43 - was like this is like horrifying
22:46 - traumatic experience but this new
22:47 - Microsoft the open source Visual Studio
22:49 - is apparently super nice but I'm gonna
22:51 - stick with Adam right now cuz it's what
22:54 - I'm used to and I have all my settings
22:55 - there so let's open this up in Adam and
23:04 - let me run a nice little server
23:12 - where am I going oh seven let me run a
23:15 - server and let me go to the browser so
23:26 - this should be whoa this should be limp
23:34 - can't move this over here yes this
23:36 - should be the last whoa I got some
23:39 - Chrome extensions still activate it
23:43 - let's turn those off I can just get rid
23:49 - of them and let's go here now what's
23:56 - going on in this example mouse drag got
24:01 - it
24:03 - hi this is where I last left off okay
24:06 - right this was the end of that last
24:07 - video this was the last example that I
24:10 - did in that tutorial series let's get
24:14 - rid of the reference to the sound
24:16 - library so that we don't get this
24:18 - unnecessary error message here and there
24:20 - we go all right I am just about ready so
24:32 - what I'm going to do is I am now also
24:36 - going to test and see how this looks
24:39 - oh that's not a good sign Randi would be
24:51 - telling me right now
24:53 - I reminded you to check your markers
24:56 - that's better not great that's pretty
25:00 - good
25:01 - can you see it that's the question I'm
25:04 - gonna walk over here to look focus looks
25:07 - good I think we're good I already forgot
25:09 - which one that was
25:10 - this one so this is my marker for today
25:15 - putting it right over here and
25:18 - I am now going to just clean the
25:23 - whiteboard a little bit and play some
25:32 - music now I also just remembered that I
26:11 - have a time limit here and I might as
26:14 - well plug this for a little bit if
26:15 - anybody let's see if I go to ITV at NYU
26:17 - dot edu big screens will that give me
26:20 - the information yes this is tonight
26:23 - doors open at 6:00 p.m. Friday December
26:26 - 8th 555 West 18th Street I guess you had
26:30 - to RSVP you have to travel back in time
26:32 - to RSVP but I will be there at this
26:34 - event tonight I will try to remember
26:36 - before I go to shove a whole bunch of
26:38 - coding train stickers in my jacket
26:40 - pocket so if you are there if you're
26:42 - coming to this event for any reason
26:43 - please say hello to me and ask me first
26:46 - sticker if you would like a sticker I
26:47 - don't actually just offer people
26:48 - stickers because that seems weird like
26:50 - I'm kind of like a creepy sticker
26:52 - offering like a which is like my coding
26:53 - train sticker but I'm really excited if
26:55 - somebody asks me and then I'm also like
26:57 - really disappointed and upset with
26:59 - myself if somebody asks me I don't have
27:01 - them on me
27:02 - but anyway stickers aside alright so
27:06 - that I wanted to mention so I do have to
27:08 - be out of here by 5 at least to make it
27:10 - over there and to watch all the
27:12 - wonderful work the other thing so okay
27:16 - why am i not signed into github I guess
27:19 - I'm not gonna worry about that so now
27:20 - what I'm going to do is so interesting
27:26 - level I'm just curious what I did in the
27:28 - tutorial from quite a while ago all
27:30 - right okay so that
27:32 - what I did and then here yeah okay so
27:37 - I'm not too worried about this and then
27:38 - this one whoa weird I don't remember
27:44 - making this page and it's also not
27:47 - working but uh I'll come back to that
27:48 - okay so here we go it is time for more
28:02 - bubbles
28:03 - [Music]
28:38 - so the topic of this video is and here's
28:44 - what I'm gonna I'm gonna actually do
28:45 - some pre video coding because so what
29:03 - I'm gonna do is actually set myself up
29:05 - with an example where I create two
29:14 - bubbles and then I am going to level one
29:29 - bubble too and I'm going to actually
29:35 - this will be useful the change
29:37 - brightness thing that'll be useful keep
29:39 - that the contained thing I'll let me
29:42 - leave that so and the move and the show
29:49 - if I run this what's wrong here bubble
29:56 - one bubble - oh I didn't give it a size
30:04 - so let's try that move show what's wrong
30:18 - here
30:18 - Oh bubble one move and show and bubble
30:23 - to move and show there we go alright so
30:28 - I have these two bubbles moving now the
30:30 - other thing I by the way I've noticed
30:32 - right this is correct right if I say R
30:34 - equals 100 and R equals 50 and I take
30:40 - these out
30:43 - all right they get that size but if I do
30:47 - this is this an es6 thing or is that
30:52 - always been true in JavaScript is this
30:54 - overloading of a method are giving
30:57 - default values to a because I've always
30:59 - done the thing like I check to see if
31:01 - the argument was passed in and then I
31:04 - assign it a value if it wasn't but it
31:06 - looks like here I can give it a default
31:07 - value just here so so what I'm looking
31:12 - for what I'm curious is the the defaults
31:16 - are new that's part of es6 okay so all
31:19 - right so good maybe I'll sneak that into
31:23 - this video for no good reason I'm gonna
31:29 - I'm gonna do something you guys who are
31:30 - the live viewers will witness something
31:32 - very special because I'm going to
31:35 - pretend I'm going to pretend to
31:39 - accidentally have this problem and then
31:42 - I'm going to solve it this is going to
31:44 - be a staged fake bug I've never done
31:48 - that before know I always legitimately
31:52 - make my mistakes and don't pretend to
31:54 - make the mistakes and then correct them
31:55 - later all right
31:57 - okay so here we go okay all right and
32:19 - that overloading you can do with all
32:20 - functions right it's not just something
32:23 - that's available as part of constructor
32:24 - function right if I were to say function
32:27 - test X equals 100 and then I just say
32:32 - console dot log X and i refresh this
32:38 - page and I say test oh oh maybe I can't
32:49 - can I only do this for constructor
32:52 - functions hold on really
32:55 - oh no I just typed in something wrong
32:58 - yeah okay so it's this works for all
33:01 - functions okay of course of course it
33:03 - does of course it does all right
33:07 - I wrote text thank you very much hello
33:18 - aren't you just sitting at home
33:20 - wondering when could i possibly watch
33:22 - another video about bubbles well today's
33:25 - your lucky day this is another video
33:27 - about bubbles and in this video if I
33:29 - could come over here for a second what I
33:30 - want to look at specifically ah and this
33:41 - video what I want to look at
33:42 - specifically is how can i if I have a
33:46 - bubble object like this bubble one and I
33:50 - have another bubble object like this
33:53 - bubble - how can these objects talk to
33:58 - each other communicate to each other how
34:00 - can they ask each other questions like
34:02 - am i intersecting you or you am i
34:05 - overlapping you how close are you from
34:07 - me these types of things and you can
34:09 - imagine all of the implications and
34:11 - possibility of this now on the one hand
34:13 - to do this all we need to do is figure
34:15 - out some math right and that math is
34:17 - what is the math of two circles that are
34:21 - overlapping versus two circles that
34:23 - aren't overlapping that math is quite
34:25 - simple in some ways I just want to look
34:28 - at the distance between the Centers of
34:30 - both of those circles right and you can
34:33 - see here that that distance is going to
34:36 - tell us whether they're overlapping or
34:38 - not right so one way that I could think
34:39 - about it look at this if this is r1 and
34:42 - this is r2 right those are the this is
34:45 - the radius of this circle this is the
34:47 - radius of this circle if this distance
34:49 - right that's all so this is r2 right
34:51 - here and this is r1 right here if that
34:55 - distance is greater than r1 plus r2 then
34:59 - certainly the circles are not
35:01 - overlapping however if that distance is
35:04 - less than the sum of the radii of the
35:07 - two circles than they are overlapping so
35:09 - in the one hand this is all I need to do
35:11 - I need to be able to say give me the
35:14 - distance can you see that just barely on
35:16 - the top between x1 y1 x2 y2 and then I
35:24 - need some sort of if statement to see is
35:26 - this distance less than r1 plus r2 then
35:31 - they are intersecting so let's actually
35:32 - go and start to implement that math in
35:35 - the code first but what I want you to
35:37 - think about is is there a way for the
35:40 - objects themselves to handle the
35:42 - computation of that math rather than
35:45 - that math just be fiddling about in the
35:47 - code somewhere perhaps less convenient
35:49 - so come back over here with me and let's
35:51 - actually let's go over here and so I
35:53 - have the continuing from where I left
35:55 - off this is essentially the same bubble
35:57 - class that's been in my previous videos
35:59 - and I'm just gonna make two objects I'm
36:02 - gonna say bubble one and bubble two you
36:09 - key on my keyboard doesn't work
36:11 - Holi works about 40 percent of the time
36:13 - if you notice me pressing it a bunch of
36:14 - times so then what I'm going to do is
36:17 - I'm gonna say bubble 1 equals the new
36:20 - bubble at 200 200 I'm gonna put one on
36:25 - the left side of the screen and one on
36:27 - the 300 200 the right side of the screen
36:30 - then I'm gonna say bubble one show and
36:33 - bubble two dots show so now I should see
36:37 - up and that's bubble one and bubble two
36:38 - so now when I go to my sketch I should
36:42 - hit refresh I don't see any bubbles
36:47 - let's look here bubble one oh look at
36:51 - this
36:51 - I forgot the bubble has a property for
36:56 - its radius and I did not define that huh
36:57 - here's an interesting thing as if I'm
37:00 - just coming up with this right now one
37:02 - of the features of es6 which is the
37:05 - version of javascript that we're using
37:06 - that allows us to write classes to make
37:08 - objects from allows us to give a default
37:11 - value to a particular argument if we
37:14 - forget to pass it in so this parameter
37:17 - here R which is going to be assigned to
37:20 - the
37:21 - bubble objects are property I can
37:23 - actually say R equals 50 right up here
37:25 - and then if i refresh it look I have two
37:27 - bubble objects this even sort of a weird
37:31 - I meant for this one to be at 400 not
37:33 - that that really matters so you can see
37:35 - those are two bubble objects and I could
37:37 - optionally give one of them the if I
37:40 - don't want to use that default value for
37:43 - R I could give I could give it a value
37:45 - so this is actually incredibly
37:47 - convenient little piece of syntax here
37:49 - that if you're going to have a parameter
37:51 - to a function and this is not just for
37:53 - the constructor you can do this for any
37:55 - function although it's quite convenient
37:56 - to do it with constructor functions and
37:58 - I want to give it a default value so
37:59 - it's a little tidbit there for you
38:00 - inside this video which is about the
38:03 - objects intersecting okay so now let's
38:05 - move them around bubble one dot move
38:08 - bubble two dot move let's move them
38:12 - around just to see okay so what I want
38:14 - come on come on bubbles so we're gonna
38:19 - have to do some work here to get them to
38:20 - those bubbles to get a little closer to
38:22 - each other
38:24 - hold on timeout
38:29 - this chat is going oh okay okay
38:36 - you people sometimes in the in the slack
38:39 - channel people are just chatting about
38:40 - stuff and I think I see all this
38:42 - activity out of the corner of my eye and
38:44 - I think oh my god I'm doing something
38:45 - horribly wrong I'm just gonna keep going
38:48 - yeah we're gonna get two arrays and a
38:51 - bubble system and all that stuff but
38:53 - this is the very very beginning where
38:55 - was I all right so what I want to do now
38:59 - is I want to go back and let's oh you
39:01 - can't really hide I did I did end up
39:05 - going above but this is fine you can see
39:06 - that I'll be better at this in the
39:08 - future so I want to try to implement
39:09 - this math for example what if I want to
39:13 - say right here and draw I can say
39:15 - alright I need to find the distance
39:18 - between bubble 1x bubble 1 dot Y right
39:24 - these are the properties the x and y of
39:26 - that bubble and bubble two x and bubble
39:31 - two dot y and
39:34 - oh and this should say D and then I want
39:37 - to say if D is less than what if it's
39:42 - less I don't know yeah if it's less than
39:44 - bubble 1 dot R plus bubble to R then and
39:51 - let's put all I'm gonna do something
39:52 - silly here let's put all this over here
39:54 - and I can say bubble 1 no no I'm just
39:59 - gonna say like background 0 200 0 100
40:03 - okay so this is the idea of like now I
40:06 - have the math for intersection I know I
40:09 - need you to find the distance between
40:10 - those two bubble objects what's the
40:14 - distance between these two bubble
40:15 - objects if it's less than the sum of
40:16 - their two radius radii then it's
40:20 - intersecting okay so let's run this you
40:24 - could do it bubble be together bubbles
40:27 - be together okay I'm just gonna have to
40:29 - we have to force it let's let's let's
40:33 - bring them a little bit closer
40:39 - ah there you go now move apart bubble so
40:43 - one thing I could do is like you're just
40:45 - a terrible idea I could just design like
40:49 - the bubble location to the mouse or
40:50 - something and that then I could move it
40:52 - and you would be able to see but the
40:53 - bubbles they're gonna move apart
40:54 - eventually come on apart move apart I
41:00 - think so you saw the background okay so
41:03 - you get that this works and ah there we
41:05 - go I got to be a little bit more
41:06 - thoughtful about the sort of
41:07 - intersection things now here's the thing
41:10 - I don't I don't like this at all I don't
41:13 - like this one bit because the idea here
41:16 - is eventually what if I have three
41:19 - bubbles or four bubbles or ten bubbles
41:21 - or a hundred bubbles I need some way
41:23 - that I really just want to say let me
41:26 - see where I have room here if any
41:29 - arbitrary bubble be one I'm gonna reduce
41:36 - this because I just in gross danger you
41:40 - know why I insist on like drawing so
41:43 - high up if any given bubble let's say B
41:52 - 1 dot intersects b2 I want to be able to
42:04 - write code like this I want to be able
42:07 - to encapsulate all the idea of this math
42:10 - into a function in the bubble object so
42:14 - bubbles no bubbles know how to
42:18 - communicate with each other how to test
42:20 - one bubbles location versus another
42:22 - publish location so if I come back over
42:24 - here what I mean is I want to say
42:26 - something like if bubble one dot
42:30 - intersects bubble to then do this okay
42:39 - so this is the idea because then I could
42:41 - start having a raise of things and loops
42:43 - and check every bubble and I and it's
42:45 - just going to be more convenient than
42:47 - having this math sort of out here where
42:49 - it doesn't really need to be so let
42:52 - take a look at how we might do this so
42:55 - what this means to me is I need to write
42:57 - a new function that's part of the bubble
43:00 - class called intersects so that's pretty
43:03 - easy I could just do that done that
43:08 - function by the way because of the way
43:11 - that I wrote it here inside this if
43:13 - statement the idea is that function is
43:15 - going to return true or return false so
43:20 - right now just to have this do something
43:22 - I could just say return true right here
43:24 - and the idea here is that okay well the
43:29 - intersects function is a function that's
43:31 - called on one bubble and receives as an
43:34 - argument another bubble so I need to
43:36 - give it an argument here and I can call
43:38 - that other for example so now if I
43:41 - comment out this math and I run this
43:45 - right it looks like it's working but of
43:48 - course if I move their locations away
43:50 - it's always drawing that pinkish
43:53 - background because my function always
43:57 - returns true so one thing you can kind
43:59 - of see from this is it's often worth
44:01 - kind of reading the skeleton of your
44:03 - code and then just like hard coding in
44:05 - true or false and see if it's working as
44:08 - false I don't see it true I do see it
44:13 - now I could actually go and fill in the
44:15 - math in that part so what I'm going to
44:17 - do is I'm gonna grab this math that I
44:19 - had before and I'm gonna bring it down
44:23 - here and things are gonna get a little
44:24 - bit easier I still want to calculate the
44:27 - distance but what do I want to calculate
44:29 - it between I want to calculate it
44:31 - between the bubble that I am right now
44:34 - what is the bubble that I am right now
44:36 - this this bubble with what the other
44:42 - bubble the other bubble that you have so
44:44 - generously passed in as an argument to
44:46 - my parameter named other other other and
44:52 - then if that distance is less than my
44:55 - radius and the other radius then and
44:58 - only then would I return true and I'm
45:01 - gonna don't worry I'm going to show you
45:02 - something that's gonna make this nicer
45:03 - in a minute because all of many of you
45:05 - are complaining right now the way
45:06 - I'm running this and we can see now now
45:09 - this bubble class has a function called
45:12 - intersects which can receive any other
45:15 - bubble and always check if the current
45:17 - bubble is intersecting the other bubble
45:19 - so here we go I'm gonna do this they're
45:23 - not interesting let's let's let's let's
45:25 - hack something to make things lay our
45:26 - life's little life a little easier
45:28 - instead of moving bubble - I'm just
45:30 - gonna say bubble - dot x equals Mouse X
45:34 - and bubble - dot y equals Mouse Y okay
45:38 - now of course I could write a function
45:39 - don't follow the mouse or set the mouse
45:41 - but I'm just gonna throw this in there
45:43 - really quickly so that I can do this and
45:45 - I go intersects doesn't intersect okay
45:51 - so now let's take a look at one thing
45:53 - which I want to change here which is
45:55 - that I am a weird strange person I
45:58 - really like the way I wrote this it just
46:01 - says it all I know I have an if
46:03 - statement and I know when it's true I
46:05 - want to return true and when it's false
46:07 - I want to return false and I've said all
46:10 - that and I said it in like five lines of
46:11 - code here but the truth of the matter is
46:13 - this is a statement distance is less
46:15 - than this dot R plus other dot R that
46:18 - whole statement evaluates to true or
46:19 - false when it evaluates to true and
46:21 - return true and evaluates to false I
46:23 - want to return false so this can
46:24 - actually be condensed into just whoops
46:29 - OH
46:30 - auto fill return the result of this
46:36 - boolean right I could just say is that
46:38 - return the truth of this statement true
46:41 - or false and this will in fact be the
46:44 - same exact result yay oh this is the end
46:47 - of this video so what have I done here
46:49 - what might you want to do now here's the
46:51 - thing a couple let me show you one other
46:53 - thing lets us ask a question I'm gonna
46:55 - ask a very important question here if I
46:58 - were to say if bubble two intersects
47:03 - bubble one have I changed anything
47:06 - program still works this is exactly the
47:09 - same program so in this case I am
47:12 - writing sort of a function you could
47:14 - maybe make the argument that you want
47:15 - like a bubble manager class and the
47:18 - bubble
47:18 - your class has an intersex function that
47:20 - takes two bubbles and you know so this
47:23 - is the point is there's always other
47:25 - ways to organize your code and you can
47:28 - you have to watch out for like over
47:29 - engineering your system but this is one
47:32 - way of doing it's a way that I kind of
47:33 - like to do it later you might see in
47:35 - other videos or tutorials that I make
47:36 - where I have instead of just all bubbles
47:38 - I have you know frogs and turtles and
47:40 - fish and kitty cats and maybe the frogs
47:42 - have to check their location relative to
47:44 - the kitty cats but the kitty cats have
47:45 - to check their location relatives as
47:47 - Turtles
47:47 - so having the different objects act on
47:50 - different kinds of objects is also
47:51 - something that comes up but what I would
47:54 - say what I'm gonna do in the next video
47:55 - is how do I go from this idea to
47:59 - suddenly having a system of like a
48:00 - hundred bubbles and I'm checking if
48:02 - every single one is intersecting any
48:04 - other one and what happens when we do
48:06 - that so I am going to do that in the
48:08 - next video you might actually just give
48:10 - that a try yourself but and then see how
48:13 - it goes and watch the next video okay
48:15 - thanks for watching I think it would be
48:26 - good to put an annotation with what you
48:28 - wrote Simon I'm not sure what that's
48:31 - referring to I'm looking at the chat are
48:33 - we doing the game of life today I hope
48:35 - so yes all right so I think I'm ready to
48:44 - move on I'm gonna just give myself a
48:46 - second to see if anybody has any
48:46 - questions they want to ask this is
48:52 - moving I think I could be done with the
48:54 - next two videos by four o'clock I still
48:58 - have a little bit of a cold game of life
49:02 - on a torus whoo-hoo that sounds cool
49:06 - that could be fun all right all right
49:15 - all right looking at the chat I do read
49:21 - the YouTube chat now annoyed and that's
49:23 - what I'm doing right now I usually can't
49:24 - follow all of it and I also have I also
49:31 - when you say Anna
49:32 - tation Simon do you mean you must mean
49:36 - do you mean code comment which which is
49:41 - but anyway and sorry I forgot the
49:46 - question who was it I have two chats
49:48 - going on I try to follow that flack one
49:50 - who's a small group for patreon backers
49:52 - but I also do look at the YouTube what
49:53 - do I get burned out yes alright so here
50:00 - we go so I think I'm just ready to move
50:03 - on then keep going oh annotation in the
50:10 - video what did I did I do something
50:15 - wrong
50:15 - I still understand what I did wrong
50:26 - would I make a mistake in this video I'm
50:29 - not sure all right
50:40 - I see Simon Tiger is typing no I wrote
50:45 - off the screen I know but it's not so
50:47 - bad you know you can mostly still see
50:52 - this right it's just a little bit cut
50:54 - off how bad could it be
50:55 - I'm the worst I just do that constantly
50:58 - this huge area to write with it and I
51:01 - can see over there on a monitor where
51:03 - I'm writing and yet somehow I do that
51:05 - anyway okay all right okay so baby you
51:15 - watch the previous video maybe you
51:17 - didn't I don't know you're here right
51:19 - now I'm here right now I'm going to
51:21 - erase this I think because what I want
51:23 - to do right now is look at wait a second
51:30 - what was in the previous video might be
51:31 - kind of relevant here so what was in the
51:35 - previous video is this idea of how do I
51:39 - have to bubble objects communicate with
51:41 - each other how do I know if they're say
51:43 - intersecting or not and that could
51:44 - obviously be more than just the sort of
51:46 - like overlapping this of the object let
51:48 - me just start over because because why
51:59 - not
52:05 - I'm a racing over here sorry anyway you
52:08 - guys can't see me
52:12 - [Applause]
52:30 - hello it is a bubble this in my previous
52:34 - video which you may or may not have
52:35 - watched I looked at how I could test if
52:37 - these two circles are overlapping it's
52:39 - not just about the math to look at if
52:41 - circles are overlapping well that's
52:43 - interesting of course the whole point of
52:45 - this was really to look at an
52:46 - object-oriented sort of technique for
52:49 - how I might write code that just checks
52:51 - if any bubble intersects any other
52:53 - bubble so I could say a bubble one
52:54 - intersects bubble two and if I had
52:56 - bubble four and bubble three or bubble
52:58 - cap bubble dog the so many possibilities
53:02 - but what I want to look at in this video
53:05 - is what if instead of two separate
53:10 - variables I have an array of bubbles
53:18 - maybe there are many of them some of
53:23 - which are overlapping some of which are
53:26 - not how do I check how do I check if
53:34 - let's say I call this bubble bubble egg
53:36 - b c d e f g h i j k l i just had to go
53:43 - through them all this bubble hey I have
53:44 - to check is bubble a intersecting BCD
53:47 - after yeah is bubble B I have to check
53:52 - if bobby is intersecting anything how do
53:53 - I check if every bubble is intersecting
53:57 - every other bubble oh okay let's look at
53:59 - that all right so what I'm going to do
54:03 - first is I'm just going to change this
54:07 - program to have an array of bubbles then
54:12 - what I'm going to do is I'm going to
54:13 - create maybe just ten bubbles to start
54:17 - with bubbles index I equals a new bubble
54:22 - and I'm gonna I'm gonna give them random
54:26 - locations and maybe a random size and
54:33 - I'm gonna have them kind of small ish
54:36 - and then I'm gonna make those bubble
54:38 - objects
54:39 - I'm gonna comment this out here and I'm
54:42 - now gonna say I'm gonna look at oh I
54:46 - don't know if I should do this in this
54:48 - video well I got to do this in a
54:49 - separate video I'm gonna make a separate
54:51 - video but you could go back and look up
54:52 - but there is a way a new way so this is
54:57 - a bad idea but I'm doing going through
54:58 - it anyway right normally I would write
55:00 - this code and I would just say bubbles
55:07 - index I thinking about this it's fine my
55:21 - videos are a mess it's fine that they're
55:22 - always a mess show bubbles I move so
55:30 - let's run this right now I'm gonna get
55:32 - rid of this boom so there we have all of
55:35 - my bubbles moving showing and moving
55:37 - showing moving I just want to say and I
55:39 - I will make another video about this
55:41 - specifically that I've been using this
55:43 - new loop that's also part of es6 version
55:46 - of JavaScript where I could just say 4b
55:48 - of bubbles b dot show b dot move so
55:54 - these are exactly the same thing let's
55:57 - just come how to do this ever video but
55:59 - tomorrow we're here while you're here
56:00 - with me maybe you don't want to click
56:01 - and watch it this is this idea that I
56:05 - can I want to iterate over every element
56:08 - of the array and every element of the
56:10 - array can be addressed by its index
56:12 - which is typically why I might have a
56:14 - counter like I to count through all the
56:16 - index values 0 1 2 3 4 5 6 7 8 9 but
56:19 - it's too common operation to do
56:22 - something to every element of an array
56:24 - and in fact there are lots of other ways
56:25 - to show you later that you can even do
56:27 - more with this that I can just make a
56:29 - variable be called B you know this could
56:32 - be anything cat of bubbles the point is
56:34 - this is every single this is saying for
56:39 - every element in bubbles put that
56:43 - element in this variable and then do
56:44 - some stuff and then go do the next one
56:45 - so you can see it's the same program the
56:49 - reason why I don't always use this is
56:50 - sometimes
56:51 - I want to only look at certain parts of
56:53 - the array I need the index value
56:55 - sometimes I need to move things around
56:56 - in the array delete them but in this
56:58 - case this is gonna make our life a
56:59 - little bit easier so I'm gonna go with
57:03 - it I'm going with it going with it
57:06 - whoo okay where am I still in this video
57:08 - so let's here we go now I have all of
57:13 - those bubbles how do I know to check if
57:18 - each one is intersecting every other one
57:20 - now here's the thing let's let's think
57:22 - about this
57:23 - I got let's pretend for a second that
57:26 - there's just one one important bubble
57:29 - which is a separate bubble so I'm gonna
57:31 - say something like let well I called it
57:40 - kitty no puppy unicorn rainbow unicorn
57:45 - there's a unicorn bubble and it's I'm
57:52 - going to put it in I'm gonna put it in
57:54 - the center of the window and I'm
58:00 - actually going to do a silly thing where
58:03 - I allow myself to just control it with
58:05 - the mouse let's make sure this works
58:10 - right weird that oh and I've got to also
58:12 - this is too what am I doing here lost my
58:14 - mind but I've got a show and move ah
58:18 - there's a point to what I'm doing it's
58:20 - going to make sense in a minute
58:21 - stay with me here so you could see look
58:24 - at this look at this bubble that I'm
58:26 - moving around there's one separate
58:28 - bubble that's outside of the array that
58:30 - I happen to be giving the mouse location
58:31 - so what if I want to check if this
58:35 - bubble is intersecting any other bubble
58:37 - let's take a look at that so I'm going
58:39 - to do this if unicorn dot intersects B
58:47 - this is now saying hey I want this
58:51 - special bubble unicorn to check if it's
58:54 - intersecting anything in that array
58:55 - anything in that array they just knocked
58:58 - this camera okay then if so in by the
59:01 - way what's convenient here is I have
59:04 - yes I already have this function change
59:07 - color which I used in a previous video
59:09 - so I can use repurpose that function
59:11 - change color so if it's intersecting
59:13 - that bubble to change its color so let's
59:17 - change its color to 100 otherwise change
59:21 - its color back to zero so what I'm doing
59:23 - is I'm saying if the unicorn intersects
59:25 - the bubble it's got a different
59:27 - brightness than if it does not intersect
59:28 - that particular bubble and look you can
59:32 - see cuz I should pick that brightness a
59:35 - little bit higher so you can see here
59:37 - right there we go
59:41 - so you can see this is working but this
59:44 - is different than me checking all of
59:46 - these bubbles against each other hmm
59:50 - how am I going to do that so what I need
59:54 - to do is right I actually don't want
59:57 - anything to do with this unicorn
59:58 - so let's comment this unicorn out but
60:01 - the unicorn served a purpose because it
60:04 - shows us right here that this is what I
60:07 - want to do for every B and bubbles show
60:10 - it move it and then check if it
60:12 - intersects and really a different way to
60:15 - write this that would have made more
60:16 - sense is this and what I want to do is
60:20 - say don't check just that unicorn check
60:24 - every other B every other bubble so what
60:28 - if I had another loop in here right
60:33 - there's another loop just look at this
60:34 - for a second right for every bubble show
60:38 - it and move it then go through all the
60:41 - bubbles again and check if that bubble
60:46 - is intersecting any of the other ones
60:49 - ooh it's tricky yeah I feel like I need
60:54 - to just pause and breathe for a second
60:55 - but this is new to you this is this idea
60:57 - of a nested loop and I feel like I want
61:00 - to go over to the diagram and I want to
61:02 - try to redo that diagram for a second I
61:04 - think I've lost which pen was the good
61:05 - one timeout for a second start this
61:12 - diagram over again
61:16 - we use these paper towels more you find
61:26 - the good marker which one was it so this
61:35 - one over here yeah okay or this one both
61:52 - of these are pretty bad actually but I'm
61:53 - gonna keep the second one let's try this
62:02 - again
62:03 - I'm just gonna have four bubbles a B C
62:09 - and D I want to check is a intersecting
62:15 - B C or D is be intersecting a C or D is
62:25 - C intersecting a B or D and is d
62:32 - intersecting a B or C here's the thing
62:36 - though even though this is what I want
62:37 - to check I just sort of intuitively did
62:39 - something here which is what I said is
62:42 - that I don't want to check if a as
62:43 - intersecting a but really what I want to
62:45 - do code wise is I want to do this I want
62:49 - to have a check off for then B check off
62:52 - for then C check off for the D check off
62:53 - for but I want to make sure I ignore
62:56 - when it's checking against itself and
62:59 - then of course we could optimize this
63:01 - even further which maybe I'll do at the
63:03 - end of this video right if a is checking
63:06 - B C and D B doesn't really need to check
63:08 - a again but that's only for this
63:10 - particular case there could be other
63:11 - instances where we want to check a
63:13 - versus B and B versus a and that means
63:15 - something different so let's come back
63:17 - over here and see what I mean here so
63:20 - first of all I want to make sure that B
63:24 - does not equal
63:28 - not equal other so what I want to do is
63:31 - like okay I want to check if B is
63:33 - intersecting every other bubble as long
63:35 - as B isn't checking itself so that the
63:39 - process actually isn't gonna work it's
63:41 - sort of gonna work but not gonna work
63:42 - now I'll explain you I think the logic
63:45 - here is quite sound in terms of the the
63:48 - two loops but the change color is a bit
63:51 - of a problem so let's run this and see
63:55 - like I'm not seeing anything change
63:57 - color why not well let me do something
64:00 - here let me at least let's comment out
64:02 - this this part so what I want is I'm
64:07 - only going to change color I'm never
64:10 - gonna change back so you can see what's
64:14 - gonna happen now is any two bubbles that
64:15 - intersect each other come on bubbles you
64:19 - can do it there we go they change color
64:22 - but as they separate they stay so this
64:25 - is an added layer of complexity that I
64:26 - probably should have anticipated what it
64:28 - started making this video and I no way I
64:31 - could stop here and there might be but
64:33 - since we're doing this I think we've got
64:35 - to solve this problem I'm here you're
64:37 - here you can go on do something else if
64:38 - you want to solve this problem how can I
64:40 - now have them turn off when they are
64:45 - when they are not intersecting so here's
64:47 - the thing what I want to do is I need to
64:53 - decide I can't decide whether I want to
64:56 - change the color to black or white right
65:00 - in here and why is that
65:01 - oops
65:09 - and why is that the reason is let's
65:14 - consider this case where a and C are
65:20 - overlapping and that loop what it's
65:24 - doing is it's saying is a intersecting
65:27 - sorry is a intersecting a well no don't
65:31 - change the color because they're equal
65:33 - is a intersecting B well no don't change
65:37 - the color because they're not
65:38 - intersecting is a intersecting C oh yeah
65:42 - change the color change the color
65:44 - they're intersecting okay well we're not
65:47 - finished yet is a intersecting D no no
65:51 - they're not
65:51 - change it back to black because that
65:53 - else doesn't know that the previous one
65:56 - was intersecting so this is an issue
65:58 - right so because I'm looping through
66:00 - with an else here if unless it's the
66:03 - last one I happen to check the hole that
66:06 - last one is gonna change it back to
66:07 - black so what I actually need to do is
66:08 - do this kind of trick and I'm sure
66:10 - there's a more elegant way of doing this
66:11 - but just for right now I can say I'm
66:14 - gonna just say let overlapping equals
66:20 - false so I'm gonna assume it's not
66:24 - overlapping anything I'm gonna assume
66:27 - it's not overlapping anything then I'm
66:29 - gonna check all of them and if it's
66:33 - overlapping at least one I'm gonna say
66:36 - true what's fun about this is I could
66:37 - actually like the more its overlapping I
66:39 - could add up a number or something I'm
66:40 - gonna check if it's overlapping at least
66:42 - one set overlapping equal to true once
66:44 - I've done checking everything now if I'm
66:48 - if I do get overlapping then I can say B
66:51 - change color 255 otherwise B change
66:56 - color zero so this is a little bit of a
66:59 - goofy piece of logic that's associated
67:01 - just with this particular scenario but
67:03 - it's still your the core idea here is
67:06 - that I have this nested loop I want to
67:09 - check this bubble every other bubble
67:11 - okay so let's run this again and you can
67:14 - see it let me make the bubbles let me
67:15 - make more of them
67:16 - let's make twenty of them and you can
67:21 - see that if it's intersecting any other
67:23 - it is it's lighting up if it's not it's
67:27 - it's it's that it's not lighting up so
67:31 - this is complete there are some things
67:35 - here to change and I'm gonna just talk
67:38 - them through for a second and then I'll
67:39 - decide if I'm gonna implement them so
67:42 - one is is there a way maybe it would
67:45 - make more sense for me to somehow I
67:49 - think it would make more sense for me I
67:53 - kind of want to do this for me to put
67:55 - this overlapping variable inside the
67:57 - bubble object itself why can't it keep
67:59 - track of that and it could keep track of
68:01 - that and based on it it could just call
68:03 - the show function with the appropriate
68:05 - the show function itself could set its
68:07 - color potentially so that way I get rid
68:10 - of all this extra gobbledygook code over
68:12 - here and I'm left still just with the B
68:15 - dot intersects other so that's one thing
68:18 - I could do the other thing that would be
68:19 - interesting to try is is to see if I
68:23 - could reduce the amount of checks right
68:25 - by just checking a versus B C D and then
68:29 - just B versus C and D C just versus D
68:32 - that's actually all I need and that
68:33 - could actually be it doesn't really
68:34 - matter in this case but I really should
68:38 - finish this video but so okay so those
68:40 - are two things I lose camera it off
68:53 - those are two things now I forgot what I
68:58 - was thinking those are two things oh
69:01 - yeah those are two things one of those
69:04 - things probably what I would really want
69:07 - to do and need to do is go back to
69:09 - having the index so as an exercise that
69:11 - you might like to try is rewrite this
69:13 - code with an I counter and a J counter
69:17 - but you'll notice is you can start the J
69:21 - you see if you try this right a lot of
69:24 - comments I should make another video to
69:25 - solve this and maybe I will but so that
69:28 - would be interesting to look at right
69:29 - you need to go get the counter because
69:31 - you can start if I is for all of the
69:34 - bubbles I'm checking I can start J
69:36 - wherever I left off the other thing
69:41 - that's kind of an issue here is the
69:43 - following let's go make let's make these
69:48 - bubbles really small and let's let's add
69:54 - 200 of them that looks like it's working
69:57 - let's add 2,000 of them okay
70:02 - it cannot even come close let's it's
70:05 - it's let's add a thousand of them let's
70:09 - just go back to that soap that was too
70:11 - extreme so you can see how slow this is
70:14 - now you might be thinking I was just
70:16 - slow to draw a thousand things which is
70:18 - true but let me show you something here
70:20 - what if I take out this whole thing
70:24 - about intersection it's got no problem
70:31 - animating a thousand bubbles the problem
70:33 - is in this algorithm if I have to check
70:38 - every bubble against every other bubble
70:42 - if there are three bubbles that's nine
70:49 - checks if there are ten bubbles that's
70:54 - 100 cycles 100 checks if there are 100
70:58 - bubbles
71:02 - 10,000 just doing my math there fours
71:04 - again look this went up by a factor of
71:07 - 10 but this went up by a factor of 100
71:09 - and with 1,000 bubbles suddenly I have
71:14 - to do 1 million checks so there are
71:17 - there are ways around this and there are
71:20 - algorithms for bidding or they have
71:23 - fancy beams and quad trees and someday
71:26 - I'll have a link in this video's
71:27 - description
71:28 - to some tutorials where I go over how to
71:29 - make this stuff more efficient but one
71:31 - of the things you really got to watch
71:32 - out for is this
71:34 - every object check every other object is
71:36 - an N squared problem as the number of
71:40 - bubbles increases the number of
71:42 - computation cycles increases by the
71:45 - number of bubbles squared so so this is
71:48 - something you really do have to watch
71:49 - out for this can get quite slow and
71:51 - again someday description maybe I'll
71:54 - have a link to something which shows
71:56 - that more efficiently all right I'm
71:57 - gonna stop I'm gonna be I'm gonna stop
71:59 - at the end of this video and if some of
72:02 - these little tidbits and things are kind
72:03 - of interesting and important I will do
72:05 - them in a follow-up video ok good bye
72:11 - alright my screen went off over here cuz
72:16 - I don't have to I need to power things
72:19 - oh ok um hold on sorry this computer
72:33 - that had the slack chat just died I'm
72:35 - gonna try to plug it in so people are
72:43 - asking an interesting question the chat
72:45 - which is like well can I just check if
72:48 - things are within a certain range from
72:50 - the bubble well how do you know if
72:53 - things are within a certain range of the
72:54 - bubble oh just check all the bubbles to
72:55 - see which ones are within that range
72:56 - well are you checking all the bubbles so
72:59 - there there's a way of being able to
73:01 - kind of register bubbles in different
73:02 - areas of the screen and then reducing
73:05 - the number of checks you need to do
73:06 - based on where they're pre registered so
73:08 - to speak sorry I'm kind of opening this
73:14 - computer back up oh the battery died on
73:15 - this compute
73:16 - Wow oh that bubble oh did I not do
73:26 - slette oh this is supposed to have let
73:29 - in it I'm so sad
73:33 - this should really have let I just kind
73:35 - of like forgot to put that in there I
73:41 - should really declare it
73:43 - oh yeah shoot alright um I don't know
73:54 - much just see if it's good like
73:55 - magically get spliced back into the
73:57 - middle of video somewhere or just right
73:59 - before the end I doubt it this computer
74:06 - is totally crashed I can't get the slack
74:08 - this is completely frozen sorry
74:13 - everybody
74:13 - just give me a second here
74:37 - sorry everybody I'm just kind of trying
74:40 - to get this other computer back up and
74:41 - running
74:46 - yeah
74:51 - today's JavaScript's 22nd birthday did
74:55 - not know that oh pretty stay ok old I'm
75:01 - just looking through this okay so how am
75:03 - I gonna fix this how am I gonna fix this
75:10 - okay so one option is oh maybe I could
75:14 - do the thing that I've always wanted to
75:15 - do well let us thank everybody just give
75:22 - me a second here this is ridiculous
75:26 - poor about you this is gonna be so
75:29 - entertaining let's just temporarily turn
75:37 - off that okay okay no no a better idea
75:52 - this is a terrible idea little
75:55 - behind-the-scenes moment here problem is
75:58 - I can't get the let we'll see we'll see
76:04 - let me just try this is probably not
76:05 - gonna work well you guys will be
76:06 - entertained nonetheless oh hello you're
76:11 - wondering why that video just stopped
76:12 - and I appeared again it's because I did
76:14 - forget something important and I'm gonna
76:16 - add it into the code but when I use this
76:18 - new loop with 4b of bubble I really
76:24 - forgot to declare be using let otherwise
76:27 - it kind of like JavaScript just speak
76:29 - which is again oh sorry sorry sorry I
76:40 - had to stop that video I made kind of a
76:42 - mistake that's sort of important when I
76:44 - use the new loop where I said let B of
76:46 - bubbles I forgot to declare no no four
76:49 - four four
76:53 - sorry everyone I just have to pause this
76:55 - video for a second and come in to
76:57 - correct a kind of mistake that's here
76:58 - when I use this new loop for B of
77:01 - bubbles I forgot to declare B and say
77:03 - for let B of bubbles that would really
77:06 - be much better and um hold on hold on
77:15 - hug setting setting settings what am I
77:35 - talking about right there
77:38 - should I say for let go back to here and
77:51 - but it's not actually in the original
77:53 - video I will add to the code when I
77:55 - upload it just so you know okay bye
77:57 - enjoy watching us in the video okay so
78:02 - yes that's one possible way to correct
78:07 - it one possible way record scratch yes I
78:18 - don't have a record scratch on I thought
78:19 - somebody sent me a breaking news sound
78:21 - effect but it was kind of like generic
78:23 - what I want is like coding training
78:27 - breaking news right now to do something
78:29 - like that
78:30 - anyway I really need someone to just
78:32 - like become the sound person for this I
78:34 - did more music I need better sound
78:37 - effects it's all awful but okay hold on
78:38 - we come back here and we give Mathieu a
78:41 - second option to correct
78:46 - how do I turn this back on there we go
78:48 - second option there's a weird jump cut
78:53 - in this video because I just coded this
78:55 - but I forgot something in poor wait hold
78:57 - on
79:02 - I'm gonna because this overlapping stuff
79:04 - is actually not in that part of the
79:05 - video so what I'm gonna do is there's a
79:17 - weird jump cut in this video because I
79:18 - just coated this new loop and I forgot
79:21 - something important which I really
79:23 - should use let to declare the variable
79:26 - that's going to stand in for all the
79:28 - elements of the array so that's a
79:29 - correction there it'll be in the code
79:30 - when I upload it but as you go back in
79:32 - the video you won't see it there that's
79:35 - another correction option and then I
79:40 - can't think of an F let me put it in and
79:43 - the other option will be just at the
79:45 - very end I'm still here
79:47 - shove it the video hasn't finished yet
79:49 - because all the while I did make kind of
79:51 - an important mistake which is that I in
79:54 - this loop here even which is other is a
79:57 - variable that's standing in for every
79:58 - element of the array that variable
80:00 - really needs to be declared using let so
80:02 - that it is local to the for loop
80:03 - otherwise I could run into problems okay
80:05 - so now I am actually at the end of this
80:07 - video unless I come up with another
80:08 - correction and I'll see you in a future
80:10 - one ah
80:12 - I'm forgetting the outer loop wait don't
80:16 - go is also heated here oh the whole time
80:20 - I've been doing this with the outer loop
80:23 - that's what a terrible yeah I finally
80:32 - saw that another quick option is TG hi
80:36 - oh my god I can't go back and redo all
80:39 - those Corrections I'll just do one for
80:41 - the end that's probably what we're gonna
80:43 - end up another day I'll use my crazy
80:45 - record scratch I stop and re-enter the
80:47 - video but let me just do one at the end
80:53 - okay this video there's not over because
80:57 - I have noticed some pretty fundamental
80:59 - mistake here worth in both of these
81:01 - loops right for B of bubbles where B as
81:04 - a variable that stands in for every
81:06 - bubble in the array just like if I'm
81:08 - gonna say for let I equals zero I is
81:13 - less than bubbles dot length
81:16 - if I'm doing a loop like this I really
81:18 - need to declare that variable B
81:19 - otherwise it could be it could mistakes
81:24 - bad things could happen so I should have
81:25 - let B here and then of course I'm doing
81:27 - this again he or I should say let let
81:29 - other of bubbles there so hopefully you
81:31 - didn't spend too much time screaming at
81:32 - your viewing device while you're
81:36 - watching the video and there it is at
81:38 - the end here okay thanks very much all
81:44 - right all right so I'm doing a bad job
81:52 - of saving these as separate versions oh
81:57 - well you just let me try something I'm
82:00 - gonna do a copy-paste and don't
82:04 - everybody start telling me that I should
82:06 - be using git and github I'm not gonna
82:08 - commit all my changes live tutorial
82:11 - settings I use those tools for myself
82:13 - but what I'm gonna do right now is I'm
82:15 - going to undo this all the way back to
82:21 - what it was at the end of the first
82:23 - video whoa maybe it doesn't go back that
82:31 - far
82:32 - oh yeah it does yeah look at this it's
82:39 - like everything I just did in Reverse
82:41 - okay so I think this is it now whoops
82:46 - what happened to my browser
82:55 - but well one is not too fine a couple
82:58 - more changes but I will just oh shoot
83:10 - so this is now the end of the first
83:12 - video okay and now what I'm going to do
83:15 - oops
83:16 - now I just need to save this code so
83:18 - when I get uploaded later desktop post
83:23 - seven on this it's very low I'm gonna do
83:33 - come on copy this thing copy then this
83:38 - will be seven point seven
83:42 - come on seven point seven and then I'm
83:52 - gonna go grab this code can put it in
83:55 - sketched yes for seven point seven so
83:58 - now I should have seven point six is
84:00 - this example and seven point seven oops
84:06 - that's not where I wanted to leave it I
84:09 - should fix that now what do I want I
84:13 - want
84:14 - like 50 of these 10 50 or maybe 20 of
84:17 - these there we go
84:21 - okay so that's where I'm gonna leave it
84:22 - okay so those things are done now guess
84:24 - what everybody happy times are ahead
84:32 - okay I'm looking at the chat oh I should
84:37 - do let me do that video right now
84:39 - where's that going to go so this is
84:42 - going to get inserted in oh the
84:48 - numbering is gonna have to change is
84:49 - that bad if I'm going to actually do a
84:51 - video where I explain that other loop
84:55 - that would have to go
85:03 - that would have to go this would have to
85:13 - go what is an array arrays and loops
85:21 - arrays of objects I guess I could put it
85:24 - here oh boy that would renumber I mean
85:27 - this is a big deal to renumber all these
85:28 - things I could also make it like 7.3 B
85:37 - 7.3 B what happens in this video yeah
85:44 - let's look at the code for that one 7.3
85:49 - arrays of objects right this would make
85:52 - sense for me to just do that right here
85:54 - I probably shouldn't have done it in
85:59 - that other okay let's let's let's call
86:01 - this 7.3 B what is this called by the
86:04 - way
86:05 - ah come back computer like in Java when
86:11 - this new kind of this new kind of loop
86:16 - came out in Java is called the enhanced
86:17 - for-loop so let me see if I could find
86:19 - it
86:20 - JavaScript of loop for of okay so it's
86:28 - called the for of loop for a variable of
86:32 - iterable okay yeah
86:35 - we're gonna do this is like seven point
86:36 - three point one or seven point B or
86:38 - whatever this is gonna be one of my
86:39 - record short videos I could just see the
86:45 - money falling from the sky would I make
86:47 - lots of one-minute videos that everybody
86:48 - watches dying it's really not gonna
86:50 - happen
86:50 - it's a nice idea that okay I could also
86:53 - do it before I even get to the objects
86:56 - but I'm gonna let's do it let's do it
86:58 - here okay
87:07 - would be coming from the phone we go
87:17 - back 7.3 hold on I really a drives me
87:25 - crazy get rid of the sound library I'm
87:34 - here to tell you about something that's
87:35 - kind of exciting that I really should
87:36 - have known about when I made this video
87:38 - but it's new to me and it's now gonna be
87:40 - new to you or maybe you know about
87:41 - already but I'm gonna show you this new
87:44 - loop in java script called for of so
87:47 - that's what I'm gonna call it for of so
87:49 - very very often the previous example
87:52 - that I just made right this happens all
87:54 - the time all the time in programming hey
87:56 - I'm kind of an array of things
87:58 - let me count through the whole array to
88:00 - act on everything in the array and this
88:02 - can happen with arrays of objects like I
88:05 - want to move and show all these objects
88:07 - it could happen with arrays of numbers
88:08 - like ah let me double all the numbers in
88:10 - this array or let me add up all the
88:11 - numbers in this array and there's
88:12 - actually other ways of doing that too
88:14 - that I'm going to get to in other videos
88:15 - but what I want to show you here is the
88:17 - for of loop so really what this is
88:20 - saying here is for every bubble in the
88:25 - bubbles array the problem is I think in
88:27 - already meant something else in
88:29 - JavaScript or each always meet some
88:31 - there is a for each thing so so I'm
88:34 - speculating here but I imagine the the
88:37 - when this feature came into JavaScript
88:39 - we the developers needed a word to pick
88:41 - and that word is of so what I'm actually
88:43 - going to say it's like this bubbles
88:45 - index I stands in for every element of
88:48 - the array bubbles so I can actually do
88:51 - the exact same loop by saying for let
88:55 - every bubble of bubbles and then bubble
89:00 - dot move whoops not bubbles and bubble
89:05 - show now one thing so this is what I
89:08 - want to emphasize here these are exactly
89:11 - and I'm gonna step to the side here
89:12 - these are exactly the same
89:14 - no it must look perfect on the screen
89:17 - right this is me counting with an index
89:20 - to address every element to the array
89:22 - and moving and showing them this is me
89:25 - just saying hey JavaScript I don't feel
89:27 - like counting today could you take care
89:28 - of this for me
89:29 - just give me every single bubble in
89:31 - order in the array bubbles and move and
89:34 - show them I'm gonna do things in later
89:36 - videos where I start deleting things out
89:38 - of the array or maybe I only want to use
89:39 - half the array then those are cases
89:42 - where I really need that counter there
89:44 - are often cases where the counter plays
89:45 - a role but if the counter doesn't play a
89:47 - role they just want to do something to
89:49 - every element this is what I could do
89:50 - now what I don't love about this and
89:52 - this is I do this all the time and lots
89:53 - of programmers do this is I have a class
89:56 - called bubble that's capital B down here
90:00 - I have an array called bubbles lowercase
90:03 - B with an S on the end plural because as
90:06 - many and then I have bubble which is
90:08 - like an individual bubble in the that's
90:10 - every bubble of the array so I just want
90:12 - to emphasize that this could just be
90:13 - called you know if the bubbles names
90:15 - were unicorn
90:18 - this is just a made-up variable name it
90:21 - is the word that stands in for every
90:23 - element of the array and so like I could
90:25 - say let element of bubbles for example
90:28 - you know and so but this is kind of a
90:30 - convention that I could adopt the class
90:33 - the type of thing is capital B bubble
90:35 - when I have an array of that I'm gonna
90:37 - call it bubbles with an S when I have an
90:39 - individual one I'm gonna call it bubble
90:40 - but there's no reason why you have to
90:42 - call things that way I could call this
90:44 - bubble class single bubble bubble array
90:47 - that kind of thing so that's really it
90:49 - I'm gonna use this I'm gonna use this
90:53 - kind of loop in other videos and then I
90:55 - guess I can reference back to this one
90:56 - when I do
90:57 - hopefully this made sense I'm looking
91:00 - around to see if anybody has any
91:02 - questions but you are in the future I
91:04 - don't even know who you are watching
91:05 - this video but you are there someday
91:07 - watching this video I'm probably not
91:09 - standing here anymore I'm somewhere else
91:11 - this video has ended
91:16 - for each yeah I don't like the for each
91:19 - I don't know why I don't like the for
91:20 - each I have a problem with for each
91:27 - everybody knows about my fear for each
91:31 - okay I don't think to be honest I don't
91:42 - think this video needs a code example
91:45 - please stop using semicolons no never
91:49 - stop using semicolons
91:50 - oh I'm even an add arbitrary extra
91:53 - semicolons for no reason okay
91:58 - so let's get out of here and I've got
92:06 - one more of these objects videos to do
92:13 - Wow everybody is using this Thank You
92:17 - Nolan using the AI from what's the
92:20 - YouTube thing that it has that's like
92:22 - the chatroom tip jars very kind of you
92:25 - all thank you I know you want to see the
92:27 - boys cry it's kind of work it on me but
92:33 - alright for each isn't so bad with arrow
92:37 - functions oh you're so true super chat
92:40 - thank you
92:41 - so my purse I don't know I don't have a
92:43 - preferred way I guess I'm gonna leave
92:45 - the super chat thing enabled it is a way
92:47 - that people can make a one-time donation
92:49 - if you're feeling so inclined I also do
92:52 - have a patreon I have been considering
92:54 - looking at some other platforms actually
92:56 - but I don't want to get into that right
92:57 - now okay so here we go now what I need
93:03 - are I need what I need is a small
93:06 - collection of public domain or creative
93:10 - common license licensed images ideally
93:15 - with transparent backgrounds like a
93:18 - bunch of flowers a bunch of kitty cats
93:20 - where can I find that
93:29 - where can I find that how many people
93:31 - are watching by the way I haven't
93:32 - checked that in a while these days
93:36 - though I can't see it doesn't show me on
93:38 - this page I am I not signed in here
93:53 - okay thank you sorry I didn't have my
93:57 - YouTube dashboard page up where it tells
94:00 - me how many people are watching and that
94:02 - sort of thing
94:07 - ah the meth you got the meth meth method
94:11 - channel that those are great videos yes
94:18 - yeah oh yeah sorry I lost my train of
94:22 - thought
94:23 - [Laughter]
94:28 - alright
94:30 - I think the for each loop is perhaps a
94:33 - bit more powerful in that you're
94:35 - actually having essentially a callback
94:37 - function for every element whereas the
94:39 - four of is just a way of addressing each
94:41 - element so you know I think for what I'm
94:43 - doing here
94:44 - this is much more readable than for each
94:48 - but maybe I'm also just not so I guess
94:51 - the for each way would be for each no no
94:56 - no bubbles for each and then I could say
95:00 - be something like but like something
95:08 - like that would be for each but I'm just
95:10 - kind of a more of a fan of this okay
95:17 - I'm not ready to get into that yet
95:23 - alright let me see Oh both those bubbles
95:27 - alright okay so I need some images
95:28 - anybody got images for me
95:34 - alright images let's see what did I use
95:42 - in olden times I deleted those so what
95:52 - did I use back in the previous tutorials
95:57 - p5.js if I go to seven we needed the
96:01 - objects and images oh I just used these
96:05 - flowers
96:07 - oh so where did I get them from I could
96:11 - just use these again so people are
96:20 - asking about so you can actually
96:21 - contribute subtitles via YouTube if you
96:24 - want and I'm very grateful that people
96:26 - sometimes take the time to do that
96:28 - it's my goal to have all the videos
96:31 - captioned to make them more accessible
96:33 - not to mention translate into other
96:35 - languages if that's possible
96:36 - alright what about your kittens from the
96:39 - browser extension video thank you good
96:42 - idea so let me go to Chrome extra--
96:53 - extensions kittens kittens alright we're
96:59 - going to gonna get some kittens here Oh
97:02 - everybody bear with me for a second so
97:05 - now I need to go back to oh seven and we
97:09 - make kittens Pam let's let's let's get
97:15 - the essence of these kittens boiled down
97:19 - just sighs I would have liked to have
97:23 - some transparent let's just do it like
97:26 - 100 there's a kitten
97:30 - [Music]
97:36 - there's a kitten another one
97:55 - and here's another one
98:13 - and oh they're not gonna be circles
98:15 - anymore that's fine whoops there's
98:23 - another kitten whoops
98:32 - I've got some extra unused unnecessary
98:36 - pixels there and just sighs whoops whoa
98:42 - did I just make that a hundred inches or
98:44 - something yeah whoops sorry you know the
98:50 - camera just went off okay
98:58 - [Music]
99:00 - now kitten one whoops
99:06 - kitten zero kitten one kitten - getting
99:17 - three kitten before okay so now I have a
99:25 - bunch of kittens maybe I'll just start
99:28 - from mmm trying to think here what makes
99:38 - the most sense maybe I will go back to
99:43 - Mouse interaction with objects arrays of
99:49 - objects mmm what's going to be the best
99:56 - one to turn into oh yeah let's do this
100:03 - one okay so let's do a mouse interaction
100:08 - with objects and this one's going to be
100:12 - us this one's going to be seven point
100:17 - eight images
100:25 - okay let me just look briefly what did I
100:29 - do in the previous tutorial video that
100:32 - was there this one is because I loaded
101:09 - them all right
101:10 - did I use preload here yeah okay all
101:14 - right I got it everybody don't worry
101:16 - everybody
101:19 - everything's going to be just fine
101:22 - images and images let's get rid of the
101:33 - sound library kittens and now I need to
101:38 - put in the kittens folder inside here
101:42 - okay all right
101:54 - so one thing I want to do is try to
102:01 - decide whoa
102:06 - Pete image in the slacker just gave me a
102:09 - great category flowers with transparent
102:13 - background hours with transparent
102:18 - background do I dare move away from the
102:21 - kittens all these were such nice flowers
102:32 - with transparent background
102:34 - what about kittens with transparent
102:36 - background kittens with transparent
102:41 - background I don't know do I need to
102:47 - strawpoll the kittens versus the flowers
102:49 - this is definitely a really important
102:52 - good use of our time don't you think I'm
102:57 - gonna stick with the kittens because I
102:58 - have them already and I will mention I
103:00 - will grab let flowers oh it just got a
103:08 - little dizzy there let's grab one of
103:12 - these I like this cactus flower image
103:16 - and flower dot PNG no no no no not the
103:27 - webpage silly goose save image flower
103:32 - dot PNG
103:35 - [Music]
103:40 - and
103:55 - I'm gonna start them all as flowers and
103:58 - when you click on them they turn into
104:00 - kittens hasn't how to get to be 4:15
104:07 - already I just don't get half an hour
104:09 - organizing directories of images of
104:11 - kittens and flowers I'm very sorry
104:15 - it's time I think to take out sponsor
104:17 - break as you know coding train is
104:21 - sponsored by water if you don't drink it
104:31 - you might die something like that okay
104:46 - mmm don't chew this
104:53 - okay
104:55 - oh I can do it I can write this code in
105:09 - a way that will make sense to people and
105:11 - be useful to somebody someday in this
105:13 - world hello I think at this point until
105:17 - I make some more this is the last video
105:20 - in this section about arrays of objects
105:23 - and one of the things that comes up a
105:25 - lot especially when you're first
105:27 - learning to code is with p5 and doing
105:31 - graphics animations and everything I've
105:32 - been doing pretty much in all of these
105:34 - videos has just been with shapes and so
105:36 - as you can see here here is one of the
105:38 - examples arrays of objects where when I
105:41 - click on the click on them they change
105:43 - color this is one of my previous videos
105:45 - but I want to look at is what would it
105:48 - take to have each one of these circles
105:51 - each one these objects display instead
105:55 - of a shape an image a JPEG or a PNG that
105:59 - I load a file that I load and how could
106:02 - I have the same object so how can I make
106:04 - a bubble class where each bubble
106:06 - displays an image but each bubble
106:09 - displays a different image so the first
106:11 - thing I'm going to do is just change all
106:13 - of these into flowers okay so I have a
106:15 - directory app I have a directory of
106:17 - images associated with this project I'm
106:20 - going to go over to my code and it looks
106:22 - like this it has a bunt it has one image
106:26 - in it called flower dot PNG and has a
106:28 - bunch of other image is called kitten
106:29 - jpg the reason why I'm making this
106:31 - distinction is PNG as a format for
106:33 - images that allows for transparent
106:35 - pixels and that's something that you're
106:37 - probably going to find very useful when
106:39 - designing and using images in your code
106:40 - that you can have an image not just be
106:43 - that sort of like rectangular thing but
106:45 - rather have part of the image be
106:47 - transparent so okay so let's first I'm
106:50 - going to one of the things if I want to
106:53 - load an image into p5 there are a
106:56 - variety of ways to do it and I'm sure I
106:57 - have other videos in the future even
106:59 - though I'm in the future but I made in
107:01 - the past but are further ahead in this
107:02 - playlist where I look at this more
107:05 - specifically but a quick way to load me
107:08 - yeah it seems a little bit silly like oh
107:10 - there's a preload function set up is the
107:13 - function where all the code at the
107:15 - beginning runs well I want to load
107:17 - images at the beginning to use I should
107:19 - use those in setup but there's a funny
107:20 - way about JavaScript the way that it
107:22 - loads media files in large data files is
107:25 - that it those it could take a while for
107:30 - those things to load so the preload
107:32 - function is a way of saying I'm gonna
107:34 - have a variable I'm gonna call it flour
107:36 - and in preload I'm gonna say flour
107:39 - equals load image flour dot PNG and this
107:46 - could be double quotes or single quotes
107:47 - they mean the same thing I'm kind of
107:49 - like I like single quotes these days so
107:51 - this right here is saying hey I know
107:54 - you're about to set up a p5 sketch
107:56 - before you do that I want to have a pre
107:58 - setup to the setup where I want to load
108:00 - this image so this will guarantee that
108:02 - the flower image is ready to be used by
108:04 - the time you get to setup now the rest
108:07 - of our work is really as simple as if I
108:09 - have this image that data from that PNG
108:12 - file stored in this variable flower I
108:14 - can just go all the way down to my
108:16 - bubble object and look here this is
108:18 - where I draw the draw the bubble as a
108:21 - circle so I could just get rid of all of
108:23 - this code and I could just change and
108:25 - use this function called image so
108:27 - there's a function in p5 called image
108:29 - which says hey I want to draw an image
108:31 - to the screen just like I want to draw
108:33 - an ellipse at this dot X this dot y now
108:35 - I want to draw an image at this dot X
108:38 - this dot Y so now all I've done is load
108:42 - that image and preload in a global
108:44 - variable and then draw that image here
108:46 - in the show function so let's refresh
108:49 - and okay so what does this error file
108:54 - not found
108:55 - I forgot that I put the images in this
109:00 - directory called kittens so I need to
109:02 - make sure I reference that directory now
109:03 - note I also need this directory to be
109:06 - part of the same directory where my
109:08 - index of HTML and sketch a stuff is so
109:10 - there can be some nuance here in to
109:12 - where you store your your image files
109:14 - but in this case I just need to make
109:17 - sure I include the folder name kittens /
109:20 - flower dot PNG
109:22 - and now if I do this we can see look
109:24 - there my bubbles aren't flowers now
109:28 - there aren't different sizes and so if I
109:31 - wanted to I could you know kind of go a
109:33 - little farther with this and I could use
109:35 - this variable R and I could give make
109:38 - that the width and height of the image
109:42 - so one thing to realize here I'm looking
109:44 - over there to see if I can use my
109:44 - whiteboard which I'm about to but I have
109:46 - to go erase it first hello
110:04 - talk amongst yourselves well I'm so
110:13 - happy to be done with this the problem
110:15 - with this is the next time I'm going to
110:18 - use this for my courses although you
110:19 - know ok it's ok such as this Sisyphean
110:30 - task of teaching JavaScript where's the
110:35 - marker hmm where's the one good marker
110:39 - maybe this is it
110:46 - so when I drew a circle when I use the
110:51 - ellipse function and I I have this
110:54 - variable called this dot R I actually
110:56 - assign that it's a poorly named because
110:58 - it's it's assigned to the diameter of
111:01 - the circle a rectangle or a square which
111:05 - is a rectangle of equal sides if I have
111:09 - the X Y here this is its width and this
111:11 - is its height the reason why I'm
111:13 - bringing this up is because the image
111:15 - function I switched from ellipse to
111:18 - image but it would be almost a better
111:20 - example if I were switching from
111:22 - rectangle which requires an X a Y a
111:25 - width and height if I were switching
111:27 - from rectangle to image which also
111:29 - requires an X a Y a width and height the
111:32 - only difference is fill that rectangle
111:35 - with
111:35 - pixels from some actual image like
111:38 - flower so this is really what's going on
111:40 - so I can manipulate the size and that
111:42 - sort of thing I'm not gonna worry about
111:43 - that too much
111:45 - and I'm just going to leave it I'm gonna
111:48 - just simplify this example but let's
111:51 - just show it to you with our in there
111:52 - you can see now they're all different
111:53 - sizes I'll leave that in there why not
111:55 - okay all right so now what if what I
112:01 - want to do is click on these and have
112:03 - them change transform from a beautiful
112:07 - flower to a butterfly because we all
112:10 - know butter flowers transfer okay I have
112:14 - kids too a kitten I have her kittens so
112:18 - okay so I do have this clicked function
112:21 - changes the brightness let's just first
112:22 - make this work I think is actually
112:27 - complicated time out let's put some
112:30 - kittens okay I gotta keep going this is
112:35 - fine let's back up a second and what I
112:39 - want to do now is I want to instead of
112:44 - having each image be that each bubble
112:47 - object be the same image I want to pick
112:51 - an image of a kitten so I'm now going to
112:53 - add an array called kittens and what I'm
112:57 - gonna do is in preload I'm gonna say
112:59 - kittens index 0 equals load image
113:04 - kittens kittens 0 dot jpg so you can see
113:10 - here right I could do this right I got
113:12 - it
113:13 - and I had five of them so here's the
113:14 - thing this is pretty horrible what I
113:17 - want to be able to do is then if I have
113:19 - a whole bunch of images and they're
113:21 - named in some consistent way what I
113:23 - actually want to do is could I write a
113:25 - loop to load all of these so instead of
113:27 - having three images loaded into an array
113:30 - 0 1 & 2 could I write a loop and one
113:33 - thing that's interesting is I can do
113:35 - this very easily with something called
113:37 - string concatenation thanks excuse to
113:39 - bring that up in here
113:40 - so as you might know two plus two equals
113:44 - four however
113:47 - a plus B equals the string a B or Cao
113:54 - plus Bell equals cowbell so when you use
114:01 - the plus operator with text it joins the
114:04 - text rather than the plus operator with
114:06 - numbers adding the numbers and the
114:08 - reason why this is so useful is what I
114:11 - can do here is I can write a loop for
114:14 - let I equals zero I is less than how
114:17 - many kitten images do I have I think I
114:20 - had five I can see them here 0 1 2 3 4
114:24 - at 5 5 I plus plus then I can just take
114:29 - this line of code put it here I can say
114:30 - kittens index I equals load image kitten
114:37 - now I don't want to load the zero kitten
114:39 - into each one well I could do that now
114:40 - for just testing but I'm gonna keep
114:42 - moving on I want to load this plus oh
114:45 - and there's a new way to do this there's
114:47 - a new way to do this in es6 I'll come
114:49 - back to that the end of this video if
114:51 - you're interested now this is a bold way
114:53 - that I can add the I in between I can
114:56 - say take this string kitten / kitten
114:58 - join it with the value of I which is 0 1
115:01 - 2 3 4 and then add dot jpg to the end
115:03 - and that will load all of those image
115:06 - files into kittens now let's just make
115:10 - sure this works by going down here and
115:12 - saying something like kittens index 0
115:17 - that's kitten 0 let's take a look at
115:22 - kittens index 3 that's kittens index 3
115:29 - okay so now how do I have each object
115:33 - have a reference to a different kitten
115:36 - very important so one thing that I think
115:39 - that I want to have I'm gonna get rid of
115:40 - this brightness thing this brightness
115:42 - was from a previous example what I want
115:45 - to do is have an image associated with
115:47 - each bubble object so why not say this
115:50 - dot image equals or this kitten equals
115:55 - what image so when I make a bubble I
115:58 - want to say I
116:00 - want a bubble to be at this X location
116:02 - and this Y location with this size and I
116:06 - wanted to use this particular image so
116:08 - what that means is I need to now up here
116:12 - I need to pick one of these images now
116:16 - the let's say I want to pick a random
116:18 - one the nice thing is if you have an
116:20 - array in p5 I can just say kitten equals
116:26 - random kittens this random function if I
116:30 - give the random function in an array it
116:32 - will pull out a random element from that
116:34 - array which is one of those random
116:35 - kitten images and put it in this
116:37 - variable and then I can pass that in so
116:42 - this is me picking a random image then
116:45 - passing it into the object and then the
116:48 - object receiving it and putting it in as
116:51 - a property and then what's the last step
116:54 - I need to make sure I draw that
116:56 - particular kitten image all right let's
116:59 - see what we got here
117:00 - yay look lots of random can now it's
117:04 - hard to see them because they're so
117:05 - small so let's make these kittens bigger
117:12 - there we go so you can see ya have a
117:15 - bunch of getting objects I could I'd do
117:17 - the thing where I click and I add new
117:19 - ones or I delete them but let's have all
117:21 - these kittens every time I click change
117:24 - to a new kitten so we already had this
117:31 - hole clicked function and I'm saying if
117:35 - D is less than this dot R why not just
117:40 - say this image this dot kitten is a new
117:45 - random kitten so we could see I could
117:49 - always at any moment pick a new image to
117:51 - store into that bubble objects image
117:53 - variable and so now oh and this is bad
117:56 - though this did this is for checking
117:59 - that funks that that is math that I had
118:02 - left over from before is checking to see
118:05 - if the mouse clicks inside of a circle
118:08 - and since the image is actually a wreck
118:14 - why don't we make those flew back to
118:17 - flowers because the nice thing about the
118:19 - flower is it was kind of like circular
118:21 - thing inside whatever but I could change
118:23 - this code I could change this code to
118:26 - say if P X is greater than this dot X
118:35 - and P X is less than this dot X plus
118:40 - this dot R and P Y is greater than this
118:44 - dot Y and P Y is less than this dot y
118:49 - plus this dot R right what is all this
118:52 - crazy mumbo-jumbo that I just put in
118:54 - there what I'm at what I'm trying to do
118:57 - is I'm trying to say hey there's a point
118:59 - it's clicked is it in between this X
119:03 - well you can't see that this X and this
119:06 - is this location is X plus R and the Y
119:10 - is between this Y and this location is y
119:12 - plus R so I'm checking to see if the X
119:15 - and y the of the mouse is within those
119:16 - boundaries and once I've done that we
119:21 - should yeah look I could just keep
119:26 - making different kittens yay it's not a
119:32 - square it is a square it is a square
119:34 - it's not a square I don't know um so
119:36 - I've got something goofy here where I'm
119:38 - just you could clean this up and try
119:40 - different ways and what if I make it a
119:41 - flower and there's a circle better to
119:43 - check maybe I could just change it when
119:45 - I click to flower so these kittens are
119:50 - changing into flowers when I click on
119:52 - them and then if I click on them again
119:54 - oh they still are a flower so you can
119:55 - see the range of possibilities you could
119:57 - also make the argument here that maybe
120:00 - this whole picking the random kitten
120:02 - here and passing it in was kind of
120:04 - unnecessary because what I could have
120:06 - just done is right down in here I could
120:09 - have just picked the random the random
120:12 - thing in the constructor and that's also
120:14 - the same thing so there's lots of
120:16 - different ways of organizing the code
120:17 - depending on what you're trying to doing
120:19 - generally speaking I don't love the fact
120:21 - that I'm using flower here or
120:24 - kittens here because these are variables
120:25 - that exist outside the scope of the
120:27 - class and the class if it's gonna know
120:29 - about things outside of its scope should
120:31 - probably receive them as parameters to a
120:33 - function but that's neither here an
120:35 - error it's worked and is everybody
120:41 - asleep now thanks for thanks for
120:44 - watching this video and this is that's
120:48 - it now you can make all of your objects
120:50 - and all of your things that you're doing
120:51 - images okay everybody I think I've done
121:03 - it I have suffered through you have
121:05 - suffered through me finishing these
121:08 - intro to object-oriented programming
121:10 - with classes in p5 and those videos will
121:13 - hopefully serve help people in the
121:16 - future as they go through the playlist
121:17 - and get get more get more used to stuff
121:23 - ok so I want to make sure I do a coding
121:33 - challenge I think what we'll do I still
121:40 - have a little bit of a cold leftover
121:42 - hopefully that didn't blow out your ears
121:48 - oh the others who I forgot I forgot
121:52 - about that
121:53 - ok hold on there's gonna be an addendum
121:57 - does anybody tell me what that's called
121:59 - the Newton what it's like the way that
122:02 - you in es6 you use the back tick to
122:06 - concatenate a string I forget what it's
122:12 - called back tick JavaScript string so I
122:20 - have a name template literals why is it
122:26 - called up embedded expressions yeah yeah
122:29 - ok
122:33 - okay wait there's a bonus here at the
122:38 - end of this video and I'm looking around
122:40 - as if someone's gonna catch me
122:42 - I forgot I should probably make a video
122:44 - just about this but while we're here
122:46 - there's also a new way look at this and
122:48 - I was told by the way it's just given
122:50 - some nice advice about I shouldn't
122:52 - really be using the word join because
122:53 - that's kind of used another but this is
122:55 - string concatenation kitten slash kitten
122:58 - + concatenate with the value of AI +
123:01 - concatenate with JPEG but there's a new
123:04 - way to create strings from actual
123:08 - characters and variables in JavaScript
123:11 - and it's something called template
123:13 - literals and this is in lots of other
123:14 - languages but this is a new way to do it
123:15 - in JavaScript and it involves the use of
123:17 - the back tick so I put back tick here
123:21 - and back tick here get rid of this get
123:24 - rid of this now I don't want the pluses
123:27 - anymore so this this is just like a
123:31 - string it's a literal string literal
123:34 - this is a literal string kitten / kitten
123:36 - dot jpg but if I want to use a variable
123:39 - in there and why we're calling this a
123:40 - template literal I can put a variable in
123:43 - there with curly brackets and dollar
123:46 - sign and then the name of that variable
123:48 - hopefully I'm getting this right so this
123:50 - is a way of saying hey I want to have
123:52 - this string instead of having to use
123:54 - plus for joining the next thing about
123:56 - this I'm pretty sure it lets you do this
123:57 - over multiple lines too which is really
123:59 - really nice because with regular quotes
124:01 - you can't have multiple lines line
124:03 - breaks so this should work exactly the
124:05 - same way template literal ah so close
124:15 - what did I get wrong oh right thank you
124:26 - I made a mistake
124:28 - cuz by the way I don't actually know
124:30 - what I'm doing at all it looks like this
124:32 - the dollar sign I knew it will shoot a
124:35 - syntax highlighted that in some way the
124:37 - dollar sign is an indication like hold
124:39 - on a second I'm going to use a template
124:42 - literal and so now it's saying what's
124:44 - inside of here is
124:46 - variable name and we can see the syntax
124:47 - highlighting fixed which is good there
124:50 - we go now this is working and it's the
124:52 - same exact program
124:53 - I should mention well what if I really
124:55 - wanted to have so one thing if I just
125:00 - had like dollar sign in the string it's
125:02 - not going to think it's part of this
125:04 - unless the curly brackets are there and
125:06 - so if I really wanted it to be this I
125:08 - could probably like use an escape
125:10 - sequence or something but it's pretty
125:12 - rare that you're actually going to want
125:14 - to have this sequence of characters in
125:16 - your string okay so that's a little
125:18 - extra bonus piece at the end of this
125:19 - video maybe I'll make a special video
125:21 - just all about the wonder of template
125:23 - literals because that's what I'm sure
125:25 - everybody on the internet wants to watch
125:26 - and I'll see you in the future okay
125:33 - alright finally finished whew
125:40 - that's the sound effect I like better
125:43 - than the sad trombone okay I'm gonna
125:47 - leave that like this alright
126:00 - what is the tag oh you can do like an
126:05 - expression so you can actually evaluate
126:07 - code probably in there as well
126:12 - tag template little template oh all
126:14 - right multi-line strings and you can use
126:20 - expressions yeah look at that
126:22 - fascinating nesting templates okay this
126:26 - is too much for me okay are we really am
126:28 - I really gonna do the game of life right
126:30 - now is it a good idea is that what's
126:35 - happening today let's look at my I
126:39 - definitely don't feel like doing the
126:40 - advanced array functions because I want
126:43 - to do something a little bit more
126:43 - creative and interesting this by the way
126:48 - this is what I got through so far really
126:50 - really getting through this list
126:59 - now people are people want to vote
127:02 - that's interesting
127:04 - multi-line strings yes alright okay I'm
127:09 - gonna do a straw poll because why not
127:12 - well that was a good mapa game of life
127:15 - Boyd's let's try the straw poll well
127:18 - let's just do game of life versus boy I
127:19 - think yeah why not I don't think I don't
127:22 - think I should do the mapa right now
127:24 - I'll do that later challenge the reason
127:27 - why I like doing the game of life is
127:28 - because I could turn that into 3d
127:35 - automata do I say automata is it has
127:40 - that how you spell that's not how you
127:41 - spell Cellular oh you don't like program
127:47 - the whole boyd simulation thing from
127:49 - scratch alright let's give this a try I
127:55 - feel like if I put mapa in there it's
127:57 - not gonna get the votes and it's gonna
127:59 - sew here and I may or may not choose to
128:04 - listen to you but it's useful
128:12 - information big screens yes no no I'm
128:16 - okay I got to get over there but it's
128:18 - only if it's for 40 I'm okay still Thank
128:20 - You Dali for reminding me boy could be
128:26 - 3d - that's a good point it opens up a
128:33 - big can of worms though in terms of like
128:36 - how to draw them whereas whereas Game of
128:41 - Life in 3d it's kind of easier just go
128:43 - from like a square to a cube did
128:48 - somebody post this in the chat
128:59 - LeBron camera sorry the mouse is
129:08 - covering so while you guys are voting
129:11 - I'm definitely gonna I'm gonna race this
129:16 - then I'm gonna go onto amazon.com and
129:19 - order myself a big box of white board
129:22 - markers what would you guys think about
129:28 - I've been looking at these glass systems
129:33 - where I could hang a big piece of glass
129:36 - right here and draw on it like this and
129:38 - then I would just like flip the video so
129:40 - I'd be drawing and looking at you and
129:42 - standing behind the drawing I don't know
129:43 - I kind of used to the whiteboard all
129:54 - right let's see where this is going here
129:59 - yeah interesting all right this is
130:03 - pretty clear to me so I have to remember
130:06 - the game of us so let me uh well oops
130:08 - you guys didn't see this looks pretty
130:11 - good let me look for a couple things
130:13 - John Conway Game of Life Scientific
130:19 - American great so there's this and then
130:28 - a game of life probably Wikipedia be a
130:37 - good place to have the rules right here
130:41 - oh I remember why I was gonna do those
130:45 - advanced array functions it's because I
130:47 - was gonna use them in this really it's
130:53 - not really that much that I need really
130:55 - map or reduce okay you still probably
130:57 - nicely you're just like set them
130:59 - randomly I'll skip that I'll come back
131:01 - to that okay
131:11 - okay yeah it's funny
131:14 - this is so funny to me that so many
131:15 - people are posting in the chat dogura LP
131:18 - just wrote didn't you already do Game of
131:20 - Life some time ago well the thing is I
131:22 - did not already do Game of Life
131:24 - some time ago I I'd as a coding
131:28 - challenge I do have it as part of my
131:30 - tutorial series and I mostly I get
131:33 - people asking me to do it so I thought
131:35 - maybe I would just do it as a coding
131:37 - challenge you know all right
131:41 - the volume is low oh I could definitely
131:44 - raise that did that just happen just an
131:46 - hour's it's been all the way patron
131:50 - group in the slack could you confirm to
131:52 - me that I should raise the volume the
131:57 - other thing I like about the game of
131:58 - life is it's a good it's ripe for user
132:02 - contributions volume is fine okay a
132:08 - refactor video okay that's fine okay
132:16 - great thank you thank you okay I've got
132:21 - I've got the message all right okay
132:34 - so
132:43 - [Applause]
132:58 - okay so this I'm also going to refer to
133:01 - this was so this was my I wonder when I
133:07 - recorded this video a long time ago
133:12 - alright mmm let's see let me open up
133:23 - processing oh if I want to update the
133:31 - decode to use the new array functions
133:32 - later okay
133:38 - [Music]
133:44 - sorry I'm just
133:54 - um CA sorry I just thought wraparound
134:02 - simple
134:14 - very silly what I did in this example
134:41 - yeah this is probably gonna be bad for
134:44 - YouTube compression okay let's
134:55 - that's better maybe just slow the
134:58 - framerate down yeah I'm gonna do this in
135:02 - JavaScript I just was opening in the a
135:03 - processing example so I could make
135:05 - something nice and full screen well it's
135:13 - maybe I can just slow it down by not
135:15 - doing P 2d
135:17 - yeah this is probably pretty good all
135:20 - right
135:26 - all right oh wait I should probably get
135:34 - the code stuff ready
136:04 - the thing that I don't love about doing
136:06 - this in JavaScript is the whole 2d array
136:07 - thing is so awkward could just make it a
136:11 - 1d array and have a function always
136:15 - return the value with a given column and
136:17 - row I don't know it's a good question
136:38 - okay
136:43 - I'm gonna slow this down let's make this
136:49 - 24 that's pretty good
137:05 - yeah okay
137:12 - yeah Oh 3d arrays I think I'm gonna make
137:16 - a 2d version in 3d where you just look
137:19 - at it from above sorry everybody I have
137:24 - to go to big screen oh boy alright so
137:42 - here we are
137:45 - wait wait wait sorry I'm still not ready
137:49 - here
138:10 - okay
138:19 - all right
138:31 - it's time for a new coding challenge and
138:34 - today's coding challenge will be to make
138:36 - the game of life this is an example of
138:39 - the game of life that I made many years
138:40 - ago in the program environment
138:42 - processing it's going to run for a while
138:44 - I can click and kind of start over with
138:45 - a new random set of tiles now you might
138:48 - be asking yourself the question what is
138:50 - the game of life I'm not going to spend
138:52 - too much time on that in this particular
138:54 - video though I encourage you to look at
138:56 - some links in the description to find
138:57 - out some historical background what's
139:00 - possible all the kinds of variations and
139:02 - things you can do with it
139:03 - but it is an example of a southerner
139:04 - automata I keep that word
139:07 - wait automata I meant to like to sort
139:12 - this out for myself so I wouldn't have
139:13 - this problem pronunciation Oh
139:23 - I want to tell me automata
139:28 - okay automata oh we just start over and
139:42 - drink some water automaton I can't even
139:55 - remember now hello welcome to today's
140:03 - coding challenge in today's coding
140:05 - challenge I'm an attempt to program this
140:06 - which is the game of life simulation I'm
140:09 - gonna do it in javascript in the browser
140:10 - this is an example that I made several
140:12 - years ago running in the processing
140:13 - programming environment I'll also link
140:15 - to the code for this version so you
140:17 - might be asking what is the game of life
140:19 - well great question I I encourage you to
140:24 - check and read some of the historical
140:26 - background this is an article from
140:29 - Scientific American in October of 1970
140:32 - by Martin Garden Gardner about the
140:34 - mathematician John Conway who proposed
140:36 - this cellular automaton a game of life
140:40 - it's an example of that
140:42 - wait no every time I say that word I
140:45 - freaked out like I sound stupid I'm
140:48 - saying the wrong thing like cannot
140:49 - pronounce it was interested in problem
140:52 - presented by me his first public
140:56 - appearance was it called a cellular
140:58 - automaton Vanner is that's more like
141:00 - Wolfram coined that term all right hold
141:04 - on hold on everybody give me one more
141:06 - chance I know what's missing
141:15 - oh hey hello welcome to today's coding
141:21 - challenge today's coding challenge I'm
141:23 - going to attempt to create this the game
141:25 - of life cellular automata simulation
141:29 - automaton photon please don't make me
141:32 - say that word ever again you can't
141:38 - pronounce it right someone is always
141:39 - going to complain I'm gonna just get it
141:41 - wrong example of a if it's an example of
141:46 - a flower you wouldn't say example of a
141:48 - flowers so it's an example of a cellular
141:50 - automaton which automaton that I can say
141:55 - this is the last I can't start over
141:57 - again hello welcome to today's coding
142:03 - challenge in today's coding challenge I
142:05 - am going to attempt to program this the
142:07 - game of life cellular automaton in
142:11 - JavaScript can we use the p5.js
142:12 - framework what's running right here
142:14 - right now is a processing example using
142:17 - the java programming language that i
142:19 - made several years ago as part of the
142:20 - nature of code book now if you're
142:22 - interested in that you can also look at
142:24 - my whole playlist about this thing that
142:26 - I can't try now how it's called cellular
142:28 - automata the plural of otamatone and I
142:31 - do have some videos that give you some
142:33 - historical background and looking at
142:35 - different on Wolfram's elementary CA and
142:38 - some exercises and things but I'm really
142:41 - just showing examples in talking about
142:42 - the systems in in those videos in this
142:45 - video I'm gonna try to just start from
142:47 - no code and finish with the simulation
142:50 - hopefully it's going to work it
142:51 - generally doesn't so okay your hopes up
142:55 - but I do want to say that yeah I would
142:57 - encourage you to do some background
142:58 - reading and this is the first Republic
143:01 - appearance of the gate the game of life
143:04 - as created by John Conway a
143:07 - mathematician from an article in
143:09 - Scientific American in 1970 by Martin
143:11 - Gardner of course you can always refer
143:13 - to the Wikipedia page I'm gonna need
143:15 - this which is it's going to in which
143:17 - where it outlines the rules for how the
143:19 - system behaves and you can also think
143:21 - that there's a lot of possible stuff
143:23 - there's all these kinds of interesting
143:25 - repeating patterns and
143:27 - different types of things that you could
143:28 - create and do with the game of life
143:30 - simulation but I'm going to program a
143:32 - simple version of it hopefully that will
143:34 - happen then at the end they'll talk
143:36 - about some variations that you might
143:37 - think about and maybe someday I will
143:39 - then try to like make one in 3d or
143:40 - something like that okay so let's get
143:42 - started here's what we need a cellular
143:48 - automaton is a system of cells that
143:51 - exists in a grid it could be in one
143:52 - dimension two dimensions three
143:54 - dimensions the game of life system is
143:56 - one that exists in two dimensions and
144:01 - the idea is that you have generations
144:05 - let me pause for a second while I just
144:08 - try a different pen here this one put
144:19 - them next to each other it was a
144:20 - terrible idea
144:26 - so if this is generation zero I'm gonna
144:29 - run some computation on this system of
144:32 - cells on a grid and then I'm going to
144:34 - have a new set of cells on that grid and
144:38 - that's going to be generation 1 so the
144:44 - cells that exists on that grid all have
144:47 - a state that's part of a CA system so
144:50 - that state could be a floating-point
144:51 - number it could be a kind of animal you
144:55 - could really imagine in a lot of
144:56 - different ways I'm gonna do something
144:57 - very simple with the game of the game of
144:58 - life is a simple system of discrete
145:00 - States 2 States 0 1 on or off alive or
145:04 - dead so you could imagine a
145:06 - configuration of this being something
145:10 - like this and for each time each tick
145:15 - each generation each frame of animation
145:17 - I evaluate each cell one by one and get
145:22 - a new state based on the previous state
145:25 - so let's say I'm trying to do this cell
145:28 - I need this cells new state I'm going to
145:30 - get a new state based on this state and
145:33 - its neighbors so what are its neighbors
145:35 - that's up to us to find it could be its
145:37 - left neighbour its right neighbour it's
145:39 - only its neighbors to its
145:40 - but in the game of life system its
145:43 - neighborhood are the eight cells
145:46 - surrounding it so it's this 3x3 area one
145:49 - two three four five six seven eight so I
145:52 - need to evaluate all those cells and
145:54 - decide whether it should stay as a zero
145:56 - or turn into a one and the reason why
145:59 - it's called the game of life is the
146:01 - rules the rules for how we move from one
146:06 - generation to another resembles some
146:10 - type of like biological process that you
146:12 - might think about population or about
146:14 - Tyrael growth and the idea is that a
146:16 - cell that is surrounded by neighbors
146:19 - that aren't alive cannot stay alive a
146:22 - cell surrounded by neighbors that are
146:24 - alive can can come to life or stay alive
146:27 - and a cell that's surrounded by too many
146:29 - neighbors cannot stay alive due to
146:31 - overpopulation and we can go back to the
146:33 - Wikipedia page and and read those rules
146:36 - precisely right here so any live cell
146:39 - with fewer than two neighbors dies as if
146:42 - caused by underpopulation
146:43 - any live cell was two or three neighbors
146:46 - lives on to the next generation any cell
146:48 - is more than three neighbors dies by
146:50 - over ovulation and any dead cell with
146:52 - exactly three name three line neighbors
146:54 - becomes a live cell so this is written
146:56 - as if by reproduction so this is written
146:58 - in somewhat of a confusing way I think I
147:00 - could simplify this I think we could say
147:03 - like let's say the cell is dead it's a
147:07 - zero it's only going to change to a one
147:10 - if it has three live neighbours then it
147:14 - changes to a one otherwise it stays a 0
147:17 - a 1 it's gonna stay a 1 unless it has
147:22 - less than 2 less than to live and
147:26 - greater than 3 live then it dies so it
147:33 - so birth reproduction happens with
147:36 - exactly 3 neighbors death happens with
147:39 - fewer than 2 or greater than 3 now I
147:42 - don't know if I got those numbers right
147:44 - let's go check the Wikipedia page again
147:47 - [Music]
147:49 - thank you thank you I was videos I hit
147:51 - the sound effect by experience live cell
147:55 - with fewer than two live neighbours dies
147:58 - yes
147:59 - less than two dies live cell with two or
148:02 - three neighbors Liz I don't care about
148:04 - that I'm not gonna kind of not care
148:05 - about chain and then it stays the same I
148:07 - can kind of ignore that live cell with
148:08 - more than three neighbors dies yep
148:11 - that's what I've got over there and then
148:13 - any dead cell with exactly three live
148:16 - neighbours becomes alive okay so I've
148:18 - got those rules correct so now what do I
148:21 - need
148:21 - hello you're over there go back over
148:23 - here I need something I need a date all
148:25 - I need to make this program work is a
148:27 - data structure to store this grid and
148:30 - this is where I'm kind of having like a
148:32 - bit of a headache and I'm really not
148:34 - sure what to do the way that I've always
148:37 - done this in previous examples is by
148:38 - using something called a two dimensional
148:40 - array let's think I have a video
148:41 - tutorial about that somewhere which I
148:43 - will link to in this video's description
148:44 - but two dimensional arrays are kind of
148:48 - not so much fun in JavaScript they can
148:50 - become a little bit weird and there
148:51 - really is no such thing as a two
148:52 - dimensional array the two-dimensional
148:54 - array is a construct of our own human
148:57 - mind saying like it's really just an
148:59 - array of arrays which makes sense this
149:01 - is an array you know each row is an
149:03 - array and then the grid is an array of
149:05 - rows or each column is an array and the
149:07 - grid is an array of columns so I think
149:09 - I'm going to do it that way with the
149:10 - two-dimensional array I just should say
149:12 - that it's a little bit awkward two
149:13 - dimensional arrays in JavaScript but I'm
149:15 - gonna go ahead anyway so the first thing
149:17 - I want to do in this program is just
149:19 - make a two-dimensional array that stores
149:22 - a random collection of zeros and ones so
149:25 - let's go do that I'm gonna go to the
149:29 - code and you know what I'm gonna do I'm
149:32 - gonna actually just write a function I'm
149:34 - having like weird DejaVu I probably did
149:36 - this in another video somewhere I'm
149:37 - gonna just write a function called make
149:39 - 2d array and I want a certain number of
149:41 - columns and rows okay because that way I
149:44 - can just say I can have a global
149:46 - variable called the grid I'll call it
149:49 - grid and I could just say grid equals
149:52 - make 2d array and I could say I want a
149:55 - 10 by 10 grid so this is kind of what I
149:57 - want to do I'm gonna just farm out the
149:59 - making of the array to another function
150:01 - and
150:02 - right now I do remember doing this
150:04 - because I'm gonna write this in a kind
150:05 - of oh there's a whole like coding
150:07 - challenge or video I'm gonna do this in
150:09 - a kind of horrific way and then
150:11 - everyone's gonna like give me all these
150:12 - like amazing es6 JavaScript fancy ways
150:14 - of doing this function like one line of
150:17 - code someday I'll come back and do that
150:18 - okay so now so now let me see here so
150:25 - what I need to do is first is I need to
150:27 - have some sort of array and it's going
150:30 - to be it's going this is always where I
150:34 - get confused to do I want the columns
150:39 - the point of using a 2d array is that
150:42 - eventually at some point I'm going to be
150:43 - able to say something like grid you know
150:46 - index 2 index 3 and I guess I usually
150:51 - think of this as X & Y and X being the
150:54 - columns so I want this the outer array
150:57 - if I'm think about arrays of arrays to
150:59 - be every single column right every
151:04 - single no no that's what X is column
151:07 - right and then the why is everything a
151:09 - row ok so I'm gonna do that so I'm gonna
151:12 - make a new array of columns and then I
151:18 - am going to say for let I equals 0 I is
151:24 - less than that array dot length I plus
151:27 - plus make a array index I is a new array
151:33 - of rows again I know there are all sorts
151:37 - of shorter and fancier automatic
151:39 - functions for generating and configuring
151:41 - arrays like fill and map and reduce and
151:43 - all that kind of stuff even more so I'm
151:46 - gonna do this and then I am going to
151:51 - what I want to do here now is I also
151:54 - want to fill them with I guess I could
151:58 - fill it with values down here so I'm so
152:04 - maybe I won't maybe I'll actually just
152:05 - do that so this is going to make me an
152:07 - empty 2d array with nothing in it and
152:09 - then I think what I want is I probably
152:15 - want to have
152:16 - these global variables I know this is a
152:21 - little bit goofy that I'm doing this and
152:24 - then what I'm gonna do I could make
152:28 - enough and I'm gonna say let I equals
152:31 - zero I is less than columns I plus plus
152:36 - and then I'm going to do J is less than
152:40 - zero J is less than rows I'm going to do
152:43 - a nested loop so that I can say grid I J
152:49 - equals floor random two this is going to
152:54 - this is going to give me a nested loop
152:57 - this is a nested loop so I make this
153:00 - sort of like 2d array structure that's
153:02 - empty and then it iterate over every
153:04 - single column in every single row and I
153:06 - fill each one with a random number 0 or
153:09 - 1 and I'm just now I'm gonna run this
153:13 - and I'm gonna go back to I'm gonna go to
153:16 - my code okay cannot read property 0 of
153:20 - undefined well you know it would be nice
153:22 - if I actually returned that array so
153:26 - they make 2d a function alright it's
153:28 - making this array it's also got to
153:30 - return it so that I can get it back here
153:32 - and then now if I look at grid I'm gonna
153:36 - see it's an array of arrays and I forgot
153:38 - there's this wonderful thing you can do
153:40 - like console table grid which shows me
153:45 - now I can see it here so we can see this
153:47 - is that two-dimensional array that's
153:50 - what it looks like it's a
153:51 - two-dimensional array with rows and
153:53 - columns filled with zeros and ones so
153:55 - step one is finished now what I need to
154:00 - do is I need some mechanism to every
154:04 - frame of animation iterate over every
154:06 - single spot and set a new spot actually
154:09 - you know what I should do first I need
154:11 - to render this thing I want to be able
154:13 - to see it as a grid of red and blue
154:17 - squares are black and white squares or
154:19 - zeros and ones of the screens any number
154:21 - of ways you could render this I'm gonna
154:22 - do it in the traditional way of a grid
154:24 - the square the cell of the grid is black
154:27 - at the value of 0 is white of the value
154:29 - of
154:29 - or vice-versa okay so let's come back to
154:33 - here so what I want to do is I'm going
154:35 - to now go to draw and I'm gonna create a
154:40 - canvas now I'm also going to do
154:43 - something to make my life a little bit
154:45 - simpler right now I am going to make the
154:47 - canvas of square I'm gonna make it 400
154:51 - by 400 and I'm going to I'm gonna have
154:57 - I'm going I just need I'm gonna be using
155:00 - this oh I'm in the wrong place
155:02 - ah sorry everybody let me come back
155:04 - thank you
155:06 - for camera camera camera yeah I don't
155:12 - worry everybody I know I'm in the wrong
155:13 - place I just have to go back what did I
155:15 - just do take this out I don't think I
155:25 - had the draw function there okay okay I
155:30 - don't remember what I was saying but
155:31 - it'll get into somehow okay what I want
155:35 - to do now is I'm going to add a draw
155:37 - function and I'm gonna be using this
155:42 - loop over and over again I'm gonna add
155:44 - this loop right because I'm always gonna
155:48 - any time I want to look at everything
155:49 - I'm gonna go through all the columns and
155:51 - all the rows it's pointed out in the
155:54 - chat that there are some JavaScript
155:55 - libraries and packages that manage grid
155:57 - systems the neighbors for you be great
155:59 - to use those I'm gonna just do it all
156:01 - without that right now just to kind of
156:02 - like figure it out I'm gonna say
156:05 - background zero and I'm gonna create a
156:09 - canvas I think to make my life easier
156:11 - for the moment I'm going to make the
156:14 - canvas also a square and then what I
156:17 - need to do is I need to draw I want to
156:19 - draw a rectangle add an X and a y with
156:22 - some width and height and it's kind of
156:25 - they're going to be squares so some with
156:27 - and width and that value is going to be
156:33 - the width of the you I should probably
156:38 - calculate the number of columns and rows
156:40 - here's the thing I'm gonna redo the way
156:42 - that I'm doing this
156:43 - so I'm not gonna actually have a fixed
156:46 - number of columns and rows time out edit
156:49 - point Matias sorry kept it as cold as a
156:56 - pain not late to big screens yet am i if
157:00 - it's 5:45 I like really have to go
157:03 - I mean 5:30 I really should go I'm still
157:06 - live-streaming right okay okay I'm not
157:11 - gonna set out the columns and rows I'm
157:13 - actually going to do like a scale or I'm
157:15 - gonna just as you have a variable called
157:16 - resolution and I'm gonna say that's ten
157:18 - or forty I'm gonna say that's forty so
157:22 - that'll be ten by ten and what I'm gonna
157:26 - do is I'm gonna say columns equals the
157:30 - width of the canvas divided by
157:32 - resolution rows equals the height of the
157:35 - can canvass divided by resolution this
157:38 - way I can kind of dynamically you'll see
157:40 - what it I can dynamically make a 2d
157:42 - array based on how big I want the
157:44 - squares to be so the columns and rows
157:46 - are being calculated based on how big I
157:48 - want the squares to be and the canvass
157:50 - size and then I have that global
157:52 - variable resolution which is probably
157:53 - too long of a name which I can just use
157:55 - down here and now x equals I times
158:01 - resolution and y equals J times
158:05 - resolution and I'm gonna now say if grid
158:10 - I J equals one fill 255 and you know
158:19 - what since I made the background 0 I can
158:22 - actually in this case I can just draw
158:24 - rect white rectangles only for the
158:26 - values of one so let's see I probably
158:28 - got something wrong here but let's try
158:29 - to run this nope I didn't so we can see
158:32 - there we go now there's some goofiness
158:33 - like oh it's sort of like my math is a
158:35 - little off and I what's this weird like
158:38 - nonsense over here
158:40 - flickering I kind of feel the need to
158:43 - fix that and the other thing that I can
158:46 - do that this is going to help is if I
158:49 - make this 600 by 400 and I make this
158:52 - like 20 right it still works and now
158:57 - this is driving me crazy I think what I
158:59 - want to do is it's there's a sort of
159:02 - issue with the stroke so I do I want us
159:04 - also say stroke to 55 yeah there we go
159:07 - that'll do for now sorry oops there's a
159:20 - little bit of an issue with how this
159:21 - looks
159:22 - due to the stroke so I could say I could
159:25 - also say stroke to 55 and then I'm
159:30 - getting something just but I don't know
159:30 - design-wise I'm not gonna worry about
159:32 - that too much actually I kind of like
159:34 - being able to see the grid so let me
159:36 - actually put in stroke zero and then I'm
159:39 - gonna do something kind of goofy which
159:41 - is I think if I say just draw the all
159:43 - the rectangles like one pixel less
159:46 - whoops I think I'm gonna get the look
159:50 - that I want yeah so whatever there's
159:52 - countless ways I could deal with this
159:54 - but now I have I have the grid I have
159:56 - all the cells so so now it's up to me to
160:07 - simply implement these rules I need to
160:11 - for every single cell count the number
160:14 - of live neighbors look at its own state
160:17 - and have these rules play out here's the
160:20 - thing this is really important while I'm
160:24 - checking each cell I check this cell
160:26 - first let's say I cannot change its
160:30 - value and then go on and check the next
160:33 - cell because the next cells new state
160:36 - should not be dependent on this cells
160:37 - new state but its previous state and if
160:39 - I change the state I've lost its old
160:41 - state so this is where what I actually
160:43 - need is I need two two-dimensional
160:46 - arrays one is the sort of old one and
160:49 - one is the new one now probably the
160:52 - simplest thing for me to do is just make
160:54 - a new one every frame this sort of like
160:58 - in some ways a bad idea in terms of
161:00 - memory management and if you look at my
161:02 - processing example that I referenced at
161:04 - the beginning of this video what I
161:05 - actually do in that example is I just
161:07 - have two different arrays I have an old
161:09 - have a new one then the new one has been
161:11 - the old one and I write the new one over
161:13 - here I just keep swapping them so I
161:14 - could maybe add that in at some point
161:15 - during this video but for right now at
161:17 - the beginning of draw I'm just always
161:18 - going to make a new generation so what I
161:22 - could do here at the beginning of draw
161:25 - is say I can say let I'm gonna call it
161:32 - next oh I mean the wrong I did it again
161:36 - at the beginning what I could do here
161:40 - why does that keep happening when I
161:43 - pressed the button change the camera the
161:47 - beginning of draw I can say let next for
161:51 - next generation equal make 2d array
161:55 - columns and rows okay now I'm gonna
161:59 - leave this here for the rendering and
162:03 - what I'm actually gonna do is at the end
162:07 - what I'm gonna do is I'm gonna say I
162:11 - guess it doesn't really matter I want to
162:13 - like render first this is have like a
162:16 - philosophical deep philosophical
162:18 - question do I want to compute and then
162:21 - render or render and then compute kind
162:23 - of could matter in some situations this
162:24 - matte in this situation does really
162:25 - matter but what I would I the reason why
162:27 - is like I'm never gonna see the first
162:28 - generation because what I want to do is
162:30 - say grid equals next so basically the
162:33 - algorithm here is compute next based on
162:38 - grid because draw is looping so I want
162:42 - to compute the next generation based on
162:44 - the grid make grid that render and then
162:47 - compute the next generation based on
162:49 - grid make grid that render so I don't
162:51 - know that's bothering me I'm gonna do
162:53 - this I'm gonna do this after so at least
162:56 - I draw the first one and I'm gonna do
162:58 - some computation for the next frame okay
163:00 - okay so now what do I need to do once
163:03 - again loop through all of these loop
163:08 - through all of these now what I need to
163:12 - do is count live neighbors I need to
163:19 - count the number of live neighbors the
163:21 - neighbors that have one
163:22 - so I could do a kind of internal loop
163:26 - here and that would probably be a smart
163:29 - thing to do maybe I will do that where
163:32 - basically what I do is I say I have a
163:34 - certain I'm at a certain cell let me
163:37 - look at the cells between negative 1 and
163:39 - 1 and negative 1 and one offset from
163:41 - where I am I could also just do
163:44 - something really silly like I think you
163:47 - is a really silly thing first I could
163:50 - say let's sum equals 0 then I could say
163:53 - some plus equal grid I minus 1 J that
163:59 - would be the neighbor to the solo right
164:03 - if this is I comma J I minus 1 comma J
164:07 - is there I minus 1 J minus 1 I J minus 1
164:11 - that sort of thing so if I'm thinking
164:13 - about this I might like add go I could
164:16 - like manually put in all the neighbors
164:19 - just like add them all up this is like
164:23 - I'm going on going round the horn here
164:26 - right plus I plus 1 J plus 1 I sometimes
164:34 - I like doing ridiculous things like this
164:36 - just to figure this stuff out now I
164:39 - gotta go I minus 1 J plus 1 and then
164:44 - what's the last one I minus 1 J this
164:47 - should be 8 neighbors and right this is
164:56 - 8 neighbors one two three four oh eight
164:58 - one two three four five six seven what
165:01 - did I forget
165:02 - I minus one J minus 1 IJ minus 1 I plus
165:08 - 1 J minus 1 I forgot to do that whole
165:13 - top row and then I plus 1 J I plus 1 J
165:21 - plus 1 I yeah so this should now be 8 1
165:24 - 2 3 4 1 2 3 4 okay I kind of hate that I
165:29 - did this like throwing your tomatoes at
165:32 - your television screen because of course
165:34 - you're all watching this on the telly
165:35 - screen so this is the idea I need to add
165:38 - up all those neighbors let's do this in
165:39 - a loop so another way I could do it is I
165:42 - could say ah you have a better idea
165:45 - let's neighbors I have a better idea
165:50 - let's write a function to do this
165:52 - neighbors equals count I'm going to give
165:55 - it the grid and I'm gonna give it the I
165:57 - and the J so I'm gonna write a function
166:02 - I'll put it all the way at the bottom of
166:04 - my code that receives I'm gonna call it
166:07 - count account neighbors let's call it
166:09 - and it's going to receive some 2d array
166:13 - and it's going to receive an x and a y
166:16 - location and then what I'm going to do
166:19 - is I'm going to say I equals negative 1
166:23 - I is less than 2 I plus plus then so I'm
166:28 - gonna do a little nested loop using I
166:30 - and J around that spot and I'm gonna say
166:36 - let sum equal 0 and then I'm gonna say
166:40 - sum plus equals grid I J however here's
166:46 - a problem I don't want to count myself
166:50 - as a neighbor so there's a few different
166:53 - ways I could do this but it's a little
166:55 - bit silly I'm just gonna like subtract
166:56 - it at the end like I'll just subtract it
166:59 - out I could have like put an if
167:00 - statement here like ignore it if I
167:02 - equals X and J equals x but I'm just
167:05 - gonna subtract it out at the end and
167:06 - then I want to return that sum so this
167:09 - is you could see like a couple different
167:11 - ways of doing this right now this is one
167:13 - way to kind of do this what this is
167:15 - doing is it's saying let me do a little
167:17 - loop around here negative 1 0 the
167:19 - positive 1 negative 1 0 positive 1 so
167:21 - let me check this this this and then
167:24 - subtract this out cuz I don't really
167:25 - want to count that one ok so now I
167:28 - should be able to I'm gonna just delete
167:30 - this I've now counted all of the
167:34 - neighbors I've got a big problem what do
167:38 - I do with the fact that if I'm on the
167:41 - edge there's no neighbor to the left if
167:45 - I'm on the bottom
167:46 - there's no neighbor below if I'm the top
167:48 - there's no neighbor do they bother
167:49 - right there's no need if I'm on the edge
167:50 - there's no neighbor to the right so what
167:53 - I could do there's a bunch of things I
167:54 - could do I could consider this like an
167:55 - infinite wraparound world we're like
167:58 - this neighbor to the right is this this
168:00 - neighbor to the left is this I could
168:02 - there's other ways that I could proach
168:04 - what I'm gonna do is I'm gonna leave the
168:06 - edges as fixed values and just not
168:10 - bother to check them which is I so what
168:13 - I'm gonna do here is I am going to I
168:21 - wanted to do like I was gonna do this
168:23 - loop like this you know what let's do
168:27 - the wraparound do i no no let's do with
168:29 - the simple way first I was like Holly
168:32 - just add the wraparound cuz I could add
168:34 - the wraparound code here but let me know
168:38 - maybe I'll leave that as an exercise or
168:40 - do that later so the issue is you know
168:42 - what I really want
168:43 - I think then what I want the problem is
168:47 - if I change this loop so I have to I
168:50 - have to treat the edges differently oh
168:52 - so but so much heartache here but I I
168:55 - can say what I'm gonna do here is I'm
168:58 - gonna say oh this is the drawing well
169:03 - all right this is the computation so I'm
169:06 - gonna say if I equals 0 or I equals
169:11 - columns minus 1 minus 1 or J equals 0 or
169:21 - J equals rows minus 1 these are this is
169:25 - like all of the edges I'm just gonna
169:27 - treat them differently I'm gonna say
169:33 - next
169:34 - i J equals grid IJ so I'm just gonna
169:42 - keep the same values from before this is
169:44 - not a great solution but it's a quick
169:46 - one that I can do right now so I'm if
169:49 - I'm o on an edge I'm just gonna use the
169:51 - same value because now what I could do
169:54 - is say look at this my state is grid I
170:02 - now it's time for me to implement those
170:05 - rules right okay if my state is zero and
170:10 - three neighbors are alive change my
170:12 - state to one if state equals zero and
170:18 - neighbors equals zero then next I J
170:28 - equals one
170:30 - okay that's rule number one if not not
170:34 - zero equals three
170:36 - okay now what else if I'm alive and less
170:42 - than two or greater than three or live
170:44 - then change my state to 0 else if my
170:51 - state is 1 and neighbors is less than 2
170:56 - or neighbors is greater than 3 and I
171:00 - probably should put a little parentheses
171:02 - around that one and again I'm sure
171:04 - they're like some nicer ways I could
171:06 - write this in a more concise way but you
171:08 - can see this is the rule right if I'm
171:10 - alive and I have less than two or
171:12 - greater than three neighbors then the
171:14 - new state is zero in all other cases the
171:23 - next state is just the current is just
171:27 - the current state okay so and this makes
171:31 - me want to put this up here at the top
171:34 - so that I can also just use this here so
171:36 - that's the state right the state this is
171:39 - the current state if I'm an edge hey
171:41 - just ignore me on the same state if I'm
171:44 - not an edge count all the neighbors
171:46 - check if I should change my state or say
171:48 - the same I'm singing the chat there's a
171:50 - typo at neighbors in the first if thank
171:53 - you neighbors ok what's the chance I've
171:57 - actually finished this so there we go
172:01 - I think I have mostly all the code for
172:04 - it okay count is not defined sketch
172:08 - cha-cha slide 55 oh right because I
172:11 - called it count neighbors which is a
172:13 - better name for the function
172:15 - let's try that cannot read property
172:19 - negative one of undefined at count
172:21 - neighbors so what is undefined
172:24 - oh no no look at this this is a big
172:28 - mistake right what was I doing here
172:31 - this loop negative right this loop which
172:33 - goes which is basically a loop for like
172:36 - a little subsection right if this is x
172:41 - and y right i is an offset negative 1 to
172:46 - positive 1 j is an offset negative 1
172:49 - it's a positive 1
172:51 - the sells I'm looking at are not IJ but
172:53 - X + I + y + J because I'm just looking
172:59 - relative to where that XY point is so
173:01 - that was a big mistake here this should
173:04 - be X plus I Y plus J oh so close
173:15 - count neighbors at draw get 55 okay Oh
173:19 - see it's 955 count neighbors way will
173:23 - cannot reap repartee negative 1 of unto
173:26 - 5 what's undefined grid neighbors hmm
173:30 - okay hold on let's look at some stuff
173:31 - here okay grid it so hold on count
173:44 - neighbors let's just try grid 10 comma
173:49 - 10 okay so that works that cell has
173:54 - three live neighbours so I must be by
173:58 - accident looking at an edge right I must
174:02 - be looking at an edge by accident
174:04 - oh not minus one
174:09 - no yeah minus one or if j0 oh look at
174:14 - this
174:14 - I just keep going anyway so this I
174:17 - really I need to break out of the loop
174:19 - so this is really like I'm done leave
174:23 - the loop or continue or something I
174:26 - don't know
174:26 - I'm just gonna put an elf in here as
174:29 - much as I hate that so because I
174:31 - shouldn't be I'm basically doing the
174:33 - edges or the neighbors but this will be
174:35 - much nicer if I just in this function
174:37 - add some code to deal with a wraparound
174:39 - which is not going to be that hard to do
174:41 - so but now it should be good there we go
174:46 - the game of life now it looks weird
174:48 - because the edges aren't ever changing
174:52 - but this is actually now the game of
174:54 - life working I really got to implement
175:00 - this wraparound thing so let's do that
175:02 - now let's fix it so that the edges
175:04 - consider the other sides as neighbors so
175:08 - how do I do that well one way to do that
175:11 - is with something called modulus this is
175:14 - really this is great and I can refer you
175:16 - to goal on Levin's guest tutorial video
175:19 - on modulus which was made as part of
175:21 - this channel so I will link to that but
175:23 - basically I think what I want to do here
175:27 - on YouTube is basically what I'm saying
175:34 - here is if I have ten columns 0 through
175:41 - 9 what could and I'm always looking for
175:46 - the neighbor plus one right so 0 plus 1
175:50 - is 1 1 plus 1 is 2 etc etc etc 9 plus 1
175:55 - is 10 but I want the neighbor to be 0
175:58 - well guess what 9 plus 1 modulus 10
176:02 - equals 0 because modulus is the operator
176:06 - that gives you the remainder of division
176:07 - 10 divided by 10 is 1 remainder 0 so I
176:11 - encourage you to watch that modulus
176:12 - video if you're not familiar with
176:13 - modulus so this will actually work
176:15 - almost getting closer if I say I'm gonna
176:23 - just say like I'm gonna have a new I
176:25 - need like a new variable name for X plus
176:28 - I guess I could say column I don't like
176:33 - column and I'm gonna say X plus I
176:36 - modulus columns
176:39 - and Rho equals y plus J modulus rows so
176:45 - this gets me close it doesn't get me all
176:47 - the way there but it gets any close so
176:49 - now I'm adding it up like this and I'm
176:52 - gonna I'm gonna get rid of this whole
176:54 - edges thing because no longer okay so
177:00 - I've got to get this there now I'm gonna
177:01 - have an error here right I'm still
177:04 - getting like an out of bounds error
177:05 - because I'm going to negative one why
177:07 - because what if in the case of I equal
177:12 - negative one so what is its if if I is
177:18 - zero right so let me come to the console
177:21 - here ten modulus ten is zero but let's
177:29 - say I'm looking for the left neighbors
177:30 - so I'm going through negative one
177:33 - negative one modulus 10 is negative one
177:37 - but I need that to be nine
177:40 - I need negative one to be nine well
177:43 - guess what if I actually just add the
177:46 - number of columns to everything right if
177:49 - I'm actually working with the numbers
177:50 - instead of the numbers 0 through 9 the
177:53 - numbers 10 through 19 right 10 minus 1
177:57 - is 9
177:58 - modulus 10 is 9 so the formula is
178:02 - negative 1 is negative 1
178:05 - plus the number of columns modulus the
178:08 - number of columns oh but that's not 10
178:13 - there's a different numbers in my system
178:14 - but let me be clear about this what I
178:17 - want to do is I always want to take the
178:19 - value I add the number of columns to it
178:23 - and then modulus the number of columns
178:25 - and what this is actually doing and
178:27 - think about this for every possible
178:28 - location 10 11 12 13 14 15
178:32 - I'm gonna go all the way up to 1910 yeah
178:36 - yeah it because I is 0 0 1 10 this is
178:39 - this is the result of I plus columns 10
178:42 - module sorry X plus I plus columns right
178:51 - so if
178:52 - X is on the edge zero and I say negative
178:56 - 1 what did I make this confusing I'm not
178:58 - even on the right thank God thank God I
179:01 - didn't switch it because I totally just
179:04 - like that explanation was horrible so
179:07 - thank goodness I didn't switch the
179:08 - camera I'm so glad I didn't switch the
179:13 - camera hold on let me back up here
179:20 - anybody can have a screenshot for me
179:22 - what the whiteboard looked like a few
179:24 - seconds ago so I can erase it back to
179:27 - that point and it's half past no but I'm
179:31 - really close to done we won't be doing
179:33 - the 3d sure wait how long did I do that
179:41 - for I don't remember where I was
179:46 - does anyone is anyone in the patron
179:48 - group capable of looking at so this is
179:52 - what it is right now but before I before
179:55 - the last time that I was there what was
179:57 - it I'm waiting to see if because what
180:03 - was I don't remember how much I did oh
180:06 - wait thank you
180:08 - okay great so it was it wasn't fair as
180:11 - much okay I don't have to go back that
180:12 - far I was just like kind of doing it
180:14 - again so hold on I'm gonna look at this
180:19 - no that's what it is right now that's
180:22 - what it is right now I don't want this
180:25 - TMC gave you what it is right now I want
180:27 - what it was right unless I didn't add
180:29 - very much no but this was all my crazy
180:32 - explanation so I need what it was before
180:34 - so I know what to erase
180:39 - thank you for people in me I can't
180:42 - really see maybe I can't really see in
180:44 - the YouTube chat unfortunately easily I
180:46 - really appreciate that parsley though
180:50 - parsley just posted in the YouTube chat
180:52 - if someone can post that into the slack
180:54 - Channel that's an image
181:01 - great thank you okay this is good
181:05 - so I'm looking at this image right now
181:08 - and all of this stuff anybody know the
181:16 - last thing all this stuff is gone all
181:30 - right so this is looking exactly the
181:33 - same excellent thank you so the problem
181:36 - is I don't remember what I was saying
181:40 - all right whoops all right well I'm just
181:46 - gonna give this a try
181:47 - so this is what I was saying last here
181:50 - ah okay so let's let's try to confirm
181:57 - this again okay the idea is that I have
182:00 - an x and a y point so that point might
182:04 - be let's say if it's on an edge for
182:05 - example might be like zero comma it's on
182:10 - the left edge might be something like 0
182:12 - comma whatever the Y is you know tip 5
182:16 - so this is the x value and I want to
182:19 - take X plus I plus the number of columns
182:27 - modulus the number of columns I said oh
182:29 - this is gonna be simple but it's kind of
182:31 - this is really kind of like a crazy
182:32 - thing to do but you might write this out
182:35 - and practice it but on your own I say it
182:36 - will make sense to eventually so when
182:39 - this is going to work basically let's
182:41 - say I is going to be the values negative
182:45 - 1 0 & 1 right X is going to be the
182:51 - values 0 through 9 if I'm thinking about
182:53 - all the possible all the possible
182:56 - columns so let's just take 0 and
182:59 - negative 1 for example 0 minus 1 plus
183:04 - and in this case I have 10 columns plus
183:07 - 10 modulus 10 is actually 9 modulus
183:12 - which equals 9 so 0 negative 1 to the
183:16 - left of it that wraps it around to get
183:18 - the neighbor on the right right it
183:21 - doesn't work for just any arbitrary
183:22 - thing in the middle like if I take I to
183:25 - be 3 sorry if I take if I take sorry X
183:30 - to be 3 3 minus 1 plus 10 modulus 10
183:36 - we'll see how this 10 intended kind of
183:38 - cancels itself out can you see that am i
183:40 - off the whiteboard I'm close to being
183:43 - off the whiteboard that equals 2 right
183:46 - because this is 12 modulus 10 is 2 so
183:50 - this actually works and then what if I'm
183:51 - on the edge if I'm at like 9 right if X
183:55 - is 9 9 plus 1 is 10 plus a number of
184:00 - columns is 10 is 20 modulus columns 20
184:05 - divided by 10 is 2 remainder 0 0 so 9 to
184:08 - the right gets its neighbors 0 so this
184:10 - is kind of goofy it like shifts
184:12 - everything over so it can kind of look
184:13 - across the edge so I'm this is going to
184:15 - work you can believe me or not believe
184:18 - me but it's going to work
184:19 - and I'm gonna put this in so now what I
184:22 - want is X plus I plus columns modulus
184:27 - columns y plus J plus rows modulus Jo
184:32 - rows add those all up and the game of
184:38 - life thank you thank you for watching
184:44 - this study challenge thank you thank you
184:45 - so let's try and make you let's try
184:47 - doing a couple things just to get a
184:50 - little further here let's let's I don't
184:55 - know no I'm not gonna do you do all the
184:57 - next stuff I'm just curious like let me
185:00 - make the resolution 10 so we can see
185:02 - that's with the 10 so you can see it's
185:04 - running pretty fast in the browser I
185:05 - have a pretty slow low resolution so
185:09 - here's what you should do now I'm gonna
185:11 - stop this is a perfect opportunity for
185:13 - people watching this video to make some
185:15 - variations some things you can think
185:17 - about well one thing is what if you make
185:19 - each one of these cells an object so
185:22 - each state might not actually just be it
185:24 - can keep track of more than
185:26 - at state zero or one it could keep track
185:28 - of whether it's changed state or stay
185:30 - the same or how long it's stayed the
185:31 - same what if you visualize those what if
185:34 - you visualize with different colors
185:35 - based on the history of the system what
185:38 - if you allow a user to draw with the
185:40 - mouse and set cells on what if you look
185:43 - up some of these repeating special
185:45 - repeating patterns that you can create
185:47 - certain kinds of patterns what if you
185:51 - are you gonna think of more and what if
185:53 - you did the edges in a different way
185:54 - what if he cues to floating point
185:56 - numbers instead of zeros and ones and
185:58 - did like an average or something there
186:00 - are so many ways you can create a system
186:02 - lowering the resolution
186:03 - why don't you drew didn't draw squares
186:05 - but circles used images
186:07 - how can you visualize this system how
186:09 - can you change the rules or how can you
186:11 - visualize the system in a different way
186:13 - to create a piece of arch or for some
186:16 - other purpose I look forward to share
186:18 - what you make in the comments there'll
186:19 - be the code link from here and a readme
186:21 - where you can submit your versions and
186:22 - I'll come back in a future live stream
186:24 - I'll share some of the community made
186:25 - versions run this again there's one
186:28 - other thing but I do think that making
186:30 - cell objects is a path right right now I
186:34 - just have ona and you should probably do
186:36 - the swapping thing like maybe maybe
186:38 - that's one another thing you could do is
186:40 - like you really maybe not don't make a
186:41 - new 2d array every time but what I'm
186:43 - thinking about here is what if instead
186:45 - of each one of these being a random
186:48 - value you said something like new cell I
186:51 - comma J and this cell object can ki can
186:55 - animate it can move around the stem
186:57 - cells could move they could grow they
186:59 - could shrink they could keep track of
187:00 - their history there's so many
187:01 - possibilities there if you make an
187:02 - object for the cell okay thanks for
187:04 - watching I hope you enjoyed this coding
187:06 - challenge and you share with me what you
187:09 - make good bye
187:12 - um alright 540 okay everybody thank you
187:19 - very much I am oh I got to read some
187:22 - random numbers I don't remember where I
187:26 - was maybe I won't worry Brandon numbers
187:27 - today I'm happy to take some last
187:31 - questions I'm pretty good for about
187:32 - three or four more minutes so I'm going
187:36 - to people are asking where do I have to
187:37 - leave well one thing is I've been here
187:39 - for I know in the almost three hours now
187:42 - yeah homes three hours and a half three
187:45 - hours now so that's one reason why I
187:47 - have to leave but I'm also going to an
187:48 - event tonight called the big screen show
187:54 - doors open at 6 o'clock which is 20
187:57 - minutes from now it will definitely take
187:59 - me at least 20 minute I can walk there
188:01 - but it's probably got half an hour walk
188:02 - and maybe I'll take the subway but if
188:04 - your dad would try to remember put some
188:06 - stickers in my pocket and then if you're
188:07 - there say hi to be say you were watching
188:09 - the livestream etc so I've only been
188:14 - here for two hours Simon no no I started
188:16 - at 2:30 p.m. Eastern it's 539 it's 5:40
188:20 - Eastern athletes so I will be back next
188:26 - week I'm hoping to actually do three
188:29 - live streams next week if you can
188:31 - believe it it's important to me
188:32 - especially for the folks that are
188:34 - supporting me on patreon to try to do
188:37 - what I'm committed to for that support
188:39 - is for live streams for month and I
188:42 - think I'm a missed one in November and I
188:44 - missed one in the
188:46 - so hopefully doing a couple extra next
188:48 - week will catch me up
188:49 - so ODF ello sounds says that's a four
188:54 - minute walk right now so technically
188:56 - you're supposed to RSVP maybe you could
188:59 - just I think it's probably fine if you
189:00 - go anyway just name drop me say I said
189:02 - you could go and dfl Oh sounds if you
189:08 - actually do show up try to five you say
189:09 - hello okay oops
189:12 - alright so thanks everyone for watching
189:14 - today I am so glad to be back I feel
189:17 - kind of good about I feel like that
189:18 - coding challenge kind of went well does
189:20 - anybody have an estimate how long that
189:22 - was like do you think I was like a half
189:24 - an hour challenge think about the
189:25 - editing a little bit 20 minutes I don't
189:27 - know okay I thank you everybody for
189:39 - watching and I'm just checking here
189:47 - all right
189:49 - Oh wonderful Overmind that's wonderful
189:52 - if you want to translate all the videos
189:53 - to Portuguese I'm send me a message on
189:54 - twitter at Schiffman if you have a
189:56 - Twitter account so you could because
189:57 - when I get submissions on YouTube it
189:59 - doesn't tell me who submitted them 25
190:02 - minutes relevant okay that's pretty good
190:03 - music video play the coding challenge
190:05 - video I don't know what that is
190:06 - Oh coming in January 2018 some videos on
190:11 - machine learning
190:12 - thank you everybody I'm going to click
190:13 - stop streaming now