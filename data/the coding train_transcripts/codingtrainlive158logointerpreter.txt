00:13 - hello I am here I am back
00:17 - it is Friday it is 4:30 p.m.
00:21 - wouldn't it be 9:00 in New York City
00:23 - wouldn't it be nice to just say it's
00:26 - five o'clock on a Friday I'm out of here
00:28 - weekend time but no I'm gonna code
00:35 - something before I go I have done
00:37 - something to my back
00:39 - I have often had like back strain and I
00:43 - do a lot of exercises and stretching
00:45 - unfortunately this morning I was helping
00:48 - my daughter get ready for school
00:50 - I like we were in a rush I like reached
00:52 - over and I did something so I'm a little
00:54 - bit off of my game and I was so thrilled
00:58 - to have Stefania visit the coding train
01:01 - goes like oh good I'm not feeling so
01:03 - great today and I hadn't have a guess
01:05 - it's this really interesting topic and
01:07 - she's so dynamic so that was wonderful
01:09 - thank you if you don't know what I'm
01:10 - talking about
01:11 - between 3 o'clock and 4 o'clock I had a
01:14 - livestream with a guest stephania
01:16 - doodoo guide you can go back and watch
01:18 - that from Romania her wonderful project
01:22 - kogda means okay so but I kind of I feel
01:25 - like I need to send the weekend off with
01:27 - a coding challenge I have a bunch of
01:29 - topics that I'm really trying to do as
01:31 - part of my kind of more multi-session
01:34 - course materials word Tyvek is kind of
01:37 - what I am focusing on right now some
01:40 - more machine learning topics and some
01:42 - other things that I have in the back of
01:43 - my mind but I think I'd like to just
01:45 - code something ridiculous and fun and
01:47 - nice that maybe people could make their
01:49 - own version of and then go and start the
01:51 - weekend and do a lot of like resting and
01:53 - stretching and that sort of thing all
01:56 - right so all right so a continuous line
02:04 - drawing I wondered if you could recreate
02:08 - although I'm looking at this looking at
02:11 - this topic suggested by Nate
02:13 - here in the chat let me look at this I
02:16 - have an idea by the way it's for what to
02:18 - do
02:20 - using processing to scribble curves
02:23 - based on image brightness whoa that is
02:28 - really cool huh hold I'm looking at this
02:38 - let me go find this one I really I do
02:39 - like this idea this is definitely
02:41 - something I could do something around
02:44 - let me go to rainbow topics github.com
02:52 - slash coding train so this is where I
02:55 - kind of keep a list of topics one that I
02:59 - was thinking of doing was turtle
03:02 - graphics Oh continuous line drawing here
03:06 - it is open three days ago
03:07 - why not so look at this to scribble
03:13 - curves based on image brightness
03:16 - this is q-tip of A Tribe Called Quest to
03:20 - commemorate the release of the Low End
03:22 - Theory 27 years ago I like this idea
03:25 - thinking about this I hope you think
03:26 - about how I would do this I mean I guess
03:29 - I could read so first of all I'm always
03:31 - wary of taking somebody else's idea and
03:37 - then making co-opting somebody else's
03:40 - idea in a way that's not appropriate I
03:41 - think this could be a fun thing to try
03:45 - crediting this I guess reddit author as
03:50 - the originator of this idea and it
03:52 - doesn't look like the code I guess I
03:56 - have to read this it's more complicated
03:57 - but for three different brightness
03:59 - ranges the code starts shape at a random
04:02 - non-white pixel from the image then it
04:04 - randomly checks the other XY coordinates
04:06 - for pixels from the image that are close
04:09 - and brightness and close in location it
04:11 - finds one it adds as a curve vertex and
04:13 - marks the surrounding pixels as done so
04:16 - they won't get picked up by the
04:17 - algorithm in subsequent loots after it
04:19 - finds a lot of points that add a curve
04:20 - vertex to it ends the shape and moves
04:22 - to the next brightness range interesting
04:26 - interesting
04:28 - there's a lot of random point guessing
04:30 - which makes the algorithm inefficient
04:31 - but it can draw one of these images in
04:33 - five to ten seconds and I like the
04:34 - random search result all right let's
04:36 - let's try to do this
04:38 - why not what's the wide beam I bail and
04:43 - by moving really slowly today oh I'm
04:46 - definitely do this is this great because
04:48 - I can do this in processing I'm sure it
05:04 - won't make something as nice as this but
05:09 - I like it
05:10 - alright hold on let me read that again
05:13 - three different brightness ranges the
05:17 - code starts a shape at a random not
05:18 - white pixel it then randomly checks the
05:22 - other XY coordinates four pixels from
05:24 - the image that are close in brightness
05:26 - and close in location oh all right so I
05:30 - had a different way of doing this maybe
05:32 - I'll try my way this way it's probably
05:34 - better this way it's better I'm sure
05:40 - Valerio is asking for my opinion on the
05:42 - whole christie's ai artwork fiasco I
05:45 - know please don't make me try to talk
05:47 - about that I'm just gonna cry so ya know
05:53 - pac-man sorry a lot of people are asking
05:55 - for pac-man that's I'm not gonna do that
05:57 - today I was thinking what if I tried to
06:03 - trace yeah yeah maybe I should try this
06:19 - I'm a little weary I just like God I
06:22 - feel like this person has invented
06:24 - something really interesting and I
06:26 - should let that without their permission
06:27 - I should let them have the opportunity
06:29 - to publish their code so I'm actually
06:31 - gonna hold off on this but I do like
06:33 - this idea if somebody wants to contact
06:35 - this author
06:36 - find out the next five minutes but I
06:39 - think I wouldn't want to do this without
06:41 - their permission
06:44 - okay
06:45 - so I'm gonna hold off for a little bit
06:48 - on that I do like that idea though go
06:51 - back to the chat here all right okay
06:56 - Nathan sorry not my idea yes one thing I
06:59 - wanted to do is actually just program a
07:00 - turtle graphics engine which just means
07:02 - all you could do is say forward forward
07:04 - left right which would be kind of
07:06 - interesting and people could build on
07:09 - top of that and then I have this other
07:13 - idea so something that I'm to do that
07:15 - we're doing here at ITP where I teach
07:17 - which is a workshop about generating
07:19 - project ideas and this tool is something
07:22 - that's in progress don't than p5 which
07:25 - will generate a random project idea make
07:29 - a project about imagination that spins a
07:36 - motor with pong I don't have a motor so
07:38 - I gotta expand it again make a project
07:48 - about hunger
07:50 - that tickles with a particle system hmm
07:57 - logo
07:58 - let's make logo let's make logo these
08:02 - are great I'll come back and use this
08:04 - let's make logo coding challenge logo
08:08 - should we use processing probably we
08:11 - should use p5.js shall we use the web
08:14 - editor why not
08:22 - so what is logo like what are the
08:27 - Wikipedia what are the Felix says maybe
08:32 - try a simple Tetris implementation no I
08:34 - the things that I would like to do next
08:36 - when I want to do a Rubik's Cube
08:39 - everyone keeps asking about that and
08:40 - there was another one that was in my
08:41 - head I don't know I can't remember now
08:47 - but there's another one that was in my
08:48 - head
08:49 - no not this logo logo turtle graphics
08:54 - look turtle is there a disambiguation
08:57 - page turtle graphics logo there we go is
09:05 - what I'm looking for so we are going to
09:07 - create them so what are the actual
09:09 - elements of the language is there a way
09:13 - that I could the original logo from 1967
09:16 - is there a way I could find out what the
09:18 - commands were so commands in logo commit
09:29 - original logo commands logo tutorial
09:36 - could this be it from 1997 forward
09:43 - backward right left clear screen okay
09:48 - each of these commands are followed by
09:50 - one value called its argument the
09:53 - arguments for forward and backward are
09:55 - units those of right and left are angles
09:59 - I say forward units backwards right an
10:02 - angle left an angle CS clear screen so
10:05 - what I want to make is a logo
10:08 - interpreter so I'll use like a text box
10:14 - I'll use a text box that the user can
10:20 - enter in these commands I'm gonna need
10:23 - to I don't think I think this is gonna
10:24 - be complicated enough that I'm not gonna
10:25 - want to use the P 5 web editor for this
10:28 - is pen up and pen down
10:31 - simple logo drawing commands does anyone
10:33 - fact right this is what I want to be
10:35 - able to do I want to be able to oh and
10:38 - then it also the repeat command alright
10:41 - why not I can parse for this Oh
10:44 - and then another okay I might not be
10:47 - able to do all of these okay this is
10:49 - great this is great this is I'm totally
10:51 - doing this oh I really really hurt
10:55 - myself here this is this is fine this is
10:57 - gonna be good
10:58 - alright let's go to I term
11:02 - I guess I could I would do this in
11:04 - processing except it's not going to be
11:06 - easy to have I mean I could load a text
11:11 - file with the commands in it that could
11:13 - be one way of approaching it but I'm not
11:18 - and so I could have like just a text
11:20 - editor open maybe I should do that let's
11:26 - do that okay of course we will make a
11:33 - okay and then now let me just test out
11:38 - this idea oh but regular expressions for
11:42 - split and everything is gonna be so
11:44 - awkward be so much nicer to use
11:46 - JavaScript regular expressions probably
11:49 - I think I have to do this in JavaScript
11:52 - I think this is complex enough though
11:58 - that I am going to want to whoops
12:02 - use pin up and pen down will certainly
12:12 - be useful yes hello oh okay native
12:33 - JavaScript please and how did chance
12:35 - I appreciate it i I don't think I'd be
12:39 - able to do this with native JavaScript
12:44 - something is very unstable here gonna be
12:48 - standing still while coding today maybe
12:52 - this wasn't a good idea well didn't I
12:59 - just install that Oh
13:05 - huh huh what did I do to my path well
13:14 - I'm not gonna worry about that place I'm
13:16 - not gonna worry about that I'll just get
13:17 - a get one of my previous things that
13:22 - I've been doing like we're Tyvek or
13:25 - something oh yeah let me just grab one
13:27 - of my word Tyvek examples go to the
13:30 - desktop logo I don't need this get rid
13:45 - of everything
13:56 - get rid of everything okay
14:10 - something has gone wrong with my zsh
14:12 - what has gone on with my zsh setup is
14:18 - this the problem let's just restart
14:24 - terminal
14:31 - I don't want to get lost in this but
14:40 - hmm this looks good I don't see anything
14:45 - in here that's missing where am i know'd
14:48 - did I lose my like note packages note is
14:53 - there or of course oh you know what all
15:03 - right hold on sorry I'm gonna have to do
15:12 - this cuz this is making me crazy I think
15:17 - maybe I forgot a little thing here which
15:23 - is this do I have any who am I using NPM
15:25 - global I do this yes this is where
15:34 - that's where my packages are and I did
15:40 - that and I think that I don't have this
15:42 - in my path so I don't know why I don't
15:45 - have that in my path that should do it
15:53 - I apologize if you don't know what I'm
15:56 - doing I don't have the energy to explain
15:58 - it right now but it is kind of in my
16:01 - there we go it is in my workflow videos
16:04 - okay let me just explain what just
16:06 - happened there I know global node
16:10 - modules are a thing that I can have
16:12 - included in my path meaning any global
16:14 - node module I have installed like HTTP
16:16 - server I can just run with the HTTP
16:18 - server command however I did not have
16:22 - that that my terminal my console didn't
16:25 - know about that directory and p.m.
16:27 - global or I'm installing the stuff so I
16:28 - had to add this and I'm using Zee shell
16:31 - so what it's called but whatever shell
16:33 - you are you need to have the path know
16:35 - about that directory okay that aside now
16:40 - I should be able to go to a my run it I
16:44 - should be able to go to here and oh did
16:48 - I quit it and see oh I'm like
16:53 - let me go back to a desktop logo HTTP
17:01 - server and we've got a little console
17:08 - going here and then let's think about
17:11 - this I'm just gonna add before I start a
17:20 - text area is that what is called ID
17:25 - equals code I mean a text area let's see
17:31 - I don't want to have to figure this out
17:33 - and then what's the thing do I say like
17:34 - cols equals 80 or something you know and
17:45 - then rows something like that oh that's
17:49 - way too much and then can I put stuff in
17:53 - there like the ideas I can put stuff in
17:56 - there like oh shoot how do I where'd
18:02 - those logo commands go oh this is like
18:13 - this
18:29 - I just want to see is this
18:48 - and then here there we go yep
18:59 - there we go okay let's make it the
19:09 - canvas 200 200 and a text that big so I
19:21 - just didn't want to have to do this in
19:23 - the coding challenge because this is
19:24 - like a lot of configuration e stuff
19:38 - okay great there we go
19:42 - okay I think I'm set okay okay
19:48 - everyone's gonna be okay
19:50 - Oh put things in quotes okay
19:53 - yeah I'm supposed to put these in quotes
20:02 - this is gonna be a me not moving around
20:05 - so much coding challenged oh boy let me
20:11 - just give me a second here case I need
20:14 - to use the whiteboard cycle the camera
20:29 - okay and let me close things that don't
20:36 - need to be open
20:48 - this can be minimized and code is
20:53 - visible this is visible and we are ready
20:57 - to go how's everybody doing okay all
21:15 - those temperatures get ride that chair
21:17 - and sit and I actually have a chair in
21:18 - this room I'm just curious what happens
21:20 - if I use the chair just give me a second
21:23 - here
21:25 - sher might provide me a little support
21:29 - it's a little bit weird for me to use a
21:31 - chair it's a little kind of tool Oh
21:36 - weird how do you guys feel about me
21:44 - using this chair I'm gonna use this
21:45 - chair today I've never done this but I
21:49 - actually feel much more stable using the
21:55 - chair I especially like and I'll get up
21:59 - if I have to but this is gonna be much
22:01 - better for my back today standing was a
22:03 - little bit of an issue okay I'm like
22:08 - doing everything sitting for the whole
22:10 - rest of this when the camera goes up at
22:12 - half an hour I'm gonna have to get up
22:14 - okay
22:15 - put books on the seat I wish the seat
22:19 - would go yeah people will the seat go
22:23 - higher oh they little knobby thing that
22:30 - raises it up it's broken but it might be
22:32 - as high as it goes okay cherish dick how
22:44 - much lower today because I'm sitting in
22:45 - a chair this coding challenge requires a
22:47 - chair just me that needs the chair today
22:50 - okay
22:51 - I feel so organized it's like any papers
22:54 - like I'm a newscaster or something
22:56 - welcome to the coding training coding
22:58 - challenge today I'm going to make logo
23:00 - what do you mean you're gonna make logos
23:02 - so logo is an educational programming
23:05 - language designed in 1967 by all these
23:07 - people listed here and you can go read
23:09 - the Wikipedia page to learn more about
23:10 - the history I actually did learn in my
23:14 - youth maybe some of you did so what I
23:16 - mean by making logo is I want to create
23:19 - and pause
23:27 - look I want to create a interpreter I
23:37 - wouldn't I want to create a programming
23:39 - environment in the browser that
23:40 - basically does logo so I as the it's
23:44 - like spell checking me here how weird I
23:47 - can write logo commands and then watch
23:50 - my logo commands be executed in this
23:53 - canvas and probably what I should do is
23:56 - have a button that's like a run button
23:57 - but maybe I could be continuously
23:59 - interpreting it who knows so what are
24:01 - the logo commands so the idea of logo is
24:04 - turtle graphics the idea is that you're
24:06 - controlling a turtle to move around the
24:08 - screen the turtle move and the turtle
24:10 - could do a number of things and I found
24:12 - this tutorial from Brown University to a
24:15 - course you can find a link up here and
24:18 - these are the these are the drawing
24:21 - commands I can move forward by a certain
24:23 - amount I can go backwards by a certain
24:25 - amount I can turn right
24:26 - I could turn left by some angle and I
24:28 - can clear screen there are also other
24:31 - commands and there's like a repeat
24:34 - command and there's pen up pen down it's
24:36 - very straight a high turtle show turtle
24:40 - home label set XY so many possibilities
24:43 - I'm not going to implement everything
24:44 - because but I'm gonna do something or
24:48 - release this code and you the viewer
24:51 - will probably make your own magical logo
24:52 - interpreter maybe you don't even want to
24:54 - make a logo interpreter but just this
24:56 - idea of drawing in this way will inspire
24:59 - you to do something so and what would be
25:01 - interesting is it could I make a logo
25:03 - interpreter that then I paste something
25:06 - in here that would actually generate
25:08 - this particular pattern this example
25:10 - logo output so that's kind of like a bit
25:12 - of a challenge certainly I would need a
25:14 - repeat to be able to do that and this
25:16 - video will be approximately seven and a
25:19 - half hours long are you ready let's go
25:23 - alright so the first thing that I want
25:25 - to do Oh what do I want to do I guess I
25:27 - need to parse this so okay what did I
25:30 - what do I have already so I have already
25:33 - an HTML page that has a text area in it
25:36 - and that text area has this sort of like
25:37 - logo code written in there
25:41 - so what I can do and I'm using the p5.js
25:43 - library and now what I can do is I can
25:46 - say I'm gonna make a something called
25:51 - editor I'm gonna say editor equals
25:53 - select code and then I'm going to say
25:57 - console dot log editor dot value I'm
26:01 - gonna call the value function was that
26:02 - what it's gonna be
26:03 - let's see whoops refresh there we go
26:07 - okay so that's how I get the code so I
26:09 - could say a let code equals editor dot
26:14 - value then what do I need to do I need
26:18 - to parse this and looks to me like I can
26:21 - quite easily parse this with a space
26:23 - this fitting is weird
26:25 - I've also read in front of phone I don't
26:27 - like it this went away okay everyone's
26:38 - saying everyone's telling me to just
26:40 - embrace the chairman embrace the chair
26:45 - okay
26:46 - so where was I
26:50 - thank you much always for your editing
26:52 - support okay so the delimiter here the
26:57 - thing that defines each block here is a
27:00 - space so I can really nicely I can do
27:03 - say something like let tokens tokens as
27:05 - I sort of word that's often used in
27:08 - computational things to describe a
27:10 - single unit a token of text a word token
27:14 - a sentence token a character token
27:15 - because what I want to do is say split
27:17 - and it's the most simplest level
27:19 - I just want to split that text up by by
27:24 - spaces and I can do all sorts of fancy
27:26 - stuff in here like use a regular
27:27 - expression and split it in fancier ways
27:29 - and I'm going to need error handling I'm
27:31 - not going to worry about any of that I
27:32 - am just going to go ahead and say look
27:35 - at this
27:35 - alright look at this oh look this is
27:38 - weird extra carriage return thing but
27:41 - I'm not gonna worry about that we can
27:42 - see now I have something that splits up
27:44 - everything by that splits up everything
27:50 - by
27:51 - [Music]
27:53 - like water is over there one second
27:58 - everyone
28:17 - it splits up everything into an element
28:20 - of an array and actually I'm getting a
28:22 - nice suggestion from the chat that if I
28:24 - call console table it might I might be
28:27 - able to see it in a nice other way like
28:28 - oh that's really nice good that console
28:30 - dot table like my favorite thing ever
28:32 - okay so there we go so we can see
28:35 - there's the array all right so what do I
28:37 - want to do I have like a crazy idea
28:40 - let's build a dictionary what I mean by
28:44 - a dictionary let's make a JavaScript
28:45 - object we're each one of these each one
28:49 - of these commands is a function is is it
28:53 - is math each one of these keys the
28:54 - command is mapped to a function why what
28:56 - what am I talking about let me show you
28:58 - with code so let's let's actually make a
29:03 - another javascript file called turtle j
29:06 - s and normally i would make like a
29:08 - turtle graphics a turtle object which
29:10 - would really make sense i'm actually
29:12 - let's do that let's make a turtle claw
29:14 - object because the turtle is going to
29:16 - need the turtle is the thing that's
29:19 - moving and drawing so the turtle is
29:21 - going to have an x value maybe it'll be
29:25 - initialized somewhere the turtle will
29:28 - have a Y value and that's good right now
29:30 - and the turtle might have functions like
29:32 - you know forward backward backward
29:40 - because this idea that I had was to then
29:43 - also have an object like commands equal
29:49 - and then like forward would be a key
29:53 - mapped to a particular function and in
29:57 - that function we would you know
30:01 - translate by some amount by you know
30:07 - some length or something maybe I'm
30:10 - always gonna move forward along the
30:11 - x-axis all have to be wrote right I
30:13 - could I could do that
30:15 - so I was thinking about doing this but
30:17 - it kind of makes sense to have an object
30:19 - hmm hmm oh right it definitely needs a
30:23 - direction this is very important like I
30:25 - might call it angle like it needs a
30:27 - direction
30:28 - I don't know if it makes it's called
30:29 - direction or angle maybe the direction
30:32 - but it's eat it's initialized as an
30:34 - angle but I kind of so I'm gonna do this
30:37 - right now and this by the way would be
30:40 - what was the actual command its FD for
30:43 - forward so I'm gonna put this away for a
30:46 - little bit and what I'm going to do is
30:50 - I'm going to say let turtle and I'm
30:55 - gonna make a turtle turtles a new turtle
31:01 - and it's going to start in the middle of
31:04 - the window with an angle of zero so this
31:11 - is going to be the initial turtle and
31:13 - then let's think so let's forget about
31:15 - the fact that I have to follow the logo
31:17 - commands and let's just for a second
31:20 - actually program the things I would do
31:22 - so if I'm gonna go forward by some
31:24 - amount I'm going to say translate by
31:29 - that amount
31:30 - I'm gonna everything's gonna be like
31:32 - along the x-axis if I'm gonna go
31:36 - backward watch this I could say forward
31:40 - by negative amount this dot forward whoa
31:43 - visual studio coach has corrected that
31:45 - for me
31:45 - let me try that again forward scary look
31:51 - it's like how Gmail writes their email
31:53 - for you now this dot forward negative
31:56 - amount right so backward is moving
31:58 - forward by a negative amount what were
32:00 - some of the other commands where were
32:03 - they right so right would be I'm gonna
32:09 - say right
32:09 - oh by the way so I actually when I read
32:13 - the command I don't need to have forward
32:14 - and backward cuz I'm just gonna use my
32:17 - forward command so anyway we'll see but
32:19 - like right would be by some angle I
32:25 - would say rotate no don't autocorrect
32:29 - for me by that some angle so that's what
32:33 - I'm gonna do I couldn't so I'm probably
32:35 - going to use the fact that p5 has this
32:38 - whole transformation matrix
32:41 - and I have some video tutorials about
32:42 - that pushpop translate rotate so I can
32:45 - actually control the turtle that way I
32:46 - could do all that math with trigonometry
32:48 - but I'm gonna stick with that and every
32:52 - song me that like that this dot thing
32:54 - this table this blog um has been around
32:57 - for quite a while in in Visual Studio
33:01 - code okay
33:02 - never forget that this dot now I won't
33:04 - be able to forget but I want to forget
33:06 - it like what if I did this uh we can I
33:09 - never uh am I never gonna forget again
33:12 - like what if I did something weird like
33:13 - this it doesn't change it it did it with
33:15 - functions it didn't know to change my
33:16 - instance variable okay alright so let's
33:19 - stick with this for a second and I am
33:23 - going to also I need to know whether if
33:28 - so uh the turtles gonna need a Penn
33:30 - State so let's make a variable called
33:33 - Penn that's true when the pen is drawing
33:36 - and false when the pen is not drawing so
33:38 - I would say if and then ooh oh I don't
33:41 - need the XY so do I need I need the
33:44 - starting point so the starting point
33:46 - would actually just be translate to that
33:49 - XY and interestingly enough I don't
33:55 - necessarily need to keep track of these
33:56 - things let's think about that I might
33:58 - and then rotate by that angle so when I
34:01 - create it I'm actually just like
34:03 - translating and rotating then forward if
34:06 - this dot pen I want to say line by some
34:11 - amount Oh from zero zero to the amount
34:16 - comma zero like I want to draw a line
34:17 - I'm considering the x-axis to be the
34:19 - kind of universal access I'm gonna
34:21 - rotate from there
34:22 - that makes sense for it to be the y-axis
34:23 - to be honest cuz we might think of it
34:25 - starting going up but whatever I can
34:26 - always change that I'm gonna draw that
34:28 - line and actually so I want to draw the
34:31 - line first and then translate to the end
34:34 - of the line that's what I want to do and
34:35 - rotate is just rotate okay so if I have
34:39 - forward and right I don't think that I
34:41 - need backward what I'm going to do now
34:45 - in here is I'm gonna say for every token
34:51 - on tokens
34:55 - let oh no I have that already yeah let's
34:59 - do this in like a ridiculous way for a
35:01 - second if token equals forward then
35:05 - amount equals oh no I should use an
35:08 - inner I should use a an index here but I
35:12 - because I'm gonna want to look at the
35:14 - next one I is less than tokens dot
35:16 - length I plus plus you know what I'm
35:19 - gonna be even crazier and I'm gonna say
35:22 - index equals zero
35:24 - while index is less than tokens dot
35:26 - length I'm gonna manually kind of
35:29 - iterate over this thing and I'm gonna
35:32 - say let token equal tokens index then
35:40 - I'm gonna say if token equals forward
35:45 - and I want to think of like a different
35:46 - way of organizing this code for sure
35:48 - switch statement I know you're all
35:50 - thinking if token equals forward then
35:53 - amount should be tokens index plus one
35:58 - and then I could say turtle forward
36:02 - amount right so what's in the actual
36:09 - instructions forward right forward right
36:12 - oh this is good only forward and right
36:14 - that's perfect
36:16 - else if token equals right then let
36:24 - angle equal also the next one and then
36:30 - turtle right so I say is it right I mean
36:36 - maybe I should make this turn whatever
36:37 - right by the angle oh and I should say
36:41 - angle mode degrees because the the angle
36:45 - is being given in degrees not in radians
36:47 - if that's not a familiar concept to you
36:49 - I refer you to some other video that
36:51 - they have about radians and angles okay
36:55 - so now okay so now yes so people in the
37:00 - chat are telling me I can say index plus
37:03 - plus so why can I say that let me show
37:06 - you why so let's say I have
37:09 - a variable like I equals zero well we
37:12 - know that I plus plus is the same as
37:15 - saying I equals I plus one so I plus
37:18 - plus but it also returns that value so
37:20 - it resets the value and returns it it
37:22 - actually allows me to move forward so I
37:24 - was going to lazily just say at the end
37:26 - I plus equal to but it would make sense
37:31 - for me to actually say index and index
37:34 - not I index plus plus in here which is
37:36 - like go to the next one and use the
37:40 - value of the next one all at the same
37:42 - time and then afterwards I could go one
37:45 - more because I need to go to the next
37:46 - one okay because not everything will be
37:49 - in a pair we'll see all right so let's
37:51 - look at that and I'm gonna hit refresh
37:53 - mmm and I have an error somewhere Oh -
37:57 - too many curly brackets I'm gonna put
38:04 - this here and here we go whoops nope
38:06 - refresh ah tokens is not defined code
38:11 - split why is tokens not defined
38:14 - where's tokens out to find Sketch up
38:16 - Jess line six Oh
38:18 - because I had I was console logging in I
38:21 - don't need to console log anymore but
38:23 - let's leave that in there turtle is not
38:28 - to fight okay so of course I need to
38:30 - also here reference and add my other
38:35 - JavaScript script which has turtle J yes
38:38 - okay ready so one thing I have to think
38:44 - about here is hmm let's set up a stroke
38:49 - of I got a really deal someone's gonna
38:53 - help me figure out how to turn off this
38:54 - autocomplete that I don't want in Visual
38:56 - Studio code I think someone already did
38:59 - tell me this and I forgot to look at it
39:00 - I think it was Nathan
39:01 - Thank You Nathan oh and there's plus
39:04 - plus index and index plus plus which is
39:06 - something from the chest Becky maybe
39:07 - I'll come back and talk about that a
39:09 - second all right a stroke 255 let's just
39:13 - add stroke wait one just we actually
39:16 - don't need to add that that's fine
39:17 - actually let's make it a little thicker
39:18 - just so it's easier to see stroke wait
39:21 - - oh yeah let's see hmm
39:28 - so why am I not seeing anything so let's
39:29 - console.log some stuff a little
39:31 - debugging here console dot log token and
39:38 - console dot log forward let's see if
39:41 - that happens okay forward for ya
39:44 - ford forward right forward forward so it
39:46 - is getting forward let's look at oh you
39:50 - know what this is a string turtle dot
39:54 - forward amount is gonna have puff
39:56 - trouble understanding that I wonder if I
39:58 - should have this I'm sorry I should
40:01 - probably convert I could do something
40:05 - like this converts it to a number or
40:07 - like parse int might be good let's do
40:10 - parse in that might be a little more
40:12 - Universal so let's add that I was
40:17 - thinking that might be the problem let's
40:18 - console.log amount ooh not a number not
40:30 - a number huh I hold on everybody
40:34 - something is terribly wrong
40:36 - oh so it's actually no thank you
40:40 - breaking news from the chat I actually
40:46 - have to use the plus plus index this is
40:48 - why I didn't want to use that so the
40:50 - chat is going crazy over this mistake
40:52 - listen to the chat please I'm just
40:54 - sitting in a chair it's hard for me to
40:56 - see the chat okay I don't use these
41:00 - things I like to be long-winded in how I
41:02 - code so let's go back to here ha so sad
41:05 - let's let's look here at right so let's
41:09 - let's go and investigate in I equals 0 I
41:12 - plus plus I'm going to see it actually
41:15 - is returning 0 I plus plus you know I
41:21 - could say console.log I plus plus that
41:25 - is giving me the next value but I huh is
41:32 - actually 2 now
41:33 - that doesn't make any sense I'm so
41:36 - confused but plus plus I owe because it
41:39 - already was one right hold on let's
41:41 - start over again I equals zero
41:44 - console.log I plus plus that gives me
41:49 - zero right because even though I is now
41:53 - 1 I plus plus returns the original value
41:56 - of I there we go so that's actually not
41:58 - giving me the correct thing but plus
42:02 - plus I actually returns now getting 2
42:05 - because it already went on to the next
42:07 - one so this increases the value of I and
42:09 - gives you back that new value so that I
42:11 - see this in shorthand all the time it's
42:13 - kind of like a ternary thing that I'm
42:14 - finally getting myself to use so this
42:17 - actually needs to be this plus plus
42:19 - index maybe that I plus plus so gave gap
42:23 - Gabriel in the chat saying I plus plus
42:25 - increments and returns the previous
42:27 - number plus plus I increments and
42:29 - returns the next number that's a nice
42:30 - succinct way of saying it all right so
42:33 - here we go so forward 60 60 so now
42:37 - things are looking up the turtle is
42:40 - printing out the right amount
42:44 - so let's console.log the amount here and
42:50 - let's give this a try all right so I
42:55 - don't need to console.log the token
42:57 - there's too many console logs here 63
43:00 - times how come I didn't see I don't see
43:04 - a line look look at the chat I don't
43:10 - want to look at the chat that's the
43:10 - thing I like to figure these things out
43:11 - myself how come I don't see a line so
43:14 - turtle forward amount when I created the
43:17 - turtle I made it in the middle oh you
43:19 - know it's a little bit weird here is so
43:24 - this is this is not so good I'm a little
43:28 - suspicious that translate and stuff is
43:30 - not going to work the way I want in
43:31 - setup I need to move on to the draw loop
43:34 - like for example if I say translate 100
43:37 - 100 and then ellipse 400 0 0 200 200
43:43 - let's just run this for a second
43:47 - also what why am I not drawing anything
43:53 - Oh
43:55 - draw background zero this whole thing
44:01 - I'm calling background I can see the
44:02 - chat actually saying that now I've been
44:05 - calling background this whole time what
44:07 - a terrible problem okay let's go back
44:09 - and see if my logic now is sound my
44:13 - brain operates more slowly when sitting
44:16 - apparently okay let's try this all right
44:20 - weird I don't know what just happened
44:22 - there Oh background zero let's draw the
44:24 - background zero here there we go look at
44:28 - that turtle graphics um now I kind of
44:33 - feel like forward 60 should probably
44:35 - start pointing up does anybody know how
44:37 - logo actually works turning right it
44:39 - definitely turned the right direction
44:40 - like left would be the other way
44:42 - I don't know that this matters so much
44:43 - I'll leave it like this okay so alright
44:47 - we're kind of good I've got to deal with
44:49 - other commands anyone have an idea I
44:52 - would love to take an idea about how to
44:56 - I mean I could use a switch statement
44:58 - but I kind of like the idea of a lookup
45:01 - table what if what I did is I hat took
45:05 - this idea I wanna try this idea of my
45:07 - commands I have an idea
45:10 - oh this will work if I have it totally
45:14 - have a crazy idea so forward is a
45:17 - function that calls that calls oh boy
45:32 - no it goes here anonymous function is a
45:38 - function that calls a turtle got forward
45:43 - I have to figure out how to do the
45:47 - argument then backward is the same thing
45:53 - but maybe it calls it with so can I give
45:56 - it how do I give this an argument cuz I
45:58 - want to self execute
46:00 - I have to think about this somebody
46:01 - somebody think about this I can bind it
46:03 - with something what is this is this a
46:05 - sound strategy right is then a function
46:11 - that calls turtle dot right in other
46:16 - words what I want to do is say oh but I
46:20 - still I want to say I want to say
46:27 - basically commands token execute oh yeah
46:35 - I can give it an argument huh of course
46:37 - tokens plus plus index look at this so
46:40 - this should do exactly what I was doing
46:42 - right the token is forward execute the
46:45 - function with that command with the
46:46 - argument yeah so I don't need an if
46:50 - statement here all I need is this right
46:55 - because now it's going to and so the
46:58 - argument goes here the argument for
47:03 - backward goes here and I just do
47:05 - negative amount then right is the angle
47:09 - turn right the angle and then this is I
47:13 - don't know if this is a sound solution
47:15 - but I'm intrigued by it left is turn
47:18 - right but by negative the angle okay so
47:24 - this your work this is a little bit nuts
47:26 - looking but let me unpack this for you
47:28 - if I had a function right if I had a
47:30 - function that's you know forward with an
47:33 - amount this is actually what this is
47:36 - doing because I have this resolves
47:39 - itself to this number that's the
47:42 - argument after the command and this
47:45 - resolves itself to a function that's
47:47 - defined up here that I'm calling so I
47:50 - think this is gonna work let's try this
47:53 - and for some reason I feel like having
47:55 - this in a separate I feel like having
48:00 - this in here let me zoom back out like
48:03 - this just makes more sense to me to have
48:05 - this with the turtle class because they
48:06 - kind of go together okay no commands
48:11 - token is not a function why not
48:14 - okay commands is a function commands
48:21 - token mm-hmm or use es6 proxy someone's
48:28 - telling me about mmm I don't know about
48:31 - es6 process so console.log token
48:36 - console.log commands let me just see
48:41 - what's going on here
48:42 - so oh no I just got to the end so it got
48:47 - to the end because there was an invalid
48:49 - token there so so first thing I need to
48:52 - do is make sure if commands token even
48:57 - exists so I want to make sure it exists
49:00 - and if not I want to skip it so this is
49:02 - a little bit of you know kind of
49:03 - pathetic error handling but should work
49:06 - and now I can say whew look at that
49:09 - we've got turtle graphics right I could
49:12 - add another you know left left 64 word
49:17 - 50 oh I don't have any way oh I'm not so
49:21 - I need to real-time interprets real-time
49:24 - interpret this what do I mean by that so
49:27 - what I mean by that is I have already
49:29 - did I didn't really explain these pieces
49:31 - I just realized at the beginning so I
49:34 - made a text area I think I did with an
49:37 - ID and then I used the p5 Dom library
49:39 - okay I did explain this alright so but
49:41 - what I can do is I can attach an event
49:42 - and the event that I want to attach is
49:44 - editor input and then and then basically
49:52 - I want to say like go turtle so anytime
49:55 - I make any change and actually maybe I
49:58 - want it let's start with changed let's
50:01 - just start with change so change is an
50:02 - event that that like only executes when
50:06 - you've finished a task like you hit
50:07 - enter or you tab out of thing so and now
50:11 - I could take all of this and this is my
50:15 - function go turtle and again I'm kind of
50:17 - not really using a more modern es6
50:20 - javascript here but i think that's fine
50:22 - oh the camera
50:25 - back Dan back problem Dan is coming over
50:28 - to the camera by the way the microphone
50:30 - hopefully is like the batteries are low
50:32 - so thank you Matt so once again how my
50:36 - time wise 523 is pretty good yeah I
50:43 - don't know what an es 6 proxy is okay
50:51 - okay all right my back so let me what
50:58 - was I doing
50:58 - yeah okay so now I have goat turtle it
51:02 - should execute whenever I change
51:03 - anything in the editor so let's delete
51:07 - all this and tab out of it ah code dot
51:11 - split is not a function why not oh I've
51:13 - got to get the new stuff from the editor
51:17 - and you know I could select it I know
51:20 - it's a little silly have this global
51:21 - variable but whatever it's fine okay
51:23 - refresh if I do this tab out I got this
51:27 - now I can say you know write 100 but I
51:31 - wanted to live interpret why not right
51:33 - it should be I should be able to write
51:35 - enough error handling that it can like
51:37 - interpret the code live so I'm gonna
51:38 - change this to input and you'll see like
51:41 - when I oh if I had space right oh but I
51:46 - also need to redraw the background ooh
51:51 - this is fun okay so now I can start
51:53 - deleting stuff weird oh and guess what
51:57 - another thing I need to do I need to say
52:00 - push and push and pop because I don't
52:05 - want it to pick up from where it last
52:07 - left off I always wanted to start from
52:10 - the beginning okay I can see all the
52:14 - comments of people helping me fix by
52:15 - Visual Studio studio code okay
52:17 - now this should so first of all I want
52:20 - it to run once at the beginning so I
52:22 - also need to call go turtle at least
52:25 - once all right and now if I start
52:30 - deleting look at that it's actually real
52:35 - time interpreting so I could say forward
52:39 - 510 left one left 90 forward 100 look at
52:46 - that oh I love this
52:47 - it's like real-time interpreting what
52:50 - kind of dare I say somewhat done with
52:53 - this coding challenge but we can't stop
52:56 - here right I mean everybody tells me
52:59 - don't make a video on YouTube that's
53:00 - longer than 20 minutes that's what it's
53:02 - gonna be as long as it is because I want
53:05 - to be able to do this and I think
53:07 - there's a lot more to implement like I
53:09 - should implement pen up and pen down
53:12 - that would be a pretty easy one to do
53:13 - let's do that let's implement that just
53:16 - to show you but I'm gonna ask you I'm
53:18 - gonna ask you maybe we'll make this a
53:20 - community project um I will release the
53:22 - code as is the finished version of this
53:25 - coding challenge on github the coding
53:27 - train website but I will also make a new
53:29 - repository look at the videos link for
53:32 - for a version that people could
53:33 - contribute to so if I do what is pen up
53:36 - and pen down PU I'm so immature
53:40 - PU function would be turtle dot pen
53:45 - equals true right and then PD would be a
53:51 - function that is turtle dot pen equals
53:55 - false so I should be able to use those
53:57 - now right so for example if I just
54:00 - refresh my code here if I say right here
54:04 - pan up it should okay so something
54:09 - didn't work let's think about this
54:11 - turtle pan equals true oh it still moves
54:15 - but it doesn't draw the line that's
54:17 - right so let's look at this again it
54:21 - shouldn't move on you just move on by
54:23 - one index I guess we're gonna have to
54:25 - console.log here let's be let's debug
54:28 - this forward 60
54:31 - let's do forward 40 right 90 pen up
54:36 - forward 100 right 90 forward 50 huh so
54:45 - what happened
54:49 - when it's up you won't write which is I
54:52 - don't want it to but I want it to still
54:54 - move forward like it still should
54:57 - translate let's let's console.log what
55:00 - am i console logging this amount and
55:03 - we're - how'd it get in there with not a
55:05 - number that's weird I don't want it to
55:09 - ever do that so let's look at let's make
55:13 - sure
55:14 - let's count back and console hog this is
55:18 - a it's gonna be a little debugging here
55:19 - going on the chat will probably tell me
55:22 - what's wrong but I'm gonna say console
55:24 - and and let me just actually here now
55:27 - let me just change this to something
55:29 - that I want to test right 90 Ford 50
55:33 - right ninety pen up Ford 50 right ninety
55:39 - oh I need to pen down that's why maybe
55:42 - it's working I never did pen down let's
55:47 - see pen down forward fifty maybe it
55:51 - actually worked
55:52 - okay forward fifty right ninety forward
55:56 - 50 right ninety pen up forward fifty
55:58 - right 90 pen no I should see a line here
56:00 - I should see a last line there it
56:03 - expects a number it shouldn't oh oh
56:08 - because it's actually oh interesting
56:11 - it's doing this for every command so it
56:15 - only should do this if command token so
56:20 - how do I of course so it needs to know
56:22 - not to do this so I could yeah don't
56:31 - increment the token index again
56:33 - yeah but I'm trying to do this within a
56:36 - like elegant way without an if statement
56:38 - like right like somehow I want to like
56:41 - return something to tell it not to go up
56:45 - but I already going up to get the angle
56:47 - so I mean I could like certainly I could
56:51 - say if commands right I mean I could do
56:54 - something like if token so what's a like
56:58 - starts with P like index of P
57:02 - equals zero right that's a quick way to
57:05 - see a car at this is more this makes
57:09 - work car at zero equals as long as token
57:15 - all right if token car at zero equals P
57:19 - someone's going to suggest a better way
57:20 - to do this but let's just get this
57:24 - working right now then commands token
57:29 - hmm just execute it without any
57:33 - arguments else execute it with this and
57:40 - go up by one so this should do the trick
57:42 - right based on what the token is yeah
57:46 - what are like return the amount but I
57:47 - feel like I got to think about this more
57:49 - let's just get let's just make this work
57:51 - let's make this work
57:54 - sketch 32 okay so I have I'm out of I'm
57:58 - incorrect in my like land of brackets if
58:02 - there is an actual command if oh no that
58:05 - if it equals P by the way this should be
58:07 - if it equals P if token car at 0 equals
58:12 - P then just execute the command with no
58:16 - argument otherwise execute commands for
58:17 - the next argument what's wrong here I
58:19 - guess I'm just missing another curly
58:21 - bracket somehow very good for working
58:26 - around forward 50 right 94 what happened
58:31 - here clop what's called that matching oh
58:33 - whoa that pop has to be out here okay
58:36 - there we go
58:37 - right forward 50 right 90 forward 50
58:41 - right 90 pen up didn't go forward 50 pen
58:46 - up which should make the pen be false
58:51 - and then it should go then forward still
58:59 - remove the nut yeah I already got that
59:01 - part
59:01 - the chat's behind me and oh yes a better
59:09 - way would be to have Nathan in the chat
59:11 - so the better way would be to have
59:13 - additional methods in the commands
59:14 - to tell it how many arguments take but
59:15 - hold on I'm gonna like debug why is this
59:17 - not working because let's go look at my
59:21 - turtle object forward if this up and it
59:27 - should stuff it should still move
59:29 - forward even without drawing the amount
59:31 - so why didn't it do that so I guess I'm
59:40 - gonna have to do some console logging I
59:42 - mixed up pen down and pen up
59:43 - that's why thank you very much is that
59:46 - really why pen up oh yeah and down there
59:52 - we go oh look at the chat going crazy I
60:02 - inverted pan up and pen down all right
60:04 - but this is exciting because I can
60:06 - change this to pen down ooh wait
60:09 - it froze do I have some sort of bad
60:12 - infinite loop here hold on I have a
60:15 - problem oh this has to this I always
60:19 - need to go up by the next index bad
60:21 - infinite loop problem hold on edit this
60:28 - little second out okay this was a big
60:30 - problem my index plus plus I need to
60:33 - always go to the next one so I'm gonna
60:34 - have to this this this page is frozen
60:37 - I'm gonna have to kill it somehow and
60:40 - there we go okay so now I should be able
60:42 - to change things around again oh no it's
60:45 - still oh because it didn't
60:47 - it was cached because I didn't have the
60:51 - console of it can I get it back no try
60:56 - again you know I'm just gonna do is kill
60:57 - the server let's kill the server I've
61:00 - got a little local server running with
61:03 - HTTP server let's see if that manages to
61:06 - get get me back here and let me open up
61:10 - the console and this should be good now
61:13 - okay yeah all right I'm back
61:16 - pen down right we can we can make up
61:19 - whatever we want forward 100 forward 10
61:23 - right 10 forward 10 left
61:28 - left 90 pen up forward ooh what just
61:36 - happened
61:39 - something happened something broke
61:42 - background ooh what's this background
61:46 - should be here hmm let's try this again
61:49 - why did things break just there what
61:53 - bugs do I have stroke zero on pen up oh
61:55 - that's an interesting idea
61:57 - that's I love that idea that's a really
61:59 - good idea maybe I won't do that right
62:00 - now because people might want to play
62:02 - with color in a different way but why
62:05 - did it break
62:08 - forward okay forward 10 right 90 forward
62:15 - 20 right 90 pen up why does that kill it
62:23 - and then it doesn't come back there's no
62:26 - error there's a really weird bug I've
62:30 - done index plus plus in two locations no
62:33 - that's right this should move on an
62:34 - extra one with the argument why as soon
62:39 - as I do pen up whereas at the beginning
62:41 - the pen up is fine right if I take this
62:45 - out yeah that's so weird
62:54 - is it depend not getting you rerun the
62:59 - input I need haha
63:01 - CJ coding garden with CJ shout-out to
63:04 - watch go to garden with CJ Thank You CJ
63:06 - for this I sort of forgot that the
63:09 - turtles not this is right here
63:12 - everything this is the sort of
63:14 - reinitializing everything like
63:16 - background re initializes everything the
63:18 - pop here undoes what it does so in a way
63:21 - the transformations are initialized
63:23 - again and then I get the the code from
63:26 - the editor from scratch but I didn't
63:28 - reset the turtle so I should really have
63:30 - a function that says like turtle reset I
63:33 - mean there's a lot of different ways I
63:34 - could do this but let's actually do that
63:36 - so let's let's actually keep all these
63:40 - things
63:41 - put this in a function called reset and
63:47 - say this dot X this dot y this angle and
63:51 - watch this we're gonna watch the magic a
63:53 - Visual Studio code to type my this dot
63:56 - in for me okay so now that should fix
64:01 - that problem X is not defined because I
64:06 - forgot oh wait hmm where's that X is not
64:11 - defined in turtle digest line 30 huh
64:16 - there we go okay so why don't I see
64:19 - anything out this duck pen equals true
64:23 - oh no oh because aha no go turtle oh why
64:31 - isn't it that was such a good idea but
64:34 - oh maybe turtle reset needs to be here
64:36 - before I do push this dot dr now I are
64:41 - not this dot angle there we go thank you
64:45 - thank you to the chat it's this variable
64:49 - this dot Direction dir okay didn't seem
64:55 - to fix anything here okay well let's
65:04 - let's let's be let's actually do some
65:07 - debugging here console dot log this dot
65:10 - X this dot y this dot dir let's look at
65:13 - those things 100 hundred zero right
65:16 - that's good why did I see that twice
65:17 - just now oh because when I initialized
65:20 - the turtle that's fine though so I
65:22 - actually don't need to call this dot
65:24 - reset here whoops if I'm doing it well
65:27 - there we go good now it's not do it it's
65:34 - doing the right thing so now I should be
65:35 - able to just start deleting stuff this
65:38 - is gonna freak it out like so I'm not
65:40 - doing total error checking but now I can
65:42 - say forward 100 there we go for 10 right
65:46 - 90 forward 50 left 90 pen up forward
65:54 - and left 94 100 all right so what did I
66:02 - I broke it so is this invalid forward 10
66:07 - hi over there I'm still here with you
66:10 - right 90 forward 50 left 90 left 90
66:17 - would be go this way pen up forward 10
66:21 - left 90 oh I didn't do pen down bend
66:25 - down there we go it's working all right
66:31 - here's the thing so we've got we've got
66:34 - turtle graphics now we really need to do
66:37 - that the last thing I need to do at
66:39 - least is the repeat button the repeat
66:41 - command I kind of don't want to do the
66:43 - repeat command because it's gonna create
66:45 - a huge set of complications but I can't
66:49 - let this finish at 30 seconds five you
66:52 - say cut down I can't let this go without
66:54 - that because I really want to see they
66:57 - really want to see this at the end and I
66:59 - feel like somebody work out what the
67:01 - logo commands are for this I mean this
67:03 - is kind of like my phyllotaxis spiral
67:05 - kind of thing so let's see if we can get
67:08 - repeat working so again what are the
67:11 - commands I haven't done hi turtle show
67:13 - turtle oh that would be great because we
67:14 - gotta have a turtle also be really nice
67:17 - to animate it going that I haven't done
67:20 - but let's at least think about repeat
67:22 - okay and then you need to use the
67:24 - bracket okay so the idea is that I am
67:29 - going to have something like let me just
67:32 - grab this right this would be like a
67:34 - square or triangle this is what I had
67:36 - before
67:36 - okay all right this should be doable
67:40 - this should be doable I might need some
67:42 - kind of crazy recursion but I think if I
67:45 - just think about only being able to do
67:47 - one repeat right now it'll be a little
67:49 - easier so I definitely need now a new
67:52 - command repeat and I need to change the
67:57 - way I'm splitting up the text so
67:59 - actually yeah some kind of recursion
68:03 - here is gonna be necessary let's
68:04 - actually let's split up
68:06 - array of arrays here
68:07 - go okay I got it so what if I first
68:10 - split by let's look at this basically I
68:15 - want to split by this I want to have
68:21 - token token and then this a full token
68:25 - so I want to split by well if I just
68:32 - split by I feel like I'm thinking show a
68:39 - train of course it should be the train
68:42 - I'm thinking this could be a little this
68:44 - could be a little moment to like edit
68:46 - out well I think here I could just use a
68:52 - regular expression because I could
68:55 - basically match but it's got to be a way
68:58 - to split it up by the problem is like I
69:03 - want to split by this space but not by
69:06 - this space so it needs to be a I could
69:09 - probably like look ahead and look behind
69:11 - right any space that's not in between
69:15 - brackets right look ahead does anybody
69:20 - know look ahead look behind in regular
69:21 - expressions that's what I think I need
69:23 - to do here right no space that's inside
69:28 - of brackets all right so I thought about
69:36 - this for a bit and my idea is to use a
69:38 - regular expression because whoops whoops
69:40 - whoops whoops whoops tries again okay I
69:44 - thought about this for a bit my idea is
69:45 - to use a regular expression oh oh
69:47 - actually Adam is saying you should parse
69:51 - the input sequentially that's also
69:54 - another idea hold on timeout
69:57 - implement a stack push when oh yeah oh
70:03 - that's a token oh that's ah okay usually
70:09 - you don't start by splitting splitting
70:12 - with space won't work just space your
70:14 - key words right doesn't have look behind
70:20 - no no no this is actually a really good
70:22 - idea not to use rep I should use a stack
70:25 - and actually yes so I actually want yeah
70:37 - okay let me think about this boy this is
70:40 - really hard I knew I shouldn't have done
70:41 - the repeat because let's just let me
70:46 - I'll come back to this in a second hold
70:47 - on I got to check my messages here hold
70:53 - on a sec I might have to go this this
70:57 - video might have to end and I'll have to
70:58 - come back into a part two with repeat
71:16 - I didn't realize was 5:45 so I might
71:19 - have to wrap this up I think I'm gonna
71:21 - have to wrap this up and yeah so what I
71:24 - can do I think actually is basically I
71:28 - want I want this bracket to also be a
71:32 - token so basically like just for a
71:36 - second here
71:37 - let's look at how we would split this
71:39 - and I'm gonna have to come back back and
71:41 - do this I'm gonna wrap up this enough to
71:44 - finish this another time
71:47 - because right and I could write I could
71:52 - pull the things out one at a time and
71:54 - then parse it differently that would
71:56 - make more sense actually
72:00 - you need to stream tokens as they go a
72:03 - token stops at a space scanner should be
72:07 - feeding with one character till the
72:08 - whole sentence is read
72:11 - yes okay so I'm gonna stop here so okay
72:21 - because I have to go and this was fun
72:30 - also to be perfectly honest I have some
72:33 - like which I think should figure out the
72:39 - number of art yes and these are all such
72:40 - great suggestions and I'm gonna do it in
72:43 - a part two so and I'll do that next week
72:46 - so let me try to like back up here for
72:50 - me somewhere where I was here okay where
72:52 - I went to say I have to do repeat
72:55 - alright so thank you for free
73:01 - okay so this works now I could put in
73:04 - any kind of commands that I want and get
73:07 - the result of the turtle graphics
73:09 - drawing but I really really want to see
73:12 - this pattern and I could do some kind of
73:15 - crazy thing to generate the text that
73:17 - does this pattern that would be kind of
73:18 - a fun thing to do a little challenge for
73:20 - you watching to actually generate the
73:22 - text which would be very long to then
73:24 - render that but what would be better
73:26 - would be to actually implement this
73:28 - repeat command and so what the repeat
73:31 - command does it basically says repeat
73:33 - has an argument three and then it looks
73:35 - for the commands that are within these
73:37 - square brackets and does those commands
73:39 - three times so I'm gonna have to
73:41 - completely rethink the way that I split
73:44 - the text up just splitting it by like
73:46 - spaces is no good in fact you're
73:48 - probably gonna want to like parse the
73:50 - text as I go it could maybe do some kind
73:52 - of recursion or like a regular
73:54 - expression so this is my challenge to
73:57 - you implement the repeat command I will
74:00 - come back in a future coding challenge
74:02 - and do it based on the way you did it
74:04 - but I'm not gonna do that part of this
74:07 - challenge so right now this is wrapping
74:08 - up look in this video's description two
74:11 - links to the code exactly the way that I
74:14 - left it as well as perhaps a community
74:16 - project where I will accept pull
74:18 - requests to add keeping it simple add
74:20 - some features and and other commands
74:23 - that are part of turtle graphics also we
74:26 - need to Train okay let's just at least
74:28 - add the trained coding tree logo this is
74:35 - how I'm finding it there we go you know
74:39 - what whatever note somebody will find
74:41 - the puget Edit point again also also you
74:51 - know like a grammar some type of like
74:53 - thinking about like a grammar might be
74:56 - away it's like we're really in the weeds
74:57 - of how like compilers and things work in
74:59 - a way we're interpreting in real time
75:01 - somebody else's code and executing it
75:03 - wow this is fun it does need a train so
75:05 - instead of a turtle could have a train
75:07 - or you can make a train a turtle or a
75:08 - train I don't know anymore
75:10 - I'm gonna go thank you for watching this
75:12 - coding
75:12 - where I implemented part of the original
75:16 - logo programming language and stay tuned
75:18 - for part two where I finished this off
75:20 - at least with the repeat command so it
75:22 - can generate some more interesting
75:23 - patterns and I look forward to your your
75:26 - own versions of this please share them
75:28 - with me
75:28 - on Twitter on the coding train comm
75:30 - website and in the comments here ok
75:32 - thank you good bye
75:35 - alright that's gonna be the end of this
75:44 - cuz I am gonna go I am however standing
75:49 - up now so one thing that I want to just
75:58 - mention is a beta testing soft launching
76:02 - a new store design with a design by
76:11 - humans coding train let's see if it
76:14 - comes up in Google well it is if I go to
76:19 - the coding train website and click here
76:22 - now yeah this should take me there so
76:26 - you can see this is some new stuff some
76:28 - new designs that thank you - Jason hey
76:30 - Glen the the illustrator designer this
76:33 - is like my favorite this coding is
76:35 - magical little group but anyway so if
76:37 - you're interested people often ask and
76:39 - so I'm making this available these are
76:41 - also gifts that I will send out for
76:42 - patreon subscribers
76:43 - I gotta admit something those of you who
76:46 - are members are patreon subscribers i am
76:49 - i've already was behind on the mailing
76:52 - stuff that I'm doing and I had a
76:54 - wonderful person who would help me once
76:56 - a month in New York with getting
76:57 - mailings out and who's no longer
77:00 - available so I need to find a new person
77:01 - and I really said at the end of the
77:03 - month I have a backlog so apologies
77:05 - about that I love a bunch of you have
77:07 - met direct message to me and slack I
77:09 - will write back to you I see those like
77:10 - notes pop up and my heart sinks and a
77:13 - part of me wants to like take away the
77:16 - levels of funding where I send people
77:18 - gifts cuz I'm so bad at I do get them to
77:20 - eventually but so bad at it but I don't
77:23 - know but if you want as your patron
77:25 - gift one of these that's really easy and
77:28 - I could actually do that for you
77:29 - instantly because I don't have to like
77:30 - sign and mail myself so bla bla bla bla
77:33 - bla I am going to go oh go Dodgers you
77:40 - go watch the World Series no worry old
77:44 - school reals that doesn't really thank
77:45 - you Raghav and thank you again to stuff
77:51 - chef Anya for being here I learned by
77:53 - the way that the pronunciation of her
77:54 - name is jeff' Anya I don't even think
77:57 - Stefan yeah I might not be saying it
77:59 - correctly but I'm attempting to and yeah
78:03 - so I'll be back next Friday next Friday
78:05 - is a really tricky day for me to be
78:07 - honest I have a whole workshop that I'm
78:09 - teaching next Friday so hopefully I'll
78:11 - be back next Friday for some reason I'm
78:12 - not back next Friday I'll make make that
78:14 - time up maybe the following week is also
78:16 - I got a kind of take some time to
78:18 - stretch and relax so hopefully I won't
78:22 - be gone for too long thank you to
78:24 - everyone and you're nice so I think
78:26 - there is a dis dot sticker so if like I
78:28 - click here someone's asking like you can
78:31 - get this as a sticker as well I haven't
78:33 - actually ordered any of these I can
78:35 - order them in bulk on sticker mule so
78:38 - I'm gonna try to do that as well so you
78:39 - can get this as a sticker as well for a
78:42 - low low price of three dollars so and
78:45 - please send your thoughts and comments
78:48 - and Sebastian of support and to Jason
78:51 - hagglund who did all these designs okay
78:58 - Dan will you ever finish agario part
79:01 - three I would like to say yes I have a
79:06 - bad habit of starting things and saying
79:08 - I'm gonna do another part and never
79:09 - getting to them I hope that's not true
79:11 - of this logo challenge so I got to do a
79:14 - better job of that I don't know what to
79:16 - tell you I don't have a good system for
79:18 - keeping track of things right now I'm
79:20 - feeling like to be honest like very over
79:22 - overwhelmed with all the things I have
79:24 - to do it's which comes with like having
79:26 - a full time job and trying to do this
79:28 - YouTube stuff but things open up for me
79:30 - a lot in January in the spring semester
79:32 - so remind me about these things I will
79:34 - try to get to them and release the code
79:39 - so we could try making it on our own let
79:41 - me do that right now what's the best way
79:45 - for me to do that
79:47 - so let's make a repo let me do this real
79:50 - quick before I go okay a couple things
80:00 - let me just do this what should I call
80:06 - this logo I'll just call this logo
80:11 - coding train look I'll just call it logo
80:14 - like I might rename the repository repo
80:19 - for implementation of logo in JavaScript
80:23 - p5 initialized with the readme license
80:31 - and oh sorry about that you'll have to
80:33 - excuse me for slowly walking over to
80:35 - turn the camera on and then of fr3 foo
80:47 - asks do you check your email info the
80:48 - current cycle eventually yes eventually
80:53 - I do check it I actually I probably read
80:56 - the comments on the YouTube channel
80:57 - before I get to that so now there's
81:01 - probably a totally different way to
81:03 - organize this repo and everything but
81:05 - I'm just going to do this commit code
81:09 - from livestream and I'm going to do this
81:12 - and I am also going to settings pages
81:28 - I'll turn that on and we're good to go
81:32 - okay everybody good bye thank you for
81:35 - watching I'll be back soon I hope all
81:38 - you have to do is uh check the page of
81:41 - the channel when I schedule a new
81:42 - livestream it appears they're typically
81:44 - on Fridays at some arbitrary time these
81:46 - days later in the afternoon Eastern Time
81:48 - but who knows if you have if you're able
81:51 - to join as a member
81:52 - that's great I'll give Sun you a slack
81:54 - invite and I kind of keep people up to
81:56 - date on my schedule in there too okay
81:58 - goodbye everybody thank you so much for
82:01 - tuning in today Wow oh I don't I'm not
82:04 - ready to turn the stream off here it is
82:08 - where is that page stop streaming here
82:10 - it is goodbye