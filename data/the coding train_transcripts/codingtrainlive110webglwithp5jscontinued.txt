00:10 - I'm loading slowly very very very slowly
00:17 - [Music]
00:20 - please place your corners into the slots
00:26 - so I can load more quickly more corners
00:30 - super chat pay speed up my buffering all
00:39 - right yeah I could spend more time
00:41 - working on that and rehearsing that but
00:45 - here I am it is me
00:47 - dan Schiffman on a special Thursday
00:50 - coding train hopefully coming out to you
00:53 - at regular normal buffering speed let me
00:56 - just switch back to my laptop view yeah
01:00 - it's still there maybe as a coding
01:05 - challenge we should make buffering
01:07 - animations today oh and then the kids
01:09 - went off of course all right so much for
01:16 - my stick they're really really high I'm
01:21 - getting high ratings getting high
01:23 - ratings for my ridiculously bad goofing
01:26 - around all right let me see here now how
01:27 - do I make that go away it went away and
01:32 - here we are
01:37 - hello and welcome to a special Friday
01:41 - edition
01:49 - every two or three minutes I'm gonna
01:51 - come back to buffering I'm buffering
01:54 - buffering buffering and buffering
02:12 - how high would this thing go what you
02:26 - will be watching today is a person a
02:28 - human being on the internet using a
02:33 - standard desk that goes down and up and
02:38 - down and up until you put more money
02:42 - feed it into the machine
02:43 - send me your Bitcoin your crypto
02:46 - currency of choice and then I will come
02:48 - to you somebody actually gave me a super
02:55 - chat donation that was a joke I'm doing
02:58 - fine everything's fine I'm okay
03:03 - all right here we go oh wait hello and
03:11 - welcome to a special Thursday coding
03:15 - train episode with me your host Dan
03:17 - shipment
03:18 - Cody train as you know is brought to you
03:20 - by what water and I don't want to buzz
03:26 - market this because because of the
03:28 - what's the buffering I've had to use a
03:30 - plastic bottle can you see what's good
03:36 - [Music]
03:41 - I'm here a couple extra times this week
03:44 - I was here on Tuesday and I'm here today
03:45 - because I'm trying to make up for some
03:49 - missed weeks in November and December
03:51 - I will also be back tomorrow morning if
03:53 - all goes according to plan and my
03:56 - broadcasting setup still works
03:58 - and I'm going to be today continuing the
04:01 - WebGL 3d in p5.js tutorials that I was
04:05 - doing earlier this week on Tuesday so
04:07 - that's what I'm gonna get started on
04:08 - very very soon
04:14 - and I'm looking at the chat and uh some
04:19 - people are asking some questions where
04:20 - can I buy a shirt of the channel Oh are
04:22 - you looking for a last minute holiday
04:24 - gift buffering nevermind forget about
04:29 - the buffering if you if you would if you
04:32 - feel like getting some coding trained
04:34 - merchandise the URL for that is coding
04:36 - train dot Storenvy comm you can also go
04:40 - to amazon.com slash shop the coding
04:45 - train and find all sorts of book
04:48 - recommendations and things you can get
04:49 - your very own copy of the code e-trade
04:53 - brought to you by a million random
04:55 - digits with 100,000 normal deviants it's
04:58 - my favorite book it's the book that I
05:00 - read to my children at night before they
05:02 - go to sleep and in fact it is the book
05:04 - that I will read some with which to you
05:06 - right now are my random numbers coming
05:15 - at you in regular internet speed or
05:17 - slower forty nine thousand eight hundred
05:25 - and forty seven sixteen thousand two
05:36 - hundred and twelve sixty nine thousand
05:44 - two hundred and seventy nine eighty
05:53 - seven thousand eight hundred eighty
06:04 - [Music]
06:15 - [Music]
06:26 - as always I always forget the
06:40 - [Music]
07:09 - [Music]
07:11 - okay I'm warmed up now so let me figure
07:15 - out where we were last time I'm not
07:18 - organized so I got to get myself
07:19 - organized here
07:20 - oh whoops getting hot in here let's see
07:25 - so first thing I want to do is open up
07:27 - terminal and second thing I want to is
07:31 - go to my finder
07:32 - maybe the desktop web GL p5 WebGL so
07:35 - this is where I was working on some
07:38 - WebGL stuff so let me go there so I need
07:45 - to go to the desktop
07:49 - oh this computer just went away come
07:53 - back WebGL and let's run a server let's
08:08 - see what we last left off uh rest we had
08:12 - these spinning normal tourists so what
08:17 - I'm going to do first but there was a
08:19 - lot of debugging and figuring stuff out
08:21 - so I'm gonna see if from that session I
08:23 - can make a tutorial that kind of makes
08:27 - some sense and covers the different
08:28 - pieces I corrected some things in these
08:31 - so the things that I want to have open
08:34 - are the reference I know that Simon has
08:37 - made a wonderful p5 WebGL cheat sheet I
08:42 - might call this which I can which allows
08:46 - me to quickly look at all the different
08:49 - kinds of light and materials great
08:54 - ambient material normal excellent
08:56 - excellent excellent okay and then now
08:59 - here's the tricky thing you might recall
09:02 - whoops that last time on last coding
09:09 - train I had this whole WebGL diagram all
09:13 - written over here on this whiteboard
09:15 - right behind me it's been erased
09:18 - so I think I might want to try to
09:20 - recreate that does anybody have a
09:22 - screenshot
09:24 - for me that you can share probably in
09:27 - the patron slack group oh I should
09:29 - mention just as a matter of update
09:31 - patreon did make an announcement this
09:33 - week that they are not going to
09:36 - implement the features that just about
09:38 - everyone universally did not like
09:41 - creators and patrons included so if you
09:44 - did cancel your pledge because of the
09:46 - patreon fees changes that's totally
09:50 - understandable you're not at all
09:52 - required to repledge but if you want it
09:54 - to repledge you can and just as a
09:56 - reminder pledging to patreon is with
09:59 - that you get an invite to the slack
10:01 - group and some other various things at
10:03 - different levels okay so everyone wants
10:07 - me to do shader shaders it's not going
10:08 - to happen today but it is on my list of
10:10 - things to do at some point eventually so
10:15 - okay I'm waiting for my someone to give
10:18 - me a screenshot of that taya Graham I
10:20 - guess I could look it up myself that
10:21 - could not be so lazy Oh somebody I got
10:23 - it already
10:24 - thank you Matthew in the slack channel
10:28 - so let's see I'm gonna attempt to
10:31 - recreate this as much as possible this
10:36 - so this is kind of silly that I'm doing
10:39 - this oh and my eyesight is just not good
10:41 - enough so I wrote WebGL here and I had a
10:47 - list 3d geometry camera alright 3d
10:55 - geometry camera material texture likes
11:09 - me certain how in a different in a
11:12 - different order
11:13 - that's fine where's my eraser I'll just
11:15 - use this whoo thanks texture material
11:27 - lights
11:30 - what else do I got over here normal I
11:34 - talked about but I talked about that
11:36 - later
11:37 - so and then I just said I just had over
11:39 - here create canvas I just said something
11:52 - like blank comma blank comma web GL
11:58 - something like this approximately just
12:05 - to kind of make it look vaguely similar
12:07 - to what it was before so that was 3d
12:13 - what else is there
12:17 - hardware accelerated outright I was
12:19 - talking about open GL and hard ware
12:27 - accelerated and that's good enough I
12:36 - think okay so okay so
12:44 - n whoops where am i over here now okay
12:52 - so thank you for that Matthew and okay
13:04 - now so let me think here what now here's
13:07 - the other question this code oh I need
13:11 - to open up the code this code is a mess
13:17 - of things so whatever did I leave it
13:24 - what was at the end of I think I might
13:29 - just have to look at my live stream from
13:30 - last time so if I look for if I look for
13:39 - hello computer this is the previous live
13:43 - stream from a couple days ago and at
13:48 - some point
13:51 - I start talking about material
14:04 - I'm watching myself sorry you guys can't
14:06 - hear this okay so this looks like I
14:13 - think where the code was where it left
14:15 - off so it was just a Taurus rotating
14:23 - with no light maybe I was the background
14:27 - there just black sorry I went back too
14:40 - far
14:52 - wait there's me into XP the political 3
15:02 - yeah okay okay yep there we just needed
15:05 - to see that okay now let me come back to
15:07 - here well save Oh caching or not does it
15:25 - am I not looking at the right sketch now
15:29 - I am oh there we go
15:53 - was it like much thinner or something
15:55 - there we go uh use the arrow keys to
15:59 - skip forward or backward five seconds
16:01 - that's great I didn't know that yes
16:04 - Topher asks so he's going to redo the
16:07 - materials and light stuff yeah so I
16:09 - apologize for this but I did look it
16:11 - over and I think this is one of those
16:12 - cases where I was like swapping out the
16:15 - p5 library and then I made the it just
16:18 - it's not worth it's not a it's not worth
16:21 - to having somebody have to watch a like
16:23 - hour-long debugging session for me if
16:26 - they just want to see a tutorial about
16:28 - material and lights and B if if Matty
16:32 - and I were to edit that our thing down
16:34 - it's just gonna be so jumbled and messy
16:35 - that's actually mmm it's a better use of
16:38 - time to just spend the 20 minutes to do
16:40 - the tutorial again the only thing that's
16:43 - a kind of an issue is it's it I'm kind
16:45 - of my brain is out of sorts that don't
16:46 - really when I do these sessions I have a
16:48 - very clear picture of where I left left
16:50 - off last left off and what I was saying
16:52 - and I actually kind of completely
16:53 - forgotten but I think if I start from
16:55 - here and just open with what I'm gonna
16:58 - do our materials and lights and so what
17:01 - I need is what I also need is the p5
17:10 - WebGL tutorial this is very getting
17:16 - started definitely want this and I want
17:20 - to have lights and materials okay so I
17:28 - want to take a little bit I'm gonna
17:30 - leave it as is okay the other thing that
17:33 - I would like to do is I remember we
17:41 - found some really key bugs and I was
17:43 - kind of going back to old versions of p5
17:45 - and new versions to like fix those bugs
17:47 - so let me let's take a minute if you
17:51 - guys could help me remember this oops
17:55 - let me first look and see did anyone
17:59 - post any of these issues so this is two
18:04 - days ago I wonder if this is somebody
18:05 - who
18:06 - this issue because I'm planning to do a
18:09 - video about this Oh non-square this so
18:18 - this is interesting we're gonna look at
18:19 - this when we get to textures there's
18:25 - also this from nine days ago so this is
18:28 - way before so what I want to look at is
18:32 - lights WebGL let's look for that this is
18:39 - a very old issue so I'm gonna I think
18:46 - this one has been so I think one of the
18:58 - things we're gonna want to do is file
18:59 - some issues so so I'm gonna keep track
19:09 - of this stuff also so what were the
19:14 - issues where can I keep track of this
19:16 - stuff I'm gonna make a so I'm gonna file
19:19 - these issues later in the stream so that
19:21 - you that everyone doesn't have to sit
19:23 - through it right now if you really just
19:24 - want to look at the tutorial material
19:26 - but like I really should have kept these
19:28 - notes before and what version was
19:33 - sixteen point light and directional
19:38 - light calls overwrite previous lights
19:43 - there is only one rather okay so that's
19:48 - one thing that's what I remember where
19:55 - there's some other things there was
19:56 - something with I think yeah I'm looking
20:02 - to see in the chat you know what
20:08 - something I'm kind of interested in I
20:09 - was actually curious to redo the bees
20:11 - and bombs a cube wave in processing in P
20:14 - 3d mode just to kind of compare and see
20:16 - what it looks like there if there's time
20:17 - today and people are interested in that
20:19 - I would love to do
20:20 - same with directional lights yeah all
20:22 - right so hopefully these will come up
20:24 - again so right now I am in I'm using the
20:32 - old version currently using the old
20:35 - version which I don't want to use but
20:39 - that will work what I do want to see is
20:41 - does the normal material yeah okay
20:50 - that's fine so I'm going to for the
20:53 - purpose of this tutorial
20:57 - use the older version of p5 that can get
21:02 - a little more space here and here we go
21:06 - all right neural networks in machine
21:11 - learning coming in 2018 to January
21:14 - that's what imma get started this week
21:15 - and next week is really about me trying
21:17 - to wrap up some stuff although I do hope
21:19 - to do some tutorials around a word to
21:21 - Beck and maybe even some clustering some
21:24 - machine learning topics that without
21:26 - neural networks before the end of next
21:29 - week alright so let me get started here
21:31 - in the newer one the Y is not flipped
21:34 - Thank You Simon for mentioning that so
21:37 - in other words for the lights or for the
21:40 - oh the lights are the lights aren't
21:46 - flipped for the is that just for the
21:50 - lights so check check Y Y Direction zero
22:00 - point five point one six versus zero
22:03 - point five point seven so let me just
22:05 - check really quickly this so in other
22:09 - words if I say translate if I say
22:17 - translate v zero comma 50 with Y being
22:20 - flipped it went down if it went down
22:25 - okay but in the new version where a p5
22:32 - whoa and I get the wireframe so that's
22:37 - right
22:38 - so why isn't flips it goes down in both
22:43 - versions but do the lights do something
22:45 - different all right let's just humor me
22:48 - for a second here point light what do I
22:56 - use for a point light first I do first I
23:00 - do the color and then the location zero
23:06 - 50 zero go I have the fill on turn that
23:15 - off so this is very hard for me to see
23:19 - where the light is because it's not a
23:21 - sphere so the light is sorry everybody
23:33 - but this is sort of important for me to
23:35 - figure out
23:41 - okay so negative 200 the light is coming
23:43 - from above the light is coming from
23:46 - above so that's working correctly and in
23:50 - that's in the new version on the old
24:00 - version it's the light so as long as I
24:02 - don't move the Y location of the lights
24:04 - around I can have multiple point lights
24:08 - if I have one point let you know what
24:10 - I'm gonna do here's what I'm gonna do
24:14 - there's I know where I'm gonna use the
24:17 - current version of p5 and then at any
24:21 - point in this tutorial if I want to show
24:23 - two lights I'm going to if I want to
24:28 - show two lights I'm going to switch it
24:32 - and that'll bet the switching won't get
24:34 - edited out to the old version of the
24:35 - library and so any bugs that are in the
24:37 - old version of library I don't care
24:39 - about those yeah so the light being
24:41 - positioned in the correct place in the
24:42 - new lot new version is correct so I need
24:46 - to go back to take out this point light
24:49 - take out this translate put this back to
24:52 - Taurus it's 100 and put this in fill 255
24:56 - oops and zero zero there we go okay so
25:04 - here we go so I am going to get started
25:09 - now
25:10 - thanks thanks everybody for your
25:11 - patience as I try to like sort this out
25:14 - this has been really difficult to do
25:16 - these tutorials but I feel like it's
25:17 - important to if if WebGL is to be a part
25:22 - of p5 and all this work that went into
25:24 - it over the summer to get some more
25:26 - people trying it and offer and helping
25:28 - with fixing some of these bugs and
25:29 - finding some of these bugs that's only a
25:30 - good thing I hope I think that's my
25:33 - desire my intentions are in the right
25:34 - place I'm sure I screw everything up
25:36 - though most of the time all right okay
25:39 - this is yet another video about 3d 3d or
25:45 - WebGL rendering mode in p5 yes this is
25:48 - where I last left off essentially in the
25:50 - lap in the previous video where I spent
25:52 - most of my time
25:54 - simply looking at 3d geometry so what
25:56 - does it mean to suddenly use translate
25:58 - with a z-axis what does it mean to
26:00 - rotate with an x-axis a y-axis or is the
26:02 - axis and what kinds of 3d primitives are
26:04 - there cone box tourists all of these
26:11 - things so but what I want to explore in
26:13 - this video is material and lights what
26:17 - are these things so material describes
26:22 - the skin of the 3d object how does that
26:26 - skin behave when it receives when it
26:29 - when when light shines on it right in a
26:32 - 2d world there's no such thing as lights
26:34 - we are just setting colors precisely
26:36 - we're saying draw this rectangle with
26:38 - this color but in the 3d renderer we
26:40 - have the option of saying hey draw this
26:42 - shape with this material and then shine
26:44 - this light on it and depending on what
26:46 - material we use depending on what light
26:48 - we use and where we place that light we
26:49 - can create different looks and feels
26:51 - we've relinquished a lot of control to
26:53 - the sort of pixel level determination of
26:57 - what we're drawing but we're now gaining
26:59 - this illusion of shadowing and lights
27:01 - and three-dimensional perspective so
27:03 - let's go take a look at that now first
27:04 - of all there is action are actually
27:07 - already a material present in this
27:10 - particular example I would let's to make
27:12 - a list of those things and write them on
27:13 - the board but I'm actually just going to
27:15 - go here actually show you this is a
27:17 - quick cheat sheet that coding trained
27:20 - viewer Simon made so I'm gonna go under
27:23 - material here so you can see these are
27:25 - some different kinds of material that
27:27 - we're going to explore and at some point
27:30 - I want to get into texture and maybe
27:31 - shaders as well so but I'm gonna go back
27:34 - to this getting started tutorial and you
27:36 - can see at one point actually or in a
27:41 - lot of 3d environments there's something
27:42 - called a basic material a basic material
27:45 - is a material that fills the shapes
27:47 - surface with color and just an act which
27:50 - does not respond to light and that's
27:52 - actually what Phil is doing so in this
27:54 - in this particular example this fill
27:57 - function is applying a basic material
28:00 - and
28:00 - if I were to change if I were to add a
28:02 - little bit of red to that we would see
28:06 - we would see suddenly yeah that's a
28:08 - little bit better add some more red not
28:09 - that barely made a change there we go we
28:12 - can see that I'm altering the color of
28:14 - this beautiful spinning Taurus okay so
28:17 - step one now what if we wanted to add
28:20 - some lights to this scene so the first
28:24 - kind of light oh yeah let's let's let's
28:27 - go with this the first kind of light
28:29 - that we could add I don't want doing
28:31 - lights first I should probably just keep
28:32 - talking about materials ah let's get
28:34 - back my materials okay let's add a
28:37 - material now now what are the materials
28:39 - that we can choose to add is something
28:42 - called a normal material hmm you might
28:44 - be asking what isn't normal let's talk
28:48 - about a normal for a second I just feel
28:53 - like alright I ever feel not reading the
28:58 - YouTube chat so you all clean up your
29:00 - act
29:01 - all right um I'm taking a little pause
29:05 - here for a second all right so so let's
29:13 - first experiment with material so I'm
29:15 - actually gonna take out the film and I'm
29:17 - going to add something called a normal
29:19 - material normal norm normal material and
29:23 - let's see what happens look what I have
29:26 - now I have this beautiful rainbow
29:29 - colored Taurus in fact what the normal
29:31 - material does is assigned to every
29:34 - vertex which has an XYZ position and
29:37 - assigns the color the exposition of the
29:39 - vertex relative to the object center
29:41 - define it gives it it's red value its Y
29:45 - position it's green value and it's Z
29:47 - position it's blue value and this is
29:49 - actually really this normal material is
29:50 - just for the purpose of debugging so if
29:52 - you haven't figured out what colors you
29:53 - want things to be what textures you just
29:55 - want to see your 3d shapes and be able
29:56 - to see them as 3d just adding a normal
29:59 - material is useful now the reason I so
30:05 - time now for a second so I was just
30:08 - gonna I was gonna use this as an
30:09 - opportunity to segue into talking about
30:11 - what a normal is which is kind of
30:13 - relevant because the normal is the
30:16 - vector that is perpendicular to the
30:18 - plane and it and that's kind of how
30:24 - determines how the light reflects off of
30:25 - it but is normal material called normal
30:29 - material actually because of this normal
30:32 - vector or is it just called normal
30:35 - material because it's like the sort or
30:38 - the word normal it's normal normal boy
30:43 - I'm doing so much better than last time
30:44 - aren't I
30:51 - normal material
31:03 - it is a representation of the normals
31:05 - right okay so that's that's good all
31:07 - right so I'm gonna keep going and I
31:10 - don't think I talked about this
31:12 - see I just having trouble remembering
31:14 - when I talked about in the previous
31:15 - video but okay talking about the normal
31:23 - material is a nice excuse for us to just
31:26 - remind ourselves that this shape right
31:30 - isn't actually a smooth shape if I turn
31:34 - the stroke back on and turn the fill
31:37 - back on whoops
31:40 - oh it says no stroke there we can see
31:45 - this is actually just a tiled collection
31:48 - of polygons and what the normal is the
31:50 - normal vector for any given polygon like
31:54 - say this triangle here is a vector that
31:57 - points outward from the polygon is
31:59 - perpendicular to the plane and that
32:02 - vector that normal vector is associated
32:05 - with how the light reflects off of that
32:08 - plane so normal material is using the
32:10 - normal vector to assign an RGB value
32:14 - okay and but really really in this case
32:16 - it's just something that you would use
32:18 - for debugging or is kind of like a
32:20 - default material and or if you just like
32:22 - rainbows and you want everything to be
32:23 - rainbow colored hey why not use the
32:26 - normal material so let's go back here
32:28 - okay so now we're back ah okay so now
32:31 - let's start thinking about some actual
32:33 - materials that we might want to use for
32:36 - example an ambient material so I'm gonna
32:40 - call this an ambient material whoops I'm
32:45 - gonna get rid of the fill and I mean I
32:47 - shouldn't have had to fill there the on
32:48 - normal you could only have one material
32:50 - so fill you can think of its basic
32:52 - material so normal material just over
32:54 - wrote that I'm gonna say ambient
32:55 - material and I'm going to say 0 0 255
32:59 - let's see what's going on now now look
33:01 - at this why is that not blue
33:03 - I said ambience material but it's not
33:06 - blue why an ambient material unlike a
33:09 - basic material or fill which just gives
33:12 - the shape that color no matter what the
33:13 - lights are an ambient material is a
33:15 - material that reflects light so only if
33:19 - there is light of a particular color
33:21 - will it reflect that so for example I
33:24 - could add some ambient light and and I'm
33:27 - gonna put that the order doesn't matter
33:29 - so I mean order order doesn't matter but
33:30 - doesn't matter I'm gonna say ambient
33:32 - light and I'm gonna say I'm gonna give a
33:34 - red light and you might ask the question
33:36 - now uh so if I have an ambient material
33:39 - of blue and a ambient light of red
33:44 - shouldn't I see purple I still only see
33:48 - black and because the material can only
33:52 - reflect the color blue and only shining
33:55 - the color red on it so this is something
33:57 - really have to think about you could try
33:59 - to imagine like a reflective surface
34:00 - that only reflects one kind of color and
34:03 - you have the flashlight of a certain
34:04 - color that's the kind of thing you need
34:05 - to be thinking about so what I might do
34:07 - here is just make the ambient color
34:08 - white the ambient light white and you
34:10 - can see now I've got the blue and I
34:12 - forgot to say no stroke so we can see
34:16 - now this looks just like the fill so an
34:18 - ambient material blue with a blue light
34:21 - it looks exactly the same now here's
34:22 - something interesting though what if I
34:25 - were to there's a couple things one is I
34:27 - could actually just make the material
34:30 - white and then shine a blue light on it
34:34 - exactly the same result that's important
34:37 - to realize that's exactly the same
34:38 - result obviously it's going to be
34:40 - different if there's lots of shapes with
34:41 - different material colors but what I
34:43 - want to point out here which I think is
34:45 - important is let me just change this
34:46 - torus for a second to a sphere a
34:50 - beautiful round 3-dimensional sphere
34:53 - whoa way too big 100 that looks to me
34:59 - just like an ellipse if you look closely
35:02 - you can kind of see there's some kind of
35:04 - spinning or rotating here but an ambient
35:07 - light the thing gorillas about ambient
35:08 - light is an ambient light is a light
35:11 - that shines from everywhere in all
35:14 - directions so it's kind of like a
35:15 - magical light it's not coming from a
35:17 - particular source it's not shining in a
35:20 - particular direction and so in this case
35:22 - I don't really see the three-dimensional
35:25 - quality of this sphere
35:26 - because there's no shadowing so in this
35:29 - case what I want to look at is what if I
35:31 - use something called a point light so
35:32 - we're gonna look at ambient light point
35:34 - light and a directional light a point
35:37 - light is a light that I could place
35:39 - think of a light bulb that I can place
35:40 - into the scene it shines in all
35:42 - directions from a particular location so
35:45 - what if I wanted to put a point light
35:47 - over here let's do that so I'm gonna say
35:51 - point light and I still give it the
35:55 - color 0 0 to 255 blue but now it's not
35:57 - ambient it needs to give it a location
35:59 - so I'm gonna say 0 negative 200 0 so I
36:04 - want it just to be a point light that's
36:06 - positioned over here at the edge where
36:08 - my finger is right there okay here we go
36:10 - ready
36:10 - well oh I'm sorry I put it at the Y
36:17 - location so it actually worked
36:19 - I put it above I just got the wrong spot
36:21 - so it's important to look at the
36:22 - documentation if we look at Simon's
36:24 - cheat sheet here point light our G be
36:29 - that RGB X Y Z so the x position is this
36:33 - one and I'm gonna make that 200 Oneg is
36:38 - 200 I wanted to put it over there
36:40 - oops and go back to my sketch and there
36:42 - we go we can see it's the left I could
36:43 - actually give it you know I could say
36:46 - Mouse X minus 200 or Mouse Y minus 200
36:51 - and now you can see I have this point
36:53 - light that I can move around and I could
36:56 - put two point lights in the scene
37:00 - timeout
37:01 - edit oops
37:10 - and say and say add one point like
37:14 - negative 200 comma zero and another
37:18 - point light at zero 200 comma zero and
37:23 - give make that one red and we could see
37:28 - whoops what whatever it doesn't matter
37:31 - the point is I've put exam in different
37:33 - locations but you can see now I have a
37:34 - point light shining for him over here
37:36 - that's red and a point light shining for
37:38 - him over here that's blue so point
37:39 - lights are things you can position move
37:41 - and give them different colors now let's
37:44 - think about material for a second so
37:45 - this is ambient material ambient
37:48 - material is a material that reflects
37:50 - ambient it reflects light there is
37:53 - another kind of material that also
37:55 - reflects light but reflects in a
37:57 - slightly different way if you want a
37:58 - different look and that's called
37:59 - specular material and specular material
38:02 - is a material that's shinier more
38:04 - metallic and kind of you know a billiard
38:06 - ball or water or metal or something you
38:09 - can get a slightly different look so
38:10 - let's just look at that I'm gonna say a
38:12 - specular material and I'm gonna leave
38:14 - the color white meaning the material is
38:16 - white so it's just reflecting whatever
38:17 - light is there and we can see look at
38:20 - this you can kind of see this like shiny
38:23 - quality to this so I might want to do
38:25 - some more experimentation of sphere like
38:27 - the detail of the sphere and where it is
38:29 - and how bright the light is in different
38:30 - lights you can see that the specular
38:32 - material is quite kind of dark word you
38:33 - can you could imagine if maybe this were
38:36 - a much smaller sphere I don't know that
38:41 - didn't really change I think nevermind
38:42 - I'll I'll leave it to you to experiment
38:48 - with different materials and different
38:49 - colored lights and different shapes okay
38:51 - so I'm gonna go back to ambient material
38:55 - and point light now I want to look at
38:59 - the last I think the last thing we've
39:02 - got to look at here is directional light
39:04 - so what is a directional light
39:05 - directional line is an interesting thing
39:06 - it's a light that has a direction but no
39:10 - position meaning it's kind of infinitely
39:13 - far away so if you could imagine I'm in
39:15 - the 3d scene right here and I'm gonna
39:17 - say the Sun is over Earth hair right the
39:20 - Sun is not infinitely far away but it's
39:22 - so
39:23 - Pharr that you can kind of imagine it so
39:25 - I'm pointing in the direction of where
39:26 - the lights coming from so this is
39:28 - different than what you might think of
39:30 - as a spotlight or a flashlight which
39:33 - would be like the combination of a point
39:36 - light and a directional light a light at
39:38 - a certain point that points in a certain
39:39 - direction that as far as I know is not
39:41 - implemented yet in P five WebGL renderer
39:44 - but you can have a point light and or or
39:46 - directional light so let's make a
39:48 - directional light happen and edit point
39:53 - here while I go back to the p5 library
40:01 - so instead of having a blue and what's
40:05 - yellow red and green right let's try to
40:08 - pick the Sun instead of having a blue
40:13 - blue point light I'm gonna change this
40:16 - to directional light and now this vector
40:20 - this vector over here describes
40:24 - describes the direction of the light so
40:26 - if I want to have the light coming from
40:28 - over there like coming from the right I
40:33 - want to say point the vector points one
40:36 - in the X direction so I'm going to say
40:38 - one zero zero and let's go refresh this
40:41 - and you can see there's the yellow light
40:43 - coming from the right this direction
40:46 - okay and if I were to say negative one
40:49 - there it's coming from the other side if
40:52 - I were to say it's coming from the front
40:57 - like whereas if your eyes are the light
40:59 - you can see that my eyes are shining
41:02 - like directly into the scene so you can
41:03 - see how powerful this directional light
41:05 - can be so here's the thing one thing we
41:08 - could do now is we could have a
41:10 - directional light point into the scene
41:12 - based on the mouse so for example I
41:14 - could make a variable that is the mouse
41:19 - X minus the center of the window and
41:23 - mouse Y minus the center of the window
41:28 - now something weird is going to happen
41:30 - here and I should probably put this back
41:31 - to the tourists because I think it's
41:33 - going to be easier to see with the
41:34 - Taurus
41:37 - and so I'm going to say and now I want
41:42 - the directional light to be DX and dy
41:45 - let's see what happens now look at this
41:49 - I'm getting this kind of glitchy effect
41:51 - the reason this is happening is the
41:55 - vector is so ideally if you want the
41:58 - effect that I want at least here the
42:00 - vector that thing that's pointing needs
42:03 - to be of length 1 and he didn't have to
42:05 - worry about that when I said 1 comma 0 0
42:07 - or 0 1 comma 0 because it was by
42:09 - definition length 1 because I they it's
42:11 - not that it adds up to 1 but it's like
42:13 - the length it's actual length is 1 so in
42:16 - this case the vector is like you know if
42:18 - I could kind of get the mouse really
42:19 - close to the center and you could sort
42:21 - of see how I can get some of that
42:22 - shading back but the light gets stronger
42:24 - so this is something you might be able
42:25 - to use to your advantage but ultimately
42:27 - I want to normalize the length of that
42:29 - vector and there's a nice way that I can
42:31 - do that because what I could do is I
42:32 - could say let V I can make a vector
42:36 - object make a vector which has an X
42:38 - component a Y component and a Z
42:41 - component which I'm leaving it 0 for
42:42 - right now and I could just pass that
42:44 - vector in as the last argument so the
42:47 - directional light has a color and a
42:49 - vector same result here but now I could
42:53 - say V dot normalize and what the
42:56 - normalize function does is shrinks the
42:58 - vector to length 1 and you can see now
43:01 - as I move the mouse around I'm changing
43:04 - the direction that the light is shining
43:06 - and you know maybe I could do something
43:08 - like you know I could do something like
43:10 - divide it by 100 and so you can see I
43:14 - can make the light kind of brighter
43:16 - based on like how far away the mouse is
43:19 - so I just want to be within a pretty
43:21 - reasonable range once I get such a high
43:24 - range it's very very glitchy so the
43:25 - strength of that light it appears also
43:27 - is tied to this to the length of that
43:29 - vector okay so let's take a look here I
43:33 - think we've talked about normal material
43:37 - normal material of so basic material by
43:40 - the way is fill and just so you notice
43:42 - here if I go back this is actually
43:43 - important to say if I go back and say
43:45 - fill 0 0 255 comment out the ambient
43:50 - and I still have the lights and
43:52 - everything you can see that light is not
43:55 - affecting this so an object that doesn't
43:57 - interact with any of the lights in the
43:59 - scene you can use fill it's pretty rare
44:00 - that you would probably want that to
44:01 - happen but just to note if you're
44:02 - wondering like why is nothing responding
44:04 - to my light if you're using Phil so Phil
44:05 - like a basic material ambient material
44:08 - is a material that reflects light
44:10 - specular material is a material that
44:13 - reflects light albeit in a slightly
44:15 - different I near perhaps way and then
44:17 - the three kind of lights are ambient
44:19 - light on just general wash of light from
44:22 - everywhere in every direction point
44:24 - light which is a light where you give a
44:26 - position looks a position and a color so
44:30 - it emanates in all directions but from
44:32 - one position and directional light is a
44:36 - light that's coming from a given
44:38 - direction essentially infinitely far
44:40 - away maybe like Benetton the length of
44:42 - the vector it's closer and closer or
44:43 - brighter and brighter okay so that's I
44:46 - think concludes whoops so that I think
44:57 - oops so that I think concludes
44:59 - everything right normal ambient specular
45:01 - material and then ambient light
45:06 - directional light point light okay so if
45:07 - you have some questions write about them
45:09 - in the comments I'm sure I miss lots of
45:11 - important 3d stuff but I will be in the
45:13 - next video now getting to looking at
45:16 - texture and then at some point I will
45:18 - talk about camera in perspective okay
45:20 - see you there all right how do I do
45:24 - there that was that was better okay
45:36 - is it something like oh yeah I should
45:38 - say that sorry I'm in the wrong camera
45:40 - I yell oh I need to issue correction am
45:45 - I gonna be flooded with comments of that
45:47 - the Sun is white light hold on hold on
45:51 - let's just not to you probably don't
45:53 - want to include this but I am going to
45:56 - you can edit this in if you want
46:02 - I should point out as mentioned in the
46:06 - chat that the Sun isn't actually yellow
46:08 - light I'm just thinking of how my first
46:12 - grader loves to draw the Sun it uses the
46:14 - yellow crayon the Sun of course is white
46:16 - light and I'm is probably even more
46:18 - complex scientifically than that but I'm
46:20 - just using yellow to think about the Sun
46:22 - in some arbitrary way apologies for that
46:24 - please don't flood the comments okay
46:33 - that's better even though the Sun itself
46:36 - is orange all right
46:37 - Simon's making the point that it would
46:40 - be useful to show what happens if you
46:42 - put point light and directional light
46:43 - and an ambient light I'm gonna leave
46:45 - that as an exercise for people to mix
46:47 - them I should probably say that
46:48 - explicitly although I it is important to
46:52 - mention perhaps maybe alright maybe
46:56 - maybe not she wants to edit this stuff
46:57 - in so let's try a couple other things
47:00 - that were pointed out by the chat before
47:02 - I go if I were to add an ambient light
47:05 - here and let me make that ambient light
47:07 - blue let's just see what happens so you
47:11 - can see interestingly enough the ambient
47:14 - light and the directional light are
47:17 - interacting with each other and
47:19 - everything is blue everywhere but the
47:21 - red and green that's coming in through
47:24 - the directional light mix with that blue
47:25 - and end up making white light now of
47:27 - course if this color if this were to be
47:30 - just red the directional light you can
47:33 - see that directional light is now mixing
47:35 - with the MU light and making things so
47:36 - this I really want to leave to you as an
47:38 - exercise
47:38 - mixing point lights directional lights
47:41 - ambient lights all these things you've
47:43 - learned about like oscillating color
47:45 - looping color transition all of that
47:48 - stuff that you do in any kind of 2d you
47:50 - could do with the lights as well so you
47:51 - can make all sorts of beautiful crazy
47:53 - psychedelic colorful three-dimensional
47:56 - scenes by mixing lots of different
47:57 - shapes and lots of different lights okay
47:59 - so share with me what you make just with
48:00 - materials and lights see if anybody can
48:02 - make something that demonstrates the
48:04 - difference between specular material and
48:06 - ambient material a bit better than I did
48:07 - in this video I'd love to see that
48:09 - please share it with me and I'll see you
48:10 - in the next video where if I haven't
48:13 - said this already I come back and talk
48:15 - about
48:15 - extra and then in a follow up us about
48:17 - camera perspective okay thanks for
48:19 - watching see you soon okay
48:26 - the Sun is green everybody's freaking me
48:29 - out okay if I have an ambient white
48:33 - light it's going to wash out all the
48:34 - point light that is a good point very
48:36 - good point okay so now we are done with
48:42 - that what time is it almost 4 o'clock so
48:45 - now I want to talk about texture now
48:47 - here we might be in the situation where
48:49 - I haven't tried doing texture stuff in
48:52 - p5 WebGL I'm gonna leave this here and
48:56 - what I'm going to do let's go get the
48:59 - kittens I think that kittens are what
49:01 - we've got here right so somewhere
49:04 - desktop past Chrome extensions kittens
49:10 - kittens wait I think I did an example
49:14 - more recently where the kittens were oh
49:17 - yeah here object images kittens alright
49:21 - let's go grab the kittens and let's go
49:26 - to here just out of curiosity before I
49:34 - do this video let me do a little couple
49:36 - tests let's do some tests here John I'm
49:38 - gonna before I do the tutorial like when
49:40 - I actually try to test them stuff let me
49:43 - run a preload up I got a switch my got a
49:52 - switch my yes thank you for reminding me
49:59 - about the battery that was Gregory kxk
50:05 - kitten kitten equals load image kitten
50:15 - zero dot JPEG okay let me go back to
50:20 - here and it's in the directory so this
50:24 - I'm not I'm gonna kind of just test some
50:26 - stuff out without explaining it too much
50:29 - and then I will come back boy I'm
50:32 - terrible at this okay so they're kitten
50:38 - loaded just out of curiosity does the
50:47 - image function on its own work in P in
50:50 - WebGL it does not so the image function
50:56 - does not work the texture function
51:04 - should okay and how do i what do i how
51:09 - do i make a plane a plane let's look at
51:12 - Simon's cheat sheet with height okay oh
51:19 - wait cuz it's just the width height okay
51:20 - 200 200 oh yeah Superman 3 there we go
51:26 - there's the kitten there oh the light is
51:28 - all weird there we go okay so that's how
51:34 - you would just draw an image as a
51:35 - texture to a plane so that I might start
51:39 - with I'm also curious does begin shape
51:43 - can I do custom shapes and shape vertex
51:51 - negative 100 zero what I want to do
51:54 - clockwise counterclockwise I have no
51:57 - idea now let's try this let's first get
52:06 - rid of the kitten okay so that made a
52:08 - custom shape and I could say fill or
52:12 - give it a texture I'm just curious of
52:13 - all these things work that didn't work
52:15 - do I need to put that after begin shape
52:18 - let me make sure I'm in the yeah I'm in
52:21 - the new version okay so this might be
52:25 - something that needs to get worked on in
52:27 - terms of let's try a normal material
52:35 - so I couldn't get a normal material for
52:39 - a custom shape and that's weird
52:42 - what about ambient material nope
52:49 - so this is interesting this is something
52:51 - that has to be looked at the material
52:54 - for drawing custom shape burger I read
52:58 - the chat very rarely models is
53:02 - interesting know I have texture
53:04 - commented out on purpose I'm pretty sure
53:06 - texture is gonna work no do I need light
53:18 - hmm so I think I'm gonna stay away from
53:21 - doing custom shapes because that doesn't
53:25 - seem to be working in the way that I
53:26 - expect I'll have to come back to that
53:27 - another time I'll have to investigate
53:29 - that if what I'm doing this incorrectly
53:32 - if there's a bug but I am pretty sure if
53:38 - I do this all right
53:39 - so and let's put the stuff back in
54:05 - and let's take out this light stuff
54:08 - comment that out and try this alright so
54:17 - that works as expected
54:20 - does it automatically know how to
54:23 - texture oh wait a second I forgot the UV
54:27 - coordinates that must be why oh okay
54:31 - hold on let's go back for a second
54:40 - okay so I forgot the UV let's let me
54:45 - look at the reference texture or vertex
54:51 - hmm doesn't have it documented as having
54:54 - UV coordinates let's look at texture you
55:07 - know the examples are just showing using
55:10 - and it's cool that you can use a video I
55:12 - will show that as well the examples are
55:15 - just showing oh yeah sorry thank you for
55:22 - noticing my chroma key issue the V let's
55:33 - see here let me just look at the
55:35 - examples I know how to do this
55:39 - interesting its energy because I know
55:40 - how to do all this stuff in processing
55:41 - and I'm kind of learning now what works
55:43 - what doesn't where the WebGL examples
55:49 - for texture
55:56 - textures well look at these let's look
55:59 - at these for a second so yeah this is
56:04 - just showing with pre-baked shapes which
56:08 - is fine so I don't know let me just try
56:17 - this one more time my feeling this
56:19 - hasn't been implemented yet the wait
56:21 - where am I now
56:24 - okay so what I realized I was missing
56:27 - was with typically with a what's this
56:35 - 196 with a when you do texturing and you
56:41 - say I have this image and then I have
56:43 - this shape I need to in addition it
56:46 - doesn't just happen automatically it
56:47 - knows how to do it automatically for
56:49 - certain kinds of shapes but I have to
56:50 - say for this vertex for this particular
56:54 - vertex on the image on the shape I want
56:58 - to assign this pixel from the image so
57:00 - in that case I would have to say I mean
57:04 - to give it like that goes with pixel
57:06 - zero zero this goes with pixel like 100
57:09 - comma zero this goes with pixel 100
57:12 - comma 96 and this goes with pixel 0
57:15 - comma 96 now I have a feeling this has
57:17 - not been implemented this is how it work
57:18 - in processing yeah so that didn't do
57:20 - anything
57:21 - sometimes those UV coordinates are
57:23 - normalized so I would say this sometimes
57:27 - it only oh look at that though what is
57:31 - it I'm seeing something there right
57:37 - that's coming from the image do I need
57:44 - to give it like a material
57:51 - weird no did I get these UV coordinates
57:54 - wrong Phil so I think it's just not
58:01 - models is the way to do custom shapes in
58:04 - 3d but how do I create a model I don't
58:06 - believe models away could load one in
58:13 - load path to draw a model yeah so I
58:15 - don't know okay so I could get into that
58:17 - yes so I'll I will I'm just going to I'm
58:25 - just going to you know no stroke oh
58:28 - could the plane be no I can't possibly
58:33 - be true right okay rather than continue
58:40 - to hopefully not waste but continue to
58:42 - take up all this time I'm going to talk
58:45 - about textures and loading images just
58:48 - for the primitive shapes and I'll
58:50 - mention that I something about coming
58:52 - back and doing custom geometry another
58:54 - time yes so Simon is pointing out that
58:57 - you can load a custom shape with an obj
58:59 - file but what I want to do is generate
59:02 - the geometry algorithmically which is
59:04 - something that I that I know I can do in
59:05 - processing using begin shape and shape
59:08 - and 3d vertices and I will investigate
59:10 - the clothes I don't know maybe the
59:12 - clothes it's just the vertices doesn't
59:14 - fill the inside you're creating an
59:16 - opaque object on the image hmm I'm
59:21 - trying to do texture mapping but I'm
59:24 - gonna you can all go and watch my video
59:27 - with the flag-waving thing and process
59:29 - thing to see how that worked there I
59:31 - don't and and I'll investigate this
59:33 - another time okay so now what I want to
59:35 - do is just get back to what I was before
59:42 - [Music]
59:55 - oops just put it back to something okay
60:12 - all right nope ambient material check
60:18 - out this fill take out this plane
60:21 - well the ambient light is oh yeah this
60:27 - is what I wanted to do okay this is kind
60:31 - of where I left off okay please go fix
60:34 - the word camera Oh on the what here is
60:42 - it really that awful usually I'm the one
60:44 - it's crazy and bothered by stuff like
60:46 - this yeah that make you happier
60:52 - alright alright um here we go hello I'm
61:04 - back in this video I'm going to attempt
61:07 - to explain something and also implement
61:09 - something and that something is textures
61:13 - good timing timeout for a second I'm
61:18 - just gonna start over so much it doesn't
61:20 - have to edit anything hello in this
61:24 - video about WebGL in p5 I'm going to
61:28 - attempt to explain something and
61:30 - implement something and that is adding a
61:31 - texture to some geometry so I'm kind of
61:34 - checking off this list and by the way a
61:36 - couple things that I've now realized
61:37 - I've missed is I've only shown you in
61:40 - terms of geometry primitives and there
61:43 - are some other ways right in theory I
61:45 - think this might be at the time of
61:47 - recording of this video a little bit
61:48 - buggy because I've been doing some
61:49 - experiment with it there's no reason why
61:51 - I couldn't use begin shape and end shape
61:54 - to create custom geometry right to
61:57 - create my own algorithmic 3d shape in
61:59 - WebGL so that's certainly something that
62:02 - should be on the horizon for people
62:04 - and in addition to that I could also use
62:07 - a function called load model so if
62:09 - anyone wants to make like a nice model
62:11 - of a train or something send it to me
62:13 - maybe I'll make a video that loads and I
62:16 - think typically there's probably a bunch
62:17 - of different file formats of 3d models
62:19 - but certainly one that I believe works
62:21 - with p5 as an obj so if you're making a
62:25 - 3d model and some other 3d authoring
62:27 - software and export it as an obj file
62:29 - you could import so but what I want to
62:32 - focus on here is texturing and what
62:34 - texturing is is instead of simply having
62:37 - a material this sort of that is just a
62:39 - color or an or a certain kind of
62:41 - reflective continuous surface that you
62:45 - can actually take an image something
62:47 - that you loaded it could be a live video
62:49 - recorded video or a static image and
62:51 - wrap that image around the particulars
62:54 - shape whether it's a sphere a torus a
62:55 - box of playing etc so I want to look at
62:57 - that texturing an image so let's go look
63:00 - at how we do that and to simplify things
63:04 - let me actually first start off by just
63:07 - making a plane so I'm actually gonna
63:09 - make a plane a plane is a geometry
63:12 - that's just a flat plane and I could
63:15 - give it a width and a height so I'm
63:17 - gonna just say 200 200 to make a square
63:19 - plane so you can see here's mine this is
63:21 - very similar just drawing rectangle but
63:23 - the fact that I'm using plane one of the
63:24 - 3d geometry primitives means I could
63:27 - actually texture this right now and you
63:30 - can see it's responding to the light the
63:32 - light is still on the scene so I'm gonna
63:33 - leave the light in the scene for right
63:35 - now I might take that off so now I also
63:37 - happen to have a directory of images I
63:40 - don't know anybody have a favorite kit
63:42 - and they want to see right now I think
63:44 - let's just go with kitten zero cute
63:46 - kitten zero okay kid zero is going to be
63:49 - our texture so what I'm going to add now
63:53 - avert your eyes
63:59 - so what I'm going to add now is I'm
64:02 - gonna add preload preload is a function
64:05 - in p5 that allows you to load data
64:08 - assets media assets other things that
64:10 - are ready before set up and draw happen
64:12 - so I'm gonna make a variable called
64:14 - kitten and then in preload I'm gonna say
64:17 - kitten
64:18 - equals load image and I had a directory
64:21 - called kittens and I had a file called
64:24 - kitten dot zero dot jpg kitten zero dot
64:27 - jpg and now what I'm going to do here is
64:30 - I'm gonna comment out the material and
64:33 - I'm just going to say texture kitten and
64:36 - the magic will happen we're gonna see
64:39 - our kitten Oh interesting so the kitten
64:44 - is like so in just look at the image
64:46 - itself is responding to the light so one
64:49 - thing I want to do right now just to
64:50 - simplify things because I don't want to
64:52 - worry too much about light is I'm just
64:53 - gonna create ambient white light and
64:56 - take out this directional light that I
64:58 - worked on in the previous video just to
64:59 - simplify things and so now we can see
65:01 - there's our kitten oh it's spinning off
65:05 - as like in the end of Superman 3 which
65:07 - is a movie that I seem to reference way
65:09 - too often in my videos General Zod the
65:12 - kitten okay um so what else can we do
65:16 - let's just try some other shapes why not
65:19 - let's try box now we have Owen let's
65:25 - make the Box a little smaller now we
65:28 - have that kitten image on all sides of
65:30 - the box
65:31 - let's try sphere now we have to say now
65:36 - here we're seeing something that's now
65:38 - having so P 5 and the WebGL render is
65:41 - making a decision it's like well here's
65:43 - an image here's some geometry this is my
65:46 - best guess as to how you intended to
65:48 - wrap that image around the geometry and
65:51 - in this case if I wanted to you make
65:53 - this appear like a planetary surface for
65:55 - example I would I would get actually
65:57 - spherical polarized image of like a
66:01 - texture map or something - so there's a
66:03 - lot of work in terms of how you might
66:05 - want to design images that work well in
66:06 - certain contexts but we can see that
66:08 - that just works let's just see - all
66:10 - that I'm just here for all the shapes
66:12 - tourists so you can see there's the
66:16 - kitten wrapped around the Taurus and we
66:18 - get stop this now so I'm gonna go back
66:20 - to box oh and you can see here even with
66:23 - different dimensions it's it's doing
66:26 - different things to the Kin so I'm gonna
66:27 - go back to box 100 and there we go so
66:30 - now I want to look at some other what's
66:32 - interesting about this is there's no
66:34 - reason why we can't use a video source
66:37 - so if if you look under a create video
66:40 - or create capture let's try to use
66:42 - create capture so I'm gonna say and
66:44 - setup I'm gonna say let cam for camera
66:49 - cam equals create capture I'm gonna say
66:54 - 200 200 oh wait no sorry I don't give it
66:58 - a size video I think that's how I do it
66:59 - create capture video let's just see what
67:02 - happens here so where is my oops
67:08 - track start error hold on try to say cam
67:13 - not start or something I don't think so
67:17 - no I probably just wrote the wrong piece
67:21 - of code pick a random kitten yeah begin
67:26 - shape and clothes shape ah oh yeah
67:32 - Austin I'm gonna be doing I trimmed the
67:34 - next section definitely the next session
67:38 - thank you for this I'm seeing in the
67:40 - chat Bram VG mert has sent me an example
67:46 - that uses custom shapes I'm going to
67:47 - take drink some water I really do need
67:50 - to drink water why is it am I like
67:53 - parched in a weird way that I'm like are
67:55 - you just like being kind and thinking of
67:57 - me wait hold on why did I why's my
68:04 - create capture off I need to go to the
68:12 - Dom library
68:16 - oh I do need to give it no so why what's
68:22 - wrong with this hold on a sec everybody
68:33 - Oh No
68:39 - why am I getting this error hmm
68:47 - don't tell me capture is somehow like
68:49 - not compatible with WebGL or whatever
69:03 - and she I just need n shape clothes
69:05 - interesting okay why am I getting a user
69:11 - media error
69:22 - it's really weird Oh debug debug debug
69:28 - debug debug debug debug Deepak Deepak
69:32 - Deepak Deepak Deepak Deepak Deepak debug
69:37 - so I should see like restart my browser
69:40 - or something tonight am I using the like
69:43 - an old version of the Dom library so
69:51 - weird yeah but I just there's no reason
70:00 - why it wouldn't work with I if I take
70:02 - out WebGL all right hold on a sec let's
70:05 - let's let's not go to nuts here and let
70:10 - me go to let's try
70:24 - so this is okay this makes me feel a
70:28 - little better I think something is going
70:30 - on on this computer so hold on a sec let
70:34 - me quit Chrome
70:47 - huh
70:51 - I guess
70:57 - I don't think I need to give a sighs and
70:59 - should do a default sighs all right I'll
71:03 - try that I've done this without sighs no
71:11 - I'm getting a
71:18 - all right like for example if I just go
71:21 - to any yeah see something here a quick
71:29 - time
71:36 - oh yeah look at this what's happening on
71:40 - my computer FaceTime built-in I disable
71:45 - it that's something else using that
71:50 - alright dare I restart this computer
72:06 - all right oh hi restart the computer it
72:16 - won't be able to hear the sounds anymore
72:17 - oh wait please oh please hold
72:30 - whew did you hear that I'm restarting
72:33 - the computer sound just came back for a
72:44 - second alright here we go oops
73:16 - [Music]
73:28 - let's see
73:29 - there we go Here I am I'm like Beyonce
73:46 - with my background and no music let me
74:09 - get back to things
74:10 - [Music]
74:44 - there we go all right
74:49 - we're back in business so that was just
74:56 - a temporary glitch all right got all my
75:05 - tabs open and alright okay so by the way
75:21 - it seemed to have some new viewers today
75:22 - saying it so if anybody is like a sound
75:25 - music person and can help I'm a little
75:28 - bit like obsessed with all my weird
75:29 - sound effects but they've all gotten
75:30 - stale and I I need some I don't want
75:34 - help me with that please I would love
75:35 - that I just don't have the time I mean I
75:39 - should make the time I have the time
75:40 - it's just not a priority I mean maybe it
75:42 - should be a priority I don't know all
75:45 - right so I think where I last left off
75:47 - was I'm gonna just go from here okay so
75:51 - let me take this out for a second not
75:56 - you this should be go for wherever I
75:57 - added this and it didn't work to it
75:59 - working okay so we should see oh there I
76:05 - am
76:05 - so this is the capture element it's a
76:08 - separate Dom element that's taking the
76:10 - live webcam feed you can now see my
76:12 - secret green screen here okay back I
76:20 - forgot that I was making a video
76:21 - tutorial it went off in my own world all
76:23 - right so a couple things one is let me
76:25 - just make that a little smaller just so
76:29 - we can kind of see it there but not have
76:31 - it overall in the screen and then now
76:33 - what I want to do is can I make this
76:35 - video a texture on the box so I don't
76:39 - see any reason why I couldn't just
76:40 - change this from kitten to cam there I
76:47 - am oh oh I could do my Superman 3 thin
76:49 - now you please just humor me just humor
76:52 - me turn off this video good something
76:53 - else I'm gonna do this my own personal
76:55 - enjoyment
77:02 - wait all right never mind okay moving on
77:08 - so you get the idea I can take and by
77:11 - the way if I if I wanted this to appear
77:13 - less I don't know what I want this to
77:15 - appear like but I can use ab cam dot
77:18 - hide in which case I could actually only
77:22 - see the video texture on the box so this
77:25 - is a way you can take any image like a
77:27 - live video and texture and I could
77:28 - change that to a sphere or a torus I do
77:30 - want to again at some point
77:32 - begin ups I do want to at some point
77:41 - look at how I can start to assign image
77:45 - textures to custom drawn shapes with
77:47 - begin shape and end shape so I need to
77:49 - approach that in a separate video and
77:51 - just look at loading models and custom
77:53 - shapes so if somebody remind me if that
77:54 - video doesn't exist to display this to
77:56 - do that otherwise you're gonna see it at
77:57 - some point in a few videos from now so
77:59 - I'm gonna quickly check to see if there
78:00 - are any questions or points that I
78:02 - forgot from the live chat that's going
78:04 - on now otherwise this video will end all
78:08 - right can you use so does is there
78:18 - anything that I should demonstrate here
78:19 - with texture should I add the light in
78:24 - what do you mean by a simulated light
78:29 - begin shape triangle for custom shapes
78:32 - okay this is the one time where I didn't
78:38 - actually miss anything I said like I
78:41 - didn't end the video prematurely I'm
78:44 - looking at the chat how's the light
78:46 - effect the texture okay okay can you
78:52 - have a shadow well oh yeah yeah oh wait
78:55 - I could put a plane oh yeah okay let's
78:58 - try that all right I'm back at the end
79:04 - of this video I'm not sure exactly why
79:05 - but two questions came up in the chat
79:07 - one is how do lights affect texture and
79:09 - two how what about shadowing so just out
79:13 - of curiosity let me
79:14 - try putting a plane at the bottom so
79:19 - what I'm going to do just to show you a
79:20 - little more sort of 3d stuff I'm gonna
79:22 - say with this spinning cube I'm gonna
79:27 - put a push before and a pop after so
79:32 - that the rotate does not affect anything
79:34 - that comes after and then I'm gonna add
79:35 - this plane so we should see here oops
79:40 - there I am the puck but I want that
79:42 - plane now to look as if it's a floor
79:45 - maybe so what I want to do is translate
79:49 - maybe all the way down to the bottom and
79:52 - then rotate if I want to take this plate
79:55 - and rotate it like this to be flat I
79:56 - want to say this is the x-axis so I want
80:01 - to rotate X and rotate it basically 90
80:04 - degrees which is 1/2 pi let's try that
80:12 - so you can see there it is and I don't
80:14 - want what I want to do also is maybe
80:16 - only translate it a hundred down make
80:19 - the plane like really really big and
80:22 - maybe I want to give that a a bein
80:24 - Tyrael so it doesn't have a texture of
80:26 - white is that gonna override the texture
80:29 - whoa bugginess ok great so we can see
80:33 - now that there's like this floor making
80:36 - it white made it a little confusing but
80:39 - let's let's make the background let's
80:42 - make it it's fine so what I want to do
80:44 - is let me try to add some light there's
80:46 - an ambient white light right now let's
80:48 - take out that ambient light and you can
80:51 - see the floor it's not buggy it just
80:53 - takes a little while for the video to
80:54 - start the floor is now black but it does
80:57 - have an ambient material of white so
81:00 - let's try adding this directional light
81:03 - so I this is a directional light that I
81:06 - did in the previous video which just
81:08 - shines a light from far away at a given
81:11 - direction based on the mouse and I'm
81:13 - gonna make let's make that light white
81:16 - just too and I'm gonna just give it AI I
81:18 - might be able to give it just 255 but
81:20 - I'm gonna give it all three let's give
81:21 - that a look so you can see now look that
81:26 - light is
81:28 - shining and is only able to see the
81:32 - sides of the the cube where the light is
81:34 - and you can see there's a Larry
81:36 - shadowing going on based on the light
81:38 - now the thing is the shadowing I
81:40 - probably have to be more thoughtful
81:42 - about the position these objects in
81:46 - order to get the shadowing to work in a
81:48 - way where I might actually see but I'm
81:50 - gonna let that be an experiment for
81:51 - those of you could I could you use try
81:53 - using maybe a point light like for
81:56 - example let me just actually do that let
81:58 - me add a point light and let me put that
82:00 - point light a little bit above yeah now
82:05 - you can see a little bit more like you
82:07 - can see that there is maybe some
82:09 - shadowing but maybe if I were to I
82:12 - really should stop what I'm doing like
82:14 - translate the Box a little bit back
82:18 - maybe like a little bit down like a
82:21 - little bit down and a little bit back
82:26 - mmm I put it in a weird place so I'm
82:29 - again I believe there's an exit hold on
82:33 - let's go back let me not try that cuz I
82:37 - don't know what I'm doing here
82:49 - so I'm gonna leave it to you as an
82:52 - exercise to try seeing what you could do
82:54 - with point lights and ambient lights and
82:56 - different shapes to see if you can get
82:57 - shadowing but you can see sort of the
82:59 - stuff that you've got to play with here
83:01 - and in terms of having a light that's
83:05 - shining into the scene with different
83:07 - shapes with different materials and
83:08 - different textures okay thanks for
83:10 - watching all right
83:14 - shading not shadowing thank you that's
83:18 - probably a good point oh and I forgot to
83:21 - add shaders to this list alright we're
83:24 - gonna do camera next let me switch this
83:28 - to a point light and just put it at the
83:33 - top and make the background I'm just
83:44 - going to change this a little bit to
83:47 - make the background zero okay and it's a
83:53 - point light and what if I oh and I
83:57 - translate it in the wrong place I think
83:59 - what if I translate this back a little
84:01 - bit there we go
84:08 - alright so now what I want to do is I'm
84:17 - going to take that out
84:23 - okay yes you can modify the texture with
84:27 - a shader but I'm not going to get to
84:30 - that so the next thing I need to look at
84:32 - is camera so what are the functions I
84:35 - you didn't see me change something here
84:37 - the next thing I need to look at is this
84:39 - and then these are some things on my
84:41 - list also as well as I'm gonna add
84:44 - shaders to this list
84:49 - getting to the end getting to the end of
84:52 - today here so and we'll see if we can
84:57 - fix the we can see we can investigate
84:59 - that on point light bug in and see where
85:03 - that changed all right so here's the
85:07 - thing camera stuff works so let me look
85:12 - camera camera and view there are three
85:19 - camera functions camera is perspective
85:24 - with a sixty degree field of view so
85:26 - that's like this oh I'm in the wrong
85:28 - camera speaking of camera sorry
85:29 - everybody
85:30 - I really have a lot of trouble
85:31 - remembering so there's perspective to
85:38 - override the default camera simply
85:40 - called perspective or ortho in
85:42 - perspective objects closer to the viewer
85:45 - in the Z plane appear larger than those
85:48 - farther away right in orthographic view
85:51 - objects are the same dimensions appear
85:53 - to be the same size even even when they
85:54 - are farther away that would have been a
85:56 - nice way to describe that once we did
85:58 - that other coding challenge sorry about
86:01 - that
86:02 - and for more information check out the
86:06 - excellent p.3d tutorial here what's
86:08 - funny is I'm acting like I don't know
86:09 - this stuff but apparently I wrote this
86:11 - p32 towards my camera perspective okay
86:19 - see see yes yes yes yes yes ah so we're
86:23 - gonna look at this I'm gonna look at
86:26 - perspective and ortho that's gonna be
86:29 - helpful camera i position
86:34 - scene Center upwards access see I know
86:37 - how this works in p f-- in processing is
86:39 - it exactly the same let's look at
86:41 - Simon's cheat sheet here X Y Z Center X
86:46 - yep so that's the same perspective
86:48 - field-of-view aspect near-far ortho left
86:52 - right bottom top near far okay so what's
86:56 - a good way to demonstrate this so I
87:01 - think one thing I should do by the way
87:02 - is maybe I should go back to the kitten
87:04 - I don't know if it's going to be simpler
87:13 - and then I should just probably say
87:15 - ambient light
87:28 - so is it going to be simpler to see
87:30 - these differences with with out a
87:39 - texture on the image probably right so
87:42 - what if I just change this to as much as
87:45 - I love the kitten normal material so
87:51 - this is probably a better way to look at
87:54 - it okay and then let's look at some
88:01 - things like for example let me just play
88:04 - with some ideas
88:20 - so let's see what happens if I first say
88:24 - camera so if I were to say camera Mouse
88:32 - x00 what are the defaults again let me
88:34 - look at my tutorial so I'm pretty sure
88:41 - this is the default camera the light
88:46 - after it ooh
88:49 - DX is not defined why oh I don't need
88:51 - this anymore
88:53 - whoa okay wait default camera Z it would
89:00 - be different 0 0 0 0 right
89:05 - Oh weird maybe these are supposed to be
89:09 - 0 0 or not - cuz of the there we go
89:13 - that's the default camera right the
89:17 - default camera comment this out exactly
89:21 - the same right XYZ okay so X what so
89:30 - what is it again it is X Y Z sent so X Y
89:34 - Z is where the camera is Center X
89:37 - centralized embassy is where the camera
89:38 - is looking and then up is like the
89:42 - direction of up cuz you need all this if
89:44 - you think about it if this is the camera
89:45 - you need to know where is it where is it
89:48 - looking and which way is up is the
89:50 - camera on its side so for example if I
89:53 - were to put Mouse X here and go back
89:59 - this is me moving the camera it's still
90:03 - looking at this thing what's weird is
90:05 - it's not panning because it's still
90:07 - looking at the same center point right
90:09 - you can see how that it's kind of moving
90:12 - to the edge but it's still looking at
90:14 - the same center point so if I wanted it
90:16 - to also look at a new center point
90:20 - that's me panning okay so this makes
90:23 - sense
90:26 - I could also zoom the camera in whoops
90:34 - by saying like Mouse X I'm just trying a
90:37 - few things before I'd make a tutorial
90:38 - about this what did I do wrong
90:42 - uh-oh zero zero oh right this sorry
90:51 - that's there so this is the default
90:53 - location people are sending me things
90:58 - okay that's the default game so I could
91:01 - replace this like was just like Mouse X
91:07 - whoa it probably can't be zero plus ten
91:10 - no why couldn't it be yeah that's weird
91:13 - that's a bug Oh can't it can't be in the
91:18 - place where it's looking so price should
91:21 - give you an error okay so probably
91:26 - probably we make edits to the list
91:32 - oh no hopefully I didn't lose my shoot
91:37 - because like just like force quit the
91:39 - computer or WebGL shoots no there it is
91:43 - so error if camera XYZ and center XYZ
91:50 - are the same okay so that's camera so
91:55 - that I can make work is this documented
92:01 - in a better place perhaps here
92:13 - okay ortho I know to get perspective
92:15 - field of view okay so let's let me go
92:18 - back to this tutorial camera do I do
92:25 - feel the view in here yeah so let me
92:34 - just look at this for a second
92:36 - so this now is field of view oh boy let
92:52 - me just back to field of view with
93:00 - divided by height cameras the camera see
93:03 - time let's let me just look at this for
93:04 - a second okay that's the default field
93:09 - of view now if I were to change this
93:13 - angle to like map mouse X between 0 and
93:19 - width to between you know zero and PI
93:24 - divided by 2 that's just changing that
93:29 - that's it's like zooming because I'm
93:30 - narrowing the field of view if I didn't
93:38 - change the camera Z based on that though
93:43 - if I just made what's the near and far
93:47 - is perspective near and far aspect near
93:51 - far if I change that near and far if I
93:54 - make those fixed near and far then what
94:01 - I would see right I'm gonna get some
94:04 - weird stuff going on
94:06 - alright so that's I think I'm gonna
94:08 - probably not I think I'm going to mostly
94:10 - work with the camera and skip the
94:12 - perspective stuff but I do want to look
94:16 - at ortho so there we go so this is
94:22 - harder to see just in this particular
94:25 - example
94:28 - interesting that in ortho do you know do
94:32 - you all know why I can't see that plane
94:33 - because in ortho that plane is flat I
94:36 - don't see it from above it's perfectly
94:38 - flat so the fact that I rotated it you
94:41 - know if I rotate it by quarter PI then
94:47 - I'll see it there so ortho is going to
94:49 - become much more apparent when I draw a
94:50 - bunch of these at different distances
94:53 - but so I'll try to maybe do that as well
94:57 - okay all right I think I'm ready all
95:06 - right I mean just 4:40 I've got about 20
95:14 - more minutes or so I wish there was
95:16 - something more this okay so we're gonna
95:20 - do camera stuff now okay
95:43 - alright I'm back again I'm kind of going
95:46 - through my list of topics about 3d and
95:49 - WebGL with p5.js and I'm now on to
95:52 - camera so in this in this video I'm
95:54 - gonna talk about camera now there are
95:55 - three functions that are important to
95:57 - look at camera perspective and ortho I
96:04 - recently did a coding challenge which I
96:06 - will link to from this video where I
96:08 - made heavy use of ortho perspective but
96:11 - I just got a terrible job of explaining
96:13 - it so I'm gonna try to come back to that
96:15 - in this particular video but let's start
96:17 - just with the camera function so the
96:19 - thing about a camera actually so let me
96:22 - do some so hold on a second I think a
96:33 - diagram would be helpful here as
96:37 - difficult as it is for me to draw
96:39 - anything that is remotely close to three
96:42 - dimensions and on a two-dimensional
96:44 - whiteboard but let's just pretend for
96:47 - example that this is the scene that I'm
96:49 - looking at right and that's the cube and
96:50 - what I want to do is there's this idea
96:53 - this idea this is a made-up concept of a
96:56 - camera there's a camera over there I
96:58 - should turn it towards I'm out of the
97:00 - picture there's this made-up idea of a
97:02 - camera which I'm going to draw like this
97:04 - what might not be immediately obvious to
97:07 - you is there are a whole bunch of
97:08 - properties associated with this camera
97:10 - for example this camera is at a
97:13 - particular location it's at a particular
97:15 - X Y Z location it's also pointing in a
97:19 - particular XYZ direction so a camera you
97:23 - can think of this marker as the camera
97:25 - it's pointing directly at you and it
97:27 - might be closer to you or further away
97:29 - it might be up here but pointing it you
97:32 - know at the ceiling so the I need to
97:33 - define I have a camera I need to define
97:35 - where everything is in the scene then
97:37 - where the cameras are where it's
97:38 - pointing but that's not even all I also
97:40 - need to define a vector that points up
97:45 - because now if you think about it right
97:47 - if this is the camera and you were to
97:50 - this is a terrible idea for me to pick
97:52 - up this camera rotate the camera right
97:55 - oh this everything's going to go
97:57 - to help me hand back oh my goodness it
97:59 - unplugged that wasn't totally a bad idea
98:02 - okay time out I caused many tech guys
98:05 - back back ok ah the cameras all messed
98:08 - up this is such a bad idea what are good
98:12 - close enough for now Oh oh my goodness
98:14 - it's totally in the wrong place
98:15 - timeout technical malfunction that about
98:26 - right eternity a little more okay
98:31 - I'm the worst by the way do you know
98:35 - that I have a chair here someday I'm
98:41 - gonna use this chair so uh I was
98:45 - thinking okay
98:53 - all right apologies for the technical
98:56 - camera this half there but you can
98:58 - imagine right if the camera is turning
99:00 - is it looking on its side is it looking
99:02 - straight up so that vector pointing up
99:04 - tells us how we're supposed to turn so
99:06 - we need all three of those properties we
99:09 - actually need and this is also an XYZ
99:11 - value so the camera actually needs to
99:14 - set a camera we need one two three four
99:17 - five six seven eight nine arguments so
99:19 - let's go back and do that now here's a
99:22 - scene that I've set up it's mostly the
99:24 - same as the previous video but I'm just
99:25 - using a normal material as opposed to
99:27 - the video texture now here's the thing
99:29 - watch as I magically add a camera to
99:33 - this scene without the camera function
99:36 - your this is gonna blow your mind
99:38 - at the very beginning right up here I'm
99:41 - just gonna say translate 0-0 Mouse X
99:49 - whoa look at that camera zooming in and
99:53 - out of the scene
99:54 - so it's really important to realize that
99:56 - this camera is an artificial concept
99:59 - created by us to create the illusion of
100:01 - a sort of pair of eyes or a single eye
100:04 - really in the scene I guess it's a pair
100:06 - because you're seeing depth anyway to
100:08 - look into the scene but if this is my
100:10 - three-dimensional object and this is my
100:12 - camera what's the difference between
100:14 - moving the camera towards it or moving
100:16 - the object or the whole scene towards
100:17 - the camera those are the same things so
100:19 - you can make do a lot of camerawork and
100:21 - moving things around and changing the
100:23 - view by just manipulating the rotation
100:26 - orientation and position of everything
100:27 - in the world but sometimes the camera
100:30 - function can actually be quite useful to
100:31 - do certain things that wouldn't be as
100:33 - easy to do without it so let's take a
100:35 - look at how that works deep breath okay
100:38 - so now I'm gonna go back I'm gonna take
100:39 - out this translate and I'm gonna add the
100:41 - camera function now where is the camera
100:44 - let's put the camera at zero zero zero
100:46 - now where should the camera look let's
100:49 - have the camera look at zero zero zero
100:51 - oh and which way is up let's have the
100:54 - camera point up zero one one points
100:57 - upwards one point down I don't know 100
100:59 - zero so this is just about right the
101:02 - default camera except for the fact that
101:03 - what this is again if this is my object
101:05 - might
101:06 - Sene I just put the camera right here in
101:07 - the same place I actually want the
101:09 - camera to be a little bit out the camera
101:11 - is by default out and I think there's
101:13 - like a specific value for this and I
101:15 - always forget what it is so I'm gonna
101:17 - pull it from a processing tutorial that
101:19 - I will link to whoops so I'm gonna come
101:23 - over here hold on sorry so I'm gonna
101:32 - link I'm gonna pull from a processing
101:35 - tutorial that has a lot of information
101:37 - about 3d I'm gonna just grab this value
101:39 - so this is the default Z location of the
101:42 - camera 0 0 and then I put it here so
101:44 - it's the height divided by 2 divided by
101:47 - tangent of pi divided by 6 it's probably
101:49 - a better way to write that some sort of
101:51 - magic number and I'm gonna now I'm gonna
101:53 - go back to the sketch we should see this
101:55 - is exactly as it was right so I'm using
101:57 - the camera function if I comment out the
102:00 - camera function there it is it's the
102:04 - same scene but now I can start to move
102:07 - the camera around for example what if I
102:09 - actually put the camera on its side like
102:12 - pointing to the right right now I'm
102:16 - looking at the scene I just turned the
102:18 - camera over we could actually animate
102:20 - that and have it bounce around as if
102:21 - it's like a shake and get a shaky camera
102:23 - that's kind of like a fun thing to try
102:24 - to do again this is no different than
102:27 - rotating the whole scene but I'm using
102:29 - the camera object to do it let's put
102:31 - that back to pointing up what if I were
102:35 - to move the camera along the x-axis so
102:39 - I'm going to say x equals map Mouse X
102:43 - which goes between 0 and width to
102:45 - between like negative 200 and 0 so I'm
102:50 - gonna kind of like move the camera to
102:52 - the left as I move the mouse I don't
102:54 - this is sort of silly whoops I have a
102:56 - syntax error 0 with negative 2 oh I owe
103:00 - this should have X here now so that's
103:02 - probably say camera X just to be kind of
103:04 - consistent so now we can see the look it
103:09 - looks like it's spinning which is kind
103:12 - of weird but you have to remember they
103:13 - do where the camera is looking is still
103:15 - at the center so what I'm actually doing
103:17 - is this right I'm doing
103:19 - this right it's always looking at the
103:23 - cube it's just moving to the side of
103:26 - that plane you can kind of see you can
103:28 - kind of imagine that again if I were
103:30 - more thoughtful about this I could
103:31 - probably create a better visual
103:32 - demonstration but what I could also do
103:35 - at the same time is move where it's
103:37 - looking remember this is the sort of
103:39 - look at locations called Center X
103:41 - centralized centers needs to look at
103:42 - location so I have where the camera is
103:44 - where I'm looking
103:45 - and then the orientation of the camera
103:47 - so now if I did that this gives me a
103:50 - panic for some reason I did this in
103:52 - inverse I didn't mean to do that
103:54 - so let me let me just I think what I
103:58 - meant to do is this yeah so I don't have
104:01 - it backwards which is not a big deal but
104:03 - you can see now I'm panning back and
104:05 - forth and you know I could do something
104:07 - like change the I could have it rotate
104:09 - as I'm panning you could imagine there's
104:11 - a lot of possibilities so that's what
104:12 - the camera function does I this merits
104:15 - probably some kind of coding challenge
104:17 - where I attach the camera to some like
104:18 - moving things throughout a scene oh we
104:20 - can make a shaky let's just make a shaky
104:21 - camera because that's kind of could be
104:23 - fun
104:24 - so how would I make a shaky camera let's
104:29 - have the camera camera X equal random
104:33 - negative five five let's see what this
104:35 - looks like and camera camera Y also
104:39 - equal a random amount we use Perlin
104:43 - noise to have it be and then I'm gonna
104:45 - give Ono the Z I'm gonna make that just
104:47 - like an offset so I'm gonna put this in
104:51 - and let's have it continue to look at
104:53 - the center so it's like a so you can see
104:56 - is the scene shaking is the camera
104:59 - shaking I don't know but you can see now
105:01 - I could probably I probably could have
105:03 - like do something weird like mix these
105:05 - values up so I could have it like look
105:08 - in the slightly like also in a random
105:11 - direction that's slightly off so I don't
105:12 - know I can see here earthquake
105:14 - earthquake so I've used the camera now
105:15 - to make kind of a little bit of an
105:16 - earthquake simulation okay so that's
105:19 - camera did a couple more things with
105:21 - that let's comment that out so one thing
105:24 - I want to just I mention is perspective
105:27 - I don't want to do I have to
105:32 - timeout Thank You Alka negative one on
105:38 - why should be the sky usually yeah I
105:42 - don't know I'm just we'll get the chat
105:49 - all right what's gonna be a good
105:50 - demonstration for perspective let me
105:54 - look at my my processing tutorial did I
106:00 - why do I have perspective first in this
106:02 - tutorial field of view aspect ratio near
106:10 - and far so the parameters define a
106:13 - viewing volume with the shape of a
106:15 - truncated pyramid objects near the front
106:19 - appear their actual size
106:20 - well farther objects appear smaller
106:23 - field of view and eclipta bleah
106:25 - alright alright I think I've got it
106:39 - oops
106:44 - alright next I want to talk about
106:46 - perspective
106:47 - now what / this perspective is separate
106:51 - from the camera perspective as a
106:53 - function that defines how we how that
106:57 - three illusion of three-dimensional
106:58 - perspective is created and it involves a
107:00 - couple things it involves a field of
107:02 - view which is really a pyramid but I'm
107:05 - gonna draw it kind of like a cone or a
107:07 - two-dimensional come right so that field
107:08 - of view could be wider or it could be
107:11 - smaller and then it also defines the
107:14 - clipping plane so in other words maybe
107:16 - actually anything that comes in front of
107:19 - this near point I don't even see or
107:21 - anything that's passed this far point I
107:24 - don't even see so there are defaults I
107:25 - also need an aspect ratio I think which
107:28 - generally would be tied to just the
107:30 - aspect ratio of your canvas but that
107:32 - there could be some nuance there I'm
107:34 - sure so I have to admit that I don't
107:36 - know that I'm not really a 3d I'm not
107:42 - really a 3d person so you know I have
107:45 - done some examples of things I don't
107:46 - think that I've ever used the
107:47 - perspective maybe I've used it to kind
107:49 - of expand the clipping plane then you're
107:51 - in far points or to shrink it but
107:53 - generally I'm always working with the
107:55 - default field of view let's try to just
107:57 - at least add it though to see what we
108:00 - get so so if I were to add the
108:03 - perspective function let's get it
108:05 - working with the default perspective so
108:07 - the default perspective and I'm gonna go
108:08 - back to my processing tutorial to get
108:11 - these default numbers and I'm gonna just
108:15 - copy that in here and I'm gonna change
108:18 - that
108:19 - the processing p.3d render is a java
108:21 - programming environments I need to just
108:22 - quickly change this to be compatible to
108:28 - so basically the the default field of
108:33 - view is a 60 degree angle or PI divided
108:35 - by 3 the Z camera Z location right this
108:40 - is actually something that I already
108:42 - added up here right so the same is this
108:45 - right so that is probably um so that's
108:48 - kind of the default camera Z location
108:50 - and so that's how I'm defining odd
108:53 - that's how I'm defining the clipping
108:54 - plane it's the camera divided by 10
108:57 - the times 10 so that's so but you know I
109:00 - could make these arbitrary numbers but
109:01 - let's just at least look and then aspect
109:03 - ratio is with divided by height so let's
109:05 - look at let's look at how this looks so
109:09 - we can see that's the default
109:10 - perspective
109:11 - let me just for the sake of argument
109:13 - make the near point is the near near
109:18 - point like minus 500 and the far point
109:20 - 500 so we can see I haven't clipped
109:23 - anything let me make that minus 50 and
109:26 - 50 so I don't know if you could see did
109:28 - that clip anything 10 it's got a clip
109:32 - something at some point hmm am i doing
109:35 - this wrong why is that not working for
109:41 - me right if I make near and far 0 is
109:45 - that just a bug
109:54 - No all right I'm gonna Mattia we're not
109:58 - gonna change those values because they
110:01 - don't seem to be doing anything right
110:02 - now did I oh thank you
110:13 - let's go back thank you for noticing
110:16 - that
110:25 - let me just see if it actually works 10
110:30 - would be 10 units in front so is it 10
110:35 - negative 10 still do anything that will
110:55 - I don't know what I'm doing now I
110:59 - clipped everything out huh 10 to 30
111:07 - gives 120 buffer distance relative to a
111:12 - head
111:16 - Anthony writes coding without a battle
111:18 - plan is asking for trouble
111:20 - truer words of different than spoken
111:25 - I'm definitely asking for trouble here
111:27 - all right maybe I don't want to talk
111:29 - about put it back to what it was I think
111:35 - about what it was so it's camera Z
111:39 - divided by 10 so that camera Z location
111:42 - if it's like me console.log that what
111:49 - kind of number is that about so it's
111:52 - like 260 so this is basically 26 to 2600
112:01 - so this is small and this is big if I
112:04 - were to make this 500 what if I make
112:07 - this mouse X oh yeah we can see a clip
112:12 - it away that'll be a good that'll be a
112:14 - really quick demonstration okay let's
112:17 - let's do that
112:24 - okay so now we have the the default
112:28 - perspective so the first thing we could
112:29 - experiment with here is like so these
112:31 - that that clipping plane is defined by
112:33 - where the camera is because you want to
112:35 - see something based on the camera but
112:37 - for example what if I just take the far
112:39 - end of the clipping plane and assign
112:41 - that to Mouse X I can now see right eye
112:45 - kind of as I move the mouse it kind of
112:47 - clips it's sort of like taking away what
112:49 - I can read this is generally something
112:50 - that I don't play with because I just
112:52 - want to like see the whole scene but
112:54 - sometimes in certain situations you
112:55 - might need to deal with it so another
112:59 - thing that we could play with is the
113:01 - field of view so what if that angle were
113:03 - a lot bit what if right now I'm looking
113:05 - at 60 degrees pi divided by 3 what if I
113:08 - had 180 degree field of view let's just
113:12 - change that whoa I don't actually see
113:15 - anything did I put everything back so
113:18 - what what if instead of having a 60
113:27 - degree field of view I had like a 30
113:29 - degree field of view so it was shrunk or
113:32 - even like a 10 degree field view so this
113:33 - would be PI divided by 6 would be a 30
113:36 - degree field of view and you can see
113:37 - it's the field of view has shrunk so it
113:39 - actually looks kind of like I'm zoomed
113:41 - in on it I'm also the the clipping plane
113:43 - was changed so because the clipping
113:46 - plane is being defined based on the
113:47 - camera which would be fine in the field
113:48 - of view so this is this is a little bit
113:50 - kind of nuts here but let's let's um
113:53 - let's try to let's try to do something
113:56 - by just saying I'm gonna have the
113:57 - clipping plane between between between 0
113:59 - and 2000 I'm going to put the field of
114:01 - view back to 60 degrees and I'm not
114:04 - gonna actually move where the camera is
114:08 - I'm just gonna leave the camera at as if
114:13 - there was a field of view of PI divided
114:16 - by 60 degrees so that camera and
114:18 - actually so sorry
114:20 - oops what I want to do make back up for
114:23 - a second here what I want to do to
114:24 - demonstrate this I think this is gonna
114:26 - work is that I want that camera Z
114:28 - location to be fixed so I'm gonna store
114:32 - that and so I'm going to just put in PI
114:34 - divided by 3 here
114:37 - now what I'm going to do is I'm gonna
114:38 - have the field of view be a variable
114:42 - that changes with Mouse X between 0 and
114:45 - PI so now what I should see is look how
114:50 - that perspective changes like this is a
114:52 - 180 degree field of view and MIT right
114:55 - here is about 60 degrees and now it's
114:57 - sort of like my field of view is
114:58 - narrowing now the camera is actually not
115:00 - moving here but based on the field of
115:03 - view we're seeing kind of a different
115:04 - volume and it appears closer so this is
115:09 - kind of a complex topic and I think I'm
115:12 - kind of over over emphasize it because
115:15 - really what I want to talk about which i
115:17 - think is much more important or
115:18 - interesting to play around with is
115:21 - orthographic perspective or orthographic
115:24 - projection in other words with
115:26 - perspective with traditional perspective
115:29 - objects that are farther away appear
115:32 - smaller than objects that are closer
115:34 - that's how we create this three
115:35 - dimensional perspective with
115:37 - orthographic perspective objects that
115:39 - are farther away are the same size there
115:42 - are objects that are closed they might
115:43 - be different sizes but if they are
115:44 - actually the same dimensions they will
115:46 - appear to be the same size and this
115:48 - creates kind of a flattened 3d look and
115:50 - this is a classic 3d look that you'll
115:52 - see in lots of game certain game designs
115:56 - most famously probably Qbert so and this
116:00 - is called Isum met isometric view is a
116:02 - particular camera angle whoops
116:04 - shoot this is a classic perspective
116:12 - projection that you'll see in a lot of
116:13 - games like Qbert so here's an image of
116:18 - Qbert you can see how this has a kind of
116:21 - like flattened 3d flattened 3d
116:23 - perspective so and this is a this is
116:25 - also referred to as isometric projection
116:27 - so let's see if we can create and this
116:30 - is what a coding challenge I'll let you
116:31 - from this video where I do this and
116:33 - create a scene that has this kind of
116:34 - perspective projection so let me change
116:39 - now I'm gonna take this out and I'm just
116:42 - gonna write ortho in here and you're
116:45 - going to see oops as I go here I'm gonna
116:49 - refresh
116:49 - this is now orthographic projection and
116:53 - what you see it looks like it's skewed
116:55 - but actually as the cube rotates and it
116:58 - gets further away or closer it doesn't
116:59 - change its size so this will be a lot
117:01 - more obvious if I put a whole bunch of
117:03 - these cubes so what I'm gonna do is I'm
117:06 - going to take out the let me keep the
117:08 - rotate in there and I'm going to make a
117:10 - little loop I'm gonna say four let X
117:13 - equal negative 200 X is less than 200 X
117:17 - plus equal 50 and what I'm going to do
117:23 - and I'm going to put push and pop inside
117:29 - the loop and actually I also want to put
117:32 - rotate for each one of these and what I
117:34 - want to do is I want to translate by X X
117:38 - 0 0 so what I'm trying to do let me take
117:41 - out all the rotate and I'm gonna make
117:43 - these boxes 50 what I'm trying to do is
117:45 - just put a row of boxes so there's a row
117:48 - of boxes we can't see that do I have it
117:51 - actually I have ortho on let me take
117:52 - ortho off you can see there's my row of
117:55 - boxes now let's let's actually see this
117:57 - perspective a little bit let's make the
117:59 - boxes a little bit smaller let me give
118:03 - them actually like an ambient material
118:08 - and let me actually have a light a
118:12 - directional light that's shining from
118:15 - that's white that's shining from like
118:19 - the corner so like 1 comma 1 comma 1 so
118:26 - you can kind of see and actually let
118:29 - that light is way too bright really I'm
118:34 - really doing a terrible job of this 3 4
118:37 - 5 triangle right yeah but this is a 3
118:39 - dimension let's just have the light come
118:41 - from the side oh boy wait time out
118:45 - please let me go back to where else oh
118:50 - yeah and let me add a sorry med and
118:55 - let me add a point light just that's
118:58 - white that is above
119:03 - that's like at 0 255 0 negative 200 and
119:10 - then from a little out front 200 so let
119:12 - me so we can see here now and it's I
119:16 - would like this love to this light you
119:17 - can see and let me make the background
119:19 - just a different a slightly different
119:21 - gray so we can see what again you can
119:25 - see there we go so you can see this
119:27 - perspective you can see how I've got
119:30 - this idea of sort of vanishing points at
119:32 - my eye looking at the center of this
119:33 - field of view let's change this to ortho
119:36 - let's put the rotates in and you can see
119:41 - we can see this perspective even more
119:43 - now let's change this to order and
119:45 - actually let me also translate along the
119:48 - z axis because this is going to be kind
119:49 - of key so I want to translate along the
119:52 - z axis so where do I do those translate
119:56 - I'm also going to translate that same x
119:59 - value minus 200 along the z axis and I'm
120:02 - going to make the boxes a little bit
120:03 - bigger whoops oh X there's no Z I'm just
120:07 - gonna use it I'm just reuse the x value
120:09 - so now you can see and let me actually
120:13 - say x times 10 whoops
120:17 - minus 200 oh X minus 200 anyway I'll
120:26 - keep them not so big okay there we go
120:29 - this is what I was trying to get for so
120:30 - you can see this perspective as they get
120:32 - smaller as they go back all right we're
120:34 - getting somewhere now bear with me let's
120:37 - turn on orthographic projection fourth
120:41 - though now you can see first of all ah
120:44 - I have run afoul of the clipping plane
120:47 - so I need to define the near and far
120:50 - point random might have been good and so
120:55 - let me actually give this the ortho
120:57 - function if I look at this WebGL cheat
121:00 - sheet that Simon put together left right
121:02 - bottom top near far so let me say left
121:06 - right bottom top and then near which
121:14 - would be 0 and far
121:16 - negative a thousand is that right whoops
121:19 - and what's going on over here I did
121:21 - something ridiculous with my this might
121:31 - be another one that I have to redo hold
121:34 - on try that again let's just first see
121:40 - if that works
121:43 - what do I need to be how come I don't
121:46 - know there we go
121:47 - why near far far I'm so confused
121:58 - that's so weird
122:00 - I'm just gonna and if I say this Oh near
122:07 - to the camera far from the camera no hmm
122:14 - interesting
122:18 - all right hold on go back to here
122:27 - thank you for the info about when I did
122:29 - the clicking wise alright so I run afoul
122:32 - of the clipping plane so if I go back to
122:34 - and look at Simon's books cheat sheet
122:38 - here which I seem to have lost I know
122:39 - here it is I can see here left right
122:42 - bottom top near far so I can need to
122:44 - define the volume the box were
122:47 - everything I see lives and so I can say
122:49 - right now I want to go left negative 200
122:52 - 200 top negative 200 bottom 200 or is
122:58 - the other way around I think it's the
123:00 - other way around top I don't know listen
123:05 - I never just gonna give myself a really
123:07 - big space negative the house in a
123:09 - thousand just to not worry about it too
123:11 - much and I'm gonna go back to the sketch
123:12 - and we can see there we go
123:14 - so you can see even though those are
123:16 - going backwards they're all exactly the
123:18 - same size so again have I really made
123:20 - the something have I really does my
123:24 - design that I'm doing really merit
123:26 - orthographic projection again taking
123:28 - this out we can see this is what the
123:31 - actual scene looks like and for what I
123:33 - just did I wanted to look this way to be
123:35 - able to see that difference but there
123:36 - are some cases and certain kinds of
123:38 - flattened views of the world that are
123:41 - still have the 3d drawing would appear
123:43 - more flat that you want to use that
123:45 - orthographic projection for okay so what
123:48 - am I missing
123:49 - I have now have done some tutorials
123:52 - about we looked at 3d geometry primitive
123:56 - shapes we looked at material being sort
123:58 - of the skin of that geometry lights
124:00 - being light into the scene texture being
124:04 - a way of taking image data and wrapping
124:06 - it onto that geometry so we've done all
124:09 - these things and now in this video
124:10 - mostly looked at the camera which is a
124:13 - way of moving our view of the scene
124:15 - around changing our field of view or
124:16 - even changing the perspective whether
124:18 - it's actual 3d perspective or
124:20 - orthographic projection the things that
124:22 - I'm missing are how to do some custom
124:25 - shapes in 3d maybe with textures as well
124:27 - how to load a model from another and by
124:30 - and also I should add to this list
124:32 - something called a shader so this is
124:34 - something certainly that can be done in
124:37 - a 3d rendering environment a shader can
124:38 - be applied to geometry in a variety of
124:41 - different ways and so at some point I
124:43 - would like to come back and do that I
124:44 - will make a quick plug for the the book
124:47 - of shaders the into the book of shaders
124:49 - calm I'll link to it in this video's
124:50 - description shaders it's a great
124:52 - resource for learning about them okay
124:53 - thanks for watching this video about
124:55 - camera in perspective alright so I don't
125:07 - know I'm gonna this with these through
125:09 - this 3d stuff this is stuff that I'm
125:11 - like learning new as I'm making these
125:13 - tutorials so I feel like I did get
125:16 - through I feel like today's session
125:19 - successfully talked about you know
125:25 - success it's relative on the grand
125:28 - scheme of things I was more successful
125:31 - farther away from total success but more
125:34 - successful with material texture and
125:39 - sorry material lights and texture and I
125:43 - was less successful with this camera and
125:44 - perspective stuff I think you're
125:46 - clipping plane should be zero 0.1 or
125:48 - 0.01 instead of negative 1000 breaking
125:53 - news and being told that this negative
125:58 - 1000 thing was like probably a
126:00 - problematic idea but what if I put
126:02 - things I don't know so we're gonna see
126:07 - if that's salvageable the edited
126:10 - versions of these tutorials will get
126:11 - published in the next week
126:13 - I think a new playlist needs to be made
126:15 - which is just like a WebGL p5 WebGL
126:17 - playlist and I'll hopefully do more
126:19 - stuff so Oh how to write text ah oh oh
126:25 - this is so so good
126:26 - I forgot about something really
126:28 - important something you could do with
126:30 - texture and create graphics oh I should
126:34 - do a whole mmm I gotta save this so I
126:37 - need to do a whole tutorial what time is
126:39 - it
126:39 - 5:10 I need to do a whole thing on
126:42 - create graph
126:43 - leave this here and come back to it
126:44 - tomorrow so what do I need to do thank
126:51 - you for so to texture and create
126:56 - graphics so first I just want to do with
127:00 - tutorial about create graphics in
127:02 - general okay that's gonna come tomorrow
127:05 - I think this we determined was just a
127:08 - bug sorry this we determined was just a
127:11 - bug in the old version but it's correct
127:14 - in the new version these are two github
127:17 - issues that i need to file so tomorrow i
127:21 - might redo the camera and orthographic
127:25 - projection tutorial like do that again
127:28 - maybe I want to do these two things I
127:33 - guess I could do the custom shapes I
127:36 - feel like it's probably pretty buggy
127:38 - though oh that's a very thick the
127:45 - clipping is relative to the camera oh
127:48 - that's the way to think about zero far
127:52 - near far make sense now to be thank you
127:57 - alka and austin all relative to the
128:00 - camera huh that is excellent
128:05 - hey where's Mike breaking news on track
128:12 - let me quickly correct one thing about
128:15 - ortho the the clipping plane near and
128:19 - far oh I can't believe I didn't realize
128:20 - this is relative to the camera so if I
128:23 - say the clipping plane is between zero
128:25 - that's here and between a thousand
128:28 - that's kind of a thousand units away
128:30 - this sort of like vague
128:31 - three-dimensional units away from the
128:33 - camera so me saying like a negative
128:35 - thousand two thousand is kind of
128:36 - pointless because now the kick that's
128:39 - sort of mine but what if you like rotate
128:41 - the camera something maybe it wouldn't
128:42 - matter but I don't know it but so let me
128:46 - actually just put this back at zero and
128:48 - you know I could say 0.01 maybe is most
128:50 - accurate but just to see that that is
128:53 - yeah so that's what I needed to do I
128:54 - just need a further
128:56 - further far value could start at zero
128:58 - thanks for that
129:08 - that's my electroshock therapy alright
129:11 - alright so I feel that it is important
129:14 - here now let's see if we can look and
129:20 - see where where this point like thing
129:24 - broke so I'm gonna this is gonna be a
129:26 - little bit of a side this could possibly
129:30 - be its own video but I think maybe we'll
129:33 - just leave it in the livestream before I
129:35 - go but I'm gonna show you now is how
129:39 - except I'm not very good at this but my
129:42 - best I'm going to show you how to try to
129:44 - look for where exactly something broke
129:48 - in an open source library so I've done a
129:51 - terrible job this by the way if somebody
129:54 - wants to help me out I have been I've
129:57 - done what I shouldn't do but I said I
129:59 - wouldn't do which is simply work with
130:01 - it's work with the same JavaScript file
130:03 - throughout a whole bunch of videos so
130:05 - when I go to post all these code
130:06 - examples I don't have them anymore
130:07 - because I've overwritten them so if
130:09 - anybody has been watching these last few
130:10 - ones to help and help me compile the
130:14 - code getting a text message this is
130:18 - important and we respond to it
130:37 - just just sorting out what's happening
130:39 - for dinner children need to be fed food
130:44 - needs to be made or ordered it's all
130:45 - very complicated merge in in the chat is
130:51 - says merchant says I'm on it so thank
130:55 - you merging for volunteering to do that
130:56 - that isn't wonderfully helpful okay
130:59 - so wait a sec I'm gonna now should I be
131:04 - so kind maybe I'll save this one so what
131:08 - I'm gonna do is an emergent I can
131:13 - actually send you this one at least if
131:14 - that's helpful what I'm gonna do is just
131:16 - make a separate folder here for WebGL
131:19 - debugging and I'm going to and I'm gonna
131:30 - go here I'm gonna run a server boy I'm
131:36 - never getting to that word to vex stuff
131:37 - mi and Miriam and am I using the current
131:48 - version and now what I want to do I just
131:54 - want to go back to a simple example
131:55 - where there are two point lights
132:00 - negative 200 zero zero red 200 all right
132:10 - let me I don't know so let's just
132:13 - pretend like this could be its own video
132:15 - yes let me set this up and it could just
132:22 - stay as part of the live stream
132:23 - I don't sometimes if it turns out to be
132:25 - this like really illustrative useful
132:26 - thing I'll keep it but so so sphere so
132:33 - I'm going to say ambient material 255
132:36 - sphere 200
132:41 - and we get all this great really simple
132:45 - sketch whoa I'm looking at the wrong I'm
132:51 - editing totally editing the wrong file
132:54 - so that's now the backup the backup
132:58 - hi I'm the worst worse I'm so bad at
133:03 - this
133:04 - what can I do to ever make it go back
133:07 - okay let's take this and copy it this is
133:11 - probably a terrible idea into here don't
133:14 - replace it don't replace it keep both
133:16 - and then take this and copy it into here
133:23 - yes and replace it let me go back to
133:25 - here get rid of this one and rename this
133:29 - one then close this then go back to
133:35 - terminal all of you are I'm just hope
133:40 - you all so pleased with yourself that
133:41 - you have better workflows okay whoa
133:50 - okay so some stuff I gotta fix make this
133:54 - fear smaller stroke alright so we can
134:00 - see here I use version control I know
134:03 - about version control
134:05 - I can't bother with it during lay live
134:07 - streaming it would just take over
134:09 - everything that I do okay
134:13 - Mergent great question so at the moment
134:16 - I would like the examples to work so I
134:19 - we should use whichever virginal library
134:21 - makes the example work and then once the
134:23 - library is fixed we should try to
134:25 - remember to put the corrected version
134:26 - library in okay okay
134:32 - hello and welcome to a debugging video
134:36 - maybe there'll be a new playlist about
134:37 - open source debugging and finding bugs
134:39 - and seeing what we could be helpful to
134:40 - the open source world know if this makes
134:42 - sense but what I'm going to attempt to
134:44 - do in this video is during my WebGL
134:46 - tutorial series I noticed that in the
134:48 - current version of p5 if I create two
134:51 - point lights one on the Left Oh actually
134:54 - one on the left that is red and one on
134:59 - the right that is blue look whoa hold on
135:03 - oh no that's the sorry that's the excuse
135:09 - me do overtime please this is the color
135:15 - this is the position the worst getting
135:23 - tired so I should probably do this
135:25 - tomorrow
135:28 - say what for
135:30 - yes thank you Alka okay I'm very excited
135:36 - about this video I don't know if this is
135:37 - gonna be helpful or make any sense maybe
135:40 - you're watching it maybe you're not mean
135:42 - you are watching it well here's what I'm
135:43 - gonna do this I'm gonna try to have a
135:45 - new series to put that's in a playlist
135:47 - or no series about finding bugs and
135:49 - open-source projects and contributing
135:51 - and helping to fix those bugs like how
135:52 - do we do that and this is gonna be a
135:54 - heart this is a high degree of
135:55 - difficulty one so I'm not starting with
135:57 - something simple and this will probably
135:59 - fail but I'm gonna do my best
136:00 - so I just did a whole set of tutorials
136:03 - about WebGL and one of the thin p5 one
136:06 - of the things I noticed with help from
136:08 - the viewing audience is that if I put
136:10 - two point lights in the scene here's a
136:12 - point light that's red that's on the
136:15 - right side of the canvas here's a point
136:17 - light that's blue that's on the left
136:19 - side RGB X Y Z and then I have a sphere
136:23 - with ambient material that will reflect
136:24 - that light what do I actually see I only
136:27 - see a blue light on the left now this is
136:29 - using p5 version zero point five point
136:33 - one six so let's just let's just be sure
136:39 - about this so I'm going to take this
136:40 - point light and put it second now you
136:43 - can see only the red point light what I
136:45 - want to see and I'm going to show you
136:47 - this really quickly I'm gonna go to my
136:48 - index.html file and I'm gonna switch I'm
136:50 - gonna talk about how I'm doing this i'ma
136:52 - switch versions of the library this
136:54 - isn't working
136:54 - this isn't working with version zero
136:56 - point five point seven so somewhere in
136:59 - between zero point five point seven and
137:01 - zero point five point one six this
137:03 - feature broke this is I feel like I want
137:06 - some like cool Oh didn't
137:08 - Pink Panther her beam some music to play
137:10 - because we're gonna do some detective
137:11 - work now how can we find this so first
137:13 - of all how did I switch between the
137:15 - libraries so quickly so one thing you
137:17 - might notice about this particular bit
137:19 - of code you can ignore this kittens
137:21 - folder but I actually have the p5.js
137:24 - library here locally and that is the
137:27 - current the current as of the time of
137:29 - recording this video version of the
137:31 - library and in this and you can see here
137:34 - in my HTML file I'm referencing that
137:37 - particular local p5.js file now it's now
137:41 - commented out I could comment it back in
137:43 - what I decided to do it's really eat
137:45 - much easier is that I could use
137:47 - something called a CDN which is stands
137:49 - for content delivery network and if I
137:51 - search for CDN p5.js what I'll get is
137:56 - this particular website CD nsj comm and
138:00 - it has hosted versions of the library
138:03 - that I can reference in from my HTML
138:05 - file and I can get the links for any old
138:08 - version now one of the ways I'm going to
138:10 - do this right now is I'm just gonna go
138:12 - here I'm gonna put 16 in here and I
138:15 - could just we could do this all day
138:17 - right I'm gonna go back sorry to the
138:18 - sketch hit refresh it's broken so I
138:21 - could say 0.15 still broke it point 1 4
138:27 - still up it's working in 0.5 point 1 4
138:32 - so for some reason I went all the way
138:33 - back to 0.5 0.7 when I was doing my
138:36 - session but now I can see it actually
138:37 - works in 0.5 0.5 0.14 so what does this
138:42 - mean time for me to go to github so the
138:45 - p5.js project is an open source project
138:47 - on github it's a complex open source
138:50 - project with many files and many
138:51 - developer tool like workflow like crazy
138:54 - things or some documentation that's
138:55 - pretty good there's some documentation
138:56 - that could be better that we're working
138:58 - on that people are contributing to but
139:00 - let's just go right now to the github
139:04 - repository so one of the things this is
139:06 - the URL github.com slash processing
139:08 - p5.js one thing you should do is you
139:10 - should go click on contributors and just
139:14 - meditate for a minute and thank all
139:16 - these wonderful people who are putting
139:17 - in all these work and and I could say
139:19 - Karen just to highlight some people care
139:21 - and paying
139:22 - to the in terms of WebGL Karen Peng
139:24 - indefinite and I think if we come down
139:27 - and and find also Kate Hollenbach right
139:30 - here and I don't know what Stahl Jia so
139:33 - mind if Matthew did a lot of work in
139:34 - yeah here's a me I am Samia coding
139:36 - trained viewer so there's a lot of
139:38 - people on here
139:39 - I'm thank I'm just referencing some of
139:41 - the people who have done a lot of that
139:42 - WebGL work so something I can do now
139:45 - next is I can just go back here to
139:47 - commits now here's the thing I can sit
139:50 - here and look and look and look and look
139:52 - and look and look and try to find it
139:53 - look at look at dates and commits but I
139:57 - kind of there's got to be a way I can
139:58 - search for where this particular commit
140:01 - happened so first of all one thing I
140:02 - should be able to do is look for the tag
140:07 - for a release so I think if I search for
140:10 - zero point five point one four and
140:13 - actually it's point one five that broke
140:16 - it how do I look for a tag a commit that
140:20 - has a certain tag maybe they are tagged
140:25 - maybe that's not maybe that's advanced
140:28 - search I guess I could do attack thank
140:34 - you that's the releases alright so let
140:40 - me try to look over the search didn't
140:42 - work I think what to edit back Mattia to
140:44 - the search click on releases on the
140:46 - front page I suppose do that so let's go
140:49 - to to try to search what happened with
140:51 - zero point five point one five let's go
140:53 - to releases so we can see here zero
140:56 - point five point one six zero point five
140:59 - point one four hey where's point one
141:01 - five that's weird I don't know what I'm
141:06 - missing here so normally you would think
141:08 - there'd be a one five and oh yeah anyway
141:11 - I don't know maybe in my mind the math
141:12 - of my mind is just so we can see these
141:15 - are all the commits 628 commits since
141:17 - this release so we would think that in
141:20 - these commits one of these one of these
141:24 - would have broken that point light now
141:26 - something that I could do first of all
141:28 - is I think an easier path towards
141:29 - finding this so might be where is the
141:32 - source code for point light itself and
141:34 - by the way this same
141:35 - I think happens with directional light
141:37 - so if I go into source maybe someone
141:40 - watching this live right now even know
141:42 - if you're watching this recorded is
141:43 - actually gonna find this before me and
141:44 - can help me out here
141:45 - but I'm gonna go under WebGL and light
141:49 - so we would think probably in like j/s
141:52 - this maybe is where this issue might
141:56 - have happened and I can actually if I'm
141:58 - in that file I could look at the history
142:02 - of just this file by where it where do I
142:06 - how come I don't see by the way I'm
142:08 - logged in as myself so I have some
142:10 - ownership privileges over this
142:12 - repository so you might you might
142:15 - actually wise if you're following along
142:16 - and trying to do this to you this might
142:18 - look a little bit different to you but
142:19 - everything you'll be able to see so what
142:21 - I want to see is the history for this
142:22 - file I don't know why I'm let me just
142:26 - look at the history there's a button
142:28 - right there that says history so let's
142:30 - look at this floor mat format so let's
142:34 - kind of like look along here when was
142:36 - when was 0.5 point 1 6
142:39 - when was that released so let's look at
142:42 - sorry let's look at the date let's look
142:47 - under releases I'm a little just and
142:50 - that was August 28th so somewhere right
142:54 - because one for with one for it's
142:56 - working let's just confirm that again
142:58 - that's one for and it's working so some
143:01 - some and look major WebGL updates we can
143:05 - see that that happened there let's go
143:06 - back here
143:07 - so 15 days ago Noah so we can go all the
143:10 - way back up we can here we go initial
143:13 - implementation of custom shaders so
143:16 - sorry this is so small so we can now see
143:19 - there was a commit to this file on
143:21 - September 5th
143:22 - there was a commit on September 11th
143:25 - September 15th thank you
143:27 - kate Hollenbach and Lauren McCarthy
143:29 - probably isn't this amazing work
143:31 - Zala stacks so let's see probably the
143:34 - print function is not related hopefully
143:37 - this is not related my guess is there's
143:40 - got to be an issue inside one of these
143:43 - so let's look at what these commits
143:45 - actually do so I'm going to open these
143:47 - in new tabs
143:49 - so we can see so we can see this is what
143:52 - and this is a little difficult for you
143:54 - to look at because it's so sort of tiny
143:56 - on my screen but we can see this changed
143:59 - what changed here instead of it oh yeah
144:03 - so this is like a little bit of like
144:05 - this to me looks like a minor change
144:07 - that's cleaning up the reference to how
144:12 - this is being used this is removing
144:16 - shader using this renderer current fill
144:19 - shader so this could have something to
144:21 - do ambient light count so that's what
144:22 - the ambient light let's look and see if
144:27 - we can find directional light count so
144:31 - this must be some issue here right where
144:35 - is the I kind of want to look at the
144:37 - point light do you think this could be
144:41 - for the point light let's see what else
144:44 - there is render that's the same thing
144:49 - it's a material stuff changed point
144:52 - light ah here we go the point light
144:55 - changed so this is point the point light
144:58 - function changed so let's look at that
145:05 - let's so one thing we can do once we
145:07 - sort of found it I might be able to go
145:10 - actually into the p5.js code itself and
145:14 - find point light kind of hack with it a
145:17 - little bit need to find the actual
145:20 - function sorry this is point light
145:24 - equals yeah here's so this is me finding
145:28 - the actual function in the p5 library
145:30 - and this is what changed this so let's
145:40 - see boy this is again high degree of
145:42 - difficulty one no what's weird here is
145:45 - it doesn't look like oh yeah point light
145:50 - count let's look for that that seems
145:52 - like that's going to be ref relevant
146:01 - hmmm this might be look at this look at
146:05 - this amazingly that's it like that
146:08 - looking in the chat change the diff view
146:12 - to inline instead of side by side good
146:14 - point so if somebody in the chat is
146:17 - telling me that I can change the diff
146:19 - view to unified I think yeah thank you
146:25 - for that
146:26 - that's gonna help me a lot so this has
146:33 - changed the way now the other thing that
146:35 - were other commits right this is the one
146:37 - I'm just looking at here resolving
146:39 - conflicts let's look at that one well
146:42 - that's the first one let's look at so
146:44 - sorry there were two right this is the
146:47 - initial there's initial implementation
146:51 - and resolving conflicts so let's also
146:53 - look at this initial implementation
146:56 - could it have broken in here and I think
147:02 - actually now that I'm looking at this so
147:08 - there is a moment where this point light
147:10 - count goes up and then it should set it
147:17 - with a different point light hmm so
147:20 - whatever it did before this this
147:23 - solution does not work hmm so let's see
147:27 - if we can hack something together first
147:28 - of all let me at least just add
147:30 - console.log this underscore renderer dot
147:35 - point light count so let's see what
147:43 - happens now when I go to the sketch now
147:47 - one thing I need to do is I need to
147:49 - avoid so one thing that's little bit
147:51 - unfortunate is this is a massive text
147:53 - file and you there's no reason why I
147:56 - can't edit and play around with this but
147:57 - I find that atom tends to crash which it
148:00 - looks like it's just done so I'm gonna
148:02 - switch to visual studio
148:13 - oh this is I'm getting a good tip this
148:21 - stop so hold on
148:25 - I was so yeah force closed so I'm gonna
148:34 - I'm gonna open this project up in Visual
148:36 - Studio because I need to use that that's
148:42 - gonna be that's gonna be better
148:46 - hopefully in letting me play around with
148:54 - the actual p5 library so one thing I
148:57 - want to do is make sure I'm using the p5
149:00 - library the current one that I'm editing
149:02 - now and then I'm gonna go into the
149:05 - libraries and I'm gonna go down I'm
149:08 - gonna look for point light count and
149:12 - this dot renderer so I want to just sort
149:15 - of see whoops I want to see if what's
149:21 - happening in the sketch so you can see
149:25 - one two one two one two one two so
149:28 - that's happening the count is going up
149:31 - every frame current fill shaders set
149:37 - uniform that point light count this so
149:40 - something is wrong the point light
149:44 - location is being set so am I getting a
149:48 - new point light location each time let's
149:53 - look at what these values are so I am
150:00 - getting the point light location so
150:03 - again I don't know how any of this stuff
150:05 - works this is like the underlying WebGL
150:07 - code it takes the location the color and
150:11 - it kind of feeds it to these other
150:12 - renderer shader II things and it should
150:15 - be making multiple ones but for whatever
150:17 - reason so what's going on and for what
150:21 - when I make a point light this now all
150:29 - that's happening and it's getting the
150:33 - two different locations but am i over
150:35 - I'm just over writing the last one so
150:38 - something about Kerr Phil shader being
150:40 - overwritten is the problem hmm I doubt
150:46 - we're gonna be able to fix this in this
150:47 - video this is what I said by high degree
150:49 - of difficulty I probably should give up
150:50 - and just kind of point out that this
150:52 - isn't working and where I think the code
150:54 - problem is and the github issue I'm
150:55 - about to post but let's try a little bit
150:57 - more right so current Phil share let's
151:02 - take a look at what this object is maybe
151:14 - I can learn something here whoo
151:16 - undefined so I'm gonna say no loop just
151:23 - stop everything right now and I'm just
151:25 - going to look at this object so this is
151:28 - the object that it's doing stuff to and
151:34 - actually what would be really useful I
151:37 - have an idea now which is that what I'm
151:40 - going to do is I'm actually going to put
151:43 - in my sketch I'm going to put no loop
151:47 - here and what I'm going to do in the
151:52 - library code that I'm messing around
151:53 - with is I am going to look at this at
151:58 - the end of each of each time at the
152:05 - beginning and the end of each function
152:07 - time it's called so I'm going to put
152:09 - this at the beginning and I'm gonna say
152:18 - I'm gonna say console.log new light so
152:26 - let's try let's see let's see where this
152:27 - gets us okay so new light let me clear
152:32 - this
152:35 - so we got a new light and this is what
152:37 - the shader looks like and this is what
152:39 - it looks like at the beginning this is
152:40 - what it looks like at the end and it
152:42 - seems like the important thing that it's
152:43 - looking that it's messing around with is
152:48 - current set uniform so what is that so
152:53 - maybe that gets set in here is there a
152:56 - point light color point light count
152:59 - point light location so look at this
153:01 - here's the point light location here's
153:03 - the point light count and here's the
153:05 - point light color so now at the end of
153:09 - that function oh that's the end it
153:11 - should have let's go look at the end of
153:12 - the second one if we look at the
153:16 - uniforms and we look at the point light
153:18 - count why does it say 1 it should have
153:22 - gotten to 2 it should have gotten to 2
153:29 - right getting some advice where I
153:31 - probably and what I normally would have
153:33 - done you're right is like just take the
153:34 - old function but I think the reason why
153:37 - I'm not doing that in this case is
153:38 - because I think a really big part of the
153:40 - architecture changed so this this change
153:43 - is just really is related to like the
153:44 - full architecture of how everything is
153:47 - working so so it's not as simple I think
153:50 - of just replacing the function which
153:51 - normally it would be so this is strange
153:55 - that this size says 1 because maybe
154:07 - because it didn't seem to really set it
154:09 - right it sets it as 2 and then it says
154:12 - set uniform to what that is but it
154:15 - didn't get set to 2 point like count
154:20 - name size type right so that seems it
154:24 - seems to not be taking
154:30 - did I forget that this dot again
154:32 - somebody to keep telling me that but
154:34 - right so like right hard code to in
154:40 - there and see alright interesting
154:41 - getting the suggestion to try hard
154:42 - coding to in here and let's see like
154:44 - hold on on a hard code to in there now
154:55 - let's look at the very last time
154:58 - uniforms point light count one hmm so
155:09 - I'm getting some interesting messages in
155:11 - the chat
155:12 - maybe the uniform changed name does set
155:15 - you point light count hold on a second
155:18 - here you point like count that's what it
155:21 - says there do i is this by definition
155:25 - like you point like location let's look
155:30 - at you point light location size 8 so
155:34 - where does that value where is the
155:36 - actual value those sighs so sighs sorry
155:39 - size is like it's just one number so
155:41 - it's actually I think sighs so the
155:44 - actual value is somewhere these are just
155:46 - the uniforms sorry this is just saying
155:48 - what the uniforms are when I set it it
155:50 - probably goes into the shader or the
155:54 - renderer ambient like yeah yes sorry
155:58 - sorry sorry sorry so this is really
155:59 - where I want to look current default
156:06 - light shader is that where it's gonna
156:08 - get set uniforms yeah this is I think
156:13 - these are just a list of the uniforms I
156:15 - am really lost here I've no idea how any
156:18 - of this stuff works I think probably I
156:21 - should just file my I should just file
156:26 - this bug and he'll give up that this is
156:29 - going to be a new series there was
156:31 - another object inside the uniform maybe
156:34 - in you point late so Leonardo is saying
156:37 - there was another object inside the
156:40 - uniform scrolled past
156:44 - all right thank you everybody so let's
156:48 - go here so hold on uniform you point
156:58 - light count location no name sighs so
157:06 - what did I miss what did I miss be more
157:09 - specific
157:10 - Matthew Brown is saying I should really
157:12 - look at calm up compare I'm gonna try
157:15 - that too renderer I passed it renderer
157:20 - okay
157:21 - everyone's got good suggestions here
157:24 - renderer renderer renderer down at
157:36 - shaders default light shader uniforms is
157:43 - this where I need to look up I don't
157:52 - know where right there where it passed
157:54 - it again okay okay attributes
158:10 - pointlight counties - how come I don't
158:12 - see it count count
158:36 - it would be helpful if you have more
158:40 - specific renderer what's the next thing
158:42 - what's after renderer scrolling up
158:46 - doesn't help me because you guys are 10
158:47 - seconds or 20 seconds in the past so
158:50 - you're at a different renderer point
158:51 - like oh it's just in there as point
158:53 - light count there we go thank you okay
158:56 - point light count I see it
158:58 - so that's correct but so that value is
159:04 - correct but are there actually where
159:08 - where does it keep track of both
159:09 - locations
159:10 - thank you I see that now please give up
159:14 - now and go home yeah we all found the
159:21 - point light count because it's on the
159:23 - screen how many of you errs have I lost
159:25 - now but now I'm hard coding it yeah yeah
159:27 - I know I know
159:28 - all right let's let's let's unhard code
159:31 - that I suspect that that's working like
159:37 - the value of the variable is correct
159:44 - it's correct point light count the issue
159:48 - is where does it keep track of see
159:52 - there's a default there's the current
159:53 - that seems to me the issue might be
159:54 - around the fact that there's a current
160:00 - this sort of like current light so it's
160:05 - keeping track of the count correctly
160:09 - default light shader so the question is
160:17 - it's our current light shader no current
160:21 - fill shader current stroke shader
160:26 - default light shader
160:32 - let's forget the attributes position
160:38 - right so this is just
160:53 - it should be passing an array a point
160:55 - through the uniform you can log that
160:57 - array if you did not before in the
160:59 - renderer one you're probably right so
161:02 - first of all probably not even an issue
161:05 - here that's a very good point Leonar let
161:08 - me go back to some suggestions that
161:09 - people have had i really just meant to
161:14 - file a bug but i so i'm gonna just look
161:18 - at one thing i'm gonna look at is the
161:21 - compare so there's a way i think i can
161:27 - form a URL that's going to just compare
161:33 - these two different releases and under
161:39 - files changed i can probably go to let's
161:47 - look at the renderer
161:52 - which is the which is the hold on to do
162:00 - let's look under it boy I really don't
162:02 - know what I'm doing doing it let's look
162:03 - under WebGL render orgy out now a
162:06 - problem let's look at this one now are
162:08 - we in immediate think we're in immediate
162:10 - but let's look at just render or GL yeah
162:17 - this is where probably the light so
162:23 - let's look at so can I is there a way
162:27 - for me to compare between versions a
162:29 - particular file that's the question
162:32 - right so how do I compare a particular
162:36 - file but I could just look for a GL
162:38 - renderer right renderer what was it
162:42 - called rendered render renderer GL
162:53 - yet whoops
163:02 - large disks are not rendered by default
163:04 - yeah let's yeah here is just gonna do it
163:11 - well that's just the whole file all
163:13 - right I'm like somebody had a sensible
163:21 - suggestion
163:26 - you could add a breakpoint and debug the
163:29 - function oh that's like yeah that's way
163:31 - too sensible I've kind of done that I
163:39 - just want to see like where does it
163:41 - actually I want to trace where it
163:44 - actually sets that light so in the
163:52 - renderer look at this crazy ambient
163:55 - light count the render has a point light
163:57 - count right and it has a fill function
164:09 - so let's go look yeah interesting I'm
164:17 - just kind of like peeking through this
164:23 - as no this is the thing I have no idea
164:26 - how the WebGL system works at all I
164:28 - really shouldn't be doing this
164:41 - yeah all the only thing in the renderer
164:43 - is the point light count let's see if
164:46 - that setting a debug marker and letting
164:51 - it trace it for you
164:54 - console.log okay hold on no see I can
164:57 - see that it's working this is what I've
164:59 - been to a console logging I've been
165:00 - looking at the oh but I was looking at
165:02 - the fill shader ah let's just look at
165:08 - the renderer let's just look at the
165:10 - renderer thank you that let's try that
165:20 - let's look at the renderer point like
165:24 - count to default light shader yeah am I
165:34 - missing the dis dot oh yeah sorry thanks
165:39 - that worked anyway yeah I meant for this
165:47 - just to be a lesson in filing a good
165:49 - github issue yeah so here's the thing
165:56 - these are all really excellent
165:59 - suggestions for example turkey writes
166:02 - copy only the correct rendering a J's
166:04 - file from the new version to old and see
166:06 - if it fixed it and then and only then
166:08 - and you know you're on the right track
166:10 - the issue I totally agree and this is
166:12 - actually I should have picked a
166:14 - different example like if there was kind
166:16 - of this small area but I'm pretty sure
166:17 - that between zero point five point one
166:20 - four and zero point five point one six
166:22 - like all of WebGL was rewritten to do it
166:25 - like to work in an entirely different
166:27 - way so there really isn't one thing that
166:29 - changed this is a pretty poor example
166:31 - it's like everything changed so at this
166:33 - point I just need to figure know how the
166:35 - current system works and find out why I
166:36 - can't keep track of multiple so it
166:38 - didn't really break it's just like the
166:40 - whole thing got rewritten and some stuff
166:41 - stopped working so that's so that's so
166:47 - that's really I think more of the issue
166:50 - with this particular hood so I think
166:53 - what I'm gonna do now and this can't be
166:55 - set probably can't be salvaged I love
166:56 - the idea of doing this is I think I'm
166:58 - gonna just file a github issue unless so
167:04 - let's look at alright so if this is
167:08 - going to be salvaged into a tutorial
167:09 - video at some point a long time ago at
167:14 - Matthews discretion I'm going to stop
167:22 - and say ok let me find a window to be on
167:31 - okay that was a weird edit point if this
167:33 - video ever exists but I went down many
167:36 - different rabbit holes to try to find
167:38 - the bug and you might have seen some of
167:40 - that happening and what you watched up
167:41 - until now but this was pretty pretty
167:43 - much a case where I my skill level I
167:46 - cannot fix this bug there's a couple of
167:48 - reasons one I don't have all day here I
167:50 - gotta go have some dinner two is I don't
167:53 - really know how the WebGL system works I
167:56 - wasn't one of the ones who designed it
167:57 - and I won't be able to investigate that
167:59 - fully right now and three like this is a
168:03 - case where it wasn't like a small bit of
168:06 - code change that broke that I could look
168:08 - at reverting over the summer between
168:11 - version zero point five point one four
168:13 - and zero point five point one six all a
168:16 - lot of WebGL was kind of rewritten and
168:18 - structurally so so much changed and I
168:21 - think it's less a case of like if this
168:23 - thing broke and more of WebGL was
168:25 - rewritten in a new way and some things
168:28 - aren't working anymore so let's let the
168:29 - next step could be filing a github issue
168:32 - that's as helpful as possible so let's
168:35 - do that together here in this video so
168:38 - I'm gonna go back to the p5.js
168:40 - repository and I'm going to go to issues
168:44 - and I'm going to first thing you should
168:47 - always do is I should look to see if
168:49 - there's already an issue so I'm gonna
168:51 - search for point light point light not
168:55 - working that's October night that's
168:58 - interesting issue with positioning point
169:00 - lights so this could actually be this
169:03 - could actually be our issue let's take a
169:05 - look so this seems to be describing
169:11 - something different and look we should
169:14 - aspire to have such a well-written issue
169:17 - I asked point Luke should you use
169:20 - real-world could rather than a
169:21 - normalized direction like directional
169:22 - light so this seems to be something
169:24 - different this seems to be an issue with
169:27 - and also this is using a previous
169:30 - version of p5 so I'm going to not worry
169:33 - about that so this I don't think is our
169:36 - issue although it might be related and
169:39 - positioning point lights so
169:43 - this I think is also a similar issue and
169:48 - so this week it's probably worth
169:50 - referencing these two issues and then I
169:54 - just want to look at so let me save this
169:57 - here let me save these two issues and
170:00 - let me look
170:01 - what else could I look for lights yeah
170:07 - issues so I don't think there's anything
170:10 - else related to the light so I to this
170:13 - issue so I think we can file an issue so
170:15 - I'm gonna write a new issue now what I'm
170:17 - gonna say only one point light or
170:22 - directional light works what's a good
170:30 - what's a good title for this issue
170:35 - what's a good title for this issue let's
170:37 - see I'm trying to give a good one
170:40 - subsequent calls to point light
170:42 - overwrite previous point lights multiple
170:46 - point lights or directional lights not
170:54 - working I know maybe that's I don't love
170:56 - this title maybe something can think of
170:58 - something better now this is helpful I'm
171:00 - going to this can be this what so this
171:04 - is like a helpful guide so what I'm
171:06 - gonna do is instead of this I'm gonna
171:08 - say I'm gonna leave some of this in here
171:11 - I'm gonna say found a bug and the most
171:15 - appropriate area is WebGL and which
171:22 - platform so this is using desktop and p5
171:31 - just version we are using zero point
171:34 - five point one six web browser is a
171:38 - Chrome and I'm gonna say about Chrome
171:44 - and I'm gonna put this in there be
171:49 - really diligent about this and I'm gonna
171:55 - say operating system
171:57 - Mac Mac OSX and my operating system is
172:03 - ten point eleven point six ten point
172:08 - eleven point six and now I'm going to
172:12 - take out these comments and I'm up now I
172:14 - wanna describe how do i reproduce this
172:17 - bug so the following code in the
172:27 - following simple example which positions
172:33 - two point lights one on the left one on
172:38 - on the right only the last point light
172:43 - is illuminated is active is seen is I
172:49 - selected mobile sorry thank you is the
172:55 - platform is wrong I got it I got it
172:57 - though is one on the left one on the
173:00 - right only that is activated is active
173:03 - so one now I want to add some code so
173:07 - one thing you can do is well you want to
173:08 - add a block of code you add it in
173:10 - between these backticks and you can
173:12 - actually say the language and I can now
173:14 - go to the sketch which is my code here
173:19 - and I could and I can get rid of this
173:23 - and just do this so I'm gonna add this
173:27 - here so now I'm going to put this here
173:30 - the other thing I could do to be really
173:32 - kind of crazy is I could add some
173:35 - screenshots so I'm just say this is with
173:40 - the red light second so now I'm going to
173:47 - go to I'm over doing it just for effect
173:50 - here which you know that some of this
173:52 - may be unnecessary so so I'm going to
173:58 - take a little screenshot of this and
174:01 - then I'm gonna say and now I'm going to
174:04 - do the blue light second
174:10 - and I'm gonna do this and I'm gonna say
174:18 - back to my issue follow it with the red
174:26 - light
174:27 - second ie and I'm gonna take these two
174:35 - here and then I'm going to upload that
174:41 - image that screenshot which should be on
174:45 - the desktop of this one and that's the
174:48 - red light second with the blue light
174:55 - second and I'm going to take this
174:59 - screenshot and I'm gonna put the code in
175:02 - there the the this bug appeared
175:16 - somewhere between zero point five point
175:20 - one four and zero point five point one
175:22 - six using zero point five point one for
175:25 - the you both lights are active so now
175:32 - I'm going to go back to my code and I'm
175:35 - going to switch to zero point five point
175:39 - one four which I think that's what I'm
175:42 - doing here I'm going to run the sketch
175:45 - again I have too many things open and
175:50 - I'm going to screenshot this and I'm
175:55 - going to add that to this issue add that
176:06 - in here whoops I'm gonna add that in
176:08 - here oh you broke my computer stop why
176:12 - is that there go away fine dirt ah
176:15 - everything is falling apart and a
176:19 - forestry lunch my finder
176:23 - I don't know why that just did that and
176:25 - then I'm gonna grab this one and put
176:26 - this here and then I'm also going to
176:30 - write I'm also going to write the same
176:38 - bug exists for directional light this
176:49 - may be related to and then so I'm
176:52 - writing here this may be related to and
176:55 - so remember had these issues 2 2 5 1
176:59 - so I want to reference those other
177:01 - issues by their number 2 2 5 1
177:04 - that's an issue that I think might be
177:05 - related and what's the other one 1 6 2 2
177:16 - then I'm going to say this issue was
177:21 - filed by the viewers of the coding train
177:26 - live ok so now the next thing I can do
177:30 - is I can check my work so I can go over
177:34 - here to preview and we can see here
177:37 - whoops so I've got some weird mistakes
177:39 - here which is it got like some spaces
177:41 - here so I found a bug WebGL p5 GS
177:47 - version web browser operating system in
177:50 - the following simple example which
177:51 - positions to point lights one on the
177:53 - left one on the right only the last
177:55 - point light is active I don't like the
177:58 - way that sounds
177:59 - only the the the the second call to
178:06 - point light the second call to point
178:08 - light overrides the first rather than
178:12 - adding a new light that makes more sense
178:15 - I think so the second call to point
178:17 - light overrides the first rather than
178:19 - adding a new light so here's the code
178:22 - with the red lights like oh these are
178:24 - huge these images that's fine though I
178:27 - guess and then with the blue second
178:30 - light this bug appeared using 0.5 on
178:32 - both lights are active the same bug
178:34 - exists for directional light and this
178:35 - may be really
178:36 - this okay calling all viewers I think
178:41 - this issue is done
178:44 - does anybody have any suggestions
178:47 - anything that I missed or anything that
178:48 - would be helpful here adding a point
178:52 - light overwrites the previous one yeah
178:55 - the second call two point light and
178:57 - let's call that let's make this a
178:58 - function and you can use a single
179:01 - backtick overwrites the first rather
179:04 - than adding a new light overrides
179:07 - overwrites so should I say the question
179:12 - is do we like this title anybody have
179:14 - any better suggestions for this title
179:19 - yeah I suppose the convention could be
179:22 - to say this multiple point lights I
179:24 - don't know I'm gonna leave it lowercase
179:29 - so Austin is saying that I should have
179:32 - checked if the issue was closed and
179:34 - reported in a previous version too I
179:35 - should I'm tired now so please if
179:40 - somebody finds something else that's
179:41 - relevant that it was open and closed
179:42 - please add that as a comment to this
179:44 - issue only the final light source is
179:48 - rendered okay I like that only final
179:54 - light source point light directional
179:58 - light is rendered do we like this better
180:05 - I think this might be better let's let's
180:10 - use the camel case for these since
180:11 - they're the function names
180:19 - to someone saying there's a two two five
180:21 - seven issue is that what I said already
180:23 - oh there's also two two five seven okay
180:26 - let's look at that issue two two five
180:31 - seven fixed directional light and point
180:36 - light oh oh ah so maybe this this is
180:51 - before oh right because it could have
180:54 - been off you make a really good point so
180:56 - one thing I didn't do oh boy
180:58 - so I really botched this Austin's thing
181:00 - I should check if it's been closed
181:02 - already because it could have been fixed
181:04 - and closed but not but not in the new
181:07 - release zero point five point one seven
181:10 - oh I really should have said that
181:11 - earlier so yeah I'm just figuring all
181:12 - this stuff out too so let's let's do
181:14 - let's be let's be a little bit let's
181:16 - let's actually look for this so I'm
181:18 - gonna go back to looking for lights and
181:21 - I'm gonna look under closed so it
181:27 - doesn't look like any of these let's
181:30 - look at point light
181:33 - so oops so I'm not finding anything this
181:49 - is closed November 7th November 2nd so
181:53 - these seem to be different right these
181:56 - are some things that happened recently I
181:58 - don't what was the date of 0.5 point 1 6
182:01 - this was on October 11th oh look at this
182:06 - so 2 2 5 7 would it be funny if this has
182:11 - been fixed already after all of this
182:14 - October 11 viewed commented commented
182:25 - please see the new pull request here
182:31 - so this fixed directional light and
182:35 - point light this is Maurice uh November
182:44 - 2nd oh I love the lessons we learned in
182:46 - programming but is it just a document
182:50 - documentation let's look it looks like
182:52 - it's just the documentation right
182:57 - everybody look at this with me it's just
182:59 - the dot we could be certain about this
183:02 - it's still broken on master okay right
183:06 - so heading juror is saying I should try
183:09 - the latest revision from master to see
183:11 - if the bug has been fixed I should but
183:14 - then I'd have to like get the whole
183:16 - thing and build in I don't know now I
183:18 - really like it's like after six o'clock
183:21 - there's like two hours so thankfully so
183:25 - okay another thing that I should have
183:33 - tried is to actually check because there
183:36 - have been some things that have there
183:38 - have been one thing that I should
183:44 - mention that I should have also done a
183:46 - search for is that there have been 382
183:49 - commits since October 11th and 0.5 point
183:52 - one six is from October 11th so one of
183:55 - these could have actually fixed it and
183:57 - I'm not going to see that fixed so I
183:58 - should search through also the closed
184:00 - issues I couldn't find anything and a
184:02 - very kind viewer has actually checked
184:05 - that the current version of p5 even from
184:08 - github that's not that's newer than 0.5
184:10 - point one six isn't working so I think
184:14 - this issue is ready to be filed now I
184:16 - should do a follow-up video somebody
184:18 - remind me of this to show you how do you
184:20 - really check that how do you build and
184:22 - use p5 GS from they'll get hub
184:26 - repository how do you have the most
184:27 - recent version that includes includes
184:29 - fixes following the most recent release
184:31 - that would be worth looking at at some
184:32 - point in this new series I have about
184:35 - how to work with open source projects on
184:36 - github hopefully better than I can do
184:39 - because I'm apparently not very good at
184:42 - this but I'm trying my best so let's go
184:43 - back to that issue and
184:44 - even taught me to close all my tabs I
184:46 - definitely should so our title final
184:48 - title is only the final light source
184:55 - point light directional light is
184:57 - rendered
185:05 - and this is all the code these are the
185:08 - different screenshots I think this is
185:10 - ready to go I don't know about the title
185:12 - I'm still not so sure about the title
185:14 - but this is gonna have to be yeah there
185:16 - isn't there could be Knightly build oh
185:18 - there's too much too much ago I will
185:19 - talk about this up in another video okay
185:21 - not to you if you could salvage this you
185:23 - are a genius I'm gonna submit this issue
185:26 - it's very exciting
185:28 - oh now I don't think you have the
185:32 - permissions to do this but because I am
185:34 - an owner of this repository I can
185:37 - actually tag it with WebGL so I'm gonna
185:39 - do that
185:41 - and I'm gonna do submit alright thank
185:51 - you very funny good night thank you
185:55 - thank you very much oh well just as I
185:59 - had imagined huh wasn't it broken in 0.5
186:04 - point one 300 I forgot that pull request
186:08 - oh shoot no but that was just the docks
186:11 - so I think that docks isn't worth to
186:13 - mention because it's just the pull
186:14 - request but do I really have to check
186:18 - this now let's go back to here no it's
186:26 - working in five one three five one two
186:29 - so it worked every everywhere town
186:31 - before the summer okay okay so now we're
186:39 - done with that issue what's the other
186:40 - issue custom shaves Aerith camera right
186:45 - let's do another clock okay no no I'm
186:50 - going so this is another github issue
186:52 - anybody who watched this video and feel
186:55 - so inclined and feels like they feel
186:57 - they feel empowered and they feel like
187:00 - this is no big deal
187:01 - I can file an issue I think an issue
187:04 - should be filed that you get a consult
187:07 - error in your sketch breaks if the
187:08 - camera and the center are the same maybe
187:11 - it should just give you a friendly air
187:12 - maybe if the error is fine actually
187:13 - think about that is that a bugger is
187:16 - that
187:16 - the appropriate behavior I don't know
187:18 - all right
187:19 - I really should read some random numbers
187:24 - right and we've got to do that I'll be
187:27 - back tomorrow but I really should do
187:28 - that now somebody last time told me
187:31 - where I last left off what might what I
187:38 - do this for like so many hours it's
187:41 - ridiculous
187:45 - where where where did I last leave off I
187:48 - remember I read the foreword there's no
187:50 - I read the acknowledgments there's no
187:51 - way I read this whole introduction oh my
187:55 - god I don't know I can't know if I can
187:56 - bear to do this I guess like no no no I
188:09 - know but see I made this I made this
188:12 - commitment to instead of just when I
188:14 - read random numbers on the coding train
188:16 - because that's what I like to do instead
188:18 - of chest flipping to a random set of
188:20 - random numbers and reading them I made
188:22 - this commitment to actually kind of like
188:24 - keep track of where I last was and read
188:26 - all of them all the way through so the
188:30 - problem is that I thought oh I should
188:31 - also read the introduction which is
188:33 - actually like really long and has a
188:36 - whole bunch of tables of not perfect so
188:40 - maybe I should just start here come back
188:42 - to the introduction right right right
188:46 - and I should definitely you know I'm
188:50 - pretty sure that I think this repealing
188:53 - of net neutrality is a pretty bad idea
188:55 - it's a nuanced issue and obviously I'm
188:58 - mostly from everything I've read and
189:01 - learned about and I am in favor of net
189:03 - neutrality but so this my random number
189:09 - protest good night everybody
189:13 - ten thousand ninety seven thirty two
189:17 - thousand five hundred thirty three
189:20 - seventy six thousand five hundred and
189:22 - twenty thirteen thousand five hundred
189:24 - a.m. 6:30 four thousand six hundred
189:27 - seventy three fifty four thousand eight
189:31 - hundred seventy six eighty thousand nine
189:33 - hundred fifty nine nine thousand one
189:36 - hundred seventeen thirty nine thousand
189:39 - two hundred and ninety two seventy four
189:42 - thousand nine hundred and forty five
189:45 - sixty six thousand and sixty five hey
190:02 - guys where was I 64 all right everybody
190:08 - right all right you know what I'm gonna
190:12 - do I'm gonna make a computer program
190:15 - this for me just like let it stream
190:18 - forever all right thank you everybody
190:22 - goodnight I appreciate your time in
190:25 - watching this youtube channel I can't
190:28 - believe it a 615 now I've completely
190:30 - lost my darn mind and look at my phone I
190:37 - will see you all apparently I'm coming
190:39 - back tomorrow morning which now seems
190:40 - completely insane to me but I will be
190:42 - back here tomorrow in the morning
190:44 - probably around 10:30
190:45 - I really have absolutely I have to stop
190:48 - by 1:00 p.m. tomorrow so and I would
190:52 - love to get to the word to Veck stuff I
190:54 - would like to do these thing oh you're
190:56 - not seeing this right now I would love
190:57 - to do this stuff as well so we'll see
191:03 - really short protests yes okay thank you
191:09 - everyone and I'll see you soon any last
191:14 - questions I don't know what I do
191:17 - tomorrow I would love to keep going with
191:19 - this WebGL stuff redo anything that from
191:21 - today that's too much of a disaster and
191:25 - maybe look at custom shapes texture and
191:30 - create graphics we'll see all right
191:34 - words avec yeah I know that's all my
191:36 - list next week I don't know
191:38 - and maybe I turn yes maybe I turn okay I
191:42 - need a good way of like ending oh yeah
191:47 - okay
191:58 - great hold on I think what I should do
192:03 - I've gotta night this is really this is
192:05 - a really important thing that I'm doing
192:06 - right now whoops oh uh Frank lack is not
192:10 - doing and then unlock it myself here
192:36 - everyone do what you will with this hold
192:38 - on I've got a better idea give you guys
192:43 - something to work with filters yes
193:11 - and oops
193:32 - I really lost my mind
193:56 - okay now yep Sean says oh no Dan you're
194:00 - asking me turn to amine yeah hello what
194:03 - do you think I'm doing this for I'm open
194:06 - to suggestions any requests they'll take
194:08 - some requests before I go please do a
194:13 - stream with Python no no don't you see
194:15 - I'm just here doing ridiculous stuff
194:17 - with my green screen loading animation I
194:19 - mean there's always this too I mean
194:22 - here's the thing I could also enough
195:06 - material you know more kittens Oh kids
195:17 - you put the kittens in yeah this is very
195:20 - dangerous
195:20 - yeah I I'd like to live on the edge okay
195:24 - I think I'm gonna go and I look forward
195:26 - to waking up in the morning tomorrow
195:28 - with your creations okay
195:37 - background music alright I'm gonna go
195:42 - I'm gonna go I'm gonna go do the stairs
195:45 - oh the stairs is a good one okay okay
195:57 - that was pretty terrible try this like
196:13 - okay yes I do
196:17 - okay the problem is I'm like looking at
196:19 - myself like doing this so I'm not
196:20 - looking at the camera so
196:31 - the Egyptian fun was pretty good right
196:39 - okay does enough now I'm really turning
196:43 - this off okay
196:50 - well that's my exercise for the day
196:52 - what's my Fitbit say I got by heart
196:55 - rates up to 115 and I've got nine
196:57 - thousand two hundred seventy four steps
196:59 - alright I'm gonna now hit the I'm
197:01 - officially now going to hit the stop
197:04 - streaming button just kidding okay
197:07 - goodbye everybody I'm happy to do more
197:09 - of these tomorrow no worries okay
197:12 - goodbye everybody
197:14 - goodnight I'm gonna hit stop screaming