00:00 - (train horn)
00:01 - - Happy back to school.
00:03 - It is August 31st, school
for me starts next week.
00:07 - On The Coding Train, I am going to
00:09 - attempt to do a classic again.
00:12 - I am going to attempt
to do a coding challenge
00:14 - and pick the Snake Game.
00:17 - And yes, I have done this before,
00:19 - but I'm going to do this
in order to celebrate
00:21 - something that was announced today,
00:23 - the P5JS web editor.
00:26 - (audience cheering sound effect)
00:27 - So the P5JS official web editor is out
00:32 - and I'm going to try...
00:32 - The nice thing about
this is when I code this,
00:35 - at the end of it, stop
with the sound effects,
00:39 - at the end of this, you will
be able to just go directly
00:42 - to this URL, which I will
include in the video description,
00:45 - and hit duplicate.
00:46 - You'll have to make an
account for the web editor,
00:48 - hit duplicate and then
make your own version of it
00:52 - from my code and share that with me.
00:54 - So I will include all about how to do that
00:56 - in the video description and I'm
going to give myself about...
00:59 - Oh, my watch isn't on.
01:00 - There's not timer but
I actually have to go,
01:01 - I have to be home very soon
so I'm going to give myself
01:05 - about 20 minutes, which of
course, this is going to take
01:07 - longer than that but
let's see how it goes.
01:09 - All right so however long this video is,
01:11 - is however long it takes.
01:11 - Hopefully, there will be no edits.
01:13 - Everyone once in a while, you know,
01:14 - there just has to be an edit
01:15 - 'cause the whole system crashes.
01:16 - I better get coding.
01:18 - (deep exhale)
01:19 - Snake game.
01:20 - Have you ever played the Snake Game?
01:21 - The idea of the snake game
01:23 - is there is a
01:25 - canvas,
01:26 - you are a dot, like a little
square on that canvas.
01:29 - Another dot, or another
little square, appears,
01:32 - which is a piece of food.
01:33 - You want to move,
01:34 - you can only move to the
right, up or down, along,
01:36 - grab that piece of food.
01:38 - Once you grab that piece of food,
01:39 - a new piece of food appears somewhere else
01:41 - and you get a little more on your tail.
01:44 - You get another piece of your body
01:47 - and you get the next piece
of food and it gets longer
01:48 - and it gets longer and
anytime you hit the edge,
01:51 - if you run into one of the edges,
01:52 - you die, the game's over.
01:53 - Or if you hit another part of your body,
01:55 - and it becomes much harder
01:56 - as your body gets longer and longer.
01:58 - That's the snake game, that's
what I'm going to code.
02:01 - So in order to do this,
02:02 - I'm going to use object
oriented programming.
02:04 - In my previous version
of the coding challenge,
02:06 - I used like this
constructor function thing
02:08 - and now we have ES6 classes.
02:11 - I want like a happy sound (horn blares).
02:13 - So one thing I'm going to do
is I'm going to show you...
02:14 - Andby the way, if you
want to know all about
02:15 - the P5JS web editor, check
a link to a Medium article
02:19 - that is in the video's description
02:21 - and a whole bunch of videos
from the Processing Foundation.
02:23 - THere's a nice video
with Cassie Tarakajian,
02:25 - who created the editor,
describing all of it's features.
02:27 - But one feature is that I can go over here
02:29 - and find this little
(tongue clicks) thing,
02:31 - this little tick, less
than, greater than sign.
02:34 - Whatever it is, and I can say, "Add file."
02:38 - And I'm going to add a file and
I'm going to call it, "Snake.js"
02:42 - and now, I have a file called, "Snake.js"
02:45 - where I can create the snake class.
02:47 - Now, if you've never done object oriented
02:49 - programming before,
02:50 - the idea is that this is a teth-link
02:52 - for this snake object that
I'm going to make in my code.
02:54 - And it has a constructor function.
02:56 - I will refer you to my tutorials about
02:58 - broken object programming ES6 classes.
03:00 - Now...
03:02 - But in order for...
03:04 - I need to actually go into index.html
03:07 - so that
03:09 - the page, when I run the code,
03:12 - is actually using both
sketch.js and snake.js.
03:15 - So that's there.
03:16 - So now I have sketch.js,
which is just a...
03:20 - Oh, and I need to see this.
03:21 - A 400 by 400 canvas.
03:24 - And snake.js, which has nothing in it.
03:27 - But
03:28 - what I'm going to do is I'm
going to say, let snake,
03:32 - and end setup,
03:33 - set-up being where the code starts
03:36 - in a P5JS sketch.
03:37 - Snake equals new snake.
03:40 - So I've made a new snake
and what do I want to do?
03:43 - And I want to update the
snake's location every frame
03:46 - and I want it to display it.
03:47 - So the idea here is I
want to say Snake.update
03:52 - and I want to say snake.show.
03:55 - I'll use show as meaning
show yourself, display.
03:59 - Hmm, what is this?
04:00 - Snake.update is not a function.
04:03 - Oh come on, I have to
write the code for it?
04:05 - Yes, I have to write the code for it.
04:07 - So if I'm going to write
a function called update,
04:09 - that means I have to put a
function in the snake class
04:12 - called update
04:13 - and then I have to put
a function called show.
04:15 - Ta-da, I'm done.
04:16 - Coding challenge complete,
snake game not all.
04:18 - So this is like the skeleton of the code
04:20 - but I actually need to put stuff in here
04:22 - and I'm going to hit shift
tab to tidy up the notation.
04:25 - Okay,
04:27 - what do I need?
04:27 - So I'm going to do
something a little weird.
04:28 - I know that what I need is an array
04:32 - because even though the snake's position,
04:35 - you could think of as like
a single X,Y location,
04:38 - I botched this the last time I did this.
04:41 - Really, what I want is an array because
04:43 - I want to keep track of a
list of all of its locations.
04:46 - And maybe the first element
and probably, more easily,
04:48 - the last element of the array.
04:50 - When with only one thing,
04:51 - is it's the sort of head of the snake,
04:53 - the front part of the snake.
04:55 - So I'm going to do that.
04:56 - I'm going to say
04:59 - this, I'm going to call
it a body, is an array
05:02 - and then I'm going to
say, this.body index zero.
05:06 - I'm going to put one
thing is createVector.
05:09 - Now, createVector is a function in P5
05:11 - that creates a vector object
and that vector object
05:14 - has an X and a Y.
05:16 - So I'm going to create it at zero, zero.
05:19 - And then in update, I'm going to say
05:24 - this.body index zero.x
05:27 - plus equal this.xspeed
05:31 - I'll call it xspeed or
xdirection or something
05:34 - and this.body.Y, index zero.y
equals this.ydirection.
05:39 - Oh, this is so ugly
05:40 - but it's the way I'm doing it, right?
05:42 - Instead of having...
05:43 - It's a little weird like
really, it's just one thing
05:46 - that's moving around, I
just have an X and a Y.
05:48 - Instead, I have a body index zero X
05:50 - and a body index zero Y because later,
05:53 - imma get to add more pieces to the body.
05:55 - So if I run this, what's
this.xdirection, this.ydirection?
05:59 - Doesn't even exist so those
are going to be variables
06:02 - that tell me is the snake
moving to the right or left?
06:05 - Is the snake moving up and down?
06:07 - So those values,
06:10 - this.xdir will start them at zero.
06:15 - (deep exhale)
06:16 - So there's zero and so...
06:19 - And then show.
06:22 - I am going to do something,
I am going to say...
06:24 - What do I want to do?
06:24 - Showing the snake is drawing a rectangle.
06:27 - I'm going to do something
a little bit weird.
06:28 - So I'm going to draw...
06:30 - Again, eventually, this
is going to become a loop
06:32 - 'cause I'm going to be
drawing all the pieces of it.
06:35 - But let's just start with
putting in the X and a Y
06:38 - and I'm just going to say,
I'm going to make it 10.
06:40 - This is going to be a little weird.
06:41 - Actually, 10 by 10, the rectangle,
06:44 - and I'm sorry that you can't see
06:45 - all the code, let me...
06:47 - I'm not used to doing
challenges with the web editor
06:50 - so let's see if I can make
this a little bit wider.
06:53 - There we go.
06:56 - So okay rectangle and then
06:59 - say fill zero,
07:00 - just to make it black and look at that.
07:03 - Already, I see that...
07:04 - I better save this.
07:05 - Oh saved a minute ago.
07:06 - It's auto saving, that's wonderful.
07:07 - There it is right there.
07:09 - Let me make X direction one.
07:13 - (groans)
07:13 - Oops, two equals by accident.
07:15 - Look, it's moving now, right?
07:17 - Because the ID in update
the body's, head's
07:21 - X location is increasing, right?
07:24 - If I made this 100, it's
moving really, really fast.
07:27 - 10, it's moving pretty fast.
07:28 - If I change this back to
zero and make this one,
07:30 - it's moving down.
07:31 - I could do all sorts of
weird things, make that five.
07:33 - But that's not, no
longer in the snake game.
07:35 - The snake game, by definition,
07:36 - I can only move
horizontally or vertically.
07:39 - So I'm going to start these at zero
07:41 - and then I'm also, just right now,
07:44 - I'm going to change this to one.
07:47 - I'm going to explain, I'm
going to do this in a funny way
07:48 - that I think might work well.
07:50 - It's a tiny little dot, a one
pixel dot, that rectangle.
07:55 - I am going to now, in
sketch, I am going to have
07:59 - the keyboard be the controls.
08:02 - So I'm going to say, keyPressed.
08:04 - Oh, I forgot how to do this already.
08:06 - (chuckles)
08:07 - So if
08:09 - key
08:11 - equals
08:14 - up,
08:15 - what is it in P5?
08:16 - Basically keyPressed is an event
08:18 - that whenever I press a
key, this function happens,
08:22 - that I can check what key did I press.
08:24 - But I totally can never remember
08:25 - how to write this function.
08:27 - So let's try and look at the P5 reference.
08:30 - Somebody maybe in the chat will tell me.
08:32 - Let's look at keyPressed.
08:35 - If value equals zero, no.
08:36 - If keyCode equals left arrow.
08:38 - This is good, this is what I want.
08:40 - It's the keyCode.
08:41 - So key is for
08:44 - which character I press but
if I'm using the arrows,
08:46 - I need to use left arrow erase.
08:47 - Let me actually just grab this
08:50 - and I'm going to say if keyCode,
08:51 - and I know I can use
this switch statement.
08:54 - I'm just not going to right now, okay?
08:57 - (sniffles)
08:58 - Please don't, don't at me.
08:59 - That's what I'm supposed to say.
09:00 - Somebody taught me that
who's younger than me.
09:02 - (chuckles)
09:04 - keyCode equals left arrow,
09:06 - keyCode equals right arrow,
09:11 - doing a terrible job at paste,
09:14 - paste,
09:16 - down arrow,
09:18 - up arrow,
09:22 - ah.
09:23 - Don't hide.
09:24 - Auto format, there we go.
09:25 - Okay.
09:26 - So now what I want to do is
if it's the left arrow, then
09:30 - snake.setdirection
09:32 - this is the way I did
it before, I remember.
09:34 - Left is negative one to the...
09:37 - Negative one along the X
09:38 - and zero along the Y.
09:40 - So I'm going to write a
function that's like saying
09:42 - set the direction.
09:44 - So this is for left,
09:46 - this is for right,
09:50 - this is for...
09:53 - (moans)
09:55 - I'm so freaked out.
09:56 - Down,
09:58 - I'm remaking this video, why?
10:01 - This is for
10:03 - up,
10:04 - negative one.
10:05 - Okay, tidy code.
10:06 - So I think this is the right idea.
10:08 - Depending on which key I press,
10:10 - move the snake in that direction.
10:14 - So now, I can say...
10:16 - I can write this function, setDirection
10:19 - and I'm getting an X and a Y
10:20 - and I'm just sayinf
this.xdirection equals X,
10:23 - and this.ydirection equals Y.
10:25 - So whatever comes into the
function sets those things.
10:28 - The people, I can see the chat over there,
10:30 - "Please do a switch statement."
10:31 - No,
10:33 - duplicate my code and change
it and make it better,
10:35 - use a switch statement.
10:36 - Okay.
10:37 - So now, I'm going to do
this, lets zoom in, here.
10:40 - Let's see if this works.
10:41 - Come on, no, I have to click 'em.
10:43 - Yes!
10:43 - Down, look at this.
10:45 - So now it's working, right?
10:47 - So I'm pressing all the keys
and I'm moving it around.
10:49 - Perfect.
10:51 - Now, I need to deal with something.
10:52 - I don't want to have to
zoom in, it's so tiny.
10:55 - So ultimately,
10:57 - there's an issue here.
10:58 - I want to think about the
snake in units of one.
11:02 - Here's my snake, it moves one pixel over,
11:04 - it moves one pixel over,
it moves one pixel over.
11:07 - But I have a canvas that's 400 by 400
11:10 - and I probably want to draw
is as a 10 by 10 thing.
11:14 - So I want to have a variable,
11:15 - I'm going to have a variable,
I'm going to call it R-E-Z,
11:18 - short for resolution.
11:20 - Can you see that?
11:21 - And I'm just going to make that 10.
11:22 - So that variable, and
actually, to be honest,
11:25 - I could just use, you
know what I could do?
11:28 - I could just use the scale function.
11:30 - I'm just going to use the scale.
11:31 - So I was going to use math
11:33 - and I was going to always
multiply it's X location
11:35 - by that resolution.
11:37 - And use the resolution for the width
11:39 - but the truth of the matter
is P5 has a scale function
11:45 - so I'm going to say
let resolution equal 10
11:49 - and then in the draw
function, I could just say
11:52 - scale by resolution.
11:54 - And what that's going
to go, and notice like
11:56 - see, look at that, I
can change this to 50,
11:59 - I can make this 10,
12:01 - I can make this 100.
12:01 - It's just scaling it up and
if I move this to the...
12:04 - And so now, if I make this 10
12:07 - and I move to the right,
12:10 - it's actually moving
every 10 pixels, also,
12:13 - 'cause when it changes by one,
12:15 - it moves 10 and I could...
12:16 - What I might want to do is, you know,
12:18 - normally, I want the
animation to go really fast
12:20 - but imma change the frame rate to five,
12:22 - just to slow it down
12:24 - so we can what's...
12:25 - What's a little tricky here,
when using the P5 web editor
12:28 - is I need to click over here
12:30 - to give this preview page focus
12:32 - so that it gets the key commands.
12:33 - So now you can see it moving over.
12:35 - And this, you know, this can...
12:36 - The frame rate, typically, I
don't want to slow the frame rate
12:39 - of the the animation down.
12:40 - But this is a way I can control
the speed of the sketch.
12:42 - So this is what I'm going to do,
12:45 - okay.
12:46 - (deep exhale)
12:48 - So
12:49 - now, I need...
12:51 - Ah, okay.
12:51 - So I need to have a food, a piece of food.
12:55 - So I'm going to make the piece of food
12:57 - just a vector.
13:00 - At some random...
13:01 - I could make a food class
but I think that's overkill.
13:04 - I'm going to make it a...
13:05 - Ah, okay.
13:06 - So here's, now, a tricky thing.
13:09 - I want the food...
13:11 - Okay, let's say my sketch
is 400 by 400 and really...
13:15 - So really, my world
13:17 - is 40 by 40 but I scaled it up by 10.
13:21 - So I need a variable
13:24 - to keep track of actual
dimensions of the world.
13:27 - So I'm going to say...
13:29 - I'm going to use W, well, I don't know.
13:31 - I'm starting to think of columns or...
13:33 - I'm going to say W.
13:36 - Equal...
13:36 - I'm going to actually just
put let W and let H, here.
13:39 - So I'm going to say W equals
floor width divided by resolution.
13:46 - So what is this?
13:48 - Width divided by resolution
is 400 divided by 10,
13:52 - which is 40.
13:53 - And the reason why I'm using floor there,
13:55 - is just in case my math is off,
13:56 - I want W to be an integer, a whole number,
13:58 - that will take off the decimal place.
14:01 - H equals floor height.
14:04 - And of course, it's a square,
14:05 - so I don't really need to
add the two separate values
14:07 - but your window might not be a square.
14:10 - There, okay.
14:11 - So...
14:13 - So now that I have that,
14:15 - why was I doing this again (chuckles)?
14:17 - Oh, the food.
14:18 - Because now, I want to get
14:21 - an X position and guess what?
14:23 - I remember this from before.
14:25 - I'm going to write a function,
14:27 - food location, foodLocation.
14:32 - And what happens in this function
14:33 - is I pick an X, which is floor random W
14:39 - and a Y.
14:40 - Floor...
14:41 - So I need a spot, random H, right?
14:44 - I need to find a random spot for the food
14:47 - and set that there.
14:49 - And then in draw, I'm
going to make the food
14:52 - a red, I might be standing a
little in front of the code
14:56 - but hopefully this is okay.
14:57 - And I'm going to say rectangle food.x
15:01 - food.y one, one.
15:03 - So you know, I guess I could
make it a point or something
15:06 - but it's just
15:07 - everything is of unit one
15:10 - scaled up.
15:12 - Okay, can I...
15:12 - Oh and I need to actually call
15:15 - at the beginning, foodLocation.
15:20 - And Y, oh, it's not...
15:21 - You know what I need to do here?
15:23 - Is I need to say
15:26 - noStroke.
15:27 - That stroke is getting
scaled in a strange way
15:29 - so this is actually 10 by 10 pixels.
15:31 - It was much bigger
15:32 - because with a stroke there,
15:36 - that's getting scaled as well.
15:38 - So now we can see...
15:39 - Woops.
15:41 - If I click over here, we
can see and eventually...
15:44 - Come on, get that piece of food.
15:46 - Okay so now, good, so this is working.
15:47 - Ah, the snake game is working.
15:49 - Oh, this is good.
15:50 - This is much better than I did before.
15:51 - (chuckles)
15:52 - Helps to do this a second time
15:53 - even though that was a couple years ago.
15:55 - Let's make this 20
15:56 - just because I want to
be able to see it better.
15:59 - Okay so that's good.
16:00 - Let me just make sure things
are lining up, excellent.
16:02 - So now, I need a test.
16:05 - I'm going to say snake.eat food.
16:08 - So that means
16:09 - I need a function and let's put that...
16:11 - I don't know if the order matters so much.
16:13 - I'm going to put this here.
16:15 - And I'm going to say,
16:17 - eat
16:22 - food, I'm just going to make
an argument called position
16:25 - so basically, the food
is getting passed in here
16:27 - and I'm eating the food
if now, this is a really,
16:30 - probably a bad idea
because you never know,
16:33 - in java script, if you've
really got the number
16:36 - like three or if by
accident, you have the number
16:39 - 3.00000001 (laughs).
16:43 - But I'm going to test, in theory,
16:45 - if the X, Y of the head of the snake
16:47 - is the same as the X,
Y of a piece of food.
16:50 - If they're equal, I should be eating food
16:52 - so let's...
16:54 - Let's just see if that works.
16:56 - So I'm going to say
16:59 - if...
17:01 - Well first, let X equal...
17:03 - Let's just put this in
a separate variable.
17:08 - Let Y equal this.
17:10 - I'm going to get that head
of the snake location.
17:14 - If x equals
17:17 - pos.x and y equals pos.y,
17:21 - then
17:23 - return true
17:25 - and also say
17:29 - console...
17:31 - Console, I'm going to say print.
17:32 - I could say console log print food eaten.
17:37 - Okay so let's see if this works.
17:39 - It's a little bit dangerous,
a little treacherous
17:41 - and I'm going to say
return false, otherwise.
17:43 - And then, in the sketch,
I'm going to say, if...
17:48 - If, I'm going to have
this return something,
17:51 - if you eat the food,
17:52 - then you just need a
new foodLocation, right?
17:55 - So immediately, you should
pick a new random location.
17:57 - Okay, let's try this.
18:02 - (scoffs) I missed it.
18:02 - Ah, I can't get it.
18:05 - Oh, so that's working.
18:07 - All right so I think all
my flooring of the numbers,
18:10 - you know, maybe I need
to have some better...
18:12 - This seems to be fine.
18:14 - So I'm going to live with that.
18:16 - I'm happy with it.
18:17 - Okay so now,
18:19 - we are so close.
18:20 - What do I need to do?
18:21 - This is going remarkably well.
18:23 - (knocking)
18:24 - That's a sure sign for
something to go wrong.
18:28 - I'm going to say
18:30 - this.grow.
18:34 - If I eat the food, I
want the snake to grow.
18:37 - If I'm calling a function
that I intend to be
18:39 - part of the snake object,
within the snake class,
18:42 - I need to reference it
by saying this.grow.
18:45 - So that means I need to
write another function, grow.
18:50 - And what that means is I
want to expand the array.
18:53 - (deep inhale)
18:55 - Okay, okay, ooh, this is
the tricky part (groans).
18:57 - This is where everything
went wrong before.
18:59 - I'm not even looking at that chat,
19:01 - there's a chat going on,
19:02 - I'm sure everyone's screaming at me.
19:04 - (chuckles)
19:07 - I'm going to add another variable,
19:09 - this.len for length, length of the snake
19:13 - and it starts as one.
19:15 - So if that, at that a minimum,
I know when I want to grow,
19:19 - I want length to go up by one.
19:21 - I want the length to increase
19:23 - and I need to add
something onto the array.
19:26 - Add something to the end,
19:28 - add something to the beginning,
19:30 - this is unclear to me.
19:32 - So first of all, let's try...
19:34 - So let's just try saying
19:39 - this.body....
19:43 - So first, let me get
19:46 - the last...
19:48 - I'm thinking about this.
19:50 - You know what?
19:51 - I think this is going to be...
19:52 - I think, actually, this
is simpler than I think.
19:54 - Let's just try saying
this.body.push createVector.
19:59 - So I'm just going to push
a blank vector into it.
20:02 - I know I need something else in the array
20:04 - so let me just...
20:05 - And push it so that it adds
to the end of the array,
20:07 - maybe I want to put it at the beginning.
20:09 - I'll figure that out in a second
20:10 - but I'm just going to push
at the end of the array.
20:13 - And actually, now, I'm
realizing the flaw in that
20:16 - but that's okay.
20:19 - Yeah so actually, so pushing...
20:22 - I could put it in the beginning
20:23 - and that would actually work, I think.
20:28 - But okay, we're going to figure this out.
20:30 - I'm trying to think it through
20:31 - so it's easier to think
it through, just code it.
20:33 - So what I want to do
now, this whole thing...
20:36 - So first of all, what this mean is anytime
20:40 - I want to draw the snake, I
don't actually want to draw...
20:45 - I don't want to draw
20:49 - just a single rectangle,
20:50 - I want to draw all the rectangles.
20:52 - So I'm going to say...
20:53 - I could use like a for
of loop or something
20:56 - but I'm just going to say,
20:56 - I'm just going to use a
regular, old fashioned
20:59 - this.forloop, this.body.length,
21:03 - I plus plus
21:05 - and then this loop will go around here.
21:11 - Uh-oh, oh no,
21:13 - oh no.
21:15 - (buzzer buzzes)
21:17 - Oh no!
21:18 - I've killed the editor.
21:20 - Let's see when it last auto submit.
21:21 - I'm going to quickly click
off this auto refresh.
21:24 - And where did I last leave off?
21:26 - (yells)
21:26 - That's not so bad.
21:27 - So the last time it auto saved was here
21:30 - and I am going to...
21:31 - I'm going to retype my loop more carefully
21:34 - without having auto refresh on.
21:36 - I is less than this.body.length,
21:39 - I have to more this, now,
back all the way over here.
21:44 - I plus plus
21:47 - and I'm going to auto format that
21:49 - and I'm going to say this.body.i
21:52 - so now I'm drawing every element in there.
21:55 - Okay.
21:57 - So now I'm going to hit save.
21:59 - Project is saved so I have that.
22:04 - Oh, I lost what I wrote
in grow (chuckles).
22:07 - Live and learn.
22:08 - Move this over here.
22:10 - Oh, oh right, 'cause I
had this open, that's why.
22:13 - So this actually comes back here.
22:15 - So grow, what did I do in that?
22:18 - I said this.body.push createVector
22:22 - and I said this.length.
22:24 - I don't know if I need
this length variable,
22:26 - to be honest 'cause by definition,
22:28 - the length of the array
is the length variable.
22:31 - (chuckles)
22:32 - I'm so sad.
22:33 - And then did I add that?
22:34 - Then I added that.
22:35 - Let's see, I lost some code.
22:37 - You're not working...
22:38 - You're not really coding
if you don't lose some code
22:40 - every once in a while to an infinite loop.
22:42 - Okay.
22:43 - So here, we're good.
22:45 - Now this...
22:46 - What's going to happen
here is really weird
22:47 - but I'm going to get the food.
22:49 - Oops, shoot, I missed the food.
22:52 - So interestingly,
22:53 - why am I not seeing...
22:55 - I would imagine that
I would see another...
22:58 - So one thing, I would
guess that I'm going to see
23:02 - another appendage but it
would just be at zero, zero.
23:06 - Oh, look at me, look at
this, push createVector,
23:10 - createVector at zero, zero.
23:11 - Let me just do that.
23:14 - So that, I forgot.
23:15 - So what we're going to see here
23:18 - is this.
23:20 - There we go.
23:20 - So that second part of the snake is there
23:23 - but it's up there.
23:24 - So what I need to do now
23:26 - is when I'm updating the snake's location,
23:30 - I'm going to comment
this out for a second.
23:32 - The first thing that I want to do,
23:33 - and there's shift, okay?
23:34 - There's an array function called shift.
23:37 - I forgot one.
23:38 - Last time I did this, I didn't use that,
23:39 - I just manually moved all
the spots in the array.
23:42 - Let's look at array javascript shift.
23:46 - I don't actually know
what this function does
23:48 - but everyone was telling
me I should do it.
23:51 - Shift.
23:52 - Oh, look at that.
23:55 - That's so perfect.
23:56 - So this is what I want,
23:57 - I want to shift all the elements down one
24:00 - and I guess I'm losing one.
24:02 - So let me just see about,
24:02 - let me see if I understand this.
24:04 - So
24:05 - just in the console, let me practice this.
24:07 - Let array equal five,
six, nine, 100, five.
24:13 - So that's what in the array
24:15 - and if I say array.shift,
24:19 - woops, no.
24:21 - That's what it returns.
24:23 - Did it shift it?
24:24 - But it shifted.
24:25 - Oh so it's giving me the
thing that it got rid of
24:28 - and then it's making it one less.
24:30 - So this is perfect, this
exactly what I need.
24:32 - Oh, I love it.
24:33 - So actually, all I need to do,
24:35 - every time in update,
is say this.body.shift
24:41 - and then that's moving everything over
24:43 - and then the last spot
24:45 - so one thing I need to do
24:46 - is let me save where it currently is.
24:49 - So let me pop...
24:51 - Pop doesn't remove it
from the array, right?
24:54 - So if I say array.pop,
24:56 - that gave me the element five
24:58 - but the array still...
24:59 - Oh no, I got rid of it.
25:01 - How do I get something off the end
25:03 - without removing it?
25:06 - Oh, un-shift adds from the beginning.
25:07 - That's interesting.
25:10 - How do I get the last element
25:12 - without removing it?
25:14 - Well, I'm just going to
do it the manual way,
25:16 - this.
25:17 - I'm just going to say
let head equal this.body.
25:21 - And this.body.length minus one.
25:24 - That's the last element .copy.
25:28 - So this is me taking the last element
25:30 - and making a copy of it.
25:31 - And then what I want to do
is say head.x plus equal
25:35 - this.xdirection head.y
plus equal this.ydirection
25:40 - and then I just want to put that back on.
25:45 - So I want to like save where
it was and then move that
25:49 - and then the body is all there.
25:53 - Yeah so I'm being told this
is actually how to do it.
25:56 - So that's the last element, copying it.
25:58 - Let's...
25:59 - So one thing that I want
to do, what's wrong here?
26:00 - This.body
26:03 - index this...
26:05 - Cannot read property copy of undefined.
26:08 - So do I not have...
26:10 - Oh, because I'm doing it after shift.
26:13 - And if I'm shifting something with zero...
26:15 - Yeah, if I'm shifting
something with zero...
26:16 - So shift has to happen after, right?
26:18 - 'Cause if it only has one thing in it,
26:19 - I shift it, it's gone.
26:22 - Okay.
26:23 - So this is working, now.
26:27 - Oh look at that, so this worked.
26:28 - (laughs)
26:29 - And it made it longer but it
created it back at the start
26:35 - so I need to keep that
location when I grow it.
26:37 - So the same thing I need to do here,
26:40 - in grow, what I want to do is not add.
26:44 - What I want to do is
26:46 - do this exact same thing
26:50 - and then push, right?
26:52 - I want to take the last one
26:54 - and add it to the end.
26:55 - So I need to just duplicate
where it was before to the end.
26:59 - I think this should do the trick.
27:04 - Yep.
27:07 - Is it...
27:08 - Am I going one step behind by accident?
27:10 - I'm not sure.
27:11 - That's pretty good.
27:11 - I don't know why the food...
27:13 - Oh.
27:14 - Oh, you know what?
27:15 - It's not getting in
until I get to the back.
27:18 - Why?
27:18 - Because eat is always checking this one.
27:21 - I need to check the last element.
27:23 - Same thing, this is very
awkward, the way I'm doing it.
27:26 - And
27:28 - I'm sure somebody will
make their own version
27:30 - that's less awkward but I need to check
27:31 - the location of the head against the food.
27:36 - Here we go, let's try this one more time.
27:38 - Snake game go.
27:42 - There we go
27:43 - and up.
27:45 - Yeah, this is better.
27:46 - Okay, great, this is working.
27:47 - Yay!
27:48 - All right, now guess what?
27:50 - One more thing.
27:51 - I need to know when to restart the game.
27:54 - When do I die?
27:56 - So I'm going to do...
27:57 - I'm going to do a function
called like check, you know,
28:02 - check for death or like
I don't know, endGame?
28:07 - And what I need to do is I need to check
28:09 - if the head intersects with
any of the other positions.
28:14 - So the head, as we know, is...
28:20 - Well, it's this.
28:23 - This is a little bit
weird, what I'm doing.
28:24 - That's the last spot and now I can say,
28:28 - for let I equals zero.
28:31 - I is less than this.body.length minus one.
28:35 - I don't want to check
the head against itself.
28:37 - I plus plus.
28:39 - I'm going to say let
28:41 - part equal this.body index I.
28:44 - If part
28:46 - index...
28:47 - If part.x equals X
28:51 - and
28:53 - part.y equals Y,
28:55 - then return true.
28:57 - The game is over or
29:00 - if X is greater than
29:04 - what was it, W?
29:05 - Minus one?
29:06 - Or if it's gone off the
screen or X is less than zero,
29:10 - Or Y is greater than
29:13 - H minus one,
29:14 - or Y is less than zero,
then also return true.
29:20 - We should probably check that first.
29:22 - 'Cause if you're off the
edge, I don't need to check...
29:24 - I don't need to check
any of the body parts.
29:30 - (deep inhale)
29:32 - Ah, oh but I need to first
get the X and Y values.
29:35 - So I'm doing something a little weird
29:36 - but sometimes I'm using the vector
29:38 - and I'm saying pause that X, pause that Y,
29:40 - as soon as I'm pulling out
the X and Y from the vector.
29:44 - And then at the end, I'm
going to say, return false.
29:48 - So let's see if now, I
can get endGame to work.
29:54 - So in here, I'm going to
say, also now at the end,
29:57 - if snake.endgame,
30:01 - I'm just going to say print.
30:04 - Print end game
30:06 - and I'm going to say background
30:11 - 255, zero, zero,
30:14 - and noLoop so I'm just going
to completely shut down
30:16 - the P5 sketch if the game ends.
30:19 - So this is not necessarily
what you want to do for
30:21 - like interaction design but
I'm just testing the feature.
30:25 - So the first thing I'm going to do is just
30:26 - try to go off the edge.
30:28 - So I'm going to go off the bottom.
30:31 - Yeah, okay so that works,
30:32 - so going off the edge,
at least the bottom.
30:34 - I should probably test the other edges.
30:37 - Oh, what just happened there?
30:40 - And I took my auto refresh off.
30:41 - I'm going to put that on.
30:45 - So if I go off the top,
ooh, that didn't work.
30:48 - I probably had a mistake
somewhere in there.
30:50 - If
30:52 - oh, Y, this should be Y.
30:54 - Woops, that was a mistake.
30:55 - So (groans),
30:57 - all right hopefully, that fixed that.
30:59 - I'm going to...
31:01 - And now what I need to do,
31:02 - so one thing I need to do,
just to be able to test better,
31:04 - is I'm going to add something,
31:06 - I'm going to add the mousePressed function
31:10 - And I'm going to say this, snake.grow.
31:15 - So anytime I click the mouse,
I'm going to grow the snake
31:18 - so I could do it, sort
of test this feature.
31:22 - Oh, woops, shoot.
31:24 - Oh and you know what?
31:25 - I should set the snake in the middle.
31:27 - So the snake's location
should probably be,
31:32 - initially, W divided by two
31:36 - and H divided by two
31:38 - and I've got to keep
everything an integer.
31:40 - So I've got to put floor in here,
31:43 - just in case.
31:47 - All right.
31:47 - So now, let me...
31:49 - Whoa, why did that...
31:50 - Oh.
31:52 - Oh because
31:55 - when I grow,
31:56 - the head becomes the same location
31:59 - as the other part of the body.
32:01 - And then I check to see
if the game is over.
32:05 - Shouldn't it fix it with...
32:07 - Oh but if it's not moving...
32:09 - So I got to move it first.
32:11 - I mean this should be okay (chuckles).
32:17 - No because if I click,
32:18 - I have to get focused.
32:19 - Ah (deep sigh).
32:22 - This is like a silly debugging thing.
32:25 - So what I'm going to do is
I'm going to have it grow
32:28 - with the space bar, not mousePressed.
32:31 - Else if key equals space.
32:35 - I'm just trying to do this to debug it
32:38 - and so I can do whatever I want.
32:39 - And I click over here and I move it,
32:43 - so I'm going to make it longer.
32:48 - So now let's see if it dies, yep.
32:50 - Okay, great (loud clap).
32:51 - So (bell dings) I think
I finished this game.
32:54 - Really, what I want to do is
come up with an end screen
32:57 - or restart the game or
have some sort of score.
32:59 - Let's see, before I go,
how long I can play it
33:04 - before I die.
33:07 - And oh, let me just show you something.
33:09 - If I go, I'm going to hit save.
33:10 - If I go under...
33:11 - This is a feature of the web editor.
33:12 - I'm going to go file share,
33:16 - I'm going to go here and I'm going
to grab this full screen URL,
33:19 - I'm going to grab it, I'm
going to open a new tab,
33:23 - and now it's just the game.
33:24 - I'm going to make it bigger for fun times.
33:28 - I'm going to click it here and ready?
33:29 - I'm going to play the game.
33:33 - Goodbye, make your own
version, look for the link,
33:36 - sign up for a P5 web editor account,
33:39 - hit duplicate, make your own version,
33:41 - share it in the comments.
33:42 - There will be a codingtrain.com page,
33:44 - which you could also share it.
33:45 - This is much too easy, I'm
going to be here forever.
33:48 - I'm going to look at the...
33:53 - Well, this is working (chuckles).
33:55 - I made the game.
33:56 - I can go home now.
33:58 - Let's just see how long this goes for.
34:01 - (yells)
Okay, I died.
34:02 - I don't know why I died.
34:02 - Oh, I hit backwards.
34:04 - (bell dings)
34:05 - (buzzer buzzes)
34:06 - So good thing I hit
backwards (trumpet fare)
34:10 - the game is over.
34:11 - Thank you, thank you.
34:12 - So that might be a bug that I want to fix.
34:14 - So that actually, if I hit back...
34:15 - But I guess you shouldn't lose the game
34:17 - if you hit backwards.
34:18 - I don't know.
34:18 - You know, you can make the
design more interesting,
34:21 - you can do all sorts of things.
34:23 - You can now make your own
version of the snake game
34:26 - in P5, in the web editor,
instantly share it.
34:29 - Thank you to the The
Processing Foundation,
34:32 - Cassie Tarakajin,
34:33 - all the people who made
contributions to the P5 web editor,
34:38 - and all the people who have
worked on P5JS over the years.
34:40 - I'm so excited to be
able to make tutorials
34:42 - and coding challenges with this.
34:44 - I'll still use my other workflow
and I will use processing
34:48 - but I hope you enjoyed this video
34:50 - and I will see you (train horn)
next time on Coding Train.
34:54 - (upbeat electronic music)