00:00 - hello welcome to a coding challenge my
00:02 - name is Dan I know I'm introducing
00:04 - myself at the beginning of this one
00:05 - because anyway but I can because I just
00:07 - did um this is a coding challenge I am
00:10 - going to build off of in some ways a
00:12 - coding challenge that I did previously
00:14 - and I want to look at animated circle
00:18 - packing and I want to look at animated
00:20 - circle packing in the context of forming
00:23 - letter forms look can I do all this in a
00:26 - coding challenge I think that I can I'm
00:27 - going to use processing which is a
00:29 - programming environment built on top of
00:30 - Java
00:31 - I will also hopefully release a
00:33 - JavaScript version of this so you can
00:35 - check this description for the source
00:36 - code after I bake this I'll release the
00:38 - code in both processing Java and also
00:40 - JavaScript using a p5.js library so
00:42 - circle pad King is one of these cut
00:45 - almost computational cliche algorithms
00:47 - in a way there's some images here from
00:49 - an artist named Marius Watts who does
00:51 - lots of beautiful and interesting
00:52 - engaging computational work and has
00:54 - worked with circle packing and the idea
00:56 - of circle packing is fit a lot of
00:57 - circles as many as you can of varying
00:59 - sizes in a small space or a large space
01:02 - and don't have them overlap so in order
01:05 - to do this the first thing that I want
01:07 - to do is I actually want to create a
01:08 - circle class so I'm going to say class
01:12 - circle and what does every circle have
01:15 - in my world every circle has an x and a
01:19 - y storing values for its center and
01:23 - every circle has a radius the distance
01:26 - between its center and the edge and then
01:29 - I'm going to need some other stuff that
01:32 - I just happened but I'm too you know for
01:33 - now I'm just going to put that there so
01:35 - when I make a class which is a template
01:37 - for making objects
01:38 - I need to write a constructor function
01:40 - and my constructor function will take
01:43 - three arguments because whenever and
01:47 - actually actually just two arguments
01:49 - let's just give it an X and a Y because
01:51 - whenever I create a circle I want to say
01:53 - create a circle at this look at a
01:55 - particular location and then X gets that
01:59 - particular value and Y gets that
02:00 - particular value now I'm doing something
02:01 - kind of goofy here which is that the
02:04 - arguments of the constructor I'm using
02:06 - I've been using the same variable name
02:08 - as the properties of the object itself
02:09 - but just with the underscore afterwards
02:11 - and what that does it allows
02:13 - to differentiate these temporary our
02:16 - constructor arguments to fill the actual
02:18 - variables of the object but you know
02:20 - it's kind of a confusing convention but
02:21 - it's one that I'm kind of used to so I'm
02:23 - going to use that here so what this
02:24 - means is now I can say something like
02:27 - Circle C and I can say I'm going to in
02:31 - processing I'm going to say sighs let's
02:33 - just say a 640 360 and in drama say
02:38 - background zero and then I'm going to
02:40 - say in setup C equals a new circle 200
02:45 - 200 and I can run this program and cut
02:48 - off I have a circle where is it I don't
02:53 - see it because what do I want to do I
02:55 - want to write up some functionality in
02:57 - the circle object itself
02:58 - hmm I'm going to call it show and then
03:03 - we use the ellipse function which is a
03:05 - function processing that draws a ellipse
03:07 - and an ellipse with a width and height
03:12 - the diameter across the horizontal and
03:15 - vertical axes of the same amount is a
03:17 - circle and what should that diameter be
03:19 - it's the radius times two so now if I
03:22 - said something like C display Oh
03:27 - any calls display I called it show ah ah
03:31 - where's that circle hmm I don't know why
03:33 - I don't see that circle interesting
03:36 - problem here ah why well R has what's
03:39 - the value of R the value of R is zero
03:41 - so let's give the value of our 50 right
03:44 - now and let's also be a little more
03:46 - thoughtful here and say stroke 255 and
03:49 - no fill so now I see there's my circle
03:52 - now you I don't know how well you can
03:54 - see this I can zoom in you can see it
03:55 - but I'm going to just increase the
03:57 - thickness of the line just because I
03:59 - don't know in terms of broadcasting this
04:00 - on YouTube and all that sort of stuff so
04:02 - you can see there's the nice beautiful
04:04 - lovely circle oh I love that circle that
04:06 - circle is my friend like I got to move
04:09 - on okay so what do I want to do now what
04:12 - I want to do now is not just have one
04:13 - circle
04:14 - I need a system where I'm going to keep
04:15 - track of many circles and a way I can do
04:18 - that in Java is using something called
04:20 - an ArrayList now oops
04:22 - I this syntax is a little bit goofy an
04:24 - ArrayList is an object that creeps
04:26 - that keeps a list of objects and I can
04:29 - say in advance I want a list of objects
04:31 - of type circle and that's what I'm doing
04:33 - right here and that list is called
04:34 - circles so now instead of having a
04:36 - single variable I can say circles dot
04:41 - push new circle and then I can say a for
04:48 - every and this is a nice little enhanced
04:51 - loop that you can write in Java
04:54 - these days with array lists you can say
04:57 - for I'm standing in front of this for
04:59 - every circle see in the ArrayList
05:03 - circles operate call the show function
05:05 - on those circle seats so for every
05:06 - circle call show okay here we go
05:09 - oh snap push it's not push it all this
05:12 - is me I'm the kind of person who
05:14 - programs in too many languages these
05:15 - days it's add push would be a function
05:18 - in JavaScript to push something into an
05:19 - array in Java using ArrayList the
05:23 - function is add so now if I do this we
05:25 - can see ah what happened I got a
05:27 - nullpointerexception see that null
05:29 - pointer exception that's the sound that
05:33 - goes the processing should play whatever
05:35 - you got to know upon your exception I
05:36 - forgot to actually create the ArrayList
05:38 - so I said oh I want to have an ArrayList
05:40 - but it's actually just null at this
05:42 - point so I need to actually take an
05:44 - additional step and say circles equals
05:46 - and new it seems rather redundant but
05:48 - this is the world of Java many people
05:50 - don't like Java but you know what Java
05:52 - is also my friend and I like Java okay
05:55 - so new ArrayList that means are
05:59 - something wrong with me then so be it
06:00 - okay
06:01 - so there you can see now I have this one
06:03 - circles oh boy
06:05 - what about like five minutes into this
06:07 - video and all I have a circle on the
06:08 - screen I hope you're still with me
06:10 - because this this will get more
06:11 - interesting okay so now I want to do I
06:13 - want to do a few different things one
06:18 - thing I want to do is I want to have a
06:21 - function in the circle called grow and
06:24 - what I'm going to do is I'm going to say
06:25 - R equals R plus 1 so I want the radius
06:29 - to increase by one pixel whenever I call
06:33 - the grow function and I'm going to say
06:35 - now every circle see grow
06:38 - you can see that circle is growing now
06:41 - the other thing I want to do is I want
06:42 - to stop the circle I want to have a way
06:44 - of stopping the circle from growing so
06:47 - one thing I should do is I'm going to
06:49 - write a function called edges to see has
06:53 - the circle touched an edge of the window
06:58 - and actually if it has I should maybe I
07:04 - should return a boolean true or false we
07:08 - could do this in a bunch of different
07:09 - ways but let's start with this so how do
07:11 - I know if a circle and let me just come
07:15 - over to the whiteboard here
07:16 - look there's a happy party time so right
07:20 - if this is a the window and this is a
07:25 - circle if the X plus the radius is
07:32 - greater than the width of the window or
07:36 - if X minus the radius is less than zero
07:39 - then it's kind of hit that edge so let's
07:42 - come back and add that if what I say X
07:45 - plus R is greater than width or X minus
07:49 - R is less than 0 or y plus R is greater
07:53 - than height or Y minus R is less than 0
07:58 - that should do it and actually I could
07:59 - just say return that this is one of
08:03 - these shorthand things that I never use
08:04 - and people always complain in the
08:05 - comments like you're going to just
08:06 - return the result of that so I'm
08:09 - returning the result of this or that or
08:11 - this or that so if any of those are true
08:13 - I'm going to return true so what I'm
08:15 - going to do here is I'm going to say I'm
08:17 - also going to add a variable I'm going
08:19 - to call it growing I'm going to set it
08:21 - equal to false no true and I'm going to
08:27 - say if growing increase the radius by
08:32 - one okay this is good this is good this
08:35 - is good now I'm going to write a
08:37 - function let's uh there's a bunch of
08:41 - different ways I could do this but let's
08:43 - do it actually out here I don't know if
08:45 - I love this but I'm gonna say if C dot
08:46 - edges see growing equals false so this
08:50 - should stop
08:52 - and what did I find missing a semicolon
08:55 - here because I have this like
08:57 - ridiculously long line of code that is
08:59 - very unwieldy to type but it's come back
09:02 - now this should now grow the circle
09:06 - until it reaches the edge and you can
09:08 - see why did it stop it touched the
09:10 - bottom edge down here so this is good I
09:12 - now have a circle that can grow and a
09:15 - circle that can stop growing and what I
09:18 - want to do is I want to add new circles
09:23 - every time through draw and I want to
09:27 - give it a random location so I'm going
09:33 - to create a new circle at a random
09:36 - location and I want the circles to all
09:39 - start not with a radius of 50 but a
09:42 - radius of 1 and watch what happens out
09:44 - so I have all these circles ooh that's
09:46 - kind of actually just nice on its own
09:48 - they're all growing and they're stopping
09:50 - as they reach the edge but let's watch
09:52 - that again let me slow down the
09:55 - framerate what I want to see happen is I
10:00 - want all these circles to grow but it
10:02 - also want them to stop growing if they
10:03 - touch another circle and I don't want to
10:07 - be able to create a circle inside of
10:09 - another circle because I want to have
10:10 - these circles kind of grow to fill as
10:12 - much space as possible okay so how do I
10:18 - do this so the first thing that I need
10:21 - to do is um I don't know what is the
10:26 - first thing that I need to do do you
10:27 - don't want to do I'm going to I'm going
10:32 - to I'm going to create a function called
10:33 - new circle and I'm because I have a
10:39 - feeling this might get a little bit
10:41 - complicated
10:46 - so what I'm going to try to do now here
10:49 - is what I'm going to create a random XY
10:55 - then what I want to do is say for every
10:59 - circle in all the circles what I want to
11:02 - do is determine when I click this XY is
11:05 - it a point that's outside of circles
11:08 - right I don't want to by accident these
11:13 - are my circles if I pick that point it's
11:16 - no good if I pick this point we're good
11:19 - shape so what I need to do is I need to
11:22 - check what are we twin time works okay I
11:24 - need to say what is the distance between
11:29 - this X Y and that circles X Y if the
11:33 - distance is less than that circles
11:35 - radius then it is inside the circle so
11:40 - let's assume that this is a valid circle
11:46 - if I look at all the existing circles
11:48 - and it's inside one of them it's no
11:52 - longer a valid circle and I could also
11:54 - be done with that loop if it's not valid
11:57 - I could just check one of them now what
11:59 - I want to do is if it's valid I want to
12:05 - add it to the ArrayList so I only want
12:08 - to add circles that are valid and you
12:10 - can see now if I run this again you know
12:11 - it's everything still overlapping but
12:13 - technically speaking it's not you can
12:15 - see it's not adding any circles anymore
12:17 - until it finds a spot that's not inside
12:19 - another circle I like this but actually
12:22 - I think what might make more sense here
12:23 - is to return a return a new circle
12:32 - otherwise return null so and then this
12:37 - is going to be a function that returns a
12:40 - circle so what I want to do is I want to
12:42 - say like this is this function is going
12:44 - to attempt to find a new circle and if
12:49 - it does here it is if I can't find one
12:51 - it's no so what I'm going to do now is
12:55 - I'm going to say
12:58 - Circle C equals new circle if C is not
13:03 - equal to no circles add C so now I have
13:08 - oh and you know what I'm going to just
13:10 - call this circle I'll call it new circle
13:15 - oh that's a little bit awkward that I
13:21 - have new circle in the new circle
13:22 - function let's just call it new C it
13:26 - works but you know when we translate
13:28 - this job okay so this is working this is
13:29 - exactly what I just had it's trying to
13:31 - make these circles now I need to add the
13:33 - part where if it touches any other
13:36 - circle it also stops growing so for
13:42 - every circle if it's touching an edge it
13:45 - stops growing so first of all I only
13:49 - want to do this if the circle is growing
13:51 - if the circle is growing check first if
13:56 - it's touching an edge otherwise now I
14:00 - got a look at all the other circles
14:03 - again and I can say boolean overlapping
14:10 - I can assume that it's not overlapping
14:13 - another circle I can assume that it's
14:15 - not overlapping another circle now what
14:17 - I can do is I could say the distance
14:19 - between this particular current circle
14:23 - and the other circle
14:28 - I need that distance if that distance is
14:33 - less than what if that distance is less
14:37 - than this circles radius plus the other
14:40 - my scroll went under control plus the
14:43 - other scrolls the other circles radius
14:45 - then overlapping is true why is that
14:49 - come over here with me please because
14:53 - here's a circle here's a circle here's
14:57 - one radius here's another radius here's
15:00 - the distance between them you can see
15:03 - that if the distance is longer than the
15:04 - sum of the two radii then they're not
15:06 - overlapping if that distance is shorter
15:10 - than
15:10 - adding the two radii together they are
15:12 - they are overlapping so now all I have
15:16 - to do is actually don't need this
15:18 - overlapping variable I just realized
15:20 - because the point of this is I can say
15:22 - if it's overlapping anything tell it to
15:25 - stop growing and break so this is now my
15:28 - algorithm right if a circle is growing
15:30 - there are two reasons why I might stop
15:32 - it from growing one is it might be
15:34 - touching the edge otherwise it might be
15:36 - overlapping with another circle so if
15:38 - either one it should stop so now let's
15:40 - run this and see what we get
15:41 - mmm seems to me that these circles
15:46 - aren't growing ah what did I oh my
15:48 - goodness I like to ring the bell when I
15:50 - discover a really ridiculous bug look at
15:53 - this
15:54 - for every circle see check every other
15:57 - circle called other well guess what see
16:01 - is going to check every other circle and
16:03 - you let's see is it's one of those every
16:05 - other circles so I need to also make
16:07 - sure as long as C does not C does not
16:13 - equal other as long as it's not the same
16:15 - object then I can do this test there we
16:21 - go so now we can see here we go I'm just
16:24 - filling this space and you know it made
16:27 - some big circles at the beginning now
16:29 - it's making some smaller ones because it
16:30 - keeps trying to find more spots where it
16:32 - could possibly fit a circle and we can
16:34 - let this run and eventually it's going
16:36 - to do it now we could say we could we
16:38 - could do some stuff to make this a
16:39 - little fancier so but here's the thing
16:43 - this is a pause point me to do something
16:45 - more of this in a second because I want
16:46 - these circles to form a letter or a
16:48 - shape but what I could do here is I
16:53 - could start to think about well what are
16:55 - some ways you know should I only start
16:57 - the circles where the user clicks the
16:58 - mouse should I start the circles along a
17:00 - sine wave pattern should I start the
17:02 - circles like you know randomly what
17:05 - types of what kind of color what type of
17:07 - rules should I apply to when and where I
17:09 - start the circles and you could probably
17:10 - create more geometric kinds of
17:13 - interesting pattern so I would go with
17:16 - this go forth and make your rainbow
17:19 - circle packing magic and maybe fingers
17:21 - what other
17:22 - you could animate the circles one of
17:23 - things could do besides just drawing
17:24 - circles this idea of filling a space but
17:26 - one thing I do want to do a couple of
17:28 - things here is you can see like that
17:29 - overlapping is a little bit awkward so I
17:32 - think I probably could kind of clean
17:34 - that up by saying like because the the
17:37 - pixel width of those circles is too so
17:39 - you know I could probably oh and the
17:42 - other thing is Oh a - - I mean so you
17:47 - can see this is making it a little bit
17:49 - better so the circle is actually kind of
17:50 - like stop and abut each other a little
17:53 - bit sort of depends on the size but so
17:55 - we could refine that and you know that
17:57 - also like I could probably have the
18:01 - circle grow a little bit slower and then
18:04 - it gives it a little bit more resolution
18:07 - in terms of how close it gets but these
18:09 - are these are smaller points the point
18:11 - that I want to actually do is I think
18:13 - that I think they'll be useful to add is
18:15 - I want to let's say I want to I want to
18:19 - make sure I add 10 new circles every
18:21 - frame so I'm going to say count equals
18:25 - zero
18:26 - and while count is less than total
18:30 - whoops create a new circle if new circle
18:37 - is not no then count goes up and then
18:44 - we're done so this would guarantee that
18:47 - it's going to like keep trying to find
18:49 - more circles every frame up to ten the
18:52 - problem with that you can see it's
18:53 - filling it much more quickly the
18:55 - probably this is it's going to get stuck
18:56 - at some point an infinite loop is it
18:58 - simple it's not going to be able to find
19:00 - ten new spots anymore
19:01 - because the whole screen is going to be
19:03 - full so what I think would make sense to
19:07 - do in that case would be to have some
19:09 - sort of like I'm going to also have a
19:12 - variable called attempts I'm going to
19:15 - say a temp attempts plus plus and if
19:19 - attempts is greater than 1,000 then just
19:23 - let's be done you know I can even say
19:26 - like no loop so I can completely stop
19:29 - the program from running and I can say
19:33 - you know print line finished
19:36 - so this is just sort of like useful say
19:39 - like oh if it took a thousand tries and
19:41 - couldn't find any spots for the circles
19:43 - then it should be done we can kind of
19:45 - zoom in and see what this is doing it's
19:47 - still finding more spots at some point
19:49 - it's going to stop finding spots I'll
19:51 - let this run for a little bit okay
19:53 - so while this is running I'm pretty sure
19:56 - that I did this correctly
19:57 - he's like waiting for it to say finish
19:59 - down here in the console but while this
20:02 - is running let's go and let's let's add
20:04 - one more thing to this Wow I guess it's
20:08 - still just finding spots it's not done
20:10 - there's just so many spots left okay
20:13 - it's really filling it in there the
20:15 - other thing I could do is I could start
20:16 - the circles with like a little bit of a
20:19 - radius like not one but like two anyway
20:22 - but okay all that's neither here and
20:25 - there you can tweak them you can tweak
20:26 - the stuff yourself but I assume it will
20:29 - get to finish at some point what I want
20:30 - to do right now is I have on my desktop
20:33 - here is I have this image and what one
20:36 - trick that I can do so there's a couple
20:37 - different ways I could decide there's a
20:39 - lot of different ways I could decide
20:40 - where to seed the circle points one way
20:45 - that I could do that is like it's a I'm
20:47 - going to have a source image I'm going
20:48 - to read the pixels of that source image
20:50 - and only ever going to be allowed to
20:52 - start circles where there's a white
20:54 - pixel in that source image and that's
20:56 - what I'm going to do right now to make
20:58 - this 2017 message replace it with your
21:01 - own message later okay so let's see is
21:06 - it still going oh I stopped it
21:08 - okay so let's let's do this and I'm
21:13 - going to say this as circle packing
21:14 - animated text and I'm going to ups I'm
21:18 - going to go to the sketch folder I'm
21:21 - going to create a folder called data and
21:23 - I put this 2017 PNG in there what is the
21:27 - size of that image is important the size
21:30 - of that image is 900 by 400 okay so
21:33 - let's make a the window also 900 by 400
21:38 - let's say a P P image image if I'm going
21:44 - to say image equals load image 2017 dot
21:48 - PNG
21:48 - and then I'm going to just say
21:51 - background just to make sure that image
21:53 - is there we can see the images there now
21:55 - 2017 I'm drawing circles on top of it
21:58 - yay okay so now what do I do here what I
22:01 - want to do is I need to say image load
22:04 - pixels because what am I going to do I'm
22:07 - going to read the pixels of that image
22:10 - then I'm going to say 4 into X equals 0
22:13 - X is less than image dot with X plus
22:15 - plus 4 int y equals 0 Y is less than
22:20 - image dot height y plus plus what I want
22:25 - to do here in setup is I want to have a
22:28 - nested loop a loop that looks at every
22:30 - single pixel I want to know is the pixel
22:32 - white or black so how do I look at the
22:35 - pixel well the pixels by the way even
22:37 - though I'm thinking of them as XY
22:39 - locations they are just a linear list 0
22:42 - 1 2 3 4 5 6 7 8 9 all the way up to 900
22:45 - times 400 minus 1 but and I have some
22:48 - videos that cover how this sort of pixel
22:50 - stuff works but I can find the index
22:52 - into that pixel array the
22:54 - one-dimensional pixel array by saying
22:56 - the X location plus the Y location
22:58 - multiplied by the images with you can
23:01 - think about that makes sense if the
23:02 - image was 5 pixels wide it's going to be
23:04 - 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 right
23:09 - 0 5 10 so you can sort of see how that
23:11 - works it's the row plus no it's the
23:15 - column plus what row it is times the
23:17 - width of those columns okay so now I'm
23:19 - going to say the color is image pixels
23:24 - index and then the brightness I'm just
23:30 - gonna look at the brightness of that
23:31 - color if the brightness of that color is
23:34 - greater than I don't know 1 then I've
23:38 - got a white pixel right I could say if
23:40 - it's greater than 254 probably but in
23:42 - this case this was kind of a really
23:43 - simple test if it's greater than what am
23:45 - i standing in front of my code all this
23:47 - time oh okay if it's greater than 1 oh
23:51 - boy this video hope it's not totally
23:52 - ruined if it's greater than 1 then I
23:54 - found a bright pixel so what do I need I
23:57 - want to have an ArrayList
24:02 - of spots and those spots I want to have
24:07 - a list of possible spots that the that
24:11 - the circle packing algorithm can pick
24:12 - from and each one of those spots is
24:14 - essentially a vector processing has a
24:16 - class called P vector that stores an x
24:18 - and a y so what I'm going to do is I'm
24:20 - going to say right before I do this I'm
24:23 - going to say spots equals a new array
24:25 - list full of P vector objects and if the
24:29 - brightness is good spots add a new P
24:33 - vector at that X&Y location
24:36 - todo spots out add a P vector at that
24:39 - X&Y location so now if I run this I'm
24:41 - just going to say print line spots dot
24:44 - size OOP Y may not have been initialized
24:48 - whoops that should be a zero so great so
24:52 - this looks like it worked it found
24:54 - 77,000 759 possible spots so now what
25:02 - can I do here here instead of creating a
25:05 - random x and a y anywhere in the window
25:07 - what I want to do is say I want a random
25:11 - number that is between 0 and the length
25:14 - of that spots ArrayList so the random
25:18 - function gives me a random number
25:19 - between 0 and the length of the list and
25:21 - I want to convert that random number
25:22 - into an integer because I want to use
25:24 - that too as the index to get me a
25:32 - particular spot out of that ArrayList
25:34 - and now I can say X is spot that x and y
25:41 - is spot dot Y and now if I lo what did I
25:44 - miss
25:45 - I guess I just need one more close
25:47 - parenthesis now if I run this
25:49 - oh whoops I ruined it by drawing the
25:52 - image so let's stop drawing the image
25:55 - and we can see there we now have our
25:58 - circle packing algorithm but it is only
26:00 - picking as original spots spots that are
26:03 - that are available in the actual as part
26:08 - of those white pixels from that source
26:09 - image so you can see we have this nice
26:11 - circle packing I'm still finding spots
26:14 - because hold on a sec let's let's let's
26:18 - be a little bit more let's say that it
26:21 - has to be the valid spot has to be um it
26:28 - doesn't have to just be the distance
26:30 - between it and the center has to be less
26:33 - than the radius plus like a little bit
26:35 - of buffer zone like two pixel buffer
26:37 - zone so that I think will cause it to
26:40 - finish you can see there's lots of ways
26:42 - I could futz with like what it's
26:44 - actually going to like what if I just
26:45 - want one circle each frame it's going to
26:48 - pick circles much less frequently and so
26:51 - the circles are going to have a longer
26:53 - time to grow and again you can start to
26:54 - think about color here how you're
26:56 - picking the circles when you're picking
26:58 - the circles you know not being able to
26:59 - pick the same point twice will probably
27:01 - make a lot of sense and here we go
27:04 - animated circle packing making
27:07 - letterforms now this is the end of this
27:10 - video coding challenge thank you very
27:11 - much I hope you make something creative
27:12 - with it you think of a message you think
27:14 - of some other type of pattern you think
27:16 - about color animation in a different way
27:17 - share it with me all that stuff but I do
27:20 - want to say is I am using a source image
27:26 - to find the paths of these letters which
27:29 - is great in the sense that you could use
27:30 - a source image not just to do letters or
27:33 - numbers you could use you know painting
27:34 - and then do circle packing to like fill
27:36 - a space with colors from the painting
27:38 - there's also two possibilities there but
27:39 - one thing I do want to look at and
27:41 - perhaps in a future coding challenge may
27:44 - give you in the next one is how to
27:46 - actually compute these paths of how to
27:49 - actually get these paths of letters
27:51 - dynamically in a program so the user
27:53 - could type in the word hello and then
27:55 - suddenly you could fill a circle packing
27:57 - space or whatever with that with that
27:59 - particular word I'm going to look at
28:00 - that in javascript in the browser
28:01 - because p5 has some nice functionality
28:03 - for that you can do in processing also
28:05 - with the library called jammer tip which
28:07 - I'll try to link in this video's
28:08 - description
28:08 - but that's how you might look for okay
28:10 - so thanks for tuning in to this coding
28:12 - challenge i back it's 2017 i've made a
28:14 - coding challenge i think things are
28:15 - still ok people will hopefully watch
28:17 - this hope we make something with it and
28:18 - talk to you soon goodbye
28:21 - [Music]