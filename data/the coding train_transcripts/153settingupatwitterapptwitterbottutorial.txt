00:00 - in this video I'm going to look at how
you can write code in a node application
00:05 - to connect to the Twitter API, using the
node package twit.So it assumes the
00:10 - previous couple videos where you've got
node installed, you've got the twit package
00:14 - installed.And now you're ready, you're
readyI, I'm ready we're ready here to
00:18 - actually write some code.So the first
thing I need to do is actually make a
00:22 - JavaScript file.Like this particular
project just has the modules directory
00:26 - in the package.json file.So i need to
add a file and I'm going to call it a
00:31 - bot.js because this is the file that
I'm going to write some code. and I'm
00:35 - just going to make sure that the bot is
starting.
00:39 - I'm just gonna make sure that this is
working so i'm just gonna put a little
00:42 - bit of code in the file to make sure I
could run it and things are happening. So
00:45 - if I'm here I hope....  you can see I did that
already clear clear clear.I'm going to say node.js
00:49 - and I'm gonna hit enter and see the
code starting. Here's a little
00:53 - bit aside, you might see people when
they're working with node use "npm start"
00:58 - So I got all these errors because it's
like ....
01:03 - actually even a dislike error loggin
file. So one thing here in the package
01:07 - you can add under scripts.. I could sort
of assign a script to the keyword start
01:13 - and I might say node bot.js.So here
what I'm doing:  if i ever say npm
01:20 - start run ndoe.js and there we go. I
can now say npm start and you can see
01:27 - the same thing has happened. So for us
this doesn't really matter so much but
01:31 - the reason why I bring that up is you
might see it an other example in some
01:34 - places where you have to ike put your notes
01:37 - somewhere else. You've got to use this
npm start thing and quickly using the
01:40 - some a web
service... I got off track there so edit
01:44 - that part out! Anyway ok so 
this is not any good like the bot is
01:48 - starting at the bottom end  and the bot is not doing anything.
01:50 - What you need to do now is actually use
the twit package.  So the way that
01:56 - works.I'm gonna come back here to my bot.js code and save our twit equals
02:01 - require('twit')t because I require i
required twit
02:06 - I  have a twitter I require twit being
mysel! Anyway so this is like an import
02:11 - statement this is the same thing that
you
02:13 - might say like in Java  or processing import
you know something.something. you
02:19 - know library file in JavaScript
index.html, file you have a reference to
02:24 - another javascript library like jquery
or p5. So this for node this is like
02:28 - import the package import the library
import the module whatever you want to
02:32 - call it it. So  once I've done that I
could start making use of it.
02:36 - How do I make use of it? so the very
first thing you need to do is
02:39 - authenticate... with this
02:41 - OAuth thing so and you know this could be a complicated endeavor and one of the
02:47 - reasons why I'm so happy to just use
this package is I really have to
02:50 - understand what OAuth is, how it works
02:52 - who you.... It's just going to
authenticate, it just gives me some code
02:56 - to do that. So how do you find that? I've got this already loaded
02:59 - here in the browser, but you can see this
is that github repository for the twit
03:03 - package. You can actually just google
"twit package node" and we'll probably
03:08 - get this link right here and in the
Readme file.If I scroll down there's a
03:12 - lot of information "how to install it" and
here you can see this is an important
03:16 - bit of code. So I'm going to grab this
bit of code to copy it and I'm going to
03:20 - put it into my code so you can see this
is what I first need to do. I need to
03:25 - make a new twitter object a new twitter
object and I need to have a consumer key
03:31 - a consumer secret and access token and
an access
03:33 - token secret.All of these things are
secret code values that are tied to the
03:39 - particular twitter account that's going
to be associated with this particular
03:42 - node app. Now there is kind of a question
here of how do you.. what happens if
03:49 - somebody sees your access token and
you're going to see mine for example.
03:53 - And then I'm gonna talk about at some
point in these videos how to usesome
03:57 - techniques for how you might keep those
hidden even as you open source or
04:01 - publish your code. But for the time being,
just gonna like put all my stuff right
04:04 - here in my code and I'll show you in
other ways you might grab your access
04:08 - token from another source at some point. So first how do you find out your access
04:11 - tokens? Well back to Chrome here I am
logged into Twitter through an account
04:18 - this is like a test account that I set
up called A2Z ITP.
04:23 - II teach a course at ITP called programming from
04:25 - A2Z, I'm not very good at titles of course
 apparently! And you can see here that
04:31 - so one of the things i would emphasize
if you're starting to work with Twitter
04:34 - box or mess around with the API you
might make yourself a new twitter
04:38 - account with a new gmail address just so
in case like your API Keys end up out
04:42 - there or you screw something up or
Twitter blocks you because you did
04:45 - something like tried to like post too often
too fast you're not like ruining your
04:49 - precious special like personal Twitter
account. So that might be one thing I
04:53 - recommend now. There is a bit of trick to this , an issue
04:58 - with this now.. this is just the twitter
page where you need to go in order to
05:02 - work with the twitter API and twitter
stuff from code is dev.twitter.com
05:08 - so you can see here if I go to dev.twitter.com
05:12 - I'm gonna be, I'm still logged into my
account but I'm on this developer page
05:17 - for this documentation, hopefully
tutorials and lots of information. What
05:20 - I'm looking for is this particular link
down here "manage your apps" . So you
05:26 - know this is really designed for
somebody who's like  making an iphone
05:29 - twitter app that  is going to be the best way
to read tweets ever
05:33 - yeah kind of like bing! But we're just
like we want to just mock around and
05:37 - make weird stuff happen on Twitter so
this site is honestly the most
05:40 - friendly to us in that sense. But on but
what you're doing really your node
05:45 - programme your little node program is a
app. So if I click "manage your apps"
05:48 - you can see here i already have two apps
that I've been messing around. You're
05:53 - going to need to hit this create new app
button because you're gonna have to make
05:57 - a new one. Now here's a little bit of a
problem
06:00 - twitter is not gonna let you make an app
or get API keys unless you have a phone
06:05 - number associated with your account. So
you have a couple options here number
06:08 - one, you could just use your real
phone number, if it is associated with another
06:12 - twitter account you could delete it from
that twitter account put it with this
06:15 - one.
06:15 - Get your app keys and then move it back
or you could sign up with a service like
06:19 - twilio  or google voice that
gives you like a free phone number. I
06:25 - think you might need to be able to get
text message on the phone number ..but not
06:27 - entirely sure.
06:28 - But that's one thing we're gonna
have to be aware of. I use the google
06:31 - voice number for this so I can go here, I
can... actually let's create a new one
06:37 - I don't know maybe this is a bad idea.
I'm gonna say a youtube live stream test
06:42 - and it's just my description. It is exactly
the same my website website doesn't
06:47 - really matter i'll just put in shiffman.net because you don't have a website
06:50 - associated with this you're just messing
around.
06:53 - Callback URL you can totally
ignore this for now. These are things for more
06:56 - other scenarios that don't matter to us.
I'll hit yes I agree and I'm going to
07:00 - create my Twitter application and
hopefully this is going to work and you
07:06 - can see now there's information.
07:08 - None of this matters to me the only
thing that matters to me is key and
07:12 - access token. This is the stuff that I
need in order to put ... here because I want
07:19 - this node application to connect to
twitter I just need those keys. So I go
07:23 - back to the browser and make this bigger
I click on keys and access tokens you
07:28 - can see there we go.
07:30 - Consumer key api key that's this one I'm
going to copy it and I'm gonna go to my
07:35 - code and then put it right here. Next
thing I'm going to do is I'm going to
07:39 - get the consumer secret API. I'm
gonna get this all and it all. But I need
07:46 - an access token and access token secret. Now why is their consumer key why is there an
07:50 - access token? This has to do with other
scenarios of an app that you make that
07:55 - might authenticate to somebody else's
account and all sorts of complex things.
07:59 - that doesn't matter to us, we just need to
be like: these are the four things we need.
08:03 - I can find those four things on that
page so I'm gonna scroll down and you
08:06 - can see like ah I need to create an
access token now. Here's the thing, if I
08:10 - really cared about you guys not hacking
my twitter account (which I don't please
08:14 - hack it i think it would be interesting!).
I could as soon as I finish making this
08:17 - video hit regenerate consumer key and
secret so that does those keys are no
08:21 - longer valid but in case you publish
your key number by accident,  note that's
08:25 - there. The next thing I can do here
is create my access token, so I'm gonna
08:30 - click that button and now as I scroll
down ...and didn't seem to work I now have
08:34 - a access token so let me get the host
access token...
08:40 - and I'm gonna put that here and now i'm
going to get access token secret and i'm
08:47 - going to put that here.
08:50 - Copy paste .... I was
like daydreaming! Simply when , you like
08:55 - start copy-pasting you just ... I thought i
was like thinking about something else...
08:57 - that I have to do later and like a
potluck dinner at my son's school or
09:01 - something to bring kale salad like what?!
09:03 - But let's go back to this.So now access
tokens secret okay so right now i have a
09:11 - so I'm done now Twitter API developer
page.  You know you might want to go back
09:16 - there read through the documentation
search around there might be stuff ,
09:20 - things that you need here. But I'm really
done with this and I could come back to
09:23 - what happened to the twit github
page, I can come back to twitter.
09:32 - This was going so well !  So go to this page I
can come back to the stuff down here so
09:37 - I've done the the work of of creating
this object that now connects to twitter.
09:43 - Nw one thing that I might do is just
kind of like a run my code again like...
09:49 - Let's just see like do I get even any
any errors? Like, does this even
09:54 - work because in theory if those access
code keys were invalidated hopefully we'll get
09:58 - an error so i'm going to run again.
10:01 - It seemed to have connected we could
sort of like check by like, I could
10:04 - get rid of that there that capital D
and run it again. And so it didn't give me an
10:09 - error! That's interesting to see that. I
would love to like have to look further
10:12 - like probably when I actually made the
API query that perhaps I would have a
10:17 - problem. Okay sorry about that
aside. So now what do we need to do
10:21 - okay so uh so you know what I'm gonna
I'm gonna break this up into two videos.
10:28 - I just went over here, thinking back. I'm
gonna get to actually like, executing the
10:32 - twitter API functions in just like a new
video. So you know you can stop this wone
10:36 - to move on to the next one but let's
take a minute now to just look at
10:40 - this question of; what if i want to
decoupled the fact that all of this
10:45 - stuff these keys are just in my code,
10:48 - in my nodee program because this can
actually be convenient for a lot of
10:51 - reasons. Ultimately you might want to
make a whole bunch of bots and you just
10:55 - want to have like your keys all in one
file that you're always pulling from. Or
10:58 - you might want to like upload this as an
example code but not have the keys in it.
11:03 - So and and this is kind of actually also
like a little extra tidbit of how things
11:08 - work in node that I think might be
useful to you.
11:10 - So something that I could do is i can
make another file so I'm gonna make a
11:15 - new file. I'm going to call it config.js. Now I could call this anything that
11:20 - I want, but i'm going to call it config.js because it's sort of like..
11:24 - configure my Twitter config information
and something that i'm going to write is
11:28 - I'm going to say module.exports = { and
then I would put brackets, I hopefully I
11:34 - got that right I'm gonna check.
11:36 - So what am I doing here something that
you can do with node is store code that
11:42 - you might want to reference in another
file. The main file is bot.js. What about
11:48 - when you want to pull objects or other piece of
code just like I'm using the twit
11:51 - package. So I'm making myself my
own little mini package for my own code
11:56 - Now all I want to put in here is my API
keys but  this is...  all I want to do is put
12:02 - my API keys in here but you can actually
put a lot more in here. So if I make a
12:06 - file called something.js put module.exports in it. Now I can go back to bot.js
12:13 - and I can take all of this and take
it out and I can put it in here so we
12:22 - can see now that I now have made this
module that exports into an object that
12:27 - has the keys in it. And now in bot.js I
can save our config = require('config')
12:34 - So look at this, this is now how
I'm saying require().Just like I said
12:42 - require('twit') because of requiring the
twit package now saying require config
12:47 - which is just require the stuff that's
in my config.js file. And what's now in
12:52 - this variable if I say console.log.config and I run this code.
13:00 - Haha it cannot find module configured so
I knew I missed something there so it
13:06 - has to do with the way the paths are set
up.
13:08 - It's looking for like a folder called
config and really I just have a
13:11 - JavaScript file called config so I can
fix that I think by saying like . /
13:15 - which is like go up a directory and then
look for config.js something like
13:19 - that.
13:20 - Whatever it is it's just I think it'll
just work and i'll feel happier about it
13:23 - so now I could go back and try that
again and you work.
13:29 - Oh oh no it did work I could work it
just like I got what didn't work is that
13:36 - I didn't authenticate to Twitter's I
didn't actually get the stuff so let me!
13:39 - Let me let me run that again just to
show you how to run that again and you
13:42 - can see it's spinning back out all that
information. So now that I have that
13:46 - information in that config variable I
can now say make a new twitter object
13:52 - with config. So this is a way of exactly
the same thing I now have all those API
13:59 - keys in a separate file I'm importing
those files and then I am making a new
14:05 - twitter object with the stuff that's in
that file and I can now say run it again.
14:10 - Oops I must have not hit save.I 
can run it again and you can see it's
14:16 - working!
14:17 - So the reason why this is useful is
there's lots of ways now if I were to
14:21 - publish this that I could hide the
config.js file and when I link to the
14:25 - source code that 
will accompany this video. You'll see
14:29 - that i have a file called like configMT.js
with some instructions but I'm
14:34 - not actually including the real config.js final.
14:38 - This was a bit of an addendum on that maybe
just maybe not watching this anymore
14:42 - you're not interested in that addendum.
But this is also going to simplify
14:45 - things and allow us as we make more and
more examples to always just you know
14:49 - feel bring that config.js file with
with with us as we go.
14:53 - Ok so what I would say to you now is
before you get to the next
14:58 - video
14:58 - what you should do is get your twitter
account, go get a phone number
15:02 - associated with it and create an app. Get
all those keys
15:05 - see if you can get the code running we
authenticate and finally finally finally
15:08 - in the next video
15:11 - you're actually going to be able to
start using the
15:12 - api and posting tweets. Which you know
suddenly from there it's gonna be rapid
15:16 - fire to making Twitter box like all of
this like so much of this is just
15:19 - getting set up in the environment
15:21 - ok.