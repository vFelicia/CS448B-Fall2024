00:00 - Okay, this is the video about a loop within a loop
00:03 - But it is not the previous video which was about a loop within a loop.
00:06 - This is really the video about a loop within a loop that you imagined it was going to be. We're going to talk about
00:11 - nested loops here. So first of all when do we need a nested loop? Well let's first look at something
00:17 - we did a little bit earlier... over here...
00:19 - We had a program that we wrote when we were learning about while and for loops which drew this grid pattern on the screen.
00:25 - We drew a bunch of lines horizontally, and we drew a bunch of lines vertically. We used a while
00:30 - loop to horizontally a for loop to do it vertically just to demonstrate those two different kinds of loops.
00:34 - So that's one thing and it gives us this pattern over here.
00:38 - Essentially we have this pattern over here.
00:40 - But what if instead of these lines going across on lines coming down, we actually want these to be rectangles and
00:46 - rectangles that we could fill in? Perhaps each one is going to get a random brightness value between 0 and 255.
00:55 - How are we going to do that?
00:57 - Well let's first see why the structure we have over there. Which is over there. I guess
01:04 - Doesn't work
01:06 - Ok, so...
01:07 - First thing first,
01:08 - let's actually just make both of these for loops because I think that'll be easier to look at. So now we have a for loop.
01:14 - int x equals 0, x is less than width and
01:18 - then x
01:20 - equals x, x equals x, equals x plus 20 and
01:27 - now we have both these loops and
01:30 - look what we've got. We've got two for loops. One for the horizontal lines, one for the vertical lines.
01:36 - We have our grid pattern. But remember we need to fill in those rectangles, so we need to make each element that we're drawing
01:44 - rectangle, rectangle, rectangle, rectangle, rectangle up and rectangles down all
01:50 - over in a grid pattern on the screen.
01:52 - So this shouldn't be too hard right? All we've to do is change this to rectangle the rectangle is at X comma zero and
02:00 - its width is going to be I don't know 20 and its height will be 20 and
02:03 - this one will be 0 comma y and its width will be 20 and height will be 20
02:08 - and it's also a rectangle, and we don't let's just do a fill now of
02:15 - 127.
02:16 - Just so we give it... we will worry about random later...
02:19 - Oh, we're close, but we all we have a loop to draw rectangles across and a loop to draw rectangles down.
02:26 - How do we get the ones in the middle? Well let's think about that. What are we really saying here?
02:32 - We're actually we could be saying one thing, right. We have this idea of columns.
02:37 - Which we're thinking of as x. And rows
02:41 - Which we're thinking of as y. These are the rows, these are the columns. We are saying for every
02:49 - column
02:51 - draw a
02:52 - rectangle.
02:54 - We also are saying
02:56 - for
02:57 - every row
03:00 - draw a
03:02 - rectangle. Well, that's what we did for every column
03:06 - draw a rectangle. For every row
03:08 - draw a rectangle. Well actually what we want to say is for every row
03:14 - draw all the columns of rectangles. For row zero draw all the rectangles across column. For row 1 draw all the rectangles.
03:21 - What does that mean exactly? We actually want to say not two separate for statements we want to say...
03:28 - this:
03:31 - for
03:33 - every row. For every y value
03:38 - for
03:39 - every
03:40 - column
03:41 - draw a rectangle, right?
03:45 - We're in row 0,
03:47 - draw all the rectangles. We're in row 1 draw all the rectangles. So this is what we're talking about a nested loop.
03:53 - We're going to do a loop each time through every... we're going to loop through all the rows and for each row
03:59 - we're going to loop through all the columns.
04:01 - So how does that work? What if I just took this loop and...
04:06 - Put it right inside here?
04:09 - And what if I drew the rectangle then at x comma y?
04:14 - Let's look at this... Now
04:16 - we have this grid pattern for every row... for every y loop all the way through. We have a loop within a loop.
04:24 - This might sound confusing it might be causing you some confusion you might need to just take a break lie down for a few minutes
04:30 - look at this again...
04:31 - Have a snack look at it again, but if you really think about if you really can get yourself to walk through this code...
04:38 - What's happening? Well first y is equal to 0 then what happens okay?
04:43 - well then x is equal to 0. Then x is equal to 20 then x is equal to 40 and x is equal to 60
04:49 - etc, etc, etc. What happens next? Okay, we're done with that. We're in the outside
04:53 - loop. y is equal to 20, then what's next? Well x is equal to 0 and x is equal to 20...
04:58 - So for each y that we're looping there's another loop that happens inside
05:02 - And we can see this because the x loop is inside the outer while loop, y loop.
05:06 - So I encourage you to sort of like walk yourself through this on your own.
05:11 - How do we make them all random color? Well easy, I can just take this fill right here, and
05:17 - say hey fill random(255)... and
05:22 - There we go now we have this pattern where each one of those gets a random color
05:25 - This is essentially a like a checkerboard or chessboard.
05:30 - I should have had an exercise prepared for you. So if you're looking for an exercise...
05:36 - Well there's there's lots of interesting things you could try for example
05:41 - What if you... one of the things that you could try is... what if you were to do this nested loop
05:46 - but instead of having every color be random have the color actually be organized on some along some principle like for example...
05:53 - What if the colors were all..
05:55 - darkest in the center and
05:58 - lightest in the outside? I think you need a clue for this. There is a function in Processing...
06:05 - called distance().
06:07 - The distance function takes four arguments. How, where are we? Oh, I didn't start the timer who knows how long I've been going.
06:14 - But it takes four arguments. It takes an xy of one point and an xy of another point and it gives you the distance.
06:20 - So you could use... you could actually even color these according to how far away
06:24 - they are from the mouse! Kind of an interesting problem, why don't you give that a try?
06:28 - I might try to... if I ever rerecord this video... a note to self I might try to think of a better exercise
06:33 - that's got to do with nested loops.
06:34 - I'm sure one of you will have a suggestion. Somebody will and will send it to me, okay?
06:37 - So I think this actually concludes all of the videos the initial videos at least about loops.
06:42 - Probably fill in some more and add some more as we as I sort of come up or people ask questions, or there's other things.
06:47 - Okay, so that's the end of this one. Thank you