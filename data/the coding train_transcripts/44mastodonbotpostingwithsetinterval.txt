00:00 - (bell rings)
00:01 - - Alright I'm back again,
this is another video,
00:03 - I'm just continuing
making this Mastodon Bot.
00:06 - (claps hands)
And I got some good tips,
00:08 - first of all I did kind of
like a goofy thing here.
00:11 - This .ENV package,
00:13 - it's I guess good practice
00:15 - or convention to put
it as the first thing.
00:17 - And I can just call .ENV
00:19 - .config, I don't need to save it.
00:21 - The variable I can do this
just in one line of code.
00:22 - So let me clean that up,
that's a little bit nicer now.
00:26 - The other thing that I want to do, is...
00:29 - (snaps fingers) I want
to make this bot post
00:34 - every so often.
00:36 - And so a quick way that I could do that
00:37 - is with the setInterval function.
00:40 - You know what I should also do?
00:41 - Look at this, let me show you something.
00:43 - So one thing that I often like to do,
00:46 - so if I run this right now,
00:48 - actually I just ran
it, you can see this is
00:50 - the response that I get
after I post to Mastodon.
00:54 - So I get each 'toot' as
an id, and as a timestamp,
00:59 - and as metadata about whether
it's a reply to something,
01:02 - that has it's content, you can see
01:03 - it's formatted with HTML.
01:04 - So what I actually would like to do
01:06 - is not just console log all this JSON data
01:09 - to the console,
01:11 - I would like to just pick and choose
01:12 - a few things to console log out as
01:14 - kind of debugging information.
01:16 - And also, something
that I often like to do,
01:19 - just to kind of help me
with this kind of stuff
01:21 - is use the built in node
file system package.
01:26 - So I'm going to require file system,
01:28 - this is not a package I usually install,
01:30 - it just comes with node,
01:31 - just whatever version
of node you're using.
01:34 - And I'm actually going to say right here,
01:35 - I'm going to say file system
01:41 - .writeFileSync,
01:42 - which is synchronous file writing.
01:47 - And then I'm going to write this data,
01:49 - actually the path is first.
01:50 - And then the thing that I want to write,
01:52 - which is probably JSON.stringify.
01:55 - I want to stringify the data,
01:58 - and I want it to have two space tabs.
02:02 - And then I need to write this file out,
02:04 - so I could just say data.JSON,
02:06 - and then if I run this again
02:10 - we should see now all of
a sudden I have a new JSON
02:13 - file that's appeared
02:16 - in my directory here.
02:18 - And I can look at it, and now if I want to
02:20 - figure out what's the data
that I got in the back,
02:22 - I have this as a reference.
02:24 - So I can now...
02:26 - And I can timestamp the name of the file
02:28 - and all sorts of things like that,
02:29 - but I can now go and I
can just comment this out.
02:33 - And now I can be more
thoughtful about this
02:36 - and I can say console.log success...
02:41 - Id.
02:44 - And then I can put, sorry
I need to go back here,
02:45 - and I could say it's data.id created at.
02:50 - So I would go back here and I would say
02:53 - data.id ...
02:56 - Plus ...
02:57 - Data.created.
03:01 - You know what?
03:02 - Actually this is a good
one, I really should just
03:04 - do a separate video on this entirely
03:05 - because it's such a wonderful
feature of JavaScript now,
03:08 - but you know how I'm always
doing this console logging,
03:10 - this text, and then some variable stuff
03:13 - and I'm joining with a
plus and concatenation.
03:15 - You can use something
called 'template literals',
03:17 - which is a way of embedding expressions
03:19 - inside of a string.
03:21 - And the way to do that
03:23 - is instead of quotes, with back ticks.
03:26 - So if I put a back tick with
the start and the beginning,
03:29 - you no longer need this plus.
03:31 - I'm just going to get
rid of all this nonsense.
03:37 - I just going to do id...
03:40 - And timestamp...
03:42 - Colon, and so now this is a string
03:45 - and it has basically,
03:46 - I want id, this is what
I want to literally see,
03:49 - and then what I want to
see is the value of this.
03:51 - And the way that I do that is with ${
03:55 - } so now anything inside
of here is an expression.
03:58 - So I could write 4 + 7 and it would
04:02 - put 11 in the string.
04:03 - And then I could say timestampy,
04:07 - I could make this like this.
04:10 - And now we could run
this again one more time,
04:14 - node bot.js, and we could
see this is what I get now.
04:17 - Id and timestamp.
04:19 - So this is what I'm going to see,
04:21 - and maybe it would be useful for me to
04:22 - also put the content there,
04:23 - who knows what I want
to log in console.log.
04:25 - But I want to be more
thoughtful about that,
04:27 - not just spit out massive
amounts of JSON data.
04:29 - Okay. (claps hands)
04:30 - Let's get to the good part.
04:32 - Now.
04:33 - What I want to do is, my
first example of a bot,
04:36 - is I want to make a random number bot.
04:39 - So I'm going to say,
04:40 - I'm going to use template literals again.
04:44 - I'm going to say, "The
meaning of life is..."
04:48 - and then I'm going to use an expression
04:50 - and I'm going to say Math.floor.
04:53 - You know, let me put this
in a separate variable.
04:57 - Const num = Math.floor
05:00 - math.random
05:02 - times 100, see if we get 42.
05:05 - And then I'm going to just put that here.
05:11 - And now this.
05:13 - My bot should now post:
"The meaning of life is..."
05:17 - this random number.
05:18 - So Math.random gives me a random number,
05:21 - a floating point number between 0 and 1,
05:23 - I multiply that by 100 so I get a number
05:25 - between 0 and 100, and technically the
05:26 - highest number is 99.9999999.
05:28 - And then Math.floor takes
off the decimal point,
05:32 - so I now have a random
number between 0 and 99.
05:34 - I could add 1 if I want between 1 and 100,
05:36 - whatever, that's not the point.
05:37 - The point is now...
05:39 - And you know what, I
really would like to see
05:40 - from the console
05:43 - what it posted, so I am
also just going to do this.
05:46 - Console log data., what was it?
05:49 - Now I can go back to my data.JSON.
05:52 - And it's going to be...
05:55 - Where is the content?
05:56 - Content, just data.content.
06:00 - So I'm going to say data.content.
06:03 - We're getting somewhere.
06:05 - So let's run this one more time.
06:09 - Success, the meaning of life is 95.
06:11 - Okay, did we get it?
06:14 - We can go here, we can double check.
06:17 - Somehow it went away from there.
06:19 - the meaning of like is 95, great.
06:20 - Okay, now two more things I want to do,
06:22 - make this bot exciting.
06:25 - I am now going to use setInterval.
06:28 - So the idea here is this is all of my code
06:33 - to post to Mastodon.
06:36 - And again, if this is new to you,
06:37 - if you've just been
watching my p5-js videos,
06:39 - this weird syntax, this arrow syntax,
06:42 - is part of EF6 JavaScript,
06:43 - might be unfamiliar to you.
06:44 - I will put a link to a
video where I describe
06:46 - what arrow syntax is
06:48 - in this video's description.
06:50 - Okay, so now what I want to
do is all this stuff here
06:52 - is basically just a
function called 'toot'.
06:56 - (laughs) Alright.
06:57 - Because what I want to do is this function
07:00 - will pick a random
number, create the status,
07:02 - and post it.
07:03 - What I want to do is I want
to say now setInterval,
07:07 - and I want to do this toot
every 5000 milliseconds,
07:12 - which would be every five seconds.
07:13 - Now this is a bit extreme,
07:16 - this is not really
appropriate bot etiquette,
07:18 - to have a bot that posts
every five seconds.
07:20 - So probably a much more
thoughtful way of doing this
07:24 - if you're going to have
a bot that posts in an
07:25 - automated way, maybe
it's a word of the day,
07:27 - or a haiku of the day,
maybe it's just once a day,
07:30 - once an hour.
07:31 - I'm going to run this every five seconds,
07:33 - which is reasonable just for testing.
07:35 - Something interesting about setInterval,
07:37 - is what if I make this every 50 seconds.
07:41 - If I run this right now,
I got to wait 50 seconds
07:45 - for it to do it the first time,
07:47 - and that's not really such a great thing.
07:49 - So I am going to actually
also just call it once first,
07:53 - and then do it every five seconds.
07:55 - Okay, here we go.
07:57 - We've got meaning of life is-
07:58 - whoa it really picked 99?
08:00 - That is awesome.
(bell rings)
08:02 - And it's 48, ooh we're
getting close to 42,
08:04 - we can see it's doing
this every five seconds.
08:07 - I'm going to quit out of it.
08:09 - And I'm going to go back to here,
08:11 - we can see- there it
is, these are my posts
08:13 - that I did.
08:14 - You can see ten seconds
ago, ten seconds ago, now.
08:17 - I mean this is really five seconds ago.
08:18 - Alright, so here's the thing.
08:21 - I want to show you,
08:23 - remember how I made this...
08:25 - These parameters, all I'm doing is saying
08:27 - this is the status that I
want to post automatically
08:30 - from my node program.
08:32 - Well one of the things
that I can actually do
08:34 - is I can go back to the documentation,
08:36 - there are all these other things.
08:37 - So media id's is something
I really want to show you
08:39 - in a future video.
08:40 - It's a way I can include an image
08:42 - or other media with the post.
08:44 - But one thing that I could
do that's kind of fun
08:46 - is this spoiler text thing.
08:49 - So what spoiler text
does is allows me to have
08:52 - sort of two aspects
08:55 - to the post.
08:57 - The meaning of life is...
08:59 - And then the status
09:01 - can just be num.
09:02 - So I'm going to break
this up into two parts,
09:04 - and I need a comma here.
09:05 - And I'm just going to show
you what this looks like.
09:07 - So I'm using these parameters,
different properties
09:10 - of the JavaScript object, that's going to
09:12 - go here into my post call.
09:14 - And I'm going to now
run this one more time,
09:18 - and I'm going to go back to my bot,
09:20 - and I'm going to look and
you can see, look at this.
09:21 - The meaning of life,
but I now have this nice
09:23 - 'show more' button.
09:24 - So spoiler alert, if you click on this,
09:27 - you'll see that its 52,
09:28 - or that it's 23, and again
I'm doing this too often,
09:31 - so I'm going to absolutely quit this.
09:33 - And then if I wanted to do-
09:35 - Now if I want to have
my bot post once a day
09:38 - every 24 hours, I could just
go right back to my code,
09:42 - and I could say set interval should be
09:45 - 24 hours.
09:48 - There's 60 minutes an hour,
60 seconds an hour, and
09:51 - 1000 milliseconds in a second.
09:53 - So now, here we go, we now have a bot,
09:57 - a Mastodon bot.
09:58 - It will post a numeric meaning of life
10:00 - once a day.
10:01 - So in theory, if I just
left this running here
10:03 - and never closed my laptop,
10:05 - or never did anything, this would just run
10:07 - forever and once a day post.
10:09 - The truth of the matter
is you're going to have to
10:10 - think about well, once
you've created your bot
10:12 - where is that bot going to live?
10:14 - I mean, you could have
it live on your laptop
10:16 - or computer and it's always plugged in
10:17 - and always connected to the internet,
10:19 - but more than likely
you're going to want to
10:20 - host it on some sort of server,
10:23 - or maybe get a raspberry pi,
10:25 - plug it into the wall and always have it
10:26 - always sitting there
connected to the internet.
10:27 - I will cover that in
future videos, in fact
10:29 - I have covered that for how
to deploy a twitter bot,
10:32 - and ultimately it's
exactly the same thing,
10:34 - but just now the code is changed
10:36 - and it's working with Mastodon.
10:37 - Okay, so I am going to show you a bunch of
10:39 - other kinds of things you in bots,
10:40 - most notably listen.
10:42 - So the streaming API is a
way that I could connect
10:44 - and I could say if anybody mentions me
10:47 - I could reply to them.
10:48 - So I could have a bot that participates
10:50 - in a conversation.
10:51 - One thing you should really think about,
10:52 - and I'll talk about this again
10:53 - at the beginning of the next video,
10:55 - I mentioned bot etiquette.
10:57 - But if you really want
to be thoughtful about
10:59 - making a bot that's not
suddenly going to spam people,
11:02 - so it's not going to just
pick random Mastodon users
11:04 - and start @ mentioning them.
11:06 - Or start picking random posts and start
11:08 - replying to them.
11:09 - You really want your bot to engage
11:10 - when people opt in to engage.
11:12 - So maybe you only want to post messages
11:15 - to people who have
chosen to follow the bot,
11:17 - or chosen to mention the bot already
11:20 - in a particular post.
11:21 - So I just kept saying post
11:23 - because I have gotten comfortable.
11:25 - Just when I got comfortable saying tweet,
11:26 - I'm now no longer
comfortable with saying toot.
11:28 - But I'll get there eventually.
11:30 - Okay, see you in the next video.
11:31 - (pop music)