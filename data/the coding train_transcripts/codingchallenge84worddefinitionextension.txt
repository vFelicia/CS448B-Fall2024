00:00 - welcome to Peugeot to challenge well I
00:03 - really need just I don't know when
00:05 - you're watching this in the future in
00:08 - the past on a spaceship on your phone
00:11 - but I need I need I need some good vibes
00:14 - right now I'm gonna try to make this is
00:16 - gonna be a hard one for me I'm gonna
00:17 - make a Chrome extension that allows you
00:20 - to on any webpage like this steam
00:22 - locomotive Wikipedia page select some
00:25 - text and look up the look up the
00:29 - definition of a word that you've
00:30 - selected I'm gonna use the word Nick API
00:32 - and have the definition appear in a
00:34 - pop-up now we could make some case that
00:36 - this is not like the most thoughtful and
00:39 - elegant user interaction and so my
00:42 - challenge for you after I do this is
00:44 - there's probably a nicer way to do this
00:45 - like it's select should you actually
00:47 - just have the definition pop-up right
00:49 - there what's what's it what's a
00:50 - more elegant user interaction I can't
00:52 - even think of it but I'm actually the
00:54 - reason why I want to do this is because
00:55 - this particular idea requires all the
00:59 - pieces that I've shown you in my
01:01 - tutorials and requires a Content script
01:03 - a Content script it knows about the page
01:06 - is going to be a listen for the event of
01:08 - me selecting some text it requires a
01:11 - pop-up because I say so because I want
01:14 - to show the definition in the pop-up so
01:16 - in theory all that it requires is the
01:18 - content script and the pop-up because
01:20 - why not just send a message from the
01:23 - content script of the pop-up the problem
01:25 - is I can't guarantee that the pop-up is
01:27 - open if I probably couldn't open the
01:30 - pop-up automatically so I'm not gonna
01:31 - open the pop-up automatically
01:33 - that's a code challenge to you if that's
01:35 - even possible I'm gonna select the text
01:37 - I'm gonna send the selected text to the
01:41 - background script by the way I was
01:42 - talking about this earlier that's why
01:44 - this white board already has some notes
01:46 - about this then the background script is
01:48 - going to hold on to that selected text
01:50 - the pop-up is gonna get it from the
01:51 - background script it's going to go out
01:53 - to word Nick and it's gonna show the
01:54 - results all right I can do it I could do
01:58 - it I'm gonna do it all right so let's
02:00 - let's work on this I'm gonna open up my
02:01 - chat that's going here just in case
02:03 - anybody can help me out the first thing
02:06 - I might need from the chat is how I get
02:07 - the selected text in the content script
02:10 - but actually before I even get to that
02:12 - let me look
02:13 - what's going on here so I need a Content
02:16 - script I've got that permissions tabs
02:19 - and that actually might be unnecessary
02:21 - so let's just take that out right now I
02:23 - don't think I'm using that I need a
02:26 - browser action which is going to look up
02:29 - a definition so I'm gonna put that as
02:32 - the little message definition definition
02:36 - and then I need a background script it's
02:44 - just right background is is it script is
02:48 - it scripts something is definitely wrong
02:51 - here ooh boy no no not an array an
02:55 - object right oh let's just look at one
02:59 - of my previous ones background scripts
03:02 - oh boy I had it wait wrong I was way
03:05 - wrong okay
03:06 - so adding a background script I need
03:08 - background which has scripts and then an
03:11 - array of JavaScript files that are part
03:13 - of the background script okay so now I
03:15 - have a background script a and by
03:17 - the way the code base that I'm starting
03:19 - with is from the end of my popups
03:21 - tutorial so I'll link to that video in
03:23 - this description so if you actually want
03:24 - to like what's up what's the code that I
03:25 - started with you can watch that video
03:27 - and wherever I ended that's this code
03:29 - okay but there's very little in it I I'm
03:32 - the the the webpage the pop-up has
03:35 - nothing in it just it's I'm using the p5
03:37 - library so just set up in no canvas and
03:41 - the background script it actually has
03:44 - some code in it from a while ago which i
03:47 - think is i'm gonna get rid of cuz that's
03:50 - no longer relevant I'm going to leave
03:54 - the but yes okay so here we go and the
04:01 - content script has some other code is
04:03 - actually data as well so I can actually
04:05 - get rid of all this it's a very terrible
04:07 - idea
04:07 - so first let me at least get the
04:10 - selected text in the content script okay
04:12 - so I think I want to say like document
04:14 - dot event what is it what is it somebody
04:18 - told me document get selection a mouse
04:21 - up I want it I want the mouse up event
04:23 - in the content script alright so by the
04:26 - way I
04:27 - the chat I'm being told a better way of
04:30 - doing this would be when you open the
04:31 - pop-up send a message to the content
04:33 - script asking for the selected word and
04:35 - then send that back so that's actually
04:37 - true I'm gonna still do this in a
04:39 - ridiculous way because I want to show
04:40 - you some other pieces of how you can
04:42 - have the background on the pop-up talk
04:43 - to each other but that is a better way
04:45 - to do it you should fix my code after
04:47 - I'm done so the first thing that I need
04:49 - is window dot add event listener this is
04:54 - a way for me to listen for the by the
04:57 - way I'm looking at the chat here is
04:58 - people are giving me some of this co2
05:00 - your mouse up and then I need a callback
05:03 - which I could write in a fancy way but
05:06 - I'm just going to say moused UPS
05:12 - function worst name ever for a function
05:15 - so now if that event happens what I want
05:21 - to do is get the selection so I want to
05:23 - say the selected text is window dot i
05:29 - think it's just got to get selection let
05:35 - me just console.log that so what this
05:39 - should do is get this little all i
05:42 - should see is a console log of what's
05:45 - been selected yeah and i like this we're
05:48 - word selected it's gonna be a problem if
05:52 - you select more than a word but less
05:54 - that was a that was a good name Thank
05:56 - You Simon
05:57 - all right window decade selection okay
06:00 - so now oh I've got to load my extension
06:03 - look at my extension we're Nick it's
06:07 - called Wernick it's working I mean it's
06:10 - there
06:10 - I'm gonna go to this page I'm gonna open
06:12 - up the console and I'm gonna listen for
06:15 - this that event is not happening well
06:22 - let's just see if this has even happened
06:23 - oh wait okay hold on the Queen note get
06:26 - selection must be wrong let's see if at
06:28 - least if like were let me just
06:30 - console.log word select I'm sure window
06:32 - that get selection is totally wrong
06:34 - so let me reload the extension yeah oh
06:40 - and I'm having a weird thing where I'm
06:42 - either not reloading or refreshing
06:44 - properly because I'm getting more stuff
06:47 - happen so word selected and then so you
06:50 - can see here that the selection is this
06:52 - whole elaborate object thing and I I
06:54 - just spent some time which you might
06:56 - have watched or I might have I'm not
06:58 - sure be trying to like find the text in
07:00 - there but I thank you
07:02 - I just realized thank you to Alka in the
07:04 - chat that I can actually just say to
07:07 - stream and what that's going to do it's
07:08 - going to take the selected text instead
07:10 - of giving me the full object about the
07:12 - selection just going to give me the
07:14 - actual text and put it right there and
07:16 - so so let's now let's go back reload
07:20 - this extension refresh the page select
07:25 - and there we go and we're middle right
07:30 - you can see that I'm getting stuff
07:32 - selected wonderful okay now what I need
07:34 - to do is once I've selected something I
07:37 - want to send this information to the
07:39 - background page okay so first thing
07:41 - let's get rid of this console.log and
07:42 - let me first check if selected text dot
07:48 - length is greater than 0 so if you know
07:51 - I could have a mouse up where there's no
07:53 - actual selected text so I want to make
07:55 - sure there's at least something there
07:56 - and then I need to send a message I'm
07:59 - looking for my notes about all the
08:00 - different ways to do things in a Content
08:03 - script if I want to send a message all I
08:07 - need to do I think I could just do
08:10 - because I don't need to send to a tab I
08:12 - want to send to the background script I
08:13 - can probably use chrome runtime okay so
08:17 - all I need I was right I'm right I think
08:21 - I just need to say chrome runtime send
08:24 - message this is a generic way and this
08:27 - runtime lower case let me look guys
08:29 - notes somewhere at lower case yeah so
08:31 - this is a generic way to just send a
08:33 - message and it's going to go to the
08:34 - background script and I can make the
08:36 - message an object and I could say the
08:39 - text is selected text so I want to send
08:47 - that message so now what I'm doing is
08:50 - whenever I select a word send that
08:53 - message
08:53 - backgrounds great okay we're sending a
08:55 - message to the background script so now
08:57 - I need to write some code in the
08:58 - background script to receive the message
09:00 - and I have that somewhere I'm pretty
09:03 - sure actually this is the easy part
09:05 - because I can use chrome runtime dot on
09:10 - message add listener receiver so I'm
09:16 - going to write a function called
09:17 - receiver which is going to so I now want
09:20 - the background script to just listen for
09:21 - messages so I need to add a listener and
09:24 - that function receiver it takes a bunch
09:26 - of arguments like the request the sender
09:29 - and the send response because if you
09:32 - want to send something back but all I
09:34 - really need to do is look at what's in
09:36 - the request so I think I'm just gonna
09:39 - say console dot log request cuz I just
09:42 - want to see what's in there that's where
09:43 - the message should come in okay save
09:46 - everything save everything close a bunch
09:48 - of scripts save everything save
09:50 - everything go to extensions reload click
09:54 - here up content script has a syntax
09:58 - error line ten I always do this I really
10:02 - have a problem with a JavaScript object
10:04 - notation
10:04 - there's no semicolon here I should
10:06 - probably put a semicolon there okay I'm
10:09 - gonna hit refresh and oh wait I have to
10:12 - reload boy how much are you just
10:14 - watching me reload and refresh refresh
10:17 - okay so now I'm gonna click this I see
10:20 - the word majority now the question is if
10:24 - I inspect the background page there it
10:27 - is came in text majority yes so I have
10:30 - now the the message from the content
10:35 - script to the background script okay so
10:39 - now in the background script what I'm
10:41 - actually gonna do is just I'm gonna do
10:42 - something really kind of terrible I'm
10:44 - gonna say let word equal and I'm just
10:50 - give it an empty string I'm gonna say
10:52 - word equals request dot what did I call
10:56 - it text so I'm actually just gonna store
11:00 - the result in a global variable there
11:02 - may be some reason why I don't want to
11:04 - do this but here's why I'm doing this
11:05 - because and actually
11:07 - just put something I just want to put
11:09 - something in here here I'm just gonna
11:10 - put a coating train I'm gonna start word
11:13 - because there is a way that I can access
11:16 - variables from a background script from
11:20 - the pop-up without actually sending a
11:22 - message so in other words and in other
11:25 - words what I can do so of course what I
11:27 - could do is when I open the pop-up again
11:29 - it would make more sense for an open the
11:31 - pop-up to send a message to say the
11:33 - background script asking for the answer
11:35 - or more directly I could just send a
11:37 - message from the pop into content script
11:38 - so all this background syrup is kind of
11:40 - unnecessary but it is a useful trick
11:42 - just to see that I can do this in the
11:44 - content script what I can actually do
11:46 - I'm no sorry you know in the pop-up in
11:48 - the pop-up what I can actually do is I
11:50 - can say let word equal chrome dot
11:58 - extension dot get background page so if
12:03 - I say let me actually just say let back
12:06 - wrap BG page so I can actually access
12:11 - the background page and then the word is
12:15 - BG page dot word I think I could just go
12:19 - and access a variable that's within the
12:21 - background pages scope so something that
12:23 - I've emphasized is that the content
12:25 - script the background script the pop-up
12:26 - they all live with our own scope but I
12:28 - can access the background scripts scope
12:30 - and pull variables out so let me do that
12:33 - and I'm only going to do is say create
12:36 - p-word so let's see if I made a mistake
12:39 - here let's see if this is working and
12:42 - I'm going to close this I'm going to
12:45 - whoop s-- reload this I'm going to
12:50 - refresh this page and I'm just going to
12:52 - click the button whoa
12:54 - undefined so I did something wrong so
12:56 - first of all I forgot that I had some
12:57 - stray code in the index of HTML so I'm
13:01 - gonna say call this word Nick look up
13:06 - get rid of this so what did I get wrong
13:09 - here the problem is here because I'm
13:13 - using Lent which is a wonderful thing
13:15 - let is a wonderful thing but let is
13:18 - locally go
13:20 - in a much stronger way than the old var
13:23 - thing with this I don't want to get into
13:25 - that now I've got a whole video about
13:26 - lettin var but what I want to do if I
13:28 - really want to make this global Global
13:30 - global which is probably a bad idea I
13:32 - can say window dot word so if I say
13:37 - window dot word and I guess I need to do
13:39 - that here to window dot word I can put
13:43 - something in a more global scope
13:45 - attached to the window object of the
13:48 - background page there's actually this
13:49 - like secret background page the weird
13:51 - thing you don't see it but it's actually
13:52 - a page and so now what I should be able
13:55 - to do is once again reload the page
14:00 - refresh the page I might not need to
14:03 - actually read further I'm gonna select
14:04 - locomotives I'm gonna do this and then
14:07 - look at that locomotives is there so all
14:09 - I need to do is query word Nick now
14:12 - we're in good shape now I now have what
14:15 - do I have I have a Content script that
14:19 - listens to me
14:20 - selecting some text it sends a message
14:23 - to the background script the background
14:25 - script stores it in a global variable
14:28 - for itself and the pop-up asks the
14:30 - background script for its variable again
14:33 - not a really sort of awkward in elegant
14:36 - way of doing this but to show all these
14:37 - pieces I could have said var word by the
14:40 - way but the reason why I'm saying window
14:42 - dot word and actually I wonder once I do
14:44 - that I can probably just do this right I
14:46 - think we know that word cuz I want to
14:48 - avoid using var that's which is sort of
14:50 - silly okay a couple things one is I
14:54 - should trim the text because it can
14:57 - sometimes end up having like whitespace
14:59 - and stuff in it so I'm gonna call dot
15:01 - trim which will get rid of any extra
15:02 - like weird whitespace stuff and now what
15:05 - I need to do is look up the stuff on
15:06 - word Nick so this is a little bit out of
15:09 - the so let's go to the word Nick so I'm
15:12 - gonna go to the word Nick API and I'm
15:16 - gonna go to the documentation what I
15:19 - want is the definition of a word so if I
15:21 - look up a word I can ask for its
15:24 - definitions and let's say I'm looking up
15:27 - the word Apple and I just want one
15:30 - definition I don't care about part of
15:32 - speech include relate
15:34 - I don't need include related and I'll
15:37 - take all the sources whatever so I'm
15:40 - gonna try it out so this is the call
15:45 - this is the request URL that I need and
15:49 - then the definition is in an array oh
15:53 - boy
15:54 - Italy the definition is in an array and
15:58 - it comes under text okay so what I'm
16:04 - gonna do is I'm gonna grab this request
16:07 - URL and what I can do in the sketch here
16:11 - I can say let URL equal you know see
16:23 - other people talking in the hallway and
16:25 - actually all I need to do is what I need
16:27 - is I'm gonna split this into two because
16:34 - what I want what happened here oh I need
16:41 - what I need is to put the word in
16:47 - between so this is a kind of awkward way
16:49 - of doing this but I need to form this
16:50 - big URL all right I'm gonna attempt to
16:53 - use a new feature that's part of
16:55 - JavaScript es6
16:57 - which allows me to form a string by
17:02 - embedding the variable inside the string
17:04 - and instead of using single quotes so
17:06 - I'm gonna get rid of all of the single
17:07 - quotes and everything's gonna look like
17:13 - a disaster right now get rid of all
17:16 - these single quotes and then I'm gonna
17:18 - use backtick backtick backtick so this
17:24 - should be this is now correct it's a
17:26 - little bit weird leaf syntax highlighted
17:28 - because so just to emphasize that I'm
17:31 - how this is working this is kind of
17:33 - useful I could actually write it like
17:34 - this
17:36 - like I can really see all this stuff so
17:39 - this is really useful to be able to
17:42 - break a URL break a string over multiple
17:46 - lines and what
17:48 - want to come right after here is that's
17:50 - where I had the word Apple so I can now
17:52 - say I think it's dollar sign bracket
17:56 - curly brackets word so dollar sign curly
18:01 - brackets word this is now like fill in
18:02 - the value of this variable as part of
18:04 - this URL so I should be able to say load
18:08 - JSON that URL then I can have a callback
18:11 - like got data I can write that function
18:16 - got data one of these days I'll start
18:19 - using the arrow syntax and stuff for an
18:21 - anonymous functions for the callbacks
18:23 - but got data data and then now I just
18:26 - want to say create P data index 0 so if
18:32 - we remember what was here it's data it's
18:36 - an array index 0 dot text so I just want
18:40 - to get the first definition because I'm
18:41 - only getting one data index 0 dot text
18:44 - so this should be it right now my speak
18:48 - 5 sketch grabs the word from the
18:50 - background page forms this long URL to
18:54 - request stuff from word neck look uses
18:57 - the p5 load JSON to grab the data and
18:59 - show the result okay here we go here we
19:03 - go there's gotta be something wrong here
19:05 - but so first reload the page refresh
19:12 - this page I'm even gonna get find a word
19:17 - to highlight like number
19:25 - didn't work
19:27 - alright so let's look let's see where
19:28 - things went wrong I probably made a
19:30 - mistake in the URL one way for me to do
19:33 - that is just to put it here in Adam so
19:37 - let's see HTTP oh look at this I got
19:41 - some weird oh there's an extra semicolon
19:44 - in there that's bad
19:46 - there's also extra spaces how come my
19:48 - trim didn't get rid of the spaces so
19:52 - let's so one thing here is a couple
19:55 - things I need to fix for sure let's go
19:59 - back to my code I had this semicolon the
20:03 - error was just totally unnecessary it
20:04 - just totally messed everything up
20:05 - and let's just trim it here also hey I
20:10 - thought I trimmed it over there but I'm
20:12 - gonna trim it uh it adds new line at the
20:16 - end of the string hmm hmm does it add
20:20 - the new lines or the new lines in there
20:22 - I kind of feel like it's okay I'm gonna
20:26 - I don't think the new lines are gonna be
20:27 - a problem okay
20:29 - oh I might need to replace all right so
20:31 - I'm being told breaking news I'm being
20:37 - told let's just put this in here to be
20:39 - safe
20:40 - replace any new lines with nothing so
20:44 - I'm just putting this on multiple lines
20:46 - just so I can make it more readable but
20:49 - obviously it can be on one line but just
20:51 - in case those new lines are going into
20:53 - the URL and messing it up let's do that
20:55 - all right
20:56 - let's reload the page refresh Here I am
21:03 - going to select railways I'm gonna click
21:07 - here okay look up didn't work but let's
21:12 - see what happens now
21:13 - console the server is well there's like
21:18 - another semicolon look at this there's
21:20 - another semicolon right unauthorized
21:25 - because I stuck a silly extra semicolon
21:28 - so many
21:32 - ooh that didn't work Oh the spaces are
21:37 - because of the new they're not from the
21:39 - trim they're from the new line that's
21:44 - all these spaces are being added these
21:47 - are spaces I'm really losing
21:51 - so let's actually make this a regular
21:53 - expression this is so weird you know
21:55 - what I'm gonna do so I can fix this but
21:57 - I probably just put it all on one line
21:59 - could be so much better what if this is
22:01 - such a coding trainwreck but what I'm
22:04 - gonna do is I'll make a regular
22:04 - expression that takes any new line or
22:08 - any any white spaces new line of white
22:12 - space any white space any amount of
22:15 - white space and replaces it with nothing
22:19 - let's try this oh I need the global I
22:22 - need the global flag I need to go thank
22:28 - you breaking news I'm being told that
22:30 - I've forgotten that regular expressions
22:33 - when you use the replace function they
22:35 - only replace the first thing you find
22:37 - and let's use the global flag so I'm
22:40 - gonna go back to white space any white
22:44 - space replace it and and if this doesn't
22:46 - work I'm putting it all in one line okay
22:48 - you can't stop me I'm gonna put it all
22:49 - it wasn't and go back and I'm gonna go
22:53 - reload I'm gonna go to the steam
22:56 - locomotive page and I'm gonna select
23:01 - locomotive I press this button a
23:08 - [Music]
23:13 - self-propelled vehicle usually electric
23:15 - or diesel-powered for pulling or pushing
23:18 - Freight or passenger cars on railroad
23:20 - tracks so now I can go over here and I
23:24 - can open up the and I can see here for
23:26 - early and one thing I would like to do
23:28 - is I would just like to say dot style
23:32 - font size 64 now I wonder if all I'm
23:37 - doing is changing the pop up so I have
23:40 - to reload the whole I probably reload
23:42 - the whole extension right 64 point let's
23:45 - make it like 48
23:46 - point is it text size or font size I
23:48 - just wanted to be bigger I just I just
23:50 - wanted to be I assume yeah look at that
23:55 - so interestingly enough if I'm just
23:57 - changing the code in the pop up I don't
24:00 - need to
24:02 - I don't need actually need to reload the
24:04 - whole extension because it's kind of
24:05 - loading that on the fly which is weird
24:08 - how that works and also this is not
24:11 - really how do I make the size bigger I'm
24:15 - pretty sure that if I want that pop up
24:17 - to be bigger to give me more space it's
24:20 - actually going to dynamically size it
24:21 - based on what it is when the page first
24:23 - loads but because I'm getting the data
24:25 - from Wernick later it's not resizing so
24:29 - I could probably say body and then do
24:31 - something like with window resize by oh
24:38 - I could do window resize I so like I
24:41 - don't know you guys wouldn't know who
24:42 - know CSS would know this stuff better
24:44 - like can I do something like this and
24:48 - this has to be in a style tag according
24:53 - to my research according to my excellent
24:56 - research I don't need to reload the
24:58 - extension refresh the page yes oh look
25:02 - at that there we go so now I can click
25:04 - on locomotive and I get that I can click
25:08 - on America and I get United States I can
25:11 - click on obtain now again this is like
25:13 - the worst most awkward interaction
25:17 - somehow if you're still watching this
25:19 - video first of all thank you they really
25:22 - appreciate it this has been a big
25:24 - struggle for me even though I made an
25:26 - example like this two years ago this is
25:28 - quite hard to do on the fly live even
25:30 - though you're seeing kind of an edited
25:31 - version of this I did do this live but I
25:34 - would like you to think about what is a
25:36 - more elegant interaction how might you
25:39 - want to augment someone's browsing
25:41 - experience to learn about additional
25:43 - context so this could actually be a
25:46 - practical tool or you could just do
25:47 - something kind of goofy and when you
25:48 - select a word you know it shows you and
25:51 - maybe shows you an image associating so
25:53 - I look forward to I will share some
25:56 - Chrome extensions next time
25:57 - I come back on a live stream of people
26:00 - who have like made more elegant
26:02 - interactions so please write your send
26:05 - me a link to your Chrome extension in
26:06 - the comments or tweet me at Schiffman
26:07 - something like that but this is
26:10 - certainly the end of this video thank
26:15 - you and good night
26:22 - fade-out
26:23 - [Music]
26:29 - [Music]