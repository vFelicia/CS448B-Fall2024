00:05 - [Music]
00:17 - welcome I don't know it's Halloween now
00:19 - give me a give me a break I was trying
00:21 - something welcome I hope you can hear me
00:24 - I hope you can see me am i streaming am
00:26 - I live I'm back into the coding train
00:30 - it's Friday it's October something
00:33 - Halloween's coming up in a few days I
00:35 - don't have a costume but although I am
00:36 - dressed as Daniel Shipman on the coding
00:40 - trade Friday afternoon is not the
00:48 - greatest time for me it's been a long
00:51 - week I'm very exhausted but I'm pulling
00:55 - the energy together looking over at my
00:57 - monitor here there's the Train Here I am
01:00 - and here we go all right welcome welcome
01:11 - so what's happening today what are you
01:12 - watching this is me Daniel Shipman live
01:14 - on Friday afternoon as I often M I'm
01:17 - gonna do some coding stuff I'm gonna be
01:19 - here for a couple hours like wake up
01:23 - somehow I did this whole workshop today
01:25 - actually I'm kind of excited to talk to
01:27 - you about this let me open up the web
01:31 - browser here well I'm gonna talk about
01:34 - processing day so many things uh let's
01:38 - see I know I know there's some of you
01:39 - out there who watch this because I've
01:41 - met some of you in person at processing
01:43 - day in Boston last week and that was
01:45 - really wonderful so hello to everyone
01:46 - that I met in person in Boston I'm going
01:52 - to what
02:01 - I have an idea whatever oh yeah I gotta
02:05 - put the the green paper over here I will
02:08 - do that in a moment whenever I'm lost
02:09 - and feeling like I don't know what to do
02:11 - on the coding train I think maybe it's
02:14 - just time for them some random comfort
02:17 - this will get us warmed up
02:22 - spooky random numbers sixty-three
02:27 - thousand and fifty eight six thousand
02:30 - four hundred and ninety eight forty nine
02:33 - thousand three hundred thirty nine 314
02:37 - that's all I got for you okay who I do
02:44 - sort of have a costume this is my coding
02:46 - train conductor cap I could put that on
02:48 - I think somewhere over here I might even
02:52 - have a bandana if I walk over here
02:54 - in this pile I have like bandages and
03:00 - splints from having a broken arm but I
03:03 - can't seem to see where that that
03:04 - bandana is that's okay I do have some oh
03:09 - here we go some toy train this is Rosie
03:15 - and this is no this is not what Tomas
03:21 - trained all right Oh Adam asks when do
03:27 - you start programming probably let me
03:30 - see maybe like 45 minutes or so wait
03:32 - takes me a while to like drum up the
03:34 - courage oh I should really read at the
03:39 - same tempo of the music that would have
03:41 - been good alright let me um oh I have
03:44 - something I have something really spooky
03:45 - for you here for my spooky coding train
03:50 - episode I am the headless programmer
03:55 - whoa this isn't really working for the
04:01 - necklace the floating head
04:07 - let's see this is gonna go over here
04:11 - this is gonna go over here Jared in the
04:19 - chat is somebody that I met in person a
04:21 - processing day hello the tech block is
04:26 - here for their first stream ever are
04:28 - wonderful alright so I have a new system
04:33 - that I'm working on my new system is
04:37 - although it's a little silly for me to
04:38 - pull this up here if I go to YouTube
04:41 - Schiffman live this webpage will be here
04:46 - with that me on it I'm talking but what
04:50 - I want to look at is this so what I what
04:57 - I'm trying to do now is oh is always
04:59 - keep this is a description this page is
05:02 - always there it's just usually says
05:03 - offline but I'm when I think of
05:05 - something that I want to do a video on I
05:07 - put it in here even though I have this
05:09 - whole rainbow topics github repository
05:11 - that someday I'll figure out this magic
05:14 - way to organize and figure out what to
05:15 - do in each livestream as I look through
05:18 - that and think of things this is most of
05:20 - my running list of things that have come
05:21 - up in my courses here at NYU
05:23 - that I'm gonna do videos on I will also
05:24 - mmm those TBA so I didn't do a good job
05:28 - and that was last week Friday October
05:29 - 20th but the idea is that you can always
05:32 - check this page and I will keep it up to
05:34 - date with like when is the next
05:36 - livestream and what time and then if
05:38 - it's not up to date you can send me a
05:40 - tweet at Schiffman to say hey did you
05:42 - forget to update it and then I will go
05:43 - and update it so that's my new system oh
05:46 - I could ship dressed in green that would
05:50 - have been a good spooky I probably
05:53 - enough green paper that I could just
05:55 - tape it all to myself and some weird I
05:56 - don't know I'm not really that big on
06:00 - the Halloween thing although I was told
06:03 - by my children to dress as cyborg this
06:06 - year because I have all this metal and
06:08 - titanium in my arm so I'm already cyborg
06:12 - so maybe I have maybe a when is
06:13 - Halloween next week whenever it is okay
06:15 - so by the way this then we can
06:16 - see this is my running list of topics Oh
06:21 - somebody's really upset by this corner
06:23 - note this corner yeah that's a little
06:28 - better right
06:29 - there we go all right so functional
06:31 - pride no can you believe this can you
06:33 - believe it yeah six arrows
06:35 - [Applause]
06:38 - [Music]
06:41 - Hey
06:43 - [Music]
06:53 - that's why it's spooky because the arrow
06:56 - function is your programming so let me
07:02 - get this list here all right stop
07:08 - talking you let me grab all this so
07:11 - unfortunately I can't do the Alexus
07:13 - skill today because I don't have the
07:15 - Alexa with me that's too bad and I have
07:17 - to come back to that next week I'm not
07:18 - really prepared for this stuff I'm not
07:20 - prepared for anything I feel like every
07:24 - week it's important this is kind of like
07:26 - eating my although I really like
07:27 - vegetables so I'm gonna say this but I
07:29 - kind of have this thing where I want to
07:32 - replace all of the old object-oriented
07:35 - programming in JavaScript videos with
07:36 - es6 classes and so just each week if I
07:40 - can do like one or two more of those
07:41 - that eventually they'll all be done and
07:43 - I will have released myself from that
07:45 - this is something that came up I sweet
07:49 - at ITP in my intro programming class we
07:52 - were looking at how to use the webcam in
07:54 - the browser with p5.js and I have all
07:56 - these in turn a lot of videos a slitscan
07:58 - example a photobooth example a weird
08:00 - like brightness and check box mirror I
08:02 - didn't think I did one that like paint
08:04 - your portrait with flocking agents or
08:07 - particles so I want to do that some of
08:10 - you might have watched the recent golden
08:12 - 11 video about circle morphing so I
08:16 - thought I should do a circle morphing
08:18 - coating challenge to help kind of kick
08:20 - that off and then this is I want to do I
08:23 - I'm working on a word to Veck you know
08:27 - you might be asking like what is word to
08:28 - vac but there's this thing that exists
08:31 - in data science maybe I don't want to
08:35 - feel this falls under machine learning
08:36 - data science computational linguistics
08:39 - of taking words in a body of text and
08:43 - encoding them into some sort of like
08:45 - magical it's not really magical numeric
08:46 - form so that you can start to like add
08:48 - and subtract and do all sorts of
08:50 - interesting things with words and I've
08:51 - been reading a tutorial from Allison
08:53 - Parrish which is amazing that I want to
08:55 - refer to and that's a tutorial in Python
08:57 - I want to reduce some of the examples in
08:59 - JavaScript with this word to Veck
09:00 - library so this is my list I think this
09:03 - might be a time for
09:07 - I don't have a sound effect for it
09:14 - strawpoll that does work
09:16 - it's my new tick-tock sound effect oh I
09:18 - know night for a strawpoll so I think
09:22 - that might be how I sort of figure this
09:24 - out so I'm not going to include the more
09:27 - oo p in jf because i have to do that and
09:34 - i don't know if i'll start with that or
09:35 - come back to that later but the rest of
09:39 - this stuff let's let's I could also just
09:44 - spin the wheel but I like doing the
09:47 - straw poll thing sometimes I like to
09:49 - spin the wheel let's do this I'm gonna
09:50 - grab all this I'm gonna go to straw poll
09:53 - comm what should I start with
09:58 - can I just paste this in here no that
10:02 - would be much too easy
10:03 - so do these one at a time
10:06 - [Music]
10:15 - these go together
10:18 - by the way filters should probably be on
10:20 - this list right should I filter on this
10:22 - list whoops worked better alright so
10:36 - here we go this is now the straw poll
10:41 - [Music]
10:44 - that's the next was like so this is the
10:49 - straw poll somebody please who has
10:51 - privileges please post this in the chat
10:52 - I had this other oh yeah
10:56 - and I want to do I wouldn't do some work
10:59 - I need to tell me the contest where I
11:01 - can give them another t-shirt
11:02 - cuz I'm kind of like really into this
11:03 - game show thing recently and I've been
11:05 - trying to find all this game show music
11:07 - [Music]
11:10 - behind this door is es6 arrow function
11:24 - [Music]
11:30 - look at just the cut off rather abruptly
11:34 - all right so maybe so people are
11:36 - watching this for the first time if you
11:39 - want to support the work that I'm doing
11:40 - I really don't recommend that you do
11:42 - that but if you really insist you can go
11:45 - to patreon.com/scishow of the coding
11:53 - train you can join our slack channel and
11:54 - then if I ever get around to it I will
11:56 - sometimes send you a t-shirt or a book
11:58 - depending on the level of support that
11:59 - you provide let's see what else oh you
12:04 - can get your own coding train at
12:14 - Storenvy coding train comm probably the
12:17 - bit description this video um let's see
12:20 - what else can I tell you about me I will
12:23 - be here every Friday I'm excited about
12:26 - some new work that I'm doing in the area
12:28 - of
12:33 - machine learning which will be coming
12:36 - soon to a coding train near you and that
12:41 - okay so let's see well how's this going
12:42 - don't hide the shirt have I given you
12:45 - guys enough time let's see
12:49 - George is George writes could get you
12:52 - know I know this is a particularly late
12:53 - time so I have heard from a lot of
12:55 - people especially European and other
12:57 - international viewers that are either
13:00 - six hours ahead or twelve hours ahead
13:02 - it's made for you you like to watch it
13:05 - live and couldn't I do this at some sort
13:06 - of normal time of the day and I hear you
13:09 - and I will try to do it earlier on other
13:11 - weeks this is a particularly busy time
13:15 - of the year for me
13:16 - I am I teach three classes full time
13:19 - here at New York University and it's
13:22 - busy but it's gonna slow down and they
13:24 - don't be January and I will have all
13:26 - this time to try to through I might
13:27 - rethink my actual a live streaming
13:29 - scheduled for 2018 so stay tuned quorum
13:34 - in the Patriot group asks what about
13:38 - also Jay s call bind apply don't really
13:42 - like not have to use those anymore now
13:44 - that we're into es6 I thought maybe I
13:46 - just took so long to make videos about
13:48 - those it's kind of like how I kept
13:50 - saying I was gonna make a video about
13:51 - the Kinect skeleton Trek
13:53 - it took so long to get to it that
13:54 - Microsoft just ended up killing the
13:55 - Kinect and maybe I don't need to bother
13:56 - to do that video anymore
13:58 - I really think I should do it still I
14:00 - have one sitting over there I'm gonna
14:01 - next week next week let's do Kinect so
14:07 - hello Germany Oh merge in in the chat
14:11 - Merrigan I'm sorry I'm totally
14:12 - mispronouncing your name create it let
14:15 - me let me mention a few shout out things
14:16 - here creating an iOS app to do coding in
14:20 - p5 Simon also a loyal viewer Simon who
14:25 - stays up way past his bedtime to watch
14:27 - the coding train created a his his own
14:32 - p5 no I'm sorry his own speech library
14:35 - wanted me to mention it Simon so
14:39 - github.com slash Simon Tiger I think
14:41 - Simon - Tiger and so if you're
14:45 - interested in check
14:46 - did a lot of videos on the p5 speech
14:49 - library and here if you want to check
14:52 - out Simon's library called speech j/s go
14:55 - check it out and see what you think and
14:57 - maybe add some comments and give some
14:58 - feedback ah
14:59 - also I am going to I am going to today I
15:08 - definitely won't do that circle morphing
15:10 - thing so let me let me bring that up for
15:11 - a second first of all let's go to
15:12 - Twitter oh it's gonna do something with
15:15 - the paperclip game so many things I
15:17 - can't do quit it quits it's too much
15:22 - circle move so a hashtag woah I spelled
15:28 - it wrong circle morphing on Twitter we
15:32 - should see now we should see now look at
15:37 - this so this is one of the things that I
15:38 - want to look at today how do you morph
15:40 - this is a lovely like sort of visual
15:42 - explanation from one shape to another
15:44 - goal unleavened did in a whole guests
15:46 - video about this there's a whole
15:48 - repository with lots of examples of this
15:50 - but I wanted to do as a challenge one of
15:52 - them so let's look at some of these whoa
15:54 - that's kind of nuts oh this one's cool I
15:59 - looked at it earlier which is circle to
16:02 - spear
16:03 - look there's me and it's somebody else's
16:06 - video this is Dave's video and look at
16:09 - this sphere - can you hear by the way
16:12 - the audio coming from that you can't I
16:13 - have to switch it so you can hear the
16:14 - laptops audio and then I love this one
16:20 - but where well here it is here's a cool
16:23 - oh wow I haven't seen this one whoa wait
16:28 - a second what just happened there that
16:30 - was a circle and now it's a square wow
16:34 - that's wild this is what I was expecting
16:37 - whoa alright so all these wild ideas
16:40 - that I could have never thought of in my
16:41 - life of changing from square to circle a
16:44 - lot of them from Johann Carlson sees
16:47 - there's so many so let's encourage you
16:50 - to look at those on your own
16:52 - and I think I think I've I spent enough
16:54 - time stalling now that we can look at
16:59 - this
17:18 - [Applause]
17:22 - I wanted to do the painting webcam
17:24 - challenge okay good that looks pretty
17:27 - good wow there's a lot of pretty wide
17:29 - riders up it's you know this thrills me
17:33 - to no end because while I'm excited to
17:35 - learn these new syntax features of a
17:37 - programming language and there's lots of
17:39 - value there and usefulness yeah is it
17:42 - really what I'm here for
17:44 - am I really here for the arrow function
17:52 - [Music]
17:54 - I don't have them I don't have any
17:58 - production it's just me it's like bad
18:01 - with something like app where you press
18:03 - buttons and play sounds it's terrible
18:07 - alright so let me just confirm cuz I
18:09 - have a bad habit of making a video
18:12 - tutorial if something I already made if
18:14 - it's real about so let me just confirm
18:17 - that I haven't actually made this video
18:18 - tutorial so where am I in the world I'm
18:23 - gonna go here
18:24 - Schiffman and I'm gonna go to here what
18:29 - I'm looking for is 11 video and pixels
18:35 - [Music]
18:36 - I'm okay so these are the ones that I've
18:40 - done brightness Mir already I thought I
18:48 - had it I thought oh I did it but it
18:51 - wasn't I let it look the other day it
18:52 - wasn't there let's watch this video
18:54 - maybe it's good oh Jesus we gotta watch
18:58 - an ad first what is this YouTube thing
19:00 - so I'm gonna take a break
19:09 - oh alright alright so I already made
19:23 - this go you can stop watch this live it
19:26 - go out this video alright so this is
19:31 - really to work this is terrible
19:34 - no no I don't know what would I think I
19:35 - have to do this again this is not a
19:37 - legitimate this is bad use of polling if
19:40 - anybody I don't know if anybody knows
19:41 - what I'm referring to there but that
19:43 - this is a bad use of polling we now have
19:45 - 23 people who didn't get a chance to
19:48 - vote over here so we're going to do this
19:52 - again without it what should I start
20:01 - with oh wait hold on
20:05 - so one thing we would the simplify
20:07 - things is I'm gonna say circle morphing
20:11 - I'm gonna say word to Veck I'm gonna by
20:16 - the way I'm just gonna here's the thing
20:19 - I have to do the circle morphing and I
20:22 - have to do the object stuff what's the
20:24 - point of this alright we're gonna do
20:26 - both of these things today it's it could
20:28 - not possibly have been a half an hour so
20:36 - sometimes certain things that I've made
20:39 - don't get noticed if they're not one of
20:40 - the coding challenges they're sort of
20:41 - buried in the tutorial playlist if I
20:43 - called it like coded challenge paint
20:45 - your portrait
20:46 - you know everybody would have known that
20:47 - know that it's there do it better says
20:52 - alka all right let's see here
21:00 - it's time first of all all right we're
21:03 - gonna do something totally crazy instead
21:05 - nothing that I said is what we're gonna
21:07 - do this is a terrible idea but I'm gonna
21:12 - go here this is the workshop that we did
21:19 - today
21:19 - and ITP up wrong
21:22 - wrong okay oh wait yep you have to be
21:31 - able to hear the sounds here so we got
21:44 - some instructions here make a project
21:45 - about shadows that prophesize prophesies
21:49 - with the word Nick API yeah that's Ben
21:51 - again make a project about the history
22:05 - of the bicycle that sings with pearly
22:09 - noise you can't even hear the music
22:16 - Brock you nuts
22:18 - I mean I'll come back to this hmm all
22:21 - right we're gonna do I have to do all
22:26 - these things today so the order is
22:28 - really just the only thing that I'm
22:30 - trying to figure out
22:34 - [Music]
22:43 - okay things that I must do today circle
22:47 - morphing object one more Opie in J s
22:58 - video that's really words avec I feel
23:07 - like these are the things that I have to
23:08 - do wait yes six air so here we go and
23:23 - processing dot PI that's an interesting
23:25 - idea well that's the other thing I've
23:27 - got here yes six may or should leave
23:30 - that out right now I already put that in
23:32 - there alright let's let's uh let's see
23:37 - what happens here let's okay here we go
23:45 - all right everybody this is for real
23:50 - whatever the wheel tells me is what I
23:53 - must do
24:00 - [Music]
24:14 - oh my god seriously oh no keep going
24:18 - keep going
24:20 - [Music]
24:37 - [Music]
25:35 - is it 4:30 yet it's at 4:30 all right
25:41 - enough enough with all this meshuggenah
25:44 - nonsense it's time let's do something
25:48 - for reals I don't know if I really want
25:51 - to start with this but the wheel has
25:54 - spoken and so I'm going to do a video
25:58 - about and I have a kind of a strange
26:03 - demonstration that I think might be
26:06 - somewhat useful so first what I need to
26:10 - do is open up terminal and let's see
26:22 - here
26:23 - it is a happy face where do I go desktop
26:28 - p5 G - B I'm standing totally in front
26:36 - of what I'm typing oh I know what I
26:41 - needed to do a workflow video today - I
26:46 - just need to I just need more time
26:50 - p5 G there is a lot - arrow functions I
26:54 - know arrow functions ok but I'm not sure
27:04 - why I'm doing this but I am it's
27:12 - happening somehow for some reason and
27:16 - now I open up my text editor
27:33 - and think we're good
27:48 - okay oh all right
27:58 - yep Thank You Simon this is 16.3 arrow
28:02 - functions topics of JavaScript in es6 so
28:12 - I think this merits me starting over
28:14 - here and I don't know what's going on
28:16 - with this camera
28:17 - am I like unreasonably large let me see
28:20 - if I can zoom out a little bit more it's
28:22 - probably if i zoom out too much oops
28:24 - that's looming in also should check the
28:27 - focus here can you read that let me have
28:34 - a look
28:39 - that's the wrong button the button that
28:54 - I usually use to zoom in to check the
28:56 - focus doesn't seem to be working but I'm
28:58 - just gonna assume that it's fine I'm not
29:02 - gonna trip over my okay focus is good
29:10 - all right
29:30 - hello welcome to a special spooky coding
29:35 - train video about es6 the arrow function
29:41 - spooky arrow function hold on a sec
29:45 - [Music]
29:46 - recording this close to Halloween and
29:48 - when you're watching this in the future
29:50 - you won't care and that'll be ridiculous
29:51 - but that's what the video is starting
29:52 - with anyway what is this thing I have to
29:54 - say for a very long time I have seen
29:57 - this in code and I just kind of shrivel
29:59 - up and feel very worried because it's um
30:02 - we kind of don't understand and I think
30:04 - that I'm supposed to understand it and
30:05 - it's supposed to make things better but
30:07 - I just don't understand so I've taken
30:09 - some time to attempt to understand it
30:10 - I've used it and I'm intending to use it
30:13 - in some future videos that I'm going to
30:15 - make possibly even today so I feel it's
30:17 - time for me to attempt to talk about
30:20 - what this is to you the viewer the
30:22 - watching this video so there was a time
30:26 - in the past not too long ago when I made
30:29 - a video about yes 5 vs 6 kind of talked
30:35 - about what those things were I messed up
30:37 - a lot of it if you read the comments you
30:38 - could see what I messed up but there was
30:40 - an aspect of it where I discussed this
30:43 - idea of var being the way to declare a
30:47 - variable in the previous version of java
30:51 - script called es 5 and now there is
30:54 - another way to declare a variable let
30:58 - which is part of es6 and then there is
31:01 - even another way to declare a variable
31:03 - known as Const which is also part of es6
31:08 - and keys work in a slightly different
31:11 - way and they clean up some problems and
31:13 - they protect you against yourself in
31:14 - your own inevitable ability to make all
31:18 - sorts of strange errors and so that's a
31:20 - separate discussion now there is another
31:23 - change that can be looked at somewhat in
31:26 - the same way
31:27 - which is that there I used to be able to
31:29 - say and I still can and I still will and
31:32 - I'll probably always will function don't
31:36 - go away from me I can declare a function
31:39 - like this with some amount of arguments
31:43 - there is a new way to do this exact same
31:47 - thing oh my goodness look I forgot to
31:48 - put a name I forgot to name this
31:51 - function and the reason why I forgot is
31:52 - because the thing that I'm talking about
31:55 - here with arrow functions that's what's
31:57 - gonna go over here this is yes five it's
32:00 - typically used I think actually it's the
32:03 - only way you could use it someone's
32:04 - gonna tell me that I'll correct myself
32:06 - later for anonymous functions anonymous
32:10 - functions unnamed functions inline
32:12 - functions will you'll see if that's not
32:15 - familiar to you I will explain that as
32:17 - well in the context of this video but
32:19 - what you can see here is I'm saying
32:21 - function with these arguments execute
32:23 - this code this function doesn't have a
32:24 - name it's not called unicorn fluffy x or
32:29 - whatever it's just called function so
32:33 - now instead I can say hey look at this
32:35 - these parentheses here I can say hey
32:39 - let's instead of saying functions
32:42 - function let's say arrow which is an
32:47 - equals and a greater than arrow curly
32:51 - bracket close curly bracket so this is
32:54 - somewhat yes five yes six now why why
33:03 - why would you want to do this I mean I'm
33:06 - just gonna I'm gonna stand to my back to
33:07 - you for a second and look at that you
33:10 - could see I could see if I have a
33:11 - slightly like growing bald spot over
33:13 - here now I'm looking at this tripping
33:18 - over things why would you do this well
33:21 - one thing is it's a little bit less
33:24 - typing function equal less than two
33:29 - characters it's eight characters that
33:31 - sits or save some typing ultimately
33:35 - that's what are the main reasons for the
33:38 - this arrow function which is
33:39 - so known as like lambda I think is a way
33:41 - of referring to it I should look up is
33:44 - to reduce the amount of code you have to
33:46 - type but there are also some things that
33:50 - this fixes that are weird about how this
33:52 - function can work related to scope and
33:55 - all this stuff I gotta take a break all
34:00 - right right right right right right you
34:05 - don't need to print yes yes you can call
34:07 - arrow functions lambda there unnamed
34:09 - functions that means I'm anonymous that
34:10 - the same thing okay no you can have one
34:14 - line I'm just checking I'm just checking
34:15 - the chat and everybody is like
34:21 - correcting me or actually no one's
34:22 - really corrected me there okay and so
34:34 - one of the reasons to write functions
34:37 - like this too for this arrow syntax is
34:40 - simply beach conciseness less typing
34:43 - don't need function we just say equals
34:47 - greater than the interesting thing is
34:51 - this one of the reasons for doing this
34:53 - is this idea of conciseness this can
34:55 - become even more concise in fact these
34:57 - parentheses were going to see as I show
35:00 - you some examples are optional and in
35:03 - fact not in some cases this bracket is
35:07 - also optional oh and uh totally writing
35:11 - somewhere you can't see but what I just
35:12 - wrote was optional and in fact let's say
35:15 - my function was gonna return something
35:18 - this return statement can in fact be
35:21 - optional or implicit it can be just sort
35:24 - of assumed that it's there that you're
35:26 - going to return something and eventually
35:27 - you can see that we might write things
35:30 - like this this is a function that takes
35:36 - any given value X and returns its value
35:39 - x 2 whereas previously I would have had
35:42 - to say function parentheses X and
35:45 - prejudices open curly bracket return X
35:47 - types to close curly bracket so on the
35:51 - one hand
35:52 - xiety of these lambdas these arrow
35:54 - functions we can start to do things that
35:57 - are very concise for these anonymous
35:59 - unnamed functions that's the same thing
36:01 - in certain scenarios I got to come up
36:03 - with some scenarios where it'll be
36:04 - useful but there's also something else
36:05 - and in fact it's something really
36:08 - interesting and confusing and weird
36:09 - which is that you know there's this
36:12 - keyword in JavaScript called this and
36:15 - it's a fundamental to a lot of how
36:18 - things work with object-oriented
36:20 - programming and classes it's context
36:23 - when you have a callback and you use
36:25 - this so there are some issues with the
36:29 - way that this function definition loses
36:34 - track of what this should be pointing to
36:37 - in certain cases where you would want it
36:39 - to be pointing to something and the
36:41 - arrow syntax fixes that so in the same
36:44 - way that let fix some problems with
36:47 - scope and how variables are defined the
36:50 - arrow syntax fixes some problems with
36:53 - how this operates in JavaScript and
36:55 - about what it points to so this is the
36:57 - map of some new features in es6 function
37:03 - becoming arrow leading towards
37:05 - interesting concise statements for
37:07 - various operations like perhaps some
37:09 - array operations that might show you
37:10 - with things like map or reduce or filter
37:12 - as well as this thing about fixing this
37:17 - this thing okay
37:19 - did you really just watch whatever
37:20 - hellovenus was about some spooky diagram
37:25 - of an arrow function you did so let's
37:27 - try to write some code and maybe it'll
37:29 - make more sense all right how am i doing
37:32 - it's off screen what's off screen play
37:37 - the Vista song need something that we
37:39 - can ping what did I what did I what I do
37:42 - - hi oh this thing I wrote was like way
37:44 - too high I always do that it's like I
37:49 - can't not do it I gotta just
38:00 - good all right where was I
38:06 - I could watch myself back I could just
38:12 - redo that part zoom out you do the whole
38:20 - thing over all right we'll see if not
38:41 - you can save me for myself once again so
38:50 - for example we can eventually right I'm
38:55 - gonna give myself some more room here
38:56 - and not draw too high up there like I
38:59 - usually do but I might have just done
39:02 - and had to reach state what I'm saying
39:04 - we can eventually write things that look
39:07 - like this X arrow x times 2 what does
39:12 - this mean this means actually create a
39:15 - function that takes an argument X and
39:22 - returns x times 2 so one of the reasons
39:28 - for doing this this is Miss conciseness
39:34 - now ok so I just read that part did I
39:39 - talk about the this thing after that I
39:41 - think I might have let me do that part
39:45 - again yeah exactly they're spooky I'm
39:52 - not kidding about them being spooky it's
39:54 - like I don't I don't love the well ok so
40:00 - I don't remember what order I talked
40:02 - about anything and
40:07 - so one reason is a new syntax concise
40:13 - this common operations and actually one
40:15 - of the things I will show you is this
40:17 - this kind of writing can be really
40:18 - useful when I eventually make a video
40:20 - about some other array functions that
40:22 - I'm going to use for some other
40:23 - tutorials that I'm doing and if we look
40:26 - at the functions like map and reduce and
40:29 - filter these are array functions that
40:33 - you can perform operations like if I
40:35 - wanted to just double the element of
40:37 - every if I wanted to double the value of
40:39 - every element in an array I could say
40:40 - map and give it this and it's gonna just
40:42 - happen in a nice and concise way now
40:45 - there is another aspect of this that's
40:49 - key and someone crucial which is that
40:52 - there is a word a key word in JavaScript
40:55 - called this and we've seen familiar with
41:00 - it this is the word that I always forget
41:02 - especially when I'm doing
41:03 - object-oriented programming I need to
41:04 - save this dot X and this dot why I'm
41:06 - always forgetting but this dot this can
41:09 - refer to different things in fact if I'm
41:11 - just in a JavaScript sketch and the bet
41:13 - I've written a piece of code that's
41:14 - running in the browser if I just say
41:16 - this it refers to the window object sort
41:18 - of global object this always refers to
41:20 - something it's the current context of
41:21 - where you are I may in this object I
41:23 - mean in the global scope and with this
41:26 - particular function syntax you might
41:31 - want to use it in a particular context
41:34 - where you want to keep a certain value
41:36 - of this and not lose track of it and in
41:38 - fact this old this old way of defining a
41:42 - function can forget about what this
41:44 - should be referring to and this way of
41:46 - doing it is a way where where JavaScript
41:50 - will not forget and so in previous
41:51 - versions of JavaScript you might have
41:53 - seen things like bind and apply you can
41:56 - use other functions to kind of bind and
41:59 - keep track of the this and with the
42:02 - arrow function that this will keep track
42:04 - of itself in a more elegant and
42:05 - hopefully way that you would have
42:07 - intended so I really like out of context
42:10 - that probably makes absolutely no sense
42:12 - but I'm going to make a scenario in this
42:15 - video where I want this to equals
42:17 - thing and writing it this way it fails
42:20 - and writing it this way it works I will
42:22 - say I erased my bar becomes let bar
42:27 - becomes LED is pretty friendly uh
42:28 - they're both three letter words bar
42:31 - needs variable let just kind of like let
42:33 - this equal something this transition
42:36 - function means I'm defining a function
42:39 - era I guess we could make this sort of
42:42 - case that like these values these
42:44 - arguments become transformed or gets
42:47 - sent into here and do something X
42:49 - becomes x times two so there is some
42:52 - kind of meaning there but one one reason
42:54 - why I tend to avoid using arrow
42:56 - functions all the time is that it can
42:59 - make y can make your code fewer
43:01 - characters which sometimes is valuable
43:03 - for making it readable it can be really
43:05 - hard for beginners and we're just
43:07 - starting out to be able to read and
43:08 - understand what the code is doing so
43:09 - this video is to explore you but you
43:11 - can't escape it I might like to run away
43:13 - and never look at an arrow function but
43:16 - I can't escape it so this video is an
43:18 - attempt to unpack this even more alright
43:21 - let's let's actually look at some code
43:25 - alright let's see that was probably a
43:31 - ridiculous amount of time spent but
43:35 - let's all right if you're still watching
43:45 - this video you're a very nice person
43:47 - really appreciate it I have a p5 sketch
43:51 - it's doing nothing it's just a blank
43:52 - canvas I want to add something to it I
43:54 - am going to say let button equal create
43:58 - button press and then I'm going to say
44:04 - button dot mousepressed now whoops in an
44:11 - older life the goal in another time when
44:17 - I had less gray hair and was even a
44:20 - little bit more organized making these
44:22 - video tutorials to be perfectly honest I
44:23 - would have done something like this
44:25 - change background and then I would have
44:27 - written a function down here
44:29 - function change background and I would
44:31 - have said this function is a callback to
44:36 - the mousepressed event on the button so
44:39 - button dot mousepressed that change
44:42 - background function run whatever code is
44:44 - in here whenever you press the mouse on
44:45 - the button and let's actually do that
44:47 - I'm going to say background you know
44:49 - random 255 so now if I go back to the
44:51 - browser and look at this code every time
44:53 - I press the button I get a new random
44:55 - greyscale background this is my way of
45:00 - writing this code when I want to work in
45:03 - a sort of the most easy-to-understand
45:05 - way in a beginner context very freely I
45:08 - have a function here I can see what its
45:10 - name is and see where it goes so one
45:12 - thing I could do in JavaScript which is
45:14 - isn't there's no reason why I have to
45:16 - name the function and then put it down
45:18 - here I could just take this whole
45:20 - function take this whole function and
45:21 - put it in between the parentheses and
45:24 - mousepressed so I'm gonna do that you
45:25 - just put it right there and I'm gonna
45:27 - just hit save it's gonna like Auto
45:28 - format it and now that it's in there it
45:31 - doesn't need a name it sort of exists
45:33 - just just for the event right here I'm
45:37 - gonna put a function in there past the
45:38 - function in as the argument itself you
45:40 - know which do I like better one or the
45:42 - other who really knows I don't know but
45:44 - this is an anonymous function it has no
45:47 - name you could call it an inline
45:49 - function although it happens over
45:50 - multiple lines so that's step number one
45:53 - now if I hit refresh same exact thing is
45:57 - happening I could now be even more
46:00 - concise and I could get rid of the word
46:03 - function and I can say equal arrow and
46:09 - there we go
46:10 - hooray I've used an arrow function hit
46:13 - refresh and it's the same thing and I
46:16 - can I don't even I don't know do I need
46:18 - these could I even get away with
46:20 - something weird like this maybe oh that
46:25 - looks so strange is that could that
46:26 - possibly be right somehow I just find
46:29 - this hard to believe that that could
46:31 - possibly be right Oh what did I do wrong
46:36 - here maybe this see this yes maybe here
46:41 - yeah let's try this
46:44 - this is what I don't like these arrow
46:46 - functions I could never figure it out
46:47 - but maybe you can't even do it this way
46:49 - because it's not put hold on
46:58 - look at this deformity in the chat
47:00 - telling me how to do this correctly I
47:09 - didn't like it in the first but I mean I
47:11 - well I guess I could put the brackets in
47:14 - like this oh that's wrong because
47:18 - there's another oh this needs a
47:23 - semicolon no yeah that's what I had one
47:35 - close parenthesis oh yeah oh oh missing
47:39 - a closed parenthesis here oh the random
47:41 - so wait a sec okay by the way this is
47:44 - definitely not all making it into the
47:46 - edited version people really like what I
47:48 - don't edit out my mistakes but some of
47:49 - the stakes have to be edited out
47:52 - I'm just monkeying around here so if I
47:54 - get rid of this and get rid of this in
48:00 - this case those brackets are not
48:01 - optional too much going on in there with
48:03 - the funk called a background alright so
48:10 - we'll just go back to here and it had
48:14 - whole digress it out of trying to get
48:18 - rid of the brackets there okay so here
48:21 - is step number one
48:24 - all right get rid of this summer is
48:27 - there really a way it's a really away
48:29 - alone all right let's give us a little
48:30 - bit more let's get a little more try
48:34 - what you're saying is okay so I
48:35 - definitely don't need this this is a
48:38 - full statement then I don't need this
48:40 - and I don't need this this should work
48:44 - right I did it
48:51 - all right so baby might cheer would you
48:57 - edit it leave like a little bit of me
48:59 - messing up and then cut to right now I
49:01 - guess okay I think I figured it out
49:04 - let's try this one more time
49:06 - what's optional oh yeah I could get rid
49:09 - of the curly brackets those are optional
49:11 - if I get rid of those curly brackets I
49:14 - also don't need this semicolon because
49:17 - it's one line and then I should be able
49:19 - to do this and now in theory this is
49:23 - also correct
49:25 - very spooky though and this works too
49:30 - here's it have I helped anybody have I
49:32 - made the world a better place yes I can
49:34 - just wreck that in one line but I can
49:36 - and I sort of guess I understand what's
49:38 - going on but in the end I'm very happy
49:41 - with it
49:46 - there we go I'm very happy with it like
49:49 - this this is perfectly fine I feel like
49:51 - I could breathe I can relax I can name
49:55 - everything in my code and I can know
49:56 - what it's doing but there are some cases
49:58 - where the arrow function really does
50:00 - help and I will get to those eventually
50:02 - in these incredibly long-winded video
50:04 - tutorials that I'm making let's look at
50:05 - one such case so let's say that I'm
50:09 - going to create a class and I'm gonna
50:11 - call this class counter so this is a
50:14 - somewhat of a trivial example that
50:16 - doesn't have a lot of practical value
50:18 - although I would I think that I could
50:20 - expand it to start using like Dom
50:23 - element animations or API calls so let's
50:25 - begin with something though that's very
50:27 - very simple the idea of this class
50:29 - whenever I make a class I need a
50:31 - constructor I'm going to make a variable
50:42 - I'm going to make one I'm really
50:44 - standing in front of my code I'm going
50:47 - to make a property called count and I'm
50:50 - going to set it equal to zero then I'm
50:52 - going to write a function called count
50:54 - it and I'm gonna say this count plus
50:58 - plus and I will just say oh yeah and
51:04 - let's do this let's also say this dot P
51:07 - equals create P so to make a paragraph
51:10 - element and then I'm gonna say this dot
51:14 - P dot html' this dot count what is going
51:20 - on my goodness so the idea here is that
51:24 - and I'm gonna get rid of all this stuff
51:27 - that I had from earlier in the video I'm
51:29 - gonna say no canvas and I'm gonna say
51:32 - let's counter 1 equal new counter and
51:36 - then I'm gonna say I guess I'm gonna I'm
51:42 - gonna do I'm gonna do I guess I'll use
51:44 - the draw you'll see I plan but for now
51:48 - I'm just gonna say function draw which
51:51 - is a little bit weird counter 1 dot
51:53 - count it okay ready so here we go what's
51:57 - gonna happen when I run this sketch it's
52:01 - gonna break because this needs to be a
52:03 - global variable and by the way this
52:05 - might be a time
52:10 - [Music]
52:13 - where I used Const I'm never going to
52:17 - read Eclair this object I don't know I'm
52:19 - just trying to use trying to get
52:21 - comfortable using Const when do I use
52:22 - Const if it's something that I want to
52:25 - not allow myself to reinitialize read
52:27 - Eclair in a different way and protecting
52:29 - myself from mistakes oh oh you've got to
52:35 - do it up there oh boy
52:37 - Wow it can't you can't of course I can't
52:39 - do that I can't make the constant
52:41 - nothing and then read it all right I'm
52:43 - just gonna be just let how's the big
52:46 - failure I have a new music oh yeah that
53:02 - was a big failure for using constant
53:07 - how's my new sound effect okay nevermind
53:09 - okay so let me just use let take it easy
53:13 - on me please I'm just gonna use that now
53:14 - let's run this and there it is look at
53:17 - that I've got my counter going like this
53:20 - here's the thing I didn't really want to
53:23 - use that draw loop I want each counter
53:25 - to count itself so what I want to do is
53:27 - when I make a counter I want to give it
53:29 - some things like I want to give it a
53:31 - starting value and I want to give it a
53:34 - wait a time so I'm gonna say what I want
53:38 - is this counter to start at 100 and I
53:41 - want it to count every 500 milliseconds
53:44 - so this dot count should start a start
53:47 - and I'm gonna have a new variable called
53:49 - this dot weight which will equal 500 now
53:53 - what am I gonna do I am going to use and
53:57 - I actually probably need to keep this
53:59 - dot wait we'll see in a second I could
54:00 - use this I'll call this wait you'll see
54:03 - in a second I'm going to use this
54:04 - function called set interval and what
54:08 - set interval does is it says here's a
54:12 - callback count it write that function
54:15 - down here and then do that every so
54:20 - often all right
54:24 - I ready so this is the idea I'm gonna
54:27 - create a counter and that is going to
54:30 - and then I'm going to say like every 500
54:32 - milliseconds count up from 100 and
54:34 - update that paragraph element let's see
54:36 - what happens ah counted is not defined
54:39 - oh yeah counted is not defined it's
54:41 - looked down in the scope here oh okay
54:43 - well I know I know I know I'm gonna make
54:45 - this called a function count it so it's
54:47 - not really like a function that's part
54:49 - of the class anymore it's just like a
54:51 - function right so I'm gonna I'm gonna
54:52 - name it function and I'll I'll put it
54:55 - even here like this is how I did it with
54:57 - that Mouse pressed right count that
54:58 - function increase the count here we go
55:00 - here we go here we go no cannot read
55:03 - what oh it cannot do anything why why
55:07 - why so hold on a second let's just see
55:11 - something when I first run a sketch if I
55:13 - were to just do something like and say
55:15 - console dot log of this what I get is
55:20 - this thing called the window object this
55:22 - refers to the global context the window
55:25 - object now if I'm in here if I'm in the
55:30 - constructor for example and I say
55:31 - console dot log this
55:33 - oh I'm referring to the counter object
55:38 - because this JavaScript knows to repoint
55:41 - the keyword this to the current context
55:44 - which is the current counter object but
55:47 - why why why what is happening in here
55:50 - console dot log this this is inside the
55:54 - class it's a function inside the object
55:56 - can't I know that I'm talking about that
55:58 - object and so now I'm gonna refresh and
56:01 - see it's what is it console logging the
56:04 - window object again spookie window up
56:09 - now sounds good so so what do I do about
56:13 - this guess what this is where the arrow
56:16 - function comes in if I instead if I use
56:20 - an anonymous function right in here so I
56:21 - can take this whole thing and I can put
56:24 - it in here I can get rid of the name
56:26 - right so this is just me we creating
56:29 - this with an anonymous function I'm
56:33 - gonna hit refresh it's still referring
56:36 - to the window object because I've named
56:37 - this
56:38 - function but if I change this to the
56:41 - arrow syntax let's see what happens now
56:47 - there we go
56:49 - and now I have my counter that's working
56:51 - and here's the thing what's magical not
56:53 - really magical about this is that what
56:56 - I've done is because I made this
56:59 - object-oriented and actually to be
57:01 - honest this doesn't need to be this
57:02 - because again let's make them constant
57:05 - there so constant its I can't even bring
57:09 - into I can make a bunch of these
57:12 - starting at different values going in
57:15 - different with different speeds and
57:18 - we'll see here that there we go I've got
57:22 - a bunch of different counters each
57:24 - counting at their own rate each starting
57:26 - at a different value and this callback
57:29 - function remembers and you know I want
57:32 - to take this out just to see this
57:33 - callback function remembers to correct
57:35 - context and I can have callbacks now
57:37 - inside of my class
57:43 - timeout and actually uh yeah so um so a
57:55 - great point has been made in the chat
57:57 - actually when I was designing this
57:59 - scenario in my head to do this video
58:02 - this is actually not the way I wrote it
58:04 - in my head I meant to not get rid of the
58:06 - count it function so let me just put
58:09 - that back for a second so I'm gonna
58:12 - rewrite this a little bit which I think
58:13 - I'll be a little bit more clear and I'm
58:16 - gonna keep this in the counted function
58:19 - I actually am going to make a variable
58:23 - called this dot weight and have it equal
58:25 - to weight and then what I'm going to do
58:27 - is I'm going to write a new function and
58:28 - I'm gonna call it a start and there I'm
58:36 - gonna say this dot count so this is kind
58:39 - of what I meant count it this is I just
58:41 - rewrote this but in an anything is
58:43 - slightly more clear way because now I
58:45 - have I'm creating a counter object it
58:47 - has a starting counter as an amount of
58:49 - time to wait and a Dom element
58:50 - associated with it it has a function
58:52 - which will always increase the count and
58:54 - put the count in the Dom element and
58:56 - then as the start function is what and
58:59 - this should say by the way I'm
59:00 - forgetting the this dot this dot weight
59:03 - but here this would break once again
59:06 - that's just put this back to function
59:09 - right this totally makes sense set
59:11 - interval this function count it with
59:14 - this amount of weight and I'm gonna say
59:16 - counter one dot start and counter to
59:23 - start by the way I could make an array
59:25 - of these all with random starts counter
59:29 - three dot start now let me run this
59:32 - uncaught count it is not a function
59:34 - because it's forgotten function for is
59:38 - because it gets kind of globalized it
59:40 - forgot about the current actual context
59:42 - of this and it's just referring to
59:43 - window replace it with the arrow syntax
59:45 - and now but uh there we have our counter
59:49 - objects all counting separately so I
59:52 - hope this helped somewhat make some
59:54 - sense of the arrow function there's so
59:56 - much more to the arrow function and I
59:58 - will talk about that in a next series of
60:02 - videos I'm gonna look at some scenarios
60:03 - where using the arrow function in
60:05 - connection with array functions like Map
60:08 - Reduce and filter could be helpful to
60:11 - you
60:18 - yeah and so just to double back for a
60:24 - second on being completely totally what
60:27 - though that sort of like one-line way of
60:29 - writing this I could actually get rid of
60:31 - these brackets and this semicolon right
60:35 - because I can just now do this so in
60:41 - theory if you like to write code like
60:43 - this this should also work let's refresh
60:46 - yes so this is now way to write this in
60:48 - one line I completely confused myself
60:50 - looking at this I kind of have no idea
60:52 - what's - let me see if I can understand
60:53 - it I want to set an interval and what I
60:56 - want is for this dot count it to happen
60:58 - every this dot weight amount of time
61:00 - okay it kind of makes sense you know
61:02 - it's a little it's a little bit cryptic
61:03 - and weird cuz there's no arguments
61:04 - inside these parentheses but we'll see
61:06 - what happens we put argument aside those
61:08 - parentheses in another video thanks for
61:09 - watching I hope this context somewhat
61:11 - helps and I'll probably come back
61:15 - because I think this is the first time
61:17 - I've ever taught about arrow functions
61:19 - and I only really learned about them a
61:20 - couple weeks ago so just you know be
61:21 - kind okay and not to but to everybody
61:24 - please in the world
61:25 - be kind alright talk to you soon goodbye
61:30 - alright how did I do everybody I don't
61:37 - think I can remove this someone's saying
61:41 - I can remove this but that won't work
61:42 - yeah that won't work because it's not
61:47 - it's what you're kind of want to do is
61:50 - this and that won't work because we've
61:53 - lost track once again so the only way to
61:56 - do it is here all right really
62:05 - all of this and I could have just done
62:07 - this no thank goodness this also lost
62:12 - track of this does not work as well yeah
62:16 - I could have done this right there we go
62:21 - I don't know it's that better I don't
62:28 - know no right aren't I supposed to use
62:31 - the arrow function now not bond anymore
62:33 - somebody tell me somebody help help me
62:35 - out with this I'm gonna get that I'm
62:37 - gonna get this in the comments aren't I
62:40 - Alki see Alka is typing I will get an
62:43 - answer no code yes there will be a
62:44 - coding challenge today yeah so I don't
62:50 - know I'm gonna put this back to like
62:56 - this all right
63:00 - all I did was arrow function wait bind
63:07 - is mine to find is ugly I agree okay
63:09 - let's all right so we got to move on
63:11 - here everybody okay we got to move on oh
63:16 - here that's me that's me what am i okay
63:21 - so let's see what can I do now we got to
63:24 - do some coding challenge stuff so I
63:26 - wanted to do word to Veck and I wanted
63:28 - to do the let's do the circle more I'm
63:30 - gonna actually do the circle morph in it
63:31 - in an easy way
63:33 - famous last words all right so I'm gonna
63:36 - say this oh let me do a workflow video I
63:41 - want to do a workflow video here's the
63:43 - thing I got to do this because this is
63:44 - making me crazy and you guys can give me
63:46 - some advice here so I have this playlist
63:53 - and I put this oh no sorry here look
64:03 - it's my act so here I put this 1.2 p5.js
64:10 - with brackets as a like oh maybe I'll
64:13 - just show people how to use brackets
64:14 - because the desktop editor
64:17 - is deprecated the web editor isn't
64:20 - really released yet people who are
64:22 - beginners are just starting to learn
64:23 - work with p5 what should I have them use
64:25 - so I you know attempted to use code pen
64:28 - but you know that's gonna have its own
64:29 - set of issues once you start to build
64:31 - out larger projects so I made this video
64:35 - with brackets and almost almost all the
64:38 - comments are are I can't get it to work
64:40 - because the way the p5 download now is
64:43 - different so what I'm thinking is is it
64:48 - crazy I mean I hate to have all these
64:50 - steps for a beginner but maybe I just
65:03 - have to admit that this is the case and
65:07 - it's time for me to make the workflow
65:10 - video to end all workflow videos and to
65:16 - use install node n p.m. - G install and
65:36 - a p5 manager so then you could say p5
65:43 - generate - be you know sketch name open
65:54 - with Adam and then what know HTTP server
66:04 - with node simple Python server or Adam
66:13 - live server package is there a better
66:21 - for the total beginner starting point
66:24 - than this maybe just download the you
66:29 - know from p5 just from the web
66:31 - but it comes with this weird on
66:34 - directory structure so I'm curious for
66:36 - some advice and comments so let me see
66:43 - here
66:46 - Oh code pen has a special editor for
66:54 - larger projects called projects I term
66:56 - oh boy I forgot about I term p5 manager
67:03 - also has a local host so oh I'm not even
67:09 - on the screen right now so I think I'm
67:11 - gonna try I'm gonna try this isn't going
67:13 - to be the most beginner friendly
67:14 - workflow video and I won't go through
67:17 - all the steps to install p5 manager
67:21 - because I have a separate video wrap on
67:29 - a docker layer yeah and no I don't think
67:31 - so let me I'm gonna do this I'm gonna
67:35 - erase all this now and I will probably
67:38 - rewrite it
67:40 - that was me sticking it through
67:55 - only thing about the one thing I want to
67:57 - look at what the p5 manager is when you
67:59 - generate a project how does it get which
68:02 - version on the p5 library because I
68:05 - noticed it wasn't getting the most
68:06 - recent one I don't think so
68:09 - cloud9 is great so I kind of want to do
68:12 - though here's the thing I don't really I
68:14 - don't know why I'm saying this because
68:16 - there's also glitch which is fantastic I
68:19 - kind of don't want to do use a web an
68:22 - online editor eventually I will use the
68:25 - p5 web editor and make other videos with
68:27 - what but it's true that actually my
68:29 - students here at NYU are kind of at the
68:31 - point in the semester where a lot of
68:32 - them want to work offline so I think I'm
68:35 - gonna do that alright so I'm going to
68:38 - quit everything on this computer and
68:43 - here we go here we go so hello this is
68:54 - me again trying to make a workflow video
68:57 - I've made a bunch of them but I always
68:59 - get lots of questions there are always
69:00 - problems with them so I am now going to
69:02 - make a video that describes my entire
69:04 - workflow even though I have pieces of
69:06 - this and other videos I'm gonna do it
69:08 - all in this video you could be watching
69:10 - this video as the as you're just
69:12 - starting to learn to program this isn't
69:15 - the most beginner friendly way to just
69:16 - type your first line of code because I
69:18 - gotta have a bunch of steps but at some
69:20 - point I will also come back and show you
69:22 - some other what editors that you could
69:24 - kind of be up and running immediately
69:26 - with so how and I work for I want to I
69:29 - want to make a p5.js sketch I don't want
69:32 - to do it in ink I mean you you should
69:34 - you might want to do this I want to do
69:36 - this also but at the moment I do I want
69:38 - to do this locally on my computer this
69:40 - laptop thing without a cloud-based
69:41 - editor so let me talk about the pieces
69:43 - of the puzzle that I need things that I
69:45 - need is I need to get like some project
69:50 - files the I need all of these files
69:54 - can't let me let me start over here
69:56 - timeout timeout everybody
70:04 - let me find these paper towels this is
70:08 - just I cannot bear such a dirty
70:11 - whiteboard and I also have to get myself
70:28 - to not write so high up there this is
70:31 - gonna help my mental sanity takes me a
70:35 - lot I was sort of like get comfortable
70:37 - is what happens at the beginning of
70:39 - these live streams I've always are so
70:40 - uncomfortable I'm still uncomfortable my
70:43 - teenage let me talk about all the pieces
70:51 - that you need okay so one thing you
70:53 - absolutely need is a working whiteboard
70:57 - marker one thing that you absolutely
71:05 - need have a look at that beautiful is
71:09 - project files
71:12 - now to make a p5.js sketch or really any
71:16 - JavaScript program webpage thing
71:19 - actually all you need is an HTML file
71:21 - because you can write HTML index or HTML
71:26 - you can write can you see this you can
71:33 - write everything you could write all
71:35 - your JavaScript and everything in there
71:37 - but that's not so convenient it's kind
71:39 - of nicer to just have the HTML stuff
71:41 - that you need in there and you need to
71:44 - sketch J's file so you need these
71:45 - project files we could just make these
71:46 - from scratch and type what we need into
71:48 - them but generally we want to get like
71:50 - some sort of template from somewhere so
71:51 - that's one thing we need another thing
71:54 - we need we need a text editor we need
71:57 - something that we can open up these
72:00 - files probably we could have more files
72:01 - and project files and CSS files and
72:04 - image files video files but at a bare
72:06 - minimum this is one we need something
72:09 - where we can edit those files you know
72:12 - you could use just about it if you used
72:13 - TextEdit or notepad or anything really I
72:15 - tend to use something called the atom
72:17 - editor it is an open source text editor
72:21 - thick put out by github there is also a
72:24 - text editor called sublime text which is
72:27 - quite wonderful there's a free version
72:29 - but it's also commercial software that
72:31 - you can pay for there's there's like
72:34 - Visual Studio people tell me they love
72:35 - and the list goes on there's lots of
72:39 - them everybody has their own favorite
72:41 - text editor you can say which one is
72:43 - yours in the comments so we need this
72:44 - and then the third thing we need is a
72:48 - server so here's the thing these are the
72:52 - files this is how we write our code in
72:55 - the files how do we see what we multiply
72:57 - want to do is see the result in a web
73:00 - page and it is true that if you just on
73:02 - any computer double-click index.html
73:05 - file will like pop up and open it in the
73:07 - browser but what you might end up seeing
73:09 - is that it's opening it with this path
73:12 - in the address bar file colon slash
73:14 - slash and what we want to do is open it
73:16 - with this path HTTP colon slash slash
73:20 - basically we want to make sure that we
73:24 - are simulating the actual real world way
73:28 - that someone on the internet would view
73:30 - this web page which is they would view
73:32 - it served up on a web server so we want
73:34 - to run a little web server on our local
73:36 - computer to be able to look at it in the
73:38 - browser and there are lots of options
73:39 - for that I could run a node server
73:43 - what's no no my goodness I could run a
73:46 - Python server
73:47 - what's Python oh my goodness ah I could
73:49 - use like an atom server package right
73:53 - there's all these different
73:54 - possibilities so when I forgot to
73:56 - mention there's lots of ways you could
73:57 - get your project files you could just
73:59 - have a friend of theirs they say hey do
74:00 - you have any p5 sketches give me only
74:02 - one and then you can just edit there
74:03 - you're just copy paste copy paste like a
74:05 - hundred times you have under project
74:06 - folders I'm gonna use a tool called p5
74:10 - manager it's a little bit of overkill
74:12 - right now because it might be easier
74:14 - just to say hey just download and I'll
74:16 - put a link in this video's description
74:17 - to a zip file where you can just
74:19 - download a blank p5 sketch but I'm gonna
74:22 - use this tool called p5 Manager which
74:24 - has a little command line thing you can
74:25 - type it it generates the project
74:27 - for you so I'm gonna use p5 manager to
74:31 - generate the project files I'm going to
74:33 - use a text editor to open the project
74:36 - files I'm then going to type my code
74:38 - into the project files I'm going to run
74:40 - a local server and then look at the
74:42 - beauty that is my results does that make
74:45 - sense again I'm trying to make the
74:47 - workflow video to end all work that
74:49 - covers all the pieces I mean there's so
74:51 - much more but this is kind of what I use
74:52 - alright let's go over this way alright
74:59 - um right right right right right right
75:04 - right right right right and I know by
75:08 - the way there's lots of online editors
75:09 - and code pen and Glitch and there's a
75:13 - new one coming out from p5.js soon so
75:15 - there's so many possibilities but this
75:17 - is this is a way of working just one
75:19 - just one all right so now here we go how
75:24 - do i how do I use this p5 manager thing
75:27 - first of all you have to be a little if
75:29 - you're on a Mac you've got to feel a
75:31 - little comfortable using terminal if
75:33 - you're on Windows so you've got to run
75:41 - this piece of software called terminal
75:43 - it's usually in applications utilities
75:44 - and it looks something like this
75:47 - then you could just magically type p5
75:50 - generate - be my project no no no you
75:54 - can't so here's I think this is the
75:55 - command that I type what this commands
75:57 - meat means is hey generate a p5 project
76:00 - I want it to be a bundle look I can talk
76:02 - about what that is and I want it to be
76:04 - called my project
76:05 - the thing is I'm gonna I'm gonna just
76:06 - pretend there's something called x5
76:10 - you're gonna see this x5 p5 command not
76:14 - found when I do this it's actually going
76:16 - to work whoops ignore that p5 generate -
76:22 - be my project this is actually gonna
76:24 - work when I do it because I've installed
76:26 - p5 manager already and you can see what
76:28 - this did it created a folder called my
76:30 - project and it gave me sketch as
76:32 - index.html and by the way I kind of
76:34 - forgot something important I'm realizing
76:36 - I also need all those library files you
76:40 - actually don't need the library files
76:42 - locally because index dot HTML can like
76:45 - point out to a URL to get the p5
76:48 - libraries and you'll see that in a lot
76:50 - of examples and things but i but the p5
76:53 - manager will actually give you those
76:54 - library files locally all right here we
76:56 - go now ok so how do you how do you
76:59 - install this p5 manager one thing is I
77:01 - do have a video where I go through how
77:04 - to install this in more detail but I'm
77:06 - gonna do it here anyway but you can I'll
77:08 - link to that p5 manager video as well so
77:10 - the thing that I need is a piece of
77:12 - software called node and node is a
77:15 - JavaScript runtime built on chrome v8
77:18 - JavaScript engine blah blah blah blah
77:20 - it's a thing that lets you run
77:21 - JavaScript programs on your computer and
77:23 - on servers and lots of other places so
77:24 - you're gonna want to download this and
77:26 - install it and you'll know that it's
77:28 - working one of the things you can type
77:29 - by the way in terminal is clear and then
77:31 - I'll clear everything you'll know that
77:32 - it's working if you just take node and
77:34 - you get that there so pause this video
77:37 - install node go back to your terminal
77:39 - type in notes see if you get this and
77:40 - you can do things like 5 + 7 oops
77:44 - 5 plus 7 and it gives you 12 so you can
77:48 - run a little JavaScript I'm gonna hit
77:49 - ctrl C and 2 eggs again press ctrl C
77:52 - again I'm gonna hit clear so once you
77:56 - have node installed you need to use
77:59 - something called NPM you've already got
78:01 - it installed and to install the p5
78:03 - manager you have to say npm install p5
78:07 - manager now here's the thing you also
78:10 - want to say - gee what this means is I
78:15 - want to install this thing called p5
78:17 - manager and is a global thing for my
78:19 - computer I want to be able to always
78:21 - type p5 manager wherever I am I'm gonna
78:23 - hit enter you might have a problem it
78:26 - might already installed it but I'm gonna
78:27 - let it kind of go anyway and I got an
78:35 - error so here's the problem
78:37 - I forgot that in order to distill
78:40 - something globally on my computer I have
78:42 - to say sudo by ok what am i doing by the
78:47 - way the up arrow
78:49 - the up-arrow allows you to scroll
78:52 - through previous commands so I can go
78:54 - back and find this command and I'm going
78:57 - to now say sudo which stands for Super
78:59 - User do which will give me the
79:01 - permission to install it Oh
79:06 - detected my password that's Rick is
79:14 - there we go now I think I'm not having
79:22 - like I did the same stick in a different
79:24 - video so it's installed so that's great
79:26 - I'm gonna hit clear and now I can so
79:29 - here's the thing I can now use that p5
79:30 - command and look it's telling me I'm
79:33 - running p5 manager zero point three
79:35 - point two I don't know why the color
79:37 - became all weird here
79:38 - I like selected something I don't know
79:39 - what's going on but I'm gonna just
79:40 - pretend that's not happening now here's
79:42 - the thing where do I want to make my
79:44 - project well let's say I just want to
79:45 - put the project on the desktop here's a
79:47 - command that's useful for you
79:49 - PWD print working directory and you can
79:54 - see this is the director I'm in user
79:56 - slash processing my user name is
79:58 - processing on this particular login it
80:00 - should probably be coding train or
80:02 - whatever but now I can say CD for change
80:05 - directory like maybe I just want to go
80:07 - to the desktop so now if I say PWD here
80:13 - we go
80:13 - and guess what let's say actually want
80:15 - to go to some weird folder on my
80:16 - computer if I go and say like oh there's
80:19 - this like coding train folder and it's
80:21 - frog or - and I want to put something in
80:24 - there I can actually just drag the
80:26 - folder into here let go and that's the
80:31 - whole path users processing documents
80:33 - old desktop PC D coding train fragra -
80:35 - so I don't need to do that right now and
80:37 - hit ctrl C and the camera went off the
80:40 - moment I hit ctrl C
80:50 - and I'm just gonna say clear I'm gonna
80:53 - say PWD I'm on the desktop and now I'm
80:55 - gonna say p5 generate - B B stands for
81:00 - bundle p5 will actually generate you
81:02 - this whole like file system management
81:04 - for a lot the p5 manager for a lot of
81:06 - different sketches I personally just
81:08 - like to generate one sketch at a time so
81:11 - that's what - B does - be coding train
81:15 - one so here we go hit enter it created
81:20 - all those things and now just to be sure
81:22 - I'm gonna minimize all my windows and
81:24 - look at this on my desktop is this
81:27 - folder called coding train one and it
81:29 - now has index dot HTML sketch touch yes
81:34 - and all the library files that I need
81:39 - step one is done again just one way to
81:43 - do that you just need these files you
81:45 - can make them from scratch you can
81:46 - download some where you can copy them
81:47 - from a previous project but step one is
81:50 - done using p5 manager now I need step
81:52 - two so again so many different possible
81:56 - text editors let's use the atom editor
82:00 - so atom editor is a piece of software
82:03 - you can get by going - I don't know Adam
82:08 - dot IO and you can see here is the atom
82:11 - ID up in the wrong window the atom
82:20 - software is a piece of software you can
82:22 - get by going to a DeMayo
82:23 - and you can do download for whatever
82:26 - your operating system is here you can
82:28 - see this is kind of what it looks like
82:29 - it is a text editor
82:30 - hooray I already have atom installed so
82:34 - I'm going to go down here and
82:36 - I just gotta use the search bar to type
82:39 - in Adam so I'm gonna run the Adam
82:41 - application it's open it already has
82:44 - opened a bunch of things won't look like
82:45 - this for you that's unfortunate let me
82:48 - try this again
82:49 - close this how can I make it
82:53 - let me how could I make it launched for
82:56 - the first time again probably like in
83:02 - the that's good and the preferences like
83:06 - open empty at our own star
83:22 - mmm previously I might lease a product
83:25 - State detected oh I don't know
83:29 - editor Oh AK well I'll just live with it
83:34 - it's gonna have some welcome e stuff for
83:37 - you that's fine all right I'm gonna go
83:40 - ahead and just find Adam on the computer
83:42 - and I'm going to I've already downloaded
83:44 - open it and you can see it's just
83:46 - opening this blank page you'll probably
83:48 - see some like welcome messages and stuff
83:50 - I've used it quite a few times so it's
83:52 - just opening something blank and then I
83:54 - can do file open I can go to the desktop
83:58 - and I can just select this coding train
84:01 - folder and I can press open and then
84:04 - boom we can see here in the left pane
84:06 - these are my files and this is blank and
84:09 - I can click on sketch and I have the
84:11 - code ready to go so if I add something
84:13 - like background zero and let's make it
84:17 - like a green color just to be sure this
84:20 - is working or I've added some code now I
84:25 - am going to do what I'm gonna just I'm
84:29 - gonna throw caution to the wind and I'm
84:32 - going to don't do this don't try this at
84:33 - home
84:34 - double click this index.html file and it
84:38 - works so this is okay it's a very bad
84:41 - habit please please please that's making
84:44 - me so uncomfortable it's all green and
84:45 - bright but you can see here this is what
84:48 - I'm trying to avoid it opened the HTML
84:51 - page via the file system and while just
84:53 - drawing a green background it had no
84:55 - problem with that
84:56 - there are many other areas where you can
85:00 - have a problem so what I really want to
85:03 - do is run a local server now we're now
85:07 - done with step two so now I need to go
85:12 - to step 3 hmm what local server should I
85:17 - run I have a video I made a long time
85:19 - ago I ran a Python server I think I used
85:22 - a node server and another one I think I
85:23 - might have used the atom live server
85:25 - package I don't know which to use huh
85:27 - you know what the p5 Manager comes with
85:29 - its own server let's see if we can use
85:32 - that
85:34 - I'll show in fact I think I'll just show
85:36 - you a bunch so so one thing I could do I
85:39 - got an open terminal back up one thing I
85:42 - can do is first of all I want to be in
85:45 - the directory of my sketch or in a
85:46 - directory above actually would be fine
85:48 - let's just run the load I don't know
85:50 - let's change into the directory I'm
85:53 - gonna do this I'm gonna hit clear again
85:56 - so I could type some command to run a
85:58 - local server for example this is a
86:01 - command if you have Python installed on
86:03 - your computer which a Mac will and I'm
86:05 - probably easy to download install Pike
86:06 - Python in a PC that is now running a
86:10 - local server and if I go to the browser
86:14 - and type in localhost colon 8080
86:20 - go --gel calm or yahoo.com
86:23 - but instead of that web server somewhere
86:25 - off in the Internet I want to connect to
86:28 - localhost the web server running on this
86:30 - laptop right here and 8000 is a port so
86:33 - when you connect to a webpage it's
86:35 - usually on the default port 80 and you
86:36 - don't specify it but this local server
86:38 - it told me right here it's running it on
86:43 - port 8000 so that's on you to type 8000
86:45 - there is another node package I could
86:47 - install sudo npm install - g HTTP server
86:52 - i think that's what it's called dot
86:54 - server - server so i could install this
87:01 - node package i already probably did and
87:03 - then I could say HTTP server and now
87:06 - it's running a server there it is
87:09 - 8080 there it is it's running a server
87:11 - 8080 and you can see this is my local IP
87:13 - address so now I could take go there and
87:16 - put this and I'm running the sketch hold
87:19 - so many things guess what else I could
87:21 - do
87:22 - p5 has one like p5 server look at that
87:27 - it started a server at port five five
87:29 - five it's so many options for servers
87:31 - it's amazing : five by five oh my
87:35 - goodness look at this did though I don't
87:37 - know oh boy it's giving me some sort of
87:39 - fancy something or other oh boy so now
87:41 - I'm a little bit lost all my projects
87:45 - would be to the left
87:47 - I might need to go oh boy up so the p5
87:51 - server does something fancy timeout I
87:59 - need to create a collection to run the
88:02 - p5 server so I guess it doesn't work for
88:06 - standalone projects I'm gonna let's back
88:11 - that up and let's so those of you
88:14 - watching the livestream you'll get a
88:15 - little extra tidbit there you can use
88:17 - the p5 manager in fancier ways but I'm
88:19 - going to that's you we will we will stop
88:25 - at this and go on to the next server
88:27 - option another thing that I could do is
88:33 - a lot of these text editors will come
88:36 - with a special plug-in or by default of
88:38 - a menu option which says like preview
88:40 - run live server that type of thing I
88:42 - brackets is one that I did a previous
88:45 - video on that has a little button that
88:48 - you press which is for a live preview
88:49 - and it runs a server so Adam one of the
88:51 - things you can do with Adam is you can
88:54 - under here there's packages now you'll
88:56 - see I already have dev lot no no I just
89:01 - say you don't have it so I don't have so
89:04 - this is perfect so what I'm gonna do is
89:05 - I'm going to see can I install a live
89:07 - server package with Adam so packages oh
89:10 - so Adam I want to go to preferences you
89:13 - start for you to see what I'm doing I'm
89:14 - going to preferences and then I want to
89:18 - go to install which is right here
89:20 - install and then I want to look for I'm
89:24 - gonna search for a live server dev live
89:29 - reload oh maybe that's what oh no Adam
89:31 - look so this is the circum something
89:33 - that I've installed dev live reload
89:34 - maybe that does the trick to Adam live
89:37 - servers what I was thinking of so I'm
89:39 - gonna click install and it's gonna do
89:43 - something
89:48 - takes a little while I guess let's try
90:01 - this dev live reload one well oh no it
90:07 - installed it installed okay it installed
90:10 - cuz I know that because now it says
90:11 - uninstall or disable and now I can go
90:14 - back to where here I don't know packages
90:18 - live Adam Auto indent bracket wait Oh
90:23 - what I have to restart Adam I have to
90:26 - restart Adam then I'm going to packages
90:38 - where's the live server thing hold on
90:44 - preferences
90:49 - install live server it's there Adam life
91:02 - server no how come I'm not seeing it
91:06 - does it go somewhere else
91:12 - I guess by the way I should just use
91:14 - this one because it seems that it comes
91:16 - with it does anybody know if dev live
91:19 - reload comes with comes with Adam so I
91:26 - don't even have to install it ctrl alt L
91:34 - everybody everybody's telling me their
91:36 - own way of doing it in the chat its dev
91:38 - live reload ok Oh baby that's what it is
91:40 - actually it's just called that now is
91:43 - that what it's called now I don't know
91:44 - hold on let's be sure about this ah why
91:54 - is life so hard if I delete Adam it's a
91:59 - terrible idea
92:00 - and redownload it if it's by Adam than I
92:07 - think it's default
92:09 - [Music]
92:27 - nope this computer's gonna run out of
92:31 - power
92:41 - all right come on and then let's let me
92:49 - try running at him again I don't know if
92:53 - that actually wiped my install
93:03 - yes I want to open it
93:10 - mmm I don't think it did that's it still
93:17 - has all my settings I just deleted the
93:20 - application it's an internal atom dev
93:25 - thing but why does the live server
93:27 - package not showing up here atom live
93:32 - server let's just run them no yeah this
93:33 - is reload all styles is something else
93:37 - do me I have to enable it all right cuz
93:43 - here packages I have this
93:57 - Oh Oh somebody what you guys use the
94:01 - shortcuts yeah that's nice that there's
94:05 - shortcuts but I'm happy to use shortcuts
94:11 - but I would like to demonstrate running
94:13 - it without them alright let's at least
94:20 - try the shortcut what was it again ctrl
94:30 - yeah yeah I've always seen it here when
94:39 - I've have it installed totally lost in
94:46 - here
94:54 - q map
95:09 - keybindings in naval control alt 3 does
95:16 - it for 3,000 disabled this if you want
95:21 - to bind your own keystrokes I don't
95:22 - really want to do that
95:25 - [Music]
95:33 - all right I guess I should use
95:47 - what was it alt command3 no control all
95:53 - three no well I'm stumped here with this
96:05 - live server thing control P command P no
96:21 - do I have to have like be in an HTML
96:24 - file for it to find window selection
96:37 - view edit first come in then alt then L
96:51 - and one it's not working for me
96:56 - alright maybe I should just give up on
96:58 - this live server package thing
97:07 - [Music]
97:10 - preferences
97:19 - it's packages stable enable this make me
97:34 - crazy oh thank you compiled for an
97:43 - earlier a rebuild package thank you that
97:51 - was the problem
97:52 - ah there we go
97:59 - all right Thank You Andrea Andrea I'm
98:05 - sorry not pronouncing your name
98:05 - correctly there we go okay so now
98:10 - packages now look I don't know where
98:13 - this is gonna pick up from packages now
98:16 - I have that installed I can just go to
98:18 - Adam life server start server there are
98:20 - keyboard shortcuts to automatically
98:21 - launch it but I'm gonna launch it here
98:23 - and boom there it is and there there's
98:26 - another local server at this address and
98:28 - that port and what's interesting about
98:30 - this now is look at the green color I'm
98:33 - just gonna go to my code and I'm going
98:34 - to add this color I'm gonna hit save and
98:37 - then I'm an alt tab to the browser it's
98:39 - live reload so as I change the code like
98:42 - okay well actually I just wanted to 600
98:43 - by 400 canvas and I want to have like a
98:47 - random something I don't know you can
98:49 - see it's continuously reloading the page
98:51 - for me which is wonderful so okay to
98:55 - recap
99:02 - to recap all the pieces that I'm using
99:05 - are getting my project files from p5
99:11 - manager which is a node module so we
99:13 - need to download and install node so I
99:14 - can write some terminal commands with
99:15 - nodes I am using a text editor I happen
99:20 - to be using atom but any text editor
99:21 - will do then I want to view the results
99:24 - of my code in the web browser so I need
99:26 - to run a server now someday you might
99:29 - watch a video where I explain how to
99:30 - program your own server for all sorts of
99:33 - interesting things and I'll link to
99:34 - those videos as well you can write your
99:35 - own node server but you can use a built
99:37 - in node server you can use a built in
99:39 - Python server if you have Python you
99:41 - could look for a plug-in for your text
99:43 - editor just I'm sure the comments of
99:45 - this video will be filled with lots of
99:47 - other suggestions of how to run your own
99:49 - server there's a couple important things
99:52 - that I want to point out by the way
99:59 - could someone tell me what I should
100:01 - recommend is sort of like the equivalent
100:02 - for terminal on Windows it probably came
100:06 - through but I missed it so here's
100:09 - something really important something
100:11 - that you might notice in a lot of my
100:13 - examples is I have this other pane open
100:16 - in the browser where I can see error
100:18 - messages or I can do console log
100:20 - statements and the way I'm doing that in
100:22 - chrome it's different in different
100:23 - browsers it's under view developer
100:28 - JavaScript console so if I click that
100:31 - the JavaScript console it now pops up
100:34 - over here you can see Adam is even
100:36 - talking to it because it's say hey
100:38 - you've got I've got the live reload
100:39 - enabled so one thing the couple
100:43 - important points about this number one
100:46 - is you might not appear there for you it
100:48 - might be on the bottom you can pop it
100:50 - out you can kind of control where it
100:52 - goes somewhere I here note here Here I
100:59 - am you can you can look right here and
101:03 - you can see how I could put it on the
101:04 - bottom or I could pop it out so that's
101:05 - one important thing another really key
101:08 - thing and depending on what the server
101:11 - using is but I like to keep something
101:12 - checked if I go here under
101:14 - settings and I scroll all the way down
101:16 - to network this is a pretty important
101:20 - setting disable cache while dev tools
101:23 - are open this is a setting you want to
101:25 - have checked because sometimes browsers
101:30 - they'd really like to remember stuff
101:31 - they like say you know what I you're
101:32 - asking me to do something I already you
101:33 - asked me did this a while ago I'm just
101:35 - gonna do what you've asked me a while
101:36 - ago because it's faster but if you
101:38 - changing your if you're changing your
101:39 - code a lot you don't want it - by
101:40 - accident run your old code so this will
101:43 - disable its ability from caching some
101:45 - previous version of your code and
101:47 - running that instead whenever these
101:48 - JavaScript console is open so if you
101:50 - have that set you will never have that
101:52 - problem and I can just go and I wasn't
101:55 - having that problem because the live
101:56 - reload is probably you know can change
101:58 - all these colors and it's it's changing
102:00 - my code but that's an important sort of
102:02 - detail there all right all right other
102:13 - question I'm sure a lot of you are
102:14 - asking is if you're using Windows what
102:17 - do you use but is it as the equivalent
102:19 - of this terminal application so there is
102:21 - just the command prop on Windows there
102:23 - are also some I'm reading the chat here
102:25 - some things that you can install like
102:27 - cygwin c YG wi n there are some other
102:32 - tools like you can install the Linux
102:34 - file system maybe in Windows 10 it
102:36 - actually does this for you I have no
102:38 - idea I'm lost so if somebody writes a
102:40 - helpful comment about the what to do for
102:43 - your terminal in Windows I will pin that
102:44 - comment to the top of this video's page
102:47 - so maybe look for there and see if
102:48 - that's there what else am I forgetting
102:50 - I'm gonna pause for a second and check
102:51 - the chat and see if I missed anything
102:53 - and for this video ends yeah git bash is
102:57 - a good suggestion okay let me look
103:07 - [Music]
103:13 - I'm looking at the chat here just to see
103:18 - yeah how do you use p5 serve get bash
103:21 - yeah that's the chat is telling me that
103:25 - get bash is also an excellent tool for
103:28 - Windows actually one that I've used
103:29 - before so you can download something
103:30 - called git bash I will include a link to
103:32 - that as well in this video's description
103:35 - alright I think I've covered everything
103:38 - just just to like I think I feel like I
103:42 - should do a whole video just on the
103:43 - console alone but so maybe I'll do that
103:46 - but just to like at least put something
103:48 - in there I can do stuff like console dot
103:50 - log you know Mouse X if I put that into
103:53 - my code what I'm gonna see is I'm gonna
103:57 - be able to debug the value of the mouse
103:58 - as I'm running it and if I have some
104:00 - kind of error like I misspelled
104:03 - background and don't put the D on the
104:05 - end you can see uncaught reference error
104:08 - background is not defined so this is
104:10 - where I say sketch digest line number 6
104:12 - so I can go back and see line number 6
104:15 - that's where my error is so that
104:17 - JavaScript console is really a useful
104:20 - tool to get used to using and practice
104:22 - using so I hope this video didn't end up
104:24 - being super long and I hope that you
104:25 - found it helpful and I'm sure I'll end
104:28 - up remaking this again because workflows
104:30 - and tools is acknowledged used to just
104:31 - change constantly and thanks very much
104:33 - for watching all right how are we doing
104:41 - everybody
104:42 - I'm not staying hydrated oh there's my
104:45 - water bottle I need to go fill it I
104:47 - couldn't find it and I thought I'll be
104:48 - fine
104:50 - alright what do we got here what else we
104:58 - got here it's getting close to 6:00
105:05 - we're running out of steam a little bit
105:07 - ok circle Morphin we got to do that I
105:10 - did this oh my god did I really do that
105:11 - it was kind of horrific oh and I want to
105:14 - do the word Tyvek stuff that might have
105:16 - to come next I should do at least one
105:18 - more of these let's do the circle more
105:21 - thing let's do this circle oh I forgot
105:26 - about like all those other packages you
105:32 - know ken right can I ever do everything
105:34 - in the video impossible huh Matthieu if
105:36 - you want to pay if you want to splice
105:38 - this in towards the end you can there
105:40 - are also by the way in addition that
105:42 - live circuit server package a lot of
105:44 - other useful packages that you can
105:45 - install that modify how atom behaves hi
105:49 - syntax color for different programming
105:51 - languages and things one that I use
105:53 - quite a lot is atom beautify and I'm you
105:56 - can map the key yet so I guess I got to
105:57 - come back into another video about atom
106:00 - packages if that's of interest but I'm
106:01 - gonna leave that here alright let's do
106:07 - some let's do some circle morphing let's
106:14 - go to github.com goal on Leavitt go on
106:19 - probably no goal on 11
106:26 - circle more thing Hey look at that
106:32 - go on Leben wait what are all these
106:35 - other URLs apples to orchard feed tonic
106:39 - fascinating so let's go to repositories
106:44 - circle morphing okay
106:47 - so I could certainly do this one I was
106:51 - thinking actually of me find my I think
106:57 - the paper towel is better at erasing
106:59 - then
107:10 - so maybe I should do maybe I'm gonna do
107:15 - two so maybe I'll do one where I compute
107:27 - all the points of a circle that I know
107:29 - how to do how do i compute very quickly
107:33 - and easily all the points of a triangle
107:35 - bill I like doing the square before so
107:43 - let's say the circle has 90 points each
107:50 - side the triangle would have 30 points
107:51 - but no three of those points are shared
107:53 - oh my god I'm really gonna have to look
107:56 - at Golan's code and then I yellow it so
108:00 - the side the this is the reason why what
108:03 - I wanted to do actually is so let me
108:08 - think about this for a second all right
108:10 - is it okay - we'll do a little bit of
108:12 - like pre pre planning this video so
108:16 - that's an equilateral triangle this is a
108:20 - circle so this would be the point at 90
108:25 - degrees this way and then this would be
108:28 - the point at right is that perfectly
108:32 - that's not half right the because this
108:36 - is this is 60 degrees 60 degrees those
108:44 - points if I look are they at 30 degrees
108:47 - or at 45 degrees super state I also have
108:55 - a super shape also do a super shape
108:56 - morphing yeah that could be good - 30
109:00 - yeah right because isn't this
109:11 - sixty degrees is right okay so wait a
109:16 - second so if this is sixty degrees and
109:29 - this is half this would be thirty right
109:34 - yeah this is thirty so so I'm looking
109:37 - for those points the way I was thinking
109:43 - of doing it was just randomly deleting
109:46 - all the other points and having a
109:47 - collapse unto itself that was that's one
109:50 - way of doing it the other way would be
109:52 - to calculate the perimeter path for the
109:55 - triangle as well I seems like such a
109:57 - pain and neck
109:58 - there must be an easy way to calculate
109:59 - the perimeter of an equilateral triangle
110:02 - around the center point right how would
110:04 - I do that I can I could start here I
110:08 - know I need to get here so I can just
110:12 - calculate all the points along the line
110:14 - between those two guess that's what I
110:16 - would do all right let me think about
110:19 - this
110:20 - hold on somebody in the chat is giving
110:23 - me a good suggestion stop using degrees
110:26 - and you spread C rational trigonometry
110:29 - oh that's probably a good idea just
110:35 - rotate by 120 three times for the points
110:38 - that's also a good idea
110:41 - [Music]
110:47 - gives you super shapes to create a
110:50 - triangle oh that's clever
110:53 - I see that is a really good point
111:01 - all right hold on Alka is giving me an
111:03 - excellent suggestion let's see if I can
111:06 - understand this that's like how Co is
111:12 - gonna make me appear that I'm smart
111:17 - yeah cuz what we could do is of course
111:24 - but Alka isn't that the those are the
111:28 - points for that's the points for the
111:31 - circle isn't it what the code that you
111:34 - just pasted and it is using sine and
111:37 - cosine just underneath the hood with the
111:39 - rotator right that wouldn't do a
111:43 - triangle a circle yeah so I need so that
111:46 - I that have good awareness is my head so
111:49 - let's let's get started okay so I'm
111:52 - gonna the funny thing is I did this
111:54 - before and I never released it because
111:56 - it was kind of a disaster so I'm gonna
111:59 - do use Bezier curves I know oh that's a
112:01 - cool light there's so many great ideas
112:03 - but I want you could say count equals
112:06 - three for a triangle yes but I want all
112:09 - the intro what I want to do this is what
112:12 - I want to do for that I think for the
112:14 - most basic way to teach this is to the
112:20 - most basic way to teach this is to maybe
112:30 - I don't want to do it this way but is to
112:32 - let's say I do the circle and it's this
112:40 - many points so this is right let's say
112:45 - I'd make the circle and it is oh I think
112:51 - I know what to do now I think I have an
112:54 - idea of what to do but so basically I
112:57 - can compute these points around this
112:59 - path
113:00 - but I want to compute this point for
113:02 - this one this point for this one in this
113:04 - point for this one so that way I can
113:06 - move these around so if I do this this
113:12 - is starting from here if I do this six
113:17 - for sixty degrees if I calculate all of
113:20 - these points and then all the equivalent
113:22 - number of these points then I could do
113:23 - the same thing for here and the same
113:25 - thing for here and I just need two
113:26 - arrays and then I need to work with both
113:28 - those arrays all right so that's what
113:31 - I'm gonna attempt to do yeah and I can
113:36 - use lerp right right exactly that's what
113:38 - exactly is thinking so I can just as I
113:42 - calculate this point this is like if
113:44 - this is ten degrees that's one six I
113:47 - just need to go one six of the way ha
113:51 - okay here we go everybody so we're gonna
113:55 - make this coding challenge happen circle
113:59 - morphing remember how I was gonna do
114:03 - webcam painting everything started it
114:06 - all made so much sense earlier today
114:09 - 120 I think I do mean 120 I one do 60
114:15 - plus 6 oh yeah 120 I mean 20 everybody
114:19 - hundred twenty hundred twenty all right
114:22 - here we go
114:29 - circle morphing
114:41 - alright alright alright alright hello
115:04 - you're watching a video where I'm
115:06 - watching a video look that's goal on and
115:08 - that's me
115:08 - last week look I trim my beard I'm tied
115:11 - if you didn't watch this video before
115:13 - goal on a guest here on the coding train
115:15 - give a wonderful lecture about
115:17 - interpolation in artist from an
115:19 - historical perspective and then showed
115:21 - 10 different ways of morphing from a
115:24 - circle to a triangle so now in this
115:27 - video I'm going to close that and
115:29 - there's a github repository which I will
115:30 - link to which has 10 different 14
115:34 - different ways why don't I say 10 so
115:35 - many different ways of transforming a
115:37 - circle into a square no actually if you
115:39 - could believe this my opponents watch go
115:43 - away everybody um I haven't looked at
115:47 - the code for any of these and so what I
115:49 - want to do and I have done this before
115:50 - I failed that it miserably I'm going to
115:53 - do this twice I'm gonna just try two
115:55 - different techniques in this video I am
115:57 - going to try to transform from a circle
116:01 - to a triangle and the the constraint
116:05 - that I want to give myself is that I
116:07 - only want to work with begin shape and
116:10 - end shape and a perimeter of points
116:12 - around a circle and then I want to be
116:16 - able to take that perimeter and make it
116:17 - a triangle come back there's lots of
116:18 - different ways I could do that
116:19 - the first way that I'm going to do that
116:21 - is just work with the exact same number
116:24 - of points but define the shape of the
116:27 - triangle and then move the points around
116:30 - and this is what unlocks a ton of
116:32 - creative potential as the points could
116:34 - spring back and forth they could mix
116:36 - themselves up they could use some kind
116:38 - of fancy bouncing easing algorithm they
116:41 - could twirl but I'm just gonna like move
116:43 - them from one spot to the other so I'm
116:45 - gonna set up a template from which you
116:47 - could be creative and you can make your
116:48 - own circle morphing example you could
116:54 - tweet it with a gif or whatever any way
116:56 - you like ok so let's get started doing
116:58 - this alright um pause timeout for a
117:03 - second here
117:05 - [Music]
117:10 - what do I want to say here p5 G - B
117:14 - circle morphing
117:30 - okay so see the circle morphing Python -
117:34 - M simple HTTP server and let's open it
117:43 - up an atom desktop circle morphing open
117:49 - and let's get the code going let me say
118:01 - create canvas 400 400 and background 20
118:12 - and so it drives me crazy that's like I
118:17 - change my template and make this a
118:22 - little bigger and put in the JavaScript
118:24 - console and now here we go all right
118:33 - okay
118:35 - so let me come back all right
118:43 - actually before I go over there one
118:45 - thing we could notice here is that the
118:49 - points of an equilateral triangle rests
118:52 - on the circle and if I just for a second
118:56 - think of this as zero degrees this is
118:59 - 120 degrees this is 240 degrees so again
119:05 - I have a think of it if maybe I should
119:07 - start if this is negative 90 I should be
119:09 - a little more thoughtful about the math
119:10 - but I think this is gonna be useful
119:12 - because as I'm calculating these points
119:15 - I want to calculate these points as well
119:18 - to create both of those perimeters at
119:20 - the same time and there's so many
119:21 - different ways you can do this don't get
119:22 - me wrong I'm trying to pick the simplest
119:23 - not the most elegant beautiful or
119:26 - accurate just the simplest maybe it's
119:28 - not the simplest I'm sure you could
119:30 - think of some simpler ways but let's
119:31 - come back over to the code now so the
119:35 - first thing that I need to do is I need
119:37 - to have two arrays I'm going to say let
119:40 - circle paths be an array let triangle
119:45 - and look I don't know why but I'm
119:48 - feeling like I want these to be the same
119:50 - number of characters so circle path and
119:53 - triangle path I want a raise I'm going
119:55 - to put vector objects ap5 vector object
119:58 - is just an x and a y so what I could do
120:01 - here in a really sort of simplistic way
120:04 - just for a second is I could and let's
120:06 - let's change angle mode to degrees just
120:08 - to like save ourselves some some pain so
120:14 - I'm gonna say for let angle equal 0
120:18 - angle is less than 120 angle plus Plus
120:23 - now I probably want to have some sort of
120:27 - variable to keep track of like how many
120:31 - points so maybe let's just make a
120:33 - variable called its spacing right now I
120:35 - this is not great but let's say we're
120:37 - gonna do something every ten degrees
120:38 - just have it be kind of low resolution
120:39 - right now so I say angle plus equal
120:41 - spacing so to get the points along a
120:46 - circular path I can use polar to
120:49 - Cartesian transformation which means
120:53 - that if I have a certain angle and a
120:56 - radius I can calculate the XY here as x
120:59 - equals radius times cosine of the angle
121:03 - y equals radius times sine of the angle
121:07 - all right so that's something that I
121:10 - definitely can do that's how I want to
121:12 - create the vectors for every angle with
121:14 - a certain radius now here's the thing I
121:15 - really would love to derive these
121:17 - formulas for you but I will point you
121:19 - instead toward a video where I do that
121:20 - it's a polar to Cartesian coordinate
121:22 - transformation video pretty sure I made
121:23 - one so now if I come back over here I'm
121:28 - gonna say circle but let's let V and let
121:32 - me just make this a so that it's not as
121:35 - long winded V let's say V for vector
121:38 - equals creon let me actually let X equal
121:41 - and I need some sort of radius so radius
121:44 - let's just say 104 right now x equals
121:49 - radius times cosine of the angle let y
121:53 - equal radius
121:54 - times sine of the angle let V equal
121:58 - create vector I'm being very long-winded
122:00 - here XY and now I'm going to say circle
122:07 - path dot push V so if I run this code
122:14 - and I look at circle path I can see I
122:19 - have 12 vectors and these are all the
122:22 - points 100 comma 0 98 point 4 8 comma
122:25 - symbolic so you can see all these points
122:27 - here now in theory the next point right
122:30 - with the angle at exactly 120 would be
122:34 - and this is a little bit silly that I'm
122:36 - going to do this because I definitely
122:39 - don't need to do it as 3 for loops but
122:41 - I'm just gonna divide it into 3 just for
122:43 - right now
122:45 - because I think this will help me and
122:47 - then and again absolutely all of you can
122:51 - think of magical ways so now this should
122:54 - give me all the points and honestly
122:55 - let's you know let's comment these out
122:58 - because let's just go what happens I'm
123:00 - gonna get to that let's go to the draw
123:01 - part and because let's at least look at
123:04 - how do I draw that perimeter so now I
123:06 - want to say stroke 0 no fill begin shape
123:12 - and shape is it there some fancy new es6
123:16 - way I'm supposed to iterate through an
123:17 - array equals 0 that's not even for each
123:21 - I is less than circular path length I
123:26 - plus plus and now I'm going to say
123:31 - vertex so let me say let V let V equal
123:39 - circular path index I so I want to look
123:41 - at each of those vectors one at a time
123:43 - what am I doing here I wanna say begin
123:44 - shape and and shape to draw that path
123:46 - and I want to say V X V dot Y so let's
123:51 - see what do I get here well there it is
123:54 - that's part of it why is it up there I
123:55 - want to think about everything relative
123:57 - to the center of the of the canvas so at
124:00 - the beginning I'm also gonna say
124:01 - translate width / 2 height / - all right
124:07 - here we go
124:08 - there look that's 120 degrees part of a
124:11 - circle now could I possibly get the
124:16 - triangle path as well let's see if I can
124:20 - so I know that what I could do with the
124:23 - triangle path right here is I could say
124:27 - let a start equal zero
124:31 - let let a end equal 120 and then
124:39 - triangle path dot push I guess I could
124:49 - I'm just sort of working this out in my
124:51 - head right so I have X start Y start and
124:55 - this is very silly what I'm doing x and
124:58 - y and I'm just working this out so I
125:00 - want the start and end of this line
125:01 - that's the side of the triangle I want
125:03 - to start at zero degrees and at 120
125:05 - degrees and so I need to do the start
125:10 - angle for the starting point and the end
125:12 - angle for the ending point and then I
125:16 - want to say create vector X s Y s and x
125:26 - and y n so I just want it this is just
125:29 - me working out the math right of how do
125:31 - I get I just want to get this is like
125:33 - this point and this is this point so if
125:36 - I do that a path between those I'll just
125:38 - draw a straight line so I'm this so many
125:41 - ways this could be improved but let's
125:42 - just see if this is right okay well I
125:45 - have to also draw the triangle path and
125:51 - yeah I guess I'll just do that as a
125:53 - separate loop triangle path and triangle
125:59 - path there we go so you can see now this
126:05 - it's going all the way I didn't have
126:07 - that loop go to the next angle but the
126:09 - triangle side goes all the way that way
126:11 - okay so I've got both now here's the
126:13 - thing what how do I want to do this I
126:16 - want to figure out these points inside
126:20 - of this loop as
126:21 - well so I think what makes sense is for
126:23 - me to actually say start angle equals
126:25 - zero end angle equals 120 start angle
126:33 - end angle then I want to say start V
126:38 - equals create vector radius times cosine
126:44 - of start angle I just want to get those
126:47 - those points I'm gonna kind of do it in
126:48 - one line radius times sine why is
126:53 - everything so complicated start angle
126:56 - all right so I want to get that start V
126:59 - and that end V which will be end a and a
127:07 - so I think I created two vectors and
127:12 - they're really I could just call them
127:13 - start and end okay I wish I could
127:21 - there's so many ways that could be
127:22 - proved but I'm working it out I'm
127:23 - working it out okay now what I want to
127:26 - do is let's just say just to like sort
127:29 - of see what's going on here what if I
127:30 - just say triangle path dot push start so
127:35 - I'm just gonna put that start in a bunch
127:36 - of time so we don't need this anymore
127:38 - this was me just working it out so if I
127:42 - run this
127:42 - okay nothing but now what if I use oh
127:46 - there's a lurk function so there's a
127:48 - loop function right if I use the lerp
127:50 - function if I have a start and I have an
127:55 - end and i lurk between those two values
127:59 - by 10% it's going to give me this point
128:02 - right here and i can do that with a
128:04 - vector I could use a lurk with the
128:06 - vector function linear interpolation to
128:09 - get ten percent from one XY to another
128:11 - XY so what I'm going to do now is say
128:18 - let so this should be the circle vector
128:22 - and the triangle vector equals start
128:28 - start I think if I say start lurk it's
128:31 - gonna give me a new vector
128:33 - mm-hmm I don't know let's see start lurk
128:37 - end and I need you know what I think I
128:40 - need to do I need to say p5 dot vector
128:43 - when I say p5 dot vector dot lerp and I
128:47 - want to say I'm going in between the
128:48 - start and the end and what is the what
128:52 - am I what's how far along am I the purse
128:54 - I'm a certain percentage a / n de- start
128:59 - a so the the amount to lurk is whatever
129:04 - that angle is / start end angle - start
129:09 - angle that's triangle vector triangle
129:13 - vector okay so this is now how I'm
129:16 - getting looks kind of crazy so I'm
129:18 - getting the circular path the
129:19 - traditional way oops by calculating
129:30 - these points one at a time and then
129:33 - while I'm doing that I know this
129:35 - beginning point in this end point so let
129:37 - me calculate these points along the way
129:39 - and let's see if this works
129:41 - a property lerp of undefined skip hold
129:50 - on sorry ah let me uh let me undo this
129:56 - for a second hold on I have to fake this
130:00 - while I'm taking a break let me see what
130:02 - horrible things people are telling me in
130:04 - the chat all right there's a whole other
130:11 - conversation going on that I will so let
130:16 - me now ups so let me try to run this
130:21 - whoops
130:22 - hit refresh Oh uncut type error hmm
130:26 - sketch that jazz line 19 Oh vectors
130:30 - that's an easy one it's just spot vector
130:34 - okay I see the circle hmm so circular
130:38 - path it has a bunch of vectors in it
130:40 - that looks like it makes sense let's
130:41 - look at the triangle path it has a bunch
130:44 - of vectors in it they
130:47 - all look like they're the same point oh
130:50 - I forgot to say the amount well I spent
130:53 - all that time calculating the amount I
130:55 - just say lurk between the start and the
130:56 - end by a certain amount whoo myself a
131:00 - little more room here now let's try this
131:02 - one more time there we go yeah okay so
131:06 - it looks like I have the side of the
131:07 - triangle well this is a lot of work by
131:09 - the way the nice thing about this if you
131:12 - just do the path stuff once you can kind
131:14 - of have it done for all the different
131:15 - ways you want to do your morphing but
131:17 - that said here we go so now there's got
131:20 - to be a clever way I can go all the way
131:23 - to 360 right and I could probably use
131:26 - modulus to change the start and the end
131:31 - right yeah and so by the way there are
131:35 - all these great suggestions in the chat
131:36 - about how to do the morphing in a
131:38 - smarter way and I'll get to that but I
131:42 - want to do it this way just this is this
131:43 - is gonna unlock or like a lock all the
131:46 - potential weight oh I guess I could just
131:48 - like copy-paste this but I can't bring
131:50 - myself to do this so what I want to do
131:52 - is this I want this to go all the way to
132:00 - 360 right I want this to go all the way
132:05 - to 360 and then I want the if angle mod
132:15 - 120 equals zero again this is only going
132:19 - to work from multiple some number that's
132:22 - going to like get to 120 but that's
132:27 - gonna be a multiple of one that's going
132:29 - to divide into 120 with a remainder of
132:31 - zero if the angle mod 120 equals zero
132:34 - then I should be able to say start a
132:37 - equals start a plus 120 and end a equals
132:48 - end a plus 120 right I know I could do
132:50 - plus equals right I should be able to
132:52 - just move those and then I also need to
132:56 - redo these right so by the way I should
132:59 - really
133:00 - make a function let me just make a
133:02 - function polar Karthik polar to
133:07 - Cartesian and it just takes their R and
133:12 - an angle and it returns a create vector
133:17 - this is going to make our life so much
133:19 - less awkward R times cosine of the angle
133:21 - R times sine of the angle and I'm sure I
133:27 - could write that I should write that
133:29 - with the arrow notation but I'm not
133:30 - going to all right so I just want to
133:32 - make this function because that way now
133:33 - I can just say pole I could just say
133:40 - polar - polar what did I call it polar
133:44 - to Cartesian radius start a an end this
133:52 - is at least and radius end a and then
133:58 - here also I could say polar to Cartesian
134:08 - radius a right so this sort of makes
134:13 - things a lot less weird so hold on let
134:16 - me let me just put this back to 120 just
134:21 - to see if this still works yeah what I
134:25 - do
134:25 - polar to Cartesian out saying is not
134:28 - define I did some crazy typing oh I
134:31 - pasted something in there I didn't mean
134:33 - to
134:33 - there we go that's still working now
134:36 - what I can do is I can make this 360 and
134:39 - I can just do this again and reset these
134:46 - variables what will this do yeah yikes I
134:51 - got close so first of all that's the
134:54 - wrong place what is going on so it looks
134:59 - so nice to start with and something
135:01 - crazy happened so what am I missing here
135:05 - if a modulus now these are floating
135:11 - point numbers so is it possible that
135:13 - something weird is happening I don't
135:15 - think so no all right what is wrong here
135:19 - I need less than or equals do I know
135:31 - because I mean I know I won't get to the
135:32 - end but I don't want less than or equals
135:35 - hold on this chat is Oh Oh No well yeah
135:48 - a a equals oh I forgot about a No I'm
136:00 - thinking about this you don't stop
136:05 - incrementing the start and end angles at
136:07 - 360 I don't
136:11 - oh wait wait wait no no this is right
136:17 - amount is this oh you know what this is
136:22 - no this a ah this is the problem okay
136:26 - this is the problem I'm not a percentage
136:30 - of the way through this a has to cycle
136:33 - this this should really be like I write
136:37 - I and then I want and this should be I
136:42 - modulus 120 and here I've got to say let
136:46 - a equal I modulus 120 because I can so
136:52 - why am I doing this
136:53 - the problem is I know I want to go all
136:57 - the way around from zero all the way to
136:59 - 360 but I want to think of these as like
137:03 - 120 degree chunks so that oh no no no no
137:07 - no oh
137:08 - so the percentage of the way through is
137:11 - actually okay I don't even back I have
137:15 - to calculate that percentage of the way
137:17 - through relative to 120 240 240 to 360
137:20 - so coming back here this is actually I
137:24 - this is actually easier than I think
137:27 - I don't I was thinking about I had to
137:29 - change the variable but a will actually
137:31 - work all I need to do is just say a -
137:36 - end a right I don't start a so how far
137:39 - is a since the start compared to the end
137:42 - from the start well no
137:55 - that's totally not right all right hold
137:58 - on what did I mess up here mm-hmm okay
138:02 - so if I just get rid of the triangle for
138:06 - a second
138:06 - the circle is fine doesn't close but
138:09 - that's fixable the triangle the start
138:14 - points
138:19 - let's console.log this let's take a look
138:29 - at this one twenty two forty two forty
138:33 - three sixty three sixty four eighty oh
138:37 - well that's fine
138:41 - that's what I want so I'm missing
138:43 - something else so these points should be
138:48 - right and the amount let's console.log
138:58 - the amount let's make the spacing really
139:02 - high like thirty right whoa
139:16 - why am I getting oh I'm getting a
139:18 - negative number
139:19 - oh don't tell me it's just because start
139:25 - a is wait huh why not just multiply the
139:35 - radius on the end of the vector yeah and
139:38 - I could rotate it you guys are all so
139:40 - smart is the missing semicolon on line
139:44 - 22 yeah okay so that's what I should do
139:52 - right whoever said that in the chat
139:55 - [Music]
139:56 - thank you yo yo gem this would make more
140:01 - sense also
140:04 - yeah how I had to some hold on what's
140:17 - wrong with my triangle hold on whoa what
140:24 - is going on the endpoint is wrong
140:28 - somehow
140:29 - I must have messed up something in this
140:30 - book no R times cosine angle R times
140:34 - sine of angle create vector angle mode
140:38 - degrees absolute value what's going on
140:47 - this makes sense 25 right hold on let's
140:52 - let's draw I have an idea let's say
140:56 - ellipse start X start dot Y let's draw
141:04 - this is at some point my sure this is
141:08 - good as if at all get what what did I
141:13 - miss see this is what happened I try to
141:15 - do more thing before
141:25 - we're oh I got to give it some sighs
141:35 - what is going on mother I've lost lost
141:43 - it
141:44 - start at X star Y and that xn dot Y all
141:52 - right I'm getting 2033 all right hold on
142:00 - a sec
142:08 - these are points
142:25 - start and so why aren't these drawing
142:29 - anywhere
142:47 - hold on a sec
142:57 - let's try this oh wait a second okay so
143:01 - things are correct in theory like
143:09 - there's the triangle how come I'm not
143:11 - getting the points in between correct
143:19 - because and angle is it is there
143:27 - something to the hold on
143:40 - as the order is it because I'm going
143:43 - from like zero to 360 and if I actually
143:46 - start from like negative 90 or something
143:52 - no I'm not drawing over it with
143:54 - background
143:55 - oh this isn't set up yeah I'm sorry I
144:00 - forgot that diamond set up oh I'm a to
144:03 - fish so that was a big waste of
144:04 - debugging I'm trying to draw stuff and
144:06 - I'm in setup okay so that works that's
144:13 - the triangle that's the circle why am I
144:16 - not getting the point so let me if I go
144:19 - here and let me so is the lerp function
144:30 - failing me so a modulus 120 so let's
144:36 - look and the amount is right right this
144:39 - is what I'm printing zero 25% point five
144:42 - point 75 so what is start maybe my
144:49 - understanding of the lerp function is
144:50 - incorrect or maybe the lerp function is
144:52 - broken so what if I said let X equal
145:02 - what am I doing here I'm saying start
145:09 - I'm saying start dot n X x amount plus
145:21 - start dot X times 1 minus amount right
145:27 - let me just do this manually right
145:32 - that's what I'm actually that's what
145:35 - this should be doing
145:41 - whoops and that worked so the lerp
145:48 - function isn't doing what I think it
145:50 - should do let's look up the lerp
145:52 - function maybe we found a bug in p5
146:02 - p5.js org
146:12 - oh boy well it's 6:30 what is going on
146:15 - what time of the Dodgers play 8:20 right
146:19 - [Music]
146:20 - lerp no no p5 vector
146:27 - alert
146:33 - see v1 v2 amount it's supposed to do
146:38 - that
146:40 - so did we find a bug because what's
146:56 - alright let's just let me not draw these
147:01 - I just want to draw these as points just
147:03 - for a second just to see them and I'm
147:07 - gonna say stroke wait - that's hard to
147:19 - see hold on
147:25 - alright I'm gonna let me back up for a
147:32 - second so I don't know where this I'm
147:48 - gonna try to go to a point Matt Chia
147:50 - where you can edit back to and I'm
147:53 - pretty sure kind of like around here
148:01 - would be good and we're okay so
148:13 - something crazy happened here I'm
148:16 - missing a semicolon somewhere that
148:18 - people are very upset about yeah here
148:21 - all right holy sorry hello you still
148:24 - watching I can't believe it if you're
148:25 - still watching that's amazing to me let
148:27 - me try to pretend I back in this video
148:29 - tutorial now okay one one major issue
148:36 - here is that this I should say modulus
148:43 - 120 the this angle I know I was just
148:47 - talking about this in a different way
148:48 - and then there's like my an edit point
148:49 - but what I want to do is just figure out
148:52 - this is like 120 how far along from 0 to
148:55 - 1 so if I always modulus by 120 I'll get
148:57 - thighs between 0 to 120 by the way go on
149:00 - Levin also did a video tutorials that
149:01 - you could watch so if I have that here I
149:06 - have that here whoa wait a second it's
149:14 - fine
149:15 - did I just have a parenthesis out of
149:17 - place it was the semicolon all along no
149:23 - no okay well I don't know what just
149:26 - happened there but I was I must have had
149:30 - something wrong that I actually don't
149:31 - know what it was somebody watching this
149:33 - video will tell me but now look at this
149:34 - I've got the triangle
149:37 - and I've got the circle I by the way one
149:38 - thing that I did is I while I was trying
149:41 - to debug during the spot that I get
149:43 - edited out you can watch the livestream
149:44 - archive for the full thing is I altered
149:46 - the spacing we tried this weird I just
149:50 - I will not question it but somehow it
149:52 - seems to be fine and then what I want to
149:56 - do now oh whoops
149:59 - I'm pushing these here no I should not
150:01 - be pushing those there hold on that was
150:03 - another thing I was trying to debug oh
150:05 - boy
150:05 - Oh remember when I did the morphing
150:12 - challenge the reason why I didn't edit
150:14 - it into a kite challenge because it
150:17 - never worked
150:18 - what's going on this is so crazy I'm
150:24 - still pushing from the debugging I know
150:27 - yes I do zone out and note no that I'm
150:30 - not in that I'm not but I forget that
150:36 - I'm live-streaming especially at times
150:37 - right now hold on a sec all right
150:41 - everybody let me debug this again let me
150:48 - go back to 30 and it's just like some
150:54 - kind of crazy nonsense let me get rid of
150:55 - the circle let's just look at the
150:58 - triangle that's not correct this is not
151:03 - a triangle and shape clothes would be
151:07 - nice but now let me make sure am i doing
151:09 - anything weird here no so what I want to
151:13 - do is also just do stroke wait for
151:17 - alright hold on let me try it at Matt -
151:19 - let me try to get this to a point where
151:21 - maybe the debugging can actually make it
151:23 - in the video so let me go back to here
151:30 - let me go back to here
151:34 - this is not correct let's try to debug
151:38 - this so let me comment out the circular
151:41 - path let me make the spacing a little
151:43 - bit higher but that is not a triangle
151:48 - let me look at what the points are so
151:51 - one way I could look at the points is by
151:53 - saying am I not getting the end well
151:55 - that's it let me let me look at the
151:58 - points by saying point V X well let me
152:02 - draw a circle actually let me just do a
152:06 - separate loop entirely and let me just
152:10 - say fill 0 ellipse V dot X V dot y this
152:17 - is gonna be end up being a long video
152:19 - with a lot of debugging in it look at
152:21 - those points those are the points of a
152:23 - triangle so I'm clearly doing something
152:25 - correct I have them in the wrong order I
152:28 - must have them in the wrong order so
152:33 - this must have something to do with the
152:37 - way I'm starting from 0 and going to 360
152:40 - and the way that it's giving me
152:41 - different ha all right now all this is
152:51 - right all this is right and where I'm
152:56 - getting my triangle start between start
152:58 - and end that's still right so I
153:00 - definitely have the right points I
153:02 - should generate a 1 or 20 degrees size
153:04 - and rotate so why is the word let let's
153:08 - just out of curiosity let's do this whoa
153:13 - all right if I'm just going from 0 to
153:17 - 120 now let me take this out oops okay
153:25 - ah something weird is going on where a
153:29 - modulus 120 equal to 0 is triggering
153:37 - more quickly so why so hold on
153:42 - console.log a modulus 120 let's look at
153:47 - this 0 30 60 90 that's right put this in
153:58 - here okay let's say console dot log
154:04 - oops huh oh oh oh of course
154:11 - oh oh my goodness
154:23 - [Music]
154:34 - zero modulus 120 is zero thank you
154:43 - everybody thank you
154:44 - that was the Brooklyn so I only want
154:52 - this to happen when I don't want this to
154:57 - happen the first time
154:58 - so can I even just say something as long
155:00 - as a is not equal to zero or well let's
155:06 - just do that right now as a fix what was
155:18 - I doing that let's make this 360 again
155:21 - so now what did I do
155:24 - ninety what 23 oh wait I need to put
155:30 - this back in and so this happened again
155:36 - in a bad place I'll figure this out use
155:54 - my overhead camera again yet again I'm
155:57 - doing this is not I'm gonna do the
155:59 - deleting one just scrap this okay hold
156:04 - on
156:06 - we think here so I only when I want to
156:10 - increase the start in the end what an ad
156:14 - and then not but not on that round so so
156:28 - could I do it start at negative 120 no
156:35 - no no that doesn't work I I want to I
156:38 - mean I could just do three separate
156:41 - sections
156:48 - plug the let oh yeah my battery's
156:50 - getting really low isn't it I only have
156:52 - one power for these two laptops
156:58 - I'm the worst programmer ever okay let's
157:03 - see here let's think about this so an
157:07 - equals well hold on let's just do this a
157:14 - equals 120 or a equals 240 these are the
157:20 - only times we want to do it I think just
157:22 - do that whoops
157:28 - that didn't work also great cuz then oh
157:33 - no cause then it'll as soon as a equals
157:36 - 120 and I add to it oh my god I'm losing
157:42 - my mind no but then then it increases
157:45 - this is fine this is so weird
157:52 - let's go through this more methodically
158:01 - a starts at zero a goes up by 30 right 0
158:08 - 30 60 90 120 so I know I don't when a is
158:15 - 0 I don't want to add to it so I
158:17 - corrected that so then once I get to
158:21 - here I want to add to start an end
158:24 - oh but I need to do it before I need to
158:31 - do it when the next one I need to
158:33 - anticipate it is it really as simple as
158:40 - just saying if a plus spacing modulus
158:47 - 120 equals zero is that really what I
158:50 - want yeah
158:51 - [Laughter]
158:54 - [Applause]
159:07 - thank you good night everybody good
159:11 - night thank you thank you thank you for
159:12 - watching good night I'll see you next
159:13 - week on the coding train good bye who
159:20 - somebody was saying this in the chat all
159:22 - along it's very hard for me to read that
159:24 - chat all right so I don't know how to
159:30 - correct this if much you can possibly
159:38 - make sense out of that
159:42 - but maybe okay so let's recreate that
159:45 - moment in a fake way all right everybody
159:49 - just just humor me please
159:51 - you were me please so I'm gonna go back
159:54 - a while a long while long while
160:01 - it's very dangerous what I'm doing here
160:06 - we're gonna debug that again
160:12 - oh this is so bad such a bad idea okay
160:22 - I'm gonna go back to where I said
160:29 - we're to recreate this moment how do you
160:33 - gonna do this to say the same bad music
160:35 - but look I've been here for two hours
160:37 - and 40 minutes so I have even more I'm
160:49 - gonna erase this as if this never
160:50 - happened
160:55 - I'm gonna keep going back
161:13 - I just want to go back to like where I
161:14 - really started having trouble which is
161:21 - like here
161:28 - there we go
161:36 - remember this remember this remember
161:43 - this now I'm going to look like a really
161:45 - smart person I should copy the worksheet
161:54 - go but you're absolutely right before I
161:56 - did all that undo all right all right
162:01 - this is not correct I have to debug this
162:04 - I actually just debugged it and now I'm
162:06 - in the future kind of good go through
162:08 - what I do bugged it but it took me like
162:10 - Alma probably like 45 minutes see no one
162:12 - wants to watch a 45-minute video let's
162:13 - figure out what's wrong so first of all
162:15 - I'm gonna make the spacing I'm gonna
162:18 - make the spacing 30 so that it's less
162:22 - there's less points to work with I also
162:25 - just want to I think I'm just going to
162:28 - not bother drawing the circle so no
162:32 - circle so I could just see the triangle
162:33 - is messed up and okay so what are some
162:38 - of the things that are wrong here ah
162:39 - okay this is definitely wrong this
162:45 - doesn't make sense
162:45 - hey divided by n de- start a so let me
162:49 - figure out why that's wrong so if I'm
162:57 - going from zero to 120 that's gonna work
163:02 - because 60 is 50% of the way through now
163:06 - I'm going from 120 to 240 180 divided by
163:11 - 240 minus 120 what though I'm wrong so I
163:15 - need to take 180 minus 120 actually but
163:19 - another way of thinking that is used to
163:20 - modulus operator so because really what
163:22 - I want to do is go 0 1 2001 2001 20
163:25 - that's what I want to do go 11 made a
163:28 - whole video tutorial also about the
163:29 - modulus operator then I will link to
163:30 - that you can watch alright so this let's
163:38 - take a look at this yeah
163:44 - that is not a tropical no no all right
163:47 - so one thing we could do here that'll
163:49 - help a little bit is I could let me just
163:54 - do this again and let me draw a little
163:57 - circles just to sort of see where those
164:01 - points are then we say fill zero yeah
164:05 - look how interesting these points are
164:08 - kind of in the correct place but the
164:11 - path is going crazy all right hold on
164:13 - hold on a second let's look here and let
164:18 - me conside like because if I just go
164:22 - change this to 120 oh that's not even
164:25 - right Oh hold on a second let's comment
164:28 - this out
164:30 - cool that's right there's something
164:34 - wrong with this modulus thing okay let's
164:36 - think about this let's think about this
164:39 - let's say what are the angles they're 0
164:42 - 30 60 90 120 150 etc what is zero
164:49 - modulus 120 zero
164:52 - so I don't want to all of a sudden add
164:54 - 120 to start end right there at the
164:56 - beginning that's a problem
164:57 - so actually what I want to do is they
165:00 - anticipate it I don't want to do it here
165:01 - I don't want to do it here I don't want
165:03 - to do it here I don't want it here ah
165:03 - before I get to the next one I want to I
165:08 - want to read because I want to go from
165:10 - here to here that's the first part then
165:13 - I want to move start and to do the next
165:15 - part so actually what I want to do it's
165:17 - much simpler than all the other things
165:19 - I've been trying what I want to say a
165:23 - plus spacing modulus 120 that looks
165:31 - right yeah that's right and so now I can
165:35 - do this
165:40 - thank you thank you very much good night
165:42 - that's the end of this video goodbye
165:43 - thank you thanks for watching all right
165:47 - I can't believe I don't know what am i
165:49 - act like well how long have you been
165:50 - watching so far I haven't gotten to the
165:51 - morphing yet but this is good we can go
165:53 - back over there we're getting there
165:55 - I'm sure : Levin did not have this much
165:57 - trouble I can now put the circle back in
166:01 - and I don't need to draw these little
166:03 - ellipses although they're useful to see
166:05 - and we now have the circle and the
166:07 - triangle now it's a little bit a little
166:10 - bit off I could probably think about the
166:14 - angles more thoughtfully but I'm just
166:16 - gonna I'm not I'm not really feeling it
166:18 - right now I'm just gonna rotate
166:19 - everything I think by what is it thirty
166:22 - degrees here we go so and now you notice
166:26 - that those things haven't closed that's
166:28 - no problem I could just add this closed
166:31 - parameter to end shape and now I have
166:35 - the triangle and the circle and I can go
166:37 - back to a space thing of 10 and there we
166:43 - go we now have the circle and the right
166:47 - oh thank you thank you thank you
166:50 - alright so now I need to do the morphing
166:54 - well guess what remember all that time I
166:57 - spent figuring out how to do lurk well I
167:00 - can use lurk here what do I want to do
167:03 - I'm gonna have one more array which is
167:06 - the mole I'm going to call this more
167:08 - paths for morph and what I'm going to do
167:12 - is I'm gonna just decide I'm just going
167:16 - to decide that in the beginning I'm
167:19 - going to just make it a circle so more
167:21 - paths push more paths push that circle
167:27 - point so I'm just going to make them
167:28 - more that I'm just going to start as a
167:30 - circle so actually what I'm going to do
167:32 - now is I don't want to draw either of
167:35 - these I just want to draw the morph path
167:39 - I just want to draw the morph path and
167:46 - I'm gonna do that like this morph path
167:51 - and now okay there's the circle now what
167:54 - are we going to do I am going to say and
167:58 - I'm gonna use the lerp function but I'm
168:00 - gonna do the lurk for each X&Y instead
168:02 - of the p5 dot vector lerp I almost wish
168:04 - I had done that before but for example
168:07 - what if I say V equals V dot X equals
168:13 - lerp oh I need the okay so hold on
168:19 - let see Circle V let's just I'm gonna do
168:23 - some sort of bad variable names but see
168:25 - V is for circle path index I T V is for
168:33 - triangle path index I I guess I could
168:38 - make a new vector each time but I'm
168:40 - gonna say V dot X equals lerp see V dot
168:47 - X T V dot X and let me put 0 in there
168:51 - I'm gonna make a variable amount and
168:54 - let's have amount B happening up here
168:57 - let amount equal 0 okay so I'm gonna
169:00 - alert the X by an amount and the Y by an
169:06 - amount and you know what this is so
169:08 - silly I don't actually need a whole
169:10 - separate array that's all this extra
169:13 - nonsense it could be useful but I'm
169:14 - gonna do this in a really simple way I
169:16 - just want to get an x and a y so I'm
169:19 - gonna say let X equal this let X equal
169:21 - that so I want to get a new x and a y
169:23 - which is some amount in between those
169:26 - two X comma Y so with the amount at 0
169:30 - what do I have all right a circle path
169:37 - where am I using more path still sketch
169:41 - flying 20 get rid of the more path I
169:43 - don't need that anymore
169:44 - so already my amount is 0 semicolon
169:50 - people are yelling at me semicolon
169:53 - semicolon oh and this should be a why
169:55 - these should be wise
170:00 - circle with the amount at zero its
170:03 - circle with the amount at one it's a
170:07 - triangle with the amount at 0.5 it's
170:11 - kind of halfway in between
170:13 - okay now we're kind of done we're kind
170:15 - of done I could just I could do whatever
170:17 - now um what I'm gonna do though is I'm
170:19 - gonna let smoothly oscillate between
170:21 - zero and one so I'm gonna make a global
170:24 - variable just call it I'm gonna call it
170:26 - theta because I not using theta anywhere
170:29 - else and I'm gonna use the sine function
170:31 - I'm going to say amount where do I have
170:34 - that amount variable amount equals sine
170:37 - of theta sine of theta and theta plus
170:45 - equal zero point one so the sine
170:47 - function is a gives us a value that
170:49 - oscillates between negative one and one
170:51 - negative one in one
170:53 - oh but I want a number that oscillates
170:54 - between one zero and one so what can I
170:57 - do there I could use the map function
170:59 - but probably really easily I could just
171:01 - add one and divide by two which is so
171:06 - that's gonna say negative 1/2
171:16 - negative negative one to one adding one
171:19 - becomes between zero and two dividing
171:22 - that by two become zero and one so here
171:24 - we go oh what's happening here
171:31 - everything was going so well but oh do I
171:35 - have like no loop going or something
171:40 - hold on amount let's console dot log
171:45 - amount oh it's just like really slow
171:51 - it's just going really really slow it
171:54 - was a work King Oh because I mean I
171:56 - forgot I'm in angle low degrees and
171:59 - everything I was thinking in terms of
172:00 - radians so let's go up by five there we
172:04 - go whew let's make this stroke weight a
172:08 - little bit wider thicker
172:28 - this is the most basic way the thing is
172:31 - this is all of the work I think because
172:34 - now I could do all sorts of other ways
172:36 - of moving the points around I could cafe
172:39 - them I could start deleting things out
172:40 - of the array added things to the array
172:42 - there's so many possibilities I hope
172:44 - this is a video that makes some sort of
172:46 - sense that you find useful in some way I
172:48 - I am going to do one more you're gonna
172:51 - see one after this that will be released
172:53 - at some point where I'm gonna do this in
172:54 - a really another way it's one of Golan's
172:57 - versions but I'm not sure which one
172:59 - where I'm going to start just I'm gonna
173:00 - take one or I start deleting points so
173:02 - I'm gonna try that next but but make
173:05 - your circle morphing we're gonna this
173:07 - will be on github you can add to the
173:08 - readme to link to your own version of
173:11 - this you can tweet with the hashtag
173:12 - circle morphing lets you could try
173:15 - morphing the circles with square other
173:18 - shapes so many possibilities I can't
173:20 - believe how long this took me and how
173:22 - many problems I had and I hope you
173:24 - enjoyed watching this video thank you
173:29 - thank you thank you very much thank you
173:31 - thank you and good night
173:32 - [Music]
173:34 - [Applause]
173:36 - oh wait wait wait things are there
173:38 - comments yeah I could have used the math
173:45 - function all right okay okay also
173:54 - rotated ooh that would be fun
173:56 - all right um let's take the console log
173:59 - out all right everybody we're gonna do
174:04 - one more video I'm going to circle more
174:13 - thing I might just try to like knock out
174:15 - a few extra things real quick
174:26 - oh whoops
174:32 - that was really painful but fun and now
174:37 - I am going to okay so what I'm gonna do
174:44 - is I'm gonna do this in a totally
174:48 - different way hold on just bear with me
174:56 - I'm gonna delete some Cola so an atom I
175:02 - want to open up circle morphing come on
175:06 - Adam circle morphing to remember what I
175:15 - made that arrow function video all right
175:20 - I'm gonna open up a circle morphing to
175:23 - I'm going to get rid of the triangle
175:26 - path I'm gonna get rid of theta I'm
175:29 - going to get rid of start and end all
175:35 - this I'm just gonna go from zero to 360
175:40 - [Music]
175:42 - spacing and get rid of all of this get
175:51 - rid of all this look how simple this
175:52 - one's gonna be let me get rid of this
176:15 - okay all right everybody
176:26 - oh hi again if you made it through the
176:30 - previous coding challenge on circle
176:32 - morphing
176:33 - wow I'm I'm amazed if you didn't that
176:36 - makes a lot of sense to me you could be
176:38 - here anyway this is gonna be much
176:39 - simpler
176:40 - well famous last words this is probably
176:42 - gonna be like really complicated and I
176:43 - don't check the time maybe this video is
176:45 - like three and a half hours long my
176:46 - glasses are all smudged my hair is
176:48 - falling out it's been like I've been
176:50 - here for like 17 hours straight coding
176:52 - things there's no windows in this room
176:55 - anyway but but here we go
176:56 - okay let's see so what do I have now I
176:58 - have taken my last circle morphing
177:00 - coding challenge and I've made this very
177:02 - very simple sketch it's very little code
177:04 - in it it has an array called circle path
177:06 - it has the spacing variable as a
177:08 - function to convert a radius and angle
177:10 - to of the polar core into a Cartesian
177:13 - coordinate and then it just makes the
177:15 - circle path and draws the circle path
177:17 - here it is and there's the circle it's
177:22 - so nice it's so lovely it's so round and
177:24 - elegant and quiet and I'm happy with it
177:28 - now I want to turn this into a triangle
177:30 - and I don't want to get lost in all this
177:33 - code like I got lost before let's figure
177:35 - out if we can do this in a simpler way
177:36 - and one way I could do this is this is
177:42 - all my notes from before what do you
177:44 - think about it remember I have the
177:45 - circle it's all these points then I have
177:50 - think about a triangle which is really
177:53 - just the path of these points what if I
177:54 - just start deleting these other points
177:56 - so eventually I left wit I have maybe
177:58 - like 90 points around but I'm left with
178:00 - just three points I think I could do
178:02 - this so what I need to do is start
178:06 - deleting the points so one kind of crazy
178:08 - thing I could just try which I know
178:10 - won't really work is I could say I'm
178:17 - gonna say here at the beginning of draw
178:18 - I'm gonna do one per frame while circle
178:23 - path length is greater than three not
178:26 - while if if circle path that length is
178:30 - greater than three if there's more than
178:31 - three points let's get rid of one so I'm
178:33 - gonna say I'm going to say let index
178:38 - equal floor
178:40 - random circle path length that's me
178:43 - picking a random index from this
178:46 - particular rate I should do this at the
178:48 - end of draw cuz I should at least draw
178:49 - it once with all the points so let's do
178:51 - this at the end of draw this videos
178:54 - gonna be so short I'm so excited
178:56 - I didn't code the beginning part but I
178:58 - did in the last video okay so if I find
179:00 - that then I'm just gonna say circle path
179:02 - dot splice index 1 I'm just gonna delete
179:06 - that just it's gone I'm gonna bleed it
179:08 - let's watch this down let's I got a
179:13 - triangle so every single time this is
179:15 - kind of kind of like morph to be a
179:18 - triangle but it's not the equilateral
179:20 - triangle so what I need to do is only
179:24 - pick a valid set of points so what are
179:27 - the valid index values so I need to have
179:32 - an array I'm gonna call indices indices
179:39 - plural of index and while I'm doing this
179:42 - I'm gonna say indices I'm gonna have a
179:46 - variable called let I equals 0 and I'm
179:51 - gonna say Indus indices dot push hi
179:57 - so I want to put all the index values
180:00 - that are in this array into a separate
180:02 - arrange yeah that's probably a better
180:03 - way to do this but this is the way I'm
180:05 - thinking about it first so now what I'm
180:06 - gonna do is instead of picking a random
180:09 - number this is kind of nuts I'm going to
180:14 - first I'm gonna use our pick a random
180:18 - number that's part of the indices then I
180:23 - am going to and so this is indices that
180:28 - link bear with me for a second I think I
180:30 - might need to diagram this hold on
180:36 - this could get edited out it's me
180:38 - erasing stuff me doing my physical
180:44 - therapy which is pushing on the wall let
180:59 - me know so what I'm doing is actually
181:00 - completely redundant and unnecessary but
181:03 - it's gonna allow me to do something else
181:04 - in a moment so I have this array you
181:07 - could imagine this is one array maybe it
181:11 - has 1 2 3 4 5 6 7 8 elements in it 0
181:15 - through 7 and these are all of those
181:17 - points these are all the vectors XY XY
181:20 - these 7 points now I make another array
181:26 - which just has 0 1 2 3 4 5 6 & 7 in it
181:31 - so now I could start saying hey let me
181:33 - take this out of here what number is
181:35 - that oh it's a 3 go delete the third one
181:40 - okay there's a problem here if I'm
181:43 - removing things from the array well let
181:48 - me keep going my thumb and then I'm
181:49 - gonna have to like fix this probably so
181:51 - what I want to do is only put the valid
181:54 - index values in here and then I can skip
182:00 - the ones that are the points of the
182:01 - equilateral triangle that's what I was
182:02 - gonna do this isn't actually gonna work
182:04 - well I'm thinking this through and
182:05 - realizing it's going to work the way
182:06 - that oh don't worry we're gonna get
182:08 - there when we come back let me except
182:10 - why this isn't going to work this was a
182:12 - nice idea because what I was gonna say
182:13 - is so now if I pick the index is this
182:20 - particular element of that array then I
182:23 - could splice it this is gonna cause all
182:25 - sorts of strange and weird problems oh
182:30 - that was kind of fun what would what
182:35 - just happened there index yeah because
182:43 - so I put all the so what I wanted to do
182:46 - is say what I wanted to do up here just
182:49 - bear with me for a second is if a
182:51 - modulus 120 is not equal to zero then
182:54 - it's a valid index I don't want to be
182:58 - able to delete I have a better idea well
183:03 - okay no hold on I got to think this
183:05 - through someone's gonna give me a good
183:06 - idea in the chat probably right we could
183:10 - just mark some points as fixed or
183:12 - something that's probably gonna be
183:13 - better interestingly enough so this
183:16 - isn't going to work why is this not
183:18 - going to work because when I start this
183:20 - is the thing when I start deleting
183:22 - elements of the array then the index
183:25 - values change as the array elements
183:27 - change so while this was like kind of a
183:28 - nice idea like oh let me just put a list
183:30 - of valid things that I can delete once I
183:32 - pick one valid thing to delete then
183:34 - those other things move around and
183:35 - there's I have to like reshuffle all the
183:36 - index guys there's a terrible idea
183:37 - so another thing I could do what's the
183:40 - one thing that's kind of weird that you
183:41 - can do in in JavaScript is that you can
183:47 - attach properties to existing objects so
183:49 - I think this might actually work for me
183:51 - here cuz I have all these vector objects
183:53 - and so let me get rid of this idea of
183:55 - the indices that was an interesting idea
183:57 - I'm how could it get rid of and let me
184:00 - get let me get rid of this here leave
184:02 - just comment this out so what I want to
184:05 - do is with these I'm gonna say I'm just
184:09 - gonna attach a property like active so
184:12 - this this function polar torque at ijen
184:14 - returns a p5 vector object and I could
184:17 - make my own class and make my own object
184:19 - but I'm just going to keep track is this
184:21 - active they're all active to start and
184:23 - then what I'm gonna do is I am going to
184:31 - when I'm drawing them I'm gonna say if V
184:35 - dot active whoops then draw the vertex
184:41 - so this has to go here so as I only draw
184:44 - the active ones so I can instead are
184:46 - actually deleting it I can remove a flag
184:48 - I mean the thing is I was gonna do this
184:51 - in order it would be much easier I was
184:53 - gonna do it randomly probably should
184:54 - just done this
184:55 - order because I could just delete that
184:56 - wanted to talk and then skip the one
184:59 - that I didn't want to delete anyway I
185:01 - don't know why I'm doing it this way now
185:03 - I actually go back to my index thing but
185:05 - I was gonna say I can also say if if
185:11 - angle mod 120 equals zero this is one of
185:15 - the fixed ones so I can also say it's a
185:19 - fixed one this means it can never be
185:21 - deactivated so one thing I could do now
185:25 - and actually this is kind of ridiculous
185:27 - what I'm about to do but I'm just gonna
185:29 - say I'm just going to every time through
185:35 - draw I'm gonna pick a random one I'm
185:41 - going to and I'm gonna say I'm gonna get
185:47 - that vector so circular path index and
185:53 - then I'm gonna say as long as V as long
185:57 - as it's not a fixed one I'm gonna
185:59 - deactivate it now here's the thing ah so
186:02 - this is me doing it randomly I'm leaving
186:05 - all of them there I'm never removing
186:06 - anything from the array and so I'm just
186:08 - deactivating them as long as they're not
186:10 - a fixed one and we should see here now
186:15 - the thing is it's happening in this like
186:18 - weird long amount of time because it
186:20 - still could pick ones so what I could do
186:23 - here now this is kind of ridiculous
186:26 - but I could say what I could do is I
186:28 - could say let active list is a new array
186:32 - every time oh boy I could sure I could
186:34 - do this in a better way but now I could
186:37 - look at everything that's there I could
186:42 - probably use like oh I could use filter
186:44 - I could use filter I won't use it right
186:46 - now but filter is a way of saying like
186:48 - give me a new array by filtering out all
186:50 - the ones that are not active or not
186:51 - fixed that's what I should do so I
186:54 - should say if but I'm gonna just do this
186:57 - a manual way if circle paths are so so
187:00 - here's my vector if
187:05 - it's active and not fixed then is part
187:11 - of the active list and so I can add it
187:17 - to that active list so now I have this
187:20 - I'm rebuilding this AK I can do this
187:21 - because you know it's just like a
187:22 - hundred points I can mess around as much
187:24 - as I want so I'm making this active list
187:26 - and now I'm just gonna pull from the
187:32 - active list and there's no way it can be
187:34 - fixed cuz it couldn't be in there
187:35 - there's no way it could be active so I'm
187:37 - gonna do this and now oops
187:41 - index is not defined sketch line 45 I
187:47 - then whoops so uh skip line 53 I have to
187:52 - make sure as long as as long as there's
188:00 - something there right because when it
188:03 - gets into nothing oh I'm gonna have to
188:05 - put it back oh I gotta put it back
188:07 - maybe I'll leave that as an exercise so
188:09 - let's let me make this let me make this
188:13 - circular path let me make this stroke
188:15 - wait just to let me make the radius 200
188:20 - and let me make the spacing just two
188:24 - degrees so this will be more interesting
188:27 - it's happening really quite slowly but
188:31 - it that's crazy how it jumps to because
188:33 - the thing is it can like it's deleting
188:35 - all these little subsampled ones and you
188:37 - don't really notice it so I think
188:38 - probably an order to deleting them would
188:40 - make more sense so like for example I
188:44 - mean now this is ridiculous that I did
188:45 - all this stuff just to be able to do it
188:46 - randomly but for example if I just took
188:50 - the first one that
188:53 - [Music]
188:55 - right now this is one that Golan has
188:58 - already I believe so now I'm just
188:59 - deleting them one at a time and then I
189:01 - could add them back one at a time so
189:05 - thank you this is yet another example
189:07 - see you can see there's so many possible
189:09 - ways you could think about this I'm
189:11 - gonna be done with this this was another
189:12 - coding challenge I'll leave it as an
189:14 - exercise to put all the points back but
189:20 - you can see these are two possibilities
189:22 - so let me remind you if you go to
189:25 - github.com slash goal on 11 / circle
189:31 - more thing here is where you're going to
189:34 - find many many other ways of doing it
189:37 - so Oh super ellipse formula that would
189:39 - have been a good way treating it as a
189:41 - round and reckon also many better ways
189:42 - than I could have thought of so I did
189:44 - two coding challenges kind of trying to
189:45 - do this triangle two circle morphing I
189:48 - hope that you make some you can tweet
189:50 - them at me hashtag circle morphing at
189:52 - Schiffman
189:53 - you can these the code from my too will
189:55 - be on github and you can and you can
190:00 - what am I talking about
190:01 - I you can link to your own on by if you
190:04 - pull requests on my readme and all of
190:06 - that I plague my new outro music
190:08 - which no but also be out for music
190:11 - afterwards well I hope I hope get a
190:12 - copyright violation for the few sec I
190:14 - got it from a place where it said I was
190:16 - allowed to use it okay thank you thank
190:18 - you goodbye
190:24 - ah all right what time is it now is it 7
190:29 - o'clock oh it's after 7:00 I'm gonna
190:31 - have to go yeah look at all these I'm
190:41 - getting all these excellent suggestions
190:43 - about how to do this in a much better
190:45 - way alright so thank you guys what did I
190:50 - so what did I accomplish today I did an
190:52 - arrow about an arrow function a video
190:54 - about the arrow function kind of made a
190:56 - workflow video which I hope helps I did
190:58 - two circle morphing what did I not get
191:00 - to I don't think I can do any more I
191:03 - will be back next Friday and I didn't
191:10 - get to I couldn't get to do any of the
191:13 - array functions I didn't get to do more
191:14 - o P this I realized I've already done so
191:17 - I don't have to do and I didn't get to
191:22 - word to Veck or the Alexis Gill so next
191:25 - week let's see if next week I can get to
191:30 - this this and this that would be a nice
191:34 - goal for next week well I don't know I
191:44 - don't know if this was useful today
191:48 - I will
191:52 - [Music]
191:54 - read your simple random numbers promises
191:57 - [Music]
192:01 - fifty-three thousand three hundred and
192:04 - ninety-eight sixty-five thousand five
192:08 - hundred and twenty nine forty seven
192:11 - thousand eight hundred and sixty five
192:14 - thousand 397 387 3d7 this is how much my
192:22 - brain is stopped working that's how much
192:26 - my brain has stopped working I like my
192:31 - new alright thanks everybody I'll see if
192:36 - there's a few more questions in the chat
192:39 - and this was great great thank you good
192:42 - night everybody good night and uh you'll
192:44 - be taking home with you a exciting
192:47 - package of coding train lists of videos
192:51 - I didn't make it to I will answer a few
192:55 - questions from the chat
192:56 - oh it just ended it's so abrupt one more
193:00 - time thank you do I know how to play the
193:05 - ukulele I wish I would totally just play
193:06 - the ukulele on YouTube but not make
193:08 - coding videos which I apparently I think
193:11 - oh that was just the alright alright I
193:15 - think I just have to go so thank you
193:18 - guys for thank you everybody for
193:20 - watching I will be back next Friday
193:24 - hopefully earlier in the day I think
193:27 - things maybe go better if I start
193:29 - earlier in the day everybody should send
193:31 - a tweet to math blank on Twitter and say
193:34 - thank you for figuring out how to edit
193:35 - these things because it's a really
193:37 - challenge because the thing is I don't
193:40 - want to edit stuff out I wanted to have
193:42 - the mess the mess is interesting it's
193:46 - what I think people learn from sometimes
193:48 - what people enjoy and yet nobody can
193:49 - nobody's going to sit through an
193:50 - hour-and-a-half video so it's it's
193:52 - finding the goodness and keep it that
193:54 - together so yeah now you can everybody
193:59 - could go watch stranger things and how
194:03 - is processing community today thank you
194:04 - for asking
194:05 - processing community day was wonderful I
194:07 - really enjoyed it I think there were
194:10 - many things about the day that work
194:12 - fantastic I think there's many things we
194:13 - could do too if we do the day again to
194:16 - improve the day and the this sort of
194:19 - like aspects of community and our
194:20 - mission to make the day more inclusive
194:23 - and but overall I had a really wonderful
194:27 - time it was a thrill to meet people who
194:29 - were viewers of the channel
194:30 - I did a oh so there will be a video and
194:32 - support that will come out of my live
194:33 - session there it wasn't live streamed
194:36 - but but all the videos and talks from
194:40 - that day will come out at some point and
194:42 - when they do they won't definitely be on
194:44 - this channel but I will mention it and
194:46 - point you all to the channel maybe we'll
194:48 - see I'm processing as a Vimeo channel
194:49 - I'm able to set up YouTube I'm not sure
194:51 - I the meet in real life shirts from
194:56 - processing Community Day I don't think
194:58 - they're for sale I think they were just
194:59 - made I think they were just made just
195:03 - for I think they were made just for the
195:09 - day maybe maybe we could maybe I don't
195:12 - know maybe they can be put online for
195:13 - sale I've no idea all right
195:16 - oh my god I'm gonna go I'm gonna go I I
195:30 - feel like - I I would give myself a you
195:34 - know BB - for today so I did make this
195:41 - which is nice and oh this cup my coding
195:46 - train mug you you want to know where you
195:48 - could get a coding train bug I couldn't
195:51 - find my yellow mug I lost I left it on a
195:53 - table downstairs hoping I could find it
195:55 - later if you've watched all the way till
195:58 - here you can go to coding train dot
196:00 - store Envy calm and what's weird about
196:03 - this is their only shirts here but if
196:05 - you go down here you can go to coding
196:07 - train mugs and you can actually order
196:09 - one of these two mugs and this one
196:13 - actually as this looks like this good
196:15 - that the coding train mug isn't it nice
196:19 - don't you want one and then this is one
196:23 - that I have
196:24 - it looks like this I can't figure it out
196:33 - anymore there it is all right go home
196:38 - thank you everybody
196:39 - I'm actually going to be an upstate New
196:42 - York flying a drone this weekend
196:44 - for the first time we'll see how that
196:45 - goes
196:47 - all right thank you everybody I'm gonna
196:51 - hit stop I'm glad this didn't crash so
196:53 - really I'm gonna do I I'm really
196:55 - enjoying my you guys should probably
196:56 - probably let me know if it's really
196:58 - annoying because I think it kind of is
196:59 - but it uses me to no end so I'm gonna go
197:02 - one last time I'm gonna be one last time
197:07 - and I am going I'm going to be I'm going
197:10 - to play it one last time
197:14 - thank you thank you everybody this is a
197:16 - wonderful livestream I will see you next
197:20 - week on the coding training bye
197:22 - everybody
197:23 - [Music]