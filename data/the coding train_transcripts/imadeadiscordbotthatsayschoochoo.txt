00:00 - hi I'm very excited about this video
00:01 - I've been recording a whole bunch you
00:03 - could watch the previous ones but you
00:04 - don't have to because if you're ready to
00:08 - write a Discord bot in nodejs you've got
00:11 - node set up on your computer you've got
00:13 - a code editor you're just waiting to
00:15 - type what you need to type in to make
00:17 - your Discord bot work then you are in
00:19 - exactly the right place if you don't
00:21 - have noes set up if you don't know what
00:22 - I'm talking about there's a few videos
00:24 - where I went through some workflow stuff
00:26 - before this that you could go back and
00:27 - watch but let's just get started I'm
00:29 - going to make a list here of what I want
00:31 - to accomplish in this video the first
00:33 - thing I want to do is
00:37 - create I want to create a node project
00:40 - with the discord.js dependency that is
00:42 - the package that I'm going to use to
00:44 - work with the Discord
00:50 - API I need to create a Discord
00:53 - application through the developer portal
00:55 - and I need to make it into a
00:58 - bot
01:01 - I'm going to need to set all of its
01:02 - permissions and add it to the server the
01:05 - Discord server I want to interact with
01:08 - it I'm going need to save the secret
01:11 - token that goes along with the bot that
01:13 - allows me to work with it from my
01:17 - code and then I want to write the code
01:20 - for loading the discord.js package for
01:24 - authenticating with the token and then
01:26 - setting up a slash command so I'll look
01:29 - at what a slash command is but it's the
01:31 - basic primary function of a bot although
01:33 - my plan is after this video is done do
01:37 - all sorts of other fun and whacking
01:38 - weird things that you can do with
01:39 - Discord Bots outside of just plain SL
01:42 - commands but that is a great place I
01:44 - hope to get started I should also
01:46 - mention that I made some Discord bot
01:48 - tutorials like a while back and they're
01:50 - completely out of date and I expect that
01:52 - the one I'm making right now will
01:53 - probably go out of date relatively soon
01:55 - so I'm going to try to minimize the
01:57 - postproduction and editing here and just
01:59 - you know go back to my roots of the raw
02:01 - unedited coding train mess that is
02:03 - trying to make a project and teach it in
02:06 - a
02:07 - video and stutter and and weird and trip
02:09 - over things and all that stuff all right
02:10 - but uh there will be some edits like I'm
02:13 - going on for too long right now so let's
02:14 - just edit right here so good news you
02:16 - actually don't have to watch this video
02:18 - there is a guide that I have put
02:20 - together with a lot of help from several
02:21 - wonderful generous members of the coding
02:23 - train Community which outlines all of
02:25 - the steps and you might just be able to
02:27 - follow it without watching me go through
02:28 - it but if you would appreciate watching
02:30 - me go through it that's what I'm going
02:32 - to do I should also mention that my
02:35 - guide is based almost entirely on the
02:38 - discord.js guide itself so this a little
02:40 - bit confusing there are three things
02:41 - that play
02:43 - here the Discord API is the Discord
02:46 - application programming interface which
02:48 - is a general purpose thing made by the
02:50 - company Discord itself to allow people
02:53 - to write applications that work with the
02:55 - Discord service
02:57 - itself there is also something called
03:00 - discord.js which is a node package that
03:02 - allows you to work with the Discord API
03:05 - from node in JavaScript it is made by
03:08 - other people not officially from the
03:11 - Discord company
03:14 - itself and third there's actually a
03:16 - whole discord.js guide which I'm linking
03:19 - here in the video where you can read
03:21 - lots of information and a nice walkr
03:23 - about all the wonderful things and
03:24 - possible things you could do with
03:25 - Discord JS itself what I'm doing is
03:27 - building on top of the work of the
03:29 - wonderful people who made the discord.js
03:30 - guide to try to make a smaller version
03:33 - of a little guide to help you get
03:34 - started working with discord.js to make
03:37 - something that works with the Discord
03:38 - API I'm going to start from a clean
03:40 - slate I'm in terminal in the desktop and
03:43 - I'm going to make a
03:45 - directory so I'm now in a directory
03:47 - called Discord bot Chucho Chu I want to
03:49 - turn it into a node project I'm going to
03:51 - say npm init and I'm just gon to say- Y
03:53 - so that it sort of fills all the
03:55 - package.json stuff out by default great
03:58 - I know that the node package primarily
04:01 - that I want to use is discord.js so
04:05 - let's install
04:07 - that and I think I'm ready to go but
04:10 - maybe I should open up this project in
04:13 - Visual Studio
04:14 - code I know I'm going to be using ES
04:18 - modules import statements so I better
04:20 - add that to package.json
04:22 - then I need a Javascript file where I'm
04:25 - going to put my code for the bot I'll
04:27 - call it bot. Js let's rename index.js
04:31 - and package.json to bot.
04:33 - JS okay so I've set up the project by
04:37 - saying npm in it and I installed
04:39 - discord.js I forgot to install the EnV
04:42 - package let's add
04:46 - that I did add type module to
04:49 - package.json great so this first step
04:51 - was just to get the node project set up
04:53 - but really it's not worth trying to
04:55 - start writing the code until I've
04:56 - actually made the Discord application
04:58 - itself and to do that through the
05:00 - Discord developer portal now you will
05:02 - need a Discord account I'm not going to
05:04 - show you how to sign up for the Discord
05:06 - service generally in this video um but
05:08 - you know there'll be links in the
05:09 - description for just making a general
05:11 - Discord account but once you've done
05:13 - that as long as you go to the developer
05:15 - portal and you are logged in which I am
05:18 - you will see a page that looks like this
05:20 - now most likely you won't see all these
05:22 - like example Bots and applications just
05:25 - right there I've been making them and
05:27 - over the years in different workshops
05:29 - and and and scenarios what you so this
05:31 - will be blank and what you want to do is
05:33 - create a new application so I'm going to
05:35 - do that I'm going to name the
05:37 - application uh coding train ch ch
05:41 - example I'm going to agree to the
05:44 - Discord developer terms of service and
05:47 - why not add a nice profile picture here
05:50 - there we go I could write more about the
05:52 - description Etc but one thing that I do
05:54 - want to make note of is this application
05:56 - ID it's also sometimes called client ID
06:00 - uh we'll need it later when we start
06:02 - writing the code to be continued now the
06:05 - application is just the start the next
06:07 - thing I want to do is click on bot other
06:10 - thing I'm really going to need but I'll
06:12 - come back and get it later is this token
06:15 - token is the most secret part that you
06:18 - need to hold on to as carefully as
06:20 - possible it's essentially your password
06:22 - for using this bot anywhere the next
06:25 - step is to add a bot to a server with
06:28 - the proper missions now a really
06:31 - important thing for me to say here is
06:33 - you can't just willy-nilly add Bots to
06:35 - servers so what server are you going to
06:37 - add it to I'm going to use the coding
06:40 - Train official Discord server because I
06:42 - am the owner of that server and I have
06:44 - permission to add Bots to it but you
06:46 - will most likely need to create your own
06:49 - server unless you already happen to be
06:51 - part of a Discord server where you have
06:52 - permission to add Bots this is the
06:55 - official coding train server it's what
06:56 - it looks like in the Discord application
06:58 - at the bottom left if you scroll all the
07:00 - way down there is a plus where you can
07:03 - add a server you could obviously join an
07:05 - existing server or create your own so
07:07 - most likely if you want to follow this
07:10 - tutorial you're going to need to create
07:11 - your own so you have permission to add
07:14 - Bots to it back to the instructions in
07:17 - the developer portal you want to go
07:19 - under
07:20 - oo2 and under URL generator here is
07:25 - where you are going to select the Scopes
07:28 - and permissions you want your Bot to
07:30 - have there might be many more things
07:33 - that other future examples and things
07:35 - that I'm going to demonstrate might
07:37 - require but right now the only things
07:39 - I'm going to demonstrate to you are
07:42 - applications. commands that's the slash
07:44 - command I'll show you how that works in
07:46 - a bit in this video and then bot once
07:49 - I've done that there's a lot of other
07:51 - permissions here again we could get into
07:53 - the very granular level of what your Bot
07:56 - can and cannot do but all I actually
07:58 - need is to copy this URL that's been
08:01 - generated at the
08:03 - bottom then I can paste that URL into
08:06 - the address bar hit enter and it's going
08:09 - to come up with this menu an external
08:11 - application coding Train choo Cho
08:13 - example wants to access your Discord
08:15 - account I'm good with that and what it's
08:18 - going to be allowed to do is add a bot
08:20 - to the server and create commands if I
08:23 - had selected some other things those
08:24 - might be listed here it really should be
08:26 - allowed to pick a cake that would be
08:28 - quite nice and I could pick what server
08:30 - I want to add it to it's by default
08:32 - somehow just already pre-selected coding
08:34 - train cho cho so that's great but other
08:36 - servers I could select here I'm going to
08:39 - hit authorize this is always the part
08:41 - that I have the most confusion with
08:43 - because I I I am a human but I'm making
08:45 - a bot I guess it wants to know that a
08:47 - human is making a bot and not a bot is
08:49 - making a bot then I need to two-factor
08:52 - authenticate which I would highly
08:54 - recommend you set up for your
08:56 - account I'm Still Human as far as I know
09:00 - authorize and now it's been added to the
09:03 - server let me go back to my server and
09:06 - see if I can find it I made a private
09:09 - Channel called bot example just for the
09:11 - purpose of recording this video let me
09:13 - try adding it to this channel ah coding
09:16 - train cho cho example bot I'm going to
09:19 - select that I'm going to hit done again
09:22 - I'm pretty sure if you set up a general
09:24 - new server you're not going to have to
09:25 - worry about adding the bot to a private
09:27 - Channel that's just something I'm doing
09:28 - here for the purpose of testing inside
09:31 - of this little sandbox let me at mention
09:33 - the bot just so we can see and make sure
09:34 - it's
09:36 - there okay it's didn't talk back to me
09:40 - that's something that we could have it
09:41 - do once we learn how to do the code but
09:43 - I can also click on it and I can now see
09:46 - this is definitely the example that's a
09:48 - member since today ah it's in waiting to
09:50 - board which is a role that I have uh
09:53 - before people sign the code of conduct
09:55 - so I'm going to take that out um I'm
09:57 - also going to give it this uh bot roll
09:59 - which is special for the channel so
10:01 - anything that you can do with a regular
10:03 - user you can do with a bot user of your
10:06 - Discord server the important thing here
10:08 - is it is offline I need to get it online
10:12 - the other thing I want to make sure that
10:13 - I do is enable developer mode in Discord
10:17 - this is going to be really helpful for
10:19 - various things that I'm going to need to
10:21 - look at in the Discord application
10:23 - itself in conjunction with coding the
10:25 - bot if I go to settings advanced
10:29 - developer mode I already have this
10:31 - checked but this you want to make sure
10:32 - is checked now before I write the code I
10:35 - need to create a special file called EnV
10:38 - I've made videos before about the EnV
10:41 - package and hiding API keys in a EnV
10:44 - file I'm doing the same thing here with
10:46 - the Discord bot the dot means it's a
10:49 - hidden file um there are ways that I'm
10:51 - going to want to ignore that file not
10:53 - include that file if I publish and
10:55 - upload my bot to different places but
10:57 - for now all it means is as part of my
10:59 - node project let me make a separate file
11:02 - called EnV and I'm going to paste this
11:04 - into
11:06 - it now what goes in the file is not one
11:09 - two three 4 I now need to get the client
11:12 - ID from the application the server ID
11:14 - from the server and the token the secret
11:17 - token the client ID is the same as the
11:19 - application ID I could copy it here it's
11:22 - also under oof to right here under
11:24 - client ID so let's copy that one paste
11:28 - that here the server ID is the specific
11:31 - server of the bot now Bots can live in
11:34 - multiple servers but right now I want my
11:36 - code and my bot to only work in this one
11:39 - particular server if you want to make a
11:41 - bot that you're publishing publicly that
11:43 - anybody could add to their server there
11:45 - are other kinds of restrictions and
11:47 - things you need to worry about but for
11:49 - us right now this is essentially just a
11:50 - developer experiment so I don't have to
11:53 - do much Beyond just get that server ID I
11:55 - can rightclick the name of the server
11:57 - and go to copy server ID that's there
12:00 - because I have developer mode on paste
12:03 - that
12:04 - here and then it's time for the token
12:07 - back to the developer portal under bot
12:10 - and I have to reset the token if I don't
12:13 - have the token there's no way to get it
12:15 - without resetting it to a new one it's
12:17 - telling me my bot is going to stop
12:18 - working which it doesn't work yet anyway
12:20 - so that's fine but if I had already made
12:22 - it and I want to reset the token I've
12:23 - got to make sure to update it I've got a
12:26 - two Factor
12:27 - again and then I want to copy this token
12:30 - and put it
12:31 - in now you might be saying yourself you
12:34 - fool your token is visible in your
12:36 - YouTube video and yeah that's a problem
12:40 - but don't worry by the time you're
12:41 - watching this I'm G to have reset it but
12:43 - if you were doing a tutorial live like
12:45 - you wouldn't want that token to be
12:46 - visible guess what it is time to start
12:50 - writing the code so the first thing that
12:52 - I need to do is import the things that I
12:55 - need from the various node packages so
12:58 - let me copy copy paste these two lines
12:59 - of codee and put them into bot. JS now
13:03 - if this syntax is unfamiliar to you I'll
13:04 - refer you back to the previous video
13:06 - where I covered how to make a node
13:08 - project and how imports work but what
13:10 - you can take away from this right now is
13:12 - that I'm going to need from the
13:13 - discord.js package the client the events
13:17 - and the Gateway intent bits so that's
13:20 - something I want to talk about and
13:21 - investigate further but right now I know
13:23 - I just need those things and I need this
13:25 - function called config from EnV so the
13:28 - very first thing I want to do is execute
13:30 - the config function what that means is
13:34 - it will now Place everything that's in
13:36 - this file under client ID server ID and
13:39 - token into a variable called process.env
13:42 - to confirm that I'm going to say
13:45 - console.log process.env let's now run
13:49 - this code I realized just now that in
13:51 - some of my earlier videos I forgot to
13:53 - show that VSS code actually has a
13:54 - terminal built into it so we could
13:56 - actually do all this from there I could
13:58 - go to view uh terminal and I could start
14:01 - writing my terminal commands in here I'm
14:02 - just kind of out of the habit of doing
14:04 - that I'm going to work separately in my
14:06 - uh separate terminal application but you
14:08 - should certainly feel free to do that
14:11 - instead oh my goodness I forgot so one
14:15 - of the wonderful things about
14:16 - process.env this idea of environment
14:19 - variables is there are ton of them on my
14:21 - computer there are all sorts of things
14:24 - and in fact if I were on a web server on
14:26 - a different machine there'd be different
14:28 - environment variables but you can see
14:30 - here that the client ID the server ID
14:33 - and the token are here on the bottom so
14:35 - just to be a little bit more explicit
14:37 - about it if I were to say do server
14:40 - ID I can now see that server ID is
14:43 - accessible in the code but not saved in
14:45 - the code I'm doing all of this because I
14:47 - don't want to have
14:49 - this this is a bad idea the next step is
14:53 - to authenticate and actually log into
14:56 - Discord from the bot itself
14:59 - I'm creating a new client object that
15:01 - client class is something I imported
15:03 - from the discord.js package and it needs
15:05 - as an argument I forgot I have to look
15:08 - it up in my
15:10 - guide so in future things that I might
15:13 - want to try with a Discord bot maybe I
15:14 - need other properties here but the core
15:17 - base property that I need is called
15:20 - intents and I need an array that keeps
15:23 - track of all of my intentions
15:26 - essentially now why is it called Gateway
15:29 - intent bits kind of a funny name for
15:31 - this variable that holds all of these
15:33 - other constants like guilds why is it
15:36 - called guilds well Discord was
15:38 - originally created as a chat platform
15:40 - for gaming so you can see where the
15:41 - guild terminology stems from and in the
15:44 - developer docs I can see this list of
15:46 - intents all the intents and Gateway
15:49 - events associated with them so this is
15:51 - something you'll have to pay more
15:52 - attention to as you think about what
15:55 - other things you want your Bot to do but
15:58 - at present I essentially don't want it
16:00 - to do anything it's just going to
16:02 - respond to one single basic slash
16:04 - command so I just want to make sure it
16:06 - essentially has the permission the
16:08 - generic guilds intent intent is a word
16:11 - for intention what are this bot's
16:13 - intentions we've got to list them in
16:15 - advance to make sure it's allowed to do
16:17 - those things and the reason why it's
16:19 - called bits is actually these variables
16:21 - are holding numbers and based on the
16:23 - binary values of these numbers different
16:25 - bits being on or off it turns off on and
16:27 - off different kinds of so that's a whole
16:29 - other discussion I'll include some more
16:31 - links to information about how that
16:32 - works in this video's description so
16:35 - next I want to handle different kind of
16:37 - events associated with the Discord bot
16:39 - one of them would be just being ready
16:40 - logged in so I can call the once
16:43 - function for any event that happens just
16:46 - one time and I can access from the
16:48 - events property that I imported the
16:52 - client ready event and then I can give
16:54 - it a call back function I could write
16:56 - that in as an anonymous function here
16:58 - but just to be super friendly let's call
17:00 - it ready
17:01 - Discord and let's define the
17:04 - function and I'm just going to say
17:06 - console log the train
17:09 - emoji and I could put in here I think
17:13 - client.
17:14 - user. tag maybe is a way of getting just
17:18 - to make sure uh I'm getting the actual
17:20 - correct bot name but you can see that
17:22 - this client object that I've created has
17:23 - different properties on it like its user
17:25 - tag all right let's try running this
17:30 - that didn't seem to work oh I realize I
17:33 - forgot so this is the event for when
17:35 - it's logged in but I actually have to
17:36 - tell it to log in so I also want to say
17:38 - client. login and what do I need to log
17:42 - in I need its
17:45 - token the token is hidden away in
17:48 - process.env because of how I'm using the
17:51 - EnV package okay now let's try running
17:53 - this great it's logged in let's go back
17:56 - and look at the Discord server
17:58 - look the green light is on because this
18:01 - bot is online and it's logged into the
18:03 - server as soon as I hit control C I've
18:05 - quit the Discord bot code now it should
18:08 - log out I have a feeling if I go back
18:10 - and look it's still going to be green it
18:11 - sort of takes a minute for it to realize
18:13 - it's not logged in in my experience but
18:14 - at some point when we check back it
18:15 - should say offline all right so on the
18:18 - one hand I could stop here because this
18:20 - is the basic setup but the bot can't
18:23 - actually do anything right now besides
18:24 - log in one of the ways to interact with
18:27 - Bots is through something known as a
18:29 - slash command so before but right now
18:31 - we're on discord. js14 I forget what the
18:33 - version of the Discord API is but a long
18:37 - time ago like you know six months ago a
18:39 - year ago two years ago um it used to be
18:42 - that if you wanted to interact with a
18:44 - bot there was kind of a convention where
18:46 - you would say something like uh
18:47 - exclamation point cho cho and maybe you
18:49 - would write into your Bot code oh only
18:52 - look for messages that start with an
18:54 - exclamation point because you wouldn't
18:55 - want a bot to be interacting with every
18:57 - single message ever posted in the server
18:59 - although that could be fun and maybe
19:00 - we'll come up with some reasons why we
19:02 - might want to do that for experimental
19:04 - playful purposes but since that
19:07 - convention Discord the API adopted
19:10 - something called a slash command so if I
19:12 - type slash I'm going to start to see all
19:14 - of these possible commands that are
19:16 - available for all the different Bots
19:18 - that are in the coding train server so
19:20 - for me to have my bot interact with a SL
19:23 - command there are probably a variety of
19:25 - ways you can do this I'm following the
19:27 - Discord JS guide I'm going to create a
19:30 - separate JavaScript file for that
19:32 - command so I'm actually going to create
19:34 - a separate folder I'm going to call that
19:36 - folder commands then I'm going to create
19:38 - a file in that folder I'm going to call
19:40 - it uh because my Hello World command
19:42 - will just be Choo Cho so I'm going to
19:44 - call the file chuch cho. JS in that file
19:48 - I need to import other things from the
19:50 - Discord JS uh package things that I
19:53 - didn't import as part of uh this sort of
19:56 - main code this main but .js file I don't
19:59 - have them memorized so I'm going to go
20:01 - to my guide and actually all it is is
20:03 - the SL command Builder so uh this is
20:06 - something you'll see in a lot of the
20:08 - Discord JS API how it works if I want to
20:11 - have a message attachment I need a
20:12 - message attachment Builder if I want
20:14 - like a button I need a button Builder so
20:16 - this idea of Builders is very common
20:18 - here I want to build a slash command the
20:21 - way that I do that is by creating a
20:23 - variable um I'm going to call that
20:25 - variable data for a very specific reason
20:27 - I'll get to in a bit
20:28 - and then I'm going to put in that
20:30 - variable a new slash command builder
20:33 - then I can start to set its properties I
20:35 - can say like data set name uh it's going
20:38 - to be called cho cho data. set
20:41 - description it's going to be called uh
20:45 - uh the description will be like this is
20:46 - a demo choo
20:48 - choo you know you can think of a better
20:50 - description when you do it and even
20:51 - though I did this as three separate
20:53 - lines of code when you look at my
20:54 - example it's kind of a nice uh nice
20:56 - thing you could do is just chain these
20:58 - so rather than have a separate line of
20:59 - code I can just say make the new slash
21:01 - Builder do set name and then uh from
21:04 - there I can even change doet description
21:07 - and then when I save my auto format will
21:09 - kind of put line breaks there because
21:11 - that line of code is too long now the
21:13 - next thing I need to do is write a
21:15 - function that will handle any
21:17 - interaction with this command I'm going
21:19 - to call that function
21:23 - execute and it's going to receive as its
21:25 - argument an interaction object
21:28 - now you don't have to call it execute
21:30 - but again the naming is specific here
21:33 - because I'm going to do something else
21:35 - that is going to look for something
21:37 - called data and something called execute
21:38 - I get to that later the other thing you
21:40 - might notice here is the keyword async
21:43 - so I'm using promises the concept of
21:46 - promises in this code with the keywords
21:48 - async and await if that's completely
21:51 - unfamiliar to you I will link to a whole
21:53 - set of videos where I go through that
21:55 - the main thing you need to realize is
21:57 - that certain things things you do with
21:58 - the Discord API are asynchronous events
22:01 - it takes some time for them to complete
22:03 - and if I want to write my code in a way
22:05 - where I'm sequencing them properly I'm
22:08 - going to need to use the async keyword
22:10 - to describe the function that has
22:12 - asynchronous events as part of it and
22:14 - the await keyword to make sure I'm
22:15 - waiting for the asynchronous events to
22:17 - complete and what is the asynchronous
22:20 - event I want to happen I want to reply
22:22 - to the
22:24 - interaction so again this bot barely
22:26 - does anything you can actually have
22:29 - commands that take different arguments
22:31 - that play a game with you that reach out
22:32 - to other apis that post images but I
22:35 - just want a Hello World style bot that
22:38 - sets up a command and when you execute
22:40 - the command it just posts a reply to the
22:43 - server itself now something important
22:45 - here that I've left out of the code this
22:48 - separate file is one that I'm going to
22:50 - need to reference and work with from
22:52 - this main bot. JS file how could I
22:56 - possibly do that well I'm doing doing
22:58 - that already actually I'm referencing
23:01 - objects and functions from Discord dos
23:03 - and from EnV I want my chuch cho. JS
23:07 - file to be something that I can actually
23:09 - import into this file how do I make
23:13 - things in other files that I can import
23:16 - into other files guess what I just need
23:19 - one more keyword the keyword export so
23:23 - now you're learning a little bit about
23:25 - making your own modules that can be
23:27 - imported into other JavaScript files in
23:30 - a node.js project and in fact I can add
23:33 - that right now I'm going to say import
23:36 - start because I just want to get
23:37 - everything as
23:40 - Chuchu from chuch cho. JS so I think
23:44 - this will work oh no it's in commands
23:46 - commands cho. JS I might need a DOT
23:50 - slash here just to say that it's in the
23:52 - root directory of this project but I'm
23:55 - not entirely sure we'll try it both ways
23:57 - but I think best practice practice would
23:58 - put that slash there so there's another
24:01 - step and if I go back to um here we can
24:05 - see like I'm at the end of this create a
24:07 - command step and the next step is deploy
24:10 - the commands so this is a little bit
24:12 - weird this is not actually code that's
24:14 - part of the bot itself this is a
24:16 - one-time operation that essentially says
24:19 - to the Discord server hey this bot is
24:21 - going to have these commands associated
24:23 - with it so I only need to do this once
24:25 - now if I were to change the name of a
24:26 - command or ADD new commands then it
24:28 - would have to do this again but one time
24:30 - only thing I'm not going to go through
24:33 - the code for what's in deploy commands I
24:35 - actually just pulled it entirely from
24:37 - this guide here under registering SL
24:40 - commands I might have made a few little
24:41 - adjustments to it in case I did
24:42 - something differently in my code but
24:44 - essentially you could just copy paste it
24:47 - by the time you watch it this will be a
24:49 - link here's the code I'm going to copy
24:52 - it I'm going to create a file called
24:54 - deploy
24:56 - commands. JF
24:58 - I'm going to paste this in here and if
25:01 - I've done everything correctly if I've
25:03 - set up my client ID my server ID my
25:06 - token this should just work you're also
25:09 - going to notice here if data in command
25:12 - and execute in command so it's looking
25:15 - for those exports called um data and
25:19 - execute so that's why I needed those
25:21 - function names because the deploy uh
25:24 - commands code is specifically looking
25:26 - for those all right let me try running
25:29 - that great started refreshing one
25:32 - application commands successfully
25:33 - reloaded one application commands so
25:35 - that means it worked if you get an error
25:37 - there it might be like a token or client
25:39 - ID is wrong you might have not named it
25:41 - data or execute properly your file might
25:44 - be in the wrong directory like maybe
25:45 - it's not in a file in a folder called
25:47 - commands so look for those things but if
25:49 - you followed my instructions this should
25:51 - hopefully just work now if I log my bot
25:55 - in by calling bot. JS and go back to
26:00 - Discord and type in slash that command
26:04 - is listed there so let's just try
26:07 - running it I'm gonna hit
26:12 - enter it didn't respond so I did
26:16 - register the command I did write the
26:19 - code for what I want to happen when the
26:20 - command is executed but I need to handle
26:24 - it from here in the main bot code last
26:29 - step there's another
26:33 - event so client. one is for events that
26:36 - can only happen once client. on is for
26:39 - events that could happen multiple times
26:40 - like somebody could issue the command
26:42 - multiple times so the event I need to
26:44 - handle is interaction create then I need
26:47 - a function to handle
26:48 - that and now it's time for me to write
26:51 - that
26:52 - function the argument to that function
26:54 - is an interaction object I want to First
26:57 - make sure it actually was a
27:00 - command if that interaction wasn't a
27:02 - command I want to just get out of here
27:04 - other kinds of interactions I will get
27:06 - into later but right now I'm only
27:08 - handling interactions that are commands
27:10 - then I just need to check what was the
27:12 - command
27:13 - name do uh command name equals uh Chuchu
27:19 - and I should probably use a more strict
27:21 - equality there so if the command's name
27:23 - was Chuchu then I want to run the
27:28 - execute function that's part of the cho
27:30 - cho JS file that I've
27:32 - imported and I want to execute that
27:34 - interaction so there's not a lot here
27:36 - this is essentially saying I want to
27:38 - handle any interactions and then Farm
27:39 - those off to my commands files so I
27:42 - could have multiple command files I
27:44 - could load multiple ones I could check
27:46 - to see which commands it is and execute
27:48 - the proper uh you know execute function
27:50 - I will say if you have more than just
27:52 - one or two or three this if statement
27:55 - isn't the best way of doing it but this
27:56 - is perfect I think for a quick hello
27:59 - world let's just get it working demo I
28:01 - forgot something important that I just
28:03 - realized the execute function oh this is
28:07 - I I I almost shouldn't have realized
28:08 - this because I should let myself get the
28:10 - error but the execute function is
28:12 - asynchronous I need to await it to
28:15 - finish and I can't say await unless I've
28:18 - labeled the handle interaction function
28:20 - async so this ready Discord event
28:22 - doesn't need to be asynchronous because
28:24 - all it's doing is console logging that's
28:25 - not an asynchronous event it's just
28:27 - console logging but handling the
28:29 - interaction is asynchronous okay I think
28:32 - I'm ready to go by the way there are
28:35 - different tools which will automate the
28:37 - rerunning your node program over and
28:40 - over again anytime you change the code
28:41 - something called node Monon or node
28:43 - monitor or something you could use but
28:44 - I'll maybe demonstrate that in another
28:46 - video Let's just run it
28:48 - manually okay it's running I go to
28:52 - Discord the bot is online I do my slash
28:56 - command uh run this
28:58 - [Music]
29:01 - command it
29:03 - worked so that's actually it that's all
29:05 - the pieces for a Hello World Discord bot
29:08 - essentially that doesn't do very much
29:11 - but if you can get this set up and
29:14 - running if you can follow these
29:15 - instructions if you can piece all the
29:16 - parts together then you are on your way
29:19 - now there's a whole bunch of things I
29:21 - haven't covered number one probably the
29:22 - most important thing is it's much more
29:24 - interesting to have a command that can
29:25 - take an argument for example I think
29:27 - have a uh GIF command let's try running
29:30 - this one and I can give it a query which
29:31 - is like a argument and I can get a
29:34 - kitten GIF so there's lots of other
29:37 - kinds of ways that you can interact with
29:39 - commands that are much more
29:41 - sophisticated what kinds of things would
29:43 - you like to make it's going to be a
29:45 - little while before I make the next
29:46 - video in the series so you can let me
29:47 - know in the comments I can try to design
29:49 - some examples and demonstrations you can
29:51 - also have Bots do all sorts of things
29:53 - respond to Emoji reactions play games
29:56 - with you do things outside of the slash
29:59 - commands uh I will explore that in
30:01 - future videos as well I should also
30:04 - mention that I'm doing something kind of
30:05 - strange here uh you you can just stop
30:08 - watching now but if you want to give me
30:09 - a minute I'm gonna just talk about the
30:12 - pieces of where they are and how they're
30:13 - working on the Whiteboard uh if you want
30:15 - to um kind of think about how you might
30:18 - want to have your Bot running in the
30:20 - future so the thing that's strange about
30:23 - what I've done is on my
30:25 - laptop I am both running the Discord
30:28 - client like the Discord the actual
30:29 - Discord
30:31 - application that's the thing that I as a
30:33 - human type into and read people's
30:34 - messages and react to them I'm also
30:37 - running this like
30:39 - nodejs bot essentially and you would
30:41 - think like oh it's a bot like it should
30:43 - just communicate with the Discord
30:45 - application but the whole point of this
30:47 - is that your Bot doesn't isn't running
30:49 - on your laptop your Bot you probably
30:51 - want to deploy somewhere else to a
30:53 - server that's always on and ultimately
30:56 - the Discord API the Discord web service
31:00 - is you know hosted on a server somewhere
31:03 - in a closet or underground bunker but
31:06 - sure we could call it the cloud and
31:07 - essentially what happens is your Bot is
31:10 - logging in and authenticating here and
31:13 - sending messages here and your your
31:16 - client is also connected to and
31:18 - receiving messages and sending them this
31:20 - way other people who happen to be
31:22 - running Discord are also seeing the
31:25 - messages that your Bot is uh doing and
31:28 - also able to send commands that will
31:30 - then interface with the bot and then
31:32 - send them back and back and forth so
31:33 - that's important to realize that this is
31:35 - a distributed network of clients that
31:38 - are all connected to a centralized
31:39 - Discord server and your Bot is just an
31:42 - automated one that happens to be running
31:44 - from node rather than some user
31:46 - interface so this maybe was something
31:48 - that I'll have to address later but if
31:49 - you want your Bot to be running without
31:51 - you having to just like run it manually
31:53 - from terminal and then if you turn your
31:54 - computer off it's stopped you'll have to
31:56 - find a place to deploy it and I can
31:57 - cover that in other videos and provide
31:58 - some resources here as well and so I
32:01 - should also leave you with like if you
32:02 - want to explore this more you should
32:04 - really look at the discord.js
32:07 - documentation so I already prepared to
32:10 - walk through this tutorial so I've kind
32:11 - of pulled the pieces out that I need to
32:13 - know but if you want to look at what all
32:15 - the things that are possible the names
32:17 - of the functions the different things
32:19 - I'm using this is really where you want
32:21 - to look and I'll dig into this more in
32:24 - the next video so let me know if you got
32:26 - your Bot working
32:27 - share that with me uh there's actually a
32:29 - place on the coding train we'll include
32:31 - this as part of the passenger showcase
32:32 - you can share a bot and then things you
32:34 - want to try that you don't know how to
32:35 - try that you think would be fun for me
32:37 - to do in a video leave those in the
32:38 - comments or better yet join the coding
32:40 - train Discord itself and let's chat
32:42 - about it all right thank you so much for
32:44 - watching this I hope you get a bot
32:45 - running I hope it's fun for you and I'm
32:47 - sure you're going to be very creative
32:49 - with it I don't know what I'm talking
32:50 - about I gotta go I've been recording
32:52 - these videos do you notice I'm wearing
32:53 - the same clothes in like five videos
32:55 - straight I've been doing this all day
32:56 - long time for me to do something else
33:01 - [Applause]
33:01 - [Music]
33:13 - goodbye