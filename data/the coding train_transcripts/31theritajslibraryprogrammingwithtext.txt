00:00 - hello welcome to a coding rainbow video
00:02 - the topic for this video is Rita what is
00:06 - Rita how can I use it how can you use it
00:08 - who are you who am i I don't know any of
00:10 - the answer to these questions but I'm
00:12 - going to attempt to talk about all of
00:13 - them Rita is a software toolkit for
00:15 - computational literature it is developed
00:18 - by Daniel how it is an open source
00:20 - project that you can find on github and
00:22 - you can use it with a variety of
00:24 - platforms most notably Java and also the
00:27 - processing programming environment as
00:29 - well as JavaScript and in the browser or
00:32 - with server-side programming with node
00:34 - and if you dive into it more you might
00:35 - find that there are other ways of
00:36 - approaching using Rita but what I'm
00:38 - going to do in this video is show you
00:40 - how to use Rita with client-side
00:43 - JavaScript with p5.js and what kinds of
00:45 - strange and interesting language
00:46 - experiments you can make so Rita has a
00:50 - wide variety of functionality so I'm
00:57 - going to click here to the reference and
00:58 - you can see like oh my goodness
01:00 - look at all these functions there's so
01:01 - much I can do with it but let me let me
01:03 - talk about sort of tube key to key
01:07 - aspects of the Rita library one is there
01:11 - is an object called a Rita string or RI
01:13 - string this is something that you can
01:16 - kind of feed your own text into if you
01:22 - take your string and make it a Rita
01:24 - string then you can analyze that string
01:26 - you can say things like well what are
01:28 - the parts of speech of these words how
01:30 - many syllables do each word have you can
01:33 - sort of analyze this particular string
01:35 - of text in a variety of ways
01:37 - another thing that Rita has is a Rita
01:39 - lexicon what is a lexicon so this is a
01:43 - kind of key term for a lot of the videos
01:46 - and things that I intend to do who they
01:48 - use videos which is a lexicon is another
01:50 - word for vocabulary you can think of it
01:53 - as a giant list of words a dictionary in
01:56 - a way as a lexicon a dictionary has a
01:57 - lot of other metadata associated with
02:00 - those words definitions pronunciations
02:02 - that type of thing and Rita has a
02:04 - lexicon built into it
02:06 - I believe the libraries that I'm gonna
02:09 - another library that I'm going to show
02:10 - you called NLP compromised as
02:12 - lexicon built into it word Nick which is
02:15 - a web service that you can query you can
02:18 - send it queries about words and get lots
02:19 - of information back essentially that's a
02:21 - giant lexicon in many ways so this is
02:25 - the kind of key aspect of Rita that you
02:27 - can use now one thing I should mention
02:29 - is a lexicon is not a small thing
02:32 - imagine if you had a text file with
02:34 - hundreds of thousands of words in it and
02:36 - all their definitions this would be a
02:37 - big file but Rita has it built into it
02:39 - itself but in a moment I'm going to
02:41 - download the library and I unfortunately
02:43 - don't remember the exact names but you a
02:45 - JavaScript library usually has a name
02:47 - dot extension J s so there is the Rina j
02:52 - s which is just all of the stuff - the
02:55 - lexicon but I'm going to download and
02:57 - use Rita - full J s which has the
03:01 - lexicon built into it and I don't know
03:03 - if I'm missing other distinctions
03:04 - between these two things but that's sort
03:06 - of the main idea here
03:07 - so let's come back and let's figure out
03:10 - how we can get started using Rita in a
03:12 - p5 sketch so first of all
03:15 - Daniel how who maintains this project
03:17 - has a lot of great information about how
03:19 - to use it here on github in all these
03:20 - environments so I'm not going to go and
03:22 - also I would encourage you to look at
03:24 - Ken I contribute and you can see if
03:28 - you're interested in contributing to the
03:30 - development of Rita I encourage you to
03:31 - do so as well ok so what I want to do
03:35 - first is I'm going to go here under dist
03:37 - and you can see here we go I was right
03:40 - there's Rita touch a s there's the
03:42 - minified version of minified version
03:43 - with Java Script library is you know
03:45 - taking all the line breaks out and
03:47 - making variable names shorter so you
03:49 - kind of get this like smaller file but
03:51 - it's not as readable code wise just for
03:53 - the sake of clarity I'm going to use
03:56 - Rita - folce s so you can see this is a
03:58 - big file 1.5 6 megabytes I'm going to
04:01 - click download and it's just opening it
04:06 - up in Chrome for me so I'm going to hit
04:08 - save command s and I am going to a
04:12 - coding Rainbow a to Z a week 3 Rita Jo
04:17 - Chasse so I have a I have a project here
04:20 - like most of my project my web sketches
04:23 - are I have an HTML file I have my
04:25 - JavaScript code
04:26 - have a libraries folder so what I'm
04:28 - going to do here is in the libraries
04:30 - folder I also want to just save Rita
04:32 - full JSI Pro I'm sure it would attach
04:35 - that j/s extension automatically but I'm
04:37 - typing anything there to be very secure
04:39 - in its use okay there we go
04:41 - Rita's is read enough - full digest is
04:43 - in that folder and now I can go back to
04:47 - my program and I can run it now of
04:50 - course I don't know what that weird
04:53 - little error is but oh you know what it
04:56 - is it doesn't exist
04:57 - okay hold I'm going to go back here we
04:58 - can see there we go I've still got my
05:01 - sketch I'm viewing my sketch in the
05:03 - browser but one thing I want to do now
05:05 - also is I want to consume the HTML file
05:10 - I want to make sure I have a reference
05:12 - also to the reader library so I have a
05:13 - reference to p5.js mp5 Dom das and now I
05:17 - need to just add one more libraries Rita
05:21 - - full dot J s so now I should have
05:26 - access to that Rita library and you can
05:28 - see that I that in fact it's working a
05:30 - lot of JavaScript libraries if just when
05:32 - they initialize they spit out some some
05:35 - information in the console and Rita here
05:36 - is spitting out what version it is okay
05:39 - the whiteboard cam is squished - Kent
05:42 - okay I'll come back to that later so
05:46 - sure I'm looking at the live chat in
05:47 - this video and I shouldn't be doing that
05:49 - because you're probably watching this
05:50 - video with no live chat but anyway okay
05:53 - so what's something that I can do first
05:55 - of all so let me just say let's let's
05:58 - look at some let me do some stuff in the
05:59 - console for you and then we'll maybe try
06:00 - to create a little experiment I'm going
06:03 - to write a sentence I'm going to say it
06:04 - was a dark and stormy night so now I
06:10 - have a string with it was a dark and
06:12 - stormy night one of the first things you
06:14 - might want to play with is actually
06:16 - create a Rita string an RI string out of
06:19 - existing text so if I do that I can say
06:22 - R equals nu RI string with s so look at
06:27 - that and sorry and R is now this Rita
06:31 - string and you can see by the way the
06:33 - Rita string object actually has a lot of
06:35 - other stuff associated with it first of
06:36 - all it has the text this X Y Z Rita
06:38 - actually has
06:39 - drawing functionality for rendering text
06:41 - built into it as well I'm not going to
06:42 - explore that so much here but what I can
06:45 - do now is I can start to call all of
06:48 - these kinds of functions like let's look
06:50 - at our dot analyze our actually let me
06:52 - just do our POS
06:55 - so I'm going to now say our whoops imma
06:58 - say our POS POS stands for a part of
07:01 - speech noun verb adverb adjective what
07:05 - category of word is it and you can see
07:08 - remember what my string was it
07:10 - preposition was verb d what's vbd hmm so
07:16 - where this is more than just I mean n n
07:18 - is now but what's JJ and DT what are all
07:21 - of these what are all these parts of
07:24 - speech tags so these are parts of speech
07:25 - tags and they come from something highly
07:27 - specific and if I go to the reference
07:30 - page I'm sure it will tell me so this
07:32 - comes from the pen tag set so let's look
07:35 - at that pen referring to the University
07:37 - of Pennsylvania I believe and this is a
07:41 - kind of common set of tags for parts of
07:45 - speech and you can see you can get quite
07:47 - detailed about this beyond just like hey
07:49 - I'm gonna make some mad lips things with
07:51 - noun verbs and adjectives we've got four
07:53 - word word existential there determiner
07:55 - cardinal number adjective noun plural
07:57 - proper noun singular so I encourage you
07:59 - to sort of explore and play with this
08:00 - but just what I'm showing you here is
08:03 - the fact that you can now have an array
08:06 - that gives you the parts of speech of
08:08 - every word and this is this is something
08:10 - I could use them to create a program
08:11 - that that says find me all the nouns and
08:16 - replace them with synonyms or something
08:17 - like that so that's one thing that you
08:19 - can do and I just want to show you if I
08:21 - say are analyzed the analyze function is
08:25 - a function on a rita string that will
08:27 - give me all of the metadata associated
08:29 - with that string so if I do that I can
08:32 - now kind of look at this javascript
08:34 - object that it's giving me back and you
08:36 - can see there's this features array here
08:38 - and in there there are phonemes parts of
08:42 - speech stresses syllables text tokens
08:44 - etc so Reena does all the kind of common
08:48 - text analysis operations that you might
08:51 - do on a sentence a chunk
08:53 - texts how do you pronounce it what are
08:55 - the phonemes where are the parts of
08:56 - speech where do the words have their
08:57 - stresses how many syllables to each word
08:59 - hat does each word have and it also has
09:02 - a tokenizer meaning a way of using a way
09:04 - of chopping the sentence up into word
09:06 - tokens and I showed you how to do this
09:08 - with the JavaScript split function last
09:10 - week but this is a great thing that you
09:12 - can do here just with the analyze
09:13 - function itself so now let's make this
09:16 - example do something using these this
09:18 - text analysis and let's also add the
09:20 - lexicon so I'm going to show you in a
09:21 - minute how the lexicon works but first
09:23 - let me just spin something up here in
09:25 - this example where I'm going to create a
09:29 - variable called input and I'm going to
09:31 - say input equals equals create input
09:36 - I'll put in some default text like it
09:38 - was a dark and stormy night and then I'm
09:46 - going to assign an event input dot
09:50 - changed update I'll just say a process
09:56 - Rita so this is a very simple bit of
10:02 - code for a p5.js program where I want to
10:04 - just create a textbox that a user could
10:06 - type in and whenever the user hits enter
10:08 - the changed event will trigger and I'm
10:10 - going to have a function called process
10:13 - a function called process Rita and then
10:17 - what I'm going to do is I'm going to say
10:19 - this you get a string from what is
10:23 - actually in that text input box the
10:25 - value of that 10 X in the input box and
10:27 - I'm going to say create PS so just to
10:30 - make sure this is doing what I want it
10:31 - to do right now I have oh and I should
10:33 - make the size of that I think if I do
10:38 - something like this no let's make it 300
10:43 - great a little bit bigger so all I need
10:45 - to do is be in the text box and hit
10:47 - enter and so what happened there
10:52 - does the changed event this is typed
10:56 - correctly console dot log event
11:05 - tab Y has changed not working oops I
11:12 - just realized I forgot that with the
11:14 - changed event right I can hit enter all
11:16 - I want here but if the content hasn't
11:18 - actually changed then the event doesn't
11:21 - actually trigger when I hit enter so
11:22 - maybe I'll add a button just as another
11:24 - option so I'm going to say button I'm
11:27 - going to say button equals create button
11:30 - submit and then I'm also going to say
11:34 - button dot mousepressed
11:35 - process Rita so now I have and I
11:39 - apologize for my voice I have a cold I
11:41 - took a little break and my boys got
11:43 - worse so now now whether I press the
11:49 - button or hit enter if I've changed it
11:51 - this dysfunction down here should
11:53 - trigger so we can see I can hit submit a
11:56 - bunch of times or I can change something
11:58 - and hit enter okay so the reason why I
12:00 - wanted to do that is because I don't
12:04 - need it to be that big let's just make
12:05 - it 200 the reason why I wanted to do
12:08 - that is what I want to look at now is
12:11 - how can I pull out how can I get let's
12:17 - do some let's basically do a mad libs
12:19 - style text replacement algorithm so what
12:24 - I'm going to do first here is I want to
12:26 - say words equals first I want to make a
12:30 - Rita string so I must say var RS equals
12:35 - new read a string with that string then
12:39 - I want to say var words equals RS dot
12:44 - and I believe it's just tokenize so I
12:47 - don't remember if that's what it is I'm
12:49 - going to say console.log words and it's
12:54 - not the right function tokenize is not a
12:56 - function so let's go back and look at
12:57 - the reference and I'm going to look at
13:00 - the reference here and words there's
13:06 - actually a function just called words
13:07 - which returns an array of the words in
13:09 - the object so I'm just going to say RS
13:12 - dot words
13:16 - and I am going to refresh it it's submit
13:20 - and you can see there we go and what's
13:22 - nice about this is I also get the period
13:24 - so up my my punctuation is retained
13:27 - because ultimately what I want to do is
13:28 - rebuild this string so let me rebuild
13:30 - this string right now and I'm going to
13:33 - say var output is an empty string and
13:37 - then I'm going to look at that I'm going
13:40 - to loop over all of those words
13:45 - and I'm going to say output plus equal
13:49 - words index I and then after that I'm
13:55 - going to say create P with the output so
13:59 - what I want to do is split the string up
14:02 - and then we put it back together and
14:03 - display it so if I do this and hit
14:06 - submit
14:07 - I've got it but I lost the spaces so you
14:11 - know I talked a bit about using the
14:12 - split function where I have to
14:13 - investigate in the reader library maybe
14:15 - there's a way I can keep those space
14:17 - tokens but for right now just to be
14:19 - simple about things I'm also going to
14:20 - say output plus equals I'm going to just
14:24 - manually add a space so look at this it
14:28 - submit there's a little bit of a problem
14:29 - in that I have a space between the T in
14:31 - the period but again all this is clean
14:34 - clean up a bowl okay so now what what's
14:39 - next what I want to do with this example
14:41 - is go and use so first I want to also
14:44 - get the parts of speech I totally forgot
14:45 - about that so let's get the parts of
14:47 - speech and save rpoS equals RS POS and
14:52 - I'm going to console.log POS so we can
14:58 - see that too so whoops I'm in the wrong
15:00 - place I'm going to hit this hit submit
15:02 - we can see here are the words and here
15:04 - are the parts of speech so let's say all
15:06 - I want to do is replace only the nouns
15:09 - with another word so I'm going to do
15:12 - that by saying if POS index I equals and
15:21 - n so if the part of speech for the word
15:25 - at index I is a now
15:31 - do something otherwise just use the
15:36 - literal word okay so now what do I want
15:41 - to do instead of use the literal word
15:43 - well here's where I can use the other
15:45 - really another really powerful aspect of
15:48 - Rita I can use the lexicon one of the
15:51 - things I can say to the lexicon is when
15:53 - I am squished look at that one of the
15:55 - things I can say to the lexicon is give
15:59 - me another noun so let's look at how I
16:03 - might do that
16:03 - and I'm going to come here and I am
16:06 - going to go look at look at the
16:11 - reference and I can see here's all these
16:14 - functions so first of all one thing you
16:16 - should realize is you can expand the
16:17 - lexicon with this add word function and
16:20 - you can test all sorts of things and all
16:23 - sorts of stuff you can get things
16:24 - similar by sound similar by letter
16:26 - there's all sorts of information in ways
16:29 - that you can retrieve words from the
16:30 - lexicon but the one that I want to do is
16:32 - just look at random word and look at
16:34 - this I can ask for a random word I can
16:37 - ask for a random any random word a
16:39 - random word by part of speech a random
16:41 - word with a certain number of syllables
16:42 - or in a random word with a certain part
16:45 - of speech and certain number of
16:46 - syllables so let's look at how we would
16:49 - do that let's go to the code first thing
16:51 - I need to do is I need a variable to
16:53 - store a reference to the lexicon and in
16:57 - setup I want to say lexicon equals nu RI
17:00 - lexicon I think I think I just need to
17:02 - create a kind of read a lexicon object
17:05 - let's see if this kind of works and I
17:09 - should be able to say lexicon here and
17:11 - you can see there's the object and you
17:13 - can see there's an array in there with
17:14 - 20,000 things in it and those are
17:16 - probably the 20,000 words that are in
17:18 - the lexicon and I'm sure if we read
17:20 - through the reader documentation
17:21 - there'll be information about where that
17:23 - lexicon comes from so if I were to say
17:25 - lexicon random word trivialize tonight
17:29 - learners outcome and I could say random
17:32 - word six syllables conspiratorial
17:36 - archaeological six syllables I could say
17:38 - give me a random noun lifetime ran
17:42 - down with five syllables socialization
17:45 - so this is really exciting I just have
17:47 - sort of this instant vocabulary of
17:49 - things I can just use and use in my
17:50 - program so I'm going to say here give me
17:55 - a output plus equal lexicon random word
18:01 - noun so now if i refresh this page it
18:07 - was a dark and stormy unpleasantness it
18:09 - was a dark and stormy delineation and I
18:12 - could say kittens and unicorns and
18:15 - rainbows and cupcakes hit submit and now
18:19 - I have kittens and unicorns oh you know
18:21 - why because those aren't plural nouns
18:24 - those so interestingly enough let's do
18:28 - it for both nouns or plural nouns what
18:30 - might be a way that I could do that well
18:32 - here's something that's exciting I could
18:35 - say if I could say I could make a
18:37 - regular expression right and n dot star
18:42 - right I want to match and n followed by
18:46 - anything dot test that part of speech so
18:50 - this is me using a regular expression to
18:52 - say if it's any kind of noun give me a
18:55 - random word and then of course I don't
18:57 - have to hard code in and and there I
19:00 - could say give me a word with that
19:01 - particular part of speech so now if we
19:04 - refresh this still working either says
19:07 - dark and stormy loophole but I could say
19:09 - kitten and kittens and kitten and
19:12 - kittens and it's submit and I've got
19:15 - evangelism and points and naturalism and
19:17 - mandates so you can see it's working
19:19 - with both it's giving me a singular noun
19:22 - or a plural noun wherever it might exist
19:25 - okay so you can see this is what's
19:28 - possible now I would encourage you to do
19:30 - things like okay what if you ask for a
19:32 - rhyming word here or a similar-sounding
19:34 - word here so I'm going to sort of finish
19:36 - this right here you have the basic idea
19:38 - of how you can import the reader library
19:41 - how you can analyze a string for various
19:43 - things like parts of speech syllable
19:45 - stresses and also how you can use the
19:47 - lexicon to start asking for things and
19:49 - so I would encourage you to explore this
19:51 - further go in look at the reference try
19:54 - other functions
19:55 - if you're looking for an exercise one
19:57 - thing that I might a couple things I
19:58 - might suggest are come up with a more
20:01 - clever and creative way to do this word
20:03 - replacement may be based on rhymes
20:05 - similar sounding not just parts of
20:07 - speech another new thing you might think
20:09 - of as make this interactive so what if
20:11 - you have a text and anytime you click on
20:13 - a word it replaces it with a rhyming
20:15 - word as opposed to just kind of doing it
20:17 - arbitrarily so some type of interactive
20:18 - system like that try that with the
20:20 - reader library and see what else you can
20:21 - do
20:22 - rita by the way has a whole lot of
20:23 - functions for generating text but i'm
20:26 - going to explore those later as i look
20:27 - at some of those algorithms in future
20:29 - videos as well okay thanks for watching
20:30 - this video on rita I hope you enjoyed it
20:32 - and I'll see you in other videos in the
20:34 - future