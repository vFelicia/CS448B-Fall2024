00:00 - welcome to part two of this firebase
00:03 - tutorial stuff in the previous video I
00:05 - made a very simple game where you try to
00:07 - click as much as you could and then you
00:09 - type in your initials and you hit submit
00:11 - and your score gets sent to a database
00:14 - as part of firebase and we can see that
00:17 - that score is here right now if that one
00:20 - that I just submitted as I look in the
00:21 - firebase console we can see we can see
00:24 - it right there so now what I need to do
00:26 - is be I need to figure out a way to ask
00:28 - for all the data from the database
00:31 - itself and display those results on the
00:33 - webpage and then anytime a new high
00:35 - score is submitted the data could be
00:37 - shown as well so ok so what I'm going to
00:41 - do is in the code I need to I need to
00:46 - get again I need to say hey the part of
00:49 - the database that I want to access the
00:51 - reference the path to the reference is
00:53 - scores and then what i want to say is
00:56 - ref on so on what I'm now doing is I'm
01:00 - saying I want to start to bind different
01:02 - kinds of events so there are all sorts
01:04 - of kinds of events one particular kind
01:06 - of end is hey there's data and that
01:09 - particular event is a value so I want to
01:11 - say on the event value I want to have
01:14 - two callbacks now I want to call back a
01:17 - function that gets triggered where I
01:19 - could receive the data and then I also
01:20 - need a Carl Hall back in case there's an
01:22 - error I can't remember which one goes
01:24 - where let's guess I'm going to make a
01:26 - function called got data and then air
01:28 - for error data and I might have gotten
01:30 - those reversed and I'm going to just add
01:33 - those functions now got data data and
01:37 - I'm going to say air data error and I'm
01:44 - going to say console dot log error
01:48 - console dot log air and then I'm going
01:52 - to do a console dot log data here so
01:57 - let's see if I got that right
01:59 - so what should happen is right when the
02:00 - program starts I should see some data in
02:03 - the console so let's look at that that
02:07 - looks promising so I don't think this is
02:09 - the error but you can notice like is
02:10 - there any way I'm ever going to make
02:12 - sense of this
02:12 - what is this crazy javascript object so
02:15 - the thing about it is firebase has its
02:17 - special magical way of doing things and
02:19 - the data that I actually want is in I
02:22 - have to retrieve it with a function so
02:24 - this thing that comes in is a full
02:26 - JavaScript object with lots of
02:27 - functionality in all senses that you do
02:29 - and I think if I call dot Val I'll see
02:31 - the actual data there we go that looks
02:34 - more promising and you can see look at
02:36 - this this looks like an array the or it
02:39 - actually is not an array sorry it looks
02:40 - like an array but this is an object
02:42 - where the keys each key is bound to an
02:46 - object that has the initials and the
02:48 - score initials in the score initials in
02:50 - the score so what I want to do now is
02:52 - iterate over all of those keys to
02:55 - display all the scores on the page so
02:57 - how do I iterate now if I had an array I
02:59 - would just write a for loop or I could
03:01 - use a for each loop everybody always
03:03 - complains that I don't use for each
03:04 - loops you know I'm just I'm less like a
03:05 - little baby programmer and they scare me
03:08 - I just like I like a good anyway I just
03:10 - like code to be sort of readable and I
03:12 - of it's just a convention that I'm
03:13 - adopting someday I'll you support each
03:15 - loops for all of you who are wondering
03:16 - so what I want to do is I want to say
03:19 - I'm going to actually save our scores
03:23 - equals date eval and then I'm going to
03:28 - say what I want to do is say keys equals
03:30 - object dot keys I think this is how I do
03:33 - this in a JavaScript object keys or
03:39 - maybe it's get keys but this should give
03:41 - me an array of all the keys in that
03:43 - javascript object let's try this that
03:46 - looks promising yep so now I have an
03:47 - array with all the keys those keys to
03:50 - the divet to the data so now I can say
03:53 - for VAR I equals 0 I is less than Keys
03:56 - length I plus plus var the key is keys
04:00 - index I whoops and now I can say the
04:04 - score the name or the initials is scores
04:11 - index sorry a scores index K dot
04:17 - initials and the score is scores index K
04:22 - right that's the key that it's dot
04:26 - a dot score okay I think I'm doing this
04:31 - right I'm gonna and I'm gonna just I
04:34 - just want a console log it to see that
04:36 - it works so there we go oh my god I know
04:40 - why I got undefined 43
04:42 - I wonder if initially I didn't call it
04:44 - initials so let's go back let's see why
04:46 - did I get undefined so yeah look at this
04:49 - these first whoops these and this by the
04:52 - way is the the first things I put in the
04:54 - database so I just need to delete these
04:56 - that were like old data when I was like
04:58 - testing this is the wonderful thing
04:59 - about firebase I can just remove them
05:01 - right here so now this one is correct so
05:06 - now I can run this again and I can see
05:09 - there's all the school there's all the
05:12 - initials and high scores so this is good
05:13 - and by the way let me now I want to show
05:16 - you something that's going to happen
05:17 - this is going to be crazy I'm going to
05:19 - add my initial I need different initials
05:21 - are BW and I'm going to get some points
05:24 - here and hit submit
05:25 - look I added something new to the
05:27 - database and an event got triggered that
05:29 - showed me all the data so this is what's
05:31 - so great about firebase I can set up an
05:33 - event just call that function anytime
05:36 - anywhere the data changes so I don't
05:38 - need like a separate like update data
05:40 - method this is always going to happen so
05:43 - what should I do
05:44 - I want to display those the high score
05:48 - list here so I don't know how fancy I
05:50 - want to get about this but I'm going to
05:52 - do it in a slightly fancy way uh it's
05:56 - not going to be very fancy I'm going to
05:58 - in advance set up a list an ordered list
06:09 - and I'm going to give that an ID score
06:13 - list I'm putting some stuff in HTML and
06:15 - then what I'm going to do is I am going
06:21 - to here I'm going to say VAR el I equals
06:28 - create element so this is a you know
06:30 - document I create element this is the
06:32 - same sort of I'm just using the p5 Dom
06:34 - library create element I want an Li
06:36 - element that has as its content the
06:40 - initials plus colon space plus score and
06:45 - then I want to say Li dot parent what
06:49 - did I call that score list so that's
06:53 - going to create that element and then
06:55 - put it in the score list and so here we
06:59 - go we should see there's the score list
07:02 - and it's always at the top so look now
07:04 - I've retrieved the data from the
07:06 - database and there is now interestingly
07:07 - enough what happens if I submit again
07:09 - and I now I do you need for with a some
07:13 - another look all of those came in again
07:16 - because at any time the data changes it
07:19 - refills my whole list so what I actually
07:21 - want to do is I need to also in this got
07:24 - data function I need to clear clear the
07:31 - clear the clear the list boys after
07:35 - doing these videos for a while my brain
07:36 - starts to melt so I don't know there's
07:38 - probably a bunch of ways I could do this
07:40 - I'm going to just also give it a class
07:43 - which is like a score score list ding
07:48 - I'll call it score listing so all these
07:51 - elements I'll assign them to a class
07:52 - because now I can just say at the
07:55 - beginning here I could say something
07:57 - like score listings equals select all
08:03 - dot score listing so I could before I'm
08:09 - about to end this rupture there's a much
08:11 - more efficient way I could do this but
08:14 - just to sort of like finish this off dot
08:17 - length I plus plus so this is a function
08:20 - in the p5 library that allows me to
08:22 - select and get an array of elements I
08:25 - want all the elements that are part of
08:26 - that class and since everything I
08:28 - created it was assign this class before
08:30 - I regenerate that list let me just clear
08:33 - it so I'm gonna say score listings index
08:35 - i dot remove so now what this should do
08:39 - is a I should see those are the scores
08:42 - and now I'm going to add another one
08:45 - you know AAA with four and we can see
08:49 - that just gets added there so now we
08:51 - have a full
08:53 - we featured web application with a
08:55 - simple gait now I kind of I hate that
08:57 - this I hate that the game is below the
09:02 - score list and I just I just have to fix
09:04 - it so I'm going to fix that I've done
09:08 - this in like a kind of ridiculously
09:09 - horrible way that I don't like but what
09:12 - I'm going to do is I'm going to make a
09:13 - div and I'm going to call it game and
09:17 - what I'm going to do is all the other
09:19 - elements that I'm making but I made in
09:21 - the code I'm going to parent them to the
09:23 - div which is above this is so silly what
09:26 - I'm doing this but I just can't help it
09:28 - so I'm gonna say canvas dot parent what
09:32 - did I call that again game create P I
09:36 - can actually chain these kind of
09:37 - functions parent game and then the
09:41 - buttons I should initial input up but
09:45 - you could do this so many ways this
09:48 - could be improved but I'm just doing it
09:51 - this way because it's going to work and
09:54 - it's going to make me feel happy and
09:55 - submit button parent so now there we go
09:58 - so now I can play this game
10:00 - Oh where's that click button the submit
10:03 - button the initial input who I forgot
10:05 - about this button so now we can see here
10:11 - I can get a high score and I can say I
10:14 - can have another set of initials ABC hit
10:16 - submit and we can see there it is at any
10:18 - time i refresh this page I come back to
10:21 - this web application
10:22 - I've got no oh I'm on firebase yeah any
10:27 - time any time i come back and i refresh
10:30 - this web application i've got the high
10:32 - score list from before so there we go we
10:35 - now have a fully fledged web application
10:38 - with a game that you can play a place
10:42 - for you to type in your initials a place
10:44 - for you to submit your score and a high
10:45 - score list that will be stored for all
10:48 - time in a firebase database and it is
10:50 - always updated whenever so if multiple
10:53 - people and multiple clients were playing
10:54 - this game this would update even as
10:57 - you're playing the game one thing that i
10:59 - want to point out that i haven't done
11:00 - yet in this and i haven't needed for
11:02 - this example is sometimes i want to as
11:05 - soon as i
11:05 - that's something that a database have
11:06 - have that key in my local code so I can
11:09 - update or change or work with that
11:11 - particular a record that's in the
11:13 - database itself so you know for example
11:16 - what if I wanted to instead of every
11:18 - time I do DTS and hit submit again it
11:21 - overrides my previous entry so a way
11:24 - that I can do that is right here when I
11:26 - actually push data to the database I
11:29 - actually get something back and what I
11:31 - get back is kind of like a result I'm
11:34 - going to call it this object it has all
11:36 - this information about my what I just
11:38 - did to send and one thing that's in
11:40 - there that's actually generated through
11:43 - the library itself is result is the key
11:45 - so I think if I console.log now result
11:48 - that key anytime I add something to the
11:50 - database we should see
11:52 - [Music]
11:54 - BFG and I'm going to hit BFG is going to
11:58 - have a nice score and I can say there's
11:59 - the key so you can see I have access
12:01 - immediately to that key and I can also
12:03 - store that in variable I know the one
12:05 - that was just submitted so there's a lot
12:07 - more things on that you might want to do
12:10 - here so let me so this I finished this
12:12 - up I've got this whole working example
12:15 - and I'm going to give you some exercises
12:18 - if you want to try to build the first of
12:19 - all make a more interesting game second
12:21 - of all could you sort this high score
12:24 - list by the highest score does firebase
12:27 - do that for you or is it up to you to
12:28 - sort the data once you get it back
12:30 - interesting question tell me tell me
12:33 - your answer in the comments the other
12:35 - thing you might do is you know have a be
12:38 - able to like override your own score
12:40 - during an individual session by updating
12:42 - a particular key so at some point I'll
12:44 - have to add another tutorial about how
12:45 - to update records in the database and if
12:47 - you're interested in that I don't have
12:48 - the video yet write that in the comments
12:50 - but what I'm going to do I'm going to do
12:52 - one more video as a coding challenge
12:54 - about working with firebase and I'm
12:56 - going to create an application where you
12:57 - create a drawing and that drawing gets
12:59 - saved to a firebase database and then
13:02 - you have a kind of gallery of all the
13:04 - drawings that that other people have
13:05 - made so a kind of collective
13:07 - crowd-sourced drawing library okay
13:10 - thanks very much and I'll see you soon
13:17 - [Music]
13:22 - you