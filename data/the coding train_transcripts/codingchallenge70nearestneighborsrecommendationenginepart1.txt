00:00 - hello welcome to another episode of the
00:03 - coding train and I'm going to do a
00:04 - coding challenge and what I'm going to
00:05 - do in this coding challenge in honor of
00:07 - may the 4th Star Wars day is I am going
00:11 - to make a simple movie recommendation
00:15 - engine where what I have a collected a
00:17 - lot of ratings from the coding train
00:20 - community of all the different Star Wars
00:22 - films you can see alkis here ratings are
00:24 - 5 5 5 2 4 5 4 based on the episode
00:27 - number road 1 and no rating for the
00:30 - holiday special you know what though I'm
00:32 - going to I think Alka what Alka give me
00:35 - a rating Alka you're in the chat right
00:36 - now give me your rating for the holiday
00:37 - special let's see if there's any other
00:39 - no no there's a lot of gnomes for the
00:42 - holiday special you know what we're
00:43 - going to leave those nulls in there
00:45 - we're going to work around the Noles
00:46 - that's going to be part of our challenge
00:48 - here to deal with the fact that some
00:50 - people don't have ratings for particular
00:52 - movies ok so what am I going to do the
00:54 - first thing that I want to do in order
00:56 - to build this movie recommendation
00:58 - system and first I should mention a
01:00 - couple things number one is most of the
01:02 - codes that I'm going to write even
01:05 - though I'm going to write it from
01:05 - scratch is essentially the same code
01:09 - that's in this book collective
01:10 - intelligence and it's a wonderful book
01:14 - it's from you know I think probably from
01:16 - like eight years ago at this point
01:17 - because it's 2008 or 2009 but it's
01:19 - because my knowledge is old still try to
01:21 - get there and so I highly recommend this
01:24 - for you I read this book again about a
01:27 - month ago and so I'm sure whatever ideas
01:29 - are in there are still in my head that's
01:30 - ultimately what I'm going to end up
01:31 - programming here the book is in Python
01:33 - by the way so if you want to see a
01:34 - Python version I'm going to build this
01:36 - all as an interactive example in the
01:37 - browser using javascript so what is this
01:40 - a part of so before I actually get to
01:42 - coding this is part of a set of videos
01:45 - where the topic is really K nearest
01:48 - neighbor but in this case I'm going to
01:51 - not worry about the K right now I just
01:53 - want to think about nearest neighbor
01:55 - what I want to be able to do is you know
01:58 - Alka and look find somebody else and
02:04 - haba lwg Q and Hubbell uma Alka and alga
02:12 - Luca
02:13 - have both rated movies are they similar
02:16 - to they rate movies in a similar way
02:19 - do they have similar tastes how could we
02:22 - numerically establish whether people who
02:24 - are rating movies are have similar
02:27 - tastes or not similar States and that
02:29 - has to do with nearest neighbor that has
02:31 - to do with this idea of a similarity
02:32 - score now there are a lot of different
02:36 - ways you can calculate a similarity
02:37 - score and the kind of similarity score
02:40 - I'm going to use in this video is a one
02:42 - of the easiest simplest ones called
02:44 - Euclidean distance you click being the
02:49 - mathematician who invented a lot of
02:52 - geometry stuff and so including a
02:55 - distance meaning actually just a sort of
02:57 - distance you space between these two
02:59 - people now what does that even mean
03:01 - these are people rating movies they
03:04 - don't live with space they live in out
03:06 - Wow does that mean that they're far
03:07 - right now if I said to you what's the
03:10 - distance between this little dot and
03:12 - this little star where we could pull out
03:14 - a ruler and actually measure that
03:16 - distance in inches and centimeters and
03:19 - pixels this would be Euclidean distance
03:22 - the actual length between these two
03:24 - things Euclidean distance on a
03:25 - two-dimensional plane so when X Y values
03:28 - it's sort of easy to think about
03:29 - distance the same thing goes for X Y Z
03:32 - values in fact in this room I could have
03:35 - you know this hand here and this hand
03:37 - here and how far away are there I could
03:39 - measure that's the Euclidean distance
03:40 - but let me let me ask you something what
03:43 - if you thought about color for a second
03:45 - color is our G and B at least digital
03:50 - color has a red green and blue value so
03:53 - what if I have two red green and blue
03:56 - values I have color one and I have color
03:59 - two which might be R - hey r2d2
04:02 - calculate it Alice
04:04 - red what's the con that starts with D
04:07 - I'm sure we get a million comments it
04:10 - just colors it starts with D all right I
04:12 - wrote it R - G - B - right I can have R
04:17 - 1 G 1 B 1 I can't even do it anymore
04:21 - point is they could have two colors and
04:22 - I could actually think of the distance
04:26 - between those two colors in the same way
04:27 - that I might calculate the distance
04:29 - between two ex-wives viewpoints after
04:31 - all it's three values and in fact if I
04:33 - have four values or five values I can
04:35 - use the same formula that I would use to
04:37 - calculate the distance between two
04:39 - points in XY space between two points in
04:42 - five seven ten dimensional spaces are
04:45 - very hard for us to imagine in our heads
04:47 - what that would look like but the math
04:49 - is the same what is that math that math
04:53 - is actually based on the Pythagorean
04:54 - theorem if this is point a and this is
04:58 - point B and the sides that we probably
05:00 - should not call these a to a B but at
05:03 - the sides of this triangle a B and C C
05:06 - is the distance between those two points
05:08 - and a squared plus B squared equals C
05:12 - squared so C equals the square root of a
05:15 - squared plus B squared and in
05:17 - three-dimensional space a squared plus B
05:19 - squared plus F squared for Memphis Q
05:22 - squared these are the X differences the
05:25 - Y differences so this is ultimately what
05:27 - we're going to do now at the end I'll
05:28 - show you why there are some I'll talk
05:30 - about why there are some issues with
05:31 - leaked Linea distance and other ways of
05:33 - calculating similarity but ultimately
05:35 - what I've now established is with these
05:37 - two let's say both of these critics have
05:40 - evaluated have rated given a star rating
05:44 - to five movies all I need to do is get a
05:47 - distance score which is the square root
05:49 - of the rating of movie 1 - move of movie
05:54 - 1 algas movie 1 - so alkyd movie 1 minus
05:57 - 8 mu b 1 squared plus alphas movie 2
06:02 - minus H mu V 2 squared etc etc etc for
06:06 - all five of those movies so this is what
06:08 - worked where we're going to start and
06:09 - eventually this is going to lead us to
06:11 - be able to get recommendations for a new
06:13 - person who comes in and maybe has it
06:14 - raised one of these movies to calculate
06:16 - guess whether they like it or not okay
06:17 - coming back over here let's start to
06:19 - write some code now so the first thing
06:22 - that I need to do is I need to load all
06:24 - this data so I'm going to go into
06:26 - Sketchup yet oh look I already did this
06:28 - lucky me I actually wrote some code
06:32 - before I started so let's close some of
06:34 - this stuff here so let's just make let's
06:36 - take a look and make sure that this data
06:38 - is actually loading into our sketch I'm
06:41 - going to go to the browser and I'm going
06:43 - to go and open this up similarity score
06:47 - it's not happens here why do I have this
06:53 - error here save there we go I don't know
06:57 - why it didn't work but it's working now
06:58 - and you can see I loaded there is an
07:01 - object that it loaded with a property
07:03 - called users and that users is an array
07:05 - of 100 3 users each one of them has a
07:08 - set of ratings for all of these movies
07:11 - ok great
07:12 - so first thing that I want to do is I
07:14 - want to make something where the user
07:16 - can select two different critics by
07:21 - which to calculate the similarity score
07:23 - so the way I'm going to do that is by
07:24 - two little drop-down menus so so what do
07:28 - I need to do so the first thing I want
07:29 - to do is I want to save our users equals
07:31 - data users now I want to loop through
07:34 - all of those users and I'm just going to
07:40 - say console dot log users index I dot
07:43 - and what was it what was their their
07:45 - name is their name by the way because
07:49 - all this data came in beat all this data
07:51 - came in via Google form I'll put a link
07:53 - to that Google Form and that's what this
07:55 - time stamp is this is the time that on
07:57 - maybe the fourth this was submitted okay
08:01 - so let's just make sure that works and
08:04 - there we go we look Finch will ship it
08:08 - Jr is somehow participating in this
08:11 - there's no Daniel shipping jr. Leo okay
08:15 - look at all these people
08:16 - okay z3r oh okay so now okay so what do
08:20 - I want to do let's p5 has on some
08:23 - functions for creating drop-down menus
08:25 - and so I'm going to say person 1 equals
08:30 - create select and var person 2 equals
08:34 - create select and then I'm going to say
08:37 - so create select should give me whoa I
08:41 - have an error oh I don't have the Dom
08:46 - library so one thing I'm starting the
08:48 - Dom library so I need to make sure I
08:50 - have a reference to the
08:51 - library so let's try this again so we
08:54 - can see there are two drop-down menus
08:56 - here and this very silly page it has
09:00 - this unnecessary styling in it okay
09:03 - whoops so let's make that a little
09:05 - bigger so I could see I have two
09:06 - drop-down menus but nobody in them yet
09:08 - so what I want to do now is I want to
09:11 - say person 1 dot option users index dot
09:18 - name and I want to do that with person 2
09:21 - as well
09:21 - so actually I want to call this
09:23 - drop-down one because we call this
09:25 - drop-down one and this B drop down to so
09:30 - now we should see here I've got these
09:33 - drop-down menus so what I want to be
09:35 - able to do is just say okay I want to
09:36 - look at code land which was a wonderful
09:38 - conference by the way and he walks and
09:41 - calculate a similarity score so I
09:43 - probably want to button to so let's
09:47 - let's create a button I can actually
09:50 - just do that right in here using the Dom
09:52 - library as well I can say create button
09:56 - submit and there we go and so I can do
10:03 - this okay so alka and unicorn what's the
10:07 - similarity score submit I want to get
10:09 - this little similarity score okay so we
10:10 - have a little interactive system set up
10:12 - here we go we're getting somewhere
10:14 - okay so button dot mousepressed and
10:21 - button dot mousepressed a similarity
10:24 - like let's call this Euclidean Euclidean
10:30 - similarity boy that's really hard to
10:32 - spell you Euclidian similarity so that's
10:35 - a new function I need to write function
10:40 - Euclidean some Euclidean similarity so
10:45 - now what I want to do is get who are the
10:48 - two people that I want to look up var
10:51 - person 1 equals person 1 equals
10:57 - drop-down one value so the value
11:01 - function in p5 gives me the current
11:04 - selected value
11:05 - drop down menu and person to is drop
11:09 - down to value okay now let's try console
11:14 - logging person 1 and person 2 let's just
11:18 - make sure this works
11:19 - alka and unicorn and we can see Alka
11:22 - unicorn there okay so we're getting
11:23 - somewhere now what I need to do is say
11:27 - so I just realized something I have the
11:30 - two people that I want to compare but I
11:32 - don't have an easy we have their names
11:34 - but they don't have an easy way of
11:36 - accessing their data and that's because
11:38 - my JSON file just came in as like a
11:40 - giant array so I could look through the
11:43 - whole array to find the ratings for each
11:45 - one of those people that's not going to
11:47 - be great so what I want to actually do
11:49 - is and I'm sure there's think about if
11:52 - there's a nicer way to do this but what
11:53 - I want to do is I want to create a
11:55 - lookup table that is essentially called
11:59 - and where's that did I say I call this
12:02 - bar users but really what I want to do
12:06 - with this is I want this to be an empty
12:10 - object because I'm going to actually
12:14 - have this users variable become a lookup
12:16 - table for all the data associated with
12:18 - each user by their look-up by their name
12:21 - so this loop I'm just going to take data
12:24 - users data users name data users name so
12:28 - I'm going to forget about this variable
12:30 - as being this shorter version of data
12:32 - users and just use data that users there
12:34 - and then what I'm going to do is I'm
12:36 - going to say users index so you know
12:39 - what I would like to do is var name
12:41 - equals data users index I name and I'm
12:47 - going to put the name as the drop-down
12:51 - option and then say users name equals
12:55 - data dot users index I so in other words
13:00 - all of the stuff is in an array that's
13:03 - how came in is JSON file I could
13:05 - reorganize the JSON file to work in a
13:06 - different way but I'm just going to
13:08 - build a lookup table here in the code I
13:10 - might as well so now I'm just going to
13:12 - show you the difference here if I say
13:14 - console dot log data and console dot log
13:19 - users I think you'll see in the console
13:21 - what I need so I'm going to hit refresh
13:25 - and I'm going to pull this over here now
13:27 - look at this this is the original array
13:31 - and you can see look at that it's just
13:33 - an ordered list where each critic is a
13:36 - look of Feist index but this is useless
13:38 - to us the order doesn't actually matter
13:40 - so I reworked the data and now I have an
13:44 - object where each particular critic is
13:47 - actually listed by their name so I can
13:50 - instantly see Cory's ratings are right
13:53 - here look up by Cory so now that I have
13:56 - that in my code if I come back to the
13:59 - code I can make it I don't need this
14:01 - console log anymore
14:03 - I can now say console just go to a
14:06 - console that log users index person one
14:12 - console dot log users index person - now
14:16 - you might be asking yourself oh wait
14:20 - person one is a string but you're using
14:22 - array syntax users index person what's
14:25 - JavaScript objects are collections of
14:28 - key value pairs and I can access the key
14:31 - of an object like I could say users
14:33 - index Dan or I could say users index Dan
14:37 - these are 100% well these are identical
14:40 - but a lot of times Dan might have a
14:43 - space in it and so this is a completely
14:45 - invalid syntax but this is valid syntax
14:47 - so I have a whole video tutorial about
14:50 - this topic in particular called what is
14:52 - an associative array I'm going to link
14:54 - to that it's video description so if
14:55 - this is new syntax for you you could
14:57 - pause here and go watch that video and
14:58 - then come back okay but I'm going to
15:00 - move on now okay so let's just see if I
15:02 - have those ratings and what I'm going to
15:05 - do is I'm going to sorry ah where am I
15:08 - too much stuff here I'm going to now hit
15:10 - refresh and I'm it hit submit and look
15:13 - at this nice alka and alka now I'm going
15:15 - to go switch to alka and unicorn I'm
15:17 - gonna hit submit and I have alka and
15:19 - unicorns ratings so we can see I've got
15:22 - those objects with the range now it's
15:23 - finally time how long is this video
15:24 - going on are you still watching if you
15:26 - are thank you very much I'm going to
15:29 - actually do the similarities
15:30 - now okay so what do I need to do okay so
15:35 - first of all I need to get all of the
15:37 - movies associated with this particular
15:38 - person now this is a little bit tricky
15:40 - actually because once again I haven't
15:43 - been too thoughtful about how I
15:44 - structured this data so the data has all
15:47 - of these movies and these particular
15:51 - time stamps so you know what I'm going
15:53 - to do this is a little bit silly because
15:56 - I could I'm just going to have an extra
15:58 - thing I'm going to hard code in the list
16:03 - of all the movies just to make this a
16:06 - little bit easier
16:07 - I could certainly extrapolate this I
16:10 - probably should do that let's
16:12 - extrapolate it what I want to do is get
16:16 - rid of a time stamp and name so what I'm
16:22 - going to do what I'm going to do this is
16:24 - fine sorry I thought about the stuff
16:26 - before I started there's a lot of
16:27 - different ways I could approach this I'm
16:29 - figuring it through right now but one
16:31 - thing I'm going to do is I'm going to
16:32 - say VAR titles so the movie titles
16:35 - equals object keys person one so this is
16:42 - going to give me an array of all of the
16:46 - keys that are part of person 1 what are
16:48 - those things they are time stamped name
16:51 - and all of these now I want to ignore
16:54 - time step in name so then what I'm going
16:57 - to do is I'm going to look through all
17:02 - of the titles and I'm going to say
17:10 - rating 1 equals okay so the actual title
17:14 - is titles index I and then I'm going to
17:19 - set you know what I should do let's
17:23 - remove from the array titles will this
17:26 - actually work can I say let's let's
17:29 - think about this let's what's the best
17:30 - way to so if I say VAR titles equals a b
17:37 - c titles dots below it's never going to
17:40 - I could say titles index of
17:43 - be right and then title splice 1 comma 1
17:50 - and so that removes B so what I'm going
17:54 - to do is this is a little bit awkward as
17:56 - I'm going to say I equals titles index
18:01 - of name and I'm going to just say title
18:05 - splice I comma 1 I just want to clean
18:10 - the data here a little bit I don't want
18:11 - the name I don't want the timestamp
18:14 - title J is title index of timestamp so
18:19 - that should work so now I should be able
18:21 - to see a console.log title let's take a
18:25 - look at this hit submit and I got huh 0
18:28 - 1 what ok I'm back I've made a silly
18:35 - Eric's this is not the full object the
18:38 - whole reason I built that users table
18:40 - was when I could grab the full object so
18:43 - I don't want the keys associated with
18:44 - person 1 person 1 is just the name so
18:47 - this is really name 1
18:48 - this is name - now person one the whole
18:54 - thing or I could actually could say like
18:56 - ratings 1 is odd is is user's name 1
19:05 - ratings 2 is user's name - then what I
19:11 - want to do is get all of the titles
19:13 - ratings 1 so let's look at that we get
19:19 - there all the titles but it has
19:20 - time-stamping name in it so now if i
19:24 - console.log titles again after removing
19:27 - them we should see there we go what the
19:31 - array with n times have a name and now
19:33 - here it is removed and so now what I can
19:36 - do is I can get rid of these console
19:37 - logs and how I can actually do is say
19:42 - rating 1 equals ratings for that ratings
19:48 - 1 for that title rating 2 equals ratings
19:52 - 2 for that title so this is me looking
19:55 - at each
19:56 - and every one of those ratings one at a
19:58 - time and now I want to look at the
20:00 - difference the difference between how
20:02 - did user one rate episode four and how
20:05 - did user 2 rate episode four so so now
20:09 - I'm going to say VAR difference equals
20:11 - rating one - rating - this is if I come
20:16 - back over here this the difference
20:19 - squared and in the formula I need to
20:21 - square that difference sum all the
20:23 - squares of the difference in take the
20:24 - square root again lots of other formulas
20:27 - we could apply the square root
20:28 - calculation is perhaps unnecessary here
20:30 - and it's expensive but I'm going to do
20:32 - it the standard traditional way so what
20:35 - do I need to do I need to add up the
20:36 - squares of all these differences I'm
20:38 - going to say sum equals zero sum of
20:40 - squares and so now I'm going to say sum
20:44 - of squares plus equals difference times
20:47 - different
20:49 - and now I'm going to say I'm going to
20:53 - say a square root of difference equals
20:57 - the square root of the sum of the
21:00 - squares and actually this is the
21:04 - distance so this is now the distance so
21:07 - what I'm going to do now is I'm going to
21:08 - say create P distance so let's look at
21:12 - this okay
21:13 - create P distance so we're now going to
21:16 - see let's see if we get something here
21:18 - now if I do to alpha and alpha if
21:21 - everything works correctly I should get
21:23 - a distance of zero zero right because
21:25 - two people he out got is identical to
21:29 - alka okay oh now I'm going to switch to
21:31 - Alka and unicorn and I also got zero I'm
21:35 - a little bit concerned here Alka and he
21:37 - walks zero okay I don't like the way
21:40 - this is going let's let's see if I have
21:43 - an error
21:43 - hi I can see it in the chat already look
21:46 - at this
21:48 - ratings 1 equals oh no no no no up here
21:52 - aha very important that I actually get
21:55 - the ratings from the second user if I
21:57 - get the range from name one name one
21:59 - it's going to be wrong so now let's go
22:00 - back and say Alka and al-qaida
22:04 - similarity score of zero and unicorn in
22:07 - al-qaeda
22:07 - a score of 6.3 - now here's the thing if
22:11 - they're more similar the number should
22:14 - actually be higher and if they're really
22:17 - far apart that number should be lower I
22:18 - want to have a similarity score where
22:21 - the more similar two people are the
22:24 - higher their score so what I really want
22:26 - to do is make some adjustments to the
22:27 - formula so one way to invert a value is
22:30 - to actually say similarity equals one
22:34 - divided by D right I want to invert the
22:37 - distance if if the distance is 10 I get
22:42 - 1 divided by 10 which is a bigger number
22:44 - then if the distance were 21 divided by
22:46 - 20 but here's a problem what if the
22:48 - distance was 0 so a nice way that I can
22:51 - fix that is just say 1 + D what this
22:53 - will actually give me is a number
22:56 - between 0 & 1
22:57 - because if the two people are identical
23:00 - 1 divided by 1 plus 0 is 1 divided by 1
23:03 - a similarity score of 1 and if D went to
23:06 - infinity like the distances as far away
23:08 - as possible
23:09 - 1 divided by affinity approaches 0 so I
23:11 - have some number between 0 & 1 so we can
23:14 - now see al Qaeda and al cuts and so now
23:18 - I want to create P and let me actually
23:19 - change this to what I'm going to do is
23:22 - I'm going to say I'm going to make a
23:25 - variable called result P and I'm not
23:28 - really being thoughtful about how I'm
23:29 - designing this at all let me say result
23:31 - P equals create P with nothing in it and
23:35 - then so I'm just going to instead of
23:37 - creating a new paragraph element each
23:39 - time I'm just going to replace what is
23:41 - in that existing paragraph element with
23:43 - a new similarity score so here we go
23:45 - alka now customary score of 1 alkane
23:47 - unicorn where score point 1 3 al Kamandi
23:50 - walks
23:51 - similary score of point 1 9 let's grow
23:54 - it's Chewbacca
23:55 - I saw a Chewbacca in here Chewbacca
24:00 - Chewbacca and the Ewoks a similary score
24:03 - of 0.1 6 6 6 6 6
24:04 - okay so similarity score between two
24:08 - people what have I missed
24:12 - so one thing is there were some ratings
24:14 - that were no so I gotta watch out for
24:16 - this what am I getting if I have a null
24:19 - rating so let's just say
24:21 - if rating one equals no console dot log
24:27 - no so let's just check this did alka
24:33 - have yeah so Alka had one particular
24:36 - rating that was null so what happens
24:38 - when I say no - null it probably
24:40 - javascript is sort of worked itself out
24:42 - anyway but I what I really should do is
24:45 - check and make sure if either these
24:48 - ratings is null or undefined I can't say
24:51 - not because it could be zero and that
24:53 - would evaluate to false I guess in this
24:55 - case the only only value of getting is
24:57 - null based on my data so this is going
24:59 - to be fine but I might have to be more
25:01 - thoughtful about error checking
25:02 - ultimately but as long as rating 1 is
25:05 - null and rating 2 is not is not equal to
25:09 - no I could go forward and continue to do
25:14 - this so so here we are now the only
25:17 - issue I maybe might get is if somebody
25:19 - didn't rate anything I'm ultimately
25:21 - going to get a similarity score of 1 but
25:23 - anyways error checking aside I could do
25:25 - a better job of that at least I'm now
25:26 - checking to make sure there isn't a
25:28 - particular value of null okay so here we
25:30 - go unicorn and this dot and we have our
25:36 - similarity score
25:37 - okay so we've come to the end of this
25:39 - particular video I would encourage you
25:42 - to try that getting this code get your
25:44 - own data make a different data set see
25:46 - what you can do with this sort of idea
25:47 - of similarity scores and here's an
25:49 - exercise for you which I'm going to do
25:51 - in the next video what if I wanted to
25:53 - take any user and just give me a list of
25:57 - the 5 most similar users and this is the
26:01 - next step we need for something called K
26:04 - nearest neighbor because what I want to
26:06 - do is start to evaluate to look at how
26:09 - can I find it based on all the data what
26:12 - can I find that's similar to similar to
26:14 - me and so that's something I'm going to
26:15 - do in the next video and that's going to
26:17 - lead us towards this idea of making a
26:19 - recommendation system for a new user who
26:22 - might not have rated all the movies how
26:24 - can we then predict a rating for a movie
26:26 - that that new user hasn't watched that's
26:28 - coming the other thing I'll mention is
26:29 - something you might want to look into is
26:31 - the something called the Pierce
26:35 - correlation score so one one issue with
26:41 - Euclidean distance is that lets say I
26:44 - let's say the ewok rates all the movies
26:48 - four and five four and five four and
26:49 - five four five stars
26:51 - Chewbacca rates all the movies
26:54 - one-and-two one-and-two one-and-two
26:55 - stars well let's say that for every
26:59 - movie that the Ewok rates of for
27:01 - Chewbacca rates a one and for every
27:04 - movie that you operates a five to baka
27:06 - rate the to their different score might
27:10 - be quite their distance score might be
27:11 - quite far apart but their tastes are
27:13 - actually quite similar so the Pearson
27:16 - correlation is a way of calculating a
27:18 - similarity score that kind of accounts
27:20 - for that difference in range it has to
27:24 - do with fitting the data to a line and
27:27 - looking at the slope of that line if I
27:28 - were to graph all of Chewbacca's scores
27:31 - and they looked kind of like this and I
27:33 - were to graph all of the ewoks scores
27:35 - they look like this well even though the
27:37 - ewoks scores are all much lower it's the
27:40 - same shape as Chewbacca
27:42 - so the Pearson correlation would be a
27:44 - very high similarity whereas the
27:46 - Chewbacca scores look like this then
27:48 - they're going to be up it's going to be
27:50 - very low similarity so I do have this
27:52 - built and you can check this particular
27:55 - video's description for a link to an
27:59 - example that has the Pearson correlation
28:00 - score built into it maybe I'll come back
28:02 - and do that as a coding challenge but
28:03 - it's a bit of an ancillary point to this
28:05 - particular video okay maybe I'll see you
28:06 - in the next one
28:11 - [Music]