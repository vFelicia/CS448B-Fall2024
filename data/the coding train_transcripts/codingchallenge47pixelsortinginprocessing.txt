00:00 - hello and welcome to another coding
00:02 - challenge this challenge I going to
00:04 - attempt something called pixel sorting
00:06 - and pixel sorting is an algorithm that
00:08 - takes all the pixels of an image or a
00:10 - video or anything and reorganizes them
00:12 - in some order maybe ordered by
00:13 - brightness or ordered by Hue maybe they
00:15 - spiral out from the center or they kind
00:17 - of get ordered across or up and down and
00:19 - you can see if you Google an image
00:20 - search with pixel sorting you'll see a
00:22 - lot of artists and people making art and
00:24 - crazy projects with a pixel sorting
00:26 - algorithm so I am now going to try to
00:29 - try to make pixel sorting in processing
00:31 - which is a Java based programming
00:33 - environment it looks something like this
00:35 - you can go to processing.org to download
00:37 - it yourself and the one thing that I've
00:39 - got going here is in this uh the code is
00:42 - in a PD file called pixel sorting. pde
00:45 - check this video's description for a
00:47 - link to the code I also have a an image
00:50 - a JPEG in the data folder so you can use
00:53 - any image I've just grabbed off of
00:54 - Wikipedia an image of a sunflower and
00:56 - that's what I'm going to pixel sort so
00:59 - if first thing I want to do is I want to
01:00 - create a p image variable and then I'm
01:03 - going to say image load image uh and
01:05 - it's sunflower
01:07 - JPEG and then I want to draw the image
01:10 - image 0 0 so I want to see here my the
01:13 - canvas that I'm I'm you're going to see
01:14 - is 800 by 400 so uh what I want to do
01:18 - now is have the uh the raw image on the
01:21 - left and the sorted image on the right
01:23 - okay so I've got part one now here's the
01:25 - thing what I want now is another image
01:29 - called source
01:30 - and I want to create a blank image uh
01:33 - equals uh create image and I want it to
01:36 - be the same width and height and I want
01:40 - it to be an RGB image as um the image so
01:43 - this in processing is how I load an
01:45 - image from the file here's how I create
01:47 - a blank image so now and so and let's
01:50 - just do something really quickly now um
01:53 - all images oh look at this there's a
01:55 - weird bar here I don't know that's a
01:58 - glitch with my camera I'm just going to
01:59 - have to live with it but all
02:01 - images the
02:03 - pixels we think of them as organized on
02:07 - a grid like here's pixel like 012 comma
02:11 - 01 that's pixel 2 comma 1 the computer
02:14 - stores all the pixels in a linear list 0
02:17 - 1 2 3 4 five six 7 so to the computer
02:21 - this is actually pixel index 7 which is
02:23 - actually the eighth pixel because I
02:24 - started counting from zero so and in
02:27 - processing I can look at all of the
02:28 - pixels of an image that array by saying
02:31 - the image. pixels itself so I'm going to
02:34 - come over here I also need to do
02:36 - something like say
02:38 - um uh sorted. load pixels this is kind
02:41 - of like a little announcement like hey
02:43 - I'm going to look at the pixels now and
02:44 - I'm going to say four I'm going to write
02:46 - a for loop I equals z i is less than
02:50 - sorted. pixels. length
02:55 - i++ and I'm going to say sorted IND uh
02:59 - pixel index I equals a color random 255
03:03 - so processing has a function called
03:05 - color and if you give it a single number
03:07 - it'll make a nice grayscale color and
03:09 - it'll put in that pixel that image and
03:11 - then I can say sorted. update pixels I'm
03:14 - not doing the Sorting yet I'm just
03:15 - showing you how this works so
03:17 - now if I in the draw function I say I
03:21 - draw the image and uh I draw both the
03:25 - original image and this quote unquote
03:27 - sorted image which is now just random
03:28 - colors I should see this so we can see I
03:31 - have an image that's loaded from a file
03:33 - and an image with pixels that I made up
03:35 - so now what I need to do is take all of
03:37 - these pixels and put them in this one to
03:39 - sort it so actually something that I
03:40 - could do right here is I could say uh
03:43 - image. pixels indexi and I could say
03:46 - image. load
03:49 - pixels so now this is me manually one at
03:52 - a time copying every pixel from image
03:54 - into sorted here we go Tada two
03:56 - sunflowers by the way I love sunflowers
03:58 - do you love sunflowers tell me about
04:00 - your favorite flower in the
04:01 - comments and then you can all you can
04:03 - write oh cringe cringe this seems to be
04:05 - the thing that people write whenever I
04:07 - talk about flowers or kittens or puppies
04:09 - or rainbows or whatever but you know
04:11 - these things are nice things can we have
04:13 - nice things please okay so now I need
04:15 - time by the way I'm avoiding I'm like
04:17 - stressed out here I'm procrastinating I
04:18 - got to get to the Sorting so here's the
04:20 - thing most programming environments will
04:23 - come with some kind of function to sort
04:25 - an array and Java is no exception even
04:29 - processing is no exception it has a sort
04:31 - function but the thing is I need to do
04:34 - something kind of custom here because
04:36 - this array is like this crazy array of
04:39 - colors and I want to like organize it
04:41 - it's they're arbitrary numbers a color
04:43 - is an r a g and a b value and an alpha
04:46 - value sometimes so how I'm going to sort
04:48 - it I've got to write the Sorting
04:49 - algorithm manually sorting algorithms
04:52 - are the domain of people's PhD
04:55 - dissertations and lifetimes of study
04:57 - there's something called a bubble sort
04:58 - there's something called a selection
05:00 - sort there's even something called a
05:01 - quick sort and I probably for what I'm
05:03 - going to do could make great use out of
05:05 - a super fancy efficient fast sorting
05:07 - algorithm um there's a great uh uh write
05:11 - up I Believe by Mike Bok who the creator
05:13 - of D3 about an sorting algorithms and
05:14 - how they work I'll link to that in this
05:16 - video's description but for what I'm
05:18 - going to do right here just to make
05:19 - things simple I'm going to implement a
05:21 - selection sort and so I think the way
05:23 - that I can do
05:25 - this right I have two arrays oh you
05:28 - can't see all this that I'm cut off but
05:30 - that's fine this is my first array I'm
05:33 - going to look through the entire array
05:35 - for the brightest pixel when I find the
05:38 - brightest pixel I am going to put that
05:41 - over
05:42 - here and what I'm actually going to do
05:44 - is I'm going to have to um you know what
05:46 - I need to do I actually need to copy the
05:48 - whole image because I I need to
05:52 - rearrange the pixels while I'm sorting
05:54 - but I don't want to mess with the
05:56 - original pixels of the image so I'm
05:57 - going to copy the whole image and let's
05:59 - talk talk about the selection sort again
06:01 - back I realiz you do this in a different
06:03 - way than I had previously imagined I'm
06:05 - going to look at all the pixels of the
06:07 - image find the brightest one let's say
06:09 - this is the brightest one I'm going to
06:11 - take this and put it in the first spot
06:13 - and take that first spot and put it
06:15 - there that's called a swap then I can
06:18 - start From Here and Now look for the
06:20 - brightest one and take that one and put
06:22 - it in the second spot then I can start
06:23 - from here and look for the brightest one
06:25 - so I'm kind of looping through the
06:27 - entire array to find the brightest one
06:28 - to put it in the first spot then I'm
06:30 - starting at the second the third the
06:31 - fourth so I'm always getting a smaller
06:32 - section of the array because the
06:34 - beginning and that will grow is the sort
06:36 - of sorted part so let's see if I can do
06:38 - that and uh one thing I can do by so
06:41 - this this is a way that I copied all the
06:43 - pixels just in case you're wondering I
06:45 - could actually
06:47 - um I could actually I believe say sorted
06:51 - equals image. getet so that's a get is a
06:54 - function in processing that just gets a
06:55 - copy of the image let's see if that
06:58 - works great so that's a little easier
07:00 - than copying the pixels manually just so
07:01 - you see that's there and now what I need
07:03 - to do is I need a selection sort so
07:06 - let's think about how I'm going to do
07:07 - this again I'm going to say four and I
07:10 - do need sorted. load
07:13 - pixels I'm going to say four in I equals
07:16 - z i is less than image do sorted sorted.
07:21 - pixels. length I plus plus okay so this
07:25 - is looking at every single Pixel but for
07:28 - every single Pixel I need to look at all
07:30 - the pixels that come after it so I need
07:32 - to say four and J equals starting at
07:36 - i j plus J is less than sorted. pixels.
07:40 - length
07:42 - j++ okay right because I want to start
07:45 - again if I come back to that diagram I
07:47 - want to start at zero and look through
07:49 - all the pixels then I want to go to one
07:50 - and look through all the pixels then I
07:51 - want to go to two and look through all
07:52 - the pixels okay so that's what this
07:55 - nested Loop is doing so the first thing
07:57 - I need to do is let me sort by
07:58 - brightness so I'm going to say b equals
08:00 - the brightness let it's first let's get
08:03 - a color pix equals sorted index J oh no
08:07 - sorted. pixels index J that is the color
08:11 - at that particular pixel the brightness
08:14 - of that color you know I could compute
08:17 - it but processing has these nice
08:18 - functions that'll just it's just the
08:20 - average of the RGB values so I'm G to
08:22 - get that brightness now what do I need I
08:25 - need to find the record brightness of
08:28 - any pixel for each time I do this so I'm
08:31 - going to create a variable called record
08:33 - I'm going to set it to negative one
08:34 - right because no pixel can have a
08:36 - brightness less than negative one less
08:38 - than zero so I want to say and then I
08:41 - want to have I'm going to say
08:44 - brightest index you know what I'm going
08:46 - to do because I might change the
08:47 - algorithm I'm going to say selected
08:51 - pixel equals uh equals
08:55 - um I because I can start by default I'm
08:58 - going to start with the first one
09:00 - selected pixel equals I so what I want
09:02 - to do now and say
09:04 - if brightness is greater than the
09:09 - record then that's the selected
09:12 - pixel is now J and the record is now
09:17 - that brightness so this is like looking
09:19 - at every pixel from J to the end and
09:22 - seeing if its brightness beats whatever
09:24 - previous brightest one I found storing
09:26 - it as a selected and storing a record so
09:29 - now once I finish this Loop now I going
09:31 - to do is swap selected pixel with I so I
09:36 - need to take whatever was selected as
09:38 - the brightest and put it in the ey spot
09:40 - and then whatever is in the ey spot
09:41 - stick it back somewhere else so how do I
09:45 - do this basically what I want to say is
09:47 - sorted. pixels index selected pixel
09:52 - equals
09:54 - sorted. pixels index
09:57 - I and then sorted pixels index I equals
10:01 - sorted. pixels index select so this is a
10:04 - this won't work by the way this is a
10:06 - problem so um but but this is like a
10:09 - nice idea right I want to take what's in
10:11 - I and put it in selected pixel and
10:12 - what's I what and what's what's in
10:14 - selected pixel and put it in I here's
10:17 - the problem though uh and I actually I
10:19 - prefer to write it I don't know this is
10:20 - like kind of nonsense but I need to I
10:23 - need to feel like okay about things in
10:25 - life generally for some reason I need I
10:26 - to be first that's just how I am I want
10:28 - to take what's selected pixel and put it
10:30 - in I and what's in I and put it in
10:32 - selected pixel the problem is I just
10:34 - overwrote what was in I so I've lost it
10:36 - so what I actually need is something
10:38 - like a temporary variable to store
10:41 - what's in sorted pixels index I and so
10:45 - that I can put that in
10:49 - temp I that didn't make any sense let me
10:51 - say that again I need to save what's in
10:53 - I because I'm about to overwrite what's
10:55 - in I so that I can grab it again and put
10:57 - it in selected pixel this is an gthm for
10:59 - swapping two spots in the array and then
11:02 - once I'm done I think this is everything
11:05 - this should actually work I have no idea
11:08 - how long this is going to take this is
11:09 - not a particularly efficient algorithm
11:12 - and this is uh this is you know there's
11:13 - this thing called like Big O notation
11:15 - that people talk about in like computer
11:17 - science of like how fast is an algorithm
11:19 - this is like an N squared algorithm
11:21 - because for every pixel you need to
11:22 - check every pixel so if there were just
11:24 - 10 pixels I basically got like 100
11:26 - checks but if there's 100 pixels I've
11:28 - got one Z Zer z0 10,000 checks so I hope
11:33 - I did that math right so this is G of
11:34 - with with with a 400 by 400 image
11:39 - there's going to be a lot a lot of
11:40 - pixels to check so let's run this and
11:41 - see what
11:44 - happens okay I'm back that took a really
11:47 - long time because it takes a really long
11:49 - time there's 400 time 400 pixels there's
11:51 - a lot of pixels to sort um so um this
11:55 - I'm going to have to I sampled the image
11:57 - down to a 200x 200 image which I think
11:59 - it can sort it in Java in about 14
12:01 - seconds so I'm going to run that now uh
12:03 - and you can see the window's a little
12:04 - bit smaller but I'll zoom into it 1 1,2
12:07 - 1000 D D D come on Pixel sort come on do
12:11 - the pixel sort cringe that's what you do
12:14 - while you're watching and then you
12:15 - complain and type in the comments oh
12:17 - there you go so you can see this now
12:18 - sorted every pixel horizontally by
12:22 - brightness let's see if we can sort it
12:24 - by Hue which I think will be interesting
12:26 - to try uh okay so instead of looking at
12:29 - the brightness why don't I look at the
12:32 - Hue so processing has a function called
12:35 - Hue which will give me the Hue value of
12:37 - a particular color so I can actually
12:39 - look at that and I believe this should
12:41 - take just about the same amount of time
12:43 - do the pixel sort by do the pixel sort
12:46 - by this could get edited out maybe
12:49 - someday too and it could just appear so
12:51 - you can see look at that this edited
12:53 - nicely by Hue and so you can see I have
12:55 - all of these sort of like orangey colors
12:57 - at the bottom yellow colors this nice
13:00 - sort of uh palette so this is pixel
13:02 - sorting now the thing is I'm just doing
13:04 - sort of like the raw basic algorithm you
13:07 - should take this code find the link and
13:09 - get up and be creative with it so first
13:11 - of all you should think about um what's
13:13 - a different what's another way you could
13:14 - imagine sorting the pixels besides just
13:16 - brightness or hue here's another thing
13:19 - I'm just ordering them horizontally what
13:21 - if I order them vertically or what if I
13:23 - order them spiraling out from the center
13:25 - or coming in from the edges what types
13:28 - of other strange what if I only sort
13:30 - part of the image and you'll see um lots
13:32 - of art if you goog again if you Google
13:34 - image search pixel sorting art you'll
13:36 - find a lot of creative examples of this
13:37 - and I hope you make something and send
13:38 - it to me but before I go I want to add
13:40 - one more thing to this because it takes
13:41 - so long I think it would be interesting
13:43 - to watch it sort animate the sort so in
13:47 - other words the Sorting happens right
13:50 - here this is the so I'm going to save
13:53 - this and I'm going to save a new version
13:55 - called pixel sorting animation so what
13:58 - I'm going to do now is I'm going to the
14:00 - processing has a draw Loop right it's
14:02 - actually drawing this stuff over and
14:03 - over again I did all of the sorting and
14:05 - setup and it was finished but what I
14:06 - want to actually do is do the
14:11 - Sorting uh in
14:15 - draw so every single time through draw
14:18 - what I want to do is sort but instead of
14:20 - having a loop draw is already looping so
14:23 - I is something that can become a global
14:25 - variable I'm going to call it index set
14:28 - it equal to zero I don't need this
14:31 - anymore I don't need that outer loop
14:33 - anymore it's going to do one one pixel
14:38 - per frame of Animation so the selected
14:41 - pixel is
14:42 - index J starts at index and then uh
14:48 - whoops and then I swap at
14:54 - index
14:55 - index and then what do I do I say IND
14:59 - index Plus+ and I should also check if
15:01 - index is greater than or equal to uh
15:05 - sorted. pixels.
15:10 - length uh you know I don't want the I
15:12 - can't spell length how do you spell
15:13 - length oh my God uh if it's greater than
15:17 - uh length minus one I could
15:20 - um uh if it's as long as it's less than
15:23 - length minus one I can increase it by
15:27 - one okay so now let's run
15:31 - this you can see like it's very very
15:34 - slowly you can see it kind of sorting up
15:36 - there right I'm zooming all the way in
15:38 - it's happening very very slowly sorting
15:40 - by Hue now again this is such a tiny
15:42 - resolution image that we're barely
15:44 - seeing it so now I can actually let me
15:47 - go with the larger image I'm going to
15:49 - change this to um 800 by 400 I'm going
15:53 - to load sunflower 400 a higher
15:55 - resolution sunflower and I'm going to uh
15:59 - um I just need to change where I'm
16:00 - drawing it at 400 comma Zer so now we
16:02 - can run this and I can sort of see here
16:04 - there it is you can see it sorting the
16:06 - pixels now here's the thing I'm doing
16:08 - one pixel at a time per frame I think it
16:10 - would be much nicer if I at least did a
16:13 - bunch so I'm GNA actually just write a
16:15 - little Loop inside of draw to say hey
16:17 - whatever I was just doing do that like I
16:20 - don't know a 100 times 100 times is not
16:23 - that many there's a lot of pixels so uh
16:26 - and so I'm going to put that like so I'm
16:28 - only doing now I'm doing 100 pixels at a
16:30 - time and let's see what that looks
16:34 - like is it going any faster let's let's
16:37 - try let's try a thousand pixels at a
16:40 - time oh that's so a th000 pixels is
16:44 - actually quite slow per frame so I think
16:47 - I've kind of lost one thing I want to
16:48 - look at is what the frame rate
16:51 - is so I want this to run I want to do
16:53 - the most amount as I can the most amount
16:56 - of pixels I can but still be running at
16:59 - like 30 frames per second which I'm
17:00 - clearly not so let's do it at
17:05 - 100 and we can whoa why is this so
17:12 - slow you know what the load oh you know
17:15 - what might be the
17:16 - problem no anyway I I need to I'm gonna
17:22 - I'm gonna up update this it's very CPU
17:25 - heavy and it's just very slow I I you
17:27 - know I think there could be some more
17:29 - creative ways I could think about
17:30 - animating this we could let this run for
17:32 - a little while and see how far it gets
17:34 - but for example um I so this is now
17:38 - animating at 30 frames per second which
17:39 - is quite nice I'm doing like 10 pixels
17:41 - at a time um and you know it's doing 30
17:44 - frames per second so that's 300 pixels
17:45 - per second still going to take a very
17:47 - long time to finish the whole thing but
17:49 - there might be some other creative ways
17:51 - like this might actually look more
17:52 - interesting if I didn't draw the
17:53 - original image and you just saw the
17:55 - pixels getting filled in the ones the
17:56 - ones that have actually been um
17:59 - been uh swapped or I might like if I was
18:01 - doing it out from the center so I'm sure
18:03 - you will come up with some creative
18:04 - riffs off of this please share them with
18:06 - me in the comments share them with
18:08 - Twitter share them with me on Twitter at
18:09 - shiffman I hope you enjoyed this coding
18:11 - challenge in processing about pixel
18:13 - sorting um you can do this at very high
18:15 - resolutions it'll take a long time to
18:17 - render but then you can export it out as
18:19 - an image or something and make a big
18:21 - print and and let me know if you make
18:22 - something and I'll see you again in a
18:24 - future video goodbye hey guess what
18:25 - everybody I'm back look at this that
18:27 - doesn't look right I'm getting the
18:28 - interesting strange smear but it's not
18:31 - actually sorting the reason why it's not
18:33 - actually sorting is I didn't notice when
18:34 - I move stuff around to animate it look
18:36 - where the swap is happening the swap is
18:39 - happening inside this J loop I want to
18:42 - look through all the pixels find the
18:43 - brightest or the ones with the highest
18:45 - Hue and at the end of that swap it so I
18:47 - just had like a typo essentially where
18:49 - this closing bracket is in the wrong
18:51 - place I need to close that J Loop here
18:54 - and now it should actually sort by
18:57 - Hue um okay so now we should see
19:00 - something more correct so I had that
19:01 - mistake and you can see now that the
19:04 - Sorting is actually happening correctly
19:06 - now what I'm wondering is if having the
19:07 - swap inside was somehow making it also
19:09 - run slower and if I could actually
19:11 - manage to to have it run
19:14 - faster n it's still pretty slow it will
19:16 - slowly gain speed over time because as
19:18 - it gets further along oh you can't
19:20 - actually see my frame rate I just
19:22 - noticed as it gets uh further
19:25 - along as it gets further along this is
19:27 - the frame rate here as it gets gets
19:28 - further along it has fewer pixels to
19:30 - check because it's getting further and
19:32 - further into the image and you should
19:33 - see that frame rate go up and up and up
19:35 - and up and up but you can see now that
19:37 - the Sorting is actually now happening
19:39 - correctly and it actually is sorting by
19:41 - Hugh again I'm you know by Hugh is not
19:45 - necessarily the
19:47 - um well is that NE the most I there are
19:52 - lots of I think this is a challenge to
19:54 - you is like I just picked H and I just
19:56 - picked brightness as arbitrary numeric
19:59 - indicators of a pixel's value as a
20:00 - single number but you might think about
20:02 - other ways of thinking about how could
20:04 - you order those pixels and so I'm going
20:06 - to let this run for a while and um hope
20:09 - you enjoy it and also you know you could
20:10 - pick a different image than the than the
20:12 - sunflower you can mess around with how
20:13 - you're sorting it I'm sure you'll come
20:14 - up with something creative and I'll see
20:16 - you in a future video I think this might
20:17 - really be the end goodbye
20:20 - [Music]