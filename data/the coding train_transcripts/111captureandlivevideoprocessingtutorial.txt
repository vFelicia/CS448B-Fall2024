00:02 - okay so we are now ready to move on to
00:07 - uh something pretty different and
00:11 - exciting um and what that is is looking
00:15 - at moving images so we spent all this
00:17 - time saying okay I could uh I could have
00:20 - a blank P image and I could figure out
00:23 - some interesting algorithmic way to set
00:25 - all the pixels of that image or I could
00:27 - have an image that's coming from aile
00:30 - like frog. JPEG and I could load that
00:33 - image and I have access to all the
00:34 - pixels and I can draw it on the screen I
00:36 - can manipulate it I can do all sorts of
00:38 - stuff what if however we could have a uh
00:43 - camera I don't know this is my weird
00:45 - drawing of a camera and what if I could
00:47 - pull in a live image from a camera into
00:50 - my processing sketch what could I do
00:52 - with that what if I had a you know a
00:54 - movie file could I pull in that movie
00:56 - and play back that movie in my
00:58 - processing sketch speeding in it up
01:00 - slowing it down going in reverse how
01:02 - could I how do how does all this stuff
01:03 - work how do we make this happen so let's
01:06 - first just take the basic transition
01:08 - from Flat image file to camera and the
01:12 - way that we're going to do this is with
01:15 - processings capture
01:19 - object so the capture object is part of
01:26 - processings video package now I just
01:29 - realized there's kind of a crucial
01:30 - component to this if you are using and
01:34 - again this part of the video sadly is
01:35 - going to be just become obsolete in a
01:37 - little while but uh if you are using the
01:40 - 3.0 Alpha Series and hopefully there'll
01:43 - be a beta soon or a final version this
01:45 - will be true for all of the 3.0 versions
01:47 - of processing let's come over here and
01:49 - look uh uh here if you if I go to um
01:54 - import Library let me just zoom in here
01:57 - import Library ad Library um and I pull
02:00 - this
02:01 - up your um you won't by default have the
02:05 - video library so I'm going to search
02:09 - under processing and this is what you're
02:11 - looking for you want to find in this
02:13 - contributions manager the video library
02:16 - by the processing foundation so in order
02:18 - to run any of these examples or to work
02:20 - with live video or recorded movies in
02:24 - processing you need this particular
02:25 - video library in all the previous
02:27 - versions of processing prior to 3.0 this
02:29 - Library came with processing but it's
02:31 - quite of a large uh a large library and
02:35 - also it's maintained and updated on a
02:38 - separate schedule so uh by pulling it in
02:40 - separately um all you need to do is hey
02:43 - whoa I have actually amazing I uh I
02:47 - forgot that I just did a fresh install
02:49 - processing here so this is we're going
02:51 - to test this out you just want to hit
02:52 - this install button and uh while it's
02:55 - downloading and it should be ready to go
02:57 - and now we're going to have this Library
03:01 - yeah and then it'll say remove so if you
03:02 - don't have the video library make sure
03:03 - you get it okay back over here once you
03:06 - have the video library you now have
03:08 - access to the capture object you also
03:10 - have access to the movie Object so
03:14 - capture being live video from some
03:17 - camera that's connected to your computer
03:20 - uh movie Object you'll use for uh video
03:23 - files um that you're loading and playing
03:26 - back in processing
03:28 - so here's the thing the the thing that's
03:30 - the most wonderful about this is that
03:33 - the both of these
03:35 - things are P images essentially all of
03:39 - the functionality image pixels width
03:42 - height copy any piece of functionality
03:44 - you learned and practiced and did with P
03:47 - image you could do exactly the same
03:49 - functionality with capture and movie The
03:51 - only thing that's different is when you
03:53 - load a p image like frog. jpeg those
03:57 - pixels are never going to change unless
03:58 - you change them right that file that
04:01 - image is a flat static image those
04:03 - pixels are the pixels you can do all the
04:06 - same operations but with a capture
04:08 - object or a movie Object those pixels
04:10 - might be changing According to some
04:11 - schedule of course we have total control
04:14 - over that schedule we could say give me
04:15 - fresh pixels from the camera or stop
04:17 - giving me fresh pixels from the camera
04:19 - or Advance the next frame of the movie
04:21 - or don't Advance the next frame of the
04:22 - movie so this is an added piece of the
04:25 - puzzle that we'll be able to work with
04:26 - as you start using these classes so
04:28 - let's let's sort of uh let's look and
04:31 - see how this would work and there's a
04:33 - couple little nuances here so I'm back
04:35 - over here and I'm in a sketch so this is
04:38 - just a kind of a simple processing
04:40 - sketch that that I think we did at some
04:42 - point in an earlier video I'm loading an
04:44 - image and I'm drawing on the screen I'm
04:45 - using a couple things one you can see I
04:47 - can dynamically resize the image as I
04:49 - draw it using the mouse or I can also
04:51 - tint it meaning change its color so what
04:54 - I want to emphasize in this just first
04:57 - uh part of this video is let's let's
04:59 - make this the capture object from the
05:01 - camera I have a laptop in front of me
05:03 - it's not all magic let's get that image
05:05 - from that camera and let's see that
05:07 - there and do all the same stuff for it
05:09 - so instead the first step is instead of
05:12 - a p image I want to say capture and I'm
05:14 - going to just say video now notice as
05:17 - soon as I do that I get an error message
05:19 - it says um if I look at the errors you
05:22 - can say the class capture does not exist
05:25 - now this needs a little bit of work here
05:27 - but it's actually giving me a suggestion
05:29 - which is nice this is part capture and
05:32 - movie are both part of that processing
05:34 - video library that we just installed so
05:36 - even though I've install the library I
05:38 - have to in my code make an explicit
05:41 - reference that I'm going to use it so
05:43 - I'm just going to it processing will add
05:45 - this for you automatically in a bunch of
05:47 - different ways but I'm just going to do
05:48 - it manually so I just need to have an
05:49 - import statement at the top import
05:51 - processing. video. Star now I have my
05:53 - capture object now you might think you
05:56 - would say something like I said load
05:58 - image load
06:00 - capture or something create capture
06:04 - connect video start video um the way
06:06 - that this works however is uh there is
06:09 - no function like that we need to use the
06:11 - sort of tools and syntax of
06:12 - object-oriented programming so let's
06:13 - come back over here and if I have a
06:16 - video object the syntax is to say I want
06:18 - to make a
06:21 - new capture object and I need to figure
06:24 - out what goes in there so what might be
06:27 - some parameters that you need when
06:29 - you're about to connect to a live
06:31 - camera maybe you might say ah uh camera
06:35 - over there I would like a very high
06:37 - resolution image or a very low
06:38 - resolution image so some parameters
06:40 - we're going to put in there is the width
06:42 - and height of our
06:43 - requested uh images that we'll get from
06:45 - the camera another piece of information
06:47 - that we might put over here is uh frame
06:50 - rate do I want to get images from the
06:52 - camera at 30 frames 60 frames 120 frames
06:55 - 15 frames now with both of these frames
06:58 - per second so so with both of these
07:01 - certain cameras are only going to
07:03 - support certain resolutions and certain
07:05 - frame rates so a lot of this really
07:07 - depends on what you've got and I'm going
07:08 - to show you a way to figure out what
07:10 - your camera makes available to
07:11 - you but you know generally speaking 640
07:15 - by 480 30 frames per second those are
07:18 - kind of good numbers to use and in fact
07:20 - this is an optional parameter you're
07:21 - just going to get the default frame rate
07:23 - if you don't uh request a specific one
07:25 - which is usually 30 frames per second
07:27 - now there's another argument that needs
07:29 - to go in here and this is one of those
07:30 - tricky ones that appears in when you're
07:32 - using in a lot of times when you're
07:34 - using a processing Library one of the
07:36 - things we need to do is we need to say
07:39 - hey capture object camera I you're going
07:42 - to have new images available you're
07:44 - looking at the room you're looking at me
07:46 - you know where I want you to give those
07:47 - images I want you to give those images
07:49 - to me who's me this particular
07:51 - processing sketch this sketch so the
07:54 - keyword this needs to go in here now we
07:57 - could have a much longer discussion
07:58 - about what the keyword word this means
08:00 - and Java and then we could sit here and
08:01 - complain for a while about how confusing
08:03 - these like archaic Concepts in like
08:06 - oldfashioned languages like Java are but
08:09 - for we don't really need to worry about
08:10 - it too much to make all this stuff work
08:12 - we just need to remember the keyword
08:13 - this goes there and I think it's useful
08:15 - to kind of think about the fact that
08:16 - this is referring to this processing
08:18 - sketch I don't want the camera images to
08:20 - go to some other program on the computer
08:22 - I want them to go to this processing
08:24 - sketch and we're telling the library
08:25 - that this this happens in a lot of other
08:27 - ways behind the scenes in processing but
08:29 - you you don't always have to use that
08:30 - keyword this capture and movie are two
08:32 - instances where you do okay so let's
08:34 - come back over here and let's say uh
08:38 - okay video equals
08:40 - new
08:42 - capture and what do we say we need to
08:43 - say this we need to give it some
08:45 - resolution and a frames per second let's
08:48 - do this and um so we're making this
08:52 - argument that I can now get rid of frog
08:55 - we don't need the Frog but everything I
08:58 - did with the Frog I can do with the
09:00 - video so I should now instead of seeing
09:04 - the Frog
09:05 - image I should see the
09:09 - video no video but I didn't get any
09:11 - errors seems things seem to be working
09:13 - so things are good okay there's a couple
09:15 - things we forgot what did we forget one
09:18 - thing we forgot is that we have to
09:20 - explicitly tell the video to begin so
09:23 - one thing we need to add is video. start
09:26 - start there we go coming over here come
09:31 - back let's add that
09:33 - in and I'm going to go here video. start
09:37 - now let's run this
09:42 - again it's not nothing oh but look you
09:45 - can't see this but I can see it there's
09:46 - a green light I've got a Mac laptop with
09:48 - a built-in web camera there's a green
09:49 - light over there so the camera is going
09:52 - but I don't see the images why not
09:54 - there's another key function that we've
09:56 - missed there's a key function in the
09:59 - video library and it is called read read
10:02 - we need to with with with a loading a
10:05 - static image it's sort of assumed let me
10:07 - get that static image I've got it let me
10:09 - display it with a video image we need to
10:12 - explicitly say at this moment in time I
10:14 - want you to give me the freshest pixels
10:17 - from the camera possible and the
10:19 - function read reads the current image
10:22 - that the camera is seeing so one thing I
10:24 - could do just as a sort of quick and
10:25 - dirty solution to this is just say
10:27 - video. read in draw so every time
10:30 - through draw and like draw is looping
10:32 - looping looping give me fresh pixels
10:33 - give me fresh pixels let's run this
10:36 - we're going to have some weird crazy
10:37 - video feedback thing probably Happening
10:41 - Here
10:43 - uh oh wait wait because the mouse there
10:45 - we go look look there I am and look I'm
10:48 - actually here and I'm here and there's
10:50 - all sorts of weird like strange
10:52 - interference and there's green behind me
10:54 - because all secrets are now revealed
10:57 - this is a green screen but someday I'm
10:58 - going to they do this in a different way
11:00 - and there's like all sorts of crazy
11:01 - jittering going on I I don't I think a
11:02 - lot of weird stuff is happening um
11:05 - because of actually not necessarily so
11:08 - what I've done is kind of a bad
11:11 - idea um because oh I guess I have the
11:13 - ttin I don't know what's going on with
11:14 - this Jitter but I a lot of it has to do
11:16 - I think with the way I have this
11:17 - recording system going on but also let's
11:19 - just say that there is a bad idea here
11:21 - which is that which is that and
11:24 - um which is that there's no reason for
11:26 - me to uh uh read from the camera every
11:29 - time uh through draw in fact I only want
11:32 - to read from the camera when the camera
11:35 - like draw is actually running at 60
11:36 - frames per second probably the camera is
11:38 - going at 30 frames per second I only
11:39 - want to read if there's an available
11:41 - message uh if there is an actual
11:43 - actually a new uh image
11:46 - available so one way I can do that you
11:49 - can see I've added this if statement if
11:51 - there is a new message available from
11:53 - the camera uh and actually let's we we
11:56 - see the point that um tint and the IM
11:59 - resizing is working so but let's just
12:01 - take that out for right
12:02 - now just so we have something a little
12:04 - bit simpler to look at so we should see
12:07 - now the image and you can see none of
12:09 - that weird jittering and all that stuff
12:11 - is happening and I can you'll see
12:13 - the what's going on here so okay so uh
12:17 - this works um and and in fact we saw
12:20 - that that was a bad idea not to have
12:21 - this video dot available but even this
12:23 - is not the best we can do we can do
12:26 - better so how can we do better one way
12:29 - that we can do better is uh we can
12:32 - Implement something called a capture
12:39 - event and I'm going to take this out
12:42 - here look at this now I've taken video.
12:45 - read out of draw and I've placed it in
12:48 - the capture event I placed it inside
12:51 - this function called capture event so
12:53 - what is hopefully familiar to you is a
12:55 - function like this this function is an
12:59 - event call back when the event happens I
13:02 - call back to that function and Trigger
13:04 - the code that's inside it so when I
13:05 - click the mouse I execute that code
13:08 - capture event is an event that's
13:10 - triggered by the camera itself whenever
13:14 - um Whenever there is a new frame New
13:18 - Image available from the camera so this
13:20 - now is happening off almost in a
13:22 - different place like this is the code
13:24 - for like I just want to continuously
13:26 - always read from the camera no matter
13:27 - what's going on so it's always reading
13:29 - the freshest image whenever there's an
13:30 - event just to just to kind of
13:32 - demonstrate this if I took video. read
13:34 - out of here and put it in mous
13:36 - pressed when we run this uh sketch now
13:39 - there's no image here but whenever I
13:41 - click the mouse it's going to take a
13:43 - snapshot of me right I'm only reading
13:45 - the image from the camera when the mouse
13:47 - is pressed this is like way too much
13:51 - fun right so so this is something you
13:54 - can see you have a lot of control here
13:56 - you can choose when you want to read
13:57 - when you want to stop reading reading I
13:59 - could now copy those pixels into a
14:00 - different frame so if you wanted to
14:02 - build say a photo booth application
14:04 - where you're seeing yourself you click
14:06 - the mouse you get a snapshot it prints
14:08 - it out it changes the colors it does
14:10 - stuff to it all of that image processing
14:12 - stuff we learned you can do all of this
14:13 - to this image so any single one of those
14:16 - examples we can go back and replace the
14:18 - image with the uh with a live video
14:21 - let's just do one of them uh okay so let
14:24 - me save this oh uh there's a couple
14:26 - there's a detail that I forgot but since
14:28 - I'm on this uh let's go uh open recent
14:32 - uh the particles one so if you remember
14:35 - this particular example where all of
14:38 - these things were streaking out and
14:40 - coloring the Frog
14:42 - image um let's remake that with capture
14:46 - let's just see that this actually works
14:47 - what are we we're at 15 minutes that's
14:49 - not terrible you're still watching
14:51 - you're very kind okay so I'm going to
14:54 - change
14:55 - to capture and I'm actually just going
14:57 - to call it frog just just keep the
14:59 - variable name the
15:03 - same let's make the windows 64 ah I
15:08 - there's a yeah let's and let's say
15:10 - instead of load image now we're going to
15:12 - say create
15:13 - capture uh this 640 480 and then we're
15:17 - going to say frog. start and then all I
15:20 - also need is capture event
15:25 - capture
15:27 - video video. read so you see how like in
15:31 - a matter of I don't know said create
15:33 - capture new capture create capture
15:34 - doesn't exist it's that's the that's the
15:36 - function that we we hope and dream for
15:39 - but uh we have to say new capture so um
15:41 - all I did really really quickly here was
15:43 - instead of having a p image and loading
15:44 - from the hard drive I changed the the
15:46 - the variable frog from a p image to a
15:48 - capture I instigated that capture and I
15:51 - make sure I'm reading from the camera
15:52 - continuously when I run this sketch it
15:54 - should actually be identical to what we
15:56 - had before only now
16:01 - uh right it's uh painting uh me as I'm
16:05 - trying to like stand still and you can
16:06 - see it's pulling the pixels from me and
16:08 - I could uh add like 2500 of them so we
16:12 - could see this a little bit more
16:14 - clearly this is really like a weird
16:17 - strange like performance art thing and
16:19 - you can see that as I move it's
16:22 - updating so this is like really where
16:25 - you can start to play around and kind of
16:27 - create this idea a of a software mirror
16:30 - so what is a system an independent
16:33 - drawing system that you could make where
16:35 - you're pulling colors from a live uh
16:38 - camera actually this is kind of a not
16:39 - not I I sort of like this example okay
16:42 - I'm G to stop dancing around from the
16:44 - camera I'm having too much fun here and
16:45 - okay so there's a couple key pieces of
16:49 - uh here now let's say oh I what I this
16:51 - is the most beautiful visual artwork
16:54 - made by a computer that anyone has ever
16:55 - made in the world that I must make it
16:57 - bigger and put it on a giant screen
16:58 - screen and everyone must experience it
17:01 - so um I'm going to make uh this I I
17:03 - don't know what the resolution of this
17:04 - computer is right now I'm going to make
17:06 - this 12200 by 700 and I'm going to run
17:08 - it again and you can see
17:12 - now uh here we okay so I I have this
17:16 - like giant window but oh it didn't work
17:18 - because the image is still like 640 by
17:20 - 480 even though it made my processing
17:21 - window bigger and actually the the way
17:24 - to do this by the way in processing
17:25 - while we're here is display
17:27 - with
17:29 - display height now this is what I wanted
17:31 - to demonstrate so I'm going to make this
17:33 - giant full screen thing uh it's going to
17:36 - open up it's taking over the screen and
17:39 - but I don't see anything at some point
17:41 - uh because my resolution everything's
17:43 - all oh there's some of them and they're
17:45 - coming over here but again the image is
17:48 - only this size so how do we deal with
17:50 - this problem well there's a couple and
17:52 - I'm just going to go back to 640x 480
17:54 - for a second so there's a couple ways to
17:57 - deal with this problem number one is we
17:59 - need to figure out well couldn't I
18:01 - capture a higher resolution image from
18:03 - the camera why not right let me if I can
18:05 - get a higher resolution image from the
18:07 - camera so one thing we want to look at
18:09 - is what are the possibilities themselves
18:12 - so one thing I'm going to do there's um
18:14 - a function in the video library called
18:17 - list capture. list this is actually
18:19 - giving you a string array so I'm going
18:21 - to just say print array so I can see
18:24 - what's there and we're going to come
18:27 - down and run this and look in the
18:29 - console hopefully I'm running this now
18:32 - right and you can see you can see like
18:35 - oh there's all these options oh look the
18:37 - camera will actually give me a 1280 by
18:40 - 720 image and look at all my frames per
18:43 - second options so these are actually all
18:46 - the different and if I had multiple
18:48 - cameras connected to this
18:50 - computer then I would see like oh I
18:52 - could pick the camera that I want maybe
18:54 - I want this external webcam or this
18:55 - other camera source so this is useful
18:57 - and you can can actually pull you can
18:59 - pull this string out of the array and
19:01 - pass it into the capture Constructor and
19:03 - it'll uh so you know if if I were to
19:06 - just say this capture. list index you
19:10 - know five what I'm actually doing is uh
19:15 - using this configuration 640 X 360
19:18 - frames per second one so you can pull
19:21 - from that list the configuration you
19:23 - want for the camera so that's sort of
19:25 - like a bit of an a side note that I
19:27 - think is useful for you to be aware of
19:29 - but I think what is more relevant here
19:32 - is not actually changing the resolution
19:34 - of what I'm getting from the camera
19:36 - let's think about it this way what if I
19:38 - were to say let me make this
19:41 - 1280 by
19:43 - 960 what I just did is
19:45 - double the size of the window relative
19:49 - to the size of the video that I'm
19:51 - capturing if I run this once again yet
19:54 - again as we've now seen this many many
19:56 - times takes so long for this start up
19:59 - this is very awkward uh I'm only getting
20:02 - colors in the top leftand Corner because
20:05 - I uh I doubled the size of the window
20:08 - but the the capture image is still less
20:11 - so what if however though what these
20:14 - pixels are at an XY they're moving all
20:18 - throughout this much larger space what
20:20 - if I said as the pixels are moving
20:22 - around this larger space sample down
20:25 - when you go to look up a color how do I
20:27 - sample down I just divide in this case
20:29 - I'm just going to divide by
20:31 - two so now that I've done this I I
20:33 - should have a much higher resolution
20:35 - processing window that's looking up
20:38 - colors in a lower resolution image and
20:41 - you can see here as I change the camera
20:43 - I now have this ridiculous thing that
20:45 - I've made at a higher resolution um and
20:48 - I'm waiting for those to come back into
20:50 - the center at a higher resolution but my
20:52 - capture is still at a lower resolution
20:54 - the reason why this is so crucial is and
20:56 - I'm sort of it seems like I'm spending a
20:58 - lot like way too much time on this and
21:00 - kind of wasting a lot of times this
21:01 - video is already 20 minutes long but
21:03 - this is going to come up again and again
21:04 - one of the things I hope to show you in
21:06 - the next video is using a computer
21:08 - vision Library like open CV to say find
21:11 - faces in an image however that's a very
21:13 - expensive process that can be very slow
21:16 - so you want to find the faces in the
21:18 - lowest resolution image possible but
21:20 - then use that data that you found in
21:23 - maybe a higher resolution display so
21:25 - this idea of having a scale of variable
21:27 - and one of the things that you'll see in
21:29 - a lot of my examples if you go through
21:30 - them is a variable like video scale in
21:33 - this case equals two so I might say here
21:36 - in capture you know width divided by
21:38 - video scale height divided by video
21:40 - scale so I can use that variable which
21:42 - is always keeping track of what's the
21:44 - ratio from my source imagery to my
21:47 - screen resolution that's something that
21:49 - I think you want to kind of keep an eye
21:50 - on as you work on projects like this
21:52 - okay sorry so I'm what I would suggest
21:55 - you do as an exercise and I didn't get
21:56 - to loading movies I'll make put that
21:58 - into a separate video but what I would
22:00 - suggest as an exercise is go and find
22:03 - something you did with a static image
22:05 - where you manipulated the pixels or
22:07 - looked up colors in those pixels and try
22:09 - to remake that exact processing sketch
22:11 - but with a live capture instead and see
22:14 - how that goes and I will see you in
22:16 - another video in another time in another
22:18 - place
22:19 - okay