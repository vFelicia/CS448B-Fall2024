00:05 - [Music]
00:11 - hello I'm here again two days in a row
00:14 - boo oh I forgot to put my cloaking
00:18 - device here which I will do on my extra
00:21 - laptop which now has my all my ukulele
00:24 - chords on it I don't see anyone actually
00:28 - saying anything to me in a chat I'm not
00:31 - sure if I've actually started or if I'm
00:33 - just imagining it I'm going to check the
00:37 - patron group here looking up people are
00:49 - saying hello to me okay so good morning
00:51 - it's not really the morning anymore it's
00:53 - almost noon I've got a couple hours here
00:55 - and the project for today is a
00:57 - tensorflow J s classification project so
01:01 - just a recap I was here yesterday and I
01:03 - did a couple coding challenges if I
01:06 - recall correctly there was that let's
01:09 - open them up
01:09 - I haven't uploaded the code yet actually
01:11 - - but let's just rip they were so nice I
01:14 - really liked them so take a minute to
01:16 - review them I definitely want to spend
01:21 - the entire two hours cleaning data if
01:24 - that had thought what happens that's
01:26 - gonna be worth it cuz that's kind of I
01:27 - was gonna say half the battle but I
01:29 - think it's all over the battle in
01:31 - machine learning is really thinking
01:32 - about your data open recent oh you know
01:37 - I moved everything I don't know why I'm
01:38 - looking for this I just want to run I
01:40 - want to run these I enjoyed them so much
01:42 - yesterday and I'm gonna go here I think
01:47 - I put them in here but what were they
01:49 - sand piles what was the other one
01:51 - remembers and piles what was it who's
01:55 - gonna tell me before I remember before I
01:59 - forget before I forget
02:02 - oh boy I think my brain is turned off
02:04 - today this is bad Oh Barnsley fern
02:06 - that's right
02:11 - sand piles where the sand piles go let's
02:13 - go all right here we go sand piles let's
02:19 - let's reduce the size here beautiful
02:25 - sand piles oh let's do this now while
02:38 - people are taking their time joining
02:40 - here gotta make that bonsly's for herd
03:21 - size Rufus
03:22 - [Music]
03:29 - all right let's see yeah somebody sent
03:34 - me K week Mon sent me some cords for
03:38 - somewhere over the rainbow ah oh I have
03:42 - to I have to provide my email to get a
03:44 - free trial if i refresh this page
03:49 - [Music]
03:52 - what's the minor this
03:58 - [Music]
04:02 - ooh okay all right so I'm just getting
04:24 - myself kind of mentally into shape we've
04:27 - got our sand piles I meant to zoom in on
04:29 - these
04:30 - and good morning hello good day good day
04:35 - I wish you good day for this all right
04:49 - so let's let's check out where we are
04:52 - I got a let's get ourselves centered and
04:54 - figure it and figure out what we're
04:56 - going to work on so I'm going to go to
05:01 - github.com slash coding train I am going
05:05 - to go to this crowdsource color data
05:08 - repository oh they're simple requests
05:13 - and all right so what I'm gonna do here
05:17 - is I'm gonna go to this page so this is
05:20 - where we were yesterday
05:20 - oh and many people from the community
05:24 - made some poor requests and change the
05:27 - design I think that's brown I think
05:30 - that's like greenish greenish greenish
05:35 - pinkish alright so this is my
05:38 - crowdsource color data example what's
05:41 - going on here I need some tape and so
05:53 - this is what I need now I also need to
05:54 - go to so the next video in this sequence
06:00 - tutorial sequence I am going to talk
06:04 - about cleaning the data and so what I'm
06:07 - going to do is actually I think I'm
06:10 - gonna write I was going to just download
06:11 - it directly from
06:14 - [Music]
06:17 - firebase database so the so I need to
06:21 - talk about the rules that were updated
06:24 - and I think what I'm gonna also do is
06:28 - I'm going to turn off writing so okay
06:34 - how can I put a comment in here no is
06:38 - there any way to put a comment in I
06:41 - wonder if this will work if I change
06:43 - this to false and then temp like for
06:52 - writing publish like well let me air
06:56 - saving rules oh so it needs expect line
07:01 - 8 expected curly bracket mmm I guess I
07:13 - just need to take this out just do false
07:18 - and how do you know all this me I am so
07:24 - me how do you know all this
07:29 - okay so let's go back to write false and
07:39 - so now I change the rules of the
07:43 - database if I go here hit refresh and
07:46 - try to click greenish great permission
07:49 - denied
07:50 - alright so I just wanted to shut off
07:52 - writing to the database temporarily I
07:56 - guess mmm why not just leave it on let's
08:01 - leave it on it son so unlike me let's
08:09 - make sure it's back that looks bluish to
08:11 - me
08:11 - great alright so I need to talk about
08:14 - the data the data the data the data so
08:19 - what I'm going to do in this video and
08:21 - let me get a sketch going that read
08:25 - the data so if p5 tensorflow crowdsource
08:34 - color
08:40 - let's see clean data
08:44 - let's open up terminal did not sleep
08:56 - well last night
08:57 - no no no did not sleep well last night
09:03 - this evening I will be attending Harry
09:07 - Potter and the cursed child on Broadway
09:09 - very excited about that
09:10 - no spoilers although I kind of know
09:12 - what's gonna happen anyway since I have
09:14 - read before what am i doing ok desktop
09:23 - p5 tensorflow no oh I want to be in
09:27 - desktop this is not boding well yeah
09:36 - fine
09:36 - there we go alright let's go to here so
09:47 - I've got firebase I've got this I want
09:50 - to go to here closed I don't want to
09:55 - reference this one ok and of course the
10:00 - camera goes off right now
10:07 - I don't know why I don't see the YouTube
10:11 - chat there we go
10:18 - so Adam and 1/2 in the chat asks can we
10:21 - contribute to the crowdsourcing so yes I
10:27 - would say like hold off right now as I'm
10:32 - go what I'm going to use what is
10:34 - currently there for the purpose of
10:36 - today's livestream but of course I'm
10:39 - glad for it to continue to be improved
10:41 - and then I will come back in future live
10:42 - streams potentially in reference it is
10:45 - this sound ok today I just wanna make
10:49 - sure the microphones not peeking I
10:50 - suppose I could listen to my own sound I
10:52 - could listen to my own voice just to
10:59 - find out test one two
11:02 - test test test one two
11:06 - I think it sounds fine okay okay and so
11:23 - so then what I need to do is I want to
11:27 - go to clean data here and open up the
11:32 - Adam editor I got to have a work flow
11:38 - day a day just to like redo all my
11:42 - workflow stuff clean data
11:53 - I'm gonna get to some actual content in
11:57 - a moment
12:12 - okay
12:16 - firebase let's go Schiffman net a to Z
12:22 - firebase so I think I have all the URLs
12:26 - I need and then retrieve data
12:39 - push call back I'm just looking for
12:41 - retrieving data if only somebody would
12:44 - make a tutorial on retrieving data for
12:46 - firebase
12:47 - then I would know how to do it hello
12:50 - Meier Thank You sponser Meijer in the
12:52 - chat oh I think coding garden with CJ is
12:56 - happening right now oh no in 30 minutes
13:03 - that'll be done by then I'll be done by
13:05 - then right reference on got data
13:10 - err data alright this is gonna do okay I
13:16 - think I want once all right I just want
13:19 - to use the once function what did what
13:23 - did Panzer on github use to retrieve the
13:30 - data load data then show loading where's
13:34 - the load data function return' database
13:42 - once that's what I want once I don't
13:47 - know why I have this on I want I want
13:48 - once okay close enough okay
13:58 - okay whoops I've totally lost the chat
14:01 - and everything here alright once value
14:04 - callback is good yeah you know um so me
14:07 - I am so me is asking not just gonna
14:10 - export it from the console so that was
14:11 - my original plan was that exported from
14:13 - the console and then like bring it into
14:16 - a Google Doc spreadsheet and then like
14:18 - you know clean it there but then I
14:20 - realized I think I might actually be
14:23 - better at cleaning it from JavaScript
14:24 - itself because what I could quickly do
14:27 - is just like do like a count I could I
14:29 - could visualize it so I think I want to
14:30 - do just the first so in this series
14:34 - which is just to kind of remind myself
14:38 - where I am if I go to the coding train
14:40 - and I go to neural networks in machine
14:45 - learning I think I am at this point in
14:49 - session 7 which is building a
14:53 - classifier with building a classifier
14:58 - with tensorflow j/s and so so far what I
15:07 - have done is I just did I think one or
15:10 - two kind of shoot short tutorials about
15:13 - crowdsourcing the data and I also wanted
15:18 - to reference somebody maybe this lack
15:21 - channel can help me out with this
15:24 - someone in the sent me a message I
15:28 - believe in the patron slack channel
15:29 - yesterday referencing a video about
15:32 - research into human perception and color
15:34 - that seemed kind of relevant so because
15:37 - sure that with me again that would be
15:41 - helpful okay so I think other than that
15:46 - I am ready to begin
15:52 - I don't wait on this I want this to be
15:57 - empty and so I'm starting with here I'm
16:06 - moving to here and then I'm starting
16:13 - with here
16:14 - I'm moving to here then to here then I'm
16:20 - gonna go then to here here and then on
16:27 - this is a reference okay I think I am
16:29 - ready to begin nobody remembers this
16:36 - research that was somebody I guess I
16:38 - could try to find it myself
16:39 - oh the World Cup started I made my picks
16:43 - want to hear my picks
16:44 - I don't want embarrass myself and I
16:48 - don't what I don't want to cause a chat
16:50 - to go off the rails won't give you my
16:52 - six picks I pick I mean the like what do
16:56 - you call those things a pool friendly
16:59 - five dollars so I don't think you know I
17:03 - don't think I'm gonna break the bank
17:04 - here winning or losing
17:07 - but I am kind of excited about the World
17:09 - Cup okay it was from was from Bruno Oh
17:16 - first of all I've got to show this to
17:18 - everybody bear please please humor me
17:24 - for just one moment I'm gonna go to
17:26 - Twitter what am i logged in its coding
17:28 - train notifications
17:30 - let's find mentions well here it is
17:34 - already this is like my favorite alright
17:38 - so if you watch the stream yesterday
17:41 - oops okay hold on
17:43 - now I need to I need so first of all
17:46 - it's weirdest out of here in front of it
17:48 - I need to give you the sound from the
17:52 - laptop which is not gonna come through
17:58 - unless I change oh what a silly world we
18:02 - live in if I do multi output device now
18:06 - you will get it okay ready I'm gonna
18:10 - mute my microphone so I don't talk over
18:12 - this
18:20 - oops oops color data should actually be
18:24 - colors let me color data based on the
18:27 - way with the code
18:37 - [Music]
19:02 - thank you thank you thank you okay so
19:12 - thank you for indulging Kate I've really
19:14 - appreciated that it's that Bruno took
19:16 - the time to remix all that insane
19:18 - footage from yesterday I was doing
19:20 - something more important though and I am
19:22 - going to go back here and just put the
19:23 - sound back here then yes
19:26 - the surprising pattern behind color
19:28 - names around the world so let me find
19:31 - that this the the surprising pattern
19:36 - behind color names around the world okay
19:45 - all right so coming back to the chat
19:57 - okay okay so all right
20:14 - okay I wore the same buddy yesterday
20:17 - have you not noticed that I just wear
20:18 - the same hoodie every day I do have two
20:20 - of these though
20:21 - one says 2017 and what this one says
20:24 - 2018 because this is the current IDP
20:26 - camp lady and I was wearing this one
20:28 - yesterday I also have some emergency
20:32 - hoodies here ah like a unicorn one this
20:41 - is the old coding train branded hoodie
20:43 - there's a new one that's in the store
20:45 - now anyway I don't know let's get let's
20:47 - get started here
20:47 - let's cycle these cameras definitely
20:54 - gonna need to do some whiteboard erasing
20:56 - and using alright hello I'm back again
21:15 - in my third I can't keep track of this
21:18 - stuff video building a classification
21:21 - example using a neural network and
21:24 - tensorflow dot j s so where i last left
21:28 - off which was actually in real time
21:29 - yesterday you know you might be watching
21:31 - these in sequence
21:32 - I built this a simple web app to
21:34 - crowdsource color classification and the
21:37 - wonderful Internet pull requested a
21:40 - bunch of nice features and so you can
21:42 - see this right here I'm just gonna say
21:43 - this one looks greenish and oh look at
21:46 - this I'm just gonna be grayish reddish
21:48 - so I'm adding some data purplish so
21:52 - thank you to all the people who you
21:54 - could check the github repository in the
21:56 - commit history to see everyone who
21:57 - submitted a bunch of these changes to
21:59 - improve the visual design now
22:01 - unfortunately I made a little bit of a
22:04 - mistake
22:04 - which is that mistake but I left the
22:08 - database the firebase database
22:09 - completely open and I thought why not
22:12 - that's gonna be easiest
22:13 - I trust you the viewing audience to not
22:16 - mess with the database too much but it
22:17 - didn't it went off the rails a little
22:19 - bit and so I want to thank I'm totally
22:23 - going in the wrong order here
22:25 - let me start over ah but maybe it
22:28 - doesn't really matter I also didn't like
22:30 - that a sort of like color that I
22:32 - couldn't see came up so let me just
22:35 - start up for choose one it's not super
22:44 - important in the end I don't know oh you
22:45 - are you all talking about Adam you know
22:48 - here's the thing
22:48 - the more but when people tell me to
22:51 - switch to a different editor because
22:52 - it's better or cooler or more current
22:54 - that usually has the reverse effect on
22:57 - me no no my editor because the point is
23:00 - it doesn't really matter so much it kind
23:02 - of doesn't matter but I don't let's not
23:04 - let's not discuss all right hello
23:09 - welcome to the third video in my build a
23:14 - classifier with p5.js and tension flores
23:17 - and there's a neural network in there so
23:19 - I'm really exploring this machine
23:20 - learning library tensorflow - yes I
23:22 - wanted to come up with a creative
23:23 - example that shows the full
23:26 - classification process from collecting
23:28 - data training and then deploying a
23:31 - machine learning model and so the
23:33 - example that I'm working with is this
23:36 - idea of color classification so I'm
23:38 - crowdsourcing this data from you the
23:40 - viewing audience and if I look at this I
23:42 - so you might remember I built this
23:44 - little web app - in the previous video I
23:48 - think that was yesterday and then now
23:50 - it's today 24 hours later it's been
23:52 - improved thank you to the internet the
23:54 - wonderful people who have pull requested
23:56 - various design fixes and updates you can
23:58 - check all that out on github to see who
24:00 - the contributors were now let me let me
24:03 - add a few things here
24:04 - Brown its kind of brown that's purplish
24:08 - that's blueish now one thing I will
24:10 - mention thank you - Bruno who brought
24:14 - this up in the patron slack Channel I
24:16 - sort of said yesterday you know I just
24:18 - want to pick a trivial data set I want
24:20 - to make something that's not that has
24:22 - very little sort of like meaningfulness
24:24 - to it just to sort of demonstrate the
24:26 - whole process but there is something
24:29 - kind of interesting going on here in
24:31 - theory which is that we're looking at
24:33 - human perception and
24:35 - and I'm not I'm not mathematically
24:38 - calculate like labeling a color
24:40 - according to the RGB values I'm asking
24:43 - you the viewers to tell me what you
24:44 - think a color is and so there is a lot
24:46 - of interesting scientific research in
24:48 - this area and I'll reference this video
24:51 - but that talks about Berkeley
24:54 - researchers and other research around
24:56 - the surprising pattern behind color
24:57 - names around the world so there's a lot
24:59 - there that you could dig into so maybe
25:01 - there's more here than I might
25:02 - originally have thought the problem with
25:06 - what I built over here is that you know
25:11 - you're wonderful I love all of you who
25:12 - actually use videos and believe me nice
25:14 - feedback will leave me critical feedback
25:15 - and all that sort of stuff but yeah the
25:18 - database a little bit a little bit off
25:20 - the rails because I just left the rules
25:22 - wide open anybody can write and anybody
25:24 - can read to the database and so
25:30 - thankfully pans are on github left a
25:37 - pull request analyzing the data and
25:39 - looking at kind of like ok well there's
25:41 - a lot of stuff here that looks wrong
25:43 - maybe there were some bots that started
25:44 - classifying colors and so all these
25:48 - functions to analyze and filter the data
25:50 - so I encourage you to check out this
25:51 - wonderful pull request I pull request is
25:55 - now part of the repository however it
25:57 - took a slightly different approach which
26:00 - is and thanks to me I am so me who
26:03 - helped me with this which is that I
26:05 - changed the rules so the rules yesterday
26:09 - were just basically read true write true
26:13 - these are the firebase rules and me I am
26:16 - Sammy helped me look into how you could
26:18 - customize the rules and the things that
26:20 - have been added to the rules now are we
26:24 - have some things to validate to make
26:26 - sure the RGB value is being put in the
26:28 - database are actually numbers so you can
26:31 - see how this looks here new data is a
26:32 - number and it's between 0 and 255 we
26:35 - have something to validate that the
26:36 - label you know one of the things that
26:38 - people put other words that weren't part
26:40 - of my set of classification labels into
26:42 - the database so I have to check that
26:44 - it's a string and that the actual data's
26:46 - value matches this regular expression
26:49 - so if you've never seen regular
26:50 - expressions before I do happen to have a
26:51 - video series about that that you could
26:54 - go watch but this you can see that it
26:55 - matches any of these - it's so that's
26:58 - protecting and then I was turned on
27:02 - so what you don't see is that it's
27:04 - anonymous authentication but you can
27:06 - only write if you've been on fanta gated
27:09 - this way it's anonymous I can track
27:12 - every person or every entry and it's not
27:15 - necessarily a person but every entry
27:16 - from a particular IP address into the
27:19 - database with a unique ID so if I can
27:21 - see that there's a bot that's just
27:22 - flooding the database
27:24 - I could either block it or just like
27:25 - clean that data out of it so that's what
27:27 - I'm going to do in this video I'm gonna
27:29 - use a similar approach to this pull
27:33 - request I'm going to actually read the
27:35 - data from the database and then I'm
27:37 - gonna like analyze it and delete stuff
27:39 - if it's it seems like it's no good and
27:41 - then download a JSON file that I'll then
27:43 - use in the 10th floor KS example that
27:47 - I'm going to build did I just spend the
27:49 - whole video introducing this topic I
27:51 - think I might have but I'm gonna move on
27:53 - and keep going anyway pause all right
28:00 - please please be nice to each other and
28:03 - don't argue about ID ease of the chat
28:05 - just just for once what one day could
28:07 - you just say like your IDE is great and
28:11 - so is mine isn't it nice how we use two
28:14 - different ones and maybe we can learn
28:15 - from each other that could be a thing
28:17 - right and of course I forgot to
28:24 - reference this which I wanted to do but
28:26 - that's okay I will come back to that so
28:29 - the next thing I need to do is the next
28:37 - thing I need to do is actually start
28:39 - writing the code to look at the data I
28:41 - should probably turn off now I should
28:44 - set the thing to false because I just
28:47 - don't want it to I think I'm gonna set
28:49 - it to false right now just so I'm just
28:57 - setting it to false so if you're
28:58 - watching this live you currently can't
29:00 - submit any more entries
29:02 - I just want to have it be fixed while
29:06 - I'm doing this and then this I can close
29:11 - this oh I should leave firebase open
29:15 - it's fine and then this I want this to
29:20 - say clean data wow the chat is so quiet
29:29 - today in this Thank You Fuji for
29:34 - repeating my words exactly alright so I
29:39 - think I'm ready to do this now
29:59 - shoot oh my goodness there we go
30:04 - before I dig into the code let me just
30:06 - reference one more webpage to you I want
30:08 - to show you this is a project that's at
30:10 - the time of this recording it hasn't
30:11 - technically been released yet well you
30:13 - can find it at ml5 jazz organ it
30:15 - probably is released now that you're
30:16 - watching this video but ml5 is a machine
30:20 - learning library built on top of
30:21 - tensorflow das that i and other folks at
30:23 - ITP have been working on and I just want
30:26 - a reference on Hannah Davis who's an
30:27 - artist and researchers contributor ml5
30:29 - wrote this wonderful tutorial about
30:31 - making your own datasets and thinking
30:33 - about questions to ask in particular
30:35 - about responsible data collection and
30:37 - tagging and crowdsourcing so hopefully
30:39 - it'll come back to this topic again and
30:40 - again in my video tutorials but I would
30:42 - encourage you to check this out and
30:43 - really think about it one thing we could
30:44 - think about here is number one I'm
30:47 - building an example that requires people
30:50 - to see the colors so what about people
30:52 - who are colorblind low vision or blind
30:54 - eye should that's something I really
30:56 - should be thoughtful about in this
30:57 - example how can I approach that and then
31:00 - you know who's really able to
31:02 - participate in tagging and submitting
31:04 - data who's being left out so I think the
31:07 - good news for me is this is meant to be
31:09 - somewhat of a generic tutorial and the
31:11 - data Wow does it matter so much if it's
31:14 - perfect because I just want to show that
31:16 - whole process but you then actually
31:19 - being a person who might work with
31:20 - machine learning out in the real world
31:22 - you really want to be thoughtful about
31:24 - about that data and I hope that I can
31:28 - link to more resources about that and
31:29 - cover that more on this channel as well
31:31 - so all that aside now I'm ready to dig
31:34 - in and look at the data and do the thing
31:36 - that's probably gonna take me the next
31:37 - 24 hours or three days or three weeks
31:39 - try to clean the data and make it usable
31:41 - for me so yeah that's what I'm gonna do
31:44 - okay so I have I have a client I mean I
31:49 - could do this I could download the data
31:51 - directly from firebase and just put it
31:53 - in like a Google sheet to look at it
31:54 - that might be useful i but what I'm
31:56 - gonna do is I'm just gonna actually
31:58 - write a p5 sketch or just a JavaScript
32:00 - program to look at the data first so I
32:03 - have I have this sketch all that's in it
32:05 - so far is just that connect to firebase
32:07 - and authenticate so what I want to do is
32:10 - to retrieve
32:11 - I think I say something like database
32:13 - once value and then I have a call back
32:18 - like got data I don't know if this is
32:21 - right and by the way I've learned that
32:25 - the JavaScript recently the JavaScript
32:27 - convention which is not very P which is
32:28 - not how p5 necessary works is often the
32:30 - error is first as the callback arguments
32:33 - and then the results is second I don't
32:36 - know I'm just speculating what the
32:38 - firebase API might be like let's see
32:41 - what happens database once is not a
32:43 - function I probably need dot ref and
32:44 - then I probably need like colors or
32:46 - something right
32:47 - probably something like this I could
32:51 - just go and look on the documentation I
32:53 - also have this firebase tutorial oh yeah
32:56 - I need the database reference and then
32:59 - uh I'd like to toriel I say dot on but
33:01 - really an i/o got one and got error data
33:04 - so maybe there's two callbacks who knows
33:05 - who knows let's say let's do this let
33:11 - ref equal database ref colors and then
33:17 - let's say ref once value got data and
33:20 - let's look at see what comes back let's
33:25 - go back to here alright something came
33:28 - back no nothing came out nineteen Oh No
33:38 - eighteen this is no time to take a break
33:45 - for a second I like now that I have
33:52 - video consistent video editing I really
33:55 - I really have a very different world
33:57 - which is like I need to take a break and
34:02 - I also couldn't take breaks
34:04 - not that I'm digging your brain either
34:05 - like a mental break alright what's going
34:12 - on here I maybe I should go back and
34:14 - look at my actual example got one error
34:17 - data so let's oh that's a pointer to the
34:22 - data right so actually the data so so
34:25 - so it actually is a separate callback
34:27 - for error looks like so I'm gonna like
34:32 - not worry about the error callback right
34:34 - now I'm gonna use it's got data and then
34:37 - let's look at the results and so yeah
34:42 - this looks weird like how could I
34:43 - possibly use this so what you're
34:45 - actually getting back is like this
34:46 - pointer to the data you've got to call
34:47 - functions on it to actually look at
34:49 - what's there so presumably something
34:51 - like results dot value is probably what
34:53 - the API is yo is not a function so I
34:58 - have to go back and look at my tutorials
34:59 - dot Val let's try that let's try it Val
35:07 - and there we go
35:09 - look at this oh it's a lot of data boy
35:11 - that console is not able to render this
35:14 - so now is this actually an array ah it's
35:18 - just actually an object with all the
35:20 - data in it so I need to turn that into
35:21 - an array what's because I kind of want
35:23 - to loop through it wonder what's the oh
35:26 - you know what I'll do this is what I'm
35:28 - gonna do I am going to so now I'm going
35:32 - to process the data so first let me just
35:35 - get all the keys so I can say objects
35:37 - got keys so let me just say let data
35:40 - equal results dot Val let's not
35:43 - console.log that object keys data and
35:47 - then console dot log keys dot length and
35:53 - I don't need this page anymore and I'm
35:57 - going back to here clean data so there's
36:00 - five thousand nine hundred and two
36:03 - entries into the database this is never
36:06 - going to change cuz just while I'm
36:07 - recording this video I shut off the
36:08 - ability to write to the database okay so
36:12 - what we can actually start to do now is
36:14 - I could say for let key of keys and I
36:20 - could say let record equals data key + i
36:27 - could say console log record so this is
36:30 - going to log all 5,000 of those one at a
36:32 - time I think so I could see these are
36:35 - all it's just logging every single data
36:36 - point
36:37 - and we can see that there for every
36:39 - single one there's an R a G and a B the
36:42 - label and then this user ID so now I
36:45 - think there was I have watching the
36:47 - database this morning I think there was
36:50 - a bot that was posting to it so now it's
36:53 - possible it could be that there's just
36:54 - one person who actually clicked a lot of
36:57 - times but so what I'm gonna do right now
36:59 - to just examine the data a little bit is
37:01 - I am going to look at the user by user
37:07 - ID and count up how many entries for
37:10 - each user ID so I basically need to do
37:12 - something like a concordant so if I say
37:17 - UID if I look at that we can see there's
37:23 - all the user IDs and what I want to do
37:26 - now is just associate so I'm gonna just
37:28 - say user ID by count and I'm going to
37:34 - say is an object I'm sure there's all
37:41 - these higher-order
37:51 - oh sorry I've seen looking at the chat
37:53 - pause for a sec oh I could have just
37:57 - done let record of data yeah that would
38:04 - the of works for an object not just an
38:06 - array okay interesting interesting
38:21 - Oh pause for a second actually the chat
38:24 - just gave me some good feedback which
38:26 - you know I they actually I guess the
38:29 - four of loop will work with an object
38:32 - and not just an array so I can actually
38:34 - just say let record of data and let me
38:39 - just do this no that didn't work data is
38:42 - not iterable let record in data hmm all
38:50 - right edit that out
38:55 - the object ID values yeah it's fine I'm
38:59 - gonna do it I'm gonna do it my way gonna
39:01 - keep going alright me I am sue me you've
39:06 - saved me so many times that you could do
39:09 - no wrong
39:11 - alright data record okay oh right I
39:17 - could anyway I'm gonna do it my way you
39:23 - the this is all about learning how do it
39:26 - my wage or do it your way we learn from
39:28 - each other Oh
39:35 - so what I want to do is I want to say if
39:37 - user ID by count of that okay so I need
39:43 - the ID which is this if user ID by count
39:49 - ID it does not exist then I want to set
39:55 - it to 1 otherwise I want to increase it
40:03 - and then I want to console.log that so
40:09 - let's look at this should give me all
40:10 - the user IDs by how many people by how
40:18 - many entries they have so we can look 35
40:21 - 33 78 147 208 189 what's the record here
40:29 - to a 1 there was something I've already
40:32 - forgot 236
40:34 - so what's is there anything suspicious
40:36 - here that's the question let me think
40:42 - about this I
40:51 - well do you remember the user ID of the
40:54 - thick that we detected was probably a
40:56 - bot I should sort these there's the
41:10 - promise it's in an object not an array
41:11 - I'll be really easy to sort them if I
41:14 - made it into an array I guess I could
41:17 - have the keys I should sort them let me
41:21 - sort them all right it's probably worth
41:26 - me sorting this this is why sure just
41:29 - put everything into a spreadsheet it's
41:31 - gonna sort it myself so in order to sort
41:34 - it I want users I'm also gonna have an
41:37 - array that I'm gonna sort and so if I
41:40 - find a new ID I'll put that in the array
41:43 - and then I want to say users dot sort
41:48 - and now I need a comparing function to
41:52 - compare two of them a B and I'm just
41:57 - gonna say return user ID by count a
42:05 - minus user ID by count B so that'll sort
42:12 - the array and a sorting probably makes a
42:18 - new array I think the can't remember
42:20 - does it change the array or make a new
42:21 - array so right I want to sort the users
42:25 - array and then I'm just going to do let
42:30 - ID of users I'm just going to iterate
42:34 - over the array and console.log
42:38 - [Music]
42:40 - user ID plus user ID by count for that
42:46 - one so I know I'm kind of like whoops
42:50 - this would be a good time for me to use
42:52 - those new string literals someday I'll
42:54 - get to that
42:56 - so let's take a look at this what did I
42:57 - get wrong looks like I did that worked
43:01 - amazingly that worked so we can see
43:03 - somebody just did one thank you thank
43:06 - you
43:06 - no let me get oh I who did one and then
43:10 - we can see here 236 entries from this
43:15 - particular user sort is in place okay
43:32 - so which one is the bot fpq this one
43:43 - interesting interesting
43:47 - okay want template strings not template
43:50 - literals alright these by the way are
43:59 - cut a template literals is what I meant
44:02 - by the way since I mentioned it let's
44:03 - actually use it this is a new feature of
44:05 - es6 I'm here why not where if I use
44:08 - backtick I can create a string that's
44:15 - just with variables with this syntax I
44:19 - believe does this go out here yes that
44:22 - goes there so what this does is in other
44:26 - words I could say user submitted so I
44:33 - can just write a full string and then
44:36 - basically anything that's in between
44:38 - these dollar sign and curly brackets is
44:40 - rendered as a variable value so now if I
44:43 - run this again hmm I don't know why that
44:49 - didn't yes you can see now it has that
44:52 - full and I kind of don't want all this
44:54 - extra stuff I was just showing you that
44:56 - you can put together a string and so
44:59 - okay so I happen to know based on
45:01 - earlier research of the day and watching
45:04 - that this particular user is a bot but I
45:10 - am getting the suggestion from the chat
45:12 - to just discard anything that's over 100
45:17 - so it looks like this so that's so those
45:20 - are some some those are ways that I
45:21 - could do this
45:29 - but I'm just like stopping and starting
45:31 - like a crazy I'm very sorry I'm ATS yeah
45:33 - it's 12:30 I'm just thinking about the
45:35 - time today and what to do next
45:38 - I feel like to visualize this data was I
45:46 - think that would be interesting yeah
45:53 - both changes the array and returns me
45:55 - one okay another correction I just got
46:00 - is that I believe users dot sort
46:02 - actually changes the array and you know
46:06 - since I've started using arrow syntax I
46:08 - could write it this way which is perhaps
46:10 - a bit more readable but who knows okay
46:13 - so here's the question what do I do to
46:16 - clean this data well one thing I could
46:17 - do first is actually analyze it so oh
46:22 - stop I'm gonna do I'm gonna go into an
46:27 - ood
46:29 - so faulty today I'm gonna I'm gonna go
46:33 - to the to the next this was long enough
46:35 - so I'm gonna do another part alright so
46:44 - the question here really is what to do
46:46 - next I know that this from my analysis
46:50 - earlier looking at this the things being
46:52 - added to the database that this appeared
46:54 - to be a bot I also could the chat
46:57 - suggested I could just remove everything
47:00 - that's 100 or more
47:01 - I'm actually gonna stop this tutorial
47:03 - this was sort of like getting to
47:04 - actually be in a look at the data and
47:05 - I'm gonna do a whole next video because
47:08 - what I think might be useful is actually
47:10 - just look at the data cuz I can this is
47:11 - this is information I can visualize like
47:13 - I could say show me everything that's
47:14 - pinkish show me everything that's
47:16 - blueish and I could also say like ignore
47:18 - this I could see I could see by user
47:20 - what they I could actually look at what
47:22 - they science could try to see is
47:23 - something really just way out there that
47:25 - maybe I shouldn't include okay so that's
47:27 - what I'm doing in the next video I'm
47:28 - going to add some tools to visualize the
47:30 - data
47:37 - and just while I'm in case it was
47:42 - mentioned if you I apologize that uh the
47:45 - read reading of the database is open so
47:47 - why you can't write to it right now
47:49 - you can read from it and so if you want
47:54 - to use this code this code is also on
47:56 - that github repo if anybody wants to try
47:58 - like messing with it themselves they can
48:08 - okay
48:28 - okay all right cleaning my data part two
48:33 - that's where we are where I last left
48:35 - off geniusly your data
48:38 - whoa the suspense was killing you I know
48:40 - I had just retrieved all the data from
48:44 - firebase and I looked at it by anonymous
48:46 - user ID how many entries had been
48:49 - submitted by each user and I have a
48:51 - suspicion that some of these that
48:52 - submitted a lot of entries maybe wasn't
48:54 - actually a person doing it manually but
48:57 - and and maybe like a bot or something
48:58 - flooding the database so let's try to
49:00 - investigate that and see what we can
49:02 - figure out so the first thing I'm gonna
49:03 - do is I'm just gonna visualize the data
49:04 - I could visualize it by user ID there's
49:06 - so many things I could do but let's
49:08 - think about it so there were there are
49:09 - how many labels so let me think about
49:13 - this okay this is my sketch I know what
49:15 - the labels are so let me just I'm gonna
49:18 - need let me just set up a variable
49:21 - called data data by you know color by
49:28 - label and this will be an object and the
49:34 - object will have empty arrays for each
49:39 - one of the labels so there was blue ish
49:44 - I should have a list of this somewhere
49:46 - greenish doing this manually I could
49:50 - have actually pulled the labels from the
49:51 - database but this will be simpler a
49:53 - greenish pink ish I'm not doing this in
49:58 - any particular order greyish red ish
50:02 - what am I missing
50:04 - purple ish there was a brown ish if I go
50:10 - to my crowdsource color reddish greenish
50:12 - bluish oranges I do orange I don't think
50:15 - I did orange orange orange ish
50:23 - purplish greyish brownish one two three
50:25 - four five six seven eight nine I'm
50:28 - missing one blue green pink great this
50:31 - is not a very systematic way to tick red
50:35 - green blue orange purple but yellowish I
50:37 - didn't do yellowish okay yellow
50:42 - now while I am looping through the data
50:47 - which I did in the previous video and
50:49 - I'm gonna not worry about this users by
50:51 - count thing right now
50:53 - I'll come back to that
51:09 - I'm going to not worry about this users
51:12 - by counting right now I will come back
51:15 - to that later what I want to do is oh
51:19 - sorry I do need I do want this so I want
51:22 - to look at each data point and I want to
51:28 - look at the RG so I want to look at the
51:30 - label and I want to say color by label
51:34 - and then I want a record dot label push
51:41 - and so I'm gonna create a color let
51:46 - color equal I'll use the p5 color
51:49 - function to say record our record G
51:53 - record B color by label push color and
52:00 - now what I should have and I'm really
52:04 - risking breaking the console here is I
52:07 - should have all the RGB values listed by
52:10 - the label so let's look at that oops I'm
52:15 - in the wrong sketch right so we can see
52:19 - there's a thousand blues 16 there's only
52:23 - two 35 Gray's so one thing that's also
52:26 - important about what I've done with my
52:28 - data set here is I don't have a uniform
52:31 - amount of data points by label I have
52:35 - many more green ones and actually a Eric
52:39 - in the patron group made a point that
52:41 - the way that colors are picked the way
52:43 - my random number generator works or
52:45 - you're gonna be more greenish looking
52:46 - colors which is sort of interesting to
52:48 - think about but at the very least what I
52:50 - can do now is I could just draw all of
52:53 - the colors so I'm trying to think of
52:55 - what I probably want to do like little
52:59 - rectangles and a p5 canvas maybe so let
53:02 - me add create canvas and let's make it
53:10 - 400 by 400 and let me let's do just one
53:16 - let's just start with a bluish
53:21 - and I'm going to say a four let I equals
53:25 - zero I is less than so let's see let me
53:30 - say let blues' equal color by label blue
53:33 - ish and I'm gonna look at all those and
53:42 - let's start with an X let's start with a
53:46 - y let's say fill blues index I and then
53:54 - let's draw a rectangle at XY that's 10
53:57 - comma 10 will increase X by 10 and if Y
54:01 - is greater than or equal to width then
54:04 - we will a reset X back to 0 and increase
54:07 - Y by 10 now this is in very again I'm
54:09 - not being that thoughtful about this but
54:11 - in theory I should see now when I run
54:15 - this all the lose now why did it not
54:18 - wrap around oh if X is greater than
54:21 - width and I want to say no stroke and I
54:24 - could sort I probably would want to sort
54:26 - these two I could sort them by like
54:28 - brightness so we can see here ah look at
54:30 - this these are all the Blues that were
54:33 - submitted to the database so you know I
54:38 - kind of don't mind that the data has
54:43 - some noise in it I mean big deal the
54:45 - point of this is to crowdsource it and
54:47 - maybe training the model if there's
54:49 - enough data it will sort of filter out
54:51 - the noise but you know I and the
54:53 - question is why is this here why is this
54:56 - here what should I do about that let's
54:58 - just look at some other ones let's look
55:00 - at red you can see okay
55:05 - what's interesting is I think these are
55:06 - in the in the order by which they were
55:08 - submitted so there probably was a time
55:10 - period here where where there probably
55:19 - was a time period here where some like
55:22 - bad data was entered let's look let's
55:24 - look at green cuz Green has the most
55:27 - right that's pretty good so what do I do
55:31 - oh boy what do I do about this
55:35 - thinking pause for a second oh that's
55:40 - such a good idea I mean I am some he has
55:44 - a great idea in the chat right oh that's
55:50 - a great point Luke makes a great point
55:53 - all right so - great - great points just
55:56 - came up in the chat right now one is
55:58 - Luke B writes pretty good to have the
56:01 - outliers to encourage prevention of
56:03 - overfitting the neural network so this
56:05 - is actually true in you know one thing
56:07 - you have to watch out for is that your
56:11 - your model the model that I'm going to
56:13 - train to do this color classification
56:15 - what if it it just works so well with
56:18 - the training data that it doesn't work
56:20 - so well with new data and having a bit
56:22 - of noise in the training data can
56:23 - actually help with that
56:25 - another me I am swimmy rights make it so
56:30 - clicking on a pixel prince who did it
56:33 - the user ID that is and also maybe
56:36 - highlights all the other ones with the
56:37 - same user ID that I love so let's add
56:40 - that that's gonna be that's not gonna be
56:42 - the easiest thing but it's worth doing
56:43 - let me see if I can add that so okay so
56:48 - if I click the mouse mouse pressed I can
56:57 - I can like it's sort of like I would be
57:00 - in theory Mouse X divided by 10 and J
57:05 - would be right this is where I'm
57:08 - clicking I'm looking for the I and J not
57:10 - the X&Y like sort of like the I and J of
57:12 - what I'm clicking on Mouse Y divided by
57:15 - 10 and then I should be able to get the
57:17 - index then by saying I plus J times and
57:23 - then the width divided by 10 again I
57:27 - really really really should be using
57:29 - variables for these numbers like 10 and
57:32 - putting putting in like an of Erebus for
57:36 - like columns and rows but let's just try
57:38 - this right now let's try then saying
57:40 - console.log and so let's let me make a
57:46 - I'm gonna call this
57:48 - color I'm gonna call this like label I'm
57:51 - just gonna call this label and I'm just
57:53 - let's let's go with a bluish to start
57:56 - again so I'm gonna use here color by
58:01 - label label and let's make color by
58:07 - label colored by label already is a
58:10 - global variable so I'm going to say
58:12 - console dot log okay so let data equal
58:18 - color by label that label and then I
58:26 - should go to a console log D data index
58:33 - think this will be right and like make
58:35 - some mistakes here let's see what
58:38 - happens
58:39 - alright let me click here alright so I
58:42 - got something
58:44 - oh yeah so one thing that's like kind of
58:48 - unfortunate is oh I don't have the user
58:53 - ID I don't have to use it so I got the
58:55 - color but I'm not actually storing the
58:59 - full data thing oh yeah so color by
59:01 - label this is what I need to do I want
59:04 - color by label actually to store the
59:05 - whole record we don't actually want to
59:09 - store the color let's store the whole
59:10 - record then when I visualize it I can
59:15 - just ask for the RGB values right
59:27 - because then when I click on something
59:30 - this is now that entry so I can see like
59:33 - right if I click on this we can see I
59:37 - look at this this user right I'm
59:40 - clicking on these they're all the same
59:42 - user this user Y gdq seems to have some
59:47 - faulty data so i could filter out this
59:49 - user i could do something nice where
59:51 - like as I'm hovering I highlight
59:53 - everything but I think I'm not gonna go
59:54 - that far I'll let anybody who wants to
59:56 - contribute to to I'll let you try that
59:58 - on your own maybe but so let me make a
60:00 - list here
60:02 - of users that I might want to filter out
60:06 - whether I'm happy to have the noise or
60:09 - not that's a question but let's let's
60:15 - let me just make this a little smaller
60:17 - it's a little harder for you to see it
60:18 - but I think it's gonna be easier in
60:19 - terms of space so okay so let's look at
60:22 - a few more that are maybe like clearly
60:25 - not good same user it's all that same
60:28 - user
60:28 - I haven't found them that let's look up
60:30 - here ah different user so this user also
60:35 - looks like it maybe has some bad data
60:38 - oops let's look at a different color
60:45 - let's look at let's look at what was
60:48 - like there is very little of greyish
60:54 - that's we couldn't this user is now
60:57 - suspect you know the thing is a user
61:04 - might have miss clicked so unless I see
61:06 - it consistently yeah I'm not gonna the
61:14 - user could have missed clicked all right
61:17 - so you get the idea okay so you get the
61:22 - idea now there's so many ways that I
61:24 - could be more thoughtful about this and
61:26 - add more features to work on cleaning
61:28 - the data but let's just say for right
61:30 - now and and people are suggesting like I
61:33 - could algorithmically like I could
61:35 - actually evaluate the numbers and see
61:38 - like compute the hue and see if the hue
61:40 - match is labeled but I don't I
61:41 - specifically do not want to do that
61:43 - because what I specifically want from
61:45 - this is this idea of human perception of
61:48 - color and I don't want to use math
61:49 - because I could create my own data at
61:51 - data set with math of like putting
61:54 - colors into certain buckets and in a way
61:55 - I don't even want to do what I just did
61:57 - right here which is eliminate certain
61:58 - users and I and I probably should just
62:01 - visualize what I should do with these
62:03 - users now is actually actually let me do
62:06 - this do what these users now is I'm
62:08 - actually just going to look at all of
62:10 - their entries and see so let's let's add
62:13 - that as one more thing you can stop
62:15 - watching this video
62:16 - go on because I'm gonna build a machine
62:17 - learning model in the future videos but
62:19 - if you want to keep watching I'm gonna
62:20 - do let's do one more thing like let's
62:22 - take this user and what I'm going to do
62:26 - now is I'm going to comment out this
62:32 - this drawing thing that I'm doing and I
62:37 - want to create a I want to say color
62:42 - data by user and I'm going to make that
62:48 - an array and I just want to say if
62:54 - record user ID equals a particular user
63:00 - then I want to say a user user data and
63:08 - I could build an interface to do all
63:11 - this would be so much better but I don't
63:13 - really have time to do all that this
63:15 - particular series so that might be
63:17 - something exercise you do for yourself
63:18 - user data dot push the record and then
63:24 - down here I could use this exact same
63:27 - algorithm oh but you know what I don't
63:29 - want to do it that's what I want to do
63:30 - I'm gonna use Dom elements now I think
63:32 - I'm gonna say for let color for let
63:41 - entry it's an entry like of user data
63:47 - I'm gonna say create a div I'm going to
63:55 - just make a div and then I'm gonna say
63:58 - [Music]
64:01 - div and actually let me let me create a
64:05 - div with entry dot label in it so let's
64:09 - just try this whoops not the string and
64:15 - let me get rid of the canvas
64:22 - so these are all these are all of this
64:26 - particular users entries I maybe I
64:29 - should sort them by let's sort them by
64:31 - the label so let's so let's say user
64:39 - data sort a comma b return a dot label
64:49 - greater than B dot label so this is
64:54 - whoops oh and I don't need to say return
65:00 - if I use the arrow syntax I'm really
65:03 - just off the deep end here in this video
65:05 - I'm gonna I think this is right that
65:07 - should sort it yes there we go so we can
65:10 - see now it's uh that's weird
65:29 - just pausing for a second there's a
65:31 - great comment in the chat from Sam D
65:33 - could we separate out the different
65:35 - things into functions by color by user
65:37 - by whatever classifier rather than
65:39 - commenting out lots of stuff
65:40 - yes this would be an absolutely great
65:42 - thing to do so I'm gonna publish this
65:43 - and I would love to to get user comments
65:46 - and user submissions of like making a
65:48 - nice interface for this I'm but I'm
65:51 - trying to figure out why I didn't sort
65:52 - this right now let's see I thought sort
66:01 - oh oh I have to return zero I can't
66:08 - return true or false compare okay okay
66:16 - these are strings yes okay these are
66:32 - strings so this is going to give me a
66:35 - true or false but the sort function
66:36 - wants like a negative or positive number
66:38 - so I'm actually just going to break this
66:40 - out I know I could do this with those
66:43 - ternary operators but I'm just gonna say
66:46 - if return 1 else return negative 1 and
66:58 - this should this should do the trick
67:03 - right so let's take a look at this now
67:05 - there we go bluish greenish reddish so
67:08 - we could see this is now sorted by that
67:10 - particular user and then all I need to
67:13 - do is add oh I need to make something
67:18 - that color box I guess I couldn't make
67:25 - that a div that lives inside a color box
67:30 - size 10 comma 10 and then color box
67:34 - style and these are all p5 Dom functions
67:37 - background color are
67:42 - oh now this would be a great time to use
67:44 - those template literals because what I
67:46 - want to do is say RGB entry entry our
67:59 - entry G and what happened it's entry dot
68:10 - B right
68:14 - this is CSS for making an RGB color I
68:17 - believe let's see how this works what's
68:22 - the chance this works yeah okay oh but
68:26 - now what I want to do is say color box
68:32 - parent and I want it to be in line so
68:37 - how do I do that
68:38 - color box style display:inline so what
68:46 - it is no who
68:55 - well you get the idea there's somebody
69:00 - is you because you can see is pretty
69:01 - inconsistent
69:03 - there's just the colors are just so
69:04 - wildly different that I think we can
69:07 - kind of say that this user we can filter
69:11 - out and I could look at some of these
69:17 - other users now like let's look at this
69:18 - user where did I let's look at this user
69:27 - everything seems to be a bluish that
69:30 - doesn't look like great data and let me
69:32 - look at this user and again doing I'm
69:36 - doing this so manually in my code could
69:38 - easily build an interface to look at all
69:40 - this grayish grayish greenish greenish
69:44 - brownish bluish blues yeah this looks
69:45 - too inconsistent so you know it's fine
69:49 - to have some way so I think we're done
69:51 - here you get the point that we're not
69:54 - completely done because I need to I want
69:56 - to just like create a JSON file of all
69:58 - of the data but and I'll do that in the
70:01 - next video
70:02 - anybody's still watching this right now
70:06 - so where I could add some background to
70:09 - the text and some padding that's a
70:11 - greater there's also the way I could
70:12 - visualize this with if I had any sort of
70:14 - talent or knowledge about CSS and design
70:16 - but you the viewer will hopefully
70:18 - improve this but you can sort of see the
70:20 - process of looking at the data
70:21 - visualizing it and getting a sense of it
70:23 - and now what I might want to do is
70:25 - actually like filter and save the data I
70:26 - will do that in the next video which
70:28 - will be a very short one I think oh I
70:34 - forgot to check the bots let me check
70:39 - the bots how come I don't have the bots
70:43 - here
70:49 - let's do this real quick
70:58 - which one was the bot again this one
71:17 - what would a mess what a mess I'm making
71:19 - of all this the bots not so bad the bots
71:30 - actually has the thing that those the
71:32 - bot has good data that's really
71:40 - interesting the thing we thought was the
71:43 - bot seems to have good data my apologies
71:48 - to the bots oh the thing I thought was a
71:50 - bot I mean you know you could you could
71:53 - make the argument that some of these
71:54 - might not be exactly right
71:56 - and it's actually only doing oh it's
71:58 - only doing no it's got pink and orange
72:00 - and purple in there huh that's not a bot
72:03 - so I was wrong I I thought so the reason
72:08 - why I thought it was a bot was because
72:10 - the moment I wiped the database I wiped
72:13 - the database at one point then I just
72:15 - saw consistently at like very very
72:19 - distinct intervals entering stuff in
72:22 - really really fast it could have been a
72:24 - person I know I'm not sure it's a bot
72:26 - and it looks like it was it looks like
72:29 - it's entering generating the data with a
72:31 - hue so maybe this data is too good
72:36 - anyway I'm not going to worry about this
72:38 - too much I got to move on also it's one
72:40 - o'clock so I only have about 45 minutes
72:46 - yeah some of those are you could say you
72:49 - could say are greenish oh and I'm out of
72:53 - my caffeinated beverage which is really
72:56 - bad okay
72:59 - all right
73:07 - so I'm gonna I'm gonna let this be I'm
73:13 - going to let this be and now I'm going I
73:17 - want to make a new whoops no I'm just
73:27 - like a new sketch call download data and
73:38 - [Music]
73:45 - download data so what do we think should
73:52 - I keep this one or sort the entries by
73:58 - their key oh that's interesting that's
74:05 - that would be an interesting to do so I
74:13 - am now going to go to download data and
74:22 - I'm gonna get rid of all this stuff
74:43 - so I just have stuff I had from before
75:03 - this should actually be an object
75:13 - [Music]
75:34 - okay so my question is should I filter
75:42 - all four of these or should I should I
75:45 - leave that bot one that one we think is
75:47 - a bot are you out there are you out
75:50 - there person who wrote the bot or human
75:53 - being who wasn't a bot but actually was
75:55 - clicking still Ian writes is Dan
76:00 - actually reading these comments every
76:01 - once in a while I am yes so let's just
76:05 - say we want to filter these out that's
76:14 - interesting
76:15 - Simon has an interesting suggestion to
76:17 - say to filter the noise out you can
76:19 - calculate the average for each color and
76:21 - if the distance in between each color
76:23 - and the average color is greater than
76:24 - some threshold you can filter it out
76:26 - yeah so I'm gonna that's that's the pot
76:35 - is good keep the bot alright people are
76:37 - saying it doesn't really matter I'm in
76:39 - the in the end the point is for this
76:41 - tutorial series for me is to just show
76:42 - the process and I've said like to do the
76:45 - process in a reasonable manner but if I
76:48 - can't I can okay
76:53 - alright so now here we go
77:12 - okay okay
77:25 - looks where's the bot I felt like I
77:31 - needed to do is dedicate a song to the
77:34 - bot fpq sd-6 cvn f qm r p j DD IQ j + 3
78:00 - - Thank You bot no the ukulele is a bad
78:08 - idea
78:08 - alright let's move on
78:13 - I'm gonna cycle those cameras
78:22 - will I get to tensorflow yes today seems
78:27 - unlikely seems unlikely but not
78:32 - impossible not impossible
78:35 - oh hello part three of pleating the data
78:47 - supposedly poof it's a lot of work just
78:51 - dealing with data is a whole project
78:53 - unto itself
78:54 - it's I've been here for like 72 hours
78:56 - straight I haven't even looked at
78:58 - tension flow yet I'm just looking at my
79:00 - data and all I'm doing is color
79:02 - classification all right I can't I can't
79:04 - a little bit but it's true it's true so
79:06 - this is the third video what I if you
79:08 - watch the previous two I started trying
79:10 - to visualize what the data looked like
79:12 - and kind of examine are there certain
79:13 - users that I should filter out that's
79:15 - bad data maybe I should just leave it
79:16 - all in there anyway I'm trying to build
79:18 - a model that looks at the color and
79:22 - classifies it into one of these buckets
79:26 - and this is my crowd-sourced system that
79:28 - allows people to look at colors and
79:29 - click on one of these buckets so it's a
79:31 - little bit about like human perception
79:33 - what does the I sort of see in terms of
79:36 - RGB color all right so um the code base
79:40 - I'm starting with is from the previous
79:41 - video I'm just connecting to the
79:43 - firebase database and I am looping
79:46 - through and looking at each record one
79:48 - at a time each record has a user ID
79:50 - which is anonymous it has an R a G a B
79:52 - and a label so I determined you know not
79:56 - somewhat loosely I didn't you know I
79:58 - really need to spend more time more
80:00 - thoughtful about this there's an extra
80:02 - comma here that these are the three
80:04 - users that I would like to filter out so
80:06 - what I want to do in this video by the
80:08 - end of it let's have a JSON file that I
80:12 - can print if I wanted to I'm not going
80:15 - to print it hold in my virtual hands
80:16 - these are my real hands and use that to
80:21 - actually build a machine learning model
80:22 - from so all I need to do if I want to
80:26 - filter these out just what I did is I
80:28 - made an object that just has those three
80:30 - user IDs as keys
80:32 - arbitrarily with a value of true and
80:35 - then what I can do is I could say if if
80:40 - if filter if filter does not include
80:47 - this records user ID and so let's just
80:50 - say let ID equal record user ID if it's
80:56 - not in the filter let's make a let's say
81:02 - all data is a big array and actually
81:05 - what I'm gonna do is I'm gonna make it
81:07 - an object you'll see why in a second
81:09 - that has a I'm just gonna call it like
81:13 - entries which is an array then I'm going
81:16 - to say all data dot entries dot push
81:21 - that record so what I want to do is I
81:24 - want to look at every single data point
81:26 - shine begin there's some nice high order
81:29 - function I could do this in one line of
81:31 - code but I'm doing this very manually
81:33 - I'm gonna look at every record I'm gonna
81:35 - check the user ID if as long as that
81:37 - isn't one of my user IDs that I'm
81:38 - filtering out I'm gonna put it in my all
81:40 - data entries array and then I'm going to
81:44 - say save JSON color data JSON all data
81:54 - now this is a p5 function that will then
81:57 - put this JSON file into my downloads
81:59 - directory and I could be doing this a
82:00 - node and server side there's no reason
82:02 - we have client-side code doing this but
82:04 - that's what I'm doing right now so let's
82:06 - run this and see what happens this is my
82:09 - download data script okay a index of is
82:14 - not a function firebase
82:16 - I don't know save JSON okay so this may
82:20 - be let's look at maybe it's actually
82:22 - goes like this the data and then the
82:25 - file name I think that's what yes there
82:29 - we go so we can see right here this
82:31 - downloaded now I can take a look at this
82:33 - file I can open that file up and we can
82:41 - see there we go here is my data set hi
82:44 - this was the surest video ever
82:46 - so now I have this data set do I want to
82:50 - sew things that I need to do is I need
82:51 - to normalize the data set and I need to
82:54 - assign the labels numeric values because
82:57 - I'm going to need that for what I want
83:02 - to do with tensorflow j/s mmm so I'm
83:05 - gonna I think I'm gonna have I'm gonna
83:06 - need to reshape the data and turn it
83:11 - into tensors I'll do that in the next
83:13 - video just keep sequencing this so you
83:17 - know maybe you could be more thoughtful
83:18 - about I don't know what I'm trying to
83:20 - give you an exercise to do at the end of
83:21 - this video I got nothing for you
83:23 - but you can build an interface for this
83:25 - where you could maybe you could port
83:27 - this to like a server-side script maybe
83:29 - you could save it to a CSV file those
83:30 - are some things you could try but in the
83:33 - next video we're gonna do I mean I
83:34 - actually start working with tensorflow
83:35 - gjs I need to turn all of these things
83:38 - into tensors because tensors are the
83:41 - thing that I need to to create to train
83:46 - my machine learning model goodbye oh
83:52 - wait a second no did I get the removed
83:55 - ones by accident no I don't think so
84:06 - no no these are the not removed ones I
84:15 - did something in Reverse here all right
84:17 - let's see did I
84:26 - I think if it's not there at it I think
84:31 - I'm okay let's uh let me not save the
84:38 - JSON file again yeah
84:46 - five six four three I think I'm good oh
84:49 - the bots yes the bots is in there yeah I
84:52 - got it I got it correct all right
85:00 - I'm probably gonna be coming back on
85:02 - Monday to finish this
85:03 - go watch boarding team with CJ that's on
85:05 - YouTube right now I'm getting a
85:06 - notification 112 I'm running out of
85:14 - steam here boy this is a lot of work
85:20 - okay so now now what I need to do
85:27 - desktop
85:53 - what am I looking for p5 tension floppy
85:58 - color classifier so this is now oh I
86:09 - need to now I need to get myself a
86:17 - reference to tensor flow Jas no more
86:24 - fire base color classifier and and I
86:40 - need the JSON file
86:50 - and let me rename this to one because I
86:58 - might kind of save it the source code
87:01 - with each one okay okay don't over
87:09 - charge my laptop okay so what's next
87:19 - here let me erase the whiteboard
87:44 - so many things to discuss I've got to
87:47 - talk about softmax cross-entropy these
87:51 - are new concepts that I haven't used in
87:53 - any video before a one hot encoding just
87:57 - something that I'm going to want to
88:03 - discuss by the way the plan my plan in
88:12 - my head is now that I is to make a ml5
88:16 - version of this in which Kate in which
88:18 - you don't have to architect the model
88:21 - and you also don't have to worry about
88:24 - like the one hot encoding okay I realize
88:26 - most of you watching this probably don't
88:27 - know it is no it's still very recently
88:29 - and I'm not even sure I know what it is
88:30 - but I think any what it is so but so I
88:34 - just wanna flicked about how I'm doing
88:35 - this because I'm all in like a sort of
88:37 - strange order but it is what it is okay
88:42 - well I definitely want to do some work
88:44 - to vex stuff yes Matthew code in the
88:47 - chat requests suggests okay okay alright
89:05 - this this video merits a train whistle I
89:08 - am in my series I'm on video 731 or
89:15 - something like that about building a
89:17 - color classifier I'm trying to look at
89:20 - the overall concept of machine learning
89:22 - and building a color classifier so what
89:24 - oh where am I
89:25 - I spent a bunch of videos and crowd
89:28 - sourcing and cleaning data and where I
89:30 - left off I have this JSON file that has
89:33 - a whole bunch of data points in it each
89:35 - entry has an RGB value and a label so
89:38 - there are nine labels and there are
89:41 - obviously millions of possibilities for
89:42 - the RGB values so the so what's the next
89:47 - step here also many things to think
89:49 - about let's go back to this tutorial
89:52 - that I referenced as part of the ml 5
89:53 - project called making your own data sets
89:56 - this is by artist and researcher Hannah
89:58 - Davis and other contributors who may
90:00 - have also edited this page but it
90:01 - started with Hannah Davis linked to
90:04 - information about her in this video in
90:06 - the in this page in the video's
90:08 - description now one thing you want to
90:10 - look here that I think is important is
90:12 - preparing your data set for machine
90:14 - learning trading testing and validation
90:17 - so I forget the first thing let me let
90:20 - me do something first here let me
90:21 - actually write some code strangely
90:23 - enough
90:23 - and I've got p5 loaded up here as kind
90:26 - of like a base JavaScript library that I
90:28 - use and I'm gonna add the preload
90:32 - function and I'm going to say let data
90:37 - and I'm gonna say data equals load JSON
90:41 - and it's called color data JSON so I
90:45 - just want to load that file and then I'm
90:47 - gonna say console dot log data entry is
90:50 - dot length so let's just see how many
90:52 - data points do I have let me make sure I
90:54 - can indeed load that file into my code
90:57 - and look at how many data points I have
90:59 - so here we go
91:01 - oh I'm in the wrong sketch I changed it
91:04 - to here 5643 I can read numbers is that
91:10 - number perhaps perhaps that number could
91:12 - be found somewhere in my random number
91:14 - but that's a that's a I'll look for it
91:16 - later so okay why did I why did I say
91:19 - that so if we come over back to this
91:22 - page that I was referencing and I mean
91:24 - we need to if I'm going to build a
91:26 - classifier the way I'm going to do this
91:29 - is by having training data and testing
91:34 - data now there is also something called
91:39 - validation data and let's go look back
91:43 - at this webpage training data set is
91:47 - used to train the model validation data
91:50 - sets are used to change the parameters
91:52 - of the model so I'm going to for the
91:55 - purpose of this video kind of simplify
91:59 - by not worrying about validation data
92:01 - and I am just going to use training data
92:04 - and testing data and the idea here is
92:07 - that what I want to do is train the
92:09 - model with my training data but then I
92:11 - want to feed it the testing data and see
92:14 - if the labels that it returns oh it
92:17 - thinks this color is bluish is that
92:19 - actually what it is labeled with and
92:21 - I'll get some type of accuracy score
92:23 - from that and I'll know more about you
92:26 - don't want to test it with stuff that
92:28 - I've trained it with because of course
92:30 - it's going to ultimately get that right
92:32 - machine learning models are very good at
92:36 - returning the result that you tell them
92:38 - about and we need to see does it also
92:40 - return the result of new data that it
92:42 - hasn't been trained with if it works
92:44 - really well with the training data but
92:46 - not with the testing data this can be
92:48 - known as overfitting meaning the model
92:52 - is just incredibly good it's it's so
92:54 - exact that it doesn't really know what
92:56 - to do except for like the exact data
92:58 - that it was trained with so we want to
93:00 - watch out for and a kind of convention
93:02 - let's say I have you know five thousand
93:05 - data points a convention might be to us
93:07 - use eighty percent of those so 10
93:12 - percent is 500 so like four thousand
93:15 - four thousand eighty percent of five
93:17 - thousand I think as my training data and
93:22 - then save a thousand or twenty percent
93:25 - 1/5
93:26 - as my testing data alright so I need to
93:29 - at least at the beginning right now
93:31 - divide it and I might just sort of pick
93:33 - randomly to divide it up okay what I
93:42 - like is that when I switch cameras I can
93:45 - easily have like a little break for a
93:49 - second not easily but I can I'm gonna
93:51 - cycle these because I don't know when I
93:53 - last cycled them what time is it 120
94:00 - okay we're okay I'm gonna be here
94:02 - another another half an hour and then
94:03 - I've gotta go I think
94:10 - so the question though is the thing that
94:14 - I need to figure out is should I split
94:16 - up the data before I convert it to
94:18 - tensors or should I converted to tensors
94:21 - and then split it up anybody have an
94:24 - opinion of what's gonna make the most
94:25 - sense I really could use some water
94:49 - maybe I'll just split it up I'm gonna
94:52 - split it up because it's gonna be so
94:55 - easy to do yeah that's what I was just
94:57 - talking about you let you the chat is so
95:01 - far behind like 30 seconds behind
95:03 - real-time convert then split no pillars
95:07 - cut that was the first comment that came
95:09 - convergence would I was which was
95:13 - different than where I arrived to in my
95:14 - head clean the data first then split it
95:17 - first make the sense tensor then split
95:21 - Alexa flip a coin yeah
95:26 - is there a convention what would be the
95:28 - convention okay
95:34 - convert first so you can use the GPU
95:37 - optimally yeah because the tensor
95:39 - tensors have functionality probably to
95:41 - split right I assume I I assume that
95:53 - right like scalar
96:01 - buffer clone same values fill its one
96:10 - hot I definitely gonna need to do
96:27 - truncated variable zeros it's not nice
96:38 - college one do you see to flow to into
96:43 - all reshaped safe as expand squeeze
96:49 - clone huh
96:58 - don't normalize the data altogether
97:00 - separate training and testing first that
97:04 - sounds like very very uh that sounds
97:13 - like that was written with conviction it
97:15 - made an impact on me I feel like just
97:19 - narrative wise with the flow that I'm
97:21 - doing I'm actually gonna split it and
97:22 - then I'll write a function that makes a
97:24 - tenser from yeah I don't know and I
97:33 - never know what to do here there is a TS
97:36 - split function how come I don't how come
97:40 - I couldn't didn't see that
97:50 - all right look at this
97:56 - whoa number or size of splits the
98:07 - dimension along which to split well this
98:11 - seems confusing to me either an integer
98:13 - indicating the number of splits along
98:16 - the axis or an array of integers
98:18 - containing the sizes of each output
98:20 - tensor along the axis so I definitely
98:25 - can use that it's just hurts my brain to
98:27 - think about how to do it exactly like if
98:30 - this is a 2d tensor and then it's splits
98:36 - I want to see what this does let's let
98:48 - me try to understand what this does
98:56 - so let me think about what I'm gonna
98:57 - have I'm gonna have a tensor for the RGB
99:02 - values that looks like this like 1 1
99:10 - let's say 1 2 3 4 5 6 7 8 9 right this
99:23 - is what I'm gonna have let me just work
99:33 - this out right now so that's what I'm
99:37 - gonna have them have like multiple RGB
99:39 - values so if I want to say split it into
99:46 - train and test I would say TF split X
99:55 - [Music]
99:57 - I've lost here we'll read the
100:01 - documentation again number or size of
100:05 - splits the number of splits along the
100:08 - axis
100:09 - I just want to split once and then I
100:11 - guess I'm gonna give it like let's say
100:16 - if I give it 1 comma 2 shouldn't I get
100:18 - and then I say train dot print and test
100:25 - dot print
100:31 - [Music]
100:34 - I'll hold on let me comment this stuff
100:37 - out here all values in axis per a must
100:41 - be enraged negative 2 to 2 but got
100:43 - access to oh no must evenly divided the
100:51 - axis it has to do it in half hold on
100:55 - what if I just give it to argue ah well
101:03 - I lost my console
101:17 - Oh p5 don't don't don't tell me about
101:20 - this cannot read property print of
101:22 - undefined at sketch dot 9 let's see is
101:30 - anybody in the chat helping me ideally
101:37 - you'd have the same proportion of each
101:39 - label in the test set in the training
101:40 - set yes that's very important so I mean
101:48 - if I had like a huge data set and I just
101:50 - split it up randomly that would sort of
101:52 - probably stay somewhat uniform clearly
101:56 - don't understand how TF split works
102:00 - [Music]
102:13 - I just zoom Sofia the chat would give me
102:16 - the answer I stopped my brain just
102:18 - stopped thinking I guess I have to
102:20 - figure this out myself size of each oh
102:31 - oh oh so couldn't I do this like two
102:36 - comma one right and that would give me
102:44 - yes that's what I want so like it's
102:48 - splitting it up so if I want it if I had
102:51 - five thousand then I I wish I could do
102:54 - this by percentage like I could just say
102:57 - like 80% 20% but but no okay so I'm
103:06 - gonna I'm gonna convert all of it and
103:09 - then I'm going to shuffle it and then
103:11 - split it okay boy I didn't really don't
103:18 - remember where I was in this whole thing
103:30 - all right so the next step that I'm
103:32 - doing here all right listen I think I
103:34 - should I said that okay so conceivably
103:39 - what I want to do now is look at this
103:41 - data dot entries and divide it into two
103:44 - different arrays training and testing
103:45 - but here's the thing what I want I I'm
103:48 - kind of talking about by talking myself
103:50 - in circles here but I don't want to
103:51 - split it just yet even though that was
103:53 - an important point for me to make the
103:56 - I'm using tension flow KS here and
103:58 - tension low digest actually has a
103:59 - function called split that will let me
104:01 - take a long list of data points and
104:04 - split them into two different lists of
104:06 - data points so what I actually want to
104:08 - do first is get the data into tensors
104:11 - the tensor flow tjs thing that I need to
104:14 - use it and then I'll call TF dot split
104:16 - to do the 80/20 split so whatta hell am
104:18 - I gonna do this how am I gonna convert
104:20 - into tensors now first of all if you
104:21 - have never looked attentively at Jess
104:23 - before I might encourage you to go watch
104:25 - my tension flow GS tutorial series and
104:28 - it looks at what is a tensor and what
104:29 - are the possibilities there but just
104:30 - thinking about it
104:31 - the the thing that I need to do also is
104:34 - think about I have the the inputs which
104:38 - are the RGB values and then I have the
104:42 - target outputs the target outputs which
104:48 - are the labels and so when I create my
104:50 - tensors I'm actually gonna do this
104:52 - somewhat separately so let's just worry
104:55 - only about the inputs this is going to
104:57 - be the easier part first so the inputs
105:00 - basically the tensor shape that I want
105:03 - is a 2d tensor
105:06 - right because each input has three
105:09 - values maybe you know RG and a B value
105:13 - and then I have a lot of those so a one
105:19 - D tensor like a one dimensional array
105:21 - just has a single set of RGB values but
105:24 - I have a 2d tensor with because my data
105:27 - set there's a whole bunch of those data
105:29 - points okay so let me first just create
105:32 - a tensor 2d out of all of the RGB values
105:39 - oh oh so by the way I'm in addition to
105:48 - when I get to fit there's a fit actually
105:52 - we'll split the data up for me now I
105:55 - can't remember let me just go quickly
105:58 - look at let me look at my XOR code I
106:06 - just want to see something in there
106:08 - really quickly
106:09 - that's you this is not was this doesn't
106:12 - need to be part of the actual tutorial I
106:14 - just want to check something I can't
106:17 - remember yeah yeah I separate it into
106:19 - the X's and Y's yeah that's what I was
106:21 - looking for where am I here
106:34 - and by the way if you watched my ex or
106:38 - coding challenge where I did kind of a
106:40 - basic where I train a neural network
106:44 - just solve exclusive or I also was
106:47 - calling these X's can you see that
106:50 - barely and the outputs being the Y's so
106:53 - that's the other the X's are like the
106:55 - inputs to the machine learning model the
106:57 - Y's are the output so I might use that
106:59 - that variable naming as well okay now
107:01 - I'm really going back to the computer
107:02 - and I'm going to say so first ah so let
107:08 - me first to make a tensor I need to
107:11 - normalize the data and put it into
107:13 - arrays woof
107:14 - so let me go here and say first I'm
107:16 - going to say let the colors be an array
107:22 - then I'm going to go through let every
107:25 - record in data let record of data
107:29 - entries I'm gonna say colors and then
107:35 - I'm gonna say I'm gonna have a specific
107:37 - color I'm not gonna use the word color
107:38 - just as they Co L is a is record are
107:44 - divided by 255 record G divided by 255
107:49 - and I'm dividing by 255 because I want
107:52 - to normalize it's gonna my machine and
107:54 - generally speaking for like inputs to a
107:56 - machine learning model I want to
107:58 - normalize to some strict range between 0
108:01 - and 1 is a pretty good one to do and
108:02 - then I'm gonna say record B divided by
108:06 - 255 and then when I say colors dot push
108:10 - call and then just gonna look at this
108:14 - color so let's just look at this so this
108:16 - is not a tensor yet this is just 5,000
108:19 - and probably one thing I should do while
108:22 - I'm working this out was I should work
108:23 - with like a smaller data set but 5,000
108:26 - is so small anyway but if I were doing
108:28 - this with like a big data set that had
108:30 - like 5,000 records in it I'm like sort
108:32 - of figuring out and one would want to do
108:33 - it for just like a hundred first and
108:35 - then I could use the large data set okay
108:36 - so we can see here this is a big array
108:39 - and each element of that array is
108:42 - another array with the normalized color
108:45 - values in it
108:46 - so this now I should be able to say now
108:50 - let X is equal TF tensor 2d colors so
109:00 - this is me turning those values and I I
109:03 - just want to say like console dot log
109:06 - X's shape let's look at the shape of the
109:10 - X's just to sort of see yes right
109:15 - there's five thousand six hundred forty
109:17 - three entries each with three values so
109:19 - I think things are going right here I
109:21 - turned that into a tensor and then ah
109:23 - whoa boy hey this wasn't so hard
109:26 - we're in good shape here I haven't done
109:28 - the training or testing now I need to do
109:30 - the wise the wise involve a concept
109:34 - known as one hot encoding I think one
109:37 - hot vector so you know what I'm gonna
109:39 - pause here I finished this thing I'm
109:41 - really dividing this series until like
109:43 - little chunks here in the next video I'm
109:45 - gonna look at how to make the Y's and
109:47 - I'm gonna cover a concept known as one
109:49 - hunt one hot what's the twist the term
109:53 - that I'm looking for one is it one hot
109:54 - encoding one hot encoding yes so so I'll
110:00 - cover that in the next video when I make
110:01 - the wise thanks okay yeah I'm gonna need
110:17 - two one hot encode the labels okay
110:26 - actually don't know how to do this with
110:27 - tensorflow yes but I think there's a one
110:31 - hot function let me just look tf1 hot so
110:38 - you give it let me let me try to
110:42 - understand this okay one hot one D this
110:53 - weird
110:53 - oh oh so if I were to do that if I have
111:01 - a tensor that's like this this is what I
111:05 - have I have like I have nine
111:11 - possibilities right so let's say I have
111:15 - I make an array that's all of the index
111:19 - values for the labels so if I say this
111:24 - is these are like the labels right and
111:31 - then I could say the the Y's would be
111:37 - tf1 hot the labels comma nine right yep
111:52 - cool okay I know how to do this now
111:54 - excellent whoo this is fun I think this
111:59 - might be where I stopped today alright
112:09 - what happened but if I I must
112:11 - I'm gonna kill the kill the console if I
112:14 - do this right no oh it's smart it's
112:18 - smarter than me I love how it's smart
112:20 - okay great
112:23 - okay
112:24 - oh this is good this is good stuff there
112:36 - are nine labels and a data point it's
112:42 - categorized as label free then the one
112:47 - hot encoding would be one no no three if
112:58 - they're nine three so it's the third so
113:00 - it really be index - yeah because are
113:03 - the index no the entities would be a
113:05 - zero through eight right zero through
113:08 - eight zeros so the label is three it's
113:14 - really the fourth index three index
113:17 - three there's nine zero
113:22 - [Music]
113:25 - zero-one
113:27 - zero zero zero zero zero okay yeah this
113:43 - is gonna be much easier than I thought
113:44 - Thank You tensorflow dodge yes okay
113:50 - we're still working with our data at
113:53 - some point we're gonna start training a
113:55 - model what have I done so far okay so
113:57 - just to recap for a second I've got this
114:00 - whole database of crowd-sourced colors
114:03 - with a label and now I've converted all
114:06 - that stuff to tensors so and I'm just
114:09 - looking at the inputs now the inputs
114:11 - that I want to use for my machine
114:12 - learning model so I 5643 RGB values so
114:16 - the shape of the tensor is 5060 or 43
114:19 - comma 3 and I can look at it here I have
114:21 - all the RGB values normalized to zero
114:24 - between 0 and 1 now I need to do the Y's
114:28 - I need to figure out what are the target
114:30 - outputs associated with each RGB value
114:33 - and this is exciting
114:34 - because we are going to cover we being
114:37 - me and you being the person watching I
114:39 - am going to cover a concept known as one
114:42 - hot encoding so we have to understand
114:46 - why we're going to do one hot encoding I
114:48 - need to jump all the way to what would
114:51 - essentially be like the very end of this
114:53 - video series what am I asking the neural
114:55 - network that I'm gonna build right the
114:57 - neural network that I've been in build
114:58 - is gonna have three inputs are GB it's
115:01 - gonna have some architecture some
115:03 - configuration of all the stuff in the
115:05 - middle and then the idea of getting a
115:08 - phone call really and my volume is on
115:12 - and my watch is giving me a notification
115:13 - by the way it's saying it says I wish
115:16 - you could see this it's that scam likely
115:19 - that's the decline turn off the volume
115:25 - off the notifications I'm so thrilled
115:28 - about this video topic I'm gonna leave
115:32 - that in there I don't care the inputs
115:38 - being RGB what do I want the outputs to
115:40 - be the output should be a label right I
115:44 - want to say is it reddish is it blue ish
115:48 - but this is just the label that we I've
115:51 - used as a human being to say what I
115:54 - think it is like if I was doing image
115:55 - classification the label would be cat or
115:57 - dog or rainbow or unicorn but those
116:01 - strings are not going to be meaningful
116:03 - in the sort of numbers based neural
116:05 - network system that I'm building
116:07 - I need this to return a number so we
116:10 - could think if there are nine possible
116:12 - labels I could return the number zero
116:14 - one two three four five six seven or
116:17 - eight now while I could try to do
116:20 - something where I just have one output
116:22 - and that's a floating-point number that
116:24 - kind of I round to the nearest integer
116:26 - that indicates the label that's not
116:28 - gonna work so well what I actually
116:30 - really want is I want a probability
116:32 - value I want a probability value for
116:34 - each one of these labels so we could
116:36 - imagine if there are nine labels
116:39 - why don't nine is such I should have
116:41 - made it ten if I could go back double
116:44 - back in time start this whole series
116:45 - over I would have made 10 labels because
116:47 - all this would be so much easier to work
116:48 - out but imagine there are nine labels I
116:51 - don't know why I'm drawing it like this
116:52 - but one two three four five six seven
116:54 - eight nine and what if I had a
116:56 - probability like oh there's a 10% chance
116:59 - it's the first label and there's a 20%
117:01 - chance it's the second label in the zero
117:04 - zero zero zero and then a 70% chance
117:07 - zero zero
117:08 - right all of these values might add up
117:11 - to 100% and we could say ah it's most
117:15 - likely this one which is index 0 1 2 3 4
117:21 - 5 6 which maps to you know purplish so
117:25 - I'm trying to create the target outputs
117:28 - if I know that this particular color
117:31 - should be purplish this target output
117:35 - that I want is actually zero zero zero
117:38 - zero zero zero one zero zero zero one
117:43 - two three four five six seven eight nine
117:45 - labels zero through eight indices this
117:48 - is one hot encoding I am taking the eye
117:51 - dia of index six and making a vector a 1
117:56 - dimensional vector full of zeros with a
117:59 - 1 in the spot that matches the label a
118:03 - 100% chance because if the neural
118:06 - network was working perfectly
118:07 - this is the output that I would get so
118:09 - one hot encoding is the idea of creating
118:14 - your vector having all zeros and sort of
118:16 - flipping a bit on in a way and just one
118:19 - of them a switch goes on and that's
118:20 - assigned one now I could come up with an
118:23 - algorithm pretty easily
118:25 - probably not easily I could work hard on
118:27 - it and try it would be hard and I could
118:29 - say take all of my labels and I could
118:32 - convert every single label into an array
118:34 - with a one in the right spot luckily for
118:36 - us we're using tensor flow TAS and it
118:38 - has a function called tf1 hot so I'm
118:43 - gonna create the wise for this system
118:45 - using the TF dot one hot function and
118:48 - that's what I'm gonna go do next hold on
118:55 - SEC everybody
118:57 - yeah default ringtone you know I don't
118:59 - usually embarrassing I don't even have
119:04 - the chat open yet oh I'm looking at my
119:05 - email ok ok ok alright so let's go look
119:17 - at the code and now what I need to do I
119:20 - made this colors array now let me make
119:23 - this labels array and if I say labels
119:28 - dot push now here's the thing what I
119:31 - want is for this I mean I could just
119:33 - push the label in it so let's just do
119:34 - that a record label let's just look at
119:38 - this real quick and I'm going to comment
119:42 - out the console logging and I'm gonna
119:44 - say console dot log labels so let's just
119:48 - see this should be right this is all the
119:51 - labels the strings of the labels so the
119:53 - first thing I need to do is convert each
119:55 - one of these into an index value so I
119:58 - need a mapping for that and I really
120:01 - wish I have this somewhere but I'm just
120:04 - gonna
120:05 - I'm gonna just create something called
120:07 - labels index really quick and I did this
120:10 - in a previous where did I do this didn't
120:13 - I do this in some other one of my other
120:15 - examples I have like an array of all the
120:19 - labels oh here we go
120:20 - so here okay one of my examples I had
120:23 - all the labels
120:25 - I lost where I was I'm gonna paste this
120:29 - in here I'm gonna search buttons dot
120:32 - push create button I'm just gonna
120:36 - eliminate this replace all I don't need
120:39 - that and then oh I want the I want the
120:43 - apostrophe I'm gonna put that back in I
120:45 - couldn't use like a expression
120:47 - but I know sorry I can't believe you're
120:49 - watching a video where I am clumsily
120:51 - trying okay let's see if it just comes
120:56 - back okay I think I'm just back I think
121:02 - it just comes back now that I'm doing
121:03 - this event thing so if you could tell me
121:06 - in the chat that I'm back okay its back
121:12 - great sorry about that so I did I don't
121:14 - know the computer froze I restarted I
121:15 - don't have the YouTube chat up and I
121:18 - think hopefully the sound um so let me
121:20 - grab that real quick history oops and
121:28 - the cameras are all shutting off which
121:29 - is fine let me just get the YouTube chat
121:35 - back up here so I can see it okay
121:48 - so I don't know what YouTube is gonna
121:50 - have in the end Oh was I and was I did I
121:56 - write something way out of bounds o TF
121:59 - dot one hot that's fine that's fine
122:08 - alright so I was let me go back I was
122:14 - about to do this which now I feel like
122:17 - it's silly like shouldn't I just make an
122:18 - array shouldn't I just make an array of
122:28 - thus labels and then can I could get the
122:32 - index right when it isn't there must be
122:35 - a way like right whoa whoa what just
122:41 - what happened to the chrome chrome died
122:49 - [Music]
122:53 - I don't need this what why do I have
123:05 - this like debugger thing on where did
123:08 - that come from why how did I get this
123:11 - what does this thing go away
123:14 - what does this tab here I've never seen
123:16 - that tab oh hi could ever go okay one
123:22 - single array of strings right right like
123:23 - what if I do right then I can say index
123:30 - of B right yeah okay so that's what I'm
123:34 - gonna do I don't know why I didn't think
123:36 - of that before
123:37 - okay so let me go back matchy I'm gonna
123:41 - go back to where I was looking for the
123:44 - list of labels so I need to find that
123:50 - list of labels which I believe I had in
123:53 - the original crowdsource color thing no
123:58 - no wait hold on
124:08 - we're actually what's that oh yeah here
124:12 - it is okay
124:18 - okay sorry
124:22 - download data sketch other classifier
124:26 - where am i okay
124:29 - hopefully this will edit together fine
124:31 - oh I'm gonna just yeah all right so I
124:40 - need to find my list of labels I could
124:42 - just type them out labels
124:45 - oh no but uh all labels equals uh I
124:51 - could say I could say label lists let me
124:53 - call it like the list and a grayish
124:56 - blueish but I have that right here right
124:58 - in crowdsource color when I made those
124:59 - buttons these are all the labels one two
125:02 - three four five six seven eight nine so
125:03 - if I come back to what I'm doing here
125:05 - and just put this here and then let me
125:09 - just do a find replace whoops let me do
125:13 - a find replace for just this I just need
125:19 - to get rid of this yes you're watching
125:23 - me like failing at doing fine replace
125:27 - and then let me look for ish and replace
125:35 - that with ish comma there we go now I
125:40 - have my array my label list array so now
125:43 - what I want to put in in the labels
125:46 - array is not the actual string of the
125:48 - label but label list index of that label
125:53 - so the index of function I need another
125:55 - parenthesis there the index of function
125:58 - will say look for this particular
126:00 - element in the array and giving back its
126:02 - index so let's look at that now let me
126:05 - run this again and we can see there we
126:07 - go
126:07 - now I have 5643 index values and guess
126:14 - what this is when I now want to go and I
126:17 - apologize and I wrote TF dot one hot up
126:20 - there you can't see it so let me just
126:22 - write that again TF one hot is the name
126:25 - of the function let's go to the
126:26 - tensorflow j/s documentation page right
126:31 - over here and oh look I already have it
126:33 - open to one hot how convenient
126:35 - and basically this documentation let's
126:37 - see if we can understand this I need to
126:39 - give it all the indices that's what I
126:41 - already have
126:42 - I mean oh but you know what these have
126:45 - to be a tensor already so first I need
126:47 - to make a tensor of all those indices
126:49 - let's do that so I want to say let label
126:55 - tensor tensor tensor labels tensor let's
127:00 - call it equal TF tensor 1d labels and
127:05 - let's say let's just look at that label
127:08 - tensor labels tensor dot print let's
127:13 - just make sure that's kind of right we
127:15 - can see that's a big long tensor of all
127:17 - of the labels and then now the wise is
127:22 - TF dot one hot so if I go back and look
127:27 - at this one hot needs the list of all of
127:30 - those index values which are zero
127:32 - through eight and the depth the depth
127:34 - means how many possibilities are there
127:37 - and there are nine possibilities a non
127:40 - value will default to 1 and the off
127:42 - value defaults to zero but if I presume
127:43 - reason I wanted to one Haughton code
127:45 - with 3 the number 3 for every spot in
127:48 - the number of point 1 for every non spot
127:50 - I could change those values but all I
127:53 - need to do then is say one hot labels
127:57 - tensor and um 9 and then I could say
128:03 - wise dot print so X's dot print and wise
128:08 - dot print so now I have my X's and Y's
128:11 - I remember the previous video I did this
128:13 - I looked at all the RGB values I divided
128:16 - by 255 and then I sorry I lost my train
128:22 - of thought here and then I made those
128:26 - into a 2d tensor and now I've made the
128:29 - Y's and I what I do want to see is
128:31 - console.log let's look at X's dot shape
128:34 - and console.log wise dot shape also okay
128:40 - right let's look and see if everything
128:41 - seems right ah indices must be of data
128:46 - type int 32
128:48 - Oh interesting so when I made this
128:51 - tensor my labels if we look at them are
128:55 - actually like if I go back and
128:59 - console.log the labels those are
129:01 - floating-point numbers because I wasn't
129:03 - really worrying about it when I was just
129:05 - working with regular JavaScript arrays
129:06 - but I need to very specifically make
129:09 - sure that I set the datatype index
129:12 - values for a1 hot vector cannot be
129:14 - floating point values so I think if I do
129:15 - this we can see that fixed it right so
129:20 - now I have the shape right this makes
129:23 - sense there's five thousand six hundred
129:25 - forty three data points this each data
129:28 - point for the inputs for the X's has an
129:29 - RGB that's three and there are nine
129:32 - possible labels so I have the shape as
129:34 - 5643 nine possibilities and each one of
129:38 - those just is one hot encoded so this
129:41 - means blueish and this means purplish or
129:43 - whatever the mapping is I don't remember
129:45 - the second one is greenish and zero one
129:50 - two three four five the six one is 0 1 2
129:54 - 3 4 5 is pinkish that's the sixth one
129:57 - yes whatever so I this is gonna be
129:59 - really important which labels actually
130:01 - go with with index values is something
130:03 - that I'm going to have to save for the
130:05 - duration of this project because when I
130:07 - show the results to the user I want to
130:09 - actually show the strings not the number
130:11 - value okay so I am now ready to try to
130:14 - fit four sides up so what's next I need
130:16 - to architect the model right I got all
130:19 - of the input data and I got all of the
130:21 - output data I need to divide into
130:22 - training and testing Architect the model
130:25 - fit the model and then I'm sort of done
130:29 - maybe so that's gonna be like many more
130:31 - videos into the future so I got at least
130:32 - three or four little more steps to build
130:34 - here until I have this like final
130:36 - version of this color classifier built
130:38 - with tension flow jaz-o dispose wait
130:49 - wait don't leave just wait don't leave
130:52 - just yet I do want to think about memory
130:56 - management and I'm maybe I'm gonna think
130:58 - about memory management later but and
131:00 - the X's and Y's I'm going to want to use
131:02 - in the next video but I probably should
131:04 - after I make the one hot vector I don't
131:08 - need when I'm working with lower-level
131:10 - tend to float yes I've got to clean up
131:12 - stuff I'm not gonna use anymore and I
131:14 - don't need these labels anymore so I can
131:16 - dispose that one so that was just the
131:17 - last little tidbit here and then I'll
131:19 - move on in the next video I'm going to
131:20 - start creating the architecture of the
131:23 - neural network model itself and oh I'm
131:25 - gonna introduce some new concepts soft
131:27 - backs and cross-entropy isn't that
131:29 - exciting okay all right all right
131:39 - everyone it's two o'clock I didn't get
131:41 - through this whole thing I have to stop
131:45 - so the rest I think I'm gonna be back on
131:48 - Monday and let's see if I can finish
131:50 - this on Monday but stay tuned and I'll
131:57 - be back on Monday I don't know what else
132:00 - to say any questions
132:11 - [Music]
132:30 - really attitude
132:34 - I can you make music tutorials no
133:09 - definitely not
133:10 - [Music]
133:13 - Alka how could just maybe just woke up
133:18 - and just now watch it says Alka is
133:22 - typing alright so let me just mention a
133:23 - couple things I hope to be back on
133:25 - Monday I will not be here definitely any
133:29 - day next week Tuesdays through Friday
133:30 - because I am traveling less I do some
133:32 - kind of crazy livestream for my
133:34 - television phone but I will be traveling
133:39 - the rest of the next week I'm also
133:40 - moving to a new apartment
133:42 - so far we've got a lot of stuff to do Oh
133:47 - could you go on green screen and come in
133:49 - saying wait wait wait I have an idea
133:52 - yes I can should I be singing playing
133:56 - the ukulele or no ukulele will
134:01 - definitely indulge Alka in this do you
134:05 - really know how to play guitar no no I
134:07 - mean that's not that's am ukulele which
134:10 - I bought two weeks ago try to teach
134:12 - myself some chords so it's about as far
134:14 - as I am all right green only
134:26 - okay wait wait wait wait a sec wait yes
134:47 - no I'll always stay for wasting time I
134:50 - just can't do any more coding my brain
134:51 - is fried
134:52 - [Music]
134:57 - wait wait wait wait wait wait wait wait
135:01 - [Music]
135:08 - wait please wait for me oh wait wait
135:13 - wait wait wait wait wait wait wait wait
135:16 - wait that's got to be good enough for
135:19 - whatever you're cooking up hello Simon
135:29 - Wright's great timing I'm entering the
135:31 - tunnel now
135:32 - so we'll probably lose the for it you've
135:34 - been watching this while driving or on a
135:37 - train that's amazing can you reopen
135:40 - entries on the color classification
135:42 - database just for fun yeah why not why
135:47 - not how do you manage time with a uni
135:49 - and a youtube channel rights art it's
135:54 - you know I think that I need to manage
135:58 - my time better and I need to the other
136:02 - thing is I have I have a project that I
136:04 - really want to do this summer which is
136:05 - an updated version the nature of code
136:07 - book and I think that I need to take a
136:10 - break from live streaming or like slow
136:14 - that down a little bit to give myself
136:15 - more time to work on that but now that I
136:17 - have the patreon and the sponsors and
136:19 - sort of not sure how to do that
136:20 - because I want to keep the content going
136:23 - so but let me turn the let me go me let
136:28 - me turn the writing to the database back
136:32 - on I guess
136:39 - so rules and write is true okay you can
136:49 - write to the database again
136:52 - Ricardo asks are you a uni professor um
136:55 - so I teach at New York University a part
136:59 - of a program called ITP which is part of
137:01 - Tisch School of the Arts and you can
137:03 - find out more information on the website
137:05 - and this fall we're starting a new
137:07 - undergrad program so whoohoo
137:13 - no remove the false and yes
137:15 - oh that's yes ah shoot shoot shoot no no
137:19 - I didn't that didn't just happen quick
137:24 - I totally did the wrong thing totally
137:32 - did the wrong thing
137:33 - rules quick let me put this false
137:37 - alright so there was a brief moment in
137:39 - time where the whole thing was open to
137:40 - writing anything but now this is what I
137:42 - want to remove thank you very much okay
137:46 - everything should be okay now all right
137:52 - Belisarius
137:53 - asked Dan could you please explain how
137:55 - to get the slack invitation so
137:57 - unfortunately for better or worse these
138:00 - slack invitation is only open to either
138:02 - sponsors of the YouTube channel or
138:04 - patreon is via patrons via patreon and
138:08 - you can find more information about
138:10 - about that a patreon slash coding
138:11 - trainer there's like a sponsor button
138:13 - already as part of the YouTube channel I
138:14 - don't love the idea of having a closed
138:16 - community that requires people to pay
138:19 - but it is at the moment or the benefits
138:22 - that I get out of it is it's a smaller
138:24 - group of people who are sort of
138:25 - dedicated to participating in the
138:27 - community of the channel and it helps me
138:31 - I help to be do make these videos having
138:33 - the the funding frankly it gives me it
138:35 - allows me to have more time to do it and
138:37 - it makes me feel like it's an obligation
138:38 - in a good way I think so that's that at
138:42 - the moment the system I have I am very
138:44 - happy for people to self-organize into
138:45 - their own free and open community is I
138:48 - want to do more to be able to have the
138:51 - audience of this channel be more
138:52 - inclusive and I'm always open to anyone
138:55 - who has any thoughts or ideas that can
138:58 - help and ways them for me to think about
138:59 - doing a better job with that time
139:06 - management I got nothing for you
139:07 - oh and so but if you do sponsor the
139:12 - channel i if you do sponsor the channel
139:16 - i don't and also sign up via patron I
139:18 - don't have a good system of there's no
139:23 - automatic system I have to add
139:24 - just slack manually so you can best way
139:30 - it would be to like tweet me at
139:31 - Schiffman but if you're a sponsor on
139:33 - youtube if you go to the community tab
139:35 - there's a post there that has the link
139:37 - to a Google forum that's only for
139:38 - sponsors and patreon I get your email
139:40 - and I send an invite but sometimes it
139:42 - has a bit a spam folder and sometimes I
139:43 - forget link to the site with colors the
139:48 - site with colors is github.com crowd
139:55 - sort and i also should say one of the
139:56 - things that i'm not able to do
139:58 - effectively is manage all the pull
140:00 - requests and issues on these github
140:02 - repos i would love do consider that a
140:05 - possibility of that could actually be
140:07 - like a paid position if somebody who's a
140:09 - community manager for all the github
140:11 - repos but I haven't figured out a if I
140:13 - have the budget to do that and who the
140:15 - who the right person would be for that
140:17 - at the moment there are a lot of
140:18 - wonderful volunteers who help who are
140:22 - members of the coding train github
140:23 - organization and help kind of like
140:25 - manage and pull requests and write to
140:27 - issues here and there as as they have
140:29 - time Oh Oliver posted in the in the in
140:34 - the YouTube channel ok and so here it is
140:37 - right here this is at present let's just
140:39 - make sure this is working again yep so
140:42 - now this is a once again accepting new
140:45 - data points for the color classifier ok
140:51 - oh yes in Medan oh thank you and so many
140:54 - wonderful members of the community that
140:55 - I can't seem to remember to mention I am
140:58 - in New York City I'm not in Hong Kong
141:00 - Ricardo asks are you familiar with
141:02 - functional programming at Jas a de asked
141:07 - almost a half a million subs how do you
141:09 - feel about that I'm very excited I feel
141:12 - very honored or humbled those kind of
141:15 - words I feel a little bit surprised like
141:18 - I did not this was not my expectation
141:20 - for the channel I feel like I need to do
141:24 - better I'm always trying to improve what
141:26 - I'm doing and yeah it's exciting I would
141:31 - like to do something to celebrate
141:32 - 500,000 subscribers I should probably do
141:34 - I was saying that I should just
141:37 - whatever is the suggestion number 500 in
141:41 - here which is make an AI that solves the
141:46 - 15 tile sliding puzzle so I might try to
141:48 - do that at some point if anybody has any
141:50 - other ideas for celebrating 500,000
141:52 - subscribers assuming not everybody has
141:54 - it just unsubscribe right now which
141:56 - which would be fine also yeah this has
142:01 - been a really great stream right skate
142:03 - we've mined like a microcosm of the
142:04 - entire data science pipelines ha it's
142:06 - really nice to hear because this is the
142:08 - new you know I don't know what my
142:09 - expertise is exactly but certainly data
142:13 - science and working with machine
142:15 - learning it is not something that I
142:17 - spent years and years studying and
142:18 - thinking about it's something I've come
142:21 - to as a person who worked on kind of
142:23 - open source creative coding platforms
142:25 - for many years
142:25 - alright I'm now going to leave the
142:32 - station thank you for tuning in I hope
142:36 - to come back and finish this color
142:37 - classifier on Monday next week is a
142:39 - really hard week for me so it's not
142:42 - confirmed that I'm doing that till you
142:44 - see it scheduled on YouTube itself you
142:48 - know if you're wondering how to get a
142:50 - notification you hit the subscribe
142:51 - button the alarm bell all that sort of
142:53 - stuff alright so I'm gonna hit stop
142:56 - streaming and I'll see you maybe on
143:01 - Monday if not whenever I at some point
143:05 - at the end of June again remember I'm
143:06 - gonna be away for half of July so this
143:09 - would be a little bit lighter over the
143:11 - summer during July in August but also I
143:13 - might when I'm here I might do to live
143:15 - streams in a week like I did this week
143:17 - does YouTube Oh Engram ste asks does
143:22 - YouTube have an API that you could use
143:23 - for some cool data visualizations for
143:25 - 500k subscribers word cloud of comments
143:28 - or maybe I could visualize like all the
143:30 - locations all over the world where
143:31 - people are I don't know if I have access
143:33 - to that data so yeah I would consider
143:35 - that that's kind of like a fun idea so
143:37 - let's discuss that in
143:41 - the slack Channel I would love to hear
143:43 - more suggestions okay goodbye everybody
143:44 - see the next week hopefully if not the
143:47 - week after hopefully if not definitely
143:49 - sometime in July stay tuned I'll be
143:51 - posting on Twitter if I remember when
143:53 - I'm live-streaming actually the at the
143:55 - coding train Auto tweets at Schiffman if
143:58 - I remember and then what was I gonna say
144:02 - and then also I schedule it on YouTube
144:05 - now okay goodbye
144:06 - oh no I don't hit stop streaming there I
144:10 - have to do it here stop streaming there
144:15 - we go