00:00 - hello again okay welcome to this second
00:02 - video in my new series about genetic
00:05 - algorithms and evolutionary computing in
00:07 - general so in this particular video I am
00:10 - going to talk through the actual
00:11 - algorithm itself now if you can't
00:12 - remember what I'm using as my
00:14 - demonstration to demonstrate this idea
00:17 - of a genetic algorithm I'm looking at
00:19 - the problem of finding the phrase to be
00:23 - or not to be that is the question in a
00:24 - sea of random to be or not to brand
00:27 - phrases so to demonstrate this idea I
00:30 - have this particular p5 sketch running
00:32 - in the browser and it's just generating
00:34 - random phrases over and over again
00:35 - randomly now at some point after some
00:38 - gajillion Gillian Gillian gajillion
00:40 - amount of years we might movie could
00:42 - happen right now this could be the
00:43 - moment where we could be so unbelievably
00:45 - lucky and we just all go by our
00:47 - Powerball tickets we're to be or not to
00:48 - be
00:49 - actually uh appears right here but I
00:51 - would I'm pretty sure that it's not
00:53 - going to so this is the brute-force
00:55 - problem the solution to this brute-force
00:58 - problem I'm going to refresh this here
00:59 - is to use a genetic algorithm and you
01:02 - can see that this is now the example
01:04 - that I'm going to get to of the genetic
01:05 - algorithm running and you can see it
01:07 - took you know a matter of five to ten
01:09 - seconds to find this phrase to be or not
01:11 - to be that is the question it took a
01:13 - number of generations there's this
01:15 - concept of fitness there's this idea of
01:17 - a population there's this thing called a
01:18 - mutation rate so this is what I need to
01:20 - cover what are all the pieces of the
01:22 - genetic algorithm how do they work what
01:24 - is the order in which they happen and
01:26 - then after I do that we'll start looking
01:28 - at how all those things are implemented
01:30 - in actual code and I'll look at both
01:31 - JavaScript code that you can run in the
01:33 - browser as well as Java code that you
01:35 - can run in the processing programming
01:36 - environment okay so um coming back to
01:40 - the algorithm let's check out our car by
01:42 - the way so this by the way I'm just
01:43 - letting this run in the background you
01:44 - can see that these cars from boxcar 2d
01:47 - are really evolving quite nicely I would
01:49 - have credit whoever made boxcar 2d
01:51 - because I really love this project so I
01:52 - don't know it off the top of my head so
01:54 - I'll mention it in a future video and
01:55 - I'll make sure that it's in the
01:56 - description of this video but you can
01:57 - also go to the website itself and find
01:59 - it okay so we'll check back in on our
02:01 - cars in a little bit our cars but right
02:03 - now I want to go back to this kind of
02:06 - presentation so now I don't usually use
02:09 - slide presentations of my videos so feel
02:11 - free to complain in the comments
02:13 - if you want to but before I even get to
02:15 - the algorithm itself I want to talk
02:17 - about now I want to mentioned something
02:19 - as with most of my videos that are part
02:21 - of the nature of code series I'm doing a
02:23 - thing where I'm kind of saying you know
02:25 - this nature stuff this physics stuff
02:28 - this biology stuff it's really
02:30 - interesting and I want to be inspired by
02:32 - it and try to kind of approximated in
02:33 - software to create compelling and
02:35 - interesting and unique creative projects
02:37 - but I'm not actually here saying to you
02:40 - I'm a kind of like formal rigorous
02:44 - scientist who's trying to do a formal
02:47 - experiment about evolution and you know
02:49 - model evolutionary processes precisely
02:52 - in software to study some type of actual
02:55 - biological process the idea of the
02:57 - genetic algorithm is simply like this
02:58 - idea inspired by actual effects but
03:01 - based on a true story
03:03 - this genetic algorithm takes ideas from
03:06 - actual biological evolution and applies
03:08 - them in software but you know I'm just
03:11 - one of the sort of a disclaimer saying
03:12 - I'm always kind of scratching the
03:14 - surface of actual the actual topics of
03:16 - genetics and evolution but if you read
03:19 - Darwin there and think about Darwinian
03:21 - natural selection there are three key
03:23 - principles that need to be in place for
03:25 - evolution to happen and those principles
03:29 - I want to make sure are in the genetic
03:31 - algorithm that I demonstrate to you so
03:33 - first I want to just talk to you what
03:34 - those principles are the first one is
03:35 - per editing so if we're going to have
03:37 - this idea of elements of a population
03:40 - that evolved from generation to
03:42 - generation there must be some mechanism
03:44 - in the algorithm in our code that allows
03:47 - data from one generation to be passed
03:49 - from one to the other so that's one
03:51 - thing that's going to have to be there
03:52 - variation right let's say I want to
03:54 - evolve whiteboard markers and this is my
03:59 - population of whiteboard markers I only
04:02 - have blue ones and these whiteboard
04:05 - markers are going to somehow make
04:07 - children whiteboard markers this is
04:09 - getting a little bit weird but the point
04:11 - is there's no variation here these are
04:13 - both blue so they could make a child and
04:15 - pass down their traits their data to the
04:17 - next generation and they would be blue
04:19 - and then there'd be more blue in there
04:20 - more blue and I want to have some pink
04:22 - ones and some purple ones some orange
04:23 - ones and all the colors with the rainbow
04:25 - I'm off track here but you get the point
04:27 - there's got to be some variation and
04:29 - what's the mechanism in order for there
04:31 - to be a variety of traits either in the
04:33 - population when it starts or as the
04:35 - population involves over time so that's
04:36 - another key principle variation the last
04:40 - principle which must be present in the
04:42 - genetic algorithm is selection selection
04:46 - there has to be some way of saying
04:48 - here's my I can't believe I was using
04:50 - white board markers I should have
04:51 - thought about this in advance and
04:53 - brought some like stuffed stuffed
04:54 - animals have been great lots of stuff
04:56 - that would have also been weird stuffed
04:57 - animals weird yeah okay but anyway this
04:59 - is my population of white board markers
05:01 - right if I ever if I just say every
05:05 - single one of these white board markers
05:06 - has an equal chance of passing its
05:09 - genetic information down to the next
05:10 - generation next generations next
05:15 - generation oh my god then there really
05:20 - won't be evolution at play because
05:23 - nothing will the the makeup of the
05:25 - population the quality of the population
05:27 - will not really change over time however
05:29 - if I were to say something like brighter
05:32 - colors or more likely to have their
05:34 - genetic information passed to the next
05:36 - generation then I might be more likely
05:38 - to pick red or more likely to pick this
05:40 - green I don't have any bright colors
05:41 - darker colors whatever the point is that
05:44 - there must be some product of a process
05:47 - of selection I just read this to you
05:49 - mechanism by which members of the
05:50 - population have the opportunity to be
05:51 - parents at best so this is by the way
05:53 - typically refer to as survival of the
05:55 - fittest right this idea of fitness and
05:57 - this idea of Fitness will play a big
05:58 - role in the genetic algorithm and
06:00 - fitness will actually become a
06:01 - mathematical function which is somewhat
06:04 - absurd and not how think things don't
06:05 - work in the real world really we're all
06:07 - walking around with a hat on and then
06:09 - there's a number on our hat that gives
06:11 - us it says our fitness as a numeric
06:13 - quantity and the higher our fitness is
06:14 - the more likely we are to pass our
06:16 - genetic information right but this is
06:17 - this idea of this kind of almost cold
06:21 - algorithmic version of this kind of
06:24 - beautiful and amazing natural process
06:25 - I'm using some mathematical function to
06:28 - to to design
06:30 - to calculate fitness okay so this is the
06:32 - idea we must make sure these three
06:35 - principles are present in the genetic
06:38 - algorithm so I'm going to come up that's
06:41 - our car we're checking on our car again
06:43 - it's not it's not one car by the way
06:45 - it's been actually maybe it is I wonder
06:47 - if it pauses actually when I take the
06:49 - window out of focus but whatever it is
06:51 - it's certainly evolving to do cool and
06:53 - amazing things I want to go back to this
06:54 - so I want to talk through how this
06:57 - algorithm works and I'm going to use
07:00 - natural selection to pick this purple
07:03 - marker and then I have to press a button
07:05 - but that button to come over here and
07:08 - let's talk about now what I want to do I
07:11 - really want to use unicorn but unicorn
07:13 - is too many letters in it also maybe I
07:15 - could use I'm going to use unicorn gosh
07:17 - darn it I always just use cap let's just
07:19 - say we want a simpler phrase to Yvonne
07:21 - could use rainbow by the way but I'm
07:23 - going to use unicorn
07:24 - I want to evolve the phrase unicorn out
07:29 - of every single pod summary a phrase the
07:31 - word the sequence of characters unicorn
07:33 - out of every single possible random
07:37 - sequence of characters so the very first
07:39 - thing that I must do in a genetic
07:42 - algorithm in the traditional computer
07:44 - science genetic algorithm I don't know I
07:46 - just said computer science
07:51 - I have to put like a quarter in my
07:53 - computer science jar
07:56 - I love computer science this is just not
08:00 - a computer science YouTube channel it's
08:03 - something else I don't know what it is
08:04 - okay um
08:05 - step one is create a create a population
08:12 - I'm going to write just popped for short
08:14 - can you read this create a population of
08:16 - n elements and let's remember also down
08:23 - here what are those three principles I
08:25 - must have heredity I must have a
08:31 - variation and I must have selection I'm
08:35 - disappointed with myself I wish I had
08:37 - written variation first in this order
08:39 - because ultimately this is where we get
08:41 - in this step we get our first principle
08:43 - variation now the way I wrote this
08:45 - create a population of n elements I
08:48 - don't necessarily have variation there
08:50 - yet I really should say create a you
08:53 - know random and I think this might be
08:55 - cut off at the top but I just wrote the
08:56 - word random there create a random
08:58 - population of n elements and really I
09:01 - didn't write that very well I should say
09:02 - create a population of n elements with
09:05 - random genetic material now what is this
09:07 - genetic material this idea of like sort
09:10 - virtual DNA digital DNA we're gonna have
09:12 - to look at how that's encoded in code
09:13 - and stuff later but you can think about
09:15 - it again what what let's think about it
09:17 - in the context of trying to evolve this
09:21 - phrase unicorn the population might be a
09:24 - whole lot of seven character words with
09:27 - random characters like Yuna Jorm and
09:37 - cake has the right number of characters
09:40 - ah this is really much harder than I
09:43 - thought it would be I think I might have
09:45 - to anyway so you get the point right
09:46 - this could be our population Yuna Jorma
09:48 - pancake and ah bug dude so this is a
09:53 - population has variation now does this
09:54 - have enough variation with this idea
09:57 - that we're going to somehow mix and
09:58 - match these four over generations could
10:00 - I actually get I have you
10:02 - I have a/c here but I've nothing with an
10:04 - O in this spot nothing with it are oh
10:06 - maybe I do have an R nothing with an N
10:08 - in that last spot so the variation
10:10 - there's going to be there's more to
10:11 - variation than just that initial
10:12 - population which I'll get to but that's
10:14 - sort of a key principle okay so that's
10:16 - step number one great and actually you
10:19 - can think of this in this sort of p5.js
10:21 - and processing world of we have a sort
10:23 - of initialization and then a forever
10:25 - loop this step one is actually the setup
10:28 - function this is what will happen in the
10:31 - setup function okay step two which I'm
10:36 - going to draw a line here because this
10:37 - is what's going to happen in the draw
10:39 - function meaning step two is going to
10:41 - happen over and over and over again jet
10:44 - for generation generation generation
10:45 - evolving evolving evolving step two a is
10:50 - calculate fitness for you know n
10:57 - elements so we want to calculate the
11:00 - fitness of every single member of the
11:03 - population this by the way is playing
11:06 - role now this idea of selection Fitness
11:09 - is going to be a means a mathematical
11:11 - function to determine which members of
11:14 - the population are more likely to be
11:16 - selected to pin a pass their genetic
11:18 - material down to the next generation so
11:21 - that's this idea of calculating and
11:22 - fitness so there's going to be some sort
11:24 - of loop that will go through all the
11:25 - elements of population call a function
11:27 - that will calculate the fitness and give
11:29 - you some number back so let's think
11:30 - about what could be so so one of the key
11:32 - factors in a genetic algorithm is the
11:35 - Fitness function so what could be think
11:38 - about it what could be a fitness
11:39 - function here for this particular
11:42 - problem well I have these three my
11:45 - population has three elements instead of
11:47 - n it's three right and I could calculate
11:49 - the fitness for these I could say the
11:51 - fitness function for each element of the
11:54 - population is the number of characters
11:56 - that match the target phrase one two
12:01 - three four five so this has a fitness of
12:04 - five
12:06 - one this is a fitness of one oh boy this
12:11 - one's a terrible this is a fitness of
12:14 - ceará okay might it's a different
12:16 - example in a second I got one for you a
12:18 - pop corn and this one has a fitness of
12:23 - four there's actually gonna work out
12:25 - beautifully for me
12:26 - so Yoona Jorm pancake ah and popcorn
12:29 - hopefully I did that right so you can
12:32 - see that these all have a fitness score
12:33 - now ultimately there are many things
12:36 - that one needs to do to refine fitness
12:39 - and make a genetic album perform more
12:41 - efficiently in faster or less fast or
12:44 - whatever but this is kind of a
12:45 - simplistic version of fitness function
12:47 - okay great now what we now need to do is
12:52 - this so that's step a the next step I'm
12:56 - really just going to call kind of
12:58 - reproduction or selection I think
13:02 - actually the sort of whole thing is that
13:04 - so this step B has now two parts to it -
13:10 - a B a lowercase a B one I don't know
13:17 - whatever I have a terrible numbering
13:18 - system here but the first thing that we
13:20 - need to do this also needs to happen n
13:22 - times so what needs to happen n times
13:25 - and that says reproduction section that
13:27 - should say excuse my hand your selection
13:32 - the ultimate goal of this genetic
13:35 - algorithm is to end up with another
13:37 - population of n elements right this idea
13:39 - is we start with this random population
13:41 - we calculate their fitness this next
13:43 - step of reproduction at the end we
13:45 - should have a new population of n
13:47 - elements and then go back to calculating
13:48 - their fitness again and doing this over
13:50 - and over and over again their fitness
13:51 - scores over time should be getting
13:53 - higher and higher and higher as a whole
13:55 - as a population whole so this
13:57 - reproduction selection step is a
14:00 - multi-step process the first thing that
14:02 - I need to do is pick two and for lack of
14:06 - a better word I'm going to call them
14:07 - parents and I'm - is somewhat arbitrary
14:11 - so there's a lot of parts of this
14:14 - genetic algorithm that you can kind of
14:15 - play around with certainly you
14:18 - say that the way that reproduction works
14:21 - in your genetic algorithm is a single
14:24 - element just makes an entire copy of
14:26 - itself another way of saying that is
14:28 - that two elements come together and mix
14:31 - that genetic information and make a new
14:33 - member of the population you could say
14:35 - that three elements come together this
14:36 - is all just sort of made up as an
14:39 - algorithm and you might have some kind
14:40 - of creative takes on this but the sort
14:42 - of classic genetic algorithm kind of
14:44 - follows this idea of two parents so how
14:47 - are those two parents picked well this
14:51 - is an interesting thing and by the way
14:52 - we're really talking about selection
14:54 - here we're now in the third principle
14:56 - here the way that those two parents are
14:59 - picked there's a bunch of different ways
15:01 - by the way first of all you could just
15:02 - say you know what I'm just only going to
15:04 - ever pick the top two scoring parents so
15:07 - I'm going to pick unit Jorm and popcorn
15:09 - and I'm going to make all the children
15:11 - from you know joram and popcorn and
15:13 - we're going to have a lot of popcorns I
15:15 - love pop joram it's my favorite snack
15:17 - pop door and pop joram gonna mix those
15:19 - two up and make a lot of you know Jordan
15:21 - popcorn children but really pancake even
15:26 - though it only got a score of one we
15:28 - wanted a different way of doing this a
15:30 - kind of better those sort of more
15:31 - traditional way of doing this with a
15:33 - genetic algorithm is not just to pick
15:34 - the top two to actually pick from the
15:37 - entire population but assign the
15:40 - probability of an element being picked
15:42 - to its fitness score so the reason why
15:45 - these numbers worked out so nicely is I
15:47 - could write them a different way I could
15:49 - say fifty percent forty percent ten
15:53 - percent zero percent so you could think
15:56 - of this as possibilities what I'm going
15:58 - to do is I'm going to pick out of a hat
15:59 - and add out of that hat I have a fifty
16:02 - percent chance of picking unit germ it's
16:03 - going to be picked five times as much as
16:06 - pancake popcorn is going to be picked
16:08 - four times as much as pancake so I could
16:10 - use those Fitness scores to assign them
16:12 - to probability another way of thinking
16:14 - about this I've kind of run out of space
16:15 - on this white board but I'm going to use
16:17 - this spot right down here is I could
16:19 - think of a kind of wheel of fortune'
16:21 - spinning wheel so unige or gets 50
16:25 - percent of the pie popcorn gets 40
16:29 - percent of the pie this is pop
16:31 - born this is uniform and this is pancake
16:36 - so the strangest breakfast ever and you
16:39 - could think of this sort of spinning
16:41 - wheel here so I'm going to spin the
16:43 - wheel and I move most of the time it's
16:45 - going to land on you to joram some mores
16:47 - often also land on popcorn but every
16:49 - once awhile to land on pancake and
16:51 - that's how I'm going to pick those two
16:52 - parents so the higher the fitness the
16:54 - more likely that element is to be
16:56 - selected so that's step one once I have
17:00 - those two parents I'm going to make a
17:04 - new and I'm using the word element just
17:08 - to be like sort of word for a member of
17:09 - the population to creature element thing
17:12 - but I'm going to make a new element and
17:14 - making the new element is a two-step
17:17 - process one step is called crossover and
17:22 - another step is called mutation and this
17:27 - is by the way where we get our last key
17:31 - principle from Darwinian evolution so we
17:33 - had variation because we create an
17:35 - initial population of random elements we
17:39 - have a selection in that we calculate
17:42 - the fitness of each element and we use
17:43 - the fitness as a probability it's sort
17:47 - of selection probability it's
17:48 - probability being selected as a parent
17:49 - and now to make that new element we have
17:53 - to have some mechanism by which the
17:55 - genetic information of one element gets
17:57 - passed on to the next generation so I'm
17:59 - going to come back up here this is my
18:02 - weird paper towel white board eraser
18:05 - slightly wet with water because that
18:07 - seems to work well and I'm going to
18:09 - describe to you the technique of
18:11 - crossover so let's say we have unige or
18:14 - and we have popcorn right I don't know
18:21 - why I drew this line here right these
18:22 - are two members of the population the
18:25 - mechanism of crossover says take half of
18:29 - the genetic information and the genetic
18:31 - information is really just this sequence
18:32 - of characters take half of the genetic
18:34 - information from one like uni and then
18:38 - take half from the other there seven so
18:40 - I'm splitting up three and four take
18:42 - half of the other like corn combine
18:44 - those two
18:45 - and look we get unicorn now of course
18:47 - that's not going to happen magically
18:48 - instantly with the first two things you
18:50 - pick on this is artificially designed to
18:52 - give me the right answer but this is the
18:54 - idea here that to make the new manager
18:57 - the population you take to that got a
18:58 - high fitness you combine those taking
19:00 - two with a high fitness to make a new
19:02 - one you have a good chance of getting a
19:03 - child with an even higher fitness score
19:05 - for that next generation so this is the
19:07 - idea now there's a lot of different ways
19:09 - that you can do crossover you can
19:11 - actually just pick a random mid point so
19:13 - sometimes you just take one from the
19:14 - other and six from one or five from one
19:17 - and three from the other you could do
19:18 - something where you're like alternate
19:20 - take you than oh then I then see right
19:23 - or you could flip it you can have a 50%
19:24 - probability for each one you could you
19:27 - know you could turn this into binary
19:28 - information and mix up the zeros of the
19:30 - ones and then convert those back into
19:32 - characters there's all sorts of ways
19:33 - that you could do crossover but you'll
19:35 - see what I'm doing it in my example
19:37 - which is kind of a you know conventional
19:39 - way of doing it is picking out midpoint
19:41 - taking half from one and half from the
19:43 - other and as you'll see these characters
19:45 - are stored in a right that's what I'm
19:46 - going to get to it soon as soon as we
19:47 - look at the code
19:48 - so that's crossover now we could say
19:51 - that I'm done this is it this is a
19:52 - genetic algorithm make the random
19:54 - population calculate all the fitness
19:57 - create a new generation with crossover
20:00 - calculate the fitness again create a new
20:02 - generation crossover calculate the
20:03 - fitness again create a new generation to
20:05 - crossover over and over and over again
20:07 - we that could be it however there's a
20:09 - problem in the key in the case of not
20:12 - having enough variation in the initial
20:14 - population which is quite a reasonable
20:16 - thing to have it is often useful to
20:19 - artificially introduce additional
20:22 - variation into this process so two
20:25 - members the two elements of the
20:26 - population are combined with crossover
20:28 - but before that child is finished a
20:30 - mutation is applied and mutation is
20:33 - typically referred to yeah as a sort of
20:35 - percentage rate so I might say there's a
20:37 - 1% mutation rate that means for each one
20:40 - of these characters that was that was
20:44 - selected that was combined with
20:45 - crossover there's a 1% chance that I'm
20:48 - actually going to mutate these
20:49 - characters what is mutating mean it
20:51 - could be that I just pick a new
20:52 - character it means that I could go up or
20:54 - down in the alphabet in this case none
20:56 - of that would really matter my mutation
20:58 - is just going to say
20:58 - 1% chance that a random character is
21:01 - selected instead of the character that
21:03 - comes from crossover and this keeps
21:05 - variation in the system this mutation
21:08 - rate as I'll show you in a little bit
21:09 - when I run the example again really
21:11 - really affects how that how the
21:15 - algorithm behaves is there a lot of
21:17 - randomness less randomness that sort of
21:18 - thing so this really completes the
21:20 - genetic algorithm this is the fold we
21:22 - have heredity as part of crossover
21:24 - that's the mechanism of heredity we have
21:26 - variation in the way that we create the
21:28 - initial population and the way that we
21:30 - use mutation ask that last step of
21:32 - making the next generation and selection
21:34 - as this way of calculate using a
21:37 - mathematical function to assign a
21:38 - fitness score to each element of the
21:40 - population as well as as well as that
21:47 - using that Fitness score as a
21:48 - probability for a probability for what
21:52 - how that how that element of population
21:54 - whether or not will be picked as a
21:55 - parent for to pass this genetic material
21:57 - down to the next generation so I'm in
22:00 - the next video I'm going to say a few
22:01 - more things but and then I'm gonna save
22:03 - looking at the code for the next video
22:04 - so I've been moving a fan here in this
22:06 - over here
22:07 - um so I'm gonna come back over here oh
22:10 - my computer went to sleep come back
22:12 - there it is so I want to run this
22:14 - example actually let's check on the car
22:15 - again and let's think about this for a
22:17 - second what are some of the steps of the
22:21 - population here so you can see one thing
22:24 - that's a little bit different is it's
22:26 - kind of doing them all one at a time so
22:28 - we're seeing one member of the
22:29 - population but you can sort of think of
22:31 - certain pieces here like what is the
22:33 - fitness function in this particular
22:35 - simulation I would assume the fitness
22:39 - function which you can see here is
22:40 - represented as score none of these have
22:43 - really gotten a score yet come on let's
22:45 - get so you can see it got a scores
22:46 - probably how far did it travel in a
22:49 - certain period of time so that I would
22:51 - soom and you can see as the score for
22:52 - these so that's one thing then so you
22:55 - could see like as you look at any
22:57 - example of a genetic algorithm as it
22:58 - applies to evolution you can find the
22:59 - pieces of the algorithm so let me let me
23:01 - just look here and see how did we do
23:04 - here this is a representation of the
23:07 - algorithm you can freeze-frame this if
23:08 - you want it's also on the nature of code
23:10 - website but you can see this is
23:11 - basically everything
23:12 - describe to you step one is initialized
23:14 - create a random population of n elements
23:16 - each of the random DNA step two a
23:19 - selection evaluate the fitness of each
23:21 - element of the population then step
23:22 - three is reproduction pick two parents
23:25 - apply crossover apply mutation add the
23:28 - child to the new population and then
23:30 - step four is replace the old population
23:32 - with the new population and return to
23:34 - step two
23:35 - so setup this everything happens
23:36 - initialized draw happens over and over
23:38 - again and this is what I'm gonna look at
23:39 - in the code in the next example
23:42 - great so actually I'm gonna I'm going to
23:44 - end this video now I'm and in the next
23:47 - video what I'm going to do is look at
23:49 - how the code works play with some of the
23:51 - parameters and see how the genetic
23:52 - algorithm behaves okay thanks for
23:54 - watching