00:00 - hello you are about to watch a coding
00:01 - challenge that is in three parts and
00:03 - this is an intro to the intro so to
00:05 - speak it's my version of the game snakes
00:07 - and ladders this is what it is so you
00:09 - can now decide if you want to keep
00:10 - watching it you know there's a lot of
00:12 - room for improvement here but the reason
00:13 - why I'm recording this extra little bit
00:15 - is that while I'm doing the challenge
00:16 - I'm doing it on the fly I don't realize
00:18 - that I'm gonna end up ultimately having
00:19 - it be in three separate videos so I just
00:22 - want to let you know if it ends abruptly
00:23 - check the video's description and look
00:25 - for the link to the next part
00:26 - alright thanks and enjoy hello it's me
00:30 - I'm going to do a coding challenge I'm
00:31 - actually quite excited about this coding
00:33 - challenge I'm going to attempt to make
00:35 - snakes and ladders a very well known
00:36 - ancient Indian video game I in this
00:40 - country of the United States where I
00:41 - live I'm I know it it's chutes and
00:43 - ladders but I'm going to make snakes and
00:45 - ladders stay true to the original
00:46 - version of the game so I'm gonna do this
00:49 - with out a lot of like animation design
00:53 - I just want to get the mechanics of the
00:54 - game going and I want to kind of think
00:56 - about some interesting properties of the
00:58 - game I saw a presentation by Naomi
01:00 - Clarke here at the game center about
01:02 - snakes and ladders and got me thinking
01:05 - just about all sorts of stuff so maybe
01:08 - that stuff will come up as I try to make
01:09 - it now well I'm gonna I'm gonna read
01:12 - this Wikipedia page to understand the
01:15 - game but I'm gonna try to diagram it
01:16 - first in my own way to see if we can
01:19 - think about how kind of data structures
01:20 - variables classes what kind of things we
01:23 - need to program it so the game is a
01:25 - simple game and let's actually start
01:27 - with it I'm gonna start and make a
01:29 - really simple version of the game it's
01:31 - called and because there are no snakes
01:33 - oh there's a ladder so it's just and
01:35 - this is the game called and and let's
01:38 - make it four by four obviously the grid
01:43 - size the board there's so many ways that
01:45 - you could sort of consider the board but
01:46 - I'm gonna consider the board of the game
01:48 - to be a four by four grid and each spot
01:51 - is going to be a certain number and the
01:53 - numbers are gonna look like this I am
01:57 - count whoops how about four by three so
02:03 - apparently for me to start very good
02:07 - lesson learn number one is that if I'm
02:10 - starting over here
02:11 - on this side of the board by wrapping
02:14 - around like this I can't have an even
02:15 - number of rows so the idea of the game
02:18 - is if I am a player I roll a die or
02:23 - maybe spin a wheel maybe and maybe so
02:26 - maybe I get maybe I can move one two or
02:29 - three steps maybe there's just three
02:31 - possibilities so if I get a three I will
02:33 - go one two three and then if I get a two
02:37 - I will go one and I will be here if I
02:40 - get a one I will move to here if I get
02:42 - another three element to here another
02:43 - three I move here forget a one once I
02:45 - reach here I win I have a question do
02:49 - you have to roll the exact number to
02:51 - reach to win or do you can you over roll
02:53 - the end well we can kind of make the
02:55 - game work either way so this is the
02:56 - basic mechanic of the game no strategy
02:58 - pure luck two players one goes first one
03:01 - goes second alternating turns represents
03:03 - the end first wins now there are snakes
03:05 - and their ladders but this basic idea
03:07 - let's first implement this and I'm going
03:10 - to talk about what makes it interesting
03:11 - once we kind of go past that now there's
03:16 - a variety of different ways we could do
03:18 - this I think what I want is I want a
03:20 - player and a player just has a what's
03:26 - the what's the terminology for the spot
03:28 - that they're on I guess I'll just say a
03:30 - player has a spot that's the spot they
03:33 - sell the tile that they are currently on
03:35 - and then we have this idea of a tile
03:38 - which is each one of these and the tiles
03:41 - maybe just have which tile they're
03:44 - connected to next as well as perhaps an
03:48 - x and y location and a size like a width
03:51 - and a height for rendering them on the
03:54 - canvas or ever drawing graphic surfer
03:56 - we're gonna do yeah that's enough
03:57 - description talking about the game I
03:59 - probably lost eighty percent of the
04:01 - viewers but now let's go over and start
04:03 - coding some of this stuff okay
04:06 - oh yeah pure hmm
04:13 - okay I have no code I am using p5 GS
04:17 - library that's gonna help me with a lot
04:18 - of drawing stuff I've got a set function
04:20 - a draw function and I'm setting the
04:22 - background so let's first let's think
04:24 - about this I'm gonna actually make a
04:25 - couple other JavaScript files I'm gonna
04:28 - make one called tile Jas I am gonna make
04:33 - one called
04:33 - a player s and I'm going to use
04:36 - object-oriented programming
04:37 - es6 classes so I'm going to say a player
04:41 - when I make a player the player has a
04:46 - spot and the spot they're in is zero all
04:49 - right so that's the idea of a player now
04:52 - I'm going to make the idea of a tile and
04:55 - what did I say a tile is going to have
04:59 - some x value where it is some Y value
05:03 - where it is and maybe the tile that it's
05:07 - the next one that you would walk to next
05:09 - so now and maybe it has a width and a
05:12 - height
05:12 - let's have everything be square so I'll
05:14 - just call it WH for square now what I'm
05:18 - going to do is here looks like this 300
05:24 - by 400 let's have the width be 300 and
05:27 - the height before would be 300 the
05:29 - height be 400 this will kind of oh well
05:32 - the with these would be 400 and the
05:34 - height should be 300 that allowed me to
05:35 - have makes 100 by 100 tiles Oh baby I'm
05:38 - gonna program is so you could just plug
05:39 - in any numbers and I'll make a big
05:40 - complicated board but for right now
05:42 - let's start with it this way 400 comma
05:47 - 300 I'm quicker than this and now what I
05:50 - want to do is make some tiles so I'm
05:53 - gonna create a variable like I know that
05:55 - they're all gonna be a hundred by a
05:56 - hundred let's let's actually just make a
05:57 - variable called like resolution and I'm
06:01 - gonna call I'm gonna say that's 100 so
06:03 - we have the number of columns is the
06:05 - width divided by that resolution and the
06:09 - number of rows is the height divided by
06:12 - that resolution and I am also I need an
06:18 - array of tiles and eventually I'm gonna
06:22 - need a player so I got an array of tiles
06:24 - and I've got a player I
06:25 - the a grid that I'm thinking of columns
06:27 - and rows but my tiles it's just gonna be
06:29 - an array so what I'm going to do is I'm
06:31 - gonna say for let I equals 0 I is less
06:34 - than columns times rows that's how many
06:37 - tiles columns times rows I plus plus I'm
06:41 - gonna try to get myself some more room
06:42 - to see the code and then what I'm gonna
06:46 - do I'm gonna make a new tile let tile be
06:49 - a new tile and I'm gonna give that tile
06:51 - I hear right now but just give it like
06:54 - our arbitrary location like 100 I have
06:56 - to think about the location in a second
06:58 - and then I'm going to say the next tile
07:00 - is I plus 1 so it gets a location and
07:04 - the next tile is the next one I plus 1
07:06 - so I make this tile and maybe I give it
07:10 - its size is also that resolution
07:12 - variable let's make that resolution so
07:16 - the idea is now I go into my tile
07:17 - constructor I need an X a Y a size and
07:21 - the next tile so those are the arguments
07:23 - of the constructor every time I make a
07:25 - tile XY size and the next tile okay what
07:36 - what how am i doing is this gonna work I
07:39 - think it's gonna work now I really got
07:40 - to think though how do i hmm I have an
07:44 - idea why don't I what would make what
07:46 - would actually be a little bit better
07:47 - here is for me to think about how do I
07:51 - get that XY location so I know the first
07:55 - tile is down here right so how does that
08:00 - work the first tile the X is zero and
08:03 - the Y is the number of rows minus one
08:09 - times that resolution right so that's
08:13 - where that starts and then each X just
08:15 - goes over a hundred more so let's try
08:18 - that so let's say the first tiles X is
08:23 - zero and the first tiles Y is the number
08:29 - of rows minus one times resolution and
08:34 - I'm going to then make the tile at that
08:37 - X&Y and by the way
08:39 - I'll object I better do something with
08:42 - it so I'm going to once I make it put it
08:45 - in my array so I can access it later now
08:48 - once I make that first tile all I need
08:50 - to do is say hey x equals x plus
08:54 - resolution so the next tile is in the
08:59 - next spot right here
09:01 - now what happens when I get to here once
09:08 - I get past the width I need to move up
09:11 - and then start going that way
09:13 - hmm so I'm gonna need a direction that's
09:15 - keeping track of where I'm which way I'm
09:17 - going I'm just saying let Gir equal one
09:19 - so it's plus resolution times the
09:23 - direction and then when when when I'm by
09:30 - the way I'm sure there's lots of much
09:31 - more efficient ways of doing this it's
09:33 - like my caveat that I have to give
09:34 - constantly while I program terribly if X
09:37 - is greater than width or equal to if it
09:41 - gets to the end
09:42 - I don't want then what I need to do is
09:46 - say X minus equals resolution go back
09:49 - and say y minus equals resolution so I
09:56 - want to move up and only back and
09:59 - direction x equals negative one so now
10:05 - it'll what that's gonna do is gonna I'm
10:07 - gonna get to the end so I move back move
10:09 - up that's my next tile and then the next
10:11 - time I'm gonna start moving X this way
10:14 - so that if X is less than or equal to
10:21 - zero same thing I'm going to go pull
10:24 - plus the red no I'm gonna stay I need to
10:27 - stay there because I'm doing this thing
10:29 - where I'm going to be drawing the tiles
10:31 - from their left side that's why I'm
10:32 - gonna got to the end I just kind of
10:33 - slide back when I get to here though I'm
10:35 - fine right there x equals resolution Y
10:37 - goes up and direction switches so you
10:39 - know there's there's a nice way I could
10:42 - probably combine these if statements to
10:44 - one let's leave it like that for now I
10:46 - have no idea if this algorithm is right
10:48 - and what I'm going to do though to find
10:50 - out is just go and look at all the tile
10:53 - and draw them so I'm gonna say tiles
10:56 - index i/o and I've been using my of loop
10:59 - let's use the of loop why not right so
11:02 - I'm gonna say for let tile of tiles and
11:06 - then tile dot you know render display
11:10 - and uh let's let's call it render show
11:12 - as a show like show put it on the show
11:16 - its tiles tiles tiles you know anything
11:19 - I can do to somewhat tie myself to
11:20 - musical theater I attempt to very poorly
11:23 - okay
11:25 - there was an edit point there because
11:27 - we're some nice comments from the chat
11:28 - pointing out that the actual original
11:29 - version of the game does in fact start
11:33 - here and end at the top a perfect square
11:37 - which so that's the actual version of
11:40 - the game I also got a good comment which
11:42 - what I could do is you said two loops
11:43 - for the columns and rows and then check
11:46 - if the Y is an odd or even row two like
11:48 - move this way or that way but I'm gonna
11:50 - leave my goofy system in there but I
11:52 - will actually have an end up there so
11:55 - it's I would you want to say that the
11:57 - peppa pig version of chutes and ladders
11:59 - that I play quite often actually I think
12:01 - ends over here I'm gonna check that
12:02 - tonight when I get home or I'll put
12:04 - something in the copy in the comment
12:06 - about the Peppa big chutes and ladders
12:07 - everybody wondering I'm sure okay so so
12:10 - here we go let's let's do this let's
12:13 - make it a square then let's call show
12:16 - and so now what I need to do is I need
12:18 - to write that function show and I'm
12:20 - gonna I'm gonna give each tile like a
12:23 - random color just so just so I can see
12:29 - them and I'm gonna say draw a rectangle
12:31 - at the x value of the y value at that
12:34 - width and height and then I'm going to
12:38 - draw this color okay so we should see
12:47 - point by way what I just did here is
12:49 - kind of terrible I wrote so much code
12:51 - before I actually attempted to run any
12:54 - of it my advice that I would give
12:55 - anybody when I try to do is and I'm
12:57 - sorry for my green paper bleeding out
13:00 - there there is
13:02 - I should I should have been testing
13:04 - stuff more frequently but here we go
13:07 - okay tile is not defined well why is
13:09 - tile not to find number one is I didn't
13:13 - bother to include in my HTML file the
13:17 - tile javascript file and or the player
13:20 - javascript file and I don't think the
13:21 - order really matters here but I want to
13:23 - put the player first in the tile second
13:25 - in the sketch last okay hey that looks
13:27 - pretty good let's write the numbers in
13:29 - of the next tile in the tile so let's
13:33 - say text just for justice just for
13:36 - debugging text this dot next actually I
13:43 - kind of want to know its own index just
13:45 - out of curiosity right why not have the
13:47 - tile I don't know that I need this but I
13:51 - will kind of want to see I want to see
13:55 - this dot index and this dot next kind of
14:02 - in the tile and let's say text size 64
14:07 - no text size like yeah 48 32 and what am
14:13 - I looking for I need to give it an x and
14:14 - y location so I'll give it its X and
14:17 - it's Y location so I just want to see
14:18 - that this is working correctly
14:20 - and one undefined that's not good
14:24 - oh because what I forgot that I made I
14:28 - did this idea of having the tile know
14:30 - about its index but I didn't bother to
14:32 - pass in I why is only this one showing
14:38 - me the text so hopefully I can use my
14:42 - matrix what did I do wrong here that I'm
14:47 - only seeing the so let's look at the
14:51 - tiles this is there's 16 of them
14:54 - these look like reasonable locations for
14:56 - them these look like reasonable index
14:58 - indices and next values what is wrong
15:01 - here look at this there's some negative
15:04 - Y stuff that can't be right so Y starts
15:07 - at 0 100 200 300 that's right 100 200
15:13 - 300 then
15:14 - goes to 200 the X is 300 200 100 uh-oh
15:17 - one there's no zero there so how come
15:20 - the zero oh I need to mmm-hmm okay so my
15:24 - algorithm is wrong I had this like idea
15:27 - in my head that I was not going to get
15:29 - that my algorithm is just totally wrong
15:32 - because I want to basically what this
15:37 - should say is negative resolution right
15:39 - I'm in a place where I don't want to be
15:41 - if I gone all the way one off and then I
15:44 - do need to add back the resolution so
15:46 - actually this can be one let's make this
15:49 - one if statement if I'm at the either
15:52 - end then I should add the resolution
15:57 - times the direction times negative one
16:02 - then I mean I could change the direction
16:04 - first let's change the direction first
16:06 - then I could add the resolution times
16:09 - the direction and then go up a row and
16:11 - then I don't need this now let's try
16:13 - this okay I have them all there they
16:16 - look like they're in the right spot
16:18 - am I not draw oh you know why I'm not
16:20 - seeing them because I'm actually drawing
16:22 - the text at the top which is it's going
16:25 - to appear but then the other one draws
16:27 - over it so for example what I want to do
16:30 - is say actually to draw the text at this
16:32 - dot why how come I can't get to this
16:35 - part of my code right Oh cuz I moved it
16:38 - no oh yes what have I done this dot y
16:42 - plus resolution boy am I making this
16:45 - silly and complicated ah resolution is
16:48 - not defined why why is it not too fine I
16:50 - believe it to be defined it is this wh
16:53 - resolution was the variable that I used
16:55 - in my setup function the height the
16:58 - dimensions is called wh in the object
17:01 - okay there we go
17:02 - 0 goes to 1 1 goes to 2 2 goes to 3 3
17:05 - goes to 4 4 goes by the way the reason
17:07 - why I'm doing this is because if it's a
17:09 - snake 4 is not going to go to 5 4 would
17:13 - go down to 2 so that's why I've set up
17:14 - this structure but at least I have all
17:16 - of them there and I have now the next
17:19 - things alright alright so we don't need
17:22 - this debugging stuff anymore
17:24 - and in fact what might be useful is I
17:27 - to make it maybe I should just make it
17:29 - just so we can view it like a
17:30 - checkerboard pattern let's that might
17:35 - make it easy to see so what I could do
17:37 - is say here in the constructor if I
17:44 - modulus if index if it's an even one
17:52 - then make the color white otherwise this
18:00 - color equals black so now if I do that
18:02 - we see the nice little checkerboard
18:04 - pattern I'm not drawing the text anymore
18:07 - and there we go let's be a little less
18:11 - extreme about it and say 200 and 100
18:15 - there we go
18:17 - so this is now the board now I need a
18:20 - player
18:21 - I need a player I have a player object
18:26 - so I'm going to go to the sketch and I'm
18:29 - gonna say after I've set up the board
18:32 - player equals a new player then what can
18:35 - the player do the player can be seen the
18:40 - player can roll so the player can roll
18:45 - so what is the roll mean by roll I mean
18:48 - like roll a die die or spin a wheel roll
18:50 - so I want to pick a random number and
18:52 - I'm gonna use the p5 random function to
18:55 - give me a random number between 1 and
18:57 - it's 0 an option in snakes and ladders
19:00 - what are the what are the actual roll
19:01 - possibilities one I'm just gonna say for
19:04 - right now between 1 and 4 and I'm going
19:07 - to make that floor and I'm going to say
19:10 - this dot spot plus plus equals R then
19:15 - show is and I I guess what I want to do
19:19 - is I need to maybe if I give it the show
19:21 - function the array of tiles what I need
19:24 - to do is say current equals tile index
19:28 - this dot spot so I can look up where it
19:34 - is which tile and then maybe in that
19:36 - tile I can say draw an ellipse
19:40 - let's make
19:41 - ellipse the player could have a color
19:43 - I'll just say white for right now let's
19:45 - draw an ellipse at maybe what I'll do is
19:49 - I'll write a little function that like
19:50 - equal tile get center and it can give me
19:54 - like a little you can just give me a
19:56 - little array with the X and the y back
19:58 - of the center of the tile just so I can
20:00 - and so you know why not let's write
20:04 - Center here and I can say the center x
20:07 - equals this dot X plus this wh divided
20:09 - by 2 and the center why is this dot y
20:13 - and then return a little array with both
20:17 - those values in it could make a vector
20:20 - object or something I'm gonna call this
20:22 - get get Center and then oh this might be
20:26 - a good opportunity to use like the es6
20:28 - getters and setters who I'm not gonna
20:30 - bother I'll come back to that some time
20:32 - so then in the player I get the center
20:36 - and then I could say Center 0 for X and
20:39 - Center 1 for Y and I'm gonna make a
20:44 - little nice little 32 by 32 diameter
20:47 - little circle
20:48 - okay so tile is not defined in player
20:52 - dodge yes line 12
20:54 - why is it not defined in player Dutch
20:56 - yes line 12 well because when in the
20:59 - sketch I call show I didn't pass it in
21:01 - the tiles and let's do this tile is not
21:06 - to find still in player yes oh this is
21:10 - tiles thank you very much
21:13 - wow how many times can I have tile not
21:15 - defined Oh current this is current gets
21:18 - enter and now there we go oh look did
21:22 - you see that will you see a little game
21:24 - get played so now I need an any
21:26 - condition let's just say roll is rolling
21:30 - and moving so I should have a roll yeah
21:33 - it's probably will roll and then a move
21:34 - but uh maybe I'll separate those out
21:36 - later
21:37 - I need a condition for ending the game
21:39 - so maybe what I'll do is I will do that
21:43 - just out in the main program and I will
21:45 - say if player dot spot is greater than
21:55 - is greater than tiles lengths then are
22:00 - greater than or equal then not lengths
22:02 - minus one that's the last rater than or
22:04 - equal to right then the player is there
22:09 - at the end and I could make a more
22:12 - complex logic that you have to land on
22:13 - the last spot just go let you overshoot
22:15 - it equals that and console.log game over
22:20 - and I can say no loop alright just gonna
22:27 - do that for right now yes I'm gonna
22:28 - change it to a 10 by 10 grid in a second
22:30 - all right so this is great so now the
22:32 - game is playing I could slow down the
22:34 - frame rate I could show what the role is
22:36 - so many things I could do to make this
22:38 - nicer let's at least make this 10 by 10
22:41 - there we go so now we're watching the
22:43 - game being played a simulation of the
22:45 - game being played now here's the
22:46 - interesting thing what's interesting
22:49 - about snakes and ladders and the reason
22:51 - why it's is it kind of like relevant to
22:53 - a discussion of Montecarlo systems in
23:00 - this book is because and thank you again
23:05 - to namely Clark at the game Center for
23:07 - talking about this last weekend is that
23:09 - in this scenario we can actually write a
23:12 - mathematical formula to compute the mean
23:15 - average amount of rolls it would take to
23:18 - win the game let's at so we could do
23:20 - that right we could figure out like well
23:23 - if you can only roll a 1 2 or 3 and
23:25 - there's 16 spots so your average roll is
23:28 - a 2 so maybe that'll take on uh maybe
23:31 - about eight eight rolls on average I
23:34 - think that's probably the appropriate
23:35 - mat I probably got it wrong you could
23:38 - fix me in the comments but the whole
23:40 - point of snakes and ladders is I could
23:42 - add a snake here I could add a ladder
23:45 - here this is going to increase the drama
23:47 - the fun of the game make it seem more
23:49 - complex but then there's not I mean try
23:53 - to come up with a formula that if you
23:55 - have a big complicated board lots of
23:56 - snakes and ladders that's going to
23:57 - compute the average amount of rolls it
24:00 - takes to win the game not so easy
24:02 - however what I could do is just run the
24:04 - thing randomly hundreds of thousands of
24:06 - times or
24:07 - at times or hundreds of times however
24:08 - many times I need and compute the
24:09 - average that way so that's what's known
24:11 - as kind of a Monte Carlo simulation and
24:13 - before by trying just running something
24:15 - through randomly making a lot of random
24:17 - selections before there were computers
24:18 - there were books of random numbers like
24:20 - this one all right so let's go what am I
24:23 - gonna do now let's have it run many many
24:24 - times and let's have it continuously
24:28 - display the average amount of rolls so
24:32 - so I don't know I've kind of gone a
24:35 - little I'm kind of gone off in a little
24:37 - tangent here if you're watching this
24:38 - make us into a creative fun game that
24:40 - you could actually play I'm gonna go
24:42 - this simulation route ok so now so now
24:47 - let's keep track of rolls average rolls
24:56 - alright and games plate so rolls are the
25:04 - number of rolls during one version of
25:06 - the game game played increases and
25:07 - average rolls is the number of rolls a
25:12 - minute I could keep a running average I
25:17 - could keep trying to keep track of a
25:19 - history let's let's say rolls is it hey
25:22 - we'll make it array and then I don't
25:24 - need games played it's just the length
25:26 - all right
25:27 - so so but I do need the current rolls
25:32 - all right you just have the current yeah
25:35 - current I'll just have a variable called
25:37 - index into that so every time every
25:43 - frame is every time I roll then rolls
25:48 - index plus plus all right then so I'm
25:54 - increasing the number of rolls then when
25:55 - the game's over the index goes to the
25:58 - next spot in the array I don't say no
26:02 - loop rather what I do is I start the
26:06 - game over so what do I do to start the
26:08 - game over all right so here's the thing
26:11 - what's happening here I'm done
26:16 - stick at the end the game is over go to
26:18 - the next one well do I want to see that
26:20 - finished would be nice to see so what I
26:23 - probably should do is what I'm gonna do
26:30 - is actually just say game over this is
26:36 - terrible MIT say game over equals false
26:37 - game over
26:39 - equals true and then I'm gonna deal with
26:42 - the game over logic separately down here
26:45 - if game over
26:47 - I think all I need to do is player reset
26:50 - the player right reset the player and
26:53 - have the index go up all right reset the
26:57 - player have the index go up and the
26:59 - player then needs a function called
27:01 - reset where this dot spot goes back to
27:05 - zero there we go
27:07 - all right I think I might have gotten
27:08 - all this stuff in there let's just try
27:09 - running it see what happens
27:11 - yeah the game's playing over and over
27:13 - again let's see rolls numbered a number
27:17 - Todd enough further that's not a good
27:18 - sign ah did I not did I forget to
27:22 - initialize the roles at zero so what I
27:25 - need to do is when the game starts I
27:29 - need to say roles at index and I want to
27:34 - put the game by the way back to a four
27:35 - by four just sort of play faster roles
27:38 - index equals zero and then when I
27:40 - increase the index I should say roles
27:46 - index and there's probably more elegant
27:48 - way terrible disarray but the next role
27:51 - starts at zero okay so now let's look at
27:54 - the roles there we go 9 9 8 9 8 8 8 3
27:58 - does that make sense that's taking about
28:00 - that many roles that's kind of like wow
28:03 - did it in three roles whoops
28:06 - how could it's do it in zero something's
28:08 - wrong with the lehto because the last
28:10 - one is the current one I'm actually
28:11 - looking at it before it's finished so
28:14 - now when I do the average that makes
28:16 - sense so now what I want to do is
28:18 - calculate the average and you do that in
28:20 - sketch so sum equals zero I should use
28:25 - one of those nice array I could use the
28:26 - reduce array function and I need to go
28:30 - all the way up to roles dot length minus
28:32 - one because the current role
28:34 - does not count in part as part of the
28:36 - average and then I need to say some plus
28:39 - equal roles index I and then the average
28:43 - is the sum divided by the roles dot
28:46 - length but minus one because there's one
28:47 - fewer and then what I can do is I can
28:51 - just say console let me let me actually
28:54 - make a Dom element on the page I will
28:58 - just say in the sketch I will say
29:04 - average P average P equals create P and
29:11 - now I'm gonna say average P which is the
29:18 - average paragraph HTML average okay okay
29:21 - everybody settle down so this is the
29:23 - average amount of times it is now taking
29:27 - which I didn't I say eight so I think
29:30 - I'm about right but average amount of
29:33 - times it's taken to complete the game
29:34 - and it's probably a little bit less
29:35 - because I'm starting on the first spot
29:37 - that's why it's a little bit less I
29:38 - didn't actually should start at negative
29:40 - one let's start at let's start at the
29:46 - player should start at negative one and
29:50 - it would make sense from you by the way
29:51 - in the constructor to just call this dot
29:53 - reset right here I think that'll work so
29:58 - we can see now we have that math that I
30:02 - did in my brain appears to be correct
30:04 - because we're kind of through the Monte
30:05 - Carlo method getting that number of
30:08 - eight okay so that's the end of part one
30:11 - where I made just the board with no
30:13 - snakes and ladders if you check this
30:15 - video's description there should be a
30:16 - link to the next part where I start
30:18 - trying to add those snakes and ladders
30:21 - and it doesn't go as well as I might
30:23 - have hoped but you could just watch it
30:25 - if you want
30:29 - [Music]