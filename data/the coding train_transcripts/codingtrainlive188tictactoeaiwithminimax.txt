00:10 - [Music]
00:20 - [Music]
00:33 - [Music]
00:39 - [Music]
00:53 - [Music]
01:04 - [Music]
01:14 - [Music]
01:21 - [Music]
01:33 - [Music]
01:51 - [Music]
02:08 - [Music]
02:29 - [Music]
02:34 - [Music]
02:46 - [Music]
03:02 - [Music]
03:12 - [Music]
03:18 - [Music]
03:34 - [Music]
04:03 - [Music]
04:39 - [Music]
05:12 - [Music]
05:27 - hello good afternoon on a Wednesday it
05:31 - is the cutting train here oh and why why
05:37 - might you be asking do I have to train
05:40 - whistles today I mean first of all why
05:42 - should any grown person on the internet
05:44 - have train whistles I'm not really so
05:47 - sure but apparently this is what I'm
05:49 - doing with my life and so there it is I
05:52 - am a person on the internet with not
05:54 - just one train whistle but a second
05:57 - train whistle albeit a slightly sadder
06:00 - train whistle let's give this one a try
06:03 - well actually that's not so bad
06:07 - so you might be asking why do you have
06:10 - multiple train whistles well thanks for
06:13 - asking I am going to embark on a new
06:16 - adventure in working on learning how to
06:19 - use a laser cutter in particular I want
06:21 - to learn how to do laser etching and I
06:24 - have this YouTube membership thing and
06:26 - I'm about to relaunch all of the
06:29 - membership rewards and one of which will
06:32 - be your very own
06:34 - laser-etched coding train trade whistle
06:38 - which you can only get exclusive oh the
06:44 - other thing that's quite exciting here
06:45 - is I have some new tricks I'm gonna
06:47 - let's see if this works I have a new
06:49 - camera here you can see my stream deck
06:51 - and iPad but mostly I have this here
06:53 - because now I can show you this
06:56 - train whistle so this is what I've been
06:57 - using for all these years purchased off
07:00 - Amazon and now I have about a hundred
07:04 - and fifty of these in a box in my office
07:06 - and I will be laser etching my own
07:09 - coding train train onto here and mailing
07:12 - them out with the help of psy who is the
07:15 - coding trade community manager in 2020
07:18 - so if you I never had a reason to join
07:21 - as a member today before you can join
07:26 - today I also thought you know I could do
07:27 - some more cubing coding cubing with my
07:32 - beginners method of solving a rubik's
07:34 - cube maybe I could talk you think I
07:35 - could talk and solve the cube at the
07:38 - same time can you even see what I'm
07:39 - doing here
07:41 - I suppose this probably isn't what I
07:44 - should be doing right now but hi I am a
07:46 - an amateur I have a have a love a love
07:51 - and affection for Rubik's cubes I'm I'm
07:54 - not sure why exactly I just can't help
07:56 - myself what am I doing here
07:58 - I'm trying to solve it I cannot
07:59 - apparently I cannot solve and talk at
08:03 - the same time it's much too difficult
08:05 - for me to do that and all of you who are
08:07 - actual kuipers out there probably in so
08:09 - much pain right now watching me do this
08:12 - with my methodology that is but do you
08:16 - know I've spent not too much time in my
08:18 - life studying how to solve a Rubik's
08:21 - Cube I wish I had more time because
08:23 - honestly I would like to spend all of my
08:25 - time doing that which might just be kind
08:27 - of an escapist fantasy a reason to like
08:30 - completely leave the world and universe
08:33 - that we're in right now which feels like
08:35 - I often want to do but I shouldn't I
08:36 - want to stay here I want to be with you
08:38 - the people the people of the code the
08:41 - passengers if you will of the coding
08:43 - train
08:45 - and hmm you know I want to enjoy this
08:48 - earth planet thing that we're on I can't
08:52 - even talk when I'm not solving a Rubik's
08:55 - Cube and apparently while I am solving a
08:58 - Rubik's Cube is a much harder it is very
09:03 - hard for me to put words together do you
09:05 - think I could code and solve the Rubik's
09:07 - Cube at the same time I feel like I just
09:09 - have to finish this now but I can't stop
09:11 - talking so good play music
09:20 - [Music]
09:22 - Oh cubing in the Cabana coming soon
09:39 - no baby
09:47 - [Music]
09:53 - [Music]
10:13 - what now unless you think that's
10:17 - exciting I will show you now what I've
10:19 - been working on I will show you what
10:22 - I've been working on which is my new 9
10:24 - by 9 cube which I am attempting to turn
10:27 - into a 3 by 3 you can see that so far
10:29 - I've solved the white centre the yellow
10:32 - centre the green centre and this morning
10:35 - when I was having my tea in the morning
10:37 - I was working on the red centre I have
10:40 - solved this before I took me about a
10:42 - week you know a little pockets at times
10:44 - here and there so you know maybe maybe a
10:46 - little later today we'll work on this a
10:48 - little bit more all right now I just
10:53 - wanted to show you my new overhead
10:55 - camera in case we have more things like
10:57 - this train whistle and stuff for me to
10:59 - show you I have that I also have up here
11:01 - in the top left oh wait how come that
11:04 - didn't go away there we go I have up
11:06 - here in the top left of the screen a
11:08 - stream labs alert box so I don't know if
11:14 - this is a useful interesting thing to do
11:16 - but I'm learning about the world I'm
11:18 - like the old man livestreamer learning
11:21 - about all the young people's fancy
11:24 - tricks and so supposedly if somebody
11:27 - subscribes to my youtube channel called
11:33 - the coding train right now their name
11:35 - will appear right here if they join as a
11:38 - member their name will appear right here
11:39 - and I believe a super chat but I don't
11:44 - know how I feel about the super chats
11:46 - that's a little those make me
11:47 - uncomfortable you know I'm very grateful
11:49 - and thankful for everyone's support some
11:51 - people are asking me about the mouse pad
11:53 - how do I get this back up here overhead
11:56 - there we go
11:57 - so this mouse pad is a drawing of a
12:02 - house made by my daughter who is now 8
12:04 - years old I don't I think she might have
12:06 - been younger when she made this it
12:07 - doesn't say on the back but there one of
12:10 - those things when your kids make an art
12:11 - project at school and then there's a
12:13 - fundraiser for the school you could buy
12:15 - their art on like a mousepad and so I
12:17 - did
12:20 - okay overhead off overhead off so Kevin
12:27 - writes I subscribed five minutes ago and
12:29 - it did not show mmm well five minutes
12:31 - ago it should show instantaneously so if
12:33 - you subscribe five minutes ago was I
12:35 - live-streaming was it up there I don't
12:37 - know all right all right everybody relax
12:41 - let me test my banner here I'm gonna
12:44 - make a little test of it I've got a
12:45 - little test going I'm gonna test
12:47 - subscription oh you're right it's not
12:51 - working let's fix this this is this is
12:54 - the important thing that I must work on
12:56 - today oh I turned off subscribers I
13:00 - turned off subscribers because that
13:03 - seemed like a lot of noise let me turn
13:05 - that back on
13:06 - copy oh whoa somebody just subscribed it
13:10 - appeared I don't know what I just did
13:11 - but it worked now I don't know what I
13:18 - did but it happened
13:20 - somebody subscribed and it appeared that
13:22 - was very exciting so maybe I don't need
13:27 - to fix it hold on let me look at this
13:28 - here just everybody just just just
13:31 - afraid sponsors superjet hold on hold on
13:36 - there oh yeah so I think it's working
13:38 - all right thank you Akshay R for
13:42 - subscribing to my channel what's this
13:45 - from I think it's maybe like is it a
13:47 - Futurama quote I'm not sure I like your
13:50 - ideas and I would like to subscribe to
13:51 - your newsletter maybe that's just from
13:52 - The Simpsons
13:53 - I don't know I'm I'm getting a very loud
13:56 - I'm hearing like a ding dong when
13:58 - somebody subscribes do you hear that or
14:00 - is it just coming out probably is coming
14:02 - out of the monitor of this computer down
14:04 - here yes so I think I agree I think I'm
14:11 - probably going to turn off the
14:15 - subscriber oh but new member let's see
14:18 - if that happens
14:19 - yetsko fall new member maybe you
14:24 - depending on your membership level you
14:25 - might get a train whistle it didn't show
14:27 - up alright I'm gonna fix this everybody
14:29 - hold on
14:39 - [Music]
14:57 - alright alright if I've done everything
15:04 - correctly
15:04 - um now it shouldn't show up anymore as
15:07 - people subscribe but only if they join
15:09 - as a member
15:10 - we'll see we'll see if that works oh
15:14 - technology okay let's see hmm okay so I
15:22 - should really get to the business at
15:24 - hand which is that I am here today to do
15:28 - one thing and one thing only I am going
15:32 - to attempt to implement the minimax
15:35 - algorithm to create a a I don't know if
15:39 - that's really sometimes you say the word
15:40 - AI and it sounds like oh this like fancy
15:42 - artificial intelligence robot thing
15:45 - we're really it's just an algorithm to
15:46 - pick the optimal move but AI you know
15:50 - it's critically great so I put it in the
15:52 - title an AI bought to play against me in
15:56 - tic-tac-toe and as you saw for my
15:58 - Rubik's Cube solving prowess I'm
16:01 - probably very good at tic-tac-toe new
16:06 - members are joining or are they are they
16:08 - popping up did that did the alert pop-up
16:10 - I don't actually see it no oh so no and
16:13 - so far no overlay I I guess I'm just
16:16 - destined to never have this overlay
16:18 - thing work hold on ah thanks for showing
16:24 - my email oh wait a second wait a second
16:29 - I am not logged in as the coding train
16:32 - [Music]
16:36 - okay hold on everybody
16:38 - I'll fix this it's showing you an
16:44 - overlay for some other YouTube channel
16:46 - associated no no associated with my
16:48 - Google account I will fix this now I now
16:52 - know what the issue is
16:54 - I am the coding train that is me I am
16:58 - logging in I'm going to my dashboard I'm
17:01 - going to my alert box I do not want to
17:03 - join stream Labs University thank you
17:05 - very much
17:05 - alert box dink dink dink dink dink copy
17:13 - I'm going now to open broadcast studio
17:16 - into the Alerts property pasting in a
17:22 - new URL I'm hitting okay I'm going to
17:25 - refresh automatically I'm going to press
17:28 - this button there we go
17:31 - coding screen is become a member coding
17:34 - train is donated super chat and you
17:37 - don't see a subscriber because I have
17:39 - that turned off okay you so now now it
17:44 - should really work I hope
17:47 - thank you Humpty Dumpty for joining
17:49 - where is my Bell I will ring the bell
17:52 - for your join don't fall off the wall
17:54 - it's in front of my face this is the
17:57 - thing but I have a very special talent
17:58 - which is to not see things that are
18:01 - right in front of my face Thank You
18:03 - Humpty Dumpty and thank you to a new
18:07 - member
18:07 - EMS Koval a welcome you have the nice
18:10 - lovely little VIP this dot icon okay so
18:17 - what else do I want to talk about so
18:20 - before I do the minimax algorithm and
18:23 - talk about what minimax is let me
18:26 - revisit the most recent video tutorial
18:29 - published on the channel which was the
18:32 - ml 5 jazz train your own neural network
18:34 - now if you watched the live stream where
18:39 - I made this tutorial but did not watch
18:41 - the actual tutorial video you might this
18:43 - is one of the rare cases where you
18:45 - actually want to watch this video
18:46 - because after the livestream irie
18:48 - recorded it the the edited versions of
18:50 - things that are alive stream always have
18:52 - not always but often have a little extra
18:54 - bits or some you know light editing to
18:56 - speed through and skip things but
18:58 - sometimes I will actually come back and
19:00 - rerecord an entire thing or an entire
19:03 - section if I got it really wrong and
19:09 - David Snyder's that's like big I did it
19:12 - show up did it show up did it show up I
19:18 - want to know cuz I didn't hear the ding
19:22 - I think I want to heard the ding oh it
19:28 - did it did it just was late it did it
19:34 - showed up late so you haven't seen it
19:36 - yet you mean you've seen it now if
19:37 - you're hearing me talk but you have to
19:39 - remember that I'm on a thirty third
19:40 - there's like a big delay here okay so
19:44 - check this out if you're interested I
19:47 - also so in addition to doing these live
19:50 - streams like you're watching right now I
19:51 - will often livestream to members my
19:54 - different recording sessions if I'm
19:56 - doing extra material or some extra
19:57 - tutorials not part of a live stream and
19:59 - just yesterday in fact I had a members
20:01 - livestream where I recorded three more
20:05 - videos all follow ups of this one so
20:08 - this in this particular example I did
20:11 - the data collection training and
20:13 - inference and then the videos that will
20:15 - be coming out are the videos that will
20:19 - be coming out are looking at how to save
20:21 - the data that you've collected how to
20:23 - save the model that you've trained and
20:24 - then also how to implement regression so
20:27 - how to change this into a regression
20:29 - okay so um take a look at those let's
20:31 - take a few minutes to look at some of
20:33 - these community contributions I should
20:35 - also mention speaking of things I have
20:38 - this keyboard that I'm using today
20:40 - because my butterfly I think it's called
20:42 - the butterfly keyboard on this Mac is
20:44 - just you know it's dead it like it just
20:48 - the it's like completely unusable
20:50 - so I'm also I'm attempting to use an
20:53 - external mouse an external keyboard
20:55 - today and hopefully that will improve
20:58 - things in terms of my coding and all of
21:01 - that
21:01 - all right overhead off so let's take a
21:04 - look at some of these so firstly I
21:06 - haven't actually looked at these so this
21:07 - is a surprise to me turn my screen
21:10 - brightness up a little bit so I can see
21:11 - it let's look at the self learning
21:12 - neural network by Vlad okay oh whoa wait
21:18 - a second so this is interesting because
21:21 - this looks like it is based off of my
21:24 - cars neuro evolution example which I
21:27 - built during a different livestream and
21:31 - only for Windows so I guess it's just
21:33 - the executable and we could run it is
21:36 - this using gamma 5 Vlad if you happen to
21:38 - be in the chat I have a bunch of
21:40 - questions about this for you that I'm
21:41 - curious about but I will move on right
21:44 - now to the next one
21:46 - neural network visualization after
21:48 - training wait awhile by Charlotte ok I'm
21:51 - excited about this so let's take a look
21:57 - at that ABCD so this looks like it's
22:04 - just like my example so I'm gonna do
22:06 - some training here can you hear that
22:09 - are we hearing anything maybe there's no
22:11 - sound in this one it's using color
22:13 - instead of sound so let me do a bunch of
22:17 - bees a bunch of C's I would love a
22:21 - community contribution that thinks about
22:23 - a more elegant interface for doing this
22:26 - data collection but let me do this and
22:30 - I'm going to now hit T for training and
22:35 - we'll wait for the model of the tree
22:42 - so Simon is letting me know that I
22:44 - missed showing contributions for
22:47 - interactive drawing and teachable
22:48 - machine and I would be glad to look at
22:53 - those maybe I'll look at those at the
22:54 - end if I have time because I want to
22:55 - make sure I get the minimax did this
22:57 - train
22:57 - okay so Charlotte's instructions say Oh
23:03 - Charlotte did what I was so we see like
23:09 - a heat map or decision map of all the
23:12 - different colors based on the training
23:14 - data and it's kind of amazing how it
23:16 - actually ends up producing this like
23:17 - Voronoi like tessellation I would I
23:19 - should really try this again with a less
23:22 - obviously clustered data set if you'll
23:24 - oblige you'll humor me I would like to
23:26 - do this one more time so I'm gonna put
23:29 - the I'm gonna make the data much noisier
23:32 - in terms of where it is like I'm still
23:37 - going to kind of cluster it but I'm
23:39 - gonna spread out some will make it a
23:42 - little bit more chaotic you know
23:45 - traditionally you would do something
23:46 - like what we're looking at here with an
23:48 - algorithm like k-means or clustering
23:50 - kind of algorithm it's interesting that
23:52 - we're using a neural network here to
23:53 - ultimately kind of perform the same kind
23:56 - of idea now I expect the loss won't be
24:04 - as low because there's gonna be a lot
24:06 - more errors it's gonna be a lot trickier
24:08 - for it to figure out how to train this
24:10 - model but let's give it a try
24:17 - the loss is definitely going down that's
24:20 - a good sign
24:23 - [Music]
24:32 - [Music]
24:45 - interesting oh wait how do i do my zoom
24:47 - thing I still have to use this are we
24:49 - seeing it's interesting it really is
24:51 - very consistent still so I'd be curious
24:54 - I you know I wish I had hours to unpack
24:57 - it do a deep dive into every single one
24:59 - of these examples I'm curious why this
25:01 - took so long it's a very slow process if
25:04 - every single pixel was passed into the
25:07 - neural network and classified one at a
25:09 - time ml5 will allow you to pass in a
25:13 - batch of data and get the
25:14 - classifications for all of them so
25:16 - Charlotte if you're watching I don't
25:18 - know that you are take a look at that
25:20 - that might improve this speed but this
25:22 - this is a tricky one or maybe using
25:25 - promises and some kind of like
25:27 - asynchronous something-or-other could
25:30 - help too
25:32 - alright let me close this what else we
25:36 - got here we have now regression based on
25:38 - note frequency and color predictor okay
25:48 - so let's see what I'm not sure to be oh
25:54 - I like this I can paint with it that's
25:57 - really nice I can paint so this is a
26:00 - nice improvement on the interface I
26:05 - don't know how many options there are
26:07 - let's try this and hit T drain this
26:10 - model mmm there's a little weird and I
26:14 - don't see a graph at all oh yeah so
26:21 - Simon makes a good point
26:22 - I said k-means in the sense that k-means
26:26 - will find the clusters without the
26:27 - labels so I think I was conflating some
26:32 - concepts there and just sort of like
26:33 - thinking about the visual relationship
26:35 - between that example and k-means example
26:37 - but it actually is quite a different
26:39 - thing so thank you for correcting me
26:40 - there
26:41 - all right what's just happened I don't
26:44 - know so something has gone wrong here at
26:48 - this example so I I don't think I'm able
26:52 - to effectively debug this right now but
26:55 - thank you for the submission
26:57 - darshan have you happen to be in the
26:59 - chat let me know oh so much discussion
27:03 - about minimax and Q learning and what
27:05 - should I use what the Spade la so much
27:07 - good stuff to come okay so thank you for
27:10 - these submissions stay tuned hopefully
27:12 - sometime next week
27:13 - the follow-up videos for this will be
27:16 - released and but now I'm going to move
27:20 - on to the main tasks of today and before
27:25 - I get started with that what I would
27:28 - like to do and hello to Zul from
27:30 - Indonesia thanks for watching and CJ is
27:33 - here hello CJ CJ from well from the host
27:39 - escape decoding train garden but that's
27:42 - not it it's the coded garden wonderful
27:48 - YouTube channel I would like to download
27:53 - this code and get myself set up with it
27:55 - I think I'm gonna work excuse me outside
27:56 - of the p5 web editor because this is
28:00 - gonna be a pretty complex problem for me
28:03 - to solve so let me download this p5 code
28:10 - [Music]
28:12 - so for any reason you want to follow
28:14 - along you should you can doubt you'd
28:17 - start with this starter code that I'm
28:18 - about to use go in here let me call this
28:23 - whoops mmm we call this mouse it's like
28:30 - my hand is all the way over here look at
28:32 - this is crazy my hand is all the way
28:35 - over here operating the computer look I
28:42 - can type one character at a time and
28:44 - they up here one character at a time
28:46 - go away overhead desktop and then let's
28:52 - open this with Visual Studio code okay
28:59 - let's go over here and let me run my
29:09 - terminal and I'm going to go to desktop
29:17 - tic-tac-toe I'm gonna run a server and
29:23 - load that up in the browser there we go
29:26 - that's the example from before let's go
29:34 - here and now okay all right so here's
29:44 - the thing what I would like to do is I
29:48 - want to make some adjustments to this
29:50 - tic-tac-toe example that I won't include
29:53 - in the final edit of the coding
29:54 - challenge but I will do with you here
29:56 - right now in a way I want to simplify
29:58 - some things about it just to make I
30:03 - think the but I really want to focus on
30:06 - is the the core minimax algorithm and I
30:08 - don't want to add a lot of complexity
30:10 - related to the game mechanics themselves
30:12 - so I'm going to assume that there's only
30:16 - ever two players and I'm gonna say
30:18 - there's going to be an AI player which
30:20 - will be the NX and a human player which
30:23 - will be an
30:25 - and then I am going to what I'm gonna do
30:28 - is let's get rid of this like available
30:31 - stuff for a second and this like picking
30:37 - a random current player that could be
30:39 - useful let's keep the current player and
30:42 - we'll say that current player is starts
30:44 - with as the human for example I'm gonna
30:48 - get rid of this idea of an available
30:51 - array just to simplify this check winner
30:54 - thing can be the same next turn so this
30:58 - was picking a random turn so let me do
31:05 - this I'm gonna leave let me make the eye
31:07 - okay so what I'm gonna do is I'm gonna
31:09 - add a mouse pressed function and if the
31:17 - human player Oh No
31:21 - if the current player is a human let's
31:29 - get let's get the index into the board
31:43 - let's get with the mouse X divided by
31:48 - width Mouse Y divided by height I'm
31:52 - gonna floor these so that their index
31:55 - what I'm trying to do right now is just
31:57 - create a quick interaction where as I
32:01 - click the mouse if where I click the
32:06 - mouse is an empty spot on the board then
32:12 - I'm going to fill it in with my human
32:14 - marking my human marketing which is an O
32:17 - and otherwise if the human player is a
32:27 - is it a if the current player is the AI
32:32 - actually you know what I'm just gonna
32:34 - I'm just going to make my turn
32:37 - and then immediately oh this is silly so
32:40 - every time I click the mouse I'm trying
32:48 - to think through this what I'm actually
32:49 - doing
32:50 - I'll leave the extras are some extra
32:51 - stuff traps in here so if it's a valid
32:53 - spot then the next thing I want is for
32:56 - the AI to make its turn so human
33:02 - make turn then if it's a valid turn then
33:09 - the AI should make its turn and right
33:11 - now just have it be random so I
33:13 - shouldn't have gotten rid of that
33:15 - available thing but I think I can just
33:17 - rewrite that by saying I can just look
33:25 - through all of the spots this is silly
33:33 - because I already used inj whoa-kay
33:40 - ABCD efg hijk ll does anybody ever use L
33:46 - huh X goes first what that is Thank You
33:51 - Simon I will correct that because I will
33:53 - have the AI go first
33:54 - eventually and I'm here to break the
33:58 - rules I'm gonna use an L by golly that's
34:01 - my index and oh this is so now I'm
34:08 - writing a whole extra algorithm that I
34:10 - don't want to write available push I is
34:20 - K j is L and want a little object no no
34:27 - no no let's just do this okay L make a
34:32 - little object and then I want to this is
34:37 - so silly what I'm doing I should just do
34:40 - it in order it's fine then I'm gonna say
34:42 - move equals random available and then
34:49 - bored Oh what only if it's available if
34:52 - bored K L is blank this is so silly that
35:00 - I'm doing that I did not intend to write
35:02 - a whole new algorithm here as like a
35:04 - random AI but it's what I'm doing and
35:07 - then move is random and then bored move
35:11 - dot K eat move L equals equals the AI
35:22 - and then the current player is the human
35:27 - I think this current player thing is
35:30 - completely unnecessary but that's fine
35:33 - and once the humans made a valid move
35:38 - the current player is the AI and let's
35:43 - see if this does what I want to do okay
35:46 - what players is not defined sketch KS
35:53 - 109
35:56 - if spa equals what I say human was Oh
36:02 - even though I'm doing it wrong according
36:04 - to Simon and AI is X available is not
36:08 - defined sketch 49 because I got rid of
36:11 - that concept and then added it back in
36:13 - again oh I needed it for something else
36:27 - let's just do this let open spots is
36:34 - [Music]
36:36 - weight is zero and then if the board I
36:44 - can use IJ here if the board I didn't
36:51 - really think I was going to change very
36:52 - much about this example IJ if the board
36:58 - is empty increase the number of open
37:03 - spots I will explain what I'm doing a
37:06 - second more in more detail then as long
37:10 - as there are no open spots I can break
37:15 - out in the loop there too so if there is
37:17 - no winner and there no open spots
37:18 - it's a tie otherwise there's a winner
37:21 - boy this algorithm is ridiculous I
37:22 - should also refactor that but I'm not
37:24 - going to let's see next turn 139 I'm not
37:30 - doing a turn in the draw loop I
37:33 - shouldn't use the draw loop at all but
37:34 - I'm gonna be lazy 139 I'm missing and
37:39 - curly bracket W is not defined I made up
37:47 - this variable called W which somewhere I
37:52 - must use thought I created it because I
37:56 - use it everywhere like in draw here it
38:01 - is it's not a global variable so let me
38:04 - make this a global variable but I'm
38:11 - going to have to create it in setup
38:15 - because the width and height don't exist
38:22 - and also it's a square so I don't need
38:25 - separate within Heights but what are you
38:26 - gonna do oh oh
38:32 - I win haha
38:39 - I win again by the way the optimum move
38:42 - I think is to go in the corner X wins
38:46 - what no I won there's a bug fix that
38:52 - another time haha I went again okay so
39:00 - this is this is what I wanted except
39:02 - there is an issue of okay so I have a
39:07 - let me do this let me do this
39:16 - ai ai move we make that a separate
39:22 - function everything's gonna be fine
39:25 - and then I'm gonna call this AI move
39:30 - which was actually called like next turn
39:32 - before so I don't know why I'm changing
39:33 - it and then this ha ha I could have my
39:37 - trusty I and J back thank goodness then
39:45 - oh I mean I'm gonna do something even
39:47 - better
39:53 - by the way in case you're wondering the
39:55 - whole point of this is I'm going to
39:57 - change this to minimax so I want to
39:59 - start the tutorial or the coding
40:01 - challenge from an AI that just picks a
40:03 - random move and then have it pick the
40:05 - optimal move that's what I'm doing here
40:07 - today so if that interests you stick
40:10 - around if I can get this to work I'm
40:14 - gonna be quite shocked right this was it
40:16 - right here I already have this it was
40:18 - called next turn so I could just call
40:22 - this next turn that's what I had before
40:24 - and you know I'm gonna do I'm gonna put
40:26 - this in a separate javascript file I'm
40:28 - gonna call this minimax j/s and I'm
40:32 - gonna have it there I'm gonna add this
40:37 - minimax
40:38 - I don't like having these CSS files for
40:42 - no reason it's just extra noise and so
40:49 - now this should be next turn and then so
40:55 - that X really goes first we'll have in
40:58 - setup X go first now we will now have an
41:04 - official competition Oh goober genius
41:11 - [Music]
41:14 - I just think all the good I just watched
41:18 - into the spider-verse sorry this is like
41:20 - totally non sequitur which I absolutely
41:23 - loved one of my favorite I did not
41:25 - expect to love it as much as I loved it
41:27 - but isn't the thing called like a goob a
41:30 - goober no goog there are 512 people
41:35 - watching of me about to attempt to play
41:39 - tic-tac-toe against the computer all
41:43 - right I'm gonna get you X oh good move X
42:04 - goes after me and wins then X is told it
42:06 - wins oh let's try it again
42:17 - here here in your ex ex AI man-ho new
42:30 - member mwah thank you welcome thank you
42:33 - for joining boy this it's uh this
42:35 - overlay thing really really brings on
42:38 - the new members or maybe it's just
42:40 - you're excited about this train with all
42:44 - I'll be mailing to you okay do you
42:49 - already have a method to check of
42:50 - someone one yes I do I will not be doing
42:53 - no so I do love I do wonder if ticked if
42:57 - I do this particular coding challenge
42:59 - with minimax if that will lay the
43:00 - groundwork for future videos as I look
43:03 - at more learning styles and q-learning
43:08 - being one of them for reinforcement
43:10 - learning okay
43:11 - could you check yes I certainly could
43:14 - check the wig condition after YouTube I
43:15 - don't feel like correcting that right
43:17 - now that's just gonna be a bug that I'm
43:18 - gonna leave in there
43:19 - and but I am now going to get started
43:25 - and I'm going to need heavy use of the
43:28 - whiteboard so let me just test something
43:31 - here cuz I also I think diagramming the
43:34 - minimax algorithm I'm going to want to
43:36 - use multiple colors so I have not coded
43:39 - this before but I did do some reading on
43:42 - it and thinking about it and I drew some
43:43 - diagrams on a white board in my office
43:46 - all right I'm I'm somewhat prepared for
43:48 - this which I'm sure it will all go
43:50 - horribly wrong anyway I'm just writing
43:52 - on the white board up where you can't
43:53 - see it to see if these markers work I
43:57 - have a blue I have a black this is
44:02 - probably gonna be somewhat of a long one
44:04 - and I have a green okay though these all
44:07 - work
44:07 - I want a red also
44:24 - the Reds okay let's try this red better
44:30 - alright alright I'm gonna turn the
44:37 - overlay off because I'm Deepak is
44:43 - suggesting there's a number file video
44:44 - about Tic Tac Toe I did not realize that
44:49 - I will have to take a look at that cue
44:54 - Sharad is asking won't you need to fix
44:56 - the winning edition because that might
44:58 - mess with the training I think it's
45:00 - gonna be ok the issue is that I'm
45:02 - allowing two moves to happen at once and
45:04 - when I'm not actually there's no
45:05 - training going on here I'm just doing a
45:07 - search basically for the optimal move
45:09 - and I assume I won't have that problem
45:11 - add a set timeout to next turn all of
45:13 - these things are very good ideas I like
45:16 - that a little delay okay I'll think
45:17 - about that but I'm not gonna do that
45:20 - right now so here's the thing I want to
45:22 - stick to the pieces of this that are
45:26 - relevant for minimax
45:28 - and in that sense I'm not gonna worry
45:32 - about the interface and how the game is
45:34 - actually played in that kind of thing
45:35 - all right so give me a minute here I'm
45:36 - about to start
45:47 - but before I begin I'm going to tell you
45:50 - about today's sponsor the random numbers
45:53 - no that's something I don't have a
45:55 - sponsor for today's live stream so nice
45:58 - opportunity for me to just like goof off
45:59 - and I'm gonna tell you about today's
46:02 - sponsor numbers
46:04 - today's coding train is brought to you
46:07 - by ninety one thousand two hundred forty
46:08 - to fifty three thousand four hundred
46:10 - seventy four and thirty four thousand
46:12 - nine hundred sixty three thank you
46:14 - random numbers
46:29 - so Armour writes in the chat I was
46:32 - hoping to apply this algorithm for more
46:35 - challenging games like chess and you can
46:39 - and maybe we can have a little
46:40 - discussion about that after I get
46:42 - through this very basic scenario but I'm
46:44 - gonna do hopefully what is a fairly
46:45 - simple about simple but basic scenario
47:05 - [Music]
47:10 - 1:45 I'm not really 45 into this oh my
47:14 - god
47:14 - 45 minutes into this alright
47:34 - okay
47:40 - what's going on here there we go Oh
47:46 - alpha beta pruning yeah you're asleep
47:48 - but oh boy so many things to discuss
47:50 - I'll come back at the end to talk about
47:51 - those things all right hello and welcome
47:58 - to a coding challenge
47:59 - tic-tac-toe again but no wait oh no no
48:03 - no I live streaming so I'm yeah I I've
48:06 - kind of this thing has happened where
48:08 - sometimes all of these recording
48:10 - sessions were are which are member only
48:12 - live streams where I really allow myself
48:14 - to start over like 15 times and part of
48:17 - my reason for doing that was so that I
48:19 - would stop doing that so much during
48:21 - what's a more public live stream
48:23 - unfortunately I'm not able to switch
48:27 - that muscle off and but I really want to
48:29 - attempt to not stop start and stop so
48:32 - many times but just go with it and much
48:36 - a coding trained editor extraordinaire
48:38 - will hopefully make this all wonderful
48:42 - and easy to watch in about 30 to 45
48:44 - minutes which i think is my target for
48:46 - this ending up as usual coding just
48:50 - wants me to see their comment I see you
48:54 - I see you hello and welcome to coding
49:00 - challenge tic-tac-toe the minimax
49:03 - algorithm so you might remember me from
49:05 - my codicology number 149 tic-tac-toe
49:08 - where I made very basic somewhat what's
49:15 - the word I'm looking for
49:22 - messy and spaghetti like where I made a
49:25 - very sort of like a big mess out of
49:27 - tic-tac-toe but I made a working version
49:29 - of the game which I have running here in
49:31 - the browser now I made some very slight
49:33 - adjustments to where I left off in that
49:36 - last video so if you haven't watched it
49:37 - you could go back and watch it but you
49:39 - know it's a basic version of tic-tac-toe
49:40 - I want to start over so badly rocket
49:45 - landing stimulation I totally want to do
49:47 - that d t6 no more starting over no more
49:51 - no more starting over
49:53 - just by
49:53 - last time please please please
49:56 - I will put my overhead camera on and I
49:59 - will look at you from close up if you
50:03 - let me do it well I guess got kind of
50:04 - dizzy all right cuz I just want to code
50:11 - this and I have to stop doing this
50:13 - last time last time hello and welcome to
50:25 - a Cody challenge tic-tac-toe
50:28 - Oh with the minimax algorithm that's why
50:30 - I'm here because I made this other
50:32 - coding challenge tic-tac-toe where I
50:34 - created a kind of a big it was kind of a
50:36 - mess if I'm being perfectly honest but I
50:38 - made a working version of the
50:39 - tic-tac-toe game that just played with
50:41 - two players picking random spots so
50:43 - since then and you could check one of my
50:45 - live streams if you want to find where I
50:47 - did this I made some adjustments to it
50:49 - so that I could as a human being play
50:51 - the game so right now I'm gonna play the
50:53 - random computer picker I'm gonna I'm
50:55 - gonna go here and then I'm gonna block X
50:57 - and I'm gonna go here I win Owens so
51:01 - what I have the adjustment that I made
51:03 - is that I added a mouse pressed function
51:06 - where I find where did I click and I put
51:09 - my human variable which is the letter O
51:14 - onto the board and then I called next
51:16 - turn where next turn picks a random spot
51:20 - in the board and makes that the AI spot
51:22 - or X's spot so the whole point of this
51:25 - video is for me to implement something
51:28 - called minimax
51:29 - which is an algorithm a search algorithm
51:32 - if you will to find the optimal next
51:35 - move for the a I mean it could find it
51:37 - for myself and then I could implement it
51:38 - but the idea is I want this player the
51:41 - computer player to beat me at the game
51:43 - or at least tie to play a perfect game
51:45 - and tic-tac-toe is admittedly an
51:47 - incredible simple this will be an edit
51:54 - tic-tac-toe tic-tac-toe is admittedly an
51:57 - incredibly simple scenario and we don't
52:00 - necessarily need minimax we probably
52:02 - just memorize a few key principles of
52:04 - how to play but I think
52:07 - a good demonstration of the minimax
52:08 - algorithm and if I can get it working
52:10 - which I'm really good then I can at the
52:12 - end of this video I can kind of discuss
52:14 - how you might take that into more
52:16 - complex scenarios even something like
52:17 - chess potentially is a game that you
52:20 - could use the minimax algorithm with
52:23 - okay YouTube reminder fail what's that I
52:27 - don't know what that means probably
52:30 - something that I did okay oh that's just
52:34 - TMC joining if the reminder probably
52:37 - alright so let me go here you know here
52:51 - Matthieu maybe we can we can replace
52:57 - these later with clips but I'm just
53:00 - going to let's look good no this is
53:08 - geeks for geeks is the one is this a
53:09 - reputable site that I should feel
53:13 - happily yeah stop I'm not interested
53:18 - okay let me go here one there we go okay
53:24 - no go away dad stop go away all you ads
53:27 - you're not paying me you need to show up
53:30 - on my livestream okay actually the note
53:32 - is technically not of today but as a
53:34 - sponsor go to lynda.com slash coding
53:37 - trade 20 for your $20 off coupon you
53:40 - know not a sponsor of today's livestream
53:42 - but a previous one all right
53:44 - I just want to reference these if you
53:53 - want to learn more about the minimax
53:55 - algorithm I would suggest to resources
53:57 - that you can look at that I actually
53:58 - looked at before beginning this coding
54:00 - challenge haven't programmed this before
54:01 - but I watched this video by Sebastian
54:03 - leg
54:04 - that explains the minimax algorithm also
54:06 - something called alpha beta pruning
54:07 - which I'm not going to implement but
54:09 - could be a good exercise next step for
54:11 - you and I also found this article on the
54:13 - geeks for geeks org website which has a
54:16 - three part series about the minimax
54:18 - algorithm and how to apply it to
54:20 - tic-tac-toe
54:32 - now those those resources if I'm being
54:42 - honest are probably better than what I'm
54:44 - about to attempt to do but I'm also
54:46 - going to take about you know a good
54:47 - portion of this video to try to explain
54:49 - the algorithm in my own words and
54:51 - diagram it out which hopefully will help
54:54 - me figure out what code I need to write
55:07 - so I think I want to try to do this
55:09 - twice once within just a very general
55:11 - scenario and I'm going to say that there
55:14 - I'm going to draw what is wrong with
55:17 - this marker I had such a good one before
55:23 - I thought I'm so good better
55:40 - the minimax algorithm is typically
55:43 - expressed or visualized as a tree so we
55:46 - can think of the root of the tree as the
55:50 - current state of the game oh you can't
55:53 - see that can you I usually put these
55:58 - little things this is a little magnet to
56:01 - tell me where the top of the board is
56:02 - but they were a little bit too high I
56:04 - don't know the camera position changed
56:05 - okay oh is it till thank you for telling
56:12 - me that it's tilted let me try to fix
56:15 - that I thought maybe it wouldn't be
56:17 - noticeable fortunately I do have a level
56:28 - I need to tighten this camera let's see
56:30 - how bad it is not as bad as you would
56:34 - think oh it's bad it's way off okay
56:39 - that's better
56:40 - loose is the problem I need to tighten
56:44 - it but I think I think that's better
56:49 - looks better yeah it'll just be tilted
56:57 - for that beginning explanation math you
57:01 - can always probably I mean that that's
57:03 - gonna be might be like a super annoying
57:05 - thing to do but could fix it a little
57:06 - bit all right
57:09 - the minimax algorithm is typically
57:12 - visualized as a tree and the root of the
57:15 - tree is you could think of as the
57:18 - current state of the game so in this
57:20 - case it's tic-tac-toe and so this is the
57:23 - state of tic-tac-toe now whose turn is
57:26 - it let's say in this case it is the
57:29 - computers turn wait okay wait I let's
57:32 - think about this for so good hold on
57:37 - better thank you
57:39 - Oh give me one more try here at this
57:43 - it's thrown off there for a second
57:52 - the minimax algorithm is typically
57:54 - visualized as a tree and the root of the
57:57 - tree you could think of as the current
57:58 - state of the game so let's say I'm just
58:01 - gonna draw a box here this is the
58:03 - current state of the game and maybe I'll
58:04 - in a moment I'll fill this in with a
58:06 - tic-tac-toe board but the idea here is
58:08 - that there is a player the player that's
58:09 - trying to pick the optimal score you can
58:11 - call that the maximizing player so the
58:15 - maximizing player is trying to maximize
58:18 - their score - the game is going to make
58:21 - the next turn so let's say that player
58:23 - just has two options in tic-tac-toe it's
58:25 - the start of the game there are nine
58:26 - options but let's say there are just two
58:28 - options that means we can have a tree
58:30 - going to the next state now this minimax
58:36 - algorithm is useful for a turn-based
58:38 - game that's this minimax algorithm is
58:44 - useful for a turn-based game so if this
58:47 - was the players X's turn now it's the
58:51 - players this in this stage it's the
58:53 - player OHS turn and the player oh if if
58:57 - X made this turn then oh now has two
59:00 - options and if X made this turn then o
59:03 - has two options so I said that X is the
59:06 - maximizing player and I erased that and
59:08 - I'm gonna put it back o is the
59:11 - minimizing player this whole system is
59:17 - designed to pick X's next turn but we
59:20 - have to play out the future and the
59:22 - future has Oh making turns as well then
59:25 - X finally it's X's turn so once again we
59:31 - have the maximizing player going and
59:33 - then o's turn and so on and so forth now
59:36 - this only works if the game well that
59:39 - not only works with a game like
59:44 - tic-tac-toe that you'll see is simple
59:46 - enough we can actually have this tree
59:48 - play out all the possible scenarios
59:50 - until one of the players wins or there's
59:53 - a tie in other scenarios you have to
59:56 - just use some kind of heuristic to make
59:58 - a guess as to like whether
60:01 - No what am I saying here oh I'm wading
60:03 - into territory I don't want to wade into
60:05 - yet this is very important so let me let
60:10 - me rephrase that so in the case of
60:15 - tic-tac-toe so in the case of
60:20 - tic-tac-toe it's a simple enough game
60:22 - where at any given point we could
60:25 - actually computationally play out every
60:27 - possible scenario until one player wins
60:30 - or there's a tie in other games like
60:32 - chess for example there's too many
60:34 - possible outcomes and we have to use
60:36 - some other methodology to figure out
60:37 - when do we stop this tree how far into
60:40 - the future do we look but fortunately
60:42 - for us right now that's not an issue we
60:44 - have to deal with so eventually at some
60:46 - point they're after one of these moves
60:48 - the game is going to be over and so we
60:51 - need to establish at any point when the
60:53 - game is over when we want to stop while
60:55 - going out through this tree what is the
60:58 - score
60:58 - so for us we could do this very easily
61:00 - we can say if X wins we're gonna give it
61:04 - a plus-one score if Y wins we're going
61:09 - to give it a negative 1 score and if
61:12 - there's a tie we're going to give it a 0
61:14 - score so let's say in this scenario here
61:19 - oh I probably should use like fine
61:21 - explaining this right just use more like
61:23 - generic scores this is fine I'm gonna
61:28 - I'm gonna stick with what I'm doing yeah
61:38 - that's a nice tip Simon to draw these as
61:40 - different that's usually what's done to
61:42 - draw these as different icons but I'm
61:44 - not gonna worry about that Reyes was use
61:45 - colors for okay so using these scores
61:57 - let's say so
61:59 - so using these scores let's say if X
62:02 - makes this move o makes this move and
62:04 - then X makes this move X wins so there's
62:07 - a plus 1 but if X makes this move X
62:10 - makes this move and oh sorry X makes
62:13 - this move o makes this move and X makes
62:15 - this move it's a tie so if that's the
62:18 - case
62:27 - so if that's the case I see what
62:44 - to make this a bit more legible let me
62:47 - actually make these blue so when it's
62:50 - OHS turn I'm gonna draw these squares as
62:53 - blue that will help us see and we don't
62:57 - have too many levels here but this will
62:59 - help us see so X this is X is turn it
63:02 - needs to decide should it go should it
63:05 - make this move or this move well it is a
63:07 - X is the maximizing player X is the
63:13 - maximizing player so it's going to want
63:15 - to make this move so that means we could
63:18 - take this score and put it here plus 1
63:23 - and I'm gonna give this I'm gonna circle
63:27 - this with green just so we kind of see
63:29 - it as it's a winning state for X now
63:36 - what if X makes this move o makes this
63:39 - move and then X makes this move well
63:41 - maybe in this case o wins we get a
63:44 - negative 1 but if if X makes this move
63:47 - it's a tie and and so we get a 0 so
63:54 - which one would X pick it's going to
63:57 - pick 0 right it wants X is the
63:59 - maximizing player if we're going this
64:01 - way it's going to want to pick the move
64:04 - that yields it be hot the better outcome
64:06 - in this case tying is better than losing
64:08 - so this now gets passed up here and it
64:11 - gets a 0 so it's interesting now is
64:16 - remember o is the minimizing player so
64:19 - which move is o going to want to pick Oh
64:22 - doesn't want X to win so we're assuming
64:24 - we're gonna we're assuming we're playing
64:26 - against a player that's making optimal
64:28 - choices so Oh
64:29 - minimizing would pick this move so this
64:36 - would now be have a score of 0 in it I
64:38 - realize it's kind of confusing the zeros
64:39 - and the O's so that's a 0 here okay now
64:47 - let's just fill in some other numbers
64:49 - just to do this more quickly
64:56 - okay so so in this case X to maximize
65:01 - wood sorry so X is the maximizing player
65:08 - will want to pick the move that gives it
65:10 - a plus 1 X as the maximizing player want
65:14 - to pick the move that gives it a 0 oh
65:15 - boy
65:16 - oh this was a bad example let me redo
65:19 - that what do I want I want I need
65:21 - something that's gonna be different here
65:23 - let's have it win so it's got to win
65:29 - both of these basically all right so let
65:34 - me feel we try filling this in with some
65:35 - other values 1 0 negative 1 1 so X is
65:41 - the maximizing player is going to want
65:43 - to if it's here pick this move so that
65:46 - it wins if it's here it's gonna want to
65:49 - pick this move so it wins oh is the
65:52 - minimizing player but doesn't have any
65:53 - better options the minimum is still just
65:55 - one out of these two picks this and now
65:58 - X can make its decision we're done right
66:02 - if every single possibility is explored
66:05 - then X knows that this going this way
66:09 - will produce a better outcome than going
66:12 - this way so this is the move that is
66:14 - selected and this is done over and over
66:21 - again top right of the diagram shows why
66:27 - instead of Oh for the yeah no well why
66:30 - put a y there that should be an oh not a
66:35 - why I don't know why I put up why there
66:38 - I think I should try this explanation
66:40 - again I think I should actually just do
66:42 - it with tic-tac-toe I was thinking was
66:45 - gonna do it twice
66:46 - [Music]
66:54 - how do people feel about that
66:56 - explanation I feel like maybe I want to
66:58 - try it again the thing is I was thinking
67:02 - about describing it more generically and
67:04 - then I was gonna actually do tic-tac-toe
67:05 - but I think it would actually work just
67:07 - to do it with a tic-tac-toe board and I
67:10 - would give the tic-tac-toe board like
67:12 - initial an initial state yeah
67:29 - I mean I definitely want to get to
67:33 - coding this
67:39 - these do it again yeah do it again there
67:50 - was a thing like inherently wrong with
67:51 - that explanation I just I don't know how
67:55 - helpful are useful it is I don't think
67:57 - I'm gonna do a pruning I'm gonna erase
67:59 - this though that's for sure you know
68:07 - what I think I'm gonna
68:21 - okay I think I'm gonna actually just do
68:24 - the X
68:24 - yeah it's confusing that they are both
68:25 - one and one I think I'm actually going
68:28 - to do the I'm going to explain it again
68:32 - but I'm gonna use an actual tic-tac-toe
68:34 - board because I think that'll be more
68:37 - clear I think actually having that there
68:39 - the theory of it is interesting but it's
68:45 - not that helpful right now write it
68:47 - lower okay yeah and then amy is
68:51 - suggesting tried explaining with chess
68:58 - let me try doing it just as I also think
69:01 - like why do it twice I want this video
69:04 - to not be super long and the live stream
69:08 - will always exist so let me try doing it
69:10 - again
69:11 - so I'm going to act I'm going to act
69:14 - acting thank you thank you acting I'm
69:17 - going to act as if I just explained to
69:24 - you the Sebastian leg is it leg or lag I
69:30 - think he told me this I think it's lag
69:36 - I'm just referenced those okay
69:46 - so those two resources are probably your
69:48 - best bet for learning about the theory
69:50 - of the minimax algorithm I'm gonna
69:52 - bypass that and just show you how the
69:54 - minimax algorithm is applied
69:56 - specifically to tic-tac-toe and I'll
70:01 - link to those other resources in this
70:02 - video's description and hopefully this
70:04 - will give you a sense of what the
70:06 - minimax algorithm is so the theory of
70:14 - the minimax algorithm is that the
70:19 - minimax algorithm is typically
70:20 - visualized as a tree so there's the the
70:22 - the root of the tree is the state of a
70:25 - particular game I said I wasn't gonna
70:29 - start over yeah yeah okay so those
70:40 - resources are probably your best bet for
70:42 - learning about the theory of the minimax
70:44 - algorithm and how it can be applied to a
70:46 - wide variety of scenarios but but I'm
70:52 - gonna look at the specifics of
70:54 - tic-tac-toe which is a great starting
70:56 - example because it's a simple enough
70:58 - game that I could actually diagram out
71:00 - all of the possibilities which even if
71:02 - that's computationally possible is very
71:04 - hard to diagram and there's lots of
71:06 - scenarios where you couldn't even
71:07 - compute all of the possible outcomes all
71:09 - the possible pop all the possible future
71:13 - moves of a game and chess is an example
71:15 - of that so so minimax is typically
71:19 - visualized as a tree so the root of the
71:21 - tree is the current state of the game
71:24 - board
71:31 - so let's see I'm trying to think of I
71:34 - did this earlier today and what's gonna
71:36 - be a good I want to leave three moves
71:40 - open but I also want to leave it
71:48 - possible for somebody to win so whose
71:51 - turn is it
71:52 - it's X's turn no this is bad
72:12 - put o in the middle X X
72:22 - I mean I can make it so that o is going
72:24 - to win that's sort of the point I should
72:28 - make it that X is going to win but not
72:30 - on their first move
72:41 - let's try this that's exes turn so ex o
72:49 - ex ex o ex Oh can't win unless X goes
72:57 - here then o can win alright this will do
72:59 - I think this'll do I think this will do
73:05 - as a scenario
73:18 - can you see this yes it's very hard for
73:20 - me to see what's visible being recorded
73:23 - so I've drawn a configuration so I've
73:30 - drawn a configuration here of the
73:32 - tic-tac-toe board midway through the
73:34 - game because I don't want to start at
73:35 - the beginning where there's so many
73:37 - possibilities that I couldn't diagram it
73:39 - so right now it's X's turn and X has
73:42 - three possible moves so I could express
73:45 - that in a tree diagram as move one move
73:48 - two and move three so let's take a look
73:52 - at what I mean by that let's say let's
73:59 - say move one is over here X would win oh
74:04 - that's the point Audio is very low is
74:07 - that really true or just one person
74:10 - probably one person
74:30 - I'm gonna use a blue marker so you can
74:32 - see the new moves so let's say one
74:34 - possible move is X going here let me
74:37 - diagram out the next two possible moves
74:48 - another possible move is X going here
75:04 - and another possible move is X going
75:06 - here so we need to look at eight each of
75:09 - these and determine is the game over or
75:12 - is it continuing so only in this case is
75:15 - the game over and in this case the game
75:17 - is over and X has won so I'm gonna mark
75:27 - this green for the state of X having won
75:30 - the game
75:32 - now it's o's turn and for each of these
75:36 - spots o could make as two possible
75:38 - options
76:22 - should do the next two all right
76:32 - so Oh could go here ro could go here
76:36 - Oh could go here RR oh could go here and
76:40 - look at these in this case and this case
76:43 - Oh has one remember we're trying to
76:46 - solve for the optimal move for X X is
76:49 - making the first turn so this means I
76:55 - can mark these were Owens as red I was
77:00 - like those are bad outcomes oh wow look
77:05 - at this X there's no tie this this is an
77:08 - area where there's no tie I kind of
77:11 - meant to come up with a scenario where
77:12 - there would at least be a tie but c'est
77:17 - la vie the X is in the wrong place on
77:21 - the second board says leo no no to do
77:26 - this again aren't I why does anybody
77:30 - watch me on YouTube I'm like the worst
77:33 - at this stuff the X is in the wrong
77:35 - place on where the X is in the wrong
77:43 - place on the second board it should be
77:45 - down one which is the second board
77:54 - this is right this matches that this
77:57 - matches that this matches that this
78:01 - matches that X X X X s what I don't see
78:09 - it
78:11 - can't see the red marker very well
78:16 - bottom right what I'm going crazy are
78:28 - people trolling me here
78:29 - I know Leo isn't the bottom row second
78:36 - to the left
78:44 - oh this is the left second to the left
78:53 - I don't think so are you thinking that's
78:55 - supposed to go like this this is a
78:57 - terminal state it's correct okay it's
79:00 - correct so Leo I think I'm assuming
79:02 - maybe you made a mistake by thinking
79:04 - this is somehow connected to this where
79:06 - it's not this is a terminal State and
79:07 - the red marker apparently is not visible
79:10 - let's try this
79:29 - yeah all right
79:45 - so while these now are not terminal
79:47 - states there's only one possible move
79:49 - what's sorry too many markers and some
79:57 - of them don't work look to 20 already so
80:11 - while these are not terminal states so
80:15 - while these are not terminal states
80:16 - there's only one move possible for X so
80:18 - I could draw an arrow and put that down
80:20 - here but ultimately I could just
80:21 - consider this as X has to go here so
80:24 - these you could consider as terminal and
80:27 - in which case x will win I think I might
80:38 - want to do this again with a different
80:39 - starting configuration
80:57 - now you see that I visualized all the
81:00 - possible outcomes of the tic-tac-toe
81:02 - game based on this starting
81:04 - configuration so how does X pick which
81:12 - path to go down where we can see here
81:15 - that the goal is for X to win the game
81:17 - to get to here here or there how does it
81:20 - do that and the way that it does by the
81:23 - way spoiler alert this is the move it
81:25 - should pick it should just win instantly
81:26 - but the idea of the minimax algorithm is
81:30 - if we can score every possible outcome
81:33 - those scores can ripple back up the tree
81:36 - and help X decide which way to go to
81:40 - find the highest possible score the nice
81:42 - thing about tic-tac-toe is there's not a
81:44 - range of scores the endpoints are either
81:48 - you won you lost are you tied so we
81:50 - could say something like if X wins I
81:53 - could have a score of +1 and typically
81:55 - in most examples you'll actually see
81:57 - people let me just I'll come back to
82:01 - this later so I could say I can say if X
82:07 - wins it's a score of +1 if oh wind it's
82:12 - a score of negative 1 and if it's a tie
82:14 - it's a score of 0 so in other words we
82:18 - can give this a score of plus 1 this is
82:21 - score of plus 1 this is score of
82:23 - negative 1
82:24 - this is score of negative 1 and this a
82:32 - score of plus 1 but we've got an issue
82:38 - I'm trying to pick between this option
82:40 - this option in this option these two
82:41 - don't have a score how do I pick their
82:44 - score well I can pick their score based
82:47 - on which one of these would be picked
82:49 - but who's picking these this is why it
82:52 - is called mini max oh that you can't see
82:59 - that at all
83:03 - this is why the algorithm is called mini
83:07 - max because we have two players each
83:15 - trying to make an optimal score X is
83:18 - what's known as the maximizing player so
83:21 - to go from here to here it's X's turn
83:24 - and X is maximizing but here it's now
83:29 - O's turns its O's turn and o wants to
83:35 - win an X once is it going to X Kenneth o
83:39 - wants to win X can assume that o is
83:42 - going to play their optimal smooth now
83:46 - you could have a situation where your
83:48 - player doesn't play optimally and that's
83:50 - something you might have to consider in
83:51 - terms of game theory but in this case of
83:53 - the algorithm we can assume that o is
83:55 - going to make the best possible move I
83:57 - mean if it makes a worse move that's
83:58 - only better for us anyway so it's all
84:00 - gonna work out so o is what's referred
84:02 - to as the minimizing player the
84:06 - minimizing player so o has the option of
84:09 - picking negative 1 or plus 1 negative 1
84:12 - or +1 which one is o going to picks pick
84:15 - as the minimizing player the option to
84:17 - win so we can then take the best outcome
84:21 - for o the minimizing outcome for o and
84:24 - pass that back up here's the score and
84:26 - the same thing here now X is the
84:29 - maximizing player which one of these is
84:32 - gonna pick negative 1 plus 1 or negative
84:34 - 1 these are negative 1 because even
84:36 - though it could win here if X goes this
84:40 - way oh it's gonna win if X goes this way
84:42 - oh it's gonna win if a plays optimally
84:44 - so this is the way to go and this
84:47 - scenario is you know albeit very this
84:54 - scenario that I picked might not be the
84:56 - best demonstration of the idea in fact
84:58 - there's no ties here there's only two
85:00 - turns being played so you may be what
85:03 - you might want to do is pause this video
85:04 - and do the same exact diagram but have X
85:08 - and O with two starting positions and
85:10 - see if you can diagram that whole thing
85:12 - out yourself
85:19 - if you do it again you could try this
85:21 - configuration XO o o XX I have to say
85:30 - I'm quite proud of his diet yeah even
85:32 - though it didn't really work out the way
85:34 - that I wanted to and I should have
85:35 - planned this in advance and probably
85:37 - whatever I did like I posted on Twitter
85:40 - what did I do when I did this earlier I
85:44 - go to my Twitter page yeah and look at
85:49 - this image oh oh x2 middle so this is
85:54 - what I did before so I guess this worked
85:56 - out a little bit better because there's
85:57 - a lot more
85:59 - there's no terminal point at the first
86:03 - move is this what kind of like what
86:06 - violet suggests x/x oh oh oh interesting
86:18 - people telling me it was a good
86:20 - explanation okay maybe I'll just show
86:23 - this really quickly
86:31 - yeah you know what I'm gonna do I'm not
86:35 - going to explain it again but I'll just
86:38 - really quickly redraw it and we can do a
86:41 - like a fast 40 thing all right let me
86:55 - try that so let me go back to here
87:12 - I say it's fine all right I'm just gonna
87:19 - leave it let's move on because I got a
87:20 - code this I don't have infinite time so
87:25 - I'm gonna move on I'm gonna move on I
87:27 - appreciate everybody's thoughts okay
87:44 - so how could we possibly do this so how
87:52 - do we implement this in code so that
87:55 - your first clue should be the fact that
87:57 - this is a tree diagram and each time you
87:59 - see a tree diagram typically speaking a
88:01 - recursive algorithm a function that
88:04 - calls itself is something that will
88:06 - apply in this case is no different I
88:08 - want to call minimax on this board
88:11 - position try and then loop through all
88:15 - the possible moves and call minimax on
88:17 - each one of these board positions loop
88:20 - through all the possible moves if I ever
88:22 - get to an end point return the score and
88:24 - have that score backtrack up or ripple
88:27 - back up the chain so let's see if we can
88:29 - write the code to do this I think I can
88:49 - I'm thinking about think about how to do
88:51 - this okay
88:59 - two-twenty I think I can get this done
89:01 - in an hour okay so this here is the
89:15 - place where I want to write the new code
89:17 - currently a move is chosen by picking a
89:21 - random available spot and I no longer
89:23 - want to do that so I'm gonna I'm
89:25 - actually gonna change the name of this
89:26 - function to best to best move
89:40 - and I don't need to worry about this
89:42 - what's available I just want to actually
89:44 - look at all the possible spots so
89:48 - basically I just want to know is the
89:50 - spot available
90:07 - if the spot is available now I want to
90:12 - call minimax on this particular board
90:15 - wait yeah yeah if the spot is available
90:24 - I want to try going there so I'm gonna
90:26 - say board I J is the AI player and then
90:30 - I want to call minimax on the board why
90:33 - do I want to call minimax because I want
90:35 - to get what is the score so I want
90:37 - minimax to return to me and want minimax
90:42 - with to return to me the score for this
90:45 - particular move now it's gonna have to
90:48 - recursively check these two spots but
90:51 - we'll get that we're getting there
90:54 - ultimately though I need to figure out
90:57 - which one was the best so I need to keep
90:59 - track by saying like the best score is
91:03 - negative infinity I can't spell was
91:09 - never the keyboard all along and if
91:14 - score is greater than the best score
91:21 - then that's the new best score and the
91:24 - best move is this particular IJ right
91:38 - it's an object with it I and J yeah and
91:45 - let me declare best move and then move
92:09 - so again I haven't implemented minimax
92:13 - yet I'm just getting the basic idea down
92:15 - for the very furthest turn I need to
92:18 - start by looking at all the possible
92:20 - moves get the score for those by calling
92:23 - this mysterious minimax function I'm
92:25 - about to write and find the best one
92:27 - then apply that move there's a bit of an
92:30 - issue here though because I am actually
92:31 - placing the AI character sorry yeah it's
92:37 - being pointed out in the chat there's a
92:38 - big issue here though because I'm
92:40 - replacing there's a big issue here
92:44 - though because I am changing the global
92:46 - variable board
92:47 - I am altering the game I am moving X to
92:50 - that spot and then moving X to the next
92:52 - spot so I could make a copy of the board
92:54 - but I think an easy way to deal with
92:55 - this would actually just be to undo it
92:56 - so right afterwards I'm gonna just
92:59 - quickly undo that move so let's write
93:08 - them in let's write the mini mat okay
93:17 - the next step would be to write the
93:19 - minimax function that drooly write the
93:21 - algorithm itself I kind of want to know
93:23 - to see if there's any errors here so
93:24 - actually what I'm gonna do is I'm just
93:26 - gonna put a placeholder function in
93:27 - minimax which receives a board and then
93:30 - I'm just gonna return the score of 1 so
93:32 - minimax is always going to return the
93:34 - score of 1 meaning it's not gonna be
93:36 - able to pick it's just gonna they're all
93:38 - gonna be a tie so it's good always gonna
93:39 - pick the first one but let's let's see
93:41 - how that goes next turn is not defined
93:45 - because I called it best move sketch 23
94:00 - and it's in one more place here in setup
94:04 - okay well it went there watch it's gonna
94:08 - go to the next available spot to the
94:11 - next available spot to the next
94:13 - available spot so you can see this is
94:15 - working it's working the sense that the
94:18 - algorithm is making a choice but no
94:20 - matter what it's always just going to go
94:22 - in order of the board and Oh X 1 Oh
94:36 - function is named best move as well as
94:39 - the variable thank you for that
94:53 - there's also a big issue here which
94:56 - thankfully didn't no major problems
94:58 - happen but I named this function best
95:00 - move and then it created a variable
95:01 - inside of the function with the same
95:02 - name which you know you can always run
95:04 - into trouble so let me actually just
95:05 - change this to move sort of by
95:07 - definition it is the best move make sure
95:15 - this still works
95:16 - all right X is just picking straight
95:19 - down okay yes
95:28 - all right
95:34 - now the hard part I need to write the
95:38 - minimax function itself so one thing
95:40 - that I've skimmed skipped here which is
95:41 - typical of a minimax algorithm is I
95:44 - would also keep track of the depth
95:45 - because ultimately I could want to
95:48 - consider like how long is it taking me
95:50 - to get somewhere what is the depth of
95:53 - the tree that I'm on so that's something
95:54 - that you'll you'll see often within the
95:57 - algorithm implementation so let me add
95:59 - that so I add an argument depth here and
96:08 - then give it a zero at first oh you know
96:10 - what I need another really important
96:12 - argument this is a turn-based game and
96:15 - the algorithm is going to behave
96:17 - differently whether it is the maximizing
96:20 - player's turn X or the minimizing
96:22 - player's turn Oh in this case again you
96:25 - could have more than two players or
96:26 - there could be a lot of weird stuff
96:28 - going on but that's ultimately what I
96:32 - need here so let me also add is
96:35 - maximizing is maximizing and the this
96:40 - here would be true right so I want to
96:44 - perform minimax on this board with the
96:46 - starting depth of zero and the first
96:48 - move is the maximizing player
97:00 - all right
97:05 - so let's say I'm maximizing what do I
97:08 - want to do actually what I want to do
97:10 - even before this is check to see if
97:12 - somebody won so I'm pretty sure I
97:19 - already have a check winner function
97:21 - that's something that I wrote in the
97:22 - previous coding challenge let me double
97:24 - check that check winner the winner is
97:29 - null and then by the end it returns a
97:32 - tie it returns null a tie or the winner
97:43 - so the score is and let's let's make a
97:47 - little lookup table that's basically
97:50 - exactly what I wrote here if X wins it's
97:53 - a 0 if a wins is a negative 1 if it's a
97:55 - tie it's a 0
98:16 - all right so this is my lookup table for
98:18 - what the score then and again it's a
98:20 - very simple scenario there's only three
98:22 - possible scores and the score of the
98:24 - result is okay well if if the result is
98:29 - not equal to null
98:43 - the score is the associate a that the
98:46 - number associated with this particular
98:48 - oh it got rid of those I didn't need
98:50 - those quotes Visual Studio code just
98:52 - clean that up for me thank you very much
98:55 - the score is based on whoever won and
98:57 - then I can return that so this would be
99:00 - the terminal condition if if I am
99:03 - calling minimax on this particular board
99:05 - configuration at this particular depth
99:08 - and it's an end state if it's a terminal
99:11 - state just return the score that's what
99:12 - I'm supposed to do
99:23 - otherwise I need to go through and pick
99:26 - the maximum need to go through all the
99:28 - possibilities again for the next player
99:33 - yeah
99:38 - yeah
99:47 - if it's not a terminal state if it's not
99:51 - this state and I can't just return the
99:53 - score I need to check all the possible
99:55 - next moves and by the way I got this
100:00 - wrong
100:01 - so I got this wrong actually the next
100:04 - move right I'm actually this is the AI
100:06 - player trying to trying a spot there
100:10 - move so the next move is actually not
100:12 - the maximizing player this should be
100:14 - false but I'll better write this as if
100:16 - it is so if it's the maximizing player
100:29 - I can copy-paste that from above check
100:31 - all the spa possible spots again
100:42 - if it's available try yeah now that's
100:49 - the human right then oh no this is the
100:51 - AI I'm confused because currently in my
100:54 - brain the way I'm stepping through this
100:56 - it's not the a eyes player turn ah I'm
101:06 - confused because currently the way I'm
101:08 - stepping through this it's in my mind
101:10 - it's o's turn but i'm writing the code
101:12 - for both whether it's x's turn or o
101:14 - stern so for the sake of argument its
101:15 - X's turn right now so I'm checking all
101:18 - of those spots and then I'm going to say
101:20 - return oh no no no I need to check I
101:27 - need to find I define the best move I'm
101:30 - kind of doing what I did again is there
101:31 - a way for me to reduce the amount of
101:33 - code I'm writing I'm not going to worry
101:34 - about this I want to once again find the
101:36 - best score which will be in this case
101:39 - negative infinity and I want to say the
101:43 - score is the minimax algorithm of the
101:47 - board at depth plus one and now the next
101:51 - players turn is false because I'm the
101:54 - maximizing player and then I've got to
101:56 - undo this just like I did before why do
101:59 - I have to write this code twice I'll
102:01 - think about later if I can refactor this
102:03 - only do it once and then and then if
102:09 - score is greater than best score best
102:14 - score is equal to score and then after
102:18 - all of this right for loop for loop if
102:26 - it's an empty spot boom boom return the
102:31 - best score so this is finding the best
102:36 - score for all the possible next turns by
102:41 - the AI player or if it's not the AI
102:45 - player if it's the minimizing player we
102:47 - can do exactly the same thing and again
102:50 - maybe there's a way and I
102:53 - I'm missing a curly bracket yes thank
102:56 - you there's a curly bracket so this is
102:59 - very important there's a lot of ifs and
103:00 - four-state for loops here so maybe
103:02 - there's also a nice way to refactor this
103:03 - to make it more readable but if it's the
103:05 - maximizing player check all the spots
103:07 - find the best possible outcome and
103:10 - return it but call minimax recursively
103:12 - and the next future move and then here
103:15 - I'm going to start right the minimizing
103:17 - player wants to find the best score for
103:20 - it which is the lowest score so and
103:22 - that's the human player and if the score
103:26 - is less than the best score and then
103:29 - return that best score whew oh forget
103:35 - about this return one let me see oh this
103:38 - is very hard to look at
103:53 - I'm gonna stare at this to make sure on
103:55 - my my curly brackets line up if if for
104:00 - four and then return the best score
104:04 - otherwise if if for four and return the
104:08 - best score I think this might actually
104:09 - be good
104:11 - should we just try it
104:17 - err on line 33 which Oh hold on being
104:22 - told there's an error on line 33 Richard
104:25 - oh this should be ah look at this so
104:27 - this is a huge mistake here return true
104:30 - why did I have that there I don't know
104:31 - why I did that that's return score this
104:33 - should be returned score the whole point
104:35 - of this and I don't even need a separate
104:36 - variable here I can just say return
104:38 - scores result right so this is any kind
104:41 - of recursive function needs a terminal
104:44 - condition needs to exit right this
104:46 - function is always going to keep calling
104:47 - itself and calling itself minimax
104:50 - minimax minimax minimax
104:55 - I don't know what this extra code isn't
104:58 - here and minimax okay oh yes aha
105:06 - all right so there's also I'm Simon is
105:09 - pointing out something to me which is
105:10 - great which I don't need this if
105:12 - statement to find the best score the
105:15 - whole point of this mini and also
105:16 - there's a great chance for you use the
105:17 - min function in the max function because
105:19 - it's the minimax algorithm so I can
105:21 - actually say score is the lower one the
105:25 - minimum between score and best score
105:27 - it's going to make it way easier to read
105:30 - thank you and oh no but this one is Max
105:34 - is Max and then this one oh thank you
105:37 - for this I don't know why I didn't think
105:38 - of this I'm sure it's in every
105:41 - implementation score is the minimum
105:43 - between score and best score so this
105:47 - makes it much more much easier to read
105:49 - here okay let's try it let's try it why
105:54 - not
105:54 - caution to the wind
106:02 - okay excellent and the top left that's
106:05 - definitely the optimal place to go I'm
106:07 - gonna go here no no bad X bad X you're
106:14 - not going in the right place yeah I beat
106:23 - you
106:23 - you're still going into order why are
106:27 - you still going in order oh whoa you're
106:31 - not going in order you're making weird
106:33 - decisions Oh what's going on here
106:37 - oh we're gonna have to debug this I
106:41 - thought like maybe for once in my life I
106:43 - actually wrote a complicated algorithm
106:45 - correctly
106:58 - oh I see the error I see the error of my
107:05 - ways this has to be true right after the
107:09 - maximizing players turn its the
107:12 - minimizing players turn after the
107:14 - minimizing players turn
107:16 - it's the maximizing players turn okay
107:22 - that's a good move X I see what you did
107:25 - there
107:31 - why can't you figure out to go there X
107:39 - best score is max okay oh okay
107:52 - this I'm finding this this is the score
107:57 - is the new score and the best score
107:59 - should be the bigger one the maximum
108:01 - between to score and best score not
108:03 - score ah this has to be this because I'm
108:07 - returning best score and this has to be
108:09 - this okay
108:10 - okay let's see I really should not
108:14 - continue to play this come on X figure
108:20 - out where to go okay I'm gonna go here
108:26 - [Music]
108:32 - it should really know to go there right
108:45 - maximising is the AI is maximizing
108:53 - minimizing is the human oh no no that's
109:08 - in the wrong place it's in the wrong
109:10 - part I new look like brackets bad
109:12 - brackets I need to return the best score
109:14 - hello after I've checked all of the
109:17 - possibilities meaning both four loops
109:19 - the I and the J have completed I got
109:22 - that right up here but not down here oh
109:25 - okay I really think we've got it this
109:28 - time
109:29 - Tiffany's housed tie alright alright you
109:43 - we're gonna go into competition now I'm
109:47 - gonna I'm gonna let you win by going
109:48 - here
109:48 - ah so if I don't go in if I go in a
109:54 - corner yet if I don't go to the middle
109:57 - it's always going to win so X is always
109:59 - going to win unless I go to the middle
110:01 - in which it's always gonna be a tie
110:03 - unless I make a mistake and then it's
110:05 - gonna win but if I go to any other spot
110:08 - X is going to be able to win because
110:11 - it's always gonna
110:15 - [Music]
110:24 - take a little time to 3 o'clock amazing
110:45 - trying to think of why I want to wrap
110:47 - this up all right oh I'm so happy about
110:58 - this where did I go
111:18 - okay all right
111:26 - now for a five-by-five yes so let me
111:29 - make a list and make a list of things
111:34 - you could try as exercises
111:47 - the initial loop you wrote to check all
111:50 - possible moves is it necessary you could
111:53 - just start off with minimax for the
111:55 - maximizing player in the current board
111:56 - okay let's just think Oh in other words
112:04 - I can say but how does that give me the
112:10 - problems minimax returns a score so it
112:20 - doesn't return a move so I'm not sure
112:24 - how I would do that
112:25 - I'll let somebody smarter somebody whose
112:28 - brain isn't as tired they could try to
112:30 - not compare it smarts can I explain the
112:34 - algorithm Bruno asked can you explain
112:36 - the algorithm well if you watched
112:38 - earlier in this livestream mics I
112:40 - explained it so well it's perfect nobody
112:43 - could ever possibly misunderstood me
112:45 - yeah yeah I feel like this initial loop
112:52 - shouldn't matter but I mean sorry this
112:57 - one but I need a way to actually pick
113:02 - the move and here I don't pick the move
113:07 - I guess I could pick it in the minimax
113:10 - oh I could pick it and not undo it or
113:13 - something I'm not gonna worry about that
113:15 - I'm gonna let somebody I'm gonna I'm
113:17 - gonna create a list of things so for
113:21 - example try
113:28 - you can apply this to connect four right
113:30 - all right I think I'm done I think I'm
113:33 - done this coding challenge is done
113:48 - yeah okay thanks Coby all right
113:55 - I'm feel like I want to make a list of
113:58 - suggestions even if it's just like a
114:01 - script that I'm gonna follow so let's so
114:07 - let's think about what things people
114:08 - might do to AI players larger board
114:19 - other game I connect for animation and
114:27 - timing and
114:42 - and complex game Oh fruit at pruning
114:51 - alpha beta pruning game requite that
115:01 - requires a heuristic okay
115:09 - so these are my suggestion exercise
115:11 - suggestions anybody have other ideas or
115:15 - these good good suggestions three play
115:26 - or tic-tac-toe larger board more players
115:42 - Oh depth this is I could add okay faster
115:48 - his use depth in score
115:57 - we can actually beat it go bottom right
116:00 - then bottom left and top right okay
116:02 - bottom left bottom right bottom left
116:06 - bottom right
116:08 - no you it went there it knows I can't
116:18 - beat it
116:19 - it knows so sirs this I will ask what do
116:27 - you mean by complex game across your
116:28 - wrist Rick I will I will a 3d oh I could
116:34 - go first the other thing is I could go
116:36 - first
116:53 - so one thing that might be interesting
116:55 - for me to try here really quickly before
116:56 - I sort of finish off this challenge
116:58 - would just be to comment out the AI
117:00 - going first so I know this is
117:02 - technically incorrect because X is
117:03 - supposed to go first but let's see what
117:05 - happens if I start with a fresh boat
117:07 - forward and I go first so I'm gonna go
117:10 - here I'm gonna go here oh it's high am
117:15 - Ioana something became undefined oh if I
117:20 - go last I guess there's no move for X
117:22 - and I've got it here so that's things
117:23 - like can I beat no I lost is there a way
117:30 - for me to beat no it's always going to
117:34 - go to the center so there's no way for
117:36 - me to beat it I don't believe there's
117:42 - any way for me to beat the AI player
117:45 - it's a solved game because it's always
117:46 - gonna go to the center so I could try
117:49 - going here I could go here go here and
117:51 - I'm the best I can do is a tie
118:34 - okay yes I mean that one is counted in
118:37 - the larger board okay tie or lose yeah I
118:44 - could try it starting with the center
118:45 - it's not gonna do me any good the best
118:47 - move is the corner I believe but
118:50 - whatever I mean it's gonna play
118:53 - optimally no matter what
119:05 - let's finish this
119:07 - are you so you've watched this coding
119:10 - challenge maybe you have a creative idea
119:11 - about how to make your own version of
119:13 - this but I just quickly whipped up
119:15 - thanks to the chat in the live stream
119:17 - also some suggestions of things you
119:19 - could try so first of all what happens
119:21 - if you just make two AI players that
119:23 - just plate against each other over and
119:24 - over again well in that case it's gonna
119:26 - be a tie every single time it's a solve
119:28 - game but that might lead to some
119:30 - interesting possibilities um one thing
119:32 - that I'm not using is using the depths
119:34 - in the score so for example if I go back
119:36 - to the code and I change these to say 10
119:41 - and negative 10 I could account for the
119:44 - depth meaning I could have a higher
119:45 - score if I win more quickly than if it
119:48 - takes longer to win right now I'm not
119:50 - accounting for that so where in the code
119:52 - would you subtract out depth that's
119:54 - something you could try certainly would
119:59 - be interesting to make a larger board so
120:01 - can you play trick tic-tac-toe and a 5
120:03 - by 5 or a 7 by 7 you the winning
120:06 - conditions would change
120:08 - the optimal play would change that would
120:09 - be exciting to try I hope somebody does
120:11 - that you could try more players like how
120:14 - would you have a tic-tac-toe game with 3
120:16 - players that's something you try with a
120:17 - larger board you could try another game
120:19 - maybe connect 4 would work that might be
120:22 - able apply minimax to just thinking
120:25 - about the interface animation like right
120:27 - now how whenever whenever I go the next
120:30 - turn happens immediately you could have
120:32 - you could think about timing and that
120:33 - sort of thing but then I always say high
120:37 - degree of difficulty and maybe worth me
120:39 - coming back to in a future video at some
120:41 - point would be these two last items one
120:44 - is known as alpha beta pruning oh three
120:52 - 3d tic-tac-toe thank you
121:02 - it's the case in a minimax algorithm or
121:05 - sometimes you discover an optimal path
121:08 - and you don't need to check the rest of
121:11 - possibly all of the possibilities and
121:13 - that could alpha beta pruning refers to
121:20 - the aspect of the minimax algorithm
121:23 - where you find an optimal path and you
121:26 - know that all the other possibilities
121:28 - are going to be worse and you don't need
121:30 - to go forth and check every possibility
121:32 - so you could research how that works and
121:34 - add it to this algorithm it's explained
121:36 - in the Sebastian lag video then there's
121:42 - this idea of games that you can't
121:45 - possibly compute all the possible moves
121:48 - so you need some way whoops oh shoot I
121:57 - messed up the camera a little bit but
121:59 - hopefully it's gonna be fine
122:13 - then there's the possibility of where
122:16 - was I walking to oh yeah where I was
122:24 - then there's the possibility I just
122:27 - noticed that that was out and that's I
122:29 - don't know right yeah okay I think I was
122:34 - here then there's the possibility of a
122:37 - game I'm gonna let me take this out here
122:39 - I'll just back it then there's the
122:43 - possible
122:48 - then there's a possibility of a game
122:51 - where the number of moves is so vast you
122:54 - couldn't possibly compute the entire
122:57 - tree chess is the classic example of
123:00 - that so you need some heuristic or a way
123:02 - of an estimated guess of what the score
123:05 - could be with any given state so one way
123:07 - of doing this which I'm not saying is a
123:09 - good strategy but a simple thing you
123:11 - could do with chess is you could add up
123:12 - the total number of white pieces versus
123:15 - black pieces but you could say like well
123:17 - the score is higher if you have if the
123:18 - maximizing player has more pieces than
123:21 - the opponent so that's one way of
123:23 - approaching it so you don't actually
123:25 - stop at the end of the tree but you just
123:27 - go some pre-determined depth and then
123:30 - calculate an estimate and have that
123:32 - ripple back up the tree so you maybe
123:35 - give that a try with a more complex game
123:36 - um certainly other types of AI
123:39 - algorithms that neural networks could
123:41 - play a role at some point with how you
123:43 - make that estimate but ultimately that
123:45 - that is something that would be
123:47 - interesting to try as well one more idea
123:50 - that just came from the chat so this is
123:57 - quite similar to the idea of a larger
123:59 - board but instead of just a larger
124:00 - 2-dimensional board you could create a
124:02 - 3-dimensional board so tic-tac-toe that
124:04 - happens in a cube I should just do that
124:06 - as a coding challenge separately myself
124:08 - so hopefully you learn something and
124:11 - maybe this algorithm that looked a
124:12 - little terrifying to you at one point
124:13 - now seems quite accessible and doable
124:15 - um maybe your creative idea is not on
124:18 - this list please make your own version
124:20 - of this share it with me at the coding
124:23 - trained
124:23 - komm there will be a link in this
124:24 - video's description with instructions
124:26 - for how to share it if you don't know
124:27 - how to share it just write a comment
124:29 - file an issue we the coding train
124:31 - community are here to help you oh and I
124:34 - can't wait to see you in a future video
124:36 - good bye
124:45 - alright I think I am done oh by the way
124:50 - the alerts were the alerts going off
124:52 - I guess not cuz nobody joined I I didn't
124:54 - actually turn them off
124:57 - alright I'm kind of excited that that
124:59 - worked I can't believe it actually
125:05 - oh the xkcd cheat sheet oh I forgot
125:10 - about that I did not show that
125:32 - Matthieu let's edit this in after the
125:34 - fact and maybe we can capture and scroll
125:36 - this separately because this is really
125:39 - good this is another idea that could be
125:42 - great one more idea which just came in
125:46 - from the chat there's a wonderful xkcd
125:49 - cheat sheet that shows a map of all the
125:51 - possible optimal tic-tac-toe moves for X
125:54 - and for o and this is really a beautiful
125:56 - visualization that's much better than
126:00 - the diagram that I made here and maybe
126:02 - actually what a project you could do is
126:04 - think about how to visualize the minimax
126:07 - algorithm as it is happening and there's
126:11 - there's maybe some just wonderful
126:12 - artistic or data science possibilities
126:15 - that could come out of that alright
126:16 - thank you for watching this Cody Tojo
126:18 - the coding tree I'm so glad that you
126:19 - were here with me I can't wait to see
126:21 - what people make with this this was a
126:22 - this was like a tough one for me I was a
126:24 - little scared of it and I think it
126:25 - worked ok and I'll see you in a future
126:27 - video goodbye
126:30 - super chat final test David Schneider it
126:36 - popped up thank you so much you're all
126:42 - too kind do predator and prey game yes
126:46 - so what I'm gonna do next is who knows
126:48 - what but I will remind you that the next
126:51 - videos to come out on the channel are
126:53 - things that weren't from a live stream
126:55 - and they will relate to the neural
126:58 - network well Simon was telling me to
127:00 - show some community contributions for
127:02 - what the interactive drawing a teachable
127:05 - machine let's see if there's any
127:08 - teachable machine ones so what's a
127:11 - little confusing is actually you know in
127:13 - some cases and this is a good question
127:14 - this is a question for those of you who
127:16 - work on the coding train website does it
127:19 - make sense for there to become community
127:22 - contributions for each one of these
127:23 - videos or just with just with one of
127:27 - them I'm just on this page in general I
127:29 - don't know but let's let's take a look
127:30 - at these let's see where they came in I
127:33 - think I have a memory of looking these
127:35 - ok so not on this one Oh a whole bunch
127:39 - ha ha ha theremin rock-paper-scissors
127:43 - Wow look at these
127:45 - like oh it didn't I have a memory of
127:47 - looking at these now you sure I didn't I
127:49 - didn't look at all of them cuz I don't I
127:51 - don't remember looking at uh Simon's
127:52 - make 24 let's sort of see I remember
127:56 - looking at this one yeah I looked at
127:57 - this one for sure there's this one ooh
128:04 - look at this oh this is actually
128:09 - training with the canine classifier
128:23 - cool I like this interface that is
128:26 - awesome
128:27 - great job I really like this interface
128:29 - that it's just sort of like in real time
128:31 - so with KNN you don't actually need to
128:33 - you don't need to train the model KNN is
128:36 - just doing a search for the closest one
128:38 - or the KN the K nearest neighbors so
128:41 - that that can be very effective once you
128:43 - have a lot of sample images it can
128:47 - become too big to deal with but that's
128:48 - great okay let's look at which one of
128:52 - these these is there one of these I
128:54 - should look at let's try are they the
128:55 - same let's look at the second one use
128:59 - Kies one two three and four to select a
129:02 - quadrant then choose an operation using
129:04 - plus/minus asterisk and slash boy oh boy
129:10 - seems hard new level one game wait how
129:15 - is this teachable machines quadrant
129:19 - could be one of the four sections of the
129:21 - window use keys one I'm confused
129:26 - where is the teachable machines aspects
129:29 - I'm ed although this is cool now can I
129:33 - level one I think is where I am 24 so
129:36 - wait oh I've just selected like this oh
129:38 - look at that one plus plus 1 for 2 I
129:45 - don't do I didn't do this right when we
129:47 - trying to get to 24 Oh too late for me
129:51 - well that wasn't right the snake game
129:54 - contribution room earlier today is
129:56 - really cool ok what's your other one
130:00 - make 20 for a teachable machine uh-huh
130:04 - I see I see hold your hand in front of a
130:07 - quadrant to select it that's cool that's
130:10 - really cool so the interaction is with
130:12 - teach a little machine so I'd have to
130:13 - train a model and then copy paper oh and
130:17 - you get to put your model there that is
130:19 - such a clever idea ah I never thought of
130:24 - that so what Simon is showing here which
130:26 - is very very clever is that you could
130:28 - make a game where the interaction is
130:30 - based on a teachable machine train model
130:33 - but you could actually tell the user go
130:36 - train your model just
130:37 - these labels and then paste the URL
130:39 - remodel and now you can play this game
130:40 - that's wonderful so I I'm I'm not going
130:43 - to step through training it right now
130:45 - but oh and the camera of course went off
130:47 - because it is the coding train after all
130:49 - where the cameras go off now they go off
130:52 - if they overheat hopefully it's gonna
131:00 - come back on I have to refocus the
131:02 - camera I have to refocus the camera with
131:13 - my trusty Elgato focusing device
131:17 - I turned the fan on which will keep it
131:20 - cool I'm not gonna worry about the focus
131:25 - too much right now okay
131:36 - wonderful idea let's see the snake game
131:39 - evolutionary AI and then theremin and my
131:42 - own the snake game let's take a look at
131:43 - these whoa oh man this is this is
131:50 - everything I always wanted to make I
131:51 - haven't had the time for it so this is
131:53 - one thing I've talked about with my
131:54 - evolutionary neuro evolution tutorials
131:59 - is that sometimes you can't have you
132:01 - can't try a bunch of different players
132:03 - in a game all at once on the same game
132:05 - board you have to run separate parallel
132:07 - simulations and that looks like that's
132:09 - what's happening here in this one which
132:10 - is really really cool to see oh thank
132:13 - you for this wild this is by Alex N and
132:20 - then the theremin here
132:29 - [Music]
132:38 - so this looks like maybe this is similar
132:40 - to Alexander Chen posted an interesting
132:44 - teachable machine music e thing I'm
132:48 - gonna let this go and then let's look at
132:50 - these audio ones make the sound of the
132:52 - animal game let's try this
132:55 - hi there loading CG machine samples
133:14 - per hour where uh you think it's can we
133:34 - see whether it's getting my through a
133:36 - console log cat waiting
133:45 - ah anything I make apparently is a cat I
133:49 - wonder if it's not actually getting my
133:51 - audio or something anyway let me know if
133:53 - you could get this game to work I love
133:55 - the idea of it it's really fun is that
133:57 - you know so many of them are like fine
133:59 - the image and show it I love this make
134:01 - the sound okay thank you for this I
134:04 - think I'm gonna stop for today I can
134:07 - come back to the interactive drawing
134:09 - ones another time I think oh I guess I
134:11 - can look at those just to keep up with
134:13 - everything there no up still no
134:17 - variations so hey everybody this was a
134:20 - good one make a Korean version of this
134:22 - share it with me alright I think I'm
134:28 - done for today it is time to go off for
134:32 - Thanksgiving holiday here I maybe I'll
134:37 - read you some random numbers I could
134:39 - work a little bit on this no I'm gonna
134:43 - oh I haven't just a little bit more of
134:45 - this red side to do right this is I just
134:49 - have a little bit more of this red side
134:51 - to do so I did the white I did the
134:53 - yellow and I did the green so I just
134:55 - have two rows of the red side to do and
135:01 - it looks pretty doable I feel like this
135:04 - is too much pressure do this on my own
135:06 - time this is my my quiet enjoyment
135:10 - activity I will read you some random
135:14 - numbers I hope everyone has a nice if
135:17 - you are celebrating this holiday I hope
135:19 - you have a nice holiday if you are not
135:21 - celebrating this holiday hope you have a
135:22 - nice rest of your week if it is bedtime
135:25 - for you
135:27 - this is perfect timing through ninety
135:31 - nine thousand seven hundred fifty one
135:32 - fifty eight thousand seven hundred
135:35 - eighty five seventy two thousand nine
135:38 - hundred eighty six two thousand four
135:40 - hundred eighty eight twenty-three
135:42 - thousand three hundred fifty-four 80
135:44 - thousand two hundred seventy-five I just
135:49 - thought of something really important I
135:53 - have not made a new coating in the
135:56 - Cabana video and it is time for me to do
135:59 - that and so I must on a live stream pick
136:03 - the next topic for the next coating in
136:05 - the Cabana video now I had a list and I
136:09 - had the spinny thingy I really David
136:13 - Schneider was helping me with this but I
136:17 - don't know how I'm gonna find it
136:18 - Schiffman github randomizer I guess I
136:21 - could remake it so let's go to that I
136:24 - have way too many systems for keeping
136:27 - track of my topics but right now I was
136:30 - let's let's let's pick from a few
136:32 - possibilities so there was this to-do
136:35 - list here which was everything I'd hoped
136:37 - to do this fall which you guys you can
136:39 - see I got very little I'd like to pick
136:41 - naturey things for coding in the Cabana
136:45 - I like ASCII art so let's let's pick
136:48 - some things so okay what was that other
136:51 - rows like the star wrote like there's
136:53 - the Mara Rose but when I looked at it
136:57 - there was also with it like on the math
137:01 - world page there was like another star
137:05 - rose so why not oh I feel like that's
137:10 - not the best one to arrive at because
137:14 - I'll put it on the list star Rose
137:18 - marching squares I mean why not that's
137:24 - not really a Cabana video though that's
137:25 - more like a ASCII art
137:31 - you know let's well you'll help me
137:33 - curate this in a second and just put
137:35 - anything that's a possibility memory
137:37 - game oh I love the idea of doing a
137:38 - memory game break out I feel like that
137:41 - the game stuff I should save for here
137:45 - hexagonal grid whirly noise I definitely
137:51 - want to do I want the like I'm looking
137:58 - for like the nature II pattern stuff so
138:05 - de l'année triangulation could fit into
138:07 - that yeah marching squares fits because
138:17 - could make nice cool patterns with that
138:20 - like this so that that works
138:27 - what other noise algorithms are there
138:30 - anything else let's look at I mean
138:35 - hexagonal grid is kind of interesting
138:38 - that works memory game could be
138:45 - memorizing trees and plants cuz star
138:49 - roses very little documentation might be
138:52 - hard to do yeah it's all soaked I could
138:55 - take that out because it's basically
138:56 - very similar that the the the more rows
139:06 - let's look at because I might try to do
139:12 - one this weekend if I have some time I
139:17 - think that I may have done a thing where
139:22 - I like assigned a bunch to myself that I
139:24 - was kind of interested in how to encode
139:28 - her I'm decent been done now to rhom
139:31 - curve what's that
139:47 - okay
139:49 - like this why not this looks good well
139:57 - consider to that
140:02 - haven't I really not done this all right
140:09 - sure I feel like that's a thing that
140:12 - I've done but probably spelled that
140:15 - wrong
140:23 - well I've really got to go soon
140:32 - quadtree I did birds flocking constant I
140:37 - did so many of these so I cleaned this
140:39 - up to spiral oh yeah this is something I
140:48 - talked about with Matt Parker from
140:51 - stand-up maths at one point and isn't
140:55 - there a I think there's a three blue one
140:58 - Brown video on this as well okay well
141:05 - there's some very large images suddenly
141:07 - in this lecture by the way when you put
141:08 - I know you know this is a convention
141:10 - again if you post a plane post an image
141:14 - and the slack chat it I have it
141:15 - everything zoom so I could see people
141:16 - text and it just blows up and I can't
141:19 - really see what it is or see anything
141:20 - anyone's written just so you know
141:23 - musical melody generator I do want to do
141:25 - that but I think that's maybe not a
141:28 - Cabana video right now plane Z curve
141:31 - I've been there's somebody on Twitter
141:32 - has been sharing a whole bunch of these
141:34 - with me so what is Kenny I I feel like I
141:43 - know what that means but I'm not sure
141:47 - like this kind of thing like this kind
141:51 - of curve Lyapunov fractal lie up hoon of
141:58 - fractal
142:03 - that looks hard but okay why not all
142:08 - right well now I have too many things
142:15 - alright maybe this list is good now if
142:20 - someone can explain to me what was meant
142:21 - by Z curve I'm kind of interested in
142:23 - that where was I here I lost the page
142:36 - that had my things that were assigned to
142:38 - me wait here it is this is it okay
142:43 - anything else recently and I haven't
142:48 - looked what's this
142:55 - whoa
142:59 - mmm I feel like
143:08 - whoa all right this I have to look into
143:13 - more that does look really cool curl
143:15 - noise curl noise I you had me at noise
143:26 - okay this works for me
143:28 - curl noise alright three D CA okay yeah
143:36 - I'll do that three Central Avenue k 3d
143:41 - cellular I mean that should probably be
143:42 - more specific than that but so that's
143:46 - the Z curve I can't die once again I
143:49 - cannot see what's in the slack channel
143:52 - I'm going to try to
144:00 - z curve all right this is good enough
144:04 - I'll put Z curve on here why not we'll
144:06 - figure out what it is all right we are
144:11 - done I'm now going to pick the next
144:19 - coating in the Cabana video
144:26 - all right everybody you're ready for
144:28 - this this is a big moment these are all
144:32 - the possible things Oh trapped Knight
144:35 - maze solving all such good you know yeah
144:41 - Rubik's Cube part for someday that's on
144:44 - my list okay okay one two three four
144:54 - five six seven eight nine ten
145:02 - what's it gonna be it's gonna be the
145:04 - seeker spin again do I get like one veto
145:13 - I feel like the Z curve was like the big
145:15 - tonight let's look at what this is Z
145:18 - curve is whoa this word this fits with
145:25 - the Cabana sort of theme three
145:27 - dimensional curve that consists of a
145:29 - unique representation of a DNA sequence
145:31 - huh zigzag shape huh is this really what
145:38 - was meant fascinating I know nothing
145:41 - about this oh well what do we think
145:52 - spin again or Zeke earth is the wheel
145:56 - like I mean I can't violate the wheel
146:01 - it's landed on Z curve it's what I have
146:05 - to do there's no choice I can't spin it
146:08 - again it's too late similar to a hilbert
146:17 - curve
146:24 - spit again I can't spin it I'm not gonna
146:27 - I mean I could have established some
146:29 - ground rules which is that I could
146:32 - create a framework by which I am allowed
146:35 - to sometimes spin again - spin again
146:41 - Simon you're always so like big on the
146:43 - rules I'm surprised you say spin again
146:45 - yeah I think I don't think it means Zee
146:48 - curve so here's what I think it is give
146:50 - me a second to find something on Twitter
146:54 - I'm just gonna I don't want to pull up
146:58 - something by accident that I don't want
147:00 - to see I thought maybe it's this hold on
147:12 - I found the Twitter feed I'm looking for
147:20 - so this I'm looking at Juan Carlos on
147:23 - Twitter and I'm about to looking for
147:27 - here we go this is what I thought I
147:30 - think we're going to make this the Z
147:32 - curve hold on a sec so I thought Z curve
147:42 - meant something like this it's because
147:44 - it's an equation with some Z's in it and
147:49 - then a bunch of difficult this is very
147:51 - coding train like and there's like a
147:54 - bunch of them that Juan Carlos this is
147:59 - pons Campuzano on Twitter has made quite
148:03 - a few these here's another one yes see
148:05 - what about some rain with complex
148:07 - numbers see look Juan Carlos was even
148:11 - suggesting this for a future coding
148:13 - challenge so how about this the order
148:22 - curve oh that's what vaio there's also
148:25 - the Z order curve I like that Z order
148:29 - curve so space-filling curve plotting
148:36 - complex functions yeah so plotting a
148:38 - complex function I mean I've done some
148:40 - of that but I also love this idea of Z
148:43 - order curve this looks fun
148:52 - space-filling curves okay we've got some
148:56 - stuff to work with alright this could be
149:00 - interesting right so we'll we'll discuss
149:03 - this here I mean I'm not saying I'm
149:08 - going to follow but I'm gonna do a quick
149:11 - straw poll there should be a way for me
149:14 - to put a poll in the YouTube chat I
149:16 - don't think there is which Z curve so Z
149:23 - order curve complex plot complex
149:28 - function which is like Z equals X is
149:32 - that is V equals x plus y times I kind
149:35 - of is that right and then Z curve like
149:40 - genomics or something and then spin
149:43 - again I'm gonna allow multiple choices
149:47 - which is a little weird because I want
149:50 - people to be able to don't just
149:53 - everybody pick yeah well maybe I won't
149:58 - allow mo I don't think I'm gonna pick
150:00 - spin again I feel like I cannot go
150:02 - against the wheel like I've made a
150:04 - choice in my life and that choice is to
150:09 - follow the wheel I mean I should just
150:13 - take spin again off I'll leave it on
150:15 - there just see see what happens I allow
150:17 - multiple choices I'm gonna allow my
150:21 - minute let's try this yes the order
150:25 - curve sounds really good one choice ask
150:29 - hard it's interesting F of Z we're both
150:31 - Z and F of Z are complex the colors are
150:34 - used to show phase all right no multiple
150:38 - choice is I'm creating this pole there
150:41 - we go alright somebody will kindly post
150:46 - this into the chat for me
150:48 - well somebody kindly post this there I
150:51 - guess it'll take a minute and we'll move
150:56 - on
151:01 - [Music]
151:08 - [Music]
151:31 - [Music]
151:57 - [Music]
152:04 - [Music]
152:14 - [Music]
152:27 - let's see if I can post it
152:57 - [Music]
153:08 - [Music]
153:18 - [Music]
153:29 - [Music]
153:45 - came a little bit afraid to look at the
153:48 - results because I hear that this bit
153:49 - again is waiting no I'm not spinning
153:52 - again I just wanted to know if that's
153:54 - how you felt see the thing is though if
154:00 - you add up all of these all three of
154:05 - these are beating spin again right so
154:09 - technically speaking
154:11 - spin again is not winning it's like
154:13 - losing by quite a bit
154:15 - spin again has to be more than 50% of
154:17 - the vote for it to win making that rule
154:20 - right now so I'm picking Z order curve
154:23 - right now is winning as far as I'm
154:25 - concerned because my assumption is that
154:28 - anyone who picked these two is picking Z
154:32 - or to curve as their second choice okay
154:35 - just so you know you've got spin again
154:37 - has to have a what's the word it's a
154:40 - plurality but it actually has to have a
154:44 - majority when it's going down come on Z
154:50 - order curve well I know how to fit I
154:51 - know one person who can oh whoops
154:55 - yeah I can vote here I've got I've got a
154:59 - vote just like everybody else all right
155:02 - we're gonna give this another minute or
155:07 - two
155:08 - the order curve with the hilbert curve
155:10 - ah okay is that a thing
155:26 - yeah so they're related yes but oh well
155:34 - there we go
155:35 - oh look at this oh well we're doing this
155:38 - look at that okay we're doing this it's
155:42 - been decided we're talking about the
155:44 - wheel has spoken
155:47 - [Music]
155:50 - yes that's what Spencer says that's why
155:54 - you should have allowed multiple options
155:55 - I know I know
155:56 - that's why Wow
156:04 - [Music]
156:10 - oh this is exciting
156:18 - [Music]
156:25 - [Music]
156:36 - can all blame Danny guy two for six for
156:40 - this alright doesn't seem like people
156:52 - are voting anymore no no no no no no
156:59 - only spit again has to get to 50% no one
157:03 - else has to get to 50% for involves the
157:04 - order curve is one it's too late the
157:09 - order curve has one but the reason why
157:13 - is I should have done two votes like
157:15 - spin again or one of these three so I'm
157:18 - adding all three of those up if they're
157:19 - greater than spinning again then I'm
157:20 - picking the one of those three that has
157:22 - the most votes so um we're good
157:28 - Z order curve / hilbert curve I'll look
157:30 - into it who knows might even have time
157:32 - to do this weekend this all might be
157:34 - moot but that's what will be the next
157:36 - coding in the Cabana video so I'm gonna
157:39 - play my goodbye song that I haven't
157:41 - equate a while I'm gonna play a little
157:45 - tic-tac-toe against my friend the
157:48 - tic-tac-toe player
157:51 - [Music]
157:54 - all right I'm gonna win if there's any
157:58 - last questions wait a second
158:05 - so hilbert curve three blue one brown
158:11 - yeah I would say so um
158:13 - violet saying posting that there is a
158:16 - look at these space-filling curves
158:18 - hilbert curve yeah so this is great if
158:22 - there is a three blue one Brown video oh
158:25 - and this is just a montage oh so
158:33 - satisfying okay I mean hello
158:53 - have I just totally ruined three blue
158:56 - bug Browns beautiful video here of
158:58 - space-filling curves you can't really
159:03 - hear the music right here quietly hold
159:06 - on let's fix this for a second sound
159:18 - [Music]
159:21 - yeah I mean we're doing this and then
159:26 - there's also a by heart video
159:30 - [Music]
159:37 - okay this I definitely want to do flow
159:40 - sing
159:42 - [Music]
159:44 - wow this is so ridiculously satisfying
159:53 - I'm very excited about this topic now
159:57 - [Music]
160:05 - [Music]
160:15 - this is awesome
160:16 - and then there was also a vie heart
160:19 - video on this someone will share it with
160:25 - me I don't want to find the wrong things
160:27 - by accident maybe you'd like to draw
160:32 - squiggles on your board in class somehow
160:34 - the wondering why not subscribe only not
160:50 - subscribe to by densely as possible in a
160:54 - single line that doesn't cross itself
160:55 - it's like the idea would be to sit down
160:58 - at the beginning of your leaves these
160:59 - are so good on the page and keep drawing
161:01 - a single line yeah vintage okay okay it
161:06 - has been decided this is gonna be a
161:08 - great topic I'm excited to give it a try
161:11 - and I will see you all next week
161:15 - sometime I hope I don't know what I'll
161:18 - be doing next week but hopefully I'll be
161:20 - getting this encoding at the Cabana any
161:22 - last questions before I go feel free to
161:25 - ask
161:26 - [Music]
161:31 - so Lars asks if you can suggest things
161:36 - so one of these days I'll have a better
161:39 - system for this and it's something that
161:40 - the community and is always thinking
161:42 - about at present the way to suggest a
161:45 - topic there are really two approaches
161:47 - well there's more there's the rainbow
161:49 - topics github repo where you can file an
161:50 - issue with an idea I will definitely see
161:52 - that and people in the community will
161:54 - see that you could join as a member our
161:57 - patron and then we discuss ideas in the
161:59 - slack Channel which I'm moving to
162:01 - probably a discord soon enough and then
162:04 - those are the two main ways you could
162:06 - also tweet me at Schiffman on Twitter
162:09 - well I read all the my mentions
162:18 - [Music]
162:23 - where is the full list of coding
162:26 - challenges in text formats asks 623 so
162:30 - that's a good question I don't know that
162:33 - there is a just a text form text text
162:36 - version of the list but all the coding
162:38 - challenges are on the website and you
162:40 - can find them here you can see me
162:41 - scrolling through them some of them are
162:43 - multi-part but here they all are on
162:45 - coding train comm decoding Korean home /
162:48 - coding challenges so Styx is asking if I
163:01 - have a current discord chat there is a
163:03 - Cunniff Ischl coding train discord that
163:05 - you can find enjoying I have a patron
163:08 - community that's on slack I'm thinking
163:10 - of kind of merging combining those but
163:13 - having a member only this core I don't
163:15 - know how to do it about to do it without
163:17 - that but yeah that's what they're
163:19 - currently I'm thinking that I'm going to
163:21 - move to having a discord for the member
163:23 - community and then there might be like
163:25 - one open channel on that that's just
163:27 - open and the rest would be private for
163:29 - members only I'm not really that's kind
163:31 - of my current thinking it's something
163:32 - I'm working with Sion
163:34 - [Music]
163:42 - Lucas asked can you make a search bar
163:44 - for the challenges that would be a nice
163:45 - feature for the website potentially I
163:46 - don't know that there's that many that
163:48 - you need to search there are quite a few
163:50 - of them I would say if you just look for
163:52 - if you do coding Train challenge and
163:55 - then type what you're looking for like
163:57 - you know if I typed fractal for example
163:59 - that's usually go you're gonna find it
164:02 - just with a Google search or your search
164:05 - engine of choice thank you Andrew for
164:12 - your nice comment Python series that
164:15 - would be nice
164:16 - only so much time in the day the week
164:18 - the month the year
164:23 - all right thank you everybody I'm going
164:26 - to switch over to the wallpaper where
164:29 - your name will pop up keep subscribing
164:32 - and leave this going for a bit why stop
164:35 - all the recording and upload all the
164:36 - footage have a wonderful holiday Jonas
164:40 - or yonas asks when is your next
164:42 - livestream let me answer that probably
164:46 - Thursday or Friday December is that 5th
164:52 - or 6th I'm not sure sometime next week I
164:56 - don't have a regular schedule right now
164:57 - I think in 2020 I'll be able to have a
164:59 - regular schedule and probably won't be
165:01 - on Fridays but stay tuned bye everybody
165:10 - [Music]
165:30 - [Music]
165:38 - [Music]
165:56 - I always forget this this star this star
167:03 - this star this star song never forget
167:05 - the Vista
167:27 - [Music]
167:49 - auto-tuned and the internet will fix
167:51 - that
168:00 - coordinates
168:05 - [Music]
168:18 - so I'm back in the dark just to say
168:21 - goodbye thanks everyone and I am about
168:24 - to click and stream yeah