00:02 - hello good morning welcome my name is
00:04 - Dan this is coding rainbow I believe
00:08 - that I'm streaming live now to three
00:10 - outputs um I'm going to check those in a
00:13 - second but I just want to mention for
00:14 - those of you who might be watching this
00:16 - at some point in the future as an
00:17 - archived video on YouTube check this
00:19 - video's description it will have links
00:21 - to the various time codes where certain
00:23 - things happen because now at least for
00:25 - the first five or 10 minutes is just
00:27 - going to be me getting set up
00:28 - introducing myself and checking to make
00:30 - sure everything's working and seeing in
00:32 - seeing what questions there are so I'm
00:34 - going to do that right now I'm first
00:36 - going to check and look at my uh YouTube
00:38 - preview I see that I'm Live on YouTube
00:41 - that's good uh are um so first of all
00:43 - those of you who are watching live
00:45 - please let me know uh YouTube chat is
00:48 - the place that I will check most often
00:50 - um let me know if the audio quality is
00:51 - okay if you can kind of see everything
00:53 - picture quality Etc I'll show you the
00:55 - whiteboard in a second to check the
00:56 - focus on that um I'm going to now check
01:01 - twitch uh I think maybe I am streaming
01:05 - live to Twitch looks like I twitch is
01:07 - actually working today it wasn't working
01:09 - last week when I did a live stream and
01:10 - then the third place that I am
01:12 - attempting to stream to three outputs
01:14 - all at once um making good use of this
01:17 - internet connection here is to uh
01:19 - Facebook so I'm going to check and I
01:22 - should be streaming to the Facebook to
01:24 - the Facebook uh coding rainbow page
01:28 - doesn't look like it is hold on I don't
01:30 - want to waste too much time on this um
01:33 - but I'm going to just check and see and
01:34 - look at my page over here uh I don't see
01:38 - it going anywhere but I you know what
01:40 - Facebook
01:42 - schake Facebook schook is what I have to
01:46 - say if anybody is seeing this or Got a
01:48 - notification on Facebook please let me
01:50 - know um I'm just going to check my
01:53 - output settings one last time uh claims
01:56 - to be
01:57 - going there but I'm just not not going
02:00 - to worry about it okay I'm going to hit
02:02 - record to record a now I am also
02:04 - recording this entire live stream to dis
02:07 - as an archived backup and I want to talk
02:10 - about a little bit about what's going to
02:11 - be happening in today's topic so let me
02:13 - go back and get the YouTube chat here I
02:15 - am live on Facebook apparently okay
02:18 - ah okay hold on uh mat uh who is uh
02:22 - helping me with uh organizing the
02:24 - YouTube channel and editing has reminded
02:26 - me of a very important point that I
02:28 - forgot I've got to check so I'm stop in
02:30 - the record to disk and I'm going to
02:32 - check my uh output settings this might
02:35 - the stream quality might be reduced for
02:36 - a moment I'm going to go to record to
02:38 - disk and I'm going to ah check
02:42 - settings um hold on everyone this is
02:45 - just going to take me a moment view
02:47 - details frames per second should be
02:51 - fixed strict constant bit rate key frame
02:55 - aligned um all right let me see very
02:58 - fast encoding
03:00 - default uh all right this should frames
03:03 - per second 30 let's try that let's see
03:06 - if that fixes it
03:09 - um profile main key frame okay all right
03:14 - uh so I'm going to see if this uh fixes
03:16 - it uh if not I will have to investigate
03:19 - that more later so now I'm recording to
03:21 - dis again okay um looking at the chat
03:24 - yeah forget about Facebook you know the
03:25 - only reason I don't know what the okay
03:28 - so I'm streaming the place that you
03:29 - should be watching this if you want to
03:31 - interact live is YouTube YouTube
03:34 - shiffman live um but you can wa the
03:36 - quality might be better you might have a
03:37 - preferred platform and then you could
03:39 - just watch it and enjoy it so let me say
03:41 - a few words about myself and the topics
03:44 - that I'll be addressing today in this
03:45 - particular live stream so my name is Dan
03:49 - last name is shiffman uh I have started
03:53 - this thing which is a live internet
03:57 - show lesson tutorial something um that
04:01 - I'm doing once or twice per week uh and
04:04 - I am demonstrating a variety of
04:06 - different programming Concepts and
04:07 - techniques covering topics from
04:09 - JavaScript to Java JavaScript using p5js
04:12 - Java using something called processing
04:14 - I'm covering other things like node I'm
04:16 - looking at computer vision with the
04:17 - connect I'm looking at other kinds of
04:19 - tools like git and GitHub so just a
04:21 - variety of Topics by request uh through
04:24 - different um means um and what I'm doing
04:29 - is I'm doing these live streams and
04:30 - that's what's happening right now
04:31 - today's will uh go for somewhere between
04:34 - one and a half to two hours I'm
04:37 - definitely last time it was almost four
04:38 - hours that's absolutely not going to
04:40 - happen today um and I have three topics
04:42 - that I intend to cover today the first
04:45 - being continuation of fractal trees I'm
04:47 - going to do a a tree in three dimensions
04:49 - in processing I'll show that to you the
04:51 - other thing I want to look at is been
04:53 - been requested several times is how to
04:54 - use GitHub pages to host a website and
04:57 - the third topic is I want to look at
04:59 - something called the super
05:00 - formula um so this is what I'll do live
05:03 - after this live session ends various
05:06 - pieces of it this hour and a half to two
05:07 - hours will be edited down into probably
05:09 - three uh short 10 to 20 minute video
05:12 - tutorials and those will be uploaded in
05:14 - archived on YouTube so you can enjoy
05:16 - this live uh if you're if you're
05:17 - watching this in the archive you can
05:18 - look in the description of this video
05:20 - where there will be links to various
05:21 - time codes or you can wait for those
05:23 - edited videos to come which usually come
05:25 - online on YouTube within a day or two um
05:28 - let me mention something else uh which
05:30 - has uh briefly been asked about um so I
05:35 - now have something called uh
05:37 - patreon uh
05:39 - patreon.com coding rainbow I'll show you
05:41 - this URL that's URL you can go to
05:43 - patreon.com coding rainbow this is 100%
05:48 - optional um what I'm using this patreon
05:51 - as a means for helping to fund this
05:54 - channel so I want to just talk about
05:56 - this for a
05:57 - second so uh I work full-time at New
06:01 - York University as a teacher um I um my
06:05 - job at New York University I teach at a
06:07 - program called ITP and I am paid to
06:10 - teach classes I am paid to do research
06:12 - and really my research in my mind is uh
06:15 - educational initiatives like this
06:16 - YouTube channel working on open source
06:19 - of uh software like p5js or processing
06:23 - um administering other types of
06:24 - community initiatives that the
06:25 - processing Foundation does those are the
06:27 - kinds of things I work on in addition to
06:28 - my teaching I'm also required to do a
06:30 - service to the university which means
06:32 - things like help plan a student show or
06:35 - serve on different committees and that
06:36 - sort of thing so um one thing that
06:39 - people who work at universities often do
06:41 - is they publish textbooks and those
06:43 - textbooks are sold and uh sometimes
06:46 - you'll get paid a royalty for a textbook
06:48 - that's sold so you can do that with the
06:50 - publishing company I have for ex uh for
06:52 - example I'm going to totally just ramble
06:54 - about this for a little bit you could
06:55 - skip ahead if you're watching this the
06:57 - archive so I have a book that I've
06:59 - published called nature of code one of
07:00 - the things that I'm interested in doing
07:02 - as part of my uh research and kind of
07:05 - practice is looking at new models for
07:08 - open source publishing so I don't
07:12 - necessarily mean free I mean free as an
07:14 - open but not uh but a but with a paid
07:16 - option so I have done this now with
07:19 - something called the nature of code this
07:20 - is a book that you can read entirely
07:23 - online for free I will go to chapter
07:24 - number two here is all of chapter number
07:27 - two here um I could make it bigger so
07:28 - you could see it if you want so the
07:30 - entire book is available online for free
07:32 - you can also buy a print book or you can
07:36 - uh if you want uh on the homepage of
07:38 - this website also get the PDF for
07:41 - whatever price you choose whether that
07:43 - be $0 you know or whatever so this is
07:45 - something that I experimented with a
07:47 - couple years ago and it was successful
07:49 - in my mind for what I wanted to do I get
07:51 - lots of people who email me and say oh
07:52 - my goodness I would have never been able
07:54 - to you know I'm a student and I can't
07:56 - you know spend money on this but I'm
07:57 - able to look at your book thank you so
07:58 - much and then I also get people being
08:00 - like I'm so glad you did this and I'm
08:01 - here's $10 um so it is a second source
08:06 - of income for me and it's also a nice uh
08:09 - thing I think to have open in the
08:11 - community um that so so to me you know
08:14 - one of the things I have this other book
08:15 - called learning processing which uh was
08:18 - done with a traditional publisher and if
08:20 - you could just find the PDF for free
08:21 - online anywhere through pirated means so
08:23 - I feel like if it's going to be
08:24 - available that way why not just make it
08:26 - available for free and people can pay if
08:27 - they want to or not pay um uh but it's
08:30 - out there so that's what I've did with
08:32 - book publishing that was my experiment
08:34 - there so now uh I started a few years
08:37 - ago I started making videos for my
08:40 - courses that I teach at NYU and so I
08:43 - just was doing that as a supplement for
08:44 - the students I would also put them
08:45 - online so other people could watch I was
08:48 - doing that on Vimeo for a long time
08:50 - telling a story this is me telling I
08:52 - don't I'm going to be done with this
08:53 - story soon but I want to give some
08:55 - background here so I should have like
08:57 - slides to show you this is not this is a
08:59 - stream of Consciousness not a prepared
09:01 - presentation so I
09:03 - um uh over the summer over just last
09:06 - summer even though I've been making
09:07 - these videos for three or four years
09:08 - just over last summer which is Summer of
09:10 - 2015 like almost a year ago I started
09:12 - putting these videos on YouTube and I
09:15 - noticed a new audience appearing on
09:17 - YouTube if I look in my analytics
09:18 - there's a lot more of an international
09:19 - audience discovering the videos um just
09:21 - more people in general so I experiment
09:24 - think I thought okay so what's I want to
09:26 - keep these videos online and for free
09:30 - but is there also a revenue stream
09:32 - involved what if someday I decide to
09:34 - quit working at NYU could I be a
09:36 - full-time person who sits in my my
09:38 - fantasy you know my cabin in the woods
09:41 - with a recording studio just making
09:43 - videos and talking to people on the
09:45 - internet so what are some uh you know
09:47 - I'm lucky enough that I can kind of have
09:49 - the flexibility to do this whether it
09:50 - makes money or not because it's
09:52 - supported as part of my quote unquote
09:53 - research but I think that what if what
09:56 - as an experiment and also possibly like
09:59 - maybe this is something that I do want
10:00 - to do what are some ways of funding this
10:03 - so I have experimented with YouTube ads
10:06 - currently the amount of views that my
10:08 - channel gets the income from Those ads
10:10 - is about between $100 and $200 per month
10:12 - that's what it is so another thing that
10:14 - I am now experimenting with which is
10:15 - totally optional is this thing called
10:17 - patreon so what patreon is is it's sort
10:20 - of an optional Subscription Service you
10:22 - pay a monthly fee to support this
10:25 - Channel and you know it's like a
10:27 - Kickstarter it's supposed to to come
10:29 - with some set of rewards so what I don't
10:32 - want to get into the business of is
10:34 - there are private videos that only the
10:37 - patreon subscribers can see so I want
10:38 - all of the content to always be open so
10:41 - um what you can if you're interested in
10:44 - what I have done is that I have and this
10:45 - is what I have so far through feedback
10:48 - and discussion made as the particular
10:50 - reward so what makes sense to me is for
10:53 - subscribers is to have maybe a forum
10:55 - where people can ask questions and
10:57 - discuss topics related to things things
10:59 - that are in my channel so I'm using
11:01 - something called slack which honestly I
11:03 - had never used before a week ago when I
11:05 - set this up and seems to be fairly
11:07 - successful um I'm also you know I'm
11:10 - always taking suggestions and questions
11:12 - from the audience and I will continue to
11:14 - do so but I am going to you know use
11:17 - that as a particular Forum to pull uh
11:20 - questions and topics out for the videos
11:23 - um and the other thing that some people
11:24 - have requested is having uh offline
11:26 - access to the video file so I haven't
11:28 - done the best job of organizing this so
11:30 - I'm going to attempt to do a better job
11:31 - but I currently have a Google drive
11:32 - folder with MP4 files of every video
11:35 - I've ever made and I'm sharing that link
11:37 - with people who subscribe to the patreon
11:39 - so um this is something I'm doing and
11:41 - you can see that currently this is now
11:44 - at $165 per month so in
11:47 - total um you know the channel right now
11:50 - is between $300 and $400 per month I um
11:53 - I do have expenses associated with doing
11:55 - this uh I have purchased lighting
11:57 - equipment I have purchased Computing
11:58 - equipment equipment uh I have hired uh I
12:01 - mentioned Mata who is helping me with uh
12:04 - organizing the channel and editing
12:05 - videos I also one thing I really want to
12:07 - do is close caption every single video
12:10 - um and I'm just going to use a paid
12:11 - service to do that so as soon as um I I
12:13 - reach a certain level of funding I'll
12:15 - start using that money to do that um and
12:18 - I'm cycling the cameras now and I expect
12:21 - uh also um that as uh time goes on I
12:25 - have more ideas and maybe want to get
12:26 - more of a this might be the permanent
12:28 - space I want to speak a little bit about
12:29 - that in a second but so all these things
12:32 - I'm just kind of giving this a try so
12:34 - your feedback is encouraged and and
12:37 - welcome that's my Spiel uh and I'm going
12:40 - to uh end the Spiel if you have any
12:43 - questions about that funding patreon
12:46 - open source publishing video making all
12:48 - that sort of stuff please that's them in
12:50 - the chat and I will answer those
12:51 - questions otherwise I'm going to start
12:52 - getting to today's actual topics sound
12:55 - good I hope it sounds good to you okay
12:59 - um I don't have any coffee or tea today
13:01 - it's much too hot I have some water I do
13:02 - have a fan going
13:05 - already and oh I'm going to close down
13:07 - the patreon okay close down these
13:10 - links so um let me speak how do
13:15 - you somebody in the chat will help
13:17 - answer how you spell shiel I don't know
13:19 - how to spell
13:21 - shiel I'm all I know is I'm a little
13:25 - Miga uh okay somebody can figure out how
13:27 - to spell that
13:29 - uh okay so let me first um get to my
13:32 - first topic of today ah I didn't even
13:34 - actually um so let me go to my YouTube
13:36 - channel for a second I have a new uh
13:38 - playlist uh called algorithmic
13:42 - botney and this playlist currently has
13:44 - three video tutorials on it one is just
13:47 - basic recursive algorithm to draw a
13:49 - fractal tree another is using that same
13:52 - algorithm to draw that tree again um but
13:57 - uh using all keeping all the branches
13:59 - and leaves of that tree in objects so as
14:02 - to be able to sort of imbue that tree
14:04 - with physics and animation that's video
14:06 - number two the third one is using a
14:08 - particular algorithm called an L system
14:12 - um to uh to generate the tree so I'm not
14:15 - going to go into those right now because
14:17 - those three video tutorials exist I did
14:19 - them in last week's live stream and
14:21 - there's a fourth one that I haven't yet
14:23 - uh U turned on into this playlist it's
14:25 - ready it's sitting in my channel on
14:27 - private right after I finished the
14:28 - session I'll turn it to public but it is
14:31 - called uh it's an algorithm called space
14:34 - colonization so I want to show you where
14:37 - this algorithm comes
14:38 - from uh and actually I think maybe I'm
14:42 - just going to go
14:44 - to
14:46 - uh um this particular uh video
14:50 - description hold on a second I'm going
14:52 - to get to this link uh this
14:55 - is let's see if this will work there we
14:58 - go so so there is a paper called
15:01 - modeling trees with a space colonization
15:03 - algorithm I just love that name because
15:06 - yeah because I'm like today's topic will
15:08 - be 3D space colonization it sounds like
15:11 - wouldn't it be amazing if this YouTube
15:12 - channel could somehow colonize space I
15:14 - mean someday it will because the aliens
15:16 - will come and take over and they'll all
15:18 - be watching my videos on the planet zorg
15:21 - typing on their Zord bot computers or
15:24 - whatever but uh for now uh space
15:27 - colonization doesn't refer to outer
15:29 - space colonization it refers to in a way
15:32 - you can think of the screen your canvas
15:34 - as a two-dimensional space or a
15:36 - three-dimensional space and this sort of
15:38 - Dre tree growing up and colonizing it so
15:41 - I want to um what I want to do is let me
15:43 - get the example so
15:46 - um I did this particular
15:49 - algorithm in I'm just checking the chat
15:52 - uh I'm trusting you guys that if
15:53 - anything goes wrong with audio video
15:56 - sound goes wonky the screen starts going
15:58 - going crazy if you're in the chat uh on
16:01 - YouTube please type something because I
16:03 - I'm I'm able to see it yeah volume
16:05 - conation is I think is is is a good way
16:08 - is a term that's relevant for 3D so what
16:10 - I want to do first is let me just open
16:13 - up
16:16 - um this particular processing
16:22 - example and I'm gonna I think I haven't
16:25 - looked at this since last week so
16:26 - hopefully this is going to I don't okay
16:28 - so with this is doing
16:31 - here and I'm going to minimize this oops
16:33 - I I've got some stuff running hold on a
16:35 - second here let me just I don't want
16:36 - this running in the background although
16:38 - will if I if I watch my YouTube video
16:40 - while I'm making a YouTube video will
16:41 - increase my views and watch time could
16:44 - be very exciting um okay so um so what I
16:48 - want to do excuse me uh for getting lost
16:51 - in my own thoughts for a second let me
16:52 - run this for a second so you can see
16:55 - what's happening here Loosely so the way
16:57 - that space colonization works is you
17:00 - fill a space and right now in two
17:02 - Dimensions with points and then you
17:04 - start from somewhere it could be from
17:06 - the bottom from the center from outside
17:08 - of it and you start to use all of those
17:12 - points as attraction points so you have
17:14 - this kind of single Branch moving and
17:16 - it's kind of attracted to any of those
17:18 - points that it's close to and as there
17:20 - are more points it will Branch off um it
17:24 - the so the C okay but here's the thing
17:28 - this is what always get confused because
17:30 - the way that this looks it looks like
17:32 - the way that we're solving this it looks
17:34 - so much like the way that we're solving
17:35 - this is we have this thing moving from
17:37 - the bottom and being attracted to all
17:38 - these points that's the visual result
17:41 - but the actual algorithm works in the
17:43 - reverse what I'm actually doing is
17:45 - iterating all over all those points and
17:47 - saying are any of these points near to
17:50 - an existing segment and if they are pull
17:53 - another segment towards me so in that
17:57 - sense U there could could be multiple uh
18:00 - multiple segments start getting added we
18:01 - just start with a single segment at the
18:03 - bottom and then a bunch of points to
18:05 - pull a new segment and a bunch of points
18:07 - over here pull another new segment let
18:08 - me try to um draw this a little bit over
18:11 - here and you guys tell me if this makes
18:12 - sense so in other words um let me uh I'm
18:17 - just going to make a very simple
18:18 - demonstration of it like this so let's
18:20 - say there's only four
18:23 - points and what I do is I start with a
18:26 - single segment so this is the first
18:29 - segment so essentially what I do is I
18:32 - iterate over every single leaf every
18:35 - single one of these seed points in a way
18:37 - and I say okay here's a seed point is it
18:41 - in between some minimum
18:44 - distance and some maximum
18:47 - distance minimum and maximum is it in
18:50 - between some minimum and maximum
18:52 - distance if it is pull a segment Out
18:57 - close to it
19:01 - and then this one is it between some
19:03 - minimum and some Maximum if it is pull a
19:06 - segment Out close to
19:09 - it now the next iteration this is now no
19:14 - longer um this is now uh
19:18 - within hold on like this is so hard so
19:21 - hold on I I it makes sense to me in my
19:24 - head but you draw these diagrams over
19:25 - and over again sometimes I get a little
19:27 - confused so let's just do it with for a
19:30 - second
19:31 - here let's do it with one point for a
19:33 - second here is the segment and here is
19:36 - the leaf I want to draw the leaf as an
19:38 - open circle and the segment as a uh with
19:42 - closed
19:44 - dots so what I'm saying is again let me
19:47 - say that again this is actually in
19:49 - between the minimum and
19:51 - maximum so I would another segment would
19:54 - get pulled towards it
19:57 - now
20:00 - now the next iteration I look for is it
20:04 - between the minimum and the maximum it
20:07 - is
20:08 - not so it does no so this ends right
20:11 - here so if this were the only Leaf it
20:13 - would end but you know if there were
20:14 - another Leaf here then suddenly this one
20:16 - might be in between that and then this
20:17 - would get pulled this way so these
20:20 - branches start getting just pulled
20:22 - around segments get pulled around and
20:24 - once they get close to a given leaf that
20:26 - leaf is kind of done and gets deleted
20:28 - from the system and obviously this is
20:30 - just with like a couple but if there are
20:32 - all sorts of things everywhere things
20:34 - start like branching around you know
20:36 - like this okay so this is the idea I'm
20:38 - going to look at the chat to see if that
20:40 - and so I could run this again and you
20:42 - can kind of have a sense of maybe this
20:44 - is happening every iteration so I see I
20:49 - don't I don't I miss the whole I I miss
20:51 - maybe everything in the chat Oliver WR I
20:54 - just noticed is writing a comment I
20:55 - don't think that happens in one
20:56 - iteration so let me explain to you what
20:58 - happens every single iteration every
21:01 - single
21:02 - iteration for each Leaf every single
21:05 - branch is checked if the leaf finds a
21:08 - branch that it is too close to it's done
21:12 - and I say branch and segment I'm using
21:14 - those words interchangeably branches are
21:16 - segments that are
21:18 - growing if if the leaf is close to a
21:21 - given Branch then a new segment is added
21:24 - pulling towards it um but that new seg M
21:28 - hold on let's see what I'm here's the
21:30 - tricky
21:32 - thing um that new segment could also be
21:35 - close to other leaves and those forces
21:37 - that are pulling get averag together for
21:40 - what that segment actually go does so we
21:42 - can see that happening here boy this is
21:44 - this is like one of the hard this by the
21:46 - way I had like nightmares between last
21:48 - week and this week about like how
21:50 - confusing I was in this I Haven that's
21:52 - why I haven't that video this space
21:54 - colonization video is 45 minutes long
21:55 - the one where I build this from scratch
21:57 - so let me just show this to you so this
22:00 - is where I'm looking in processing this
22:03 - is me looking at every single leaf so
22:06 - for every single leaf I need to find
22:07 - what branch is closest to it and so I
22:10 - start looking at all the branches if a
22:13 - particular
22:15 - branch is within that minimum distance
22:18 - that leaf is done so we're done we get
22:20 - out of this Loop so a leaf can't act on
22:22 - other branches if it's already close to
22:24 - one if that particular branch is really
22:27 - far it's a
22:28 - otherwise we try to find the closest one
22:30 - and that closest Branch that's get then
22:32 - gets a force added to it from which
22:34 - it'll make another segment attached to
22:37 - it uh
22:39 - okay um yeah so actually so I forgot I
22:42 - did this last week at the
22:45 - end um Oliver uh in the chat Oliver
22:48 - Wright was extreme I want to just thank
22:50 - Oliver again in the YouTube chat was
22:52 - extremely helpful last week when I tried
22:55 - to build this from scratch cuz I kept
22:56 - having bugs and getting things wrong and
22:57 - and he was typing in wonderful helpful
23:00 - suggestions into the chat which fix
23:01 - things so um so um so what I want to do
23:05 - so so that's the sort of does anybody
23:07 - have any questions I'm going to give you
23:08 - guys a minute here to think if you have
23:11 - any questions about this particular
23:13 - existing example because what I want to
23:15 - do is now take this example and move it
23:17 - into
23:19 - 3D so I'm going to give and I already
23:22 - did this last week but I'm going to do
23:24 - it again let me while I'm waiting to see
23:26 - if you have questions I'm going to pull
23:27 - up that one and just see what it looks
23:31 - like
23:35 - right so this is what I've got so
23:38 - far
23:40 - um using py cam I'm trying to think if
23:43 - there is a better anything that I could
23:46 - do here to make the rendering a little
23:47 - bit
23:49 - nicer uh when I start to build it from
23:52 - scratch
23:53 - again oh yeah a lot of a lot of people
23:56 - have asked um so I'm getting a bunch of
23:58 - questions in the chat which I'll answer
24:00 - sort of briefly randomly before I go
24:01 - onto this tutorial um a lot of people
24:03 - have asked for mandal brat set as a
24:05 - challenge I I absolutely would be happy
24:07 - to do that um I will check in the slack
24:09 - group uh if people are interested in
24:11 - that and sort of where I have a poll
24:12 - running um and then I'm also been asked
24:15 - if I'm planning new videos on genetic
24:17 - algorithm and artificial neural networks
24:19 - I am planning but I've kind of got this
24:22 - list of things to get to um the My Caden
24:25 - course which is an online course that's
24:28 - out and running uh that I did with a
24:29 - partner with a company called Caden a
24:32 - session five is all about genetic
24:34 - algorithms so I'm going to wait for that
24:36 - to come out um and see how accessible
24:38 - that is to people and if it's uh not I
24:41 - might just redo some of those videos on
24:43 - YouTube um um but yeah please keep
24:46 - asking about that okay uh uh Razer in
24:49 - the chat asked if I'm American I am
24:51 - American I live in New York City ah I
24:53 - didn't mention uh just mention this now
24:56 - that uh I am doing these videos from uh
24:59 - the school for poetic computation um if
25:02 - you're interested in learning about the
25:03 - school for poetic computation please go
25:05 - to sfpc doio uh this space is completely
25:10 - empty right now there's nobody here but
25:12 - me but starting tomorrow they have a
25:13 - 10-week program with about 12 students
25:16 - learning and creating lots of amazing
25:18 - interesting art projects so there'll be
25:19 - lots of people in this space so maybe
25:21 - I'll bring some people in to show their
25:22 - work or that type of thing as well so
25:24 - that that should be interesting oh yes
25:26 - Branch thick
25:28 - okay all right so let's
25:31 - um uh branches have a preference to go
25:34 - up yes that would look good so you know
25:38 - on the one hand I want to make this look
25:39 - better on the other hand I just want to
25:40 - get the sort of basic drop Deads version
25:43 - simple version of the algorithm out
25:45 - there and then people can actually put
25:46 - their own design ideas on it but um let
25:49 - me think about Branch thickness for a
25:51 - second because that should be pretty
25:54 - easy to do the tree where I am drawing
26:00 - it gets these lines with a particular
26:05 - stroke so it seems to me that the
26:08 - branches are being added over time kind
26:10 - of from like bottom to top or from
26:13 - Center to out so and they get appended
26:15 - to the array so the later in they are in
26:17 - the array the less thick they should be
26:19 - so this should be something I should be
26:20 - able to add which I'll um so um the
26:25 - total branches is branches. size and I
26:30 - should be able to do something like say
26:31 - the stroke weight equals map uh oh I
26:35 - need
26:36 - to so I'm using this enhanced Loop but
26:39 - let me do it this way uh let me uh do
26:45 - this um branches.
26:48 - size uh and then I'm going to say a
26:51 - branch b equals branches. Getti so I'm
26:54 - just looping with I right now because
26:56 - what I want to do do is map
26:59 - I so if you're if you're at the
27:02 - beginning you're very thick so the I
27:05 - starts from zero and goes to the length
27:08 - of this array list and if you're at the
27:10 - beginning maybe you have a stroke weight
27:11 - of 10 and if you're at the end maybe you
27:13 - have a stroke weight of one let's see
27:15 - how that
27:18 - works now I don't know if the stroke
27:21 - weight really works in
27:24 - 3D let's um let's try to make this much
27:28 - more
27:34 - extreme I don't see this really working
27:37 - um let me go to the 2D
27:41 - one for a second just to like see if
27:43 - this idea
27:45 - works I think the thickness isn't just
27:47 - determined by how early it is oh whoops
27:51 - what did I do did I miss
27:53 - something oh my goodness I didn't even
27:55 - add it in there uh I'm missing some
27:58 - really obvious things sorry everybody
28:00 - thank you I just made up the variable
28:02 - didn't add it in no wonder it didn't do
28:05 - anything
28:07 - you're yeah it kind of did something but
28:10 - you're right that oh well see the
28:13 - branches keep getting added and added
28:16 - and also by the way using Strokes in
28:19 - 3D
28:21 - um
28:23 - is
28:25 - uh like kind of uh not the best you can
28:28 - see there's some sort of flaws in the
28:29 - rendering all right so how do I want to
28:32 - do this I need to
28:34 - um stretch yeah so um so uh wreck makes
28:39 - a suggestion instead of lines what about
28:41 - stretch cylinders 100% I should
28:43 - absolutely do that I'm just being kind
28:45 - of lazy about it and I didn't feel like
28:49 - I'm kind of I have a secret to confess
28:52 - I'm not really a 3D person so I'm not
28:55 - really prepared for this 3D stuff I I I
28:58 - know I could do it I feel confident I
29:00 - could do it but I I don't want to spend
29:01 - all day figuring out elaborate 3D
29:03 - geometry so I'm just kind of using
29:05 - stroke and stroke weight as a trick and
29:07 - then I what I would love is for people
29:09 - who would then take this example and do
29:10 - some more thoughtful 3D stuff with it
29:12 - but I would really like to figure out
29:15 - this thickness thing let's go back to
29:17 - before I before I actually start the 3D
29:19 - tutorial let's go back to the 2D version
29:22 - so um so I think um just let me go let
29:26 - me
29:28 - uh let me grab this for a second oops
29:33 - here
29:35 - and uh I'm just going to do this in 2D
29:38 - because it'll be much easier to
29:40 - see and oops and I
29:44 - think oh I forgot the if parent is
29:48 - null
29:52 - uh uh so this is it happening and you
29:55 - can see that no that seems about right
29:58 - now what's going to happen is they're
30:00 - just going to keep getting no that
30:02 - seemed to do the job so I think my
30:04 - instincts were right they are getting
30:06 - thicker over time because I must have
30:09 - forgotten there must be something that I
30:11 - need to add to the code to stop adding
30:13 - branches over and over again at the
30:15 - end so um so let's take a look at this
30:21 - right where is my core algorithm here
30:23 - let's um let's print uh let's in in tree
30:28 - there is this grow function let's print
30:31 - line
30:34 - branches do size I think I'm adding
30:37 - branches over and over again at the end
30:39 - so you can see here right now this is
30:41 - the total number of branches in my
30:43 - system and we look at this
30:47 - growing right let's look at these
30:49 - together we should see it like kind of
30:52 - like it should be done you know what's
30:54 - happening I think some of these little
30:56 - flaws are causing there to be leaves
31:00 - that never get they're like these two
31:02 - leaves are on perfect equidistant sides
31:05 - of a branch so they like never get
31:07 - removed from the
31:09 - system H it continually grows the
31:13 - equidistant problem we've got to solve
31:14 - that equidistant
31:16 - problem okay let's look and think of
31:18 - where we could where we could figure out
31:20 - to solve
31:22 - that
31:23 - um so where do I remove the whole thing
31:27 - is that remove branches need to be
31:31 - removed it can't possibly be as simple
31:34 - as this right I think it might be of
31:37 - just like checking if it's it can't
31:39 - possibly be that simple right no because
31:41 - that just is like making a Le smaller
31:43 - minimum
31:44 - distance I could add small Randomness to
31:47 - the direction o that's a really good
31:50 - idea Oliver is like my savior so let's
31:55 - do that what if we add
31:57 - uh um I love this idea okay so where
32:02 - would be a good place to do that so here
32:04 - is where um so I could just say
32:08 - something like P Vector R is um random
32:14 - equals P vector. random 2D and then I
32:19 - could set the magnitude of that Vector
32:21 - is something kind of small like 0.01 so
32:25 - it's a tiny little thing
32:27 - and then I could say
32:29 - closest
32:31 - d. add Rand is just having a little bit
32:35 - of random Direction going to fix that
32:37 - equidistant problem let's
32:41 - see I think I still have
32:46 - it
32:50 - uh uh okay so let's what if I make this
32:55 - kind of bigger
33:01 - now I think it's eating up everything
33:04 - for sure okay there we go so that fixed
33:07 - it interesting just adding random
33:09 - Direction but did I lose the sort of
33:13 - purity of this
33:14 - fractal I'm not sure but so this worked
33:17 - thickness wise which is nice to see um
33:21 - and let's so what if I say like what's
33:24 - the sort of like minimum amount let's
33:25 - try 0 2
33:29 - yeah that looks like it's eating it up
33:31 - oh no I still yeah it gets it
33:35 - eventually yeah so that worked let's see
33:38 - if I can do
33:39 - 01 I wonder if there's a time that I
33:42 - could Target adding Randomness more
33:47 - specifically oh the normalization is
33:49 - broken now but don't I normalize it
33:51 - again I can just I can just normalize it
33:54 - again or I can do this before I
33:55 - normalize it
33:57 - let's do that I should do this before I
34:00 - normalize it so the normalization
34:01 - doesn't get
34:03 - broken uh okay so that didn't appear
34:06 - strong
34:08 - enough there's still some places like
34:11 - where I have the equidistant problem
34:13 - like there so let's make it a little bit
34:18 - stronger to see if that does it yeah
34:22 - that seems to be doing
34:24 - it I don't see any more
34:27 - more yep we can see it finished at
34:31 - 3577 and you can see the thickness thing
34:33 - is working so they're thicker at the
34:36 - bottom and less thick at the top um but
34:40 - it's this isn't really great to be
34:42 - honest
34:45 - because you know there's probably like
34:47 - these should probably match more I don't
34:50 - know maybe it's reasonable you know this
34:52 - all sort of depends on what exactly
34:53 - you're trying to do but it's it's a one
34:55 - strategy you could come up with other
34:56 - strategy IES um ad is still after
35:00 - normalize oh thank
35:04 - you
35:06 - uh boy I'm really I'm really thank
35:10 - you
35:12 - uh let's see if this at0 five are still
35:15 - pretty
35:21 - good you
35:25 - know let's make it a little what if I
35:28 - give it like a completely random
35:37 - direction that doesn't solve it as
35:41 - well
35:43 - uh do I make it much
35:46 - stronger well that does
35:50 - it
35:52 - I not so bad it's not so bad to like add
35:55 - like a kind of strong r random Force to
35:57 - it it still has kind of a nice quality
35:59 - to it
36:01 - okay um okay so uh I think I'm far
36:05 - enough and I'm going to start I've got
36:07 - there's uh 79 people watching here which
36:09 - is great I'm just going to check twitch
36:11 - to see if there's anybody watching in
36:12 - twitch 10 people twitch definitely
36:14 - doesn't have as as large an audience
36:16 - here as YouTube and I'm just going to
36:18 - sort of check the Facebook thing
36:22 - uh I'm going to uh okay Facebook is
36:27 - working hold on I'm just going to do
36:28 - something silly actually never mind
36:32 - um uh okay
36:38 - um uh all right so sorry everybody I'm
36:41 - kind of okay okay so let me recap where
36:43 - I am for those for people who are maybe
36:45 - joining late so I have a
36:50 - um YouTube uh
36:55 - whoops
36:57 - uh I have a YouTube
37:01 - playlist uh called algorithmic
37:05 - botany which has uh three uh videos
37:08 - currently in it recursive fractal tree
37:10 - the same thing but with objects and then
37:12 - L system video what I am going to add to
37:16 - it which uh is oops
37:20 - let's is this other algorithm called
37:23 - space
37:24 - colonization um so you can see what
37:27 - space colonization looks like here so
37:30 - I'm going to um I already went through
37:32 - this particular piece of code um I'm
37:34 - going to uh do about a 10 or 15 minute
37:38 - tutorial on
37:41 - um doing this now in three dimensions
37:45 - okay so that's what I'm about to do uh
37:48 - and I am going
37:51 - to
37:53 - uh I'm getting the chat here so I can
37:55 - see it uh and I'm going to get myself
37:58 - set up for that so what I'm going to do
38:00 - here
38:02 - is first of all I'm going to
38:06 - undo I want to get this back to what it
38:09 - was without the thickness
38:15 - thing let's see what I've got here okay
38:18 - so that's without the thickness and with
38:20 - this sort of equidistant
38:23 - problem
38:25 - um
38:27 - and I'm save
38:29 - this and I'm going to this is this
38:34 - one this is the 3D one okay I'm going to
38:37 - close
38:40 - this and uh this is the paper I am going
38:49 - to have this paper uh as my image
38:53 - reference it has by the way this is a
38:55 - nice diagram I think which helps
38:58 - illustrate what's going on um that I
39:01 - would recommend probably better than my
39:03 - kind of crummy
39:05 - diagrams uh and um and then I'm GNA here
39:10 - so this
39:11 - is so a thickness is probably discussed
39:13 - somewhere in this paper and I did read
39:15 - this paper and that was last week I
39:16 - don't remember it but this is like the
39:18 - basic idea of uh what I'm trying to
39:21 - create so I'm going to leave this open
39:23 - here as kind of my starting image uh and
39:26 - then and let me
39:29 - um make this is the 2D version of it
39:33 - oops and in
39:35 - processing I'm going to have
39:37 - this running and you know what I'm going
39:39 - to do just gonna um have it start from
39:42 - the
39:43 - center
39:49 - um uh so hold on I want to start the
39:52 - tree from the
39:55 - center
40:00 - okay so I'm going to do it this way just
40:03 - as a kind of a way of looking at
40:07 - it uh okay um so I think I am basically
40:12 - ready let me zoom in on
40:17 - this and
40:24 - uh I'm going to cycle the
40:32 - cameras and I going
40:35 - to erase the Whiteboard
40:42 - here and hold on I'm just about ready to
40:45 - start this particular
40:48 - segment I'm looking for
40:55 - this
41:07 - um just erasing the Whiteboard over here
41:09 - I didn't switch
41:11 - the camera view sorry about that all
41:14 - right how's everybody doing everybody
41:16 - feel good about this ready for this I
41:17 - think this hopefully won't be famous
41:19 - last words that
41:21 - long
41:23 - um
41:25 - I oh it's raining in Paris it is hot and
41:28 - sunny in New York this is not the best
41:31 - space to be when it's hot because I have
41:33 - these Bright Lights which generate heat
41:35 - I've got a fan going but but there it is
41:38 - okay um here we go everybody I've got my
41:41 - by the way this is the processing
41:42 - classic t-shirt this is the original
41:44 - first processing t-shirt I feel like we
41:46 - should do we should make these again I I
41:49 - saw people have requested coting rainbow
41:50 - t-shirts and stickers which I somebody
41:52 - will remind me I will uh uh I can try to
41:55 - make those available
41:57 - um okay
41:59 - um let's see uh here's this pen here's
42:04 - my tree and I am ready okay here we go
42:09 - everybody I cycled the cameras didn't I
42:13 - yeah raining in London raining in
42:15 - Germany ah I got a lot of European
42:17 - viewers today that's great what what
42:18 - it's like s s in the evening I guess so
42:20 - this is a kind of good time you're all
42:21 - at home you're like got your
42:23 - popcorn watching me br which is you
42:28 - know I'm very very happy that you're
42:30 - here okay uh okay here we
42:36 - go hello this video is a followup on my
42:39 - previous space colonization video now I
42:42 - wish I was talking about outer space
42:44 - colonization I am not I'm talking about
42:46 - an algorithm called space colonization
42:48 - which is outlined in this uh PDF paper
42:51 - here that you can find a link to in this
42:53 - video's description and it is possible
42:55 - with this algorithm to generate trees
42:57 - like this so last week time doesn't
43:01 - matter here but in my previous video I
43:03 - made a version of this algorithm I
43:06 - actually did it in JavaScript um using a
43:09 - JavaScript library called p5js but I
43:11 - have this same uh code running now in
43:14 - processing and I switched over to
43:16 - processing because the point of this
43:18 - video is to extend this algorithm into
43:20 - 3D so I want to take and let me run it
43:22 - here for you I want to take this idea
43:24 - which is using this branch algorithm
43:26 - come on and run please code using this
43:29 - branching algorithm uh to take this from
43:32 - a 2d world to 3D so let's let's talk
43:35 - about how this has to happen so first
43:38 - what's the what's the basic idea for
43:41 - this um what's the basic idea behind
43:43 - this algorithm so the idea of this
43:45 - algorithm is that you have a canvas and
43:48 - you fill this canvas with points and
43:50 - these points are known as
43:54 - leaves so maybe you fill this this
43:56 - canvas with a bunch of points and then
43:57 - maybe you start at the bottom and you
43:59 - create a branch segment and you keep
44:01 - growing Branch segments all the way up
44:04 - until you get close enough to a
44:06 - particular to some of these leaves then
44:09 - what the algorithm does is it says okay
44:12 - any Leaf that's close to this particular
44:14 - Branch segment pull a force have it
44:18 - become an attraction Force so maybe this
44:20 - one and this one are close so a new
44:22 - segment is made and then this one and
44:24 - this one and this one are close to this
44:26 - one so a new segment is made here but
44:28 - this one is also close to this one um so
44:30 - another new segment is made so all of
44:32 - these Leaf points become these points of
44:34 - attraction that start just pulling out
44:37 - these branches and you can see that
44:38 - happen I'm going to come back to the
44:40 - code and I'm going to show I'm gonna I'm
44:42 - going to change here I'm gonna I'm going
44:44 - to in setup I'm going to say frame rate
44:47 - uh I'm going to just say five so frame
44:49 - five frames per second and we can watch
44:51 - this happen a bit more
44:54 - closely so you can see here these
44:57 - branches are getting pulled and pulled
44:59 - towards all of these points and as they
45:02 - get pulled towards these points those
45:04 - leaves disappear now there's a couple
45:06 - things I want to mention about this I'm
45:08 - kind of recapping my previous video but
45:09 - I think it's worth it before we move to
45:11 - 3D to make sure we understand all the
45:13 - pieces here so number one I just want to
45:15 - kind of recap this particular program uh
45:18 - has a set of objects it has a leaf
45:22 - object that are these seed points here
45:25 - it has a branch
45:27 - object uh the branch object being these
45:31 - particular segments all of these
45:33 - segments and then it also has a tree
45:35 - object and the tree object keeps track
45:39 - of an array of Branch objects and an
45:42 - array of leaf objects so the algorithm
45:45 - goes something like for every leaf see
45:49 - what branches are within a minimum and
45:51 - maximum distance and add a force to
45:53 - those branches and then all and then
45:55 - have all those branches grow a new
45:57 - Branch off of them with the direction of
45:59 - that Force so the tree itself is
46:02 - iterating through all the leaves then uh
46:04 - applying forces to all the branches then
46:06 - making new Branch segments and as leaves
46:09 - are close enough to a given Branch they
46:11 - get deleted so this leads me to a to an
46:13 - issue though that I feel like is worth
46:15 - resolving in this example before we move
46:16 - on look at this there are some leaves
46:20 - that just won't go away they're there
46:23 - they're stuck there I can find another
46:25 - one
46:26 - uh over here is another one the reason
46:28 - why it's stuck there is that they're
46:30 - magically somehow exactly equidistant
46:34 - from a particular Branch segment so the
46:36 - force can never go towards one to get a
46:39 - little bit closer um and then be removed
46:41 - from the system so I don't know I'm
46:43 - looking at you internet watching this
46:45 - video to come up with a a a solutions
46:48 - for this problem I had a wonderful
46:50 - solution uh suggested by Oliver in the
46:52 - chat recently um which is just to give
46:55 - each branch a little bit of extra random
46:58 - Force to it so that every once in a
47:00 - while as it's going there it'll randomly
47:01 - turn and in that case uh it'll
47:04 - eventually find these branches uh these
47:06 - leaves and get removed so let's add that
47:08 - here and I'm going to go uh to the part
47:12 - of the
47:14 - algorithm uh
47:16 - where uh we add those particular
47:21 - forces and
47:24 - actually what I want to do I want to do
47:26 - that I'm going to do that in a different
47:27 - place than I did it before I was
47:29 - practicing this so this is where those
47:31 - new branches get added and this is where
47:35 - the Branch's Direction gets averaged
47:37 - based on how many forces were applied to
47:39 - it so what I want to do right here I'm
47:42 - just going to try making
47:44 - another
47:47 - random
47:49 - vector and I'm going to say I'm going to
47:52 - add that so right before the Vector is
47:56 - about to be um right before the new
47:59 - branch is about to be born I'm just
48:01 - going to give it a little bit of random
48:02 - motion to it to see if it can like if
48:05 - when it's getting stuck if it can skew
48:07 - towards one of those leaves so let's run
48:08 - this
48:11 - again oh and I have the frame rate at
48:14 - five so let me cancel that
48:17 - out let's run this again come on I don't
48:20 - know why my command R isn't work oh I'm
48:21 - in debug mode no wonder a so oh that's
48:25 - way too much look at that that kind of
48:26 - ruined
48:28 - it it did something but it's kind of
48:30 - like a crazy now so I probably shouldn't
48:32 - have added it
48:33 - here um okay so let me uh let me go back
48:38 - here let's so let's try to make that not
48:40 - so
48:42 - strong let's make it really really weak
48:44 - so I'm going to set its magnitude to uh
48:47 - something much much
48:49 - weaker and you can see maybe that wasn't
48:51 - strong enough so it's still like I've
48:53 - got these equidistance spots there so
48:56 - let's make it
48:58 - 0.1 that seemed to do the trick ah
49:00 - there's a couple spots that are still
49:02 - stuck there let's try 0.
49:06 - five it's a little less kind of like
49:08 - curvy and fractally but it did work so
49:11 - I'm going to just like try
49:13 - three that looks pretty good so I think
49:16 - I settled on0 three as kind of my number
49:18 - that I want to do so you can see I at
49:19 - least have now resolved that problem the
49:21 - reason why I wanted to resolve that
49:23 - problem is I'm going to add something I
49:25 - I don't want to be adding branches
49:27 - infinitely um and the other thing I want
49:29 - to do quickly to this before I move into
49:31 - 3D is uh is show you let's do something
49:33 - that's changed the thickness of these
49:35 - branches so every Branch right now has a
49:37 - stroke weight of one but what if
49:39 - branches that are made earlier at the
49:41 - center are thicker than ones that are at
49:43 - the edge so a way that I can do that is
49:46 - right here this is where I'm actually
49:48 - drawing a line for every single Branch
49:51 - so every single Branch here is just a
49:53 - line between the um
49:56 - the Branch's position and its parents
49:58 - position connecting the one that's
49:59 - connected to it to itself so one thing
50:02 - I'm going to do here is just change this
50:03 - Loop to a regular
50:06 - Loop using index I uh to
50:10 - branches do
50:13 - size the reason what I the reason why I
50:16 - want to do that
50:19 - is what I want to do now is I want to
50:22 - say each branch is going to have a
50:24 - stroke weight so for example if I say
50:25 - stroke weight
50:27 - 10 you can see all the branches are
50:30 - really thick they have a thickness now
50:31 - of 10 pixels but what if I were to
50:33 - create a
50:34 - variable and map its index so the the
50:39 - the older branches are added at the
50:41 - beginning of the array so its index goes
50:43 - between zero and branches.
50:47 - size and have that go so the earlier
50:49 - ones have a thickness of 10 and the
50:51 - later ones at the end have a thickness
50:53 - of one and what if that is its Branch
50:56 - thickness you can now see we've got
50:58 - something here where the earlier they
51:00 - are at the beginning the thicker they
51:01 - are the more at the outside the less
51:03 - thick they are and I could like mess
51:05 - around with this mapping um I could you
51:08 - know just start with five or six I could
51:10 - actually go down to zero to get them
51:11 - like much skinnier even at the end which
51:13 - is kind of nice so I think this looks
51:14 - kind of nice and you can imagine what
51:17 - how this might have what kind of effect
51:19 - this might have depending on how you're
51:22 - seeding the points and where you're
51:23 - starting the root of the tree okay so I
51:27 - somehow said I this was a video All
51:29 - About 3D and I probably spent 10 minutes
51:33 - here just getting ready for that but
51:35 - we've recapped the algorithm and we've
51:37 - also made it a little bit better by
51:39 - adding thickness here and solved a
51:41 - particular problem and now we can
51:43 - actually do something that I believe
51:45 - will be quite simple uh in turning this
51:47 - into 3D so let's think about this so
51:51 - this is what's happening in a
51:52 - two-dimensional plane I create
51:55 - in the canvas I just created random Leaf
51:59 - points
52:00 - anywhere so what I want to do instead in
52:03 - 3D is I want to think of the canvas not
52:08 - as um not as a flat plane but as a
52:11 - sphere so I'm going to create random
52:14 - points all inside a sphere and then I'm
52:16 - going to have my first Branch the root
52:18 - of the tree in the center of the sphere
52:21 - again if you really want to create a
52:23 - tree what you might do is create some
52:25 - kind of like ellipsoid in 3D seed all
52:28 - the points start the root at the bottom
52:29 - but I'm just going to do something
52:31 - simple just to get this algorithm
52:32 - working and then that's up to you to be
52:34 - creative to try to create a different
52:35 - set of seed points with a different
52:37 - starting Branch okay so let's come back
52:39 - over here and see if we can do this okay
52:41 - so the first thing I need to do if I'm
52:42 - going to move into
52:43 - 3D is just add p3d oh I'm not here is
52:48 - just add inside p3d so what did I just
52:50 - do I just added p3d so I want to so now
52:54 - it's rendering in 3D I can actually just
52:55 - run this and see like hey same thing but
52:59 - it's actually in 3D now just so we can
53:01 - like get a sense of the camera a little
53:04 - bit better I'm going to add a library
53:06 - called peyam so I've already installed
53:09 - this Library um if you haven't installed
53:11 - this Library go to add Library under
53:14 - sketch import library but I've already
53:16 - installed pcam so I'm just going to
53:17 - click
53:18 - import and uh all I need is this import
53:22 - statement at the top then I need to
53:24 - create a
53:26 - pey cam object I'm going to say cam
53:30 - equals new peyam and I have to say this
53:33 - so py cam is this library that just
53:35 - automatically like makes this mouse
53:37 - interactive camera so you can spin
53:38 - around and zoom in and out of your scene
53:40 - um in a very default way and what I need
53:43 - to do I so I need to say this referring
53:45 - to this sketch is where I want this
53:46 - camera to take over and then I also need
53:48 - to give it a um a z value like how far
53:53 - away do I want to be looking at it so
53:54 - I'm just going to say say 100 for right
53:56 - now um and then I'm going to run this
53:59 - and sort of see what happens so I can't
54:01 - seem to find like oh there it is so I'm
54:04 - off one of the things that py cam does
54:06 - for you is it makes z00 the center of
54:08 - the window as opposed to the top left so
54:11 - here in my tree where I'm creating the
54:15 - leaves um I actually want to create them
54:18 - I want to create well first of all I
54:19 - want to create the
54:21 - root at 0
54:23 - 0 and then where I'm creating the leaves
54:27 - uh sorry I want to
54:29 - make the leaves not offset by the center
54:33 - of the window anymore so let me just do
54:35 - that and we should see now there we go
54:37 - now one thing is I'm kind of zoomed in
54:39 - so I can zoom out and I can spin you can
54:41 - see now this is totally flat this is
54:43 - kind of a nice effect just in of itself
54:45 - so I still have my two-dimensional space
54:48 - colonizer but it's in 3D and I want to
54:51 - look at it from further away so let's
54:52 - make that
54:54 - 500
54:55 - so you can see here so this looks
54:57 - exactly like what we had before but
54:59 - secretly it's in 3D now so this is
55:02 - actually I believe going to be
55:04 - incredibly simple all I need to do is
55:08 - instead of making a two-dimensional
55:09 - plane of leaf points right I'm not
55:12 - actually let's not call
55:15 - grow so what do I have here this system
55:18 - is just a whole lot of uh a whole lot of
55:22 - points in a two-dimensional plane why
55:24 - are they that because all I did was make
55:27 - random 2D vectors so watch how simple
55:29 - this is going to be Random 3D I want to
55:31 - make sorry Random 3D vectors and I'm
55:34 - going to run
55:35 - it and now you can see whoa okay so
55:38 - what's going on I made 3D vectors but I
55:41 - only see two dimensional points well
55:44 - there's a bit of a problem here which is
55:46 - that my points are ellipses so what I
55:49 - want to draw I need to draw those at
55:50 - their three-dimensional location so I'm
55:53 - going to change this to translate pause.
55:55 - x pause. y pause.
55:58 - z and now the ellipse can be at 0 Z and
56:04 - I'm going to say push
56:06 - Matrix pop Matrix to make each ellipse
56:09 - its own thing so I'm going to run this
56:12 - now oops let me Zoom back out and you
56:15 - can see now I have this let me Zoom back
56:19 - in I have this 3D sphere of points now
56:22 - they're ellipses so as I turn to the
56:24 - side they're not they're no longer
56:25 - facing forward and I can make them
56:27 - spheres you know there's any number of
56:29 - things I could do let's just make them
56:30 - spheres for a second just for
56:32 - fun what's more fun than making them
56:34 - spheres I'm just curious to see how slow
56:36 - this runs now notice look how slow this
56:38 - runs so I don't want to make them
56:40 - spheres because I don't even need to see
56:42 - them for this algorithm to happen but
56:44 - spheres require a ton of rendering
56:46 - because each sphere has like a zillion
56:48 - polygons and I could reduce the detail
56:50 - in the Spheres and there's all sorts of
56:51 - things I could do but I'm just going to
56:52 - leave them as ellipses so I'm going to
56:54 - run this again and you can see here now
56:57 - I have this so now all I should be able
57:00 - I I should just be able to grow the tree
57:02 - I mean all the math is going to be the
57:03 - same whether it's 3D vectors or 2D
57:05 - vectors so let's grow the tree again I'm
57:08 - going to turn grow
57:10 - on and we're going to run it let's see
57:12 - what happens it's something is working I
57:15 - can see all those branches happening
57:18 - something didn't but look it's still
57:20 - flat that's so sad it's still flat so
57:24 - why is it flat
57:25 - well am I drawing the branches in 3D I
57:28 - probably have a line function that's
57:29 - just doing 2D so let me go back to the
57:31 - tree all the way at the bottom this is
57:34 - where I'm drawing each branch as a line
57:36 - between the Branch's position and its
57:38 - parents position so I just need to add
57:41 - the z-coordinate for these this
57:45 - line and I got to go all scroll all the
57:47 - way to the right here to get also b.p
57:50 - parent. doz so now I should have a
57:53 - three-dimensional line
57:57 - and let's see what happens it's growing
57:59 - it's growing it seems to be getting
58:01 - everywhere and now look at this there we
58:03 - go look at this crazy three-dimensional
58:06 - wacky strange shape that I have and I
58:08 - can zoom on into it and look inside and
58:10 - scroll around and we can see there's
58:11 - different thicknesses it's thinner on
58:14 - the outside now some branches just
58:16 - didn't some leaves just didn't get
58:18 - reached and it's hard for me to uh I'm
58:21 - going to I don't I can't tell if I have
58:23 - this equidistant problem anymore
58:25 - I don't think so I think some branches
58:27 - are just some leaves are just kind of
58:28 - too far away so uh you know there's some
58:31 - ways around that I could futs with the
58:34 - um uh this this sort of minimum and
58:36 - maximum distance like let me make the
58:38 - maximum distance 200 and I think that's
58:41 - going to help things so that uh I think
58:44 - that's probably going to yeah you can
58:45 - see now I got to everything um so that
58:47 - just by increasing that maximum distance
58:49 - leaves that are kind of too far away
58:51 - will get found now here's the thing
58:54 - there's a bunch of of things that I've
58:55 - done here yeah it doesn't look someone
58:57 - in the chat writes it doesn't look like
58:58 - a tree it doesn't look at all like a
59:00 - tree so maybe before I go I'll make this
59:02 - look a little bit more like a tree but
59:04 - here's really your job so your job is to
59:08 - be a
59:09 - designer come over here please um so
59:13 - what have I
59:14 - done all that I have done is create sort
59:18 - of a default view of the algorithm
59:20 - working so and think about it in two
59:23 - Dimensions I made a sphere I filled the
59:26 - sphere with points and I started with in
59:28 - the middle and stuff is growing out so
59:30 - really I almost made this like veiny
59:32 - blood vessely like system um so if you
59:36 - want to make a tree you've got to be
59:38 - more thoughtful so on the one hand I I
59:41 - made a suggestion of what if you kind of
59:43 - create uh and actually something like
59:45 - this might work well what if you this is
59:47 - all your seed points look like this and
59:50 - then you actually start the root from
59:51 - the bottom so you need to come up what's
59:53 - your Vault and if you read the space
59:55 - colonization paper it will give you
59:56 - suggestions what's the volume where you
59:58 - create all of your seed points and then
60:01 - where do you start the route so that's
60:03 - on the one hand going to make it look
60:04 - more like a tree the other thing you
60:06 - need to think about is just you know I
60:08 - just use three-dimensional lines which
60:11 - aren't really there's not a lot to them
60:13 - so you might think about well actually
60:15 - what you want to put are cylinders for
60:17 - each branch segment and maybe you want
60:19 - to texture those cylinders with some
60:21 - kind of like wood looking texture and
60:23 - then you want to add some lighting to
60:24 - the SC
60:25 - and then maybe you actually want to put
60:27 - at the points that are at the end you
60:28 - want to actually put actual leaves on
60:31 - like various parts of the brain so I
60:32 - think there's a lot of kind of visual
60:33 - dressing that you can add so there is
60:36 - two there's your seed points how those
60:38 - seed points are organized there's where
60:41 - you start the root those things will um
60:43 - get you sort of closer to the tree as
60:45 - well as your sort of visual dressing
60:47 - what's your lighting what's your
60:48 - texturing how you drawing the branches
60:50 - are you adding like leaves attached to
60:52 - the branches that sort of thing so I
60:53 - would like all of you to explore those
60:56 - types of things
60:58 - um okay yeah the other people are saying
61:01 - it looks like Connections in a brain or
61:02 - a plasma ball thingy those are all
61:04 - excellent points so let me at least get
61:07 - you started to show you where you can
61:09 - make these kinds of changes so I'm going
61:11 - to uh save this as space colonizer 3D
61:14 - all the code will be uploaded on GitHub
61:16 - with a link and I also uh um and I'm
61:19 - let's just add a few more things to this
61:21 - before we go so what I'm going to do is
61:23 - say
61:25 - um uh let me
61:28 - make the scene that we're looking at a
61:31 - bit taller so I'm going to make it 900
61:33 - by 600 we can see um uh sorry I want to
61:37 - make it uh 600 by 900 so I want to make
61:42 - it kind of oops oh my goodness I I hit
61:46 - something by accident here um I want to
61:48 - so you can see I just want to have my
61:50 - window be a little bit taller and then
61:52 - what I want to do is have the leaves
61:54 - start uh I want the leaves to just go
61:57 - out by
61:59 - like uh um still be a sphere but I want
62:03 - to offset them um so I want to say y
62:06 - minus equal like height divided two so
62:10 - that should offset everything up yeah
62:12 - there we go so um so this is what I
62:15 - wanted to do but then I also want so
62:16 - that's way too much and then I also want
62:19 - the tree's root so in the tree object
62:23 - the root gets a point I want it to
62:25 - actually start at the bottom of the
62:27 - window which is 0 comma height divided
62:30 - two so I want to start the root at the
62:32 - bottom so this is a bit more tree like
62:36 - so uh you know how successful this is
62:39 - I'll let you be the judge of that but
62:40 - you can see just by having kind of a
62:42 - tree at the starting just by having like
62:45 - a sphere of points up top and the root
62:47 - of the and starting the root at the
62:49 - bottom you get this kind of stock root
62:51 - like thing and then it starts to Branch
62:53 - out at the top but again maybe the
62:55 - there's a uniform distribution of random
62:57 - points now all in that sphere maybe
63:00 - there should be even more along the top
63:01 - and less on the bottom or some type of
63:03 - like cone shape I encourage you to
63:05 - experiment with it but this I think will
63:07 - get you a little bit further into seeing
63:09 - its kind of tree like and I'm just sorry
63:11 - I'm addicted to spinning around this um
63:14 - okay so I think this
63:16 - concludes um uh this video I'm just
63:20 - going to some people in the chat are
63:21 - asking like what did I do to change so
63:23 - let me just mention again since I did
63:25 - that kind of quickly in the leaf object
63:28 - the leaf object this beginning function
63:31 - right here this is where the initial
63:33 - Leaf positions are set every position is
63:36 - a random 3D Vector scaled according to
63:39 - the width of the window which is about
63:41 - 300 pixels and then I'm offsetting it by
63:44 - height divided by four so moving all the
63:46 - Y positions up that's where all the
63:48 - leaves are set now where does the tree
63:50 - begin growing the tree begins growing in
63:53 - the tree object object and the variable
63:55 - is this root Branch so the root Branch
63:59 - incidentally has two arguments the root
64:02 - Branch gets where it's positioned so
64:04 - zero height divided by two so down at
64:07 - the bottom and also that Vector is the
64:09 - direction where it starts growing so
64:11 - incidentally if I were to change this to
64:13 - this we'd have a problem
64:17 - because nothing would happen the branch
64:19 - is grow the tree is growing off to the
64:21 - right to Infinity so it needs to grow up
64:25 - so to speak there we go okay so I the
64:29 - PRP at growing is really quite lovely
64:31 - and nice and i' also be interesting like
64:33 - you know all those branches are objects
64:34 - what if you start moving the points
64:35 - after the fact add some Physics to it
64:37 - have it Blow In The Wind so many
64:39 - possibilities okay so um this was much
64:43 - longer than I had intended but this is
64:45 - hopefully a nice followup to the
64:47 - previous space colonization in 2D video
64:50 - and what I did here was fix a few things
64:52 - about it add thickness move it into 3D
64:54 - I hope that you make something with this
64:56 - and that you share it with me in
64:57 - particular add your own kind of visual
64:59 - design spin to it um and look forward to
65:02 - seeing what you make thanks for
65:04 - watching okay live chat um that was
65:08 - that's the end of uh space col we've
65:11 - space
65:13 - colonization hopefully everything is
65:15 - still working okay let me see what time
65:18 - it is it's 1:30 so I've been going about
65:20 - an hour that was probably quite I don't
65:22 - know if anyone was tracking how long
65:24 - that was but I think I got up to like I
65:26 - think I was doing that for like at least
65:27 - a half an hour um so um and uh
65:35 - okay
65:38 - so I'm looking at the
65:42 - chat um okay uh all right so here we are
65:47 - so I'm going to save let me just save
65:50 - this and close
65:52 - this and and close this and let me now
65:58 - so the other two things I had to do
66:01 - today
66:03 - are I'm going to show you guys this and
66:06 - I'll I'm going to do this
66:08 - in P5 so this is just what something
66:12 - called a super ellipse it's a simple
66:14 - algorithm to instead of drawing like a
66:17 - regular a set of points and make up a
66:18 - regular ellps you can make these kind of
66:20 - like crazy shapes and then if you make
66:23 - the formula even crazier I don't know
66:25 - where I put this is that
66:27 - this yeah you can start to do weird
66:31 - crazy stuff like this so this has been
66:33 - requested it was requested on the slack
66:35 - that I have going with patreon and it
66:38 - was suggested I think also just on
66:40 - Twitter so I'm thinking of doing this as
66:43 - a tutorial today and then a lot of
66:44 - people have been asking for me to do
66:46 - GitHub pages and so let me let me go
66:50 - back to I'm going to open up something
66:51 - else too which is just
66:55 - I've been doing a set of git and GitHub
66:58 - tutorials uh where where is that um
67:01 - maybe under
67:03 - documents I had a to-do list old desktop
67:07 - oh boy other
67:10 - documents uh let me open up text edit
67:13 - probably has it in
67:15 - its um open recent yeah get tutorial to
67:19 - do so this
67:22 - here this was my list to-do list about
67:25 - git and GitHub tutorials so I where I
67:27 - got to was number six oh and I did
67:30 - number
67:31 - seven so um I think having done all the
67:35 - way through number
67:37 - seven I could actually do GitHub Pages
67:40 - now so the two things I have left for
67:42 - today in the next hour would be uh
67:45 - GitHub pages and
67:49 - um G GitHub pages and uh the super
67:53 - formula
67:55 - anybody have any in the chat anybody
67:57 - like dying for one of
67:59 - those uh let me know and I'm going to
68:02 - sort of get myself organized here I feel
68:03 - like I should do the GitHub Pages first
68:06 - I kind of want to take a break from
68:07 - algorithms especially algorithms that
68:09 - are hard so let me get set up to do
68:13 - that so let me get myself logged in on
68:20 - GitHub
68:22 - uh
68:25 - I'm logged in as coding
68:29 - rainbow and
68:33 - okay I want to test something so I'm
68:36 - just going to test this real quick so um
68:39 - let me try to make so you guys can watch
68:42 - here
68:44 - um so I'm gonna the GitHub website does
68:48 - not comply with my desire for a larger
68:52 - font um I I don't know how if any of
68:54 - this is legible let me move this I think
68:57 - I have this much space if I stand over
69:01 - here and so that's pretty good can I
69:03 - make this one bigger okay so let me make
69:05 - a new repository uh
69:08 - test test GitHub Pages testing GitHub
69:15 - pages so uh I need to make a branch I'm
69:19 - just going to do this really quickly and
69:20 - I'll talk through it when I do a
69:21 - tutorial and then I need to go to set I
69:24 - just want to remember where everything
69:25 - is branches make the default Branch
69:27 - GitHub Pages update I understand um go
69:32 - to here and then uh go to
69:36 - branches and then I want to delete
69:40 - Master because I don't want it anymore
69:43 - and then GitHub pages and then I'm going
69:46 - to create a new file so I'm going to
69:48 - just create a file like test um poem.
69:52 - txt uh let's see if it will do it host a
69:55 - text file this is my
69:58 - poem and uh
70:01 - commit and then if I go to settings here
70:06 - should be
70:07 - here uh and I should be able to say
70:11 - poem. txt there we go yay GitHub pages
70:16 - okay GitHub Pages works even with just a
70:19 - text file um okay I'm looking at the
70:22 - chat here I see a lot of people
70:25 - discussing
70:28 - um because it's a what's what about the
70:30 - rainbow is revers is it the colors are
70:32 - in like the wrong
70:35 - order
70:38 - um okay so what I need to do here is uh
70:43 - wash my
70:46 - whiteboard I'm going to do a GitHub
70:48 - Pages
70:50 - tutorial by the way uh
70:57 - um so I'm going to do a basic I'm going
71:00 - to do two videos one I'm going to do
71:05 - with
71:10 - um one I'm going to do with no not you
71:13 - don't even need to know
71:15 - HTML I'm just going to put a text file
71:17 - in and then I'm going to do another one
71:20 - actually you know what I'm going do that
71:21 - one with HTM a text file and then with
71:23 - HTML
71:25 - also um and then I'm going to do uh then
71:29 - I'm going to show you how to uh host
71:31 - your p5js sketch with GitHub
71:35 - Pages um okay so I need to go back
71:40 - here and I want to go to here I'm going
71:43 - to delete I want to delete
71:46 - this
71:47 - repository uh how do I I go to
71:50 - settings and I go to the the danger zone
71:54 - we're in the danger zone everybody
71:56 - delete this repository
71:58 - test GH pages I understand the
72:01 - consequences there we
72:03 - go um okay so let me come back here uh
72:08 - let me go
72:09 - to how do I go to my
72:13 - repositories um oh I want to go to
72:15 - Rainbow
72:17 - coder uh your profile okay okay
72:21 - everybody here we are let's see
72:26 - okay how are we doing um got 80 people
72:29 - watching online which is kind of amazing
72:31 - I'm just going to check um hold on I
72:33 - just want to do something kind of silly
72:35 - if you don't mind if you will just um if
72:40 - you will humor me for a moment I moved
72:42 - my Facebook live stream from my personal
72:45 - Daniel shiffman page to the coding
72:47 - rainbow page oh it's probably already
72:49 - over on Facebook because it only lets it
72:51 - so I just G to quickly um share it um
72:56 - just so people know to switch over to
72:58 - there
73:00 - um
73:03 - so uh what do I do I do share oh no this
73:07 - is all about algorithmic botney no no no
73:09 - is where do I find
73:10 - it um oh no I'm in okay hold on I just
73:13 - curious about this so oh wait wait wait
73:15 - wait I know where to
73:17 - go okay
73:19 - where how do I see where I am live
73:24 - oh there it is it just
73:26 - says about it just has the wrong
73:28 - description in it that's
73:31 - fine
73:34 - uh uh yeah so this is all from today I
73:37 - think yeah yeah there I am okay I see
73:40 - myself live so I'm just gonna share
73:42 - sorry about this you
73:45 - guys oops um
73:51 - share uh
73:55 - so sorry everybody
74:16 - um okay uh and then I'm going to say
74:22 - public
74:24 - okay okay sorry I just thank you guys
74:27 - for humoring me there I lost four
74:30 - viewers in doing that
74:33 - uh okay okay uh all right so here we go
74:37 - everybody I am ready to talk one of my
74:41 - actual this might seem strange but one
74:43 - of my favorite
74:45 - topics is get up Pages get up pages is
74:51 - awesome and some ways it's a little bit
74:54 - Overkill like what do you really need
74:55 - GitHub Pages for because you got to deal
74:57 - with all this git stuff but it's
74:59 - completely free web hosting um and um
75:03 - it's super fast and it's great for all
75:05 - the collaboration stuff so I think it's
75:07 - a really nice option and so this video
75:10 - tutorial will be all will will be about
75:13 - using GitHub pages so let me just think
75:15 - about this for a
75:17 - second
75:20 - um so I want to make a list here here
75:23 - I'm going to try to recreate for a
75:26 - second um that list of
75:30 - terms uh
75:33 - commit uh
75:35 - repo
75:37 - Branch
75:39 - Push
75:41 - Pull I haven't done merge yet but I
75:44 - don't even worry about that what are
75:45 - some of the other terms uh in knit was
75:48 - one but it's not really relevant as
75:50 - relevant for this I think this is all we
75:52 - need
75:53 - [Music]
75:56 - um uh for this
75:58 - particular um for this particular
76:03 - uh okay so I think I am
76:07 - good
76:10 - okay
76:13 - [Laughter]
76:15 - okay um every in the chat writes switch
76:18 - to Facebook it is ahead of this video by
76:20 - a
76:22 - second uh um okay um okay so um so 's
76:27 - asking if I could do a five minute Q&A I
76:29 - would like to since I've just got the
76:30 - momentum here do this GitHub Pages
76:32 - tutorial and after that I will take uh
76:35 - questions if that's okay with you guys
76:37 - um just because I want to just get
76:38 - moving here so um here we go um
76:44 - and how's my I like want to fix my hair
76:47 - but I got it all cut off and there is no
76:49 - fixing of it anymore okay here we go
76:51 - everybody just got to kind of warm up a
76:53 - little bit here we should do everybody
76:54 - stand up and stretch do some like
76:58 - stretching I don't know what I'm doing
77:00 - okay this is going to be the tutorial
77:02 - about GitHub
77:05 - Pages get this let me get my button in
77:09 - place the button really is not working
77:12 - for me I got to work on the button it's
77:14 - like I need some physical Computing help
77:17 - when the school for poetic computation
77:19 - students show up somebody will come and
77:20 - help me with this
77:22 - hopefully uh okay um here we
77:28 - go hello uh welcome to
77:31 - part I don't know what let me look at my
77:35 - let me look at my uh this this was not
77:37 - this was not the uh beginning of this
77:39 - video I want to look at my GitHub
77:41 - playlist I I don't uh get and GitHub
77:45 - playlist okay this is part eight so that
77:48 - this is the eth this will be the eighth
77:49 - video in this playlist okay and and I
77:53 - can close this
77:56 - okay and also let's get rid of the super
77:59 - formula for a second just not as much as
78:02 - open okay uh and then oh sorry hold on I
78:05 - do want to have terminal open sorry
78:07 - everybody I realized I'm GNA want to use
78:09 - terminal
78:10 - briefly um and I'll just do
78:16 - desktop uh okay in this video as well
78:19 - okay now I'm
78:21 - ready
78:27 - okay part eight right okay hello welcome
78:31 - to part eight of GitHub git and all that
78:34 - stuff for poets and in this particular
78:37 - video I'm going to show you how to have
78:38 - your poem or whatever it is you're
78:40 - making web page hosted through GitHub so
78:43 - your git repository on GitHub can
78:46 - actually be uh uh you can get free web
78:49 - hosting with it so and this is by using
78:52 - something called GitHub Pages GitHub
78:54 - pages is a rather large topic because
78:56 - there's tons of features that it has
78:58 - available for you but I'm going to show
78:59 - you the very Basics just how to take
79:01 - your files and have them viewable
79:03 - through a URL so that's the first thing
79:05 - that I'm going to do in this particular
79:06 - video so um I if you've been following
79:09 - these videos along there's these
79:10 - important git Concepts that I've been
79:12 - covering in each one of these videos
79:13 - commit we have a repository a commit is
79:15 - like a Save branch is taking uh is
79:18 - having a separate branch of changes that
79:20 - you might merge into your uh Master
79:23 - Branch later if you like those changes
79:24 - there's push and pull pushing being to
79:26 - send and pull being to to retrieve so
79:29 - there's all this stuff that I've covered
79:30 - in all these other videos and the
79:32 - exciting thing is that using
79:35 - GitHub
79:37 - Pages all of this stuff works
79:40 - identically exactly the same way so you
79:42 - can have a project that you are working
79:45 - on through git keeping track of its
79:47 - history collaborating through git but if
79:50 - you flip a switch and it's on GitHub you
79:53 - can actually view that project as a
79:55 - directory of as as if it's hosted on a
79:58 - website so let me show you how this
80:00 - works the key to it is the under Branch
80:03 - the key is that typically by default
80:06 - your git branch is called Master that's
80:09 - the sort of like fundamental core branch
80:12 - of your project where your like finals
80:15 - things are your main poem your main code
80:17 - whatever it is lives in the master
80:19 - Branch for GitHub pages to work you want
80:22 - to get get rid of this idea of having a
80:24 - master Branch you still can have one but
80:25 - for Simplicity you can just think of
80:27 - your master Branch as being
80:30 - called
80:32 - gh- pages so as long as the branch that
80:35 - you're working on is called gh- Pages
80:39 - there is automatically a secret URL by
80:42 - which you can access now um there's a
80:44 - there's a lot more to this and I but I'm
80:46 - avoiding saying that now and I'll get to
80:47 - it later so let's come back up and let's
80:49 - so let's just do this right now it's
80:51 - actually going to be quite simple and
80:52 - easy I'm going to go I'm on my profile
80:54 - page I'm the rainbow coder for lack of a
80:57 - better username um and I'm going to make
80:59 - a new repository and I'm going to call
81:01 - this poem
81:05 - website so this is my repository name
81:08 - poem websit this is ridiculously bad
81:10 - repository name but it's fine you can
81:12 - come up with something better and this
81:14 - poem will be on the
81:17 - internet and really on the worldwide web
81:21 - talking about so that's my description
81:23 - it's going to be public I want to
81:24 - initialize it with a read me so you can
81:26 - see what I'm doing so I'm just making a
81:28 - new repository through the GitHub
81:29 - interface just like I always have before
81:32 - so I am going to hit create
81:35 - repository um there it is now I have
81:38 - this repository so notice here that by
81:41 - default the repository lives in the
81:43 - master Branch so in order for to use
81:46 - GitHub Pages all that I need to do is
81:48 - click here and make a new Branch so I'm
81:52 - going to type in GitHub Dash pages and
81:54 - I'm going to select create Branch GH
81:58 - pages so now I have this Branch GH Pages
82:02 - now here's the thing that Master branch
82:05 - is still there and in fact if I were to
82:08 - go to this repository Again by default
82:11 - it's going to put me onto the master
82:13 - Branch so to make things simpler I want
82:15 - to make sure that gh- pages is the
82:19 - default
82:20 - Branch so where I do that I need to go
82:23 - to settings so I'm going to click on
82:26 - settings and under settings I'm going to
82:28 - go over here to branches I'm going to
82:30 - click on branches and over here notice
82:33 - here this is where it says default
82:35 - Branch so I want to go to this default
82:37 - Branch place and I want to switch
82:39 - default branch and I want to switch it
82:41 - to GH pages and then I want to click
82:44 - update now it's gonna it's going to say
82:47 - like oh my goodness changing your
82:49 - default Branch can have unintended
82:51 - consequences is it can and this is you
82:55 - know we're living a little bit in the
82:56 - danger zone here but what what's the big
82:58 - deal there's nothing in this repository
83:00 - yet I'm just making a poem I'm messing
83:02 - around this is actually quite okay to do
83:04 - with a brand new repository you're not
83:05 - affecting anything else that's happened
83:07 - in the history because there is no
83:08 - history so far so I'm going to say
83:10 - understand update the default branch and
83:13 - now the default branch is GH pages so if
83:16 - I go back to this oops uh poem website
83:21 - repository you can see that I am now by
83:23 - default in the branch GH Pages now
83:26 - there's a little bit this is fine and I
83:29 - could stop here but I want to be really
83:31 - I'm really serious about GitHub Pages
83:33 - I'm not I'm not stop I'm I'm all in on
83:36 - GitHub pages so I also want to go over
83:38 - here to branches where this is the link
83:40 - where I could view what are all the
83:41 - branches associated with this repo and
83:43 - I'm going to click here and I'm going to
83:45 - see that the the default branch is GH
83:47 - pages but I still have this other Branch
83:49 - master so over here on the right hand
83:51 - side there's this little trash icon I
83:54 - can click this and actually delete the
83:56 - master branch and this is worth doing
83:58 - because I don't want to by accident ever
84:00 - work on the master branch in this
84:02 - particular case so I'm going to delete
84:04 - this branch and you can see it's gone
84:06 - it's it's kind of xed out and all I now
84:08 - all I have now is a GH Pages Branch okay
84:12 - we did it this repository is now a
84:15 - repository hosted through GitHub pages
84:18 - so I can uh I can go to settings by the
84:20 - way and I can scroll down under GI Hub
84:22 - Pages you can see
84:24 - here your site is published at this URL
84:28 - so by definition if you have a g GH
84:31 - Pages branch in your
84:33 - repository the URL for that that
84:36 - repository will be your username do
84:40 - github.io thee repository name which in
84:43 - this case is poem website now here's the
84:45 - thing you absolutely can use a custom
84:48 - URL so for example I have plenty I have
84:51 - several websites hosted through GitHub
84:53 - Pages natureof code.com for example is
84:55 - hosted with GitHub pages but it isn't at
84:58 - shift.
84:59 - github.io of code so there is a way to
85:01 - do that and in in another video maybe
85:04 - I'll explore that as a topic it's just a
85:06 - sort of configuration thing but you get
85:08 - this sort of free URL that you can use
85:10 - now let's go to that
85:12 - URL and you can see here it's going to
85:15 - say page not found the reason is there
85:17 - are no files there there's no files
85:20 - there for me to look at I mean maybe in
85:22 - the
85:23 - repository there is a file called read
85:26 - me I might be able to look at that but
85:27 - let's let's take a step further let's
85:29 - add a file so I'm going to go here under
85:31 - create new
85:32 - file and I'm just going to name the file
85:34 - now I'm just going to make a plain text
85:36 - file and I'm going to call it poem.
85:39 - txt and I'm going to do oh I'm going to
85:43 - write some poetry um GitHub Pages oops
85:48 - GI hug oh it's let's I wrote that by
85:50 - accident but I'm going to keep it GI hug
85:51 - GI
85:53 - hug is a hug on the pages oh dear this
86:00 - poem is terrible okay so that's my poem
86:02 - you can send me a poll request to
86:04 - improve it and I'm going to do commit
86:06 - new file and you can see that it's
86:08 - committing it directly to the GH Pages
86:10 - branch and you can see there it is so I
86:13 - can see it here in my GitHub repository
86:16 - but now look at this I can go to the
86:19 - URL and I can put in there
86:23 - poem. txt so I can access that
86:26 - particular file and there you can see
86:29 - there it is I now have a web
86:30 - page with this particular poem on it now
86:34 - that web page is a plain text file so
86:36 - all it shows up as raw text those of you
86:40 - who have used the internet before or
86:42 - browsed the web have noticed that web
86:44 - pages have you know different fonts and
86:46 - images and animations so to go further
86:49 - with this to actually host a dynamic web
86:52 - website through GitHub Pages you need to
86:54 - actually have HTML files perhaps also
86:57 - image files perhaps also something
86:59 - called CSS files I happen to have a
87:01 - whole set of tutorials about how to use
87:03 - HTML CSS and JavaScript to create
87:05 - different kinds of web pages that you
87:06 - could go and look at and then come back
87:07 - to this but I'm at least going to just
87:09 - in one step I'm going to make an HTML
87:12 - poem just here so that you can see a
87:14 - little bit more so what I want to do now
87:18 - is I'm going to go back and I'm going to
87:20 - say another I'm going to create another
87:22 - another new file and you know what I'm
87:23 - going to call this file
87:25 - index.html if you name a file
87:28 - index.html then you don't actually have
87:30 - to type in that file name on the web it
87:32 - will be the default file that's open
87:34 - whenever I go to uh rainbow cod.
87:39 - github.io poem website so I'm going to
87:41 - call it that and then I'm going to type
87:43 - whoops I'm going to type some HTML into
87:45 - this file you know I'm probably missing
87:48 - some things you're supposed to have in
87:50 - HTML but HTML is all all about having
87:52 - these tags open HTML close HTML open
87:56 - body close body and in the body I can
87:59 - put something like H1 which means header
88:01 - one and I can say poem and then I could
88:04 - say like H3 by Daniel
88:09 - schiffman uh and then I could say like P
88:11 - which is for a paragraph and I could say
88:14 - this um you know rainbow
88:18 - rainbow you are my rainbow and then I
88:23 - could put a period and close the
88:25 - paragraph and you can see this is you
88:27 - know you can check out my other
88:29 - tutorials to learn a lot more about HTML
88:31 - but this is writing some markup which is
88:33 - giving it some formatting and I'm going
88:34 - to just add a little more formatting
88:36 - like I'm going to add strong so this is
88:38 - going to make that particular rainbow
88:41 - bold and then I'm going to hit commit
88:44 - I'm going to say making an HTML poem and
88:48 - I'm going to commit that new file and
88:50 - you can see now what do I have in my
88:52 - repository I now have index.html in
88:54 - addition to poem. txt and if you
88:57 - remember this is what poem. txt looks
89:00 - like however now if I go to the URL and
89:05 - I just get rid of that right and I want
89:07 - to go to just the the core URL rainbow
89:10 - cod.
89:12 - github.io um poem website and I hit
89:15 - enter you can see there's my poem and
89:17 - format it so I've now used a little bit
89:20 - of HTML and it's freely available on the
89:22 - internet this is a website people can
89:24 - contribute to this website by making
89:25 - poll requests you can make changes to it
89:27 - through the GitHub interface you can
89:29 - clone that repository down to your
89:31 - computer the same way I showed you in
89:33 - other videos you can make branches you
89:35 - can make changes just remember the one
89:38 - thing that's going to be different I'm
89:40 - actually going to let let's do this
89:41 - really quickly um let's say you want to
89:44 - work with this locally I want to get a
89:47 - I'm going to go to clone or download I'm
89:49 - going to copy this particular this URL
89:52 - and I'm going to go to terminal uh this
89:54 - is something that I did in a previous
89:55 - tutorial if you need to go back and look
89:56 - at that and I'm going to say first of
89:58 - all just so you know I'm on the desktop
89:59 - of my computer and I'm going to say get
90:04 - clone so we can see now that here is
90:09 - that you can see there are the files one
90:12 - thing for you to remember if I
90:20 - say no it's telling me I am on Branch g.
90:25 - pages so if I ever want to get updated
90:28 - changes get pull normally we were saying
90:31 - things like get pull origin Master no
90:34 - longer is there a master Branch so I
90:36 - have to remember if I use any of these
90:38 - other git commands to always use g.
90:41 - pages okay so there you go that's the
90:44 - basics of it you can put image files
90:46 - anything that you can do in a web page
90:48 - you can put into this repository you can
90:50 - add stuff you can commit stuff your
90:52 - whole web page is there online for
90:54 - anyone to work to see and for you to
90:56 - work with through the through the git uh
90:58 - platform what I'm going to do in the
91:00 - next video for those of you who might
91:02 - have come to this series by working with
91:04 - something called p5js is I'm going to
91:06 - show you how to actually take a code
91:08 - example something that has HTML CSS and
91:10 - JavaScript and host that with GitHub
91:12 - Pages which will actually be quite
91:13 - simple but I'm just going to um put that
91:15 - in a separate video because it does
91:16 - involve programming and source code but
91:18 - you can actually just uh still just with
91:20 - this video put a text file or some basic
91:22 - HTML online okay thanks for watching and
91:25 - let me know what questions you have in
91:26 - the
91:27 - comments okay um all right everybody so
91:32 - that was my GitHub Pages tutorial I
91:35 - think that was relatively short at the
91:37 - most 20
91:39 - minutes
91:41 - um um okay um so it's very hot in here
91:47 - so I'm going to I'm I'm going to have to
91:49 - wrap this up soon because it's getting
91:51 - oh it's it's 2:00 already I definitely
91:53 - I'm okay till 2:30 I want to see if I
91:55 - can do the super formula thing
91:58 - today let me just think
92:01 - about a p5js sketch really
92:05 - quickly um I'm trying to think the best
92:08 - way to do
92:11 - it let me
92:14 - get let me uh let's grab like
92:20 - um um I'm trying to think of what would
92:24 - make the most sense to
92:26 - use you know this was a fractal tree
92:29 - example I had from before I I don't know
92:32 - for some reason I don't feel like using
92:34 - them maybe reaction
92:36 - diffusion yeah this is these are all so
92:39 - slow
92:41 - um running game uh what was this one oh
92:46 - yeah so let's use this one this is my
92:48 - silly little platform game that you have
92:50 - to and platforms was the wrong term so
92:52 - let me use this one um okay so I'm going
92:55 - to call that's called running
92:58 - game
93:00 - and uh okay
93:07 - so all right
93:12 - um uh okay
93:15 - everybody um there's some interesting
93:17 - comments in the chat okay I'm going to
93:19 - really quickly just do a quick video of
93:21 - getting a P5 sketch um hosted with
93:25 - GitHub pages okay um
93:29 - great um so I'm gonna do that really
93:33 - quickly uh or do I already have poll
93:36 - requests on this let's see yes somebody
93:40 - already has a pull request uh I'm just
93:42 - going to merge this site unseen let's
93:45 - just look here uh I need a gith hug
93:47 - thank you uh okay so I'm going to I love
93:50 - this pull request I'm going to emerge it
93:51 - it thank you very much uh
93:54 - great um okay so uh is this worth it
93:58 - because I think I'm gonna I'm gonna do
94:00 - this
94:01 - anyway so I'm gonna do
94:07 - um yeah
94:19 - okay okay everybody uh here we go let me
94:23 - cycle the
94:33 - cameras I just sorry I like a little bit
94:36 - of a headache for a second
94:40 - here all right this is going to be quick
94:43 - five
94:44 - minutes famous last words
94:49 - okay this is a short tutorial to to show
94:51 - you how to take a p5js sketch and host
94:55 - it uh with GitHub pages so in order to
94:57 - follow this tutorial it assumes two
94:59 - things you have a GitHub account and you
95:01 - have a p5js sketch and the p5js sketch
95:04 - I'm going to show you is uh this one
95:07 - which is just a little uh little simple
95:09 - game demonstration where there's a
95:10 - obstacle coming at you and you've got to
95:12 - hit the space bar in time to jump over
95:13 - the obstacle okay so you can see that's
95:16 - the basic sketch now what is this sketch
95:18 - it is a directory in the directory it's
95:20 - called running game which is I don't
95:22 - know why I called it that and it has a
95:23 - set of files associated with it has an
95:25 - HTML file two JavaScript files and
95:28 - libraries files the point of GitHub
95:29 - pages though is you can host anything
95:31 - you can make whatever you can have as
95:32 - many CSS files HTML files as many
95:34 - JavaScript files you can have
95:35 - directories images all that sort of
95:37 - stuff but I'm going to take just this
95:39 - core basic directory and host it on
95:41 - GitHub using GitHub pages so the first
95:44 - thing that I need to do in my in my
95:46 - GitHub account under rainbow coder is I
95:48 - just need to make a new
95:50 - Repository and um and make a new
95:52 - repository I'm going to call it p5js
95:55 - sketch um obviously you should call it
95:57 - something better but that'll work fine
96:00 - um showing how to host uh p5js sketch
96:04 - with GitHub Pages um I want it to be
96:06 - public so people can see it um I'm going
96:09 - to uh I'm going to initialize it with a
96:11 - readme so it has something in it to
96:12 - start and then I'm just going to hit uh
96:14 - create repository then I'm going to add
96:17 - a branch this is key I need to go under
96:20 - here branch manager I need to add add a
96:21 - branch called gh- Pages I'm going to
96:24 - create that Branch then what I want to
96:27 - do just for safety reasons I want to go
96:30 - to settings under branches and I want to
96:32 - switch the default Branch to GH pages I
96:36 - I'm going through this a little bit
96:37 - quickly because you can watch my
96:38 - previous video where I do this in a bit
96:39 - more detail but you I'm going to show
96:40 - you the steps again here but more
96:42 - quickly so all I need to do is hit
96:44 - update I want to say I understand update
96:46 - the default Branch I want the default
96:48 - Branch always to be GitHub GH Pages only
96:51 - only the stuff that's in that branch is
96:53 - viewable on hosted online as a web page
96:56 - so then the other thing I'm going to do
96:57 - just also for safety is I'm going to go
96:59 - back to my repository I'm going to click
97:01 - here under branches and I'm just going
97:03 - to um under master here I'm going to
97:05 - click this trash icon all the way over
97:07 - on the right because I just want to
97:08 - delete the master Branch so there's no
97:10 - more Master Branch this particular
97:12 - repository only has a gh- Pages Branch
97:17 - so here we are I have an empty
97:18 - repository with nothing in it a gh-
97:21 - Pages branch and now I need to commit
97:23 - those files my sketch to the branch now
97:26 - there's a bunch of different ways I
97:27 - could do it I could clone this
97:28 - repository down I could add the files
97:30 - and I could push it back but just for
97:32 - Simplicity right now I am going to just
97:35 - actually grab this whole directory and
97:37 - drag it in here so um GitHub pages is
97:41 - per GitHub as a tool it allows me to
97:43 - upload files directly to it and so it's
97:45 - uploading
97:46 - everything and now I'm going to say um
97:49 - uploading my P5 J sketch and I'm going
97:53 - to say uh commit directly to the GH
97:56 - Pages Branch I'm going to hit commit
97:58 - processing my files it takes a minute
98:00 - and there you go now one thing you'll
98:02 - notice here is my files are in a
98:04 - directory called running game I could
98:06 - have had them on the core directory
98:09 - which I mean in the root directory which
98:11 - probably would make some sense maybe
98:13 - I'll show you that in a second but you
98:14 - can see that the files are there so now
98:16 - where do I find where do I where do I
98:18 - see the stuff so the URL is always your
98:29 - username.on settings and then scroll
98:32 - down and you'll find here under GitHub
98:34 - pages that your it'll say your site is
98:36 - published here so I can click here now
98:39 - the irony here is it's going to say it
98:41 - can't find anything I'm getting a 404
98:43 - era that's because I actually have my
98:45 - index.html file in a directory called
98:47 - running game so I've got to go add that
98:49 - directory right here running game and
98:52 - I'm gonna hit uh and I spelled it wrong
98:54 - I'm gonna hit running game and now you
98:56 - should see there it is so there's my
98:57 - sketch online and I have a permanent URL
99:00 - to that sketch so there it is there it
99:02 - is hosted on GitHub Pages now if you
99:04 - want it to just appear at the root
99:07 - directory P5 jsor sketch what I would
99:11 - recommend doing is I'm going to go back
99:13 - to the repository U and actually I'm
99:15 - gonna just I'm gonna clone it I'm gonna
99:17 - fix this by cloning it so I'm going to
99:19 - go um
99:22 - uh sorry everyone uh I'm going to go to
99:25 - uh this repository rainbow uh where am I
99:29 - uh p5js sketch I'm going to grab the URL
99:33 - for cloning
99:34 - it and I'm going to go here and I am
99:38 - going to CD back up to my desktop I'm
99:40 - going to say get clone here and I'm
99:44 - going to open that D here and I'm going
99:46 - to look at running game so let's look at
99:48 - this so whoops no no no no p5g sketch so
99:52 - in p5g sketch this is what's in that
99:55 - particular repository I'm just going to
99:56 - take those files and I'm going to put
99:59 - them in the root directory uh and then
100:01 - I'm going to delete that folder and
100:03 - when I go back here I can say uh CD into
100:09 - p5js sketch and I can say get status so
100:13 - you can see it's telling me I moved all
100:14 - these files around I did all sorts of
100:16 - stuff so I'm going to say add do- a to
100:19 - add everything and delete everything
100:21 - thing and then I'm going to say get
100:22 - commit move files to root
100:25 - directory and then I'm going to say get
100:27 - push origin and now the really key thing
100:30 - I want to put those changes back up I
100:32 - don't want to say get push origin Master
100:34 - remember everything happens in gh- pages
100:38 - so I'm going to push everything up and
100:41 - I'm already authenticated it might ask
100:42 - for your username and password and now I
100:44 - should be able to go here and you can
100:46 - see all of the files are now here just
100:48 - in the root directory there's no more
100:50 - running game Direct directory and I can
100:52 - actually just now go to
100:55 - rainbow rainbow cod.
100:58 - github.io P5 sketch you can see this is
101:02 - the URL that I'm going to I can hit
101:04 - enter and there is my sketch so you can
101:07 - easily just have files in your GitHub
101:09 - repository as long as they're in the
101:11 - gh-pages branch then you know where to
101:13 - view those pages hosted on the
101:15 - web so I showed you all the
101:18 - possibilities I showed you uploading
101:19 - files just through the GitHub interface
101:21 - I showed you cloning and making changes
101:23 - but you can you can work entirely
101:24 - through the GitHub interface you can
101:25 - work entirely locally through terminal
101:27 - all of those possibilities are open to
101:29 - you the only thing that you have to know
101:31 - to make sure is that all of your work is
101:32 - happening in gh- pages and that you know
101:36 - the URL which is your
101:41 - username.in you can also have a custom
101:44 - URL that involves creating something
101:46 - called a cname file I'll make another
101:48 - tutorial uh which will be like part nine
101:49 - at some point of this series of how to
101:51 - do that or part 10 somewhere in this
101:53 - GitHub get and GitHub tutorial series
101:54 - will be that video as well okay so
101:56 - hopefully you found this helpful and I
101:58 - will see you in some other part of the
102:00 - universe somehow I
102:04 - hope okay
102:07 - um so I don't know what was that 10
102:09 - minutes maybe that was 10 minutes I
102:11 - think it was pretty short but it was
102:13 - definitely longer than five minutes uh
102:15 - okay so that concludes
102:19 - that
102:21 - um do I have the time and it's 211 so
102:24 - let's see if we can do this super
102:25 - formula
102:30 - thing I need to work on the math for
102:33 - this for a
102:35 - second and I need to get set
102:38 - up so I want to do this in uh process in
102:44 - P5 so
102:48 - um let me make uh let me get that uh
102:51 - running game
102:55 - sketch so let me call this uh super
103:01 - formula oh it's already taken yeah uh
103:05 - underscore
103:07 - processing I'm going to call this a
103:09 - super
103:13 - formula
103:15 - really okay hold on uh super
103:19 - formula ah I thought I oh it doesn't not
103:22 - giving me permission I I have too many
103:24 - accounts on this computer and the
103:26 - permissions are all screwed up uh there
103:30 - we go now I can call this one super
103:33 - formula I'm going to go in here super
103:36 - Formula
103:40 - One and put all this in
103:43 - here
103:44 - [Music]
103:45 - uh and I'm going to open this with
103:49 - Adam
103:54 - oh it's like a kit repository that's
103:56 - fine uh and I'm going to get rid of all
103:59 - the
104:00 - code and I don't need this class I'm
104:03 - going delete
104:05 - this um save and I also want to run a
104:09 - local server
104:19 - now
104:22 - move this over
104:30 - here uh all right okay let me fix this
104:35 - sorry I'm just doing some setup stuff
104:37 - and I don't have the energy to talk
104:39 - through it just for a second so I need
104:42 - my need to play my background music but
104:44 - I don't have any background music some
104:46 - coming soon background
104:49 - music uh
104:50 - [Music]
104:53 - uh okay um let me add setup and draw
104:58 - just to make sure things are working
105:00 - here uh create canvas 400 400 should be
105:04 - fine
105:06 - background
105:09 - 51 okay that looks good this can move in
105:13 - a little
105:14 - bit this can also move in a little bit
105:16 - this can be
105:19 - minimized okay
105:21 - um okay so the other thing I want to
105:23 - look at
105:27 - now is super ellipse let's start with
105:38 - this
105:40 - um
105:45 - yeah okay so I'm going to
105:48 - um uh I'm wearing a pebble time watch in
105:52 - case people were wondering it's not an
105:54 - Apple watch um
105:58 - okay
106:00 - uh okay so
106:03 - um I need to discuss the math for this
106:06 - with you guys for a
106:07 - second because I'm not 100% sure about
106:10 - it I don't think I'm GNA I don't think
106:12 - I'm going to in this video tutorial do
106:14 - like derive everything I'm just going to
106:15 - kind of
106:17 - like talk through how it works
106:21 - but I want to do this once
106:28 - so here's a
106:30 - circle a circle has a center point and
106:34 - it has a
106:36 - radius and we know that if you were to
106:42 - make like a right triangle like this
106:45 - this is like the X this is a y and this
106:47 - is like the radius of the circle and
106:49 - this is an angle we know a couple things
106:53 - we know through Pythagorean theorem that
106:55 - x^2 + y^2 =
106:57 - r^2 and we also know that given R and
107:01 - Theta we can solve for x equals r r *
107:06 - cine of theta and Y = R * sin of theta
107:11 - now I've skipped a million things here
107:13 - if if this kind of math this is
107:15 - something called polar coordinates is
107:16 - not familiar to you I would refer you to
107:18 - my polar coordinates and trigonometry
107:21 - video
107:22 - tutorial
107:24 - um but um these are the basic formulas
107:28 - for dealing with a a plain old
107:32 - Circle sorry it's very hot in here I've
107:36 - got of running out of steam but I let
107:38 - let me make this super
107:41 - ellipse tutorial since I said I would do
107:44 - it
107:46 - um I'm G I just need to uh point the fan
107:50 - at me here that'll help okay
107:55 - um okay so
107:58 - now the super
108:06 - ellipse is written this way so the
108:12 - circle is in a way all the points a unit
108:16 - circle is all the points where A and B
108:19 - are
108:21 - uh one and N is two so let me let's
108:25 - that's the super ellipse formula let me
108:28 - write that over
108:29 - here come on uh is X over n sorry X over
108:37 - a to the N Power
108:42 - Plus y over B to the N power and these
108:46 - are the absolute value equals one so you
108:49 - can see
108:50 - this is that formula when uh When what
108:54 - when A and B are
108:56 - one sorry when A and B are equal to
108:59 - R and uh n is equal to two right because
109:04 - let's just say let's say x / r 2ar + y /
109:11 - R 2 = 1 this is the same as x^2 + y^2 =
109:18 - R2 right so this is a simple version of
109:22 - this
109:24 - formula with this formula we can also
109:28 - extract the polar to the equivalent of
109:31 - the Polar to cartisian
109:33 - coordinates you saying x equals and this
109:37 - is where I have to look this up I'm just
109:39 - coming over here for a
109:41 - second
109:44 - um I'm just going to leave that I'm
109:46 - going to write it over here while I have
109:47 - that open x equals x equals as a
109:52 - function OFA equals cosine
109:54 - of to the 2 absolute value to the 2 N
109:58 - power time a Time the S of cosine of
110:02 - theta oops and I ran out of space okay
110:04 - so um we can sort of do the same thing
110:07 - with these formulas so I think and you
110:09 - can see sine of T is ne1 if T is less
110:13 - than zero is z if T is equal to zero and
110:15 - it's plus one if T is greater than zero
110:18 - so I believe
110:20 - I could derive this formula but I think
110:23 - I'm gonna I think I'm going to
110:25 - skip deriving the formula and then and
110:28 - just implement it so this is the super
110:33 - ellipse oh boy is it hot
110:39 - um uh okay so if you guys don't mind I'm
110:42 - also just going to take a one minute
110:43 - break to get some more water
110:49 - um
110:51 - so I'm going to just short twom minute
110:57 - break
111:05 - oops put this note up
111:15 - here okay okay I'm I'm very concerned
111:19 - with my notes
111:21 - okay yeah I'm going to go over what the
111:22 - sign function is people are asking in
111:24 - the chat okay so I'm just muting my
111:26 - microphone and I'll be back in uh I'll
111:28 - be back in in two
111:48 - minutes
114:19 - okay I think I'm back audio wise you
114:21 - guys can hear me
114:22 - okay um I'm uh trying to get some fresh
114:27 - air in this room I turned the fan up
114:29 - higher um so you might be hearing some
114:31 - like audio in the background but I will
114:35 - um I'm GNA turn the fan
114:38 - down once I
114:44 - uh once I
114:48 - um uh once I start this tutorial I'm
114:51 - just going to wash the
114:57 - Whiteboard
115:04 - so
115:07 - um the idea here by the way oops here I
115:10 - am so let me figure out what I
115:15 - am talking
115:18 - about um uh so first of all I just want
115:21 - to fix one thing change this to say
115:24 - super
115:29 - ellipse um so what I want to show what I
115:33 - want to open up
115:40 - first is
115:48 - um so this is ultimately where this
115:53 - leads we're kind of going to the point
115:55 - where you can do these kind of crazy 3D
115:57 - shapes and
116:01 - maybe are you asking me if I feel
116:07 - unwell because I do feel a little bit
116:09 - ill but I think I'm gonna be okay for
116:11 - another 10 minutes no I just got I got a
116:14 - little overheated I think um I'm going
116:17 - to have to think about what to do about
116:19 - these hot days in New York in this room
116:21 - and get some different lights but for
116:23 - right now I'm actually just taking a
116:24 - break I feel I feel fine now and having
116:25 - a little water um so the idea here is
116:29 - kind of working up to doing these more
116:31 - complex 3D shapes but um
116:37 - with this particular
116:41 - formula and the same
116:44 - technique that I'm going to show you
116:48 - with it's just an extension of
116:51 - this um ellipse formula see also super
116:55 - ellipse which I'm going to get from
116:58 - here okay so I think I'm going to start
117:01 - with this particular visual
117:07 - reference uh okay so this is going to be
117:11 - the last thing I'm going to do today uh
117:13 - I think I'm just going to do the super
117:15 - ellipse uh and then I will reference the
117:17 - super formula which I will do a you know
117:20 - I'll release the code for doing that
117:21 - which is pretty similar and then I will
117:24 - do a follow-up video on that next
117:27 - week okay
117:31 - everybody super
117:34 - shapes all
117:40 - right let's see if we can get this is
117:42 - going to be three
117:43 - parts super
117:45 - ellipse super shape 3D super shape shape
117:50 - that's my goal I'm definitely afraid of
117:53 - the 3D super shape but we'll see if I
117:57 - can manage to get to that at some
117:59 - point uh okay Super Rainbow would be
118:04 - nice okay I got to do this here we go
118:07 - last last tutorial of today and then I'm
118:09 - gonna go outside into what will be
118:11 - cooler air I'm I'm going to turn this
118:13 - fan a little bit down just so it doesn't
118:16 - mess the audio
118:18 - up
118:24 - okay here we
118:31 - go here we go uh and I guess I'm just
118:34 - going to start I think I cycled the
118:36 - cameras let me do it again just in
118:48 - case
118:51 - okay hello and welcome to another coding
118:54 - challenge this challenge is going to
118:55 - happen in three parts the goal is to
118:57 - eventually in processing make these 3D
119:01 - super shapes so there's like these weird
119:04 - crazy formulas that you can find this is
119:06 - my reference that uh there'll be a link
119:07 - to it in um in the uh video's
119:10 - description on paul.net which goes
119:13 - through the math Behind These super
119:15 - shapes and what they look like when you
119:17 - render them with different variables but
119:19 - but I'm going to start way back I'm
119:21 - going to go way back into time into a
119:23 - much simpler place and rather than make
119:26 - a 3D so the last piece is 3D super shape
119:30 - the second piece is 2D super shape but
119:33 - the first piece is actually just
119:34 - something called the super ellipse the
119:37 - super ellipse is going to be uh an a
119:39 - simple example to show you how to build
119:42 - a shape that satisfies a particular
119:45 - formula and that particular formula is
119:48 - right here sorry on Wikipedia IIA it is
119:50 - this particular formula right here so
119:53 - let me talk to you a little bit about
119:54 - the origins of this super ellipse
119:57 - formula okay so you might be familiar
120:01 - you might remember this shape from my
120:03 - previous video polar coordinates and
120:05 - trigonometry it is called a circle so a
120:08 - circle is a shape that has a center
120:12 - point and a
120:14 - radius and you can think of describing
120:18 - any point along the outside of that
120:20 - Circle by that radius and some angle of
120:24 - rotation but you can also think of
120:27 - it as U sorry a x and a y and so we know
120:33 - through the Pythagorean theorem that
120:36 - with a right triangle A2 + B2 = c^2 or
120:40 - x^2 + y^2 = r 2 we also know through the
120:45 - definition of what s and cosine mean s
120:48 - being opposite over a hypotenuse cosine
120:51 - being adjacent over hypotenuse we can
120:53 - solve for x and y based on R and Theta
120:56 - so x = r * cine of theta and Y = R * sin
121:04 - of theta so knowing this we can actually
121:08 - use these formulas to set a whole bunch
121:11 - of vertex points and draw a circle
121:14 - without the ellipse function with begin
121:16 - shape and shape and vertex let's
121:18 - actually go do that really quickly right
121:19 - now in the code and we're going to come
121:21 - back so we're go do that and I'm going
121:23 - to come back to this formula and show
121:24 - you show you what happens to that
121:25 - particular ellipse so if I go I've got a
121:28 - a blank oops excuse me a blank code
121:30 - example right here um it's running in
121:32 - the browser it's doing absolutely
121:34 - nothing but I can in draw I can say okay
121:40 - let's make a so let's make a loop I'm
121:42 - going to say for VAR a equals z a is
121:46 - less than 2 pi A+ equals some amount
121:52 - like
121:53 - 0.1 I'm going to say okay I need to
121:55 - solve for x and I want to have an r a
121:58 - radius R equals 100 or 200 100 is fine
122:04 - so x equals R * cosine of that angle and
122:08 - yal R * s of that angle so if I just
122:11 - draw a bunch of
122:13 - points at those x's and y's and if I
122:16 - start also by translating
122:19 - because I want the origin point just for
122:22 - this example to be in the center of the
122:24 - window if I run
122:27 - this and maybe I need to say a stroke
122:30 - 255 so you can see those points you can
122:33 - see they're all the points along a
122:35 - circle for every I'm incrementing an
122:37 - angle and I've got all these points
122:38 - along the circle now I could connect
122:40 - them by saying here begin
122:42 - shape and I could say N
122:46 - Shape and instead of point I could say
122:48 - vert
122:49 - ver and then now you can see I've got a
122:52 - circle and it's actually even filled in
122:54 - but just um just so you can see I can
122:57 - say no
122:58 - fill and you can see this now you notice
123:01 - there's a little break point here it's
123:02 - because my last point doesn't actually
123:04 - equal my first point and I could be more
123:06 - thoughtful about this but I could also
123:08 - just say n-shaped close so if I say
123:10 - n-shaped close there
123:13 - then it's now closed so there's the
123:15 - circle so this is me this is like we
123:18 - just easing into this this is not a
123:20 - super ellipse it's an ellipse and it's
123:23 - entirely based on this particular
123:26 - formula now the super ellipse formula
123:28 - looks a little bit different it looks
123:30 - like
123:32 - this x / a to the nth Power Plus y / B
123:40 - and by the way the absolute value of
123:42 - those whether X is plus or minus to the
123:45 - N value equals 1 so you can see this is
123:50 - actually short sorry this is actually a
123:53 - particular case of this formula what if
123:56 - a equals uh r and b equals
124:01 - R I'm in the wrong side of this pen or
124:03 - maybe I'm not this Pen's just getting
124:05 - worse if a equal R and B equal R and Nal
124:08 - 2 what is this formula this is x / r^ 2
124:14 - + y / r^ 2 = 1 or x^2 + y^2 = r^2 and
124:21 - the absolute value doesn't matter CU a
124:23 - negative or a positive is squared and
124:25 - becomes a positive so this formula is
124:28 - actually just a simple case of this
124:30 - formula and in some CA in in the same
124:33 - sense there this is a simplifi this
124:36 - these are the ways to calculate the X
124:37 - and Y based on Theta for this particular
124:40 - formula so a circle is actually all the
124:42 - X and Y points that satisfy this
124:45 - equation x^2 + y^2 = r^2 a super excuse
124:49 - me I'm falling over here I don't have I
124:51 - have superpowers of clumsiness a super
124:55 - lipse is all of the X and y's that
124:57 - satisfy this particular formula what if
124:59 - it's n to the fourth power what if you
125:01 - have a different a and a different B
125:03 - what kinds of shapes can you get if you
125:05 - plug different values in so the question
125:07 - is though what are the equivalent polar
125:10 - to cartisian transformation form how do
125:12 - you get from Theta all the different
125:14 - angles to the X and the Y that's how I
125:17 - did it codewise
125:19 - over here right these two formulas were
125:21 - rather simple how do I get the
125:24 - equivalent formulas for the more General
125:26 - super ellipse shape so I could try to
125:29 - derive it but I'm just going to look up
125:31 - the answer for that on Wikipedia and and
125:34 - Implement that answer here in this
125:36 - particular code example and perhaps if
125:38 - people are interested I could do another
125:40 - video we could try to look at bit more
125:42 - behind the math or maths depending on
125:45 - how you like to say it um uh behind this
125:47 - so let me go back back to Wikipedia and
125:49 - I can actually look right here and you
125:51 - can see by the way you get different
125:53 - kinds of shapes based on what the value
125:55 - of n is but this is really the formula
125:58 - that I care about so what I care about
126:00 - is how do I solve for x and y as a
126:02 - function of theta function of the angle
126:04 - and here I could see X as a function of
126:07 - theta is the absolute value of theta to
126:10 - the 2 over n power * a * some function
126:13 - called s of cosine of theta okay so
126:16 - let's at least see what happens can I
126:18 - copy paste this into my code I can't
126:20 - even select it so I'm going to try to
126:22 - remember this we'll go back and forth
126:23 - between it so I'm now going to change
126:26 - this to be super ellipse I comment that
126:28 - out and I'm going to go down here and
126:31 - I'm going to say varx equals I've
126:33 - already forgotten the absolute value of
126:36 - cosine of that
126:39 - angle and now i' I've got a little
126:42 - awkwardness because I've got these
126:43 - variables called A and B here and I want
126:45 - to keep that so I'm actually going to
126:48 - just change this to
126:51 - angle I'm going to use the word angle
126:54 - here um just to be a bit more explicit
126:57 - there so I want absolute value of cosine
126:59 - of angle to um and I want to take that
127:04 - and put it to
127:06 - what the the absolute value of cosine to
127:10 - the 2 / n's power so let's make a
127:14 - variable called na which is going to be
127:17 - 2 / n
127:19 - so to the na power so X is I know the
127:23 - absolute value of cosine of the angle to
127:25 - the 2 over n's
127:27 - power times what
127:32 - a times what some function called sgn
127:36 - which I will make up myself
127:38 - sgn
127:40 - of cosine of that angle so uh this I
127:45 - don't have a lot of space here so I'm
127:46 - going to move this out so now you can
127:48 - see it you can see this entire this is
127:50 - me implementing that exact formula the
127:52 - absolute value of cosine of the angle to
127:54 - the 2 N power time a times this function
127:58 - called s of cosine of angle which I'll
128:00 - get to you and now I need to do y is
128:02 - actually the same thing but change this
128:03 - to S change this to B and change this to
128:06 - sign so and this is y so we need a few
128:10 - more variables here instead of R I Need
128:12 - A and B so I'm going to I'm going to
128:15 - make them both equal to 100 right now
128:17 - and I need an n
128:19 - and I'm going to make n just for right
128:21 - now equal to two so if n is equal to two
128:24 - this should actually get us just that
128:26 - original plain old
128:28 - Circle right because what's two ID two
128:31 - is one to the on power is just cosine of
128:33 - angle so now how do we deal with this
128:35 - sign function so the sign function is
128:38 - actually a special function that just
128:41 - says that you want the sign of whatever
128:45 - any number that you pass in there if
128:47 - that number of positive I should get the
128:49 - value one if that number is negative I
128:52 - should get the value negative one and if
128:54 - that value is zero I should get the
128:55 - value zero so the sign function is just
128:57 - a function that takes any value and
129:00 - tells you whether it's positive or
129:01 - negative so we can actually write a
129:04 - function in P5 that does that for us so
129:07 - back over here if I write a function and
129:10 - call it sgn and it gets some value all I
129:14 - have to do is say if value is greater
129:16 - than zero return one
129:20 - else if value is less than zero return
129:24 - NE 1 else return zero so this is a sign
129:28 - function it receives a value and this is
129:30 - very long-winded I'm sure you could come
129:32 - up with some clever condensed shorthand
129:34 - way of writing this but I'm being very
129:36 - explicit greater than zero give me a one
129:38 - less than zero give me a negative 1 or
129:40 - else zero this is actually going to kind
129:42 - of tell us what quadrant we're in in
129:44 - that super ellipse so we should now we
129:47 - have the formula in here we should now
129:49 - instead we're not using this simplified
129:51 - version anymore we're using this formula
129:53 - now we should be able to get a nice
129:55 - super ellipse so let me go back here
129:57 - whoops and hit refresh I see the regular
130:01 - old Circle that's good so let's get a
130:03 - little crazy and let's put like the
130:05 - number four in here and see what I get
130:08 - ah you can see now I have a rounded
130:10 - rectangle kind of almost so let's make a
130:13 - slider for n so I'm going to create a
130:17 - slider
130:18 - and I'm going to say slider equals
130:20 - create slider slide when you make a
130:22 - slider you need four arguments uh what
130:25 - is the minimum value what is the maximum
130:27 - value what is the starting value and
130:29 - what is the
130:31 - increment and uh what I'm going to do is
130:34 - in draw I'm going to say n equals
130:36 - slider. value so now whenever I tweak
130:40 - that slider I should be able to change
130:43 - FIP so that's n equals 2 and you can see
130:45 - as I move the slider what I get oh now
130:47 - that was like really really hard to see
130:48 - but you can see as I'm moving so I'm
130:50 - getting all the different possible uh
130:52 - super ellipse shapes now I could also
130:54 - change A and B like for example what if
130:56 - I make uh a 200 and B is 100 you can see
131:01 - that's just an ellipse now and I get
131:03 - other kinds of shapes with that so you
131:05 - can see this is the beginning of a super
131:08 - formula it's just a super ellipse I have
131:10 - a single angle I have some weird sort of
131:13 - conversion that I need to do to get an X
131:15 - and Y and then I have a begin shape and
131:16 - end shape so in the next video what I'm
131:18 - going to do is instead of showing you
131:20 - how to do this with just and let me come
131:23 - back how to do this with just this
131:26 - particular formula the next Formula I
131:29 - want to approach is how do I get all the
131:31 - X and y's that
131:33 - satisfy I'm going to scroll up to un
131:36 - this particular formula so when I use
131:39 - this particular formula which just has a
131:41 - lot more math in it but essentially the
131:43 - codee's going to be exactly the same I'm
131:45 - going to you're going to see how you can
131:46 - get all the variety of these different
131:48 - kinds of shapes and then at some point
131:52 - once we get to there we should be able
131:53 - to then take this formula and move it
131:56 - into 3D to create volumes so I actually
131:59 - have never done this part before I've
132:01 - done the one the superellipse and the 2D
132:03 - super shape and this that'll come uh in
132:06 - the next video which I'll release at
132:08 - some point from now and then uh we'll
132:10 - move into 3D so I hope you enjoyed
132:12 - watching the super lips video give it a
132:14 - try try adding some colors in it can you
132:16 - make a super rainbow I don't know what
132:17 - that would be try making that uh and see
132:20 - what you get uh what other kind of
132:21 - interactive features can you do what
132:23 - kind of questions do you have about the
132:24 - math and let me know how that goes
132:26 - thanks for
132:28 - watching okay
132:33 - um ah so somebody is pointing out in the
132:36 - chat that JavaScript has a math. sign
132:39 - function so I could have just used that
132:41 - um and I wonder if P5 actually has that
132:43 - function let's try replacing it math.
132:47 - sign
132:49 - uh oh yeah looks like that I could just
132:52 - use that so I should have just used that
132:54 - I don't think that's overloaded in P5 in
132:57 - global
132:58 - scope yeah so it's not but you know we
133:02 - learned something so that's that's a
133:05 - good um yeah the formulas are
133:10 - scary the point of me is these videos is
133:13 - try to make them seem less scary I don't
133:14 - know if I succeeded at that okay
133:17 - everybody so it is about 2:40 I'm about
133:19 - 10 minutes past when I said needed to go
133:22 - but I'm I can tolerate a few more
133:24 - minutes here if anybody uh I know that
133:26 - some people requested like a little some
133:28 - question and answers if anybody has any
133:30 - questions they want to ask I can answer
133:31 - maybe just a few General random
133:33 - questions before I
133:41 - go
133:44 - um I'm looking in the chat to see if I
133:47 - anybody made any other good
133:49 - points that I
133:53 - missed
133:58 - uh oh yeah so I should one thing I I'll
134:02 - mention this when I do a followup I
134:04 - should really be more thoughtful about
134:07 - um here like so I probably should create
134:10 - a variable called like step and say like
134:12 - 2 pi ID 100 just so it's
134:16 - like there sort of an number of points
134:18 - for all the angles from 0 to 2 pi but in
134:21 - the end it kind of looks the same but
134:24 - yes that's going to matter more when
134:25 - there's a bit more of a fine finer
134:27 - detail on certain things so um I'm going
134:30 - to leave that out though because I'll
134:32 - try to remember to mention that in the
134:33 - next
134:34 - video let me see what other questions
134:36 - there are so yeah so the funny thing is
134:40 - someone's asking if I have feet so first
134:41 - of all I do have feet I don't know if
134:43 - there's any like non awkward way I can
134:45 - show you my you know legs but well I'm
134:48 - almost knocked over the table there
134:50 - everything's fine though I just I just
134:51 - bumped um but I actually what's funny is
134:55 - I have these rainbow socks I was think
134:57 - oh I could wear the rainbow socks but
134:58 - nobody able to see them need a rainbow
135:01 - t-shirt I guess okay
135:03 - um
135:05 - uh are your polar coordinates and trig
135:08 - tutorials on YouTube yes they are so let
135:10 - me find those for
135:12 - you uh let me just Google uh actually so
135:15 - let me go to YouTube shiffman
135:18 - um and the place that you could find
135:21 - them is under here I don't know if how
135:24 - well you can see this uh the nature of
135:27 - code videos and I would I'm pretty sure
135:30 - most of them are in this chapter 3
135:34 - oscillation playlist so trigonometry and
135:37 - polar coordinates here this now this I
135:40 - should warn you about some of these
135:41 - videos are really old being like I made
135:44 - them like four years ago quality isn't
135:46 - as good I think I was funnier that then
135:48 - that's a little bit crazier um but uh so
135:52 - you know let me know how that goes if
135:53 - that matches up well um but this is the
135:55 - one and obviously there's other aspects
135:57 - of this in U because this is going
135:59 - towards like simulating pendulums and
136:01 - springs and that sort of thing as
136:04 - well
136:06 - um uh are you ending soon yes I'm going
136:08 - to go in just a few minutes I've been
136:10 - this has been a 2hour and 15 minute live
136:12 - stream two hours is really my limit I
136:14 - need to do a better job of keeping
136:15 - myself to that um also ask are you a
136:19 - teacher uh so I teach at a program uh
136:22 - it's called ITP I'm just going to go to
136:23 - the website it's at NYU this is the URL
136:26 - tish. nyu.edu ITP it's a two-year
136:30 - master's program in technology art and
136:33 - creative applications of Technology
136:35 - Loosely I encourage you to learn about
136:37 - this program and I also do have an
136:39 - online course uh which is with a company
136:42 - called Caden and this is the URL for
136:45 - that cad.com courses thee of code
136:47 - modinfo so this is something you can
136:49 - sign up and take online as
136:51 - well
136:54 - um uh what temperature is it well let me
136:57 - look at the weather in New York
136:59 - City and I would say it's probably like
137:02 - five degrees 5 to 10 degrees of warmer
137:03 - in this room it is 82 degrees uh sunny
137:07 - and 82 in New York City right now I
137:09 - would say it's probably 90 degrees in
137:10 - this room
137:13 - um ah so everyone's uh I'm getting a lot
137:16 - of people have been asking about
137:18 - uh 3D reaction
137:21 - diffusion so to be honest okay so the
137:24 - reaction diffusion example
137:26 - tutorial uh works on so I'll mention
137:28 - this I'll try to get people started on
137:31 - this so the reaction to diffusion
137:38 - tutorial
137:42 - works
137:43 - by having a particular amount of
137:46 - chemicals of A and B in a particular
137:49 - cell in a two-dimensional plane and it
137:52 - involves having
137:54 - weights um sorry 0 2 .05 sorry 0.05 2
138:01 - 052
138:05 - 0521 so it involves doing using a
138:08 - formula to add up all of the chemical
138:11 - amounts of the chemicals of this cell
138:13 - and its neighbors if you watch the video
138:15 - you'll see that formula so to do that
138:18 - 3D what you'll need to do is not only
138:21 - consider 2D Neighbors which there's only
138:24 - eight of them but in 3D there would be 9
138:27 - + 9 plus those eight so or n there's 27
138:30 - cells total so you'll need to and
138:33 - actually if you look at my mener sponge
138:35 - video I do a sort of 3D cube thing with
138:38 - 27 cells which you can look at that as
138:40 - some some Clues so a it's just about
138:43 - taking that formula and that instead of
138:44 - having a nested Loop through two rows
138:47 - and columns you need a three nested Loop
138:49 - through row rows columns and depth I
138:51 - guess and once you've done that you also
138:54 - need a way of visualizing it so one way
138:56 - of doing it might be to have each cell
138:59 - be a cube with transparency and have the
139:01 - level of transparency tied to the amount
139:03 - of chemicals I'm not sure so um there's
139:06 - a variety of ways you could try
139:07 - approaching that so I honestly haven't
139:09 - done that before I really try to stay
139:10 - away from 3D stuff but I would encourage
139:12 - you guys to get started on that and I'm
139:13 - absolutely happy to try doing a video at
139:15 - some
139:16 - point uh
139:18 - oh yeah everybody really wants to do uh
139:21 - I've defin I've made a bunch of videos
139:23 - about pear and nois already so if you
139:26 - um I'm curious what would come up but if
139:29 - you Google peino shiffman
139:32 - YouTube you can see there's
139:34 - a several
139:38 - videos uh 3D terrain with pein noise
139:41 - there's some other people's pearing
139:42 - noise there's this pearing noise video
139:44 - there's a Caden video on pearing noise
139:46 - so you should be able to find that
139:49 - yes reaction diffusion is a is an
139:50 - example of a cellular automaton works
139:52 - exactly the same way in my view
139:56 - um um uh S I know everyone really wants
139:59 - me to do videos on sound I gotta I gotta
140:01 - bump that up so that'll happen let's
140:04 - let's make a let me commit to doing that
140:06 - maybe next week I want you guys to keep
140:08 - me honest about that especially in the
140:09 - slack uh the slack is where I'm uh kind
140:13 - of have a discussion the slack is a
140:14 - group you can join if you subscribe to
140:16 - the patreon and I have a topics
140:18 - discussion group going on in there so um
140:20 - but just tweet me remind me in the
140:23 - comments that sort of thing um uh a
140:27 - harmonograph I don't know even know what
140:29 - that is but I'm gonna look like that so
140:31 - I'm definitely going to do sound I
140:32 - apologize for not getting to it honestly
140:33 - the stumbling block is I got to like set
140:35 - up a like a mixing board in here and get
140:37 - sound coming out through the stream and
140:39 - so um I need to do that and I'm sort of
140:42 - motivated to do that I just haven't
140:43 - gotten around to it um because a lot of
140:46 - times what happens here is like come
140:47 - here and I rather than like work on my
140:49 - setup or topic ideas I just like turn on
140:51 - the recording but if I do another live
140:54 - stream this week it would be Thursday or
140:56 - Friday otherwise the next one will be
140:58 - next uh Monday or Tuesday so uh okay so
141:01 - let me briefly just mention now that I'm
141:02 - kind of wrapping up if you want to
141:04 - subscribe to updates email updates for
141:07 - when I'm going to do these live streams
141:09 - you can just go to shiffman domnet and
141:11 - there's a little like uh place where you
141:13 - can put in your email if you're
141:15 - interested in uh supporting this channel
141:17 - through patreon uh and I hesitate to
141:19 - plug this too much because I'm I'm
141:21 - thrilled for people just to watch and
141:23 - enjoy and participate in the community
141:25 - but you can support it through patreon
141:27 - at
141:28 - patreon.com coding rainbow and the
141:30 - benefits that I'm offering for that are
141:32 - a private slack Channel um something
141:36 - else I can't remember oh and a shared uh
141:38 - Google Drive where you can sort of
141:39 - download all the video files if you want
141:40 - to watch them offline honestly if
141:42 - somebody really wants that stuff and
141:44 - doesn't want to subscribe to the patreon
141:45 - I probably would say okay but but I
141:47 - guess I have to have some some stuff
141:49 - anyway okay
141:51 - um okay so um uh oh will so I'm going to
141:57 - use P5 GS for sound so I'm going to do
141:58 - all my sound stuff in the browser using
142:00 - P5 GS I will do sound effects sound
142:03 - synthesis and even analyzing um sound
142:05 - from a microphone um so I'm going to do
142:07 - all that type of stuff in p5js
142:11 - uh okay so I think I'm going to go I'm
142:14 - going to try to find some cooler air
142:15 - thank you guys for being patient with me
142:17 - today and watching and participating and
142:20 - being enthusiastic and supportive I
142:23 - really appreciate it I'm having I feel
142:25 - like some of these math topics are kind
142:27 - of difficult and actually to be honest
142:28 - with you I would be so pleased to do the
142:30 - sound video tutorials because I feel
142:31 - like those will actually be a lot
142:32 - simpler and many ways to do and uh
142:35 - hopefully we'll have cooler I don't know
142:37 - what the weather's going to be in New
142:38 - York next week New York weather 10day
142:41 - forecast let's see when are there
142:44 - uh uh so uh how do I get the 10 Tuesday
142:47 - Wednesday Thursday Friday H Monday it
142:49 - looks like it's still going to be warm
142:51 - but hopefully we'll get some cooler days
142:52 - while I get some cooler air in here and
142:55 - figure out uh to make it less hot but
142:57 - also I think if I just if I do like one
142:59 - hour take a break one hour it'll it
143:01 - won't heat up as much so anyway okay so
143:05 - um thank you guys for your support I'm
143:07 - going to turn off the stream I have
143:09 - still have many more that will be more
143:12 - videos that will get uploaded as
143:13 - Standalone chunks uh I haven't I I think
143:16 - I actually thing I'll say that I'm
143:17 - pleased with is I actually have enough
143:19 - people now watching my YouTube channel
143:20 - that I honestly can't keep up with the
143:22 - comments so I was daily making sure I
143:24 - responded to every single comment on
143:26 - every single YouTube video for a while
143:27 - and it's now not that it exploded but it
143:29 - but I will there uh I I will try to go
143:31 - back and answer as many of those that I
143:33 - can and you can also contact me on
143:35 - Twitter at shiftman as well with
143:37 - feedback and suggestions okay uh I'm gon
143:40 - to hit a button over here which is going
143:41 - to turn off this stream and I'm going to
143:42 - say goodbye and I look forward to seeing
143:44 - you guys in the next live stream I'm
143:46 - 100% committed to doing these at least
143:48 - once per week and if I can I'm going to
143:50 - do them twice a week so right now it's
143:52 - up in the air whether I'll get one in on
143:53 - Friday but if I so either be on Friday
143:56 - or next Monday or Tuesday okay see you
143:58 - guys soon thanks for
144:01 - watching