00:01 - okay good morning here we are again um
00:04 - this video we're going to focus on a
00:06 - gaussian distribution of random numbers
00:08 - now why is this something that matters
00:10 - to us okay so we were looking at the
00:13 - random Walker and that random Walker
00:15 - made its little random movements all
00:16 - around the around the window and we even
00:18 - began to kind of take a little step with
00:20 - that and say ah we could kind of adjust
00:22 - probabilities instead of it having an
00:23 - equal probability of going in any
00:25 - direction at any moment we could say
00:27 - it's going to be more likely to go to
00:28 - the right or more likely to go up or
00:30 - less likely to go down we could start to
00:31 - control we could get control over the
00:33 - randomness in our life right control
00:35 - that's our goal here but really what one
00:38 - of the things that I want to say in this
00:40 - sort of section before we get into the
00:41 - real motion and physics stuff we're
00:43 - going to do in this video series is um
00:46 - eliminate eliminate Randomness from your
00:48 - life not forever but as an exercise to
00:52 - yourself Randomness might have been a
00:53 - bit of a crutch to you maybe maybe you
00:55 - just you you learned how to draw stuff
00:57 - in processing you learned how to move
00:58 - things around the screen you said I
00:59 - don't know it needs to be more Dynamic
01:01 - let's just make it all random random
01:03 - colors random shapes random positions
01:04 - random speeds what we're doing here is
01:06 - saying um is there a more thoughtful
01:09 - approach we can take how can we um get
01:11 - control over Randomness so we can
01:13 - control the distribution of random
01:14 - numbers we get or how can we create
01:16 - algorithms to generate numbers in such a
01:18 - way that we have a more organic set of
01:20 - random numbers gaussian pearing noise
01:22 - we're going to look at um a way of
01:24 - customizing distribution of random
01:25 - numbers with the Monte Carlo scenario so
01:28 - we're going to look at a few different
01:29 - things just as kind kind of again we're
01:30 - just getting started here getting used
01:32 - to back into using processing if you
01:33 - haven't for a while before we get into
01:35 - the real motion stuff so Gan
01:38 - distributions of random numbers so
01:39 - before I started this video I drew this
01:41 - little mircat I spent I only spent about
01:43 - 45 minutes on it but I can't draw so
01:46 - this I think is pretty good but um the a
01:48 - mircat scenario came up in a previous
01:49 - video let's say we're trying to make a
01:51 - population of Mir cats that's our
01:52 - simulation and we need Heights for them
01:54 - so we
01:56 - say
01:58 - float h equals
02:01 - random 100 comma 200 I'm picking a
02:05 - random number between 100 and 200 that's
02:09 - going to be my height well what's going
02:11 - to happen I actually have an example
02:12 - here that I want to run and what this
02:15 - example is doing is it's picking a
02:17 - random number associated with an exp
02:19 - position on the screen and every time it
02:20 - picks it it the the um rectangle starts
02:23 - growing up and you can find this example
02:25 - it's uh introduction uh example number
02:28 - two random distribution so these numbers
02:30 - are go these these These Bars are going
02:32 - up and up you can see we have an even
02:33 - distribution of random numbers there's
02:35 - Randomness built in there but we're
02:37 - getting uh this if we if we think about
02:39 - this now in terms uh in terms of the
02:41 - mircat that means if we were to graph
02:44 - all of the Mir cats Heights from 100 to
02:46 - 200 if we picked random numbers a
02:48 - perfect random number generator over an
02:50 - infinite amount of time we'd get this
02:52 - graph but this as we stated before is
02:55 - perhaps not how it is in nature there
02:57 - aren't there are probably actually I
02:59 - don't again again I don't know anything
03:00 - about Mir cats but if you look at human
03:01 - beings there's you know most people are
03:04 - about the same average height then
03:05 - there's some people that are taller some
03:06 - people are shorter very few people that
03:07 - are really tall very few people that are
03:09 - really short there is a normal
03:12 - distribution of heights that word normal
03:14 - also we use the word Gan for the
03:17 - mathematician um this is a distribution
03:20 - of random numbers that we find often in
03:22 - nature or in test taking apparently the
03:25 - bell curve you might have heard it out
03:27 - there will be this will this will be on
03:28 - the test there will be no test should
03:29 - there be a test maybe there should be a
03:31 - test I don't know why I drew that as
03:31 - dotted lines so this is what that graph
03:34 - looks like we want a lot of Mir cats
03:37 - that have a height around the average
03:39 - otherwise known as the
03:41 - mean and then very few outliers but some
03:44 - there's still always a chance so how do
03:45 - we rewrite this code well one thing we
03:49 - have to do is we have to at the top of
03:51 - our code import a class and actually we
03:54 - might add gussian random numbers into
03:56 - processing which just for which I think
03:58 - would make sense but for right now you
04:00 - have to import this random class it
04:01 - comes from java once you import that
04:04 - class you can declare a random object
04:07 - I'm going to call it a generator gen for
04:09 - short a random number generator and as
04:12 - with any object we've got to initialize
04:14 - it as a new random a new object this
04:16 - generator is now responsible for our
04:19 - random numbers so instead of playing
04:20 - float H give us a random number we can
04:23 - say float H equals
04:28 - gen. next
04:31 - gussian
04:33 - now let's actually put this into let's
04:35 - make a little simple sketch for
04:36 - ourselves and let's put this in and see
04:38 - how far we
04:42 - get okay now I'm going to make a new
04:45 - processing sketch this is fun live
04:49 - typing and we're going to
04:51 - import java. ut. random this laptop is
04:55 - on a pile of books it's very unstable I
04:57 - need a laptop stand okay and uh uh we're
05:01 - going to declare a random
05:03 - generator and U make a window size oh
05:08 - boy this is very hard to type I'm G to
05:11 - have to fix this setup uh and uh here we
05:15 - go background 255 so I don't know let's
05:19 - pick let's see let's let's say float
05:23 - H equals generator. next
05:27 - gaussian and I don't know what just to
05:30 - see what this
05:32 - does let's tie this to the size of a
05:36 - circle that will put in the middle of
05:40 - the
05:44 - window ah I I got to save this to
05:47 - something somewhere okay uh I don't have
05:49 - a system for this
05:51 - yet uh Gan test sorry okay so this will
05:57 - I'm standing in front of it the whole
05:58 - time I I knew knew I was forgetting
06:00 - something oh this is terrible this video
06:02 - was going so well I thought but okay so
06:04 - I'm just going to move this over fancy
06:07 - or fancy system failed us okay so you
06:08 - can see I typed in some basic stuff now
06:11 - this gives me like when I lean against
06:13 - the wall here gives me this like chill
06:15 - scratch like nails on chalkboard okay
06:18 - can I can get that out of my system okay
06:20 - so ah so this didn't work can I convert
06:22 - from double to float so this is a little
06:24 - bit of an unfortunate thing which is
06:26 - that the um Java class gives us a double
06:29 - instead of float so I'm just going to
06:31 - convert this to a float really quickly
06:33 - and then run this and it says Ah it
06:36 - doesn't want to do that for a double
06:38 - because processing doesn't really have
06:39 - anything to do with doubles so here we
06:41 - go so I'm just going to change that to
06:43 - the casting syntax and now we've got it
06:46 - okay oh I see a little dot up there so
06:48 - what did we get is that a normal
06:50 - distribution they're all seem the same
06:51 - it's the same it's drawing it over and
06:53 - over again is it random is it not random
06:55 - H what's going on okay so the thing that
06:58 - we have to understand is
07:00 - what are the numbers that come out of
07:01 - this function well we did I got to shoot
07:06 - I'm over here the thing we got to
07:07 - remember is what are the numbers that
07:08 - come out of this
07:10 - function um okay so they here we gave
07:12 - ourselves a range between 100 and 200 we
07:15 - didn't give a range here what this does
07:17 - is it gives us a gussian random number
07:19 - with a
07:21 - mean equal to zero and a standard
07:25 - deviation equal to
07:28 - one now mean we may perhaps we
07:31 - understand already mean is the average
07:34 - right this is that that Center maybe we
07:36 - want our average to be 150 that's our
07:39 - average height that we want um but what
07:42 - does standard deviation mean now we
07:44 - could go through some formulas and we
07:46 - could look at how we calculate standard
07:48 - deviation standard deviation we take all
07:52 - of the heights we we get the difference
07:54 - of the Heights from the average we
07:55 - Square those we take the average of all
07:57 - the squares then we take the square root
07:59 - of that and and that's our uh standard
08:01 - deviation blah blah blah so but I'm
08:05 - going to give you some resources to if
08:07 - you can look in the um nature of code
08:09 - introduction chapter um it goes through
08:11 - how to actually calculate standard
08:12 - deviation but for us right now what I
08:14 - want is just get sort of the feeling of
08:15 - standard deviation because we can just
08:17 - kind of play with it in our code and see
08:19 - what kind of results we get um so what
08:21 - is the feeling what is what does
08:24 - standard deviation feel like to to you
08:26 - here's what it feels like to me let's
08:28 - draw that curve a number of different
08:32 - ways I don't know that's probably pretty
08:35 - good we can see this graph has a very
08:39 - small standard deviation because just
08:41 - about everything clusters around the
08:43 - mean and nothing um varies from the mean
08:46 - very much these there a lot of elements
08:48 - vary from the mean a lot of elements
08:50 - vary from the mean a lot of more
08:52 - elements vary from the mean when you
08:53 - have a large standard deviation you have
08:55 - a lot of tall and short Mir cats when
08:57 - you have a tiny standard deviation you
08:59 - don't have have very many tall and short
09:00 - ones you just got a lot of average ones
09:02 - so we can use this number to play around
09:04 - with how how much we're spreading out
09:07 - from that mean how random are we really
09:09 - getting how much more are we clustering
09:10 - around that mean so how do we adjust for
09:13 - that well if um so okay so if this gives
09:17 - us a mean and standard deviation of one
09:20 - we can always adjust by saying H equals
09:23 - h plus what we want our mean to
09:27 - be um right so we can only say if the
09:30 - mean is zero but we want everything to
09:32 - Cluster around 150 we can just add 150
09:35 - to every single element now if we want
09:37 - to spread or Shrink this standard
09:40 - deviation spread it out or Shrink it
09:42 - what we should do before
09:44 - that is we should multiply by our own
09:47 - I'm make a variable called STD DDE
09:50 - standard deviation so once we get this
09:53 - galin random number out of processing
09:55 - with a mean of zero and the standard
09:56 - deviation of one first we stretch it or
09:59 - compress it by adjusting the standard
10:01 - deviation by multiplying and then we
10:03 - shift the whole graph over by adding the
10:05 - mean to it um if this is confusing to
10:07 - you which maybe it
10:10 - is you can think of it this in
10:13 - steps so let's look at this this sort of
10:16 - GRA and this is zero and maybe maybe it
10:19 - gave us this so first what we do is we
10:21 - take this is our get ging Rand numbers
10:24 - first we do is multiply let's say our
10:25 - standard deviation is two and our uh a
10:29 - our average is 100 so first we multiply
10:31 - every number here by two and what we get
10:34 - is a slightly wider graph we just
10:37 - multiplied it so this number this is
10:39 - pulls out because everything's
10:41 - multiplied by two then what we do is we
10:43 - add 100 to it so adding 100 to every
10:45 - number we just shifted it over I kind of
10:49 - widened it as well so that the average
10:51 - is around 100 so this is the process we
10:53 - can get that gussian random number out
10:55 - stretch it move it adjust the standard
10:57 - deviation adjust the mean let's go we'll
10:59 - take a look at this now in our example
11:01 - um if I walk back
11:05 - here I can say h equals equal H times
11:08 - I'm going to have a standard deviation
11:09 - of 10 and I can say uh H = H + 100 so
11:14 - the mean is 100 and we can see here
11:17 - we're getting some random height random
11:19 - sizes but this is very different than
11:21 - just Randomness you can see they're kind
11:22 - of clustering around one value um just
11:25 - to just to pull up another example of
11:27 - this uh which I want to grab from the
11:32 - introduction
11:34 - here um so this example is of
11:39 - course forgot to have the import
11:41 - statement in here this example is
11:43 - picking a x location with every frame
11:46 - and you can see it's then layering those
11:48 - over top of each other and it gets
11:49 - darker and darker around the center but
11:51 - you see the outliers they're all do get
11:53 - picked every once in a while and if we
11:55 - look at this if we go into the code I
11:57 - can't use this computer today um we can
11:59 - see that here we have a a mean of the
12:01 - middle of the screen and the standard
12:03 - deviation of 60 so if I were to change
12:05 - that standard deviation to
12:07 - 120 we now see we're getting we're
12:09 - getting more and more outliers getting
12:11 - picked if I change that standard
12:13 - deviation to 10 then everything's really
12:16 - getting picked right around the center
12:17 - so you know that could be a variable it
12:19 - could stretch shrink there's lots that
12:20 - you could do with that so um so I I
12:24 - think we're wrapping this up this is
12:25 - actually a 12-minute video which is a
12:27 - little bit longer than I imagined but
12:28 - this is a bit of a tool and you can try
12:30 - to think about so where could you apply
12:31 - this for one maybe uh think about making
12:35 - a design for a face and uh use Gan
12:38 - distributions to design all those
12:39 - elements so the the the nose the size
12:42 - the position how could you make random
12:44 - faces but all kind of appear within the
12:46 - sort with with a gan distribution of
12:48 - values another thing you might look is
12:50 - at the random at the random Walker is
12:52 - there a way you could use a gaussian
12:54 - distribution of random numbers to pick
12:56 - how a random Walker moves around the
12:58 - screen and what would that sort of
12:59 - visual result look like so um try to try
13:03 - to look for something where you used
13:04 - random in your code and instead of using
13:06 - random use gaussian maybe um another
13:09 - thing that just occurred to me is you
13:10 - could think of uh if I were to splatter
13:12 - paint here onto the wall would most of
13:15 - the Paint Spot splatter in the center
13:17 - and then there'd be some outliers could
13:18 - you use gussian random numbers for that
13:20 - and that didn't just occur to me I
13:21 - thought of that beforehand but anyway it
13:23 - occurred to me now to think of it to say
13:25 - that okay so this video was a bit longer
13:27 - than I had hoped and it was not nearly
13:28 - as good as I'd hop but I'm just making
13:30 - them and someday I'm going to uh remake
13:32 - these and maybe you're going to email me
13:34 - and tell me you should really remake it
13:35 - okay I'm going to um press a button and
13:37 - it's G to stop now okay uh here we go