00:01 - Hello, welcome.
00:02 - In this video, I want to look
at an API called the Wordnik
00:05 - API, which is an API that allows
you to get lots of information
00:08 - about words in the
English language.
00:11 - So on the one
hand, this might be
00:12 - relevant to you in that you're
interested in the Wordnik API.
00:15 - On the other hand,
you just might
00:16 - be interested in how
do you work with APIs,
00:18 - how do you work with data.
00:19 - So I'm really looking at
this as a case study of one
00:22 - particular API, and I'll
do a few more videos
00:24 - after this with other APIs,
like The New York Times
00:26 - API and maybe some API
that involves images.
00:29 - So where do we get started here?
00:31 - So I'm using the p5.js
JavaScript library.
00:35 - I'm the p5.js editor, which
you can get at p5js.org.
00:38 - And let's get started.
00:40 - So first of all, what
is this Wordnik thing?
00:44 - So let me go to my friend--
00:48 - my friends are things on
the computer apparently--
00:51 - the browser, and look
at the Wordnik website.
00:53 - So here I am just
at wordnik.com.
00:56 - And I could type in
a word like rainbow.
00:59 - And I could see hear that
Wordnik is giving me lots
01:03 - of information about this word.
01:04 - It's giving me definitions.
01:06 - It's giving me examples.
01:08 - I can see here
etymologies, where
01:10 - does the word come from,
related words, synonyms,
01:12 - equivalents hypernyms.
01:14 - So there's lots of information,
lots of data associated
01:17 - with a particular word.
01:18 - So Wordnik is a vast
dictionary and resource
01:21 - for gathering
information about words.
01:23 - And I don't pretend to be
an expert in it at all.
01:25 - I'm no expert on
anything, actually.
01:28 - But looking at it
from the lens of I'm
01:30 - a person who is talking about
JavaScript code and data APIs,
01:33 - this seems interesting to me.
01:34 - Let's try to make
something with it.
01:36 - So now, this is just
the Wordnik website.
01:38 - There's all this data there.
01:39 - So you have to ask
the question, how
01:41 - do you get access to that data?
01:43 - Well, the lovely thing
here is that Wordnik
01:46 - happens to say to you, oh,
look, we have this data.
01:49 - We want you to have it.
01:50 - And there is this thing called
an API, Application Programming
01:54 - Interface, a way for Wordnik's
server, the programs that
01:57 - run in its server,
to send your program
01:59 - data through this
format known as JSON.
02:03 - And if you don't know
about how that stuff works,
02:05 - you can go back to the
beginning of this video series,
02:08 - which kind of gives
you an introduction
02:09 - to that sort of data format
how this stuff works.
02:11 - But I'm going to
click over here,
02:13 - and I'm just at
developer.wordnik.com now.
02:16 - And if I went to
that, you'll see
02:19 - there's a lot of information
and things that you can look at.
02:22 - But what I'm
looking for is this.
02:24 - I'm looking for this
thing that says Docs.
02:26 - So how easy it is to
use an API is only
02:31 - as good as the documentation
and examples are.
02:33 - And I think Wordnik is
a nice example of an API
02:36 - that has good documentation.
02:38 - And so I'm going to walk
you through how you can--
02:42 - I'm rambling way too much.
02:43 - But I am making a
point, in a way,
02:44 - by rambling, which is that
a lot of the work involved
02:47 - with working with data and
APIs doesn't even have anything
02:49 - to do with writing code.
02:50 - It has to do with reading
the documentation,
02:53 - playing around with the
website, clicking on things,
02:55 - and figuring out how it
works so that you know,
02:58 - by the time you get
to writing code,
02:59 - you know exactly what
to put in your code.
03:01 - And that's the stage
that I'm at right now.
03:03 - So let me click--
03:05 - I don't know where to look.
03:06 - Let me click on Docs,
and here we are.
03:08 - And you can see this might
be unfamiliar to you.
03:11 - Like.
03:12 - What's going on here but?
03:13 - You could see, hmm, ah.
03:15 - So I've looked at this before.
03:17 - So I'm trying to get--
03:18 - I'm like doing like a
method acting thing,
03:20 - where I'm trying to pretend I've
never looked at this before.
03:23 - But I'm seeing here, OK,
there's a bunch of options
03:25 - here to click on.
03:26 - And this is quite
common with APIs,
03:29 - in that they're sort
of commands that you
03:30 - can execute with an API.
03:32 - Like, maybe you want
to ask for information
03:33 - about one particular word.
03:35 - Or maybe you want to get
a list of words back.
03:37 - Or you want to ask
for information
03:39 - about a group of words.
03:40 - So these, what what's what
what's being shown here
03:43 - are the different
API commands that you
03:45 - can kind of start with.
03:46 - And I know for a fact that
in the scenario that I'm
03:49 - imagining in my head, I
want to get information
03:51 - about a particular word.
03:52 - So I'm going to click on this,
and it's going to show me,
03:54 - a-ha.
03:55 - So in one of my
earlier videos, where
03:59 - I looked at Open Weather
Map, the whole thing
04:03 - was figuring out how to
put together this API
04:06 - query out of a bunch of pieces.
04:09 - So what the
documentation is showing
04:10 - you right here is
what are those pieces.
04:13 - And in fact, you
could see, like, mm,
04:15 - if I want to get the
definitions of a word,
04:18 - there's like this
part of the path,
04:19 - then there's that
part of the path.
04:21 - And what's this thing here
in between curly brackets?
04:23 - Oh, that's the thing
that I set myself.
04:26 - So if I want to get the
definitions of the word apple,
04:29 - I need this part of the path
and this part of the path,
04:31 - and I want to put
apple in there.
04:32 - If I want rainbow, I
want rainbow in there.
04:33 - If I want porcupine, I
want porcupine in there.
04:35 - It's just some words I'm
thinking of in my head.
04:38 - So for this particular
example, what
04:40 - I want to do is look
for related words,
04:43 - so words that are
synonyms, words that
04:45 - are antonyms, similar
words, opposite words.
04:48 - Those are the things that
might be intuitive to you.
04:51 - But there's lots of
other ways that words
04:53 - are related to each
other, something
04:54 - that's called a hypernym.
04:56 - Like, furniture is a
hypernym for chair.
04:59 - It's like a broad category.
05:01 - And there are
hyponyms, which are
05:02 - the things in that category.
05:04 - So they can have these
relationships of hierarchy.
05:06 - So there's a lot more to this.
05:07 - And somebody with more
knowledge about it,
05:09 - come and join me someday
and talk about that.
05:11 - But I don't even need
to be an expert on that.
05:13 - I can click on this Related
Words and start to see, ah, OK.
05:17 - Now.
05:18 - this is something that makes
me personally super happy.
05:21 - And it should make
you happy, too,
05:22 - if you want to work for an API--
05:24 - work for-- work with an API--
05:27 - which is that this is a tool.
05:30 - So in order to figure
out how to use the API,
05:33 - this is now an interface where
I can start to do things like,
05:36 - OK let me put the word rainbow
in here, use canonical.
05:40 - Hmm, that must mean
something important.
05:42 - We can kind of read about that
in the documentation later.
05:45 - But false default, that's
my relationship type.
05:47 - Ooh, I could pick a
relationship type.
05:49 - Or I could just
leave that blank.
05:50 - Limit per relationship
type, that must
05:52 - be how many things I get back.
05:54 - So you can see I'm sort
of configuring the API
05:58 - call that I'm going to make.
05:59 - And then look at this button.
06:00 - This is the greatest
button I've ever seen.
06:05 - And I've seen a lot of buttons.
06:06 - And I'm sure I'll see a
greater one later today.
06:08 - But right now it feels like
such a wonderful button
06:10 - because it says Try It Out!
06:12 - So all I need to do
is click on this.
06:14 - And you could see first of
all, look what I've got.
06:16 - I've got the full
path to the API query.
06:20 - So this is that API career that
I spent all this time figuring
06:23 - out with Open Weather Map.
06:24 - The tools of the Wordnik
website are helping
06:26 - me make that query already.
06:28 - So I can just literally
copy/paste this into my code.
06:31 - And then it's also showing
you what the response is.
06:33 - So you can see, ah, look at
this, equivalent-- a sea bow.
06:38 - Oh, a rainbow is
equivalent to a sea bow.
06:41 - I don't know what a sea bow is.
06:43 - I guess it's a bow over the sea.
06:44 - And you can see the
hypernyms, right?
06:46 - Arc is like a broader
category for a rainbow.
06:49 - Bow is a broader category.
06:50 - What other kinds
of bows are there?
06:52 - My whole life I only ever
thought there were rainbows.
06:54 - Now I know there's sea bows
and other kinds of bows.
06:58 - I mean, there's the both
you wear and your head.
07:00 - Cross reference, spurious
rainbow style, synonym, bow.
07:03 - So this is like--
07:04 - to me, this is just fun.
07:06 - I'm getting some
moments of surprise
07:08 - here, getting some data.
07:08 - You might have a real reason
why you're doing this.
07:10 - But the next thing I want
to do just to really be sure
07:13 - that this is working
the way I want
07:14 - is I can take this
full URL, and I'm
07:18 - going to just copy it again
into my web browser just
07:21 - into the address
bar and hit Enter.
07:23 - And you can see, look
at this, this is indeed
07:26 - the data that's coming back.
07:28 - So I've now done
essentially all the work
07:31 - that I need to do before
I start writing code.
07:33 - I found the API.
07:34 - I looked around the website.
07:36 - I enjoyed it.
07:37 - I found that it has
documentation and an API tool
07:39 - to help me configure a query.
07:41 - I did that it.
07:43 - It made the URL address for me.
07:45 - And I put that into
the browser, and I
07:47 - see that I'm getting data.
07:49 - So once I've gotten
through those steps,
07:51 - my next step is to
start writing some code.
07:54 - So really, I need
to use the load JSON
07:56 - function to get this data.
07:57 - And then I need to
practice all the things
07:59 - that I've looked at in
previous videos, which is how
08:02 - do I get-- this is an object.
08:04 - And then there's an
array called words.
08:06 - The whole thing is an array.
08:08 - So how do we dig into the data?
08:09 - And I'm going to get to that.
08:12 - So let's get started.
08:15 - So one thing that I want
to make a point of here
08:17 - is that once again
we have this idea--
08:20 - I feel like I have to use the
whiteboard in the video, which
08:24 - is sort of silly.
08:25 - I don't really have
to use the whiteboard.
08:27 - But again, I need to do
this thing where I think
08:29 - about this API call in pieces.
08:32 - So I might have the
path to the API.
08:36 - I might have my API key
as a particular variable.
08:42 - And then I'm going to create
that API call as like the API
08:46 - plus the API key and then
something that goes here
08:50 - in the middle.
08:51 - This is the word that I want
to search for, like rainbow
08:54 - or something like that.
08:56 - So this is one of
the things that I'm
08:57 - going to have to figure
out is now that I
08:59 - have that really long URL--
09:02 - you can see it up at
the top there-- how do I
09:04 - break it into pieces to
make the query in the code?
09:06 - So let me come back
over here, and let's
09:08 - start writing some code.
09:10 - First I'm just going
to grab this URL,
09:13 - and I'm going to go back to p5.
09:14 - And I'm going to
say var URL equals.
09:18 - And it's this long thing.
09:19 - Now, one thing you'll
notice, by the way,
09:20 - is there's an API
key in there already.
09:22 - Like, whose API key is that?
09:24 - Now, what Wordnik-- actually,
I don't know that this is true.
09:26 - But what I'm speculating
is that Wordnik,
09:28 - when you're using
their tool, just
09:30 - generates a temporary
API key that you
09:32 - can use to try out the API.
09:33 - So hopefully this will work
in my code for a little bit.
09:36 - If not, I have my API
key saved in a file.
09:39 - But again, to do
this yourself, you're
09:41 - going to have to sign up
for an account, developer
09:42 - account with Wordnik,
and get your own API key.
09:44 - Or analyze this video and use
mine, which is fine with me.
09:48 - My API key, your API key, that's
how I feel about my API keys.
09:54 - So couple things I want to
do is I want to first realize
09:57 - that this is the thing--
09:59 - rainbow, right there,
that's the thing
10:01 - that I need to put
into the query myself.
10:04 - So I'm going to put
an end quote here.
10:08 - And then I'm going to
make another variable that
10:13 - stores a rainbow.
10:15 - And then I'm in and make another
variable that says URL 2.
10:19 - So I'm going to just
divided into two parts.
10:22 - So this is one way
of doing it, right?
10:23 - That big URL has the
beginning and the end
10:25 - and the one thing in the
middle that I need to change.
10:28 - So I think this is kind
of a way of doing it.
10:31 - So next what I am going to
do is I'm going to create--
10:38 - I'm going I want to have
a link on the page, which
10:44 - will be like a button.
10:47 - And I'll put the
word rainbow in it.
10:51 - Sorry.
10:52 - I lost my train of
thought for a second.
10:53 - I, like, went into some
sort of trance state,
10:55 - forgot that I was
making a video.
10:56 - Let me come back.
10:57 - What am I doing here?
10:58 - So first of all,
actually, let me just
11:00 - check to make sure this works.
11:01 - So I just want to add load JSON
URL 1 plus the word plus URL 2.
11:08 - And then I need a callback
where that data will come in.
11:11 - So then I'm going to
add that callback.
11:15 - The callback, the
variable, the argument
11:17 - that's part of that
function, that's what gets
11:19 - filled with the data.
11:20 - And I'm going to say
print line data just
11:23 - to see that this works.
11:24 - So oops, and I better save
this as something, Wordnik.
11:28 - So let me run this
and see if it works.
11:31 - And you can see, ah, good,
something is happening there.
11:33 - I got some data back.
11:34 - So first of all,
we can be happy.
11:36 - We know that this idea works.
11:39 - Now what I want to
do is what I want
11:40 - to do is put something on the
screen that when I click on it,
11:43 - it makes that API call.
11:45 - So I'm going to make a--
11:47 - I'm just going to
call it like a link.
11:50 - And I'm going to say link equals
create A with that word in it.
11:57 - And it's going to
link to nothing.
12:00 - So I'm kind of
jumping around here.
12:01 - But in the p5 library,
in the DOM library,
12:05 - there's a function called create
A, which makes an anchor link.
12:08 - You might say A href equals
Google.com and then Google.
12:12 - Here I'm doing--
12:13 - I want the word rainbow
to link but to nothing.
12:15 - I'm just putting the
pound sign in there
12:17 - because it doesn't actually
link to another URL.
12:19 - I'm going to handle
the clicking on it.
12:21 - So if I look at this now,
if I run this sketch,
12:24 - you can see here, there it
is, rainbow up at the top.
12:27 - And I probably
should add no canvas,
12:29 - because there's like
an invisible canvas
12:31 - there that's making
the spacing weird.
12:33 - And I can run this again.
12:34 - You can see, there it
is, is up at the corner.
12:36 - So I don't any clever
styling going on here.
12:39 - But there it is
up at the corner.
12:41 - So now what do I want to do?
12:43 - I want to make it so
when I click that link,
12:47 - I'm going to write a
function called askWordnik.
12:51 - Then, in that
function, askWordnik,
12:56 - I'm going to make that
call to load JSON, right?
12:59 - So here we've got
a-- if I can type.
13:01 - I can type.
13:02 - So here we go, right?
13:03 - What do I have now?
13:05 - I have this web page that
has a single link on it.
13:09 - When I click on that link,
this askWordnik function
13:11 - will be triggered.
13:12 - That askWordnik function we'll
make an API query to Wordnik,
13:16 - and the data will come back.
13:17 - So the question is, what do I
do when the data comes back?
13:21 - So first of all, let's just
see that this is even working.
13:24 - So I'm going to run this again.
13:26 - What I want to see
right now what happens
13:28 - when the data comes back.
13:29 - I just should see something
in the console down here.
13:31 - So I click on Rainbow, and I
see something in the console
13:33 - down here.
13:34 - Perfect.
13:35 - Now what I want to do
is look into that data
13:38 - and pull out a related
word to the word rainbow.
13:41 - So let's go back to here
where I had that data open.
13:44 - Now, what is this?
13:46 - What is this?
13:48 - OK, I don't know.
13:50 - This is an array.
13:52 - You can see that square
bracket at the top
13:54 - means that it's an array.
13:56 - What is each element
of the array?
13:58 - It's a kind of relationship.
14:00 - So each element is a kind of--
each element of the array is,
14:02 - like, equivalency, hypernyms,
maybe cross reference,
14:06 - you can see.
14:06 - And then what's in each
element of the array?
14:11 - A property called
words, which has
14:12 - another array, which are the
actual words that are related.
14:16 - So for example,
if I wanted to get
14:18 - to this particular word, sea
bow, I would say data index 0
14:23 - dot words index 0, right?
14:28 - Data is the whole thing.
14:29 - Index 0 is this first object.
14:31 - Dot words is that property.
14:33 - Index 0 is that sea bow.
14:35 - Let's try that.
14:36 - So I'm going to go
back to my code.
14:39 - And I'm going to say print line
data index 0 dot words index 0.
14:46 - I think that's
what I said, right?
14:48 - Let's just look at that.
14:49 - I'm going to run it.
14:50 - And when I click on
Rainbow, boom, ah.
14:53 - And look at that, the
most beautiful two words
14:55 - in the English language to me
right now-- this is working--
14:57 - sea bow.
14:59 - So what could I do with that?
15:01 - Well, if I have
access to this link,
15:04 - why not just change
the content of it?
15:10 - So I'm going to
say link dot HTML--
15:13 - oops, this is the wrong place.
15:16 - I don't need this draw function.
15:18 - I'm not using it.
15:19 - Link dot HTML is that data.
15:21 - So there we go.
15:24 - And now when I save this and run
it again, let's zoom in here.
15:29 - I'm going to click on Rainbow,
and I'm going to see sea bow.
15:32 - So I queried the Wordnik API.
15:35 - And I got back a related word.
15:36 - What happens when
I click on Sea Bow?
15:38 - Mm, nothing.
15:39 - I'm still getting sea bow.
15:41 - So what I want to do is
now when I query again,
15:44 - I want to get a related
word to sea bow.
15:46 - So I'm kind of playing a game of
telephone with the Wordnik API
15:49 - 15 minutes into this video.
15:51 - If you're 15 minutes
into this video
15:53 - and still you're
watching, #seabow.
16:00 - That's-- I don't know.
16:02 - I don't know if this
is really working,
16:02 - my whole hashtag thing.
16:03 - I feel like such a doofus.
16:10 - So what do I need to do?
16:12 - This is always querying.
16:13 - Oh, my finger disappeared.
16:14 - This is always querying
the variable word.
16:16 - The variable word is
always the word rainbow.
16:19 - What I want that word
to be is now sea bow.
16:21 - So what I really need to
do is update the variable
16:25 - to be that word.
16:27 - And then I'm going to add--
16:33 - update the variable
to be that word
16:34 - and then update the content.
16:36 - So now the next time
it asks Wordnik,
16:38 - it's going to pass in sea bow.
16:40 - So that feels like a
very strange word to say.
16:42 - So I'm going to click here.
16:43 - I get sea bow.
16:43 - To click there, I get rainbow.
16:45 - I click here, I get sea bow.
16:46 - Oh, rainbow, sea bow, rainbow--
16:47 - so there's a flaw in
what I'm doing, right?
16:50 - The flaw in what I'm doing is
I'm only ever getting exactly
16:55 - the first related word of
the first related category.
17:02 - So what could be a
better solution here?
17:04 - Think about that.
17:05 - Think about this.
17:06 - Why don't I pick a random
category and a random word
17:10 - from that category?
17:11 - So something you might do
right now is pause the video,
17:13 - stop, and try to
implement that yourself.
17:16 - I would wait for you.
17:17 - But that doesn't make any sense.
17:18 - So I'm going to go on
and do this right now.
17:19 - And that's going to
wrap up this video.
17:21 - But this could be something
you could stop and try
17:23 - to implement on your own.
17:24 - But you can see that
there's two numbers in here.
17:26 - I'm getting the zero
element of the data array
17:29 - and the zero element
of the words array.
17:31 - So what if I want to get a
random element of the data
17:34 - array and a random element
of the words array?
17:36 - Well, I just need to use
the p5 random function.
17:39 - I could use the native
JavaScript math.random,
17:41 - but I'm using the
p5 library which
17:42 - has its own random function.
17:46 - I could say index,
and maybe I'll
17:48 - call it index 1 equals a
random number between 0
17:52 - and data dot length,
Right data dot length is--
17:58 - data is that first array.
18:00 - So I want a random
number in that array.
18:01 - But remember, random
gives me a floating point,
18:04 - a decimal number.
18:05 - So I need to use
the floor function
18:06 - to chop off that decimal.
18:09 - I don't want to be
mean to the decimal,
18:10 - just to remove it nicely,
kindly, put it to the side,
18:13 - and I'll talk to it later,
decimal friend of mine.
18:17 - So then I'm going to now--
18:19 - once I have that,
what do I need?
18:21 - But a random word from
whatever I picked.
18:25 - So now data index 1 dot length--
18:30 - dot words dot length, right?
18:33 - This is now-- right?
18:34 - I picked a random index
into the data array.
18:37 - So I need to look at that array,
that element in the data array,
18:40 - and get a random index
of the words array
18:43 - from that particular element.
18:44 - And I'm going to
call that index 2.
18:46 - So I'm going to say data
index 1 words index 2.
18:50 - And I did this kind of quickly,
but hopefully this works.
18:53 - And now I'd run this again.
18:55 - And I've got rainbow, arc,
flash, bash, bashed, clashed,
19:01 - clashes, dashes, dash, foil,
frustrate, nugatory, slash.
19:08 - I don't know where this going.
19:09 - I'm going to stop now.
19:10 - I'm worried I'm going
to get a word that's
19:12 - very embarrassing for
me to say, like pumpkin.
19:15 - That's not embarrassing.
19:16 - But I kind of--
19:16 - I couldn't-- I didn't want
to say the embarrassing word
19:18 - because then I'd be--
19:19 - I'm easily-- very, very
easily embarrassed.
19:23 - I already am so
embarrassed right now.
19:25 - So I think this
wraps up this video.
19:26 - And there's so much
more to Wordnik.
19:28 - I really only showed you
just this one aspect of it,
19:32 - of using this particular
API call, which, remember,
19:35 - is related words, word
dot JSON related words.
19:39 - But I might encourage you,
if you watch this video
19:41 - and want to do
something yourself,
19:43 - go back to that API
tool, come back here.
19:46 - I'm going to click
Back in the browser.
19:47 - Look at all these
different possibilities.
19:49 - I could get example sentences,
definitions, top example.
19:53 - Wordnik has this huge corpus
of lots of source text.
19:56 - And you could actually get
word counts per year, I think,
19:59 - of frequency.
20:00 - So you might look at
something, like how often
20:02 - is a word generally used in
the English language over time?
20:06 - So there's so much
possibilities there.
20:08 - I don't know.
20:08 - You probably better ideas.
20:09 - Write in the comments.
20:10 - This is like the longest video
I've ever made, 20 minutes.
20:16 - And I thank you, if you actually
are still here watching.
20:19 - And in the next
video, I think I'm
20:21 - going to look at
The New York Times
20:22 - API, which is yet another API.
20:24 - I wish I could stop and
hear a question from you.
20:26 - If there's actually a
live stream going on,
20:28 - maybe there'll
will be a question.
20:29 - But I'm going to instead
just hit End Record.
20:33 - Goodbye and until the next time.