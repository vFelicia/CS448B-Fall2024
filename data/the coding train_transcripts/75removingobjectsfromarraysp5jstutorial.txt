00:00 - [DING]
00:01 - Hello, it's me, back
again with some--
00:04 - these bubbles again.
00:05 - Oy, the bubbles.
00:06 - Someday I'll think of
something besides bubbles,
00:08 - but the bubbles kind of works.
00:10 - So the last video,
I kind of looked
00:12 - at how I could click on the
bubbles and change their color.
00:16 - And now I just adjusted
the code a little bit so I
00:19 - could mouse over the bubbles.
00:21 - And I could show you what I did.
00:22 - I did this in-between
where I now
00:24 - am using this function
called Rollover.
00:26 - I renamed the click
function to Rollover.
00:28 - I gave it these arguments.
00:30 - And I'm doing the
same sort of thing.
00:31 - If the distance is-- if
it's inside the circle,
00:34 - I turn it white.
00:35 - If it's not, I turn it black.
00:38 - So what I want to do now is
I want to click on the bubble
00:42 - and [POP] have it pop.
00:43 - I want it to disappear.
00:45 - How do I do that?
00:45 - Well, good news everybody.
00:47 - [DING] I kind of did all of
that in the last video except
00:52 - for the whole--
00:55 - what did I forget to do?
00:56 - Oh, the deleting from an array.
00:58 - So let's think about this.
00:59 - OK.
01:00 - How do I remove something?
01:01 - I mean, one way I could remove
something is just stop drawing
01:05 - it, or move it way off screen.
01:07 - And in the old days, when I had
to code with six feet of snow
01:11 - next to me, sometimes
you had to do
01:14 - that because you
had this fixed array
01:15 - and you couldn't
take things out,
01:16 - you couldn't add things to it.
01:17 - So you would kind of reuse
elements and move them
01:19 - off screen.
01:20 - But here in the
land of JavaScript,
01:22 - there's a really nice
thing you can do.
01:23 - And I'm going to come over here
and erase this distance thing.
01:29 - And now what do I
want to talk about?
01:31 - So I have this array.
01:35 - One of the things that I
showed in a previous video--
01:38 - OK.
01:38 - So let's say this array is
called bubbles because that's
01:41 - what it's called.
01:43 - The whole array-- when I
talk about the whole array,
01:46 - I'm saying the word bubbles.
01:48 - When I am referencing a
specific element of the array,
01:52 - I reference it by its index,
often within square brackets.
01:55 - And the index numbers are zero,
one, two, three, four, five.
01:59 - So this is bubbles index two.
02:03 - Now, one of the things I
showed in a previous video
02:05 - is that there is a
function called push.
02:09 - That function allows
me to add something
02:12 - to the end of the array.
02:13 - In fact, there is also
a function called pop.
02:17 - And that function allows--
02:18 - what it does is it
will take something
02:20 - off the end of the
array and pop it off.
02:23 - So if what I wanted
to do was always
02:24 - delete the last
element of the array,
02:27 - I could use the pop function.
02:28 - Now, there are lots
of other functions.
02:30 - There's shift.
02:31 - I think there's even an unshift.
02:34 - I could be crazy.
02:35 - I could just be making that up.
02:37 - Shift man?
02:38 - No.
02:39 - But here's the thing.
02:39 - Where do these
functions come from?
02:42 - So there's this question that
comes up over and over again
02:44 - in these videos,
and you're probably
02:46 - sitting there asking
yourself, wait a sec,
02:49 - am I learning JavaScript?
02:50 - I know I'm sort of
maybe learning to code.
02:52 - But am I learning JavaScript?
02:54 - Am I learning p5?
02:55 - Is it the same thing?
02:55 - Is it different?
02:56 - Well, this is a
complicated question.
02:59 - And I would like, in
theory, in my mind's eye,
03:01 - I would like to say that
these videos are just
03:03 - about learning to code
and think about code
03:05 - and think computationally.
03:06 - I happen to be using
the programming language
03:08 - JavaScript.
03:09 - I'm using this library p5.js to
make the drawing stuff easier,
03:12 - and it all kind
of mixes together.
03:14 - So that kind of
larger question aside,
03:18 - this stuff that has
to do with an array
03:20 - is not coming from p5.js.
03:23 - If I say ellipse, this
is a special function
03:27 - that's in p5.js.
03:28 - What it does is it calls some
other functions that are just
03:31 - part of JavaScript
without p5.js, but it's--
03:33 - I can only say ellipse because
I'm using the p5.js library.
03:36 - These functions don't
come from p5.js.
03:39 - They're just part of
the JavaScript language.
03:41 - So how do I find out a list of
these and how I can use them?
03:46 - Come back over here with me.
03:48 - The place that I like to use
is the Mozilla Foundation Docs.
03:53 - I'm just going to say Mozilla
Foundation array JavaScript.
03:56 - That's going to be
my Google search.
03:58 - And I'm going to go here.
04:01 - So here's the thing.
04:04 - One of the reasons why I
like using p5.js in tutorials
04:08 - is look, here's the reference.
04:10 - Here's all the stuff.
04:11 - It's kind of like one
page of functions.
04:13 - It's actually a lot of stuff,
but it's kind of self-contained
04:16 - and it has a smaller
world view, so to speak.
04:20 - It's like it's a walled
garden so to speak.
04:23 - This is like the
JavaScript documentation.
04:25 - There is so much here
you couldn't possibly--
04:29 - I mean, you could, but it
would take you a long time
04:31 - to read through everything.
04:32 - But here I am at least on
a page that's giving me
04:35 - some information about arrays.
04:38 - And you can see--
04:39 - look, oh there's this.
04:40 - What is that?
04:41 - Oh, my god.
04:46 - [DUN DUN DUN]
04:49 - So for each loop,
someday we'll have
04:50 - to come back and look at that
and what does that do and why
04:53 - would you use it?
04:53 - Oh, my god.
04:54 - My goodness.
04:54 - OK.
04:55 - But you can see
here, look-- pop.
04:56 - Oh, shift.
04:57 - Oh, I'm not crazy--
shift, unshift.
04:59 - You can see what
these functions do.
05:01 - Where are you?
05:01 - You're over there.
05:02 - And look, there's a
whole list of them.
05:04 - So let's look through them.
05:05 - Maybe we can find one
that removes something
05:06 - from an array.
05:09 - Concat, copywithin, entries,
every, filter, find.
05:13 - Oh, I got forEach.
05:15 - [DUN DUN DUN]
05:20 - OK.
05:24 - What was I looking for?
05:26 - So here's the
thing-- ah, splice.
05:27 - I happen to know--
05:28 - wouldn't it be nice--
couldn't there just be one
05:30 - that's called delete or remove?
05:32 - But the one that I'm
looking for is splice.
05:34 - And this method changes
the contents of an array
05:37 - by removing existing elements
and/or adding elements.
05:42 - It can do a lot of
different things.
05:43 - I want to use it
for the deletion.
05:45 - So if I come back
over here, I want
05:47 - to use this slice function.
05:49 - So can I write up here
and you can see it?
05:50 - Yes.
05:51 - Slice.
05:53 - Slice takes two arguments--
and there may be other ways
05:57 - to use slice, but for the
purpose of this video tutorial,
06:00 - the two arguments
are what matters.
06:02 - The first one is an index,
and the second one--
06:05 - and I'm kind of
moving-- sorry, I'm
06:07 - doing that thing
where I'm drawing off
06:08 - the whiteboard again.
06:09 - Let me go down here.
06:10 - That's a little bit better.
06:12 - The first one is an index.
06:13 - The second one I'll
just call how many.
06:16 - So if I say slice index two,
how many, one, what it does
06:23 - is it just takes this
element and slices it out--
06:26 - removes it from the array.
06:28 - Let me show you what I mean.
06:31 - So one of the things that I
could do to sort of investigate
06:33 - this is I could just use
the JavaScript console here
06:37 - in the browser that
I'm using right now.
06:39 - And I could say let words
equal rainbow, and unicorn,
06:48 - and kitten.
06:52 - I tried to think of
something else-- turtle?
06:58 - Paperclip.
07:01 - Words.push paperclip.
07:05 - OK.
07:05 - So now we can see I have this
array with five things in it.
07:09 - And if I were to say
words.splice index three, one,
07:15 - what should happen here?
07:17 - Zero, one, two, three.
07:21 - I should-- ah, look at this.
07:22 - Oops.
07:23 - Turtle.
07:24 - So one of the things that's
interesting about slice
07:26 - is as it deletes, it kind
of hands it back to you.
07:29 - I'm not going to use
that in this video,
07:31 - but it's kind of interesting
that it does that.
07:33 - It's probably too
much information here.
07:34 - But if I look at the
array of words right now,
07:38 - you'll notice turtle is gone.
07:40 - It's just rainbow,
uniform, kitten.
07:41 - So the idea here is
that even though I
07:44 - can do a lot with
this slice function,
07:46 - if I just want to delete
one element from the array,
07:49 - I can say, hey, this
particular number--
07:52 - index-- just that one.
07:54 - And so that's what I want to do.
07:55 - What I want to do is how can I
then, with this code example,
08:01 - click on this and
remove it-- actually
08:03 - delete it from the array?
08:04 - Well, I know--
there's so much here.
08:07 - You know what I should do--
08:08 - here's the thing.
08:09 - Look at this function rollover.
08:11 - Hmm.
08:12 - There's something
kind of interesting
08:13 - about this function,
which is that I'm
08:15 - doing two things at once.
08:18 - One thing is that
I'm checking to see
08:20 - if that point is
inside that bubble,
08:22 - and then I'm also
changing its color.
08:24 - And it probably makes
more sense for me
08:27 - to have this function
be much more generic,
08:29 - for it just to return true
or false because I might want
08:33 - to reuse this idea is a point
over that object, that circle,
08:39 - other times.
08:40 - So I'm going to change
this to return true--
08:44 - oops.
08:45 - If it's rolling over, return
true, otherwise return false.
08:49 - And then I'm going to
write a new function called
08:51 - change color, and I'm going to
say this.brightness equals 255.
08:57 - So I wanted to remove the idea
of the changing color from here
09:01 - because now I can say
if that function--
09:06 - you might not have--
09:07 - I covered what return means in
my functions video tutorial,
09:11 - but when do I ever need that?
09:13 - Well, now I need it.
09:14 - And what I want to say--
09:18 - well, not remove.
09:18 - I'm not removing it, sorry.
09:20 - Change color.
09:21 - That's what I'm going
to do eventually, right.
09:23 - I want to say-- and
maybe I shouldn't
09:25 - call it rollover anymore.
09:26 - I should just say contains.
09:28 - Let's call it contains.
09:30 - And I'm going to
change it to contains.
09:32 - What I want to do--
09:33 - this function is going
to return true or false.
09:35 - And I know some
of you are saying
09:36 - I could just return this.
09:39 - This statement itself
evaluates true or false,
09:42 - so it's redundant
to say if it's true
09:44 - return true, if it's
false return false.
09:46 - I could just say return
its value-- true or false.
09:49 - I'll let you do that to simplify
your own code as an exercise.
09:53 - But now what I
can do here-- this
09:54 - should be exactly the same
program-- oh, I have an error.
09:57 - Contains is not a function.
09:59 - Bubble index I contains.
10:02 - Mm you know what?
10:03 - Is contains something-- oh, boy.
10:06 - Am I not allowed to
use the word contains?
10:10 - Record scratch sound.
10:11 - Do I-- hold on a second.
10:12 - Apparently, I've done
something horrible.
10:14 - Oh, look at this.
10:15 - This whole time.
10:17 - This should say splice.
10:18 - Apologies.
10:18 - This should say splice.
10:23 - Splice is the correct term.
10:25 - So I'm going to change
this to contains,
10:27 - which I just did
and it didn't work,
10:28 - but now I'm back because I
just didn't save the file.
10:33 - Oh, yeah, no I do
want that page.
10:35 - And so now we're back to
exactly what I had before.
10:38 - But the point of
what I was doing
10:40 - was that now that
I've separated out
10:42 - the logic of just checking
if a point is in something,
10:45 - I can now in mousePressed--
10:48 - I'm going to just
grab this exact code
10:50 - and I'm going to add
mousePressed back in.
10:53 - So in mousePressed, I can
check, hey, is the mouse--
10:59 - now, this is when
the mouse is pressed.
11:01 - Check again.
11:02 - And then what do I want to do?
11:04 - Bubbles.splice I, one.
11:09 - Look at this thing
of beauty here.
11:10 - I'm able to reuse
that idea by saying,
11:13 - OK, just during
draw, all the time,
11:15 - check if the mouse is over it.
11:16 - If the mouse is over
it, change its color.
11:19 - And I spelled splice wrong.
11:21 - In mousePressed, when the mouse
has been clicked anywhere,
11:24 - check to see if it's
in there if you click
11:28 - on a particular
bubble, and if so,
11:29 - delete it from the
array, which should cause
11:31 - it to disappear from the page.
11:34 - And there we go.
11:36 - Now, I've kind of--
oh, right, it doesn't--
11:38 - oh, I lost my change back.
11:40 - How did I lose that?
11:43 - Oh, look at that.
11:46 - Interestingly enough, I had this
feature that when it doesn't--
11:50 - and so what I probably should do
here is give this an argument.
11:53 - So I had this feature
where it changes
11:56 - to white when it's over,
back to black when it's not.
11:58 - So I should probably give
this change color function
12:01 - an argument like bright,
parameter, bright,
12:05 - and pass that in.
12:06 - I did that kind of quickly,
but that fixes that.
12:08 - And then I should be able
to just delete all of them.
12:14 - OK.
12:15 - [DING] That's basically it.
12:17 - Now, I feel like
there's so many things
12:19 - I wanted to do with this.
12:22 - [DING] That's not it.
12:24 - I'm missing kind of
an important point.
12:26 - And I did cover this.
12:27 - There's a particle system coding
challenge which does this,
12:30 - but I think I should
talk about it here
12:33 - which is something strange
just happened which is that I
12:38 - was iterating over the array.
12:40 - I was checking element zero.
12:42 - Then I was checking
element two--
12:44 - one, sorry.
12:45 - Then I'm checking element two.
12:47 - And at that moment when I
checked element two, if that's
12:49 - the one that I clicked on--
12:51 - and I should really call these--
12:52 - I'm going to call these
A, B, C, D, E, F, G.
12:56 - Pretend the particles have
a letter because these index
12:58 - values are going to change
in a weird sort of way.
13:00 - Let me explain this again.
13:02 - I'm checking A--
don't delete it.
13:04 - I'm checking B--
don't delete it.
13:06 - I'm checking C-- delete it.
13:08 - So what happens next?
13:12 - When I delete C, the array all
of a sudden looks like this.
13:24 - It's got one fewer element
in it, so we don't need this.
13:27 - I'll erase with my fingers.
13:29 - And it's got A, B, no C, D, E,
F, G. Zero, one, two, three,
13:35 - four, five.
13:36 - What was the last
bubble I checked?
13:39 - The last bubble I checked was
bubble C in index spot two,
13:43 - right here.
13:45 - So if I was going up by one,
the next thing it should check
13:48 - is index three.
13:51 - But this is what the
array looks like now.
13:53 - So if I check index three,
now I'm going to check and see
13:56 - should I delete E?
13:58 - What happened?
13:58 - I didn't bother to check D
because as soon as I removed C,
14:02 - D becomes two--
14:04 - moves to index spot two--
14:05 - and my counter moves up.
14:07 - So I could do
something like if--
14:08 - I could add an I minus minus.
14:11 - So I could say if I'm deleting
something, set the index back
14:14 - to go check the next one.
14:15 - There's a bunch of
different ways around this.
14:18 - Probably if I used
that forEach loop.
14:21 - [DUN DUN DUN]
14:24 - Maybe that would
help me somehow.
14:26 - But honestly, in this
case, it doesn't matter.
14:30 - If I look at this,
there's nothing wrong.
14:33 - Nothing bad happens.
14:34 - Now, it only would
be bad if it so
14:37 - happens that I try
to delete two of them
14:39 - at once and the other one
that I delete happens to be
14:42 - the next one in the array.
14:43 - So none of these are
overlapping right now.
14:45 - So let me try to
delete both of these.
14:47 - They both deleted.
14:48 - But I could get bad luck where
I'm hovering over both of these
14:52 - and so only this
one gets deleted
14:54 - and this one
doesn't get checked.
14:55 - So again, I could
decrement the index,
14:58 - but another way I could do it
is if I'm actually iterating
15:00 - through the array
backwards, it doesn't
15:02 - matter if I remove something
and the array slides,
15:04 - ka-chunks back over, I'm still
going towards the beginning.
15:07 - I won't miss any.
15:08 - So you'll see that in a
lot of my code examples.
15:11 - Some people like to
say I minus minus.
15:13 - I prefer, generally
speaking, to--
15:15 - if I'm deleting stuff
from the array--
15:17 - to start at the end which
is bubbles.length minus one.
15:22 - Then have my iterator go down--
15:25 - minus minus.
15:26 - And then where do I end?
15:28 - I go all the way down
to the first element,
15:30 - which is at index zero.
15:32 - The last element is
the length minus one.
15:34 - Like if there are five of them--
15:35 - zero, one, two, three, four.
15:38 - If there are five of them--
zero, one, two, three, four.
15:40 - So start at five
minus one-- four.
15:42 - Go all the way down to zero.
15:44 - So let's just make
sure that this works.
15:47 - And it does.
15:48 - Still the same exact result.
15:51 - I can hover over and
delete all of them.
15:53 - So there you go.
15:55 - This is a little video about
clicking and removing things
16:01 - from the array.
16:02 - There's some other
things I could do--
16:04 - here's the thing-- the point of
me telling you about this going
16:06 - backwards thing is
more to say that hey,
16:09 - if you are manipulating an array
while you're iterating over it,
16:14 - you should probably be careful.
16:15 - What if, for example, I were
adding elements to the array
16:18 - while I'm iterating and I could
maybe never get to the end?
16:21 - Before I finish, I
want to add one--
16:23 - I'm just going to redo
this example a little bit
16:25 - just to demonstrate one thing.
16:26 - I'm going to put it back
to the version of it
16:32 - where I added bubbles
whenever I drag the mouse.
16:37 - So I want to say mouseDragged.
16:41 - And I'm going to add
bubbles at the mouse.
16:49 - And something like-- just
give them all the same size,
16:52 - just for simplicity right now.
16:54 - So what this should do
is give me back to this.
17:00 - I'm kind of drawing with
these bubble objects.
17:02 - The reason why I'm showing
you this is this, I think,
17:04 - might allow you to be a
bit more playful in how
17:06 - you think about removing.
17:07 - For example, one
thing I could do
17:10 - is I could say just
if bubbles.length
17:15 - is greater than 10,
bubbles.splice zero, one.
17:25 - So I'm saying like,
hey, just only ever
17:27 - have 10 elements in that array.
17:29 - And maybe I could use
shift there to remove
17:31 - just the first one, but--
17:33 - and you can see this gives me
this kind of snake like thing.
17:36 - But notice, as I let
go, each one of these
17:38 - is still an individual object.
17:40 - Now, I've lost the clicking on
it thing, but I can come back.
17:43 - So I think there's some
more possibilities.
17:44 - There's almost like a
little object that's--
17:47 - like a little thing that's
storing its history.
17:49 - And the reason why I thought of
this is I have another video--
17:51 - this is kind of a hard exercise,
but something you could think
17:55 - about--
17:55 - what if this were its
own object you had
17:57 - a bunch of these on the screen?
17:59 - So I have another video
that about objects
18:01 - storing their own path that
I'll link to from this video.
18:05 - And so hopefully now you've
got some ideas about how
18:07 - to remove things from an array.
18:09 - Thanks for watching.
18:10 - [DING]
18:11 - [MUSIC PLAYING]