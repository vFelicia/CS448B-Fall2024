00:00 - [Music]
00:01 - hello good morning in the morning in New
00:05 - York City where I am here time for the
00:08 - boating trade I'm very excited for today
00:13 - because I have a couple things that I'm
00:15 - planning and excited to do you are here
00:18 - watching my microphone is actually on I
00:23 - haven't seen anyone in the chat saying
00:25 - they see me yet so who knows if this is
00:27 - actually a live streaming but I suspect
00:29 - that it is because it says here on my
00:32 - secret invisible computer stream status
00:35 - good the health is good the health is
00:38 - good all right so I'm checking my
00:42 - Twitter which is the thing that people
00:43 - tend to do not doing that I'm not doing
00:49 - that I am checking the YouTube chat and
00:52 - people are saying it's on then great
00:56 - alright so um couple things I want to do
00:59 - I would like to first say thank you I've
01:02 - noticed thing that they're all these
01:04 - little shiny icons in the YouTube chat
01:07 - going by four people have joined as a
01:10 - member of the coding train and I just
01:11 - want to start today and I know there's
01:14 - been many people who also back via
01:16 - peak-to-peak the patreon thing and and
01:19 - some who have for like possibly I don't
01:21 - know what when I started it but I've got
01:23 - me almost like two years now so thank
01:25 - you so much I would say that the the the
01:27 - support that I get through those
01:29 - mechanisms allow for a couple things
01:31 - number one it really motivates me
01:33 - because I I think part of my my work
01:38 - ethic sort of goes a little bit is
01:41 - driven by fear to some extent and this I
01:44 - don't want to disappoint anyone and if
01:46 - there are people who are contributing
01:47 - some small amount of funding to the work
01:49 - that I do I feel an obligation to make
01:52 - the videos which is sort of weird maybe
01:53 - that's not how I should start but I it's
01:57 - sort of it's hard to find the time and
01:59 - this really helps me find the time it
02:00 - also Allah has allowed me to do a whole
02:02 - bunch of things in terms of hiring and
02:05 - and paying for some technical support
02:07 - and video adding support and community
02:09 - management support over the years a lot
02:11 - of people also volunteer their time to
02:13 - help with a lot of different things
02:14 - whether it's github repos there's a
02:15 - whole project of developing a new
02:18 - website for the coding train that seems
02:20 - to be entirely volunteer driven which I
02:24 - makes my heart sing
02:26 - so thank you for all of these this kinds
02:28 - of support so if you feel so inclined
02:32 - saw but there's a new member right now
02:34 - Giovanni Moncton ro
02:36 - Moncton ro welcome if you have joined as
02:39 - a Youtube member I'm tentatively
02:41 - thinking of sunsetting the patreon at
02:44 - some point I'm not sure what sort of
02:47 - it's a little bit it's a little bit much
02:49 - to maintain multiple platforms but if
02:51 - you have joined as a YouTube member
02:55 - check the community tab and there are
02:58 - some special posts there that you can
03:00 - find with a link to a Google form and we
03:02 - have a slack channel and that sort of
03:03 - thing so I wanted to say that another
03:06 - one I'm just opening with like the sales
03:08 - pitch stuff today can you believe it
03:09 - that's very unlike me I don't know I'm
03:12 - feeling saucy Bernays ok so the thing I
03:18 - want to mention because I've been I got
03:20 - a couple new books recently one book was
03:22 - recommended to me by Lee Tustin the
03:24 - other I saw on Sabra khan's Twitter one
03:28 - is this book rise of the video game zine
03:30 - stirs how freaks normals amateurs
03:32 - artists dreamers dropouts queers
03:33 - housewives and people like you are
03:35 - taking back an art form by Anna Anthropy
03:37 - it's like semi-translucent because it's
03:40 - not there's no green but I guess yellow
03:42 - is some somehow this one will be require
03:44 - and solution right this is actually
03:45 - green the bottom of this book is green
03:49 - and the author's name is also green
03:51 - welcome new member Rock will or well I
03:53 - guess I should pitch this kind of stuff
03:54 - more often Hey oh oh out to bruno
03:58 - Ruchika who post-processing community
04:01 - day in Santa Maria Brazil is sorry for
04:04 - that it was like some sort of attempted
04:06 - Portuguese pronunciation which I
04:09 - probably did terribly is this Saturday I
04:11 - know they're a bunch of the processing
04:12 - de New York City is this Saturday
04:13 - processing day Baltimore is this
04:15 - Saturday
04:16 - processing gave bond alors was just this
04:18 - we get oh and processing day Abu Dhabi
04:22 - is this Saturday so there if you if
04:23 - you're not aware but I have this tab
04:25 - open don't I mention there are
04:26 - processing community days happening
04:28 - worldwide for this one-month period
04:30 - between January 15th and February 15th I
04:33 - have now been to just one but I'm gonna
04:36 - go to a second one in New York to
04:37 - Saturday and if you go to a processing
04:40 - community day share with me your
04:42 - experience what you learned but I wanted
04:44 - to mention these two new books that I
04:45 - have approximately Copenhagen happened
04:48 - and then I believe Simon is speaking at
04:54 - a processing community de Amsterdam yes
04:58 - processing community Amsterdam is this
05:00 - Saturday Simon Tiger loyal coding
05:04 - trained viewer Simon Tiger has a
05:07 - wonderful channel that you should also
05:08 - check out will be speaking and I'm I
05:12 - can't I wish I could be there I so wish
05:14 - I could be there but I hope that I will
05:15 - get to hear about it or if it's recorded
05:17 - I will get to see it alright but if you
05:22 - are if you are interested in books
05:24 - because first of all go to your local
05:27 - library support your local library
05:29 - libraries are an amazing wonderful thing
05:32 - but another way that you can support the
05:35 - work that I'm doing is through the
05:37 - coding trains Amazon page and I spent
05:39 - about five minutes like looking at this
05:42 - page and adding some stuff to it I added
05:44 - these two books I haven't actually read
05:46 - them yet they both just recently came
05:48 - via Amazon but so I keep a list of like
05:53 - now I made a new category for games I
05:55 - have some other gaming game books game
05:56 - history books like some really excellent
05:58 - ones I love that book by Ian bogus about
06:02 - the Atari the history of the Atari that
06:06 - racing the beam yeah
06:08 - this I got to add this to my Amazon this
06:11 - book is really fantastic racing the beam
06:14 - it's a study of the early video game
06:16 - console the Atari video system is really
06:18 - fascinating to read about the kind of
06:20 - constraints programmers had to deal with
06:22 - in earlier days of computing when access
06:25 - to RAM and resources wasn't as vast I
06:27 - will add that you can also get your own
06:31 - it's not
06:31 - oh the million random digits book I've
06:34 - got to find that original your top yes I
06:39 - know there's some issues with the green
06:40 - screen I will I will address that in a
06:42 - second you know this you might like this
06:46 - unicorn maybe this is like terrible for
06:48 - the environment and I should take this
06:49 - off but it's a nice like balloon unicorn
06:53 - thing but you call those floating
06:55 - unicorn flip deep there's some books
06:57 - here for beginners data visualization
07:00 - books that I have here there's plots of
07:01 - more stuff that I need to add so I'm
07:02 - trying to soup this up cuz people always
07:04 - ask me for oh that thing book you
07:06 - mention or there's you have any
07:07 - recommendations I want to learn this
07:08 - books are wonderful thing again
07:10 - support your before you buy something
07:12 - from like Amazon I would say go support
07:14 - your local library but you know if you
07:16 - do need to order something from Amazon
07:17 - if you order it through here a little a
07:21 - little bit of money will go from the
07:23 - storefront I don't know why I'm all
07:24 - about the money today just again I woke
07:28 - up feeling like a little Bernays and I'm
07:31 - a little bit saucy I think actually one
07:34 - of the things I wanted to mention is I
07:35 - have gotten recently more requests from
07:38 - people asking to sponsor videos and I
07:40 - haven't really figured out how to deal
07:41 - with that I think that would be a good
07:43 - thing for me to do in terms of growing
07:45 - the channel and the possibilities of
07:47 - things that I can do but I also want to
07:49 - be careful about you know not plugging
07:53 - some sort of product that has whether
07:57 - it's you know ethical considerations or
07:59 - just kind of not something that would be
08:01 - of interest to the viewers but one of
08:02 - the things that I'm toying with is I'm
08:04 - hesitant to read sponsor messages on the
08:08 - sort of like edited videos but I feel
08:10 - like maybe periodically during a live
08:12 - stream I could possibly do that alright
08:14 - so I don't want to spend too much time
08:15 - but if you have thoughts or ideas or
08:17 - experience with that and advice for me
08:18 - get in touch I would love to hear about
08:21 - it but as you know coding train live is
08:23 - sponsored by water and today we're going
08:28 - to do a sponsored coding challenge about
08:30 - turbulent flow does laminar flow you
08:38 - know this water has really been behind
08:40 - on paying their bills I get
08:44 - what's I'm get I get about 37 cents for
08:48 - each mention of h2o alright alright so
08:55 - I'm gonna get started coding now what's
08:57 - happening today we oh oh I have two
09:01 - other things I want to mention I wrote
09:03 - some things down and a piece of paper
09:07 - oh wait that's the wrong one
09:15 - [Applause]
09:16 - [Music]
09:20 - okay hmm I would like to try to
09:25 - experiment and Matt Shia who does video
09:28 - editing for the coding training I have
09:29 - been discussing this different
09:31 - experimental things we could try in
09:33 - terms of editing the content after the
09:36 - livestream and one of the things that
09:39 - would allow for a lot more possibilities
09:42 - is to record the green screen without
09:46 - right now the only thing that I do
09:48 - record to disk is what you are actually
09:50 - seeing so if I recorded the green screen
09:53 - and did a screen capture separately that
09:57 - would be possible that that would open
09:59 - up some possibilities after the fact the
10:01 - issue is I don't know how to do that
10:05 - with open broadcast studio because I'm
10:08 - recording to disk the sort of feed the
10:10 - broadcast feed is there a way to also
10:13 - record or maybe just record instead I
10:16 - think the green screen footage if you
10:20 - have any experience with that or know
10:21 - the solution please let me know
10:33 - oh thank you to youtube for supporting
10:40 - this new project I'm about to do which
10:42 - is a playlist of videos called
10:46 - working with data and api's like that
10:51 - Google search is gonna come up for what
10:53 - I'm looking for
10:54 - coding train my look I already made this
10:58 - playlist no no no no don't get to
11:01 - Outlook there's even a web page on that
11:02 - no this is what I'm looking for I have
11:04 - made content like this before but it was
11:06 - a very p5 focused which is fine and good
11:09 - and it also is a little bit out of date
11:11 - now so this is my new plan I guess I
11:15 - should try to fix this oh wait oh no
11:19 - it's it's not this it's actually that
11:21 - what's going on with the green screen
11:23 - this is all noisy today it's maybe this
11:25 - light moved no this light moved there we
11:27 - go that fixed it so why POC rights
11:37 - you could run OBS with multiple
11:39 - instances one encoding a screen capture
11:42 - of another did you ever try the stream
11:47 - labs version of OBS no I have not I am
11:51 - NOT opposed to using commercial software
11:53 - I don't know what stream Labs offers but
11:56 - I will I will look at that alright umm
11:58 - but this is something I really have to
12:00 - get working on this I have made a
12:01 - commitment to do it I have to do it I'm
12:03 - excited to do it but if you have
12:06 - thoughts or ideas about topics that
12:08 - would be useful for me to include under
12:11 - the umbrella of working with data and
12:14 - API in JavaScript and I think I'm
12:16 - leaning towards the kind of like data
12:18 - side as opposed to the visualization
12:20 - side I'll make examples that create
12:22 - visual demonstrations but that's not
12:25 - really my forte I don't know what my
12:28 - forte is I love the word Forte but it
12:34 - certainly is not the sort of front in
12:37 - the visual design sensibilities so if
12:40 - you have ideas of topics please file
12:43 - them as a github issue here
12:46 - rest API that sounds great
12:49 - be specific if you can and I will take
12:53 - that under consideration so this is
12:54 - coming to your YouTube TV's I'll guess
12:58 - YouTube TV is an actual thing so your
13:00 - your YouTube your YouTube thing soon I'm
13:05 - going to the next week I have to start
13:07 - exactly I have to start this next week I
13:12 - I'm gonna start this next week alright
13:15 - that was my list now I'm gonna start
13:20 - with a warm up today a little throwback
13:24 - Wednesday that's a thing right throwback
13:27 - throwback for Wednesday it's not really
13:30 - even a throwback it's you know
13:32 - apparently there's this mean you know
13:34 - you've got a I'm gonna need some help
13:36 - from the young people out there to teach
13:39 - old man Schiffman here about memes but
13:43 - apparently there's this DVD bouncing
13:46 - logo meme so let's go to here let's go -
13:54 - lets go - rainbow topics and this came
14:00 - up thank you to Mike Boyd's video by the
14:13 - way first of all huge thank you to Mike
14:14 - Boyd who who he has a channel actually
14:18 - hadn't seems channel before we made this
14:19 - video but now it's kind of addicted to
14:20 - it he makes videos about how to learn
14:23 - stuff I'm really a man there's so much
14:25 - there that I want to kind of like go
14:26 - through and try you can see sort of it's
14:28 - starting to recommend these channel
14:30 - these videos to me now over here
14:32 - actually this is not what account of my
14:34 - login oh I'm actually logged into my
14:36 - account okay that's fine
14:38 - I usually don't like to be logged into
14:39 - my account while I'm live-streaming but
14:42 - it's fine
14:45 - what am I looking what's a thank you to
14:48 - Mike Boyd because Mike Boyd made a whole
14:51 - video okay okay yes yes yes I hear your
14:55 - thought okay about learning to code
14:58 - look there's me
14:59 - and there's the there's the p5 logo
15:01 - learn to code and made this like amazing
15:04 - game and actually have some ideas for
15:06 - what I might like to do to make my own
15:09 - version of that game or augment the
15:10 - version of the game he made oh and
15:14 - welcome to new viewers from my quite so
15:16 - best F says I subscribe to you through
15:19 - him so I you know I'm not kidding like
15:21 - if you look at my new subscribers graph
15:23 - it's like it's huge spike I gained like
15:32 - a few thousand subscribers the day that
15:33 - he posted this video so thank you and
15:36 - welcome to new viewers of Mike boy who
15:38 - are now here on the go degrade yes
15:43 - Kotick train is a channel where a 45
15:45 - year old human beam has a toy train
15:48 - whistle and struggles through
15:50 - programming that is a good way to
15:52 - summarize this channel and what was I
15:57 - saying ah but I got the idea I tied was
16:00 - this before because I think one of the
16:02 - things that Mike boy did to first
16:03 - practice learning programming was to
16:07 - recreate the bouncing DVD logo and I
16:09 - love this idea I think by the way
16:11 - there's a website like bouncing DVD logo
16:14 - comm probably yeah there is a website
16:18 - that has this that so I love the idea of
16:21 - doing this because I am often looking
16:24 - for challenges that are super beginner
16:27 - friendly but I think actually the most
16:30 - viewed videos on my channel are the
16:32 - snake game and the Purple Rain video and
16:35 - again I'm not just here for the views I
16:37 - have to admit I'm trying mean it's very
16:39 - hard to turn off that chemical thing
16:42 - that happens in your brain when the like
16:43 - clicks and the likes and the fake
16:44 - internet points come to you but I I
16:47 - really want to do lots of different
16:48 - content some that a lot of people might
16:50 - like to see in some that very few people
16:52 - would like to see but I think one of the
16:55 - things that I'm often missing are very
16:57 - like beginner-friendly challenges and
16:58 - this I mean to be honest like I've done
17:00 - this before this is basically like my
17:02 - bouncing ball in p5.js video but this
17:05 - might you know it's got a little got a
17:07 - little thing to it would be
17:11 - video bouncing mean thing plus we can
17:13 - wait to see if it gets to the corner
17:14 - it's very exciting we can like have lots
17:17 - of high jinks and so I'm gonna so I'm
17:22 - going to attempt this that's what I'm
17:25 - gonna start with so what other I want
17:28 - this link and I am going to do it in
17:33 - editor dot p5 just oh I want to put a
17:35 - bounty on something but but but but I
17:40 - okay let me just let me talk about what
17:42 - I want to put a bounty on this is the
17:45 - trust me this is not gonna be I don't
17:46 - know what a good prize would be or if
17:48 - how to like manage this so maybe maybe
17:51 - you just get like a lot of thank yous
17:53 - all that your coding training teacher if
17:58 - but there's a really like weird bug and
18:02 - with the p5 web editor let me just go to
18:07 - recently updated save refresh issue I
18:12 - actually made a video I that
18:17 - demonstrates this issue whoa oh no
18:21 - that's that's where it was in the
18:23 - livestream let me go down here so I'm
18:30 - gonna show you like at a certain point
18:33 - you're gonna see what I mean look at
18:36 - this let's see let's make sure let me go
18:42 - back a little bit okay I changed the
18:45 - background to 220 I hit play look at
18:49 - this there is this thing that happens
18:51 - sometimes with the web editor right now
18:52 - and I cannot figure it out cannot
18:55 - reproduce it
18:57 - I cannot reproduce it consistently and
19:00 - by the way okay oh that chat message
19:03 - just went by winner reference it I don't
19:05 - have it here it's fine you can see that
19:09 - the background is 220 it's drawing
19:11 - that's like a background of like 100 and
19:14 - I'm about to refresh the page in a
19:16 - second so refresh the page and
19:22 - background went back to 100
19:24 - so there's something happening where
19:26 - what's in the actual code editor itself
19:28 - doesn't get saved or the autosave or the
19:32 - saving system there's some mismatch I
19:34 - think Cassie writes here there is an
19:41 - inconsistency between what is in the
19:43 - editor what is in the Redux store what's
19:45 - on the server when a sketch is saving
19:48 - and then a user changes the editor I
19:49 - think it's not getting into sync proper
19:51 - Boop properly so I'm having a hard time
19:54 - consistently being over up everybody who
19:56 - filed every buddies account - this has a
19:58 - hard time consistently reproducing this
20:01 - so there's a couple things that I would
20:03 - love to throw out into the universe if
20:06 - you can figure out this bug oh boy that
20:08 - would make me so happy but even even
20:10 - benign instead of that if you could
20:13 - figure out a way to consistently
20:15 - reproduce it like you follow these exact
20:18 - steps with this timing that would be
20:21 - great because I really want to use the P
20:23 - 5 web editor for this coding challenge
20:25 - and I'm think I'm going to but I'm
20:27 - slightly afraid of running into this
20:29 - error and also it can cause a little bit
20:31 - of heartache because you know it's one
20:32 - thing for me to just lose like one
20:34 - little change and after like retype it
20:36 - in I think some people are losing more
20:38 - significant code ciphers reminding me
20:41 - that there's a 1 billion dollar prize to
20:43 - the first person that mathematically
20:44 - proves the navier's stokes problem in 3d
20:47 - offered by the clay math institute
20:49 - that's definitely like a breaking news
20:55 - but that's maybe should work on that
21:00 - because I'm not offering anything like
21:02 - that alright I better get coding it's
21:12 - almost 11:00 a.m. alright so going to
21:16 - the P 5 web editor let me go here so let
21:21 - me do some pre pre this is all over this
21:30 - assignment this is actually a YouTube
21:31 - video
21:35 - the science behind the perfect it did in
21:43 - the bottom right and then it moved to
21:45 - the top left we want to take bets yeah
21:50 - I'm going with bottom right I can
21:54 - actually watch alright alright so this
21:59 - is great so I want to get this diagram
22:01 - here wow they're actually like solving
22:06 - the math to predict which corner it's
22:08 - gonna go to Oh a there's JavaScript code
22:10 - this is crazy all right
22:14 - oh I could even use the timer do I dare
22:16 - use the timer mm-hmm I don't know do I
22:24 - dare use the timer let's just see that
22:27 - this could be our fastest coding
22:29 - challenge yet oh but before I do what I
22:32 - want to do is get this and I'm gonna do
22:37 - this before what do I want um I think I
22:47 - just want like the 64 pixel one no oh oh
22:53 - that's really small let's get a bigger
22:54 - one let's go to well let's just go to
23:02 - the original file why not write
23:05 - dvd-video logo logo downloads tend to do
23:13 - this in processing but then I'm going to
23:16 - do put this in where we go let's see DVD
23:21 - bouncing logo
23:29 - and I'm gonna do ad file
23:32 - I'm just gonna do this in advance think
23:49 - how is that font size wise how is this
23:54 - font size wise pretty good right and if
23:56 - I do 400 by 300 that's 4 by 3 what does
23:59 - that look like that's very small 600 by
24:04 - 400 is also 4 by 3 no it's not I guess
24:10 - 800 800 by 600 is 4 by 3 it's kind of
24:16 - big though
24:17 - that's good let's do that and I think I
24:20 - can probably keep this over a little bit
24:25 - so on nuraghe Hazra writes in the chat
24:28 - just tried the p5 bug I think auto
24:31 - reload causes the bug I think you mean
24:33 - Auto refresh and you're right I think
24:37 - Auto refresh is related to the bug
24:39 - however I have experienced that but even
24:42 - with Auto refresh off high contrast I
24:47 - can do the high contrast view yes thank
24:50 - you for that suggestion all right how's
24:57 - this everybody the issue here is that
24:59 - I'm ultimately going to make the
25:01 - background black oh that's fine in high
25:04 - contrast even ok great ok you should do
25:10 - it as a ten minute challenge like in the
25:12 - old days ok I'm just like I hesitate to
25:19 - overlay a timer so what if I use ok I
25:25 - guess bear with me for a second I've got
25:27 - open broadcast studio I used to do this
25:29 - ridiculous thing where I would put the
25:31 - if you really want me alright let's do a
25:33 - quick let's do a quick straw poll use a
25:42 - use a timer on screen yes
25:46 - no sure improve spam all right somebody
25:53 - vote no no I'm not gonna influent this
25:55 - no I don't want to vote just share no
25:58 - Twitter what URL if you want to vote in
26:07 - this I'm sure somebody can put this into
26:09 - the chat and with moderator privileges
26:20 - and vote there okay so what I'm going to
26:25 - do while you're all voting is pull this
26:29 - up and now is this really true the DVD
26:40 - logo moves with perfectly is is this
26:43 - assumption like based on how it actually
26:46 - behaves or is this an assumption they're
26:48 - making just for
26:51 - [Music]
27:00 - like just for the purpose of this
27:02 - article all right I don't know like
27:11 - because I was tempted to just make a
27:12 - random speed but I guess if I could pick
27:15 - it's easier I just pick one variable
27:16 - absolute speed and maybe if it's all
27:19 - integer math I could actually check if
27:21 - it really hits a corner but give it like
27:23 - a random location like that's what I
27:25 - don't know this is why I kind of want to
27:32 - like the question I have for you all is
27:36 - should I be doing this with with some
27:40 - kind of precision and I don't want to
27:45 - draw it out yet strawpoll site is down
27:50 - oh let me just vote oh my god really
27:58 - seriously seems to not be down oh wow oh
28:09 - you know kids see this it now shows you
28:12 - live I love this this is amazing I got
28:17 - to use this draw pull stuff more often
28:18 - so the fact that has ads on it I guess I
28:22 - can zoom into it and then you won't be
28:23 - able to see the ads there is one L
28:28 - missing where's the L in the link oh I
28:34 - probably know I probably posted the
28:38 - wrong link sorry I'm allowing people to
28:41 - post the link except they look the chat
28:43 - goes by much you fast I can't click okay
28:50 - all right I can't believe that there's
28:53 - 141 people voting right now that's kind
28:55 - of amazing so my question for you is
29:00 - this is like phone-a-friend and and
29:04 - maybe we could try to get the answer
29:06 - here and it's like for this DVD logo
29:08 - thing
29:09 - are there any constraints I need to take
29:11 - a mic like should
29:12 - speed always be a certain amount should
29:17 - they locate should where it starts be
29:19 - constrained like how does it actually
29:20 - work
29:22 - oh like this is a different website I'm
29:25 - actually using this straw poll dot me
29:29 - I'm using straw poll dot me which is a
29:31 - different website than straw poll com
29:33 - apparently which is what I've used in
29:34 - the past okay whatever
29:39 - so like how does the DVD bouncing logo
29:44 - really work thank you google okay all
29:50 - right no I don't want notifications the
29:53 - object moves according to a vector upon
29:55 - hitting the boundary interpolate sub
30:01 - ball blah blah blah blah oh my goodness
30:05 - oh my goodness always moving in a
30:08 - straight line probably a 45-degree angle
30:10 - okay so does it start though in a random
30:15 - place random starting point the logo
30:27 - doesn't move smoothly moves in chunks
30:29 - like ten pixels at a time and the x and
30:31 - y velocity are constant okay thank you
30:33 - to char so if the x and y velocity are
30:36 - constant are they also always equal is
30:38 - it a requirement that it moves at a
30:42 - vector where the components are equal
30:45 - where the heading is basically 45
30:47 - degrees and do they have to be both
30:52 - positive always start moving down to the
30:54 - right
30:55 - that's my question random starting point
30:58 - I could do and I guess I should but this
31:01 - is why I almost want to do i I want to
31:02 - do it with integers like that way I can
31:05 - check to see if it's equal all right I
31:07 - think this is good enough oh I I think
31:09 - people want the timer I think that much
31:11 - is clear
31:18 - let's see if we've got a little
31:20 - screenshot of Mike Boyd doing the
31:23 - bouncing okay where's a timecode where
31:31 - Mike Boyd does the bouncing yeah okay
31:35 - here we go and what is the dimensions of
31:42 - this logo file the logo is this is black
31:50 - it's not gonna 10th I need to change
31:53 - this to white and yeah I need to change
31:59 - I'm gonna have to process this
32:01 - do I have Photoshop or something on this
32:03 - computer anybody want to quickly make me
32:07 - a version of this where it's white I bet
32:08 - you I get let's see we could do this
32:09 - faster start coming down to the right oh
32:19 - did I not enable slow mode that's
32:24 - interesting
32:27 - Oh Photoshop that's like Photoshop
32:30 - apparently that computer thinks it has
32:32 - Photoshop oh hello Creative Cloud all
32:40 - right this is like I need the chat to
32:42 - teach me how to use Photoshop I don't
32:47 - know I kind of know how to use for where
32:51 - did I put it downloads so I wonder if I
32:58 - could do just like like I know I could
33:02 - do if I could fill it in but what if I
33:03 - just do like auto color adjustments
33:07 - brightness cups levels like what if I
33:09 - did this hold on
33:17 - what if I did just like brightness
33:21 - contrast
33:26 - am I just gonna have to like fill it in
33:29 - control click on the layer control kick
33:34 - on control i/o command I know I would be
33:38 - on a Mac the command I do invert AHA
33:46 - invert of course it's got this little
33:47 - like black outlines I don't think anyone
33:50 - will care especially when the background
33:52 - is black okay and then let me look at
33:55 - the image size so let's make it I mean I
34:00 - just don't want to let's make it let's
34:02 - say 300 100 so if my canvas is gonna be
34:08 - 800 by 600 I probably want it to be
34:11 - something like 64 I mean they looked
34:13 - like it 128 128 by 76
34:16 - let's try well first let's save it then
34:20 - let's do image size 128 by 76 let's do
34:28 - save as save as to sure whatever
34:49 - quit photoshop that looks like that'll
34:55 - work now I'm going back to the editor
35:02 - delete
35:13 - let me just make sure it looks like
35:16 - something I feel so lazy but I will take
35:24 - this out you rename this
36:02 - okay I think we're good that's gonna
36:05 - work and then just to make sure this
36:11 - works great okay are there any specific
36:16 - colors or can I do a random RGB color
36:20 - that's the other thing about it include
36:24 - the upload of the file in the video
36:26 - because it's for beginners that's
36:28 - actually a good point so let me do that
36:34 - that is a very good point so let me
36:43 - delete the file and let me go to
36:47 - downloads I can get rid of this stuff
36:50 - let me save this one just in case I need
36:53 - it
36:55 - [Music]
37:06 - there we go okay
37:10 - all right the time world I got I'm never
37:13 - gonna get to the fluid simulation thing
37:34 - but if I run it okay
37:40 - um all right thank you very much
37:50 - I like this thumbs us Vita if my maths
37:58 - teacher is somehow watching this you'll
38:01 - be pleased to know that fifteen years
38:02 - later I still got my trig down thank you
38:07 - okay um all right if this is the longest
38:12 - one ever I totally agrees nothing
38:15 - all right here we go oh I got a did the
38:17 - timer oh what's the easiest way in OBS
38:21 - for me to add a timer the way I did it
38:22 - before it's gonna take me a minute is I
38:26 - opened up a chrome window ten minute
38:36 - timer then I shrunk this window
38:51 - and then what I did is in OBS I did add
39:00 - display capture whoops add timer oh no
39:21 - that's not what I want to do ah it
39:24 - didn't work
39:25 - turn that off now you see what my screen
39:30 - looks like that didn't work
39:37 - window capture probably window capture
39:41 - window capture then capture oh here we
39:49 - go
39:49 - chrome chrome chrome Chrome 10 minute
39:52 - timer okay that's good then just crop it
39:56 - so let me do this and then crop we're
40:02 - gonna do transform transform crop know
40:14 - that shrinks it can I just drag the crop
40:19 - properties no
40:26 - coppy do you know transfer order
40:29 - transform copy rotate stretch fit scale
40:34 - filters properties know I used to know
40:41 - how to do this because I did it once
40:42 - before yeah I should just I mean why
40:49 - would I should do it forget this I
40:50 - should just put a timer in my screen
40:52 - here yeah but I was trying to do it so
40:57 - it's appearing in OBS this is also like
41:01 - flickering in this horrible way let's
41:03 - not do this let's do this 10 minute
41:12 - timer
41:37 - that's terrible I'm not doing it that
41:40 - way make your own timer yes I can make
41:44 - my own timer uh I guess I could make one
41:48 - in processing one must exist but that
41:50 - would be oh so much work I know I made
41:52 - one in p5 do we really do the timer no
41:55 - we don't really need a timer but now
42:02 - look now there's gotta be a way to crop
42:06 - this
42:17 - I don't crop this it's making me crazy
42:20 - oops
42:41 - crap you know what I used to do this
42:46 - with with now I'm remember I used to do
42:54 - this with different software control
42:58 - maybe
43:05 - and it transformed okay someone's
43:07 - telling me edit transform edit transform
43:13 - oh oh yeah there's the crop there it is
43:34 - oh my god this computer is the worst the
43:37 - delete the Delete key is broken on this
43:39 - computer so I can't actually delete it
43:44 - okay let's do this
43:51 - don't worry every to get there by the
43:58 - way this challenge is it's taking me
44:00 - longer to make I'm like sweating it's
44:01 - taking me longer to make a vow what just
44:12 - happened there
44:17 - well I lost everything oh no wonder the
44:25 - zero oh geez
44:28 - this is the worst you have no idea of
44:38 - what's happening but I can't type
44:43 - certain numbers in without not without
44:48 - without triggering other like hotkeys
44:51 - that I have set up
45:05 - this is insane
45:07 - but now I feel like I have to oh my god
45:12 - I cannot believe this I'm like I'm
45:19 - really getting really super sweaty band
45:21 - I'm like panicking I'm having like a
45:24 - panic attack here the only way to do
45:28 - this is manually with the arrow key
45:33 - should just done I was just gonna do a
45:37 - timer on my phone that would have been
45:39 - better it's okay we're just doing this
45:49 - I'm gonna read to you from while I'm
45:50 - waiting for this to use alt key to crop
45:56 - no does that actually work I'm afraid I
45:59 - tried that I thought I'll try that again
46:02 - once I once I you can use alt and grab
46:09 - edges in OBS okay let's try that I have
46:13 - to give up on this because there we go
46:16 - ah okay thank you
46:31 - thank you whoever told me I can use alt
46:33 - and grab edges this is like a game of
46:37 - Twister here
46:46 - all right I'm sorry everybody you know
46:48 - that I have like the sort of obsessive
46:50 - thing and I get stuck on stuff which is
46:52 - not a good quality to have while live
46:54 - streaming and I really apologize that
46:55 - was not a good use of your time my time
46:59 - anybody's time let's move on from that
47:01 - let's get started
47:02 - oh okay sorry everybody I actually like
47:10 - I got so panicky there that I feel so
47:14 - hot I gotta take off this sweater and
47:20 - we're gonna get started don't worry I'm
47:22 - gonna do the fluid simulation today I
47:24 - want to apologize especially to Simon
47:26 - who I think it's waiting patiently for
47:28 - that okay okay here we go everyone oh I
47:43 - gotta start the timer ready and let me
47:50 - do it let me actually change the timer
47:52 - to like 10 minutes and 30 seconds ah
47:55 - don't worry it's coming back everybody I
47:58 - know it just went black well it's
48:02 - because I have all these I've got to
48:06 - change my open broadcast studio settings
48:09 - okay so I'm gonna hit start gonna go
48:13 - here and here we go ready at 10 minutes
48:16 - I'm starting okay well I can't see the
48:28 - chat now
48:42 - hello it's throwback Wednesday wet
48:46 - Thursday whatever I'm gonna do an
48:47 - old-fashioned Kotick train coding
48:49 - challenge and I'm going to make the
48:51 - bouncing DVD logo and I'm gonna try to
48:54 - be done work this timer reaches zero
48:56 - which has never historically ever been a
48:59 - good idea but I already lost 20 seconds
49:03 - I do want to say that one of the reasons
49:05 - why I'm making this challenge is
49:06 - shouldn't count into my time but it's
49:07 - going to is that on this challenge if
49:09 - you were new to programming it's my hope
49:11 - that you might actually be able to
49:13 - follow along and almost and understand
49:15 - even if you've never programmed before
49:16 - and certainly I will include links to in
49:19 - the description where you can put some
49:21 - video tutorials that might actually take
49:23 - some more time to step through some of
49:24 - the concepts and in fact basically I'm
49:26 - just redoing my bouncing ball tutorial
49:28 - but I'm beaming it with DVD video
49:31 - bouncing logo for you know to attract
49:35 - the youth the youth the youth Utes
49:38 - anyway okay so let's let's talk about
49:40 - what I have to do so I have a canvas the
49:43 - canvas is going to be a JavaScript
49:46 - canvas in the browser what Alex went off
49:48 - I don't wanna do any editing
49:53 - why-why-why loose cable okay
49:57 - Oh can't do any we have to let me just
50:06 - just give me a second here the timer is
50:10 - going and I also so hold on we're gonna
50:17 - do this is terrible this is terrible
50:21 - we're gonna do a little bit of
50:22 - post-production magic when this gets
50:24 - released
50:25 - so what was the timer at a moment ago
50:28 - when I switched and the camera went off
50:30 - what was the timer at I'm gonna reset
50:32 - the timer to that not that amount
50:36 - what was the timer at somebody's
50:38 - somebody in the chat will tell me
50:44 - because I also need to put the timer
50:47 - here which I forgot to do window capture
50:56 - okay I'm gonna have to put slow mode on
50:58 - also seriously
51:27 - god
51:31 - today's just gonna be one of those days
51:32 - huh no I'm seeing a lot of 9:02 seeing a
51:40 - lot of 902 so I'm going to choose to
51:41 - trust that 902 and put that up here okay
52:09 - I guess I could start again but but I
52:12 - liked my intro it was good
52:25 - ah sorry 9:02 ditch the timer I really
52:34 - should have did that I really should
52:35 - have ditched the timer a long time ago
52:37 - that's for sure okay here we go
52:51 - I'm sorry everybody
52:53 - let me just fix the slow mode thing
52:55 - because this is really making me crazy
52:58 - so and then then and then let me just go
53:09 - to slow mode I'm trying to slow mode on
53:13 - everybody okay all right everyone
53:39 - okay Ivan Teresa I can't take it I can't
53:43 - take it I can't look at the I really
53:44 - shouldn't have the chat up alright
53:49 - second time alright fine I'll restart
53:52 - let's restart everybody but now I have
53:58 - at least
54:10 - all right now okay likely the cameras
54:24 - turning this to mute I'm gonna make the
54:31 - same throwback Wednesday joke okay go
54:36 - five three two hello
54:40 - throwback Wednesday I don't know when
54:44 - you're watching this is probably not
54:45 - even Wednesday but this is Wednesday
54:46 - right now I am going to do an
54:47 - old-fashioned coding train style coding
54:49 - challenge oh I'm to attempt to make the
54:53 - bouncing dvd-video logo and I'm going to
54:56 - attempt to do it in ten minutes I'm sure
54:58 - something's gonna go horribly wrong
55:00 - I should never use this time where
55:01 - nothing ever good never comes from it
55:03 - but I'm gonna try here's the one thing
55:04 - I'm excited about here with this
55:05 - challenge if you are beginner if you
55:07 - have never programmed before I'm hoping
55:10 - that this is a coding challenge that you
55:11 - could follow and actually possibly
55:14 - create yourself but so beginners welcome
55:19 - I'm gonna try to talk through all the
55:21 - concepts I'm gonna use very few kinds of
55:23 - basic beginner concepts of programming
55:24 - in JavaScript using the p5 library go to
55:27 - editor p5.js org I'm gonna pull that up
55:30 - in a second where I'll be typing the
55:31 - code so this is the bouncing DVD logo
55:34 - and I think I got plenty of time I'm
55:36 - gonna wait like 20 seconds just to see
55:37 - if it hits the corner okay anyway I
55:42 - should probably move on so what do i
55:44 - what do I need oh and I wanted to also
55:45 - do a quick shout out and thank you to
55:48 - Mike Boyd who learned to code from a lot
55:52 - of different resources including
55:54 - possibly coding I think well I check out
55:56 - this video he makes this really awesome
55:58 - game and also at some point tries to
55:59 - make a bouncing DVD logo which is where
56:01 - this idea came from so let me move over
56:03 - to the whiteboard and just just talk
56:08 - through a couple concepts so I'm gonna
56:10 - create something in HTML a call to
56:14 - canvas and I'm gonna use the p5 library
56:16 - which has a nice function for doing that
56:17 - called create canvas and I'm gonna make
56:19 - my canvas 800 by 600
56:22 - because this is for as an aspect ratio
56:26 - of four by three four hundred times one
56:29 - hunt teams two hundred is is 800 by 600
56:32 - and that's the aspect ratio of old-timey
56:34 - television tubes not like this fancy
56:37 - YouTube with your like 16 by 9 aspect
56:40 - ratio it's a fancy and then I need to
56:44 - draw an image of that DVD logo and I
56:49 - need to place it randomly somewhere in
56:51 - this canvas I'm it's location is gonna
56:55 - be defined by the corner that's gonna be
56:57 - sorry it's X sorry X Y location and then
57:00 - I need to determine when it hits the
57:02 - edge and have it bounce off that edge
57:04 - and according to my research I actually
57:06 - did some research into the science
57:08 - behind this DVD logo thing which you can
57:11 - actually there's all sorts of formula to
57:13 - calculate the probability of when it's
57:15 - gonna hit the corner and all sorts of
57:16 - stuff like that I'm gonna include a link
57:17 - to that article in this video's
57:19 - description it is always moving in a
57:23 - direction where it's X speed and it's Y
57:27 - speed are equal so essentially at a 45
57:30 - it already starts at a 45 degree angle
57:32 - pointing down and then ricochets off of
57:35 - the edges and maybe someday hits the
57:38 - corner I got seven that's left let's go
57:41 - alright so the first thing that I want
57:43 - to do is I already forgot oh go to the
57:49 - videos go to the p5 editor
57:50 - this is editor dot p5.js org and you can
57:54 - see here I've made a canvas it's 800 by
57:56 - 600 and I've drawn a background of 0
57:59 - that means black so this draw function
58:01 - is looping over and over again and setup
58:03 - is happening just once set up the canvas
58:05 - draw that background over and over again
58:07 - so what I need is I need to keep track
58:09 - of that X and the y position of the DVD
58:15 - logo so I need a variable I need X to
58:18 - store the exhibition and Y just or the Y
58:20 - position and by the way the way the
58:22 - canvas works is 0 0 is in the top left
58:25 - here this is this is x equals 0 y equals
58:28 - 0 all the way up to x equals 799-801
58:31 - hero through $7.99 think about that I
58:34 - know I'm going too fast check my other
58:36 - two
58:36 - where I speak hopefully a little bit
58:38 - slower all right so I'm gonna start I'm
58:41 - just gonna set X equal to 400 and y
58:44 - equal to 300 and I'm actually just going
58:46 - to draw a rectangle that's like 80 by 60
58:49 - sir that's sorry rectangle at x and y so
58:53 - this I want to draw a rectangle at x and
58:55 - y and I want the width of the rectangle
58:57 - to be 80 and the height of the rectangle
58:59 - be 60
59:00 - these are p5.js the JavaScript library
59:02 - p5.js functions to draw things like
59:04 - rectangles and circles and lines you can
59:06 - look them up in the reference which I
59:07 - will also link to in this video's
59:08 - description
59:09 - okay there we go look there it is with
59:11 - you now I need to have something that
59:14 - tells me its rate of change along the x
59:21 - axis and rate of change along the y axis
59:24 - I should note that Y points down Y
59:27 - points down X points to the right so if
59:31 - this were three this were three I heard
59:33 - somebody say oh and the actual thing it
59:36 - moves like 10 10 units per per frame I
59:39 - don't know what is old but we could
59:41 - think of how many pixels does it move
59:43 - down into the down into the right so
59:46 - let's try with 10 so I'm going to say
59:48 - I'm gonna call that X speed and I'm
59:51 - gonna and I'm gonna have Y speed these
59:55 - by the way up here are known as global
59:57 - variables so they're variables that I
59:58 - can use throughout the program I want to
60:01 - initialize them and set up and then use
60:03 - them in draw so I'm going to say X speed
60:05 - equals 10 y speed equals 10 I need
60:09 - separate variables because when it
60:11 - bounces on one side the Y continues to
60:14 - go down but the X reverses direction or
60:16 - when it's on the top the Y changes
60:18 - direction but the X stays the same so
60:20 - then what I need to do let's just make
60:23 - sure this runs it runs what I need to do
60:25 - is say x equals x plus X speed y and
60:29 - let's just do that so every time draws
60:32 - looping x equals XY so goodbye it's gone
60:34 - get rid of that again look it's moving
60:37 - oh it's gone so X is changing every time
60:40 - draw Luc's which is like around 30
60:42 - frames per second
60:44 - and then I'm going to say y equals y
60:45 - plus y speed and there we go
60:49 - it's moving
60:50 - you can see that's moving down and to
60:51 - the right and now for the exciting part
60:54 - Oh
60:55 - every isn't this all exciting I need to
60:57 - figure out how do I know how do I turn
61:01 - it around so I need to check there's
61:03 - something in programming called an if
61:05 - statement when do I want to turn it
61:08 - around I want it to turn around if it
61:11 - hits the edge if it hits the edge change
61:14 - the amount of change the value of XP
61:15 - reverse its direction so if XP is is
61:18 - positive that x beat should be negative
61:19 - so I could say if x equals and this is a
61:24 - little bit flub but I'm gonna do this
61:25 - right now
61:26 - equals the with with is a variable by
61:29 - the way that's keeping track of the
61:30 - width of the canvas which is 800 then X
61:34 - speed equals x speed times negative one
61:39 - multiply any number by negative 1 10
61:42 - becomes negative 10 negative 10 becomes
61:44 - 1000 3 minutes left
61:45 - gotta keep moving here ok there we go
61:47 - look oh boy let's add also a y if y
61:53 - equals the height see what happens
61:57 - oh what's going on here let's um let's
62:01 - change where it starts I'm just gonna
62:03 - let it start a little bit higher so you
62:05 - can actually see look it bounced but one
62:10 - thing I'm not taking into an account
62:12 - it's X Y position is this corner so when
62:15 - it equals the edge it's actually sitting
62:18 - here off of the screen so I need to know
62:20 - in this corner so actually what I want
62:22 - to say is when X plus its width which is
62:27 - 80 plus 80 equals width then reverse its
62:33 - speed look at that ah and then when y
62:35 - plus what 60 equals height oh oh but I
62:41 - don't want to change the X speed I want
62:43 - the wide speed to change when it's Y
62:47 - boom boom ah this is looking good ok oh
62:50 - now I've got to do the other I've got to
62:52 - do the other spots well I can I can use
62:55 - something called an else--if so I could
62:57 - say else if x equals 0 X speed
63:03 - equals x speed times negative one but
63:06 - you know what there's another way I
63:07 - could do this I can actually say or or
63:09 - if x equals zero I want to do the same
63:11 - thing so this weird double pipe symbol
63:14 - means or so and by the way to test if
63:17 - something is equals I have to use two
63:19 - equals two equals so I can actually use
63:21 - three and that's a whole other story
63:22 - in a one minute I don't have time to get
63:24 - to it but there's a reason why you might
63:27 - use double equals or triple equals but
63:28 - just more than one equals is asking the
63:31 - question so now I'm going to say or y
63:34 - equals zero let's look at this and and
63:40 - then I need a close bracket and then
63:44 - let's see what what's going on I'm
63:45 - missing something here oh I've got some
63:47 - an extra parenthesis there we go okay
63:50 - let's there we go okay I'm gonna give
63:52 - myself a little more room here a little
63:54 - more room here okay here we go let's run
63:57 - this ah line 32 token missing token on
64:02 - is Beckett okay here we go
64:03 - oh no I knew I shouldn't hit save undo
64:58 - timers at zero
65:17 - wait it came back what just happened
65:27 - wait what just happened it just came
65:29 - back I'm so confused
65:37 - I'm so confused
65:53 - this is the weirdest thing ever
66:01 - I wanna I thought I'd turned autosave
66:04 - off I wanted Auto refresh on I wanted
66:10 - Auto refresh on actually I meant to have
66:13 - that on but whatever Wow magic right I
66:22 - don't want to have any edits maybe we
66:29 - should just like speed that up I
66:35 - apparently the slow mode is not on or
66:37 - else there are like 20 million people
66:38 - watching today I Simon I did see your
66:43 - message yes I am sometimes I write
66:45 - things out in a more long-winded way
66:47 - just to be friendlier to the beginner
66:49 - although I do take your point that
66:50 - actually this would probably be a nicer
66:52 - way to write it I don't know what to do
66:59 - I really want to get I really got to get
67:00 - to the fluid simulation in an hour you
67:05 - might warm up it's gonna be done with
67:06 - this in like 15 minutes I do the whole
67:10 - thing again do we just like give up and
67:12 - have an edit if I if I do it again the
67:23 - same I'm at risk of the same thing
67:25 - happening the slow mode is on okay well
67:30 - I think I just have to move on
67:37 - all right okay we're gonna redo redo
67:46 - just accept the end okay I'm taking that
67:50 - as the gospel I'll tell you what I'm
67:53 - accepting to edit if I have time at the
67:55 - end of today's livestream because I want
67:57 - to get to the fluid stuff if I have time
67:58 - at the end of today's livestream I will
68:00 - come back and redo this
68:03 - all right the timer went I'm back there
68:06 - was an edit there the timer went to zero
68:08 - the começo disappeared then it
68:10 - reappeared there's like magic all around
68:12 - us today
68:13 - but I but I have what I have I now have
68:16 - the the rectangle bouncing along the egg
68:23 - on both sides both eat right just what
68:26 - now that I'm doing the edit I might as
68:28 - well I get to like do that again let's
68:34 - just oh hi I said I wasn't gonna edit
68:42 - anything but I I have to take a little
68:44 - like short break there because my code
68:46 - disappeared in the browser then the
68:48 - timer went to zero but now my code is
68:50 - back it was some some mystical magic
68:53 - floated into this room but this is where
68:55 - I was a moment ago I now have two if
68:58 - statements checking to see if this
69:01 - rectangle hits the right side the left
69:03 - side right side or the left side
69:04 - reverse the X speed the bottom or the
69:06 - top reverse the Y speed and Simon loyal
69:09 - viewers Simon pointed out that another
69:10 - way I could write this is just like this
69:13 - set the speed equal to negative of
69:15 - itself and there we go now now for the
69:19 - really exciting moment let's get that
69:23 - DVD logo so I've already downloaded this
69:26 - PNG file of the DVD logo itself and what
69:30 - I'm gonna do is I'm gonna click on this
69:32 - little arrow here I am going to add a
69:36 - file then I'm going to drag the DVD logo
69:39 - file here upload it
69:41 - I'm gonna say I am done we can see now
69:45 - the DVD logo is part of my project so
69:48 - I'm gonna add some
69:50 - code I'm gonna have a variable called
69:52 - DVD I'm gonna add something called
69:54 - preload preload is a block of code a
69:57 - function where it's good to write things
70:00 - that you want to happen like I know I
70:02 - said I'd set up this stuff that happens
70:03 - at the beginning preload is like that
70:05 - pre set up and something that I want to
70:06 - do there is like load media assets so
70:09 - I'm gonna say DVD dot P and what I call
70:12 - it DVD underscore logo dot PNG by the
70:16 - way in the mean time I selected this
70:17 - Auto refresh thing so that it's like a
70:19 - it's rerunning the code every time I
70:21 - make a change and now what I can do is
70:25 - instead of drawing a rectangle by the
70:28 - way this is a way I can turn off a line
70:30 - of code it's really called a code
70:31 - comment I'm gonna say draw the DVD logo
70:34 - and I can take this exact line of code
70:37 - but instead of saying rectangle I can
70:39 - say image and then I can say image Oh
70:43 - what did I call it DVD at that same
70:45 - location so look at that there's the DVD
70:47 - logo now I might have messed with its
70:49 - dimensions I can actually just use its
70:51 - native dimensions ooh but now it's not
70:56 - bouncing correctly so let's actually
70:57 - look at what it's dimensions are I can
70:59 - just in the apple finder I can see it's
71:03 - 128 oh I you gets it 128 by 76 so I can
71:07 - change those numbers but the truth of
71:09 - the matter is it's not such a great idea
71:10 - to have hard-coded numbers in your code
71:14 - like 128 and 76 but the nice thing is I
71:18 - can actually say DVD width so the image
71:20 - itself the DVD image knows its own width
71:23 - and I can also say instead plus a DVD
71:28 - DVD height and now it whoa
71:34 - no no how come that didn't work
71:43 - huh that's weird
71:52 - let's just make that 1:28 wait why
71:55 - didn't that work
71:59 - so when stuff doesn't work I like to do
72:03 - print use the print command and let's
72:06 - just say print DVD and I can see all
72:09 - this stuff look with 128 height 76 how
72:13 - come that's not working with height oh I
72:21 - think I may know what the problem is oh
72:24 - oh boy I have done something bad I have
72:28 - done something bad terrible big mistake
72:31 - encoding aha so it's very it's generally
72:35 - not such a good idea to check if
72:36 - something is exactly equal because you
72:39 - never know I mean I'm saying oh of
72:41 - course I and oh my goodness this is
72:43 - really really bad so it only worked by
72:45 - accident because because I can't I
72:49 - didn't think of this because that the
72:51 - multiple right if this starts at like
72:54 - 100 and I'm adding 10 to it every time
72:58 - like and this width is is 800 I am going
73:02 - to at some point get to the fact that
73:04 - it's going to be equal to 800 but if I
73:06 - if it's if this width is like 128 X plus
73:11 - 128 plus some multiple of 10 is never
73:13 - going to actually end up equaling 800 so
73:16 - I just want to basically just check if
73:21 - it goes past the width and the height
73:23 - and I'm not sure and or what I probably
73:26 - want to do is resize the image to be
73:28 - something but this is now going to be
73:30 - fine okay so I can Club move this
73:33 - console down I should do this again this
73:37 - is actually what programming is by the
73:39 - way and now here we go bouncing DVD logo
73:44 - some things I want to do to this number
73:46 - one is I want it to start in a random
73:49 - position every time so I can use the
73:51 - random function so this will now every
73:56 - time I run the code
73:57 - it'll start oh look at that oh it's
73:59 - stuck oh oh oh this is the worst alright
74:08 - there's another problem here oh because
74:11 - it's not now I'm not using integer math
74:13 - and I'm letting is random oh this is
74:15 - what I need to do let me separate this
74:17 - out I'm gonna say I'm gonna be very
74:19 - strict about this DVD logo I'm gonna say
74:24 - if it goes past the width reverse its
74:26 - direction and set it to that spot
74:30 - shuffle it back and I got to do this now
74:33 - separately I got to do the same thing
74:39 - then I'm going to set it back equal to
74:42 - zero so there's this issue that can
74:45 - happen work and go kind of like past the
74:47 - edge and then not make it all the way
74:48 - back on I think and so I'm gonna do this
74:55 - now for the X and the y huh oh this is
75:08 - greater than height sorry this is much
75:11 - simpler then Y is equal to height I lost
75:14 - all my energy the but the my balloon my
75:17 - bubble has burst all the air has come
75:19 - out as a balloon but we're there we're
75:24 - practically there you see what I'm
75:27 - coding here so let me just explain what
75:30 - I have done is that I am now made this a
75:33 - little bit more complicated but I'm
75:36 - saying okay when I get to the edge
75:40 - before you turn around right just set it
75:44 - back to this location and this is not
75:47 - right
75:49 - with - DVD dot with right that's where I
75:55 - want to set it back to otherwise if it
75:58 - gets to the left set it back to the left
76:00 - and keep going if it gets to the bottom
76:02 - and this of course is height might if Y
76:07 - + DVD height is
76:10 - than height then set it back to height -
76:13 - DVD height okay
76:27 - okay now we got to do something else we
76:31 - got to do something else I've got to add
76:33 - a red green and blue value so I'm just
76:36 - gonna say RGB you can declare three
76:38 - variables at once by the way with commas
76:41 - and then I want those values to be
76:44 - you're gonna see why I want those values
76:46 - to be some random number between two
76:49 - honest between 0 and 255 and then I am
77:00 - going to say tint RGB so tint is a
77:05 - function that allows me to tint the
77:07 - image look so every time I run this it's
77:10 - going to be a different color now I
77:12 - think I want to like guarantee that it
77:14 - is some that it is so the chat is going
77:19 - crazy with Corner corner corner
77:21 - I swear slow mode is not on I want it to
77:23 - be to have some amount of brightness so
77:26 - I could do like a hue saturation
77:28 - brightness thing but I'm just gonna
77:29 - limit the bottom range to 10 and then
77:33 - every time it hits one of the edge edges
77:36 - I'm actually going to put this in a
77:37 - separate function called function pick
77:40 - pick color and I'm gonna say pick color
77:46 - now call that function so this is me
77:49 - making up my new function and then
77:51 - calling that function cuz I want to
77:52 - reuse that code so in all of these cases
77:54 - and really
77:57 - [Music]
78:00 - there's got to be a nicer way to write
78:03 - this and here we go so now we're done oh
78:11 - it is now bouncing it starts at a random
78:15 - location now here's the thing I have
78:22 - done something here quite insane and
78:25 - like crazy but what I would like is for
78:33 - you to take this code refactor it make
78:35 - it better there's so many possibilities
78:36 - here so first of all I could add a test
78:39 - if it hits the corner right how would I
78:41 - do that
78:41 - how would I add a test if couldn't use a
78:44 - distance value if it equals if it's
78:45 - greater than what is is that the never
78:47 - really gonna truly hit the corner or get
78:49 - really close to the corner
78:50 - what could I make happen I make some
78:52 - fireworks go off sort of another image
78:54 - up here whatever I don't know but I also
78:58 - might want to just for the sake of
78:59 - argument right now change 800/600 to
79:02 - window with window height and that will
79:08 - make it no matter what always do the
79:11 - full and I then I can share this link
79:16 - which is this so now I have in the
79:19 - peopIe better I can't like the DVD logo
79:21 - size maybe should be tied to the size of
79:24 - the window but I think we're done I mean
79:27 - I could sit here for a while maybe we'll
79:28 - let this just go for a little bit and if
79:31 - it hits the corner I don't know what do
79:33 - we do if it hits the corner let me
79:36 - refresh this and then we could speed
79:41 - this up and see if there's a moment
79:42 - where he hits the corner no it did hit
79:49 - the corner
79:59 - oh oh okay
80:18 - oh here's something interesting by the
80:20 - way all right let's all right I'm gonna
80:23 - add something to this let's add a little
80:25 - test for if it hits the corner okay just
80:29 - give me a second here let's say let's
80:35 - say what we want to do is test if it
80:40 - hits the corner so what I'm going to do
80:41 - here is I'm going to say let D equals
80:45 - the distance between x and y and zero
80:49 - zero so I'm just gonna do the top left
80:51 - okay and I'm gonna say if that distance
80:53 - is less than one like one pixel then I'm
80:57 - gonna say console.log hit corner now
81:01 - it's only the top left corner so now
81:07 - here's the thing am I really gonna sit
81:08 - here and watch and watch and watch and
81:11 - watch and watch and watch to see if the
81:12 - message appears there I not really but I
81:15 - could speed this up because what I could
81:18 - do is I could use something called a for
81:20 - loop and basically I could say every
81:24 - time through draw do a hundred cycles of
81:31 - moving the DVD logo and checking the
81:34 - corner if it hits the corner by the way
81:36 - I'm going to say break so that it breaks
81:40 - out of that loop and so now we can see
81:44 - it's going really fast sped it up come
81:49 - on I don't know yeah let's speed it up
81:55 - even more thousand times oh wait oh no
82:02 - cuz ten thousand times should I let it
82:09 - be any corner
82:20 - so I can do one thing I can do is all
82:24 - the distances two three four so this is
82:36 - with - - DVD dot with well zero zero is
82:42 - the first one then the other one is the
82:49 - top the top right this would be the
82:56 - bottom the bottom right this would be
83:07 - the bottom left what's wrong
83:11 - Oh d4 and then I'm going to say let D
83:15 - equal the minimum of d1 d2 whichever
83:18 - ones smaller and then D equals the
83:24 - minimum between D and D 3 and D equals
83:28 - the minimum between D and D for let's
83:34 - just make sure yeah okay so I hit the
83:36 - corn whoa it's the corner a lot if it's
84:04 - and there's certain times where it won't
84:05 - ever hit the corner I'm not going to
84:12 - include this start from a corner yeah
84:27 - alright I'm gonna that was an
84:29 - interesting aside I'm not gonna bother
84:33 - with that that won't make it in check D
84:41 - not oh it's like checking d1 no wonder
84:44 - oh yeah whoops it's hitting the corner a
84:53 - lot hitting the corner a lot okay so it
84:57 - is hitting the corner quite a bit every
84:59 - 10,000 frames it also depends on where
85:07 - it starts I think there are certain
85:09 - places that it'll start that it won't
85:11 - ever get there there's probably a way we
85:13 - could calculate this probability
85:27 - hmmm interesting so it really depends on
85:29 - where it starts it seems to me right now
85:33 - it's hitting the corner all the time
85:39 - drawing a pet okay I have to stop
86:04 - all right
86:05 - [Music]
86:15 - and thank you for watching this coding
86:18 - challenge I'm sorry this turned into
86:20 - something of a mess I hope that you will
86:23 - take this and make your own variation on
86:26 - it play with it use different imagery
86:28 - different way of moving way of checking
86:30 - the corner maybe you'll make some kind
86:32 - of beautiful particle effect when it
86:34 - hits the corner and maybe you will think
86:36 - of a new idea and who cares about the
86:37 - corner how about the middle what if it
86:39 - crosses the perfect middle I don't know
86:41 - the world of the bouncing DVD logo is
86:43 - now yours to play with I don't know I
86:45 - hope you learned something had a little
86:47 - bit of fun if you want to learn more
86:48 - about programming I basically do this
86:51 - exact same thing in my foundations of
86:53 - JavaScript with p5.js tutorial series
86:55 - but kind of step through all these
86:57 - concepts quite a bit more slowly
86:59 - I don't know well then that's gonna be
87:01 - helpful or interesting to you but you're
87:02 - welcome to watch it thanks and see you
87:03 - in a future coding challenge alright so
87:13 - I got to put this away I got to put this
87:17 - away I would say this was a c-minus
87:22 - sorry that this didn't end up being a
87:27 - non edited 10-minute coding challenge
87:32 - let's go and let's do some fluid
87:34 - simulation everybody it is 12 o'clock
87:37 - I've got at least another hour hour and
87:39 - a half in me here so let's let's see if
87:43 - we can do this fluid thing the funny
87:45 - thing is this was supposed to be my easy
87:47 - thing and the the fluid simulation is
87:51 - really hard and I don't even know how
87:54 - I'm gonna do this coding challenge but
87:55 - I'm going to attempt it so and maybe
87:59 - I'll just do this one again thank you
88:02 - Mike Pig Mike Boyd I blame you okay
88:10 - let's go to rainbow topics issues the
88:16 - next thing I want to look at is here and
88:22 - did I get a message from yes okay
88:28 - Oh
88:41 - oh wow this is awesome thank you okay
88:58 - somebody can do the hypercute the five
89:01 - four dimensional four dimensional DVD
89:05 - bouncing logo that you should do that'll
89:07 - be oh wait wait I kind of want to do
89:11 - that right now I'm not going to I gotta
89:12 - go you know I was getting this all these
89:16 - tweets yesterday about like the
89:17 - similarities between what I do with
89:19 - coding and what Bob Ross did with
89:21 - painting and I would say the
89:22 - similarities are very few and far
89:24 - between Bob Ross was like the most
89:27 - gentle I mean I hopefully I'm a gentle
89:28 - person but soothing calm tons of talent
89:31 - visual talent slow just meditative
89:37 - lessons I feel like that was not
89:40 - anything Bob Ross whatsoever I
89:43 - appreciate the comparison Bob Ross is
89:45 - amazing but I that's it's super flawed
89:48 - all right we are gonna use processing
89:51 - for this one I'm gonna write some
89:58 - concepts on the whiteboard in advance
90:02 - here to try to get myself a little
90:10 - prepared here 240 please okay let me
90:20 - come over here for a second let's erase
90:22 - this a total disastrous failure
90:37 - let's get rid of that timer oh my god
90:40 - like the 30 minute video oh let's get
90:43 - rid of the timer I don't need the timer
90:48 - lock that lock that don't need the timer
90:53 - okay yes I'm gonna do this in processing
90:57 - which is built on top of Java so what I
91:02 - want to do let's just talk about three
91:14 - okay
91:17 - so diffusion
91:35 - it's gonna call it projection but I
91:37 - guess you know what I will use the
91:41 - terminology that my cash uses everything
91:43 - today is based on somebody
91:48 - thank you Alex Smith I can't believe
91:51 - people are joining in this this nonsense
91:56 - diffuse Advent actually project just do
92:05 - this the same order project and add
92:13 - vector
92:17 - I'm also going to talk about boundaries
92:22 - and linear solve and I'm gonna make a
92:32 - note of something to reference which is
92:48 - [Music]
93:07 - I've made some notes as I was reading
93:10 - through this stuff
93:15 - [Music]
93:24 - I can't find my pages are all out of
93:28 - order now I forgot we're trying to look
93:33 - up what methodology this uses and
93:54 - important concepts I want to make sure I
93:58 - talk about incompressible versus
94:04 - compressible that's another thing I want
94:11 - to talk about and then what's sort of
94:17 - key here is there is the vector field
94:24 - and there is the quote unquote like dye
94:31 - and a concept here that's crucial is the
94:36 - density of the dye okay
94:53 - um so that means the amount of fluid so
95:00 - this projection ties to here
95:15 - this applies to so the projection
95:19 - applies to only the I think the
95:23 - projection applies to only the dot the I
95:35 - guess it applies to the velocity okay
95:37 - I'm gonna all right okay sorry this so
95:42 - this is some concepts that I want to
95:43 - keep in mind as I go through this so Oh
95:52 - Simon wrote this is his favorite stream
95:55 - okay that's nice
95:57 - alright so let me just be clear about
96:00 - something although I might as well just
96:01 - start this coding challenge so let me
96:03 - get the references that I want I want to
96:10 - reference memos library I want to
96:18 - reference Joe Stan's paper and Mike
96:22 - Ash's blog post then I also want to
96:31 - reference a lily pad okay
96:40 - so all right Oh
96:48 - oh yeah I saw Simon I saw everyone I saw
96:51 - your video about with the balloons
96:53 - okay Thank You Simon alright alright
96:57 - we're gonna get started this is gonna be
96:58 - a long one and I'm not gonna rush hello
97:10 - YouTube live very very very nice
97:12 - okay all right here we go we drink some
97:21 - water
97:29 - if this goes very smoothly there's gonna
97:32 - be like a tremendous amount of irony
97:34 - here not smoothly the DVD thing went by
97:40 - the way I forgot to mention looks like
97:43 - looks like one third Wednesday 10:30
97:46 - a.m. Eastern is going to be my weekly
97:49 - time for live streaming every once in a
97:50 - while I might get a bonus time during
97:52 - the week but I'm actually going to
97:53 - attempt to try every single week there
97:55 - might be one or two weeks where I miss
97:57 - from now until the end of May no I'd say
98:00 - now until the end of April because mates
98:03 - may stuff changes but you know now for
98:06 - the foreseeable future
98:07 - every Wednesday 10:30 and Eastern put it
98:09 - in your calendar complain to me on
98:11 - Twitter at pineapple boy 27 if if if
98:17 - that schedule doesn't work for you my
98:19 - twitter is actually at shipment okay
98:21 - here we go hello and welcome to you to a
98:29 - coding challenge a calm soothing
98:32 - although somewhat turbulent coding
98:34 - challenge called fluid simulation now I
98:38 - have something to admit to you I don't
98:40 - really understand how any of this stuff
98:42 - works I did make this at one point and
98:45 - so I'm hoping in this coding challenge
98:47 - to recreate exactly this which will be a
98:49 - basis on which hopefully a lot of other
98:52 - interesting ideas
98:53 - we'll come about I like this idea came
98:55 - into mind when I recently saw smarter
98:58 - every day's video on laminar flow you
99:00 - know I love laminar flow and all but
99:02 - team turbulence for life yeah all right
99:05 - so there's a wonderful three blue one
99:07 - Brown do I just reference the same
99:09 - weather YouTube channels every single
99:10 - time yes I do but there's also an
99:12 - excellent three blue one Brown video on
99:14 - turbulence which I would also recommend
99:16 - so I'm going to let me let me give you
99:19 - some background here so first of all
99:20 - there is a github issue thread which
99:22 - started by dear Daniel XD from 2016
99:26 - laxman Boltzmann methods for fluid
99:28 - simulations so this is one method I
99:30 - posted some stuff here then some other
99:33 - stuff here oh this is a great reference
99:34 - I forgot which has this like really nice
99:39 - simulation of turbulence and
99:40 - JavaScript's then I would also recommend
99:43 - checking out but what I want to
99:45 - highlight here is that this people have
99:48 - what I want to highlight here are these
99:50 - three links so the seminal kind of
99:54 - canonical standard or the origins of
99:57 - doing like fluid dynamics in computer
99:59 - graphics in my research comes from this
100:02 - article by Joss dam real-time fluid
100:04 - dynamics for games I believe this was a
100:06 - SIGGRAPH paper 2003 somebody
100:10 - fact-checked me on that and it's you
100:12 - know built on top of this idea of these
100:14 - navier's stokes equations which are
100:16 - these partial differential equations
100:19 - that describe fluid dynamics and there's
100:22 - actually a 1 million dollar challenge
100:24 - for proving that this can or cannot be
100:26 - solved in three dimensions anything I'm
100:29 - capable of doing or going to attempt to
100:31 - do in this video but this paper includes
100:34 - some of the formulas includes a lot of
100:36 - the code and you can see one thing that
100:38 - sort of key concept here is a fluid
100:40 - simulation can be done by thinking about
100:44 - fluid as kind of particles that live in
100:47 - a grid and you know obviously might be
100:50 - like an infinitely small grid in real
100:56 - life but we can we can make that
100:58 - discrete and think about the grid of
101:00 - pixels and how what this or density or
101:03 - the velocity of each of the fluid is
101:06 - that every one of these spots
101:07 - the grade that's ultimately what I'm
101:08 - gonna do and there's some nice C code
101:11 - and descriptions of some of these
101:12 - algorithms
101:14 - did I mention this oh yeah oh so no so
101:19 - this article I believe serves as the
101:22 - basis for memo Atkins a processing
101:26 - library called MSA fluid there's also an
101:27 - open frameworks library which is a C++
101:30 - engine and you can see here the way that
101:33 - this ends up looking by sort of like
101:35 - distorting this vector fit off this is
101:37 - awesome oh I'm sure the YouTube
101:38 - compression is totally ruining this but
101:40 - it's beautiful check out that library I
101:43 - could start this video just by being
101:44 - like let's just use the library and I
101:47 - think that's probably what you should do
101:48 - stop right now and go and use this
101:51 - library to make something beautiful or
101:53 - interesting read the documentation you
101:54 - should also check out Gabriel Y mouths I
101:58 - hope I pronounced that correctly lilypad
102:01 - project which was actually I believe
102:02 - used in the three blue one Brown video
102:04 - on turbulence and has Gabriel rights
102:09 - here at the end a bunch of things about
102:12 - stamms approach and what lily Pratt does
102:16 - in a paper so there's this is a giant
102:19 - rabbit hole you could go down and I have
102:21 - spent some time but it's like poking
102:23 - around in this rabbit hole in the last
102:25 - week the article that I found that I
102:28 - kind of enjoyed the most in terms of
102:30 - style was Mike Ash's article called
102:33 - fluid simulation for dummies which is
102:35 - actually a port of a port of not a port
102:42 - but a version of Jaws stam's
102:44 - paper but actually turning it into 3d
102:47 - and how to render that 3d in parallel
102:50 - with paralyzing computing power is all
102:54 - here in his master's thesis
102:56 - that's another rabbit hole you could go
102:57 - down so what I would like to do is use
103:02 - this article and I try to make sure that
103:04 - I don't repurpose somebody else's
103:05 - content without permission even if it's
103:07 - sort of on the web in an open-source way
103:09 - what I try to do what I want to do I
103:13 - asked my cash for a permission on
103:15 - Twitter I think it's
103:16 - at my cash but I'll include a link in
103:18 - this video's description if I could go
103:19 - through this in a video and so what I'm
103:21 - gonna do is I'm gonna go through this in
103:22 - the video and mostly just kind of like
103:24 - copy paste this code it which is written
103:27 - I believe C++ or C something like that
103:30 - some object-oriented C flavor language
103:33 - and I'm going to copy paste them into
103:36 - processing which is a Java based
103:38 - programming environment and kind of like
103:39 - adjust the code to work in the way that
103:41 - I know and see if I can get the result
103:43 - and play with the result so I don't I'm
103:45 - not I don't feel obligated to understand
103:47 - or explain all of the maths involved
103:49 - throughout this throughout all this and
103:51 - I would definitely encourage you to read
103:52 - this or I would say stop and read this
103:54 - whole article before you continue
103:55 - watching this and then this is gonna be
103:59 - in three parts at a minimum so this
104:01 - first part I hope you just like get it
104:02 - working I just want to copy paste the
104:04 - code change the syntax around get it
104:06 - rendering and play with it just get it
104:08 - working number two is I want to kind of
104:11 - refactor the code that'll be in another
104:12 - video I'm actually gonna reflect her in
104:14 - a more with a kind of modern approach
104:16 - I'm not monitoring the wrong word I mean
104:18 - this was done in like over ten years ago
104:21 - but I want to use like object-oriented
104:23 - programming vector like the P vector
104:25 - class and processing I think there's
104:26 - some ways that I can redo the code to to
104:29 - make it a little bit more readable than
104:31 - this particular style that uses a lot of
104:33 - like an esoteric variable naming so
104:37 - that's number two and then number three
104:39 - I want to then apply this logic to my
104:46 - kind of my flow field example from the
104:51 - nature of code book so if I could take
104:52 - the fluid simulation turn it into a
104:55 - vector field where I could just toss
104:56 - particles in that fly around I think
104:58 - some visual opportunities will come of
105:00 - that so that's three parts just get the
105:02 - thing working that's what I'm about to
105:04 - attempt to do right now sure it will go
105:06 - wrong but I will try my best number to
105:10 - refactor the code to make it sort of fit
105:12 - with how I think about coding and
105:14 - processing at P 5gs today and then also
105:17 - try to do some more stuff with it
105:19 - visually and I would say one of the
105:21 - things is there's gonna be some
105:22 - performance issues I'm gonna keep things
105:24 - low resolution but you'll see a lot of
105:27 - the implementations of
105:28 - use shaders or WebGL and all sorts of
105:30 - fancy tricks that I'm not gonna get into
105:33 - but if you know about that stuff and can
105:35 - build on top of whatever I'm doing then
105:37 - fantastic
105:38 - okay everybody with me great I'm gonna
105:44 - take a little break pause for a second
105:59 - and I'm going to alright so I have
106:06 - written out here on the whiteboard in
106:08 - advance some of the key concepts that I
106:09 - want to make sure that I don't forget
106:12 - about I almost get confused about this
106:13 - incompressible versus compressible which
106:15 - ones which well I think there's a way to
106:17 - remember an incompressible fluid is a
106:20 - fluid that basically like if you like
106:22 - squeeze it it doesn't change its the
106:27 - it's the density is constant the density
106:41 - is constant that's what I meant to say
106:45 - all right so I'm about to get started
106:48 - coding but before I do that I've written
106:49 - in advance like a bunch of the concepts
106:51 - are involved in this implementation that
106:53 - I want to make sure that I don't forget
106:55 - to mention the first one that I think is
106:57 - really important is this idea of an
106:58 - incompressible fluid an incompressible
107:00 - fluid is a fluid that density must
107:03 - remain constant throughout water so for
107:06 - example if you have water in a balloon
107:08 - and you squeeze that balloon the water's
107:10 - got to like come out it's not
107:11 - compressible whereas air is actually
107:13 - compressible it's density can change so
107:16 - this apparently from my little research
107:18 - that I've done simplifies a lot of the
107:20 - stuff so this fluid simulation is is
107:23 - going to work only for this idea of an
107:27 - incompressible fluid I should also
107:29 - mention that the goal here is not
107:30 - necessarily to with scientific accuracy
107:35 - simulate like true fluid McKay
107:38 - but rather to create the illusion and
107:41 - feeling of that through like some like
107:44 - remote connection to that actual
107:46 - scientific accuracy but I'm sure
107:48 - whatever I do will be less accurate than
107:49 - what people have before based on how I
107:51 - know the way I make things all right but
107:53 - that's an important thing so the first
107:56 - thing that we need to consider is that
107:59 - the fluid is going to live inside of a
108:02 - box and I think the way the math is sort
108:04 - of tuned in these examples I believe is
108:06 - for that this box should really be a
108:08 - square and sometimes like a I don't know
108:10 - why like a power of two is always a nice
108:11 - thing so maybe I'll start with like 512
108:13 - by 512 or mean 256 by 256 just to make
108:17 - it low resolution so you can think of
108:19 - this as a grid of pixels and there is
108:23 - going to be inside of this grid a
108:26 - velocity vector a vector V vector that
108:30 - points in a given direction so if the
108:33 - velocity vector in every spot in the
108:35 - grid is zero it's like completely still
108:40 - water if I put a velocity vector moving
108:44 - to the right it's like the water is that
108:47 - would be like laminar flow by the way I
108:49 - think because the last everything is
108:51 - smooth and perfect and all moving in
108:52 - exactly the same direction supposed to
108:54 - turbulence where everything's kind of
108:55 - going crazy so that's one thing that's
108:58 - going to exist in here so that is
109:01 - something I should say there is this
109:02 - idea of the velocity field or the vector
109:06 - field and that's gonna have X's and Y's
109:09 - in my caches blog post it's actually all
109:13 - done in 3d with X Y Z's I'm going to
109:16 - take out that third dimension while I'm
109:19 - doing it then but but you should add it
109:21 - back in and see what that what happens
109:23 - there now the other thing is there's
109:26 - going to be this idea of die oh I
109:28 - brought this over here already because I
109:30 - wanted to explain that there's this idea
109:32 - of die and we're going to talk about the
109:34 - density of the die which is in other
109:37 - words this vector field we wouldn't be
109:40 - able to see anything moving we wouldn't
109:42 - be able to sue under C the the flow
109:45 - through the fluid without like putting
109:47 - something in it so you can imagine
109:48 - sprinkling it will die in it and having
109:50 - it diffuse
109:53 - maybe add vex to shoes advic project all
109:56 - around the fluid so but that what I want
109:59 - to make clear is when we start talking
110:00 - about density in the code this code
110:02 - example and this my cache makes very
110:04 - specific it makes a very specific point
110:09 - about we're talking about the density of
110:10 - this dye which is like an extra thing
110:12 - we're adding just so we can visualize it
110:14 - we're also able to visualize it just as
110:16 - a vector field which I will do at some
110:17 - point but the dye is what's gonna give
110:18 - it more of this like smoky like quality
110:21 - by visualizing the amount of dye that
110:24 - sort of as it moves throughout the fluid
110:25 - so this is the basic idea so the first
110:27 - thing I need to do is get an array to
110:30 - store all of the X's and Y's of the
110:35 - vector field and the amount of dye for
110:38 - every single one of these spots and in
110:40 - the example it's done with like three
110:42 - separate arrays an array of X's and
110:44 - arrays wise and arrays of densities and
110:46 - it's kind of works like a cellar
110:48 - automata simulation where I need the
110:50 - previous state and the next state all
110:51 - the velocity of the previous and the
110:53 - next velocity all the density and the
110:54 - next density so I'm actually going to
110:56 - need to so this is why the code gets
110:58 - really confusing because I need X Y and
111:02 - density then I need what's what's in the
111:05 - code name that's x0 y0 and density zero
111:09 - I don't forget this might be called like
111:11 - S or something in the code
111:12 - but I need this sort of previous of all
111:14 - these so there's a whole bunch of arrays
111:15 - and this is what I want a later refactor
111:18 - and see if I can just use P vector or an
111:19 - object and stores a P vector and a
111:21 - density value in the previous all that
111:23 - stuff all right back over here I don't
111:27 - know how long this has been so far way
111:28 - too long
111:29 - let's go back to Mike Ash's page and I'm
111:36 - gonna start with this this is what I was
111:38 - talking about
111:38 - so this c++ structure i'm gonna take it
111:41 - into processing I'm gonna add setup I'm
111:45 - gonna add draw I'm gonna say size 250
111:49 - actually you know what I'm gonna do I'm
111:51 - gonna create a variable called n this
111:54 - will appear in the code which is kind of
111:56 - like the the width and height of the
111:59 - square so will be 5 so n is going to be
112:01 - in this case what I say 256 and then
112:04 - actually in process
112:05 - if you use a variable for if you use a
112:09 - variable for the dimensions that you
112:11 - want to put in size you've actually got
112:13 - to put that in the settings function so
112:15 - I can say this so this should get me
112:17 - like a 256 by 256 window and then so I'm
112:22 - gonna save that and I'm gonna call this
112:24 - like fluid sim ash and stam fluid sim
112:31 - ass damn and then I'm gonna create a
112:35 - class and I'm gonna call this make a new
112:38 - tab I'm gonna say class fluid and in
112:41 - that class I want to have all this stuff
112:46 - all of these now the the thing that's
112:51 - different here in processing is this
112:53 - star what is that star what's that star
112:55 - mean that's actually because it's some C
112:57 - flavored language in the code and mic
112:58 - stands that is a pointer meaning it's
113:03 - pointing to an area on a memory address
113:07 - of the computer where all the density
113:08 - values will be stored but what I really
113:10 - want this to be is just an array so I'm
113:13 - gonna change all these to an array which
113:15 - is the same thing in Java this is now a
113:17 - pointer to an array you'll see in a
113:21 - second and then and by the way I'm gonna
113:25 - take out all the Z's I should mention so
113:28 - these variables this isn't a diffusion
113:31 - amount like which talks about which is
113:33 - like a variable to control how the
113:35 - velocity and that sort of the vectors
113:38 - and the dye diffuses throughout the
113:39 - fluid this is viscosity viscosity is
113:42 - like the thickness of the fluid so
113:44 - playing with that can change the
113:45 - behavior as well DT is the time step in
113:48 - all of my physics simulations I've
113:49 - always done and just have to time step
113:51 - up one but I think you need a smaller
113:53 - time step to be able to get the
113:55 - simulation to behave somewhat accurately
113:57 - so that that'll come up later and now I
113:59 - have density and I think this is
114:01 - previous density velocity X velocity Y
114:04 - previous velocity X in previous velocity
114:07 - Y alright so now this is creating it so
114:11 - I basically want to do exactly this so
114:16 - this would be in the constructor of the
114:17 - flu
114:19 - and I'm not making and basically an I
114:24 - already declared somewhere else and I
114:27 - think so I don't think I need sighs I'm
114:28 - gonna say cube size and these should all
114:29 - be this time so this is referring to the
114:35 - actual variables in the object itself
114:41 - so and I don't need Z and I don't need Z
114:49 - and now this is like sialic is like a
114:52 - memory allocation because you're
114:54 - allocating a certain amount of memory
114:55 - for all these fluid values but I just
114:58 - want an array that a size n times n so
115:02 - this is going to be this and it's it's n
115:05 - times n times n because his is in three
115:07 - dimensions so I know I could do like a
115:11 - Find and Replace but I this is like so
115:13 - crazy that I want to do this this is
115:17 - like very meditative for me okay and
115:19 - this receives DT diff three arguments
115:26 - when you create the fluid you create it
115:30 - with a just got a time step a diffusion
115:33 - and a viscosity so in here I'd be saying
115:35 - something like fluid fluid and in set up
115:41 - I would now say fluid equals a new fluid
115:43 - maybe like a time step of 0.1 and I'm
115:47 - just gonna make a density and discuss
115:48 - discuss 'ti of zero for right now and
115:50 - but those values would get filled in
115:52 - presumably okay we're getting there
115:55 - we're moving through the article here we
115:57 - go this is a this is described okay you
116:01 - need to be able to destroy the thing
116:03 - free all the memory I don't have to
116:06 - worry about that it will get cleaned up
116:08 - for me add density okay this makes sense
116:11 - now remember add density is not talking
116:15 - about is not referring to the fluid
116:17 - itself it's referring to the dye that's
116:20 - going into the fluid so this is a basica
116:23 - that I can add died I sort of feel like
116:24 - I want to rename that function to add
116:26 - died but I but I'm gonna just call it
116:29 - add density so
116:31 - we're gonna take this function I think
116:33 - this could be a function of that's part
116:38 - of the object what does it need we don't
116:42 - need a reference to the object itself we
116:44 - have that we need a location and an
116:45 - amount that makes sense so we need a
116:47 - location and an amount so that's like
116:52 - the amount of dye we're adding at this
116:54 - XY spot now here's the thing you're
116:57 - noticed something everywhere in the code
116:59 - there's this like IX function index
117:01 - equals IX well this is a two-dimensional
117:05 - this is this is two-dimensional but you
117:07 - notice all the arrays I made were
117:09 - one-dimensional this is kind of a pretty
117:11 - typical thing to do so but I need a way
117:13 - of going from X comma Y to the single
117:16 - index that's a lookup into this grid so
117:20 - I could write a function you know I
117:21 - think it's done with like a macro or
117:22 - define or whatever in this but I'm gonna
117:25 - write a function I'm gonna name I'm
117:26 - gonna call it eye x and it gets an X and
117:31 - a Y and it would just return return x
117:37 - plus y times n so this is oh it needs to
117:42 - end needs to return an integer it's not
117:44 - void so this basically says for any
117:46 - given X Y give me the one-dimensional
117:49 - index and this formula is the same thing
117:50 - that I use it all my image processing
117:52 - and pixel processing it's a way to get a
117:54 - 2d location in a one dimensional array
117:57 - okay so now I would be saying and we can
118:00 - go back to this code basically and we
118:02 - can do this but no Z and then we're
118:07 - basically going to say hey this dot what
118:12 - is it called VX
118:13 - oh we know that's velocity sorry this
118:15 - dot density at index add some amount so
118:23 - this is really simple this is like a
118:24 - really simple function just add some
118:26 - density to this spot this amount of
118:28 - density of this spot then we can also do
118:31 - this add velocity which is basically the
118:34 - same thing but just with an amount X in
118:38 - an amount Y so I think we could probably
118:41 - just copy this and we could say add
118:45 - ASSA t @xy with an amount X and an
118:50 - amount Y C I would prefer to use like P
118:52 - vectors for all this stuff but and then
118:55 - we get the index and we say V X V X plus
118:59 - amount X and V Y by the way this is good
119:07 - port expect this code is going to get a
119:09 - lot worse soon enough okay now all right
119:15 - ah look at this
119:16 - so here now we can take a moment here
119:18 - are the three main opera operations
119:22 - diffuse project Advent diffuse project
119:28 - Advent let's do that one at a time and
119:33 - so we can read this I mean that's useful
119:36 - to read my caches description put a drop
119:38 - of soy sauce soy sauce scoot is the way
119:40 - to think about die and you'll notice
119:41 - that doesn't stay still but it spreads
119:43 - out so this happens even if the water in
119:45 - the sauce are perfectly still called
119:47 - diffusion and so the die obviously
119:50 - diffuses that makes sense but the
119:52 - velocity also diffuses if some of it
119:54 - moves it's causing everything around it
119:56 - to move as well so that's a function
119:58 - this is really going to be the function
119:59 - that does then the solving of the Navy
120:02 - or Stokes equation I sort of I think
120:04 - kind of so let's go and actually write
120:08 - oh then there's this talk I'm gonna I'm
120:11 - gonna come back Oh see this is
120:12 - describing all the functions mm-hmm I
120:14 - kind of want to do these one at a time
120:15 - so let's do defuse ah let's do defuse so
120:19 - these I'm gonna put a few and this is
120:22 - not going to be an object inside the
120:23 - class and I'll explain why in a second
120:26 - so the first thing that I'm gonna do is
120:28 - I'm just gonna try to port this so
120:30 - anytime there is the pointer I want this
120:33 - to be an array diff is a diffusion
120:36 - amount DT the number of iterations and I
120:39 - don't think I need n as an argument
120:41 - because I'm just using that as a global
120:42 - variable I also kind of personally would
120:45 - like to just keep iterations as a global
120:47 - variable
120:47 - I think that'll make things a little bit
120:49 - simpler where did I put that I'm
120:51 - actually going to put these in the fluid
120:54 - tab that's mostly where I'm working
120:55 - final iteration in
120:57 - iterations like we just put that as one
121:00 - let's leave that it's like 10 right now
121:02 - so the idea here is that this function
121:07 - knows how to diffuse any any arbitrary
121:13 - array of numbers X based on its previous
121:16 - values X 0 based on a diffusion amount
121:20 - and a time step but you'll notice that
121:22 - what it does is immediately calls
121:24 - another function called linear solve so
121:28 - solving a linear equation is like
121:31 - something like this I don't know 2x plus
121:36 - y minus 3z equals 10 right this is a
121:40 - linear equation we could have multiple
121:41 - linear equations and algorithms for
121:44 - solving those sort of set of solutions
121:47 - to this equation where are all the x and
121:49 - y's and C's that make this true is known
121:51 - as a process of linear solution there
121:55 - are different techniques I was reading
121:56 - the comments and Mike Ashley favor
121:58 - there's like this Gauss Seidel technique
122:00 - some people did his code using this I
122:03 - forget which technique this his code is
122:05 - particularly using but it's a way of
122:07 - basically solving those linear equations
122:10 - the the for fluid dynamics with in the
122:17 - space of this grid so that's kind of all
122:20 - I want to say about it but it's needed
122:23 - for every single for this diffusion
122:26 - algorithm and it's really just a thing
122:29 - that like passes all the values all
122:30 - around over and over and over again with
122:31 - lots of iterations sort of spread out
122:33 - and like a cellular automata to have the
122:38 - velocities or densities of neighbors be
122:40 - affect the other neighbors and so on and
122:41 - so forth so I'm now going to go and just
122:44 - grab the linear solve code from whoops
122:50 - ah what did I just know what I just hear
122:58 - I'm gonna grab this and you can sort of
122:59 - see what it's doing so I'm gonna grab
123:02 - this function I'm gonna bring it in here
123:04 - by the way this is kind of how I work
123:05 - like I kind of want to understand this
123:07 - more but I feel like I need to just like
123:09 - port the code and play around a little
123:11 - bit
123:11 - then maybe I can do some more research
123:13 - about what the equations actually are
123:15 - and how it's working but sometimes
123:16 - that's like kind of messing with the
123:18 - code getting your hands on the code
123:19 - concern has helped you understand the
123:20 - math later so I'm gonna so I'm gonna
123:22 - look at this I'm gonna take out static
123:24 - I'm gonna move this bracket over here
123:26 - I don't need iterations and n those are
123:28 - gonna be the same for everything these
123:30 - should be arrays and the kind of goofy
123:34 - thing here is I don't need em so I need
123:38 - I and J for x and y but I can take out m
123:42 - and so that that loses the bracket there
123:45 - and then I have to look at what's going
123:47 - on here oh and I so I don't need em I
123:54 - don't need em I don't need em I don't
123:59 - need this Z and then I also don't need
124:00 - to add these two components so let's see
124:03 - so the idea here is that I'm looking at
124:06 - and this I see I've done this before
124:08 - having like a crazy deja vu is my ax
124:13 - function incorrect people are noting I
124:15 - have to check to make sure I got that
124:17 - right but um what this is now doing is
124:19 - saying the new value of the particular
124:23 - cell is based on a function of itself
124:28 - and all of its neighbors and you can see
124:33 - that here it is equal to its old value
124:38 - plus some combination of its current
124:41 - values so this is kind of interesting to
124:43 - like sort of see how this is working and
124:45 - there's some parameters here like this a
124:46 - parameter and this C recipe parameter
124:52 - and so I got to go check and I got to
124:55 - come up to this with a set bounce thing
124:56 - in this the boundries function the
124:58 - second would but let me check the this X
125:01 - plus y times n huh this seems right to
125:04 - me yeah I think this is right
125:11 - I mean people are worried about you know
125:14 - this should this is what it should be
125:16 - but you know I think that's right okay
125:19 - so then I don't need these last two
125:22 - arguments so now we have the linear
125:26 - solve function and the diffuse function
125:31 - don't have any errors the value of the
125:33 - parameter B is not used that's strange
125:36 - that's interesting
125:40 - why is it not used my missing it's
125:45 - somewhere in here interestingly enough
125:46 - all right well I'm gonna oh because it's
125:48 - first set down right right it has to do
125:50 - with set boundaries okay okay so that's
125:52 - gonna come up and I'm not gonna worry
125:53 - about that right now okay
125:54 - I'm gonna come back to that all right so
125:57 - now we're going back to the paper and
125:59 - we're gonna look at the next function
126:02 - project okay so this project function is
126:05 - really tied to the idea of this
126:07 - incompressible fluid because if we move
126:11 - all the stuff around we have to make
126:13 - sure like something could go wrong here
126:15 - like we could have made it so that the
126:16 - density is the of everything is are not
126:21 - are the the amount of fluid in each box
126:25 - of the my casters explain this much
126:26 - better that I have the amount of fluid
126:28 - each box has to stay constant so the
126:30 - amount of fluid going in has to be
126:31 - exactly equal to the amount of fluid
126:33 - going out so this is kind of like a
126:35 - clean up stage to like put the set thing
126:37 - back into equilibrium so we're going to
126:40 - be doing this for all the different
126:41 - values of all the different velocities
126:43 - arrays and density right so let's take a
126:47 - look and add that project code so let me
126:50 - get the project function well you can
126:56 - see here we do project for this is
126:58 - actually what the algorithm is going to
127:00 - be it's diffusing for XY & z
127:03 - it's not for Z we won't do it's
127:05 - diffusing for velocity X velocity y it's
127:07 - projecting for the velocity advection
127:09 - we'll talk about then doing diffusion
127:12 - and advection for the density so let me
127:13 - go here and what am I trying to do I I
127:18 - should just follow the order of the
127:20 - article but it's fine I'm doing it in my
127:21 - own way I want to look forward to fuse
127:26 - here it is oh no I did y'all redo that
127:28 - project what's right here so let's grab
127:32 - this oh look at this craziness so let's
127:34 - grab the project function we're gonna
127:37 - put this one in here okay now we're
127:40 - gonna port this
127:41 - so we these become arrays I don't need
127:48 - the those are constants throughout I
127:51 - like to put my bracket over here
127:53 - I don't need static oh boy what did I
127:56 - just do
128:00 - that's so weird
128:01 - well let me paste this again what just I
128:05 - did something really weird there oh I
128:09 - didn't actually paste in project okay
128:11 - sorry about that
128:12 - paste in project these are arrays I
128:24 - don't need the Z these are also arrays
128:30 - and I don't need the iterations and and
128:33 - those are constants and then now I also
128:37 - don't need Kay Eileen I and Jegs I'm
128:40 - just doing two dimensions
128:41 - I don't need Kay I don't need these two
128:48 - and then this is I don't have set
128:52 - boundaries yet I'll add that linear
128:54 - solve is the same thing but without this
128:58 - and I think I could when I do set bounds
129:00 - I'll probably take out the end then I
129:02 - don't need K don't need K don't need Kay
129:07 - I don't need K I don't need Z and I
129:13 - don't you K I don't you K I guess
129:16 - probably porting Joe's dance which was
129:18 - 2d might have made more sense and I plus
129:24 - 1 J I'm s 1 j J plus 1 J minus 1 yes yes
129:28 - this all makes sense and then I don't
129:31 - need the Z here I think I lost a curly
129:34 - bracket which would go here and
129:37 - definitely screwed up something curly
129:41 - braket wise I think I haven't actually
129:43 - clearly record here okay this looks
129:45 - right up I don't need the I don't need
129:50 - the K's up here so take those out and
130:02 - missing left curly braket and I have an
130:05 - extra curly bracket here alright we're
130:07 - good we don't know what set bounds is
130:10 - but that's okay all right woo-wee now
130:13 - don't worry we're getting close this has
130:16 - been quite a while I've been doing this
130:18 - but I don't think it's been a half an
130:19 - hour cuz the camera isn't shut off so
130:21 - now advection the advic step is
130:26 - responsible for actually moving things
130:28 - around to that end it looks at each cell
130:30 - in turn in that cell it grabs the
130:33 - velocity follows that velocity back in
130:35 - time sees where it lands so this has to
130:38 - do with this sort of funny thing that
130:39 - that one of the ways that B is fluid
130:42 - simulation algorithms work is to
130:44 - actually not just try to a time step
130:48 - forward but to actually make the
130:50 - decisions based on looking at where it
130:53 - has come from before and so like
130:59 - actually like going back an extra step
131:02 - so this is where all of this sort of
131:04 - like saving the stuff before is really
131:05 - really crucial so let's grab this
131:08 - advection and I could kind of scroll
131:11 - back up let's look at what was expand so
131:16 - this is also important every cell is a
131:18 - set of velocities and these velocities
131:19 - make things move this is called
131:21 - advection as with diffusion and vection
131:24 - applies both to the dye and to the
131:26 - velocities itself so what's really the
131:28 - difference between diffusion and
131:29 - advection well diffusion is just this
131:32 - idea of spreading out that advection is
131:36 - actually the motion associated with the
131:38 - velocities they're obviously related and
131:40 - they both happen together but those are
131:42 - separate things so let's go grab the
131:45 - advection code
131:49 - Oh what seriously
131:54 - okay Wow so this I really gonna want to
131:57 - unpack when I refactor this to
131:58 - understand what's going on well just
132:00 - rabbit right now
132:01 - please it's crazy there bring it in here
132:04 - oh boy oh okay right everybody deep
132:08 - breath deep breath I'm gonna take out
132:13 - static move this to here
132:15 - I need where's this I need be this is an
132:22 - array this is the current density this
132:24 - is the previous density this is the
132:26 - current velocity oh this is the current
132:31 - velocity
132:32 - I don't need Z come on scroll over I I
132:38 - do need DT I mean this could be a
132:39 - constant also let's make deep t-nuts I
132:43 - don't know that's part that's this dot
132:45 - DT it's part of the fluid so so that
132:50 - that can be like this dot DT yet oh but
132:53 - it's oh I should make that alright
132:56 - there's I gotta that that I can pass in
132:58 - fine I'll pass that in I'll figure so
133:01 - there's a lot of refactoring and
133:02 - thinking about how I want to do this but
133:04 - let's leave dt n so well what what could
133:07 - you are you kidding me so these are
133:09 - index in previous index values we don't
133:11 - need the Z we need a DT for X and a DT
133:15 - for y we don't need the Z we need this
133:18 - has to do with like I think the S is our
133:21 - density in this I'm not really sure when
133:24 - we look through the code but I'm gonna
133:25 - take out the you I don't need to the
133:27 - three and I don't need the Z home I
133:30 - don't need the K I don't need the K so
133:34 - all right so I don't either k part of
133:36 - the loop and I don't need this last
133:38 - thing and they don't need this Z and I
133:43 - need the ah the X and the eyes the Y's
133:46 - and the Jays and I don't need the Z's
133:48 - and the case and I need the esses and
133:52 - the t's don't you could use oh really
133:56 - and I don't need the K's and now I don't
133:59 - need the K and so what did I get rid of
134:01 - up here
134:02 - using this is what I mean like I really
134:04 - want to refactor this and try to
134:05 - understand what each of these variables
134:06 - are doing and rename them
134:08 - this isn't refactoring this is just
134:10 - getting it to work so I've got eyes and
134:13 - J's X's and Y's eyes and J's SS and T's
134:16 - and no K's and no sorry and no oh yeah
134:28 - nope sorry I just lot yeah this is
134:30 - important I need this okay okay okay
134:44 - and then I don't need this whole last
134:45 - section because I don't need the t's
134:47 - wait no no no no oh wait a second
134:51 - s T u s T where's you I don't need you
134:59 - you was the thing if I go back to my
135:02 - cache you was the third dimension for
135:06 - the s and the t's okay so what I'm
135:09 - actually getting rid of is this is this
135:12 - multiplication step so one less
135:17 - multiplication step
135:24 - yeah and this right oh wait hold on I
135:27 - have to stop I could think for a second
135:28 - I think I don't need this at all this is
135:32 - what I'm doing yeah this is much simpler
135:36 - oh you silly third dimension I don't
135:46 - need this at all line this up men don't
135:55 - need this at all
136:01 - pretty sure oh the camera went off it's
136:03 - been half an hour
136:16 - all right so I think I have refactored
136:18 - this to get rid of the third dimension
136:20 - well there's still a you here oh wait I
136:28 - messed up I messed up I can see this is
136:31 - wrong this should be parallel I might
136:34 - have to go back to the original code 0
136:39 - Plus this Plus this s1 Plus this Plus
136:43 - this t1 and you zeros what I need so
136:49 - it's really except it's what is this not
136:58 - craziness I 1 IJ 1 I 0 0 0 1 1 0 no this
137:07 - is right 1 0 0 0 0 1 1 0 1 1 1 1 there
137:19 - we go
137:19 - ok this is what I 1 0 0 0 1 1 0 1 1 I'm
137:23 - pretty sure this is right what's the
137:27 - chance that we definitely have to
137:29 - double-check this double-check this and
137:38 - then I one less thing here do I have the
137:43 - right ok floor F it's just floor right
137:50 - because those are integers this seems to
137:53 - be some extra flooring that's
137:54 - unnecessary here because these are
137:57 - floats but I'm not sure I'm gonna leave
137:59 - it as is right these would then have to
138:02 - be converted I think there's some extra
138:06 - unnecessary steps here in how the
138:07 - numbers are being manipulated but I'm
138:10 - gonna just leave everything in and I
138:11 - will part two we're gonna get this to
138:14 - work just just fast forward like five or
138:16 - ten minutes towards the end okay all
138:20 - right I'm pretty sure this is now the
138:23 - add vector function willing to leave the
138:27 - third dimension
138:28 - okay here we go now I think I actually
138:35 - have everything but this set boundary so
138:39 - this set boundary is actually something
138:41 - like really nice and like compared to
138:44 - all that much more manageable to
138:45 - understand but basically we've got this
138:48 - kind of unrealistic situation here well
138:51 - it's not unrealistic but we're
138:52 - containing the fluid within a box and so
138:55 - we need some sort of mechanism for when
138:58 - what we do with the edge cells and how
139:00 - we deal with those velocity vectors or
139:02 - things moving and basically we want to
139:04 - add some kind of like bouncing and then
139:06 - we also need to deal with the corner
139:08 - cells even differently in a different
139:11 - way
139:12 - so we can read set bound whoops
139:23 - it's everywhere ah this is short for set
139:27 - bounds and it's a way to keep your fluid
139:29 - from leaking out of your box not that it
139:31 - could really leak writes my cache it's
139:34 - just a simulation in memory but if
139:36 - there's no walls right obviously not
139:38 - fluids not gonna leak out of your
139:40 - computer screen that's what that was a
139:41 - joke there and I just like my mind so
139:43 - much I couldn't even laughs haha but the
139:47 - velocity in the needs to be become
139:49 - mirrored when it's when it hits the wall
139:52 - so if we look at what this set and the
139:54 - reason why this is done in this like
139:55 - really weird way is the set balance
139:58 - function is written in a way that this B
140:01 - variable tells you like which which
140:05 - which wall in my act might at the right
140:07 - wall the left wall the top wall the
140:09 - bottom wall and I think that I could
140:11 - rewrite this with vectors in a way that
140:13 - it just kind of like knows and I don't
140:16 - need this like extra variable B that's
140:18 - passed through but once again I am going
140:20 - to I am going to port it so exactly as
140:26 - written so I'm gonna go back here we can
140:28 - see this is all over the place
140:30 - and I am going to keep this set bounds X
140:35 - is any one of these arrays we need to
140:37 - set the we need to do the same thing for
140:39 - all the arrays where there's velocity X
140:40 - velocity
140:41 - why or density the density of the dye
140:43 - and once again I can I can actually
140:48 - eliminate this is for the third
140:50 - dimension so I can completely take this
140:51 - out no no yes sirree please can you
140:55 - explain to me how this fluid simulation
140:58 - algorithm works so I'm going to take
140:59 - that out then I'm gonna take out Kay and
141:04 - you can see like this is saying if B
141:05 - equals 2 you're dealing with the X stuff
141:11 - so actually it's the Y because you can
141:13 - see it's looking at the top row and the
141:15 - bottom row sorry if so this is good and
141:21 - then this is if B is 1 I think I might
141:29 - have messed this up but I will I will
141:33 - double check I need to get rid of the
141:36 - third dimension kind of think maybe I
141:39 - should have started with just dance code
141:42 - I can only get rid of this this is my
141:46 - meditation let me do this right I the
141:51 - top right this is the lefty that makes
141:53 - sense but that one and one and two that
141:55 - makes sense okay I think we're good
141:58 - just oh but I have the K here which
142:00 - makes no sense oh boy this should be I
142:05 - and J yeah sorry
142:07 - these are IM j there's no K and this is
142:17 - ha-ah
142:19 - yes no K is fine here okay is totally
142:23 - fine here we're just doing i for every
142:29 - single okay okay hold on just like this
142:31 - this has popped into my head I think I
142:33 - understand what's going on here and this
142:34 - is Jay fine this is absolutely fine
142:36 - actually right because what we need to
142:38 - do is for we just need to do all of we
142:45 - just need to account for all of these
142:49 - cells all of these cells all of these
142:51 - cells and all of these cells now we've
142:54 - got to now we got to do the corners
142:55 - separately and the corners just does
142:59 - this kind of average so these are the
143:01 - corners I care about zero zero zero and
143:04 - minus one then I want n minus one to
143:10 - these I don't these corners are not
143:12 - actual corners then I want n minus 1 n
143:17 - minus one I want whoops sorry n minus 1
143:24 - n minus 1 oh and I I did I want and the
143:32 - idea is to average so this should become
143:35 - 0.5 because there's not three neighbors
143:39 - just two and we get rid of this last one
143:43 - this last one will hold on zero one zero
143:50 - zero zero zero zero do I include itself
143:54 - and then 0 n minus 1 is 1 n minus 1 0
143:59 - and minus 2 I've lost my mind here which
144:06 - neighbors am I looking for so if I'm at
144:09 - 0 0
144:10 - I assume the neighbors I want this one
144:14 - this one and itself is that right
144:17 - I'd have to look up what or is it this
144:20 - one this one and this one I think it's
144:23 - it's including itself so in that case
144:28 - it's 1 0 0 1 and 0 0 in this case it's 1
144:34 - n minus 1 0 n minus 2 and then 0 n minus
144:40 - 1 that's the bottom then here it's n
144:44 - minus 2 0 n minus 1 1 and n minus 1 0
144:49 - and in this case it is n minus 2 n minus
144:52 - 1 n minus 1 n minus 2 and one more n
145:08 - minus 1 would oh my god ah what did i do
145:15 - I should have Auto formatted can I undo
145:17 - that auto format yes so let's see here
145:20 - uh plus plus what's wrong here oh I
145:24 - still have a zero there still have a
145:26 - zero there still have a zero there this
145:30 - syntax is right
145:32 - it's awkwardly written but I'm gonna
145:41 - leave it like this okay I think we have
145:45 - set bounds now all right well I'm
145:50 - alright fine
145:51 - I don't think I need to pass in N and
145:52 - it's just a constant everywhere so let's
145:55 - simplify that and let's find the places
145:58 - where oh boy I'm missing a bracket
146:11 - I'm just taking the chat for a second
146:14 - I'd be like Ted viewers left all right
146:18 - it's also really hard to do this with
146:21 - like a really big font just so you know
146:24 - so let's go through this fluid is fine
146:28 - I had velocity diffusion linear solve
146:31 - this has to come back without the end
146:34 - project and your saw boundaries no n no
146:40 - and this is advic and this is pro
146:46 - semicolon
146:47 - that's all that's missing there this
146:50 - doesn't have the N and okay what's wrong
146:57 - here no this is wrong still my
147:00 - parentheses are wrong okay
147:02 - d @ I of J and J s times T times D here
147:08 - Plus this I need another this needs a
147:14 - semicolon
147:14 - no I'm adding all these things together
147:17 - plus let's do this line this up here
147:26 - wait why are there okay something is
147:31 - wrong here - time out for a second
147:43 - give me a second everybody I'm looking
147:46 - up the code that I ported the other day
147:49 - just because yep I I just want to get it
148:01 - right I thought I was going to get it
148:03 - right without having to look it up but
148:05 - it's clearly not the case I'm just gonna
148:11 - look it up
148:23 - Oh oh my goodness I definitely won't
148:29 - want to for set boundaries I'm not
148:34 - including itself okay yeah yeah I got
148:37 - fixed that I'll fix that oh this is way
148:44 - I made this way way way crazier okay
148:49 - okay so a couple things people in the
148:55 - chat are mentioning I have no idea
148:57 - what's going on I kind of don't either
148:59 - maybe this isn't a video that's worth
149:01 - watching I'm not sure I mean at this
149:03 - point this is just something I'm
149:05 - invested in trying to do and I will come
149:07 - back to it but this I think is an
149:09 - example of why I'm refactoring and sort
149:12 - of thinking about code and variable
149:13 - naming is a good thing and there's
149:16 - nothing wrong with what was done before
149:17 - is you know this is probably perfectly
149:20 - appropriate in quite club styles from
149:22 - like over ten years ago but I think we
149:24 - could hopefully do better and I can come
149:25 - back and refactor this but I I realized
149:28 - that I've totally got this wrong and I
149:29 - have some code that I did the other day
149:31 - here this should just be s0 times like
149:35 - let's let me ask 0 times T zero times
149:37 - this is actually would be easier for me
149:39 - to put this in one line plus t1 times D
149:45 - zero so this is correct
149:47 - plus I think I might have this right
149:51 - plus o s1 I'm looking over here oh my
149:58 - goodness the oh my goodness I get it I
150:03 - get it I get it I get it
150:04 - this is together so this there's no
150:10 - parentheses here this is s 0 times the
150:13 - combination of T 0 times D 0 plus the
150:17 - combination of T 1 times D 0 plus s1 T 0
150:26 - T 0 plus T 1 D 1 in other parentheses
150:32 - one less parenthesis maybe
150:37 - and what's wrong here
150:41 - do I not and there should be 0 0 0 1 1 0
150:49 - 1 1 those are all the spots I just want
150:57 - to like paste it from what I had before
151:03 - so many extra parentheses and then I get
151:06 - rid of this parentheses oh and I'm
151:07 - missing the plus okay there we go this
151:19 - is what I've been trying to do I want to
151:22 - add those two things together times s 0
151:24 - and those two things together times s 1
151:26 - ok then the other thing I messed up with
151:28 - the bounds is this totally should be 0.5
151:32 - no I'm like losing my mind here there's
151:34 - two neighbors there is I'm looking at
151:38 - code that I ported the other day and if
151:45 - I'm looking at that I just want I just
151:48 - want 0 0 0 and minus 1 so I just want to
151:59 - average this is way way simpler
152:01 - I just want to average two of the
152:06 - neighbors and for all of these different
152:10 - spots and n minus 1 so this should be
152:22 - and this would be semicolons all around
152:28 - with parentheses here so let's make sure
152:31 - I'm averaging the correct indices so for
152:36 - I'm looking over here 1 0 0 0 I want 1 0
152:40 - and 0 1 right 0 0 I want 1 0 and 0 1 0 n
152:44 - minus 1 I want 1 n minus 1 0 n minus 2 n
152:48 - minus 1 0
152:49 - I want n minus 2 0
152:51 - n -1 1 n minus 1 n minus 1 and minus 2 n
152:55 - minus 1 n minus 1 n minus 2 this is this
152:57 - is right so this is right now okay now
152:59 - let me K cannot be resolved to a
153:02 - variable I left a little K over here by
153:05 - accident
153:05 - I left some case here by accident all
153:15 - right no errors no errors no Harris this
153:20 - is by the way what I really like to
153:22 - avoid doing I don't like to code forever
153:24 - and ever and ever without testing so if
153:26 - this like actually works when I start to
153:28 - render it I will be completely and
153:30 - totally gobsmacked okay so now what I
153:39 - want to do I've created this new fluid I
153:42 - need a time step function so I need a
153:46 - function time step to step through every
153:51 - moment of time with the fluid going back
153:55 - to my caches paper there is a step
153:58 - function which is here which I'm going
154:05 - to grab of course I just wrote it out
154:08 - here but what I want is void step and I
154:16 - have all these as variables but let's
154:19 - let's change that to this dot let's
154:25 - change all of these to let's let's
154:28 - change space star to space oh no no no
154:39 - no bad idea bad idea undo that undo that
154:43 - I'll just do this manually because
154:46 - there's lots of space star where things
154:48 - are multiplied uh what I could what I
154:51 - would do is I would say this replace
154:54 - float space star I know you can't see
154:58 - this replace float space star with float
155:02 - bracket star no float bracket space
155:04 - there we go and I think it's fine I
155:08 - don't need the Z's and then I don't need
155:13 - the third one I don't need the Z I don't
155:19 - need and I don't need the N or the
155:23 - number of iterations I don't need the Z
155:29 - no Z no third
155:31 - I don't need n the way I wrote this I
155:35 - don't need Z I don't need n or for this
155:40 - one is don't need n or for and I'm gonna
155:44 - need Z I don't need n what's wrong here
155:48 - I don't need n in for so iterations is
155:57 - for okay so let's look at that
155:59 - the process here is what to fuse the
156:05 - velocities right to fuse the velocities
156:08 - based on the time step and viscosity the
156:11 - XS and the Y's the one in the two is
156:13 - controlling this set bounds function
156:15 - then project which is clean everything
156:17 - up to make sure it's the same amount of
156:19 - fluid everywhere the velocities then run
156:22 - advection add vector on the velocities x
156:25 - and y then clean all that up then
156:28 - diffuse the density and add vector
156:30 - density the density doesn't need the
156:32 - project step because the density doesn't
156:35 - remain consistent around so the dye that
156:37 - actually is moving around in this
156:38 - inconsistent so we should really be in
156:41 - we've really got this whole thing
156:43 - program now huh
156:44 - I should just start with the devil you
156:46 - started with memos library so if I say
156:49 - background zero and I say fluid step
156:56 - let's run this hey no errors oh happy
157:01 - day I mean give me a I'm gonna be
157:04 - shocked if I can actually render this
157:05 - but let's actually render it so first
157:07 - let's do a thing where
157:14 - where as I drag the mouse I'm gonna add
157:17 - dents I'm gonna add dye so I'm gonna add
157:20 - dye at mouse X Mouse Y some amount of
157:23 - dye okay oh and I need to say fluid
157:27 - density all right no errors that's good
157:33 - that function is called now let's try to
157:35 - render
157:35 - let's call render D for rendering the
157:38 - density so how am I going to do that oh
157:44 - you know what I should actually really
157:46 - do I'm gonna change this to 64 and then
157:51 - I'm going to create a variable called
157:52 - scale and make that four and then and
157:59 - then I'm gonna say size is n times time
158:03 - scale and time scale so I'm actually
158:06 - gonna like lower it and let's actually
158:09 - let's make the scale 10 so now we should
158:12 - have well if I comment this out I should
158:15 - have 640 by 640 window okay so now fluid
158:19 - render D I'm gonna go here and I'm gonna
158:24 - add a function in the fluid class I kind
158:27 - of want to take all these functions out
158:29 - and put them in a separate tab I'm gonna
158:33 - call this more fluid so just like the
158:39 - fluid class is here which has less stuff
158:41 - in it
158:42 - and I'm gonna say render D so this
158:46 - should be pretty easy in that I'm just
158:48 - gonna say int I equals 0 I is less than
158:52 - n I plus I plus plus so I'm going to
158:57 - loop through J then I'm gonna use J then
159:05 - X is going to be I times scale y is J
159:12 - times scale I'm going to draw a
159:15 - rectangle at X Y scale which is really a
159:19 - square scale scale by the way
159:22 - did you know that processing now has the
159:24 - function square in it I'm going to draw
159:26 - a square get rid of that that's gonna
159:29 - work I've never used this before this is
159:31 - a momentous occasion four hours into
159:32 - this video then I'm gonna say hey Phil
159:38 - 255 100 I just want to see like just
159:41 - gonna put arbitrary Phil great so I can
159:49 - see all of those squares are there I'm
159:52 - gonna say no stroke and then now what I
159:56 - want to do is the density is this dot
159:59 - density at the index I am Jay and I want
160:08 - to I'm gonna make that V alpha so D is d
160:13 - so the Alpha of that square I mean it
160:15 - could just be the brightness but let's
160:16 - let's just make it the brightness
160:18 - directly so it's black Oh ray out of
160:23 - bounds exception okay interesting ah I
160:27 - forgot so if I am adding fluid at Mouse
160:34 - X and Mouse why I have to divide that
160:36 - now by scale because I scaled up the
160:38 - screen so that has to be divided by
160:40 - scale there we go okay so you can see
160:43 - I'm adding the fluid great all right so
160:46 - that's something now there's I guess the
160:49 - water is completely still too noisy now
160:52 - how does my cash approached approach
160:53 - this ad density add velocity Oh so I
161:01 - need to just also add you know what I'm
161:03 - going to do I have an idea when I do
161:05 - that I'm also going to add velocity at
161:09 - that spot and add velocity expects what
161:15 - expects the x and y and the amount x and
161:18 - y okay so the x and y and now i'm going
161:20 - to do this let amount X equal Mouse X
161:24 - minus P Mouse X female sex is the
161:27 - previous Mouse possession so the
161:29 - velocity is going to kind of be in the
161:30 - direction that I'm dragging not let
161:34 - float I mean
161:36 - Java not JavaScript an amount why is
161:39 - mouse why P mouse X so let's add that
161:42 - amount
161:43 - oh why let's see what happens here oh
161:50 - okay I I don't mind that so much
161:53 - we got an array out of bounds exception
161:55 - so what went out of bounds one thing I
161:59 - can do here where's my index function x
162:06 - equals constrain X to 0 and minus 1
162:10 - let's just put a constraint in here I
162:12 - don't know whether I have a bug in my
162:14 - code or this is actually necessary but
162:18 - let's do that oh there we go
162:41 - all right this has to be under an hour
162:43 - because the camera went off once but
162:47 - this feels like it's been two hours I
162:50 - think what I want to do is add something
162:52 - that always like yeah because look at
162:55 - this I'm gonna always like fade out
162:57 - that's something to like fade I'm at a
163:01 - function called fade D I should really
163:05 - render the velocity where I'm gonna say
163:08 - [Music]
163:10 - 4 into I equals I equals 0 I is less
163:15 - than this density I know
163:21 - length i plus plus density index I minus
163:29 - equal 1 and then density index I equals
163:36 - constrain density index I I actually
163:41 - know I could just do this equals
163:44 - constrain here float D equals density
163:48 - index I and then constrain D I want to
163:53 - set equal D minus 1 but stay but within
163:55 - 0 and 255 and then let me add a fluid
164:00 - render fade D I also want to render the
164:05 - velocity field so this is because if I
164:09 - add a lot I mean that's too much fade I
164:11 - just want it to like lose I just want to
164:13 - feel like the die to like Peter out
164:15 - right now I think the die is kind of
164:17 - like infinite I mean it just keeps it's
164:19 - additive so but this obviously I maybe I
164:21 - just wanted to peter out very slowly
164:26 - alright this is a nice little swirl
164:28 - effect interestingly enough I have the
164:33 - diffusion and the viscosity at 0 it was
164:37 - that the order of the values of the
164:39 - constructor DT diffusion viscosity
164:42 - that's kind of weird like what if I make
164:43 - it this whoa that made it like really
164:48 - thick that's crazy so I think there's
164:52 - something may be wrong in my code
164:54 - that it's like just oh yeah this is like
164:56 - thick look at it it's that is yeah look
164:59 - at the viscosity it's like thick so it
165:01 - stops and I think I want to add also I
165:06 - want to add I want to add more like let
165:14 - me add like a higher amount it's gonna
165:16 - constrain it but yeah look at that with
165:19 - a viscosity that's higher I kind of like
165:21 - it with that viscosity of zero though so
165:26 - it's like it kind of is much more
165:28 - turbulent by the way you could imagine
165:32 - if you had like separate RGB channels
165:34 - for what you're visualizing oh it's been
165:36 - an hour okay and then what about the
165:46 - diffusion rate ooh
165:52 - well it just like it goes away so fast
165:55 - so let's let's just I will worry about
165:56 - these later I'm curious about also like
165:59 - time step if I make that yeah oh that's
166:05 - pretty interesting to like really lower
166:06 - the time step it's just kind of
166:07 - happening much more slowly but I could
166:09 - also probably add more iterations I
166:12 - should make these here like what if I
166:17 - add 16 iterations and that's probably
166:22 - makes it more accurate it may be more
166:23 - slow but I don't think I need to I mean
166:28 - the other thing I could do is make this
166:29 - 128 and change the scale to 5 can it
166:32 - yeah so that's nicer you can still
166:35 - perform the frame rate is still fine so
166:37 - what I want to do is I actually want in
166:39 - now I'm gonna just use Perlin noise
166:41 - really quickly and constantly add fluid
166:45 - I mean there's so many things I could do
166:47 - like I kind of want to add I want to put
166:50 - like boundaries and things inside it and
166:52 - there's so many possibilities but I'm
166:53 - gonna add I'm just going to add density
166:56 - to the middle
167:04 - this is what I should be doing so what
167:07 - happens if I add just continuously add
167:10 - density all the time in draw and this
167:14 - has to be converted into an integer this
167:19 - is kind of silly what I'm doing but it's
167:20 - fine
167:21 - it's like I'm always adding oh and then
167:24 - let's also add I mean then I could this
167:28 - is sort of interesting I want to
167:29 - visualize the vector field should have
167:31 - done that let me actually really quickly
167:32 - do that so you can see that as well so
167:36 - let me add a render V function and what
167:39 - I'm gonna do there is take this exact
167:42 - same render D but instead render V I'm
167:51 - gonna get the x equals thing is called V
167:56 - this V why was it not called VX and V Y
168:04 - was it called VX capital V and then I
168:13 - want to say stroke 255 and then make a
168:19 - line between X Y X plus VX X plus V Y so
168:25 - I just want to draw a line that shows
168:27 - the vector a little boy ah so I don't if
168:33 - if it's 0 if V X does not equal 0 and V
168:41 - Y does not equal 0 right and yeah boy I
168:55 - should probably only draw it if it's oh
168:58 - and this is y plus V Y because there yes
169:03 - so these vector lines you can see them
169:05 - it really makes it run slow but you can
169:08 - see the vector lines there I think I
169:10 - should be I should really do something
169:12 - more like if the Maeng like check the
169:15 - magnitude of
169:16 - vector-c I guess I want to use p-vector
169:18 - because it's really like if VX is is
169:25 - less than 0.1 and V Y is less than or
169:29 - equal to 0.1 like I just don't want to
169:30 - draw like the vectors if they're really
169:32 - tiny Oh the absolute value this is very
169:37 - silly what I'm doing
169:48 - it's weird how when I start shouldn't
169:51 - they all be zero I shouldn't see
169:52 - anything if if they're both oh I'm only
169:57 - drawing it if they're small if not if
170:02 - they're not both small there we go this
170:07 - is what I was trying to do so this is me
170:09 - drawing the vector field now this would
170:11 - probably be a little bit more apparent
170:12 - if I changed this back yeah so you can
170:20 - see that's there really I should
170:21 - probably also like draw them bigger that
170:23 - not I'm kind of going off the deep end
170:25 - here but I should probably multiply I
170:26 - should multiply this by scale right of
170:28 - course to multiply that by scale there
170:31 - we go so you can kind of see that's the
170:33 - vector field where I move my mouse
170:36 - around I don't know that that's as
170:37 - interesting visually as the dye so I'm
170:40 - going to go back to only rendering the
170:44 - dye and alright so now the dye is just
170:50 - sitting there in the middle but I can
170:51 - kind of drag around but what I want to
170:53 - do now is I'm going to take this and I'm
170:59 - gonna use Perlin noise I'm gonna say
171:04 - noise of some time map noise of some
171:12 - time which goes between 0 and 1/2
171:14 - between negative 1 and 1 an amount Y is
171:21 - the same but I'm gonna look at like a
171:24 - different part of the noise space if
171:25 - you're not familiar with Perlin noise I
171:27 - would encourage you to check out my
171:28 - pearly noice videos and then I'm gonna
171:32 - say this also is going to be the same at
171:35 - this spot here so I'm gonna say int
171:38 - Center x equals this int Center y equals
171:46 - that
171:48 - then add some density at center X center
171:53 - Y we could actually make this like a
171:54 - random amount of density baby
171:59 - and then add the velocity according to
172:02 - Perlin noise I am going to create a
172:06 - variable called T which is kind of like
172:09 - the offset through the noise space and
172:11 - I'm gonna have T oh I should be using I
172:14 - changed my mind I'm going to use P
172:18 - vector and I'm gonna say angle equals
172:24 - noise of T times 2pi and then I'm going
172:32 - to say a P vector is a new P vet is P
172:39 - vector from angle to create a vector
172:42 - from angle that angle and then then the
172:49 - time will go up and this is V X V dot Y
172:54 - and let's try I don't know what it
172:56 - should be but let's try like making that
172:58 - vector a little bit stronger right now
173:00 - so let's see here there we go yeah this
173:04 - is what I was trying to do maybe it is a
173:10 - too strong yeah this is kind of the idea
173:18 - I'm not seeing I just wanted it to kind
173:21 - of like shoot it out randomly let's take
173:25 - out the fade let's let me try someone to
173:30 - tell me I swapped VX and V Y at lying 96
173:33 - and 97 hold on good look at the chat
173:38 - render V of x and y Oh
173:49 - okay thank you so that that's an
173:52 - important fix i mean visually we're
173:55 - getting some results anyway i want to do
174:01 - is let me go back to making it let me do
174:13 - this and maybe what i want to do oh
174:19 - maybe what i actually want to do is
174:21 - swirl it around a bit more multiple
174:25 - times is that weird
174:30 - I just want it to do more stuff whoops
174:38 - why did it just do that oh no no no no
174:43 - no no come back to me no no no but I
174:50 - don't want to change oh okay
175:02 - yeah maybe I want to just it's silly to
175:05 - a density multiple times right oh I know
175:12 - what I could do well know what's going
175:19 - on here how can I get the behavior that
175:21 - I want could make it more viscous no
175:32 - timeout for a second
175:35 - apparently I did this but look what I
175:37 - did like what kind of
175:42 - I'm exhausted by the way it's 1:30 if
175:46 - they have to go soon what did I do
175:49 - Oh interesting okay
176:03 - oh I don't know that's not right all
176:11 - right one thing I could try I think you
176:14 - get the idea but one thing that I could
176:16 - try is I could try
176:18 - I could try kind of adding some density
176:29 - in like all in a little grid pattern so
176:39 - this might be sort of nice to do and
176:42 - then I could say plus plus I so this is
176:46 - just adding a lot more density and let
176:49 - me turn that back to zero and yeah
177:01 - that's kind of that's is this is more
177:02 - like what I wanted there we go okay that
177:05 - was to the velocity was too strong
177:08 - okay so here we go this is more what I
177:10 - was looking to try to do I've got sort
177:13 - of Perlin noise controlling this angle
177:15 - I'm just like dropping and died
177:16 - constantly be sort of interesting to
177:18 - like sprinkle die everywhere there's so
177:20 - much you could do with color to drop
177:21 - particles in but I think I'm done I
177:24 - can't do this anymore
177:26 - I'm very curious to see like to push the
177:29 - limits of scale and like to slow right
177:36 - wait.you so I don't know if the
177:37 - rendering is too slow or the math is too
177:39 - slow but um I'll keep it at this but
177:43 - this I think is a nice finished result
177:46 - okay so let's recap what I've done
177:48 - oh yes you could I could imagine just
177:53 - like twirling it around I wanted to have
177:55 - some type of visualization of turbulent
177:58 - fluid I think I mostly have it and I
178:04 - have ported all the code for my caches
178:06 - page I'm actually gonna release this
178:09 - code as is I don't I'm ooh this isn't
178:12 - super long I would really like to come
178:14 - back and I would like to come back
178:17 - and try I mean this try refactoring this
178:21 - to try to understand the pieces of it a
178:23 - bit more I would like to and then also I
178:29 - would like to create a particle
178:31 - simulation on top of this where I can
178:33 - drop in particles that sort of fly
178:35 - around based on the vector field that is
178:38 - more like the reference on the github
178:43 - thread which is where is that here so
178:52 - I'm kind of imagining something like
178:53 - this where I'm actually just going to
178:55 - draw particles moving around according
178:56 - to the vector field and see what that
178:59 - looks like then ultimately I think what
179:02 - I want to do is try maybe moving to use
179:04 - one of these libraries which has more
179:06 - sophisticated solver and and so this
179:11 - this I think this project by Gabriel Y
179:13 - mouth I would like to take a look at so
179:15 - I probably do some follow up videos I
179:17 - don't know
179:17 - this was helpful or interesting useful
179:19 - for me to try to do it took over an hour
179:22 - but this is the process I think but if
179:25 - anything this was useful to sort of see
179:26 - the process of trying to figure out
179:28 - somebody else's code written another
179:29 - language and poured it we could try
179:31 - porting this in JavaScript and see if it
179:33 - performs even with just like raw 2d
179:35 - canvas I'd be curious to see that so go
179:37 - ahead and do that thank you for watching
179:40 - I guess I shouldn't be disappointed
179:42 - because this works but I do feel a
179:46 - little bit like oh my god seriously this
179:48 - is what I just did it looks more like
179:51 - smoke that is correct
179:53 - team turbulence I don't know I think
179:55 - laminar flows where it's at team team
179:58 - laminar I switched I've gone back come
180:00 - on I'm on both teams
180:01 - every team laminar flow and turbulent
180:03 - flow for everyone let's all get along
180:06 - good bye
180:14 - alright seems to be slowing down over
180:18 - time which I can't exactly explain you
180:27 - look at the chat here unless there's
180:31 - viscosity it's not turbulent that's a
180:36 - good point
180:38 - yeah adding obstacles yes Simon I'm not
180:42 - going to be doing parts two and three
180:43 - now it's already been three hours which
180:44 - is really my limit yeah why is it never
180:50 - pointing to the right I mean oh well
180:57 - Perlin noise actually has a tendency to
181:01 - stick by the mean or by the which is 0.5
181:06 - and 0.5 I guess in this case would be PI
181:09 - 180 degrees pointing this way so let me
181:16 - fix that so what I think would make more
181:19 - sense in mapping the angle is 2 pi times
181:23 - 2 so this we're going to get a lot more
181:28 - pointing around and get a lot more
181:32 - directions
181:39 - what happens if I increase the viscosity
181:45 - like is here's the issue now that the
181:48 - velocity is just like really weak
182:00 - do I need more iterations I have 16
182:03 - that's pretty good like a really really
182:07 - tiny viscosity alright like I just don't
182:11 - understand why I get this behavior well
182:18 - I think there's probably a problem with
182:19 - the way that I'm doing the fade or not
182:29 - this does create kind of interesting
182:32 - patterns though I need way lower
182:36 - viscosity oh okay now we're talking yeah
182:53 - that's more turbulent
182:59 - oh I like this and put the fade back in
183:08 - it's kind of like what I had before but
183:11 - it's more turbulent right okay so let me
183:17 - let me make that fade like even less cuz
183:23 - it really shouldn't have it in there I
183:25 - just don't want it to like fill up all
183:26 - with white very quickly ah okay so let
183:30 - me come Matthew I don't know what's
183:32 - gonna happen with this video but let me
183:35 - come back let me try
183:44 - so does this feel more like turbulence
183:50 - okay yeah I'm gonna take out the fade
183:54 - forget that fade
184:03 - and maybe just don't add so much yeah
184:10 - let's try this for a second yeah this is
184:13 - more this is more turbulent okay we do
184:25 - thank you to some comments from many
184:28 - people in the chat but specifically K
184:30 - week Mon who pointed out that I do not
184:32 - have turbulence if the viscosity is zero
184:35 - so I now adjusted some things so I
184:38 - created a viscosity of and let me just
184:41 - zoom into this I created a viscosity of
184:43 - pretty low viscosity but it's a non zero
184:45 - viscosity I also sort of change the way
184:48 - I'm adding the density and remove that
184:51 - fade and you can see this has more even
184:53 - though it is this has more of the
184:55 - quality of turbulence and yes I
184:57 - challenge you now take this code and add
185:01 - its filling up now add rainbow colors so
185:04 - what if you keep a separate RGB channel
185:07 - so the things that I did just you see is
185:09 - like I'm gonna publish the code with
185:10 - this is I actually have a pretty low
185:12 - viscosity why did the time step get so
185:15 - big yeah and then I adjusted the other
185:25 - thing that I also did is I adjusted the
185:27 - range of the angle to wrap around twice
185:29 - so 2 pi times 2 because Perlin noise is
185:32 - gonna tend to give me values around 0.5
185:34 - so it was really sticking around pi pi
185:36 - so this now is my final version let me
185:42 - fix up some stuff here and this is my
185:46 - slight more turbulent version team
185:49 - turbulence all the way
185:54 - [Music]
186:01 - HSV
186:03 - [Music]
186:06 - okay okay stop stop stop stop stop stop
186:14 - I should do another video of just doing
186:17 - interesting color stuff because who
186:18 - wants to watch get if you are at the end
186:21 - of this video hashtag team turbulence
186:23 - okay
186:24 - hashtag team turbulence on Twitter let's
186:27 - blow it up of course no one's gonna have
186:29 - made it to the end of this video but
186:31 - let's do this color mode oh no this is
186:36 - render V I won't render D color mode HSB
186:41 - one so on my range between 0 to 255 so
186:47 - let's do fill D 1 255 255 100 I think
186:54 - this is not what I want to do blue or
186:56 - maybe it is that's kind of interesting
187:04 - yeah there we go
187:06 - except there we go hue saturation
187:10 - brightness that's pretty interesting
187:11 - team turbulence all the way this is my
187:17 - turbulence on
187:28 - unfortunately this use 0 maps to I feel
187:38 - like this would be better with like D
187:41 - actually being the alpha and then sing
187:43 - some like 255 minus D Reynolds number
187:59 - yes I didn't talk about Reynolds number
188:01 - I have no energy left all right everyone
188:26 - oh you you should look King week on
188:35 - right you should calculate the Reynolds
188:36 - number will determine the behavior okay
188:40 - thank you
188:42 - okay everyone that was fun
188:47 - I got a got to do that data and API
188:49 - series so I have to put all these like
188:53 - algorithms that I want to implement
188:54 - aside and you got to get cracking on
188:57 - that thank you for being here try do
188:59 - that DVD logo challenge again I have
189:01 - water thank you should I be doing the
189:04 - DVD logo challenge again you come back
189:06 - later today or tomorrow I don't know why
189:14 - did 255 minus D
189:20 - I could have done it as the brightness
189:25 - hue saturation brightness that would be
189:29 - the same to be faster without the Alpha
189:32 - it's faster so they're gonna leave it
189:34 - like this
189:41 - okay make scale smaller okay I would
189:47 - love to make scale smaller but I just
189:49 - don't think it's gonna perform it's too
189:57 - slow the frame rates really slow what if
189:59 - I have to have the iterations I just go
190:03 - to four also at this point I should be
190:06 - doing it with pixels of course I'm
190:13 - zooming in to it so that sort of defeats
190:15 - the purpose
190:21 - think I need to add more dye
190:36 - if this is like I can play with this
190:37 - forever
190:49 - what if I do this
191:21 - oh I got so many new members let me
191:23 - thank everybody Thank You Allen Smith
191:31 - Thank You Rock Willard Thank You Allen
191:34 - Smith Thank You Rock Willer
191:36 - Thank You Giovanni Montanaro thank you
191:39 - those are the members those are they
191:41 - miss anybody okay make it 3d oh yeah no
191:57 - problem I'll make it 3d okay everybody
192:01 - thank you for watching I'm gonna put
192:04 - this back into a more performative State
192:11 - but I can add 16 iterations yeah this is
192:15 - good and much less die so I just want to
192:20 - put it in something which I release okay
192:22 - there we go
192:23 - huge thank you to my cash to Joe let me
192:27 - make sure I get all the credits correct
192:31 - also to Joss I think I said Joe Stan I
192:34 - apologize Joss damn for for all that
192:39 - okay yeah all right so I think I'm I'm
192:50 - I'm out of energy and time I kind of
192:55 - just like it kind of addicted to this I
192:59 - what I actually would love to do just
193:01 - gonna do one more thing I like the idea
193:06 - of making it just more like fullscreen
193:11 - yeah so this but it's still the same
193:15 - alright so oh you know what I need to do
193:19 - this is format yeah so what I need to do
193:24 - is make some thumbnails but actually
193:29 - it's better for my SIA if I just do this
193:39 - like this okay it's very lava lamp
193:46 - so here
194:08 - there that's a bunch of something else
194:12 - green-screen thumbnails with making
194:14 - thumbnails and unnecessary K loop inset
194:22 - bounds alright hold on
194:35 - where's that function oh it's in this
194:38 - page no I think this is right is it
194:47 - oh wait a sec is that right yeah yeah
194:57 - yeah oh sorry I'm not you can't see the
195:00 - code anymore hold on a sec here
195:16 - I know the camera just turned off yes
195:30 - Matthieu this is probably not going to
195:32 - be possible but let me well I'm just
195:54 - checking something I wonder if I'm not
195:57 - doing the bounce correctly it's such a
196:00 - weird thing to is for the these
196:11 - otherwise it's equal to negative it
196:14 - bounces if it's too it bounces okay all
196:18 - right so I don't know if this is going
196:22 - to be possible but as we're editing this
196:24 - together the part where I'm doing the
196:26 - set bounds let me correct this and often
196:29 - that should make it more performant and
196:32 - also whoa it's really gonna do crazy and
196:34 - accurate things if it does that over and
196:36 - over again oh I'm surprised it worked
196:40 - all right let me come back to this okay
196:42 - because if it's equal to 2 why is that's
196:51 - not right
196:53 - it should just be yes 1
197:02 - this is so weird should I just be
197:06 - reversing itself no I know but I have to
197:10 - fix this
197:13 - no guys almost 2 o'clock I have to fix
197:16 - this this is this is not right like what
197:19 - the boundaries should be doing the thing
197:21 - is I just don't the way this code is
197:23 - written makes no sense to me but what
197:25 - it's what it's doing is it's saying look
197:28 - at all the things along the top for when
197:33 - you pass in to I mean it really should
197:39 - be like if B equals to do this not the
197:44 - if statement in here because they could
197:46 - stop the loop this seems crazy right no
197:51 - I know I need to get rid of the outer
197:52 - loop so I know I need to get rid of the
197:57 - outer loop the question is is this right
197:59 - I know this is right because this is
198:04 - looking at all of the X values and in I
198:08 - thought it should just invert them but
198:10 - why is this negative I won why is it
198:13 - shouldn't this be just like negative of
198:17 - itself
198:18 - shouldn't it be this right why does it
198:25 - take negative from the previous
198:39 - yeah yeah right all right okay
198:45 - well I'm gonna change it I could be
198:47 - wrong
198:51 - yes Simon I'm gonna stop very soon I
198:53 - just want to fix this one last thing
198:55 - Simon is asking for his top soup do you
198:56 - need to go to bed no it's not that late
199:02 - yes exactly
199:05 - okay all right this is actually
199:09 - happening later but I'm inserting it in
199:11 - the point where I talk about set
199:13 - boundaries cuz this I this code is crate
199:15 - that set boundaries thing is actually
199:16 - much simpler than this code is making it
199:18 - seem so first of all this outer loop is
199:20 - not necessary I just want to look at
199:23 - basically all of the the top row this is
199:28 - up here is looking at for when y is zero
199:31 - all of the X's and when Y is n minus one
199:35 - all the X's so this is looking at the
199:36 - top and the bottom it should reverse the
199:40 - velocity if I'm passing in to this is
199:45 - like a really weird way to do it like I
199:47 - sort of feel like it would make more
199:48 - sense even just to say this and then
199:50 - only do that I'm gonna leave it as is
199:51 - and again I hope to come back and
199:53 - refactor this using P vector I think
199:55 - that will simplify this but this should
199:57 - just be reversing its actual velocity
200:00 - not done of its neighbor pretty sure and
200:03 - then this is the same thing but now I'm
200:06 - doing all of the X values along the left
200:08 - and all the Y values along the Y so this
200:12 - would be this this and this and this if
200:18 - B is 1
200:19 - change it to 0 n minus 1 and 0 I don't
200:27 - know if this is right actually but let's
200:29 - try me to try it this way
200:30 - ok so this to me this makes more sense
200:33 - to me that this is basically just about
200:34 - this is like the bouncing ball code and
200:36 - like one of my very beginner tutorials
200:38 - like if you're on the edge and your
200:40 - stuff that's coming that way reverse it
200:42 - but reverse it in the X direction for
200:45 - the right and left edges and the y
200:47 - direction for the top and bottom edges
200:49 - and that's
200:50 - this bee is doing okay so now I'm going
200:54 - to keep going with the challenge and
200:57 - you'll eventually get to the end if you
200:58 - keep watching now let's run this and see
201:02 - what happens
201:03 - yeah let's see what happens we get to
201:07 - the edge mmm that looks like it's
201:12 - leaking off now so maybe it was supposed
201:15 - to be next to it
201:29 - so what's the difference between doing
201:37 - it this way
201:49 - ooh that's weird
202:00 - I don't know what's right
202:12 - ah so gear him I realize saying this is
202:15 - not right Dan because we want to set the
202:16 - exact opposite value of the row column
202:19 - right next to it because you want the
202:20 - velocity derivative zero out this
202:25 - function sets the boundary cells at the
202:27 - outer edges of the cube so they
202:28 - perfectly counteract their neighbors
202:40 - I think this is the opposite of its
202:45 - neighbor so is this right now I know
202:47 - that this is pretty sure this is right
202:50 - now that is right it is a closed box
202:53 - okay
202:55 - so hold on reshoots
203:22 - just curious like what
203:33 - why
203:42 - oh when you have some velocity towards
203:44 - the wall in the next to outer layer the
203:46 - wall gets a velocity it perfectly
203:48 - counters it okay so this is actually all
203:51 - right
204:02 - and -1 is the last layer this is to the
204:05 - left of it yeah this is to the right of
204:08 - it
204:09 - this is to this is down this is 1 above
204:13 - ok so is this also no this is right
204:24 - the corners are averaging ok ok so I
204:35 - need 2 but is there not let me just look
204:37 - at his code one more time this is
204:44 - because it's 3d got it this is because
204:47 - it's 3d got it got it got it got it got
204:50 - it got it got it got it got it got it
204:51 - got it got it
204:52 - ok ok ok ok ok all right strange edit
205:08 - point but I'm jumping in here from the
205:09 - future in the middle of this video to
205:11 - explain something about this set bound
205:13 - that I kind of botched while I was
205:15 - actually doing the challenge and I'm at
205:16 - the end now but I'm gonna fix it
205:18 - so one thing that's really important is
205:19 - just to see here is that one thing
205:34 - that's really important is for me to
205:35 - point out what is written in the article
205:37 - by my cash every velocity in the layer
205:40 - next to the outer layer is mirrored so
205:43 - when you have some velocity going
205:44 - towards the wall in the spot next to the
205:47 - wall the wall gets a velocity that
205:50 - perfectly counters it that's keeping it
205:52 - a closed box so that is the explanation
205:55 - for why here I'm saying hey if I'm at I
206:00 - comma 0 any given X all along the top
206:04 - row right if Y is 0 all the X is along
206:07 - the top take counteract the velocity
206:12 - from one row
206:13 - down but only if I've sent in this B
206:16 - equals 2 which is that weird thing and
206:18 - this what I think would be easier with P
206:20 - vector because I could do this all at
206:21 - once but the thing that I have in here
206:23 - have this like leftover extra because in
206:25 - 3d there's more
206:27 - so I actually could take this out and
206:29 - this is gonna make this now look correct
206:32 - so this set boundary function is
206:33 - actually much simpler it is just
206:36 - reversing the velocity is in the last in
206:40 - all the edge layers according to add
206:42 - columns edge columns or rows according
206:45 - to the next to the edge column or row
206:48 - and then for the corners it actually
206:50 - just does an average of the two
206:52 - neighbors and that keeps it this like
206:54 - walled box so that's not in the end like
206:57 - it's kind of gonna perform the same way
206:58 - I just had this like extra loops in
207:00 - there but this is like an important
207:02 - clarification so now continue with the
207:03 - challenge wherever I left off and but
207:05 - this will be the code that's actually
207:06 - there when you look at this later if you
207:08 - can make it to the end of this video
207:09 - see you soon okay okay week did you have
207:18 - a link to the article this is if you
207:23 - google my cache fluid simulation will
207:25 - come up my cache fluid simulation it's
207:30 - the first one my cache calm fluid
207:32 - simulation for dummies twitter.com slash
207:34 - I think it's my cache on Twitter let me
207:38 - just look yes this is the same my cache
207:45 - all this is credit to my cache team
207:48 - turbulence okay
207:55 - all right everyone this is now in theory
207:58 - the correct version I'm wondering will
208:03 - it fill up with fluid Allred I mean at
208:08 - some point it will right and once I add
208:09 - enough dye the dye never goes away but I
208:13 - do have turbulence and there we go
208:19 - team turbulence okay smarter every day
208:29 - this is for you know laminar flow here
208:32 - team turbulence I don't like the red I
208:35 - want the I don't I'm not really happy
208:42 - with the color just give me a second
208:46 - here am i fading it now
209:02 - you know why is it oh because red is no
209:05 - matter what it's red on both ends so I
209:09 - would have to do something like oh I
209:10 - know what I can do right then as it
209:18 - starts to fill up no shouldn't that if
209:27 - that didn't do anything okay we hold on
209:34 - there we go
209:35 - this is me getting different colors yes
209:39 - I'm afraid this live stream will never
209:42 - end
209:50 - alright now it's gonna end
209:52 - all right team turbulence all the way
209:57 - here's your lava lamp of the past this
210:02 - is like basically code from 2005 14
210:05 - years ago that I have now poured it into
210:07 - processing and we have yeah we have we
210:15 - have it all right it's very pixelated
210:20 - there's another thumbnail formats yeah
210:25 - oh and I just hit escape okay goodbye
210:29 - everyone
210:30 - thank you for tuning in this week I
210:33 - don't know I I'm not opposed to not
210:38 - opposed to redoing that DVD not right
210:39 - now although it would be kind of funny
210:41 - because I'd be so punchy I'm not opposed
210:43 - to redoing the DVD logo challenge but
210:45 - think I'll see if not you can edit
210:48 - something together combine the two right
210:50 - I combined that you lose you're so into
210:52 - refactoring and you know what
210:55 - [Music]
210:59 - all right this live stream is over see
211:03 - you all next week next Wednesday
211:04 - same time same plate 10:30 a.m. Eastern
211:07 - on the coding tray look I'm still here I
211:13 - have to hit the button stop - the button
211:16 - to stop ok ok stop screaming think about
211:21 - now
211:22 - [Music]