00:00 - [Music]
00:13 - [Music]
00:47 - [Music]
00:58 - [Music]
01:28 - [Music]
01:55 - [Applause]
01:56 - [Music]
03:13 - [Music]
03:56 - [Music]
04:57 - sorry about that little bit of technical
04:59 - difficulties this morning hello I have
05:04 - brought back my train whistle welcome to
05:07 - the coding train a special Saturday
05:10 - morning edition it's kind of like the
05:12 - old days of Saturday morning cartoons
05:14 - only it's Saturday morning coding I'm
05:18 - having a little trouble like actually
05:21 - realizing that I'm here and that I'm
05:22 - live-streaming I'm not entirely sure
05:24 - that I am this building is basically
05:27 - like completely empty actually I don't
05:28 - think it's completely empty just this
05:29 - floor where I have this particular
05:32 - recording studio is empty and it's just
05:34 - it's like so quiet which is a good thing
05:36 - cuz I can be loud and ridiculous but I
05:39 - feel this need to be very quiet so I'm
05:42 - here I'm really excited about some stuff
05:44 - that I want to do today I feel like
05:46 - there must be some important
05:48 - announcements and things for me to talk
05:50 - before I do that just take a moment to
05:54 - breathe maybe read some random numbers
05:57 - oh boy I really need to get progressive
06:03 - lenses I think okay there's a book
06:06 - anymore it's the problem fifteen
06:09 - thousand five hundred and thirty eight
06:11 - seventy one thousand one hundred and
06:14 - sixty nine forty one thousand two
06:16 - hundred sixty-eight
06:17 - fifty four thousand six hundred ninety
06:19 - five alright this that helped me that
06:23 - helped me get centered mellow and think
06:28 - about what it does I want to say so
06:29 - first thing I want to say
06:30 - is that to new experiments will be
06:33 - coming out on the channel soon one is a
06:36 - edited version of the neuro evolution
06:39 - steering car codec challenge that I did
06:42 - and what's gonna be pretty different
06:44 - about that is that project was built
06:45 - over four hours and I'm working on with
06:49 - Matias help a sort of edited version of
06:52 - that where I skip large parts of the
06:54 - coding and just sort of highlight the
06:56 - key parts and then kind of come in and
06:58 - explain the interstitial stuff so that's
07:00 - gonna be a new thing that if that works
07:02 - well then that might allow me to do some
07:06 - live streams where I build a very large
07:08 - complicated project over a long period
07:11 - of time and then able to release like a
07:14 - shorter video about it which is
07:15 - something I've been wanting to do so the
07:17 - ability to watch the full build or the
07:20 - project will never go away it's just
07:22 - that I think it could be useful to the
07:25 - audience for people kind of coming in
07:27 - and entering this world to be able to
07:29 - sort of like see a highlighted version
07:31 - of the project and then if they're
07:33 - interested to revive deeper into it all
07:36 - right so that's what I want to say the
07:37 - camera shutting off also reminded me of
07:40 - something really important which is that
07:42 - this room that I'm in is going to be no
07:46 - more maybe a some next Friday so I might
07:50 - get my last livestream not last
07:54 - livestream no no no no no just last
07:56 - livestream from this physical space next
08:00 - week sometime I'm not a hard percent
08:02 - sure it might be possible that I still
08:04 - have access to this at some point in
08:06 - July but I'm not sure the good news is
08:08 - I'm good finally some day soon this will
08:11 - be really sad the coding train will have
08:13 - a moment where the camera doesn't shut
08:15 - off anymore because I am setting up a
08:17 - new space hopefully with new equipment
08:19 - hopefully with some some little be good
08:23 - and bad to it but the channel might
08:25 - actually go on hiatus for a little while
08:27 - just because of just in order to set up
08:30 - this new space so I'm sort of figuring
08:32 - that out stay tuned but there might not
08:36 - be very there'll be very few or if not
08:39 - it's limited live streams in July and
08:41 - August and then coming
08:42 - back full force with the start of the
08:44 - school year in September but hopefully
08:46 - all this is gonna be good for them the
08:49 - amount of content that I hope and would
08:51 - like to do in the future now a lot of
08:55 - you have been asking for a video about
08:58 - how I set up this live-streaming studio
09:02 - and how it works and how maybe in the
09:05 - hopes of setting up your own or just
09:06 - learning more about it and I'm pleased
09:08 - to tell you that a week or so ago I
09:11 - recorded a session in here with a third
09:14 - camera so the actual live streaming
09:16 - setup and somebody else holding a camera
09:18 - screen capturing everything and I plan
09:22 - to release that as a video at least a
09:23 - document this space this coding trained
09:27 - studio which lets let's let me let you
09:32 - in on a little secret I think I can
09:34 - think I can pull this off of the wall I
09:36 - rise my mouth is probably coming up
09:38 - right to the camera I know why this is
09:40 - really attached to the wall right above
09:42 - the camera ah now I just got hooked onto
09:44 - this is this this has always been about
09:49 - hanging behind the camera this is my
09:51 - high-tech solution to remind me to look
09:53 - at you the audience Oh weird stuff all
10:02 - over the place in this room there's like
10:05 - a guitar picked over here all right
10:07 - what's going on ah now now um Thank You
10:12 - Simon for reminding me Simon who is you
10:15 - know so helpful to me if you don't know
10:17 - Simon check out Simon's YouTube channel
10:20 - Simon is one of the most loyal coding
10:22 - trained viewers I don't know if Simon is
10:24 - excited us probably missed a live stream
10:26 - here there when it was like 3 a.m. his
10:28 - time otherwise he's always here all
10:32 - right let's see just taking a peek at
10:37 - the chat it's nice to be here on a
10:38 - Saturday feel so relaxed like what could
10:41 - possibly go wrong
10:42 - so topic wise I'm gonna actually start
10:45 - with building a processing java library
10:47 - because I think for the past year
10:51 - spit the thing I said I would do after
10:53 - the coding challenge and then I just
10:55 - never get to it I'm gonna start with
10:56 - that I'm gonna spend about an hour on
10:58 - that I mean I think building a library
10:59 - will take longer than that but I'm gonna
11:01 - see how far I get in about an hour at
11:03 - least just sort of getting set up and
11:04 - starting that discussion then I will
11:06 - take a break and talk to you about the
11:09 - coding trains livestream sponsor for
11:12 - today brilliant org was actually one of
11:14 - the things I discovered about brilliant
11:16 - that I really love my kit Rises I
11:17 - haven't happened so I spend a lot of
11:19 - time with a subway looking at my phone
11:20 - which I really shouldn't do I should
11:22 - read or just like be one with the New
11:26 - York City but I finally had app and I
11:30 - was like looking through him doing some
11:32 - of the quizzes and stuff on my phone
11:33 - which I thought was like a pretty good
11:34 - productive use of my time versus the
11:36 - other kind of like nonsense I'm I didn't
11:38 - look at my phone so if you're not
11:39 - familiar with brilliant
11:40 - check out brilliant org son you can sign
11:43 - up for free at brilliant work slash
11:44 - coding train that lets you know that
11:46 - lets them know that you found brilliant
11:48 - front of the coding drain which helps me
11:50 - out a little bit which is nice and then
11:52 - there's a lot of free content for
11:55 - example a daily puzzle and I'm gonna
11:57 - come back later and do the daily puzzle
11:58 - for today but there's also a premium
12:00 - subscription which unlocks a lot of
12:02 - other courses of content which I will
12:04 - show you some of later also and the
12:06 - first 200 people to subscribe to that
12:07 - premium content get 20% off so let's see
12:15 - david is asking in the chat will you
12:18 - have content to upload during the hiatus
12:20 - so I sort of thought that's one of the
12:23 - reasons why I did that big data and API
12:26 - score switch I should pull up here and
12:28 - just mentioned I it's mostly complete
12:32 - though so this is a good question I I
12:36 - would like to but I don't know I see TBD
12:40 - TBD what's gonna happen July in August
12:43 - I'm either gonna have content or no
12:44 - content or have live streams are no less
12:46 - dreams or try something different
12:47 - we'll see but there are some ideas for
12:50 - some things that I could do at least
12:51 - have some content on the channel
12:53 - nobody watches the coding training this
12:54 - summer anyway come back to school and
12:56 - they're like Zubair thank you for your
13:03 - super chat
13:04 - a family-friendly channel I'll accept
13:06 - your I guess the moderate the automatic
13:08 - moderation does not shut off your super
13:11 - chat only because it's a super chat I
13:12 - guess but thank you nice nice Avengers
13:18 - icon does anybody know where I could get
13:20 - a stained glass Avengers stained glass
13:24 - don't ask me why I don't know if I
13:28 - seriously want that uh looking at the
13:31 - chat alright so what I want to do first
13:34 - before I start doing the processing
13:36 - library is show you some of the
13:38 - community contributions that's another
13:40 - thing on my list that I've got to make a
13:42 - video about how to make a community
13:44 - contribution there have been some really
13:46 - awesome ones that have come in so this
13:47 - is the most recent coding challenge
13:50 - incidentally the coding challenge I'm
13:52 - going to do today is the gift-wrapping
13:53 - algorithm to create a so what's called a
13:56 - convex hull around a set of points
13:58 - assuming I get to it
14:00 - TBD but this is the most recent coding
14:04 - challenge video if you haven't watched
14:06 - it you can it is a variation on the
14:11 - google chrome a dinosaur game and but
14:15 - using coding train characters and also
14:17 - using a new feature of the ml 5 library
14:22 - which is a machine learning model to
14:24 - recognize certain speech commands and by
14:26 - the way one thing I wanted to mention is
14:28 - a lot of people commented that let me
14:30 - actually go let's go over to that let's
14:32 - just let me just show you what it was
14:33 - and I want to talk about something so
14:35 - this is it here wait I think I have to
14:41 - do I have to click for a yeah up it did
14:47 - work so when I say up it's supposed to
14:49 - jump so a lot of people commented oh
14:50 - this would work better less latency be
14:52 - more accurate with the web speech API
14:54 - and that very well may be true but one
14:57 - thing I want to emphasize about using
14:59 - this particular model and using ml 5
15:02 - which is built on top of tensorflow j/s
15:04 - is the model is retrieved and run
15:06 - directly here on the clients so your
15:09 - audio is not being sent anywhere it is
15:13 - staying local to your computer when you
15:16 - use the web speech
15:18 - yeah I'm like I guess someone should
15:19 - fact-checked me on this but I've almost
15:21 - certain that your audio goes to the
15:23 - cloud and then is turned into text and
15:27 - returned and this is you know I think
15:29 - something that is more that I really
15:31 - like about working with tensorflow j/s
15:34 - and being able to run the models
15:35 - directly in the browser is the data the
15:38 - images the audio doesn't have to be sent
15:40 - to a server anywhere and so there's a
15:42 - little bit of privacy considerations
15:44 - around that which is something that is
15:45 - always important to think about with all
15:47 - of this stuff okay so mine is terrible
15:51 - but let's look at the community
15:53 - contributions and some of them do have
15:54 - sound which is really fun so this first
15:56 - one is unicorn versus this dots by
15:58 - Melvin Abraham shoot I did terribly okay
16:10 - I'm like standing in front of this
16:11 - awesome little less space here I'm
16:18 - terrible at this alright I'm gonna get
16:21 - I'm gonna get a successful one I'm
16:34 - getting better at it
16:39 - alright I think I got two good remember
16:45 - a Cody train is now gaming Jim
16:47 - [Music]
16:50 - alright I'm gonna let I love the sound
16:53 - effects I love all the additions the
16:56 - jumping feels much more fluid and
17:00 - intuitive the fonts being used or the
17:03 - coding train fonts this ah fun to see I
17:06 - love the train whistle beginning it's
17:07 - pretty great all right Thank You Melvin
17:09 - drew that's really awesome alright let's
17:11 - go to this dot jumper by Swift potato
17:15 - awesome named Swift potato are you as as
17:19 - always I always forget to this stop just
17:21 - stop just stop
17:25 - all right guess pres I think you to
17:27 - restart as always I always forget to
17:30 - this stop just stop
17:31 - stop just stop and indeed this stop this
17:34 - stop underneath this this stop this stop
17:36 - is not underneath this stop - stop stop
17:41 - [Music]
17:48 - why is it let's try this one more time
17:54 - as always I always forget to this stop
17:56 - this is kind of sad I don't know what
17:58 - this scroll thing is happening alright
18:01 - audio is a little loud okay thank you
18:03 - for letting me know that I can turn that
18:07 - down is Swift's potato in the chat
18:15 - anyway super fun I love using the I love
18:18 - using this dot song excellent thank you
18:22 - I love the credit here of everything
18:24 - wonderful work super fun ok let's Oh
18:28 - some rough ideas on doing this in 3d so
18:31 - this is pretty interesting this is from
18:34 - DC bruh Chetty Dave / Chetty so this is
18:37 - interesting weave this Lola oh cool look
18:41 - at that so this this is super fun a
18:45 - roller which is like a little cone and
18:48 - is this
18:48 - this is using p5 WebGL which is really
18:52 - surprising to me p5 WebGL has really
18:54 - improved and people have really been on
18:55 - to make projects with it this is really
18:56 - fun to see cool thank you for this
18:59 - awesome work III encourage everyone to
19:02 - check these out and check out the code
19:04 - and there's one more I know
19:05 - Simon Tiger and then also just remind
19:08 - you you can add your own version here
19:09 - it's a little tricky if you've never
19:10 - used github before I might refer you to
19:13 - my git and github playlist but but we I
19:18 - encourage you to join to try you can't
19:20 - break anything you can't do it wrong we
19:22 - will welcome you in to try it to add
19:24 - your own contribution so let's take a
19:26 - look at Simon's improved spawning of
19:28 - trains
19:29 - I love how Simon includes the algorithm
19:31 - here so we can see in mine it was just a
19:34 - picked a random number and then added a
19:36 - new train but it looks like what Simon
19:38 - is also doing here if I understand the
19:40 - algorithm correctly is that there
19:43 - half is sort of like making a minimum
19:45 - distance between the trains so if it
19:49 - picks two in quick succession it won't
19:52 - be allowed to do that because the timer
19:53 - has not gotten it ready to be able to
19:56 - allow the random number to pick the next
19:58 - train so that's great space makes
20:00 - browsers scroll down this is alko's
20:02 - writing if the default is not prevented
20:04 - by the handler so that's probably
20:06 - something that has to be written into
20:07 - the code and you wouldn't notice it if I
20:10 - go back Thank You Simon for that if I go
20:12 - back to this jumper right always forget
20:16 - that this stop it stop it now you
20:17 - wouldn't notice this because the whole
20:20 - page is is there but I usually have it
20:22 - zoomed in a bit forget to this stop
20:25 - space the default behavior space in the
20:28 - browser is to scroll down to the bottom
20:30 - excuse me for a second so thank you for
20:37 - these wonderful community contributions
20:39 - I love them and yeah so let's move on to
20:46 - the next part of our day so let me close
20:53 - out a bunch of these things and I want
20:59 - to talk about this myself a little more
21:08 - space here
21:12 - and then where's my open simplex noise
21:18 - coding challenge
21:29 - let's get this ready okay okay oh boy
21:38 - so Alka is writing I don't know if this
21:40 - came through a swift potato a sweet
21:42 - potato
21:43 - hello a sweet potato is asking is there
21:45 - any way to remove or override that
21:47 - behavior and Alka writes here in our
21:50 - slack channel window dot add
21:52 - eventlistener key press and then the
21:55 - event comes in as the argument and you
21:57 - say event dot prevent default so and al
22:01 - qaida there in the chat lookup event
22:03 - prevent default and david writes I'm
22:09 - working on a dinosaur game for
22:11 - processing that also has birds you have
22:13 - to duck under which is awesome
22:14 - great okay so I think I'm just gonna get
22:21 - started here and I might come back and
22:25 - record some intro e stuff for this but
22:28 - let me just try
22:31 - I imagine this might be a multi-part
22:36 - series and we'll see how it goes
22:41 - okay Gama Chu writes I'm watching you
22:49 - live for the first time given to you
22:51 - where are you watching from I always
22:52 - love to hear where people are from and
22:54 - you know just to be a just it's
22:56 - important to be aware I I kind of peek
22:57 - at the chat every once in a while but I
22:59 - don't I don't catch every message I do
23:01 - often look at the chat after the fact
23:02 - and I do read all the comments that
23:04 - people write on the videos scanning
23:05 - through them and if you feel so inclined
23:09 - you can also join as a member or as a
23:11 - patron of the coding train because I'm
23:13 - actually gonna do the recording so green
23:16 - screen recording session hopefully a
23:18 - little later today or else on Monday for
23:20 - members only too for the interstitial
23:23 - stuff for that neuro evolution so if you
23:24 - want to get a link to my Members Only
23:27 - live streams you can do that now again
23:29 - you don't feel you're missing anything
23:31 - those are just kind of some raw
23:33 - recording sessions of me in front of a
23:34 - green screen and all that eventually
23:36 - comes out but if you want to tune in for
23:39 - that a little behind the scene
23:40 - that's what I do that with a smaller
23:42 - audience okay um all right okay okay I
23:51 - don't want to start I'm gonna start this
23:54 - one's this one's for all you processing
23:56 - Java people from the old days
24:02 - let me just check Twitter and make sure
24:06 - nobody's telling me not to do this okay
24:12 - I think I'm good oh all right
24:17 - let's let's see if I've got a whiteboard
24:21 - going I do not
24:23 - [Music]
24:27 - no whiteboard yep okay that's good
24:35 - do I have a marker is the question ah
24:44 - welcome new member
24:46 - matheus Acevedo Oliveira thank you you
24:50 - have made the lights blink at my
24:53 - apartment in Brooklyn I'm not there
24:55 - right now but the lights are blinking
24:57 - train whistle for you by the way I had
24:59 - this idea so I know I shouldn't get off
25:02 - on these random tangents but I just do I
25:04 - have been really struggling to keep up
25:07 - with the rewards that people get for
25:11 - signing up as a YouTube member or a
25:13 - patron which are stickers or books so
25:17 - I'm really really trying hard to get
25:20 - some new systems in place and have all
25:22 - that cleaned up over the summer if
25:24 - you're someone waiting for something I
25:25 - sincerely apologize and you should
25:27 - continue continuously bug me about it
25:30 - you shouldn't apologize for it you can
25:31 - just bug me about it
25:33 - but I have this idea of creating this
25:36 - came up at the i/o conference of
25:39 - creating a coding Train branded like
25:42 - laser etched train whistle because
25:44 - that's the thing people want right so I
25:47 - could like order these in bulk and then
25:48 - I could laser laser etched them with the
25:51 - coding train logo or something and then
25:54 - those could be a thing that I mailed to
25:55 - people and then I think will be easier
25:57 - to do I suppose I could sign them also I
26:00 - don't know if anyone cares about that
26:02 - but the books are just like hard to mail
26:05 - crazy expensive it just doesn't if I
26:08 - have to it's not working out very well
26:10 - but if you signed up and you were
26:12 - promised one you must get one otherwise
26:15 - my old world ups the sense of the way
26:20 - the universe works will not be aligned
26:22 - it will bother me I will lose so many
26:24 - nights of sleep so please keep me posted
26:26 - all right putting down this if we have
26:33 - some time later solve the cube you'll
26:38 - see my progress still just basically
26:40 - doing beginners method
26:42 - but I can do the cross without having to
26:44 - put it on the yellow side first I mean
26:46 - that's not that hard
26:46 - yay for me all right we've got a
26:49 - whiteboard we've got this I'm going to
26:53 - start so um let's see let's see how far
26:56 - I get in approximately a half an hour or
26:58 - 45 minutes and then I want to take a
26:59 - break and look at that brilliant Daly
27:01 - puzzle and then either do more of the
27:04 - library stuff or move on to some talking
27:07 - about computational geometry of this
27:13 - unbranded coffee cup from a not a
27:17 - sponsor water has really let me down by
27:22 - the way these days I have no water come
27:24 - on back to me come on back to me with
27:25 - that great water h2o sponsorship let's
27:30 - get the slack channel up here all right
27:44 - hello and welcome to a new series about
27:47 - building a processing library in Java so
27:51 - if we've ever wanted to learn a little
27:52 - more about Java programming and how
27:54 - open-source works and how you can
27:57 - contribute your own code through times a
28:00 - library to some other platform this is
28:02 - the place for you and I have to admit
28:04 - like I really don't know how everyone
28:09 - does it say I have this like really
28:11 - nervous tic I wonder if this is like
28:13 - some kind of genetic condition where
28:15 - when I start teaching or live-streaming
28:17 - it never Li like nose becomes very itchy
28:19 - then like I feel like I need to scratch
28:21 - it or below my nose it's like what it's
28:24 - like a nerves thing all right
28:32 - I started working with processing in
28:38 - 2003 which is some number of years ago
28:40 - it's too many years ago I can't possibly
28:41 - do that math and one of the things that
28:44 - I first did when working with processing
28:46 - was contribute libraries to it and you
28:48 - can see here I'm scrolling through the
28:49 - processing libraries page there are
28:51 - libraries for all sorts of categories
28:53 - I'm just gonna go under video for a
28:55 - second oh no that's the actual video
28:57 - library sorry there are libraries for
28:58 - there are libraries for all sorts of
29:00 - categories I'm just gonna go here under
29:02 - video invision for example and we'll see
29:05 - there's a library for using like the PSI
29:07 - camera for doing a open CV oh look at
29:10 - this one for the connector it's really
29:12 - not kept up to date um there's a lot of
29:14 - wonderful libraries your blob detection
29:16 - this is a really useful one I have some
29:17 - videos about doing blob detection
29:19 - processing with your own code but you
29:20 - could use a library for it so maybe
29:23 - you've used processing maybe you've used
29:24 - a library before how would you make your
29:28 - own library this is what this video is
29:30 - about or this is what this video series
29:35 - is about alright so let's see what am I
29:37 - going to say next
29:49 - I have to admit something to you I have
29:53 - not actually done any research or
29:55 - practice before I'm beginning this right
29:57 - now I have made processing libraries but
29:59 - I haven't really made one in a while so
30:01 - a lot of this series will also be me
30:04 - sort of figuring it out as I go and
30:06 - hopefully everything works just fine
30:08 - it's somewhat of an ancient medieval art
30:11 - to build a Java
30:13 - a compilation of Java classes to insert
30:16 - as a processing library and I'm a lot of
30:20 - the stuff that you notice I've been
30:21 - doing is JavaScript on the channel these
30:23 - days but maybe after I do this I'll come
30:25 - back and show you how to make your own
30:26 - JavaScript library as well Matias is
30:35 - asking who edits the videos and that is
30:38 - Matthew who is a video editor and and
30:41 - more based in Montreal Canada okay all
30:49 - right
31:00 - so the very first thing that we need to
31:03 - do is go to the processing library
31:07 - template under the processing github
31:10 - organization and you'll notice something
31:11 - it actually says template here and
31:14 - there's this little button here use this
31:16 - template this is a new feature of github
31:19 - I don't know how to do it is I mean it's
31:20 - been there for a while but I've actually
31:21 - never used this feature up until right
31:23 - now mostly when you're using a github
31:26 - repo you're cloning it which means
31:29 - you're what I want to say stop beeping
31:34 - at me this extra computer here mostly
31:38 - when you're using this should probably
31:40 - be like I don't know I'm so confused
31:42 - these days cuz I now i do the offline
31:45 - recording with the AMA whatever I'm just
31:47 - gonna keep going this is what I'm doing
31:50 - now mostly when you a lot of times we're
32:00 - gonna use in github maybe you're just
32:01 - trying to find some code and you're
32:03 - clicking around you copy and paste it or
32:05 - maybe you're even ambitious enough to
32:06 - clone or download so cloning is a
32:09 - process of taking this repository and
32:12 - cloning it's a to another to your local
32:15 - computer your laptop I'm actually gonna
32:16 - do that a little bit later in this video
32:19 - downloading would just be downloading
32:21 - the code there's this process of forking
32:23 - a repo which is kind of creating a
32:25 - version of it that is linked back to the
32:27 - original version but this is a scenario
32:29 - this is a rare scenario where what I
32:32 - want to do is build an entirely new
32:33 - project it's not really related to this
32:36 - it's related to this in that this is my
32:38 - starting point but there's no reason for
32:40 - what I want to build to be a fork of the
32:42 - template because I am not contributing
32:44 - back to the template if there's an issue
32:46 - with something wrong in the template
32:48 - then I would want to make a fork to fix
32:51 - the thing that's in the template but I
32:52 - just want to start from it it was a very
32:55 - long explanation for me just basically
32:57 - pressing this button so I'm going to
32:59 - press this button I'm actually gonna
33:01 - switch this to coding train because I
33:04 - would like this library that I make to
33:07 - be a community project that people could
33:09 - submit to and I mean I could do that
33:10 - under shipment as well but this is a
33:12 - coding training process
33:13 - library we're going to call this open
33:15 - simplex noise library I'll call it for
33:21 - processing let's call it for processing
33:24 - so that's going to be the name of the
33:25 - repository this is a new a processing or
33:33 - open simplex noise and I want to make it
33:36 - public and I want to create the
33:38 - repository from the template
33:52 - so I love this I love that this is a new
33:56 - repository a new project but github is
33:59 - being thoughtful about this and
34:02 - crediting back where it was generated
34:04 - from
34:21 - now what is the next step the next step
34:24 - is now I want to work with this and
34:26 - update the code and change it around and
34:28 - put my stuff my open simplex noise stuff
34:31 - in it and by the way you might be
34:32 - wondering what is open simplex noise so
34:34 - I have a whole video about what that is
34:36 - it's not really important right now the
34:38 - point is how to make the library but I
34:41 - want to make it in the context of
34:42 - something that would be useful so I'll
34:44 - come back and talk more about open
34:45 - simplex noise and we'll look at some
34:46 - examples with it as we get a little
34:48 - further along all right so I'm gonna
34:59 - click clone I'm gonna copy this and I'm
35:03 - gonna open up let me let me
35:16 - let me be more picks up about this right
35:20 - all right I'm gonna click clone I'm
35:22 - gonna copy this and I'm gonna go to my
35:24 - console application which I'm using I
35:27 - term and I must say git clone and paste
35:29 - that in so this is now going to and this
35:32 - should be bigger let's try this one more
35:38 - time so I'm gonna click clone I'm gonna
35:44 - copy this I'm gonna go to my terminal
35:46 - application I'm just in the desktop and
35:48 - I would say git clone and I'm going to
35:51 - clone this particular repo which will
35:53 - now download everything to my computer
35:55 - I'm just gonna then open up that repo oh
35:57 - no I'm not I'm not I was about to open
36:01 - up that repo and I'm doing it right now
36:02 - in Visual Studio code which would be
36:05 - fine because then I could kind of like
36:07 - look at like what's in there there's
36:09 - like a hello library Java template and
36:11 - stuff but no no close all this this is
36:14 - not what I want this is a very momentous
36:16 - occasion this might be the first time I
36:18 - need to use a Java development
36:22 - environment I'm sure there's some
36:23 - magical way I could make Visual Studio
36:24 - code do what it is I want to do but I
36:27 - want to do this with a Java development
36:31 - environment namely eclipse
36:36 - yeah alka this is pretty new I just
36:38 - turned it on because I had been
36:40 - privileged alka is saying they've never
36:41 - seen the template repo before and I just
36:43 - turned it on in because I have admin
36:45 - privileges of the processing
36:46 - organization and I hope it was okay that
36:48 - I did that all right now I don't even
36:57 - know if if I've downloaded eclipse I
37:00 - didn't CD into the repo I now
37:06 - oh shoot
37:13 - everything's going wrong now
37:15 - cameras shutting off IntelliJ right
37:28 - nobody nobody wants me to use in TIG
37:31 - I don't know I never used IntelliJ
37:33 - before in my life so I feel like I have
37:34 - to use eclipse eclipse.org Intelli
37:50 - IntelliJ I'll pull that up
38:09 - this is the Eclipse Foundation website
38:11 - where you can download and install
38:12 - Eclipse I'm gonna do that in a moment I
38:14 - should mention also that a lot of people
38:17 - the chat are saying oh use IntelliJ I
38:19 - like that better than Eclipse I don't
38:20 - know maybe it is better maybe it's worse
38:22 - who knows who cares I'm just gonna use
38:25 - eclipse it's the only one I've ever used
38:27 - and I want to have at least one thing
38:28 - here that I don't have to learn that's
38:30 - new but maybe I can come back and show
38:31 - IntelliJ at some point or one of you can
38:33 - make your own video about doing the same
38:35 - thing with IntelliJ and I can link to it
38:37 - alright so let's download eclipse so I'm
38:45 - gonna lift down let's download eclipse
38:47 - I'm gonna get this most latest version
38:48 - I'm gonna download the 64-bit this link
38:52 - looks good
38:54 - [Music]
38:56 - eclipse much like processing is a
38:58 - non-for-profit foundation and you can
39:01 - donate actually I don't know if they're
39:02 - nonprofit they seem there I should try
39:10 - it once to form your yes it definitely
39:13 - should
39:21 - what's what's going on here all right
39:25 - clips installer oops hold on Ola oh I
39:31 - guess I'm doing it
39:39 - alright once you've downloaded it you're
39:42 - gonna get this Eclipse installer and
39:44 - then you've got to choose what you want
39:46 - here
39:47 - I want Eclipse IDE for Java developers I
39:52 - think that's what I'm doing so I'm going
39:55 - to install it here hit accept and here
40:01 - we go it was fast except
40:14 - let me IntelliJ IDEA communities free
40:32 - and open source that's good to know
40:39 - [Music]
40:46 - all right I've downloaded installed it
40:48 - I'm gonna launch it now I also should
40:53 - mention that I think the processing
40:54 - library template is designed for use
40:56 - with eclipse it's creating a workspace
41:02 - which is similar to like a processing
41:04 - sketch book Welcome is great and I'm
41:07 - just going to do this
41:09 - open it up
41:21 - alright let's see alright alright here
41:30 - we go
41:30 - I have eclipse now now I'm gonna have to
41:32 - do some work to like fix the font sizes
41:35 - I realize if you're watching this you
41:36 - can barely see anything but right now
41:38 - I'll just use zoom for a second and what
41:40 - I want these are my options I could
41:41 - create a new project a Java project a
41:44 - project but what I want to do I pretty
41:46 - sure is import a project so I'm gonna
41:48 - click on import and then these are all
41:52 - of my options oh look at this it even
41:53 - asked like a git so I actually could
41:56 - probably import it from git but I think
42:00 - I can just do general existing I think
42:02 - this is what I want I think I want
42:04 - existing project into workspace because
42:06 - the processing library template is an
42:08 - existing Eclipse project so then I'm
42:12 - gonna hit next and I want to find that
42:16 - directory which is just on my desktop
42:19 - called open simplex open simplex noise
42:23 - for processing I'm gonna hit open and
42:25 - you can see look at that
42:26 - Oh interesting it's called processing
42:28 - library template so there's probably
42:30 - somewhere that there's like a name for
42:32 - it that I might want to rename not gonna
42:34 - worry about that too much right now
42:35 - I'm just going to click now finish
42:38 - finish and okay there we go this is
42:43 - looking promising oh I have a red X but
42:46 - you can see now this is an eclipse
42:47 - project it's got all of the files here
42:51 - in this like directory tree there's a
42:54 - data folder and examples folder a live
42:55 - folder a resources folder I may have to
42:57 - get into what's in those things but the
43:00 - most important one right now is the
43:01 - source folder I'm going to click on that
43:03 - and we're gonna see like this is really
43:06 - this is the Java file it's not a PDE
43:09 - file not a processing development
43:11 - environment file it's an actual proper
43:13 - Java file this is what the file that I'm
43:15 - gonna need to work with
43:23 - is there a dark mode for eclipses by
43:28 - holing people are telling me there's a
43:29 - dark mode let's look for that
43:41 - appearance No
43:58 - I'm looking the chat has not told me
44:02 - where it is yet and I haven't found it
44:04 - all right let's Google I guess
44:14 - that's from 2014 that's not gonna help
44:16 - me
44:33 - preferences general appearance okay ah
44:40 - theme
44:51 - what's not about
45:00 - okay
45:02 - oh great
45:08 - let me quickly mention that under the
45:11 - preferences under general appearance you
45:13 - can change the theme to dark mode which
45:15 - I'm doing right now get the font size
45:25 - wear with the font size be
45:41 - you think we'll be under appearance
45:43 - colors and fonts oh there we go oh my
45:47 - god this is like insane whoa seriously
46:08 - okay does that actually change it that
46:16 - didn't seem to do anything this text
46:19 - sounds use by text editors let's see
46:23 - okay that's good so at least I got the
46:25 - font bigger for the text editor Java
46:33 - editor text font under Java click Java
46:36 - editor okay I think I've got that I
46:40 - think I'll leave the rest of the fonts
46:43 - [Music]
46:49 - small
47:03 - I've also gone this will this is not
47:06 - enough something necessary you'll need
47:07 - to do but I've also gone and increased
47:09 - the font size for the code editor just
47:11 - so we can see it bigger so where I am
47:13 - right now is I have got I'm looking at
47:16 - hello library job I'm looking at this
47:18 - code and I'm in the Eclipse editor so
47:23 - the next thing that I want to do here is
47:25 - I'm gonna figure out why do I have these
47:27 - errors I know why all right
47:38 - interesting interesting oh this is
47:40 - exciting this is very exciting these are
47:53 - the errors P applet cannot be resolved
47:56 - to a type the import processing cannot
47:59 - be resolved why do I have these errors
48:01 - well the idea that this project where
48:06 - I'm building a processing library
48:08 - depends on the processing core library
48:13 - itself and I don't have that anywhere on
48:16 - my computer yes I have the processing
48:18 - application so maybe there's some way
48:21 - for me to link this to the processing
48:22 - application but I'm gonna do you one
48:24 - better what I'm going to do is I'm now
48:27 - going to clone the entire processing
48:31 - sort core library source code and I'm
48:34 - going to have that as a project in
48:36 - Eclipse and I'm gonna have this project
48:38 - refer to that so let's look at how I
48:39 - would do that pretty sure by the way
48:44 - there's probably some instructions for
48:46 - how to do this let's look for that for a
48:49 - second
48:55 - Oh rename your Eclipse project okay
49:11 - oh yeah
49:23 - oh I see so I could just get cored out
49:28 - jar I think I'd rather have the full
49:45 - all right I think
49:59 - so this oh by the way so this we can now
50:02 - change butts by the anyone who wants to
50:05 - submit a pull request to processing
50:07 - library to change these instructions
50:09 - because you no longer need to do fork
50:10 - you can you use as a template which
50:12 - makes so much more sense and that can be
50:15 - fixed but let's not I'm not gonna worry
50:16 - about that right now I'm just gonna
50:18 - mention alright before I do this next
50:22 - step I should point out that even though
50:24 - I'm kind of haphazardly no absolutely is
50:28 - not the right word before I go on to the
50:37 - next step
50:37 - I should point out that women before I
50:41 - go into the next step I should point out
50:42 - that even though I'm like awkwardly
50:43 - trying to figure this out as I go there
50:45 - is a guide to how to do this that's part
50:49 - of the processing library template
50:50 - readme and the step that I'm on right
50:52 - now actually is this ad core jar or in
50:56 - other jar files to your class path so
50:59 - one way that you could do this is just
51:01 - to get core jar what is quart jar it is
51:04 - the entire processing core library
51:06 - packaged into a single file a jar file
51:09 - is like a zip file of all of these
51:12 - provident to one but I'm gonna do this
51:14 - in a slightly different way which i
51:15 - think is interesting I don't know if
51:18 - it's better or worse which is to instead
51:20 - of adding quart jar to the classpath I'm
51:22 - going to add the processing source code
51:24 - project to the class path that way if I
51:27 - need to I can actually poke around that
51:29 - as well so to do that I'm going to go to
51:34 - nice little edit point here
51:40 - I'm going to I'm going to go to the
51:46 - processing main processing repo itself
51:48 - I'm gonna grab this clone I'm gonna copy
51:51 - that I should point out that you I
51:54 - should also mention I should also
51:58 - mention that I and using SSH meaning
52:01 - I've already gone through some
52:02 - instructions for how to set up an SSS
52:04 - ASIS meaning I've already gone through
52:08 - some instructions of how to set up an
52:09 - SSH key on my computer to authenticate
52:13 - to github automatically you could do
52:15 - this more simply by just using HTTP me I
52:18 - should really make a video on how to do
52:19 - that somebody remind me someday but
52:21 - that's why this is working for me so
52:22 - automatically okay so I'm gonna grab
52:24 - this I'm gonna go back oops sorry cancel
52:28 - I'm gonna go back to go back to my
52:32 - terminal I'm gonna say git clone the
52:36 - hope the full processing library
52:38 - [Music]
52:49 - [Music]
53:00 - [Music]
53:07 - [Music]
53:17 - get to that Orange Julius I like to call
53:20 - it Orange Julius I hurt myself there
53:30 - [Music]
53:35 - wow this is really taking a long time
53:46 - [Music]
53:54 - see the double X 47 and 65% type sense
54:08 - [Music]
54:11 - there we go all right now that I've
54:18 - cloned that repo I can go back to
54:20 - eclipse I'm gonna say file import
54:26 - existing projects into workspace you can
54:29 - see that's what I'm doing again next
54:32 - browse back to the desktop processing
54:38 - open and uh okay so do I really need all
54:42 - of these great idea so these are all of
54:46 - the processing projects that are part of
54:49 - the core processing repo let's try for
54:52 - right now just processing core I'm
54:55 - pretty sure that's the only one that I
54:58 - need is a dependency to build my
55:00 - processing library so I'm gonna uncheck
55:01 - all the others I'm gonna hit finish it's
55:04 - there so now we can see I have
55:06 - processing core with an X
55:11 - all right let's see so before it's gonna
55:14 - work as a dependency for processing
55:16 - library template this can't have any
55:18 - errors in it so let's see what happens
55:20 - here
55:33 - oh so there's an issue with I should
55:40 - have just gotten cored a jar if you with
55:44 - with the Java FX renderer that you can
55:52 - see how that's the entire error
55:55 - what's think different Java there's so
56:00 - many little like Easter eggs inside the
56:04 - processing source code processing Java
56:06 - FX so Java FX is missing is this because
56:17 - of the version of Java that I'm using
56:28 - Nathan is asking why is the processing
56:31 - repo more than a gig I will get back to
56:34 - you on that I should probably just go
56:36 - back to the core dot jar thing would be
56:41 - considered clear not jar it would I be
56:44 - done in two seconds
56:46 - I should probably follow the
56:47 - instructions but I do want to fix this
56:56 - Java FX why don't I have Java FX so I
57:03 - have to like install that separately
57:16 - okay
57:23 - Oh install new software okay that's not
57:26 - so bad
57:27 - let's try that it's not anymore included
57:33 - I am using Java 8 I'm pretty sure I need
57:37 - to use the correct version of Java with
57:40 - processing but I think that I am set a
57:47 - path all right let's try this I think I
57:54 - think that I found the issue here which
57:57 - is that Java FX which is something that
57:59 - processing uses is not by default
58:01 - included in the version of Java that I'm
58:03 - running with eclipse and so what I need
58:06 - to go now is to help install new
58:09 - software I assume that I could just
58:11 - search Java FX
58:13 - No ok [ __ ] already blue we find that we
58:24 - install new software and you're EFX
58:29 - Eclipse
58:37 - where do I add it did I not get help
58:43 - it's all new software yeah that's right
58:46 - yeah
58:55 - work with well there's a drop-down oh
58:58 - there's a drop-down
59:14 - gfx eclipse is in the marketplace the FX
59:29 - eclipse is in the marketplace this is so
59:32 - it's like the tiniest font ever I can
59:35 - barely read it select a site so there's
59:38 - like a marketplace it clips markup like
59:42 - okay
59:59 - there we go okay that's good all right
60:01 - let's write this so I can actually just
60:06 - go to eclipse marketplace in under find
60:09 - I can type FX and this is what I want e
60:12 - FX eclipse and let's let's try
60:16 - installing that
60:29 - [Music]
60:32 - how do i I don't like tell whether it
60:36 - was installed or not what version of
60:41 - processing am I using
60:42 - I mean if Java Java 12 I don't know what
60:51 - that is SE oh yes oh it installed okay
60:58 - all right restart now oh well that's bad
61:12 - having me when it finishes installing
61:15 - will ask you to restart eclipse which is
61:17 - what I'm doing and I can see that
61:25 - everything is totally working now did it
61:32 - install
61:38 - I think I might have to go back to the
61:41 - core jar no updates found yeah I might
61:45 - have to go back to my core jar
62:10 - JavaFX is not provided in Java 12 wait I
62:14 - should be using Java 8 for processing
62:18 - does it say on the processing library
62:21 - template
62:57 - Oh Oh I just need to add this I need to
63:02 - explicitly add it let me just see if
63:05 - that fixes it it didn't fix it
63:30 - Java SE 1.8 that's what I want
63:43 - don't I need like a JDK or something
63:46 - hold on let's see
64:02 - but I'm following this
64:19 - maybe I need to make sure I have the JDK
64:22 - downloaded f5 would refresh everyone's
64:30 - time I should be using IntelliJ no I'm
64:33 - gonna use eclipse I used two Clips
64:35 - fifteen years ago and it's what I'm
64:37 - going to use now let's see soon as it
64:42 - gives me a little
64:51 - f-five I don't have the functions
64:54 - anymore that's a ridiculous Mac I should
64:58 - just go to import core jar we'd be done
65:01 - with this nonsense hold on let's go to
65:14 - is this what I want do I want this do I
65:21 - need this
65:34 - Java
65:39 - that's there
65:48 - no matter our projects libraries
65:53 - I'll let them move on from this soon
66:03 - let me do this hold on
66:24 - all right I'm going back to court jar I
66:27 - got rid of the arrows in like two
66:29 - seconds all right
66:31 - this was like a cool idea so that I
66:34 - could look in the processing source code
66:35 - but it's so not necessary
66:39 - don't let's just not do this I'll come
66:43 - back to this another time
66:59 - all right I'm just gonna do the quart
67:00 - jar I'm head beans I'm gonna just do the
67:08 - core jar solution so I'm gonna go back
67:14 - to where I was here it would get edited
67:16 - back I was trying to be ambitious and
67:20 - I'll look into that later so nathan is
67:28 - suggesting that we redo the processing
67:31 - template to use IntelliJ I think
67:33 - actually a contribution of a version of
67:35 - the template for IntelliJ would be great
67:37 - and that would probably be something
67:38 - that would be accepted or at least could
67:40 - be pointed to so if you're interested I
67:42 - would say rather than replace it
67:43 - although I could imagine maybe in the
67:45 - long-term sense maybe it makes sense but
67:47 - for as a first step would be to just
67:49 - create a duplicate version of it all
67:50 - right but nobody goes maven or great all
67:55 - I know look I can only do what I can do
67:59 - all right P applet cannot be Oh November
68:07 - [Music]
68:08 - hello my kind of the Kadesh key which
68:12 - i'm sure i pronounced that completely
68:14 - incorrectly but I sort of tried to do it
68:16 - with some kind of vague accent to make
68:18 - it seem like I knew what I was doing but
68:20 - clearly I did not all right
68:25 - errors yeah I gotta wait till people
68:31 - stop talking about the camera errors P
68:34 - applet cannot be resolved to a type the
68:36 - import processing cannot be resolved to
68:38 - a tight so this is because this
68:40 - particular project means as a dependency
68:44 - the processing core library itself so
68:47 - there are a couple different ways that I
68:49 - could tell this project my processing
68:51 - library about the processing core
68:53 - library and I'm going to show you the
68:55 - easiest way to do that right now I
68:56 - should mention however that all of this
68:59 - was
69:14 - I should mention however that all of
69:17 - this all of what I'm awkwardly kind of
69:18 - stumbling through is actually here as
69:20 - instructions on the readme and the step
69:23 - that I'm looking to do right now is
69:25 - adding core jar or other jar files to
69:28 - your class path so the idea of a class
69:30 - path is a very important concept in Java
69:33 - programming it is the path where all of
69:37 - your dependencies live all of the
69:38 - classes that your project depends on
69:40 - live the path to your classes the class
69:42 - path so the way that the what I want to
69:46 - find is core jar that's a bundle jar
69:48 - file it's like a zip file that has all
69:51 - of the processing Java classes in it and
69:53 - there's a variety of different ways that
69:54 - I can find it but if I happen to have
69:56 - processing installed on my computer on
69:58 - the Mac and you can find this
70:00 - similarly on a Windows or Linux I can
70:03 - actually just right click on here and go
70:04 - to show package contents because whoops
70:10 - right click on here and go to show
70:12 - package contents a java application is
70:15 - actually just a directory of files it's
70:18 - kind of the operating system is hiding
70:19 - that for you but I can go here under
70:21 - Java and look at this core jar now I
70:24 - might find that I need other
70:26 - dependencies eventually but right now I
70:28 - just want core jar so what I'm going to
70:30 - do is I'm going to copy that into my
70:34 - project just by dragging it over I'm
70:36 - just gonna put it in the root directory
70:37 - maybe there's a better place to put I
70:39 - could link to the file huh maybe I
70:42 - should just link to the file copy link
70:45 - what should I do people welcome new
70:49 - member or long Nellis Sanchez thank you
70:54 - let me I'm gonna have some fancy stuff
70:56 - with buttons and little things will go
70:57 - off
70:59 - I said ROM now it's rommel sorry about
71:02 - that I'm gonna copy it should I copy it
71:11 - or link it excuse me well that was a
71:15 - burp house very thick copy all right
71:25 - there might be different reasons why you
71:27 - might want to do one or the other I'm
71:28 - gonna stick with copy just so that I
71:30 - know it comes in so I can see cordage
71:32 - are is there I still have my errors
71:34 - though but what I want to do now is I'm
71:36 - gonna right-click core jar and I'm gonna
71:39 - go to build path build path is
71:42 - essentially another sort of term for
71:45 - class path and I want to add this to the
71:47 - build path I'm gonna click Add to the
71:49 - build path and then voila
71:52 - all of those errors go away it knows
71:54 - what p applet is because P applet is
71:58 - part of processing core P applet is the
72:01 - base class for every sketch you write in
72:05 - processing yes I like by the way how the
72:21 - first person to answer in the chatter
72:23 - just said copy I took as words like
72:25 - that's that's crucial that's to keep
72:27 - that's the answer
72:31 - alright just to did these phase that
72:40 - just to did why the heck are we into
72:41 - clubs all the time probably not in ten
72:49 - years but there's some sort of like
72:51 - warmth that's filling my heart about
72:53 - this right now I just love it
72:54 - okay
73:10 - we're almost finished this first part
73:13 - now I'm just about ready to actually
73:15 - start doing the coding of the library
73:17 - itself this first part was really just
73:19 - to set up the project itself but I want
73:21 - to do a few more cleanup things number
73:23 - one is it shouldn't be called processing
73:25 - library template so I'm going to right
73:26 - click here and go to refactor rename and
73:34 - I'm gonna change the new name to open
73:38 - simplex noise for processing what else
73:50 - let's see let's see what else it says
73:55 - here add external jars
74:04 - oh I should put it in lives
74:15 - this
74:24 - okay well I think I got another new
74:28 - member just again another new member I
74:29 - already thanked this member yeah at Roma
74:32 - I think I think okay we're just done I'm
74:35 - about done with this first step okay
74:45 - looking more closely at the instructions
74:47 - I've discovered actually that the point
74:49 - of this Lib folder is this is where
74:51 - other dependencies should go so I'm
74:54 - actually just gonna move this chord jar
74:56 - file into there I think the project oh
74:58 - now it's complaining at me so you should
75:01 - have copied it in there in the first
75:02 - place but now what I'm gonna do is I'm
75:05 - going to right click on the project go
75:07 - to build path configure build path and
75:11 - this is now it's confused this project
75:14 - this chord out jar file is now missing
75:15 - so I'm gonna hit edit no no no n-no I'm
75:20 - not gonna edit I'm gonna hit remove and
75:24 - then I'm gonna do apply and close then
75:31 - I'm going to just go back to this and go
75:32 - to build path and add back to the build
75:35 - path okay so now I have my project setup
75:39 - hmm there's now I have my project set up
75:44 - there are a few last remaining steps we
75:48 - need we want to get to the point where I
75:49 - can build the library I want to see the
75:51 - build successful message and I'll be
75:54 - done with this first video in this
75:55 - series so what I need to actually do is
75:58 - I need to look for a file called build
76:01 - dot properties and this is going to be
76:04 - in the resources folder of the Java
76:06 - project so let's go back to eclipse go
76:09 - here under resources build dot
76:12 - properties that's what I want there oh I
76:14 - have never seen anything like this
76:17 - what I'm so confused so this to me in my
76:25 - head has always just been a text file
76:26 - does anybody know how I can change the
76:29 - font size of all of this stuff
76:39 - what's that telling me to change one
76:42 - through four well what are the items one
76:45 - through four now
77:03 - I don't want you to do this
77:09 - no idea I've never seen this before
77:13 - so this is like a GUI for the build up
77:16 - properties but where's all the stuff
77:25 - panel build ah there we go all right
77:29 - thank you so it appears that Eclipse has
77:39 - added a GUI for build properties but I'm
77:41 - actually just gonna click here so I can
77:44 - look at the actual text file and this is
77:48 - this is this is important so where is my
77:52 - processing sketchbook I'm going to open
77:56 - up processing to make sure this is right
78:01 - I'm gonna go to Processing's preferences
78:03 - and we can see users coding training
78:05 - documents processing that's where the
78:07 - sketchbook is great that's user home
78:09 - documents processing okay class path
78:13 - local location applications processing
78:17 - app now again you're going to have a
78:20 - different location oh I can also do this
78:27 - oh I should just
78:37 - I see
78:45 - I can link to this project
78:59 - all right so don't try to thing this is
79:05 - the next setting that I need to make
79:08 - sure is correct so this needs to point
79:10 - to that core jar file the processing the
79:14 - processing core library itself so I
79:16 - could get to it
79:17 - you know in Windows it's sort of like
79:19 - showing me how I might find it I could
79:21 - get to it from this Eclipse project the
79:22 - path of this Eclipse project and the
79:24 - libs directory which I think makes would
79:28 - make sense like documents Eclipse
79:36 - workspace is that a thing
79:44 - hmm where's the Eclipse workspace
79:48 - oh no but it's it's actually this
79:53 - project is o is here okay is there okay
80:13 - users
80:33 - this is the next item that I need to
80:35 - make sure points to the right location I
80:37 - want to find this core jar file the
80:40 - processing core library so I could
80:42 - actually point to where the processing
80:43 - application is actually saved on my
80:45 - computer if I had it in the applications
80:47 - directory which I might actually happen
80:49 - to have it here on my desktop so this
80:51 - would have to change or I can actually
80:52 - give it a direct location in this case I
80:54 - can actually just tell it I'm gonna tell
80:58 - it user home on the desktop is this
81:01 - particular project whoops
81:05 - so let's go sorry let's go here I'm
81:08 - gonna say PWD whoops
81:11 - PWD so this is actually where it is I'm
81:14 - gonna grab this directory and then in
81:19 - that directory under Li BS for libraries
81:22 - that or no it's just Li be sorry Li be
81:25 - for Lib library that is let me do that
81:29 - again I don't know why I'm obsessing
81:39 - over this
81:46 - okay this is the next setting that I
81:54 - need to change and I need to make sure
81:55 - it points to the processing core
81:57 - libraries to spend a lot of effort
81:59 - getting that core dot jar file into my
82:01 - project so now I also need to point from
82:03 - build properties so the variety places I
82:06 - could point to the processing
82:07 - application which for me is on the
82:08 - desktop but it might be in your
82:09 - Applications folder so many different on
82:11 - Windows or Linux I think for me what
82:12 - might actually be easiest is just to
82:14 - comment this out and point to where the
82:17 - actual this actual project is so this
82:19 - actual project is here on my desktop
82:21 - desktop open simplex for noise
82:24 - processing so I can put that in here
82:27 - paste that here then there's a file
82:31 - called lib for library where core dot
82:33 - jar is not a file directory so I should
82:35 - just put that in here and hit save
82:37 - that's good classpath local include core
82:41 - jar and then class path libraries
82:44 - location is sketchbook that location
82:46 - library so all this is the same target
82:48 - version 1.8 that should be fine all this
82:52 - stuff is fine a project name I suppose
82:54 - more stuff I should change so I'm just
82:56 - gonna say open simplex noise I'm gonna
83:00 - say open simplex noise for processing
83:04 - this is not super important I can fix
83:07 - this I can fix this stuff up later but
83:11 - let's just do some of this right now
83:16 - and I don't have a URL yet and there's
83:21 - categories let's just put it in other
83:22 - I'm actually is there a math math I'm
83:25 - doing all these now all right I'm gonna
83:27 - fix this up later I'm gonna put the rest
83:29 - of these but you could see that there's
83:30 - lots of other things there's that I can
83:32 - put in here but I'm gonna leave this all
83:34 - out I'm gonna hit save and I'm gonna go
83:37 - to the next step
83:44 - all right
83:53 - the next step is to compile the library
83:57 - using ant what is ant ant is from Apache
84:12 - ant or Apache ant is basically a build
84:16 - system for a Java it's maybe somewhat
84:19 - ancient but it's what's used by the
84:22 - processing library template so if I go
84:25 - back to eclipse and somewhere up here
84:28 - there should be like a little ant icon
84:29 - there it is I think that's ant write
84:31 - this up here is the ant and no that's
84:34 - debug that's the debug mode that's not
84:36 - the ant oh maybe I go to build that XML
84:39 - you go to build an XML let's look at the
84:43 - instructions window show view ant ah so
84:55 - to be able to see ant
84:56 - I need to go to window show view and you
85:00 - can see the little icon of the ant let's
85:01 - click that and now I should have
85:04 - somewhere where's my ant ant Apache
85:08 - where are you Oh ant
85:10 - now I see it drag the resources build an
85:17 - XML file there okay the next step is to
85:24 - take this build that XML file and drag
85:28 - it over to here and we can see there it
85:31 - is processing library open simplex noise
85:34 - for processing and I clean click this
85:36 - and do run ass ant build run as ant
85:42 - build okay now we say a little prayer to
85:45 - the ant God and we
85:52 - run that we built the processing library
86:02 - build successful look at this having to
86:05 - open up processing I'm gonna go to
86:08 - sketch import library okay I think I
86:13 - need to restart processing I'm gonna
86:15 - launch processing I'm gonna go to sketch
86:22 - import library look at this open simplex
86:26 - noise for processing the library is
86:28 - there now it's saying import template
86:31 - that library and there's no code for me
86:33 - to actually use but I now have the
86:36 - processing library building and I can
86:39 - start writing the code so in a way this
86:41 - was really the hardest part the next
86:44 - stuff that I want to do is going to be
86:45 - quite simple by comparison it's really
86:47 - just adding the code out of the examples
86:49 - building the library and publishing it
86:51 - so that will come in the next video or
86:54 - two or three and I'll see you there
86:57 - thanks for watching this we built a
86:58 - processing java library alright alright
87:05 - everyone that took a little bit longer
87:09 - than I had hoped and now at the halfway
87:15 - point of today's live stream this is the
87:19 - part where I talk to you about brilliant
87:22 - the sponsor of the coding train live
87:24 - streams and do a daily puzzle from
87:27 - brilliant ok so what is brilliant but
87:29 - first let me go to the web I'm going to
87:35 - close all these links and I am going to
87:39 - go to brilliant org so this is brilliant
87:42 - I mentioned earlier to when I started
87:44 - that brilliant also has an app that I've
87:45 - started using I'm a little bit afraid to
87:48 - plug my phone and show you the app
87:51 - because I don't know what sort of
87:52 - strange notifications or text message
87:55 - log yet but I'll figure out a way to do
87:56 - that I know I can turn on Do Not Disturb
87:57 - and all that so maybe next time for the
88:00 - next live stream I'll try to show you
88:01 - the app itself but I've been using it a
88:03 - lot on
88:04 - a subway when I have extra time instead
88:06 - of the other nonsense that I get
88:08 - involved with on my phone so I think I
88:11 - want to try that I'm just gonna try
88:12 - whatever the first daily challenges but
88:14 - I wanna show you a few things about
88:16 - brilliant that's pretty exciting so one
88:17 - thing is Simon Simon loyal coding
88:20 - trained viewers Simon Tiger sent me a
88:22 - message says I have a present for you
88:24 - I was like whoa I'm so excited and it
88:26 - has to do with this
88:37 - [Music]
88:48 - so as you know I have a special affinity
88:52 - for polar coordinates and I have a lot
88:54 - of videos and coding challenge witches
88:56 - are all themed around just doing stuff
88:59 - with polar coordinates and things like
89:01 - the cardioid shape polar flowers more
89:05 - flowers pull her problem solving so I
89:07 - haven't actually gone through I wanted
89:10 - to show this to you without me clicking
89:11 - through it this is part of the premium
89:14 - brilliant subscription I'm so the but
89:19 - they have these extra quizzes and
89:22 - courses themed around different geometry
89:24 - topics math topics so for me what's
89:26 - really wonderful about this stuff now as
89:28 - I'm kind of running out of ideas for
89:30 - what coding challenges to do that I can
89:32 - kind of go through these quizzes it's
89:33 - interactive learning it kind of keeps me
89:35 - fresh and then I get ideas to build
89:38 - coding challenges and in fact one of the
89:42 - reasons why I'm about to do a coding
89:44 - challenge on computational geometry is
89:46 - because of this quiz that I found on
89:49 - brilliant all about computational
89:50 - geometry and there's a section here on
89:52 - convex hull so this is actually what I
89:55 - want to do is in the a little bit later
89:57 - in today's livestream is look at an
89:59 - algorithm for calculating a convex hull
90:02 - around a collection of points so I'll
90:05 - talk about more what that is
90:07 - but I can click on it you can see
90:08 - there's some more stuff about that here
90:11 - okay but what's probably most relevant
90:15 - and what I've been looking at are the
90:16 - computer science fundamentals and
90:18 - computer science algorithms courses so
90:20 - I'm going to be doing these courses over
90:21 - the summer and and thinking of ideas for
90:26 - coding challenges and if you do that
90:28 - stuff too please share it with me so
90:29 - let's do a daily puzzle um these are
90:31 - free so all you have to do is sign up at
90:34 - brilliant org slash coding trained
90:36 - there's that URL for nowhere so let's go
90:40 - to today and let's go to this which is
90:42 - larger all right
90:43 - so what I like to do is I like to
90:46 - recreate the diagrams in p5
90:49 - because why not I don't know how hard
90:53 - this one will be but let's let's let's
90:55 - let's read through it a little bit
90:56 - together okay and I'm probably gonna
90:59 - need the whiteboard is the whiteboard
91:00 - camera on No
91:05 - all right let's look at this in the
91:13 - figure below can we relate the areas of
91:15 - the various regions so there's a light
91:17 - green dark green and blue region the
91:19 - legs of the right triangle or the radii
91:21 - of this larger semicircle which is the
91:23 - hypotenuse which while the hypotenuse is
91:26 - the diameter of the smaller semicircle I
91:29 - hold on I need to recreate this diagram
91:32 - I can't see it over there I'm just gonna
91:34 - go over here and draw it while I can see
91:37 - it okay and then I'll come back over
91:38 - here so we have our our da1 circle and
91:47 - then another circle I didn't do that
91:50 - didn't draw that very well not drawn to
91:53 - scale my drawing is terrible that's my
91:57 - drawing oh god it's the worst right but
92:00 - you get the idea
92:01 - okay so what are we trying to compute
92:03 - we're trying to compute the area of the
92:07 - smaller semicircle little R which is
92:11 - what the area of the smaller semi circle
92:16 - is PI R squared I don't get it
92:18 - the larger semicircle are the diameter
92:21 - of the semicircle D right but what is
92:26 - what's little R I don't get it little R
92:28 - is just half of little D must be right
92:32 - this makes sense because PI R squared
92:35 - divided by 2 huh we're there RDR the
92:39 - side lengths of the right triangle so R
92:40 - squared plus R squared equals d squared
92:42 - Oh since D equals to R we can substitute
92:45 - and simplify as follows I still
92:49 - understand what lo little oh yes to our
92:52 - little door is that ok so which
92:55 - semicircle am I looking for it this one
93:00 - that would just be this is the radius
93:02 - for that one that would just be PI big R
93:04 - squared right so oh I get it I think so
93:07 - right so if I'm looking for this region
93:13 - this is going to be PI big R squared
93:17 - divided by two because R divided by the
93:21 - whole circle is PI R squared so actually
93:25 - that's PI big R squared divided by four
93:28 - right that would be the area of this I
93:31 - think when we're trying to figure out is
93:32 - what's the area of this right and so the
93:35 - area of that is if if that's the radius
93:40 - it's okay hi little R squared divided by
93:43 - two
93:44 - I get that now and what is little R
93:46 - squared if we know this little R squared
93:50 - R squared plus R squared equals d
93:53 - squared so D equals the square root of R
93:56 - squared plus R squared which is this
93:59 - divided by two which is the square root
94:03 - of 2r squared divided by two that's what
94:07 - R is and so then I now can say I could
94:15 - plug this in right I can plug this into
94:17 - little R squared so little R squared
94:23 - this is the bottom is going to be for
94:26 - the top is going to be 2 R squared I
94:30 - multiplied by PI this becomes 2 pi big R
94:34 - squared divided by 2 is the area of this
94:40 - is that right the reai I scanned over
94:46 - this on the subway I didn't actually try
94:48 - to calculate it because I know the
94:49 - question is now so we go to the
94:52 - challenge is how does the oh I'm over
94:55 - here how does the combined area of the 4
94:58 - orange this is called a lune by the way
95:00 - so this is special kind of shape called
95:01 - a loon it's like a half circle with
95:04 - another part cut out of it I would
95:07 - really like to draw this but I think
95:08 - it's kind of like a pretty pattern
95:12 - each side of the square is the diameter
95:16 - of the semicircle so the question is how
95:18 - does the combined area of the four
95:21 - orange loons compared to the green area
95:24 - inside the square okay I don't know if
95:35 - people will know any of the chat is
95:36 - yelling me like I've done something
95:37 - horribly wrong yet I usually get this
95:40 - stuff wrong which is the way to learn is
95:42 - to get it wrong you can get it right
95:44 - eventually or not you just learn through
95:46 - getting it wrong over and over again
95:47 - which is kind of my life all right so
95:50 - let me draw this diagram so I think I
95:55 - can see it on this computer I think I
95:56 - can figure this out so we've got one big
96:01 - blue circle this is really the same
96:04 - diagram I'm drawing again this is the
96:07 - blue circle and then we put a square in
96:12 - there so this is really this is this is
96:21 - the same as what's there and then we
96:24 - make these four looms which again I
96:31 - haven't really drawn to scale so okay so
96:34 - if this is we're gonna call this R right
96:38 - so the area of the square the blue
96:41 - square would be oh wait this is
96:53 - the area of the square is the side
96:57 - length times the size like so the side
96:59 - length is the square root of 2r squared
97:05 - right we already established that right
97:08 - the side length of that square which is
97:14 - this R squared plus R squared equals D d
97:19 - squared and then if I take that times
97:21 - that this side the area of the square
97:24 - sorry its 2r squared
97:27 - 2r squared that's the area of the square
97:30 - right we did that before oh you're over
97:32 - here okay now if the looms area is this
97:37 - we have four of them for know where is
97:41 - it
97:42 - over here we have four of them well
97:45 - there's a PI in there I don't have a PI
97:48 - in here for orange some is PI R squared
98:00 - I know that's although this camera went
98:03 - out
98:15 - right I did this whole calculation
98:17 - before and I've already forgotten oh
98:25 - wait a second hold on I have to start
98:33 - over here I hope start over here let me
98:43 - start over here for a second the area of
98:48 - this loon is half of the side length oh
98:59 - my god I've lost my mind here I forgot
99:06 - which one which where's my final answer
99:08 - anybody know I'm like panicking this is
99:10 - what how does he try to do math while
99:12 - you're live streaming and you're really
99:13 - oh you're doing let's start over I'm
99:19 - gonna do this in tandem
99:25 - all right we're going to say I'm just
99:32 - gonna do this that this is our known
99:33 - length our so this area here all right
99:42 - this area here is oh I see what's gonna
99:52 - happen this area here is PI big R
99:56 - squared divided by 4
99:59 - it's the subtracting out that I kind of
100:01 - got confused now this this area here
100:08 - right this triangle area right so this
100:12 - is this this Triangle area is 2r no I'm
100:21 - sorry R squared divided by 2 so this
100:29 - little area here is this full area minus
100:35 - R squared divided by 2 which would be 2
100:45 - R squared divided by 4 which is PI R
100:48 - squared minus 2 R squared divided by 4
100:59 - right reason why I want to find out this
101:02 - little area is because then once I find
101:04 - out this area I can then subtract that
101:06 - out I don't think I'm doing this right
101:10 - somebody help me area of small circle
101:17 - divided by 2 equals area of big circle
101:20 - divided by 4
101:22 - I need colors oh yeah I should get
101:27 - colors
101:35 - let's get some colors
101:45 - okay
101:48 - whoo this is fun okay purple so this
102:08 - triangle here is purple this area here
102:24 - is pink oops
102:36 - and this I should really use oh I should
102:40 - be using the same colors as in this in
102:43 - the brilliant diagram no it should be
102:46 - applauding but it's too late I'm using
102:50 - my own colors then this area is green so
102:55 - that area there is this is what's called
102:58 - the lube so basically what I want to
103:03 - know is what is the area of one loon I
103:05 - want to multiply that by four and then I
103:07 - want to compare that to the full area of
103:11 - this this whole this whole square which
103:17 - obviously now is if this is R squared
103:20 - divided by two then the whole thing is
103:24 - just 2 R squared there's four of them
103:27 - all right so let me look let's look back
103:29 - at the explanation for a second you need
103:32 - to add the two circle areas and then
103:35 - subtract the Triangle area oh yeah let's
103:41 - let me go back to here because that's
103:44 - giving me a nice little proof here that
103:52 - it's once to give me oh right I forget I
103:57 - don't have to get the area of the loon I
103:59 - don't need to worry about the triangle
104:01 - because oh you don't see what I'm doing
104:04 - to get the area of the loon oh this is
104:06 - so silly I'm so silly I knew I was doing
104:08 - I knew I did this right the first time
104:09 - if I just have the area of this I'm so
104:12 - silly so hold on I have my colors what
104:16 - colors do I need pink I don't actually
104:20 - need to know this area of the pink right
104:24 - because what matters to me
104:31 - oh no that's not true right
104:46 - the purple segment is a right triangle
104:49 - yes it is a right triangle the pink
104:53 - segment is called a segment it's a
104:55 - segment no I do need that okay I do so
105:02 - let me do this again
105:03 - I can conquer this I could conquer this
105:10 - I'm feeling feeling good about it
105:16 - okay I'm gonna need everybody to help me
105:18 - for a second first tell me that this is
105:23 - correct the area of this purple right
105:27 - triangle is our whoops R squared divided
105:33 - by two right this is this area that's
105:43 - correct right then so then the area of
105:48 - this quarter circle with a radius of R
105:54 - is PI R squared divided by four is that
106:01 - correct
106:08 - so the radiant then if I want the
106:13 - segment this what I want is this whole
106:21 - thing PI R squared divided by 4 minus
106:26 - the right triangle R squared divided by
106:33 - 2 so this is really this total area do I
106:42 - have this right am i right so far
106:57 - Leonardo is writing you can find the
106:59 - answer adding the square area and the
107:03 - areas of the semi circles oh you know I
107:08 - could make this easier you're right I
107:10 - don't need to do this in this quarter
107:11 - thing okay I I could do it as the whole
107:14 - thing but yes okay okay so I'm doing it
107:19 - in a in a bit of a okay so people are
107:21 - telling me I've gotten this much right
107:23 - okay so now let's get the green area so
107:30 - now what I'm going to do is look at this
107:39 - this circle let me get the black pen for
107:42 - a second this half circle which has this
107:52 - little R right I'm gonna call this half
107:57 - of the hypotenuse of this right triangle
107:59 - little R we know that little art that so
108:03 - and if the whole thing we're D D equals
108:07 - D equals the square root of 2r squared
108:12 - right I did that before that's what that
108:15 - done so little R then equals that
108:19 - divided by two so now this green area
108:24 - that's the full half circle equals PI
108:33 - little R squared divided by 2 so if
108:39 - little R is this this turns into PI 2r
108:49 - squared divided by 4 divided by 2 so I
108:57 - can actually just cancel out the twos
109:05 - I don't like the way that I wrote this
109:08 - I'm it's got an easier way to think
109:11 - about this for my brain which is hurting
109:13 - right now is just multiply this by 1/2
109:16 - so so this is 2r squared over 4 divided
109:22 - by times 1/2 which and these cancel out
109:27 - so PI big R squared divided by 4 so that
109:32 - is the area of this whole green thing so
109:36 - if I take this whole thing I look at
109:38 - this and then subtract this we're left
109:43 - with this being the lunes area right PI
109:48 - R square by 4 minus this this turns into
109:51 - a plus these cancel out
109:52 - we just have R squared divided by 2 so
109:55 - the lunes area according to this
109:58 - calculation is big R squared divided by
110:05 - 2 and now for the for the grand finale
110:19 - we now get to say the looms area is R
110:24 - squared divided by 2 so 4 of them for R
110:28 - squared divided by 2 is 2 R squared and
110:34 - now write the area of the square is also
110:40 - that cuz remember a quarter of it is R
110:42 - squared divided by 2 multiply it by 4 to
110:45 - R squared the answer is they're equal
110:47 - they're equal they're equal
110:51 - they're equal alright we're going to now
111:04 - go here and we say the areas are equal
111:08 - you can hit submit oh yeah
111:19 - all right now let me find my phone and
111:24 - take a picture of the white board and
111:26 - submit that normally I I'm low on I
111:30 - would love to like code this and then I
111:34 - thought would be fun it was actually
111:36 - like code this event count the pixels to
111:38 - sort of like prove that it's correct
111:40 - which is not really a way to prove it
111:42 - count the pixels of different colors but
111:45 - I don't know where I put my phone to
111:47 - take this is silly why I don't need to
111:48 - use my phone I just take a screenshot of
111:51 - this and somebody screenshot okay I know
112:03 - how to do it you go to here and go to
112:08 - here it's correct which is not really a
112:10 - way to prove that I'm behind count the
112:12 - pixels of different colors but I don't
112:15 - know where I put my phone I think this
112:16 - is silly why I don't need to know don't
112:18 - phone oh there we go I just take a
112:19 - screenshot of this all right we're gonna
112:24 - take a screenshot of this should I be in
112:26 - it oh I'm not in it I've just seen it
112:28 - over there okay and we will copy this
112:36 - video URL
112:52 - I'm gonna add this image which should be
112:55 - this screenshot I'm pretty sure God well
113:01 - we make sure that's the right screenshot
113:03 - could there be another screenshot and
113:07 - then let's go to here what's that please
113:23 - add a link to your sketch
113:31 - let's do preview
113:40 - okay let's do edit because this should
113:45 - be a link wonder if it's a way to like
113:48 - insert a YouTube video
114:01 - right is there a way to I'm not gonna
114:04 - worry about that let's go to preview
114:06 - it's got the link to the video and I'm
114:09 - gonna post it alright thank you for
114:19 - humoring me to watch me struggle through
114:23 - a little math problem I you typically I
114:26 - like to tie these to a p5.js sketch but
114:28 - I'm gonna leave that as a challenge to
114:30 - you the viewer to make a p5.js sketch
114:35 - that draws this shape maybe you can
114:38 - animate it maybe you can you can add
114:40 - some kind of extra explanation you can
114:42 - share it with me in the comments thread
114:44 - here if you don't have a brilliant
114:46 - account you can sign up at brilliant org
114:49 - slash coding train you can actually do
114:50 - that right now cuz I'm gonna take a five
114:51 - minute break and I'm gonna come back and
114:56 - I think I'm gonna try to do I would I
114:59 - didn't get super far with the processing
115:02 - Java library but I think I might leave
115:04 - it there for today so that I could do
115:06 - the computational geometry coding
115:08 - challenge so I have a coding challenge
115:09 - ready to go and so I'm gonna come back
115:14 - and do that so I need a five minute
115:16 - break to actually like get some water
115:20 - recenter myself read some random numbers
115:22 - let me solve this Rubik's Cube and then
115:25 - I will be back so I'm going to I'm just
115:30 - gonna leave this here and I'm gonna
115:33 - throw caution to the wind I'm going to
115:36 - eliminate myself nope there we go you
115:39 - don't see me I'm about to mute my
115:40 - microphone and sign up at the link above
115:45 - and I'll be back in about five minutes
115:47 - one of these days all have a nice by the
115:50 - way one's an animator out there and
115:52 - wants to help make some animations for
115:55 - like starting soon technical
115:57 - difficulties get in touch get in touch
115:59 - with me on twitter at Schiffman i'm that
116:01 - might be someone I'm something that I'm
116:03 - looking for someone to help make for
116:05 - coding trade okay um and I'll be back in
116:09 - about five minutes
116:10 - mute the microphone
116:15 - [Music]
117:38 - [Applause]
117:39 - [Music]
118:22 - [Applause]
118:24 - [Music]
120:45 - [Applause]
120:48 - [Music]
121:34 - as always I always forget
121:40 - [Music]
121:56 - [Music]
122:05 - [Music]
122:17 - [Music]
122:31 - this dog this doc never forget the good
122:35 - stuff I'm gonna do this stuff this stock
122:38 - this dog the starter this start song
122:40 - never forget the Vista
122:41 - [Music]
122:53 - I'm gonna say once again coordinates
123:02 - [Music]
123:07 - Cartesian coordinates
123:11 - [Music]
123:24 - and auto-tune and the internet will fix
123:26 - that for me
123:30 - [Music]
123:36 - coordinates
123:38 - [Music]
123:46 - it's Cartesian coordinates okay I'm back
124:01 - in zero minutes in negative one minutes
124:07 - let's save this very important file now
124:16 - let's just leave this one all right
124:17 - thanks everyone let's see did anybody
124:19 - add anything but wait I lost my chute I
124:31 - think I met I meant to do is click on it
124:34 - here we go oh come on people
124:37 - still zero helpful zero interesting zero
124:41 - brilliant
124:42 - there's no least be a lot of confused I
124:46 - should probably link to the actual time
124:48 - code where I do it but all right I will
124:50 - check this later I guess I can't link to
124:52 - kind of link to this comment directly
124:55 - all right that helped me out people I
124:58 - need some emojis alright okay okay we're
125:05 - quitting this yes
125:08 - exit we are going to back to the browser
125:24 - we are going to log in as the coding
125:28 - code it will are right there we go
125:32 - we're gonna go here set this up to 32 I
125:38 - think is what I tend to do gift wrapping
125:49 - convex hull it's gonna be the coding
125:55 - challenge for tape you know what I'm
125:56 - gonna do just give me a second here I'm
126:03 - gonna start with some boilerplate code
127:14 - okay
127:15 - all right oh so thanks again to
127:20 - brilliant for sponsoring this livestream
127:23 - I encourage you to check out brilliant
127:24 - if you have some time I am now going to
127:26 - move on to the cue the theme music for
127:28 - coding challenges I don't have one I'm
127:33 - working on I'm gonna move on to today's
127:35 - coding challenge so I will return back
127:38 - to that processing library tutorial I
127:41 - don't think there's actually a
127:41 - tremendous amount more for me to do but
127:45 - I'll I'll have to return to that next
127:47 - week I'm glad that at least got that
127:49 - started there's a little momentum there
127:51 - but I don't want to leave today even
127:53 - though it's now time for me to go
127:54 - because it's already been over two hours
127:56 - but I don't want to leave today without
127:58 - doing a coding challenge and so I'm
128:00 - really gotten recently interested in
128:04 - computational geometry and the camera
128:06 - went off I know I know you don't have to
128:08 - say in the chat you don't say in the
128:09 - chat I know it's off I know it's off I
128:11 - am going to oh I'm definitely gonna need
128:14 - the whiteboard I'm gonna go to here I'm
128:19 - gonna go to the lawn I'm gonna search
128:22 - for delante I think that's how you spell
128:25 - it must not be how you spell oh yes it
128:29 - is oh wow there's so many let's go to
128:35 - this first one yeah
128:49 - so this was suggested de l'année trail
128:52 - because I'll I'm gonna maybe I'll just
128:54 - start and I'll explain what I'm gonna do
128:55 - so hold on a second everybody
128:59 - gift-wrapping algorithm let's go here
129:08 - we're gonna need the cross-product
129:23 - I need the cross product and what's
129:32 - another thing that I'm gonna need Oh
129:45 - Matias made a full screen to the
129:48 - brilliant challenge awesome I will take
129:51 - a look at that soon thank you for that
129:55 - and then why am I doing this
130:02 - there was another URL that I wanted to
130:05 - pull up but I'm blanking on oh I know
130:06 - what it is silly me
130:08 - first of all that's quit processing
130:35 - so this is something oh I don't know why
130:37 - it's that I implemented quite a while
130:41 - ago that I just want to briefly show
130:43 - it's not the algorithm I'm gonna use
130:46 - today but I will come back to it where's
130:49 - this console.log why that's in there
131:03 - okay okay I think I am ready
131:27 - is this the same pattern each time no
131:31 - it's different
131:33 - I forgot how it'll random seed in their
131:39 - camera oh I definitely need to erase the
131:45 - whiteboard
131:51 - come back to me whiteboard camera there
131:55 - we go
132:01 - [Music]
133:11 - okay start here why I say the long Hank
133:30 - alright alright everyone
133:33 - oh no I want to be here this would be
133:43 - good to have some kind of like gift
133:45 - that's wrapped like a prop but whatever
133:49 - this is a good like holiday coding
133:52 - challenge it's gift wrapping algorithm
133:54 - all right
133:57 - hello and welcome to a coding challenge
134:01 - that's not gonna work what fine for me
134:18 - the date that this was published in 1973
134:23 - because I was born in 1973 and maybe
134:27 - Jarvis published the gift-wrapping 2d
134:31 - marching algorithm on my birthday and
134:34 - then that would be like some kind of
134:36 - cosmic alignment of how much you're
134:40 - gonna fail at doing this all right I
134:44 - gotta get started with this I really
134:47 - gotta get out of here by 2:00 so like
134:49 - this is good time for team kids all
134:52 - right
134:57 - especially cuz I really want to like
134:59 - animate it like this which is really
135:00 - actually the hard part but all right
135:06 - oh hello and welcome to a coding
135:10 - challenge today I'm going to tackle the
135:12 - gift-wrapping challenge I'm going to
135:14 - make this ko and I'm going to wrap it up
135:15 - as a nice present so I'm going to hand
135:17 - it over to you and hopefully we'll make
135:18 - some something beautiful out of it or
135:20 - you'll learn something are all that kind
135:21 - of stuff that jazz alright so what is
135:25 - the gift-wrapping algorithm so first of
135:27 - all the reason why I'm interested in
135:28 - this is this idea of doing an
135:31 - implementation of something called
135:32 - toulon a triangulation has been
135:34 - suggested and talked about for quite
135:37 - some time and I'm really interested in
135:39 - tackling this the truth of the matter is
135:42 - if I wanted to do a deal on a
135:44 - triangulation I would most likely just
135:47 - go and get to get a library that I that
135:49 - does it for me but there is some value
135:51 - in doing it yourself and I will get to
135:53 - that in a moment when I start looking at
135:55 - the gif traffic I'll come back to that
135:56 - now I I have looked at this before this
135:59 - is some code that I wrote a long time
136:00 - ago for an example and this is a
136:03 - demonstration of calculating a convex
136:06 - Hall whole this if I did it correctly is
136:09 - actually using a different algorithm
136:10 - from gift-wrapping called the Graham
136:12 - scam not a scam it's not a scam the
136:15 - Graham scan and there are a variety of
136:18 - algorithms for computing a convex all
136:21 - there's the Chan algorithm and and more
136:23 - and they have various different
136:24 - efficiencies the gift-wrapping algorithm
136:27 - is probably the least efficient but it's
136:29 - a good starter one so let me talk about
136:33 - what the what it convex hull is and this
136:38 - is not the right pen let me talk about
136:42 - what a convex hull is this is the right
136:47 - hand
136:52 - March 1st 1973 no it was published
136:55 - before I was born then misses the point
136:59 - it missed a point I don't know what that
137:03 - is let me talk about what a conflict let
137:11 - me talk about what a convex hull is
137:12 - first and then look at what the
137:15 - algorithm is and then we'll go and write
137:16 - the code for it so the idea is that
137:19 - we're starting with
137:23 - and this I should say is an algorithm
137:26 - part of the field of research called
137:28 - computational geometry and I would
137:30 - really like to do a variety of coding
137:33 - challenges around different
137:34 - computational geometry topics so if you
137:36 - have an idea for one write it in the
137:39 - comments so the idea of a [ __ ] of a
137:41 - convex hull is first we need just a
137:43 - random collection of points so if we
137:46 - have a two-dimensional space and these
137:48 - algorithms typically generalize to
137:50 - higher dimensions but you know me I just
137:52 - like to be in two dimensions it's sort
137:55 - of my days where I used to be a mind I
137:57 - didn't used to be a mine I wish that was
137:58 - mine I don't know so let's say we have
138:02 - this random collection of points so the
138:05 - idea is that I want to connect these
138:08 - points in some way so we have this idea
138:11 - of convex and concave [ __ ] here's my
138:20 - random collection of points now first I
138:22 - need to make the distinction between
138:24 - convex and concave so here is a shape
138:27 - that is distinctly concave a pacman like
138:32 - creature so to speak there is a a vertex
138:37 - that is interior what is the definition
138:40 - there is an angle sorry that is greater
138:43 - I guess it would be an angle that's
138:44 - greater than 180 degrees that's the
138:46 - definition there is an angle but all of
138:49 - these angles of the shape there is one
138:53 - all of these angles that are made out of
138:55 - the vertices of the shape there is one
138:57 - that is greater than 180 degrees so a
139:00 - conchae a convex shape I let's get this
139:02 - confused but now that I know the term
139:04 - convex oh I won't forget it again if I
139:07 - wanted to turn this into a convex shape
139:10 - I would eliminate this point and connect
139:13 - these two points and now I have a convex
139:17 - shape and a convex hull is a polygon
139:20 - that you construct that is convex and
139:23 - contains all of the points so I can i
139:27 - ball this and I could
139:28 - go here then here then here then here
139:31 - now would I go in here no I'm gonna go
139:33 - down to here here here I'm gonna go here
139:36 - not gonna go here so this is essentially
139:38 - the gift I just sort of did my own
139:41 - performance in my with my brain of the
139:45 - gift-wrapping algorithm I'm eyeballing
139:47 - it I don't you know I think I got it
139:49 - right but there's a proper way we can
139:51 - actually calculate it and the way that
139:53 - you do that lets get another random
139:57 - sampling of points is by first starting
140:04 - with and it's a point that we know is
140:07 - exterior - what will be that that's on
140:09 - the convex hull the way to start with a
140:11 - point that we know that will be on the
140:13 - complex allof vertex of the convex hull
140:14 - is by picking either the leftmost or the
140:16 - rightmost or the topmost or the bottom
140:17 - most so a convention is just to pick the
140:20 - leftmost so I can see this is the
140:22 - leftmost point now what I want to do is
140:24 - check this point against every other
140:26 - point and whichever one is furthest to
140:29 - the left right whichever one is furthest
140:32 - to the left is the next point so I these
140:34 - are going to be in some random order I'm
140:36 - gonna check them in some order and I'm
140:38 - eventually gonna determine that okay
140:40 - which vector is most to the left it's
140:43 - this one so now I'm gonna go here and
140:44 - now I'm here and I want to do the same
140:47 - thing but now I want to pick which one
140:49 - is left of this - this relative to this
140:52 - point and that's going to be this one
140:53 - over here right we can sort of see like
140:55 - if I draw a line out to all the points
140:57 - if I sort them all kind of along a
141:00 - radial path the one that's all the way
141:02 - to the left will be this one and then I
141:04 - just do that over and over and over
141:06 - again until eventually I get over here
141:07 - and I find that the one furthest to the
141:09 - left is the one that I started with and
141:11 - that's going to be my convex hull
141:19 - I think that's a good that's that's an
141:23 - explanation it works so yeah okay
141:43 - back over here
141:55 - coming back over to the computer on the
141:57 - Wikipedia page we can see a nice
141:59 - animation of this playing out and this
142:02 - by the way is one of the reasons why I
142:05 - like to write the code for these
142:07 - algorithms without a library so
142:10 - ultimately if what I'm working on a
142:11 - larger project and I need to compute a
142:14 - convex hull for some reason having a
142:16 - nice efficient maintained computational
142:19 - geometry of library is most certainly
142:21 - the way to go and maybe I'll try to find
142:23 - some examples of that there's plenty in
142:25 - JavaScript that I'll link to in this
142:26 - video's description but most of those
142:28 - libraries will just compute all the
142:31 - points all at once and hand them back to
142:33 - you and if you want to create some type
142:35 - of interactive explanation of the
142:37 - algorithm some kind of like or animation
142:39 - whether it's for artistic purposes or
142:41 - educational purposes you're gonna have
142:43 - to write the algorithm itself and it
142:44 - actually is harder to write the
142:46 - algorithm and animate it so I'm going to
142:48 - try to do that as part of this coding
142:50 - challenge rather than write the
142:51 - algorithm all at once
142:52 - that it just like calculates it and
142:54 - shows the end result I want to be able
142:56 - to see something like this animation
142:58 - playing out and that'll make this take
143:00 - quite a bit longer I'll be more to
143:01 - figure out but I think it'll be more
143:02 - satisfying in the end Simon I am looking
143:10 - I right now I'm looking at the YouTube
143:11 - chat there's a Lee Lee iOS video on the
143:17 - I should refer to that yeah
143:18 - gift-wrapping algorithm the appropriate
143:21 - definition for this examples when you go
143:23 - around the shape you never turn left yes
143:28 - that's probably a better way of
143:30 - describing it what's this there's some
143:32 - World Cup game going on it's not what's
143:34 - happening some other stuff going on in
143:36 - the chat having to define the notion of
143:43 - turning left right for the purpose of oh
143:48 - okay
143:49 - all right all right all right was my
143:51 - explanation of good enough I think it
143:52 - was good enough all right
144:10 - oh okay actually I'm do the way I'm
144:13 - gonna do it as Oh N squared right
144:16 - because I'm going to be checking all the
144:18 - points always how is it only onh
144:34 - the inner loop checks every point in the
144:36 - set s and the outer loop repeats for
144:39 - each point on the hull oh right it's onh
144:45 - because you don't need to do every it's
144:47 - the outer loop is just until you get to
144:49 - the end okay great
144:50 - no the way I am gonna do it is onh okay
144:52 - great it's not om squared okay
145:02 - okay each time so yes yes okay great I
145:13 - also should mention that this 2d case is
145:17 - known as the Jarvis March invented by RA
145:19 - Jarvis and the time complexity is o NH n
145:24 - being the number of points and H being
145:26 - the number of points around the convex
145:27 - hull and the reason it's that is because
145:29 - for every point around the convex hull I
145:32 - have to check all the other points so
145:34 - that the number of points around the
145:36 - hall times all of the points it's a
145:37 - little bit better than ONS weird but not
145:39 - by much and again there are plenty of
145:41 - other more efficient algorithms for
145:43 - doing it this is just the one that I'm
145:45 - starting with
146:02 - okay alright let's actually write some
146:11 - code so I'm yeah let's start writing
146:18 - some code so I'm starting with a little
146:20 - bit of boilerplate which is just setting
146:22 - up an empty array putting ten random
146:25 - points in the array and I'm using the p5
146:27 - vector object which I'll make heavy use
146:30 - of in this in this let me do that again
146:34 - alright let's write some code so I'm
146:36 - just starting with some boilerplate code
146:38 - I'm I've got an empty array
146:39 - I'm putting p5 vectors in it I'm using a
146:42 - p5 vector object to store a point and
146:45 - then I'm just drawing all the points on
146:46 - the canvas itself so the first step that
146:48 - I want to do is find you know you could
146:50 - say I could run this over I'm going to
146:51 - get a random collection of ten points
146:52 - and I mention I'll do this with a much
146:54 - higher number of points but let's start
146:55 - with just ten so the first thing I want
146:57 - to do is find the leftmost point and an
146:59 - easy way for me to do that would just be
147:00 - to sort the points so I can actually go
147:02 - here and I could say points dot sort and
147:05 - the JavaScript sort function takes a
147:08 - callback function it's not really which
147:10 - is a comparison function which compares
147:12 - two elements and so I'm gonna say a
147:14 - comma B I'm going to use the arrow
147:17 - syntax if you haven't you seen the arrow
147:19 - syntax before I'll refer you to my video
147:21 - on that I'll say a dot X minus B dot X
147:23 - so what this is doing is it's returning
147:26 - a positive number anytime a is to the
147:29 - right of B and a negative number anytime
147:31 - a is to the left of B and that should
147:34 - make it such that I can create a global
147:38 - variable I'll call it left for like the
147:40 - leftmost point left equals points index
147:45 - zero and now if I were to say you know
147:48 - stroke zeros 255 0 and say point P X P
147:53 - dot y I should see that the left point
147:57 - oh sorry left X and left out why I
148:00 - should see that the left point is green
148:02 - so there you can see that and every time
148:03 - I run it whichever point is most to the
148:06 - left is going to be green
148:07 - right now I need to find the next point
148:12 - on the convex
148:14 - and remember I want to animate so really
148:16 - if I were to just go to go back to the
148:19 - Wikipedia page and look at the
148:22 - pseudocode let me take this down so I
148:28 - see my nose does the Itchy thing as soon
148:30 - as I start getting nervous about what
148:31 - I'm doing if I were to go back to the
148:35 - Wikipedia page and just look at the
148:37 - pseudocode you're gonna see everything
148:39 - happens in just a set of nested loops I
148:42 - don't want any loops to happen because I
148:44 - want every time through draw I wanted
148:46 - the draw p5 draw loop I want to draw the
148:48 - next stage so what I need to find what I
148:51 - need is
149:08 - so I'm going to need another array which
149:13 - will be the points that I'm placing
149:14 - along the hull I want to say a left can
149:18 - be kind I think left can actually be
149:19 - thing I want the original that like the
149:21 - leftmost
149:22 - I'll call this leftmost and then we call
149:24 - this current hull current vertex like
149:29 - that's the current vertex that I'm on
149:31 - checking with and then I want to say let
149:34 - and then current point so vertex I'm
149:39 - going to use that term when it's of
149:40 - pacifically of vertex along the whole
149:42 - and point is the current point that I'm
149:44 - checking to see if it's the next vertex
149:46 - so maybe I also need next vertex so I
149:51 - think these are what I need and I'm so
149:53 - leftmost is just going to be this sorry
149:57 - is this and that's also the current
150:01 - vertex is going to start at they'll as
150:06 - the leftmost
150:06 - and then actually the current point is
150:09 - really an index so let me call that
150:10 - index and this is next vertex and index
150:15 - is going to start at 0 and this is
150:21 - leftmost
150:28 - and yes let me make the leftmost point
150:32 - also a little bit bigger oh I already
150:37 - mean we can make the leftmost point a
150:39 - little bigger okay and let's also do
150:49 - current vertex as blue so we don't see
151:02 - the green one anymore because the
151:03 - current vertex and I should make these
151:05 - brighter so let's just do that the
151:08 - current vertex is now being drawn over
151:10 - the leftmost vertex okay what's the next
151:13 - step
151:22 - I'm gonna need two indices all right so
151:28 - I'm gonna make a guess that the next
151:31 - vertex is just points index one okay I'm
151:37 - gonna make a guess when I'm starting
151:39 - that the next vertex is whatever happens
151:42 - to be the next point in the array it's
151:44 - probably it could be by coincidence but
151:46 - it's probably not going to be and I need
151:57 - a I'm confused here I'm really thinking
152:04 - about this you only have to check the
152:07 - point so you haven't reached so far yes
152:09 - I'm aware of that so I could just but I
152:14 - do need that first point still I do need
152:17 - to like sort of always include the
152:19 - leftmost point so I'm gonna keep that in
152:23 - there
152:37 - real let me I'll take it out
152:51 - yeah
153:01 - and then actually the one that I want to
153:03 - check is then at 2:00 so the leftmost
153:08 - point is zero the one that I'm guessing
153:10 - is going to be the next point is that
153:12 - one and then I got to start comparing
153:14 - everything at two so let's draw just for
153:19 - the sake of argument here I want to draw
153:22 - a line from current vertex to next
153:33 - vertex and let's say stroke 255 stroke
153:46 - weight 2 so we see look at that oh no
153:50 - because they're sorted so it's a lot I
153:52 - am seeking to get lucky a lot of the
153:54 - time because they're sorted but you
153:56 - could see in this case that's not it's
153:57 - really got to pick probably this one or
153:59 - that one so that's where it's starting
154:01 - now what I need to do is I also want to
154:03 - draw a line with the one that I'm
154:05 - checking so I'm gonna say checking is
154:10 - points index points index then I also
154:14 - want to draw a line to the one that I'm
154:16 - checking so we can see those are the two
154:22 - that I'm comparing so these are the two
154:25 - that I could pairing and let's make this
154:26 - stroke so this one's going to be like
154:29 - green and the one that I'm checking will
154:33 - just be white okay so this is what's
154:37 - happening right now
154:38 - I need to compare these two I need to
154:40 - figure out which one is to the left and
154:43 - by to the left
154:44 - I mean basically like counterclockwise
154:46 - rotation and guess what there's a really
154:49 - nice way that I can do that and the way
154:51 - that I can do that is with the
154:53 - cross-product
155:04 - all right
155:21 - the cross product is a particular vector
155:25 - operation that you can apply on a 2d
155:28 - vector of two vectors that are in the
155:30 - same plane and it will return to you a
155:32 - vector pointing perpendicularly in the
155:35 - third dimension away and so what's
155:37 - interesting about this is I'm let me let
155:40 - me let me show you what I mean and I can
155:42 - never remember which is which but it
155:43 - doesn't really matter because we just
155:45 - need to know that it's one or the other
155:46 - if this is vector a and this is vector B
155:52 - the cross product of these two vectors
155:54 - will give me a vector pointing out this
155:57 - way this would be in a like a left
155:59 - handed system I guess cuz that's my left
156:01 - hand no no that's left handed would
156:03 - point the other way right handed I'm
156:04 - pointing out I think that's how you do
156:07 - it
156:07 - the point is it's pointing out but if I
156:09 - were to say this one is B so I'm doing a
156:13 - cross B and this one is a then I'm gonna
156:16 - get the cross product pointing in the
156:18 - other way so I just need to test is Z
156:21 - the Z value of a cross product B is it
156:26 - greater than 0 or less than 0 if by the
156:29 - way they were collinear or all along the
156:33 - same path you'll get 0 and we're just
156:35 - gonna assume for this case that I'm
156:38 - picking random points none of them are
156:39 - gonna be collinear probably sort of work
156:41 - out anyway but so if it B is to the left
156:44 - of a if Z is less than 0 it's to the
156:47 - right of a if Z is greater than 0 or the
156:50 - other way around but I'll just test it
156:52 - and its flipped anyway in a computer
156:54 - graphics system so it'll work itself out
156:56 - let's go try that so if I go back to the
157:03 - code what I need to do is I need to
157:05 - create those vectors so I'm gonna say a
157:08 - is p5 vector subtract and I want to
157:12 - subtract now what the current vertex no
157:17 - next vertex - current vertex that's one
157:23 - of the vectors and then B is subtract
157:29 - checking - the current vertex
157:33 - then the cross product which I will just
157:37 - call cross is a cross B I could
157:40 - implement this myself but thankfully
157:42 - it's oh I'm not in thank you everybody
157:45 - ah well I'm not doing a screen recording
157:48 - either I will have to do that again
157:51 - sorry everyone right hand rule I'm gonna
158:00 - get flamed in the comments for my miss
158:04 - so let's write write the code for that
158:07 - so what I need is I need those two
158:08 - vectors so a is a vector that points so
158:11 - I can use the subtraction function
158:13 - because I can point from the next vertex
158:16 - what is currently the next vertex to the
158:19 - current vertex
158:20 - that'll be vector a and then B will be
158:23 - pointing from the what I'm checking to
158:28 - the current vertex right and then then R
158:34 - the cross product is a dot cross B so I
158:39 - can implement the math for the cross
158:40 - product but it's actually just there in
158:42 - the p5 library for me and then I just
158:44 - want to say if cross is greater than
158:47 - zero then probably something like next
158:51 - vert so let me not do anything right now
158:52 - let's just see let's let's just
158:54 - console.log the cross product and say no
159:00 - loop so let's see we got o o cross dot Z
159:05 - the Z component we got a negative condom
159:08 - you're going barabbas all right so we
159:10 - got a negative number so the one that
159:12 - I'm checking is white the one that it
159:16 - currently thinks is green so is that
159:21 - right current one is green so if it's
159:24 - less than zero then that's to the left
159:27 - so if cross dot Z is less than zero then
159:37 - next vertex should actually be the one
159:40 - that I'm checking and then I just want
159:44 - to say index
159:45 - equals index plus one there we are now
159:48 - of course so you can see that as it goes
159:51 - through it's always gonna find the
159:53 - correct one is checking them all let's
159:55 - let's make a lot of points so it takes
159:59 - longer ooh that was weird
160:03 - why did that mess up it found it like
160:07 - instantly but it's checking them all I
160:10 - just yeah it's gonna find it pretty
160:13 - close because they're sorted but I think
160:16 - it's doing it correctly now something
160:26 - that I want to add that I think will
160:27 - just make this a little visually easier
160:28 - to follow is let me make a little
160:30 - variable called buffer and I'm gonna say
160:32 - pick a point between buffer whoops
160:36 - buffer sorry buffer and with minus
160:40 - buffer and the height also between
160:43 - buffer buffer and height minus buffer
160:50 - and let's make that buffer even bigger
160:54 - so now the points won't get picked super
160:57 - close to the edge so why is it getting
161:00 - is it not making it through everything
161:01 - oh it's making it through all hundred
161:04 - all right
161:19 - people are giving me some interesting
161:22 - comments all right
161:31 - okay now we need an exit condition
161:35 - so if index equals points ah shoot
161:55 - so now I definitely need an exit
161:57 - condition so I could say if index equals
162:00 - points length I've gotten to the end of
162:03 - the array and I could reset index back
162:07 - to what this is the question
162:19 - oh I should put it in the hall
162:41 - let me let go back to do that again
162:45 - so need to move like a little bit over
162:49 - am i standing in front of the code I
162:50 - don't think that I am but let me just
162:51 - give myself a little bit more so clearly
162:54 - I need an exit condition so I'm gonna
162:55 - say if index equals point length that
162:58 - means I've gotten to the end of the
162:59 - array let me at least say no loop here
163:01 - so I'm gonna like just stop it from
163:04 - animating once it gets to the end and
163:07 - let me just go back to like many fewer
163:10 - points just go back to 20 we'll do that
163:12 - pretty quickly and so what should happen
163:16 - is hull should get the next vertex did I
163:22 - put the current vertex into so hull
163:28 - should also get pulse should get the
163:31 - current vertex so now there are two
163:34 - points in the hull the current vertex
163:39 - should equal next vertex and then I need
163:44 - to reset index back to something so
163:46 - let's also now add something where I
163:49 - draw the hull so I'm gonna say begin
163:55 - shape stroke let's have the hull be blue
164:03 - begin shape I'm going to draw a let P of
164:07 - hull and I'm gonna draw all the hull
164:11 - points and shape and I'm not gonna say
164:15 - close but I am gonna give it a really
164:17 - light fill so I'm gonna say fill also
164:21 - have it be blue but with like a lot of
164:22 - alpha so am i seeing it I think as I
164:30 - said no loop let me put all the drop
164:32 - mail
164:41 - want this out for a second
164:52 - Oh because it's only two points and it's
164:54 - after okay okay okay
165:04 - all right so I'm not actually seeing the
165:06 - hole yet because only two points are in
165:08 - there and I'm drawing it before I'm
165:11 - drawing the green line and the white
165:13 - line so I could at least say like stroke
165:16 - wait for here and then I think I don't
165:19 - know why am I not seeing I think it's
165:25 - actually not even looping around I'm not
165:27 - gonna worry about that okay so I'm not
165:33 - actually seeing the hole yet because I'm
165:35 - drawing it before I draw these other
165:37 - lines and I've stopped the looping from
165:38 - looping but the real question is here is
165:40 - I need to then go and check for the next
165:44 - point so I need to figure out what to
165:47 - reset index 2
165:57 - oh I also that's they didn't have that
166:06 - there
166:06 - oh why then I need to then I need to add
166:16 - vertex and I don't think I'm gonna see
166:18 - the hole yet because I've only drawn two
166:21 - points so far and I've stopped the loop
166:22 - from looping so let's let's see what
166:24 - happens what if I just reset index back
166:26 - to zero and turn off no loop okay it got
166:34 - stuck so I don't want to first of all
166:36 - it's two Eagles that should be equals Oh
166:40 - interesting so look at that it's doing
166:43 - something but there's a problem
166:45 - so resetting it's like it keeps checking
166:47 - but it keeps finding the same part of
166:50 - the convex hull over and over and over
166:53 - again so I can't reset index back equal
166:56 - to zero because ultimately I don't want
166:59 - to check these two points again I do
167:02 - actually want to leave this first one
167:03 - because that's gonna be my end condition
167:05 - but let's not worry about that right now
167:07 - let's actually do something where we
167:09 - remove the vertices from the points
167:12 - array when I put them in the convex hull
167:14 - just to see what happens
167:26 - [Music]
167:30 - but
167:38 - so hold on
167:44 - sup array JavaScript there are remove
167:51 - and now I can splice but can I just give
167:55 - it an object and it takes it out splice
167:57 - just uses index values or I could say I
168:03 - could just skip it if it if it's
168:05 - included or oh I know what I could do
168:19 - oh I know what I could do I could start
168:22 - at if I don't want to remove it I could
168:25 - start at the the object the the the
168:31 - vertex after the one that I just added
168:34 - I just want to actually ignore the last
168:35 - one I put in I don't need to ignore them
168:37 - all I just want ignore the last run I
168:38 - can't ignore them all but I want that
168:40 - first one to be included yeah make a
168:44 - check array yeah okay
168:55 - so we can see this is just finding the
168:58 - same vertex over and over again because
169:01 - exactly checking against itself and
169:02 - whatever cross product vector I guess
169:04 - that itself is probably give me zero
169:06 - back or something so it's always gonna
169:07 - work
169:18 - okay okay I know what I'm doing here I
169:20 - know index equals and it's not if index
169:26 - equals point length okay I don't want to
169:37 - check the same vertex yeah I mean I
169:38 - could just eliminate checking the
169:44 - current vertex why don't I just do that
169:50 - let's just try that
169:55 - that'll be simpler so you can see it's
169:57 - kind of picking the same part of the
170:00 - hole over and over again because it's
170:02 - allowed when I set index back to zero it
170:04 - itself is one of the points it's going
170:06 - to check so I think I could probably do
170:08 - something here that just say as long as
170:13 - checking is not equal to the current
170:17 - vertex and then I can put this all
170:21 - around this this should fix that
170:25 - oh no it's still stuck
170:39 - yeah I know I could ignore all them I
170:42 - don't want to because I want to oh but
170:46 - then I could just check if that didn't
170:52 - work
171:23 - why is that not working
171:32 - you
171:34 - Oh Oh next vertex Oh what next vertex
171:42 - needs to be something not what it
171:43 - currently is that's why
171:59 - next vertex needs to be set back to
172:02 - something else it could actually just be
172:05 - the leftmost I know for some reason I'm
172:15 - stuck I everyone's telling me to just
172:16 - take the point out of the list but I
172:19 - kind of don't want to because I want to
172:24 - keep the I want to keep all the points
172:26 - in the list because then I want to have
172:27 - I could make a step I don't know why I'm
172:29 - stuck on that I should just take the
172:31 - point out of the list all right and that
172:35 - because then I have to store its index
172:36 - and splice it all right I'll do that
172:39 - though maybe I should just admit that I
172:44 - have to do that all right
172:52 - so you can see that even though it's
172:53 - doing this over and over again it is
172:56 - stuck so even though you've seen that
173:01 - it's doing it over and over again
173:02 - it's stuck just picking the same vertex
173:04 - over and over again because that one is
173:06 - one of the ones I'm checking so what one
173:09 - way I could approach this is remove that
173:10 - one so the easiest way to do that would
173:13 - be with splice so I also would want to
173:16 - pick the I'm gonna say next
173:19 - in the next vertex I also should keep
173:22 - track of that next index we just set
173:24 - that equal to negative 1 as an initial
173:25 - value and then when I find it I want
173:28 - next index to be that index value and
173:33 - then I can say points dot splice next
173:40 - index and just take that one value out
173:42 - now I'm still stuck so the reason why
173:45 - I'm still stuck is because next vertex
173:48 - that it's comparing everything to is
173:50 - still that same one that it got before
173:51 - so what I should do is just reset next
173:54 - vertex to something else
173:56 - like I'll just put it back to be that
173:57 - leftmost one there we go so now you can
174:01 - see it's working now it's stuck when it
174:05 - gets to the end but guess what the
174:07 - reason why is as I know when I'm done
174:10 - right I am done if next if it actually
174:14 - picks next vertex as the same as the
174:18 - leftmost so when it finds that one then
174:20 - I can say console.log done no loop and
174:25 - then otherwise do all of this other
174:28 - stuff that I'm doing so let's see how
174:32 - this goes wah so let's make this more
174:40 - interesting by giving me 200 points and
174:45 - we can kind of take a look at this going
174:46 - now it takes a while to check all 200 so
174:49 - this should probably get sped up I'll
174:51 - allow speed this up for you
175:28 - where's my ukulele tuner is it in here
175:31 - somewhere I haven't learned any new
175:36 - songs I can tune it by ear it's
175:58 - definitely out of tune but I have a
175:59 - tuner somewhere I don't know where it is
176:01 - oh here it is
176:15 - uh-oh I think I may need a new battery
176:17 - for my tuner so the reason why though
176:29 - I'm getting a question the last vector
176:31 - should connect oh I should add it so I
176:34 - would just use the clothes so the last
176:39 - vector is not connecting so what I
176:41 - should do is I should actually always
176:49 - push the next vertex in so that that
176:53 - first point is in there twice and then
176:55 - it will connect Oh
176:58 - [Music]
177:07 - wait what did I just do wait why did I
177:10 - just break it how did I just break it oh
177:15 - I didn't break it it just takes forever
177:22 - should I ruin that whole speeding up
177:24 - thing look at ik again for yeah I I got
177:38 - confused for a second so all right so
177:46 - Matt to that whole thing you can
177:47 - disregard so is being asked for me why
177:50 - is it not connecting there at the end
177:52 - well I could actually make it connect by
177:55 - changing the way that I'm drawing it to
177:59 - close so somebody's asking why is it not
178:08 - connecting there at the end and actually
178:10 - one of the reasons why it's not correct
178:12 - connecting is just the way that I'm
178:13 - drawing it if I add clothes here to end
178:15 - shape it will connect those last two you
178:18 - can see that they're now they're
178:20 - connected but it's also like closing it
178:24 - as it's going so maybe what I actually
178:26 - want to do is just change it to always
178:30 - put the next vertex in so that that is
178:34 - oh and but it's not then I say no loop
178:36 - it doesn't draw it again maybe I'll take
178:41 - out the no loop I'm just curious
178:43 - yeah
178:54 - removing the date I didn't actually
178:55 - remove the data right or did I splice
179:01 - them out I can't remember how I did it
179:09 - oh I did splice so I should really like
179:14 - put this into a separate array and then
179:15 - add them back in but whatever no I will
179:18 - mention that that's that's a very good
179:20 - point
179:38 - oops
179:51 - I don't know I'm like trying to make a
179:53 - this work for Matt to it to be edit for
179:56 - it to be edited well yeah you can see
179:59 - that the points are gone
180:00 - which is kind of a problem and so in a
180:10 - way it makes more sense for me to just
180:11 - leave them in there but skip checking
180:13 - them like like Simon was saying
180:17 - [Music]
180:29 - trying to think of what I want to say
180:35 - so one issue that's being pointed out to
180:38 - me from the chat which is really true is
180:40 - it's kind of a problem that I'm doing
180:41 - this splice because I've kind of
180:44 - corrupted the original dataset like I
180:47 - don't have that original set of all the
180:49 - points I have the convex all but I no
180:51 - longer have all the points so there's a
180:53 - couple ways I could approach that for
180:54 - example I could just like keep all those
180:56 - points that I'm splicing out in a
180:58 - separate ray and add them back in but
181:00 - what might be a better solution is
181:01 - adding is I'm actually already have this
181:05 - whole point this whole I already have
181:11 - the whole I already have the whole array
181:15 - so let's try this a slightly different
181:18 - way instead of splicing it out what I'm
181:25 - going to do oh that worked anyway why
181:28 - did that work
181:37 - no I don't actually need to splice it oh
181:41 - it's actually fine that's weird
181:50 - it's never gonna get stuck now I don't
181:54 - actually need to do this place does
181:58 - anybody understand why that worked
182:00 - because it in theory it's gonna check
182:02 - against itself if I don't take it out
182:14 - can I split it somewhere else
182:26 - just to make it more efficient I don't
182:28 - really care about efficiency
182:45 - let's take forever
182:56 - let's assume it's gonna get stuck at
182:58 - some point but I don't see it getting
182:59 - stuck the problem was next vertex okay
183:08 - yep okay great
183:11 - so Matt yeah there's a huge when you're
183:14 - looking at this later there's a huge
183:15 - amount of stuff that you can kind of
183:17 - ignore because I'm gonna just go from
183:22 - I'm gonna just explain that again
183:35 - so the chat actually is pointing out to
183:37 - me and rightfully so that this splicing
183:40 - out of the one that I saved is is
183:42 - problematic because I've corrupted the
183:45 - data itself I don't have that original
183:47 - array of points anymore and the context
183:50 - that I might be doing this vid that
183:51 - might actually be important so I could
183:53 - keep that intercept array I could add it
183:54 - back in but actually it turns out I've
183:56 - just discovered this through some
183:58 - debugging that I don't even need to
183:59 - delete it the problem was really the
184:01 - fact that next vertex was not reset back
184:05 - to the leftmost so it's actually going
184:07 - to work just fine every single time with
184:11 - split without splicing that out as long
184:13 - as I reset the next vertex back to like
184:15 - leftmost so that it sort of skips
184:17 - getting stuck so let's just make sure
184:20 - this lets watch this happen now with
184:22 - like 200 points and I will speed this up
184:24 - for you
184:26 - [Music]
184:43 - another battery
184:45 - [Music]
185:42 - [Applause]
185:44 - okay we can see that it's done and it
185:47 - looks correct I'm pretty sure I did this
185:49 - correctly cuz it seems to be working of
185:51 - course this is less efficient because
185:53 - I'm checking extra points that I don't
185:56 - need to check because they're already
185:57 - part of the convex hull array so I can
186:00 - add something to check to skip those and
186:02 - but but this isn't even the most
186:04 - efficient algorithm the first place I
186:05 - just want to get this idea to work so um
186:08 - you can see that it doesn't actually
186:09 - connect at the end because I didn't I
186:11 - don't have clothes as one of the in n
186:16 - shape so I could add that in let me just
186:18 - put that in for you you'll see what this
186:20 - does differently speed this up again
186:53 - hmm something is wrong with this ukulele
186:55 - tuner because I just put a new battery
186:56 - in
187:06 - all right so you can see what it's doing
187:08 - now it is always closing the shape with
187:12 - whatever the latest vertex is but really
187:14 - while I have implemented this and gotten
187:16 - this working I have not picked nice
187:20 - colors have been really thoughtful about
187:21 - the stroke weight or how this takes a
187:23 - very long time to animate so it's nice
187:25 - and I'm kind of animating every single
187:27 - possibility but I think you could
187:29 - probably make something pretty
187:30 - interesting out of this by changing the
187:32 - way you draw it or thinking about how
187:34 - you might make this interactive or maybe
187:36 - the user can add points there's a lot of
187:38 - possibilities but this will be a nice
187:39 - building block a foundation to hopefully
187:42 - do more computational geometry coding
187:44 - challenges in particular eventually I
187:46 - want to build a triangulation around all
187:48 - these points and then figure out how to
187:49 - make Adaline triangulation which has to
187:51 - do with a way of having all the
187:53 - triangles the circle that fits any given
187:56 - triangle does it include any other
187:57 - points that's known as a circumcircle so
187:59 - I I think I will come back and do a
188:01 - coding challenge just to do the circle
188:03 - that fits any given triangle it's a
188:04 - pretty quick thing that I can show you
188:06 - but there's a lot more to come with this
188:08 - make your own version of this share with
188:10 - me go to the code and trade calm to the
188:12 - page with this coding challenge and
188:13 - there's a there's a instructions there
188:15 - of how to share your version of this
188:16 - maybe you could make this tie this to
188:18 - sound or something else that I can't
188:20 - even possibly imagine now I look forward
188:22 - to seeing what you make and oh also you
188:25 - might want to investigate one of the
188:26 - other algorithms in particular the
188:28 - Graham scan algorithm maybe I'll come
188:30 - back and actually just do that as a
188:31 - video also but if you if you make a
188:33 - version of that please submit that as
188:34 - well ok thanks for watching see you soon
188:39 - okay I think this is done there is a
188:45 - video to be made out of this I think
188:51 - it's almost more interesting with fewer
188:53 - points because of the way I'm animating
188:54 - everything
189:03 - all right so everybody please bake a
189:07 - version that doesn't check the points in
189:08 - the blue area yes so all the I ever I I
189:13 - appreciate what everyone's suggesting to
189:14 - me there are so many added efficiencies
189:16 - to this algorithm but I wanted to just
189:19 - literally do the basic gift-wrapping one
189:21 - which I think I have done I will come
189:23 - back you can actually I'll publish the
189:25 - code for this one this is the Graham
189:30 - scan out and we can see how much a
189:32 - faster it is although I guess I'm
189:33 - probably not animating every piece of it
189:35 - maybe but so I I will come back and
189:41 - maybe do that or release this so I think
189:44 - I'm done for today let me check I'm just
189:46 - curious where is my brilliant challenge
189:50 - there was some things I just want to
189:52 - check which is the one I already did it
189:55 - which is larger I want to get mine up at
189:59 - the top people of course mine's not
190:03 - necessarily the best oh there it is
190:06 - alright I got helpful and interesting in
190:08 - a comment thank you the coder five five
190:12 - five zero Nilson yes
190:16 - all right okay where was who somebody
190:20 - somebody in the chat me was my TAS
190:22 - posted a link to a p5 sketch but don't
190:25 - know where that one
190:26 - alright I've really got to run this 215
190:28 - oh my goodness this has been a very long
190:30 - livestream over three hours out of this
190:34 - will come a video part of a new series
190:36 - of making a processing library also this
190:41 - convex hull coding challenge will come
190:43 - out and then oh the final module three
190:47 - video ah thank you for asking this Arif
190:49 - so let me go back here let me find the
190:52 - bookmark bar the how do I get it to show
190:56 - so let me go here so I've been
190:59 - neglecting I know I I guess I'll release
191:01 - this on Monday then it's already there
191:03 - though I'm sorry that I kind of got
191:05 - sidetracked but this new playlist that I
191:10 - released called working with data and
191:11 - API is in JavaScript it's a full core
191:14 - that's kind of like a follow-up of my
191:15 - intro to coding it barely not with p5
191:18 - it's with node and native JavaScript
191:20 - uses p5 in a couple videos there's a
191:22 - trailer for it here and then a whole set
191:25 - of videos they're all public this
191:27 - playlist I don't know why this playlist
191:28 - is also unlisted so you can actually
191:30 - find it I think if you just go into this
191:32 - video well and go to the description you
191:36 - could just go to the next lesson right
191:37 - here they're all available I just hadn't
191:39 - made them all welcome to another video I
191:42 - have one more thing just there sorry
191:44 - that that wasn't clear I find that if I
191:46 - really I don't know that this is
191:48 - actually true but my strategy with
191:50 - YouTube is even if I have like 10 videos
191:53 - ready to go I don't release them all at
191:55 - once because then their people's
191:57 - notifications just get the latest one
191:59 - it's confusing to find them so I kind of
192:01 - like act as if they're coming out one
192:03 - per day but often if it's ready or even
192:05 - if it's being prepared to be ready like
192:07 - I haven't put the English captions on
192:09 - yet or the thumbnails not done then it's
192:12 - just set to unlisted but you can usually
192:13 - find it in the playlist ok something
192:20 - similar to gift-wrapping in 3d using
192:22 - claims and two points yeah probably
192:24 - alright I've really got to go thank you
192:26 - so much I this has been fun I hope that
192:29 - you enjoyed this livestream that it was
192:31 - good you got something out of it alright
192:34 - [Music]
192:41 - this is my gift to you you will now have
192:44 - a green screen of me solving a Rubik's
192:49 - Cube
193:00 - of course there's green on the rubix
193:01 - crew which is really gonna mess you up
193:26 - I'm hoping I can solve this before the
193:28 - music ends that's my goal
193:40 - one of these days I'll learn some actual
193:42 - speedcubing techniques this is basically
193:46 - a beginner's method I didn't make to do
193:49 - that Daisy so let's skip that one step I
193:52 - guess I make it slightly more advanced
194:04 - my son is turning 11 and I asked his
194:09 - grandparents to get him a new cube it's
194:11 - like a expensive fancy speed cube 3x3 so
194:15 - of course I'll just be using that
194:33 - seriously
194:34 - Oh getting so unlucky
194:54 - Oh what do I do with this configuration
195:03 - it's like I never figure out I just do
195:06 - it until i get the thing we liked I got
195:13 - it oh I messed it up I think I had it
195:29 - further solved and I thought I did
195:35 - there we go oh yes I beat the song so I
195:52 - don't know that was about three minutes
195:54 - if I was about three minutes okay
195:56 - missed easy saw with 32 I still the
196:02 - things that things that are not so great
196:04 - about mic technique is one I I can do it
196:08 - relative to a different side but it kind
196:10 - of messes with me so I'm I get messed up
196:12 - not us so I'm so I'm not really
196:13 - examining for like which is the best
196:15 - side to start with and I'm just yeah I
196:19 - also like some of the end stages I only
196:21 - know a couple of the algorithms like
196:23 - only know like the clockwise one to the
196:25 - clockwise one multiple times says I
196:27 - don't know the counter clockwise same
196:29 - thing to do it twice set of ones that
196:30 - doesn't make it very efficient
196:32 - all right so other things I know I have
196:38 - trouble leaving but I really do have to
196:39 - go
196:40 - I can maybe try and take one or two
196:44 - know that I'm I probably not gonna get
196:46 - to this day because I took so long doing
196:49 - this live stream but if you were I will
196:53 - be doing a Members Only recording
196:57 - session just a green screen recording
196:59 - session as I mentioned to record some
197:03 - interstitial explanations for the neuro
197:05 - evolution car challenge so stay tuned
197:07 - for that take a look at the community
197:09 - tab if you're a member or or if you're
197:12 - in in the slack channel as a patron you
197:14 - can check that as well
197:18 - thank you everybody so more I could
197:26 - could you could do more on sweep line
197:28 - algorithm okay that would be great so I
197:31 - will be back for in terms of schedule I
197:34 - hope I plan to do one live stream again
197:37 - next week I haven't set a date for that
197:39 - yet the best way to find out is either
197:42 - to subscribe as a member or patron I
197:45 - like post my thoughts on that as I go in
197:47 - the slack channel but you don't need to
197:49 - you can just subscribe to the channel
197:51 - and click the alarm bell and pretty sure
197:53 - it gives you a notification when I
197:54 - schedule it now you usually try to do
197:56 - that at least 24 hours in advance so one
197:59 - day next week I will be it might
198:02 - actually just be Friday the very last
198:04 - day of the week but hopefully I'll do it
198:05 - sooner I'll be doing one last livestream
198:07 - for the month of June and it's TBD
198:09 - what's gonna happen for July in August
198:12 - but I will be working on it's actually
198:15 - would be a good thing if I can't live
198:18 - stream for July and August and I'll tell
198:19 - you why this book really needs a new
198:26 - edition it needs a new edition to be
198:30 - ported over to JavaScript and it needs
198:32 - new material about neural networks and
198:34 - neural evolution and I think I could
198:36 - actually accomplish that in July in
198:38 - August if I'm not live-streaming and I
198:40 - could use that time that I would be to
198:42 - be just like working on the book because
198:43 - I've said this for like three years and
198:45 - I've basically got nowhere so I'm gonna
198:47 - work on this on Monday and this is what
198:50 - I will consider as a benefit to people
198:52 - who are members or patrons I will send
198:54 - you early drafts and four
198:56 - of the new book and hopefully the new
198:58 - book will come out until always be
199:00 - available for free it's just if you want
199:02 - the early versions getting those out
199:04 - over the summer all right I know but you
199:06 - could always just unsubscribe for me if
199:08 - I'm not producing enough content that's
199:10 - fine with me too okay thank you everyone
199:13 - and by the way so if it's unclear you
199:16 - can just the book is available for free
199:18 - if you just slide these to zero of
199:20 - course if you're able to support that's
199:21 - great or and it's also there's a HTML
199:24 - version of it but it's pretty out of
199:25 - date and I need to fix it up okay people
199:29 - are asking about what I do outside of
199:31 - YouTube live streaming so I will just
199:34 - mention this before I go I teach at a
199:37 - program why is the internet down did I
199:39 - lose the internet or is like the ITP
199:41 - website down No who knows I teach at a
199:53 - program there's two programs that issue
199:56 - ITP is the graduate master's program ima
199:58 - is the undergrad program there's a Tisch
200:00 - School of the Arts so correct I have
200:02 - definitely not a computer science
200:04 - professor I don't even know what I am
200:06 - but I do teach at a university a very
200:08 - big institution New York University and
200:11 - that's where I actually am right now and
200:13 - and this whole program is moving to a
200:15 - new building in Brooklyn and that's
200:16 - actually why I'm this face is going away
200:18 - in a new space is being set up where I
200:20 - can hopefully have some new equipment
200:21 - and stuff so stay tuned and I will see
200:25 - you in the future all right goodbye
200:28 - everybody I will play you out with this
200:33 - dot song after the Perlin noise silence
200:36 - good let's play that one first
200:37 - so this is random this is noise Perley
200:40 - noise that is in the core random
200:42 - algorithm the actual random algorithm
200:45 - itself those numbers aren't related at
200:47 - all you pick like I'm picking random
200:49 - numbers between zero and ten nine two
200:51 - seven six one nine four eight nine two
200:56 - one three I pick nine a lot apparently
200:58 - but with curly noise I might pick
201:00 - numbers like this two three four three
201:03 - four five six five four five
201:06 - seven five six seven five six seven
201:09 - eight nine eight seven this is like boys
201:15 - [Music]
201:26 - like girls and boys before to depart
201:30 - [Music]
201:34 - with curly noise I might pick numbers
201:36 - like this
201:37 - [Music]
201:44 - by purling noise that is totally noise
201:46 - so this is hurling noise that is Hurley
201:48 - no this is this is Hurley noise that
201:50 - it's Hurley no so this is Hurley noise
201:51 - that is hurtling know her Perlin noise
201:53 - that it's Hurley more this is Hurley
201:55 - noise that it's Hurley no this is this
201:56 - is Hurley noise that it's Hurley so this
201:58 - is Hurley noise that is her early early
202:00 - early early early early that is
202:05 - currently this is hurtling that is early
202:07 - early early early early it is but week
202:16 - early noise I might pick numbers like
202:18 - this
202:19 - [Music]
202:31 - [Music]
202:33 - this is like a noise I always forget
202:42 - [Music]
203:07 - [Music]
203:19 - [Music]
203:33 - this stock this stock it's fun never
203:37 - forget to this stop I'm gonna do this
203:39 - stuff this stock this dad this star this
203:41 - stop song never forget the Vista
203:45 - [Music]