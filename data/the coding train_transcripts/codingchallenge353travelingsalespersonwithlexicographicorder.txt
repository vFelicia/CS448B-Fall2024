00:00 - hello and welcome to part three of an of
00:02 - a coding Challenge and I don't know
00:04 - they're individual coding challenges or
00:05 - part of a sequence of coding challenges
00:07 - who knows but in this particular one
00:09 - what I'm going to do is I'm going to
00:11 - look at this traveling salesperson
00:13 - problem again a list a random list of
00:16 - eight cities and right now the program
00:18 - is just randomly trying possibilities to
00:20 - see if it can find the best one and I'm
00:22 - going to look at how we could combine
00:24 - that
00:25 - with this thing I worked on in the
00:27 - previous challenge which is looking at
00:30 - every permutation of a list of numbers
00:33 - or letters sorting in lexical order
00:34 - which is like an alphabetical order type
00:37 - thing so here you can see this is
00:38 - running uh it's going to take a very
00:40 - long time to check every possibility but
00:41 - I want to take this code and I want to
00:43 - combine it with the traveling
00:44 - salesperson problem to check every
00:46 - possibility in order which I think will
00:48 - be an interesting thing to do so let's
00:51 - let's look at that so the first thing
00:53 - that I want to do and honestly there's
00:55 - probably I can tell you for sure that
00:58 - after I finish this I could easily make
01:00 - another 10 or 15 minute video that's
01:02 - just kind of like refactoring the code
01:03 - to sort of organize it nicely in my you
01:06 - know hyper desire to have like things
01:08 - always organized but I'm going to just
01:10 - I'm going to let it be loose in this
01:11 - video so I'm just going to like copy
01:13 - paste code around move stuff around and
01:15 - kind of use stuff together in a bit of a
01:16 - halfhazard way just to demonstrate it
01:18 - working and then uh you should remind me
01:20 - when I publish the code I'll make a nice
01:22 - neat version for you with some comments
01:23 - and things organized in a way you could
01:25 - kind of compare those two but anyway
01:26 - let's just keep moving and so what I
01:28 - want to do is I want to basically start
01:31 - taking things so I want to take this
01:33 - array vals from The Lex lexical order
01:37 - example and I want to bring it into the
01:39 - traveling salesperson example and if you
01:41 - haven't watched the previous two videos
01:42 - you don't need to but you might want to
01:44 - go back and see how where the how these
01:45 - pieces of code were developed um and
01:48 - what I actually don't want to do here is
01:49 - I don't want to initialize it hardcode
01:52 - it and I think I'm goingon to call this
01:55 - order now because really this is going
01:56 - to be the thing that's keeping track of
01:57 - the order for me and I need a number for
02:01 - every city so all I need to do add here
02:03 - is right here in this Loop is say orders
02:05 - index I equals I so I just create an
02:08 - array oh and I need to initialize it as
02:10 - an array so in JavaScript I've got this
02:12 - array and the array is going to start if
02:13 - there are eight cities and let's just do
02:15 - it with um four cities just to see it's
02:17 - going to be 0 one two 3 right 0 one two
02:20 - three four cities okay so that's good so
02:23 - that's the first step now what I want to
02:24 - do is I'm actually going to take this
02:26 - entire
02:27 - algorithm and I'm going to put it in a
02:29 - separate function I'm just to say copy
02:32 - and I'm going to go into my lexical one
02:34 - and I'm going to just go to the bottom
02:36 - and I'm going to add a lot of line
02:38 - breaks just paste it down here and I'm
02:40 - just going to say here like ah uh this
02:43 - is my lexical order
02:46 - algorithm and I'm going to write here
02:50 - I'm going to call this a function now
02:52 - next
02:53 - order so I'm going to put all of this in
02:55 - a function called Next order could be
02:58 - just called Next or next ordering and
03:00 - what this is going to do is it's going
03:02 - to take actually this is this is going
03:04 - to be this is much easier than I even
03:05 - imagined and maybe I don't have to
03:06 - refactor this that much I I called it
03:09 - order instead of Val so I'm going to
03:10 - have to be I could probably do a find
03:11 - and replace or something but I'm just
03:12 - going to kind of eyeball it for a second
03:14 - and put order everywhere now uh so I now
03:17 - have this algorithm and what I want to
03:20 - do is I want to make my canvas taller
03:22 - I'm going to make it 600 but I'm still
03:24 - going to only pick points in the top and
03:27 - then what I want to do is I want to use
03:29 - this quick little algorithm to write
03:32 - text to the screen so I can see I want
03:35 - to put this at the very end and I know
03:36 - I'm doing this kind of quickly so I'm
03:38 - kind of tring to talk to you through
03:39 - what I'm doing it'll make more sense
03:41 - once you see it um and this again is
03:43 - order I'm just combining the Cod I'm not
03:46 - actually logically combining the code
03:48 - I'm just taking all the code from one
03:49 - example and putting it in places in a
03:51 - previous example and then what I want is
03:54 - to have this be at like the bottom of
03:55 - the window somewhere down here and if I
03:57 - hit refresh whoops I'm in the wrong
03:59 - example uh oops I got to go to uh Local
04:03 - Host and find that example again uh tsp
04:07 - lexical and I have some errors here so
04:10 - orders is not defined sketch. JS
04:13 - line5 uh it's called order thank you and
04:16 - you can see okay so now so okay so what
04:19 - I have now is the random selecting and
04:23 - the order being displayed below o and by
04:25 - accident because I have a stroke in a
04:27 - fill I have these nice outlined
04:28 - characters that make me me kind of happy
04:30 - um so now all I need to do in draw is
04:34 - say next order like in draw I want every
04:38 - time I want to try the next
04:40 - possibility so vals is not defined
04:43 - sketch. JS line numers 97 that's a place
04:45 - where I forgot it which would make sense
04:48 - for me to have done a find and
04:50 - replace 109 but this is a perfectly fine
04:53 - way of finding those spots uh 119 boy I
04:56 - really did a terrible job I could see I
04:59 - can see some other spots now I I barely
05:01 - got anything uh oops and I don't want
05:04 - this anymore that was the drawing
05:06 - part so we can see here now it looks
05:09 - like it's working right because it looks
05:11 - like it's trying every possibility here
05:13 - but it's not actually using this order
05:15 - as the order of things for the traveling
05:18 - salesperson uh order of cities so now I
05:21 - need to instead of randomly picking an
05:23 - order of cities I need to try the order
05:26 - based on what's here I want to try City
05:28 - three then two then one then zero okay
05:30 - here we go so now what I want to do is
05:33 - where so where do I get the order
05:35 - from
05:38 - um the order basically so this is kind
05:41 - of an interesting thing that's happening
05:42 - here my what I'm going to do is change
05:45 - the pro right now I was actually moving
05:47 - the vectors around in that cities array
05:49 - but the cities or the array now is no
05:51 - longer something that I ever need to
05:52 - touch the thing that I'm keeping track
05:54 - of is actually the order array so I'm
05:57 - going to redo this first by just saying
06:00 - um what I want is to go through every
06:06 - single element in order actually so here
06:09 - is me just drawing all the cities so
06:11 - this is actually not the path so this I
06:12 - can leave I'm just drawing a circle
06:13 - where every city is and I'm going to
06:17 - take out the best ever thing for a
06:19 - second because I'm GNA have to adjust
06:20 - that but what I want to do here is not I
06:23 - want to go through that order array and
06:26 - the particular City that I want to draw
06:31 - City n for lack of a better word is at
06:33 - order index I so I want to go through
06:35 - the order array and set the order as
06:38 - three then two then one then zero
06:39 - whatever is in there so now the index
06:41 - that that's that order array essentially
06:44 - becomes a lookup so I I think this might
06:47 - be I have this sort of like gut feeling
06:49 - even though you're just somebody on the
06:50 - internet watching a video and I'm a
06:52 - random person in a room talking to
06:54 - myself that that this is not entirely
06:56 - clear so let's clarify this these are
06:58 - the cities
07:00 - quala Lampur
07:02 - Rio
07:04 - uh Oslo I'm trying to think of a diverse
07:06 - set of cities from around the world um
07:09 - so those are the cities but I'll just
07:11 - call them uh a b and c and this is the
07:16 - order which is an array that has
07:18 - something like 1 two
07:20 - 0 so a b c what I want to do is start
07:27 - here and say okay the first city is one
07:30 - which means it's B so I'm here right now
07:33 - then the next city is two which is C
07:36 - which means I travel to here and then
07:38 - the next city is zero which is here
07:40 - which means I travel to here so this
07:42 - never changes this is the thing that's
07:44 - changing around and what we use to
07:46 - inform the order we draw
07:49 - here okay now I've come back and uh this
07:54 - should hopefully make a little more
07:55 - sense to you and I could run this now
07:57 - and we can see it's doing every
07:59 - possibility now I'm not getting the best
08:01 - possibility cuz I actually fixed that
08:02 - testing yet but you can see that it's
08:05 - kind of checking every possibility and
08:06 - drawing in that order and I might be
08:08 - able to if I reduce the frame rate
08:11 - hopefully we could see that kind of
08:13 - happen um as you see it checking each
08:15 - order and then going to the next one um
08:18 - and there's some other weird goofiness
08:19 - going on the way that I'm um because I
08:22 - haven't gotten to the next step so the
08:24 - thing that's the best ever now is no
08:27 - longer actually a copy of the array of
08:29 - the C it's a copy of that of a
08:31 - particular order so best ever distance
08:35 - can ah ah Cal distance has to change
08:39 - because now when I calculate the
08:41 - distance I need to calculate the
08:42 - distance between these cities based on a
08:45 - particular order so let's go to that
08:47 - calc distance function I'm going it's
08:51 - going to be a particular order and now
08:53 - as I go through the order I'm going to
08:57 - say uh City uh City
09:00 - a is points
09:03 - order index I
09:06 - woo right because I need to get go into
09:09 - that array and find the one that's at
09:13 - the spot in the order this this would
09:16 - let's write this in two lines of code
09:18 - city a
09:21 - index is order index I and then the
09:24 - actual City and let's
09:27 - just uh no let's write is the actual
09:31 - point at that spot right so I need to
09:34 - use that order to look up what city am I
09:37 - at and then I want to do that with B
09:41 - City B index City B City B index and
09:44 - that's I + one remember that's the next
09:47 - one in the
09:49 - order and then I want to get the
09:51 - distance
09:53 - between
09:55 - uh City A's X City's a is
10:01 - y City BX I like have to like think
10:04 - about this while I'm doing it City b y
10:08 - okay that makes sense so we've got to
10:09 - use that order again now to calculate
10:11 - the distance so it became a little more
10:13 - complicated and of course you could
10:14 - condense this code and I might think
10:15 - about it later of a different way to
10:16 - write it but I'm writing it in the most
10:18 - number of steps to try to make it as
10:19 - clear as possible okay so now we have
10:21 - that distance so that works I have
10:25 - calculated the distance between these
10:27 - cities based on this order and if it's
10:31 - the record distance I want to save not
10:33 - the cities but the
10:35 - order then I'm drawing the cities based
10:40 - on uh based on sorry the uh I'm just
10:44 - drawing all the cities then I'm based on
10:45 - it drawing them based on the order that
10:47 - I'm currently checking and then now I
10:50 - want to draw them I want this exact same
10:53 - Loop but I want to draw the best
10:55 - one so instead of getting the order from
10:58 - the current order array I want to get it
11:00 - from the best ever array and we should
11:03 - see now if I run this and I've done it
11:05 - correctly oops length of undefine
11:07 - sketch. JS line 86 what problem have I
11:11 - done
11:13 - uh uh order is undefined ah I must have
11:16 - I have a second place where I'm
11:18 - calculating distance based on the order
11:21 - and swapping oh no forget about this
11:23 - swapping get rid of the swapping that's
11:26 - I don't want to swap I'm not ever
11:27 - swapping that's that would have been a
11:28 - big bug if I left that in there by
11:30 - accident found that
11:33 - luckily uh am I not going to next order
11:37 - no okay so what's going on I got to
11:39 - debug this do I have no Loop somewhere
11:41 - I'm back it actually was working I just
11:43 - was impatient my frame rate was at one
11:45 - but I do have an error here sketch. JS
11:48 - at line
11:52 - 48 what's happening line cities and
11:56 - uh okay so n
12:01 - is okay so why did I get an
12:05 - undefined
12:07 - uh so hold on let's look at
12:10 - cities has four things in it let's look
12:13 - at order
12:16 - 0213 let's look at best
12:19 - ever ah something's wrong still for
12:22 - whatever reason I'm not getting the
12:24 - order the numbers in best ever so let's
12:27 - see where let's see everywhere I'm doing
12:28 - something with best ever there order.
12:32 - slice ah I still had cities. slice here
12:35 - so this has to be order and so now we
12:37 - can see here we are checking every
12:39 - possibility one frame at a time and you
12:43 - can see the current thing that I'm
12:44 - checking is drawn in white and actually
12:46 - that should be after so you can see it
12:49 - um um just so you can see it on top I'm
12:52 - just going to switch the order round for
12:54 - a
12:55 - second uh of the drawing stuff and I'm
12:58 - going to make the frame rate uh five
13:01 - just so you can see that a little
13:03 - better so you can see it trying every
13:06 - possibility and essentially it'll get to
13:07 - the end and um when it gets to the end
13:11 - you know I kind of in a way like just
13:13 - drawing the current order I don't have
13:15 - so this could be a CH this is a
13:16 - challenge for you guys to sort of
13:17 - visualize this better and actually I
13:19 - have a I have an idea I have a better
13:21 - idea so what I'm going to do now is
13:24 - actually uh
13:26 - translate zero height divided by two I
13:29 - just want to draw these in different
13:31 - places so uh and uh whoops for the uh
13:36 - second
13:39 - one and then the uh where I'm drawing
13:41 - the text is
13:43 - actually uh just by two minus 50 so what
13:48 - I what I what I think is work would work
13:50 - better here is for you to see um and I
13:53 - don't think actually to be honest like I
13:54 - don't feel a huge need to draw the
13:56 - permutations but you can see at the
13:58 - bottom I'm trying every permutation and
14:00 - the current best one is at the top and
14:03 - was it really the last
14:06 - one let's so let's run this with uh let
14:09 - me take out um no let me just run this a
14:12 - few times I wonder if that's a bug in my
14:17 - code no okay good that was just a
14:19 - coincidence so here the last one is not
14:21 - the best one and what we can do first of
14:24 - all I want to take out uh console I want
14:26 - to add a couple things to this I want to
14:28 - take out
14:33 - um I want to get rid of this test to see
14:36 - if that was working and I want to
14:40 - um uh I want
14:43 - to sorry I was looking at the chat for a
14:46 - second I want to make the total cities
14:48 - uh eight and let's take the frame rate
14:51 - up to as fast as it'll go and we can see
14:54 - here it is trying every single
14:56 - possibility and every time it finds one
14:58 - that's better it it puts it up top so
15:00 - you can see I don't know maybe that's
15:00 - the best one actually it might have
15:02 - found it and at some point it's going to
15:03 - stop now I don't know where it is so one
15:06 - thing I would like to do is um is be
15:10 - able to uh calculate the percentage uh
15:13 - finish now the thing
15:17 - is
15:19 - uh the thing is we might run into so
15:22 - this is kind of done and you could stop
15:25 - you could stop watching this video and
15:27 - kind of take this and think of a more
15:28 - creative way to visualize this or do
15:30 - something interesting with it um but I
15:32 - just want to have a sense of how far I
15:33 - am to being done so one thing I want to
15:36 - do is I want to know I want to know uh
15:40 - total
15:41 - permutations I want to calculate that
15:43 - total
15:46 - permutations equals I have no doubt this
15:49 - is not a function in JavaScript math.
15:52 - factorial total cities now what's the
15:55 - chance that that gives me something yeah
15:57 - math. factorial is not a function
15:59 - so let's write our own I'm just going to
16:01 - go to the bottom here writing a function
16:04 - for factorial merits its own video but
16:06 - I'm going to do it uh really quickly
16:09 - here uh and just say that if n equals 1
16:14 - return one otherwise return n * n minus
16:20 - one and that's uh not right n *
16:25 - factorial of n minus one right so
16:27 - factorial is five a five is 5 * 4 * 3 *
16:30 - 2 * 1 factorial of 4 is 4 * 3 * 2 * 1 so
16:33 - factorial of 5 is 5 5 * 4 factorial
16:37 - which is 5 * 4 * 3 factorial which is 5
16:40 - * 4 * 3 * 2 factorial which is 5 * 4 * 3
16:43 - * 2 * 1 factorial and one factorial is
16:45 - equal to one and this is a little
16:47 - recursive function which just does that
16:49 - so um I think I have another video where
16:51 - I actually go through that in detail
16:52 - I'll try to link to that here but so we
16:54 - can say total here uh with eight is
16:59 - factorial of totals uh so I'm going to
17:02 - say total permutations I just want to
17:04 - see what number I get
17:07 - 40,320 so percentage I can also say now
17:11 - I can have uh account going and I can
17:15 - say where I can say in draw our next
17:19 - order really I can say uh count Plus+
17:22 - and maybe that should go at the end but
17:23 - I'm feeling lazy right now and I can say
17:26 - now what I want to actually do is is
17:30 - calculate a
17:32 - percent which is 100 times the count
17:35 - divided by the total
17:37 - permutations and I want to see
17:40 - um
17:44 - perent
17:46 - completed and let's make that
17:51 - um let's make that a little bit smaller
17:54 - uh it'll just be there at the bottom and
17:56 - see what happens uh and you know it
17:59 - might be nice here to uh number format
18:01 - that I think P5 is a function number
18:04 - format NF where I can say just give me
18:06 - two decimal places to look at and we can
18:08 - see now and and you know I could say uh
18:13 - percent so even with eight you can see
18:16 - how long this is going to take doing
18:17 - only one possibility 60 frames per
18:20 - second let's at least uh make sure that
18:22 - this is kind of working correctly by
18:23 - reduce this number to
18:26 - five and we can see here we're going to
18:29 - get through 100 and my my counting is
18:31 - off and where I'm calculating in no Loop
18:33 - but you get the idea here so now I'm
18:35 - able to see this is now me checking
18:38 - every single possibility and getting the
18:40 - fastest one let's look at
18:42 - six and just out of curiosity is this
18:45 - program even going to run if I go up to
18:48 - like 20
18:49 - cities oh something is ABS oh you know
18:51 - why it's not working is because 20
18:53 - factorial is a number too big to store
18:55 - in a variable and I would need some sort
18:57 - of JavaScript library I think for big
18:59 - numbers I think that's particularly
19:01 - correct because this I ran into when I
19:03 - was working in my Java example on my
19:06 - Java example um I needed to use Longs
19:09 - and I even you I might have even needed
19:11 - to use like a big number Java library
19:13 - but that's only for the percentage
19:15 - calculation because I don't actually
19:17 - need to know the total number of
19:18 - possibilities to check every possibility
19:20 - I just need to check every next one so
19:22 - this 8% calculated is absolutely wildly
19:25 - incorrect but uh I think if I do 10 am I
19:28 - going to get something 10 I'm still
19:29 - going to get something about right
19:30 - because that's a reasonable several
19:32 - million so you can I encourage you to
19:33 - run this on your own for a while see if
19:35 - it comes up with something that looks
19:36 - right um and but you know honestly what
19:39 - I would like is can you make some kind
19:40 - of interactive system that allows users
19:43 - to place points can you make a game or a
19:45 - simulation where things are following
19:46 - all the points can you actually have it
19:49 - act out people searching for Pokemon or
19:52 - sales people walking to sell things or I
19:54 - know you you should music playing as you
19:56 - should be more creative with this okay
19:58 - thanks for watching I've got one more
20:00 - left to do which is do exactly this but
20:02 - use a genetic algorithm to evolve the
20:04 - best path thanks for watching