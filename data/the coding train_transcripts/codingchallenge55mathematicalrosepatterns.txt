00:00 - hello welcome to another Cody train top
00:03 - coding challenge and in this challenge
00:06 - oh this train is really loud too please
00:09 - pull out of the station out on the train
00:11 - our slogan because one thing that I
00:13 - really like are flowers and there's the
00:15 - wonderful mathematical algorithms that
00:17 - you can get to make these beautiful rose
00:19 - like patterns and you can see even here
00:22 - all sorts of different possibilities so
00:24 - I've been really interested in tiling
00:25 - and symmetry and I'm hoping to do many
00:27 - more videos about different topics like
00:29 - that and this is kind of along those
00:31 - lines so this is actually something that
00:33 - I could do with just this incredibly
00:34 - simple formula where R equals cosine of
00:38 - K times theta so what does that's what
00:42 - Camila be we're going to have to figure
00:44 - that out first so out wrong button over
00:46 - here for a second so here's the thing
00:47 - this was same except I'm gonna code
00:49 - which I have not done before hopefully
00:51 - it's going to work it's built entirely
00:53 - around this idea of polar coordinates so
00:56 - if I have a Cartesian space meaning a
00:59 - plane a flat plane like this white board
01:01 - not playing today's flag in the air a
01:04 - plane like this white board and I have a
01:05 - point in the plane you know this is the
01:07 - same as I might have a point in a in a
01:10 - canvas in all my videos in computer
01:14 - graphics in the programming we usually
01:15 - think of this point as an XY location
01:18 - but actually right this is its X
01:23 - location and this is its Y location but
01:27 - another way and this is known as a
01:29 - Cartesian coordinate name for the French
01:31 - mathematician or guy named a cup okay
01:34 - now how did I do French borders now I
01:37 - just sounded like a completely
01:39 - ridiculous person now you could also
01:42 - think of this point as a distance from
01:44 - the center known as our radius or
01:47 - distance from the center and an angle
01:49 - relative to the x axis this R comma
01:54 - theta is known as a polar coordinate so
01:59 - here's the thing remember you know those
02:02 - functions sine and cosine so cos Toa
02:06 - sine is opposite over hypotenuse cosine
02:08 - is adjacent over hypotenuse
02:10 - tangent is opposite over adjacent here's
02:12 - our triangle here's this angle so sine
02:17 - of the angle equals opposite or Y
02:21 - divided by hypotenuse or our cosine of
02:25 - the angle equals sorry X divided a day
02:29 - since which is x over hypotenuse which
02:32 - is our I could write these in another
02:34 - way and say y equals R times sine of
02:39 - theta and x equals R times cosine of
02:44 - theta
02:44 - in other words cameras over here but you
02:47 - can still see me in other words I can
02:49 - think my mind can face in terms of polar
02:51 - coordinates I can calculate ours and coz
02:53 - lates Thetas and do all sorts of stuff
02:55 - and yet I can draw something t5 or
02:58 - processing whichever experiment that I
03:00 - would use only except only except in the
03:05 - ellipse function and the point function
03:07 - the vertex function Cartesian
03:09 - coordinates so this is a way of neat
03:10 - converting from polar which are going to
03:12 - think it to Cartesian so let's come back
03:14 - and that's actually what I want to do
03:16 - here is this ideas use this formula as a
03:20 - way of calculating a radius based on an
03:23 - angle the radius how far from the center
03:26 - is going to be cosine times K some
03:28 - constant and then this formula here is
03:31 - if this is our x equals R times cosine
03:34 - of theta y equals R times sine of theta
03:37 - so we should be able to do this
03:38 - relatively quickly I kind of wish that I
03:39 - was doing this in processing for some
03:40 - reason but I'm doing in the p5 up I'll
03:43 - make a processing version and post a
03:45 - link to that code in the description as
03:46 - well okay so let's just say for the sake
03:49 - of argument that I'm going to write a
03:52 - loop because I think this is probably
03:53 - easiest way to do it for the moment and
03:55 - I'm going to write a loop where I can't
03:57 - write 2 pi where I have a variable
04:00 - called a which starts at 0 goes all the
04:02 - way up to 2 pi and I don't know I'm
04:04 - going to increment by some arbitrary
04:05 - amount I could be more thoughtful about
04:07 - how I do this and so now just to see
04:10 - that this works I'm going to say a bar x
04:13 - equals let's make let's make up an R Bar
04:17 - R equals 100 bar x equals R times cosine
04:21 - that angle far y equals R times sine of
04:23 - that angle and now let's just draw a
04:25 - point stroke 255 what that console dot
04:29 - log come from a stroke wait for and then
04:34 - a point X comma Y now here's the thing
04:39 - this is all predicated on the notion of
04:42 - having these points around the point of
04:44 - origin but the point of origin by
04:46 - default on a canvas is the top left so
04:48 - actually before I do any of this I want
04:49 - to use translate to put that origin in
04:51 - the center the top of this marker went
04:54 - down over here I'm back okay so now what
04:58 - I want to do is add translate to the
05:02 - center which is with divided by 2 height
05:05 - divided by 2 and then let's see what we
05:10 - got there we go so you can see it looks
05:14 - I got a circle so something's working
05:16 - correctly here and you can see here if I
05:18 - say go up by point one we can see you
05:22 - know I'm drawing all these little points
05:24 - this is just a simple demonstration of
05:25 - polar to Cartesian transformation but
05:28 - now let's go back and let's say let's go
05:32 - back to that Wikipedia page and let's
05:34 - try K equals 7 let's try K equals 7 so R
05:39 - equals cosine of K times theta or the
05:43 - angle that is my variables X R equals
05:47 - cosine of 7 times a now let's try this
05:54 - hey what happened there so I wonder if I
05:57 - need to really expand things out or just
06:02 - need to quit there we go so I just need
06:09 - to expand things that enough what I
06:10 - might want to do now is have a bit more
06:14 - gradation and so I could start to see
06:17 - this pattern forming and what I can
06:19 - actually do that would make more sense
06:20 - now is for me to say begin shape and
06:25 - shape
06:29 - forget about the stroke wait I'll just
06:31 - make the stroke weight one and set these
06:33 - as vertices so what this does instead of
06:35 - drawing that dot at every spot I'm
06:37 - saying begin to shape and the shape and
06:38 - connect everything and then maybe at the
06:40 - Animus they close and we can see there
06:43 - we go look at my beautiful Rose cider so
06:46 - in a way we're done that was like the
06:48 - quickest coating challenge with no
06:51 - editing whatsoever that never happened
06:53 - but let's make this worse I should just
06:56 - quit behind the head it's like that was
06:58 - like eight minutes or something less
07:00 - than that even let's let's see what we
07:03 - can do so let's just try some of these
07:04 - other let's try some of these other
07:06 - let's try k equals four and I should
07:11 - probably make this let's make this a
07:13 - kind of global variable for right now
07:15 - I'll just put it here in draw kick
07:19 - actually what I really should do is make
07:21 - that something that I adjust with a
07:22 - slider no my goodness that's crazy so
07:24 - let me take K equals four and change
07:27 - this to K look in the wrong place we
07:32 - think there we go
07:33 - with K equals four okay let's try some
07:36 - of these patterns so for example I like
07:38 - this one which is like five with k with
07:43 - k equal so you could see this K equals n
07:46 - divided by D this is a table 5/6 or 5/8
07:53 - let's try one of those so let me come
07:55 - back into the code and add a variable
07:57 - called K and actually just put K down
08:01 - here and then what I can do is so this
08:05 - should be the same for one thing I want
08:08 - to do is get rid of the fill just so I
08:11 - can see it like this and then what I
08:14 - want to do is change this to what I say
08:18 - it was 5/8 okay so this I think is right
08:23 - and I have a problem with this and I
08:26 - think the issue is that I need to now go
08:29 - around the loop multiple times so I
08:32 - wonder if there's a way to calculate
08:33 - that exactly but I'm just going to
08:35 - multiply this by 10 and we can see there
08:38 - we go
08:39 - so if I go around the loop mobile times
08:40 - we get this beautiful nice tiling
08:42 - pattern maybe way
08:43 - too many times I'm not sure what this
08:44 - extra line is doing here it's like
08:45 - connecting back to the center so I'm
08:47 - sure I could clean this up in some ways
08:48 - but I think what would be interesting to
08:50 - see right now very quickly is if I add
08:53 - the Dom library and if I say var slider
09:02 - slide our equals create slider and let's
09:07 - give a range between 1 and 10 starting
09:11 - with 4 and incrementer a 2.1 what I
09:18 - should see is now I can say K equals
09:23 - slider value now let's give this a try
09:26 - so now as I change the slider we can
09:30 - sort of see different possible shapes
09:32 - and possibilities as I move it around so
09:34 - anyway so I don't know probably a
09:37 - precise way you could calculate you
09:40 - could calculate how many loops you need
09:42 - alka in the chat suggests actually like
09:44 - looking at this that you need depending
09:46 - on what this D value is the denominator
09:48 - of this practice how many times you need
09:50 - to go around the loop which makes a lot
09:51 - of sense actually because you know how
09:54 - you're multiplying by PI you'll need to
09:56 - hit all the sort of angles to get all
09:58 - the positions but anyway so we could
10:00 - sort of test that I'm going to take the
10:03 - slider outfits for a second and say
10:05 - multiply by the denominator value and we
10:10 - can see yeah there we go now that's
10:11 - perfect so if that's definitely right
10:13 - that you need D loops and so we could
10:17 - change this to B so this is exciting
10:19 - because what we could do actually have
10:20 - two sliders we could say D the
10:23 - denominator is 8 the numerator is 5 and
10:27 - I could say slider D slider n slider D
10:34 - equals some value between 0 1 and 10
10:38 - starting at 5 and slide our end some
10:46 - value between 1 and 10 starting at 5 and
10:49 - then I could say here D equals slider DS
10:55 - value
10:56 - and equal slider and net value oops
11:00 - and I could say K equals D no numerator
11:05 - divided by denominator and then I could
11:07 - keep D right here and K is here I don't
11:11 - and I think now you would have yeah you
11:16 - can see here the different types of
11:18 - patterns I'm getting which I think are
11:20 - correct and probably match now it would
11:23 - be nice for me to report it would be
11:25 - nice for me to actually report what
11:27 - those values are and then double check
11:28 - them but I think this is rose
11:31 - mathematics pedal stuff so how can you
11:33 - how can you Betty you know play with
11:36 - this create a whole bunch of them that
11:38 - have it more from one to the other fill
11:40 - it with colors pile them all the next in
11:42 - a pattern I'm sure I'm sure there are a
11:45 - lot of possibilities yes
11:47 - I should probably make the step size
11:49 - smaller which would also give me maybe a
11:50 - more fluid outcome the chat is giving
11:53 - you lots of great suggestions give me a
11:55 - more fluid view of this and we can see
11:58 - oh look at this
11:59 - we're going to get some weird funny
12:00 - business here for strange decimal
12:02 - numbers but you can sort of see one and
12:04 - I have to clean up this thing where ends
12:06 - doesn't end it back at the beginning so
12:08 - anyway so there are a lot of wonderful
12:10 - possibilities here I hope you enjoyed
12:12 - this rose mathematics challenge if you
12:14 - make some stuck with it share it with me
12:17 - and I would love to see the world filled
12:20 - with flowers that's what I my dream is
12:22 - all these computational flowers so make
12:23 - some gifts make some images tweet them
12:25 - show them the at shipment and I'll see
12:27 - you off and the next train is leaving
12:31 - the station
12:37 - [Music]