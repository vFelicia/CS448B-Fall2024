00:06 - hello good morning welcome
00:09 - toing rainbow with
00:14 - me now uh I'm here again live streaming
00:18 - I hope this is working and before I get
00:22 - started I just want to kind of like like
00:24 - awkwardly
00:26 - bouncing um can you hear my voice this
00:28 - time can you hear the music also and is
00:31 - the balance between those two things
00:33 - okay please let me know in the chat
00:37 - um so welcome uh my name is Dan I'm here
00:41 - again this morning at the school for
00:43 - poetic computation here in the West
00:45 - Village of New York
00:47 - City I think I'm going to stop the music
00:50 - um and I'm broadcasting live uh to do a
00:53 - coding tutorials and other goofy
00:56 - embarrassing weird things that I can
00:58 - think of or not think of to do today
01:00 - um so uh if you happen to be watching
01:02 - this as an archive on YouTube I
01:04 - recommend that you check the video
01:05 - description uh where you will find uh
01:08 - time codes to where various things
01:09 - happen during the course of this video
01:11 - also whatever happens in this one to two
01:13 - hours that I'm here live streaming um
01:16 - video tutorials will get edited out of
01:17 - this content as separate videos so if
01:19 - you're watching if you're sitting here
01:21 - watching and looking at this there's
01:22 - this 2hour video I can't possibly
01:24 - stomach this uh you can turn this off
01:27 - and go outside and uh uh have a bike
01:30 - ride or um a nice um you know piece of
01:33 - fruit and enjoy the sunshine if there's
01:36 - Sunshine where you live or you can also
01:38 - if you wanted to watch something on
01:39 - YouTube you could look for the edited
01:41 - videos in my YouTube channel so I'm
01:42 - going to take a look at the chat balance
01:44 - is good everything sounds great awesome
01:47 - um so let me talk a little bit about
01:49 - what I am planning to do today so I have
01:53 - been um doing a series U I've been doing
01:56 - many different series but most recently
01:58 - I've been doing a series about working
02:00 - with sound a uh working with sound and
02:03 - programming and coding and in particular
02:05 - in JavaScript in the browser excuse me
02:07 - using the p5g Sound Library so I'm going
02:09 - to continue that today I was very lucky
02:12 - to have a uh viewer contributor
02:15 - colleague friend internet social media
02:17 - person that I have been in contact with
02:19 - who created this wonderful uh website in
02:22 - GitHub repository I'm showing you the
02:23 - link right here it's
02:26 - sf-x doxyz arof far of
02:30 - st.ca uh created this sound effects
02:33 - repository um and there are all sorts of
02:36 - fun my
02:39 - goodness that one's actually not scary
02:41 - but uh a little free and open open
02:45 - source in away sound effects you can use
02:48 - and I can say to you hello and welcome
02:51 - to with
02:54 - me power um and uh anyway so you I got
02:59 - lost in my own thoughts of playing with
03:01 - these sound effects so uh at some point
03:03 - soon by the way I'm planning to set up a
03:05 - whole separate soundboard that I can
03:07 - just like press buttons on and play so
03:10 - if you have any fun sound effects you
03:12 - think I should use during these live
03:13 - broadcasts please uh make them and send
03:16 - them to me they can even be
03:18 - bastardization of my own voice uh messed
03:20 - up or whatever okay um so but anyway the
03:24 - I'm showing this to you but what I'm
03:26 - very excited about doing today in this
03:27 - particular live stream is actually
03:30 - putting this away because what I want to
03:32 - do today is talk about sound synthesis
03:35 - how to make sound from nothing so here's
03:37 - a way you could do sound
03:44 - synthesis and you can see why I'm here
03:47 - doing tutorials about coding because
03:49 - really all I wanted to do was be in the
03:50 - musical theater but I I I can't
03:53 - sing I try I could sort of play the
03:55 - piano rather poorly I played violin for
03:57 - a while I love you know Musical theat
03:59 - theater it's one of my favorite things
04:01 - someday I'll find a way to bring this
04:03 - all together uh which is maybe today but
04:05 - uh um anyway sound synthesis that's a
04:07 - thing that you do with your your voice
04:09 - and you make your vocal cords vibrate
04:11 - and it makes the air vibrate and there's
04:13 - this sort of wave that's a vibration I
04:15 - want to talk about how that works as
04:17 - much as I can possibly understand it in
04:18 - my own head uh and look at code examples
04:22 - to make that happen in code in which
04:24 - case you could program an interactive
04:26 - piano something that uses you know some
04:29 - mathema I algorithm to play a tune all
04:31 - sorts of exciting possibilities so
04:33 - that's one thing I want to look at
04:35 - today uh another thing I want to look at
04:37 - today I think is to
04:39 - continue um my I've been doing a bunch
04:41 - of different coding challenges generally
04:43 - about topics in
04:45 - maths um I since I have an international
04:47 - audience I feel like I'm allowed to say
04:48 - maths because that's how I like to say
04:50 - it um and uh all this kind of stuff
04:53 - looks quite scary
04:55 - and you know gut uh it just looks scary
04:59 - and like uncomfortable but um I'm here
05:02 - to do more videos about them to make the
05:03 - these maths Concepts friendly hopefully
05:07 - um and uh what was I going to say ah
05:10 - yeah so I I did something about
05:11 - something called the super ellipse and I
05:13 - said after the Super ellipse I would do
05:15 - something called the super shape which
05:16 - is this formula and after that I would
05:18 - even try to do uh super shape in 3D so
05:22 - I'm building slowly carefully with some
05:24 - neurotic tritation towards seeing if I
05:26 - can make this stuff in processing um but
05:30 - uh today I hope to get to this
05:32 - particular formula and what it makes and
05:34 - how you program it
05:36 - um so uh I'm looking at the chat and so
05:39 - far there's one vote for maths excellent
05:43 - I agree it's the correct way I spent uh
05:45 - one uh almost one year living in England
05:48 - and uh uh um had a wonderful time there
05:50 - so welcome to all you UK uh visitors
05:54 - viewers invite me invite me to come
05:56 - visit your fine country I would love to
05:57 - come again uh uh okay
06:02 - so what was I doing ah so let's let me
06:04 - so now what I'm going to do is I'm going
06:06 - to take a momentary break from just kind
06:09 - of talking and uh I'm going to
06:13 - dance because this helps me clear my
06:16 - head and get some energy going my moves
06:19 - were much better last time um and what
06:22 - I'm going to do is I'm going to start
06:24 - getting set up
06:27 - so uh I need the Adam editor and open
06:31 - that up um I uh I'm going to close this
06:35 - move this
06:37 - [Music]
06:40 - project sorry I've got a bunch of random
06:42 - things open that I don't need to have
06:44 - open uh this I do want to have open and
06:47 - what I'm looking for on the desktop here
06:51 - is p5js
06:54 - sound so I'm going to just copy this
06:58 - play song and I'm going to to call this
07:01 - sound
07:02 - synthesis
07:05 - 01 and I want that to be open in atom
07:08 - that didn't
07:13 - work uh okay great and I'm going to
07:16 - close these uh I don't need this uh file
07:20 - anymore uh move to trash I'm going to go
07:23 - here I'm going
07:26 - to get rid of everything
07:30 - in this sketch to start from
07:34 - scratch I really should do this before I
07:36 - turn on the video and then uh this is my
07:40 - I'm can keep this open this is for later
07:43 - I think I can close these and remember
07:45 - them oh oh oh I forgot to
07:49 - mention uh if you're interested this is
07:52 - my uh if you're interested in
07:54 - more you can go to coding rainbow.com
07:57 - there there are buttons for you to sub
07:59 - subscribe on YouTube uh I also am
08:01 - running this thing called a patreon
08:02 - where you can subscribe to participate
08:04 - in a slack Channel where a bunch of us
08:06 - discuss and answer questions um H about
08:12 - the channel uh here's my most recent
08:14 - video which was about the Julia set and
08:17 - uh oh you can also if you want to know
08:19 - when I'm doing live streams you can uh
08:22 - put in your email here I you know I send
08:24 - out emails every once in a while giving
08:25 - you an update about the next time for
08:27 - the next live broadcast okay so I wanted
08:28 - to mention that I can close this tab I
08:31 - can close this tab and uh now I need to
08:34 - go to Local Host ah so I need to run my
08:37 - server come on uh
08:42 - terminal and go back to Local Host and
08:45 - I'm looking at
08:48 - um okay
08:53 - uh come on where am
08:58 - I
09:00 - there I am now let me run my server and
09:04 - sound synthesis okay we're in good shape
09:08 - um one thing I want to do is make sure
09:09 - I'm using the most recent version of
09:11 - P5 uh so I'm just going to check also o
09:15 - March 4th no this is this is distinctly
09:18 - not the most recent version um so let me
09:21 - update that uh apologies for doing my
09:25 - setup during the live broadcast but uh
09:28 - so I'm just going to yeah this is the
09:30 - version I want to be using by the way
09:32 - 0.5 this is the version at least I'm
09:34 - using today 0.5.2 as of June SE whoa
09:37 - that's today there's a new version as of
09:40 - today it never happens that's very
09:42 - exciting good thing I check so let me
09:44 - download that uh and now I'm going to
09:50 - grab uh this libraries folder and I'm
09:53 - going to go to my sound thing that I'm
09:55 - working on and paste that in there and
09:56 - hit replace close all this stuff stuff
09:59 - out refresh it's still running go to
10:02 - Adam and we should see uh I think I
10:05 - crashed things
10:07 - by I don't know what I did but let's
10:09 - force quit
10:10 - Adam
10:12 - and come on force quit there we go and
10:17 - uh now I am going
10:19 - to uh ah Oliver is asking did I record
10:23 - to dis yes I
10:26 - have ooh new there's a new instagam API
10:29 - I'm looking at the
10:31 - chat uh yes so a couple things uh I
10:35 - didn't know that there's a new Instagram
10:37 - API I all my examples that work with the
10:39 - Instagram API I'm using like a really
10:41 - old Instagram API the reason I'm using
10:43 - that one is because it doesn't require o
10:45 - off which is this like oh I I forgot I
10:47 - have a new thing to talk about okay I'm
10:49 - gonna get to that in a second what do I
10:50 - look at all my file okay hold
10:52 - on you guys in the chat getting are
10:55 - making me all crazy yes I am recording
10:56 - to dis um I am recording recording to
10:59 - dis I am 10 minutes in recording to dis
11:01 - yes um okay so hold on time out time out
11:03 - time out okay so first let me just get
11:06 - back to where I was I want to uh I want
11:08 - to have this sound synthesis example
11:11 - open and you know what I'd rather
11:13 - actually just open this full directory
11:15 - into
11:17 - Adam uh where's seriously Adam is not a
11:22 - thing here that I can just drag to what
11:24 - is what is what is this world coming
11:27 - to uh oh it actually even opened okay
11:30 - June 17th ex excellent okay now there's
11:33 - my sketch okay I have something to talk
11:36 - about okay couple things one is the
11:38 - reason why this I was reminded of this
11:40 - is that um okay so somebody asked uh in
11:45 - the chat I don't remember who whom Who
11:47 - ah I was doing so well I got panicked
11:50 - okay somebody asked uh um somebody asked
11:53 - about uh Instagram API so I do have some
11:56 - examples and I'm actually going to show
11:57 - you where these where one of these I
11:58 - have't probably in a variety of places I
12:01 - probably even have them in the coding
12:02 - rainbow code repository but I'm going to
12:05 - go somewhere else I'm going to Google
12:07 - something called programming from A to Z
12:10 - uh shiftman see what this gives me um
12:14 - okay I'm looking
12:16 - for boy the actual correct link that I'm
12:18 - looking for shows up nowhere in Google
12:20 - which is a bit of a problem but this
12:22 - this will do right now I'm going to look
12:24 - for this particular GitHub repository
12:26 - shiftman toz F-15 I'm really getting
12:29 - sidetracked here but uh I have a point
12:31 - to this now I'm also going to since I
12:34 - know what the URL is I'm going to go to
12:36 - shift.
12:37 - github.io toz
12:39 - F15 so here is a website and you can see
12:43 - this site holds my notes and examples
12:45 - for the ITP fall 2015 course programming
12:48 - from A to Z this is a course about
12:51 - programming in JavaScript and
12:53 - programming with text so it's all about
12:55 - what happens when we do when we the
12:57 - people who are doing doing the
12:59 - programming when I when you uh think
13:02 - about creative applications of text
13:04 - essentially possibly even without
13:05 - Graphics this could be this could for
13:08 - example a a piece of this might be
13:09 - sentiment analysis I'm going to read
13:12 - this speech by a politician and try to
13:13 - determine whether it was a positive or
13:15 - negative speech this could be about
13:17 - generating poetry uh through algorithmic
13:20 - ideas uh analyzing and and analyzing and
13:23 - generating text in Creative algorithmic
13:25 - procedural ways using JavaScript that's
13:27 - the core idea of the course so one of
13:29 - the pieces of the course is working with
13:31 - apis so that's here under week four and
13:34 - here there is uh an example for working
13:37 - with the Instagram API so I'm curious I
13:39 - wouldn't be surprised if this example is
13:40 - broken right now let's just see so I'm
13:42 - going to click on this and I it's got
13:44 - the Tor term generative in there I'm
13:45 - going to click
13:47 - search see what happens in the console
13:49 - okay so it didn't work so I have a
13:51 - feeling based on uh what was written in
13:53 - the chat that the Instagram API changed
13:55 - I was actually using a very old
13:56 - Instagram API that didn't require this
13:58 - kind of un awful uh server side uh
14:02 - authentication called OA so I need to
14:04 - look into this but the reason why and
14:06 - and possibly do a new tutorial about it
14:07 - the reason why this reminded me is I
14:09 - have what I think is possibly an
14:11 - announcement which is that also related
14:13 - to somebody else's um uh question in the
14:16 - chat isn't it patreon so um yes so there
14:20 - is something called
14:22 - um um there is something called patreon
14:25 - it's like a Kickstarter like service I'm
14:27 - going to click on it here
14:29 - and what I have is that uh for people
14:31 - who join patreon I have a a private
14:34 - slack channel
14:36 - so this is a a way to do some
14:39 - fundraising for my channel uh for
14:42 - expenses that I have as well as possibly
14:44 - someday in the future I really haven't
14:45 - broken even yet but uh generating income
14:47 - from doing this now one of the things uh
14:50 - in the fall in September I go back to um
14:53 - teaching at a place called ITP it's a
14:56 - program at Tish School of the Arts New
14:58 - York University there's 200 students
14:59 - it's a master's program this course
15:02 - there will be a site that says A2Z F16
15:05 - so my plan in September if I can make
15:08 - this happen is to make so every single
15:11 - one of these weeks if I go back now to
15:13 - here if you look at all of these weeks I
15:15 - want to as it's a 14-week course or you
15:18 - can see there's 11 weeks of content I'm
15:20 - planning to make YouTube videos about
15:22 - every one of these topics regular
15:23 - Expressions Markoff chains closures node
15:26 - and twitterbots Chrome extensions I'm
15:29 - going to make weekly videos about these
15:31 - topics so everyone will have access to
15:33 - that if you're watching the live stream
15:34 - or subscribing to my YouTube channel and
15:35 - what I would like to experiment with is
15:37 - so I I'll have I have about 16 or 18
15:39 - students taking the course in person at
15:42 - NYU and then if you are subscribed to
15:45 - the patreon in the fall what I'll do is
15:48 - uh post the assignments in the slack
15:50 - Channel as well as provide a form for
15:53 - people to post their their their when
15:55 - they did the assignments and have a
15:56 - discussion uh and answer questions about
15:58 - those assignments so what I would like
16:00 - to attempt to do is teach the course
16:02 - both in person at ITP as well as in the
16:06 - slack Channel um and let me let me be
16:09 - very clear about something I have a
16:10 - particular point of view about this and
16:12 - I know I'm going on way too long about
16:14 - this but you're here watching so you're
16:16 - listening you can turn this off if you
16:17 - want um to me the course itself is not
16:21 - the content I mean that that is part
16:23 - that is part of it in truth of course
16:25 - but to me the course itself is the thing
16:28 - that happens in the physical space of
16:29 - the people being together discussing the
16:31 - content so to me I I'm going to take the
16:33 - content and make that videos the the uh
16:36 - I will you know be talking about the
16:37 - content and presenting that content in
16:39 - class as well but that physical inclass
16:41 - thing is the class so I want to see if I
16:43 - can create some sort of uh online
16:46 - community that uh an experiment and also
16:49 - having that seeing if I can get that
16:51 - experience somewhat through this online
16:52 - community whether this means I need to
16:54 - try doing some Google hangouts or
16:55 - whether the slack channel will be enough
16:57 - I don't know but um this is my idea for
16:59 - the fall so um when you contribute money
17:03 - on P
17:04 - um uh okay anyway so there's a
17:06 - discussion about patreon versus Patron
17:09 - and maybe I've written it incorrectly on
17:10 - the website I'll figure that out later
17:12 - anyway so I don't want to go on for way
17:13 - too long about this but I'm this is what
17:15 - something I'm thinking about if you have
17:17 - ideas and feedback about how to do this
17:18 - well um please let me
17:21 - know okay so uh it's also like I've been
17:24 - this has been on my list of topics to
17:26 - make videos about and I can't figure out
17:27 - to find the time for it so I'm kind of
17:29 - all this stuff I'm now putting aside I'm
17:31 - going to do this this stuff weekly in
17:32 - the fall since I'll be teaching this
17:33 - course I feel like it's good Synergy ah
17:37 - boy do I hate boy do I hate that word
17:39 - but I'm gonna say it Synergy okay um all
17:41 - right so off that so now let me go back
17:44 - I am
17:46 - uh um uh so okay here I am let me get
17:49 - back and ready now for looking at sound
17:51 - so I'm going to start with sound
17:53 - synthesis
17:54 - today
17:56 - um okay
18:00 - is there something on the back of this
18:01 - t-shirt there's not
18:02 - good um okay uh so here I am here's the
18:07 - example that I'm going to
18:09 - program here is my
18:11 - outline so I'm here on sound synthesis
18:13 - and now I want to look at something so I
18:15 - want to look at something with you guys
18:17 - so I have a uh
18:20 - PDF I had I this morning I decided okay
18:24 - I'm going to do sound synthesis on the
18:25 - live stream today so I better learn how
18:28 - that stuff works because I'm not really
18:30 - an audio file audio person audio expert
18:33 - so I'm I assume this is going to be one
18:34 - of these situations where all on Twitter
18:37 - for the next 24 hours I'll be posting
18:39 - all sorts of Corrections of things I get
18:40 - wrong and I was kind of Googling around
18:42 - reading stuff about sound waves and that
18:44 - sort of thing and then iiz oh I think I
18:45 - have a chapter that I apparently wrote
18:48 - with help from many other people uh um
18:52 - in the learning processing book book
18:54 - about uh act uh learning code with this
18:56 - thing called processing about soundis
18:58 - this so I thought what I would do is
19:00 - take a minute to kind of look at this
19:02 - chapter on sound this section of a
19:05 - chapter on sound synthesis read a little
19:07 - bit of it with you guys it's kind of
19:08 - like do you know there's a there's a
19:10 - television channel here in New York it's
19:11 - called New York 1 and one of the things
19:13 - they do I don't know if they still do
19:14 - this that I absolutely love is in the
19:15 - morning they'll read the New York Times
19:17 - the newspaper to you so you could turn
19:19 - on your TV and have a I don't know it's
19:21 - a soothing Voice or not reading the
19:22 - newspaper to you I always love that such
19:24 - a like
19:25 - quain uh thing that you just think
19:27 - wouldn't exist in the world anymore
19:29 - today so I'm going to uh read some this
19:31 - book to you um in order to review in my
19:35 - head uh some of these Concepts wave
19:37 - forms
19:39 - frequency pitch
19:42 - period
19:44 - amplitude uh and sort of understand how
19:47 - what those concepts are and look at
19:49 - applying those Concepts in code and my
19:50 - trajectory is and give me some feedback
19:52 - in the chat if you want basics of sound
19:55 - synthesis so creating a waveform and
19:57 - hearing that waveform
19:59 - manipulating that waveform in real time
20:01 - with maybe sliders or something then
20:03 - looking at what's something called an
20:05 - envelope which is a way of kind of
20:07 - having
20:09 - u Way of creating a synthesizer in a way
20:11 - so that that you're um uh you have a
20:14 - sort of a sound fading in or fading out
20:17 - with an attack there what's an envelope
20:18 - allows you to make something that sounds
20:19 - more like playing the piano or playing
20:21 - an electric piano and then looking at
20:23 - how if you know the specific frequencies
20:26 - of certain notes and you know a specific
20:28 - Melody you can have a a sketch play that
20:31 - Melody and maybe I'll even do something
20:32 - like use an L system to generate a tune
20:35 - or something like
20:37 - that
20:39 - uh okay uh Alvaro in the chat writes
20:43 - please sync whatever you're going to do
20:44 - with something you already did I don't
20:46 - know if I completely understand that
20:48 - comment um but I do mean for this to tie
20:51 - together as a sort of series of sound
20:53 - tutorials so there is kind of a
20:55 - narrative here Loosely okay so um let's
20:58 - let me review I need to review some of
20:59 - these Concepts in my head before I begin
21:01 - the actual coding tutorial so I'm going
21:05 - to read to you from my book okay so
21:09 - let's think about I'm actually not going
21:10 - to just really read it okay so let's
21:12 - think about a physics of sound so the
21:14 - first thing you need to understand is
21:15 - physics of sound sound travels through a
21:17 - medium sound exists uh most commonly air
21:20 - this is something that I wrote but also
21:22 - sound can travel through liquids or
21:23 - solids and as a wave so if a speaker
21:27 - vibrates Ates you know if you pluck a
21:30 - string and it vibrates it's creating
21:32 - that wave to to travel through the
21:35 - air and arrive at your
21:38 - ear and so um you know a common form of
21:42 - a wave would be like a sine wave let's
21:45 - um let's come over here for a second
21:47 - oops this camera is
21:49 - off this is me by the way practicing the
21:52 - content of the
21:54 - tutorial because I have to uh and I I
21:58 - guess I'm going to um I'm going to erase
22:01 - what I have
22:03 - here I'll take a peek at the chat in a
22:08 - second so if we have this idea of a wave
22:11 - this like a pure form of a sort of
22:14 - perfect wave might look something like
22:17 - this this is actually a kind of wave
22:19 - that you'll see if you graph the
22:21 - mathematical function
22:23 - sign and so this is like a wave that
22:26 - could travel through the air and this
22:28 - wave uh would have things like an
22:31 - amplitude which is the height amplitude
22:34 - the height of the wave it has things
22:36 - like a period so a period is how
22:39 - long is one cycle of the wave so you can
22:43 - see here that like this is a full cycle
22:47 - of the wave it repeats so this would be
22:50 - the period how long did it take for the
22:53 - wave to repeat itself like in
22:55 - time uh and then frequency is like one
22:58 - divided by period so how many
23:00 - repetitions in one unit of time so
23:03 - something like 60 hertz that's like 60
23:06 - repetitions in a second I think I think
23:09 - I put this in the book okay somewhere
23:12 - here uh Hertz one Hertz is one cycle per
23:17 - second okay audible frequencies
23:20 - typically range between 20 and 20,000
23:23 - Hertz um okay so then I think I think
23:28 - that's basically then the idea is that
23:30 - we want to create and this is processing
23:31 - code I'm going to have to do the p5js
23:33 - code but the idea is to create an
23:35 - oscillator and then you can set the
23:37 - frequency and amplitude so you're
23:39 - essentially configuring the wave and
23:40 - hearing
23:41 - it uh okay
23:47 - uh
23:50 - um angular frequency is clearly better
23:53 - than frequency I don't know what angular
23:55 - frequency
23:56 - is so if anybody wants to fill me in on
23:59 - that you can let me know okay sorry I
24:02 - lost my
24:03 - uh ah I sorry I I have this problem
24:07 - where I'm trying to have the chat zoomed
24:09 - in and I screw it up I just want to
24:10 - check I'm just curious
24:13 - um
24:15 - uh let's see
24:18 - here if anybody's watching in twitch I
24:21 - think I might stop streaming to
24:24 - Twitch um because I there's only four
24:26 - people watching in there
24:28 - um but we'll see okay so where am I here
24:30 - okay so
24:34 - um so this is the idea so let me see
24:38 - here let's look actually also now on the
24:40 - p5js
24:41 - website
24:48 - uh
24:51 - um so this ah okay so this is how it
24:54 - works you make an oscillator set its
24:56 - type fre frequency amplitude start so I
25:00 - think I'll be doing this in an example
25:02 - and if I
25:04 - click what happens oh
25:08 - click oh look at this you can like ramp
25:12 - its amplitude to 05 over 0.1 seconds I
25:15 - think that comment is incorrect because
25:16 - it's point over so that's interesting
25:18 - there's lots of interesting
25:19 - possibilities there
25:23 - um can you hear
25:26 - that so that's so uh let me just I'm
25:31 - just running on the uh on the p5js
25:32 - website if I change the frequency to
25:35 - like
25:38 - 400 click
25:40 - again now there's a nice
25:43 - little so the amplitude was set in this
25:46 - example the amplitude is set to zero and
25:48 - then so interestingly enough let me set
25:50 - the amplitude to zero without this fade
25:53 - in just curious
25:56 - to
25:59 - so you can hear there's a little bit of
26:00 - a
26:01 - clipping right as it
26:04 - starts so that's why it's nice so this
26:06 - is something that I can add to my
26:08 - example if I put like five seconds it
26:11 - would
26:13 - then over five seconds and let me uh
26:17 - actually set I can barely hear it so let
26:20 - me set the amplitude to higher over five
26:25 - seconds can you guys hear that
26:29 - and now it should be fading out over
26:31 - five
26:33 - seconds I can't tell anyway I'll I'll
26:36 - fiddle with that when I make the example
26:38 - okay so and now the other thing I want
26:40 - to look at is P5 oscillator uh
26:44 - reference so I think actually for sound
26:47 - I want to go here and then I want to go
26:49 - to P5
26:51 - oscillator
26:52 - and um start stop set type so these are
26:57 - the kind of types sign triangle Sawtooth
27:01 - or Square and I you know from my
27:04 - understanding is it it's just sort of
27:06 - describing what the waveform looks like
27:09 - so uh let me see if I can get this right
27:12 - triangle I believe is this I'm going to
27:16 - do this again in a like a video tutorial
27:18 - that's probably
27:19 - Triangle Square would be like this
27:23 - maybe what's
27:25 - Sawtooth let's look that up
27:31 - uh saw tooth
27:35 - wave aha so saw to oh look at this
27:40 - here's a
27:41 - nice here's a nice image of all the
27:44 - different
27:45 - waves so these are the different wave
27:47 - forms s square triangle and Sawtooth and
27:49 - they'll have different
27:52 - um uh different audio um sorry I'm
27:56 - angular frequency is usually used for
27:58 - fft and the like in real applications
28:00 - it's more intrinsic avoids factors of 2
28:03 - pi so yeah so that's beyond the scope of
28:06 - this particular tutorial video I know my
28:08 - camera went off ah I still haven't
28:10 - figured out the magic magic lantern
28:11 - settings for these cameras um okay
28:16 - uh ah yes okay Alvaro is insist is is uh
28:20 - is mentioning syn yes I'm going to do
28:21 - the uh super shape today before I leave
28:24 - it's about
28:25 - 11:15 I'm going to do the super shape
28:27 - today
28:28 - yes um okay
28:31 - uh okay so these will have different
28:34 - audio
28:35 - qualities wonder what this
28:38 - um uh and I don't know that in
28:43 - uh yeah and then here are specific
28:46 - frequencies for certain musical notes
28:48 - and then I'm getting into the envelope
28:50 - thing okay uh and then this is uh this
28:53 - is the sort of midi conversion okay so
28:56 - maybe I'm going to get into all of this
28:58 - noise is something we can talk about but
28:59 - I might skip that okay
29:01 - great so I think I'm ready for this
29:05 - first
29:07 - tutorial in the chat I'm going to erase
29:10 - the Whiteboard get myself set up with
29:12 - the code if I've missed anything
29:14 - fundamental do you think anybody in the
29:16 - chat think so like core sound synthesis
29:18 - uh please let me
29:21 - know uh okay so I'm coming over here oh
29:24 - by the way how's the focus on the
29:25 - Whiteboard uh let me know in the chat I
29:27 - I don't feel like checking it but I will
29:29 - if I need
29:42 - to
29:44 - okay yeah and somebody in the chat
29:46 - mentioned Chuck
29:50 - um uh sorry I'm looking at the I'm
29:54 - looking at my phone this is like the
29:55 - worst thing you know by the way the
29:56 - worst thing you can ever do as a teacher
29:58 - in a real classroom is be like excuse me
30:00 - I'm getting a
30:01 - text students do not like first of all
30:04 - it's rude but I don't know why I think I
30:05 - could do that on the live stream the
30:06 - problem is it keeps buzzing and I'm
30:07 - worried that it's like an important
30:09 - message about uh you know something
30:11 - wrong with the live stream but I'm
30:13 - putting that away okay um I I have no
30:16 - idea what's going on anymore coming back
30:18 - sound synthesis okay so I'm getting
30:20 - myself ready um ah yes um Trevor in the
30:25 - chat writes reminds me of the program
30:27 - language dedicated to sound a Chuck
30:29 - which also has some lessons on Ken yes
30:31 - so one thing I should mention is if you
30:34 - are interested in audio as a form of
30:37 - creative expression and in particular
30:39 - computational audio and programming with
30:40 - sound um I'm not suggesting by any means
30:44 - that p5js in The Sound Library is the
30:46 - sort of perfect most comprehensive place
30:48 - to do this um in fact there are audio
30:51 - environments like Max MSP Jitter um
30:54 - which is a commercial software there's
30:56 - Chuck uh which I believe is open source
30:59 - and free actually have no idea if that's
31:00 - true and there are courses online
31:03 - courses and actually there's a great um
31:06 - Sam uh there's someone named Sam and his
31:08 - last name is uh he does great YouTube
31:11 - videos so we'll post a link to it in my
31:13 - this video description uh Tara Tara uh
31:16 - anyway Sam does great Max MSP video
31:19 - tutorials on YouTube you should check
31:20 - those out I'm sure they're going to be
31:21 - much better than this one the the
31:23 - there's a couple things that I like
31:25 - about using P5 GS one is I'm already
31:26 - using it for other stuff so it makes
31:28 - sense to it here the Sound Library which
31:29 - was created by Jason seagull is
31:31 - excellent and has a lot of great
31:33 - features and it also means you can do
31:34 - the stuff in the browser so if you want
31:36 - to do sound stuff in the browser uh
31:38 - JavaScript and the web audio API and
31:40 - p5js is great there is also I should
31:42 - mention a sound library for the browser
31:44 - called tone.js
31:46 - uh and I don't I certainly won't be
31:49 - today using tone.js but certainly if
31:52 - you're interested in sound synthesis
31:54 - this is probably something you want to
31:55 - take a look at but I'm going to look at
31:56 - the basic except M P5 Jazz ah pure data
31:59 - thank you uh mat uh mentions pure data
32:02 - which is an open source uh uh data flow
32:05 - programming environment much like Max
32:07 - MSP which is free and open source um
32:10 - okay
32:12 - uh so here we go so now I just need to
32:15 - I'm going to keep this image up in case
32:18 - I want to reference
32:21 - it uh I want to
32:25 - um here's some possible
32:27 - screenshots for for the sound synthesis
32:33 - tutorial thumbnails that's that's one
32:36 - possibility since there won't
32:37 - necessarily be a lot of visual this is
32:39 - another
32:42 - one some thumbnail possibilities for mat
32:45 - who will make a thumbnail
32:48 - uh let me find the YouTube uh Max
32:52 - tutorial his name is Sam YouTube Max MSP
32:57 - let's see if this comes up yeah I think
32:59 - this must be is it dude
33:02 - 837 uh yep that's Sam it doesn't say his
33:06 - last name but that's fine this is Sam
33:08 - and this is his YouTube channel dude
33:10 - 837 uh give him some more subscribers uh
33:14 - if you're interested great Max MSP
33:16 - tutorials okay uh
33:20 - now where was I gotta get into the the
33:24 - the uh okay so here we go let me uh uh
33:27 - close this out this is good to have open
33:31 - the oscillator uh reference page I'm
33:34 - going to keep this
33:36 - open uh to make that a little bit bigger
33:38 - I don't need my patreon open I don't
33:40 - need this open I need this open sure
33:44 - sure actually I'm going to close this
33:45 - right now this I want to leave open uh
33:47 - here we go and then now uh this can go
33:50 - away and this can come
33:55 - up
33:57 - and I think now I'm ready to start so
34:00 - what should be my opening
34:02 - image um
34:06 - actually maybe I will have
34:11 - this as my opening
34:14 - image actually view uh table of content
34:17 - sorry everybody I'm like being
34:20 - overly how do I get rid of that okay
34:22 - hide Side Bar there we go um that's
34:26 - obviously really important what I'm
34:27 - doing right now okay so this will be my
34:30 - opening
34:31 - image thumbnail
34:35 - possibilities okay um oh yes and you can
34:38 - program um in JavaScript in Max Maximus
34:41 - you can program in Max MSP with like
34:43 - JavaScript okay U let me cycle the
34:47 - cameras I'm very excited about this
34:49 - tutorial it's not something I'm ever
34:52 - really taught before feel super
34:54 - comfortable with but I hope that people
34:55 - will find it interesting and use
34:59 - useful and I have everything
35:04 - going so I'm ready I've got my button to
35:08 - go back and forth I've got my mind which
35:11 - is has many flaws to it and I think I'm
35:14 - ready okay I'm processing
35:17 - t-shirt and here we
35:22 - go okay I clean my glasses
35:31 - and here we
35:33 - go so I'm going to do what I hope will
35:36 - be about a 10 to 15 minute tutorial on
35:38 - sound synthesis in p5js and I I'm going
35:41 - to mostly try to avoid looking at the
35:43 - chat while I'm doing this tutorial this
35:44 - will get edited as a a separate
35:46 - Standalone video and then uh when I'm
35:49 - finished I'll look at the chat to see if
35:50 - you'll have comments or questions or
35:51 - Corrections okay here we go I'm doing
35:53 - this from scratch without I I just want
35:57 - to want to look at one thing just to
35:58 - have my mind refreshed new P5 do oill
36:04 - okay
36:08 - okay okay here we
36:13 - go hello welcome to a video tutorial
36:17 - about sound synthesis sound synthesis in
36:20 - the browser in JavaScript using the p5js
36:22 - Sound Library okay so what is sound
36:24 - synthesis the idea here unlike my
36:27 - previous videos where I loaded a file
36:28 - from a sound and played that sound
36:30 - whether it's music or a sound effect boy
36:33 - do I really wish I could okay hold on
36:35 - sorry I couldn't redo this
36:38 - because um oh I
36:44 - I because I'm a crazy
36:51 - person I gotta I got to be able to uh
36:55 - what's a good sound effect here
36:57 - [Music]
37:04 - yeah that's a good one okay um oh
37:06 - actually I'll just use the coding
37:08 - rainbow coding rainbow okay I'm doing
37:11 - doing this again
37:13 - sorry okay here we go try attempt number
37:19 - two hello welcome to a video tutorial
37:22 - about sound synthesis in the browser
37:25 - using JavaScript using the p5js sound
37:27 - library now this is a uh one part of a
37:30 - continuing series about programming with
37:32 - sound and what I'm going to do in this
37:34 - particular video which is quite
37:35 - different from my previous four videos
37:37 - is instead of loading a sound from a
37:39 - file like some
37:41 - music or perhaps playing a sound effect
37:44 - like good rainbow what I'm going to do
37:48 - is instead create in a way sound from
37:50 - nothing sound synthesis now of course I
37:52 - could do sound synthesis myself me me me
37:55 - me me me me okay I can't sing it's
37:57 - terrible um but this is the idea my
38:00 - vocal cords are vibrating and they're
38:02 - creating a vibration that vibration is
38:04 - traveling through the air uh and it's
38:06 - actually going into a microphone the
38:07 - microphone reads that vibration records
38:09 - it then it's coming out of the speaker
38:10 - of your computer which is vibrating and
38:12 - then traveling again through the air and
38:13 - eventually into your ear so this idea of
38:16 - a sound wave is something we need to
38:18 - talk about this wave that travels
38:19 - through the air how can we in code
38:21 - synthesize that wave create a sound and
38:24 - then control that wave to essentially
38:26 - play a melody play a tune allow create
38:28 - an interactive piano all these types of
38:29 - things are possible with what I'm going
38:31 - to show you how to do so the first idea
38:33 - is really to think about a sound wave so
38:35 - let me um let me come over here and
38:38 - there are a couple key Concepts which I
38:40 - think are quite important so what I'm
38:41 - going to draw for you here is something
38:43 - called a sine wave now I'm sure I am not
38:46 - drawing this exactly correctly but if
38:49 - you take the sign function the sign
38:51 - function being a function from
38:52 - trigonometry where is if you have a
38:55 - triangle and you take
38:57 - s OFA it equals the opposite the length
39:00 - of the opposite side of the triangle
39:02 - divid the hypotenuse of the triangle so
39:04 - you can go and look at all my
39:05 - trigonometry and triangle tutorials and
39:07 - stuff somewhere else that's not really
39:09 - relevant for here what's interesting is
39:10 - if you if you think of this angle as a
39:13 - value that's changing over time and
39:15 - we're to graph that you're going to see
39:16 - a wave pattern like this so it's a
39:18 - perfectly symmetrical repeating wave
39:21 - form a sine wave and if that sine wave
39:23 - travels through the air you're going to
39:25 - hear a tone
39:27 - now a wave has certain properties one
39:30 - property is amplitude so if we can look
39:32 - at this is like the top of the wave and
39:34 - this is like the bottom of the wave and
39:35 - you could think of that height as
39:38 - something called uh amplitude so the
39:40 - height of the wave and now the height of
39:42 - the wave is
39:43 - actually is actually a volume so the
39:46 - higher the wave the louder the sound the
39:48 - amplitude I mean I'm sure there's like a
39:50 - very fine nuanced scientific distinction
39:53 - between those terms but we can think of
39:54 - it for right now some will yell at me in
39:56 - the comments in the chat and I'll feel
39:58 - very embarrassed and sad and that I got
40:00 - everything wrong but anyway so amplitude
40:01 - that's the height of the wave now
40:02 - another key part of the wave is
40:04 - something called period so period and
40:07 - I'm going to uh like this is the amount
40:11 - of time or the length between a the
40:14 - length of a full cycle of the wave so
40:16 - you can see from here this top of the
40:18 - wave all the way to here is one full
40:20 - cycle that just repeats over and over
40:21 - again how long it took for that cycle is
40:23 - the
40:24 - period um and in the case of sound we're
40:27 - really thinking about time and seconds
40:28 - how many that that wave like how long
40:30 - did it take for that wave form to um to
40:32 - wave so to speak now one divided by
40:36 - period one over period is a term called
40:40 - frequency meaning not how long for one
40:43 - cycle but how many cycles per second and
40:45 - this is actually a measurement you've
40:46 - probably heard uh Hertz so if something
40:49 - is 60 hertz that's a frequency of 60
40:53 - cycles per second and this is key
40:55 - because what we're going going to do is
40:57 - set we're going to create a wave with
40:59 - code we're going to set its amplitude
41:01 - we're going to set its frequency as a
41:03 - value in hurts and then listen to it so
41:06 - these are the concepts what I want to do
41:07 - now is look at how do I in JavaScript
41:10 - create this waveform and control its
41:12 - amplitude and frequency okay let's go
41:15 - and do that now so coming over here uh I
41:18 - think I'm back over here uh and here
41:21 - here you are here I am I'm gonna play
41:24 - some music for a second just to get my
41:25 - mind up
41:26 - okay that's good enough uh and I'm going
41:28 - to minimize this I'm going to open my
41:30 - browser open over here and I'm going to
41:32 - go to this is an example I've running so
41:34 - I have a completely empty blank canvas I
41:36 - don't actually need a canvas for this
41:37 - example I'm just doing stuff with sound
41:39 - I'm going to go back to the code and I'm
41:41 - actually just for the sake of argument
41:42 - going to make the canvas a little bit
41:43 - smaller so it takes up less space on the
41:45 - page okay so what do I need to do first
41:48 - I need to create a sound
41:50 - wave so what I'm going to do is I'm
41:53 - going to create a variable I'm going to
41:54 - call it wave and uh technically the term
41:57 - for a wave in p5js Sound Library is
42:00 - oscillator a wave being something that
42:01 - oscillates much like plucking a string
42:03 - right you pluck a string it oscillates
42:05 - like a wave and it vibrates through and
42:08 - and and pushes that wave through the air
42:09 - up to your ear you hear a sound okay so
42:12 - what I need to do is say wave equals new
42:14 - P5 do
42:16 - oscillator so this is a new object you
42:19 - might not be familiar with P5 do
42:22 - oscillator um this now I've created an
42:24 - oscillator object so this object exists
42:26 - it's up to me to turn it on and turn it
42:28 - off to set its frequency to set its
42:30 - amplitude to configure that oscillator
42:31 - so to speak uh one thing that I think is
42:33 - important for me to mention is that here
42:35 - in
42:36 - index.html um you know I I have a
42:38 - reference to the p5js Sound Library you
42:40 - can't really see it all the way there
42:42 - there we go um so you need to for this
42:43 - to work you need to make sure you have
42:45 - the P5 do sound. JS file loaded as part
42:47 - of your project um so now I'm back to
42:50 - here the other thing I think is Worth
42:52 - showing you and I have it here is the
42:54 - reference page for P5 doos so this is
42:56 - something you might want to look at on
42:57 - your own time and review there's
42:59 - actually a nice little uh example on
43:01 - this page but I just want to show you
43:03 - here are a bunch of the functions that
43:05 - I'm going to start to demonstrate to you
43:06 - start stop amplitude frequency set type
43:10 - connect disconnect so there's a lot of P
43:12 - all those things I showed you about
43:13 - manipulating a a a song file MP3 file
43:17 - that you load and play there's similar
43:18 - things going on here so one thing that's
43:20 - really important though is this idea of
43:22 - set type so look at this I talked about
43:25 - sine waves but you could also have a
43:26 - triangle wave a Sawtooth wave or a
43:29 - square wave and I actually have an image
43:30 - here I was going to draw these as
43:31 - diagrams but I'll just use this image
43:33 - instead so what the waveform actually
43:36 - looks like uh is going to determine what
43:38 - the sound sounds like and and of course
43:41 - the world is your oyster in terms of
43:43 - possible ways that you might be able to
43:44 - do sound synthesis but P5 by default
43:47 - allows you to create oscillators of
43:49 - these four forms sine wave Square wave
43:52 - triangle wave and Sawtooth wave and this
43:54 - image uh comes from uh Wikipedia and I
43:57 - believe this is a Creative Commons
43:58 - license image I better check that but
44:00 - hopefully I'm uh but I'm pretty sure
44:02 - it's available to be using this video
44:04 - and you could also use it as well anyway
44:06 - okay so u i I'll post a link to it in
44:08 - the uh description okay so so we'll try
44:10 - a bunch of different forms but let's
44:11 - just start with a sine wave so the first
44:13 - thing I want to do in my code is say
44:15 - wave. set type uh and I believe uh I
44:19 - need to pass in a string meaning a word
44:21 - in between quotes a sign being sine wave
44:24 - the other thing I could do is set the
44:27 - amplitude uh oh by just saying amplitude
44:29 - I'm going to set it to one and then I
44:31 - can say wave. frequency I'm going to set
44:33 - some frequency let's try uh 300 whatever
44:36 - that might sound like and
44:39 - then I'm going to uh ah play it I think
44:43 - I need to say uh play play or start I'm
44:45 - not sure let's look at the reference
44:47 - page uh it looks like start starts the
44:50 - obsil and there's a there's a there's a
44:53 - a Nuance to this function which I think
44:54 - will be interesting to see so I'm going
44:55 - to say say start so let's uh refresh
44:58 - this
45:00 - sketch can you hear that a nice tone
45:04 - let's go back it's very hard for me to
45:06 - hear it the way I have the sound
45:07 - configured for let me make this
45:12 - 400 that sounds very
45:16 - similar what did I do wrong uh so maybe
45:19 - that frequency function isn't correct uh
45:21 - let's
45:22 - look let's look back frequency uh okay I
45:26 - need to look at the chat I lost the
45:29 - chat 261 626 sorry everybody sorry I did
45:36 - it
45:37 - again I'm so sorry I'm so sorry I'm so
45:40 - sorry I can't the stuff is very quiet
45:42 - for me um yeah uh sorry everybody I
45:47 - won't do that again I had a very bad
45:50 - feeling that would happen I in the um
45:53 - when this gets archived I need to
45:55 - remember to add an
45:56 - annotation uh that um warns people that
46:00 - that's about to happen about to
46:03 - happen
46:04 - um okay so uh I won't do that again
46:08 - first of all let me make it
46:10 - quieter doesn't sound like a sign way uh
46:14 - I'm gonna I'm gonna come back into
46:18 - the I can't oh I muted the
46:22 - tab okay uh
46:28 - oh
46:30 - interestingly there's probably the I
46:33 - know what the issue
46:35 - is um shouldn't be out of draw so I
46:38 - think there's an issue which is like a
46:40 - kind of very classic JavaScript problem
46:42 - where it probably takes some time to
46:44 - actually create the oscillator and it's
46:46 - not ready for its frequency to be set
46:47 - yet so
46:51 - um if I put this in draw you're going to
46:54 - hear the difference so
46:58 - um probably the same thing
47:01 - with yeah that's a little bit quieter
47:04 - right
47:06 - okay all right so
47:16 - um
47:17 - okay
47:22 - um uh okay uh sorry everybody okay I I
47:25 - think I'm now okay what clearly what I
47:27 - need to do is build in a button to start
47:30 - and stop
47:32 - it
47:33 - because otherwise it's going to drive
47:35 - everybody crazy
47:39 - um oh docs impli has to be after the
47:42 - start call oh so maybe that's just the
47:44 - issue thank
47:47 - you
47:50 - 400,00 yep thank you
47:54 - Oliver always Oliver always okay so
47:59 - um so I'm before I go back into the
48:03 - tutorial I'm going to add a
48:05 - uh I'm going to add a
48:12 - uh I'm going to just add a
48:17 - uh
48:24 - uh I'm going to add a
48:29 - button so I can quickly stop a
48:32 - sound
48:45 - uh uh I guess I should do this in the
48:48 - tutorial maybe I'll do this in the
48:50 - tutorial
48:52 - um wonder if it says if wave I wonder if
48:56 - this
49:09 - works oh you know
49:17 - uh wonder if this
49:22 - works yes that's not a function I need
49:24 - my own boo
49:26 - variable
49:37 - um I just want to add this in
49:43 - [Music]
49:47 - here okay so I just wanted to add this
49:50 - in here because
49:54 - um
49:58 - um and then also I have a
50:08 - reason I've done way too much outside of
50:10 - the tutorial now this is probably a bad
50:11 - idea but let's see how that
50:22 - goes
50:24 - what
50:25 - [Music]
50:27 - why is that not working do I have two
50:29 - function draws oh
50:34 - yeah causes Distortion
50:45 - okay okay sorry
50:51 - everybody is this okay what I have now
51:00 - please someone in the chat tell me that
51:02 - what I'm playing right now is okay and
51:04 - won't hurt everybody's
51:06 - ears okay great okay so
51:10 - um
51:12 - whoops I'm going to go back to the
51:15 - tutorial now I I think maybe what I'm
51:18 - going to
51:19 - do is I'm actually going to take
51:24 - this
51:28 - and put this up
51:35 - here okay
51:41 - okay okay great thank you everybody
51:43 - thank you for your patience uh I'm going
51:45 - to cycle the camera since that was like
51:47 - a bit of a break
51:54 - here
51:57 - and now I'm back okay so the things that
51:59 - I'm going to do I'm going to go back
52:01 - into and this will get spliced together
52:02 - as a video
52:05 - tutorial the things that I'm going to do
52:07 - first I'm going to mention how you have
52:08 - to have start first which it says in the
52:10 - documentation if I just read it then I'm
52:13 - going to um show how I can change the
52:16 - frequency then I'm going to mention how
52:18 - I have a button there and I'm going to
52:19 - put this stuff with the playing Boolean
52:21 - variable and then I'm going to start to
52:23 - do some stuff like at a slide to change
52:25 - the frequency I'm going to talk about um
52:28 - what
52:30 - um yes so Oliver asked can I not just
52:33 - set the amplitude to 0 five or zero on
52:35 - the button press yeah so I'm going to do
52:36 - that and actually I'm going to do I I'm
52:38 - going to actually change that live on
52:40 - the Fly think and just mention that as a
52:42 - one solution instead of start stop um so
52:45 - um and
52:47 - then
52:49 - uh um what's and then I want to what's
52:53 - 440 is a right
52:56 - and then like something like 261 is like
52:58 - middle
53:04 - C yeah
53:07 - okay but I'm believe this is
53:09 - 400
53:12 - oops okay um okay everyone so and then
53:17 - I'm going
53:21 - to okay so here we go I'm going back try
53:24 - 432 is a
53:31 - I actually have in this PDF a chart I
53:34 - I'm not going to worry about that right
53:36 - now because I'm going to do um I'm going
53:40 - to do um I'm going to do a whole
53:42 - tutorial about musical notes as a
53:44 - separate video but okay so let me come
53:46 - back
53:51 - here
53:54 - okay
53:58 - back again there was an issue with the
54:01 - order of these operations so setting the
54:03 - amplitude and setting the frequency will
54:05 - not work unless you call those after
54:07 - start and it actually says that in the
54:09 - documentation I just didn't read that
54:11 - properly so what I'm going to do now is
54:12 - go back to the page and I'm going to
54:14 - refresh it you can hear that 400 and
54:17 - I'll mention that 400 440 the frequency
54:20 - of 440 is actually the musical note a
54:22 - can tune your vial into it now can you
54:25 - hear that that's the musical note a if
54:26 - I'm right and I'll just metion that if I
54:28 - make that a little bit higher if I say
54:30 - 1,000 you should be able to hear that
54:31 - that's quite a bit uh higher so let me
54:34 - go back to this and actually let me just
54:36 - turn the amplitude down to zero and
54:38 - there you go now you'll notice in this
54:40 - program because I don't hopefully I'm
54:42 - not blowing anyone's ears out that um
54:45 - that there is I have a play pause button
54:47 - so while I was taking a break there for
54:49 - a second to figure out what was wrong I
54:51 - added that button let's just look at the
54:52 - code so very briefly there's just a
54:54 - button that says play and pause there's
54:56 - a function called toggle associated with
54:58 - whenever that button is pressed and then
55:00 - in that function I have a Boolean
55:02 - variable that's set to either true or
55:03 - false based on whether this Boolean
55:06 - variable playing and then in draw I'm
55:08 - either coloring the background pink or
55:10 - gray depending on whether that bullan
55:12 - variable is true or not so if I if I go
55:15 - back here and run this again you can see
55:17 - playing that button toggles the
55:18 - background so one of the things that I
55:20 - want to do show you is that I can
55:22 - actually just take this code right here
55:26 - and I can put that here
55:28 - in uh in the toggle function and then I
55:31 - could actually say wave. stop here in in
55:35 - in the else so right now what I want to
55:37 - do is toggle this that oscillator on and
55:40 - off so I'm going to run
55:42 - this do you hear it I think you
55:46 - do wait I don't hear
55:49 - it I don't know why I can't hear it
55:51 - anymore oh the amplitude is at zero so
55:54 - let me turn it back to zero
55:56 - 0.5 okay now you can hear
56:00 - it right on and off oh I think there's
56:03 - like a low
56:04 - hum uh anyway hopefully the sound is
56:07 - fine uh so okay so I can toggle that
56:10 - sound on off now there's a couple things
56:12 - one I should mention is uh you don't
56:13 - actually have I don't actually have to
56:15 - start and stop it what I could really
56:17 - just do is you know start it right here
56:21 - in setup and I could immediately set the
56:23 - amplitude to zero and then what I could
56:26 - do here is just uh and I could also set
56:29 - the frequency here in
56:31 - setup and then what I could do is just
56:33 - set the amplitudes so I don't need start
56:37 - I just want to set the amplitude to 0.5
56:39 - or set the amplitude to zero so I'm
56:41 - going to run that
56:43 - again I'm turning off now one thing I'll
56:45 - mention is do you hear that little like
56:47 - clipping each time I start and stop it
56:49 - there's a quick clip of the sound that's
56:51 - because this oscillator comes in at full
56:53 - amplitude immed immediately so often
56:56 - with a sound like this it's a little bit
56:57 - advantageous to kind of fade it in very
56:59 - slowly and there's actually the
57:01 - amplitude function and I believe
57:02 - starting stop there is an optional
57:04 - second argument so if I put in like one
57:06 - as a second argument it's going to take
57:08 - one second to fade in that sound or Fade
57:10 - Out that sound and I could put in 0.1 or
57:12 - something much shorter if I want but
57:14 - let's take a listen to
57:16 - that did you hear that fade in very hard
57:19 - for me to hear it because it's very
57:20 - quiet out of my speakers but hopefully
57:22 - it's piping through the sort of YouTube
57:24 - recording system and you can actually
57:26 - hear it okay so hopefully you heard that
57:27 - distance now let's talk a little bit
57:29 - about uh let's do one more thing I think
57:32 - which would be worth doing what I what I
57:33 - think would be worth doing is let me
57:35 - create a
57:36 - slider and I'm going to say slider
57:39 - equals create slider and now I need a
57:42 - range so the audible I believe an a a
57:44 - reasonable sort of audible range of
57:46 - frequencies is between like 20 and
57:47 - 20,000 perhaps but I don't want to blow
57:49 - out your ears I'm afraid of doing
57:51 - anything too crazy so I'm going to have
57:53 - a range a frequency range between like
57:55 - let's just say 100 and 1200 which I
57:58 - think will be somewhat reasonable and
58:00 - I'm going to start at the musical note a
58:02 - 440 so I'm going to create a slider and
58:04 - in uh in draw what I'm going to do is
58:07 - I'm going to say
58:09 - wave
58:11 - uh I somebody is I usually when in the
58:15 - chat if someone's blasting with Emojis I
58:17 - know that something's wrong but I don't
58:19 - know what that is um so uh wave.
58:23 - frequency I should U frequ
58:25 - qu uh slider. value so what I want to do
58:28 - is now at least tie the frequency to a
58:31 - slider and so first I need to play it
58:34 - you can hear
58:37 - that so you can see as I can change that
58:39 - frequency on the fly so this is the
58:41 - basic idea I can synthesize a sound as a
58:45 - waveform I can fade it in I can fade it
58:48 - out I can change its frequency I can
58:49 - change its amplitude and I want actually
58:51 - let's just briefly maybe I We'll add
58:53 - like triangle wave or Sawtooth wave or
58:55 - Square wave just to hear what some of
58:56 - those sound like but mainly what I want
58:58 - to do in the next video is talk about
59:01 - something called an envelope and an
59:03 - envelope is a way of kind of crafting
59:05 - around that oscillator a sort of musical
59:07 - attack a fade in a fade out and that's
59:09 - going to make allow us to configure the
59:11 - oscillator in a way that might sound
59:14 - more like an electric piano or a
59:15 - particular kind of musical instrument
59:16 - I'm not we're not going all the way
59:18 - there to that and then I want to talk
59:19 - about what are specific frequencies of
59:22 - specific musical notes how do those
59:24 - relate to a concept called midi and how
59:26 - might you create a program that sort of
59:27 - generates a tune or allows a user to
59:29 - interactively play uh piano okay so
59:35 - um um so what I'm going to do here is
59:38 - Let's uh so I think I'm done but let's
59:40 - just uh let's just look uh before I go
59:43 - let's look here at um the oscillator
59:46 - object oh I'm in frequency uh uh
59:49 - oscillator object what I want to look at
59:51 - is uh this so the options for uh set
59:54 - type typ sign triangle soft tooth or
59:56 - Square so let's just try a triangle wave
59:59 - um
60:01 - and he what that sounds like see if you
60:03 - can hear the
60:09 - difference has a kind of different
60:10 - quality to it and so what I recommend um
60:14 - that you do one thing you might think
60:15 - about as an exercise is can you create a
60:17 - whole interface an interface for
60:19 - changing the wave form for changing the
60:21 - frequency for changing the amplitude
60:22 - what happens if you have multiple
60:23 - oscillators can harmonize so this you
60:25 - know there's a lot of bunch of things
60:26 - you could try here and I also want to
60:28 - remember to make sure I do something
60:30 - where we visualize that wave itself so
60:32 - where the wave is drawn on screen so I
60:34 - should I should make that happen at some
60:35 - point too okay thanks for watching the
60:37 - sound synthesis video I look forward to
60:39 - hearing your feedback in the comments
60:40 - and the chat and all that sort of stuff
60:41 - there's no there's no chat I guess
60:43 - action after it's over
60:46 - bye
60:48 - okay
60:51 - um oh so I forgot to remove the stop
60:54 - function fun call that's what Alvaro is
60:56 - saying oh yeah I did thank you so that
61:00 - was a mistake but you
61:04 - know ah so it wasn't fading out
61:07 - properly H that's too
61:10 - bad here let me record a brief addendum
61:14 - this will go this will go on the end of
61:15 - that
61:16 - video it will get edited in thank you
61:20 - mat uh
61:23 - okay
61:27 - hello video epilog I realized I forgot
61:30 - actually to remove wave do stop in here
61:32 - when I was showing you that you didn't
61:33 - need stop that you could just fade the
61:35 - amplitude down to zero so I'm going to
61:36 - actually take that out and I'm going to
61:38 - go back I'm going to run this again hit
61:40 - play hit pause and pause is probably the
61:44 - wrong word it's fade in fade out and I
61:46 - could make the text of the button change
61:47 - all sorts of stuff I could make this
61:48 - better but at least that was a brief
61:49 - correction okay thanks for watching this
61:53 - video
61:57 - okay okay thanks for that correction all
62:01 - right how was that any feedback any
62:03 - questions it's
62:05 - 1150
62:08 - um um let me look at my list here so I
62:12 - think that counts for this particular
62:16 - topic and I think that I want to look at
62:19 - envelopes I need to add something to
62:21 - this am I allowed to edit this here no
62:23 - this is like my public version of the
62:26 - slack file um I think I have it on the
62:28 - other I want to add something I think
62:29 - which is visualize the
62:31 - wave um hold on if you'll bear with me
62:33 - for a second I'm GNA try to add this to
62:36 - my to-do list wherever that is
62:41 - uh impossible
62:44 - to
62:48 - uh sound tutorial outline uh I should be
62:52 - able to add
62:53 - here
62:55 - edit this is not very interesting
62:58 - because you can't see what I'm doing and
62:59 - I also can't figure it out this is a
63:01 - list of keeping these list in the slack
63:03 - Channel and I don't see how to edit this
63:05 - add reaction view public link open a new
63:07 - window let's try opening a new
63:09 - window yeah let's me edit here so uh
63:14 - visualize Soundwave so I want to add
63:17 - that hit save hit
63:20 - refresh I don't know why it didn't show
63:22 - up here but I added it to my list over
63:23 - there okay I'm not going to get too
63:24 - caught up in that let me check the chat
63:26 - again uh to
63:28 - see
63:34 - um uh let me look at the chat
63:39 - so uh so Michael berer uh post something
63:43 - about the solar system 2D example not
63:45 - working because of the recursion I'll
63:46 - have to check into that oh not working
63:48 - in p5js that was an example I made in
63:50 - processing um rosling in the chat writes
63:53 - if it's not too off topic would be
63:55 - awesome to show one
63:57 - oscillator star times another one okay
64:00 - interest
64:01 - interesting it's not too off topic but
64:04 - it's a bit beyond the scope of what I'm
64:05 - prepared to do with these basic ones but
64:07 - maybe remind me later um and then
64:13 - uh ah Darth yes I saw your comment about
64:16 - the train generator not working I'll
64:19 - have to check into that when you change
64:21 - the width and height I'll have to check
64:22 - into that I probably have it it has to
64:24 - be square or something I'll have to fix
64:25 - the codee for
64:26 - that
64:28 - um can you natively mix multiple sound
64:31 - files in
64:32 - processing do why would you do it in
64:35 - Native ja or would you do it in not
64:37 - native Java okay so one thing I'll
64:38 - mentioned that's just
64:39 - um um kind of something to sort of think
64:42 - about so I'm using p5js there there is
64:45 - also a processing Sound Library which
64:47 - has a very very similar API as the p5js
64:50 - one and you can do a lot of this stuff
64:52 - and you can actually mix uh two
64:55 - different um sound files I believe in
64:57 - the processing version okay any other
65:00 - questions or feedback I think I want to
65:02 - do another I think
65:05 - my my what I would like to do today is
65:10 - um at least so in the amount of time
65:12 - that I've left it's about noon I I I you
65:14 - know I have about another this has been
65:16 - going for I have about an hour in me I
65:18 - think I'm I'm definitely going to have
65:19 - to take a pee break at some
65:21 - point um but uh I have maybe an hour uh
65:25 - in me more so I think what I want to do
65:27 - is do envelopes and then do the super
65:31 - shape um that's kind of my plan for the
65:34 - rest of today um so sound envelope so
65:37 - let's go look again at my learning
65:41 - processing
65:44 - chapter and somewhere in here so this I
65:47 - wrote okay so this by the way hopefully
65:48 - this is accurate this is a chart which
65:50 - shows different frequencies for
65:52 - different notes
65:54 - and an envelope is something okay a more
65:58 - sophisticated I wrote a more
65:59 - sophisticated way to simulate a musical
66:01 - instrument playing a note can be
66:02 - accomplished with an audio envelope an
66:04 - envelope controls how a note begins and
66:06 - ends through four parameters I hope
66:08 - that's right attack time that's the
66:11 - beginning of the note like the moment
66:12 - you hit it on the piano so how long it
66:14 - takes for the volume of the note to go
66:16 - from zero to its peak volume sustain
66:19 - time is how long it takes to play
66:21 - sustain level is the peak volume of the
66:24 - during its duration from Attack to
66:26 - release and release time is the length
66:29 - of time it takes for the level Decay
66:30 - from sustain level to
66:33 - zero okay um Carlos by the way asked in
66:36 - the chat can you do am and FM synthesis
66:38 - in p5js
66:42 - probably uh and I need to um uh okay so
66:45 - this uh so let's look
66:48 - at now I'm going to go to the reference
66:52 - and let's look at um
66:54 - P5
66:58 - envelope uh and this uses something okay
67:00 - so let's read this um this is a kind of
67:03 - envelope known as an adsr envelope
67:07 - attack Decay sustain release well that's
67:09 - a new song for us attack Decay sustain
67:13 - release that could be a
67:15 - song Lynn Manuel Miranda I am not not
67:18 - anywhere close um okay so an envelope
67:22 - can control an oscillator frequency huh
67:26 - set range to change the attack release
67:28 - level use set asdr to change the
67:31 - attack uh okay so let's look at an
67:34 - example here
67:36 - probably where you create an
67:38 - envelope you set
67:41 - its
67:43 - adsr attack level release attack time
67:46 - Decay time sustain percent release time
67:48 - and then attack level release level I
67:51 - got to understand what those are uh
67:56 - um those must be the amplitudes and then
68:00 - uh and then what you do sorry sorry
68:02 - sorry I'm figuring learning this is the
68:06 - envelope is the thing that you
68:08 - play oh no no envelope. playay so how
68:13 - this is kind of what one of the things
68:14 - that's a little bit often a little bit
68:16 - confusing to me about the P5 J Sound
68:17 - Library is that it looks like it will
68:19 - tie these two things together by default
68:22 - like nowhere in the code do I say use
68:25 - this oh no no there it is amplitude is
68:28 - with the envelope okay so that's how the
68:31 - envelope is tied to the oscillator so
68:33 - the oscillator so let's um and uh okay
68:36 - so let's see what happens here uh oh
68:39 - click the
68:41 - way you guys hear that so attack level
68:45 - release
68:46 - level attack time Decay time sustain
68:49 - percent release
68:52 - time so if I were to edit this
68:57 - and have the release level be 0. five
69:00 - for
69:02 - example it releases not to zero okay so
69:06 - that makes
69:08 - sense the attack time if that were like
69:12 - a full
69:16 - second you can hear it takes a second
69:19 - and if I make the Decay
69:22 - time
69:24 - [Music]
69:27 - the release so what's the difference
69:29 - between deay time and release time wait
69:33 - I wrote
69:35 - this so this is sustained to I I I call
69:38 - these different things attack Decay
69:41 - sustain
69:43 - release boy I maybe my book is
69:48 - wrong um
69:50 - attack so I don't want to actually look
69:52 - at this right now
69:54 - um because this is wrong but I it got me
69:57 - going this is a this is a good thing to
69:59 - so let me understand this before I make
70:01 - the video attack Decay
70:06 - sustain okay I should be back I'm going
70:10 - to check the oops ah I'm in the wrong
70:12 - place here I'm going to check YouTube
70:15 - chat uh to see when you if you're
70:18 - watching on YouTube and you see me again
70:19 - let me know um also uh can you hear he
70:23 - my audio is it's not doing that horrible
70:25 - looping thing anymore and then I
70:26 - unfortunately I had to re all my
70:28 - settings got lost when whatever crashed
70:31 - so I got to play some sounds
70:33 - again I don't have it within me to do my
70:36 - ridiculous dancing thing this is me
70:39 - being like tired dancing after like an
70:42 - hour of live
70:44 - streaming um somebody can make a gift
70:47 - out of that I'm sure H uh how is uh that
70:51 - is the level fine between those two
70:52 - sounds
70:54 - okay hold on I uh I did get some
71:00 - water okay so here I am again I kind of
71:06 - lost my momentum and energy but
71:07 - hopefully I can gain that back
71:10 - um and let me come back here to where I
71:13 - was the fortunate thing is that did not
71:16 - happen
71:18 - um it did the the the sound issue this
71:22 - has happened to me before I don't know
71:23 - why happens there's something going on
71:25 - with I have like a lot of different USB
71:27 - connections into the computer and I
71:29 - noticed when when this happens like the
71:31 - mouse the keyboard stops working but I
71:33 - can remote desktop into the computer
71:35 - something going wrong with like all the
71:37 - USB connections get on the fritz maybe I
71:38 - need like a USB hub or something anyway
71:42 - um okay I think I might actually be
71:44 - broadcasting to Facebook now because it
71:46 - didn't work before but so hello Facebook
71:48 - this is actually the second half of a
71:50 - live live stream if you're watching um
71:52 - the full thing will be an archive on
71:54 - YouTube at some point if you want to go
71:55 - over there and look okay um all right so
72:00 - the thing that I'm on is 12:15 I've got
72:02 - about 45 more minutes I think to go here
72:04 - I'm going to see if I can get these two
72:05 - things done I want to do a video
72:07 - tutorial about audio envelopes and this
72:10 - is my new reference for an adsr envelope
72:14 - um the attack
72:17 - is the
72:20 - um how long it takes to get up to its
72:22 - attack volume then the Decay is how long
72:24 - it takes to get to its sustain volume
72:26 - and then release is how long it takes to
72:28 - go down to zero and so then if I look at
72:31 - the P5
72:32 - example these are the attack time Decay
72:36 - time sustain percent release time and
72:38 - then this is
72:39 - the attack level but shouldn't this be
72:41 - the sustain level right no that's the
72:45 - release level so oh this is the
72:48 - sustained volume got it ah so it's not
72:51 - it would go so what happen happens if
72:54 - you don't set the range this is my
72:56 - question so like for example right now I
73:00 - have an attack level and a release level
73:04 - so what if I just make an attack time
73:06 - and a Decay time and a sustain
73:11 - percent but if I take out if I don't
73:14 - bother with this is there some
73:19 - default yeah so it must be there must be
73:21 - some default levels so this is really
73:23 - confusing because there are
73:26 - three there are three different volumes
73:29 - amplitudes there's the first amplitude
73:31 - the sustain amplitude and the and the
73:32 - end amplitude and then there's three
73:35 - different like moments there's the
73:37 - attack how long it takes to get to the
73:38 - first volume the second one and the last
73:40 - one okay
73:43 - um all right everybody so I think I'm
73:46 - ready now to do this
73:49 - tutorial let me keep this page open you
73:52 - definitely uh this page I'm done with
73:55 - this is a good one I think is there a
73:58 - way I
73:59 - can I just want to kind of I think I
74:02 - want to do this if
74:05 - possible this is better to look at okay
74:08 - so this is a nice diagram also that I
74:11 - think I will use instead of having to do
74:12 - my
74:14 - own
74:16 - uh uh this is the reference page for
74:19 - envelope so I'm going to come down
74:22 - here
74:25 - might need this as a
74:27 - reference
74:30 - uh and this is oh okay so now what I
74:32 - need to
74:34 - do
74:36 - is go to the sound
74:39 - folder so this is going to be sound
74:42 - synthesis
74:44 - O2 and uh in atom here let's open up
74:48 - sound synthesis
74:52 - O2
74:59 - so what I want to do
75:02 - is
75:04 - um get rid of the
75:07 - slider simplify I don't need this
75:10 - playing thing anymore I need a button I
75:13 - need an
75:16 - oscillator um and let's set it the
75:20 - [Music]
75:22 - sign
75:28 - and get rid of all
75:32 - this
75:34 - um okay so I just want to simplify this
75:39 - to oops uh Sis 2 playing is not
75:49 - defined false
75:52 - okay
75:55 - so that is that working for you guys
75:56 - it's fading in and out
75:59 - okay okay great I don't see anybody
76:02 - yelling at me in the chat that anything
76:04 - has gone horribly wrong so I think I'm
76:06 - ready for
76:09 - envelopes yay
76:12 - envelopes yay envelopes I need some
76:19 - energy envelopes yay attack
76:24 - a d s r a it's like I'm like a
76:28 - cheerleader a
76:31 - d
76:32 - s
76:34 - r attack Decay sustain release
76:43 - okay all right I think I'm ready for
76:45 - this
76:49 - uh yeah definitely don't quit my day job
76:52 - uh that's for sure uh all right so let
76:55 - me erase this over
77:12 - here
77:15 - okay by the way sorry I'm over here
77:18 - erasing the Whiteboard I just uh needed
77:21 - a break from the camera
77:28 - so
77:30 - okay
77:32 - okay coming back going to have a little
77:36 - water here I
77:40 - am
77:44 - hello this is even better watch this
77:46 - let's see if I can make this
77:50 - happen going up an escalator
77:54 - okay uh um all right
77:58 - so let
78:00 - me do I dare have this diagram open when
78:04 - I begin this particular
78:07 - video
78:09 - uh I guess I
78:12 - will okay let me cycle the
78:19 - cameras
78:21 - and
78:23 - I'm going to get this done okay here we
78:31 - go
78:33 - okay oh yeah we need a
78:37 - screenshot
78:40 - thumbnail okay those are some
78:45 - thumbnails okay um here we go one it's
78:49 - really hot in here I've been doing this
78:51 - for it's a hot day in New York
78:53 - okay I'm recording I'm streaming and I'm
78:59 - ready hello welcome to another video
79:02 - tutorial about sound synthesis and in
79:04 - this video I am going to look at
79:06 - something called an envelope it's you
79:08 - know if I had an envelope in front of me
79:10 - here I would open it up and reveal the
79:12 - winner of I don't know what some sort of
79:15 - bizarre coding tutorial awards show
79:18 - thing and then I would thank my mother
79:19 - and my father and would be very awkward
79:21 - the orchestra would try to play me off
79:22 - but that's not what I'm doing here
79:24 - today that really did not need to be in
79:26 - this
79:27 - video but anyway but envelope this is
79:30 - the reason why is this the the thing is
79:32 - this envelope thing that I'm about to
79:34 - talk to you about is a really quite
79:35 - lovely and simple
79:39 - idea I got to just start over there was
79:41 - too much nobody wants to watch that at
79:44 - the beginning of
79:49 - [Music]
79:51 - video
79:55 - okay it's so hot in here I'm
80:01 - dying
80:02 - okay I'm gonna I'm gonna do a revised
80:05 - version of that joke GNA keep
80:10 - it I'm Gonna Keep the joke I don't have
80:13 - an envelope wait let's see if I can find
80:15 - one oh actually you know
80:21 - what
80:24 - I totally have an envelope because I
80:26 - have some tax forms there's got to be an
80:28 - envelope in
80:30 - here right got like tax
80:33 - forms check reimbursement from the
80:36 - dentist
80:40 - Insurance ah here's an no there's no
80:42 - envelope all this
80:46 - paper you guys really just want this
80:48 - tutorial don't you okay sorry here we go
80:51 - I thought I had an envelope
80:53 - a prop I I just I just aspire to use
80:58 - props I didn't I don't have an envelope
81:01 - I'm looking around oh wait wait wait
81:02 - look look
81:10 - look
81:17 - envelope okay here we go ready
81:21 - everybody
81:24 - hello and welcome to another sound
81:27 - synthesis tutorial this sound synthesis
81:29 - tutorial is about
81:31 - envelopes and the winner
81:34 - is oh no I don't know what I've just
81:37 - done the winner is the p5js Sound
81:41 - Library okay no not about that okay what
81:43 - I'm really here to talk about is this
81:44 - kind of envelope and this looks like
81:46 - kind of a very scary weird looking
81:47 - diagram but I'm actually hopefully going
81:49 - to make it make sense to you in this
81:51 - video and I've lost my marker here's the
81:52 - marker
81:53 - um what I want to talk about is
81:54 - something called an adsr envelope and
81:57 - envelopes are used in the world of sort
81:59 - of sound synthesis as a mechanism for
82:02 - adjusting the way uh the playback engine
82:05 - enters and exits the sound and the and
82:07 - so you can essentially configure you
82:09 - know in the previous video I made this
82:10 - oscillator object that played a sine
82:12 - wave and the idea I'm going to wrap that
82:14 - sine wave in an envelope open up the
82:17 - envelope and put the sine wave in it and
82:19 - that envelope is going to configure how
82:20 - that sound and and you can get very
82:22 - sophistic at with this to make sounds
82:24 - that sound more like one or different
82:26 - kinds of musical instruments but really
82:28 - for us in this video I just want it to
82:29 - sound kind of like a electric keyboard
82:31 - in a way you're electric is it really
82:33 - electric I don't know if that's what you
82:34 - say but you press the key and you hear
82:36 - the sound go bu sort of attacks fades in
82:40 - and Fades out so uh in p5js there is an
82:44 - object called a P5 envelope we had a P5
82:47 - oscillator now I'm going to add a P5
82:49 - envelope we're going to link them
82:50 - together and the reason why it's called
82:51 - an a Sr envelope is because there are
82:55 - four stages now I have that diagram here
82:57 - but I think in order to understand it it
82:58 - would help to for me to try to like draw
83:00 - that
83:01 - diagram um so there is a a which stands
83:05 - for
83:07 - attack there is D which stands for Decay
83:11 - and there is s which stands for
83:14 - sustain and then there is R which stands
83:18 - for
83:19 - release okay now the interesting thing
83:21 - about this is there two kinds of things
83:24 - that are involved in an envelope there's
83:26 - stuff that's measured in time and
83:28 - there's stuff that's measured in
83:31 - amplitude so uh and interestingly enough
83:34 - attack Decay and release are all amounts
83:36 - of time so attack
83:39 - meaning the moment you press the key on
83:41 - that like piano or keyboard or whatever
83:43 - that's attacking the note so how long
83:45 - does it take in time to get up to what
83:48 - is what would be uh thought of as the
83:50 - attack amplitude or volume the level
83:53 - okay so attack is how long does it take
83:55 - to get up to that decay is how long does
83:58 - it take to get down to its regular
84:01 - volume so there's a volume like it could
84:02 - be loud at the beginning and then
84:03 - sustain at a different volume so that's
84:06 - how long it takes to Decay and then
84:08 - sustain so this is time Decay is time
84:12 - sustain is actually of amplitude a
84:14 - volume so this is how loud is that
84:16 - sustained level so this is a value
84:18 - measured between zero and one kind of
84:20 - percentage of volume
84:23 - um and then release is also a time to
84:26 - for how long it should take to get to
84:29 - fade out to its release amplitude so we
84:32 - have what's interesting here is we have
84:33 - the attack time the Decay time the
84:36 - sustain volume and then the release time
84:39 - interestingly enough though we need an
84:40 - attack volume and a sust and a release
84:42 - volume the attack so let's say the
84:44 - sustain volume is 0.5 but when we attack
84:46 - it we want it actually to ramp up to 75
84:49 - then fade down to 0.5 and then fade down
84:51 - to zero so there are two values missing
84:55 - from a DSR which is the attack volume
84:58 - and the release volume and in P5 when
85:00 - you create the envelope when you say new
85:03 - P5 actually you just say um P5 envelope
85:06 - sorry there are two functions I can't
85:07 - remember what they're called I think one
85:09 - is called set a DSR and you give it four
85:13 - arguments which are these values attack
85:16 - time Decay time sustain level release
85:18 - time and then there's another function
85:20 - which is like
85:21 - set
85:23 - I'm going to come over here and quickly
85:25 - look it up in the reference uh set range
85:29 - okay uh then the other function is set
85:33 - range and boy this pen is not working
85:34 - very well I don't if you can read this
85:36 - and those are those last two volumes
85:38 - this attack level and the release level
85:40 - so we need to configure this envelope so
85:43 - let's go into p5js and now make that
85:45 - envelope and configure it coming over
85:47 - here hello okay so you can see by the
85:49 - way now we might understand this graph
85:51 - this this chart a little bit more attack
85:54 - time then Decay time what's that sustain
85:56 - level and what's the release time okay
85:59 - um now so let me go back to my code this
86:01 - is the by the way so this is where I I
86:03 - kind of have an example built off of the
86:04 - one from my previous video where all it
86:06 - does is play an oscillator do you hear
86:09 - that I think it's playing the musical
86:10 - note a 440 HZ and then I can turn it off
86:13 - with this button so what I want to do is
86:15 - instead of just having it be just the
86:16 - pure oscillator that just plays forever
86:19 - I want to create and I'm going to just
86:21 - make a variable called e n v
86:23 - for
86:25 - envelope I just I really just want to
86:27 - use props envelope is kind of a lame
86:29 - prop but it is a prop nonetheless then
86:31 - I'm going to say
86:32 - here uh I'm going to say envelope equals
86:36 - new P5 do
86:37 - envelope and I'm going to say envelope
86:40 - dot what did I say set a
86:43 - DSR so now I need those four volumes
86:47 - values attack Decay sustain release
86:51 - attack Decay sustain release okay so
86:55 - attack is uh let's just say we're going
86:57 - to have a05 seconds for the attack then
87:01 - we're going to have 25 seconds for the
87:05 - Decay then our sustain volume is going
87:07 - to be at
87:08 - 0.5 and then uh the release time is
87:12 - going to be 0.1 so I'm kind of making
87:14 - these up the arbitrary configuration
87:17 - then I'm going to say set what did I say
87:18 - set range so I want the attack volume to
87:21 - maybe be at 8 so a bit louder and then I
87:24 - want that release volume to be down at
87:26 - zero because I want it to fade all the
87:27 - way out so now I have if we look at this
87:30 - code I have the envelope and I have the
87:33 - waveform so I need a mechanism by which
87:37 - we I connect the envelope and the
87:40 - waveform together I want that you know
87:43 - this is the waveform this is the
87:46 - envelope I want to take the waveform and
87:48 - I want to put it in the envelope oh that
87:51 - really made sense
87:52 - over here okay so the way that that's
87:54 - done is with the amplitude function so
87:57 - typically with a waveform I would set
87:58 - the amplitude to like zero or 0.5 or one
88:01 - but actually what I want to do here is
88:03 - set the
88:04 - amplitude to that particular envelope so
88:07 - now the This Is How They are connected
88:09 - the waves amplitude is set to the
88:11 - envelope and then in this play function
88:13 - I actually don't need all this toggle
88:15 - stuff because all I want to do is just
88:18 - say envelope. playay so I want the
88:21 - envelope to play it's going to play that
88:23 - oscillator wrapped in all the
88:24 - configurations of the envelope so let's
88:26 - see hopefully this is going to work I'm
88:28 - going to refresh it oh P5 envelope is
88:32 - not a
88:33 - Constructor new P5 do envelope what did
88:36 - I get wrong there so let's have a look
88:37 - at this page
88:41 - um new p5v so it's not the full word
88:45 - envelope it's justv okay thank you very
88:48 - much EnV for short then I'm going to go
88:51 - back to to my program going to run
88:55 - it do you hear
88:57 - that now does that really sound like
89:00 - playing a note at a keyboard I don't
89:02 - know if it does let's mess around with
89:03 - it let's make that attack time uh very
89:06 - very very short let's make the Decay
89:10 - time also uh shorter and um yeah so
89:15 - let's make the attack volume like a
89:17 - little bit louder so we can sort of
89:20 - hear
89:25 - and maybe the release time can be much
89:31 - longer do you hear that so there's like
89:33 - sort of a loud pop and then a little bit
89:34 - of sustain and then it fade out so you
89:36 - know now hopefully this explains the
89:38 - idea now you can to your heart's content
89:42 - I might suggest make a sketch tie all
89:44 - these to like buttons or text boxes or
89:45 - sliders configure the envelope uh have
89:47 - it play u change the frequency each time
89:51 - you play a node have a slider to set the
89:53 - frequency you can sort of set something
89:54 - up to test how this works and to kind of
89:57 - get good at and I'm sure if you research
89:59 - like standard a DSR values for
90:01 - particular instruments you might uh try
90:04 - it with a triangle wave instead of a
90:05 - sine wave you're going to be able to
90:06 - maybe control how the sound sounds a bit
90:09 - more now I should mention by the way you
90:11 - know I'm doing the sort of basics of
90:12 - generating tones with p5g Sound Library
90:15 - there's another Library you might look
90:17 - into at some point called tone.js um
90:19 - which also has a lot of uh a lot of
90:21 - features for doing this kind of work and
90:23 - pushing it further but what I want to do
90:24 - after in the next video is show you now
90:27 - how to keep track of a an array a list
90:30 - of different musical notes how to set an
90:33 - envelope and have an oscillator and play
90:35 - A Melody and possibly you know also a
90:37 - Harmony at the same time so now we've
90:39 - got the basic idea but how do I turn
90:40 - this into something that actually will
90:42 - manage time play notes or be interactive
90:44 - that the user could press keys on the
90:45 - keyboard and play certain notes that
90:47 - type of thing and I'll do that in the
90:48 - next uh video tutorial which I will get
90:49 - to at some point perhaps if you're
90:51 - watching this at some point in the
90:52 - future it's already there okay thanks
90:53 - for watching
90:55 - goodbye okay um I think that work could
91:00 - you guys hear that I the one issue I'm
91:02 - having is uh with the way I have the
91:04 - sound system set up I can barely hear
91:06 - what the sketch is playing but I'm
91:08 - pretty sure it's piping in through the
91:10 - streaming recording system
91:14 - so ah oh oh oh thank you Alvaro Alvaro
91:18 - is um is uh is is is giving me a
91:22 - correction which I think is really
91:24 - important um yes it was audible um uh so
91:29 - I want to read this I'm just going to
91:30 - read alv Val's comment sustain level is
91:32 - the percentage at which the amplitude
91:34 - stays while the key and the piano or
91:35 - keyboard synth is still down the release
91:38 - time is the time it takes to fade out
91:39 - when the key is released so I wonder
91:41 - what default amount of time it's
91:44 - considering the key pressed when I just
91:46 - say envelope. playay in p5js maybe I
91:49 - should make a little addendum to that
91:50 - video does anybody know the answer to
91:53 - that if only Jason seagull were watching
91:54 - this video in the chat right now he
91:56 - would be able to say so hold on I have
91:58 - to look trigger release you should also
92:01 - talk about trigger attack trigger
92:03 - release okay okay I'm going to make an
92:05 - addendum to this video this is my new
92:08 - thing uh okay let me take a look at that
92:12 - in the uh reference
92:19 - page ah so play
92:26 - tells start acting on a given input
92:28 - sound object an envelope right
92:33 - okay
92:35 - ah
92:38 - okay I will explore this I'm going to
92:40 - just add a one sentence explanation at
92:43 - the end of the video um but and then I
92:48 - will I will explore trigger attack and
92:50 - trigger release in a separate uh video
92:53 - possibly in one of the next ones thank
92:54 - you Alvaro for that correction that's a
92:56 - really important one so let me get to
92:58 - your comment so I can I'm going to do a
93:00 - quick addendum which can get edited on
93:01 - to the end of that video it's a new
93:03 - thing that I'm doing okay
93:09 - um okay oops I'm back again with another
93:12 - addendum one thing that I never actually
93:14 - talked about was uh how long should this
93:17 - note sustain itself and you notice
93:19 - that's not really actually a variable
93:21 - anywhere in this uh there's no there's
93:23 - no sustain time there um so the reason
93:25 - that isn't is because typically the way
93:27 - these envelopes are implemented is if
93:29 - you're thinking about playing a piano or
93:30 - keyboard s the note is sustained as long
93:32 - as you're holding down that key um so uh
93:37 - in uh some default amount of time I
93:39 - guess is being used but there is also
93:41 - the functions trigger attack and trigger
93:43 - release so you can trigger the attack
93:45 - instead of just calling play you can
93:47 - actually trigger the attack for that
93:48 - envelope and have it sustained for an
93:50 - arbitrary amount of time until you Trigg
93:51 - trigger release and that allows you to
93:53 - do a few more things uh with how you
93:55 - control the envelope and the playback
93:56 - and I I'll try to do an example in a
93:58 - later video which uses trigger attack
94:00 - and trigger release okay thanks for that
94:01 - little extra note or watching that extra
94:03 - note that is thank me for the extra note
94:06 - I don't
94:08 - know okay
94:13 - uh okay
94:17 - um uh Mouse down and mouse release
94:20 - listeners okay so let me make a I'm not
94:21 - going to do that right now that would
94:23 - have been good to add to
94:24 - this but uh I'm going to just make a
94:28 - note of that in my whoops in my um so so
94:34 - I need to do uh trigger
94:39 - attack trigger release Mouse down Mouse
94:44 - released listeners or Keys okay thank
94:49 - you Alvaro for that excellent uh
94:51 - addition I just put it in my notes I
94:54 - don't know why let's see if it shows up
94:56 - here
94:57 - um yeah so you can see it there uh yeah
95:02 - so I I made a not here that I will I
95:03 - will do a video I I'm done with the
95:05 - sound stuff for today because it's
95:06 - already 12:40 and a lot of people
95:08 - requested the super shapes thing so I
95:10 - want to make sure I do that today um and
95:14 - uh what was I saying
95:17 - um um but I but uh so so far basically
95:20 - I've done this much so far I think yeah
95:23 - so I need to do this I want to visual
95:24 - the Soundwave Melody generator or like
95:28 - uh let me uh Slash piano
95:32 - keyboard uh
95:34 - demo and let me hit refresh here
95:37 - whatever I don't know why it doesn't
95:38 - show up here immediately okay uh let me
95:40 - go back to the
95:41 - chat let's see uh whoops I lost the
95:48 - chat there's a discussion about
95:51 - artificial IAL intelligence in the chat
95:52 - going on yes I have I'm of a mind to at
95:55 - some point do some machine learning uh
95:58 - tutorials if you looking for this
96:00 - content um my two recommendations would
96:02 - be uh look into the work of Rebecca febr
96:05 - I I hope I'm pronouncing her her her
96:07 - name correctly she has a Caden course
96:09 - called machine learning for artists I'm
96:11 - sure if you Google Rebecca febr machine
96:13 - learning for artists you'll find it um
96:14 - and also you can look up the work of
96:16 - Jean kogan and if you also Google Jean
96:18 - kogan machine learning for artists um I
96:22 - don't remember I don't know maybe one of
96:24 - their courses is called something
96:25 - slightly different um he has a uh GitHub
96:28 - repository in a set of screen captures
96:30 - with a bunch of different tutorials and
96:31 - I know that the um Rebecca febr in
96:34 - particular had developed something
96:35 - called wekinator which is something that
96:37 - I would like to at some point maybe make
96:38 - some tutorials about but you know to me
96:40 - um Rebecca and Gan are some of the
96:43 - people who are doing the sort of primary
96:45 - work in this field in the sort of Arts
96:46 - context and I would uh look into their
96:48 - work um in particular and I I'd be glad
96:50 - to try to be inspired by them to make my
96:52 - own tutorials but it's certainly not
96:53 - something I don't feel but but but I do
96:55 - have it on my list it's it's certainly
96:56 - been requested a lot um okay
97:02 - um
97:05 - uh the in with regards to Oliver writes
97:09 - with regards to the sustain time in play
97:11 - the default for that third parameter is
97:14 - zero okay
97:17 - interesting
97:20 - um okay so now ah so I'm done with the
97:23 - sound stuff so give me a minute
97:26 - everybody um I would play you some music
97:29 - in the
97:36 - background Gooding
97:41 - power um while the music's playing I
97:43 - need something more relaxing I need a
97:44 - relaxing music option or I could just do
97:48 - this uh I'm going to try to get my set
97:51 - up to set up set myself set up to do the
97:54 - last thing of today which is the super
97:56 - shape so what I need first is super
97:59 - shape Paul
98:01 - Bor it's so hot in this room I can't
98:03 - wait to be
98:05 - done uh so I've got the formula there uh
98:09 - I'm going to go to coding rainbow I'm
98:13 - looking for super oh I already
98:16 - interestingly enough I guess I did it
98:17 - already
98:20 - uh
98:22 - uh so I'm going to copy the super
98:26 - ellipse and call
98:28 - this super shape live so I guess I have
98:32 - one that I'll check and then I'm going
98:33 - to go in terminal where's my
98:37 - terminal uh Upp a
98:41 - directory uh coding
98:43 - rainbow uh run the server again uh go
98:48 - back to here
98:54 - um so let's look at apparently I did
98:57 - this
98:58 - already let just see here yep okay so
99:01 - this is something I practiced with so
99:03 - this is the super shape code uh
99:06 - basically but what I want to do
99:09 - [Music]
99:10 - is
99:12 - um start from
99:15 - here which was my super ellipse
99:19 - example and and let me go there
99:24 - and uh did I just close Adam super shape
99:32 - live um look at the sketch now I kind of
99:35 - want to look just briefly
99:39 - at the code that I did already just to
99:42 - like get my uh okay right so I'm these
99:45 - are the variables then I get M from a
99:48 - slider value and the step is one I
99:50 - remember this now and then I'm still
99:52 - doing this thing where I'm doing the
99:53 - loop and setting vertices calculating
99:56 - the
99:57 - formula uh and then calculating
100:01 - R
100:03 - and uh then getting X and Y from that
100:08 - okay because I just need a point for
100:11 - every angle and then also here okay so
100:15 - um I think I should be able to do this
100:18 - let's let's find
100:19 - out
100:22 - uh
100:28 - okay ah boy it's hot okay I can do this
100:31 - this is this is it is um 12:43 I hope
100:34 - that this will be uh 15 minutes or less
100:37 - and that
100:41 - um oh good thing I noticed this this is
100:44 - an issue that I have to fix this
100:47 - particular folder for whatever reason
100:51 - H that's
100:54 - weird I don't know
100:57 - what
101:01 - why oh okay no no I'm
101:05 - fine
101:09 - okay okay here we go
101:14 - everybody N1 N2 N3 and M those are the
101:19 - variables okay
101:24 - I can get rid of
101:26 - this I didn't give credit to this
101:29 - diagram but oh well I can get rid of
101:31 - this one and I can get rid of this right
101:34 - now
101:35 - and oh I see it synchronized the super
101:38 - shape ellipse with some
101:40 - oscillator now I finally so that that's
101:43 - a good you know honestly my my I it's a
101:45 - great suggestion I would love to add
101:47 - that to the tutorial to me that's sort
101:49 - of like an exercise to do once I have
101:51 - the particular code written so I'm going
101:53 - to what I'm going to do is I'm going to
101:54 - control it with a slider and certainly
101:56 - you could then take that value that's
101:58 - controlling it and use like a sine wave
101:59 - I did that with the Julia set yesterday
102:01 - so the the Julia set code actually has
102:03 - the same code to do that um does this
102:06 - super shape allow you to change the
102:07 - vertices of the shape at different
102:09 - points um well I'm going to just do the
102:13 - raw algorithm and then I sure and then
102:15 - when I'm done with that you guys can ask
102:16 - some questions in the chat you could see
102:18 - but I hopefully you guys can like make
102:20 - your own
102:21 - um uh ideas and versions out of this
102:23 - okay so let me go to
102:26 - here
102:28 - and uh this should be good
102:36 - um is both the equation of the sphere
102:38 - and ellipse and even the super
102:41 - ellipse given here the general formula
102:44 - for the super shape
102:46 - is um
102:49 - okay okay
102:54 - okay okay uh all right everybody settle
102:59 - down this is the last thing I'm going to
103:01 - do today I have a long list of things
103:02 - I'm going to get to as I'm doing these
103:03 - live sessions every week once a week or
103:05 - twice a week uh you can join the uh
103:08 - patreon and the slack where I have a
103:10 - particular Channel which is dedicated to
103:11 - discussing the topics that I'll do in
103:13 - future videos okay so uh here we go I'm
103:16 - going to cycle the
103:19 - cameras
103:25 - um and uh one thing I need to do very
103:28 - briefly is just clean the Whiteboard uh
103:31 - in case I want to use it so I'm just
103:34 - doing that right now out of view of the
103:44 - camera okay out of view of the camera
103:49 - there we go
103:51 - everything's still working audio wise
103:53 - etc etc I hope so and I think I'm ready
103:57 - I hope this goes
103:59 - well
104:01 - um
104:03 - okay okay I don't know what people are
104:05 - discussing in the chat I see lots of
104:06 - messages going by
104:08 - ready here we
104:16 - go hello and let me start over
104:21 - I'm so tired hungry and so hot in here
104:24 - last thing here we
104:26 - go hello and welcome to a video tutorial
104:29 - about programming something called the
104:31 - super shape ah look at that formula in
104:33 - I'm going to do this in JavaScript going
104:35 - to use the p5js uh formula this is a
104:38 - topic which is a continuation of a
104:40 - previous video that I made about the
104:41 - super ellipse I'm essentially going to
104:43 - use the exact same code I had in my
104:45 - previous super ellipse video and turn it
104:47 - into this other more elaborate formula
104:49 - called the super shape the super shape
104:51 - uh is an this is Paul bork's uh website
104:54 - I'll include a link to it in the
104:55 - description this is a page documenting
104:57 - how to do this from 2002 and the
105:00 - equation is something based on Johan
105:02 - gilis Giles I'm not sure if I pronounced
105:04 - that correctly um and you know this is
105:06 - these are formulas that are designed to
105:07 - try to simulate and create different
105:09 - kinds of natural forms and eventually if
105:11 - I am strong enough if I'm courageous
105:14 - enough if if I can manage it I'm going
105:17 - to in the next video finally look at the
105:19 - super shape in 3D which allows to start
105:22 - creating forms that look like this sort
105:24 - of stuff but at first we just want to
105:25 - see if we can make these 2D like forms
105:28 - with different parameters for this
105:30 - particular formula so let me come back
105:32 - and here is the formula okay so what's
105:34 - the core idea here um let me come back
105:37 - to the Whiteboard here for a second the
105:38 - core idea if you've forgotten is that I
105:41 - have this idea of a polar coordinate
105:43 - system so I have some R and some angle
105:48 - and actually what I'm going to do is I'm
105:50 - going to iterate over every possible
105:52 - angle from zero all the way to 2 pi and
105:55 - actually you can generate interesting
105:56 - super shapes by doing this multiple
105:58 - times so going like from 0 to 2 pi like
106:00 - six times um and what I'm going to do is
106:03 - with this angle I need some way of
106:04 - calculating R so that for example uh if
106:07 - if one of the super shapes might look
106:09 - something like a
106:10 - flower that R is changing based on the
106:13 - angle in a way like it's oscillated
106:14 - almost like you could just sort of do
106:15 - this with a sine wave like you could say
106:17 - you know R equals s of the angle which
106:20 - is that actually giving me like a
106:22 - backwards headache because there's so
106:23 - much wrapped up but anyway you get the
106:24 - idea I need to calculate R from Theta
106:27 - and in
106:28 - fact that's what this formula is doing
106:30 - it's saying 1 / R equals all of this
106:33 - stuff and fi being the angle or I'm
106:35 - saying Theta that's I think that's the
106:37 - Greek letter fi or F or I don't know
106:39 - everything's going wrong today and you
106:41 - know I can flip this one over R equals
106:42 - that so R equals that so I need to
106:43 - figure out a way of getting this formula
106:45 - in my code it's going to be a bit
106:46 - awkward I'm sure I'm going to make some
106:48 - mistakes but the other thing that's
106:49 - really important here is that looking
106:51 - deeper into this formula there are four
106:54 - constants oh A and B by the way ah okay
106:57 - so there there're actually more than
106:58 - four constants there's like six I think
107:01 - there's a b m that's not six yeah it is
107:04 - a b m N1 N2 and N3 So based on those
107:08 - values you are going to get a variety of
107:11 - different um of different results and
107:15 - you can see here if I look at this page
107:17 - you can see with different values of M
107:19 - we got these different results so
107:20 - hopefully I'm going to do this correctly
107:23 - and we'll see the results that are in
107:26 - that that are on this page so let's go
107:27 - to the um let's go to the code and this
107:29 - is actually just the code now that I
107:31 - picked up from the super ellipse um and
107:34 - you can see I'm running this here this
107:35 - is the super ellipse which is just
107:36 - changing uh one particular parameter to
107:38 - create these different kinds of
107:39 - ellipsoid patterns and I am now going to
107:43 - go here I actually don't need this
107:45 - particular function and I'm going to the
107:48 - thing that I'm going to leave in here
107:49 - which is the most most important
107:51 - thing
107:53 - is this so ultimately what I need is
107:57 - begin shape and shape every single angle
107:59 - and I need to get an X and A Y and I
108:01 - need to draw that vertex so this I need
108:04 - uh and then I'm I'm not going to worry
108:05 - about the slider thing right now we'll
108:07 - come back to that later what I also need
108:10 - is I need to have a bunch of constants
108:11 - so I'm going to say I have
108:14 - N1 I'm going to have N2 I'm going to
108:17 - have N3 I'm going to have M and I'm I'm
108:20 - going to have a and I'm going to have B
108:22 - now for Simplicity right now let's make
108:24 - everything
108:26 - one and obviously you know you can
108:28 - declare and initialize variables all in
108:30 - one line in all sorts of fancy ways but
108:31 - I'm just going to be very explicit about
108:33 - it those are all of my constants so I
108:36 - need to go back and forth I need two
108:38 - screens really because I really need to
108:40 - refer to this formula quite a bit but I
108:42 - think what might make things nice and
108:44 - actually you know Paul Bourke has a code
108:47 - for doing this here and I guess I could
108:48 - check it if I get confused or wrong
108:50 - something wrong but what I think would
108:52 - be useful to do is to create a function
108:55 - I'm going to do that up here and I'm
108:56 - going to create a function called a
108:58 - super shape and it gets an angle so this
109:02 - function receives an angle maybe I
109:04 - should call it Theta a for angle doesn't
109:06 - matter so it receives an angle and it
109:08 - needs to return
109:10 - back um uh R because that's what I'm
109:13 - trying to calculate so at the end I want
109:16 - to return
109:17 - R so let's see somehow and and I want to
109:20 - say VAR R equals 1 so let's just say
109:23 - right now let's say this is my function
109:26 - and then what I want to do here in this
109:28 - code is I want to
109:31 - say I want to say uh VAR R equals super
109:37 - shape of that angle and then I need to
109:40 - say x equals what R * cosine of that
109:44 - angle y = r
109:47 - * s of that angle
109:50 - and if I wanted to I could also like
109:52 - scale these up by some arbitrary value
109:55 - and I'm going to make that a separate
109:56 - variable like
109:59 - radius uh just to scale them up and I
110:01 - could probably build that I I'm doing
110:02 - something like ridiculous right now but
110:03 - I I'll fix this later um because it's
110:06 - returning one so the idea here is I
110:07 - should just see a
110:10 - circle okay great so this is working the
110:13 - idea here is that I have a function that
110:15 - takes the angle and sends back a value
110:18 - and then when sends back that value I do
110:19 - it for every I do it for every angle and
110:21 - I get this
110:22 - circle now of course I'm getting a
110:24 - perfect circle because no matter what
110:26 - the angle comes in I'm just returning
110:27 - one and now what I need to do is I need
110:29 - to get that super shaped formula in here
110:31 - so let's try to do that together and
110:33 - hopefully we get something that looks
110:34 - about right so I'm going to go back to
110:36 - Paul Borg's site one more time and so
110:38 - there's a bunch of things I need to
110:39 - calculate one is 1 / a Time cosine of m
110:43 - / 4 time Theta am I really going to be
110:47 - able to remember this h
110:50 - I'm going to call this uh I need some
110:54 - like I'll call this part one uh one oh I
110:58 - did something terrible so there's a
111:00 - constant called a so this I don't want
111:02 - this I want I want this to be called
111:03 - I'll call this Theta so one /
111:09 - Theta time cosine of m /
111:15 - 4 uh times that
111:18 - angle
111:21 - that's not Theta that's 1/ a Time cosine
111:24 - of theta which is the angle times m / 4
111:28 - okay so that's this thing in
111:30 - here so then I need to take the absolute
111:33 - value of that and then I need
111:38 - to uh raise it to an exponent which is
111:42 - N2 which is to the N to power that's
111:46 - part
111:47 - one now I need to do part two which will
111:49 - probably be somewhat similar part two is
111:51 - 1 / B * s of the same thing to the N3
111:55 - power okay so what did I say 1 divided
111:58 - by B and sign those are the only things
111:59 - that change and then this obviously
112:01 - needs to be part two part two this is N3
112:04 - part two part two okay so now I've got
112:07 - that formula there in two different
112:08 - parts by the way this I think is a
112:09 - useful thing to do you got this big
112:11 - elaborate formula rather than to try to
112:13 - write it all out one line of code so
112:15 - divide it into Parts okay so we got that
112:18 - now let's see okay now I need to add
112:20 - them
112:21 - together so I'll say part three equals
112:24 - part one plus part two then I need to
112:28 - take the square root of it so I can
112:29 - probably do that just in this line of
112:31 - code square
112:32 - root right and then I need to multiply
112:35 - it by N1 so I just need to say N1 times
112:40 - that so that's that so oh and this
112:42 - should be part three with no space so
112:44 - this is mostly like me just like getting
112:46 - that formula in here okay I think we're
112:48 - pretty good shape I think I'm doing this
112:49 - right
112:50 - please please please now what else oh
112:53 - one / R equals all of this so if one
112:56 - divid R equals all this R should equal
112:58 - one divided by all of this right I could
113:00 - just flip that so I should be able to
113:03 - say uh and and actually I don't need
113:05 - this bar R equals I should just be able
113:08 - to say return oh there's a dangerous
113:10 - thing that could happen here return one
113:13 - divided by part three now I'm a little
113:16 - bit afraid of a divide by um of a divide
113:20 - by zero problem so I think I better put
113:23 - something in here like if part three
113:25 - equals z then return zero I don't know
113:27 - if that's
113:28 - correct we'll look in I'm oh and wait
113:32 - this is not n times wasn't there
113:34 - something no that is what yeah maybe
113:36 - this is right okay so I think I got this
113:38 - right and maybe there's something else
113:39 - that I did slightly wrong but but let's
113:41 - see if this is good enough I have a
113:42 - working version of this I can always
113:44 - check it if this doesn't seem to work
113:45 - right okay here we go so let's just see
113:48 - what happens now if I actually let this
113:50 - be and let this go oh and by the way I
113:54 - add this like radius thing
113:58 - uh equal to 100 I don't need I don't
114:01 - need a separate variable okay so let's
114:02 - now run
114:04 - this and I oh look at that that's
114:07 - promising so I got something that looks
114:09 - right but it's a slightly different uh
114:11 - slightly different shape so let's
114:13 - actually go in let's go to Paul bork's
114:16 - Page and um How do I get over here let's
114:21 - look at okay let's look at an example
114:23 - with n1al N2 equal N3 oh if m is zero I
114:27 - should get a circle let's at least test
114:29 - that so let me make m equals
114:33 - z ah perfect I got a circle so I think I
114:36 - did the code correctly so now if I go
114:38 - back here and I look at with all these
114:41 - equal to one but if I have m equal to 5
114:44 - I should get that shape so let me uh
114:46 - change m equal to 5 and run it again
114:52 - close do I have something wrong this
114:55 - looks a little bit different um that's a
114:59 - little
115:00 - distressing um pause time
115:04 - out I'm gonna see if I have a problem
115:10 - because um let me check my other
115:15 - example I'm just going to see if if I
115:18 - did it wrong in both examp examples or
115:20 - the other one so the other one if I set
115:23 - m equal to
115:28 - 5 and oh this is uh
115:32 - annoying I'm just checking my other one
115:36 - oh you know what it might be I might not
115:38 - have as much resolution in the number of
115:40 - Point what's the root wrong the N1 root
115:43 - oh it's not the square root it's the N1
115:45 - root ah thank you thank you
115:50 - uh I can't believe I made that
115:52 - mistake what a terrible mistake I just
115:55 - read that super
115:58 - quickly yeah this is not the square root
116:00 - it's not N1 times the square root it's
116:02 - the N1 root apologies for that so let me
116:05 - go back here and let me just make sure
116:10 - this power of part one 1 / N1 right this
116:17 - should be right that's the nth root of
116:19 - the two
116:22 - things uh let's
116:25 - see there we go that looks better and
116:28 - you know what I'm not getting um it
116:30 - doesn't look exactly right because I
116:31 - don't I'm I'm not doing I could do more
116:33 - points like if
116:37 - um here like this is so arbitrary like
116:41 - I'm doing this in a silly way like you
116:42 - can see now if I do more points I get a
116:45 - better version of the shape so I'm going
116:46 - to fix both of those
116:48 - things
116:50 - okay so let me put that back and what
116:54 - did I
116:55 - have uh what did I have in my function I
117:00 - had this N1 * square
117:03 - root
117:06 - okay so let me go back to the incorrect
117:08 - version there we go
117:12 - okay if I make the power negative-1
117:15 - divid by N1 you won't have to invert it
117:17 - later yes there's always a short hand
117:19 - thank you good suggestion
117:24 - okay back now I figured out the error so
117:26 - I had a major error actually I
117:28 - completely read the formula incorrectly
117:30 - this is not the square root of all of
117:32 - this times N1 this is symb this this the
117:36 - way that this is written means it's the
117:37 - N1 root of all of that added together in
117:41 - other words if N1 is equal to two then
117:43 - it's the square root so I really need to
117:44 - fix that in my code so let me do that
117:46 - briefly uh really quickly so instead
117:49 - instead of N1 * the square root I want
117:51 - to use the power function power takes
117:54 - something and if this is like to the
117:56 - n1's power part 1 plus part two to the
117:59 - n1's power if I say 1 / N1 here this is
118:04 - part one plus this is the N1 root of
118:07 - part one plus part two so I can do that
118:10 - and then if I do it again we can see aha
118:14 - now I have the correct shape but you'll
118:15 - notice something look at this there's
118:17 - like a weird like mistake here and you
118:18 - can see doesn't look exactly right here
118:20 - so one thing I've done very not
118:22 - carefully and let me fix that here is
118:24 - that I just decided in my Loop down here
118:27 - to just say ah let me look at every
118:29 - single angle start at zero go to 2 pi go
118:31 - up by 0.1 well that's not very
118:33 - thoughtful because 2 pi isn't
118:34 - necessarily perfectly divisible by 0.1
118:36 - and it's not that many points I could
118:38 - say 0.01 and I'm going to increase the
118:40 - resolution of what I'm drawing much more
118:42 - you can see now it looks much more like
118:44 - that super shape but I probably would
118:46 - make sense for me to be a bit more
118:47 - thoughtful of it uh thought thoughtful
118:49 - and say something like a I want to have
118:50 - a total of 500 points and then I want to
118:53 - have the increment the angle increment
118:56 - to be 2 pi divided by that total and
118:59 - then I'm going to always go up by that
119:01 - increment so if I just do it that way
119:04 - then I can say this is 500 points that's
119:06 - what I get with 500 points and I could
119:08 - say something like oh whoops I only want
119:10 - 10
119:11 - points and if you see that you're going
119:13 - to see it still looks right but there's
119:15 - only actually 10 points in there and
119:17 - it's there's much less curvature because
119:19 - it's drawing big straight lines between
119:20 - some of those points but this is I think
119:22 - a better way of being able to control
119:23 - this you know with 100 points looks like
119:26 - this so like what how many points do I
119:27 - really need to get kind of like a good
119:29 - resolution on that shape and when I do
119:30 - this in 3D we'll need some sort of mesh
119:33 - I hope I can do it in 3D okay so let's
119:35 - look at this now now I have this slider
119:36 - down here let's at least do something
119:38 - like tie that slider to a particular
119:40 - value so for example what if I were to
119:42 - say so one thing I want to do here is
119:44 - one thing that's interesting is that I
119:46 - want my I want actually the increment
119:48 - values of M to be uh incrementing by one
119:52 - so I want to start with an m of five and
119:55 - I want to go between 0 and
119:58 - 10 uh and then what I want to do here in
120:00 - the draw Loop is just say m equals
120:04 - slider. value so we can just sort of
120:06 - make sure things are oh oops. value make
120:09 - sure things are kind of
120:10 - working you can see now you can see as I
120:14 - move the slider that shape is changing
120:16 - and we're seeing we're getting exactly
120:18 - what is written or depicted on this Paul
120:22 - Bor website so you can see m is four I
120:24 - should get that m is five is that now I
120:26 - can see okay what are these shapes here
120:28 - what if I have n1al N2 N3 equals. 3 um
120:33 - now I could change all of these and
120:35 - obviously I could be much smarter about
120:37 - not having uh three separate variables
120:39 - uh if they're all the same value and now
120:42 - we can see what does this look
120:43 - like you can see now I have this
120:45 - particular kind of shape and you can see
120:47 - what it's doing as I change that value
120:48 - of n M so I'm going to stop here because
120:51 - I could continue doing this forever I
120:52 - could say oh let's make sliders for all
120:54 - the different variables let's try all of
120:55 - these different possibilities let's see
120:56 - can we get all of these different shapes
120:58 - so this is what I would encourage you to
121:00 - do and by the way you don't have to tie
121:01 - them to sliders try tying those
121:03 - variables to like a sign function um you
121:06 - know I could do that really really
121:07 - quickly right now like for example if I
121:09 - have uh I'm going to have a variable
121:11 - called like uh oscillate oscillate
121:14 - equals z and I'm going to say
121:16 - m equals uh you map sign of oscillate
121:21 - which goes between negative 1 and 1 to
121:22 - some value between 0 and 10 and then I'm
121:25 - going to say
121:26 - oscillate goes up by
121:29 - 0.1 and I'm going to refresh this you
121:32 - can see now this is happening that's
121:33 - happening very quickly but automatically
121:36 - so let's let's make it go up much more
121:37 - slowly and you can see here what's
121:40 - happening is it's kind of like changing
121:41 - that value on the Fly and the shape is
121:43 - kind of like wrapping around itself
121:44 - unfurling and furling so there's a lot
121:46 - of possibilities here I could add HSB
121:48 - and make it a rainbow but I encourage
121:49 - you to explore this play around with it
121:51 - see what types of forms you can get and
121:54 - uh eventually at some point I will get
121:55 - to that next video and try to do this in
121:58 - 3D to get a lot more elaborate forms
122:01 - okay thanks for watching this particular
122:02 - video and I look forward to uh seeing
122:05 - you in another one in the future
122:09 - byebye okay um so thank you guys uh uh
122:14 - for watching uh today it is 1:04 p.m. I
122:17 - don't remember how long this stream has
122:19 - now been in two parts so I'm going to uh
122:21 - um um going to have to do something with
122:23 - maa's help uh certainly to like possibly
122:26 - edit them together and publish the
122:28 - archim as one long video um but
122:30 - hopefully you got something out of it I
122:31 - think I got three new tutorials today
122:33 - basic sound synthesis sound envelope and
122:37 - uh this uh super shape so uh I also have
122:40 - another video tutorial that's in the
122:41 - backlog so this stuff will get um
122:44 - uploaded and over the weekend and early
122:45 - next week I'll be releasing these
122:47 - Standalone videos uh one at a time uh by
122:50 - the way if anybody's interested in the
122:52 - patreon and the slack Channel I offer
122:54 - download uh Google Drive share access
122:56 - for all of my video files if you want to
122:58 - watch this stuff online you can
122:59 - subscribe to that uh I'm going to just
123:01 - take a look at the chat for a couple
123:03 - minutes to see if there's any um to see
123:07 - uh to see if there's any comments you
123:09 - could randomly multiply each vertex by a
123:11 - number between zero and two and look
123:12 - really spiky says Michael that's a great
123:14 - suggestion you could use pearlin noise
123:16 - for example um
123:20 - uh I by the way I did pee when I had
123:22 - that sound issue and I restarted the
123:23 - computer I ran and peed so I didn't make
123:25 - it this full two and a half hours
123:26 - without peeing which doesn't really
123:27 - happen to me very often uh uh um so by
123:31 - the way um mam says they're waiting
123:33 - waiting for the genetic algorithm and
123:34 - machine learning series soon I 100% am
123:36 - fully prepared to do machine uh genetic
123:38 - algorithm videos but I was kind of
123:40 - waiting the Caden course that I have
123:41 - running right now the next session that
123:43 - opens up for genetic algorithm videos so
123:46 - unfortunately I don't have uh I don't
123:48 - have ownership over over those videos to
123:49 - put them as part of my YouTube channel
123:51 - um maybe that's something I can work out
123:52 - with Caden but um you'll be able to
123:54 - check that out Michael ask are there
123:55 - streams every day unfortunately there
123:56 - are not I would actually I mean I do
123:59 - have this sort of like pretend weird
124:01 - fantasy of moving to the country and
124:02 - having a garage and just doing this
124:04 - every day as my job but currently I work
124:07 - I'm I'm on summer break right now but I
124:08 - work full-time at New York University at
124:10 - a program called ITP um over the summer
124:12 - now I'm I'm kind of able to do this
124:13 - twice a week um there I'm going to be a
124:16 - way for a week in July and a away for a
124:17 - week or two possibly in August in which
124:19 - case there will be no live streams but
124:21 - I'm committed to having four live
124:23 - streams per month that's what I'm sort
124:25 - of saying for the patreon that I have
124:27 - going um and my goal is to in the fall
124:30 - to be doing this once a week and
124:31 - actually be teaching my NYU courses
124:33 - along with this video series online so
124:36 - but we'll see how much this grows and
124:37 - whether it's useful or interesting to
124:38 - people maybe I'll become a person who
124:40 - does this every day at some time um but
124:43 - until I'm making enough money to uh
124:46 - support myself I don't think every day
124:48 - is is
124:49 - realistic
124:51 - uh okay uh there's oh oh yeah so Darth I
124:55 - think you're still asking about the
124:56 - array index out of bounds exhibit I will
124:59 - try to take a look at that at some point
125:01 - um uh if anybody uh wants to take a look
125:04 - at that uh there's an issue apparently
125:06 - with the code that I posted for the
125:07 - terrain generator where if you adjust
125:09 - the width and the height an array index
125:11 - out of bounds exception happens so I
125:12 - will try to remember to look at that at
125:13 - some point uh yes KNN classifier I'd
125:17 - like to do stuff like that that sounds
125:19 - exciting uh ah yes Adrian ask can you
125:21 - make a video that focuses on the
125:22 - difference between p5js and
125:24 - processing yeah maybe that would be a
125:26 - good idea um REM I I need I have a gist
125:31 - I need a good system for keeping track
125:32 - of all these ideas and ranking them so I
125:34 - need help with that please help
125:36 - particularly in the in the slack Channel
125:39 - um uh where I can kind of crowdsource
125:42 - this stuff a little better okay um those
125:44 - were some questions oh I didn't make a a
125:47 - screen a thumbnail for this this one did
125:49 - I or maybe I did uh but
125:53 - here I'm trying to make thumbnails or
126:00 - gifts uh okay um all right so I think
126:03 - I'm gonna be say I think I'm saying
126:04 - goodbye now uh thank you again for
126:06 - watching for tuning in for your support
126:08 - for your kind comments for your feedback
126:11 - um you can get in touch with me on
126:12 - Twitter shiffman you can subscribe to my
126:15 - patreon to be a part of the slack
126:17 - Channel where I answer questions and
126:18 - discuss topics with a small group of
126:20 - people right now I think we're about 20
126:21 - people maybe in there um and I will be
126:26 - back not on Monday I know uh so likely
126:29 - on Tuesday I don't know my calendar next
126:31 - week and just to mention again if you
126:33 - want email updates for when I'm going to
126:35 - do the live streams go to coding
126:37 - rainbow.com and you can scroll down here
126:41 - uh to find a place uh to enter in your
126:43 - email address I send possibly one or two
126:45 - emails a week just with like the time of
126:47 - the next live stream and then of course
126:50 - uh links to subscribing on YouTube are
126:52 - here and becoming a patron on patreon
126:55 - maybe that should say something
126:56 - different uh and oh yeah look my is this
127:00 - me live right now look at this look
127:02 - there's me live right now so oh that's
127:05 - my previous live stream that I didn't
127:07 - make I'm gonna make that private moment
127:09 - Till It's like because I gotta have all
127:11 - this edited together hey hey you over
127:14 - there what's going on let's oh come on
127:16 - oh yeah there you go I'm here again
127:19 - live streaming I hope somebody can like
127:22 - gift this together there was a moment
127:23 - where I was dancing with myself which
127:24 - was quite amusing you should stop
127:26 - watching now I'm just gonna amuse myself
127:28 - for a little bit okay somebody asked in
127:31 - the chat what does coding rainbow mean
127:34 - coding rainbow is a reference to
127:36 - something called Reading
127:38 - Rainbow uh which is uh in the states
127:40 - here a television program and uh from
127:43 - the 80s first episode was June 6 1983
127:46 - about teaching reading and so it's just
127:48 - an OM watch that I love that program I
127:50 - was a 10 years old in 1983 so maybe I
127:52 - watched it
127:55 - um was there was that the dancing moment
127:57 - I don't know where the dancing moment
128:00 - is should do this whatever hey you you
128:06 - you get better at this programming video
128:08 - thing oh I got to do that disc oh there
128:10 - we did that oh look there's me again
128:12 - okay okay I'm going to Say
128:13 - Goodbye Oh cod in
128:16 - grabow yeah I don't know what that means
128:21 - um okay I'll see you guys thanks for
128:26 - watching I I should do like an Inception
128:28 - thing where then this video has me
128:30 - inside this video and that video and all
128:31 - of that and
128:33 - I'll I will see you guys later in the
128:35 - next live stream goodbye uh uh thanks
128:37 - for watching and all of that here's my
128:40 - most recent video which was about the
128:41 - Julia and uh oh you can also