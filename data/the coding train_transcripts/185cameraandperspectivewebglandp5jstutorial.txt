00:00 - all right I'm back again I'm kind of
00:02 - going through my list of topics about 3d
00:05 - and WebGL with p5.js and I'm now onto
00:08 - camera so in this in this video I'm
00:10 - gonna talk about camera now there are
00:11 - three functions that are important to
00:13 - look at camera perspective and ortho I
00:20 - recently did a coding challenge which I
00:22 - will link to from this video where I
00:24 - made heavy use of ortho perspective but
00:27 - I just got a terrible job of explaining
00:29 - it so I'm gonna try to come back to that
00:31 - in this particular video but let's start
00:33 - just with the camera function so the
00:35 - thing about a camera actually so let me
00:37 - let's just pretend for example that this
00:40 - is the scene that I'm looking at right
00:42 - and that's the cube and what I want to
00:44 - do is there's this idea this idea this
00:47 - is a made-up concept of a camera there's
00:50 - a camera over there I should turn it
00:51 - towards I'm out of the picture there's
00:53 - this made-up idea of a camera which I'm
00:55 - gonna draw like this what might not be
00:59 - immediately obvious to you is there are
01:00 - a whole bunch of properties associated
01:02 - with this camera for example this camera
01:05 - is at a particular location it's at a
01:07 - particular X Y Z location it's also
01:10 - pointing in a particular XYZ direction
01:14 - so a camera you can think of this marker
01:17 - as the camera it's pointing directly at
01:19 - you and it might be closer to you or
01:21 - further away it might be up here but
01:24 - pointing it you know at the ceiling so
01:25 - do I need to define I have a camera I
01:27 - need to define where everything is in
01:29 - the scene then where the cameras are
01:30 - where it's pointing but that's not even
01:32 - all I also need to define a vector that
01:36 - points up because now if you think about
01:39 - it right if this is the camera and you
01:41 - were to this is a terrible idea for me
01:44 - to pick up this camera rotate the camera
01:46 - right oh this everything's gonna go
01:49 - alright apologies for the technical
01:52 - camera this half there but you can
01:54 - imagine right if the camera is turning
01:56 - is it looking on its side is it looking
01:58 - straight up so that vector pointing up
02:00 - tells us how we're supposed to turn so
02:02 - we need all three of those properties we
02:05 - actually need and this is also an X Y Z
02:07 - value so the camera actually needs to
02:10 - set a camera we need one two three four
02:13 - five six
02:13 - seven eight nine arguments so let's go
02:15 - back and do that now here's a scene that
02:18 - I've set up it's mostly the same as the
02:20 - previous video but I'm just using a
02:21 - normal material as opposed to the video
02:23 - texture now here's the thing watch as I
02:27 - magically add a camera to this scene
02:29 - without the camera function your this is
02:33 - gonna blow your mind
02:34 - at the very beginning right up here I'm
02:37 - just gonna say translate 0 0 Mouse X
02:45 - whoa look at that camera zooming in and
02:49 - out of the scene so it's really
02:51 - important to realize that this camera is
02:53 - an artificial concept created by us to
02:56 - create the illusion of a sort of pair of
02:59 - eyes or a single eye really in the scene
03:01 - I guess it's a pair cuz you're seeing
03:02 - depth anyway to look into this scene but
03:05 - if this is my three dimensional object
03:07 - and this is my camera what's the
03:09 - difference between moving the camera
03:10 - towards it or moving the object or the
03:12 - whole scene towards the camera those are
03:14 - the same things so you can make do a lot
03:16 - of camerawork and moving things around
03:18 - and changing the view by just
03:20 - manipulating the rotation orientation
03:22 - and position of everything in the world
03:24 - but sometimes the camera function can
03:26 - actually be quite useful to do certain
03:28 - things that wouldn't be as easy to do
03:29 - without it so let's take a look at how
03:31 - that works deep breath okay so now I'm
03:34 - gonna go back I'm gonna take out this
03:35 - translate and I'm gonna add the camera
03:37 - function now where is the camera let's
03:40 - put the camera at zero zero zero now
03:43 - where should the camera look let's have
03:45 - the camera look at zero zero zero oh and
03:48 - which way is up let's have the camera
03:50 - point up zero one one points upwards one
03:54 - point down I don't know one zero so this
03:56 - is just about right the default camera
03:58 - except for the fact that what this is
04:00 - again if this is my object my scene I
04:02 - just put the camera right here in the
04:03 - same place I actually want the camera to
04:05 - be a little bit out the camera is by
04:07 - default out and I think there's like a
04:09 - specific value for this and I always
04:11 - forget what it is so I'm gonna pull it
04:13 - from a processing tutorial that I will
04:15 - link to that has a lot of information
04:17 - about 3d I'm going to just grab this
04:18 - value so this is the default Z location
04:20 - of the camera 0 0 and then I put it here
04:24 - so it's the height divided by 2 divided
04:27 - tangent of PI / 6 it's probably a better
04:29 - way to write that some sort of magic
04:31 - number and I'm gonna now I'm gonna go
04:33 - back to the sketch we should see this is
04:35 - exactly as it was right so I'm using the
04:37 - camera function if I comment out the
04:40 - camera function there it is it's the
04:44 - same scene but now I can start to move
04:46 - the camera around for example what if I
04:49 - actually put the camera on its side like
04:52 - pointing to the right right now I'm
04:56 - looking at the scene I just turned the
04:58 - camera over we could actually animate
05:00 - that and have it bounce around as if
05:01 - it's like a shake and get a shaky camera
05:03 - that's kind of like a fun thing to try
05:04 - to do again this is no different than
05:06 - rotating the whole scene but I'm using
05:08 - the camera object to do it let's put
05:10 - that back to pointing up what if I were
05:15 - to move the camera along the x-axis so
05:19 - I'm going to say x equals map Mouse X
05:23 - which goes between 0 and with 2 between
05:26 - like negative 200 and 0 so I'm gonna
05:30 - kind of like move the camera to the left
05:32 - as I move the mouse I don't this is sort
05:35 - of silly whoops I have a syntax error 0
05:37 - with negative 200 I owe this should have
05:41 - X here now so that you probably camera X
05:43 - just to be kind of consistent so now we
05:48 - can see the look it looks like it's
05:49 - spinning which is kind of weird but you
05:52 - have to remember they do where the
05:54 - camera is looking is still at the center
05:56 - so what I'm actually doing is this right
05:58 - I'm doing this right it's always looking
06:02 - at the cube it's just moving to the side
06:05 - of that plane you can kind of see you
06:08 - can kind of imagine that again if I were
06:09 - more thoughtful about this are gonna
06:11 - probably create a better visual
06:12 - demonstration but what I could also do
06:15 - at the same time is move where it's
06:17 - looking remember this is the sort of
06:19 - look at locations called Center X
06:21 - centralized centers needs to look at
06:22 - location so I have where the camera is
06:24 - where I'm looking
06:25 - and then the orientation of the camera
06:27 - so now if I did that this gives me a
06:29 - panic for some reason I did this in
06:31 - inverse I didn't mean to do that so let
06:34 - me let me just I think what I meant to
06:38 - do is this
06:39 - yeah so I don't have it backwards which
06:42 - is not a big deal
06:43 - but you can see now I'm panning back and
06:45 - forth and you know I could do something
06:47 - like change them I could have it rotate
06:49 - as I'm panning you could imagine there's
06:50 - a lot of possibilities so that's what
06:52 - the camera function does I this merits
06:55 - probably some kind of coding challenge
06:57 - where I attach the camera to some like
06:58 - moving things throughout a sea know we
07:00 - can make a shaky let's just make a shaky
07:01 - camera because that's kind of could be
07:03 - fun
07:04 - so how would I make a shaky camera let's
07:08 - have the camera camera X equal random
07:13 - negative five five let's see what this
07:15 - looks like and camera camera Y also
07:19 - equal a random amount we usually use
07:22 - Perlin noise to have it be and then I'm
07:24 - gonna give Ono the Z I'm gonna make that
07:27 - just like an offset so I'm gonna put
07:30 - this in and let's have it continue to
07:33 - look at the center so it's like a so you
07:36 - can see is the scene shaking is the
07:38 - camera shaking I don't know but you can
07:40 - see now I could probably I probably
07:42 - could have like do something weird like
07:44 - mix these values up so I could have it
07:47 - like look and slightly like also in a
07:50 - random Direction that's slightly off so
07:52 - I don't know we can see here earthquake
07:53 - earthquake so I've used the camera now
07:55 - to make kind of a little bit of an
07:56 - earthquake simulation okay so that's
07:59 - camera did a couple more things with
08:01 - that let's comment that out next I want
08:03 - to talk about perspective
08:05 - now what pretty this perspective is
08:08 - separate from the camera perspective is
08:10 - a function that defines how we how that
08:14 - three illusion of three-dimensional
08:16 - perspective is created and it involves a
08:18 - couple of things it involves a field of
08:19 - view which is really a pyramid but I'm
08:22 - gonna draw it kind of like a cone or a
08:24 - two-dimensional come right so that field
08:26 - of view could be wider or it could be
08:29 - smaller and then it also defines the
08:31 - clipping plane so in other words maybe
08:34 - actually anything that comes in front of
08:36 - this near point I don't even see or
08:38 - anything that's passed this far point I
08:41 - don't even see so there are defaults i
08:43 - also need an aspect ratio I think which
08:45 - generally would be tied to just the
08:47 - aspect ratio of your canvas but that
08:50 - there could be some nuance there I'm
08:51 - sure so I have to admit that
08:53 - I don't know that I'm not really a 3d
08:55 - person so you know I have done some
08:57 - examples of things I don't think that
08:58 - I've ever used the perspective maybe
09:00 - I've used it to kind of expand the
09:02 - clipping plane then you're in for points
09:04 - or to shrink it but generally I'm always
09:06 - working with the default field of view
09:08 - let's try to just at least add it though
09:10 - to see what we get so so if I were to
09:15 - add the perspective function let's get
09:16 - it working with the default perspective
09:18 - so the default perspective and I'm gonna
09:20 - go back to my processing tutorial to get
09:23 - these default numbers and I'm gonna just
09:27 - copy that in here and I'm gonna change
09:30 - that the processing p.3d renderer is a
09:32 - java programming environments I need to
09:34 - just quickly change this to be
09:37 - compatible to so basically the the
09:43 - default field of view is a 60 degree
09:46 - angle or PI divided by 3 the Z camera Z
09:50 - location right this is actually
09:53 - something that I already added up here
09:56 - right so the same is this right so that
09:58 - is probably um so that's kind of the
10:00 - default camera Z location and so that's
10:04 - how I'm defining odd that's how I'm
10:05 - defining the clipping plane it's the
10:07 - camera divided by 10 in the camera z
10:10 - times 10 so that's so but you know I
10:12 - could make these arbitrary numbers but
10:13 - let's just at least look and then aspect
10:15 - ratio is width divided by height so
10:17 - let's look at let's look at how this
10:20 - looks okay so now we have the the
10:24 - default perspective so the first thing
10:26 - we could experiment with here is like so
10:28 - these that that clipping plane is
10:29 - defined by where the camera is because
10:31 - you want to see something based on the
10:32 - camera but for example what if I just
10:34 - take the far end of the clipping plane
10:37 - and assign that to Mouse X I can now see
10:40 - right I kind of as I move the mouse it
10:43 - kind of clips it's sort of like taking
10:45 - away what I can render so this is
10:46 - generally something that I don't play
10:47 - with because I just want to like see the
10:49 - whole scene but sometimes in certain
10:51 - situations you might need to deal with
10:52 - it so another thing that we could play
10:56 - with is the field of view what if
10:59 - instead of having a fixed e degree field
11:01 - of view I had like a 30 degree field of
11:04 - view so it was shrunk or even like a 10
11:06 - degree
11:06 - so this would be pi divided by six would
11:09 - be a 30 degree field of view and you can
11:11 - see it's the field of view has shrunk so
11:13 - it actually looks kind of like I'm
11:14 - zoomed in on it
11:15 - I'm also the the clipping plane was
11:17 - changed so because the clipping plane is
11:20 - being defined based on the camera which
11:21 - would be fine in the field of view so
11:23 - this is this is a little bit kind of
11:24 - nuts here but let's let's um let's try
11:27 - to let's try to do something by just say
11:30 - I'm gonna have the clipping plane
11:31 - between between between zero and two
11:33 - thousand and I'm gonna put the field of
11:35 - view back to sixty degrees and I'm not
11:38 - gonna actually move where the camera is
11:41 - I'm just gonna leave the camera at as if
11:47 - there was a field of view of pi divided
11:49 - by sixty degrees so that camera and
11:51 - actually so sorry oops what I want to do
11:55 - make back up for a second here what I
11:57 - want to do to demonstrate this I think
11:59 - this is gonna work is that I want that
12:01 - camera Z location to be fixed so I'm
12:05 - gonna store that and so I'm going to
12:07 - just put in pi divided by three here now
12:11 - what I'm going to do is I'm gonna have
12:12 - the field of view be a variable that
12:15 - changes with mouse X between zero and pi
12:20 - so now what I should see is look how
12:24 - that perspective changes like this is a
12:26 - hundred and eighty degree field of view
12:28 - and MIT right here is about sixty
12:30 - degrees and now it's sort of like my
12:31 - field of view is narrowing now the
12:33 - camera is actually not moving here but
12:35 - based on the field of view we're seeing
12:37 - kind of a different volume and it
12:39 - appears closer so this is kind of a
12:44 - complex topic and I think I'm kind of
12:46 - over overemphasize it because really
12:49 - what I want to talk about which I think
12:51 - is much more important or interesting to
12:52 - play around with is orthographic
12:56 - perspective or orthographic projection
12:58 - in other words with perspective with
13:01 - traditional perspective objects that are
13:04 - farther away appear smaller than objects
13:07 - that are closer that's how we create
13:08 - this three-dimensional perspective with
13:10 - orthographic perspective objects that
13:13 - are farther away are the same size
13:15 - they're objects that are closed they
13:16 - might be different sizes but if they are
13:18 - actually the same dimensions they
13:20 - appear to be the same size and this
13:22 - creates kind of a flattened 3d look and
13:24 - this is a classic 3d look that you'll
13:26 - see in lots of game certain game designs
13:30 - like Qbert so here's an image of Qbert
13:34 - you can see how this has a kind of like
13:36 - flattened 3d flattened 3d perspective so
13:40 - and this is a this is also refer to as
13:42 - isometric projection so let's see if we
13:44 - can create and this is what a coding
13:46 - challenge I'll link you from this video
13:47 - where I do this and create a scene that
13:49 - has this kind of perspective projection
13:52 - so let me change now I'm gonna take this
13:56 - out and I'm just gonna write ortho in
13:59 - here and you're going to see oops as I
14:02 - go here I'm gonna refresh this is now
14:06 - orthographic projection and what you see
14:09 - it looks like it's skewed but actually
14:11 - as the cube rotates and it gets further
14:14 - away or closer it doesn't change its
14:15 - side so this will be a lot more obvious
14:17 - if I put a whole bunch of these cubes so
14:19 - what I'm gonna do is I'm going to take
14:22 - out the let me keep the rotate in there
14:24 - and I'm gonna make a little loop I'm
14:27 - gonna say for let X equal negative 200 X
14:31 - is less than 200 X plus equal 50 and
14:37 - what I'm going to do and I'm going to
14:39 - put push and pop inside the loop and
14:45 - actually I also want to put rotate for
14:48 - each one of these and what I want to do
14:50 - is I want to translate by X X 0 0 so
14:56 - what I'm trying to do let me take out
14:57 - all the rotate and I'm gonna make these
14:59 - boxes 50 what I'm trying to do is just
15:01 - put a row of boxes so there's a row of
15:04 - boxes we can't see that do I have it
15:06 - actually I have ortho on me take ortho
15:08 - off you can see there's my row of boxes
15:11 - now let's let's actually see this
15:13 - perspective a little bit let's make the
15:15 - boxes a little bit smaller let me give
15:18 - them actually like an ambient material
15:22 - and let me add a point light just that's
15:27 - white that is above that's like at 0
15:35 - 255 0 negative 200 and then from a
15:39 - little out front 200 so let me so we can
15:42 - see here now and it's I would like this
15:45 - love to this light you can see and let
15:46 - me make the background just a different
15:49 - a slightly different gray so we can see
15:52 - what again you can see there we go so
15:54 - you can see this perspective you can see
15:57 - how I've got this idea of sort of
15:59 - vanishing points at my eye looking at
16:01 - the center of this field of view let's
16:03 - change this to ortho let's put the
16:05 - rotates in and you can see we can see
16:10 - this perspective even more now let's
16:12 - change this to order and actually let me
16:14 - also translate along the z axis because
16:17 - this is going to be kind of key so I
16:19 - want to translate along the z axis so
16:22 - where do I do those translate I'm also
16:25 - going to translate that same x value
16:28 - minus 200 along the z axis and I'm going
16:30 - to make the boxes a little bit bigger
16:32 - whoops oh X there is no Z I'm just going
16:36 - I'm just reuse the x value so now you
16:38 - can see and let me actually say x times
16:42 - 10 whoops
16:45 - minus 200 oh X minus 200 anyway I'll
16:55 - keep them not so big okay there we go
16:57 - this is what I was trying to get for so
16:59 - you can see this perspective as they get
17:01 - smaller as they go back all right we're
17:02 - getting somewhere
17:03 - now bear with me let's turn on
17:06 - orthographic projection fourth though
17:10 - now you can see first of all so I run
17:13 - afoul of the clipping plane so if I go
17:16 - back to and look at Simon slips cheat
17:19 - sheet here which I seem to have lost I
17:21 - know here it is I can see here left
17:24 - right bottom top near far so I can need
17:26 - to define the volume the box where
17:29 - everything I see lives and so I can say
17:31 - right now I want to go left negative 200
17:34 - 200 top negative 200 bottom 200 or is
17:40 - the other way around I think it's the
17:42 - other way around top I don't know
17:47 - that's it I'm never just gonna give
17:49 - myself a really big space native house
17:51 - in a thousand just to not worry about it
17:53 - too much and I'm gonna go back to the
17:54 - sketch and we can see there we go so you
17:56 - can see even though those are going
17:58 - backwards they're all exactly the same
18:00 - size so again have I really made the
18:03 - something have I really does my design
18:07 - that I'm doing really merit orthographic
18:09 - projection again taking this out we can
18:12 - see this is what the actual scene looks
18:14 - like and for what I just did I wanted to
18:16 - look this way to be able to see that
18:17 - difference but there are some cases and
18:19 - certain kinds of flattened views of the
18:22 - world that are still have the 3d drawing
18:25 - would appear more flat that you want to
18:27 - use that orthographic projection for let
18:29 - me quickly correct one thing about ortho
18:32 - the the clipping plane near and far oh I
18:35 - can't believe I didn't realize this is
18:37 - relative to the camera so if I say the
18:40 - clipping plane is between zero that's
18:42 - here and between a thousand that's kind
18:44 - of a thousand units away this sort of
18:46 - like vague three-dimensional units away
18:49 - from the camera so me saying like a
18:51 - negative thousand two thousand is kind
18:52 - of pointless because now the K that's
18:55 - sort of by but what if you like rotate
18:57 - the camera or something maybe it would
18:58 - matter but I don't know it but so let me
19:02 - actually just put this back at zero and
19:04 - you know I could say 0.01 maybe it's
19:06 - most accurate but just to see that that
19:08 - is yeah so that's what I needed to do I
19:10 - just need a further further far value
19:14 - and could start at zero okay so what am
19:16 - I missing
19:16 - I now have done some tutorials about
19:20 - we've looked at 3d geometry primitive
19:23 - shapes we looked at material being sort
19:26 - of the skin of that geometry lights
19:28 - being light into the scene texture being
19:31 - a way of taking image data and wrapping
19:34 - it onto that geometry so we've done all
19:36 - these things and now in this video
19:38 - mostly looked at the camera which is a
19:40 - way of moving our view of the scene
19:42 - around changing our field of view or
19:43 - even changing the perspective whether
19:45 - it's actual 3d perspective or
19:47 - orthographic projection the things that
19:49 - I'm missing are how to do some custom
19:52 - shapes in 3d maybe with textures as well
19:54 - how to load a model from another and
19:57 - and also I should add to this list
19:59 - something called a shader so this is
20:01 - something certainly that can be done in
20:04 - a 3d rendering environment a shader can
20:06 - be applied to geometry in a variety of
20:08 - different ways and so at some point I
20:10 - would like to come back and do that I
20:12 - will make a quick plug for the the book
20:14 - of shaders I think it's the book of
20:16 - shaders , I'll link to it in this
20:17 - video's description for engine shaders
20:18 - it's a great resource for learning about
20:20 - them ok thanks for watching this video
20:23 - about camera in perspective
20:32 - you