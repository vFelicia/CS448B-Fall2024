00:00 - welcome to part two of making a shared
00:02 - collaborative drawing space thing in the
00:05 - browser with p5js node and sockets so
00:08 - what I had before was just a simple node
00:10 - program the only thing that it
00:12 - does is spit out my socket server is
00:15 - running but our job right now is to
00:17 - actually add code to this program that
00:19 - starts a web server and makes sockets
00:22 - available for the p5js drawing thing to
00:24 - connect to but here's the thing I missed
00:27 - something in my previous video where I
00:30 - talked about the fact we're going to
00:31 - have this node server we're going to
00:32 - have this p5js sketch the p5js sketch is
00:35 - going to connect to the node server with
00:37 - sockets but interestingly enough if you
00:40 - could just forget about sockets for a
00:42 - second there's another reason why you
00:44 - might like to write your own node server
00:46 - to host your actual files as well right
00:49 - when you do client side programming the
00:52 - JavaScript code executes on the browser
00:54 - but the browser has to get that
00:56 - JavaScript code from somewhere like when
00:58 - you type in google.com and there's
01:00 - JavaScript running on your browser that
01:02 - Google wrote you know the JavaScript is
01:04 - sitting on Google server gets sent to
01:06 - your browser via an HTTP request
01:09 - hypertext transfer protocol so one thing
01:11 - that we want the server to actually do
01:13 - Beyond just sockets is
01:16 - host
01:17 - the HTML and JavaScript files for the
01:21 - sketch itself so before I even get to
01:24 - the sockets I want my server to be come
01:27 - to be a web server and I could write
01:29 - some node code to do that but an e a way
01:32 - to do that that's a little bit easier
01:34 - than writing node code from scratch is
01:36 - to use something called a node framework
01:38 - a node package a node framework or
01:41 - package I think are good words something
01:43 - called Express so the first thing I want
01:46 - to do is show you how to install Express
01:49 - use express and write some Code Express
01:52 - is a like guess a minimalist web
01:54 - application framework a lot of things
01:55 - that you want to do very commonly like
01:57 - host files or set up you know query or
02:00 - route or all the kind of stuff that I
02:02 - might get to in other videos instead of
02:04 - having to write all the code for them
02:06 - you can call on some functions and
02:07 - express that handle a lot of that stuff
02:08 - for you so let's come back over here and
02:11 - I'm going to the computer's over here
02:13 - I'm going to go back to terminal and one
02:16 - thing I want to do first I'm going to
02:19 - attempt to be a proper citizen in the
02:21 - world of node programming and I'm going
02:23 - to run you don't you my node program
02:26 - worked without doing this but it's often
02:27 - a good idea to to to
02:31 - uh to write this command called npm init
02:35 - what npm init does is it sets up npm
02:39 - stand for by the way node package
02:40 - manager and I'm going to need the node
02:42 - package manager to install Express and
02:46 - what npm init does is it allows me to um
02:51 - sort of set up a configuration file that
02:54 - says some stuff about my project and you
02:55 - know what this looks good my project is
02:58 - is going to be called sockets coding
02:59 - rainbow
03:01 - uh can no longer contain capital letters
03:04 - so I will rewrite that without capital
03:06 - letters version 1.0 is good description
03:09 - sockets example Live on YouTube Mak s
03:13 - entrypoint server.js test command I
03:15 - don't worry about that I'll worry about
03:17 - that later uh sockets p5js node author
03:21 - is
03:22 - me and license I don't know figure that
03:24 - out later yes this seems fine so I went
03:27 - through this npm init thing and it what
03:29 - that actually did is it created this new
03:32 - file called package.json and what
03:35 - package.json is is it's a Json file with
03:38 - information about my project again I
03:41 - could probably do this without this
03:43 - completely look at that how does it know
03:46 - that the dependencies are expressed in
03:48 - socket.io
03:50 - whoa some crazy internet thing just
03:53 - happened did I put that in oh no I'm in
03:55 - the wrong place I opened the wrong I
03:57 - opened my earlier example okay this was
03:59 - my earlier example by the way I'm not I
04:01 - did this earlier today I'm not just
04:03 - figuring it out right now okay close
04:05 - that I should go here this is the
04:07 - package.json file that just got created
04:10 - and you can see here there is the
04:12 - information that I typed in the title
04:14 - The version and you don't see what
04:16 - you're what you don't see are
04:17 - dependencies so the first thing that I
04:19 - need to do in order to be able to add
04:21 - this thing
04:22 - o dramatic moment to add this thing
04:25 - called
04:26 - Express is I need to put in this
04:30 - package.json Json file that I'm going to
04:33 - use a node package called Express only I
04:36 - don't actually have to type it in there
04:38 - because what I'm going to do is I'm
04:40 - going to just say npm you see this got
04:43 - to move this over npm install Express
04:47 - now I want to do one more thing I want
04:49 - to dash I want to write D- saave and
04:52 - what this command is going to do is it's
04:54 - going to say put save Express as a
04:57 - module that should be associated with
04:59 - this project
05:00 - I'm going to do this it's going to blah
05:01 - blah blah blah magic magic and then if I
05:04 - go back to here you can see now in this
05:06 - file it has a dependency on Express so
05:10 - this is just a lot of I mean this is
05:12 - like the least interesting thing I could
05:13 - probably ever do with my day is talk
05:15 - about like package.json and packag
05:18 - manager Express blah blah blah but these
05:20 - are the steps you want to do to kind of
05:21 - set up your project before you write
05:23 - code you'll also notice by the way that
05:26 - there's this new directory here called
05:28 - node modules so no modules is where the
05:31 - all the code and stuff for Express
05:33 - actually got placed by when I typed um
05:36 - when I typed npm install Express okay so
05:39 - later I'm going to add the socket module
05:41 - but right now I'm just going to keep the
05:42 - express
05:43 - module okay so I hope that cough wasn't
05:47 - too loud into the microphone uh what's
05:50 - next everybody so now we can start to oh
05:53 - that's the that's my secret code no not
05:55 - here so now we can start to actually
05:58 - write
06:00 - we can actually start to write some
06:02 - code uh into our server itself so one
06:07 - thing that I'm going to do is I'm going
06:09 - to say VAR Express equals
06:13 - require Express so this is a way is that
06:17 - that what I wrote over here
06:19 - yeah this is a way of importing the
06:22 - module that you're using so the module
06:24 - name is Express and I want to require
06:27 - that Express is something that I have
06:29 - access to in my node program and
06:32 - essentially I want to import all that is
06:34 - the live all that is the framework
06:36 - Express and I want all of that into a
06:38 - single variable called Express the
06:39 - reason why I can do and that variable by
06:41 - the way is a function call I mean the
06:44 - variable is a variable but it's it's
06:46 - it's storing a function a JavaScript
06:48 - function you know what that JavaScript
06:49 - function
06:51 - does it makes an express application so
06:54 - I can trigger the express function and
06:57 - store the result of that in a variable
06:59 - called
07:00 - app and then even better what I can do
07:03 - is I can say
07:05 - um server equals app. listen Port
07:10 - 3000 so
07:12 - now dare I say if I run the server my
07:17 - socket server is running and look at
07:19 - that it didn't go back to terminal
07:20 - something's happening something is there
07:23 - on Port 3000 and I can go to my browser
07:25 - and say Local Host right this Local Host
07:29 - being the server is running on my local
07:30 - computer if this server were running on
07:33 - you know the New York Times website I
07:34 - would go to New York times.com colon
07:36 - Port 3000 but I'm not the New York Times
07:38 - in case you were wondering and now I'm
07:40 - going to hit enter and now it's like ah
07:43 - it doesn't know what to do but this is
07:45 - reasonable right because I haven't told
07:46 - it what to do there's no files there's
07:49 - no instructions for it to follow but
07:51 - this is the basic idea the basic idea is
07:54 - that I want to and and by the way you
07:56 - could do this without Express but it
07:58 - would be like 10 11 12 lines of code so
08:00 - I'm using Express to set myself up for
08:02 - the future of Life of less worry Express
08:06 - will give you less worry in your life so
08:08 - I require the library I create the app I
08:11 - listen on Port 3000 and now what do I
08:14 - want to do what I want is when the user
08:18 - goes to my website I want them to see my
08:20 - p5js sketch so the main thing I want to
08:23 - happen is I want to send my HTML file
08:26 - along with my Javascript file and
08:28 - everything else so they can EXP
08:29 - experience my sketch well one thing I
08:31 - need to do in order to do that is I need
08:33 - to go to this directory right this
08:35 - directory has a lot of stuff in it right
08:36 - now it has both the node stuff like
08:39 - server.js and package.json and the node
08:42 - modules and also has the p5js stuff an
08:44 - HTML file sketchs and a library I don't
08:47 - like this everything's mixed and a mess
08:49 - so I want to make a
08:51 - folder and I'm going to make that folder
08:53 - called sketch now truth be told probably
08:56 - if you see examples most people are
08:58 - going to call that folder public let's
08:59 - call it public the reason why I'm going
09:01 - to call it public is this is like going
09:02 - to be where I put files that I want the
09:04 - public to be able to see when the public
09:06 - goes to my web server they get these
09:08 - files and so what are the things I don't
09:10 - want them to see my server code but I
09:12 - want them to see my p5js sketch so I
09:14 - want the HTML file the libraries and my
09:16 - Javascript file and I want to put that
09:18 - here in public now what I need to do
09:21 - here is add another line of code which
09:25 - allows which says I want to host those F
09:28 - whenever any goes to my website I want
09:30 - them to see those files so the way that
09:32 - I do that I'm just going to copy it from
09:34 - over
09:35 - here um and I'm going to put it right
09:37 - here so this is what the code looks like
09:40 - app.use express. static so what's the
09:44 - word static for so the word static here
09:46 - is hosting static files so those are
09:48 - files that aren't Dynamic and changing
09:51 - they're just like here's an HTML file
09:52 - here's a Javascript file here's some
09:54 - images I want to host everything I want
09:57 - I want the app to use to to host
10:00 - everything in that public directory so
10:02 - that when the user goes to my website
10:05 - they see what's in the public directory
10:06 - so I'm going to hit
10:08 - save and now I'm going to hit control C
10:11 - I'm going to run the server again my
10:12 - socket server is running I'm going to
10:14 - hit refresh and look at that I don't see
10:17 - cannot get anymore but I don't see
10:18 - anything in there why don't I see
10:20 - anything in there well I don't see
10:21 - anything there because there's no actual
10:22 - sketch so let me go into public let me
10:25 - go into sketch. JS let me say create
10:27 - canvas 200 200 let me say a background
10:32 - 51 let me say ellipse like Mouse X Mouse
10:36 - y
10:37 - 660 and Let me refresh again and you can
10:40 - see there we go so now I actually am
10:43 - hosting a P5 GS sketch from node with
10:47 - just with Express with just an uh you
10:50 - know four four slash five lines of code
10:53 - so by the way I have another video which
10:55 - I would like to reference somehow with a
10:57 - link where I looked at how you can run a
10:59 - local server on your computer using
11:01 - python simple server well now here's
11:03 - another way you can run just a local
11:05 - server on your own computer with node
11:08 - with Express with four lines of code so
11:10 - we've got the basic idea now we know
11:13 - what node is we've installed it we've
11:14 - got Express we added a little bit of
11:16 - code we are now seeing our sketch in the
11:21 - browser the next thing I need to do is
11:23 - add the socket package I need this
11:26 - server to be able to make socket
11:27 - connections to the browser the client
11:30 - itself to be able to send M messages
11:32 - back and forth and that's what I will do
11:34 - in the next video