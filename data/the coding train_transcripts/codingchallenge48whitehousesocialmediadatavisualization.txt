00:00 - hello welcome to another coding
00:01 - challenge in this coding challenge I'm
00:03 - going to do a tutorial and look at how
00:07 - to work with the recently released
00:09 - social media data released by the White
00:11 - House the White House made an
00:12 - announcement today saying hey we are
00:14 - inviting artists designers researchers
00:16 - scientists people of anybody to work
00:20 - with and make projects around the social
00:23 - media data from the White House from
00:25 - POTUS from FLOTUS over the last eight
00:27 - years so check this video's description
00:28 - there'll be a link to the White House
00:30 - press release and in that press release
00:32 - there are links to download Twitter data
00:34 - for the POTUS account the FLOTUS account
00:36 - the White House account as well as
00:39 - Facebook data and vine data as well so
00:41 - hopefully I'll do another coding
00:42 - challenge or some toriel's around
00:44 - working with some of the image or video
00:45 - data so what I'm doing here is I just
00:47 - want to do a kind of drop dead simple
00:48 - example of how to sort of like get
00:50 - access to the Twitter data and how you
00:54 - can start to look at it and if you lay
00:55 - tit and like like just present it back
00:58 - in a web page I'm going to do kind of a
01:00 - simple example with no point of view but
01:02 - I'm hoping this might inspire people to
01:03 - make projects projects that are critical
01:07 - in nature or political in nature or
01:09 - wacky in nature whatever you can kind of
01:12 - like think of it be creative with with
01:14 - this data and also you know there are
01:16 - lots of other Twitter accounts out there
01:18 - and I don't want to like you know there
01:19 - is this other incoming presidents who
01:21 - has a very active Twitter account which
01:23 - only gives me a lot of like pain and
01:25 - anxiety but that said you know you might
01:28 - think about what kinds of projects could
01:30 - you make out of this data set alongside
01:32 - of other data sets as well so so now
01:36 - first of all the data itself if you go
01:39 - to the links and get it you're going to
01:41 - get the data as a CSV file beating a
01:44 - spreadsheet a comma separated values
01:45 - file what I've done for this video is
01:48 - I've converted it into a JSON file so I
01:51 - have to I'll in the code that I'll link
01:53 - to you'll see there are two data files
01:54 - potus json and flow to stuff json and
01:57 - these are json files that have all data
02:01 - for every single tweet from both of
02:02 - those accounts since those accounts
02:04 - started if we go to the POTUS JSON file
02:07 - we'll see here it is a big array of
02:11 - tweaked objects each object has an
02:13 - d timestamp source meeting what was what
02:17 - was it tweeted with Twitter for iPhone
02:19 - so interesting to look at the text and
02:21 - some other metadata associated that
02:23 - tweet now this isn't the full metadata
02:26 - associated with a particular tweet you
02:28 - don't see like how many times with that
02:29 - tweet liked or retweet or what are the
02:31 - replies to that tweet these are things
02:33 - however that you could get access to by
02:35 - using the Twitter API because you have
02:38 - the ID for each tweet so for any tweet
02:40 - ID because they hey how many likes this
02:42 - tweet have or give me all the replies to
02:44 - this particular tweet
02:45 - so at some point ultra maybe I can make
02:47 - some other video tutorials about working
02:48 - with the Twitter API that so I'm just
02:50 - going to use this particular raw data so
02:52 - the first thing that I need to do is
02:53 - figure out how do I even load this data
02:55 - into a program that I'm writing and I'm
02:58 - going to do this in JavaScript HTML and
03:00 - CSS for a web page and I'm also using
03:02 - the p5 GS JavaScript library more about
03:05 - that in this video's description as well
03:06 - okay so in p5 I'm going to go to my code
03:09 - which is here so a p5.js is a framework
03:14 - that asks you to write a setup function
03:16 - and a draw function the draw function is
03:18 - for an animation loop if I'm going to do
03:19 - something animated which I don't know
03:20 - whether or not I'm going to do so I'm
03:22 - gonna leave that out for right now and
03:23 - in the setup function I'm going to and
03:26 - actually I'm going to add another
03:27 - function I'm going to say function
03:29 - preload I'm going to create a variable
03:33 - called POTUS tweets and that in preload
03:37 - I would say POTUS tweets equals load
03:41 - JSON POTUS JSON so what I want to do
03:46 - first is just say I want to load all the
03:49 - stuff that's in that JSON file into a
03:51 - variable and in setup I'm going to say
03:54 - console dot log POTUS tweets so let's
03:58 - make sure loading the data itself works
03:59 - other JavaScript frameworks or native
04:02 - JavaScript have other ways of loading
04:04 - JSON data from a file but this is one
04:06 - way okay so I'm going to go now here I'm
04:10 - going to hit refresh then we can see
04:12 - great looks like it came in it's a big
04:14 - array we can see like if I scroll down
04:17 - there's going to be a lot of there's
04:19 - actually only 320 tweets nice thing
04:22 - about this particular dataset from the
04:23 - POTUS account is that was a new account
04:25 - um from just maybe a year or two
04:27 - guidon the first we will see as we look
04:29 - at the data when the first tweet was but
04:30 - doesn't have that much data in it so it
04:31 - makes it easy for us to kind of work
04:33 - with and play around with if I look at
04:35 - any particular tweet we can see here is
04:38 - the information the ID the timestamp and
04:40 - the text I just met with CEOs some of
04:43 - our biggest companies who are blah blah
04:45 - blah okay
04:46 - so the what do I want to do here I think
04:50 - what I want to do is just sort of see
04:52 - let's I what I want to do is try to find
04:55 - the most frequently used word in a tweet
04:58 - for each month so I need to figure out
04:59 - how to first least parse the dates of
05:02 - the tweets so the first thing that I
05:06 - want to do here is definitely have some
05:08 - sort of for loop so I could say for loop
05:11 - I equals 0 I less than POTUS tweets
05:15 - length I plus plus I'm going to make
05:19 - this variable just called POTUS because
05:21 - I'm going to probably use it a bunch of
05:23 - times and now it's a little bit shorter
05:24 - and then what I could do is I could say
05:26 - something like hey let me create P POTUS
05:30 - index i dot tweet ID and what that's
05:37 - going to do is POTUS tweets is not
05:41 - defined oops
05:42 - because I change it to POTUS so I'm
05:45 - going to save our tweets equals POTUS
05:47 - tweets and so now I can look at tweets
05:50 - dot length and create a paragraph for
05:53 - each tweet ID and we can see there we go
05:55 - here are all the IDS I can look at each
05:59 - tweets text and here you can see here
06:03 - all here's the text of all the tweets
06:05 - now you can see this by the way it looks
06:07 - makes much more sense it's actually
06:09 - listed as an irrational ER and so we
06:17 - have the data so what can I do now first
06:20 - let's just see if I could count the
06:24 - number of tweets by month okay so the
06:28 - first thing that I want to look at is
06:30 - the date/time stamp so if I look at this
06:35 - if I look at each object this here's the
06:38 - timestamp whoops
06:39 - is this so if I come back and so let's
06:44 - look at the timestamps
06:46 - we can see and we can see this by the
06:48 - way is the newest tweet in this data set
06:51 - is November 11th and the oldest tweet is
06:54 - a May 18th 2015
06:58 - I think five is May I hope so okay so
07:01 - now I have all the timestamps so now
07:06 - what can I do with that so one of the
07:09 - things that's interesting about
07:10 - JavaScript I'm good what I'm going to
07:20 - just put this a date I keep writing data
07:23 - date console dot log date and so let's
07:30 - look at this for a second
07:31 - whoops tweets is not defined so these
07:35 - are all I'm putting them in the console
07:37 - the reason why I'm doing that is I just
07:38 - want to grab one of them and I'm going
07:41 - to kind of muck around and figure out
07:43 - how do I work with a string that's a
07:46 - date in JavaScript so if I say date
07:49 - equals that I now have that string in
07:53 - this particular variable let's try some
07:55 - stuff I've done this before I just can't
07:56 - really seem to remember new date date
08:00 - that's interesting so that seemed to
08:04 - work date get a month for look at this
08:10 - we're a good shape right for now isn't
08:13 - the month five why did I get four so if
08:17 - I have this string I can create a date
08:19 - object then I can call functions on that
08:21 - five four but think about this January
08:24 - is 0 February is 1 March is 2 is so hard
08:31 - April is 3 and may 5th month is 4 so
08:37 - index 4 so we start counting from 0
08:38 - where you get 4 instead of 5 so what I
08:41 - can do now in the code is I can say a
08:46 - date object is a new date with the
08:51 - timestamp
08:52 - I can say the month is date dot get
08:58 - month the year is important to here the
09:01 - year is date get year so now I have both
09:07 - the month and the year for a particular
09:09 - tweet and what I can do is I can say the
09:14 - key now is month plus I'll just put a
09:21 - slash plus year why am I doing this
09:25 - because if you've watched any of my
09:29 - videos about word counting what I want
09:32 - to do is I need to associate a number
09:36 - the number of tweets that month with a
09:39 - key and the unique identifier of a
09:42 - particular month is the month in the
09:44 - year because I want to differentiate
09:45 - February 2016 from February 2015 for
09:49 - example okay so now we're getting
09:53 - somewhere
09:54 - I need an object which is I'm going to
09:56 - call it tweet counts I'll just call it
10:00 - counts and it's going to be an object
10:04 - and what I want to do is I want to
10:07 - figure out if counts and I'm going to
10:16 - say has own property key so I want to
10:22 - know does this object already have a
10:24 - property that's that month if it does
10:29 - increase its count so what I'm doing is
10:32 - I'm counting every time a tweet has the
10:35 - same month and year if it does not I
10:38 - need to add that property I need to add
10:43 - that property and give it a count of one
10:45 - so if now I console.log counts here and
10:49 - I run this program again we can see
10:52 - here's my object get full year thank you
10:56 - so many in the chat says that the
10:58 - function I'm actually looking for is get
11:00 - full year so let's run that again and we
11:02 - can see there we go so thank you so the
11:04 - that other function is doing
11:06 - something else slightly different so we
11:08 - can see I've now counting each by year
11:11 - so so now we could visualize this data
11:14 - let's visualize this data using canvas
11:18 - and draw like a little bar graph or
11:20 - something like that so one thing I'm
11:21 - going to do is I'm going to say create
11:24 - create canvas which is a p5 function for
11:27 - making a canvas 600 by 400 I'm going to
11:30 - say background 0 so now we can see here
11:36 - we can see I have a canvas that I'm
11:41 - going to draw two other thing I can do
11:45 - is now what I want to do hmm
11:48 - now did I get lucky art like so so
11:53 - here's the thing the order of the month
11:56 - is kind of important for what I'm doing
11:57 - right I want the oldest month to be
11:59 - first and the newest month to be last so
12:02 - let's look at one thing I could do here
12:04 - really quickly as I can say VAR months
12:07 - equals counts or object keys counts so
12:13 - this is a way of me pulling out just all
12:14 - of the keys that are in that particular
12:16 - object and just putting them in an array
12:19 - let's look and see what order they're in
12:23 - so the order is 10 16 there in word this
12:27 - looks like they're in sorted order but
12:29 - in Reverse so I should be able to say
12:31 - now month reverse I could have sorted it
12:35 - but I got lucky here they're just
12:37 - they're in the right order just in
12:38 - Reverse so I'm going to reverse it and
12:39 - now I can say for VAR i equals 0 I is
12:43 - less than month's length I plus plus and
12:46 - so now let's say I want to just draw a
12:48 - little bar graph so the first thing is
12:50 - the width of the canvas is 600 and I
12:52 - want to draw a bunch of like rectangles
12:53 - or lines or something so I need the
12:55 - width of each one of those should be the
12:57 - width of the canvas divided by how many
13:00 - months I actually have to draw and then
13:04 - I can just say let me draw I the each
13:07 - rectangle is going to have some sort of
13:08 - height let's just say the height right
13:10 - now is 100 each rectangle is going to be
13:12 - some color let's just say it's some
13:15 - shade of gray and so if I draw a
13:18 - rectangle at
13:20 - i times w write the number of months
13:24 - times the width comma the bottom of the
13:27 - canvas minus the height right so this is
13:30 - a little so the thing that I'm trying to
13:32 - do here is I want a bar graph so a bar
13:37 - graph involves a rectangle coming from
13:39 - the bottom but the way the easiest way
13:41 - p5 to define a rectangle is from this
13:44 - point here so what I actually want to do
13:47 - is say the X location is the height of
13:50 - the window minus the height of that
13:52 - rectangle
13:53 - that'll give me that point right there
13:54 - so if I come back here and I say a
13:58 - height minus H and then the width and
14:01 - I'm going to say width minus 1/2 have a
14:02 - little space and then the actual height
14:05 - itself up sketch line 32 oh float I
14:12 - wrote float because again I've used to
14:14 - programming in Java but here's just bar
14:17 - and you can see there are all of my bars
14:21 - they're all the same height if I made
14:23 - them a random height we can see there's
14:28 - now a bar graph of bars just draw it in
14:31 - canvas d3 for example if I use that
14:33 - would be able to do this probably for me
14:34 - automatically with SPG's and be so fancy
14:36 - but this is one way of doing it in p5 so
14:39 - now I want those bars to actually not
14:42 - just be random numbers but I want them
14:43 - to tie to the actual number of tweets so
14:45 - what I can do is I can say num equals
14:49 - counts index the key months index I so
14:55 - this is a little that syntax a little
14:57 - bit ugly looking and confusing to follow
14:59 - so I'm just going to say month equals
15:01 - months index I and then I want the count
15:05 - for that particular month and H I'm just
15:08 - going to say is equal to that particular
15:10 - number so we can see now here's my graph
15:13 - of tweets frequency by month then video
15:17 - there's not that money so I could say
15:18 - you know times 10 and we can see I
15:21 - expand it up now one thing I might want
15:23 - to do is actually normalize the data so
15:25 - I might want to find the maximum value
15:27 - and the minimum value and then normalize
15:30 - each bar so that the maximum is the
15:32 - tallest let's quick
15:33 - we add that here you know again a
15:36 - library you know a data library is going
15:38 - to do this kind of stuff for you
15:39 - automatically but we could pretty
15:41 - quickly normalize this data ourselves
15:42 - and what I want to do is there's
15:48 - probably I'm trying to think there's
15:49 - like also to like fancy ways you could
15:51 - probably do it but I'm gonna do it in a
15:52 - very simple way which I'm going to say
15:53 - like max max tweets equals zero so I'm
15:58 - gonna start by assuming that the max
16:00 - tweets are zero then I'm going to look
16:04 - through here I'm going to just look
16:07 - through all of the values in advance the
16:13 - same way I'm doing here but I'm going to
16:18 - say if num is greater than max tweets
16:22 - whoops
16:26 - then max tweets is that number so what
16:30 - I'm doing is I'm doing a quick loop to
16:31 - say like I assume the max tweets are
16:33 - zero anytime I find something bigger
16:34 - than that that'll be the maximum number
16:36 - so now I have the maximum amount of
16:38 - tweets and now what I could do is I
16:41 - could say H equals map they could use p5
16:45 - s mapping function which takes the
16:47 - number of tweets which has a range
16:49 - between 0 and max tweets and map that
16:52 - range to between 0 and what how about
16:57 - height how about height divided by well
17:02 - let's not be too fancy about this that
17:04 - the window is 400 pixels high I'm just
17:07 - going to say 300 so now if we do this
17:10 - again we can see that this particular
17:11 - month which had the highest number of
17:14 - tweets is at the the top of our sort of
17:17 - our mapping so the so this is now the
17:20 - bar graph of Obama's POTUS ik the POTUS
17:24 - that counts tweets by months from the
17:27 - first month which looks like it's for
17:30 - May 2015 all the way to November 2016
17:34 - ok okay so now let's this soar we've
17:40 - gotten somewhere we're doing a little
17:41 - bit of visualization things that if you
17:43 - were when after I published this code if
17:45 - you want to like try to do your own
17:46 - stuff
17:46 - this you know you could have a mouse
17:48 - hope you could have a key to show the
17:49 - the month you could have another Twitter
17:52 - account you can add the FLOTUS account
17:54 - to have like the bar side by side you
17:57 - can hover over it to see more
17:58 - information I could put the number of
18:00 - the actual tweets I could draw that onto
18:02 - the canvas as well but all that aside
18:04 - let's do a little bit of something else
18:06 - let's do some word counting to see if we
18:08 - can find the most frequently used word
18:10 - for each month as well okay now so this
18:17 - is something I'm going to need to deal
18:18 - with here so in addition I have key by
18:22 - month but what should each one of those
18:25 - months have each month should actually
18:28 - have a dictionary of words and they're
18:32 - counts so we immediately have made this
18:36 - program so much more complex right the
18:39 - only thing we're associating with each
18:41 - month right now is a number how many
18:42 - tweets but now what I need to do is
18:45 - really I need to have an object right
18:52 - and in that object
18:54 - I might start off with some stuff like
18:59 - the number of tweets total is one and
19:02 - then I might have words which is going
19:06 - to be another object
19:07 - so for each month right and counts is
19:11 - kind of like the wrong word now but I'll
19:13 - just leave it in there I have I want to
19:15 - have an object that stores information
19:17 - about all the words that were used that
19:18 - month and the total number of tweets
19:20 - that month and then here this has to
19:22 - change to dot total plus plus right
19:25 - because I'm increasing the total each
19:27 - time it's founded already and then I am
19:31 - also here what would have to change is
19:36 - dot total and dot total here so I should
19:40 - have the same exact program right now
19:45 - mmm
19:46 - missed something
19:48 - so I had said months index I dot total
19:52 - which doesn't exist for the month one of
19:53 - these weird mysterious JavaScript
19:55 - problems here we go
19:56 - so now I'm back to where I started but I
19:58 - have an opportunity now to add more so
20:01 - the thing that I need to do is also look
20:03 - at the text so the text is the tweet
20:10 - tweets index I dot dot text so now I
20:17 - have the text of each tweet the words so
20:23 - to speak are that text split right the
20:27 - split function takes a piece of text and
20:29 - chops it up into pieces makes it into an
20:31 - array and the thing that I tell it to
20:33 - split by that's what the thing that's in
20:36 - between words so the simplest thing I do
20:38 - is just slip by space or I could save
20:40 - slip by space or comma or period I'm
20:42 - going to do something a little bit goofy
20:44 - which is I'm going to say and this is
20:46 - using a regular expression so I have
20:48 - some video tutorials about that which
20:50 - split by anything that is not a word
20:53 - character so this means backslash W is a
20:59 - meta character that stands for any
21:02 - character that isn't a letter or a
21:04 - number use that to split and the plus
21:07 - means it's okay if there's a bunch of
21:09 - those in a row so if it's exclamation
21:12 - point exclamation point exclamation
21:12 - point or comma space use those together
21:15 - to split so if I even just look at this
21:18 - console dot log words and run this
21:23 - program again we can see here that you
21:26 - can see I now have all of these arrays
21:28 - of words so now what I need to do is
21:32 - count write this words object should
21:36 - have every single word an account in it
21:38 - boy this is like nested objects there's
21:40 - a lot to hold into our head here I think
21:42 - I could do it you like if you're having
21:44 - trouble following like a pencil and
21:46 - paper diagramming this might help pause
21:47 - but don't put me on a half speed desires
21:49 - now like a drunk person to be honest but
21:53 - anyway that's another story for another
21:56 - time there's no story there what am I
21:57 - talking about
21:57 - okay so what was I saying right so now
22:02 - what I need to
22:02 - - is okay so this should thinking here
22:13 - because this is I made this a hard
22:15 - problem so this should happen first I
22:19 - should because I need to figure out if
22:22 - there's an object there already once
22:24 - that's done I actually should be doing
22:27 - this afterwards so once that's done I
22:31 - can do this and what I can do now is I
22:35 - can loop through and I think I don't
22:39 - want to use I here right I'm already
22:41 - inside a loop with I so I better make
22:43 - sure I use a different index for this
22:45 - particular loop look at every single
22:47 - word word equals words index J now what
22:53 - I want to do is something very similar
22:54 - right I actually want to now count the
22:58 - frequency of the words so what I want to
23:04 - do is say a word what I want to do is
23:09 - say if count write counts is the key
23:16 - accounts key counts for this particular
23:19 - bunch dot words has own property right
23:27 - if this particular words object has that
23:31 - property already oh boy I made this
23:34 - really complicated event counts index
23:37 - key dot words index word plus plus so
23:43 - each word is going inside of that words
23:46 - object is going to be associated with a
23:48 - number otherwise set its initial value
23:54 - to one okay so this is a this one quiet
23:57 - there's a lot of nesting going on here
23:59 - and I think if we look at the object
24:00 - itself in the console will actually help
24:03 - make this immediately clear because it
24:05 - seems sort of crazy but it's actually
24:07 - not that but but the nesting here is
24:09 - confusing because there is an object
24:12 - called counts and for each member of
24:15 - that object
24:16 - each property each month property there
24:18 - is an object that has a total and a
24:21 - words object and that words object has a
24:23 - bunch of words and counts totals in that
24:25 - as well and that's what I'm doing down
24:26 - here okay so let's put back in it so
24:29 - it's there already so let's run this
24:31 - again and we can see here here is this
24:35 - whoops here is this object so I want to
24:39 - look at is let's see if this worked so
24:41 - let's look at a particular what was the
24:42 - month that had the most was 0 1 2 or
24:45 - something so let's look at know who
24:47 - knows this was in reverse order so I'm
24:50 - this is not an order whatever let's look
24:52 - at this
24:53 - 27 tweets and words is an object and you
24:56 - can see here blank was 33 times so
25:01 - that's something I need to deal with the
25:02 - fact that oh look there's some like
25:03 - extra noise and you can see here's all
25:06 - the other words in alphabetical order
25:07 - act on climate was used three times ask
25:10 - POTUS twice big Betty floor FL may be
25:13 - for Florida three so you can see here
25:16 - here are all of the particular words and
25:19 - their counts so but we need to do we
25:21 - need to clean some stuff up a little bit
25:23 - because this is a definitely a problem
25:24 - that every single one is going to have a
25:26 - lot of blank in it so let's look and see
25:30 - here we can we can in the part where we
25:33 - are creating that table we can say if as
25:40 - long as word it length is greater than 0
25:47 - then do this ok so I just want to
25:50 - quickly test to make sure there's an
25:52 - actual word there and if I run this
25:54 - again we should see whoops I don't have
25:59 - that blank anymore and the other thing I
26:01 - should do is capitalization I should
26:03 - ignore because if though if Twitter is
26:06 - used uppercase or lowercase I should
26:09 - allow for that to count as the same
26:11 - thing so one thing I'm going to do is
26:13 - going to say words index j to lowercase
26:17 - so that way everything is lowercase and
26:21 - I can look at a given month and we can
26:23 - see we can see we've got a bit more data
26:26 - here can 5 yes I can yes we
26:30 - yes we can make this coding example
26:33 - happen yeah okay so now what do I need
26:39 - to do I need to find what is the word
26:41 - that was used the most frequently each
26:45 - month and actually will be probably more
26:47 - interesting I have a video tutorial
26:48 - about something called tf-idf which is
26:50 - term frequency inverse document
26:52 - frequency that might be interesting to
26:54 - apply here because we say what was the
26:55 - term used this particular month that was
26:58 - not used other months which would get
27:01 - you know I have a feeling where to get
27:02 - things like uh but we could we could
27:04 - kind of you know ignore we could have a
27:06 - set of words that we ignore that type of
27:07 - thing but let's at least see what we get
27:09 - okay so now what do I want to do so here
27:14 - as I'm doing the drawing I can say var
27:18 - words equals equals counts month dot
27:26 - words okay so I have now this array I
27:30 - have without these words but one way it
27:33 - would be to just sort it right sort it
27:35 - by count it's actually wouldn't be such
27:37 - a bad way to do so I'm going to get I'm
27:43 - going to call this word counts and I'm
27:46 - going to say words equals object keys
27:49 - that I can't remember what I what I use
27:52 - before object keys word counts because
27:57 - now you know now I'm just going to do
27:59 - this is silly I could sort it but I'm
28:01 - just going to do something just to find
28:03 - the the biggest one and I'm going to say
28:05 - biggest equals zero and I'm going to
28:12 - save our biggest word it is empty string
28:17 - and now I'm going to go through and look
28:20 - at words length J plus plus and I'm
28:27 - going to I'm going to say if word counts
28:35 - index word is greater than biggest then
28:40 - biggest equals
28:42 - that new count and the biggest word
28:46 - biggest just totally the wrong phrase
28:49 - there Bigley I don't know that's worse
28:51 - for a lot of reasons is that and now
28:54 - what I could do is I'm just gonna say
28:56 - console dot log month and whoops month
29:04 - and biggest word and biggest so let's
29:08 - just look at that data in the console
29:10 - and we can see uh something went wrong
29:13 - here
29:13 - Oh var word equals words index J so I
29:20 - need to actually pull that word I really
29:23 - this is not my finest baby I've ever
29:25 - made I need to pull that word from the
29:27 - array to look it up and we can see here
29:31 - right the the to the we to the tooth to
29:36 - the so let's do something let's have an
29:39 - object of words to ignore and I'm going
29:44 - to say var ignore the to the we you can
29:58 - get by the way list of like most common
30:02 - words and that type of thing so I just
30:04 - made a quick object called ignore and
30:06 - what I'm going to do here is say if word
30:09 - counts is greater than biggest and it's
30:13 - not a ignore word so I want to just
30:21 - checking like it's only gonna be
30:22 - something we count as long as it's as
30:25 - long as it's not in that ignore list so
30:27 - let's do this now and see what we get oh
30:29 - ah let's put something here that will
30:33 - evaluate to true empty string evaluates
30:36 - default try to figure out a way to just
30:38 - have this be like a lookup table
30:40 - obviously we could be more thoughtful
30:42 - about this and now we can see okay so
30:44 - now we're getting somewhere
30:45 - ITT it so unfortunately oh there's so
30:49 - much mass here
30:49 - this is what this video is all about why
30:51 - you need to like clean your data people
30:53 - were thoughtful about these kind of
30:54 - things so first of all we're getting
30:55 - we're getting some
30:56 - here so first of all you get rid of of
30:58 - and an a can add those to our ignore
31:01 - list of and a I'm also going to do
31:08 - something here which is kind of
31:09 - ridiculous and say and word length is
31:15 - greater than one so I'm not going to
31:17 - allow it to be any words that are of
31:19 - like actually you know what
31:20 - nope how about no three letter and I
31:23 - think that's a three letter word and
31:27 - definitely part of X to ignore HTTP and
31:36 - HTTPS it could have done a better job of
31:39 - parsing today and I look at this now
31:41 - we've got something we'll more today
31:43 - have with refugees what this that but
31:46 - we're getting somewhere let's at least
31:48 - draw this data to the window to the
31:50 - canvas so what I'm going to do now is
31:53 - also say fill 255 and I'm going to say
32:02 - text biggest word and where do I want to
32:06 - write that i times w comma H minus a
32:12 - like five height so height minus H so
32:18 - I'm just trying to find an XY position
32:20 - that's not the top of the rectangle that
32:22 - I just drew so it's the same x value and
32:24 - then the Y values at the top of the
32:26 - rectangle and if we do this we could see
32:29 - here now we have the number of tweets
32:31 - and again this graph is like misleading
32:35 - in so many ways I'm not being thoughtful
32:36 - about the design here at all and I could
32:39 - send to the but you can see I have the
32:41 - most aggressive treatment this example
32:47 - you can see what what it takes to load a
32:50 - data file parse the data file count
32:53 - various things in the data file trying
32:54 - to store the data in various ways let's
32:56 - at least try running this with a
32:58 - different data set so I have let's use
33:03 - the the floated I think it's already
33:06 - here up so one thing I need to do is
33:09 - I need to adjust the FLOTUS data set to
33:14 - have this at the beginning as well now
33:18 - let's change this to FLOTUS JSON and
33:23 - let's run this there we go so we can see
33:27 - I got there's so much more data so
33:30 - there's a there's a the date that the
33:32 - tweets go back much less and you can see
33:34 - this particular month which has the
33:36 - highest was I don't know what this
33:38 - initiative is but that's probably a
33:40 - hashtag that got parsed out so just
33:42 - counting hashtags could have been
33:43 - interesting actually
33:44 - hashtag 62 million girls so I feel
33:48 - almost embarrassed that I don't know
33:49 - what that refers to but I'm definitely
33:50 - gonna look it up afterwards so you can
33:53 - see here that the basic idea is working
33:55 - and we've done in a coding challenge
33:58 - we've taken some of this White House
33:59 - data we've loaded it into p5 we've drawn
34:03 - some stuff in the window but what's
34:04 - really missing here are two things
34:06 - thoughtful design thoughtful approach to
34:09 - looking at the data and cleaning the
34:13 - data as well as having some sort of
34:14 - point of view or question that we're
34:16 - asking about the data and I hope that
34:18 - seeing you how to work with the data in
34:19 - a very kind of kind of rough and
34:21 - rudimentary way gives you an inkling or
34:23 - some idea so if you work with this data
34:24 - if you make stuff please share it with
34:26 - me I hope you enjoy this particular
34:29 - coding challenge and I hope that I see
34:30 - you in future ones okay good bye and
34:33 - I'll see you soon
34:34 - [Music]