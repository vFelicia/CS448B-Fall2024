00:01 - okay uh here we are again we are at a
00:03 - very exciting moment we are so close so
00:05 - close to finishing with this
00:06 - introductory section where I have no I
00:09 - feel like I'm not really in control and
00:11 - maybe I'm screwing this all up but uh
00:13 - soon we're going to be getting to
00:14 - vectors and vectors is a place where I
00:16 - think we'll feel comfortable and we'll
00:17 - sort of be on a directed path knowing
00:19 - where we're going to create these um
00:21 - Rich Motion simulations in
00:23 - processing but before we do that uh
00:25 - there's an important topic that I think
00:27 - is actually probably the most important
00:29 - of all these kind of beginning
00:30 - introductory topics about random numbers
00:32 - and that is pearlin noise uh pein noise
00:35 - is going to allow us to create a
00:37 - Randomness in our code that is smooth
00:40 - that has a more organic feel to it
00:42 - that's going to allow us to do a lot of
00:44 - um a lot of uh uh create a lot of things
00:48 - in processing that that feel a bit more
00:50 - natural or um that's really just what I
00:52 - wanted to say trying to come up with the
00:54 - right words I should stop and restart
00:56 - but I'm going to keep going okay so
00:59 - pearlin noise what is pein noise first
01:01 - of all pein noise is named for Ken
01:04 - pearlin who if we just broke through
01:07 - this wall and kept going and broke
01:08 - through another wall and went into the
01:09 - next building we would fine uh Ken
01:11 - pein's a professor here at NYU in the
01:14 - computer science department um and he
01:16 - developed um pein nois I believe while
01:18 - working on the film Tron somebody
01:21 - correct me and write nasty letters that
01:23 - I'm getting this all wrong um in in the
01:26 - 80s in fact he won a an Academy Award
01:28 - for his his work in computer Gra
01:29 - graphics and with pein noise so pein
01:31 - noise was originally developed to create
01:33 - procedural textures for 3D models in
01:36 - computer Graphics meaning okay if we
01:38 - want to have a vase that has a you know
01:40 - sort marble leg texture to it would you
01:42 - have a vase with a marble leg texture
01:43 - I'm not sure um do we need to hand
01:46 - create that with with um through
01:49 - handmade techniques or can we create an
01:50 - algorithm that will make that texture
01:52 - procedural now how does it do this and
01:55 - what is what what are we really talking
01:56 - about here well first let's think about
01:58 - this moment of time for a second this
02:00 - moment this idea of time let's think
02:02 - about time in random numbers let's say
02:05 - this line represents
02:08 - time and time is moving along this is
02:10 - the beginning of time this is the end of
02:12 - time we're somewhere in the middle there
02:14 - I suppose time is moving along and let's
02:16 - say we pick a random number at any
02:17 - moment in time okay I I'm not going to
02:20 - be able to do this because I'm a human
02:21 - being and I am just destined for pattern
02:23 - but you could imagine it's going to have
02:25 - it's going to be a a it's going to look
02:28 - something like this it's going to be
02:30 - this graph that makes no sense at all
02:32 - that just looks like a lot of squiggly
02:34 - Randomness all over the
02:36 - place any random number that we pick at
02:38 - any moment in time has no relationship
02:40 - to the previous random number that we
02:41 - picked or the next random number we pick
02:43 - there's no smoothness here so what does
02:46 - pearlin noise look like well if you
02:47 - think of pein noise over time it might
02:50 - look something more like this isn't that
02:53 - soothing and relaxing and lulling a nice
02:56 - little graph there it I know I don't
02:58 - know if I how well I drew this but this
03:00 - is Randomness in that it's random you
03:02 - can't predict is it going to go up is it
03:03 - going to go down is it going to go blot
03:05 - down a little bit but yet there's a
03:06 - smoothness to it there is this idea that
03:09 - the a cur a random number over here is
03:11 - related to the previous and related to
03:13 - the next ones random numbers change
03:15 - slightly over time this is a very
03:19 - powerful concept if we can pick random
03:21 - numbers in this fashion then we could
03:23 - have something organically grow and
03:25 - Shrink randomly but in a nice kind of
03:28 - almost breathing or organic way I'm
03:30 - using the word organic way too much but
03:32 - you can see what I'm really trying
03:33 - driving at this has a more natural
03:35 - quality to it than this and peo is
03:38 - something that you know in a way I was
03:40 - saying earlier that Randomness is this
03:41 - crutch oh I don't know what to how to
03:44 - make all my variables let's just make
03:45 - them all Randomness my crutch my
03:47 - personal crutch in life is I just make
03:48 - everything with pearing noise ah it's
03:50 - random but it'll be smooth and so people
03:52 - will like it so we need to be careful
03:54 - here we want to use these different
03:55 - algorithms in the appropriate time for
03:58 - whatever it is what Behavior or what
04:00 - sort of expressive quality we're trying
04:02 - to achieve in our animations in our
04:04 - program but this is another tool in our
04:05 - bag of tricks that we can use so the
04:07 - question is how do we use pein noise and
04:09 - what do what do the results look like
04:11 - well again let's take let's take a
04:13 - scenario this pen by the way I'm going
04:15 - to need a new one in a moment let's take
04:17 - a scenario where what we want here is
04:19 - our processing
04:20 - window and what we want is to be able to
04:24 - um I'm noing looking over there too much
04:26 - I need to be looking this way more I
04:28 - shouldn't also be talking about this in
04:29 - the middle of video okay what we want is
04:32 - um to put a circle on the screen and
04:36 - every frame we're going to give it a
04:37 - random location so we're going to say
04:40 - hey float
04:41 - x equals
04:44 - random between zero and
04:47 - width and we are going to draw a
04:50 - circle at that at that location and
04:53 - we're going to see what that looks like
04:54 - let's do that together actually um let's
04:57 - press this button and come over here so
04:59 - I should have prepopulated this with
05:01 - setup and draw but that's okay I can
05:02 - type fast so
05:10 - uh uh background zero fill 255 I'm going
05:13 - to draw a circle and it's going to be at
05:16 - an X location in the middle of the
05:18 - screen and it's going to be a nice size
05:22 - circle and uh X is going to be a random
05:26 - value between zero and width and random
05:30 - noise thingy okay so let's run this and
05:34 - see what we get um you can see here um
05:37 - if I just slide all this over H I'm
05:39 - going to get used to doing this
05:40 - eventually you can see here this is
05:42 - Randomness every frame it's at a new
05:44 - random location and in fact uh we could
05:46 - maybe see this a bit more easily if I
05:49 - just slow the frame rate down to
05:51 - something like 10 frames per second and
05:54 - run it again you can see there's no
05:55 - relationship we just have this dot
05:57 - moving anywhere because it's random in
05:58 - every frame so what do we want to do is
06:01 - we want to start looking at code for
06:04 - doing this with pein noise we want to
06:06 - say
06:07 - float x equals noise something so this
06:12 - is an interesting question now crap I'm
06:16 - really botching this okay this is an
06:18 - interesting question now because with
06:20 - random it was very clear what the
06:22 - arguments to the random function are
06:24 - minimum and maximum range of
06:27 - Randomness what are the arguments the
06:29 - noise function it would be nice if I
06:31 - could just say Z comma with and if you
06:33 - type that in there it actually would
06:34 - accept that and run but it wouldn't work
06:36 - the way that you wanted to the thing
06:39 - about
06:40 - noise is no matter what this noise
06:43 - function is going to give us a value
06:46 - between zero and one pear and noise the
06:49 - noise pear and noise function in
06:50 - processing will always no matter what
06:52 - you do give you a value between zero and
06:54 - one you cannot affect the range of what
06:56 - comes out of that function we're going
06:57 - to be able to affect it quite easily in
07:00 - a moment using the map function of
07:01 - processing to map it to a different
07:03 - range but right now we're only ever
07:05 - going to get a zero between a zero and a
07:06 - one out of that
07:08 - function so what goes in there well
07:11 - remember how we had this idea of
07:13 - time well with Randomness you know there
07:15 - is sort of this idea of time maybe
07:17 - there's a pseudo random generator that's
07:20 - giving us a random set of random numbers
07:21 - in sequence but time didn't really play
07:23 - a part in our thinking about it with
07:25 - pear and noise we've actually created a
07:28 - deterministic sort of time space
07:30 - continuum I don't know where start Trek
07:32 - land that makes no sense we need to give
07:34 - time as this argument now time what is
07:37 - it for I like to sort of think of it as
07:39 - a time in terms of this graph like do we
07:41 - want this random number at this moment
07:43 - in time or do we want this random number
07:45 - at this moment in time what does that
07:48 - what does that mean well um what are we
07:49 - doing here well in fact we just need to
07:52 - create a variable and so
07:55 - let's kind of get rid of this stuff over
07:58 - here let's call it
08:01 - t and we could say hey let's ask for
08:05 - pearo at time equals z so let's go ahead
08:08 - and see what happens if we add this now
08:10 - to our code we know that we want if this
08:13 - is the beginning of time we want pero
08:15 - value at time equals zero and let's see
08:17 - what that gives
08:20 - us I'm here I'm back okay so uh we are
08:23 - now going to switch this to say x equals
08:27 - noise and we said at some Moment In Time
08:29 - time and I'm going to create a global
08:31 - variable called T and we're going to run
08:32 - this and where's our Circle well first
08:34 - of all our
08:36 - circle is at zero right because pearing
08:38 - noise only ever gives us a value between
08:40 - zero and one we can't get any other
08:42 - value but a value between zero and one
08:44 - so we want to use this function and
08:46 - processing called the map function boy I
08:48 - would love to just do a whole video just
08:50 - about the map function and you know what
08:51 - I'm definitely going to do that but
08:53 - right now I'm going to kind of assume
08:54 - that that exists and you've watched it
08:55 - and kind of just add the map function
08:57 - kind of quickly so what I want to do is
08:59 - remap the value of x and to map the
09:02 - value of x which we know goes between 0
09:05 - and
09:06 - one um and actually uh yeah that's fine
09:09 - uh between zero and one and I want to
09:11 - map that between zero and width and I'm
09:14 - going to run this now I lost my pen okay
09:16 - so ah so look the circle's still over
09:18 - there but we got let's run it
09:22 - again it's over there now you can see
09:24 - we're going to get a random value ah
09:26 - there it is right P the pein noise space
09:29 - is seated at the beginning of the
09:30 - processing sketch and we're getting the
09:31 - noise value at the at time equals zero
09:34 - but it's not moving it's never changing
09:36 - because the noise value at time equals
09:37 - zero never changes it's the same always
09:40 - and forever more for that for this
09:42 - instance of the sketch running so what
09:44 - does that mean we need to do what we
09:46 - need to do is move through time we want
09:49 - in our sketch to say give me the pear
09:51 - noise value
09:52 - here then here then here then here then
09:55 - here then here we want all those values
09:57 - in sequence so we get a sequence of
09:59 - these smooth values and how far along we
10:02 - move through time do we move to here to
10:04 - here to here that's going to really be
10:06 - awful so I'm going to be just regular
10:07 - Rus or do we move very very teeny tiny
10:10 - slowly like a little tiny crawling thing
10:12 - okay very slowly we need to say t equals
10:16 - t plus something some value to increment
10:19 - should we go
10:21 - 0.0000001 or should we do 0.5 whatever
10:24 - we could just try that and see what
10:25 - happens so let's take a look over here
10:28 - and see if we add that okay so we want
10:30 - to say let's move through time let's try
10:32 - tal t+ 1 that makes sense
10:34 - right well uh that's sort of more just
10:37 - like Randomness and I had that frame
10:39 - rate let's take that uh let's let's let
10:42 - it run fast 60 frames per second you can
10:43 - see that's pretty much just like
10:44 - Randomness that t equals t plus one is
10:47 - moving really big steps through time and
10:50 - really big steps through time we lose
10:51 - the fact that this there's this nice
10:52 - kind of curve going on there and so if I
10:55 - come back over here let's do something
10:57 - much more reasonable and say Tal t plus
11:00 - 0.05 and look at this I want it to
11:03 - appear I I need to like redo my layout
11:05 - here but we can see look it's actually
11:07 - kind of moving um almost um more
11:10 - smoothly now maybe that's too big so I
11:14 - it's also running very quickly at 60
11:15 - frames per second which so you can see
11:17 - now we're getting this nice sort of
11:20 - smooth motion because we're seeing this
11:22 - sequence of random numbers it almost
11:23 - looks like it's moving with some type of
11:25 - rules almost some type of physics to it
11:27 - we've just sort of accidentally created
11:28 - this phys it's random Walker so to speak
11:30 - with pearlin noise and so this would be
11:33 - kind of my exercise to you um if you
11:35 - want to try to um try to take this uh
11:38 - and kind of like link it to everything
11:40 - we've been doing so far there's so many
11:41 - places in all the examples where you'll
11:43 - be able to add pear and noise in but
11:45 - right now I'd say to you go to that
11:47 - random Walker and try to make a pearlin
11:49 - noise random Walker and I'll
11:52 - include at some point I'll watch these
11:54 - videos and see all the things I say and
11:55 - then I'll put these links on the Vimeo
11:57 - page or whatever it is to to examples
11:58 - but um you should be a actually you can
12:00 - definitely find if you go to the nature
12:02 - of code book GitHub repo you can find uh
12:05 - several examples of the random Walker
12:06 - with a perin noise um so there's more to
12:09 - pearlin noise one thing I just want to
12:10 - allude to very quickly that you could
12:12 - also do as an exercise is that right we
12:14 - have time here in one dimension and
12:16 - really this idea of time I just used as
12:18 - a a sort of way of us describing how
12:21 - pearlin noise works but this is really
12:23 - just one-dimensional space right there's
12:26 - a value there's a sort of a string and
12:28 - on the string written lots of numbers in
12:30 - one dimension but what if we took that
12:31 - string and made it into a piece of paper
12:34 - and the number here is related to all
12:37 - these other numbers that are near it so
12:39 - instead of a number here just having
12:40 - some neighbor to the left and right it
12:42 - has neighbors all around it in
12:43 - two-dimensional space so what if you
12:45 - could map noise values in
12:47 - two-dimensional space to height values
12:49 - in a in some sort of top top top
12:52 - topology or if or pixel values in some
12:54 - type of texture for an image right
12:56 - you'll get this is where you can start
12:58 - to get procedural text for um for
13:00 - threedimensional objects so that's
13:02 - looking at two-dimensional noise and how
13:04 - that can work is kind of an exciting uh
13:06 - possibility as well um and we'll see
13:09 - later on in the video series when we
13:10 - look at a flow field for objects sort of
13:13 - dropped into a space and moving almost
13:14 - as if there's these currents and rivers
13:16 - pushing them along with and create that
13:18 - flow field with two-dimensional prolin
13:19 - nois um so um um yeah I I I have a list
13:24 - here and I would like to make a two 2D
13:26 - PE Noise video which maybe we'll do at
13:27 - some point as well okay so this video is
13:30 - done uh you're going to have lots of
13:32 - questions and confusing things and
13:34 - whatever we'll remake this video or add
13:36 - some links and all this everything will
13:37 - be okay everything's going to be okay
13:39 - right somebody tell me okay uh goodbye