00:00 - oh hello welcome to another coding
00:03 - challenge with me coding challenge
00:06 - person YouTube thing okay this is a game
00:09 - called Frogger I'm going to play this
00:11 - video here oh oh
00:14 - so Frogger is a game where a frog tries
00:20 - to get from the bottom right there
00:22 - there's the Frog the Frog is supposed to
00:24 - get from there all the way up there the
00:26 - idea is the Frog needs to avoid the cars
00:27 - but then the Frog going to get to the
00:30 - river
00:30 - needs to land on the logs or the lily
00:33 - pads wherever they are to make it across
00:35 - so I would like to make this game now
00:38 - I'm going to make it in something called
00:40 - processing which is a programming
00:42 - environment built on top of the
00:45 - programming language Java that you can
00:46 - download from processing org I will also
00:49 - release after the this video is finished
00:51 - in this a probably video we have a bunch
00:52 - of parts it will also release a
00:54 - JavaScript version of the code so you
00:56 - can make a browser-based version of this
00:58 - game okay I have to stop this because
01:02 - it's distracting me too much let me take
01:04 - another couple things I'm going to keep
01:07 - things very simple so I'm not going to
01:09 - implement all the features of the game
01:10 - there won't be any sound all these
01:12 - little like beautiful animation details
01:14 - I probably won't implement and you know
01:18 - as well sort of the graphic and visual
01:19 - designs but it is my hope that the
01:21 - Internet the wonderful world of the
01:23 - internet will watch this video and take
01:25 - this code and make all sorts of crazy
01:26 - fun extra interesting versions of this
01:29 - game so let's get started okay so let's
01:33 - map out some mistakes we need no I
01:36 - didn't just do this a few minutes ago I
01:38 - messed it all up
01:39 - let's back out of some of the things we
01:41 - need to program Frogger so I'm going to
01:43 - consider everything in the world of
01:45 - Frogger to be a rectangle so the Frog is
01:47 - a rectangle the cars are a rectangle
01:50 - soon there may be a long rectangle it's
01:52 - a truss our actual square you know the
01:54 - Frog is going to be a square the same
01:55 - thing the logs the lily pads everything
01:58 - is a rectangle because what I want to be
02:00 - you know inventing I was like I put my
02:02 - own image in there there could be a
02:03 - little animation
02:04 - I hope that's what you guys will do if
02:06 - you make a version of this after
02:07 - watching this video but the only thing
02:10 - that I need is to be able to know does
02:12 - the Frog intersect a car or does it
02:15 - intersect a law so I need rectangle
02:18 - rectangle intersection and it turns out
02:21 - I feel like a messing they're getting a
02:24 - little confused and doing a little
02:25 - research there's a really nice way of
02:27 - doing that so um I could actually do
02:30 - things so if I have a rectangle and what
02:32 - I keeping track of is the left side the
02:35 - right side the top and the bottom and if
02:39 - I had this is our one for example and if
02:42 - I have another one that's our two that
02:44 - also has a left-right a top and a bottom
02:46 - I could say something like well it's the
02:48 - top of our two in between the top and
02:51 - bottom of our one if it is and also like
02:54 - the left side but that's actually going
02:57 - to be a lot trickier than just what if
02:59 - instead of trying to determine if
03:00 - they're intersecting what if I just try
03:02 - to determine if they're not intersecting
03:04 - right so if they're not intersecting is
03:07 - a much easier thing to test because I
03:09 - know they're not intersecting if the
03:11 - left of rectangle two is greater than
03:14 - the right of rectangle one right that
03:16 - means the rectangle is somewhere over
03:17 - here no matter where it is vertically it
03:19 - can't be intersecting or if the right of
03:21 - rectangle two is less than the left of
03:24 - rectangle one that is over here same
03:27 - thing to the top if it's above it it's a
03:28 - so same thing from the bottom if it's
03:30 - above it and the top if it's below it so
03:32 - if I can determine if it's not
03:34 - intersecting then not not intersecting
03:37 - it's intersecting so let's go write that
03:39 - code really quickly so sad music playing
03:42 - that you guys can't hear but I can hear
03:43 - it and it's not just in my head there's
03:45 - a room back here okay so what I'm going
03:49 - to do this is a little bit silly and
03:51 - unnecessary because there is actually a
03:54 - Java class can you hear now it's much
03:57 - laughs it records it there is actually a
03:59 - java class called rectangle that i could
04:01 - make use of but I am going to just make
04:06 - my own
04:08 - and I'm going to give it a left a right
04:13 - a top and a bottom so I'm going to
04:19 - create a rectangle that has a left-right
04:21 - the top and a bottom and when I make
04:26 - that rectangle going to write a
04:27 - constructor for this object where I can
04:31 - what I'm actually going to do is I'm
04:33 - going to allow the rectangle to be
04:34 - defined with an X a Y and a width and a
04:39 - height and then left is the X right is
04:44 - the X plus the width top is the Y and
04:48 - bottom is the Y plus the height right so
04:52 - often well let me save this as frogger
04:55 - so often in programming which you guys
05:01 - can hear the sound so the recovery is
05:02 - not talking about them because it could
05:04 - be weird for people who are watching
05:05 - this and can't hear them and do you
05:06 - think I'm a great person with sounds in
05:07 - my head which would not be such an
05:09 - unreasonable thing for you to think if
05:11 - you've watched any of my people but
05:13 - nonetheless I digress
05:15 - typically in pro in a lot of computer
05:18 - graphics environments if I'm going to
05:19 - define a rectangle that's going to
05:21 - appear on the screen I'm going to define
05:23 - it with an X a Y and a width and a
05:24 - height but here I want to actually keep
05:26 - track of the left the right top at the
05:27 - bottom for this intersection test then
05:29 - what I'm going to do is I am going to
05:32 - write a function here called intersects
05:35 - and that function how could people -
05:40 - Chatta tell you they can hear the sound
05:43 - really really just you know mildly of
05:47 - boolean intersects I want to function it
05:49 - returns true and and let me zoom out
05:53 - here and it receives another rectangle
05:56 - so I want to function that tests a
05:59 - particular rectangle against another
06:00 - rectangle whether or not they're
06:02 - intersecting so the big expression that
06:05 - I want is I want to say I know they're
06:07 - not intersecting if I say that this dot
06:10 - left is greater than the others right or
06:16 - right so I actually don't end job I
06:18 - technically don't have to save this dot
06:19 - but you come on if I have an opportunity
06:21 - to write
06:22 - I'm going to write this top so I want to
06:24 - look at this rectangles left versus the
06:27 - other rectangles right or this
06:29 - rectangles right and maybe I can just
06:32 - put a line break here is less than V is
06:41 - less than the other rectangles left or
06:43 - this rectangles top is greater than the
06:48 - other rectangles bottom or this
06:53 - rectangles bottom is less than the other
06:57 - rectangles top so if I return the
07:02 - results of this boolean expression if
07:05 - any one of these things is true right if
07:09 - this last is greater than that one's
07:11 - right or this right is less than that
07:13 - one's left etc etc then I know they're
07:14 - not intersecting and the inverse of that
07:17 - would be if it would be they are
07:20 - intersecting so actually all I need to
07:22 - do now is say return the result of not
07:26 - that whole expression and this is a
07:28 - really fast operation to determine if
07:31 - two rectangles are intersecting alright
07:35 - so now I think it's time right we have
07:37 - our sketch what I ultimately want to
07:40 - start with is I want to be able to write
07:41 - some code like this frog s or frog frog
07:44 - and then I want to be able to say size
07:47 - and I want to have a canvas it's like
07:48 - 640 by 480 and only because a frog
07:51 - equals new frog and I want to say things
07:53 - like frog show and maybe frog dot update
07:57 - or something like this so I want to
08:01 - write the code in an object-oriented
08:02 - fashion or I could just create this frog
08:04 - object now interestingly I made this
08:07 - rectangle object just to keep track of
08:09 - the properties of a rectangle so there
08:12 - are a couple options here things I could
08:13 - do I could make a new class right I want
08:17 - to make a frog object so to make a frog
08:20 - object I need to say class frog and then
08:23 - I need to you know have a constructor
08:25 - function and I need to have a function
08:27 - that's like show and a function that's
08:29 - update so this is the skeleton of the
08:33 - Frog class the
08:35 - last being the template for making an
08:36 - object here I have the Frog object and
08:40 - now you can have no errors in my code
08:41 - now there's nothing I didn't like right
08:43 - the actual information that needs to go
08:45 - into the Frog class but I have a
08:47 - question I have a question a frog is a
08:52 - rectangle so there's two approaches I
08:56 - can take care of Airy excited about this
08:58 - because I haven't covered this in a lot
08:59 - of my videos I'm going to look at
09:00 - something called inheritance what I
09:03 - might have done previously in other
09:05 - videos to avoid talking about
09:07 - inheritance is I might have said ah a
09:09 - frog has a rectangle associated with it
09:13 - so the Frog keeps track part of its data
09:16 - is the rectangle which defines where it
09:18 - is and in some ways I kind of want to do
09:20 - that because I think there will be some
09:21 - simplicity to that however something
09:24 - else I could do is I could say frog
09:27 - extends rectangle meaning meaning the
09:32 - Frog is actually a rectangle and if the
09:36 - Frog itself has an intersex function I
09:39 - don't have to retype it the Frog
09:41 - inherits all of those properties left
09:44 - right top bottom the Frog inherits the
09:46 - intersect function and now I can add
09:48 - additional functionality to the Frog and
09:51 - the reason why this is maybe will be so
09:53 - powerful is I'm going to say car class
09:56 - car extends rectangle two so the idea is
10:03 - that the rectangle is the foundation for
10:07 - all the other things that will be in the
10:09 - world the cars and frogs behave
10:11 - differently so they also need their own
10:12 - code so this is how it's going to work
10:15 - so let's comment out the car for a
10:17 - second and let's start working on the
10:18 - Frog now we do have an error here it's
10:20 - giving me this red squiggly line the red
10:23 - squiggly line of dururu three boys so
10:26 - let's at least look and see what is that
10:28 - error here and it's going to say oh boy
10:30 - we do not like this error Lex I know
10:35 - that might sound detective this error
10:36 - display this one implicit super
10:41 - constructor frog or rectangle is
10:44 - undefined so one of the odd things about
10:47 - working with inheritance is I need to
10:51 - define the constructor the way an object
10:54 - is made in a somewhat of a special way
10:57 - so the frog I'm inside the rectangle has
11:00 - a constructor make a new rectangle what
11:03 - I want to say is that the Frog also gets
11:06 - a an X Y and a width and a height right
11:14 - that's how I want to define a frog but I
11:17 - need to figure out how when I define a
11:20 - frog with those values do its inherited
11:22 - properties get set and the way that I
11:24 - could do that is with a keyword called
11:26 - super super X Y WH and what this does is
11:30 - this says when I say new frog with an X
11:33 - Y width and height then make sure you
11:37 - also call the super super being the
11:40 - parent the super classes constructor
11:43 - function passing in those values so this
11:46 - initializes the inherited properties of
11:49 - frog so now that I've written the Frog
11:52 - constructor which essentially just calls
11:54 - the parent constructor the super
11:57 - constructor in rectangle I can now give
12:00 - it let's have the Frog start somewhere
12:02 - arbitrary 100 150 let the Frog is a
12:07 - square so let's do one little goofy
12:10 - thing here which is the Frog is never
12:12 - not going to be a square so I can just
12:14 - reuse that I can just show you a little
12:16 - trick here the Frog only needs three
12:17 - variables and then what it makes the
12:19 - rectangle it uses that width for both
12:21 - the width and the height a little
12:22 - optimization there for no real good
12:24 - reason and then I'm gonna get rid of
12:26 - this update function I'm going to say
12:28 - background 50 background zero let's just
12:31 - make it black and then frog show so I
12:34 - want to see that frog so I'm going to
12:39 - write a function now that says fill 255
12:42 - a rectangle left right top bottom left
12:49 - right no no left top right
12:56 - bottom right I want to draw there's a
12:58 - way that I can draw a rectangle and I
12:59 - haven't actually done it yet by
13:01 - referencing this point which is left
13:03 - comma top and this point here which is
13:07 - right comma bottom left comma top right
13:10 - comma bottom and processing will do that
13:14 - for me if I say rect mode corners the
13:19 - left right top and bottom come from the
13:22 - rectangle okay so now I should be able
13:24 - to run this and there it is guess what
13:28 - you've watched a video now for insert
13:30 - number minutes so far here and what did
13:33 - I do
13:33 - I programmed school a white square on a
13:38 - black background so I in a way I'd kind
13:41 - of disappointed with the way that I'm
13:42 - doing this but hopefully you know
13:45 - because I spent all this time setting up
13:47 - all this structure and all I've got is a
13:48 - square on the screen but hopefully this
13:50 - is going to give us the foundation to
13:52 - really start getting the game going so
13:53 - let's try and move a bit more quickly
13:55 - here and let's start moving that frog so
13:59 - I think okay so here's the thing if I go
14:02 - back to that gameplay video what at the
14:04 - front you can see the Frog always moves
14:08 - a distinct amount of space with each
14:11 - movement and it looks like the Frog is
14:13 - actually moving essentially based on the
14:15 - grid which is about the size of the Frog
14:18 - itself there's some nuance to that but
14:21 - so what I want to do here is create a
14:25 - function I'll call it move and the Frog
14:30 - will move by some amount or maybe a
14:34 - direction so let's have a global
14:36 - variable which I think I'm going to call
14:39 - it grid so let's think again I'm going
14:41 - to be very fast and loose with this idea
14:43 - of a grid some games operate entirely
14:46 - fixed and locks to a grid system like
14:48 - Tetris for example I'm going to kind of
14:50 - just sort of think about this grid in
14:52 - the loose informal way and use it when
14:54 - convenient and not use it when we can
14:56 - convenient but let's just say the Frog
14:59 - right the frog's size was 50 so let's
15:03 - also right now have the grid be 50 and
15:05 - I'm going to say the Frog size is the
15:08 - like minus four so I'm going to kind of
15:10 - think of just this idea of there being
15:13 - grid over the window over the whole
15:18 - window and but the Frog kind of being a
15:23 - little bit smaller than that actual grid
15:25 - and it's going to be like centering
15:26 - issues forget it
15:27 - other B I'm going to keep things really
15:29 - simple I'm just going to have the Frog
15:31 - be the exact same size of the grid you
15:34 - know eventually someday if you ever use
15:36 - like a sprite or an image you could
15:37 - actually just have some transparent kind
15:41 - of like buffer border that keeps it a
15:43 - little bit smaller but I'm going to keep
15:45 - things simple here so we're gonna have
15:46 - the Frog being the same size of the grid
15:48 - and so the Frog when it moves a given
15:52 - direction which we could say given X
15:54 - direction in a given y direction it can
15:57 - only be can't move diagonally but let's
15:59 - just write it this way we're going to
16:01 - say X plus equals oh no left there is no
16:07 - X right I've defined this frog entirely
16:11 - by its rectangle which is the left and
16:14 - the left and right and top to bottom now
16:16 - maybe I want to have some redundant
16:18 - variables to keep track of its XY maybe
16:20 - one it's Center oh there's so much I
16:22 - could do here but let's just let's just
16:23 - keep going let's just fast and loose
16:26 - left plus X direction and then top plus
16:31 - y direction okay so that's what I want
16:34 - to move it now I want to move it when I
16:36 - press the arrow keys so I'm going to
16:38 - write a function global event called key
16:41 - press this is part of processing I'm
16:43 - going to say if the key code equals up
16:46 - and this is all built into processing
16:48 - else and I could use a switch statement
16:50 - here I know everyone in the comments the
16:52 - switch statement but I started writing
16:54 - an if statement and I just never
16:55 - remember the syntax for those switch
16:57 - statements so I want to just check all
17:00 - four possibilities up down right left so
17:08 - I want it I want the Frog to move if
17:11 - it's moving up I want to move 0 comma
17:14 - negative 1 if it's moving down 0 comma 1
17:19 - if it's moving to the right
17:22 - that's one comma zero if it's moving to
17:25 - the left that is a zero negative one
17:29 - comma zero and then when it moves up the
17:32 - whole point of this is x grid x grid so
17:37 - I always want to move it by the amounts
17:40 - that I've considered this grid there is
17:42 - no actual grid here a grid is just a
17:44 - figment of my imagination that I'm using
17:47 - to think about it when convenient but
17:48 - I'm not actually keeping track of like a
17:49 - 2d array of cells with States and all
17:52 - that kind of thing that I might in a
17:53 - more tile based system okay so let's run
17:55 - this now again ooh okay so what's going
18:00 - on here so obviously I chose pink
18:04 - something very silly which is that I'm
18:06 - only moving the left and so no moving
18:09 - the top so if the top moves up the top
18:13 - moves down and I'm just growing or
18:14 - shrinking the rectangle so this is a
18:17 - problem and I could get around this by
18:19 - saying like oh let me move both the left
18:22 - and the right and the top and the bottom
18:24 - but I think what I'm realizing is it's
18:26 - just going to be better for everybody
18:27 - involved it for the future of this group
18:29 - gave a Frogger for me to just actually
18:34 - consider the rectangle itself to have an
18:38 - X a Y a width and height and then when
18:46 - it comes time to test for intersection
18:49 - that's where I can just calculate these
18:52 - values on the fly and so I need to do
18:58 - that for this particular rectangle and
19:00 - then for the other I'll call it oh right
19:03 - oh oh right Oh top oh bottom which would
19:08 - be other X so what I'm doing is and
19:13 - again I'm sure this could be optimized
19:15 - in some way but if the rectangle itself
19:18 - keeps track of an x and y and width and
19:19 - height then I can very quickly just
19:21 - calculate the left right top and bottom
19:23 - of one rectangle to the left right top
19:24 - and bottom of the other rectangle and
19:26 - then I can test those so I'm doing a
19:31 - little refactoring
19:34 - and I'm sure I'll come up with a reason
19:36 - why this was a terrible idea sometime
19:38 - later but for now I can rewrite this
19:43 - code like this so this is exactly the
19:46 - same but the rectangle is keeping track
19:49 - of XY with night now have a little bit
19:51 - of an issue here which is that I made
19:53 - the arguments here to the constructor X
19:56 - Y width height and so honestly what I
20:00 - what I need to do to different I'm going
20:02 - to say disk
20:03 - X this dot wha this dot this dot W is w
20:09 - this dot Y is y and this dot H is H and
20:14 - this is because in Java if I have
20:18 - variables with the same name and the
20:20 - temporary Quran arguments to this
20:22 - constructor the parameters are XY Y and
20:26 - H and I want to use those to set the
20:28 - rectangle objects actual XY w X Y WH
20:32 - then a that's what I want to use the
20:33 - fist stop here to differentiate them and
20:35 - I don't have to down here because
20:37 - there's no confusion so if I don't say
20:39 - this dot is this dot but I could if I
20:42 - wanted to add to this dot here okay so
20:43 - just dot that is that I'm always talking
20:45 - about the dist dot okay now everything's
20:48 - good I don't have to define it by I
20:50 - could just define it by X Y and W and
20:54 - then I could just move the X and the y
20:56 - so now my frog is just so much simpler
21:00 - the rectangle can have all the
21:02 - gobbledygook about the how the rectangle
21:04 - is being considered but the Frog just
21:06 - has an x and a y which I move and now
21:09 - there we go I am moving the Frog around
21:13 - the screen okay so I think that this is
21:23 - going to be the end of part 1 of
21:25 - programming Frogger I in the chat that's
21:28 - going on live right now I have now been
21:30 - told that I have an error in the
21:31 - rectangle which I forgot to say oh right
21:34 - I just said right where this should be
21:37 - oh right and then the other thing that I
21:40 - want to add to this is that I want the
21:42 - Frog to start at the bottom center so I
21:46 - am going to
21:47 - have the Frog start at width / 2 - grid
21:54 - / - that's the center - half the grid as
21:59 - a little bit know but what and then I'm
22:02 - going to say height - no no I just want
22:05 - to say with / Q - grid and height - grid
22:08 - I want to put it right there I guess I
22:11 - in the center so that should be grid / -
22:13 - right yeah so I want it to be there so
22:17 - now that I can start playing Frogger my
22:21 - screen is not divisible by 50 so let's
22:25 - fix that let's use a let's make this I
22:28 - don't know it maybe should just be a
22:30 - square for simplicity 500 by 500 there
22:34 - we go so now hey I won Frogger yay okay
22:38 - so that's the end of part 1 in the next
22:41 - video I'm going to add the cars going by
22:44 - once we and that's going to be part two
22:46 - and then eventually part three I'm going
22:47 - to add the logs and the turtles so see
22:50 - you in part two
22:54 - [Music]
22:59 - you