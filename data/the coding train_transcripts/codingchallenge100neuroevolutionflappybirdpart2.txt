00:00 - I am back for part two of neuro
00:03 - evolution with flappy train I don't know
00:06 - flappy something you can see here I now
00:10 - have this neural network which is
00:13 - driving this circle it's not really
00:18 - working so the problem is I only have
00:20 - one I need to make a population of them
00:22 - so that I can pick and choose the ones
00:25 - that are making smart decisions somehow
00:27 - and making their way through this maze
00:29 - of pipes but before I even do that in
00:31 - the chat thank you - Christopher mistake
00:35 - was pointed out which is that I forgot
00:38 - that my neural network library just like
00:41 - it expects as its inputs an array of
00:45 - values it expect it gives you back as
00:48 - its output an array of values and I
00:51 - forgot about that because even if it's
00:52 - one value it's still coming back in an
00:54 - array so I need to say index zero here
01:00 - so what I want to know is that first
01:02 - element of the array is it greater than
01:06 - 0.5 or not the truth of the matter is
01:07 - nothing's really happening yet kind of
01:10 - getting the same results but you can see
01:12 - things are possible all right so now
01:16 - let's see what we can do here the first
01:18 - thing that I need to do is I'm going to
01:20 - make a new JavaScript file and I'm gonna
01:24 - call this G AJ s so I'm not gonna make a
01:27 - population class or genetic algorithm
01:29 - class I have a would like to at some
01:31 - point refactor what I'm doing here into
01:33 - a more a package way that you might be
01:35 - able to just like use it as a library as
01:37 - part of the toy neural network library
01:38 - has some functionality for genetic
01:40 - algorithms built into it but I'm just
01:41 - gonna write all the raw code here and
01:43 - the main thing that I need to do first
01:45 - is I need to change the idea of having a
01:48 - single bird to many birds and I want to
01:53 - use cons it's so exciting when I use
01:56 - Const I'm going to make a population
01:58 - total total I'll just call this like
02:01 - total and I'll make it 100 so what I'm
02:04 - going to do here is I'm going to say I
02:06 - equals 0 I is less than total and
02:11 - I plus plus so I'm going to make a
02:13 - population of birds birds index I is a
02:17 - new bird then what I'm going to do here
02:20 - is I have let me just do this here for
02:25 - let bird of birds I'm going to use that
02:30 - for of loop to just loop through and
02:33 - have every bird think update and show
02:35 - now I haven't done that I got to fix
02:36 - this thing with the pipes so let me just
02:38 - comment this out for a second but let's
02:40 - at least see all the whole population
02:41 - going so you can see yeah that's kind of
02:45 - interesting it's definitely like there
02:48 - but they're doing different stuff now
02:50 - they really are alright so one thing I
02:54 - want to do here just visually I want to
02:56 - be able to get a better sense of the
02:57 - birds so I'm gonna look at the birds
02:59 - show function and I'm going to say
03:01 - stroke 255 and fill 255 comma 50 like
03:06 - I'm gonna give them some alpha so you
03:09 - can see that most of them are doing
03:10 - exactly the same thing ah there we go
03:12 - there's sort of a variety there I'm just
03:16 - kind of a little suspicious here let me
03:17 - try two outputs
03:18 - let me see if two outputs actually
03:20 - yields some more unique results so in
03:24 - that case with two outputs what I
03:25 - actually just want to do is something
03:26 - like if output 0 is greater than output
03:29 - 1 so let's try that for a second yeah
03:34 - it's kind of the same maybe I just want
03:40 - to have a bigger population yeah there
03:46 - we go just had a bigger population so I
03:48 - just want have a bigger population
03:49 - because I'm gonna need more
03:50 - possibilities ok so now here's the thing
03:52 - I need to do something else rather
03:55 - important I need to eliminate any birds
03:59 - when they no longer when they when they
04:03 - hit one of the pipes so now what I need
04:05 - to do is as I'm going through here I
04:08 - also want to say for let J equal birds
04:12 - dot birds dot length minus 1 J is
04:16 - greater than equal to 0 J minus minus
04:18 - and I could use filter or something but
04:20 - I'm not gonna use filter
04:22 - I'll come back to that another time and
04:25 - then what I want to do is I want to say
04:27 - I want to have this if pipes index eye
04:33 - hits birds index J Birds dot splice J
04:43 - comma 1 so this is now me deleting any
04:46 - birds that stopped living there let hit
04:50 - one of the pipes so let's run this and
04:52 - see oh sketch such as error oops oh I
04:56 - forgot a semicolon here okay let's try
04:58 - this all right so let's see here and see
05:00 - if we can get to any of them making none
05:02 - of them making it through that's not a
05:07 - good sign so I would like to at least
05:10 - kind of live in a world where so I'm
05:13 - going to make it a little easier for
05:14 - them right now in pipe I'm gonna make
05:19 - this I'm increase the spacing to 175 so
05:23 - I'm just gonna make that space between
05:24 - the pipes a little bit easier oh yeah
05:26 - one made it through because I just want
05:28 - to at least kind of increase the chances
05:32 - that there will be some that outperform
05:34 - others I and somewhat random but let's
05:35 - let's do it so this is good okay so
05:38 - we're getting somewhere
05:39 - now what I need to do is I need to think
05:42 - what are the things I need to think
05:43 - about when I have a genetic algorithm ok
05:45 - so a couple things number one is I know
05:47 - I'm going to need to have a new
05:49 - generation so let's actually let's let's
05:53 - let's write a function called next
05:55 - generation and just for right now I just
05:59 - want to get sort of like the process
06:01 - going here for next generation I'm going
06:03 - to say for let I equals 0 I is less than
06:06 - total I plus plus Birds index I equals a
06:11 - new bird a new bird and I know that in
06:18 - the main program if at any point whoops
06:21 - if at any point Birds dot length equals
06:28 - 0 then call next generation so now if I
06:33 - run this we should see that at least
06:35 - it's going to let the
06:36 - run as long as there are some birds and
06:39 - then uh
06:40 - next-gen next generation is not defined
06:42 - because I forgot to add it here to my
06:46 - index.html file so I need yet another
06:50 - JavaScript file I'm going to call it G
06:53 - ajs okay so now as soon as all of the
06:56 - birds run out o to made it through oh
07:01 - come on whoops
07:05 - did I forget to like it save next
07:09 - generation I put it in library slash GA
07:13 - okay sure come on let's move along folks
07:15 - alright one more time let's with feeling
07:18 - everybody oh look at those two birds
07:20 - maybe there that is a genius bird
07:24 - already okay
07:34 - so you get the idea here now I haven't
07:36 - involved as a Realty though it's very
07:38 - exciting for me that life is very
07:40 - strange okay so what I need to do though
07:42 - is this is no good I don't just want to
07:44 - make a whole nest new set of new Birds I
07:48 - want to evolve them from the previous
07:50 - generation so in order to do that I need
07:52 - some sort of fitness and so I'm gonna
07:54 - build into each bird object I'm gonna
07:57 - give it a score and also a fitness and I
08:03 - know it's probably not necessary for me
08:05 - to have two variables but the way I'm
08:06 - thinking about it right now this is
08:07 - gonna make it easier and so the idea
08:09 - that the longer a bird lives the more it
08:14 - increases its core
08:15 - so in update right every time update
08:19 - gets called it should get another point
08:22 - so I'm gonna say this dot score plus
08:24 - plus okay so every time update is called
08:27 - its score goes up and then what I want
08:31 - to do at the beginning of next
08:32 - generation is I want to calculate a
08:35 - fitness for every single bird and I want
08:38 - that I want all those Fitness to all
08:41 - those Fitness values to be normalized
08:43 - between 0 and 1 and add up to one and if
08:46 - you watch them my previous genetic
08:47 - algorithm tutorials you'll see why I'm
08:49 - doing that
08:50 - need each fitness value to be a
08:51 - probability that it gets picked for the
08:53 - next generation so the first thing I'm
08:55 - going to do in next generation is I'm
08:59 - going to calculate all the Fitness
09:01 - values so let me break this out into
09:02 - some functions calculate Fitness so in
09:09 - calculate Fitness what I'm going to do
09:13 - is for every bird I am going to first I
09:18 - need to do is get the sum so I want to
09:20 - say I know I could use a higher order
09:22 - array function here my brain doesn't
09:24 - think that way some plus equal Birds
09:27 - score so what I want to do is first add
09:30 - up all the scores then for each bird I
09:35 - want to say bird dot fitness equals its
09:39 - own personal score divided by that some
09:43 - so this is a way of kind of calculating
09:46 - and normalizing all the Fitness values
09:48 - now maybe I need to make this
09:49 - exponential in some way or be you know
09:52 - power law or some kind of Vince your way
09:54 - to think about how the score master
09:56 - fitness but this is I'm just gonna would
09:58 - use this sort of like linear way of
09:59 - doing it right now
10:00 - I could square the score so let's see
10:02 - Fitness equals bird score divided by
10:04 - some so this works for calculating all
10:06 - the Fitness values now I've calculated
10:09 - all the Fitness values I then need to
10:11 - I'm boy I'm moving right along here then
10:14 - what I need to do is I need to pick
10:17 - alright alright let's hold on for a
10:20 - second here so if you remember from it
10:23 - or if you if you happen to watch any of
10:25 - my genetic algorithm tutorials I go
10:27 - through this presentation which walks
10:30 - through the actual algorithm itself so
10:32 - what I need to do so I have evaluated
10:34 - the fitness of each element of the
10:36 - population but here if you look at the
10:38 - next step I need to make the new
10:40 - population I need to ever end times pick
10:43 - two parents with a probability according
10:45 - to relative fitness this is so that I
10:47 - can apply this idea of cross over take
10:49 - half of the DNA of one and half of the
10:51 - DNA and of others and mix them together
10:53 - here's the thing I'm gonna for the
10:55 - purpose of this video do a simplified
10:57 - version of cross over one way that I
11:00 - could do a simplified version of cross
11:01 - over is
11:02 - not to cross over at all instead of
11:04 - taking two elements and combining them I
11:07 - could just take one element and make a
11:08 - copy so I'm gonna take the ones that do
11:10 - well and just make a copy of them and
11:12 - the reason why this is going to be so
11:14 - easy because I already have as part of
11:17 - the knurl over here as part of the
11:21 - neural network class itself a copy
11:23 - function and guess what I have a mutate
11:25 - function and if I come back over here
11:26 - we're gonna see the next step is mutate
11:28 - you take the child's DNA based on a
11:30 - given probability so this is what's nice
11:32 - that I did this in a previous video I
11:34 - added these things to the neural network
11:36 - library that I'm using so now I'm gonna
11:38 - go back oh and let me just minimize this
11:40 - I'm gonna come back here and I'm gonna
11:42 - say instead of just making any new bird
11:46 - I need to pick one I need to write a
11:51 - function pick one that is going to
11:55 - somehow return one of the birds based on
11:58 - the with a probability map to its
12:01 - fitness so here's the thing we're all
12:05 - the birds where of all the birds gone I
12:10 - kept deleting them any time it hit up I
12:14 - deleted it I deleted it here's the
12:16 - problem I think I need a backup what's
12:19 - gonna be nice here is they let birds
12:21 - equal an empty array I'm having an array
12:26 - called saved birds and I guess what I
12:31 - could do is maybe what I'll do this is a
12:34 - little bit silly but every time I delete
12:37 - one I'll just say saved Birds dot push
12:41 - pipes like pretty sure if you delete
12:43 - something from the array it it it gives
12:48 - you it returns right if I say pipes
12:52 - index 0 dot splice 1 whoops sorry
12:58 - pipes splice 1 0 comma 1 right I get
13:04 - that pipe object it gives me that pipe
13:06 - object it gives it to me as an array so
13:09 - what I need to do but I think I can push
13:10 - the array into it and so this should
13:13 - work right if I now have
13:17 - if I make an array which is an empty
13:22 - array and then I say eh okay I know the
13:27 - picked one here hold on no loop thank
13:33 - you very much
13:34 - no okay now I can do what I want I can
13:38 - do whatever I want a dot so let P equal
13:43 - pipe splice 0 1 so P is this array with
13:48 - one pipe into it then I could say let a
13:50 - be an array a dot push P and so now
13:56 - let's do it a is Oh a isn't ready with
13:58 - one thing with a pipe in it so that
14:00 - works alright just testing out my idea
14:02 - so what I can do now is when I'm done
14:06 - back to sketch right as I'm removing the
14:10 - birds I can save them so that now when I
14:14 - go into the genetic algorithm pick one I
14:17 - can use I can pick one out of the save
14:20 - birds so let me just for the sake of
14:21 - argument just say let a child equal
14:27 - random saved saved birds return I just
14:33 - want to see that this works alright so
14:35 - I'm just gonna this is not I'm not using
14:37 - the Fitness yet as a probability but I
14:39 - just want to pick a random one just to
14:41 - see that the workflow works return child
14:44 - so birds index and then I'm also gonna
14:47 - say child dot mutate zero point I'm
14:51 - gonna have a 1% mutation chance so I'm
14:53 - gonna let it you Tate a 10% I mean if
14:56 - you take 10% of the weights of the
14:58 - neural network and then I'm gonna turn
14:59 - that so let's just see if this works
15:01 - and then after I'm done that I also have
15:04 - to clear the saved Birds so empty that
15:09 - out so this now the neck every time I
15:12 - want to make a new generation I should
15:13 - calculate all the fitness function
15:14 - values I should pick I should get
15:17 - however many new Birds clear out the SAV
15:20 - birds and go again so here we go as I'm
15:25 - waiting for the next generation come on
15:28 - birds are doing too well
15:30 - child youtaite is not a function
15:33 - ah child of course child
15:36 - mutate is not a function oh oh boy okay
15:44 - there was a little bit of a jump cut
15:46 - because I really went off something like
15:49 - weird direction though that made no
15:50 - sense
15:50 - I don't know if you noticed and we're
15:52 - yelling at the your television machine
15:55 - thing that you're watching me on but for
15:57 - some reason I put this down here I
15:58 - started adding the pipes to the safe
16:00 - birds so apologies for that this is not
16:03 - where that goes the pipes get removed
16:07 - just when they go off screen it's the
16:08 - birds that I want to add to these save
16:12 - birds also I'm not so sure I might be
16:15 - making an array of arrays we just run
16:17 - this for a second and let me let a bunch
16:21 - of birds die and let me look at save
16:23 - birds yeah I made an array of arrays we
16:26 - don't want that we want an array of
16:27 - birds so I could probably use concat but
16:31 - let me just push in the one thing that
16:34 - I'm removing just to fix that and we can
16:37 - see here is there's no birds in there
16:39 - and then now I have an array of birds
16:41 - alright so that's better at least now
16:43 - pick one is still gonna have a problem
16:46 - so why is pick one guy I sort of stopped
16:49 - thinking about what I was doing here I'm
16:52 - taking a that bird I'm not making a copy
16:55 - of the bird I'm taking that exact bird
16:57 - object and putting it back into the
17:00 - birds array which is fine but if I want
17:04 - to mutate it I need to mutate its brain
17:07 - the neural network so to do that I think
17:14 - what makes them I mean just as a quick I
17:16 - could just say like let's write let's
17:20 - put in the bird class itself let's write
17:25 - a mutate function and mutate function I
17:28 - would say this dot brain mutate zero
17:30 - point one so I'm just going to kind of
17:32 - have this hard-coded in here that when a
17:34 - bird mutates its brain mutates and I
17:37 - think I can get away without actually
17:38 - making a copy of the neural network Oh
17:40 - no no I wouldn't make a new bird with
17:46 - the same neural network I think that's
17:49 - gonna be I'm gonna be better off because
17:51 - otherwise I've got to reset all of these
17:53 - numbers and values it's velocities got
17:55 - to go back to zero so I don't I want to
17:57 - make a copy of the bird and I kind of
17:59 - want to but I don't really need to make
18:00 - a copy I just need to make a new bird
18:04 - with a brain
18:05 - so if brain right if I create a bird
18:10 - with a brain a bird breaking then I'm
18:13 - going to say this and I'm gonna make a
18:15 - copy of it just for it's probably
18:20 - unnecessary is brain copy so I'm gonna
18:23 - do that
18:23 - if otherwise if I'm making a bird
18:26 - without a brain I am going to I'm going
18:31 - to just make a bird with a new blank
18:33 - neural network and there's already a
18:35 - copy function that's this way I'm
18:36 - setting myself up for future success if
18:39 - I want to do crossover it's going to be
18:40 - a little bit easier then here what I
18:42 - want to do is in pick one I pick a
18:48 - random bird but I return and then I say
18:55 - let bird equal and then I'm gonna say
18:57 - let child equal a new bird with that
19:01 - birds brain oh this is very weird and
19:04 - then I'm gonna say child dot mutate okay
19:09 - and then now this should get me the
19:12 - right idea right I'm picking a random
19:13 - bird out of the save birds and making a
19:16 - new bird with the previous birds brain I
19:19 - could do cross over here right if I want
19:21 - to do cross over and then I mutating
19:23 - okay so let's give this a whirl here we
19:26 - go did it did they all die I don't have
19:31 - that console.log for yeah there we go
19:33 - okay so this is working I probably
19:35 - should clear out the pipes so the other
19:38 - thing I should do I think is that would
19:41 - make sense is when also as soon as
19:45 - there's a new generation I should
19:50 - probably say pipes
19:53 - I just just like let me just add one
19:55 - pipe and actually you know I'm gonna do
19:58 - I'm gonna make this my own counter this
20:01 - is a little bit unnecessary but I just
20:03 - want to reset the counter back to zero
20:08 - counter plus plus and I'm gonna have a
20:11 - global variable whoops
20:13 - hopefully can't type I'm gonna have a
20:15 - global variable called counter set equal
20:18 - to zero okay so I just want to do that
20:22 - because I want to like I don't want to I
20:25 - mean like I wanted the whole game to
20:28 - restart her to pipe so at the beginning
20:31 - for some reason why is that I'm looking
20:35 - at sketch J s because I add a new pipe
20:38 - in setup which I no longer need to do
20:40 - because as long as I put this first in
20:46 - draw now okay
20:47 - there we go okay so now there's one pipe
20:50 - all the birds are trying to play flappy
20:53 - bird as soon as they all go away the
20:55 - whole thing starts over so now we have
20:57 - the work flow we're actually good to go
20:59 - here we are good to go the problem is I
21:02 - need to pick them based on their fitness
21:04 - values here's the good news I have a
21:07 - function this comes from my traveling
21:09 - salesperson coding challenge it comes
21:12 - from this github issue that was filed on
21:14 - August 5th 2016 with this particular
21:18 - algorithm for picking an element from a
21:21 - population based on a given fitness so
21:23 - I'm gonna go over to here actually and
21:25 - I'm gonna grab this exact pick one
21:27 - function and I am going to bring it over
21:33 - and I'm gonna put it in this so if you
21:37 - want to review how this function works
21:39 - in more detail you can go back to my
21:40 - previous videos but I'm just going to
21:42 - paste this right in here and the idea
21:46 - here is that at the end list index is
21:51 - that particular bird that I want and
21:55 - this made it I know I have slice here I
21:58 - can't remember why I did that but
22:01 - basically this what I'm doing here is
22:05 - now instead of picking a
22:08 - I'm gonna pick it from that list now I
22:12 - wrote this function with arguments but
22:14 - the good news is I can take this stuff
22:17 - out and what I'm really doing is I'm
22:19 - saying okay birds index dot fitness
22:24 - that's the probability right I'm picking
22:26 - one thing from a list based on
22:28 - probability those were the arguments
22:29 - here I'm picking something for a list
22:31 - based on an array of probabilities so
22:34 - now wherever I see list what I mean is
22:37 - birds and whenever I see probability I
22:40 - mean birds fit Fitness the fitness of
22:43 - the bird so this is birds index and I
22:46 - don't know why I have that slice there
22:47 - and then so this is good I'm good there
22:51 - we go so this is an algorithm for
22:54 - choosing a random number and seeing
22:57 - words falls into the sort of spread of
23:00 - all the probability values and again you
23:02 - could go back to my video where I
23:04 - specifically talk through this entire
23:05 - algorithm but I think this is going to
23:07 - do it right now so let's now run this
23:10 - code that's really the last piece and
23:14 - I'm going to let this run for a little
23:17 - while and I know I'm not
23:19 - because cannot read property why of
23:21 - undefined so what what what did I mess
23:24 - up here let's take a look here all right
23:28 - I clearly made a mistake
23:29 - thank you - I hor L in the chat I need
23:35 - to be using saved birds remember birds
23:37 - has nothing so I need to say saved Birds
23:40 - right save birds so that is something I
23:44 - definitely need to do is that the
23:47 - problem that I'm having I think I might
23:49 - have a different problem also yeah so I
23:53 - think because once all the birds are
23:55 - gone it's kind of doing this one more
23:58 - time I have two functions called pick
24:01 - one in the code I not even realize that
24:03 - so have a lot fun to fly a big array of
24:06 - undefined
24:07 - did I leave like oh oh my goodness I
24:11 - left this function in the code why is
24:15 - that there all right let's see if that
24:19 - was like using this other pick
24:21 - okay next generation alright alright
24:25 - we're getting somewhere now cannot read
24:27 - property fitness of undefined okay so
24:31 - here we go
24:33 - cannot read property fitness of
24:36 - undefined so let's take a look at saved
24:43 - birds and let's take a look at index all
24:58 - right here we go there's a lot of
24:59 - debugging in this particular video all
25:01 - right
25:01 - whoa what line sixteen oh it was going
25:08 - through all this it got through all of
25:13 - them weird
25:16 - ah are the fitness while are is greater
25:21 - than zero
25:22 - all right and then what happened and
25:27 - then we got to the end yeah of course
25:30 - because it never so let's look at the
25:31 - array of 250 first of all let's make our
25:35 - life a little bit simpler by just doing
25:39 - this with ten birds while we're trying
25:40 - to debug this in that way we can have an
25:45 - easier time of figuring this out because
25:46 - there's only ten of them so lift
25:49 - velocity there Phil I want to check the
25:52 - fitness values Fitness is values of all
25:54 - these are zero so my fitness
25:56 - calculations somehow messed up let's
25:58 - look at that so let's look at calculate
26:02 - fitness let's console.log some uh okay
26:11 - let's console look some don't wait wait
26:16 - wait
26:17 - zero that's not good bird dot score
26:21 - let's look at all the birds score whoops
26:27 - scores ninety-six scores ninety-six so
26:31 - that's right they're getting a score
26:34 - oh I need to do saved Birds here saved
26:40 - Birds so everything here has to be saved
26:43 - Birds I probably should do it the other
26:44 - way around okay there we go the Phineas
26:48 - calculation also needs saved birds
26:51 - probably everybody in the Chad's been
26:53 - telling me this for like the last five
26:54 - minutes now I feel pretty confident here
27:01 - I probably shouldn't I'm gonna take out
27:02 - my console logs and let's see what
27:05 - happens let's see can we get to the next
27:07 - generation yes we got to the next
27:09 - generation now am i seeing anything
27:12 - evolve
27:12 - I don't think so cuz I only have ten so
27:14 - let me give me myself a lot more Birds
27:20 - let me give myself a lot more Birds back
27:23 - here I'm gonna say let's give myself 350
27:26 - Birds and let's run this sketch alright
27:29 - I'll be back in just a few minutes
27:32 - [Music]
27:41 - all right so this did okay they seem to
27:45 - be improving there's some good ones in
27:47 - there that are jumping but I'm gonna
27:50 - wrap up this part too or I finally
27:52 - applied the actual genetic algorithm
27:55 - part to evolving the neural network with
27:57 - a population of these things and what
27:59 - I'm gonna do is I'm gonna do one more
28:01 - part where I'm gonna improve this I'm
28:02 - gonna do a few things number one do
28:03 - speed up the process so I could get it
28:05 - to evolve a lot faster and I'm gonna
28:07 - change the way mutation works which I
28:09 - think will give me a slightly it will
28:11 - help me find an optimal solution a bit
28:13 - faster so come back if you want I will
28:16 - be
28:16 - [Music]
28:22 - [Music]