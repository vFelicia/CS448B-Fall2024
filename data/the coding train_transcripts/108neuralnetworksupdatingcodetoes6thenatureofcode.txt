00:00 - hello I'm back I'm finally getting to
00:02 - that neural network playlist which left
00:06 - off in May and I'm continuing it now you
00:09 - might be watching again you might be
00:10 - watching it in the future when it's all
00:11 - been completed but you can as you could
00:13 - see some time passed and Here I am again
00:16 - now the last video in this playlist
00:20 - looked at vector math and I believe I
00:23 - looked at adding oh I can actually look
00:25 - it up here the last thing I did was this
00:28 - function multiply which was simply
00:30 - multiplying a matrix by a scalar so
00:34 - taking each element of a matrix and
00:36 - multiplying it by a single number
00:38 - now you also might notice here matrix
00:40 - prototype multiply what is that well
00:45 - since I last did these videos I have
00:47 - started adopting yes six classes class
00:51 - is a template for creating an object
00:53 - that's part of ECMAScript version six
00:57 - yadda-yadda-yadda
00:58 - I have a whole playlist about that stuff
01:00 - if you don't know about classes you can
01:01 - go and look at those tutorials but
01:03 - before I move on and finish the vector
01:05 - the matrix math that we need to build
01:08 - this neural network I want to rewrite
01:10 - all of these when I have so far with es6
01:13 - so that's all I'm gonna do in this video
01:14 - okay so let's actually do that first
01:17 - let's wander over I was first building a
01:20 - neural network object the idea of a
01:22 - neural network is having input nodes a
01:24 - hidden layer and output nodes so let me
01:27 - first change this to be a class class
01:31 - neural network and then once I have a
01:36 - class this constructor function actually
01:39 - can now become constructor called
01:43 - constructor and you know what what the
01:45 - method that I'm kind of adopting is when
01:47 - I pass arguments in I actually give
01:50 - those arguments and parameters I guess
01:53 - in this case in the constructor
01:55 - definition I give those parameters the
01:57 - same name as the properties attached to
02:00 - the object and they are differentiated
02:02 - by say with me this dot that's right
02:14 - okay so so there we go so now that
02:19 - converted the neural network class it
02:22 - wasn't a class before but the
02:23 - constructor function into an es6 class
02:25 - now I've got to do the same thing with
02:27 - the matrix constructor function so this
02:29 - was the matrix constructor function and
02:31 - I now want this to be a class called
02:33 - matrix and I'm gonna put this around
02:36 - everything and I don't know what Adam
02:42 - wants me to do but okay and then this
02:45 - constructor function is now called
02:49 - constructor this is what happens to the
02:51 - constructor and this is just the
02:55 - randomize function all these functions
02:58 - that are attached to the prototype can
03:00 - just be written by their name inside of
03:03 - the class
03:04 - this is add and this is multiply that's
03:10 - what we're gonna be working on the next
03:11 - video all right so so in a moment I want
03:15 - to check let me let me check to make
03:16 - sure this is like still working so if I
03:19 - go to the browser refresh the page I
03:22 - should be able to say things like let
03:23 - and equal a new matrix 3 3 by 3 I should
03:27 - be able say console dot table M and I
03:32 - can see oops nope I think this mistake
03:34 - in my previous console dot table M
03:37 - matrix and you can see there it is so
03:41 - this seems to be and I could say m dot
03:42 - add the number 5 and then I could look
03:46 - at it so it still seems to be working
03:48 - I have a matrix that's 3 by 3 it gets it
03:51 - by default it's filled with zeros if I
03:54 - add 5 to it it looks like 5 if I say m
03:56 - dot randomized now I can look at it
04:00 - again it has random numbers so it's
04:02 - still working
04:03 - that's good now here's the other aspect
04:06 - of this one thing you might notice is
04:10 - that I'm doing a lot of loops and array
04:14 - operations like I'm saying hey for every
04:17 - element of this array at index I didn't
04:20 - XJ do this thing except there are
04:22 - actually you probably know this already
04:25 - I'm a bit slow to catch up with these
04:27 - things there are a bunch of useful array
04:30 - functions I often think of them as es6
04:32 - like this video is about converting it
04:34 - to es6 but really they've been around
04:35 - before es6 and these are those these
04:38 - functions called like map
04:41 - reduces one fill is one and I filter I
04:47 - actually don't remember what filter does
04:48 - I know what these do and I think having
04:51 - access to using some of these array
04:53 - functions will make this matrix lot will
04:56 - be useful in the development of this
04:59 - matrix library however for simplicity
05:01 - sake as I go on into the next video I am
05:04 - still going to do all of the matrix math
05:08 - operations in the sort of longest long
05:10 - winded astray it's not actually a word
05:12 - but in a very long-winded way then at
05:15 - the end I'll try to come back and and
05:17 - and use some of these and I and I should
05:20 - mention that where am I going with this
05:22 - eventually this I want to learn and
05:25 - understand all of these matrix
05:26 - operations and write the code for them
05:28 - to kind of get my hands in there and
05:30 - figure it out but in the end I'm gonna
05:33 - actually take out all of this stuff and
05:35 - replace all of the matrix operations
05:39 - with a library from Google called deep
05:43 - learn so stay tuned there's gonna be a
05:46 - lot more about this library and a helper
05:50 - library where deep learn can use with p5
05:52 - in future videos alright so I think
05:54 - that's pretty much it for this video I'm
05:56 - now ready to kind of like get back up to
05:59 - speed and the things that I need to do
06:01 - are finish this matrix class with more
06:05 - useful matrix math operations I need to
06:08 - be able to multiply two matrices
06:09 - together and understand what it means to
06:11 - do that
06:11 - and then also uh and then finish this to
06:19 - add the rest of the functionality for
06:21 - the neural network that uses that stores
06:23 - all the pieces of the neural network in
06:25 - these matrices and implements the
06:27 - algorithms I'll be getting to all that
06:28 - stuff so see you in the next video wait
06:30 - this video is not over yet
06:31 - I forgot that I should also replace var
06:37 - with less
06:40 - replace all
06:46 - [Music]
06:51 - you