00:00 - Hi.
00:00 - I'm going to try
to make a video now
00:02 - that uses the Giphy API
with zero preparation.
00:04 - I never Googled it, looked it.
00:06 - I don't even know if I've ever
looked at the Giphy website.
00:09 - This is probably going
to go down in flames.
00:11 - But I'm going to
give it a try anyway.
00:13 - We're going to
see in 15 minutes,
00:15 - can I make a
working code example
00:17 - where I query the Giphy API and
get some GIFs on the screen.
00:19 - And you guys can, while
I'm screwing stuff up,
00:21 - can argue over whether I
should say "gif" or "jiff."
00:24 - Somebody tell me.
00:25 - I have no idea.
00:26 - So let me look for Giphy.
00:28 - Giphy is a website.
00:30 - If I go to their
search for GIFs,
00:31 - I'll search for my name,
which is like the most
00:33 - vain thing you can do.
00:34 - Of course there's no GIFs
with "Shiffman" in them.
00:36 - "Rainbow," there we go.
00:38 - Rainbow is good.
00:39 - I've got some nice
rainbow GIFs here.
00:41 - I like this one.
00:43 - This is a nice one.
00:44 - You can see nice rainbow GIFs.
00:45 - So there must be an API here.
00:48 - Let me look for a Giphy API.
00:52 - Ah, look at that.
00:53 - I've got a GitHub link.
00:54 - That's good news.
00:56 - I've also got here a
URL, API.giphy.com.
01:00 - Let's start with that URL.
01:03 - OK, so often a question that
comes up when using an API
01:05 - is, do you need to sign up?
01:07 - Do you need a key?
01:08 - I have no idea.
01:09 - This is like-- this is exciting.
01:12 - Somehow this is like, I
don't know, I feel whatever.
01:14 - OK, "Get Started, Giphy
Search, Giphy Trending,
01:17 - Giphy Roulette--" oh,
these are other apps
01:19 - that people have made.
01:20 - Well, let's go to Get Started.
01:22 - Oh, OK, I'm on the--
01:24 - "Access and API keys,
public beta key.
01:27 - So the Giphy API is open to the
public, a single public beta
01:31 - key to let anyone try it out."
01:33 - Well, all right, that
sounds good to me.
01:35 - So I'm going to use the public
API in this demonstration.
01:39 - Obviously, if you're going to
do something more involved,
01:42 - you'll want to get a--
01:43 - I'm standing in
front of the text--
01:45 - you're going to want to
get a production API key.
01:47 - But I don't think
I'd even get one.
01:49 - OK, so I want to use that.
01:50 - I'm going to go down, "Overview.
01:52 - The Giphy API provides
the following--"
01:54 - and I'm standing in front of the
text again, this is terrible--
01:57 - let me-- maybe we can't.
01:58 - Let me move this over, and let
me make this a little bigger.
02:01 - "The Giphy API provides the
following JSON endpoints."
02:05 - So I can ask for a random one.
02:07 - Looks like a trending one.
02:08 - I can get stickers,
by id, one GIF by id.
02:12 - So this is good.
02:12 - So I'm just figuring out
these are the kinds of things
02:15 - that the API can give me.
02:16 - I think search is probably a
good place for us to start.
02:18 - Random would also be a
great place for us to start.
02:21 - But again, like I mentioned,
I'm very easily embarrassed,
02:24 - and I'm worried about
getting an embarrassing GIF.
02:27 - But you know, I
should not be worry--
02:28 - I should just live in
the moment where we are.
02:30 - OK, so let's see if I can find--
02:34 - so this is-- OK, so let's start
piecing this together a little
02:36 - bit.
02:37 - So I'm going to open up
actually just like Text Edit.
02:40 - Actually you know,
I'll go to p5.
02:42 - And I'm going to
make a new project.
02:45 - I'm gonna close this
New York Times one.
02:47 - I'm gonna hit Save.
02:48 - I'm going to call
this Giphy API.
02:51 - And I'm going to
just give myself
02:54 - some space at the top in
comments, where I can start
02:58 - pasting stuff in
there that I might
02:59 - need for working with the API.
03:01 - So what I definitely
need is this.
03:03 - This is the URL to the API.
03:07 - I'm also going to
need this public key.
03:11 - Let's save that there.
03:12 - Now, "Search all Giphy
GIFs for a word or phrase.
03:17 - Punctuation will be
stripped or ignored.
03:19 - Use a plus or url
encode for phrases."
03:22 - Oh yeah, Ryan Gosling GIFs,
that's going to be good.
03:27 - That was weird.
03:28 - I feel like that was weird,
that I made a weird dance
03:30 - and talked about Ryan Gosling.
03:32 - I really should edit that
out, but it's too late.
03:34 - Apparently that just was like
I was overcome by the name
03:37 - Ryan Gosling.
03:37 - Maybe we'll get
some good eating--
03:39 - isn't there like an eating
cereal meme with Ryan?
03:41 - Anyway, so this is good.
03:42 - This is probably all
I need, because it's
03:44 - like giving me-- look
at this-- it's giving me
03:46 - all this wonderful information.
03:47 - This is the path,
so I need that.
03:51 - I'm going to put that in here.
03:53 - And then these are some of the
things I need, like search q.
03:57 - So every-- this is-- in
case you've come here
04:00 - from some strange
place on the internet,
04:03 - all of those, all of
these, all of this list
04:06 - here are parameters.
04:08 - Parameters are name value
pairs that get strung together,
04:11 - like q = ryan + gosling.
04:17 - And then limit is like
how many results do I get.
04:21 - The maximum is 100.
04:22 - Well, if I'm getting
GIFs about Ryan Gosling,
04:25 - oh my god, the limit is--
04:27 - is the sky is the limit, right?
04:29 - Do you think I could say
"limit = sky," and I would--
04:31 - the sky.
04:32 - OK, so I'm back.
04:33 - And so anyway, there's
more stuff there.
04:35 - But I don't really
need all that stuff.
04:37 - All I need is to realize that
I want to say things like q=
04:41 - and I'll go back to rainbow.
04:44 - I don't think I can
handle Ryan Gosling.
04:46 - It's too much Ryan.
04:49 - It's too much for me.
04:50 - I just can't handle it.
04:51 - I'll be overwhelmed.
04:52 - I'll be overcome.
04:57 - I've really lost it here.
04:58 - OK.
04:59 - Oh, q=funny+cat, that
would be a good one.
05:01 - Anyway, and you can see API key.
05:03 - So this is really all I need.
05:04 - I'm done.
05:04 - We're good.
05:06 - So let's put these
in some variables.
05:08 - This is going to be great.
05:10 - HTTP-- OK, var api = a
string with the path, right.
05:17 - I'll call this endpoint.
05:19 - I don't even know if that's
the right terminology.
05:21 - But this is the thing that I
know needs to go after the API.
05:24 - And honestly, that's silly
that I'm making this into two
05:26 - different variables, I guess.
05:27 - I'll just put this one
up here, because I'm just
05:30 - using the search.
05:31 - So I need to make this
a little bit bigger.
05:33 - So now I have a URL, which
is the URL to that API.
05:37 - I have an API key,
which is-- oh camera.
05:44 - Come back to me, camera.
05:47 - I have a key, which is this.
05:49 - And I'm going to
put that over here.
05:51 - Now I forget, what did it need?
05:54 - It needs to look like this.
05:56 - &, ampersand, api_key=.
05:59 - So in my code, I'm
actually going to say and--
06:03 - no, I'm going to say, &api_key=
and then I'm going to have
06:10 - a query be "&q=rainbow."
06:17 - And by the way this
right here, a query,
06:21 - a set of-- a query string always
begins with the question mark.
06:24 - So it's api_key= something, &q=
something, &limit= something.
06:30 - But all of that begins
with a question mark.
06:32 - So this would be the full API.
06:36 - And I've kind of broken
my own cardinal rule here,
06:39 - where I started writing
code before I even
06:41 - checked to see if I was
getting results in the browser.
06:46 - Let's go back to
the browser here.
06:47 - And I need all three
of these pieces.
06:50 - I need this piece--
06:52 - let me open a new tab-- that
piece, followed by this piece,
06:56 - followed by this piece.
07:00 - And I'm going to hit Enter.
07:02 - Oh, awesome.
07:04 - So now it looks like
I got some data,
07:06 - and I got a url, a bitly_url,
an embed_url, source.
07:13 - The thing that I'm looking
for is the actual GIF file.
07:19 - This is like an mp4, webp.
07:22 - Ah, url, this one
I think will do.
07:25 - Because I think this is
like the link that I want.
07:27 - Like I want to get something
that I can display quickly
07:30 - in the browser.
07:30 - And I'm sure I could make
any of this stuff work.
07:32 - I could embed the
like Giphy embed,
07:33 - or I could get the original
source as an mp4 file.
07:36 - But what I want is
something that's
07:37 - like pointing to
an actual GIF file.
07:40 - If I copy that address,
and paste it up here
07:43 - in the browser, we can see that,
oh yes, that I'm getting-- oh,
07:46 - this is--
07:47 - wow.
07:47 - I never expected to get such
a wonderful rainbow GIF URL.
07:53 - OK.
07:54 - You-- blah, blah,
blah, blah, blah, blah.
07:56 - Suddenly, I was so overcome that
I lost the ability to speak.
08:00 - All right.
08:01 - So this is good.
08:02 - This is good.
08:03 - So now I got to go back.
08:04 - I got to go back, and
I've got to say create--
08:07 - noCanvas.
08:09 - I feel like I'm in a
hurry all of a sudden.
08:11 - I want to make that url,
which is api + apiKey + query.
08:16 - And ultimately again,
I don't want "rainbow"
08:18 - to be hard-coded into my code.
08:20 - I want to get that
from the user input.
08:22 - But I might-- you
know, I did that
08:24 - in a couple of different
previous videos.
08:25 - You could almost think of that
as an exercise for yourself.
08:27 - But now I'm going to say
loadJSON (url, gotData);.
08:34 - So again, the loadJSON();
function is a p5.js function
08:38 - where I give a URL from an API
that's going to give me back
08:41 - JSON.
08:41 - I have a callback, gotData.
08:44 - So if I write that
gotData function,
08:48 - and I give it an argument--
08:49 - I've said this in like all
the videos I've made today--
08:52 - that (data) variable gets filled
with the data from the API.
08:56 - And I just want to see first,
again, does this even work?
08:59 - I'll add a println(data); in
there, and I'm going to Run.
09:02 - And I can see, look, OK
so data came in there.
09:04 - That's a good sign.
09:05 - So now I've got to figure out--
again, this is that thing,
09:08 - this is hard--
09:09 - I've got to figure out, I've
got to unpack this JSON.
09:12 - So first, one thing
I can notice is
09:14 - that data-- this is
going to be awkward,
09:16 - because I'm going to have
this moment where I'm saying
09:18 - data.data, because
the first key--
09:20 - the first property
of this object
09:22 - that came back
from Giphy is data.
09:25 - So then, what is data?
09:26 - It's an array, and each element
of the array I'm guessing,
09:29 - I'm assuming, is one
particular GIF with lots
09:32 - of information about that.
09:34 - And what I want is index
0 images.orginal.url.
09:41 - I guess I could get like
different sizes and stuff,
09:44 - but let's go with data
index 0.images.original.url.
09:53 - I think, was that right?
09:54 - I'm having trouble getting
all the way to the right here.
09:57 - Yep, that's right.
09:58 - I think that's right.
09:59 - OK.
10:00 - So let's give that a try.
10:01 - Did that make sense?
10:03 - So I want to say (data.data
index 0.images.original.url).
10:13 - Could that possibly be right?
10:14 - Let's go back and
look at that again,
10:16 - data.data.images.original.url.
10:28 - Usually I have like a
whiteboard really handy,
10:30 - which I have one over there.
10:31 - I think that's right.
10:32 - Let's just run it
and have some faith.
10:34 - Look at that.
10:34 - That looks like a
URL that makes sense.
10:36 - If I click it, I see it.
10:38 - Oh, good.
10:38 - Oh, good.
10:39 - Now we're talking.
10:40 - So guess what?
10:41 - Guess what p5 has for you?
10:43 - Oh, this camera's off.
10:45 - One of the functions in the
p5 DOM library is a function
10:51 - called createImg().
10:55 - Now there's a lot of
different ways of working
10:57 - with images in the browser.
10:59 - You can load them from a file.
11:00 - You can draw them in a canvas.
11:01 - You can mess with their pixels.
11:02 - What this particular
function does
11:05 - is it makes an HTML element
that looks like this, right?
11:11 - Now, there's lots of
different attributes and ways
11:13 - that you can configure and
style this particular element.
11:16 - But if you give it
an argument, that's
11:19 - what becomes the source, the
source of that particular image
11:24 - tag.
11:24 - So what I want to do is take
the path to my Giphy thing,
11:30 - and then create an element that
will appear on the screen--
11:34 - on the web page.
11:35 - So what I should
be able to do is
11:37 - just say createImg
instead of println
11:40 - with this particular URL.
11:42 - I kind of want to
put just like--
11:46 - I'm going to just
call this (giphy),
11:47 - just so it doesn't
say like data.data.
11:49 - I think that's
confusing to look at.
11:51 - So gotData, fill
the data with giphy.
11:53 - The lighting in here changed.
11:55 - And now let's run this,
and see what happens.
12:00 - Look, and there,
I have my rainbow.
12:03 - Now here's the thing.
12:04 - Giphy, it gave me more
than just one image, right?
12:08 - So this is pretty exciting.
12:10 - What I can do is now say for
var i = 0; i is less than--
12:14 - what's the array here,
giphy.data index 0,
12:18 - giphy.data.length, i++
and I can say index i now.
12:28 - So I'm going to make an image
element for every single image
12:32 - that I've gotten from Giphy.
12:35 - And we can see-- look at
this, I've got this page,
12:38 - they're all there, all of my--
12:41 - this is quite the--
12:45 - Although this is a good one.
12:46 - There we go.
12:47 - That is the-- I'm just going to
like never make a video again,
12:50 - because this is like
the perfect thing
12:52 - to ever have in
one of my videos.
12:55 - So anyway, you can see.
12:56 - Boy this is fun.
12:56 - There's lots of things you
could probably play with.
12:58 - So what do you do with this?
12:59 - I don't know.
12:59 - Maybe you get take user input.
13:00 - Maybe you arrange them
in a different way.
13:02 - I don't know.
13:03 - Maybe it just makes you happy
to look at GIFs, I guess.
13:05 - It's making me happy.
13:06 - You know, we really should
do the Ryan Gosling thing,
13:09 - I think, before this video ends.
13:10 - But you know, that
would be the--
13:13 - I don't even know how
to spell Ryan Gosling.
13:15 - Let's see if that's right.
13:16 - So you can see, here we go,
Ryan Gosling, there you are.
13:21 - And so, you know,
this is the thing,
13:23 - like I'm changing the word.
13:24 - What could you do with this?
13:25 - Make something
interesting with this.
13:26 - Play around with this.
13:27 - Send me an email or a tweet
or write in the comments.
13:30 - I would love to know what
you do with this example.
13:34 - Hopefully this helped you
with yet another kind of API
13:37 - you can use.
13:37 - Now here's the
thing, there was a--
13:41 - we've got to have
a chat, you and me,
13:44 - because I've been doing
a lot of these videos
13:46 - about working with APIs.
13:47 - And I kind of, you know, one
thing I haven't really showed
13:49 - you is what if you need to
make like a whole lot of APIs
13:53 - calls all at once.
13:54 - There's some issues
that can come up.
13:56 - You know, you've got
like-- you're creating
13:58 - a lot of callbacks all at once.
14:00 - How do you know which callbacks
goes with which API call?
14:02 - You might be generating a
lot of DOM elements all ones
14:04 - that could lock up your browser.
14:06 - So I do need--
14:07 - there's some
pitfalls here, and I
14:08 - think I need to make a video
soon that just sort of covers
14:11 - those scenarios.
14:12 - And there's this thing
called a JavaScript closure.
14:15 - What do you think the chances
are there are Giphys associated
14:18 - with the word "closure"?
14:20 - This is like high risk here.
14:23 - I don't know what this--
14:25 - This is not working for me.
14:26 - But anyway, so I was hoping
I would get something
14:29 - interesting to look at.
14:31 - Cut that out.
14:31 - So I want to make a video that
sort of covers this topic,
14:34 - and maybe we'll look at it even
in the context of Giphy, which
14:37 - seemed to be a nice API to use.
14:39 - OK, so this was a totally off
the cuff thing that I did.
14:42 - Hopefully it worked, and
you got something out of it.
14:44 - And I've now made
three videos today.
14:46 - It's two o'clock,
which is the time
14:47 - that I said I was going to end.
14:48 - I mean the recording
[INAUDIBLE]..
14:50 - Never mind, you don't
care about the time.
14:53 - Shiffman, Ryan Gosling,
hashtag rainbow heart thing,
14:56 - I don't know.
14:57 - That's too long.
14:57 - You figure out what that is.
15:00 - Wake up, mouse.
15:00 - Goodbye, and I'll see you soon.