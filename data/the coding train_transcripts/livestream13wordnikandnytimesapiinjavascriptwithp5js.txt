00:00 - I'm here in New York City at uh nyu's
00:04 - Tish School of the Arts ITP um and I've
00:08 - been making a whole bunch of video
00:09 - lessons about working with data and apis
00:11 - and Json files that's a loud noise
00:14 - outside like to have the window open for
00:16 - some air but I think I have to close it
00:18 - um so uh in today's session I'm going to
00:21 - spend about an hour or a little over an
00:22 - hour and I want to look at two
00:24 - particular apis the wordnik API which is
00:26 - one of my personal favorite apis because
00:28 - I like words and word Nick um as well as
00:31 - the New York Times API which is kind of
00:33 - a rich data set and I I don't mean to
00:36 - suggest in this session that okay these
00:37 - are apis to use for they are apis to use
00:40 - for a projects but I'm I'm looking at
00:41 - them in the context of they're good case
00:44 - studies of what apis look like and how
00:46 - you figure out how to use them and how
00:47 - you write some code to get access to
00:49 - them so I'm doing this as a live stream
00:51 - there's a chat running uh where you can
00:53 - ask questions um but I'm going to at
00:55 - certain points during the live stream
00:57 - I'm going to like hit a record button
00:59 - which will record like a 10-minute
01:00 - section as like a kind of Standalone
01:02 - video Lesson that'll upload uh later to
01:05 - YouTube um as as its own thing so uh the
01:08 - first thing I like to do is uh just
01:10 - check to make sure you can see me not
01:13 - that you need to see me but you can see
01:15 - uh and actually um you know one thing
01:17 - I'll pull up here is if I just open up
01:19 - the uh P5 editor here this is a
01:22 - JavaScript uh editor oh I don't know
01:24 - what's going on now um I'm to make sure
01:26 - this uh font size works for you that you
01:28 - can see the font here you can can hear
01:30 - the sound looks okay and then if I come
01:32 - over
01:34 - here uh over to this whiteboard and draw
01:37 - a nice smiley face and say hello is this
01:41 - clear can you read this text can you see
01:44 - it so I'm going to use the Whiteboard
01:45 - I'm going to use the computer I'm going
01:46 - to use my own face and arms and hands my
01:51 - voice to talk to you uh about this sort
01:53 - of stuff and um uh and get started in a
01:56 - minute so I'm going to check the chat uh
01:58 - some people are there
02:00 - um saying hi so I haven't heard that
02:02 - everything looks okay and that you can
02:04 - hear me but I can I can actually see in
02:06 - the um in my sort of preview screen that
02:09 - the the text and everything looks fairly
02:10 - legible so let me know if something's
02:12 - not okay so um uh let me uh kind of now
02:17 - this is the part of the live stream
02:18 - where I get organized for what I'm going
02:20 - to do so rather than prepare in advance
02:23 - I sort of prepare during the stream and
02:25 - then hit the record button for the the
02:27 - actual lessons that'll get uploaded
02:28 - later and you can give me feedback back
02:30 - or talk to me as things are going uh so
02:33 - what I want to look at is just my list
02:35 - of things so uh if you haven't watched
02:38 - any of these videos before you haven't
02:39 - been with me on one of these live
02:40 - streams I've actually now made
02:43 - eight I think I have a little over 200
02:46 - videos but I've made eight in this
02:47 - particular series about data so started
02:50 - with just what is data in general what
02:51 - are some different formats of data
02:53 - looked at this format called Json and
02:55 - how you could load Json from a local
02:56 - file how you could load Json from a URL
02:59 - and what it means to to sign up for an
03:00 - API and get data from an API so kind of
03:03 - assuming all of those videos and that
03:05 - the the API that I used as example is
03:07 - open weather map so I think what I'm
03:09 - going to and then I looked at a few
03:10 - different scenarios like how to get data
03:12 - from the API just when the program runs
03:14 - once how to get it when like the user
03:15 - performs in action and how to get data
03:18 - continuously uh while querying the API
03:20 - over and over again while the program is
03:21 - running so now that's all the stuff I
03:24 - did before and now today right here in
03:27 - this moment in time uh um I'm going to
03:31 - just let's look at some other apis and
03:33 - see kind of what happen so I think I'll
03:35 - start with word Nick um and so what I'm
03:38 - going to do in this first video is
03:43 - um so first let me get set up here let
03:45 - me get the uh um you know what I should
03:48 - do by the way let's do this together
03:51 - there's a new version of the P5 editor
03:53 - uh if I go to pjs. org uh there's also
03:56 - this lovely uh project but uh which is a
03:59 - CL oration between processing p5js uh
04:02 - the artist Leah and the um design firm
04:05 - so so limited where you can order some
04:07 - clothes as an aside um so what I going
04:10 - to do is I'm want to download the new
04:11 - editor right now which is uh version
04:15 - 0.5.3 um just has some bug fixes and
04:17 - things in it uh so I want to make sure I
04:19 - have that to work with for the examples
04:21 - that I'm going to make so I'm
04:23 - downloading that uh I'm going to go find
04:25 - it in my downloads this is like an I
04:27 - must have done this yesterday but I
04:29 - didn't actually install it and I'm
04:31 - extracting it this is this is like
04:33 - riveting like narrating using a computer
04:35 - and then I'm clicking on the file
04:38 - dragging it to the desktop and it's
04:40 - asking me if I want to replace it and I
04:43 - do replace it okay okay so now I have
04:46 - the new editor and I'm going to open
04:47 - that up oops I have the old editor open
04:49 - so I'm going to close that did that
04:50 - actually work we'll find out ah I think
04:53 - that didn't work because of my
04:55 - incompetence of having the editor open
04:58 - while I was trying to to install it so
05:01 - let me do that again copy this over
05:04 - replace now that should have worked move
05:06 - this up here launch
05:09 - it yeah I want to open it okay so uh and
05:13 - I'm going to close I'm going to make a
05:14 - new uh I'm going be in the editor and
05:17 - I'm going to make a new project and I'm
05:19 - going to close this one okay great so
05:21 - this will be our empty Standalone
05:24 - project where I will start to write code
05:26 - to use the word Nick API I also want to
05:28 - go to Chrome to get set up here and I
05:31 - will Google wordnik so first actually I
05:34 - think what I might do uh to talk about
05:36 - wordnik is first just look at the
05:38 - website itself and see how it has
05:40 - information about uh given words uh and
05:44 - then what I will do after that is go to
05:47 - the uh word Nick API which I could
05:48 - probably just get to from here
05:51 - um uh and under docs is where I want to
05:56 - go and then I'll start looking at how to
05:58 - sort of read documentation for an API
06:00 - and how you figure out how to use it and
06:01 - I think what I need to do is make the
06:03 - browser a little bit smaller and a
06:05 - little off to the right so that I don't
06:07 - stand in front of the important
06:08 - information too much blah blah blah blah
06:10 - blah blah blah okay anybody there yes
06:12 - you can see and hear the screen I've got
06:14 - a few people watching live which is
06:16 - always nice and I think I'm ready to
06:18 - start talking about the uh wck API you
06:21 - guys with me here okay um so I'm going
06:24 - to uh just go over I'm going to cycle
06:27 - the cameras which is a thing that I need
06:28 - to do cuz they I have this thing where
06:31 - they like turn off every so
06:34 - often I'm realizing one thing I think
06:37 - the scenario that I'm going to use for
06:39 - the wordnik API has to do with querying
06:42 - wordnik for related words words that are
06:45 - synonyms or antonyms and there's this
06:48 - concept of a hyperm and hyponym which is
06:52 - like uh a way of thinking of hierarchy
06:56 - I'm saying this in advance cuz I think I
06:57 - might have to talk about this in the
06:58 - video and this always gets me so a
07:00 - hyperm is essentially a word that uh is
07:06 - a represents the category of other words
07:08 - so primate being the hyper nimm for
07:12 - chimpanzee and chimpanzee being the
07:14 - hyponym for primate Furniture being the
07:18 - hyperm for chair does it sound right let
07:23 - me know in the chat think synonyms and
07:24 - antonyms I got similar words opposite
07:26 - words lots of other ways that words have
07:28 - relationships okay I think I I think I
07:29 - got that uh so I won't screw that up too
07:32 - much in the video checking the chat I
07:34 - see some names that I recognized from
07:36 - ITP back in the day nice to see you guys
07:38 - here Anthony uh and I'm going to
07:41 - minimize this where I look at my
07:44 - face and here we go so this is first
07:47 - video what I'm going to do is look this
07:50 - is probably going to be about 10 to 20
07:51 - minutes um I'm going to look at the word
07:53 - Nick API and I'm going to look at what
07:55 - it is how you query it and how you might
07:58 - uh uh
08:00 - uh make a little I'm the example I'm
08:02 - going to make is I'm going to make a
08:03 - little sketch that has a word that you
08:04 - click on and when you click on that word
08:06 - it replaces it with a similar word it's
08:08 - gonna be
08:09 - awesome okay here we go just check the
08:12 - chat one more time make sure no one's
08:13 - yelling at me like you can't hear or see
08:15 - me uh okay here we
08:18 - go in three two I need like a person to
08:22 - stand there on the other side and go in
08:23 - three two and by the way I'm going to
08:25 - say this and then I'm going to start and
08:26 - then I'm going to like screw it up and
08:27 - start over again so I'm I'm getting a
08:29 - little anxious I feel like I have to go
08:31 - pee but I'm just going to I'm just going
08:32 - to start anyway
08:35 - okay in three 2
08:38 - one hello welcome in this video I want
08:41 - to look at an API called the wordnik API
08:43 - which is an API that allows you to get
08:46 - lots of information about words in the
08:48 - English language so on the one hand this
08:50 - might be relevant to you in that you're
08:51 - interested in the word Nick API on on
08:53 - the other hand you just might be
08:55 - interested in how do you work with apis
08:56 - how do you work with data so I'm really
08:58 - looking at this as a case study of one
09:00 - particular API and I'll do a few more
09:02 - videos after this with other apis like
09:03 - the New York Times API and maybe some
09:05 - API that involves images okay so how
09:08 - where do we get started here so I'm
09:09 - using the p5js uh JavaScript library I'm
09:13 - using the p5js editor which you can get
09:15 - at pjs. org and uh let's get started so
09:20 - first of all what is this word Nick
09:21 - thing so let me go to
09:23 - my friend I like I don't my friends are
09:27 - things on the computer apparently uh the
09:29 - browser uh and look at the wordnik
09:31 - website so here I am just at word
09:33 - nick.com and I could type in a word like
09:36 - rainbow and uh I could see here that
09:39 - word Nick is giving me lots of
09:41 - information about this word it's giving
09:43 - me definitions it's giving me examples
09:46 - uh I can see here emology where does the
09:48 - word come from related words synonyms
09:50 - equivalents hyponyms so these there's
09:53 - lots of information lots of data
09:55 - associated with a particular word so
09:57 - word Nick is a vast dictionary and
09:58 - resource for gathering information about
10:01 - words and I I don't pretend to be an
10:02 - expert in it at all um I'm I'm I'm not
10:05 - an expert in anything actually but I'm
10:06 - looking at it from the lens of I'm a
10:08 - person who is talking about JavaScript
10:10 - code and data and apis this seems
10:12 - interesting to me let's try to make
10:13 - something with it so now this is just
10:15 - the wordnik website there's all this
10:17 - data there so you have to ask the
10:19 - question how do you get access to that
10:20 - data well the lovely thing here is that
10:23 - wordnik happens to say to you oh look
10:26 - you we have this data we want you to
10:28 - have it and there is is this thing
10:29 - called an API application programming
10:32 - interface a way for wordnik Server the
10:35 - programs that run in its server to send
10:37 - your program data through Json through
10:39 - the through this format known as Json
10:41 - and if you're if you don't know about
10:43 - how all that stuff works you can go back
10:45 - the beginning of this video series which
10:46 - kind of gives you an introduction to
10:48 - that sort of data format how this stuff
10:49 - works but I'm going to click over here
10:51 - and I'm just at developer. neck.com now
10:55 - and uh if I if I if I went to that
10:57 - you'll see there's a lot of information
10:59 - and things that you can look at but what
11:00 - I'm looking for is this I'm looking for
11:02 - this thing that says docs so how easy it
11:05 - is to use an API is
11:08 - only as good as the documentation and
11:11 - examples are and I think word Nick is a
11:12 - nice example of an API that has good
11:15 - documentation and so I'm going to walk
11:17 - you through how you can for you know I'm
11:19 - I'm I'm rambling way too much but I I am
11:22 - making a point in a way by rambling
11:23 - which is that a lot of the work involved
11:25 - with working with data and apis doesn't
11:27 - even have anything to do with writing
11:28 - code it has to do with reading the
11:30 - documentation playing around with the
11:32 - website clicking on things and figuring
11:34 - out how it works so that you know by the
11:36 - time you get to writing code you know
11:37 - exactly what to put in your code and
11:39 - that's the stage that I'm at right now
11:41 - so uh let me click I don't know where to
11:43 - look uh let me click on docs and here we
11:46 - are and you can see you know this this
11:48 - might be unfamiliar to you like what's
11:50 - going on here but you can see
11:53 - hm so I've looked at this before so I'm
11:55 - trying to like get I'm like doing like a
11:57 - a a method acting thing where I'm trying
11:59 - to pretend I've never looked at this
12:00 - before but I'm seeing here okay there's
12:02 - a bunch of options here to click on and
12:05 - this is quite common with apis in that
12:07 - there's sort of commands that you can
12:09 - execute with an API like maybe you want
12:11 - to ask for information about one
12:12 - particular word or maybe you want to get
12:14 - a list of words back or you want to ask
12:16 - for information about a group of words
12:18 - so these what what's what what's being
12:20 - shown here are the different API
12:22 - commands that you can kind of start with
12:24 - and I know for a fact that in the
12:26 - scenario that I'm imagining in my head I
12:28 - want to get information about a
12:29 - particular word so I'm going to click on
12:31 - this and it's going to show me aha so if
12:34 - you if you um in the pre in one of my
12:37 - earlier videos where I looked at open
12:38 - weather map it the whole thing was
12:42 - figuring out how to put together this
12:44 - API query out of a bunch of pieces so
12:47 - what the documentation is showing you
12:49 - right here is what are those pieces and
12:52 - in fact you can see like H if I want to
12:54 - get the definitions of a word there's
12:56 - like this part of the path then there's
12:58 - that part of the path and what's this
13:00 - thing here in between curly brackets oh
13:02 - that's the thing that I set myself so if
13:05 - I want to get the definitions of the
13:06 - word Apple I need this part of the path
13:08 - and this part of the path and I want to
13:09 - put Apple in there if I want rainbow I
13:11 - want rainbow in there if I want
13:12 - porcupine I want porcupine in there just
13:14 - some words I'm thinking of in my head so
13:17 - uh for this particular example what I
13:19 - want to do is look for related words so
13:22 - words that are synonyms words that are
13:24 - antonyms you know similar words opposite
13:26 - words those are the things that kind of
13:28 - might be intuitive to you but there's
13:30 - lots of other ways that words are Rel
13:31 - related to each other something's called
13:33 - a hyperm like Furniture is a hyperm for
13:36 - chair it's like a broad category uh and
13:39 - there are hyponyms which are the things
13:41 - in that category so they can have these
13:42 - hierar relationships of hierarchy so
13:44 - there's a lot more to this and somebody
13:46 - with more knowledge about it come and
13:47 - join me someday and talk about that but
13:50 - I don't even need to know be an expert
13:51 - on that I can click on this related
13:53 - words and start to see ah okay now
13:55 - here's this is something that makes me
13:58 - personally super happy and it should
13:59 - make you happy too if you want to work
14:01 - for an API work for work with an
14:04 - API um which is that this is a tool so I
14:09 - in order to figure out how to use the
14:11 - API this is now an interface where I can
14:13 - start to do things like okay let me put
14:15 - the word rainbow in here use
14:18 - canonical that must mean something
14:20 - important we could kind of read about
14:21 - that in the documentation later but
14:23 - false default that's fine relationship
14:25 - type oh I could pick a relationship type
14:27 - or I could just leave that blank limit
14:29 - per relationship type that must be how
14:31 - many things I get back so you can see
14:33 - I'm sort of configuring the API call
14:36 - that I'm going to make and then look at
14:38 - this button this is the greatest button
14:41 - I've ever seen and I've seen a lot of
14:44 - buttons and I'm sure I'll see a greater
14:45 - one later today but right now it feels
14:47 - like such a wonderful button because it
14:49 - says try it out so all I need to do is
14:51 - click on this and you can see first of
14:53 - all look what I've got I've got the full
14:56 - path to the API query so this is that
14:59 - API query that I spent all this time
15:00 - figuring out with open weather map the
15:02 - tools of the wordnik website are helping
15:04 - me make that query already so I can just
15:07 - literally copy paste this into my code
15:09 - and then it's also showing me what the
15:11 - response is so you can see ah look at
15:13 - this uh equivalent a seow oh a rainbow
15:18 - is equivalent to a seow I don't know
15:20 - what a seow is I guess it's a bow Over
15:21 - the Sea and you can see the hyper nms
15:24 - right Arc is like a broader category for
15:26 - a rainbow bow is a broader category what
15:29 - kinds of bows are there all my whole
15:30 - life I only ever thought there were
15:31 - rainbows now I know there are sea bows
15:34 - and other kinds of bows I mean there's
15:37 - the bows you wear in your head okay
15:38 - cross reference spous rainbow style ciny
15:41 - Bowl what anyway this is like fun I mean
15:43 - to me this is just fun like I'm I'm
15:44 - getting some moments of surprise here
15:46 - getting some data you might have a real
15:47 - reason why you're doing this but the
15:49 - next thing I want to do just to like
15:50 - really be sure that this is working the
15:52 - way I want is I can take this full URL
15:56 - and I'm going to just copy it again into
15:58 - my web browser just into the address bar
16:00 - and hit enter and you can see look at
16:03 - this this is indeed the data that's
16:05 - coming back so I've done I've now done
16:07 - essentially all the work that I need to
16:09 - do before I start writing code I found
16:12 - the API I looked around the website I
16:14 - enjoyed it I found that it has
16:16 - documentation and an API tool to help me
16:18 - like configure a query I did that it
16:20 - made the it made the uh add URL address
16:23 - for me and I put that into the browser
16:25 - and I see that I'm getting data so once
16:27 - I've gotten through those steps my next
16:30 - step is to start writing some code so
16:32 - really I need to use the low Json
16:34 - function to get this data and then I
16:36 - need to practice all the things that
16:38 - I've looked at in previous videos which
16:39 - is uh how do I get this is an object and
16:42 - then there's an array called words oh
16:44 - the for whole thing is an is an array so
16:46 - how do we dig into the data and and I'm
16:47 - going to get to that so let's um let's
16:51 - get started so um okay so one thing that
16:54 - I want to uh make a point of here is
16:56 - that once again we have this idea I'm
16:58 - going to just I feel like I have to use
17:00 - the whiteboard in the
17:01 - video which is sort of silly I don't
17:03 - really have to use the Whiteboard but
17:05 - again I need to do this thing where I
17:07 - think about this API call in pieces so I
17:11 - might have the path to the
17:14 - API I might have my API key as a
17:18 - particular variable and then I'm going
17:21 - to create that API call as like the API
17:24 - plus the API key and then something that
17:28 - goes here in the middle this is the word
17:30 - that I want to search for like rainbow
17:32 - or something like that so this is one of
17:35 - the things that I'm going to have to
17:36 - figure out is now that I have that
17:37 - really long URL you know that's you you
17:40 - can see it up at the top there how do I
17:42 - break it into pieces to make the query
17:43 - and the code so okay so let me come back
17:45 - over here and let's start uh writing
17:47 - some code uh first I'm just going to
17:49 - grab this URL and I'm going to go back
17:51 - to P5 and I'm G to say VAR URL equals
17:56 - and it's this long thing now one thing
17:57 - you'll notice by the way is there's an
17:59 - API key in there already like whose API
18:01 - key is that now um what wordnik actually
18:04 - I don't know that this is true but what
18:05 - I'm speculating is that wordnik when
18:06 - you're using their uh tool just
18:08 - generates a temporary API key that you
18:10 - can use to try out the API so hopefully
18:12 - this will work in my code for a little
18:14 - bit if not I have my API key saved in a
18:17 - file but again to do this yourself
18:19 - you're going to have to sign up for an
18:20 - account developer account with wordnik
18:21 - and get your own API key or like analyze
18:24 - this video and use mine which is fine
18:25 - with me my API key your API key that's
18:28 - how I feel about my API Keys okay um so
18:32 - couple things I want to do is I want to
18:34 - First realize that like okay I need this
18:37 - is the thing rainbow right there that's
18:39 - the thing that I need to put into the
18:40 - query
18:42 - myself so I'm going to put a a a end
18:45 - quote here and I'm going to then I'm
18:48 - going to make
18:49 - another variable that stores rainbow and
18:53 - then I'm going to make another variable
18:54 - that says uh URL 2 so I'm going to just
18:58 - divide it into two parts so this is one
19:00 - way of doing it right that big URL has
19:02 - the beginning and the end and the one
19:04 - thing in the middle that I need to
19:05 - change so I think this is kind of uh a
19:07 - way of doing it okay so uh
19:13 - next uh what I am going to do is I'm
19:15 - going to create I'm going to I'm going
19:17 - to have a a link on the
19:20 - page uh which will be like a
19:24 - button uh and I'll put the word rainbow
19:27 - in
19:27 - it uh sorry I lost my train of thought
19:31 - for a second I like went into some sort
19:32 - of Trans State forgot that I was making
19:33 - a video let me come back look what what
19:35 - am I doing here so first of all actually
19:37 - let me just check to make sure this
19:39 - works so I just want to add load Json
19:41 - URL one plus the word plus URL 2 uh to
19:46 - and then I need a call back where that
19:48 - data will come in so then I'm going to
19:50 - add that call
19:52 - back and the the call back the variable
19:55 - the argument that's part of that
19:57 - function that's what gets filled with
19:58 - the data and I'm going to say print line
20:00 - data just to see that this works so
20:03 - whoops and I better save this as
20:04 - something uh word Nick so let me run
20:07 - this and see if it works and you can see
20:09 - ah good something is happening there I
20:11 - got some data back so first of all we
20:13 - can be happy we know that this idea
20:16 - works now what I want to do is what I
20:18 - want to do is put something on the
20:20 - screen that when I click on it it makes
20:22 - that API call so I'm going to make a uh
20:25 - I'm just going to call it like a link
20:28 - and uh in I'm going to say link equals
20:31 - create a with that word in it so and
20:35 - it's going to link to nothing so okay so
20:38 - I I'm kind of jumping around here but in
20:40 - the P5 uh library in the Dom Library
20:43 - there's a function called create a which
20:45 - makes an anchor link you might say ahref
20:48 - equals google.com and then Google here
20:51 - I'm doing I want the word rainbow to
20:53 - link but to nothing I'm just putting the
20:54 - pound sign in there because it doesn't
20:56 - actually link to another URL I'm going
20:57 - to handle the click on it so if I look
21:00 - at this now if I run this sketch you can
21:02 - see here there it is Rainbow up at the
21:05 - top and I probably should add no canvas
21:07 - because there's like an invisible canvas
21:09 - there that's making the spacing weird
21:11 - and I can run this again you can see
21:13 - there it is up at the corner so I don't
21:15 - have any like clever styling going on
21:17 - here but there it is up at the corner so
21:19 - now what do I want to do I want to make
21:22 - it so when I click that link I'm going
21:25 - to make write a function called add word
21:27 - word ask word Nick then in that function
21:31 - ask word
21:33 - Nick I'm going to make that call to load
21:36 - Json right so here we've got a I can
21:39 - type I can type so here we go right what
21:42 - do I have now I have this web page that
21:45 - has a single link on it when I click on
21:48 - that link this ask wordnik function will
21:50 - be triggered that ask wordnik function
21:52 - will make an API query to wordnik and
21:54 - the data will come back so the question
21:56 - is what do I do when the data comes back
21:58 - back so first of all let's just see that
22:01 - this is even working so I'm going to run
22:04 - this again what I want to see right now
22:05 - what what happens when the data comes
22:07 - back I just should see something in the
22:08 - console down here so I click on Rainbow
22:10 - and I see something in the console down
22:12 - here perfect now what I want to do is
22:15 - look into that data and pull out a
22:17 - related word to the word rainbow so
22:20 - let's go back to here where I had that
22:21 - data open now what is this what is this
22:26 - oh my God I don't know this is an array
22:30 - you can see that square bracket bracket
22:32 - at the top means that it's an array what
22:34 - is each element of the array it's a kind
22:36 - of relationship so each element is a
22:39 - kind of each element AR is like
22:41 - equivalency hyper Nim maybe cross
22:44 - reference you can see and then what's in
22:46 - each element of the array a uh a
22:49 - property called Words which has another
22:51 - array which are actual the actual words
22:53 - that are related so for example if I
22:56 - wanted to get to this particular word c
22:58 - B I would say data Index
23:03 - zword index0 right data is the whole
23:07 - thing index zero is this first object
23:10 - wordss is that property index zero is
23:12 - that sibo let's try that so I'm going to
23:15 - go back to my code and I'm going to say
23:18 - print line data index
23:23 - zword index zero I think that's what I
23:25 - said right let's just look at that I'm
23:27 - going to run it and I click on Rainbow
23:30 - boom ah and look at that the most
23:32 - beautiful two words in the English
23:34 - language to me right now this is working
23:37 - CBO so what could I do with that well if
23:39 - I have access to this link why not
23:44 - just
23:45 - um change the content of it so I'm going
23:49 - to say link. HTML oops this is the wrong
23:54 - place I don't need this draw function
23:56 - I'm not using it link. HTML is is that
23:59 - data so there we
24:01 - go and now when I save this and run it
24:05 - again let's zoom in here I'm going to
24:07 - click on Rainbow and I'm going to see
24:10 - sibo so I queried the the word Nick API
24:13 - and I got back a related word what
24:15 - happens when I click on sibo H nothing
24:17 - I'm still getting sibo so what I want to
24:20 - do is now when I query again I want to
24:23 - get a related word to sibo so I'm kind
24:25 - of playing a game at telephone with the
24:26 - word Nick API 15 minutes into this video
24:29 - if you're 15 minutes into this video and
24:31 - still watching you know
24:35 - #o
24:36 - uh okay uh uh that's I don't know I
24:39 - don't know if this is really working my
24:41 - whole hashtag thing I feel like
24:42 - I'll such I like
24:45 - doofus
24:46 - um uh okay so uh H so what do I need to
24:49 - do this is always querying oh my finger
24:52 - disappeared this is always querying the
24:53 - variable word the variable word is
24:55 - always the word rainbow what I want that
24:57 - word to be is now sibo so what I really
25:00 - need to do is update the variable to be
25:03 - that
25:04 - word and
25:06 - then uh I'm going to uh add put the
25:11 - update the variable to be that word and
25:13 - then update the content so now the next
25:15 - time it asks wck it's going to pass in
25:17 - sibo so that feels like a very word
25:19 - strange word to say so I'm going to
25:20 - click here I get sibo and click there I
25:22 - get rainbow I click here I get CBO oh
25:24 - rainbow SEO rainbow so there's a flaw in
25:27 - what I'm doing right the the flaw in
25:29 - what I'm doing is I'm only ever getting
25:32 - exactly the first similar the first
25:36 - related word of the first related
25:39 - category so what what could be a better
25:41 - solution here think about that think
25:43 - about this why don't I pick a random
25:46 - category and a random word from that
25:48 - category so you know something you might
25:50 - do right now is pause the video stop and
25:52 - like try to implement that yourself I
25:54 - would wait for you but that doesn't make
25:55 - any sense so I'm going to go on and do
25:57 - this right now and that's going to sort
25:58 - of wrap up this video but this could be
26:00 - something that you could stop and try to
26:01 - implement on on your own but you can see
26:03 - that there's two numbers in here I'm
26:05 - getting the zero element of the data
26:07 - array and the zero element of the words
26:09 - array so what if I want to get a random
26:11 - element of the data array and a random
26:13 - element of the words array well I just
26:14 - need to use the P5 random function I
26:17 - could use the native JavaScript math.
26:19 - random but I'm using the P5 Library
26:20 - which has its own random function so I
26:22 - could say you know I could say uh index
26:25 - and maybe I'll call it index one equals
26:28 - random number uh between zero and data.
26:32 - length right data. length is uh is a
26:36 - data is that first array so I want a
26:38 - random number in that array but remember
26:40 - random gives me a floating point a
26:42 - decimal number so I need to use the
26:43 - floor function to chop off that decimal
26:47 - I don't want to be mean to the decimal
26:49 - to remove it nicely kindly put it to the
26:51 - side and I'll talk to it later decimal
26:53 - friend of mine um so then uh I'm going
26:57 - to now once I have that what do I need
27:00 - but a random word from whatever I picked
27:03 - so now data index one. length I
27:09 - uhw do length right I this is now right
27:12 - I picked a random index into the data
27:14 - array so I need to look at that array
27:17 - that that element in the data array and
27:19 - get a random index of the words array
27:21 - from that particular element and I'm
27:22 - going to call that index two so I'm
27:24 - going to say data index one words index
27:27 - 2 two I did this kind of quickly but
27:30 - hopefully this works and now I run this
27:32 - again and I've got rainbow arc flash
27:37 - bash bashed clashed clashes dashes Dash
27:42 - foil frustrate nugatory SL okay I don't
27:47 - know where this is going I want to stop
27:48 - now I'm worried I'm G get like a word
27:49 - that's very embarrassing for me to say
27:51 - like pumpkin that's not that's not
27:53 - embarrassing but I I don't know I
27:55 - couldn't I don't want to say the
27:56 - embarrassing word because then I'd be Em
27:57 - I'm easily
27:58 - very very easily
28:00 - embarrassed I'm already so embarrassed
28:02 - right now so I think this wraps up this
28:04 - video I mean there's so much more to
28:06 - word Nick I really only showed you just
28:08 - this one aspect of it of using this
28:11 - particular API call which remember is uh
28:14 - related words word. Json related words
28:17 - but you know I might encourage you if
28:19 - you watch this video and want to do
28:20 - something yourself go back to that API
28:23 - tool come back here I'm going to click
28:24 - back in the browser look at all these
28:26 - different possibilities I could get
28:28 - example sentences definitions top
28:30 - example um word Nick has this huge
28:32 - Corpus of lots of source texts and you
28:34 - can actually get word counts per year I
28:37 - think of frequency so you might look at
28:38 - something like how often is a word
28:40 - generally used in the English language
28:43 - over time so there's so much
28:45 - possibilities there I don't know you
28:46 - probably have better ideas write in the
28:48 - comments this is like the longest video
28:49 - I've ever
28:51 - made uh 20 minutes um and I thank you if
28:55 - you actually uh are still here watching
28:57 - and I'm in the next video I think I'm
28:59 - going to look at the New York Times API
29:00 - which is yet another API I wish you
29:02 - could just I wish I could stop and hear
29:03 - a question from you if there is actually
29:05 - a live stream going on and maybe there
29:06 - will be a question but I'm going to
29:07 - instead just hit
29:09 - uh uh and record goodbye and until the
29:13 - next
29:15 - time okay um hello is anybody still
29:19 - walking uh okay uh walking watching my
29:24 - brain is like not working today oh I
29:26 - lost the chat show chat
29:28 - uh oh I'm in the wrong place live
29:30 - dashboard oops oops I don't want to hear
29:32 - uh 10 people watching okay hi everybody
29:34 - were did you watch that that make any
29:36 - sense uh oh and I clicked on the wrong
29:38 - thing I'm doing all sorts of like
29:40 - lunatic stuff
29:42 - um uh I'm in the wrong place okay um
29:45 - sorry I said um and like I I was like I
29:48 - was just like using all my energy to
29:49 - like keep it together for that
29:50 - particular like video that I recorded
29:52 - which was 20 minutes and I kind of like
29:53 - lost it for a minute there but I'm back
29:56 - and uh I need to get like take a little
29:57 - moment to get situated I'm going to open
29:59 - the window because it's is very hot in
30:00 - here now and get some air uh and um I
30:04 - think what I'm going to do is look at
30:05 - the New York Times API in the next video
30:07 - although I'm open to other suggestions
30:09 - but I feel like that's sort of like a
30:11 - commonly used
30:12 - one um so let me figure
30:16 - out um I'm over here now erasing the
30:21 - Whiteboard uh if you have any questions
30:23 - or comments or something wasn't clear or
30:25 - or if like there was a problem in that
30:27 - video in that section um let me
30:30 - know um and I think what I'll do I'm
30:35 - trying to think of what's a good I mean
30:37 - the easiest thing probably the thing
30:39 - that makes most sense for me is to use
30:41 - the article search API um where I can
30:44 - just pass it a word and get articles
30:47 - back from a given time period that
30:50 - contain that word and I could display
30:52 - the headlines and maybe the snippet like
30:54 - a paragraph from it but if you have
30:56 - better suggestions of what might be a
30:58 - good demonstration I'm open to that I'm
31:01 - coming back over here um let me get
31:03 - situated here and New York
31:09 - Times uh
31:15 - apepi you're going to need a short break
31:17 - for a second I should get some I just
31:19 - just think I need I didn't bring a glass
31:20 - of water in here uh so I might take a
31:23 - break for a second I'll leave you guys
31:24 - to stare at this I can I'll leave you
31:26 - something fun on the I I don't know what
31:28 - that would be p5js
31:30 - website uh okay article search API I
31:32 - think I'll probably I think this is
31:34 - probably the thing that makes the most
31:35 - sense to start with the article search
31:37 - API
31:40 - um uh and uh oh Anthony asks word Nick
31:45 - visuals um certainly you could do a lot
31:48 - with uh visuals with wordnik I don't I
31:50 - don't believe the word Nick API provides
31:52 - you any particular like obvious data but
31:55 - you could you know for example with the
31:56 - related words you could build a kind of
31:58 - like networked diagram where you're
32:00 - seeing the relationship between the
32:01 - words instead of just one at a time that
32:02 - would be an interesting thing to try one
32:04 - thing wordnik does have is sound files
32:07 - uh with word pronunciation so that's
32:09 - kind of an interesting thing you could
32:10 - kind of build a weird little almost like
32:12 - speech to text thing where you just like
32:14 - keep quering the API and getting a sound
32:15 - for every word and play it back that's
32:18 - not speech to text that's Text to Speech
32:20 - but that's something that you could try
32:22 - uh okay so um I'm going to uh I'm going
32:26 - to um
32:31 - TW minute
32:34 - break so if if you're watching this um
32:38 - if you're watching this in like a
32:40 - recorded you can just fast forward ahead
32:42 - two minutes if you're on the live stream
32:44 - uh just hold on I'm gonna I'm going to
32:46 - mute this
32:47 - microphone mute this
32:56 - microphone
33:26 - e
33:56 - e e
34:28 - I think you can hear me now right yes
34:30 - okay
34:31 - good I never went to mime school and I
34:34 - always wanted to go to mime school
34:35 - that's probably a weird thing to say
34:36 - that you want to go to mime school but I
34:37 - think it might actually be true in my
34:38 - case the Jac laok School of mime I think
34:40 - it's in Paris anybody know that place
34:42 - maybe I can do that as like a summer
34:45 - vacation and then these videos would be
34:48 - even
34:48 - more ridiculously weird um okay I can
34:51 - erase this wish it weren't so hot in
34:55 - here um and uh I'm going to come back
34:59 - over
35:00 - here and uh I'm back uh so there's eight
35:03 - of you online at the moment which is
35:05 - nice okay so I think I'm going to get
35:07 - ready to start what is this over here oh
35:10 - this is like a piece of tape there's
35:12 - like something on in the Stream that
35:15 - right here what is that that's weird oh
35:18 - it's this ah this on the table is
35:22 - actually visible anyway sorry no one
35:25 - needs to be watching this part uh okay
35:27 - so now I'm going to look at the New York
35:29 - Times API and I'm going to do article
35:33 - search and uh so let me open up
35:36 - P5 and um I'm going to save this one and
35:41 - I'm going to do save as and I'm going to
35:44 - say New York
35:45 - Times uh I would like to publish these
35:48 - code examples somewhere I've been having
35:49 - people volunteer to like remake them
35:51 - actually contribute the GitHub repositor
35:53 - because they're kind of doing it anyway
35:54 - with the video so if you if you're doing
35:56 - that uh send me a note somewhere where
35:57 - in the note space of the internet um
36:01 - okay so I think now I'm going to get rid
36:03 - of all this get rid of all this I guess
36:07 - I'm getting rid of all
36:10 - this uh and uh leaving that there and
36:15 - we're ready to look at the New York
36:16 - Times
36:19 - API okay and if I just go to developer.
36:23 - New York times.com I'm on here okay here
36:27 - we go any um make a yes I could possibly
36:31 - do one of these entire and the cameras
36:32 - are shutting off which is good that that
36:34 - happened do an entire video just only
36:36 - with mine I don't think that would be
36:37 - that helpful although it would certainly
36:40 - entertain and amuse me
36:43 - personally
36:44 - uh okay oops I left this one is off
36:48 - sorry about to get started
36:50 - here uh I'm drink this water that I got
36:59 - it is 1:23 p.m. I have until 2: p.m. so
37:03 - we'll see it might just do one more
37:09 - video okay any last messages in the chat
37:14 - uh and now I'm going to get started and
37:16 - do this New York Times one okay I'm G to
37:20 - minimize that uh I can see the sound is
37:23 - still working uh and here we go
37:29 - oh the window's open I should close the
37:31 - window probably for
37:33 - sound uh I can survive the heat for a
37:38 - little
37:39 - bit uh okay boy here we go it'll be much
37:43 - better in the winter when it's I can get
37:44 - like the really cold temperature coming
37:46 - in in
37:48 - between hello in this video I'm going to
37:51 - look at how to use the New York Times
37:53 - API with your I'm like Ed car JavaScript
37:57 - salesperson to Dan today but anyway
38:00 - scratch that I'm I'm really I'm not
38:02 - trying to sell you anything I'm just
38:05 - here I don't I'm here and I'm making a
38:08 - video hopefully this is helpful to you I
38:09 - want to look at the New York Times API
38:11 - so how do you query the New York Times
38:12 - API how do you get get get data from it
38:15 - and how to use that in a JavaScript
38:19 - sketch Tada okay so this is the New York
38:22 - Times API I got to just start this one
38:23 - and over I'm sure people will be amused
38:25 - someday that like but let me just start
38:27 - over I don't need the used car
38:29 - salesperson thing at the beginning of
38:31 - this video okay here we go hello uh in
38:34 - this video I'm going to look at the New
38:35 - York Times API which is an API that you
38:37 - can query to get information about
38:39 - articles in the New York Times shocking
38:41 - leag quite a surprise yeah so uh again
38:44 - uh I'm not suggesting that this is the
38:45 - be all end all of apis to use but this
38:48 - is a nice case study of finding an API
38:50 - that's out there how do you navigate its
38:52 - documentation how do you figure out how
38:55 - to form an API query and get get that
38:57 - data look at that data and make
38:59 - something happen on the screen in a web
39:01 - page using JavaScript HTML CSS and this
39:04 - thing over here above my head I need a
39:06 - hat I just would rather have that as a
39:07 - hat um called p5js okay so the first
39:11 - thing once again as in the previous
39:13 - video where I looked at word neck the
39:14 - first thing is I can spend a lot of time
39:16 - without even writing any code or looking
39:18 - at any code because the first thing I
39:20 - need to do is just figure out like huh
39:22 - there's an API
39:23 - like so um one thing you'll see I'm
39:26 - already here but I'm at developer. New
39:28 - York times.com so once again you're at
39:31 - the mercy of the API how good is the
39:33 - documentation are there examples is
39:35 - there an online tool that helps you
39:36 - navigate the API and again this is a
39:38 - case where there is a good one and you
39:41 - know you know this is that question like
39:43 - you went to the New York Times website
39:44 - you found all this data you want to use
39:46 - it is there an easy path to that or do
39:48 - you have to take some sort of like side
39:50 - road and in this particular video I'm
39:51 - showing you the easy path and in another
39:54 - video we'll look at some side roads to
39:55 - how you might scrape or Harse data that
39:58 - isn't presented in a sort of API Json
40:00 - friendly format okay so all that aside
40:03 - here I am welcome get started this is
40:06 - nice friendly language it makes me happy
40:08 - that somebody's welcoming me to the page
40:09 - and I could get started so the first
40:11 - thing you're going to need to do by the
40:12 - way um if you're doing this on your own
40:14 - is request an API key so again you've
40:16 - got to sign up for an account get an API
40:18 - key I don't believe actually I don't
40:21 - know that have no idea what I'm talking
40:22 - about all of a sudden which is most of
40:24 - the time but uh I I I don't know whether
40:27 - there's any threshold of quering this
40:29 - API where you suddenly have to pay for
40:31 - its use but certainly what I'm going to
40:32 - show you today getting a little bit of
40:34 - data here and there is something you can
40:35 - do for free this is a great thing this
40:38 - is something that if you see is good
40:40 - news for you you're looking for an API
40:43 - tool meaning you can figure out how the
40:44 - API Works through an interface in the
40:46 - browser we solve the same exact thing
40:48 - with word neck um so I could you know
40:51 - click around and look at various things
40:52 - available apis but I'm going to go here
40:54 - directly to that API tool and here you
40:57 - can see ah API console actually you know
40:59 - before I go that let me click to
41:00 - available apis so you can see here
41:03 - there's a lot of apis there's you know
41:05 - event listings and Geographic data most
41:07 - popular API movie reviews there's lots
41:10 - of different sort of sub apis different
41:12 - paths within the larger API I think I'm
41:14 - going to stick with for Simplicity just
41:16 - this article search API so interestingly
41:19 - amaz this is a kind of nice data source
41:21 - because it actually goes back to
41:22 - 1851 so I can query the New York Times
41:25 - to ask for tic I can search I can say
41:28 - give me all the articles that have the
41:29 - word rainbow in them or the word that
41:31 - you know sibo there's there such thing
41:33 - as a sibo as I learned in a previous
41:35 - video or you know porcupine whatever
41:37 - pick your word of choice you can find
41:38 - out find the Articles um so I'm going to
41:41 - start with that one and I could click on
41:43 - it and it's actually here's some
41:45 - documentation of how it all works but
41:47 - once again I I'm going to prefer to go
41:50 - back and go to this API tool and here I
41:54 - am article search API so I could try one
41:56 - of the other on but I'm going to stick
41:57 - with this one I don't know this toggle
41:59 - all endpoints that seems like a weird
42:02 - thing what's an endpoint but I think
42:03 - endpoint is like you know the I don't
42:06 - even know what that means the weird
42:09 - language of these apis but endpoint is
42:10 - like the point of end of like the API
42:13 - where you're asking the thing toggle all
42:15 - M that didn't make any sense uh all
42:17 - right okay I know because I toggled them
42:19 - all there's only one end point search so
42:22 - that's probably the um uh uh uh yeah
42:27 - toggle La methods uh okay I'm I've lost
42:29 - here oh boy uh somebody edit this part
42:32 - out where I'm I'm sweating here I'm very
42:34 - uncomfortably so the point is this is
42:37 - what I'm looking for I want to uh I want
42:40 - to get this interface where I can start
42:42 - to figure out how do I form that API
42:44 - call and here we can see here that these
42:48 - are I G to stop this take a break uh I'm
42:52 - going to come back I'm going I don't
42:54 - usually like to do this by pausing for a
42:55 - second and opening the window
42:58 - let's get some um which is that uh I
43:00 - think what I'm going to do is just start
43:01 - over from the part where I went to that
43:03 - page because um and I'm going to see if
43:06 - uh anybody's saying anything in the chat
43:07 - they're not I'm gonna just splice these
43:09 - two together because the beginning of
43:10 - that was fine um and I will start over
43:14 - again actually let me look at this look
43:16 - at this for a second just to try it out
43:19 - and then I'll go back to the video
43:20 - because so if I go to the um if I go to
43:24 - the uh back to to this here and I click
43:29 - on search and then I scroll down let me
43:32 - give myself a little more space here uh
43:34 - I can see these are some things like I
43:36 - want to look for um you know
43:40 - rainbow and the filtered query begin
43:42 - date end date I'm going to skip all that
43:44 - sorting I'm going to skip all that so
43:46 - there then I'm going to hit try it and
43:48 - I'm going to get this
43:51 - and uh it says overrate so I can't use
43:55 - that I can't use the sample key which
43:57 - that was good to find out so I need to
43:58 - go get my API
44:00 - key uh which is in
44:03 - here uh o I thought I had a oh I have a
44:09 - sample key in my text F boy it's good
44:11 - thing I stopped that video so I need to
44:13 - get my New York Times API key I swear I
44:16 - had an API key somewhere uh okay sorry
44:19 - everybody um now in this uh
44:23 - particular video you're going to get to
44:26 - watch me sign up for an API key no no no
44:28 - no no
44:30 - apis uh request an API key log in what's
44:34 - the chance that I'm going to remember my
44:36 - login any anybody want to place bets on
44:41 - this no could not find a combination so
44:44 - I think I better uh sign up no oh I
44:47 - could log in with Google am I logged in
44:49 - here with Google uh allow yep that'll
44:54 - work continue
44:57 - give me my API
44:59 - key that sounded very rude please could
45:01 - I have my API key uh refresh aren't I
45:04 - logged in now come on there we go name
45:08 - of your application I can change it
45:09 - later YouTube video demo my website is
45:14 - shiftman Donnet the internet is where I
45:18 - heard about this API article search I
45:21 - think that's all I'm going to use so I'm
45:24 - going to say I agree register
45:26 - application I probably should include
45:27 - this in the video but uh now I have my
45:30 - API
45:31 - key uh which I will copy paste you know
45:34 - I'm going to leave this open uh because
45:36 - I'll show it that's good and then now if
45:39 - I go back to here and I put this in here
45:41 - and I say try it that worked and I got
45:44 - all this data okay excellent oh I could
45:47 - use images interestingly enough
45:50 - like there might be images associated
45:53 - with some of these articles which would
45:54 - be interesting no I'm going to do that
45:56 - in a separate video anybody's still
45:58 - watching or here in the live stream but
46:00 - I'm ready to I could actually and I
46:01 - can't decide if I should start the whole
46:03 - New York Times video over I guess I'll
46:05 - leave what I had up until the point
46:07 - where I started going to the API console
46:09 - and I'll splice that together anybody
46:11 - have any feedback no it's eight of you
46:14 - here it says to me that there eight
46:16 - people here hello to you eight people uh
46:20 - and there we go so I'm going to back up
46:25 - now go here
46:28 - uh
46:30 - and um I'm at here and then I also I can
46:34 - close this and close this and I have
46:36 - this registration
46:38 - successful and oops and I click search
46:43 - great okay great what is this methods
46:46 - that's oh that's just opening end points
46:49 - if okay
46:51 - fine okay you guys with me um let me
46:55 - keep going with this particular video
46:59 - and
47:01 - um I'm going to close the
47:05 - window and I'm going to start again from
47:10 - the point where I was at this
47:14 - page just check the chat nobody it's
47:16 - very disconcerting to me when nobody
47:17 - says anything in the chat the number of
47:19 - people watching keeps going down share
47:21 - with your friends let's get some more
47:22 - people involved here I'd love to see a
47:24 - couple more people here live uh
47:27 - okay here we
47:30 - go hi moment of technical difficulty but
47:33 - I'm back and I am on the API console so
47:35 - the first thing that I'm going to do
47:37 - here is look at how the API console
47:39 - Works to figure out what the query is I
47:41 - want to make to the New York Times so
47:43 - I'm in the article search API but of
47:45 - course I could change to a different one
47:47 - and what I want to do is click here this
47:48 - is the one uh what's known as endp point
47:51 - being the point of end of the API where
47:54 - I'm going to get something but really I
47:56 - think it's endpoint is referring to
47:57 - search and or maybe that's the method it
48:00 - doesn't really matter this terminology
48:01 - the point is I want to search the API
48:03 - and this is the path for doing that so I
48:05 - can click here and I can see now again I
48:07 - have an interface and yes I want the
48:10 - format to come back as Json that's going
48:12 - to work well for me and then Q is the
48:15 - search query term so what am I what art
48:18 - what's the query term that I'm looking
48:20 - for articles that contain that
48:21 - particular word so I don't know I really
48:23 - should think of something different but
48:24 - I'll just keep using Rainbow by the way
48:26 - no never
48:27 - mind uh and then there's other things I
48:30 - could filter the search oh there's a
48:31 - begin date and an end date so I could
48:33 - restrict to only getting articles from
48:35 - like 1957 with the word rainbow in it I
48:38 - could sort what I get back by a
48:40 - different order so all that stuff is
48:41 - interesting but it's also all optional
48:43 - right now I'm going to leave it out so
48:45 - I'm going to you I encourage you to look
48:47 - through this try it on your own add
48:48 - different parameters to the ABI search
48:50 - but the point is I want to hit this now
48:52 - once again uh the most beautiful button
48:54 - in the internet is the try it button cuz
48:57 - that's going to let me just try the API
48:59 - without having to write the code to see
49:00 - how it works now one thing here you can
49:02 - see the New York Times will often give
49:04 - you some results with a key known as
49:06 - sample key I've overused the sample key
49:09 - so I tried this a minute ago and it's
49:11 - going to like tell me no sorry you've
49:13 - overused the sample key but I have
49:16 - registered and logged in for my own API
49:18 - key so I'm not going to include this
49:20 - process in the video if you have trouble
49:22 - ask a question in the comments maybe I
49:23 - can help you but once you've made an
49:25 - account logged in in you will get your
49:27 - own key and I'm going to take that key
49:30 - and I'm going to go back here and I'm
49:32 - going to paste it in here and then I'm
49:34 - going to hit try it and once again we
49:37 - can see this is this is exactly what I
49:40 - want I now the API tool formed the API
49:43 - query for me and also you can scroll
49:46 - down you can see it's showing me the
49:47 - data but this is a bit awkward to look
49:49 - at it here so what's a little bit easier
49:51 - for me to do is grab this URL once again
49:55 - open up a new tab in the browser
49:57 - paste it into the browser and now I can
49:59 - start to look at the data as it looks in
50:02 - in in the browser itself so I can start
50:04 - now now here's so first of all it might
50:07 - look like this to you right you might
50:09 - get this result I have a particular
50:11 - browser extension which formats Json for
50:14 - me nicely I demonstrated in an earlier
50:16 - video I think if you just Google Chrome
50:18 - extension Json formatter you'll find one
50:21 - so um but even so this is a good example
50:24 - of now a lot of apis will give you back
50:26 - a ton of data so really there's some
50:28 - detective work involved here in figuring
50:31 - out how to find the data so let's uh
50:33 - let's say what we want to do is show on
50:36 - screen the headlines for all of the
50:38 - articles that contain the word rainbow
50:40 - and maybe even a short snippet paragraph
50:42 - from those particular articles so let's
50:45 - think about how we might do this first
50:46 - of all one thing I often like to do is
50:48 - start like minimizing these you can see
50:50 - that really the API is just giving me
50:53 - back a an object with a response
50:55 - property a status property and a
50:57 - copyright property which is important to
50:58 - note that you're getting some
50:59 - copyrighted material here um so I can
51:02 - unpack this response property there's a
51:04 - meta property and a docs property meta
51:07 - probably has some information about the
51:08 - API query how many calls I have left
51:10 - that sort of thing docs which has 10
51:12 - items I know this in advance that's
51:15 - giving me 10 articles so most apis won't
51:17 - give you back all like 10,000 articles
51:19 - all at once they're going to give you 10
51:21 - at a time and there's a way of paging
51:22 - through them but that's a bit beyond the
51:24 - scope of this particular video but what
51:27 - I want to do is here look at docs and
51:29 - docs is an array so you can see this
51:32 - these These are each element of the
51:33 - array so each one of these elements of
51:35 - the array is one particular article so
51:37 - in this particular article now I need to
51:39 - zoom back out here and look okay I don't
51:42 - multimedia headline there we go keywords
51:45 - there's so much information publication
51:47 - date by line you can see some things are
51:49 - right there like snippet lead paragraph
51:52 - abstract I'm kind of interested in the
51:54 - headline which is now in another object
51:56 - so I can unpack that and see main kicker
51:59 - print headline so we can see you know
52:02 - you I could spend all day here like
52:03 - looking into the the API but I can kind
52:05 - of Imagine now what I want if I want the
52:07 - headline is
52:09 - response. docs index you know zero for
52:12 - the first one. headline. main so I like
52:16 - weirdly feel like I have that memorized
52:18 - now probably because I've used the New
52:19 - York Times API a bunch of times but this
52:20 - is the kind of thing you're going to be
52:21 - needing to take notes practice going to
52:23 - make a mistake try it again um this is
52:25 - the kind of thing you're going to want
52:26 - to do on your own but now we are ready
52:28 - to go back and start to write code we've
52:31 - we've looked at the API website we've
52:32 - looked at the documentation we've used
52:34 - the tool and we've got a working path um
52:37 - to to getting data and so now I'm going
52:40 - to go back to P5 and I'm going to say
52:43 - just in the beginning load Json and I
52:46 - want to the the API URL I'll have that
52:49 - as a variable and a call back called got
52:51 - data so I'm going to make a variable
52:55 - which is the URL and I'm going to
52:57 - paste this URL right in here now for
53:01 - expediency here I'm not going to go
53:03 - through the steps of breaking that URL
53:05 - into Parts I've done that several times
53:07 - in several other videos now and in fact
53:09 - I would say probably the exercise for
53:10 - you at the end of this video is to have
53:12 - the user input the search word and then
53:14 - get particular articles back with that
53:16 - search word right now I'm just going to
53:17 - get rainbow articles but the first thing
53:19 - I want to do the first what I need to do
53:21 - right now is write this got data call
53:23 - back and remember the got data call back
53:26 - needs an argument that's where the data
53:28 - from the API will fill that variable
53:30 - with the data and I can just look at it
53:32 - to make sure it's working in the console
53:34 - I'm not really going to look at in the
53:35 - console but I want to just hope that I
53:36 - see something there and you can see
53:38 - there is something there so hopefully we
53:41 - can we can feel pretty confident that
53:43 - what's there is exactly the same as here
53:45 - so now let's think about this
53:47 - again uh
53:50 - response. docs index zero. headline do
53:56 - main let's let's let's let's work with
53:59 - that uh data.
54:02 - response. docs index z. headline. main
54:07 - did I do I did I dare possibly get that
54:10 - right let's try it again let's run it
54:13 - looks like I got that right let's look
54:15 - at the second article see what the
54:17 - headline is I'm changing that number
54:18 - zero Hollywood dreams that makes sense
54:20 - that you might have a rainbow in your
54:22 - Hollywood dreams my Hollywood dreams are
54:25 - consist of YouTube videos about data and
54:28 - apis which is sort of a
54:29 - strange Hollywood dream some might say
54:32 - something to I don't know where I'm
54:34 - going with this I'll stop now um uh
54:36 - where are we oh I've only been doing
54:37 - this oh no no I forgot I have two
54:39 - sections here anyway I'm back okay so
54:42 - blah blah blah um what do I want to do
54:44 - with this what I want to make something
54:45 - appear in the browser now there's a lot
54:47 - of interesting applications here and
54:48 - maybe I'll get to some ideas for you at
54:51 - towards the end of this video but right
54:52 - now let's at least make it Loop through
54:54 - and show me every headline and perhaps
54:56 - also a snippet so let's go back to this
54:59 - you can see snippet is actually just
55:01 - response.doc index z. snippet snippet
55:04 - being like a short paragraph or a
55:06 - snippet from the article to give us some
55:08 - more
55:09 - information so one thing that uh you'll
55:12 - that is one thing that happens here is
55:15 - that I have an array data. response.doc
55:17 - and you know what I think can be useful
55:19 - this is a useful technique if I just
55:21 - make up a variable called articles and
55:23 - say articles is data. response. Doc
55:27 - like I'm going to need in every time I
55:29 - try to look for data I'm going to need
55:30 - to say data. response. docs blah blah
55:33 - blah data. response. docs da da da remix
55:35 - this has kind of like a rhythmic quality
55:37 - to it data. response. docs da da da but
55:39 - I'm going to need to do that over and
55:41 - over again so it's it's kind of useful
55:43 - if I just store that in a variable
55:44 - called articles because now I can say
55:46 - things like what I want to do is have a
55:48 - for loop I goes from zero to articles.
55:51 - length you know
55:53 - i++ and I could say something like uh
55:57 - whoops let me leave that down here for
55:59 - reference right I don't need to say
56:02 - data. response.doc headline main I just
56:05 - need to say articles headline main well
56:07 - art what I need to say is I'll say
56:09 - create P
56:11 - articles index i.
56:14 - headline. main so this should now Loop
56:17 - through every single object in that
56:20 - array that docs array each one having a
56:23 - headline object and each headline having
56:25 - a main being the main headline so if I
56:28 - run this now you're going to see here we
56:30 - go I've got Rainbow International
56:32 - painbow charms painbow what's a painbow
56:35 - that sounds terrible no no no no pain
56:37 - bows rainbows um uh East Village Birdman
56:41 - abandoning his nest of CDs anyway some
56:43 - interesting articles about rainbows um
56:45 - so and but maybe what I want to do
56:47 - actually is say create element I'm going
56:48 - to make an H1 element for every headline
56:51 - and then I'm going to just quickly I'm
56:53 - kind of like trying to wrap this up here
56:55 - I'm going to make a
56:56 - paragraph
56:58 - element for every snippet which would be
57:01 - articles indexi do snippet so again
57:04 - there's a lot of data there articles
57:06 - index i. headline. main articles index
57:08 - i. snippet make an H1 make a paragraph
57:11 - and now when I look at this we can see
57:14 - I've now got sort of like you know my
57:16 - own version in the New York Times right
57:18 - here of a bunch of Articles and little
57:20 - Snippets and uh I could change you know
57:23 - right now if I wanted to change what
57:24 - it's searching for I've got to go into
57:26 - my code into this URL you know I could
57:28 - change it to
57:29 - porcupine and I could run it again and
57:32 - you can see I've got now some prickly
57:35 - and name but refined on the table I've
57:36 - got some articles about uh porcupines so
57:39 - here's what I would say to you first of
57:41 - all just showing you kind of the
57:43 - beginnings of what you could do here so
57:45 - one thing that I think would be a good
57:47 - exercise is to make this work but not
57:49 - have to go type into the code to change
57:51 - the word add a text input field add a
57:54 - button when the user enters something in
57:57 - that text input field and clicks the
57:58 - button you get the articles with that
58:00 - search term another thing you might
58:02 - think about doing is can you add query
58:05 - string arguments right the only query
58:07 - argument I have right now is Q equals
58:09 - porcupine but if you go back to the tool
58:11 - there was a begin and an end in terms of
58:14 - dates so could I get all the Articles
58:16 - from a particular year could I even have
58:18 - that year be selected by the user that's
58:20 - something you might try another thing
58:21 - you might look into and I might need to
58:23 - add some link or something in this is
58:25 - that the New York times will give you
58:27 - the frequency that a word appeared in
58:29 - the New York Times for a given year so
58:31 - you can look at interesting trends like
58:33 - when did the word computer start getting
58:34 - used often In Articles or this is a very
58:37 - totally trit example but you can think
58:39 - of something like how many times the
58:40 - word War used versus the word piece so
58:43 - anyway you'll be more thoughtful or
58:45 - creative about what kinds of comparisons
58:47 - might you be interested in doing but
58:49 - that's something in this article search
58:50 - API you can also get is something about
58:52 - word frequency so there's a lot of
58:53 - possibilities of things you might
58:54 - explore if you stuff share them with me
58:57 - I would love to hear about it um and I
59:00 - hope that this was useful to you in how
59:02 - you might use the New York Times
59:04 - API this is me signing off WF mxy
59:10 - YouTube ITP Hot Lights room weird place
59:13 - over a window and computer
59:17 - and okay goodbye I'll talk to you I
59:19 - don't have a hashtag for you #
59:21 - uncomfortable person Dan okay goodbye oh
59:24 - wait this mouse fell asleep Sleeping
59:25 - Mouse again okay and I'm going to stop
59:27 - this
59:29 - video okay so th if you're still here on
59:32 - the live stream only four of you left uh
59:35 - you're that's that's nice of you four of
59:37 - you to still be here with me I did a
59:39 - video about wordnik I'm going to open
59:41 - the window uh I did a video about the
59:44 - New York
59:45 - Times um trying to think if I have
59:47 - stamina and energy to kind of get one
59:49 - more Topic in here today let me look at
59:54 - um my list of videos so now I'm on to
59:58 - where I was I so I have about five more
60:01 - that I was going to make on this
60:04 - topic so one that I was going to do was
60:07 - use an image uh an image API I have an
60:11 - example for Instagram I feel like
60:13 - Instagram always pulls up embarrassing
60:15 - photos flicker might be a good one to
60:17 - use Google image
60:19 - search um can I do this in 15 minutes
60:22 - well you know I got to figure this out
60:23 - at some point so maybe what I'll do
60:26 - I have a working version of the Google
60:28 - image search API it's just sort of so
60:30 - hard to get that one set up API getting
60:32 - the API key is kind of a big hassle and
60:36 - in that sense it might be worth me doing
60:38 - a video on it to to look at how that
60:41 - works giy people are going for giy you
60:44 - know what let's do it let's look at the
60:46 - gy I've never looked at the giy API
60:48 - let's look at it so I'm going to see um
60:50 - I'm going to just kind of this will just
60:52 - be sort of embedded here in this
60:54 - video uh I don't know H why don't I just
60:56 - hit record and see what happens I can
60:58 - always throw this file away
61:02 - hi hi I'm going to try to make a video
61:04 - now that uses the giy API with zero
61:06 - preparation I've never Googled or looked
61:09 - at I don't even know if I've ever looked
61:10 - at the giy website this is probably
61:12 - going to go down in flames but I'm going
61:14 - to give it a try anyway we going to see
61:16 - in 15 minutes can I make a working code
61:19 - example where I query the gify API and
61:21 - get some gifts on the screen and you
61:23 - guys can while I'm screwing stuff up can
61:25 - argue over whether whether I should say
61:26 - GIF or GIF somebody tell me I have no
61:28 - idea so let me look for gify uh giy is a
61:31 - website that if I go to their search for
61:34 - gifts I'll search for my name which is
61:36 - like the most vain thing you can do of
61:37 - course there's no gifts with shiftman in
61:39 - them rainbow there we go rainbow is good
61:42 - I've got some nice rainbow gifts here I
61:44 - like this one this is a nice one you can
61:47 - see nice rainbow gifts so there must be
61:49 - an API here let me look for a gify
61:54 - API ah look at that I've got a GitHub
61:56 - link that's that's good news I've also
61:59 - got here a URL api. gy.com let's start
62:03 - with that you
62:04 - URL uh okay so often a question that
62:07 - comes up when using an API is do you do
62:09 - you need to sign up do you need a key I
62:11 - have no idea this is like this is
62:14 - exciting somehow this is like I don't
62:15 - know I feel whatever okay uh get started
62:18 - giy search giy trending giy roulette all
62:21 - oh these are other apps that people have
62:22 - made let's go to get started oh okay I'm
62:25 - on the
62:26 - uh ah give access and API Keys public
62:29 - Beta key so the giy a API is open to the
62:32 - public a single public beta key to let
62:34 - anyone try it out all right that sounds
62:37 - good to me so I'm going to use the
62:39 - public API in this demonstration
62:41 - obviously if you're going to do
62:42 - something more involved you'll want to
62:46 - get a I'm standing in front of the text
62:48 - you're going to want to get a production
62:49 - API key but I don't think I'd even get
62:51 - one so okay so I want to use that I'm
62:53 - going to go down overview the giy API um
62:56 - provides the following and I'm standing
62:58 - in front of the text again this is
62:59 - terrible let me I can't let me move this
63:01 - over and let me make this a little
63:03 - bigger the giy API provides the
63:05 - following Json endpoints so I can ask
63:08 - for a random one looks like a trending
63:10 - one I can get stickers by ID one gift by
63:14 - ID and right so this is good so I'm just
63:16 - figuring out these are the kinds of
63:17 - things that the API can give me I think
63:19 - search is probably a good place for us
63:20 - to start a random would also be a great
63:22 - place for us to start but I'm again like
63:24 - I I mentioned very easily embarrassed
63:26 - I'm worried about getting an
63:27 - embarrassing gift but you know I should
63:30 - I should not be wor I should just live
63:32 - in the moment that where we are okay um
63:34 - so let's see if I can find uh this is so
63:37 - this is okay so let's start piecing this
63:39 - together a little bit so I'm going to
63:40 - open up actually just like text edit
63:43 - actually know I'll go I'll go to
63:44 - P5 and I'm going to make a new project
63:48 - I'm going to close this New York Times
63:49 - one I'm going to hit save I'm going to
63:51 - call this gify
63:53 - API and uh I'm going to just
63:56 - give myself some space at the top in
63:59 - comments where I can start pasting stuff
64:01 - in there that I might need for working
64:02 - with the API so what I definitely need
64:06 - is this this is the URL to the
64:09 - API uh I'm also going to need this
64:11 - public
64:13 - key let's save that there now search all
64:17 - giy gifs for a word or phrase
64:19 - punctuation we stripped or ignored use a
64:22 - plus or URL and code for
64:24 - phrases oh yeah Ryan goling gifts that's
64:27 - that's going to be
64:28 - good that was weird that I I feel like
64:32 - that was weird that I made a weird dance
64:33 - and talked about Ryan Gosling I I really
64:35 - should edit that out but it's too late
64:37 - apparently that just was like I was
64:38 - overcome by the name Ryan Gosling maybe
64:41 - we'll get some good eating isn't there
64:42 - like an eating cereal meme with my
64:44 - anyway so this is good this is probably
64:45 - all I need uh because it's like giving
64:47 - me look at this it's giving me all this
64:49 - wonderful information this is the path
64:51 - so I need
64:53 - that I'm going to put that in here
64:56 - and then these are some of the things I
64:58 - need like search CU so every every this
65:01 - is this is in case you've come here from
65:03 - some strange place in the internet all
65:06 - of those all of these uh all of this
65:09 - list here are parameters parameters are
65:11 - name value pairs that get strung
65:13 - together like uh Q equals
65:17 - Ryan
65:18 - Gosling and then uh limit is like how
65:22 - many results do I get the maximum is 100
65:25 - well if I'm getting gifts about Ryan
65:27 - Gosling oh my God the limit is is the
65:30 - sky is the limit right do you think I
65:32 - could say limit equals sky and I would
65:34 - disgu okay so I'm back and so anyway
65:37 - there's more stuff there but I don't
65:38 - really need all that stuff all I need is
65:40 - to realize that I'm going to say things
65:42 - like Q equals and I'll just I'll go back
65:45 - to Rainbow I don't think I can I don't
65:47 - think I can handle Ryan Gosling uh it's
65:49 - it's too much too much ran it's too much
65:52 - for me I just I can't handle it I'll be
65:54 - overwhelmed I'll be
65:56 - overcome uh um I'm really lost it here
66:01 - uh okay uh oq equals funny cat that
66:04 - would be a good one anyway and you can
66:05 - see API key so this is really all I need
66:07 - I'm done we're we're good so um so let's
66:10 - let's put these in some variables this
66:11 - is going to be great HTTP okay VAR API
66:16 - equals a string with the path right I'll
66:20 - call this end point I don't even know if
66:22 - that's the right terminology but this is
66:24 - the thing that I know need to go after
66:26 - the API and honestly that's silly that
66:28 - I'm making this into two different
66:29 - variables I guess I'll just put this one
66:31 - up here right because I'm just using the
66:33 - search so I need to make this a little
66:35 - bit bigger so now I have a URL which is
66:38 - the URL to that API I have a uh API
66:43 - key which is oh
66:46 - camera come back to me camera um I have
66:50 - a key which is this and I'm going to put
66:53 - that over here now I forget what did it
66:56 - need it needs it needs to look like this
66:58 - and Ampersand API uncore key equals so
67:02 - in my code I'm actually going to say and
67:06 - no I say ersan API unor key equals and
67:10 - then I'm going to uh have a query B and
67:17 - Q equals rainbow and by the way this
67:21 - right here a query a query a set of a
67:24 - query string always begins with the
67:26 - question mark so it's API key equals
67:28 - something and Q equals something and
67:31 - limit equals something but all of that
67:33 - begins with a question mark so this
67:35 - would be the full API and I've kind of
67:39 - broken my own cardinal rule here where I
67:42 - started writing code before I even
67:44 - checked to see if I was getting results
67:45 - in the browser so let's go back and
67:48 - let's kind of let's go back to the
67:50 - browser here and I need all three of
67:51 - these pieces I need I need this piece um
67:54 - let me open a new tab that piece
67:56 - followed by this
67:58 - piece followed by this
68:02 - piece and I'm going to hit
68:04 - enter oh awesome so now it looks like I
68:07 - got some data and I got a
68:10 - URL a bit.ly URL an embed URL Source the
68:16 - thing that I'm looking for is the actual
68:20 - like gif file this is like an mp4 webp
68:25 - URL this one I think will do like if I
68:28 - this I think this is like the link that
68:29 - I want like I want to get something that
68:31 - I can display quickly in the browser I'm
68:33 - sure I could make any of this stuff work
68:34 - I could embed the like giy embed or I
68:36 - could get the original source as an mp4
68:38 - file but what I want is something that's
68:40 - like pointing to an actual gift file if
68:43 - I copy that address and paste it up here
68:45 - in the browser we can see that oh yes
68:48 - that I'm getting oh this is wow I never
68:51 - expected to get such a wonderful rainbow
68:54 - gift VI URL uh okay
68:57 - you I suddenly so overcome that I lost
69:01 - the ability to speak okay so um all
69:04 - right so this is good this is good so
69:05 - now I got to go back I got to go back
69:08 - and I've got to say uh create no canvas
69:11 - I'm I'm like I feel like I'm in a hurry
69:12 - all of a sudden I got to uh I want to
69:14 - make that URL which is API plus API key
69:17 - plus query and ultimately again I don't
69:20 - want rainbow to be hardcoded into my
69:22 - code I want to get that from the user
69:25 - input but I might you know did that in a
69:27 - couple different previous videos you can
69:28 - almost think of that as an exercise for
69:29 - yourself but now I'm going to say load
69:33 - Json
69:35 - URL got data so again the low Json
69:39 - function is a p5js function where I give
69:41 - a URL from an API that's going to give
69:43 - me back Json I have a call back got data
69:46 - so if I write that got data function uh
69:51 - and I give it an argument I've said this
69:52 - in like all the videos I've made today
69:54 - that data variable gets filled with the
69:57 - data from the API and I just want to see
69:59 - first again does this even work I'll add
70:02 - a print line in there and I'm going to
70:04 - run and I can see look okay so data came
70:06 - in there that's a good sign so now I've
70:08 - got to figure out again this is that
70:10 - thing this is hard I've got to figure
70:12 - out uh I've got to unpack this Json so
70:15 - first one thing I can notice is that
70:17 - data this is going to be awkward because
70:19 - I'm going to have this moment where I'm
70:20 - saying data. data because the first key
70:23 - the first property of this object that
70:25 - came back from gify is data so then what
70:28 - is data it's an array and each element
70:31 - of the array I'm guessing I'm assuming
70:32 - is one particular GIF with lots of
70:35 - information about that uh and what I
70:38 - want is index zero images do original.
70:43 - URL I guess I could get like different
70:46 - sizes and stuff but let's go with uh
70:49 - data index
70:51 - z. images.
70:53 - original. URL I think was that right I I
70:57 - can't I'm like having trouble getting
70:58 - all the way to the right here yep that's
71:00 - right uh I think that's right okay so
71:02 - let's give that a try did I did that
71:05 - make sense so I want to say
71:08 - data. data index z. images. original.
71:15 - URL could that possibly be right let's
71:17 - go back and look at that again
71:20 - data dot
71:23 - data uh do
71:26 - images. original.
71:30 - URL I usually I have like a whiteboard
71:32 - really handy which I have one over there
71:34 - okay I think this is right let's just
71:35 - run it and have some Faith look at that
71:37 - that looks like a URL that makes sense
71:39 - if I click it I see it oh good oh good
71:42 - now we're talking so guess what guess
71:44 - what P5 has for you oh this camera's off
71:48 - one of the functions in the P5 Dom
71:52 - library is a function called create
71:57 - IMG now there's a lot of different ways
72:00 - of working with images in the browser
72:02 - they you can load them from a file you
72:03 - can draw them in a canvas you can mess
72:04 - with their pixels what this particular
72:06 - function does is it makes an HTML
72:12 - element that looks like this right now
72:14 - there's lots of different attributes and
72:16 - ways that you can configure and style
72:17 - this particular element but if you give
72:20 - it an argument that's what becomes the
72:23 - source the source
72:25 - of that particular image tag so what I
72:28 - want to do is take the path to my giy
72:31 - thing and then create an element that
72:34 - will appear on the screen so in on the
72:37 - web page so all I should what I should
72:39 - be able to do is just say create IMG set
72:42 - of print line with this particular URL
72:45 - and I I I kind of want to put just like
72:48 - um I'm going to just call this gify just
72:50 - so it doesn't say like data. dat I think
72:52 - that's confusing to look at so got data
72:54 - fil the data with giy the the lighting
72:57 - in here changed um and now let's run
72:59 - this and see what
73:02 - happens look and there I have my rainbow
73:06 - now here's the thing gify it gave me
73:09 - more than just one image right so this
73:11 - is this is pretty exciting what I can do
73:13 - is now say for VAR I equals z i is less
73:16 - than what's the array here gy. index
73:19 - zero gy. dat.
73:23 - length I
73:26 - ++ and I can say index I now so I'm
73:31 - going to make an image element for every
73:33 - single image that I've gotten from
73:36 - giy and we can see look at this I've got
73:40 - this page or all there all of my this is
73:44 - like the this is this is quite uh quite
73:47 - theough this is a good one there we go
73:49 - that that that is I'm just going to like
73:52 - never make a video again because I this
73:53 - is like the perfect thing to ever have
73:55 - in one of my videos um so anyway you can
73:58 - see boy this is fun there's lots of
73:59 - things you could probably play with so
74:00 - what do you do with this I don't know
74:02 - maybe you get take user input maybe you
74:04 - you arrange them in a different way I
74:05 - don't know maybe it just makes you happy
74:06 - to like look at gifts I guess it's
74:08 - making me happy I you know we really
74:10 - should do the Ryan Gosling thing I think
74:12 - before this video ends so but you know
74:14 - that would be the um I don't even know
74:16 - how to spell Ryan Gosling uh let's see
74:18 - if that's right um so you can see here
74:20 - we go Ryan Gosling there you are uh and
74:24 - so you this is the thing like I'm
74:26 - changing the word what could you do with
74:27 - this make something interesting this
74:29 - play around with this um send me an
74:31 - email or a tweet or write in the
74:32 - comments I would love to know uh what
74:34 - you do with this example uh hopefully
74:37 - this helped you with yet another kind of
74:39 - API you could use now here's the thing I
74:41 - there was
74:43 - a we got to have a chat you and me
74:46 - because I've been doing a lot of these
74:48 - videos about working with apis and I
74:50 - kind of you know one thing I haven't
74:51 - really showed you is what if you need to
74:54 - make like a whole lot of API calls all
74:56 - at once there's some issues that could
74:58 - come up you know you've got like you're
75:00 - creating a lot of callbacks all at once
75:02 - how do you know which callbacks goes
75:04 - with which API call you might be
75:05 - generating a lot of Dom elements all
75:07 - once it could lock up your browser so I
75:09 - do need you there some there's some
75:10 - pitfalls here and I think I need to make
75:12 - a video soon that just sort of covers
75:14 - those scenarios and there's this thing
75:15 - called a JavaScript closure what do you
75:18 - think the chances are there are giffies
75:20 - associated with the word
75:22 - closure this is this is like high risk
75:24 - here
75:25 - uh I don't know what this this is this
75:27 - is not this is not working for me but
75:29 - anyway um so I was hoping I would get
75:32 - something interesting to look at cut
75:34 - that out but so I I want to make a video
75:35 - that sort of covers this topic and maybe
75:37 - we'll look at it even in the context of
75:39 - U giy which is seemed to be a nice API
75:41 - to use okay so this was a totally offthe
75:43 - cuff uh thing that I did hopefully it
75:45 - worked and you got something out of it
75:47 - and I've now made three videos today
75:48 - it's 2 o'clock which is the time that I
75:50 - said I was going to end but I'm in the
75:51 - recording bar never mind you don't care
75:53 - about the time uh
75:55 - shiffman Ry Gosling hash rainbow heart
75:59 - thing I don't know that's too long you
76:00 - you you figure out what that is um I
76:02 - wake up Mouse goodbye and I'll see you
76:06 - soon all right so thank you live stream
76:08 - all uh ah yeah word Nick related words
76:11 - defeating the giy idea is such a great
76:14 - idea I wish I had um thought of that and
76:16 - said that in the video but I didn't um
76:19 - so hope you enjoyed this particular uh
76:22 - live stream today I can stick around for
76:23 - like 2 or three minutes 5 minutes if any
76:25 - I'm not going to start on any new
76:27 - projects but if anybody has any
76:29 - questions um let me know and um I'll be
76:34 - glad to uh
76:37 - listen uh developer over rate error yeah
76:41 - so
76:42 - uh uh I know somebody posted getting a
76:44 - developer over rate error within New
76:46 - York Times if you're by accident using
76:48 - the sample key sometimes it won't allow
76:50 - you to do that or even if your own key
76:52 - if you've queried too many times It'll
76:53 - like shut you off a lot of want you to
76:55 - query like only so often or only so many
76:58 - times okay I think this hour and 16
77:02 - minutes is up I have uh had enough you
77:06 - probably had enough and uh thanks for
77:09 - the kind feedback Lionel R uh and um I'm
77:14 - I'm gonna so the next time I'm going to
77:15 - do this probably will be next Thursday
77:19 - sometimes I try to sneak in an extra
77:20 - live stream like on a Tuesday or
77:22 - Wednesday morning um but i' been trying
77:24 - to do this weekly on Thursdays and my
77:26 - plan is this spring I have an extra big
77:30 - hole in my schedule February March and
77:31 - April where I'm I'm hoping to dedicate
77:33 - myself to kind of building this out as a
77:35 - more involved Endeavor what that means I
77:38 - have no idea but doing this more in a
77:40 - structured scheduled and planned way you
77:42 - have any ideas let me know I'm also
77:44 - looking for a space in New York City
77:46 - where I can kind of set up a recording
77:47 - studio I've got this uh spot here at NYU
77:50 - but I'm kind of looking for a more
77:51 - independent space that I might use if
77:53 - you have any ideas let me know uh and
77:55 - I'm going to hit stop on the stream and
77:58 - talk to you guys soon