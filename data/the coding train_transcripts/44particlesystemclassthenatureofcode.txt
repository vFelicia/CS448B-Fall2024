00:02 - we are ready for the next step in a
00:04 - manner of speaking we've conquered the
00:06 - arraylist right we know how to add stuff
00:08 - to it we know how to delete stuff we can
00:10 - look through it and access all the
00:11 - elements we can manage the size right we
00:13 - now have this resizable collection of
00:15 - particles we can add subtract do it
00:18 - every one this is a great step but we
00:20 - have another big step forward we need to
00:21 - take and let's think about why let's
00:24 - just let's think about why we need this
00:26 - next step then I guess I haven't
00:27 - mentioned yet what it is yet so take a
00:28 - look at this example here so here's a
00:30 - processing sketch running notice there
00:32 - is nothing in the window but I can grab
00:36 - the mouse wrong mouse I can grab this
00:37 - Mouse and I can start clicking and
00:39 - everywhere I click I'm adding a particle
00:42 - system right a particle system is a
00:44 - collection of particles this processing
00:47 - sketch is a collection of particle
00:49 - systems I could have like more than one
00:51 - processing sketch which are a collection
00:53 - of processing sketches which are
00:54 - collections of systems which are
00:56 - collections of particles right we could
00:57 - we could do this forever and I think I
00:59 - said this in the last video I apparently
01:00 - have some weird obsession with systems
01:01 - and systems and systems but what's the
01:04 - point here the point is that in order to
01:06 - do this we need to take this idea of a
01:09 - particle system and encapsulate it into
01:11 - a class we need the particle system
01:14 - class right we want we have a very
01:16 - simple goal here which is to have a
01:19 - sketch that looks like this one I mean
01:22 - look at that code it's so like there's
01:24 - just nothing there it's just one
01:26 - particle system we don't even refer to
01:28 - an individual particle anywhere here
01:30 - it's just make a particle system add
01:32 - particles run it right this is what I
01:34 - mean our whole life here is just about I
01:36 - mean look at the indentation it's just a
01:38 - few lines it's so nice and compact cute
01:40 - little code right this is where we're
01:42 - going so how do we get to this point how
01:44 - do we make this program work this is I
01:46 - expect this hopefully won't even take us
01:48 - that long this is going to be I'm really
01:50 - for the record of the shortest video yet
01:52 - because apparently I take way too long
01:53 - if some of these are kind of slow okay
01:55 - so let's think about that okay so what
01:57 - do we know that we have we know that we
01:59 - have a main program right the main
02:01 - program is going to have set up and draw
02:04 - on it and if we look at where we left
02:06 - off in that example we had that we built
02:08 - in the last video what was in setup and
02:11 - draw all this stuff about the ArrayList
02:13 - all that kind of stuff right so that's
02:16 - not well we don't want that anymore
02:17 - here's setup and draw this is where we
02:19 - want to have just our reference to the
02:21 - particle system okay so we know we have
02:24 - a class called particle right the class
02:30 - called particle is the individual object
02:32 - location velocity acceleration update
02:36 - display lifespan all that stuff about an
02:39 - individual particle so you know all the
02:42 - vectors etc etc that's our individual
02:45 - object the thing that we're missing that
02:47 - we haven't done yet in these examples is
02:49 - create the particle system class I'm
02:55 - gonna call it particle system what is in
02:59 - the particle system class the main piece
03:02 - of data in the particle system class is
03:04 - the ArrayList call it a for simplicity
03:12 - on the board right this is the
03:13 - innovation here we have a class that
03:16 - describes a singular entity then we have
03:18 - a class that describes a list of those
03:20 - singular entities this is not rocket
03:24 - science although we could do a rocket
03:26 - science emulation with this with that
03:27 - particle system being the smoke that
03:28 - comes out of the rocket this is rocket
03:30 - science anyway but what I mean this is
03:32 - this hopefully is fairly intuitive and
03:34 - somewhat simple and that's kind of my
03:35 - goal for it here the thing about it is
03:38 - it today it's just Minh to practice this
03:40 - I don't know hopefully we're doing
03:41 - something useful here right so this is
03:44 - what we got so let's think about what
03:46 - kind of methods might we need in the
03:48 - particle system and you have to ask the
03:49 - question is this a method that deals
03:51 - with an individual particle or a method
03:54 - that deals with the system as a whole
03:55 - and we could think about what that might
03:58 - be what's interesting about it is we
03:59 - might write a method in here called
04:01 - display right we want the system as a
04:05 - whole to display the particles but
04:08 - there's a method called display in
04:12 - particle which actually draws the
04:14 - ellipse or the image or whatever it is
04:16 - we're drawing so what we want to do in
04:19 - the particle systems display method is
04:21 - loop through all the particles
04:26 - all right so essentially I kind of went
04:29 - off on it I totally organized and I
04:32 - would but if I start over I would do it
04:34 - better but it's too late now this is the
04:38 - point of what I'm staying here is that
04:39 - there's gonna be a lot of methods in the
04:42 - particle system class and those methods
04:43 - deal with all of the particles the
04:46 - methods in the particle class deal with
04:48 - an individual particle and that's kind
04:49 - of the organizational principle we're
04:51 - gonna go through here so that we can
04:52 - have a singular particle system in our
04:55 - main program so there's not enough room
04:57 - with this white board here to try to
04:59 - like mark it all up out here I think
05:01 - hopefully this kind of diagrams it out
05:03 - for you and we can see now let's try to
05:05 - add these pieces to our program let's
05:07 - take everything that we had and set up
05:09 - and draw and put it into the particle
05:12 - system class it's trying to do that okay
05:14 - so here we are and let's take a look at
05:18 - this so first thing I want to do is add
05:20 - a new tab and I'm gonna call it particle
05:22 - system and I'm gonna say class particle
05:25 - system and I'm gonna just put something
05:29 - here for the constructor and I'm gonna
05:31 - say I think we need an update method and
05:33 - I think we need a display method great
05:38 - so we're gonna update the particle
05:39 - system and display the particle system
05:41 - and create the particle system so let's
05:43 - go out and look here uh what is the main
05:45 - piece of data for the particle system
05:46 - class it is the ArrayList what happens
05:51 - when we create the particle system we
05:54 - create the ArrayList what happens when
05:58 - so then we've got this whole big
06:02 - function with all that stuff you know
06:04 - it's fine I like it the way it is we
06:07 - could have a separate update and display
06:08 - method and sometimes you might want to
06:10 - do that but let's actually just make
06:11 - things simpler right now and just make a
06:13 - run method and do this so now what we've
06:17 - done is we said hey all that stuff we
06:19 - had in the main program create an
06:21 - ArrayList run the ArrayList remove
06:23 - things from the ArrayList all that is
06:25 - now happening in the particle system
06:26 - class and we can see here we can make a
06:30 - particle system object new particle
06:35 - system
06:38 - and now when we run this AHA particles
06:41 - that add new particle it doesn't know
06:44 - how to add a new particle to the
06:45 - ArrayList particles because that
06:48 - ArrayList particles doesn't exist as the
06:50 - sort of part of the main program anymore
06:52 - the ArrayList particles is now in the
06:54 - particle system class so what what what
06:58 - does this say to us maybe we should add
06:59 - a function called add particle and what
07:04 - does that mean that means in the
07:05 - particle system class we could write a
07:07 - function called add particle and we
07:11 - could then add a new particle to the
07:13 - ArrayList so you can see we're managing
07:15 - all the possibilities of the ER of the
07:17 - particle system in the particle system
07:20 - class that's what the ArrayList is
07:22 - that's where we can add new particles
07:24 - that's where we can look through a big
07:25 - display remove etc particle systems
07:27 - particle objects with particle system
07:30 - particle in fact acknowledge we're not
07:34 - recording anymore cuz I feel a little
07:35 - winded and tired so you can see here we
07:37 - go we've got it this is now that example
07:40 - all we did was take all of that stuff
07:42 - out of the main class and put it into
07:44 - the particle system class so here's the
07:47 - thing there's a couple things missing
07:50 - from this let's say what we want now I
07:52 - don't know if I minimize that is to get
07:54 - back to this particular example right
08:01 - the difference is here we now have more
08:03 - than one of them look you can see a clue
08:05 - the main program now has an ArrayList of
08:07 - particle system objects so obviously
08:10 - this example is there it's example 4.4
08:12 - and then in the nature of code book so
08:15 - you can just go look at that example but
08:16 - if you have the time and wherewithal
08:18 - what I would suggest to you is try go
08:21 - look at the simple one which is 4.3 and
08:24 - which is just a single particle system
08:26 - and try to make this list of systems
08:30 - itself so start with the single particle
08:32 - system and yourself try to make an
08:34 - ArrayList of them the thing that I just
08:36 - did here that's missing is the particle
08:38 - system is always at this particular
08:40 - location because every particle is is
08:44 - initialized with this particular
08:46 - location so one of the things you're
08:48 - going to have to
08:48 - due to these examples to make them more
08:50 - flexible is the particle system probably
08:53 - needs a variable to keep track of it's
08:55 - sort of origin location where is it
08:57 - giving birth to all these particles so
08:59 - that might be something that you add
09:00 - here in the particle system class P
09:03 - vector I think in my examples I called
09:05 - it origin
09:05 - so maybe the particle system should have
09:07 - an origin variable to it although it
09:10 - doesn't necessarily mean that in other
09:11 - examples of a can I just like cut this
09:14 - video off a certain point alright anyway
09:16 - so this the end so take it take this as
09:18 - an exercise what we're gonna do in the
09:20 - sort of last there's a couple things we
09:21 - need to do still we need to look at hey
09:23 - we learned all this stuff about forces
09:25 - and objects experiencing forces in the
09:27 - world we don't have any of that here so
09:28 - I want to add that back into these
09:29 - particle system examples as well as look
09:32 - at this idea of inheritance and
09:33 - polymorphism which is a way of having a
09:35 - system have different kinds of particles
09:38 - within the same system even they look
09:40 - different absolutely different how do we
09:42 - manage objects that are related that are
09:45 - they're kind of all particles of some
09:46 - similar functionality but they also do
09:48 - different things okay this one very hot
09:52 - under these lights and everything's
09:54 - gonna be fine you're gonna be fine I'm
09:56 - gonna be fine and I'm gonna press the
09:57 - button no okay goodbye