00:00 - So far, we've looked at
how to reach out and make
00:02 - a request using the fetch
function to an external API
00:06 - with a particular URL path,
grab the data in JSON format,
00:10 - pull out a piece of
that data we want,
00:12 - and then use it for
a particular reason.
00:14 - And in this case, the
data that I'm getting
00:16 - is the latitude and longitude
of the International Space
00:18 - Station.
00:19 - And I'm plotting it on a map
using the Leaflet.js library.
00:22 - So the one key feature-- there's
a couple of different features
00:25 - here that I didn't implement.
00:26 - But one really key feature
that I did not implement
00:29 - is having that latitude and
longitude refresh automatically
00:34 - without me having
to reload the page.
00:36 - Now, it is important that I
remind myself that the rate
00:39 - limits of this API specify that
I cannot make the request more
00:42 - than once per second.
00:44 - So I should limit my refresh
rate of the application itself
00:47 - to, at a minimum, that.
00:48 - And this is something that you
have to be conscientious about.
00:51 - In this case, it's
just an example.
00:52 - It's just an experiment.
00:53 - You don't have to worry
too much about it.
00:55 - But as you build
applications that
00:57 - get used by more
and more people,
00:59 - the rate at which you're
requesting data from API
01:01 - can become a fundamental thing.
01:03 - It could, at a certain point,
cost you a lot of money
01:05 - to make a certain
amount of requests.
01:06 - So you have to be thoughtful
about how often you're
01:08 - doing that.
01:08 - But even before that, I think
what I would like to see happen
01:12 - is, the map, when
it first loads,
01:14 - to have the space
station oriented
01:16 - in the center with
a bit more zoom.
01:18 - So let's see if we
can at least fix that.
01:21 - So I'm going to go
back to the code.
01:23 - And here, once I get the data
from the International Space
01:28 - Station, this is where I
update the marker's location.
01:32 - I should be able to also
update the maps location.
01:36 - And how do you do that?
01:37 - Well, it's the setView function.
01:39 - You might remember
from the last video,
01:40 - I tried to use setView
with the marker.
01:43 - So when you are specifying
the location of a marker,
01:46 - that's set lat long.
01:48 - When you are specifying the
location of the map itself,
01:51 - that is setView.
01:53 - And I would give it a latitude
and longitude, and also then
01:58 - some zoom level.
01:59 - Let's just try like 5.
02:01 - I don't know what's
going to be a reasonable.
02:03 - And there we go.
02:05 - Apparently it's over
open water right now,
02:08 - so we're not seeing
anything super interesting.
02:10 - But let's set that
back down to 2.
02:12 - And we can see, there it is.
02:13 - It's right there in the middle
of the Atlantic Ocean right
02:16 - now.
02:18 - Great.
02:19 - Now we're ready for
the final step here.
02:21 - I want to get the new latitude
and longitude every so often.
02:25 - And the way that
I'm going to do that
02:27 - is with the
setInterval function.
02:29 - So there is a function in
JavaScript called setInterval.
02:35 - And what setInterval
does is, is it
02:37 - says, hey, take this function,
maybe your function called
02:41 - getISS, and have it happen
every so often, like every 1,000
02:47 - milliseconds.
02:48 - So in this sense,
I could just call
02:51 - getISS, which does all this.
02:54 - I want it to happen right
when the page loads,
02:57 - because setInterval will
actually wait a second
02:59 - for the first time it calls it.
03:00 - So I'm going to leave this
redundant one in here.
03:02 - GetISS, and then every
one second, do that again.
03:05 - Let's see what happens.
03:06 - Wow, that was like
one line of code.
03:08 - There's a whole video for
just one line of code?
03:10 - We'll see if we run
into any issues here
03:11 - and have to do a bit more.
03:14 - getISS is not defined.
03:17 - Oops.
03:19 - The Ss are capitalized.
03:20 - JavaScript, as you might
know, is case sensitive.
03:23 - Don't forget that.
03:24 - I always forget that.
03:28 - So we can see this number
is changing every so often.
03:31 - Is this moving?
03:32 - Oh, wait.
03:32 - Ah, it keeps fixing my zoom.
03:34 - So here's the thing.
03:35 - Even though I wanted to set the
maps location here initially,
03:41 - its view initially
to this, I only
03:43 - want to set the
view the first time.
03:46 - So how do I want
to deal with this?
03:48 - Well, there's a variety
of ways I can do this.
03:50 - But I think one way I could
do is just use a Boolean flag
03:53 - variable.
03:54 - So I can say something
like, first time is true.
03:59 - And I can say right here, if
it's the first time, then set
04:04 - the view.
04:05 - And after you do that, set
first time equal to false.
04:10 - So this would be,
whenever getISS is called,
04:13 - it's going to set that
view to the latitude
04:15 - and longitude with that zoom.
04:17 - Then set first time to false so
the next time it comes around,
04:20 - that will never happen again.
04:21 - Maybe not the most
elegant solution,
04:23 - but one that will work.
04:27 - Is it moving?
04:28 - Can we see it's moving?
04:29 - Ah, yeah, there it moved.
04:30 - I think we're going to have
to get a bit more zoom in here
04:32 - to really see it moving.
04:33 - There we go.
04:34 - Now we can see the International
Space Station, every one
04:37 - second, is moving along the map.
04:40 - There's some small
cleanup things
04:42 - we could do that might be nice
for me to show you here just
04:44 - to kind of polish this
project off a little bit more.
04:46 - One is, my web
page is showing me
04:49 - quite a bit of decimal places
for the latitude and longitude.
04:52 - That seems a little
bit unnecessary.
04:54 - I can use the JavaScript
function toFixed,
04:58 - which will fix what it is adding
to only two decimal places.
05:03 - So that's a nice little
cleanup piece here.
05:06 - I could also add the degree.
05:09 - I might as well add the degree
character here to see that.
05:13 - Right after the span, I could
put the degree character
05:17 - right here.
05:18 - And I go back to the page.
05:19 - And whoops, I didn't hit save.
05:21 - Where is it?
05:22 - Oh, I put it in the span.
05:23 - That's very important.
05:24 - It'll get replaced
if it's in the span.
05:26 - It has to be outside.
05:27 - And there we go.
05:28 - So I have the degrees there.
05:29 - That's kind of nice.
05:31 - There
05:31 - Are so many things
we could add to this.
05:33 - And a nice reference
might be to go back
05:34 - and look at the wheretheiss.at
website and see.
05:38 - For example, what if I also
grab the altitude, and then
05:43 - I made the size of the icon
somehow tied to the altitude?
05:47 - What if I added some
more UI elements
05:49 - so I could toggle
things on and off?
05:51 - Maybe actually I could keep
the view always centered
05:54 - around the ISS and have
the map move behind it,
05:59 - and the ISS would stay
in place instead of it
06:01 - moving along the map.
06:03 - Again, I could
use the p5 library
06:05 - to do my own custom drawing,
perhaps even on the path
06:08 - or draw a velocity vector
of how the map is moving.
06:11 - In this video's description,
when you go over
06:13 - to the GitHub repository for
the code in this example,
06:15 - I'll also include the code for
a variety of these solutions
06:19 - and variations that
you're seeing right now.
06:21 - So thanks for
watching this project.
06:23 - We have done a lot
in this first module
06:25 - of working with data
and APIs in JavaScript.
06:28 - We've learned about
the fetch function.
06:30 - We know how to get
different kinds of data
06:33 - with the fetch function--
image, text, JSON data.
06:36 - We know how to get JSON
data from an external API.
06:40 - We've looked at using some
other JavaScript libraries,
06:42 - like Chart.js and Leaflet.js.
06:44 - For charting and mapping.
06:46 - But we're missing
a big, huge piece.
06:49 - What if I want to save
some data and use it later?
06:53 - What if I want to
authenticate with an API,
06:55 - but hide my API keys?
06:57 - There are so many
things that I might
06:58 - want to do that need more
than just an index.html
07:02 - file, with some JavaScript
in it, some HTML in it,
07:05 - maybe some CSS in it.
07:07 - A lot of things that
I'm going to want to do,
07:09 - that I'm going to
show you how to do,
07:11 - involve writing your own server.
07:14 - I'm going to show you how
to use node.js, a JavaScript
07:16 - runtime, another way of
writing JavaScript outside
07:19 - of the context of
the browser, to write
07:21 - server-side applications and
do a variety of kinds of things
07:25 - working with data,
manipulating data, saving
07:27 - data, communicating with
APIs, that you couldn't
07:29 - do so easily with just
JavaScript in the browser.
07:34 - And the two projects
that I'm going
07:35 - to build in the
next set of videos,
07:37 - they're products by Joey K. Lee.
07:39 - Thank you so much for Joey
for preparing these materials
07:42 - and allowing me to use
them in this video series.
07:44 - The first one is going to
capture images from your webcam
07:47 - and save them to a database.
07:49 - So you're going to learn about
how to save data to a database,
07:51 - and also how to
do something more
07:53 - with the fetch function, which
is post data to the server.
07:56 - Right now, we've been using
fetch just to retrieve data.
07:58 - We can also send data
with a POST request.
08:01 - And the third project,
also by Joey Lee,
08:03 - this project is crazy.
08:05 - I'm going to use two different
APIs at the same time, one
08:07 - for getting weather information,
one for getting air quality
08:10 - information.
08:11 - And what's going to be
different and interesting
08:13 - about that project is, it's
going to require authentication
08:16 - and hiding private API
keys on the server itself.
08:19 - We're going to look
at how to do that
08:20 - so that you can publish
and open source your code,
08:22 - but also keep your
API keys hidden.
08:26 - So thanks for watching.
08:27 - You've now completed
the first module
08:30 - in working with data and APIs.
08:31 - And we're on to module
2 in the next video.
08:33 - [MUSIC PLAYING]