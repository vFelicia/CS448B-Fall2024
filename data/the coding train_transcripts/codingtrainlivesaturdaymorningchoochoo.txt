00:03 - [Music]
00:11 - [Music]
00:17 - [Music]
00:50 - [Music]
00:59 - [Music]
01:08 - [Music]
01:13 - [Music]
01:49 - [Music]
01:54 - [Music]
02:01 - [Music]
02:15 - [Music]
02:29 - [Music]
02:39 - my mic was on there might have been on
02:43 - this whole time Sound Check 1 2 3 how is
02:47 - this audio I have a different setup
02:51 - [Music]
03:05 - [Music]
03:13 - [Music]
03:25 - [Music]
03:37 - [Music]
03:58 - [Music]
04:14 - [Music]
04:23 - [Music]
04:40 - [Music]
04:59 - [Music]
05:25 - [Music]
05:47 - auto-tuned and the internet will fix
05:49 - that
06:02 - [Music]
06:15 - [Music]
06:34 - [Music]
06:48 - [Music]
07:07 - [Music]
07:15 - [Music]
07:24 - drunk good morning and welcome to the
07:29 - coding train on a Saturday April
07:31 - something-or-other I have no idea what
07:33 - date it is Tai has no meeting anymore
07:36 - how are you doing I'm okay I'm doing
07:39 - just fine
07:40 - thank you for asking that's very kind of
07:42 - you let's all ask each other I you there
07:44 - might be nobody next to you you might be
07:45 - there might be look little small people
07:47 - running around below your feet
07:49 - animals climbing on you I don't know
07:51 - what your situation is but turn to the
07:53 - wall turn to the chair turn to the small
07:55 - people turn to the person on your left
07:57 - on your right and say how are you and
08:00 - from some appropriate distance give them
08:03 - some care
08:05 - let's care for each other in this very
08:07 - strange time my voice is a little bit
08:10 - quiet I'm being told so let me see if I
08:12 - can turn that up I I've adjusted things
08:15 - in this setup which I think are vastly
08:17 - improved
08:18 - I hope welcome this is the coding train
08:21 - I hear the small people running
08:24 - frolicking about in where I live I've
08:27 - closed all doors I've locked the room
08:29 - actually it's kind of nice when they're
08:30 - in here helping me but today they didn't
08:32 - seem to want to do that this roblox
08:34 - thing it's very a very attractive fun
08:38 - thing to play all day long let me tell
08:40 - you is there coding in roblox somebody
08:42 - let me know alright I gotta figure out I
08:45 - got to deal with the volume this is a
08:46 - very easy thing for me to fix because I
08:49 - have a new audio interface with eight
08:52 - what do you call this thing that you
08:54 - turn a dial perhaps so here it goes it
08:56 - is turning to the right to the right up
08:58 - higher and higher it goes did that seem
09:01 - to help I'm also speaking
09:05 - let's see if that fixes it a little bit
09:09 - we'll see how that does out there be
09:18 - quiet in the hallways Lua I'm being told
09:26 - robots uses low alright so so I'm I'm
09:33 - I'm kind of settling into things here I
09:35 - don't know if you remember the last time
09:37 - I streamed which was I think about two
09:38 - weeks ago I probably spent the first 45
09:41 - minutes just like barring my anxious
09:44 - soul and like starting to sweat and not
09:46 - being sure what I was doing and feeling
09:47 - like I'm doing it all wrong and that's
09:49 - okay I think a lot of people are feeling
09:51 - that these days I know that I am I'm but
09:54 - I I think I've got my act together a
09:56 - little bit more and so I want to talk
09:58 - about what my I want to start today's
10:00 - livestream with talking about what my
10:02 - plans are at least for the next 24 hours
10:05 - that's about as far ahead I could plan
10:07 - if I'm being perfectly honest a bit
10:10 - louder still my voice is fine now yes
10:14 - it's a nice volume okay I'm gonna keep
10:16 - it like this for at least the next five
10:18 - or ten minutes and then if I see a bunch
10:21 - of messages that I need to adjust again
10:22 - I will adjust oh I have my stream open
10:29 - somewhere and I'm now listening to
10:31 - myself from like 30 seconds ago let me
10:34 - mute this this computer is muted now
10:40 - okay much better okay much better
10:49 - okay so first of all if you're new here
10:51 - welcome my name is Dan this is the
10:54 - coding dream I don't know why it's
10:57 - called the coding train to be perfectly
10:58 - honest with you my sidekick Gloria
11:02 - pickle who is a an animal of the canine
11:05 - variety is I think confused why I closed
11:07 - all the doors come here
11:09 - Wednesday hi hey you don't bark this is
11:11 - the sweetest little dog that you can't
11:13 - see right now I got to get a camera on
11:14 - her but I'm just gonna open this door so
11:16 - she can get out if she wants so I I am a
11:20 - person in the world who also spends a
11:23 - lot of time on the Internet I make video
11:25 - tutorials about coding I have a lot of
11:27 - difficulty coding I find it to be very
11:29 - hard complicated and fun and creative
11:33 - and I try to share all those feelings
11:36 - that I have about coding with you on
11:38 - this channel and in the past I've done
11:40 - sort of like livestream lectures I've
11:43 - done things like coding challenges I
11:46 - make sequence tutorial content I make
11:48 - one-off videos and I think what I'm now
11:53 - going to attempt to do in this
11:55 - transition to work from home is I think
11:59 - I'm gonna treat my live streams as
12:00 - purely just I want to do this forever
12:03 - just live streams I'm just here live
12:06 - doing stuff talking to you coding things
12:09 - teaching little topics answering
12:11 - questions showing your work that kind of
12:14 - thing so no longer am I going to
12:17 - consider things that I do in the live
12:21 - stream to be edited out in two separate
12:24 - videos I think this will make the
12:26 - experience of watching the live stream a
12:27 - little more pleasurable because I won't
12:29 - have this like artificial starting and
12:31 - stopping I might come back and do that
12:32 - again when I'm back in that other
12:35 - recording studio that I have or I might
12:37 - do it again next time but for today I'm
12:40 - really try feel really just like free
12:43 - I feel free like I could just hang out
12:45 - code talk to you and just enjoy the
12:49 - next-gen it's literally just gonna be
12:50 - two hours because at noon I promised my
12:53 - children all sorts of fun activities
12:55 - that I'm gonna do with them well it's
12:57 - likely me taking a nap while they play
12:59 - more roblox but no hopefully I'm gonna
13:01 - be a good dad
13:02 - we're gonna play card games I'm gonna
13:04 - read to them and we're gonna do it art
13:05 - craft project it's so hard I just you
13:08 - know after all of you out there who are
13:09 - feeling inadequate and you're not doing
13:11 - it right I'm here with you I'm right
13:14 - there with you so that's the plan and so
13:19 - today oh yeah everybody is so kay okay
13:22 - secret mystery is telling me if I don't
13:25 - turn my volume up they're going oh and
13:27 - we have a new member so I want to talk
13:28 - about what what I'm doing with the
13:30 - membership program also all right let me
13:33 - try to up the volume one more time okay
13:37 - okay okay I hear you I hear you I'm
13:41 - gonna take more drastic measures okay
13:45 - okay okay I'll definitely not deleting
13:46 - this after it ends never say never but
13:51 - let me I'm just gonna mute myself for a
13:53 - second okay while I check some settings
13:54 - on this
14:06 - [Music]
14:21 - testing testing 1 2 3 random numbers I
14:27 - should be reading there we go I see
14:28 - myself up in the yellow I think this is
14:31 - better now so I think I've kept those
14:34 - couple viewers that we're threatening to
14:37 - leave is dad I mean you probably should
14:42 - leave if the low volume is the thing
14:44 - father you'll probably do a lot more
14:46 - stuff that's gonna bother you you're not
14:48 - gonna like but hopefully now the volume
14:51 - is better so just let me know if I'm
14:55 - peaking now because I earned it up quite
14:57 - a bit I'm gonna turn this okay hopefully
15:01 - I'm in good good shape now alright
15:07 - crystal clear thank you everybody
15:09 - alright so I think I talked about what
15:11 - the channel is what I'm kind of planning
15:14 - to do
15:15 - I don't I really want to have a regular
15:17 - time I don't know if you guys saw but I
15:19 - don't you all who are watching saw
15:21 - trying to not say you guys so much I
15:24 - don't know if all of you watching saw
15:26 - this but there's a wonderful YouTube
15:27 - channel I'm like the biggest fan it's
15:30 - called three blue one brown and
15:32 - everybody's getting a livestream thing
15:35 - these days and three blue one Brown is
15:36 - math tutorials and all sorts of
15:38 - beautiful animations and things I try to
15:39 - make a lot of videos that are inspired
15:41 - from that content did alive streets
15:43 - that's just like you know I've been
15:47 - doing this for years and I could barely
15:49 - get it together and have like the sound
15:50 - right to have a plan know what I'm doing
15:53 - get us like a fixed time going round
15:56 - first live stream beautiful quality
15:58 - impeccable amazing regular time banner
16:01 - with a time schedule I mean you should
16:05 - if you if you want to it was wonderful
16:07 - so I'm excited to see more people live
16:09 - streaming maybe there are some more
16:10 - collaborations and things that I can do
16:12 - also there were 25,000 people watching a
16:15 - live stream math tutorial with like a
16:18 - nope
16:19 - and Ted that was like blew my mind which
16:22 - is great and according to this little
16:27 - button over here there are 439 of you
16:29 - tuning in right now so hello and thank
16:32 - you so much let me talk about the
16:33 - membership program so I've been feeling
16:36 - weird about having patreon and members
16:39 - and things like that ever since I
16:40 - started doing it not so weird that I
16:42 - stopped having it you know the there's a
16:46 - few things one I should be clear just to
16:48 - be clear and transparent I have a
16:49 - full-time job I'm very lucky and
16:51 - privileged right now especially to still
16:52 - have my job who knows maybe there's a
16:55 - lot of issues with higher education in
16:57 - the cost of higher education we'll see
16:59 - what happens throughout the next year
17:01 - and so on and so forth but um so I teach
17:04 - full-time at New York University a lot
17:06 - of the tutorials that I make I use in my
17:08 - courses there I think of them as the
17:10 - equivalent of how somebody who's a
17:12 - teacher might work on a textbook and I'm
17:14 - just sort of making videos so I have
17:17 - been going back and forth about putting
17:19 - ads on my videos in terms of monetizing
17:22 - them on YouTube sometimes I do sometimes
17:24 - I don't my sort of like rule of thumb
17:27 - right now is if it's videos that I'm
17:29 - that I'm using in a course or that are
17:31 - physically designed for other curriculum
17:33 - I I take them the ads off because so
17:38 - that teachers can show them in their
17:39 - classroom without or assign them to
17:41 - students without them having to see ads
17:42 - so that's currently where I am in terms
17:46 - of that funding aspect of the channel
17:48 - the other funding aspect of the channel
17:50 - is patrons and members so I'm I have a
17:54 - there's a little button somewhere on the
17:56 - screen that says join Cobie is asking me
18:02 - a question which I'm just going to say
18:04 - yes to okay moving on
18:10 - so membership this is my preferred way
18:14 - to fundraise for the channel because it
18:16 - doesn't involve having to use
18:18 - advertising in the industrial
18:20 - surveillance economy but so but I feel
18:26 - particularly weird right now
18:28 - and a lot of people are struggling and
18:30 - there's a lot of need in the world right
18:31 - now
18:31 - so what I've decided to do for anyone
18:34 - who's think I've been thinking of
18:35 - joining as a member the benefits are in
18:37 - theory I mail you something like a
18:40 - coding trade notebook or some stickers
18:45 - which I have over here at some point I'm
18:49 - gonna make these laser etched train
18:51 - whistles but I have lost access to my
18:55 - laser cutter so that will be coming soon
19:01 - but what I am going to what I'm doing
19:07 - this month and thank you I got this idea
19:11 - from a podcast I listened to Rob has a
19:14 - podcast is I am raising money for thank
19:21 - you to Christina as you oh you don't see
19:23 - I'm not I forgot that I'm not showing
19:26 - you my screen thank you - Christina Joo
19:29 - I am who turned me on to this particular
19:33 - charity mask force which is attempting
19:36 - to raise money for PPE personal
19:39 - protective equipment for New York City
19:41 - which is my local community here i so i
19:46 - any any any new members who join in
19:49 - throughout the month of April whatever
19:51 - proceeds I get from that I will donate
19:52 - to mask force NYC and then I will also
19:55 - match that donation so I'll be doing
19:57 - that for the month of April I made a
19:59 - sort of donation in advance glad that
20:00 - that need is so great right now and so
20:03 - we'll see if it catches up to that and
20:04 - then if it goes above I will donate
20:06 - additional money and that's what I'm
20:08 - doing for the month of April and maybe
20:11 - you will but you know honestly if you if
20:15 - you donate directly that's a much better
20:16 - path doesn't need to like have the fees
20:18 - taken out and go through me and all that
20:20 - nonsense but so that that's just one
20:23 - thing I wanted to mention that I am
20:25 - doing for this particular month so and
20:29 - one of the things that I would like to
20:31 - do in my new sort of plan I want to do
20:34 - more things that are interactive with
20:37 - the smaller kind of group of supporters
20:39 - so I'm gonna try to do a monthly
20:41 - discussion group so if you've been
20:42 - thinking about joining as a member
20:43 - that's something that we will do once
20:45 - okay bla bla bla bla bla bla bla bla bla
20:50 - bla bla bla bla bla bla bla bla bla bla
20:56 - bla bla bla we must begin today's coding
21:01 - train with the ceremonial reading of the
21:06 - random number book if you're a musician
21:12 - I could use some more music I got this
21:16 - wonderful let's try something relaxing
21:28 - we begin today on the coding train with
21:31 - the numbers forty thousand seven hundred
21:33 - and forty three thirty nine thousand six
21:36 - hundred and seventy one seven thousand
21:39 - eight hundred and twelve and my personal
21:42 - favorites forty two thousand two hundred
21:46 - and ninety three we will continue onward
21:48 - forth in our lives programming with our
21:51 - random numbers with forty one thousand
21:54 - five hundred and thirty nine forty
21:55 - thousand nine hundred and ninety eight
21:57 - ninety five thousand eight hundred and
21:59 - twenty nine eleven thousand four hundred
22:02 - thirty six and forty thousand eight
22:04 - hundred ninety and sixteen thousand four
22:07 - hundred and six don't you just feel
22:12 - better I know I feel better I always
22:15 - feel better when I curl up cozy with a
22:18 - book playing some soft quiet music and
22:21 - reading it quietly out loud to four
22:25 - hundred and eighty seven people which is
22:27 - down that's down from where I started
22:29 - which I completely understand frankly
22:31 - because I mean I wouldn't keep watching
22:34 - this I would tell you to go outside but
22:36 - you should stay home usually I like to
22:38 - say don't watch this go outside be with
22:40 - people enjoy the nature the sunshine the
22:43 - rain explore but actually right now
22:46 - please stay home stay at home be safe
22:50 - okay but you could turn this off and go
22:54 - I don't know do jumping something else
22:58 - relaxing at home it doesn't involve a
23:00 - screen but if you stay here I am I am
23:03 - I'm here with you we're gonna do some
23:05 - coding I'm gonna do some stuff very soon
23:07 - so my first segment in my new trying to
23:11 - be organized I even made an agenda here
23:14 - so here's some agenda
23:17 - oh I hi so check check we did hi all
23:21 - right
23:22 - so hi is done now your work so I'm gonna
23:26 - do something new if you aren't aware let
23:31 - me switch over to here if I go to and
23:35 - I've changed where I am I'm in the
23:37 - bottom right of your screen I'm over
23:40 - here I'm in the bottom right
23:42 - of your screen so which doesn't work for
23:44 - my pointing at the code anymore but
23:46 - since I use the p5 web editor a lot I
23:48 - think this layout will be better and I
23:50 - do have a green screen so I could keep
23:51 - myself out but I don't know right now
23:53 - I'm not doing that all right if you go
23:56 - to the coding train com
23:59 - you will think like boy this person
24:01 - really never makes any videos because
24:02 - the last one here is from March 14th but
24:05 - it's okay I'm working on stuff first of
24:08 - all let me you know I in case there are
24:10 - a few people who are totally new here if
24:12 - you are a beginner never programmed
24:13 - before this code program with p5 GS
24:17 - these are the videos that I would
24:19 - suggest let me just move this over here
24:23 - maybe I don't know I'm not so good at
24:25 - this layout camera thing I'm working on
24:29 - it so these are the videos that will get
24:32 - you started if you've never programmed
24:33 - before but what I what most people have
24:38 - at least find the channel through or
24:40 - engage with the most are these coding
24:43 - challenges and I can talk more about
24:45 - coding in the Cabana in a little bit so
24:47 - these are the coding challenges every
24:48 - single coding challenge has a page for
24:51 - it if I go to to the challenge and it
24:53 - has a list here of community
24:55 - contributions these are my monitors over
25:05 - there I can't I can't I have to move
25:06 - myself back I don't think I can take it
25:08 - I don't think I can take being on this
25:10 - side
25:13 - deep breath everybody it's all gonna be
25:16 - ok I have two lights today a light
25:19 - coming from this side and a light coming
25:20 - from this side so I probably look a
25:22 - little extra pretty do I look deep you
25:24 - not really please make a frame tutorials
25:28 - [Music]
25:33 - so so what I have done in the past is
25:40 - without any real organized organizing
25:43 - principle but sometimes a week after I
25:46 - do a coding challenge and publish this
25:47 - webpage I'll go and click through a
25:48 - bunch but I've missed a lot of your
25:50 - contributions and then sometimes new
25:53 - come in for projects that were made a
25:55 - year ago so thank you to many people in
25:58 - the coding trained supporter community
26:01 - who support in so many different ways
26:04 - but in particular a big shout out and
26:06 - thank you to David Schneider who just I
26:10 - need to open up my direct messages and
26:11 - discord for a second by the way if you
26:14 - haven't joined the coding train discord
26:15 - there goes a whip the camera that's a
26:19 - good idea I could flip it so that when I
26:21 - point this way yeah yeah that's not a
26:23 - bad idea
26:25 - so let me look for the direct message
26:27 - and let me get this up okay so what we
26:30 - have that is new is this particular
26:37 - wheel so I'm obsessed with wheel
26:40 - spinning and luck and random numbers and
26:43 - probability and so I I as it as as the
26:47 - sort of one of the I think I've said
26:49 - organizing principle now twice in the
26:51 - last like two minutes but one of my
26:53 - organizing principles for how I like to
26:55 - do things is to not make any decisions
26:56 - and let the magic wheel spinning wheel
26:59 - tell me what to do so it's a little
27:01 - unclear for you here and maybe there's
27:03 - some of you would let maybe there's a
27:05 - way after today that David Schneider can
27:08 - post this as a github repo if it's not
27:12 - already and allow people to contribute
27:13 - to improve this but this is a rant wheel
27:17 - that when I spin it I won't do that
27:18 - right now this is based I think on
27:22 - actually some code that I wrote at one
27:25 - point once for one time or another and
27:27 - now I'm looking this direction okay I'm
27:31 - sorry everybody this was like I thought
27:33 - this was gonna make sense but I can't do
27:35 - it just you know please hold
27:36 - I can't I can't take it people I can't
27:45 - take it
27:49 - [Music]
27:51 - whoa oh I feel so much better
27:54 - oh my god oh oh oh I feel so much better
28:02 - oh they move this to the side here oh oh
28:05 - my goodness okay as I was saying very
28:20 - professionally in my proper live to
28:23 - teaching tutorial livestream where I
28:25 - have a person who knows about things and
28:27 - talks to you to tell you things
28:29 - this wheel is drawing from a spreadsheet
28:32 - and that spreadsheet has been carefully
28:34 - curated I think I know that Kobe won a
28:37 - coding trained supporter and viewer also
28:40 - contributed a lot to this I hope to put
28:45 - this together of all of your
28:46 - contributions so every contribution
28:48 - that's on the website that I haven't
28:50 - shown before that is also a valid URL is
28:53 - now could every time i refresh this page
28:57 - whoops it's going to pick randomly from
29:02 - that and I have a wheel so we're going
29:04 - to start the problem one thing I think
29:06 - would be an improvement here is maybe
29:08 - having people's names because then at
29:11 - least if you're watching you could know
29:12 - like oh I'm on the wheel right now but
29:16 - right now you're just gonna have to like
29:17 - wonder which number are you and it's I I
29:20 - recognize there's a little bit of an
29:21 - absurdity here because I'm gonna spin
29:23 - this like digital wheel and I have a
29:24 - literal book of a million random digits
29:26 - over there all right here we go I need a
29:30 - wheel spinning sound effect which I
29:32 - should just have this too but I will go
29:34 - with this
29:40 - all right here we go we're going to see
29:42 - somebody's community contribution and it
29:46 - is going on to number one number one are
29:52 - you out there number one number one oh
29:55 - you're my favorite viewer number one
29:57 - come and give me a not a 6 feet away the
30:00 - camera by the way I just want everybody
30:02 - to know so you feel safe and secure at
30:03 - home
30:04 - this camera is approximately six feet
30:06 - away from me I measure a few more inches
30:08 - just for just to be overly cautious okay
30:12 - no here we go ah so I think what I do
30:16 - now is I click on this button remove and
30:19 - view selected it says remove and view
30:21 - selected and when I click on that it
30:25 - will take me to the page so I have
30:26 - selected
30:28 - ray casting with mais generation
30:32 - contributed by Grilli 86 so if you're
30:36 - wondering first what I can do is I can
30:38 - just click here this is the particular
30:40 - coding challenge rendering ray casting
30:42 - where I took a two-dimensional space and
30:46 - put a little particle in it shot rays
30:48 - out of the particle and measured the
30:50 - distance to various obstacles and then
30:52 - attempted to render it as a 3d scene all
30:55 - with 2d canvas I believe in the browser
30:57 - something like that so we could see
30:59 - let's just for a reference I'll just
31:00 - click here this is my I don't remember
31:03 - how I did this oh yeah this is this is
31:08 - the code from the example and what does
31:10 - this slider do the field of view oh yeah
31:12 - that's fun or the distance or something
31:15 - a field of view yeah okay so that's the
31:18 - original code and the original challenge
31:20 - and now we're going to see a Grilli 86's
31:23 - version ray casting game with maze
31:25 - generation okay so what do I do
31:31 - so one thing I mean one thing I always
31:34 - encourage people to do is think about
31:36 - your project if there's any being self
31:40 - documenting or maybe even if you're
31:43 - submitting a contribution you could link
31:45 - to say a post about it word there's a
31:47 - write-up and explanation that might have
31:49 - some instructions but I think this what
31:52 - this I can see there's a button here so
31:54 - I can really
31:54 - strap like this that looks like there's
31:56 - a button every time I click the button
31:58 - oh oh wait a second I understand this
32:01 - now and I just I shouldn't I shouldn't
32:03 - give this like feedback that now I'm
32:05 - feeling like was totally wrong because I
32:07 - think there's a little magic to be
32:08 - figuring out how to do this I think the
32:10 - idea is that I have to figure out the
32:14 - maze like I'm not seeing it but I can
32:17 - walk around and slowly reveal it let's
32:19 - see can I make it through this is so
32:26 - cool you audience are like the most
32:53 - creative people and that's a dead end
32:57 - I wonder if this also used anything from
33:05 - my maze generation examples are this is
33:08 - a custom maze generation I'm gonna make
33:15 - it
33:16 - No yeah there we go what do we think
33:20 - turn yeah this is what it's got to be it
33:32 - I'm thinking I'm going this way
33:37 - I'm a completionist so a one thing
33:41 - that's gonna be an issue we might only
33:42 - look at like one community contribution
33:44 - every street because I can't bear to not
33:47 - finish things is this like a secret like
33:52 - no there's probably like some secret way
33:55 - to see the maze but I don't want to know
33:56 - it what it is I want to solve this other
34:16 - way
34:25 - [Music]
34:34 - [Music]
34:37 - that is a really awesome project so
34:40 - first of all I love the interactivity
34:43 - here I love the clever sort of idea of
34:46 - like oh we could use this rendering
34:48 - raycasting example but not reveal the
34:52 - actual map itself so my whole thing was
34:54 - really like a debug view and this is
34:55 - just taking a very simple idea the other
34:57 - thing is like there's a big challenge
34:58 - here which is how to like generate a
35:00 - maze every single time it looks like the
35:02 - color is random so uh what could be fun
35:06 - is to think about are there are there
35:09 - little things you have to like collect
35:11 - along the way or there are other types
35:12 - of ways that you can think about this
35:14 - this world or this terrain or this so
35:16 - there's a lot I think more possibilities
35:18 - here and I think this was really
35:19 - terrific so congratulations to Grilli 86
35:26 - which let's click over to see what there
35:29 - there are pages croud blocked oh I
35:31 - recognize this one you can take a look
35:34 - there's a lot so looks like there's lots
35:36 - of code examples here that are similar
35:39 - or if not based on stuff that I do on my
35:42 - channel so thank you well for this
35:44 - wonderful contribution big train whistle
35:48 - to you and we're moving on so now I'm
35:51 - gonna close this and we're gonna do
35:53 - another one hmm okay I think that I'm
35:58 - gonna do this until like for another ten
36:02 - minutes I have two other things on my
36:04 - agenda I know one takes exactly 15
36:06 - minutes we might like to do it twice
36:07 - sold eight thirty minutes and the other
36:09 - thing will be at least thirty minutes so
36:11 - okay let's go here
36:15 - here we go round and round it goes
36:19 - where it lands nobody knows - okay
36:30 - we're landing on spot - who is amis hey
36:35 - wait a second here Grilli 86 did you
36:39 - hack the wheel nothing is there
36:43 - something fishy going on here maybe
36:45 - really 86 just made a lot of
36:47 - contributions and this is just the
36:49 - universe is telling me something that I
36:50 - need to feature Grilli 86 are you
36:53 - watching by any chance so oh thank you
36:58 - for David for the for tell me who the
37:01 - new members are I'm gonna sort of
37:02 - definitely want to thank them in a
37:04 - second so let me just look at this well
37:05 - I'm gonna I'm gonna kind of gloss over
37:06 - this one because as we can see this look
37:09 - at this so this by the way if you're
37:11 - wondering what is the process for
37:13 - developing an interactive art project a
37:18 - game a piece of software one of the ways
37:21 - that I have always worked and found to
37:23 - be most helpful to my process is by
37:26 - breaking a larger problem down into lots
37:28 - of sub components and working on them
37:30 - separately and then working later to
37:32 - assemble them and so we can see an
37:33 - example of that here where here's a the
37:35 - actual maze generation itself without
37:40 - without the Ray casting so nice to see
37:43 - that like by just serendipitously that
37:45 - we got to this other one alright let's
37:47 - spin the wheel again oh and I have a
37:52 - reset numbers button I didn't realize
37:54 - that that's cool
38:03 - maybe we could have some kind of like
38:05 - eating the slices of pie themselves
38:08 - there could be like a preview or like
38:11 - the person's name or something because I
38:13 - fix numbers as much as I love numbers
38:16 - and as much as I sleep at night with
38:19 - this random digits book under my pillow
38:21 - curled up cozy with it alone whatever
38:24 - never mind
38:25 - stop asking me about various sleeping
38:27 - arrangements that are coming on to this
38:28 - house but as much as I do love my random
38:34 - numbers I feel like a connection to the
38:37 - people who are here on this wheel would
38:39 - be nicer to have okay here we go
38:41 - rigged yes the wheel is rigged here we
38:44 - go remove and view selected ah crime
38:47 - spiral phyllotaxis the original
38:50 - challenge is phyllotaxis this is
38:54 - actually a pretty by the way if you're
38:55 - new here and you're looking for a good
38:57 - getting started kind of algorithmic
38:59 - generative art project to tinker with
39:03 - this is a really nice one it's just
39:06 - involve some simple math and playing
39:08 - with color to create this spy
39:10 - phyllotaxis pattern so this is a pretty
39:12 - good fairly beginner friendly example to
39:16 - work with so let's see what Sam Lee got
39:20 - themselves up to with the prime spiral
39:23 - phyllotaxis like to see the use of code
39:28 - pen here oh okay
39:29 - so I think what's going on if I'm
39:32 - correct and there's something I think I
39:34 - believe it's called a ulam spiral I
39:40 - believe what's going on here is that
39:43 - there is a number line that's spiraling
39:46 - around and that prime numbers are being
39:49 - highlighted in some way and that this is
39:53 - a particular technique that creates a
39:54 - visualization like this that just the
39:56 - just the design choices here have given
39:58 - it a very like Spacey almost like
40:03 - constellation like quality to it quite
40:07 - lovely
40:10 - alright Arnab is reminding me that in
40:12 - the phyllotaxis video I said my favorite
40:15 - angle
40:16 - was 137 and a half and it is today still
40:20 - true today that is my favorite angle
40:22 - alright great work
40:24 - wonderful work thank you Sam Lee for
40:28 - sharing this I should have like a timer
40:31 - going on that gives me the sense of how
40:33 - much longer I have let's take a look at
40:34 - Sam Lee's page this is Sam Lee's code
40:39 - pen you can see there are a lot of
40:41 - interesting projects going on here I'm
40:43 - very curious about this one called mom's
40:45 - spaghetti and here we go so we're going
40:48 - to close this and we're gonna do another
40:50 - one here we go spinning this wheel
40:58 - ah I'm being told breaking news here
41:02 - breaking news I actually have a thing
41:04 - where I could get breaking news I'm
41:06 - being told that three blue one Brown has
41:09 - a video on the prime spiral alright so
41:11 - let's take a look at this one oh hey
41:14 - rigged
41:15 - I've always think that I'm being funny
41:18 - it's not actually and I mean I'm not
41:21 - funny anything but as the YouTube
41:24 - comments make it very clear to me you
41:27 - are not funny
41:28 - stop trying to be funny by the way I'm
41:30 - not trying to be funny
41:32 - I don't know what I'm trying to be I'm
41:34 - just being me you gotta be me
41:39 - so David Schneider the creator of this
41:41 - wheel system himself caress the a star
41:45 - amazed solver there's a lot of
41:47 - contributions related to the maze stuff
41:51 - here I wonder if that's just coincidence
41:52 - art there's something going on here but
41:54 - this is this by the way this coding
41:56 - challenge I don't know why but it is it
41:58 - was made quite a while ago and it is
41:59 - just on the top like it's being
42:01 - suggested all over the place oh it's
42:03 - really sort of funny to you that if I
42:04 - showed you my YouTube analytics right
42:06 - people are watching this video like a
42:08 - crazy but only for about one minute so I
42:10 - know that's fairly typical if YouTube is
42:13 - like weirdly suggesting some random
42:14 - video to let people who wouldn't
42:15 - actually be interested that that amount
42:17 - of time they watch it would go down but
42:19 - it's very extreme so anyway this is a
42:21 - well-known computer science pathfinding
42:24 - algorithm called a star this is actually
42:26 - I think it's four or five part series
42:27 - it's a pretty complex coding project we
42:31 - can take a look I don't know if this is
42:33 - gonna send me to the finished
42:36 - well let's refresh here yeah so this is
42:39 - a visualization of the a-star algorithm
42:42 - playing out oh there's my discord behind
42:45 - me let me just which is not that big of
42:47 - a deal but let me just put that away
42:50 - well I move this over and then here we
42:57 - come back um so you can see that it's
42:59 - making this kind of like an obstacle
43:01 - course and whoops I'm not really good
43:05 - with my buttons here it's making this
43:06 - obstacle course and
43:09 - finding the finding a oh stop showing me
43:18 - discord I think I will just quit out of
43:22 - it there we go
43:22 - I mean there's nothing private there I
43:24 - just you know so which I love about this
43:31 - is often has this like really like
43:33 - almost like lightning like quality to it
43:36 - the way that it's showing different
43:37 - paths and jumping around between them
43:39 - and there's this very jagged path that
43:42 - it's falling so interestingly enough I
43:44 - feel like by thinking about another way
43:46 - of visualizing this and not showing the
43:48 - background pattern we could create like
43:49 - a nice Lightning simulator with it
43:50 - there's a project you could do go take
43:52 - that and run with it but I'm not here to
43:54 - show you once again my video we're here
43:57 - to look at the a-star may solver by
43:59 - David Schneider let's take a look
44:03 - let me move this back over I think I
44:05 - don't ah so what I like about this it
44:09 - looks like we've got an interface here
44:11 - where I could enter a certain number of
44:13 - rows and columns so let's try let's
44:17 - leave it at the default right now looks
44:19 - like this is the start and this is the
44:21 - end what we're seeing a lot of maze
44:23 - solving today that's the unknown theme
44:26 - who animate generation right by the way
44:32 - this is from a different coding
44:35 - challenge now I forget what this one was
44:36 - called but I have a maze generation
44:39 - coding challenge I could Google and find
44:40 - it I'm sure somebody could share it in
44:41 - the chat or something but this is a
44:45 - particular algorithm for generating the
44:46 - maze pattern which we're now seeing and
44:49 - then restart oh but I don't let's not
44:53 - anam so now the question is how do I get
44:56 - it to solve the maze what's what happens
45:03 - next
45:03 - complete maze there's the button down
45:06 - here complete maze click that and there
45:09 - it is solving the maze wonderful ten
45:15 - minutes have passed so Simon oh and then
45:18 - it like back tracks and shows me the
45:19 - path
45:20 - oh this is awesome great job actually
45:23 - interestingly enough I actually have
45:27 - used my maize generation code to
45:29 - generate in processing PDF mazes that I
45:32 - have printed out and given to my kids to
45:34 - solve in between you know playing roblox
45:37 - that is for you know 30 seconds at a
45:40 - time so so thank you David this is great
45:45 - I always love seeing these projects that
45:47 - have an interface like I'm always
45:48 - curious if I change this to like five by
45:51 - five what do I see um I guess if I hit
45:54 - restart oh and I get like a tiny one but
45:57 - if I can do this scale if I do like 100
46:00 - by 100 I change the scale to five whoa
46:03 - look at this let's make the scale ten
46:07 - and then can we solve this maze all
46:14 - right so now we see this little this
46:16 - little character moving around and
46:18 - trying to solve this maze super fun all
46:19 - right great work okay
46:21 - let's do one more I'm oh I'm over time
46:24 - but let's do one more we're gonna see if
46:38 - if we get something that doesn't have to
46:40 - do with me
46:50 - so this would be really hard to do but I
46:53 - have some other feature ideas for this
46:54 - now what is the wheel could check and if
46:57 - it's already added a contribution by a
46:59 - certain person it doesn't re add that
47:02 - contribution tricky because how do you
47:03 - know you really don't actually do it
47:05 - like a database with users and accounts
47:07 - or anything so it's kind of impossible
47:08 - to match but that would be an
47:10 - interesting thing was that really loud
47:14 - the drumbeat what happened uh-oh I'm
47:18 - seeing the chat I did something terrible
47:20 - Oh maybe because I caused the sound in
47:23 - the middle sorry everybody
47:26 - sorry usually I try to hit this button
47:32 - which fades it out okay so let's see
47:35 - what this one number 10 is it is
47:38 - tic-tac-toe with invincible AI okay a
47:41 - challenge accepted so this is the the
47:45 - challenges tic-tac-toe that's a video I
47:48 - made on just creating a little simple
47:50 - tic-tac-toe game that you could check
47:52 - out certainly and where did I lose this
47:57 - one and I also made a video with the
48:00 - minimax algorithm but let's see what
48:01 - happens when I scratched my head
48:03 - something else went crazy oh it was the
48:08 - mic sorry
48:12 - that's weird oh I mean I could this
48:16 - interfere no it's this is my mic here I
48:23 - don't know all right I will
48:25 - I apologize I hope that you're okay
48:29 - alright let's take a look at this one
48:31 - alright here we go
48:33 - I will beat the invincible
48:39 - tic-tac-toe ai
48:42 - oh yeah you can't beat me ah shoot I
48:53 - lost
48:58 - [Laughter]
49:06 - [Music]
49:07 - [Laughter]
49:10 - alright here we go
49:11 - I gotcha
49:28 - yeah yeah tie tie is kind of like a win
49:35 - for me because otherwise I lose I'm
49:39 - clearly not gonna win
49:57 - [Music]
50:23 - [Music]
50:26 - thank you very much thank you I have
50:29 - beaten the invincible AI ha ha me four
50:35 - or five tries I am I I you know I I I do
50:42 - enjoy myself a good solid game of
50:44 - tic-tac-toe whoo all right that was fun
50:47 - everybody cheers all right thus ends the
51:01 - portion Oh a little C music for my
51:08 - different segments now you know like
51:10 - it's time for it's time for community
51:15 - contribution
51:18 - uh okay so now I'm going to move on to
51:26 - my next segment and I'm quite hesitant
51:31 - to do this for a variety of different
51:33 - reasons there so a lot of so the coding
51:37 - train community is mostly found in
51:40 - discord but just a shout out to CJ who
51:43 - was in the chat I know a Cody garden
51:45 - with CJ hasn't been doing a lot of this
51:47 - on his YouTube channel or twitch stream
51:50 - a lot of people been enjoying this new
51:54 - website called kodan game or coding aim
51:57 - code Cody and game cod and get gommi I
52:02 - don't know how to say it but it's coding
52:04 - coding game calm this is not any sort of
52:08 - sponsorship I actually have been in
52:10 - touch with them because they emailed me
52:12 - and said like hey you might find this
52:14 - fun maybe it will be a sponsorship
52:15 - someday looking at you koko dying gummy
52:20 - gummy but I thought I would try this out
52:25 - it is a website that has different
52:28 - coding puzzles and different ways you
52:29 - can kind of like compete against each
52:31 - other to either like finish the puzzle
52:33 - quickest or write the shortest amount of
52:35 - code let me tell you something I'm
52:38 - really I feel like competition the idea
52:41 - of competing or doing things the fastest
52:44 - is completely antithetical to the to the
52:49 - philosophy and point of view of this
52:50 - channel creativity fun enjoyment
52:54 - collaboration play all of those are I
52:58 - think the the the ways to engage with
53:02 - each other as humans through code and
53:04 - computation and stuff like that so and
53:06 - and I think the good news is people will
53:09 - so I want to like we're like reduce the
53:12 - level of competition kind of like
53:13 - thinking here and just kind of have fun
53:15 - with it I think the good news is I will
53:17 - lose every single one I probably won't
53:19 - be able to figure out the puzzle I'm
53:21 - actually a really quite bad so and and
53:25 - that will help I think ease everybody is
53:29 - anxiety or feelings and let's
53:31 - just have some fun with this so what I'm
53:33 - going to do is this is something you can
53:36 - participate in but I'm just as a kind of
53:38 - trial run here to get started with what
53:42 - I'm going to do right now is I'm gonna
53:45 - create just please hold I'm gonna create
53:49 - a clash of code game and how do I do
53:55 - this
53:55 - compete practice oh wait there is a
53:57 - thing called practice practice puzzles I
54:02 - could just do the puzzles but can people
54:03 - not join the puzzle I think I need to do
54:07 - compete for people to join right all
54:11 - right well - will do compete clash of
54:14 - code I think that's what I'm looking to
54:16 - do clash of code join a clash hold on I
54:23 - don't know why I'm not showing this to
54:25 - you 5 to 15 minutes max I don't want to
54:32 - join a clash I want to create aa create
54:34 - a clash Oh Oh start a private clash
54:43 - David is asking me I guess I die I
54:46 - should have thought to do that one of my
54:49 - new innovations is I can have moderators
54:51 - who are watching and participating talk
54:54 - to me and well let's get that set up for
54:56 - next time because I don't I think I can
54:58 - figure this out so I'm gonna start a
54:59 - private clash and I'm clicking there ok
55:03 - so now I have the link to this and what
55:06 - I'm going to do is I am going to paste
55:09 - this into the discord live chat where's
55:13 - the so this is going I'm going out to
55:15 - supporters and members first and where's
55:23 - the live chat channel I'm gonna tag
55:26 - supporter so everyone gets a
55:28 - notification and there you go so so I'm
55:33 - gonna pull this back up and we should
55:38 - start to see people joining so these are
55:41 - people in the oh whoops coding trained
55:44 - community
55:45 - see CJ is there a lot of names that you
55:46 - recognize that you may recognize from
55:49 - various community contributions and
55:50 - things so we're gonna attempt to do this
55:52 - cloud starts in one minute I didn't even
55:54 - configure it I didn't even do anything
55:57 - to configure it if somebody wants to
56:02 - paste this into the I'm touching my face
56:06 - a lot yes sorry if somebody wants to
56:09 - paste this into the YouTube chat we can
56:12 - get a few more people joining or you can
56:14 - just you know I know
56:16 - type out this URL it won't take you very
56:18 - long just you know memorize that and
56:20 - type it out
56:22 - so because it's starting in 40 seconds
56:26 - here all right so we're gonna see what
56:30 - happens
56:30 - I actually I barely used this so I don't
56:32 - really know exactly what's going to
56:33 - happen but we're all going to compete to
56:35 - solve some coding puzzle oh it's beeping
56:39 - at me 23 seconds
56:41 - [Music]
56:54 - okay
56:58 - reverse mode you have to guess what to
57:01 - do by observing the provided set of
57:03 - tests so interesting so hello world
57:10 - turns into drool Elul how much time do I
57:14 - have by the way 15 minutes thank
57:16 - goodness hello hello world turns into la
57:20 - la word jump turns into pee oh okay
57:26 - what's shuffling the letters is it
57:29 - shuffling them a particular way pu j m d
57:37 - dr w is it just shuffling then it's got
57:43 - to be a specific kind of shuffle though
57:44 - right uh all right well let's see what
57:49 - happens here so I'm gonna do this in
57:51 - JavaScript can I make this font much
57:53 - bigger I don't know how I'm just gonna
57:56 - zoom in so I think the idea here is this
58:01 - code reads in the input and then what I
58:05 - could do is I can just I can get all of
58:09 - the letters in an array by saying split
58:15 - think if I just do split in JavaScript
58:18 - it'll give me all of the letters in an
58:20 - array can I just like console.log that
58:23 - in this so let's see like what happens
58:28 - if I run this yeah so we can see I got
58:33 - everything in an array so now I could
58:36 - shuffle that array is there a shuffle
58:40 - built-in shuffle function what's the
58:42 - rules here am i match to look up stuff
58:43 - on the internet it starts from the end
58:46 - people are telling me D no because this
58:50 - one doesn't iterates over letters and
58:54 - adding new letters to the right and left
58:55 - alternatively I don't understand that
58:59 - you can do array from okay well hold on
59:02 - let me at least just well so it's
59:04 - clearly not shuffling take every other
59:07 - letter from the end
59:10 - dr w le8 and then the other way but why
59:17 - is this one start with an L that's not
59:22 - the letter from the end d RW l h e o but
59:27 - it went back we went the O because maybe
59:29 - this is even one two three four five six
59:31 - seven eight nine ten and this is odd
59:34 - so let's first say if letters dot length
59:41 - modulus - so if it's even maybe I do it
59:46 - one way so so I want a new string so new
59:54 - s then I want to say for let I equals
60:01 - zero okay I guess I can do four I know I
60:04 - like to before every character in
60:07 - letters but I need I would like to have
60:11 - an iterator hmm
60:17 - okay okay so let's
60:22 - but the timer is pressure si si but you
60:26 - everybody else has finished this already
60:27 - all of you viewers are so good at this
60:29 - coding thing there's like lots of people
60:33 - watching and I'm trying to code some
60:35 - sort of algorithm it doesn't have to do
60:37 - with even odd no all right well let me
60:42 - just do it for the firt let me get the
60:44 - first one right so the first one is
60:46 - clearly the last letter so I want to
60:49 - create a counter is zero and I guess I
61:01 - could remove things from this array Wow
61:04 - and then so let's have the counter be
61:06 - letters dot length minus one so that's
61:13 - at the end then I want to say while
61:18 - counter is greater than or equal to zero
61:24 - say the new string is equal to splice
61:28 - out and let's just call this eye splice
61:34 - out that letter and then splice out that
61:44 - letter and then so there's lots of
61:52 - messages going on in the chat I have to
61:53 - just not look at it and then I - equals
61:57 - - and then all I need to do is then
62:02 - iterate over the rest of what's left
62:10 - iterate over the rest of what's left and
62:16 - add those characters in and then print
62:20 - that why does this give me attempting to
62:23 - override knooow that's a constant let
62:25 - okay all right let's see what happens
62:28 - here so this is my idea I take all the
62:30 - letters I go to the end and I start
62:33 - taking them off every other one and then
62:36 - I add the rest back in in order and
62:38 - we'll see what happens try okay so that
62:43 - something bad happened
62:45 - failure found bracket expected this does
62:53 - this splice not do what I think it's
62:55 - going to do letters dot length minus one
63:03 - letters dots place I take one go back by
63:08 - two
63:14 - all the patterns alternate from center
63:17 - left to right wait I just want to get
63:23 - this thing to work even though it's not
63:25 - right right
63:27 - dr Duff you know it's getting so excited
63:32 - to see everybody solutions and how
63:34 - elegant nice they are puj like why
63:38 - didn't this work I have a blank string I
63:41 - made them all I made it into an array
63:47 - new but the array is new S is not an
64:00 - array new s is a string people are
64:07 - talking to say new s join look at this
64:15 - this should be a single we print new s
64:25 - and I like bracket Oh Oh what it made
64:40 - this what that I got what what
64:57 - print new s dr bracket what
65:14 - oh because that print is there it thinks
65:18 - that's the output oh I don't understand
65:20 - how this works so it doesn't look at the
65:23 - last print it looks at whatever prints
65:26 - you do there needs to be like a debug
65:28 - thing Oh to debug use it says it right
65:31 - here way to read instructions so the
65:38 - debug messages you should use console
65:40 - error the answer with console log yeah
65:45 - it was correct oh wait I ran out of time
65:50 - [Laughter]
65:59 - [Music]
66:00 - oh I'm really bad at this oh yeah what's
66:04 - giving me an ADD I'm not interested mmm
66:08 - okay now what do I do
66:11 - did I run out of time no I still have
66:13 - five minutes it just was like beeping at
66:15 - me okay
66:16 - this was correct this was not correct
66:19 - found this but it expected this which is
66:22 - that in Reverse see I think it's like
66:28 - it's just reversing it if it's why is it
66:33 - reversing this one but not that one is
66:35 - it because it's an odd number I think
66:37 - it's because it's an odd number people
66:41 - said no to that but that's what I think
66:42 - it is so how do I reverse is there like
66:45 - a string reverse is that a function so
66:51 - if s dot length modulus two is one a new
66:58 - s equals new s dot reverse that worked
67:05 - Oh No found nothing new s reverse is not
67:10 - a function oh come on it's a there's a
67:14 - array function add the letters to the
67:19 - left or right sequential sequentially
67:23 - yeah
67:25 - so there is a way to reverse an array so
67:28 - I could just say up top if I could do it
67:34 - here then I could say letters equals
67:37 - letters reverse why what's wrong with
67:44 - this attempting to override letters
67:45 - which is a constant yeah it's not a
67:47 - constant anymore people correct
67:50 - No found h LW Rd oh I can't reverse I
67:57 - have to reverse it after I have to
68:02 - reverse it after okay so I could split
68:04 - it again okay I could this is so
68:06 - ridiculous I'm so this is so funny what
68:08 - I'm gonna do I really need a bigger font
68:11 - so you could see this I I'm gonna write
68:12 - the most we're gonna see all sorts of
68:14 - elegant amazing code that people do if
68:16 - it's one let's let's split it up again
68:22 - and reverse let's split it up again in
68:30 - Reverse and then say new s equals letter
68:32 - stop join and then so this should be
68:36 - taking it oops making it into an array
68:41 - reversing the array and then joining it
68:43 - back into a string and I'm reusing
68:44 - variables and doing all sorts of
68:46 - terrible stuff but I like it
68:49 - correct No found e lol what hold on
69:03 - oh I don't have it right just start with
69:15 - the second last letter oh that's what it
69:17 - is
69:19 - second l l o L e H okay that's much
69:25 - better okay so I see that's what it is
69:30 - of course of course it's not reversed I
69:33 - I rely let's see so now what I can do is
69:39 - oh i reversed it up there also I
69:44 - reversed it in too many places but it's
69:45 - actually just a second to last letter
69:47 - that's what it is if if it's odd then
69:56 - then I and there'd be like a really nice
70:02 - way of doing this based on Oh based on
70:03 - the modulus itself so minus 1 minus s
70:08 - dot length modulus to look at this look
70:11 - at this fanciness
70:12 - look at that fanciness oh yeah that's
70:17 - gonna do it I think okay I like my
70:35 - solution I like my solution look at that
70:39 - it's so nice it's very weird and I I
70:41 - guess I have a minute left so I could
70:43 - kind of like adjust it and make it
70:45 - better and nicer but let's look at other
70:48 - people's so I'm gonna hit submit and we
70:51 - can see here I guess I guess the the the
70:58 - metric here is how fast it was done so I
71:02 - think that I who spent 40 minutes should
71:06 - get a prize for spending the most time
71:08 - thinking about it was very good very
71:10 - thoughtfully
71:14 - and we can look at people's code so
71:17 - let's go click through everybody's code
71:18 - that's kind of the interesting thing
71:19 - let's look at s Tim's code who did this
71:24 - in Python in one minute and 55 seconds
71:32 - okay so now I'm really getting a clue
71:35 - into a way that makes it first of all
71:38 - you know I'm not a big Python user
71:42 - programmer but sometimes you just see
71:44 - this Python code and you're like oh wow
71:47 - it's just so beautiful
71:49 - I must look at it just soak it into my
71:52 - eyes into my brain so you can see here a
71:55 - a not knowing Python looks like s is the
71:58 - strength string a is every index into
72:02 - that string because a modulus 2 is 1 if
72:05 - a modules 2 is 1 oh you could just take
72:08 - it that makes sense you could be putting
72:13 - characters on the end or the beginning
72:15 - based on whether you're even or odd
72:17 - within the string and then you can
72:19 - compile a string like that so this would
72:21 - be interesting to rewrite this in
72:23 - JavaScript this way okay there we go
72:27 - next we're gonna go to DT six look at
72:31 - this with a join and reversed and all my
72:34 - so this is the other thing I mean I
72:38 - think there is a lot of fun to this and
72:40 - there's certain value in the sort of
72:42 - puzzle solving and the enjoyment of like
72:44 - reducing the number of characters but
72:46 - for me i optimize my code writing to be
72:49 - very long and to be as to explain what
72:53 - it's doing as much as possible so so but
72:57 - it's nice to see all these others
72:58 - possibly here we go
73:00 - CJ a professional code clasher in ah
73:04 - this is very smart
73:06 - okay this I can relate to so this makes
73:08 - a lot of sense basically looking at you
73:13 - can use for each odo for each with an
73:15 - array so splitting the same same
73:17 - technique as me splitting the string
73:19 - then using for each instead of my weird
73:21 - for of loop and then with for each oh
73:24 - you get the lead
73:25 - and index I love that that is so quiet I
73:31 - never think to use for each as many of
73:33 - you know from watching but I never think
73:36 - to use it but there's such a benefit of
73:38 - using of getting the iterator and then
73:41 - if it's an even letter you push it at
73:44 - the end unshifted to the beginning boy I
73:47 - did mine in such a weird nonsense school
73:52 - readability is the word I was looking
73:53 - for Thank You Bruno so this is great
73:58 - Thank You CJ for this it is you know I
74:01 - this is a really nice thing to see I
74:03 - just unknown the one thing I don't have
74:05 - at my fingertips is what all the arrays
74:08 - are string functions are so I guess you
74:11 - know is this should be treated like an
74:13 - open book exam I mean there's no reason
74:14 - why I shouldn't look up what they what
74:19 - what the array of string functions are
74:21 - okay we've got Kobe who did there's also
74:25 - in JavaScript read line split joins
74:28 - split that I don't understand why is
74:31 - there a split by a space then a join
74:36 - then a split again rules you can look up
74:40 - stuff you can take your time you shall
74:42 - have fun everyone is a winner
74:44 - even if zero percent of the test works
74:48 - every I know truer words have never been
74:50 - spoken
74:51 - Thank You Kobe for these wonderful rules
74:52 - these should be the rules okay
74:57 - thank you Peter for your very kind
74:59 - feedback also explaining saying this is
75:03 - nice to have of kind feedback in the
75:06 - chat that I can see every once in a
75:07 - while keeps me going here
75:08 - what are we timewise I know my my I am
75:11 - 11:15 I've got till noon I've promised
75:14 - family time from noon on for the rest of
75:17 - the day so we're good we're good
75:19 - I could do one more of these oh no no
75:21 - we'll see
75:23 - so I Kobe is typing so maybe I'll get an
75:29 - explanation here and then this is going
75:31 - every other pushing pushing them into
75:35 - two separate arrays reversing one of the
75:38 - arrays
75:39 - concatenated them and then joining it
75:41 - back cool I kind of don't fully get why
75:45 - this works but I it would be it would
75:50 - did III can an under I can I can
75:53 - get a sort of like a sense of it but I
75:55 - would love to like work this out pencil
75:58 - and paper in case there's multiple words
76:01 - the split and removes them ah okay so
76:05 - this was just Kobe being overly
76:09 - considering other cases that or that
76:12 - that didn't seem to be a part of the
76:13 - test but if there had been multiple
76:14 - words this is kind of splitting them up
76:16 - separately and removing the spaces
76:18 - thanks for that okay let's look at galva
76:22 - Bart tissue I should have gone in the
76:23 - reverse order but okay and then this is
76:27 - some more Python so I don't actually
76:30 - know what this means because I don't
76:32 - know Python somebody in the chat will
76:34 - hopefully explain it but that must be
76:36 - doing something very clever here and we
76:38 - can see this is this very similar idea
76:41 - of concatenating the array based on even
76:44 - an odd which characters are which okay
76:48 - Eugene Oh
76:50 - Bruno wonderful work I can't see your
76:52 - code if you don't hit share code at the
76:56 - end I believe and then das ji
76:59 - let's also in JavaScript let's look oh I
77:02 - like this this is like this is the code
77:04 - I like first of all is this an umlaut
77:07 - it's hard to see cuz the font is so tiny
77:10 - but I love that red line split and then
77:15 - this is very much more similar to mine
77:16 - depending on even or odd concatenated up
77:20 - together reversing it and then going
77:23 - through it again what's that beeping in
77:25 - my ear coat clash just like beeps every
77:29 - once in a while what's going on with
77:31 - that what's up with that and then
77:33 - console logging that awesome cool okay
77:36 - you know what would be fun for me is a
77:38 - versions of these that are like
77:42 - reproduce this drawing or reproduce this
77:44 - animation that's would be a fun project
77:46 - that I mean we don't know if we're gonna
77:48 - like build a coding game competitor just
77:51 - as a coding
77:52 - community but I would really love that
77:53 - in terms of using p5.js and working on
77:56 - like algorithmic visualization to sort
77:59 - of like see like give me a Mondrian
78:01 - painting and let me try to like write
78:03 - some code it's like running tests and
78:05 - that sort of thing I you know you could
78:07 - do like pixel by pixel checking but in a
78:09 - way it would just be more of like
78:10 - general creative output okay oh I missed
78:14 - there's more okay I gotta keep oh I was
78:17 - i I didn't realize that I was oh I
78:19 - didn't hit share my code so share my
78:21 - code we all saw mine let's look at the
78:23 - David which has another similar Python
78:26 - version
78:28 - Arnab which is a much simpler way of
78:34 - doing what I did which is going from
78:40 - starting from the last character and
78:44 - then going back to the first character
78:49 - and oh but this one didn't work okay so
78:55 - let's look at our knobs and David's also
78:57 - I didn't work so that's interesting so
78:59 - that shows you if they didn't work we
79:02 - can little sort of look and figure out
79:03 - so I think this is the issue this is
79:04 - where I started and Coby is people are
79:09 - giving me information about the Python
79:11 - so maybe I wonder if I can pull give me
79:14 - a second I'm just going to pull up your
79:15 - messages because those would be nice to
79:20 - see
79:24 - so let me some other so hold on a second
79:32 - I'm pulling a discord for a second and
79:37 - so Simon Says s : : negative one
79:44 - reverses an array so that's a some kind
79:46 - of special code for reversing an array
79:48 - and then s X : y : z means get the array
79:54 - from X to Y with step Z if you omit exit
79:57 - defaults to start oh so there's like
79:59 - Python I suppose has all these really
80:01 - fancy ways of chunking and chopping and
80:04 - then segmenting and
80:05 - reordering arrays that I'm not familiar
80:08 - with but that's really really cool to
80:10 - see okay let's see so I'm getting a
80:16 - sense from the various chats that I'm
80:18 - seeing that people would like to see one
80:21 - more and Thank You Simon and armour for
80:25 - participating as well people would like
80:28 - to see one more of these so let's try
80:30 - one more and then I want to talk about
80:32 - something new that I'm developing which
80:34 - is neuro evolution examples for the ml
80:37 - five library and then we'll be done for
80:38 - today people are wondering about this
80:42 - shirt what is the beeping why is to be
80:48 - knowing slowly what the beeping is like
80:50 - every so often there's beep in my ear
80:52 - and it's the code clash website okay let
80:55 - me go back to my camera oh I'm on my
81:00 - camera and let me get another one going
81:12 - [Music]
81:28 - starting up the new one so so here's
81:33 - what I would like to say for these coke
81:35 - lashes I would like to give the most
81:37 - people who are watching a chance just
81:40 - for now I don't know that I'll always do
81:42 - it this way I'm posting this in the
81:44 - supporter channel first I don't like any
81:46 - sort of like tiered systems but this is
81:49 - just the way I'm doing it for today to
81:50 - kind of ease into this so if you already
81:52 - did the previous code if you already did
81:56 - the previous one maybe sit this one out
81:59 - and also I would say if you're watching
82:01 - and you feel shy
82:03 - or if you're like not sure like coming
82:05 - joy don't worry this is fun I I need you
82:09 - know we should all give this a try duh
82:11 - oh people following me on the website
82:15 - might beep maybe that's what's going on
82:16 - okay all right so I uh
82:21 - oh shoot it's already I didn't post the
82:23 - link and it's already starting in 45
82:25 - seconds so how do I get it to take
82:27 - longer to start I got to make a new one
82:31 - I'm gonna leave this clash okay sorry
82:34 - here we go I'm starting the new one
82:36 - create your own code of clash puzzle
82:40 - homemade puzzle editor huh
82:42 - so that's definitely something I want to
82:43 - get into that would be nice start
82:45 - private clash alright here's the link
82:48 - here comes okay and I'm also going to
82:52 - post it if somebody could immediately
82:58 - post it maybe in and here it goes now
83:05 - I'm coming back so we can see there we
83:11 - go so we've got people joining and it's
83:15 - going to start in one minute and 31
83:17 - seconds
83:19 - oh whoa oh I guess it's filled up I'm in
83:27 - Reverse mode again okay so let's take a
83:31 - look at this the game mode is reverse
83:35 - you do not have access to the statement
83:37 - you have to guess what to do by
83:38 - observing a falling set of test five to
83:41 - five numbers separated by two five three
83:45 - five numbers of other one was much
83:47 - harder than this one three numbers so
83:50 - this is this this I can handle so all
83:54 - right
83:54 - is there a setting here just to make
83:57 - this font much larger so read line split
84:02 - gives me the two numbers and so I have
84:06 - number one and number two so the first
84:08 - thing that I want to do is I need this
84:11 - many numbers so first I want to have a
84:13 - counter start at zero then I want to go
84:18 - from this or I guess I just I don't need
84:22 - a counter I'm gonna do a loop what am I
84:23 - talking about
84:24 - but do for I 0 I is less than the first
84:28 - number which is 5 I plus plus and then
84:35 - we need a string so the answer is a
84:38 - string and I'm gonna say answer plus
84:42 - equals all right well I guess I could
84:47 - need to have a variable like a value
84:50 - started at 0 plus equal and does it
84:52 - start with 0 it always starts with 0
84:54 - value value plus equal R that's how much
84:59 - it goes up and then answer plus plus
85:06 - equal value and then there's a space
85:08 - right so this should be this should be I
85:15 - think this is it I mean I haven't really
85:17 - let's see so let's just run it let's
85:21 - draw a caution the wind
85:21 - no I didn't get it right this the
85:25 - expected output is 0 2 4 6 8 and I found
85:28 - nothing value is 0 is less than it so
85:33 - let
85:33 - - let's make sure everything's coming in
85:35 - right console error this is how ID bug
85:38 - console error n comma R is that how I
85:42 - debug v - ok I is zero I is less than n
85:50 - answer is a string let's add what
85:55 - happens if I just add value to it and
86:05 - let's try that again
86:08 - found 0 2 4 6 8 so I'm doing it right I
86:12 - just didn't put the spaces in correctly
86:15 - so I mean I know I could do this Oh am I
86:20 - gonna have an extra space at the end and
86:22 - that's and that's not gonna like that
86:23 - let's see why did it get nothing
86:30 - why does adding the space turn it into
86:35 - nothing is the last space Messick I
86:43 - should see it but have the last space I
86:45 - mean I know ok let's try him trim we'll
86:49 - take off the extra space Oh what but why
86:56 - wouldn't it log the whole thing with
86:58 - just an extra space I understand that I
87:07 - need to remove the last space but why
87:14 - without doing that yeah but why did it
87:19 - say nothing as the I think that's a bug
87:23 - because look at this oh it found
87:28 - oh I'm reading this thing correctly this
87:31 - is what it found with the extra space
87:34 - expected confused me why what do you
87:36 - mean expected nothing it should show me
87:38 - what it expected which is this right but
87:43 - I could also keep them another way of
87:45 - doing this would be key
87:46 - as an array so let's do this yeah this
87:49 - is a good idea if I keep them as an
87:52 - array the answer equals value and then
87:57 - and then console.log answer join with a
88:03 - space this is another way to do it and
88:10 - ding ding ding ding ding ding ding and I
88:15 - will now submit this I'm happy with my
88:20 - answer and we'll give it oh oh it has
88:24 - ten more minutes
88:36 - [Music]
89:07 - okay
89:08 - I think I can start to look at other
89:12 - people's solutions while I while other
89:17 - people are finishing up so let's start
89:19 - let's I I don't want to go in order so
89:25 - let me go from let me go from this one
89:28 - here Oh Java Oh Java Java I don't know
89:33 - what sound to play for Java but it's
89:35 - something good it's like it's like a
89:39 - beautiful sound do I have a beautiful
89:41 - sound
89:41 - for Java because I love Java I don't
89:44 - I'll just say thank you thank you for
89:48 - picking Java as your language
89:50 - [Applause]
89:54 - I will now do a dramatic reading of this
89:57 - code class solution public static void
90:01 - main string args scanner in equals new
90:05 - scanner system dot in int n equals in
90:08 - dot next int it R equals in that next it
90:11 - in num equal 0 system dot out dot print
90:16 - 0 for int I equals 1 I is less than n I
90:19 - plus plus numbers equals R
90:23 - system.out.print quotation space
90:26 - quotation + num close bracket close
90:29 - bracket close bracket close bracket
90:30 - close bracket
90:32 - [Applause]
90:38 - it's so great to have a language where
90:41 - you just it figures out the way that you
90:43 - have to write the most amount of code to
90:45 - do the task I love it okay so let's see
90:49 - what's going on here this looks very
90:50 - similar to what I did it's just I don't
90:54 - know what this scanner is I have never
90:56 - seen that scanner but I guess that's a
91:01 - way of like reading in and this must be
91:04 - the boilerplate code it gives you
91:05 - reading the user input all right thank
91:08 - you great work I'd love to see this
91:11 - gruesel house
91:13 - let's take a look we've got some what is
91:16 - this JavaScript here let's take a look
91:19 - out is zero string a string concatenated
91:30 - oh there's a string literal here but no
91:33 - other characters besides the variable so
91:36 - my suspicion is if you just put out in
91:38 - here it would actually work but who
91:39 - knows if I is not equal to n minus one
91:43 - so as long as it's not the last one add
91:46 - so that's another way to do it don't
91:48 - bother to add the space but don't add a
91:51 - space if it's the very last one
91:55 - concatenate up and console.log excellent
91:57 - work c-sharp a language I do not know
92:01 - but oh but once again nice just like I
92:07 - love it sound
92:11 - c-sharp has the quality of looking very
92:14 - much like Java which I quite enjoy and
92:16 - we have console.readline split which is
92:18 - much more sensible we make a list a list
92:23 - full of integers add I times R I like
92:27 - this the multiplying of our that's a
92:29 - clever thing that I didn't think of and
92:31 - then join with the spacebar excellent
92:34 - now we are up to C++ and we see this is
92:50 - pretty interesting there's like all
92:52 - sorts of crazy bit shifting but then
92:54 - you're gonna ignore oh this is just the
92:56 - this is just getting the input that's so
92:59 - weird
93:00 - that's how you get the input crazy and
93:03 - then this is very reasonable and I guess
93:05 - this is C out me is that not big
93:06 - shifting I don't know what this is well
93:08 - is that how you said something that's C
93:10 - I don't have no idea what's going on
93:12 - interesting thing is C and C++ those are
93:15 - some of the first languages I really
93:16 - programmed in so in theory I I shouldn't
93:18 - know what this stuff is but I don't
93:20 - remember ah did saying this is how you
93:23 - use C air debug C out okay and then now
93:27 - we're going to Python which I'm sure
93:31 - we're gonna see this is now gonna be in
93:32 - about four characters once again going
93:36 - through the range concatenated I times
93:40 - the so using times instead of plus
93:43 - equals each time to the iteration is a
93:45 - nice way of doing it and then joining
93:46 - with spacebar that is super fun to see
93:48 - cool
93:50 - it's an overloaded operators what I'm
93:52 - being here that's for outputting in the
93:53 - console okay okay standard and standard
93:55 - out okay okay okay okay I got it I got
93:59 - it
93:59 - why don't you all get together and pick
94:02 - one person to correct me okay it's not
94:07 - good shifting I don't know why so it's
94:08 - bit shifting in other languages I guess
94:10 - because that's how I think of it and
94:11 - then we have another JavaScript one
94:15 - which looks which is all the same ideas
94:18 - synthesized down but much less code
94:21 - we've got
94:24 - here in a Python ooh whoa interesting
94:28 - this must be some is this some kind of
94:29 - like string literal like thing and
94:31 - Python I'm like format these variables
94:34 - into a string and that's nice to see
94:36 - we've got and then we've got two not
94:40 - sharing the code and then come on Klim
94:44 - el el clima y ml you can do it you can
94:49 - do it still clashing how much time is
94:56 - left three minutes and 25 seconds Oh 10
95:11 - I missed 10 okay
95:13 - Oh Kenneth I think this is Kenneth
95:17 - processing I'm just guessing as I saw
95:19 - Kenneth in the chat processing
95:20 - contributor in Python
95:26 - yikes oh I like this interesting way of
95:31 - getting the input and then print F oh
95:37 - this is just for like looking at the
95:40 - error this is a way of printing a this
95:43 - is a way of debugging I got it and then
95:46 - concatenate the array and so nice to see
95:48 - this in Python I love how you when you
95:50 - can initialize things with like the
95:52 - variable comma the other variable and it
95:54 - just sort of like puts one into the
95:55 - other one and went into the other one
95:57 - what a nice thing
95:59 - we now have oh no this would this is
96:08 - like winning the prize for shortest code
96:11 - so let's see can I trim one thing I'd
96:14 - like to do that I think when you see
96:15 - really short very obscure almost
96:18 - impenetrable code as we try to translate
96:22 - it into a narrative English okay
96:25 - N and R equal the integer an int number
96:32 - which is okay so actually let's let's
96:36 - start from the other end
96:37 - we're gonna take the input we're gonna
96:39 - split it up and then we're gonna have
96:41 - two things in the input they're both
96:43 - gonna be an eye and each one of those
96:45 - I'm going to turn into a number and I'm
96:47 - gonna take the first one and put it in N
96:49 - and the second one and put it in R and
96:50 - then I'm going to print out for all of
96:55 - the numbers within n 0 1 2 3 4 I'm going
96:59 - to print out R times n so 0 if if R is 2
97:06 - 0 2 4 6 8 and then I don't know what
97:10 - this star does it like this is like it's
97:14 - kind of like an accumulator oh we could
97:16 - probably in JavaScript this would be a
97:17 - good reason to use that accumulator
97:19 - function we get we get what is this do
97:23 - in Python this like star at the
97:24 - beginning does anybody know somebody
97:29 - will tell me I'm sure and then I guess I
97:32 - don't have to refresh it refreshes
97:34 - automatically and we've got a 45 seconds
97:37 - so we'll see if k KL IML appears unpacks
97:43 - an argument oh and we have welcome
97:48 - sebastian von Laue to the passengers of
97:51 - the coda train it's so nice to have you
97:54 - on board the train ticket for your
98:00 - membership in the coding train you have
98:03 - won yourself a random number and that
98:08 - random number is 30 2218 once again I'm
98:19 - donating the proceeds from anyone who
98:20 - signs up as a new member in April to
98:23 - amass NYC for a PPE personal protective
98:26 - equipment and I'm also matching those
98:28 - matching those membership fees for the
98:30 - month of April okay um spread operator
98:34 - up Clemmy came in right under the wire a
98:37 - Java oh I love you I love you Java you
98:41 - are my one true programming language
98:44 - love let's take a little of this
98:50 - anytime anyone does one of these in Java
98:52 - I require requires a dramatic reading
98:58 - everybody ready to go to sleep
99:02 - class solution curly braket public
99:06 - static void main string args scanner in
99:09 - equals scanner parentheses system dot n
99:12 - closed parentheses int N equals n dot
99:16 - next int int R equals n dot next int int
99:21 - I equals R system dot out dot print 0
99:29 - for int J equals 0 J is less than n
99:32 - minus 1 J plus plus I plus equals R
99:38 - system dot out dot print space um what's
99:51 - interesting about this particular
99:52 - solution that I like and it may have
99:53 - been in other ones I didn't notice is it
99:55 - there always have a 0 to start so this
99:58 - is starting with the 0 so that then you
100:01 - can just put the space beforehand and
100:03 - the last one won't have a space after it
100:05 - so this is one way of getting around
100:07 - that trim by like always starting with
100:09 - printing the 0 this is also interesting
100:11 - instead of accumulating all of the the
100:16 - string and then printing it out all at
100:17 - once print in Java if you don't use
100:21 - print L and it prints it as an
100:23 - individual character without a line
100:24 - break and so you can actually print the
100:26 - elements one at a time which is kind of
100:28 - nice so thank you very much wonderful
100:33 - this was fun for me my half here's my
100:35 - feedback about coding game I I would be
100:39 - interested in a similar sort of
100:41 - mechanism for with with less with
100:47 - creative output and I would like to
100:49 - think about ways to make this feel less
100:51 - like a competition and more like a
100:54 - collaboration so that's something but
100:55 - but these are fun and maybe we'll do
100:56 - that we'll do more of these in a future
100:59 - challenge el capitán did I not look at
101:01 - yours oh I miss
101:03 - sorry Thank You El capitán Soho captain
101:07 - oh my captain start with an array and
101:10 - just so this is really nice this and by
101:13 - the way I wonder if I could use there's
101:14 - got to be a way to use fill like the
101:17 - array fill function or like the cube of
101:20 - some of these higher-order functions
101:24 - people are asking for another one but I
101:28 - I have to go and I will just talk about
101:30 - ml5 neuro evolution people seem to
101:33 - really enjoy these I'm thinking I'm
101:48 - thinking alright uh so I would be happy
101:53 - to do more of these and may it's
101:56 - possible it's possible that I could even
102:01 - consider doing some live streams that
102:03 - are just doing these see I'm thinking
102:07 - about it I'm enjoying this exploration
102:09 - please one more you guys are just like
102:13 - PTSD here because I'm reading where I'm
102:17 - reading all the books of Harry Potter
102:18 - out loud I'm on the fourth book right
102:20 - now oh if you haven't heard of Harry
102:23 - Potter it's if you just never mind make
102:26 - a bad joke they're always like one more
102:33 - one more one more chapter
102:36 - I have such trouble saying no and I'm
102:38 - feeling the same sort of thing yeah so
102:40 - by the way
102:42 - Koby who's one of the viewers if you
102:44 - join the discord has been streaming
102:46 - these coding clashes on Twitch I know
102:49 - that I'm CJ has been doing them and so
102:51 - this is something that could absolutely
102:53 - people could do just in the community in
102:55 - the discord without anybody streaming
102:57 - them and that sort of thing so I would
102:59 - encourage you it's a nice activity for
103:01 - people to learn and enjoy an experiment
103:03 - with each other
103:03 - it certainly is fun yeah so everyone's
103:09 - saying Plus would all right all right
103:10 - fine
103:15 - then I'll just I'll do one more but then
103:18 - I'm gonna and then I'm just gonna I'm
103:19 - gonna do an overview of the neural
103:20 - evolution stuff and just to let you know
103:22 - it's heavy okay fine one more one more
103:24 - one more okay ah so Kobe but Kobe gave
103:30 - me a important note so we do we're doing
103:36 - these in in the coding train discord
103:38 - which just the link will go into the
103:41 - chat now we do code clashes regularly on
103:43 - discord just join the discord and do tea
103:46 - oh there's a bot so if you type it on
103:49 - the discord TR exclamation point clash
103:52 - so train exhibition clash you get
103:54 - notified when o defied when there's a
103:56 - clash and people can stream them
103:58 - actually just in the discord so you
104:00 - don't even need to like have a twitch
104:01 - account or a YouTube account or anything
104:03 - and then mods can use TR exclamation
104:06 - point clash ping URL to notify clashers
104:09 - that one has started so okay yeah yes
104:15 - all right so fine I'm gonna do one more
104:17 - but let because I wasn't clear I
104:19 - literally feel like I'm talking to my
104:21 - kids right now just because I I wasn't
104:24 - clear I didn't make it clear I didn't
104:26 - say this was the last one so this will
104:28 - be the last one I will do but I pop in
104:31 - on discord and do them all so bum
104:33 - without while I'm not live-streaming so
104:35 - let's do one more okay one more one more
104:41 - so what I'm going to do again I saw some
104:44 - of you did the second one who did the
104:46 - first one right now I don't have any
104:48 - BOTS or system set up to sort of enforce
104:51 - this is just were this is the honor
104:52 - system
104:53 - if you've already joined one of these I
104:55 - would ask that you not join this one and
104:59 - if you're feeling like shy and you might
105:02 - get it wrong I really want you to do it
105:04 - I think it's much more interesting and
105:07 - fun when we're all struggling and making
105:09 - mistakes it's no fun to see 15 of them
105:13 - all somehow done in one minute with one
105:15 - line of code so everybody join in if
105:17 - you've done one before don't join I will
105:19 - do the same thing I'm going to going to
105:22 - post the link to the clash first in the
105:25 - discord as soon as somebody sees it
105:27 - there please just post it
105:29 - to the YouTube chat and they'll it'll
105:31 - that all sort of like that'll be our
105:33 - system for right now
105:35 - okay so I'm going here I'm going to
105:40 - create a new clash here we go
105:53 - well I'm muting my microphone for a sec
106:03 - there's another like streaming zoom
106:07 - thing going on in the next room it
106:09 - starts it new that's another reason why
106:11 - I have to get off at noon but noon is
106:13 - almost fifty minutes away
106:16 - and let me go and do one more shove code
106:26 - I can never find the plates to start one
106:32 - okay here we go
106:34 - start a private one I've got it it's
106:39 - going into the discord there it is and
106:43 - there we go so if someone wants to post
106:49 - that into the YouTube chat and we'll see
106:54 - people join Simon I think you were in
106:59 - the first two Simon I know you've gained
107:04 - your enthusiasm is infectious and
107:05 - wonderful and I understand why you can't
107:07 - resist di love your rainbow icon we've
107:12 - got a bunch of people here I love that
107:14 - there's a kitty cat there reverse mode
107:16 - okay mmm weird what is going on here
107:22 - four becomes 24 1 becomes 1 2 becomes 2
107:30 - 3 becomes 6 5 becomes 1 20 I'm really
107:35 - stumped
107:41 - I'm quite stumped with this one
107:48 - something do with the prime number or
107:50 - the number of defective I know oh wait a
108:00 - second
108:00 - 1 times 1 is 1 2 times 1 is 2 3 times 2
108:04 - is 6 4 times 3 is 12
108:10 - no 5 times 5 fact 4 1 times 1 is 1 2
108:20 - times 1 is 2 3 times 2 is 6 4 times 3
108:25 - times 2 is 24 factorial okay factorial
108:30 - oh this is great because this is a nice
108:32 - this is fun for us to learn recursion so
108:36 - there's a lot of different ways you can
108:37 - write the factorial so this is I'm going
108:42 - to take some time here to explain this
108:47 - I'm sure everybody in the chat had it
108:49 - way before I did but let's take a minute
108:53 - here this is a nice little excuse to do
108:55 - a little lesson oh hello everybody
108:57 - welcome to today's lesson today's lesson
109:00 - will be on factorial factorial of the
109:07 - number n for example is defined as n
109:16 - oops sorry n times n minus 1 factorial
109:22 - this is a wonderful beautiful thing what
109:27 - it means is that I'm defining factorial
109:30 - according to itself this is the concept
109:34 - of recursion I am defining something by
109:39 - its own thing itself it's like a thing
109:42 - that you shouldn't be able to do right I
109:44 - can't say that the definition of
109:46 - factorial is factorial itself but yet I
109:50 - can and this is like a thing that
109:51 - appears in mathematics in nature this
109:55 - these recursive algorithms you know I
109:57 - have a lot of videos that draw these
110:00 - recursive trees like the idea of a
110:02 - branch is defined as a line segment
110:06 - that's connected to two branches which
110:08 - are therefore each connected to two
110:09 - branches which are therefore each
110:11 - connected to two branches and so on and
110:13 - so forth so while with factorial you
110:16 - could see how if I have five factorial I
110:19 - have 5 times 4 times 3 times 2 times 1
110:22 - and 4 factorial is 4 times 3 times 2
110:25 - times 1
110:26 - right I could definitely write a loop to
110:28 - do this but there's a way that I could
110:31 - actually write a recursive function now
110:33 - one thing I didn't mention this
110:34 - definition is incomplete because I also
110:36 - have to say 1 factorial equals 1 1
110:41 - factorial equals 1 because this would
110:44 - otherwise go on to infinity so let's try
110:48 - to write this as a recursive function
110:50 - for my solution and we'll see if anybody
110:58 - will see if anybody chooses to do it
111:01 - with a loop or in a different way so I'm
111:02 - gonna write a function I'm gonna call it
111:05 - factorial and it's going to receive a
111:08 - value and I'm going to return I'm going
111:10 - to use exactly this definition right
111:13 - here factorial is defined as n times n
111:18 - minus 1 factorial so if I go back to
111:22 - here I'm gonna say return n times n
111:25 - minus 1 o times factorial of n minus 1
111:30 - now if this were actually if I had this
111:34 - as my code I'll this is the equivalent
111:36 - of having an infinite loop it's a loop
111:38 - with no exit condition because factorial
111:40 - of 5 is 5 times 4 over 4 to step forward
111:44 - 5 for cents about 3 to 2 1 0 negative 1
111:46 - so I need to say you came back to see me
111:50 - my puppers is here it's gonna have a
111:53 - little nap there she actually you know
111:55 - it's also time for there's so many
111:56 - reasons why I have to end at noon it's
111:57 - like I also got to take her for a walk
112:00 - if you haven't met Gloria she will be
112:03 - making an appearance
112:04 - the next coding in the Cabana video
112:05 - which will be out it's soon at some
112:08 - point um so I also need to say if n is
112:14 - zero I really if it's one alright why
112:17 - don't we say if it's less than or equal
112:19 - to 1 return 1 else returned and by the
112:25 - way I never write code this way but an
112:28 - if statement if there's only one line of
112:30 - code coming after it you don't need the
112:32 - curly brackets but I don't like to do
112:34 - that I like two things to be as long
112:36 - winded I also I can't deal with the four
112:39 - spaces so I will correct coding games
112:42 - editor which is clearly doing it
112:44 - incorrectly but you know what you be a
112:46 - rebel use three space tabs that's what
112:49 - you should do and now I should be able
112:51 - to say console.log factorial of n what
112:56 - did I I'm sure I got something wrong
112:57 - let's see let's run some of these tests
113:01 - Oh success success success success
113:09 - oh it's doing a lot of tests there all
113:11 - right okay you know what let's do this
113:17 - in a different programming language that
113:19 - I don't know should we try it in C let's
113:22 - try it and see
113:23 - I do def we don't know closure what is D
113:31 - I've never even heard of that Python I'm
113:34 - afraid
113:35 - let's try C oh it's just like if I go
113:39 - back to JavaScript as my answer still
113:41 - there thank goodness or let's try C okay
113:48 - how do I write a function int factorial
113:52 - n is the same thing going to work return
113:58 - and return n times factorial n if n is
114:07 - less than or equal to 1 return 1 else
114:11 - return this int and scan and print F
114:17 - answer so oh isn't there like a way
114:21 - don't I don't I have to do like int
114:24 - answer equals factorial of N and then
114:31 - how do you print something in in C print
114:35 - F like don't you do something weird
114:37 - where you like isn't it something weird
114:40 - where you do like oh yeah it's like
114:43 - scanf % d cuz I'm printing a number and
114:47 - then I give it the memory address of
114:50 - answer is that what I do no return oh I
115:02 - need a semicolon ha ha
115:04 - got to have your semicolons in see oh
115:07 - there's and I'm being told by the way
115:09 - that there's loads more languages whoa
115:11 - oh I wouldn't do PHP let's check no hair
115:24 - reading Vanessa memory Oh int and I have
115:36 - to give it a datatype No
115:45 - % D and I did that is this function not
115:54 - available segmentation fault function
115:58 - factorial cannot access memory and
116:01 - address on line 23 and what's wrong with
116:12 - this C code no ampersand here no but
116:18 - that's not the issue like this works
116:25 - something about the way I define my
116:27 - function is incorrect but that's not the
116:34 - error
116:41 - Oh Oh fat n minus one thank you no
116:48 - expected found five expected - oh right
116:55 - this is how I'm not putting the answer
116:57 - okay
117:06 - forgot about n minus one okay
117:11 - and I think by the way I'm supposed to
117:14 - put the backslash n here but big deal
117:16 - okay let's checks it again test it again
117:19 - and now I will submit my C code or
117:23 - should I submit my JavaScript I'll just
117:27 - submit this and we'll take a look at
117:29 - some other examples let's look at Oh
117:34 - Java so this we're seeing that this is
117:38 - the way of doing it with a for loop so
117:40 - this is not doing it with recursion you
117:43 - could just start with one and multiply
117:44 - all the values together all the way up
117:46 - to the last number and print out the
117:48 - result that's fun thank you for that we
117:52 - could this is using what Scala reduce
117:58 - whoa so reduce must be similar to
118:04 - there's a reducing JavaScript right is
118:07 - that this yeah the reduce I kept seeing
118:08 - accumulator but there's like so reduces
118:11 - a way of performing an operation like if
118:13 - you wanted to add up all the values in
118:15 - an array in JavaScript the reduced
118:17 - function will allow you to do that by
118:19 - defining like a callback function it's
118:21 - cool it's known as a higher-order
118:22 - function I'm not able to explain this
118:24 - right now but if you search for a
118:26 - higher-order coding train you'll find
118:28 - that I have a bunch of video tutorials
118:29 - on higher-order functions and then high
118:31 - mpj with a very different look this most
118:33 - from 2015 all right thank you
118:37 - so this is cool to see Scala which has
118:39 - this interesting object solution
118:41 - thingamabob let's look at a me good
118:44 - child in JavaScript welcome any good
118:47 - child to the live stream let's take a
118:50 - look at your code and here we go a
118:53 - lovely but beautiful
118:55 - for loop this is nice so the recursion
118:57 - was an interesting fun little digression
118:59 - that I enjoyed doing but this is a
119:01 - really nice way to write this I'm
119:04 - wondering if anybody used the reduced
119:06 - function in JavaScript bash bash whoa
119:11 - that's pretty cool do is this a do-while
119:13 - loop is this do-while loop I love it you
119:20 - use the to a while loop I never can find
119:22 - reasons to use do-while loops you can
119:24 - see using bash just just surprise you
119:26 - with some random language I realize
119:28 - there's a flaw here and I guess is that
119:31 - I I usually if I'm having things that
119:34 - viewers are sort of like collaborating
119:36 - with during a live stream I usually like
119:38 - to check them in advance and I suppose
119:41 - people could get there do some trolling
119:46 - in the comments but so far where this is
119:47 - working out well auto generated code
119:51 - below this is Python once again nice for
119:55 - in range I love these for in range loops
119:58 - that I'm seeing in Python filmer this is
120:01 - see maybe it's C++ so once again now I
120:07 - know this is not bit shifting this is
120:08 - getting input and a nice little while
120:10 - loop to multiply everything up while and
120:14 - that's interesting so the exit condition
120:17 - and as an integer when it gets to zero
120:19 - evaluates to false and then exits that
120:22 - loop that's a pretty cool thing I love
120:24 - that Simon once again here we are we see
120:28 - in Python ah recursion look little train
120:31 - whistle for recursion did not forget to
120:34 - say factorial n minus 1 instead of n I
120:36 - like that do you have this : with the
120:38 - if-else def def firts like to find a
120:41 - function lovely lovely
120:43 - gotta love that Python stuff here's
120:45 - another one uh and
120:55 - see mascot factorial
120:59 - I suppose that's is that in JavaScript
121:02 - too
121:09 - I guess it's yeah I don't think it's
121:11 - there's math dot factorial in JavaScript
121:14 - that's great and Sybil another recursive
121:20 - function in Python that is great to see
121:22 - and we've got another one here whoa I'm
121:32 - not sure why this one maybe didn't work
121:34 - it looks good to me
121:37 - system.out.print line so I'm not sure
121:39 - why this one didn't pass the tests but
121:42 - it looks right and we've got one more CC
121:47 - well wait and see if CC how much time is
121:51 - left in this one twenty seconds all
121:53 - right CeCe
122:12 - okay everyone um thanks for tuning in
122:15 - today I I have one more thing on my
122:19 - agenda I'm out of time I'm over time oh
122:22 - now we see um CeCe's coat appeared and
122:28 - factorial n int number I think the issue
122:33 - here and I don't know C sharp but my I
122:35 - think what's missing here why this
122:37 - didn't work is number probably needs to
122:38 - be initialized to 0 because otherwise if
122:43 - in JavaScript for example will be
122:44 - undefined and even if you're correctly
122:48 - multiplying accumulating and multiplying
122:51 - this with the numbers together to do
122:53 - factorial if you don't start with a
122:55 - number and actually shouldn't be
122:58 - initialized to 0 it needs to be
122:59 - initialized to 1 because oh but number
123:04 - equals n times I oh but you're not so
123:07 - this should be number equals 1 and then
123:11 - number equals itself times I and I
123:14 - starts at n so I think this is just
123:16 - there's a little bit flaw in this
123:18 - solution it's a great start because it's
123:21 - really the right idea we start with a
123:22 - number we have to one at a time start
123:25 - from that number and go down to 0 but
123:28 - not at 0 multiply the values together
123:30 - and return the result so this I think if
123:33 - I'm right this should be number equals 1
123:36 - then number equals number times I and
123:42 - then return number so that's what I
123:45 - think it should be returned and
123:46 - certainly isn't right because that's
123:48 - what's coming in so and it might help
123:50 - you to have this be like answer because
123:52 - they think of it as like oh it's the
123:53 - answer that I'm multiplying things into
123:55 - and it's just the starting point of the
123:57 - factorial itself great work I'm so glad
124:00 - yours came in see see right there at the
124:02 - end and we were able to look at it I
124:04 - hope that was helpful to you thank you
124:07 - for participating big heart
124:11 - alright so the thing that I didn't get
124:14 - to is ok because I'm just going to show
124:17 - it to you real quick and I would I'm
124:22 - going to come back and do a proper
124:23 - tutorial
124:24 - with it at some point soon but right now
124:27 - let me just open up I term then I gotta
124:31 - go take the dog for a walk see the kids
124:33 - lunch do some other activities get on
124:36 - with my day so so this is gonna this is
124:42 - there's no good segue for this because
124:44 - I'm just like leaping into a totally
124:45 - different world but a library a machine
124:49 - learning a JavaScript library that I
124:50 - spend a lot of time working on is called
124:53 - ml5 Jas so if you haven't seen ml5 j/s
124:56 - you can find out more about it by just
124:58 - going to ml5 j s org now I have made let
125:05 - me see oh sorry
125:12 - if you go under learning under ml5
125:15 - beginners guide I have all of these
125:17 - video tutorials and in particular I want
125:19 - to highlight the ones that are related
125:24 - to ml v neural network so ml v neural
125:27 - network ml v neural network is a class
125:32 - that allows you to train a neural
125:34 - network with a data set right there in
125:36 - the browser and ml v is a wrapper around
125:39 - 10 to flow j yes and I've talked
125:41 - extensively spent way too much time in
125:44 - all these videos on this stuff so one of
125:47 - the one of the video that I have on my
125:49 - channel neuro evolution just search for
125:53 - neural evolution coding train I have
125:55 - done several iterations of this concept
125:58 - of neuro evolution which is idea of
126:00 - evolving a neural network to perform a
126:03 - task in some kind of simulation so years
126:08 - ago I made this like toy JavaScript
126:09 - neural network and made some neural
126:11 - evolution videos with that that's this
126:12 - 11.1 excuse me
126:14 - I did a coding challenge with flappy
126:16 - bird and somewhere here if I add
126:19 - tensorflow J s to this Google search
126:24 - you'll find there's even a video then
126:27 - that's neuro evolution flappy bird with
126:29 - tensorflow J's so this consort this this
126:32 - concept I've made videos about ad
126:33 - nauseam but what's exciting what's new
126:36 - here is that I have been working on
126:39 - adding neuro evolution features to the
126:43 - ml 5 library that will make working on a
126:46 - neuro evolution project much simpler so
126:49 - I'm gonna just go here under pull
126:51 - requests under closed you can read about
126:55 - this in two pull requests one is this
127:02 - one here new neuro evolution
127:04 - functionality then there then also this
127:07 - neuro evolution moot eight fix so you
127:09 - can you can kind of follow the progress
127:12 - I've kind of written about what it is I
127:15 - was doing and apologies that I'm
127:16 - covering that part of the screen here in
127:18 - terms of how the API works and you can
127:23 - sort of like false see some of the code
127:24 - changes this is not in the newest
127:27 - release of ml five but I just want to
127:29 - show you a new example that I made and
127:31 - if you bear with me
127:50 - so by the way one thing just to point
127:52 - out here is I have the ml 5 github repo
127:56 - cloned downloaded to this laptop that
127:59 - might be something that's totally
128:00 - unfamiliar to you if it if it is
128:02 - familiar to you and you want to try out
128:04 - this neural evolution feature you can do
128:07 - so by um building the library yourself
128:10 - so if you download the library navigated
128:13 - to to your console type in NPM install
128:16 - which I will do right now and then if I
128:29 - do NPM run build this is actually
128:34 - building the library
128:35 - I already did this so I shouldn't I
128:37 - should probably just takes quite a while
128:38 - actually
128:41 - so since I did this I'm gonna just quit
128:43 - it if I go into that directory you
128:46 - should see Oh weird it's gone usually
128:50 - there's a distribution folder from when
128:52 - I build it maybe it's maybe I didn't
128:54 - build it here uh sorry I built it I
128:57 - built it in a different like on a
128:59 - different computer log in a different
129:00 - way so let me actually build it while
129:03 - I'm doing that you can also say NPM run
129:05 - start and what NPM runs start will do
129:08 - and these are all commands that are
129:10 - related to node package manager NPM this
129:12 - is actually also going to build the
129:14 - library but it is going to locally host
129:17 - a version of the library at localhost
129:22 - 8080 ml v j s so you can see now this is
129:26 - actually the built library that is built
129:29 - and what I can do is I can take a look
129:32 - at some of the examples I'm going to go
129:33 - into the examples directory into p5.js
129:36 - I'm gonna run a server and I'm going to
129:40 - go to neural network and there are three
129:43 - new neuro evolution examples that you
129:46 - can take a look at and again I'm going
129:48 - to eventually make video tutorials to
129:51 - walk through all these bind by line and
129:54 - build them up slowly to explain them
129:56 - right now I just wanted to show
129:57 - people who might be interested that
129:58 - they're there in case you want to dig
130:00 - into it and contribute or play around
130:02 - with them see how it works for you
130:04 - but before I click on this example I
130:07 - want to show you what this is based on
130:10 - so in the nature of codebook in if
130:17 - you're not familiar with this is a book
130:18 - about physics and simulation in
130:20 - processing and p5.js which you can read
130:23 - all at this website so there is a
130:26 - particular chapter here chapter 9 which
130:28 - is about genetic algorithms and one of
130:30 - the examples in Chapter 9 nothing to do
130:33 - with neural networks is this particular
130:38 - example evolved flow field so what this
130:44 - example is doing is each one of these
130:47 - particles has inside of itself this
130:50 - genetic information this genetic code
130:53 - and that genetic code is actually an
130:55 - array of vectors that are covering its
130:58 - world so and then when they're born it's
131:01 - random when the first population is born
131:03 - it's random but I'm using this
131:05 - evolutionary technique to take particles
131:10 - take these creatures that happen to be
131:13 - born with a set of vectors that push
131:16 - them farther towards that target that
131:18 - are getting further along the way to
131:20 - that target over a period of time and
131:22 - I'm mutating those and passing them off
131:24 - to the next generation and over time the
131:27 - system will evolve to have these
131:29 - particles kind of make a beeline
131:31 - straight across the screen to the target
131:32 - so this is something that's covered in
131:34 - the nature of code book and I've made
131:36 - videos about how to build this example
131:38 - incidentally I'll note that this example
131:40 - you can actually draw obstacles and it
131:45 - will continue to adapt this I made it
131:47 - quite difficult I'm gonna just like
131:49 - before I go I'm gonna just leave this up
131:52 - in the corner here and I'll check in on
131:54 - them they will like adapt and eventually
131:58 - be making it to the end so I'm just
132:00 - gonna leave that running there so what
132:03 - I'm working on now right inside each one
132:06 - of these particles brain is a literal 2d
132:09 - array of vectors but in a lot of cases
132:14 - and a lot of types of game and
132:17 - simulation environments the search space
132:21 - for what it needs to know about might be
132:24 - so vast that it couldn't possibly hold
132:27 - inside of its brain like here it's
132:32 - possible for me to just have it's like a
132:35 - a brute-force have every single particle
132:38 - know about a vector everywhere in the in
132:40 - the space but what if I had an infinite
132:42 - space or what if the environment wasn't
132:46 - just about like I just need to know
132:48 - where my XY is what if there's a lot of
132:50 - things I need to sense that could be in
132:51 - an infinite number of configurations
132:53 - throughout my environment so what if
132:55 - instead I had a neural network that
132:58 - could just receive some inputs like what
133:00 - if it receives in this case its XY
133:02 - location and the neural network
133:04 - estimates a vector that should come out
133:06 - of where it should be going based on its
133:08 - location which could be translated to
133:10 - things like not its location but like
133:12 - it's you know its relative location to
133:16 - other you know predators or prey or food
133:18 - or poison you can imagine all sorts of
133:20 - times of ecosystems and scenarios you
133:22 - could evolve that neural network could
133:25 - output where to go now
133:26 - traditionally this is the domain of
133:28 - reinforcement learning so you might have
133:30 - a reward based system and use this
133:32 - reinforcement learning technique to
133:34 - optimize and train the neural network to
133:36 - make the best decisions in the space but
133:38 - ma the technique that I'm exploring is
133:40 - neuro evolution so what if I make a
133:42 - population like this give them all a
133:45 - brain and ask them to over generation
133:49 - over generation evolve and so I'm just
133:52 - giving you this sort of like high-level
133:53 - picture of this and let me show you the
133:56 - example that I'm working on that does
133:57 - this so if I go back to here and I go to
134:01 - neuro evolution path this is the let me
134:04 - go back to here this is the example
134:07 - right now running now it's not as
134:10 - sophisticated as this one and let me
134:12 - also make this run much faster it
134:15 - doesn't have obstacles but each one of
134:18 - these particles has a neural network
134:20 - that gets two inputs the two inputs
134:23 - are its XY location in the space and the
134:26 - output is a vector telling it what its
134:29 - velocity should be so over time you can
134:31 - see that they together are sort of
134:33 - finding their way towards this target
134:34 - and I'm actually just going to click up
134:36 - here going to move the target you're
134:38 - gonna see that they're gonna start to
134:39 - evolve to change to change and follow
134:42 - and move up towards the the green target
134:44 - now that's in the top right so let me
134:46 - just show you a couple bits and pieces
134:47 - in the code of this example and then I'm
134:52 - gonna be done for today I'm gonna come
134:54 - back you know and I'm still working on
134:58 - this and try to make some videos about
134:59 - it where am I
135:01 - here so let me open this up in Visual
135:04 - Studio code and let me go to neural
135:10 - network exam neuro evolution path
135:15 - particle so the idea is that you know
135:19 - this particle like all my examples to
135:21 - flow typically have like a physics
135:23 - engine in them where a particle has
135:25 - maybe a position it's very much like by
135:27 - the way this is exactly like the smart
135:29 - rockets coding challenge I forgot I
135:31 - forgot about that one this is basically
135:32 - redoing the smart rockets count just not
135:34 - calling it smart rockets but in all my
135:36 - physics examples particles have position
135:38 - acceleration and velocity so you can see
135:40 - that there it's just like any of the
135:42 - particle in system examples I have
135:43 - countless videos and examples of pound
135:45 - what's new is these particles now have
135:49 - this neural network so I could just make
135:52 - a neural network brain and what do I
135:54 - have I have two inputs because the
135:56 - inputs are it's x and y location and I
135:59 - have two outputs its outputs are its
136:04 - outputs are so the two these are the two
136:06 - inputs x and y the output is a vector so
136:10 - one so I need two numbers for that
136:13 - because sorry if the output is a vector
136:16 - one number I'll use for the angle of the
136:18 - vector and another number I'll use for
136:20 - the magnitude because one thing you'll
136:22 - actually notice is they learn to slow
136:24 - down when you reach the target you'll
136:26 - see this there they actually learned
136:29 - like to like sort of reach it more
136:31 - slowly oh you can't see that right now
136:32 - so so you can see now they've they sort
136:35 - of switched to the target
136:36 - there I'll click down here so we will
136:38 - see them adapt again again this is a
136:40 - very trivial scenario like them just
136:43 - using their XY to find out like a
136:45 - straight line to a path but it's it's to
136:48 - me that's this is my study to prove that
136:51 - the concept can work and in theory that
136:54 - we could have a much more sophisticated
136:55 - environment ecosystem where they will
136:58 - learn so let me just show you here so
137:03 - here they get this note now you
137:04 - shouldn't be confused by the fact that
137:06 - these are both the number two that's
137:08 - just kind of a coincidence in the
137:09 - scenario in flappy bird for example I'll
137:12 - show you that in a second there's five
137:14 - inputs because the bird is looking at
137:16 - its location its velocity in the Y
137:18 - Direction the nearest obstacle where the
137:21 - pipes are so there's I'll show you that
137:23 - scenario in a second but what I think
137:24 - what's what's new here is this so in
137:27 - this function think it's basically this
137:31 - is using the neural network and let me
137:34 - see if I can give myself some more space
137:35 - here the it's making in our input array
137:40 - which is it's x and y position
137:41 - normalized to the width and height of
137:43 - the canvas the out it sends it to the
137:46 - brain predict sink is the function for
137:49 - getting synchronous output from the
137:51 - neural network it goes into this outputs
137:53 - array the first output value I
137:55 - multiplied by two pi to get a vector
137:58 - with an angle and then the second and
138:01 - then the second value I multiply the
138:04 - velocity vectors length by that value
138:08 - times five so this is really first I set
138:10 - create a vector with a direction and
138:12 - then I scale it according to the second
138:14 - output so that's what I'm getting here
138:16 - and then what's different is I what's
138:20 - new here with the genetic algorithm you
138:21 - this is in all of my genetic algorithms
138:23 - examples but I have this I have this
138:28 - sorry this is the function that I want
138:32 - to look at I have this is I have this is
138:40 - exactly the same as all my genetic
138:41 - algorithm examples that walk through
138:43 - this algorithm that I'm gonna skip going
138:46 - over right now but basically what's new
138:49 - is ml five
138:50 - has a crossover function so if there are
138:53 - two these are two ml five neural
138:55 - networks I can mix their weights
138:57 - together that's what crossover does it
138:59 - mixes the weights and then the mutate
139:02 - function will 1% of the time tweak a
139:05 - bunch of the weights and I can make a
139:06 - new one so each generation there's you
139:09 - don't have to implement mutation and
139:11 - crossover yourself you could just pick
139:13 - the the particles you want the ones that
139:16 - got closest to the target reuse them and
139:18 - mix and match them for the next
139:20 - generation and the system will evolve so
139:22 - I mean there's lots of missing pieces
139:24 - here you would if if this is completely
139:26 - new to you you would want to look at my
139:28 - genetic algorithms coding train videos
139:31 - so I have a set of videos that go
139:33 - through genetic the genetic algorithm
139:36 - process in detail and then I have videos
139:39 - that go through the neural network
139:40 - process in detail oh they're almost
139:42 - there right look one of these has almost
139:44 - made it to the end and so this is just
139:46 - something new that I'm working on but
139:47 - what I my next step and the reason why
139:50 - I'm mentioning this is some of you might
139:51 - have ideas for this is I think this
139:53 - population class right now in the
139:55 - example I'm making my own population but
140:01 - I think it might make sense for me to
140:03 - say something like population equals ml
140:06 - five neuro evolution or maybe maybe it's
140:13 - ml five population because all of these
140:16 - functions that are like calculate
140:18 - Fitness and reproduction all the stuff
140:20 - that I've got in my code itself I think
140:23 - that's thing I could it's really just
140:24 - going to be the same for every example
140:26 - so the new thing that I added to ml 5 is
140:29 - the mutate and crossover functions and
140:30 - the next functionality before I finish
140:32 - these examples off and make tutorials
140:34 - about them is maybe adding and it's
140:38 - maybe is adding an ml 5 neuro evolution
140:43 - in our population function I haven't
140:44 - figured that out yet so that's coming
140:47 - and so I just wanted to share that with
140:49 - you just so you see what the other
140:51 - example is the other example is where
140:57 - where am I here
141:02 - by the way the reason it had involved
141:04 - yet because I hid the tab and the
141:05 - animation chefs down when I do that
141:07 - that's why I keep think this one open
141:08 - come on make it to the end I want you to
141:10 - make it to the end so I can log off this
141:12 - livestream I remember I'm a
141:13 - completionist if they haven't solved it
141:15 - and I can't father I can't shut off the
141:18 - stream so this is the flappy bird
141:21 - example which you know I've done
141:22 - countless times if I let this run for a
141:24 - little while it's just again this is
141:27 - each generation of flappy birds trying
141:29 - to sort of figure out when they whether
141:32 - it should jump or not jump based on its
141:34 - environment that it's in and at some
141:36 - point soon we'll probably get one that
141:38 - will start to go for a long time usually
141:43 - it'll it refines a solution much more
141:46 - fat much more quickly so you can these
141:51 - are two pretty good ones so you can see
141:53 - these come on you can get up there yeah
141:54 - good work so this is using neural
141:57 - evolution to basically you know to play
142:01 - flappy bird and just looking at the code
142:03 - for this one what you would see that's
142:06 - different if I go into the bird class
142:09 - you'll see there are five inputs the
142:12 - other thing is this is classification
142:14 - because the only thing the bird has to
142:16 - do like unlike getting a vector which is
142:18 - a regression what angle what magnitude
142:20 - it's just one of two options up or down
142:23 - so it's a classification problem you can
142:25 - think of it like if you had a fewer
142:26 - training a neural network to play
142:28 - pac-man up down left or right so it's a
142:33 - classification problem the outputs are
142:35 - labels and then you can see here in the
142:37 - think function it's basically taking
142:40 - five properties features of the
142:42 - environment its Y location the closest
142:45 - pipes top and bottom
142:46 - the closest pipes X location its current
142:49 - velocity and then sends those into the
142:52 - neural network and if what it gets back
142:54 - is up then it calls an up function which
142:56 - causes it to jump so I wanted to show
142:58 - you these examples there there join the
143:00 - discord if you're having trouble finding
143:02 - them or knowing how to like access them
143:04 - I'm not finished with them which is why
143:06 - I'm not doing a full tutorial about them
143:08 - yet but you know sometime eventually
143:11 - hopefully that will be coming on this
143:13 - channel so I'm going to get
143:15 - going but oops no I wanted to leave this
143:25 - open I walk in I'm not going to turn off
143:26 - the stream until they've solved it it's
143:29 - this one that I want can I do this okay
143:33 - so um come on so one of the one of the
143:38 - flaws by the way there's a flaw like you
143:40 - can think about why is it why is it
143:42 - having so much trouble like finding the
143:44 - solution whoo that was a good that was
143:46 - good that was a very good thing that
143:47 - happened
143:48 - the reason it's having so much trouble
143:50 - is that the Fitness is the distance to
143:53 - the target and so unfortunately right
143:56 - here is actually like right here is
143:59 - actually closer to the target than up
144:01 - here but it's much better for it to go
144:03 - up here so it has a chance so I have to
144:06 - through the mutations I have to get
144:07 - lucky and have a bunch of them like
144:09 - figure out to make it around you can see
144:10 - that one just did so I think this is
144:12 - actually gonna finish really really soon
144:13 - I'll see if I can answer a few questions
144:16 - before I go anything in the chat anybody
144:18 - have any questions about these neural
144:20 - evolution examples and then I'm gonna
144:22 - sign off for today well in like a half
144:24 - an hour over
144:32 - oh they made it what timing the little
144:38 - little those little particles they made
144:40 - it to the end you can see do they
144:43 - actually make it there or just really
144:45 - close I don't know if they've actually
144:47 - made it there let's zoom in and see it
144:50 - doesn't look like you've actually made
144:51 - it but for all intents and purposes I
144:56 - feel like they've made it
144:58 - am I still streaming yes can you make a
145:10 - video about chess machine learning well
145:12 - that'll be hard but maybe someday thanks
145:15 - everybody for tuning in this is my new
145:17 - plan is to try to stream once per week
145:20 - eventually at a regular time to show
145:22 - community contributions to show things
145:25 - that I'm working on more informally and
145:29 - then I'll be doing some recording
145:32 - sessions making specific video tutorials
145:35 - and by the way for the supporters and
145:37 - discord some of those I will just stream
145:39 - those recording sessions so you can tune
145:41 - in and participate in those that way so
145:44 - thanks everybody I'm going to Heidi I'm
145:51 - glad you like rainbows - not on streamer
145:55 - mode I don't know what that means
145:58 - Oh in discord maybe I am going to go
146:02 - enjoy the rest of our weekend stay safe
146:05 - stay home take care of yourself be kind
146:07 - to each other take some time away from
146:10 - screens if you can but if you enjoy
146:12 - coding and want to engage with the
146:14 - coding drain community here's a link to
146:16 - the discord and I look forward to seeing
146:20 - you all next time goodbye
146:31 - I didn't take a break take a break in
146:34 - the middle
148:43 - Perley noise that it's hardly knowing so
148:45 - this is Hurley noise that it's Hurley
148:47 - noise this is Hurley noise that it's
148:48 - Hurley no so this is Hurley noise that
148:50 - it's hurtling know her pearly noise that
148:52 - it's Hurley more this is Hurley noise
148:53 - that it's Hurley no this is this is
148:55 - Hurley noise that it's Hurley so this is
149:13 - but with Pearlie noise I might pick
149:16 - numbers like this like Portland noise
149:34 - performance part unicorns and rainbows
149:41 - and cupcakes what else is there yes kids
149:46 - thank you very much
149:52 - [Music]
149:58 - [Music]
150:20 - [Music]
150:35 - [Music]
151:02 - [Music]
151:09 - I feel just sort of like a nice feeling
151:13 - relaxation everything's gonna be okay
151:15 - today dream is not broken it has not
151:18 - frozen this isn't this is a wonderful
151:20 - thing okay we're gonna do I'm really
151:23 - getting to something sound
151:36 - [Music]
151:50 - [Music]
151:57 - things
151:58 - [Music]
152:05 - [Music]
152:40 - [Music]