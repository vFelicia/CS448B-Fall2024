00:00 - (bell dings)
00:01 - - Hello, it's (laughs)
Throwback Wednesday.
00:05 - I don't know when you're watching this.
00:06 - It's probably not even Wednesday,
00:07 - but it is Wednesday right now.
00:07 - I am going to do an old-fashioned
00:10 - Coding Train-style Coding Challenge.
00:12 - (train whistle blows)
00:13 - I'm going to attempt to make
the bouncing DVD video logo (DVD Screensaver),
00:16 - and I'm going to attempt
to do it in 10 minutes.
00:19 - I'm sure this one's going
to go horribly wrong.
00:21 - I should never use this timer.
00:23 - Nothing ever, no good never comes from it,
00:24 - but I'm going to try.
00:25 - Here's the one thing I'm excited about
00:26 - here with this challenge.
00:27 - If you're a beginner, if you
have never programmed before,
00:30 - I'm hoping that this is a coding challenge
00:32 - that you could follow
00:33 - and actually possibly
create yourself, but,
00:39 - so beginners, welcome!
00:40 - I'm going to try to talk
through all the concepts,
00:43 - and I'm going to use very few,
the basic beginner concepts
00:45 - of programming in JavaScript
using the P5 library.
00:48 - Go to editor.p5js.org.
00:50 - I'm going to pull that up in a second
00:51 - where I'll be typing the code.
00:52 - So this is the bouncing DVD logo,
00:55 - and I think I got plenty of time.
00:57 - I'm going to wait like
20 seconds just to see
00:59 - if it hits the corner.
01:00 - Come on, come on, oh no.
01:02 - Okay, anyway, I should probably move on.
01:04 - So what do I need?
01:06 - Oh and I wanted to also
do a quick shout out
01:08 - and thank you to Mike
Boyd who learned to code
01:13 - from a lot of different
resources including
01:15 - possibly the Coding Train, I think.
01:17 - Check out this video, he makes
this really awesome game,
01:19 - and also at some point tries
to make a bouncing DVD logo
01:22 - which is where this idea came from.
01:24 - So let me move over to the white board,
01:27 - and just talk through a couple concepts.
01:31 - So I'm going to create something
in HTML called a canvas,
01:36 - and I'm going to use the p5
library which has a nice function
01:38 - for doing that called Create Canvas.
01:40 - And I'm going to make my canvas 800 by 600
01:44 - because this is four, has an
aspect ratio of four by three,
01:49 - 400 times 200 is 800 by 600.
01:53 - And that's the aspect ratio
of old timey television tubes.
01:57 - Not like this fancy YouTube
01:59 - with your like 16 by nine aspect ratio.
02:02 - Whoa, it's so fancy.
02:04 - And then, I need to draw
an image of that DVD logo,
02:09 - and I need to place it randomly
somewhere in this canvas.
02:15 - Its location is going to
be defined by the corner,
02:18 - that's going to be
sorry, it's x,y location,
02:21 - and then I need to determine
when it hits the edge
02:24 - and have it bounce off that edge.
02:26 - And according to my research,
I actually did some research,
02:29 - into the science behind
this DVD logo thing
02:32 - which actually there's
all sorts of formula
02:34 - to calculate the probability
02:35 - of when it's going to hit the corner,
02:37 - and all sorts of stuff like that.
02:38 - I'm going to include
a link to that article
02:39 - in this video's description.
02:41 - It is always moving in a direction
02:45 - where its x-speed, and y-speed are equal.
02:50 - So essentially at a 45, it always starts
02:52 - at a 45 degree angle pointing down,
02:55 - and then ricochets off the edges
02:57 - and maybe someday, hits the corner.
03:00 - I got seven minutes left, let's go.
03:03 - Alright, so the first
thing I want to do is,
03:06 - I already forget.
03:07 - (laughing)
03:09 - Oh, go to the p5 editor.
03:12 - This is editor.p5js.org,
and you can see here
03:16 - I've made a canvas, it's 800 by 600,
03:18 - and I've drawn a background
of zero, that means black.
03:21 - So this draw function is
looping over and over again,
03:24 - and setup is happening just once.
03:26 - Set up the canvas, draw that
background over and over again.
03:28 - So what I need is I need
to keep track of that x,
03:32 - and the y position of the DVD logo.
03:37 - So I need a variable, I need
x to store the x-position,
03:40 - and y to store the y-position.
03:42 - And by the way, the way the canvas works
03:44 - is zero,zero is in the top left here,
03:47 - this is X equal zero, y equals zero,
03:50 - all the way up to x equals
799, so it's 800 wide,
03:53 - zero through 799, think about that.
03:55 - I know I'm going too fast.
03:56 - Check my other tutorials
where I speak hopefully,
03:59 - a little bit slower.
04:01 - Alright, so I'm just going
to set x equal to 400
04:05 - and y equal to 300, and I'm
actually just going to draw
04:07 - a rectangle that's 80 by 60.
04:11 - Sorry, a rectangle at x and y,
04:14 - so this, I want to draw
a rectangle at x and y,
04:17 - and I want the width of
the rectangle to be 80,
04:19 - and the height of the rectangle to be 60.
04:21 - These are p5.js, the
JavaScript live p5.js functions
04:25 - to draw things like rectangles
and circles and lines.
04:27 - You can look them up in the reference
04:28 - which I will also link to
in this videos description.
04:31 - Okay, there we go.
04:31 - Look, there it is, wahoo!
04:33 - Now I need to have something that tells me
04:40 - its rate of change along the x axis,
04:43 - and rate of change along the y axis.
04:45 - I should note that y points down.
04:48 - Y points down, x points to the right.
04:51 - So if this were three, this were three,
04:54 - I heard somebody say,
"oh, in the actual thing,
04:57 - "it moves like 10 units per frame."
05:01 - I don't know, but we can
think of how many pixels
05:04 - does it move down and to the right?
05:07 - So let's try with 10.
05:09 - So I'm going to call that xspeed,
and I'm going to have yspeed.
05:16 - These, by the way, are
known as global variables,
05:19 - so they're variables that I
can use throughout the program.
05:22 - I want to initialize them in setup
05:23 - and then use them in draw.
05:25 - So I'm going to say xspeed equals 10,
05:28 - yspeed equals 10.
05:30 - I need separate variables
because when it bounces
05:33 - on one side, the y continues to go down
05:36 - but the x reverses direction,
05:37 - or when it's on the top
the y changes direction,
05:40 - but the x stays the same.
05:41 - So then, what I need to do,
05:43 - let's just make sure this runs.
05:45 - It runs, what I need to do is
say x equals x plus xspeed,
05:50 - y, and let's just do that.
05:52 - So every time draw is looping, x equals x,
05:55 - oops goodbye, it's gone.
05:56 - Run that again.
05:57 - Look, it's moving.
05:58 - Oh, it's gone.
05:59 - So x is changing every time draw loops,
06:02 - which is like around 30 frames per second.
06:05 - And then I want to say
y equals y plus yspeed,
06:09 - and there we go.
06:11 - It's moving down, you can
see that, it's moving down
06:12 - and to the right.
06:13 - And now, for the exciting part.
06:16 - I mean, isn't this all exciting?
06:18 - I need to figure out
how do I turn it around?
06:23 - So I need to check, there's
something in programing
06:26 - called an if statement.
06:27 - When do I want to turn it around?
06:30 - I want it to turn around
if it hits the edge.
06:33 - If it hits the edge, change the amount,
06:36 - change the value of xspeed,
reverse it's direction.
06:38 - So if xspeed is positive,
06:40 - then xspeed should be negative.
06:41 - So I can say if x equals,
06:45 - and this is a little bit flawed
06:46 - but I'm going to do this right now,
06:47 - equals the width.
06:50 - Width is a variable, by the way,
06:51 - that's keeping track of
the width of the canvas,
06:53 - which is 800, then xspeed equals
xspeed times negative one.
07:00 - Multiply any number by negative one,
07:02 - 10 becomes negative 10,
negative 10 becomes 10.
07:05 - Oh, I only have three minutes left,
07:06 - got to keep moving here.
07:08 - Okay, there we go, look oh boy.
07:10 - Let's add also,
07:12 - a y, if y equals the
height, see what happens.
07:19 - Oh it kind of, what, oh
what's going on here?
07:21 - Let's change where it starts.
07:24 - I'm just going to let it
start a little bit higher
07:26 - so you can actually see.
07:30 - Look, it bounced.
07:31 - But one thing I'm not
taking into an account
07:33 - it's x y position is this corner,
07:36 - so when it equals the edge,
07:38 - it's actually sitting
here off of the screen.
07:40 - So I need to know when this corner.
07:42 - So actually what I want to say is
07:46 - when x plus it's width, which is 80,
07:50 - plus 80 equals width,
then reverse its speed.
07:55 - Look at that.
07:55 - And then when y plus what?
07:58 - 60 equals height, oh whoa.
08:02 - Oh, but I don't want to change the xspeed,
08:04 - I want the yspeed to change when it's y.
08:09 - Boom, boom, oh this is looking good, okay.
08:12 - Now I've got to do the other spots.
08:15 - Well, I can use something
called an else if,
08:18 - so you can say else if x equals zero,
08:22 - xspeed equals xspeed times negative one.
08:27 - But you know what, there's
another way I could do this.
08:29 - I could actually say
or, or if x equals zero.
08:31 - I want to do the same thing.
08:33 - So this weird double pipe symbol means or.
08:36 - So and by the way, to test
if something is equals,
08:39 - I have to use two equals, two equals,
08:41 - and I can actually use three.
08:42 - That's a whole other story,
08:43 - in a one minute I don't
have time to get to it.
08:46 - But there's a reason why
you might use double equals
08:49 - or triple equals, but
just more than one equals
08:51 - is asking the question.
08:53 - So now I'm going to say or y equals zero.
08:58 - Let's look at this,
09:00 - and then I need a closed
bracket, and then let's see.
09:06 - What's going on, I'm
missing something here.
09:08 - Oh, I've got an extra parenthesis.
09:10 - There we go.
09:11 - Okay, there we go, okay.
09:14 - Let me give myself a
little more room here.
09:16 - A little more room here, okay.
09:17 - Here we go, let's run this.
09:19 - Oh!
09:20 - Line 32 token, missing token unexpected.
09:23 - Okay, here we go.
09:25 - Oh no, the bug happened.
09:28 - Oh no.
09:30 - Oh no.
(static fizzing)
09:31 - (bell dinging)
Oh hi, I said
09:33 - I wasn't going to edit anything
09:34 - but I had to take a little
like short break there,
09:36 - because my code disappeared in the browser
09:39 - then the timer went to zero,
but now my code is back.
09:42 - It was some mystical magic
floated into this room,
09:45 - but this is where I was a moment ago.
09:47 - I now have two if
statements checking to see
09:51 - if this rectangle hits the right side,
09:53 - the left side, right
side or the left side,
09:55 - reverse the xspeed, the bottom or the top
09:58 - reverse the yspeed.
09:59 - And Simon loyal viewer, Simon,
10:01 - pointed out that another
way I could write this
10:03 - is just like this.
10:04 - Set the speed equal to negative of itself,
10:07 - and there we go.
10:08 - Now, now for the really exciting moment.
10:13 - Let's get that DVD logo.
10:15 - So I've already downloaded this png file
10:18 - of the DVD logo itself,
10:21 - and what I'm going to
do is I'm going to click
10:22 - on this little arrow here,
10:25 - I am going to add a file,
10:28 - then I'm going to drag
the DVD logo file here.
10:31 - Upload it, I'm going to say I am done.
10:35 - We can see now the DVD
logo is part of my project.
10:38 - So I'm going to add some new code.
10:41 - I'm going to have a variable called DVD.
10:44 - I'm going to add something called preload.
10:46 - Preload is a block of code, a function,
10:49 - where it's good to write
things you want to happen.
10:52 - Like I know I said setup
is stuff that happens
10:54 - in the beginning, preload
is like the pre-setup,
10:56 - and something that I want to do there
10:58 - is like load media assets.
11:00 - So I'm going to say, what
did I call it, dvd_logo.png.
11:07 - By the way, in the meantime,
11:08 - I selected this auto-refresh thing,
11:09 - so that it's rerunning the code
every time I make a change.
11:14 - And now what I can do is
instead of drawing a rectangle,
11:18 - by the way this is a way I
can turn off a line of code,
11:21 - it's really called a code comment.
11:23 - I'm going to say draw the DVD logo,
11:25 - and I can take this exact line of code
11:29 - but instead of saying rectangle,
11:30 - I can say image, and then I can say image,
11:34 - or what did I call it?
11:35 - DVD, at the same location.
11:37 - So look at that, there's the DVD logo.
11:39 - Now I might have messed
with it's dimensions,
11:41 - I can actually just use
it's native dimensions.
11:44 - Oh, but now it's not bouncing correctly,
11:48 - so let's actually look at
what it's dimensions are.
11:50 - I can just in the Apple
finder, I can see it's
11:54 - 128, oh I guessed it, 128 by 76.
11:57 - So I can change those numbers,
11:59 - but the true of the matter
is it's not such a great idea
12:02 - to have hard coded numbers in your code,
12:05 - like 128 and 76, but the nice thing is
12:09 - I can actually day dvd.width.
12:11 - So the image itself the DVD image
12:13 - knows it's own width, and
I can also say instead,
12:17 - plus a dvd.height.
12:22 - And now it, whoa.
12:26 - No?
12:27 - No?
12:28 - Oh boy, I have done something bad.
12:31 - I have done something bad,
terrible, big mistake in coding.
12:35 - Ah-ha!
12:36 - So it's generally not such a good idea
12:39 - to check if something's exactly equal,
12:40 - because you never know,
I'm saying oh, of course.
12:44 - Ah, and oh my goodness.
12:46 - This is really, really bad.
12:47 - So it only worked by accident
12:49 - because oh, I can't believe
I didn't think of this.
12:53 - Because that the multiple, right,
12:55 - if this starts at like 100, and I'm adding
13:00 - 10 to it every time,
and this width is 800,
13:05 - I am going to, at some
point, get to the fact
13:07 - that it's equal to 800.
13:08 - But this width is like 128, x plus 128
13:14 - plus some multiple of 10 is never going to
13:16 - actually end up equaling 800.
13:19 - So I just want to basically, just check
13:24 - if goes passed the width and the height.
13:26 - And I'm not sure.
13:28 - Or what I probably want
to do is resize the image
13:31 - to be something but this
is now going to be fine.
13:34 - Okay, so I can move this console down,
13:37 - I should do this again.
13:39 - (laughing)
13:40 - This is actually what
programming is, by the way.
13:43 - And now, here we go.
13:46 - Bouncing DVD logo.
13:48 - Some things I want to do to this.
13:49 - Number one, is I want it to
start in a random position
13:53 - every time, so I can
use the random function.
13:57 - So this will now, every
time I run the code,
14:00 - it'll start, oh look at that.
14:01 - It's stuck, oh, oh, oh no.
14:05 - Oh God.
14:06 - Everything, oh this is the worst.
14:10 - This is the worst.
14:11 - Alright, there's another problem here
14:13 - (groaning)
14:14 - 'cause now I'm not using integer math,
14:16 - and I'm letting a random.
14:18 - Oh, this is what I need to
do, let me separate this out.
14:21 - I'm going to say, I'm
going to be very strict
14:23 - about this DVD logo.
14:26 - I'm going to say if it
goes passed the width,
14:29 - reverse its direction,
14:30 - and set it to that spot.
14:34 - Shuffle it back, and I got
to do this now separately.
14:40 - I got to do the same thing,
14:42 - then I'm going to set
it back equal to zero.
14:46 - So there's this issue that can happen
14:48 - where it can go kind
of like passed the edge
14:50 - and then make it all the
way back on, I think.
14:54 - And so, I'm going to do
this now for the x, the y.
14:59 - But I am now made this
little bit more complicated,
15:03 - but I'm saying okay,
when it gets to the edge,
15:05 - if it went passed the
edge just slide it back on
15:07 - before you turn around.
15:09 - Right, just set it back to this location
15:12 - and this is not right.
15:17 - Width minus dvd.width.
15:21 - Right, that's where I
want to set it back too.
15:24 - Otherwise, if it gets to the left
15:26 - set it back to the left and keep going.
15:28 - If it gets to the bottom,
15:30 - and this of course, is height minus,
15:33 - it's y plus dvd.height
is greater than height,
15:38 - then set it back to
height minus dvd.height.
15:41 - Okay.
15:42 - (drums banging)
15:50 - Yes!
15:51 - Okay, now we got to do something else.
15:53 - We got to do something else.
15:54 - I've got to add a red,
green and blue value.
15:58 - So I'm just going to say r, g, b.
16:00 - You can declare three variables at once,
16:02 - by the way, with commas.
16:04 - And then, I want those values to be,
16:07 - you're going to see
why, I want those values
16:08 - to be some random number
between, zero and 255.
16:20 - And then, I'm going to say
16:24 - tint r, g, b.
16:27 - So tint is a function that
allows me to tint the image.
16:30 - Look, so every time I run this,
16:33 - it's going to be a different color.
16:34 - Now I think I want to like guarantee,
16:36 - I want it to have some
amount of brightness.
16:40 - So I could do like a hue
saturation brightness thing,
16:42 - but I'm just going to limit
the bottom range to 10.
16:45 - And then, every time it
hits one of the edges,
16:49 - I'm actually going to put
this in a separate function
16:52 - called function pickColor.
16:58 - And I'm going to say pickColor,
I'm going to call that function.
17:02 - So this is me making up a new function,
17:04 - and then calling that function
17:05 - because I want to reuse that code,
17:07 - so in all of these cases, and really...
17:10 - ("Refactor" by Espen Sande Larsen)
17:11 - ♪ I will refactor this later ya know. ♪
17:14 - There's got to be a
nicer way to write this.
17:18 - ♪ I will refactor this later ♪
17:21 - And here we go.
17:22 - So now, we're done, all done!
17:26 - (bell dinging)
17:27 - And thank you for watching
this coding challenge.
17:29 - (whistle blowing)
17:30 - I'm sorry this turned
into something of a mess.
17:32 - I hope that you will take this
17:34 - and make your own variation on it,
17:36 - play with it, use different imagery,
17:38 - different way of moving, different way
17:40 - of checking the corning.
17:41 - Maybe you'll make some kind
of beautiful particle effect
17:44 - when it hits the corner,
17:45 - or maybe you'll think of a new idea
17:47 - and who cares about the corner.
17:48 - How about the middle, what if
it crosses the perfect middle?
17:51 - I don't know, the world
of the bouncing DVD logo
17:53 - is now yours to play with.
17:55 - I don't know, hope you learned something,
17:56 - had a little bit of fun.
17:57 - If you want to learn
more about programming
18:00 - I basically do this exact same thing
18:02 - in my foundations of JavaScript with p5.js
18:05 - tutorial series, but kind of step through
18:07 - all these concepts
quite a bit more slowly.
18:10 - I don't know whether
that's going to be helpful
18:11 - or interesting to you, but
you're welcome to watch it.
18:13 - Thanks, and see you in a
future coding challenge.
18:15 - (whistle blowing)
18:16 - (upbeat music)