00:02 - hello this is a video
00:04 - whoops I will not hurt myself too much
00:07 - throughout the course of this video let
00:09 - me I'm not just going to start again
00:12 - hello this is a video about arrays in
00:16 - Java SL processing in fact and I'm going
00:18 - to use processing three which is a my
00:22 - new song my new album processing 3
00:24 - coming out I don't know many years from
00:26 - now and I'm not making videos about
00:28 - programming but making albums about
00:29 - singing about programming okay so uh
00:31 - what is an array why do you want to use
00:34 - one how does it work and what kinds of
00:36 - things can you do with it um that's the
00:38 - topic of this video so perhaps you're
00:40 - familiar with this idea of a
00:42 - variable in Num equals 7 so you have a
00:49 - variable the name is numb the type is
00:52 - int integer and the value is seven but
00:55 - what if you want to have a whole bunch
00:57 - of numbers you want to have number one
00:59 - and number two two and number three and
01:00 - number four you'd have to make all these
01:03 - variables well an array is essentially a
01:05 - way in a single variable of having a
01:07 - list of values and those things can be
01:09 - numbers or pieces of text it could be an
01:12 - array of images there a list of anything
01:15 - that's a piece of data in a program you
01:17 - can have a list of that thing and it you
01:20 - know aside there's an aside here I'm not
01:22 - going to talk about objects in this
01:23 - video but arrays and objects is a
01:24 - particularly powerful thing link below
01:27 - that I will make sure to add to videos
01:28 - about arrays and objects okay so how do
01:31 - you make this
01:32 - list well with a variable you always
01:35 - need a name and a type so with an array
01:38 - an array is a variable but it's a list
01:39 - of you know uh I I think of a variable
01:42 - as a single value an array as like a
01:44 - list of
01:45 - values anyway so with the array which
01:49 - I'll call
01:50 - nums you also need to give it a name
01:53 - nums and a type integer but you add this
01:57 - extra bit of syntax square bracket
01:59 - square brackets square brackets so look
02:01 - on your keyboard now find the square
02:03 - brackets if you haven't used them before
02:05 - you're going to need them a lot with
02:06 - arrays so now I have an array of numbers
02:10 - and I can initialize it instead of as a
02:13 - single value I can use curly bracket 7
02:17 - comma 5 comma -32 comma 90 so now you
02:22 - can see I have an array of one two three
02:25 - four values so I'm going to go start a
02:27 - sketch and add this oops to come over
02:30 - here and start a sketch and add this so
02:32 - I'm going to say at the top
02:34 - int uh nums equals uh and I'm going to
02:38 - make them like 30 for uh 40 10 uh five
02:43 - arbitrary numbers and you can see here
02:46 - there we go that's the Syntax for an
02:47 - array now there are other ways you can
02:49 - initialize an array you can use a loop
02:51 - I'm going to get to that in a little bit
02:53 - this is just one way to start off this
02:56 - list of values so now the comes the
02:59 - question
03:01 - over here if I wanted to use the Val
03:04 - let's say I wanted to use that value
03:07 - num so to draw an ellipse at 100 comma
03:11 - 50 and with a size
03:15 - num so I wanted to use this particular
03:19 - value to be the size of a circle I just
03:22 - take that variable and I put it in the
03:23 - width and height arguments of the
03:25 - ellipse function so how what if I want
03:27 - to use this one or this one or this one
03:29 - some value from this list from this
03:32 - array
03:34 - ellipse 100 comma 50 H
03:39 - nums what huh I mean I know the answer
03:43 - to this I don't know why I'm pretending
03:44 - like I have to figure this out the issue
03:46 - is this is a single value so you can put
03:48 - it right here it needs to be a single
03:50 - value here I need to address one of
03:51 - these particular values and the way that
03:53 - I do that is with an index an index is
03:56 - an address into the array it's like
03:58 - counting the array because say like
04:00 - here's number one number two number
04:01 - three number four ah except I've got a
04:04 - problem here I mean actually I have a I
04:06 - have this makes me very happy but it's a
04:09 - weird thing how you count with arrays in
04:12 - programming you could think of this as
04:14 - having four elements this the first
04:16 - element the second element what I've
04:18 - told you is accurate however counting
04:21 - with arrays this is technically index
04:24 - zero so when you're counting the
04:26 - elements of the array you start with
04:27 - zero not with one so this this is
04:30 - element zero this is element one this is
04:33 - element two and this is element three
04:37 - the index values go from 0 to three with
04:40 - a total of four elements so to
04:42 - individually address one of these nums
04:46 - index 3 once again the square brackets
04:50 - square brackets are just the syntax of
04:52 - arrays I'm going to have an array and
04:54 - now I'm addressing not the third element
04:56 - right index number three which is
04:58 - technically the fourth element element
05:00 - and
05:02 - now if you look at this this line of
05:05 - code will draw a circle of size seven
05:08 - and this line of code will draw a circle
05:11 - of size 90 if I change this to one I'll
05:14 - get five if I change it to zero I'll get
05:15 - seven so that's piece number one let's
05:18 - go and add that here into this
05:21 - program uh and so now I'm going to say
05:23 - void setup I'm going to say size uh 400
05:28 - 400 and I'm going to in
05:31 - draw I'm going to say background zero
05:35 - and fill 2 55 and then I'm going to say
05:39 - ellipse at you know uh 100 comma 200
05:43 - nums index one
05:46 - nums index
05:50 - one so let me Zoom back out here and run
05:53 - this code and look at the result and you
05:56 - can see here T I'm doing like singing
06:00 - today I don't know why uh that's not
06:02 - really singing Zing Tada but whatever um
06:05 - the uh the the size of that circle is
06:09 - what 30 40 0 is 30 1 is 40 the size is
06:14 - 40 let's see it get a little bit quite
06:16 - if I change this to nums index
06:21 - 2 now look at that I've got a tiny one
06:25 - now there's a few things I could add to
06:28 - this and I'm not sure which direction to
06:29 - go in but I'm going to go in a certain
06:31 - direction this is the direction I'm
06:33 - going in right
06:34 - now let's let's draw a circle with all
06:38 - of those so there are four elements uh 0
06:43 - 1 2
06:44 - 3 0 1 2 3 H now let's draw them a little
06:49 - bit spaced out at 100 200 300 400 and
06:55 - I'll make the size uh 500 now look at
06:59 - this and let's make these numbers a
07:00 - little bit bigger uh 50 uh
07:06 - 92 so you can see what's going on here
07:09 - if we Zoom the screen in a little bit
07:10 - just to look at all of this I've got
07:12 - four circles at different X values 100
07:15 - 200 300 400 each circle is pulling its
07:18 - width and height from that array index
07:20 - zero index one index two index 3 so this
07:23 - is working pretty this is a nice idea
07:25 - and we talking about this for seven
07:28 - minutes but this and this works well
07:30 - like this is sort of like helping us
07:32 - instead of having four separate
07:33 - variables I have a single variable with
07:35 - a list of four items but I still have to
07:36 - have four lines of code down here which
07:39 - is kind of ridiculous right I mean it's
07:41 - not ridiculous but it's it's it's the
07:43 - problem comes up what if I have a 100
07:45 - values in that array what if I have 200
07:47 - values in that array I don't want to
07:49 - have 200 lines of code however you'll
07:51 - notice there's a kind of logic here
07:54 - start with zero go to one go to two go
07:56 - to three this is kind of counting do you
07:58 - remember
08:00 - I don't know where you've come from or
08:01 - why you're watching and if there's
08:03 - enough light in here if you but anyway
08:05 - uh do you remember there was a time
08:08 - where you hopefully probably learned
08:09 - about a for Loop and if you didn't I
08:11 - will link you to a video about a for
08:13 - Loop below where you wrote something
08:16 - like this or I I've done this many times
08:18 - 4 in I equals z i is less than 4
08:24 - i++ now if this is like a terrible pen
08:28 - if I were to put
08:30 - much better print line I right in here
08:34 - this Loop would run and first it would
08:37 - print out the value of zero then zero go
08:39 - up by one it would print out the value
08:40 - one then zero would go up by two and
08:42 - this and then it would print out the
08:43 - value two and then up by one it was
08:45 - pronouned value three we get we get 0 1
08:48 - 2 3 then I would be four four is not
08:51 - less than four the loop would exit so
08:53 - notice how a for Loop is a structure
08:55 - that can be used to count a variable
08:58 - from zero up to some limit like four
09:00 - well this is exactly the structure that
09:02 - we need over here so if I come back to
09:06 - this code and I say 4 in I equal 0 I is
09:10 - less than 4 I
09:14 - ++ and then I grab this I take this line
09:18 - of code and put it
09:20 - here well now couldn't I replace that
09:24 - index zero with
09:28 - I
09:30 - so this Loop and let me give myself a
09:32 - little more space here this Loop I'm can
09:36 - comment this out this Loop is now doing
09:38 - the job of what this code did before
09:42 - instead of manually having to type 0
09:44 - one2 3 this Loop uses I to do nums I
09:48 - nums zero num nums one nums two nums
09:50 - three now let's run this and see what
09:54 - happens okay so that worked it but it
09:57 - looks wrong why does it look wrong ah
10:00 - all the circles are at Value 100 and I
10:03 - wanted the circles to be at 100 200 300
10:06 - 400
10:08 - well over here remember the loop is
10:10 - counting i 0 1 2 3 what happens if I
10:13 - multiply each of those numbers by
10:15 - 100 times 100 time 100 times 100 I get
10:20 - zero I get 100 I get 200 I get 300 oh
10:24 - but I wanted 100 200 300 400 I know why
10:27 - don't I just add 100 to each of
10:30 - these so you can see another thing we
10:32 - can do I might be the index into the
10:35 - array 0 1 2 3 but we can also apply some
10:38 - math to I to do other interesting things
10:41 - like here instead of now saying 100 what
10:45 - if I were to say I times 100 that gives
10:48 - me 0 100 there you are 0 100 200 300 and
10:52 - then what if I add 100 to that then I
10:54 - have 100 200 300 400 so let's now run
10:58 - this and we have exactly what we had
11:01 - before with albeit only these values now
11:05 - one thing I should mention two things I
11:07 - should mention three 50 things I should
11:10 - mention but you know this has been going
11:11 - on for 11 minutes uh it's going to be a
11:13 - little bit of a longer video because I
11:14 - think I'm going to try to cover you know
11:15 - just sort of all the array stuff just in
11:17 - this video but there's a couple things I
11:19 - should mention one is I don't love that
11:20 - I have the number four there this sort
11:22 - of hardcoded value what if I were to add
11:24 - more values to the array I still would
11:26 - only Loop through four of them so one
11:27 - thing you can do with an array
11:29 - is nums do length uh let me just turn
11:34 - off the code completion um so num.
11:37 - length dynamically resolves to the
11:40 - length of the array so if I were to add
11:42 - another one you know uh SE uh
11:48 - 75 you can see I've added an extra Val
11:51 - an extra number which got me an extra
11:53 - Circle and now it's looping through the
11:55 - entire array it's always using the
11:56 - length and you know I could space them
11:59 - out out a little bit less like let's
12:00 - space them out just by
12:03 - 50 so we can see ah now they're kind of
12:05 - crowded together aha but what what was
12:08 - the other thing I want to show here well
12:10 - this is one way to initialize an array I
12:12 - just give it some hard-coded numbers in
12:14 - between those curly brackets however
12:16 - what I might actually like to do more
12:18 - often I'm trying to think of where to do
12:20 - this
12:22 - is give the array initial values that
12:25 - maybe are random so let's say there were
12:28 - uh uh eight
12:30 - values and I want to say nums index I
12:34 - equals int random somewhere between 10
12:37 - and 100 so this is this is
12:40 - code that is filling the array with a
12:43 - random number Loop starting from zero
12:46 - all the way up to eight pick a random
12:48 - number between 0 and 100 and add put
12:49 - that in the array but a funny thing
12:51 - about arrays is that you uh you have to
12:56 - specify in advance the size you want
13:00 - that array to be now there are ways
13:02 - around this and ways of expanding
13:03 - Contracting an array and I have other
13:05 - videos that cover that but for the
13:07 - purpose of this discussion right now the
13:08 - array is a has a fixed length so we saw
13:13 - that one way to get that fixed length is
13:15 - to just manually type in the values but
13:17 - what if you don't know the values in
13:19 - advance you just want to know how many
13:20 - things should be in there well the
13:22 - Syntax for doing that is a little bit
13:24 - goofy
13:25 - looking but if you're not filling it
13:28 - manually between the Cur curly brackets
13:29 - what you need to say is you want a
13:32 - new integer array with like 100 spots in
13:37 - it so this is your number to make up so
13:40 - this seems very redundant I'm having an
13:42 - integer array called nums which is a new
13:45 - integer array with 100 spots in it but
13:47 - two things are going on here this is
13:48 - declaring your intention to have an
13:50 - array and this is actually creating the
13:52 - array allocating the space in the
13:54 - computer's memory to store 100 values so
13:57 - if I come back over here
14:00 - uh I can change I I can change this top
14:04 - code here to say new int 8 I want eight
14:08 - spots nums do length and let's just
14:11 - clean up how we're drawing this I'm
14:12 - going to say uh no fill and stroke 255
14:17 - so we can kind of see and let's make
14:18 - them a little thicker I don't know this
14:20 - is very silly but stroke weight four uh
14:22 - so the point of what I wanted to show
14:24 - you is that
14:28 - now you can see here every time I run
14:31 - this sketch I'm going to get a new
14:33 - result every time I'm going to
14:36 - create an array with eight spots every
14:39 - time I'm going to fill that array with
14:40 - eight random numbers and then uh I'm
14:44 - going to always Loop through that array
14:46 - and draw a circle using each element
14:48 - from the array so here we go run it
14:50 - again just to see oh look at those
14:53 - differently sized circles run it again
14:55 - look at those differently sized circles
14:57 - so for you um
14:59 - you know I might think of a couple
15:01 - exercises here to try number one is what
15:04 - if your array instead of having numbers
15:08 - in it maybe maybe you know about strings
15:12 - maybe you don't but what if you made an
15:15 - array with strings in
15:18 - it hello my friend right this is an
15:22 - array with three strings three sequences
15:25 - of characters so could you display every
15:28 - time you run this sketch a random one of
15:30 - those strings in the center of the
15:32 - canvas window or could you do something
15:34 - as you click the mouse you see one
15:36 - message one at a time how would you do
15:38 - that so those are two interesting
15:39 - exercises to try this particular
15:42 - scenario that I've made here I'm looping
15:44 - through the entire array each time but
15:46 - what if you just want to use one number
15:48 - one at a time or one string one at a
15:50 - time that's another that's one thing you
15:52 - can look at the other thing that I think
15:53 - is crucial to mention is that one reason
15:56 - to learn this is that the all the stuff
15:59 - in the window that you're seeing here is
16:03 - an array of pixels an array of colors so
16:06 - underneath the
16:08 - hood uh of a processing sketch of of an
16:11 - image that you might load or an image
16:13 - you might get from a camera all the
16:15 - colors of that image are stored in one
16:17 - giant array and you can Loop through
16:19 - that entire array to read all those
16:21 - colors and manipulate those colors so
16:23 - I'll also include a link below to online
16:25 - tutorial um and some other videos about
16:27 - images and pixels that you can look at
16:29 - that this will give you kind of the
16:30 - foundation for okay so hopefully um this
16:33 - video was helpful and you saw a little
16:35 - bit of processing three and some nice
16:37 - circles and a strangely colored shirt
16:39 - that does it really blend in with the
16:40 - background yes see look you can see the
16:43 - background nobody cares about that but
16:44 - it's interesting to me and I'm going to
16:46 - say goodbye now before that camera shuts
16:48 - off
16:50 - goodbye