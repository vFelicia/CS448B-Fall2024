00:00 - Kotick trained livestream from New York
00:02 - City now just want to mention that in a
00:05 - couple minutes I have a very special
00:07 - surprise guest so don't go anywhere if
00:10 - you were going to go anywhere but even
00:12 - before that I'm going to premiere for
00:15 - you the new channel trailer good music
00:21 - video coding train theme song thing I'm
00:24 - gonna premiere that for you right now
00:25 - I'm kind of just checking to make sure
00:27 - that people are hearing and seeing me
00:29 - you will see that for about a minute and
00:31 - then I'm gonna get started with today's
00:33 - coding train live-streamed thing that
00:36 - I'm doing okay here we go
00:42 - [Music]
00:52 - [Music]
00:57 - [Music]
01:03 - [Music]
01:17 - station creation
01:32 - [Music]
01:37 - [Music]
01:40 - you
01:44 - alright thanks for watching that I it
01:48 - had been a long time since a Lisa like
01:50 - 50 to 100 people in a row have written
01:52 - cringe into the chat so I felt like I
01:54 - needed to have that video from you in
01:56 - order for that to happen that video will
01:57 - soon be available for you to watch as
01:59 - many times as you want as soon as I make
02:02 - it public so you might be wondering what
02:05 - it is you're watching this is the coding
02:07 - train it is a livestream that happens
02:09 - usually every week every Friday my name
02:11 - is Dan
02:13 - Schiffman I think that's the correct
02:15 - pronunciation last name and I'm not
02:17 - entirely sure what I'm going to do today
02:19 - I have a few ideas of things that I want
02:20 - to catch up on and code mostly a pretty
02:23 - beginner friendly stuff I know I've been
02:26 - getting this a lot I started a few
02:28 - JavaScript machine learning tutorials I
02:30 - didn't get very far with it I had this
02:33 - bicycle accident and I've been getting
02:35 - just about every new video that I
02:37 - publish and in the chat I've been seeing
02:38 - people write when are you gonna do what
02:40 - are you gonna do the machine learning
02:42 - again what are you gonna do she learn
02:43 - again what do you do she learn again I
02:44 - will at some point try to get to that
02:46 - but I have a special surprise because I
02:49 - am NOT a machine learning expert but I
02:51 - have a machine learning expert that you
02:53 - may or may not recognize right here in
02:56 - the studio today to answer some
02:59 - questions and maybe show some stuff and
03:00 - just as like a fun let's experiment with
03:02 - having a live guest so I'm gonna do
03:04 - weirdly is I'm gonna take this
03:05 - microphone off because I I'm I only have
03:07 - one microphone and I'm going to present
03:09 - my surprise special guests right now a
03:13 - world it's ROG there's no life in you
03:23 - I'm going what I'm gonna do
03:28 - [Music]
03:31 - map chen it's it's probably also i'm old
03:34 - so you know a yes definitely
03:37 - snapchat somewhere but this is like a
03:39 - takeover and time to let Suraj talk and
03:41 - what I'm gonna operate least and here
03:43 - because I can look at the end I'm gonna
03:45 - monitor the chat and I will pull
03:47 - interesting questions from the chat and
03:49 - if you want to show anything or talk
03:51 - about anything there's a computer here
03:53 - there's a computer perfect so I have the
03:55 - computer access I've got I've got you
03:58 - guys and I've got about a bunch of stuff
04:02 - so let me just answer some questions so
04:05 - if anybody has any questions just put
04:07 - them in the chat I'll I'll answer them
04:09 - they could be about machine learning
04:11 - anything machine learning and of course
04:13 - personal as well but I so one thing I'm
04:15 - saying is a couple people in the chair
04:17 - saying oh I don't know Suraj okay so
04:19 - even though I think Oh everybody must
04:21 - watch Suraj's youtube channel yeah you
04:23 - don't I guess so
04:24 - why don't you can you take a minute just
04:26 - to introduce yourself maybe pull up your
04:27 - YouTube let me pull up my youtube
04:29 - channel okay the little self-promotion
04:32 - here let's see okay straight to them not
04:37 - to the music video this is just go to
04:39 - the channel okay we're sure I can add by
04:42 - I'm gonna have dissolved okay okay guys
04:45 - so I talked about artificial
04:46 - intelligence on YouTube I'm like dan and
04:50 - I are very complementary he does the
04:52 - more JavaScript and I do Python but we
04:54 - can switch back and forth basically I
04:55 - talked about AI that's my thing I've
04:57 - talked about AI and ways that you can
04:59 - use it for recommender systems
05:01 - classifiers data generators anomaly
05:05 - detectors anything that you could learn
05:07 - from data from using AI that's what I
05:09 - talked about so this is my channel check
05:12 - it out if and you'll probably like it as
05:14 - well if you like Dan's channel we do a
05:15 - lot of similar stuff so that's me that's
05:18 - who I am and I'm just visiting New York
05:21 - because I'm talking with the United
05:24 - Nations and came to collab with Dan as
05:26 - well so now I'm going to answer some
05:29 - questions as well and first of all some
05:33 - people are saying that mic volume is too
05:35 - low so I'm gonna you don't
05:37 - okay do I have ability to move it up a
05:44 - little higher yes okay how can you use
05:50 - LS PMS to classify data that is a great
05:52 - question what so first of all what is an
05:54 - LS TM grapes also question LST ms r it
05:59 - stands for long short-term memory
06:01 - networks so LS an LST M is a type of
06:04 - neural network right and neural networks
06:06 - are the the foundation behind Yai is so
06:11 - popular these days
06:12 - there's so many different types of
06:14 - neural networks it's there's a there's a
06:15 - zoo of neural networks in fact there's a
06:17 - literal zoo that we can look at here and
06:20 - the zoo just shows a diagram check it
06:23 - out of all the different types of neural
06:25 - networks there are feed-forward networks
06:27 - as you can see here there are recurrent
06:29 - networks there are long short term
06:31 - memory networks there are all sorts of
06:33 - networks out there there are even
06:34 - lesser-known networks like hopfield
06:36 - networks and Boltzmann machines so if
06:39 - you're getting into AI for the first
06:41 - time you might be asking should I stalk
06:43 - about should I learn about deep learning
06:44 - deep learning first or schuyler and
06:46 - machine learning for first and the
06:47 - answer is the answer is you should focus
06:51 - on deep learning first because almost 95
06:55 - or 99% of the time neural networks will
06:58 - outperform any other machine learning
07:00 - model almost all the time so once you
07:03 - get really good at deep neural networks
07:04 - then you can focus on the other machine
07:07 - learning models like support vector
07:09 - machines and linear regression linear
07:11 - regression and stuff like that but you
07:13 - can do all that stuff with neural
07:14 - networks they're an incredible
07:16 - technology so deep learning is like a
07:18 - sub category of machine learning or does
07:21 - that so and would you say that
07:22 - everything that's deep learning is also
07:24 - machine learning no no so it's a one-way
07:26 - is yeah it's a one-way relationship but
07:28 - she learning is just a the collection of
07:30 - all learning algorithms that you can use
07:32 - to gain insights from data so all and so
07:36 - deep learning is taking one of those
07:38 - models called a neural network and
07:40 - giving it two things giving it rocket
07:43 - fuel and a and a rocket engine what do I
07:46 - mean the rocket fuel is a data and the
07:49 - rocket engine
07:50 - gpus so if you give it a lot of
07:52 - computing power and a lot of data on
07:54 - neural network will help you find
07:56 - insights you didn't even dream could be
07:59 - possible and you can do this with a
08:01 - bunch of cloud platforms not everybody
08:04 - has access to amazing GPUs but Google
08:06 - Cloud is obviously a great solution for
08:08 - this
08:09 - you've got Microsoft Azure but to be
08:11 - honest I I don't like Microsoft if
08:13 - you're if you're a Microsoft person
08:14 - watching this it's ok you know what I
08:16 - found out that Microsoft has the biggest
08:18 - contribution to open source out of all
08:20 - of the big tech companies so that's
08:22 - pretty cool I will say I just Windows XP
08:25 - and Vista just left a scar on my heart
08:28 - that hasn't gone away anyway and court
08:34 - oh ok yeah I guess back in the day I was
08:39 - pretty young but yeah anyway here's a
08:43 - good I know if you were still going to
08:44 - work go for it go for the one question I
08:46 - think is good so if you want to get into
08:49 - AI deep learning
08:50 - what kind of math knowledge do you need
08:52 - and do you need to like go and learn
08:54 - math first and then you can get into or
08:56 - can you kind of learn at the same time
08:57 - it's a great question not what else like
08:59 - you know the end for sure I think I'm
09:01 - trying to one of the things that I'm
09:02 - trying to do on this channel I just
09:03 - mentioned so if you're interested in
09:05 - deep learning machine learning you
09:06 - should really just go check out Suraj's
09:08 - channel especially if you want to see
09:10 - all the latest frameworks and work with
09:12 - pipes on one of the things that i would
09:14 - like to try to do in this channel to
09:15 - complement what Siraj is doing is make
09:17 - some really beginner friendly AI machine
09:21 - learning tutorials that you can kind of
09:23 - do quick in almost toilet experiments in
09:26 - the browser with javascript so anyway
09:28 - that aside so I'm kind of curious trying
09:29 - to figure that out of it but what do you
09:31 - really need to know can you just get
09:32 - through through this stuff without
09:33 - knowing this so that's yeah so I I had
09:37 - this problem too right like if you look
09:38 - at a lot of these machine learning
09:39 - courses all you see are equations right
09:42 - like mostly equations and as programmers
09:44 - we don't actually deal with equations
09:46 - whenever we're building anything right
09:47 - we're dealing with code and sometimes
09:50 - we'll deal with some basic operations
09:52 - like add or subtract but we're not
09:53 - computing derivatives right so you might
09:56 - be thinking yeah should I just go and
09:57 - learn all of calculus and all of it no
09:59 - the answer is no these subjects
10:02 - calculus linear algebra
10:04 - these are massive subjects right and
10:06 - there are so many parts of these
10:08 - subjects that are irrelevant to deep
10:10 - learning there are only very specific
10:12 - parts of calculates and very specific
10:14 - parts of probability theory and of
10:17 - linear algebra that you need to know to
10:18 - do deep learning so you need a condensed
10:21 - version of these subjects and the best
10:24 - resource besides my channel obviously to
10:26 - look at this and this is kind of where I
10:28 - learned from I kind of gleaned my
10:30 - knowledge mostly from this book which is
10:32 - free it's online you can look at it in
10:34 - your browser and it's called the deep
10:36 - learning book and the authors of these
10:38 - books are first are Ian Goodfellow who
10:40 - invented generative adversarial networks
10:43 - probably the hottest idea in all of deep
10:45 - learning and yoshua bengio who's one of
10:47 - the godfathers of deep learning so
10:50 - definitely check out this book it's it's
10:51 - got like entire chapters dedicated to
10:55 - subjects that would otherwise be an
10:57 - entire textbook in and of themselves
10:58 - like so in Chapter two you'll learn
11:01 - about all the linear algebra you need
11:02 - for deep learning so super cool right
11:05 - and so it starts off by saying linear
11:07 - algebra is a branch of mathematics use
11:09 - for this right and then you'll talk and
11:13 - then it talks it's so cool it talks
11:15 - about exactly the topics you need you
11:17 - need scalars you need vectors you need
11:20 - matrices these are all you need tensors
11:22 - these are all basically the same types
11:24 - of things just sets of numbers but it's
11:26 - our way of ordering these numbers
11:28 - together right because that's what deep
11:30 - learning is it's taking sets of numbers
11:32 - matrices and continuously applying
11:35 - operations to these matrices for every
11:38 - layer and these are and that's why you
11:40 - need two linear algebra because you
11:42 - can't just multiply a set of numbers
11:43 - you have to compute the dot product it's
11:46 - basically multiplication but for a set
11:48 - of numbers
11:48 - it's our linear algebra is algebra but
11:50 - four sets of numbers right so four
11:52 - groups of numbers and yeah you only need
11:56 - parts of linear algebra check out the
11:57 - book yeah that's my answer to the
11:59 - question so another question I think
12:01 - it'll be useful is we taught you talked
12:02 - a little bit just now about okay well
12:04 - there's machine learning it's this
12:05 - broader field of research deep learning
12:09 - being
12:09 - one aspect of that neural networks out
12:11 - of it and giving it the rocket fuel so
12:13 - to speak yes what is AI how does that
12:15 - honey thing art what is art the top of
12:17 - artificial intelligence how does that
12:19 - differentiate that term and how does
12:22 - that what's the difference between AI
12:23 - versus machine learning versus deep
12:25 - learning for sure
12:26 - so okay so yeah there's a lot of
12:28 - confusion in this field and if you look
12:29 - at any of these articles by these
12:30 - popular tech magazines like wired or
12:33 - TechCrunch let me just look at one so
12:35 - one of them is like you know just like
12:37 - Facebook invents language or some things
12:41 - like Facebook and AI invented its own
12:43 - language right and so if you look at
12:46 - these articles you look at them and you
12:48 - say okay what's the topic here Facebook
12:50 - AI creates its own language and creepy
12:52 - preview of our potential future
12:54 - immediately show a picture of Stephen
12:57 - Hawking who is completely unrelated to
13:00 - what Facebook's AI did so let's just
13:02 - look at one more and I haven't looked at
13:03 - these articles before but let's just
13:04 - look at a single no it's a good call
13:08 - Facebook AI agents creating their own
13:10 - language is more normal than people
13:11 - think
13:12 - researchers say okay so this is actually
13:14 - a good this is a this is a smarter
13:16 - article but basically these articles
13:20 - take advantage of these terms that
13:22 - people don't know about and just kind of
13:23 - blow them out of proportion so I'm here
13:25 - to just tell you this
13:26 - AI is kind of like the biggest term
13:28 - right AI encompasses everything right
13:31 - artificial intelligence in some ways you
13:33 - can even say what Dan is doing in terms
13:34 - of creative coding processing that's AI
13:37 - it's just intelligence right
13:38 - intelligence is just is we are
13:41 - intelligent right it's the ability to
13:42 - learn okay how can we learn right and so
13:45 - if software is our way of automating
13:47 - this learning process taking a bit of it
13:49 - it's a bit of what we can do and
13:51 - automating it so it doesn't need a human
13:53 - behind it
13:53 - traffic lights can be considered AI
13:55 - right it's just yes no on/off but in the
13:59 - end
13:59 - AI is just the really big buzz word and
14:02 - what we really want is artificial
14:03 - general intelligence that is an AI that
14:06 - can do everything but the way that we
14:08 - have found the best way the best medium
14:11 - of making AI reality is using machine
14:14 - learning technologies and the most
14:15 - specific topic we can talk about all
14:18 - these machine learning all
14:19 - these are deep learning and so that's
14:22 - why deep learning is one of those hot
14:24 - words in the past in the past five years
14:26 - because only now have we started to get
14:28 - the computing power and the data we need
14:30 - to make these a neural networks perform
14:32 - incredible things so in order deep
14:34 - learning is the subset of machine
14:37 - learning and then AI is the biggest
14:39 - circle around all those things and AI in
14:42 - general is the ability to learn some
14:44 - would even say it's heuristics any kind
14:46 - of statistical model it doesn't have to
14:48 - learn necessarily but any kind of
14:49 - intelligent algorithm yes we could
14:57 - probably keep going forever forever yeah
15:03 - yeah one more quick thing I just I've
15:06 - been learning about brain computer
15:08 - interfaces recently and there's this
15:10 - really cool there's this really cool
15:14 - hardware device called the Emotiv that
15:17 - it's I think it's the easiest for
15:19 - developers to get started on I know
15:21 - there's also open BCI but there so
15:23 - there's a there's a hardware cost to
15:24 - building it but Emotiv is really just
15:26 - out of the box the SDK is really really
15:28 - easy to use and you can use this
15:30 - technology basically you put it on your
15:32 - head and you can control robots with
15:34 - your mind you can lift up objects like
15:36 - 3d objects in a simulation with your
15:38 - minds so think of the force from Star
15:40 - Wars and I think the reason I'm
15:41 - mentioning that is because I think
15:43 - there's a lot of potential to apply
15:44 - machine learning to these technologies
15:46 - and it's one of those things that no one
15:48 - has really done yet so there's a lot of
15:50 - potential for a cool side project if you
15:52 - wanted to do that maybe combine that
15:53 - with some cool visualizations using p5
15:55 - but yeah that's more or less it I'm
15:58 - releasing a video on this stuff later
15:59 - today so that's why it's on my mind that
16:00 - was my next question so you were you're
16:02 - usually you I know you release videos
16:04 - Friday around what time around 5:00 p.m.
16:09 - PST so you really
16:11 - go downstairs and work on releasing a
16:14 - video right now yes exactly and what can
16:15 - you give us at ease
16:16 - I guess the tease this is the tease but
16:19 - Elon Musk's neural link and Brian
16:21 - Johnston Johnson's kernel and then
16:23 - Facebook's brain typing thing I just I'm
16:26 - gonna talk about what this really is and
16:30 - it's one of those really risky videos to
16:32 - make but let's just do this so well I
16:35 - won't get to watch it right when you
16:36 - release it but I'm definitely gonna
16:37 - watch it as soon as my live streams Oh
16:39 - perfect I look for that I'm gonna so I
16:41 - everybody stayed stayed there and put up
16:43 - some waiting music I'm gonna boot the
16:47 - microphone for a second and help
16:48 - Siraj finds his way out into the hallway
16:52 - you can come out of the corner somebody
16:54 - knocked on the door if we just like open
16:55 - the door we're like okay look who it is
16:57 - but bump do that next time yeah next
16:59 - time for sure okay so I'm just gonna hit
17:00 - you here and we're gonna go that way
17:02 - they'll be right back
17:17 - [Music]
17:36 - all right that was fun I've never had
17:43 - like I'm a guest before but never on a
17:45 - Friday and never another youtuber it's
17:48 - funny like I saw Suraj when I think we
17:50 - haven't met before but it came by and I
17:52 - was like hold on hold on hold on let me
18:04 - get the sound good mica mica microphone
18:06 - swing you around sorry sorry sorry hold
18:10 - on hold on everybody
18:16 - tangled this up can you not hear
18:20 - anything at all
18:35 - okay how is this okay how is this mic is
18:40 - good you can hear me okay
18:43 - patron slack group okay there's just
18:45 - random sadder than making it anyway
18:47 - I saw sir I said oh you're that guy
18:50 - watch on YouTube and I was kind of
18:52 - excited and then that people say that to
18:54 - me and I think don't be ridiculous but
18:55 - then I had that feeling when I saw him
18:56 - so I guess that's what happens
18:58 - Suraj is great it was really fun to meet
19:00 - him in person super nice funny charming
19:03 - and I hope that we'll get to do I would
19:05 - like to do more collaborations in
19:06 - general with people and I hope that I
19:08 - will get a chance to do more okay I'm
19:14 - going to Oh Alka and the chat is asking
19:18 - what bitrate are you set to because the
19:20 - but so one thing I want to say if you
19:22 - can if you can humor me for a little bit
19:23 - this is the first time I'm using let me
19:28 - close these windows here this is the
19:31 - first time that I'm using open broadcast
19:33 - studio instead of Wirecast the good news
19:37 - is remember how every week my stream
19:39 - starts to my stream crash crashes and
19:42 - after restarted all the time that
19:44 - shouldn't happen open broadcast studio
19:45 - seems to be working really well it has
19:47 - some good features I'm able to switch
19:48 - between shots really easily that's the
19:50 - whiteboard shot which the cameras off
19:53 - the downside is there might be some
19:55 - things that I don't that are different
19:57 - or that aren't working or a lighting
19:58 - wise so please let me know if okay so so
20:06 - what I'm gonna check because Alka is
20:08 - asking is settings output bitrate is
20:15 - 2500 so hopefully that's okay but
20:21 - Phileas fine I am willing to make
20:23 - changes to it if there's something
20:25 - really extremely off I would make
20:27 - changes to it right now
20:28 - but if it's just like more like feedback
20:31 - for next time please just let me know so
20:34 - a couple things I'll mention if you
20:36 - would like to support the work that I'm
20:38 - doing and join our patron group in the
20:41 - slack channel you can go to
20:43 - patreon.com/scishow to
20:46 - you
20:49 - you could get Cody trade merchandise I
20:51 - don't why I mention these things the
20:52 - links are all in the video's description
20:53 - oh yes so are you seeing like twinkle
20:56 - EES twinkling there's an issue with let
20:59 - me see if I can fix this
21:02 - there's oh yeah I have a bad HDMI cable
21:07 - and then odd the audio is out of sync
21:10 - let's see how bad it is because I
21:11 - actually adjusted and added a delay okay
21:16 - let me clap how bad is that audio sync
21:20 - so Alka I don't think that I could
21:22 - probably change the bitrate without
21:25 - stopping and restarting the stream which
21:27 - I'm loathe to do unless there's a
21:28 - serious problem so I will just
21:30 - investigate changing it to like 5k or
21:33 - something like that
21:33 - next time people are saying the audio is
21:37 - synced well a little off a little off is
21:39 - no big deal okay alright so I'm a little
21:45 - bit disorganized because I actually had
21:47 - a nice whole hour to get ready and plan
21:50 - what I was going to do and then Suraj
21:54 - came by and I was like lost all of my
21:55 - time but because I was having a
21:57 - fascinating interesting conversation
21:58 - about YouTube and machine learning and
22:00 - coding so I am going to well actually
22:03 - let me use the computer here let's I
22:05 - want to make a list of things that are
22:06 - on my mind to do today so things that I
22:10 - would like to do oh I forgot to have
22:14 - Suraj read the random numbers
22:16 - Suraj if you're watching you come back
22:19 - upstairs and knock on the door but I was
22:22 - thinking oh if I ever have guests they
22:23 - have to read the random numbers that's
22:24 - like a thing okay so some things that I
22:28 - want to do I want to talk about custom
22:31 - shapes so one I have two ways that I
22:35 - decide three ways really that I decide
22:37 - what to do in a live stream one is that
22:40 - people make suggestions to the rainbow
22:43 - topics github repository and your so
22:48 - many please post the link to that in the
22:49 - chat and you're welcome to do that
22:50 - number two is I take suggestions Oh Alka
22:54 - thing I can change the bitrate at any
22:55 - time okay
22:57 - I'm gonna do that in a second number two
22:59 - is I take suggestions from the patrons
23:01 - people have joined via patreon.com and
23:03 - from the slack channel that we discuss
23:05 - during the week what topics would be
23:07 - interesting you know I don't know
23:09 - patrons could keep me honest here do I
23:10 - really listen I don't know if I'd really
23:12 - do a good job of listening to the
23:13 - suggestions but I try to and then third
23:16 - and this is unfortunately the most the
23:19 - main reason why I pick certain topics is
23:22 - that I am teaching courses at a program
23:25 - called ITP it's here at New York
23:27 - University and there are supplemental
23:30 - things that come up in class or
23:31 - questions or things that I'm teaching
23:33 - about and I like to attempt to make
23:36 - videos about stuff that's relevant to
23:38 - what I'm already teaching this week so
23:40 - in that sense I'm teaching a beginner
23:41 - programming class and custom shapes
23:44 - using vertex and curve vertex has been a
23:48 - confusing topic this week I want to talk
23:51 - about let and var and also Const es6
23:55 - that's something I might want to do a
23:59 - simple harmonic motion sign motto motion
24:04 - sine cosine I also was thinking about
24:10 - ten print oh and then data and api's is
24:15 - in one of my courses too so I was
24:17 - thinking about the Wikipedia API and
24:21 - also maybe like wind data there's been a
24:26 - lot of hurricanes and there's a lot of
24:27 - research going on in discussion about
24:30 - climate change and so maybe projects
24:31 - that around that topic learning how to
24:34 - get wind data from maybe like open
24:36 - weather map could be relevant and then
24:39 - of course continue matrix math series so
24:45 - anything else that came up time is up
24:47 - so so Simon it did suggest write
24:50 - inverting flipping a number I the reason
24:53 - why I asked you Simon about the bouncing
24:55 - ball speed thing is I think I have a
24:57 - video already that does that inversion
25:00 - but I do agree that that is a useful
25:02 - topic as well thank you for that
25:05 - suggestion I'm sorry for forgetting it
25:07 - so I'm looking at the chat now
25:10 - I feel a little bad I think neural
25:14 - networks is turning into the Chrome
25:15 - extension thing which like I say I'm
25:17 - gonna do it but I never get to it clap
25:19 - yes
25:20 - so Austin is suggesting classes getters
25:25 - and setters this I'm planning to do next
25:27 - week it just hasn't come up yet in the
25:29 - class and I want to I want to get to
25:31 - that next week so that's not on my list
25:33 - for next week
25:35 - I also want to look at in the future es6
25:39 - promises there's another thing from es6
25:42 - like some es6 maybe some of the array
25:44 - functions and then at some point this
25:48 - like es6 Arum the arrow arrow notation
25:53 - is that what you call it this thing so I
25:55 - want to look at all of those things as
25:57 - well oh the name yeah 10 print the
26:03 - Topher in the chat says 10 print the
26:05 - name reminds me of my first ever program
26:06 - I wrote in second grade oh I forgot the
26:08 - book I need my prop I might have to run
26:10 - downstairs to get the book today it's
26:14 - probably gonna be mostly oh yeah deep
26:15 - space is suggesting to strawpoll except
26:18 - everyone's gonna do that matrix math
26:20 - series which I might not want to do
26:22 - first and I feel kind of committed to
26:25 - the first two alright so while actually
26:29 - let's the strawpoll thing is kind of fun
26:31 - so let me let's go to strawpoll because
26:36 - I have some other things I wanted to
26:37 - talk about so why not I'm just curious
26:39 - I'm not necessarily coding Train can i
26:44 - paste into here no we'll have to do it
26:47 - one at a time
26:49 - vertex curve vertex simple harmonic
26:54 - motion 10 print Wikipedia API win wind
27:04 - data from open weather map what else
27:08 - inverting flipping number I'm not so
27:10 - sure as I'm I really like this
27:12 - suggestion I feel terrible that I'm like
27:15 - nah it keeps like by accident not
27:16 - including it but I also I don't have it
27:18 - in my head exactly maybe what you should
27:20 - make a video on it for me and then
27:22 - that'll help me understand what it is
27:24 - but I will put that in the list and then
27:28 - what did I miss
27:29 - lettin var ups and then the problem I
27:34 - was talking about this with Suraj I
27:35 - don't feel very confident with the
27:37 - machine learning neural network and
27:38 - matrix math stuff it's one of the things
27:40 - that I feel like I really need to like
27:42 - spend the day reading about before I
27:43 - come to the live stream so that's why I
27:47 - kind but I'm gonna put it on this
27:48 - because I'm just gonna see what happens
27:51 - here what would you have to do a run off
27:52 - let me create this poll so this is the
27:56 - URL for the poll somebody who has
27:59 - privileges
28:02 - BFD gh7 th and now while while people
28:07 - are voting there I'm gonna talk about
28:09 - one of the things that's been requested
28:11 - a lot I'm really excited to talk to you
28:13 - about this today is community projects
28:15 - what does it mean for people watching
28:18 - videos on YouTube learning about code to
28:20 - collaborate together on a project so I
28:22 - have two community projects and I also
28:26 - and that I want to talk about so the
28:30 - first one I want to talk about relates
28:31 - to processing day I've mentioned this
28:34 - before processing day is an event that's
28:38 - happening October 21st at the MIT Media
28:40 - Lab it is a day to celebrate the
28:42 - community that develops and mix stuff
28:45 - with processing and p5.js and related
28:48 - things you can see all the people who
28:51 - will be presenting and talking I
28:52 - especially want to encourage you to
28:54 - submit a if you're coming to submit a
28:58 - lightning talk to present a short demo
29:01 - at processing day but one of the things
29:03 - that I've been I am planning to do
29:05 - something live so the thing that I have
29:07 - thought about and thank you to tayon for
29:09 - suggesting this the organizer of
29:10 - crossing Community Day is to make an
29:12 - algorithmic design for name cards so
29:16 - anybody who signed up to attend will get
29:17 - a name card and one of the ideas was to
29:20 - put names in on a cloud so if I go to
29:22 - github.com slash coding train and I
29:29 - maybe I'll do a walk-through later of
29:31 - this and I go
29:32 - two community clouds and thank you to me
29:36 - I am so me me I am so me is helping me
29:40 - now to maintain a lot of the github and
29:43 - code related stuff for the coding train
29:45 - Channel and me I am so me created this
29:48 - really nice system to submit your cloud
29:53 - idea so the idea is that can take this
29:57 - as your inspiration how would you design
29:59 - a generative cloud in p5.js so
30:02 - ultimately I'm hopefully port the code
30:04 - to processing to generate the SVG files
30:07 - and these are going to be printed with
30:08 - thin black lines so this is not about
30:12 - making a colorful image but rather an
30:15 - algorithmic outline and the names will
30:18 - actually be written in calligraphy so so
30:22 - if you are interested in this take a
30:24 - look at this repository I'm gonna click
30:27 - here on it it this repository controls a
30:31 - github pages site and the what you can
30:35 - do is you can submit your cloud you can
30:40 - either work on somebody else's cloud
30:42 - idea or you can submit one by writing a
30:44 - function in naming it and it will turn
30:46 - up in this menu so me I am so me
30:49 - invented this wonderful system that I'm
30:51 - excited about to use for future
30:52 - collaborative projects and if I just
30:54 - show you really quickly if we look at
30:56 - this code here generators j/s all you
30:59 - need to do is go to this file and write
31:03 - your own function so you can see this
31:04 - function draws a rectangle oh and then
31:08 - look at this it's even so sophisticated
31:10 - that you can then return some values
31:13 - that about where to draw the text but
31:15 - that's an extra fancy feature I love
31:16 - that feature but really you just need to
31:18 - write your own code here write a
31:20 - function you know I you know maybe you
31:22 - want to try using Perlin noise so you
31:24 - write a function called Perlin noise
31:25 - cloud you register it and you register
31:28 - it with a name and the author and then
31:30 - you call this register if you add this
31:32 - register function you submit as a pull
31:33 - request and it will appear as one of the
31:35 - cloud options so everybody maybe I
31:37 - should do a cloud as the coding
31:38 - challenge but that's what I'm going to
31:39 - do it process the community day so so
31:42 - that's one thing I
31:43 - to mention all you need to do is have a
31:45 - github account and hit this edit button
31:47 - now I'm not signed in so saying it must
31:49 - be signed in and of course you know if
31:52 - you're wondering what's get what's
31:53 - github how could I possibly do this you
31:55 - can watch my video tutorials about that
31:58 - topher is asking what and the name is
32:05 - what drives the cloud shape so this is a
32:07 - good question I'm I have to figure it we
32:09 - have to figure this out I think the idea
32:11 - if I'm really thinking about it is just
32:13 - a system that generates a different
32:14 - cloud every time you run the code and
32:17 - the cloud has enough space for somebody
32:19 - to handwrite a name in it so you can
32:21 - think of it as like there's a bunch of
32:23 - hello my name is sticker name tags that
32:25 - have a nice little generative cloud
32:27 - printed on them and you write your name
32:28 - inside the cloud you know it might be
32:29 - something slightly different than that
32:31 - but that's a good way of thinking about
32:32 - what it is I'm asking for people to
32:33 - create and submit so on the one hand
32:35 - this is a collaborative process I'm
32:37 - going to have a community designed cloud
32:39 - but you can also sort of submit your own
32:41 - design and you know obviously if we try
32:44 - to make figure out some appropriate way
32:46 - to give credit to those who have
32:47 - submitted code in the actual cloud
32:51 - design and if I do it as a live tutorial
32:54 - I can maybe give credit during that
32:55 - tutorial so please let me know okay
32:59 - right so this is an interesting idea so
33:01 - well the one hand this idea of
33:03 - generative name tags go that's with it
33:05 - the name could actually you're right it
33:07 - could be the name that informs how the
33:08 - cloud that's a great idea so you should
33:09 - we should try that that's wasn't the
33:12 - original thinking behind the idea of the
33:13 - name tag because we're gonna they're
33:15 - gonna be written in but but that's an
33:17 - interesting idea I love that idea okay
33:19 - so this is probably a terrible idea
33:22 - because I haven't launched a community
33:24 - code project really before so this is
33:28 - really the first one that we're trying
33:29 - to do in a formal way
33:31 - so I probably shouldn't do two of them
33:33 - at the same time but because I did a
33:37 - coding challenge last week about making
33:39 - a clock which I felt was in my mind very
33:42 - successful I really enjoyed seeing
33:44 - everybody's clocks and in fact let's
33:47 - take a moment now to see some clock
33:49 - submissions so last week I did a coding
33:51 - challenge about clocks and I'm gonna go
33:53 - to rainbow code coding challenges and
33:55 - I'm gonna scroll
33:58 - I'm a little bit bigger than I usually
33:59 - am gonna move this over I'm gonna scroll
34:01 - all the way down to the bottom and I'm
34:04 - gonna go to coding challenge 74 o'clock
34:06 - and I am going to look at these clocks
34:12 - now I know there were many more clocks
34:14 - that people made and said to me over on
34:17 - Twitter or via the YouTube YouTube
34:19 - comments so I didn't have time to kind
34:22 - of like try to find some of those and
34:23 - paste them in here so I really encourage
34:25 - you if you want to submit your clock to
34:26 - this list to just do a pull request on
34:28 - this readme file if you don't know how
34:30 - to do that pull requests send me a tweet
34:31 - and hopefully I can help you out but
34:34 - let's look at some of them so this is
34:36 - wall clock so it's uh let's look at wall
34:39 - clock beautiful lovely wall clock very
34:46 - traditional I love this is really
34:48 - interesting these nice quads that are
34:50 - drawn sort of thicker at the the top
34:53 - versus the bottom it has a real like
34:54 - physical quality to it this is really
34:55 - nice thank you for to whomever submitted
34:58 - this wall clock this is Andre uh
35:01 - Douglass digital 7-segment clock let's
35:04 - take a look at this uh oh yes open the
35:07 - app no let's come back to it it might
35:11 - take a minute for it to get started
35:12 - let's look at Kline of film Rochin
35:15 - what's the chance I pronounced that of
35:18 - so many that chad is saying that that
35:21 - clock drew friction into the hand
35:22 - movements is that really true let's look
35:25 - back at that clock again and by the way
35:26 - this clock is released through open
35:29 - processing org which is a great website
35:32 - for sharing sketches and sharing code
35:34 - and that sort of thing oh yeah look at
35:36 - that look at that little spring action
35:41 - that is fantastic those little details
35:43 - are really wonderful I love that okay so
35:47 - now let's look at this circle analog
35:50 - clock and oh so one thing that would be
35:56 - helpful maybe is that when you submit it
35:59 - submit a link to it running in the
36:01 - browser so and one of the ways you can
36:03 - do that if it's just a sketch like this
36:06 - in a github repository is to
36:09 - is to make it a github pages site so I
36:15 - don't know if this already is a github
36:17 - pages site if anybody can help me figure
36:20 - out that link I would love to show this
36:21 - one let's see if this one came back
36:23 - alive
36:24 - I guess that cloud 9 thing is done let's
36:27 - look at this binary clock this should be
36:31 - interesting to see oh and this is made
36:33 - with jsfiddle that's kind of cool so
36:36 - maybe I need to make this a little bit
36:37 - wider so it looks to be like what we're
36:39 - seeing is binary notation of the current
36:41 - time the current time is 4:45 yeah I
36:50 - think that's right my brain cannot
36:53 - compute this easily in real time but I
36:55 - love it it's fantastic
36:57 - wonderful great job thank you to our gym
37:02 - now I'm gonna show dolly this clock whoa
37:05 - what just happened here I clicked on it
37:07 - this is a Dolly's clock which is oh this
37:11 - is beautiful design now this is is this
37:13 - a real am I just unplanned carry gear
37:16 - logic from a plaque processing sketch
37:18 - watch illustration and sketch file so
37:20 - this is great but one of the things
37:21 - that's really nice frizzle this is a
37:23 - beautiful design I love how much like
37:26 - really has this feeling of like a full
37:28 - watch in my webpage and in my whip in
37:33 - the browser a lot of these would be nice
37:35 - chrome extensions right for a new tab
37:37 - Chrome extension to make a new tab and
37:38 - just showed you this beautiful clock
37:40 - design but one of things I love want to
37:41 - point out that Dolly's done which is
37:42 - really wonderful is reference every
37:45 - single thing that helped inspire and
37:49 - inspire her to create this clock so one
37:52 - thing that really encouraged people to
37:53 - do is be really generous with credits in
37:55 - open source so always credit you know
37:59 - code where it came from suit Orioles
38:01 - that you used you know sometimes you
38:03 - know there's actual real questions of IP
38:05 - and plagiarism but I'm not even talking
38:07 - about that I'm just talking about the
38:08 - spirit of generosity and credit is and I
38:11 - you know it's easy to forget and I've
38:13 - been guilty of this many times in the
38:14 - past I try to do my best
38:17 - okay let's look at UPS where are we one
38:21 - more clock Oh Alka this is al cos
38:24 - physics or their more pull requests I
38:30 - don't know if me I am sue me or anyone
38:32 - with privileges as what is watching this
38:35 - right now could vary some of those pull
38:37 - requests I could login over here and do
38:38 - that I'm just not logged into my github
38:40 - on this computer so let's look at al cos
38:42 - physics based clock so this is wonderful
38:48 - so you so I guess I it's up to me here
38:51 - to describe what's going on but we can
38:52 - see here this is it is for 47 and 16
38:58 - seconds and 18 seconds the 19 seconds in
39:02 - 20 seconds like a 21 22 23 24 25 so this
39:08 - idea of creating this physics simulation
39:10 - almost Angry Birds like tower structures
39:13 - with the time is really wonderful and I
39:16 - have a feeling that something exciting
39:18 - will happen when we get to 60 seconds so
39:24 - let's wait this is right this is what I
39:27 - really love about the clock designs is
39:29 - you can be so creative and
39:30 - non-traditional you can create a code
39:33 - version of your favorite clock or you
39:36 - could just make up something crazy that
39:37 - almost like it's hard to figure out to
39:38 - tell the time or maybe you make up
39:40 - something crazy that actually is a
39:41 - really excellent way of telling the time
39:42 - oh yeah that was really exciting I have
39:48 - to wait so I encourage you to look at
39:50 - this on your own time Thank You Alka for
39:53 - submitting this clock so let me look in
39:55 - oak lick and drag your mouse around the
39:57 - blocks oh look at this
39:59 - so I can also make all sorts of fun
40:01 - stuff happen okay uh okay so I think I
40:07 - better start now I have an excuse for
40:09 - not doing any coding for 50 minutes I
40:11 - don't know how long this livestream has
40:13 - been going because and let me try to
40:16 - because I had Suraj
40:21 - as a guest for a little while okay
40:28 - time to do some actual coding let me
40:33 - just see if there were any more that
40:35 - were submitted I could just look at the
40:36 - pull request Oh No let's look at the
40:39 - pull requests and I apologize for not
40:44 - keeping up with pull requests on all
40:46 - these different repositories is one of
40:48 - the reasons why I asked me I am Samhita
40:50 - help out to kind of act as a de facto
40:53 - github coding train coding train github
40:56 - pull request manager and so we can see
40:59 - there is another one here I don't know
41:01 - if p5 dojo is a clock but this is
41:03 - definitely a clock my clock so I can't
41:05 - merge this right now but we can view it
41:07 - right here and okay so let's look at
41:13 - this I'm actually just gonna do
41:17 - something real quick
41:19 - I didn't realize what webpage I was
41:21 - going to Oh lovely that's right so you
41:24 - can see this is a really nice variation
41:26 - of the clock that I made with arcs and
41:30 - hands but a couple things that are
41:33 - different number one is there's a in
41:34 - there's a hand that's doing once around
41:36 - for each second there's a lovely little
41:38 - digital readout down here which is a
41:40 - nice like little bouncing physics and
41:42 - the mint the second hand the like
41:45 - sub-second hands they're moving
41:46 - continuously as opposed to just like
41:49 - with mine so that's wonderful p5 dojo is
41:51 - a clock and it's from p5 dojo I haven't
41:54 - forgotten Simon about my strawpoll I'm
41:56 - gonna go look at it
41:57 - b5 dojo is a clock and p5 Jojo is also a
42:01 - person in the chat saying it is a clock
42:03 - so let's look at p5 dojos clock
42:08 - Krister Neilson looks like and I'm gonna
42:11 - go to files changed and we can see here
42:14 - a p5 dojo oh there's two clocks bezzie a
42:17 - clock Wu Bezier curves one of these days
42:20 - I'll have the confidence to explain how
42:24 - Bezier curves work I love this so simple
42:27 - so perfect I can just enjoy this so I'm
42:33 - I'm kind of guessing that all of the
42:37 - points of minute hour and seconds are
42:40 - points of a
42:41 - a curve I just love the simplicity of
42:43 - this so and very creative thank you for
42:47 - showing this sharing this and let's go
42:50 - to all over the place I let's go to I
43:01 - can keep track of my links here we go
43:03 - let's go to this last one QR clock this
43:06 - is interesting
43:06 - I imagine this kind of something to do
43:08 - with the QR code so somehow this QR code
43:11 - is telling us the time that's pretty
43:14 - awesome
43:15 - so this is pretty hard to read for a
43:18 - human but I guess that computer that's a
43:19 - really cool cool crazy idea and we can
43:22 - see here the actual time is right there
43:24 - wonderful thank you for submitting these
43:26 - p5 dojo okay why was I showing you these
43:29 - well one I wanted to show you these
43:32 - fabulous clocks i retweeted a bunch that
43:33 - people share with me on twitter also
43:35 - which we're really exciting to see and
43:36 - you know we really should probably make
43:38 - a website that's just full of clocks but
43:39 - before we do that the other community
43:43 - project that you can contribute to is
43:45 - and thank you all so again to me I am so
43:49 - me for making this repository is the
43:54 - twelve O'Clock repository so twelve
43:57 - O'Clock s-- is a artwork by John Maeda
44:03 - from the late 90s all made on a in the
44:07 - stock of a Mac OS 9 and released in 1997
44:09 - the only way to currently run these
44:12 - historical creative coding this creative
44:15 - coding project from the late 90s is to
44:17 - get like a Mac OS 9 any later or a
44:19 - PowerPC and goal on 11 actually did this
44:22 - for a page a blog post for one of his
44:25 - courses at carnegie mellon university
44:27 - where he got them all to run and then
44:30 - kind of made some gifts of them so what
44:32 - i would love to do as a community is
44:35 - recreate this exact paid what we're
44:39 - seeing here but instead of gif
44:40 - animations the actual clocks running in
44:42 - the browser so what you can see here if
44:45 - you read this read me will give you more
44:47 - information and if we look at the
44:49 - published github pages you can see this
44:52 - is just a layout for all
44:55 - these clocks but the clocks aren't there
44:57 - right now so this is just a beginning so
44:59 - I would love for us as a community
45:01 - that's one of the inspirations for this
45:03 - speaking of crediting is the recode
45:05 - project recode project org maybe no sold
45:10 - I'm Matthew Epler Epler recode project
45:16 - let's this is this is a documentation
45:20 - page about it where is the actual link
45:26 - that's Matthew Eppler who also by the
45:28 - way has all these great video tutorials
45:30 - on YouTube how come I can't find the
45:32 - recode project website someone's gonna
45:41 - be able to help me to find this ah here
45:44 - we go
45:44 - recode project com there it is so this
45:47 - is the recode project which is
45:50 - additionally about looking at historical
45:52 - examples of artworks computational
45:57 - artworks made by computers and you know
46:00 - and it's there's a long history of this
46:03 - way that dates way way past you know
46:06 - what I've been doing for the last
46:07 - however many years and what what people
46:09 - have been doing for me for the years
46:11 - before that and so this is a project
46:13 - where you click on any of these for
46:15 - example let's look at random squares
46:17 - this is one we could probably do here by
46:18 - Charles susuri you can see here is a
46:23 - direct translation and experimental so I
46:25 - don't know is if I click on this does
46:27 - this mean we see the translation yeah so
46:29 - this is that in written in processing
46:31 - and this is the artwork so this I would
46:33 - love to do something like this for the
46:34 - twelve O'Clock project okay so thank you
46:43 - for that alka I think I'm gonna move on
46:44 - though just in the interest of time if
46:46 - that's okay so okay so we talked about
46:54 - those two things those are the two
46:55 - community projects strawpoll we can go
47:00 - back to that now cuz I really it's it's
47:02 - almost five o'clock and you know I I'm
47:04 - usually here until 6:00 or 6 or 6:30 I
47:07 - was kind of hoping to leave at 6 but I
47:09 - want to just only code for an hour it's
47:10 - not very much time for this week so let
47:14 - me look at what's happening with the
47:16 - straw poll let's look at those results
47:20 - I'm gonna give you guys the last last
47:24 - minute to to vote on it and I'm not
47:28 - necessarily gonna do what it says but
47:31 - I've got to consider it Siraj released
47:36 - this video yet downstairs working on it
47:38 - okay FM so I'm going to view the results
47:41 - oh look at this oh it's nice to see
47:46 - simple harmonic motion Wow
47:49 - Wikipedia API letting var vertex okay
47:52 - great well nobody's interested in the
47:54 - ten print is that cuz you don't know
47:55 - what ten print is I'm gonna do the dead
47:57 - bug that's great because I could do that
47:58 - probably is like a five minute coding
47:59 - challenge and it will inspire so many
48:02 - creative ideas so and we're gonna do
48:04 - that anyway so I'm not so sure about the
48:11 - continued matrix math but it is useful
48:13 - to note the interest and I'm just right
48:17 - now I'm trying to it's I know that
48:19 - there's a lot of viewers who are very
48:21 - experienced do not who I have a lot of
48:22 - experience with a lot of the stuff that
48:23 - I'm talking about but there are also a
48:25 - lot of new people coming to learn about
48:26 - coding and I really want to make this
48:28 - channel accessible especially this time
48:30 - of year which is September when students
48:33 - are taking their first programming
48:34 - classes and that type of thing yeah I
48:38 - didn't put machine learning on here
48:39 - explicitly so simple harmonic motion can
48:42 - I can I do a warm-up is it okay so let's
48:45 - let me just commit to doing let and var
48:48 - for I feel like I need to dip so I
48:55 - should have done this voting thing let
48:56 - okay let's mmm let's start with the
48:59 - simple let's let me just do the let and
49:01 - var thing can I just do that as a
49:03 - warm-up I think I think it'll be okay
49:05 - okay so let me get started here
49:13 - I am going to go to the desktop and I'm
49:23 - gonna say p5 generate - B let var Const
49:31 - let's see if this works so I'm using a
49:33 - new tool called p5 manager I didn't
49:35 - actually publish that video but I made a
49:37 - video about it which will create p5
49:40 - projects for me and now I'm going to CD
49:42 - into that directory I'm going to open it
49:44 - up and add them and we look at the code
49:50 - and I'm going to get rid of all the code
49:54 - and I'm going to now run a server and go
50:03 - to the browser ok and let me just make
50:14 - sure this is working I make that change
50:19 - there we go okay and one thing I don't
50:22 - this is sort of standard for p5 sketches
50:25 - but I like to remove the default CSS
50:27 - that comes with them there we go and
50:30 - also there's no reason for me to have a
50:32 - canvas and the camera went off ok
50:36 - no people asking why did you do the
50:38 - voting because that was curious I don't
50:45 - know it's voting really the best way to
50:46 - decide it's a good way so it's one way
50:49 - but sometimes the universe has its own
50:53 - plan in mind alright so now I need a
50:57 - marker I'm just I'm always unprepared
51:01 - but I'm even more unprepared than usual
51:06 - and I'm gonna do a video
51:11 - oh yeah p5 mode in processing I could
51:13 - use it I'm gonna do a video I'm that's
51:15 - the whiteboard that's me about let and
51:19 - bar and possibly Const now here's the
51:23 - thing I'm going to attempt to explain
51:25 - them
51:26 - and why what why what let means in
51:29 - relation to var know if you're a
51:31 - beginner and you're just learning to
51:32 - code what do you know just say let but
51:37 - if you've been using var for a while why
51:39 - is this there this new let thing and the
51:40 - one hand you could just say just use let
51:42 - instead of bar I'm gonna say this again
51:44 - in a second thinking this through and
51:46 - then I'm gonna try to explain what why
51:48 - let is different why it solves some
51:49 - problems in JavaScript previous versions
51:52 - of the JavaScript language but I'm not
51:54 - really sure I know entirely what I'm
51:56 - talking about which is really goes for
51:57 - everything but especially in this case
51:58 - so yeah can you guys hear people there's
52:03 - people in the hallway the doors not open
52:04 - but I will do I'm gonna do this simple
52:08 - harmonic motion next this is a warm-up
52:10 - because I feel like I need to get warmed
52:12 - up because I'm but I'm if I make
52:18 - mistakes or I get this wrong please
52:20 - correct me okay all right here we go
52:24 - first of all it's very important to
52:27 - always make sure you stay hydrated
52:50 - okay hello over again this is a video
53:04 - sort of about bar but this is a video
53:09 - about bar in 2017 now I should admit
53:13 - that I'm really way way way behind the
53:17 - times because in 2015
53:21 - something came out called es6 what is
53:27 - es6 well es6 is short for e c MC a
53:34 - script 2015 what's the chance that i got
53:39 - that right hold on a sec oh I'm in the
53:48 - wrong screen what is it called
53:50 - E CMC a script no ECM a I got an extra C
53:56 - in there okay this is an extra seat ECMA
54:07 - it stands for something some kind of
54:08 - consortium of Hmong mango loving
54:13 - astronauts I don't know but this is a
54:15 - consortium of people who come together
54:17 - to talk about what what is the syntax of
54:21 - the JavaScript language and how should
54:23 - it work and so in 2015 which is quite a
54:26 - while ago at this point the the
54:29 - consortium came together and thought
54:31 - let's instead of saying bar to declare a
54:33 - variable let's declare a variable right
54:37 - instead of saying var x equals 100 let's
54:39 - declare a variable by saying let x
54:42 - equals 100 and also quite possibly let's
54:46 - offer an alternate option by saying
54:49 - Const x equals 100 so currently right
54:54 - now if you were to write this into your
54:56 - code all three of these would
54:59 - valid JavaScript statements but they
55:02 - would all do something slightly
55:04 - different and I should also mention that
55:06 - one of the reasons why it's taken people
55:07 - like me years to get with the program is
55:11 - because even these aren't necessarily
55:14 - supported by every single web browser
55:16 - that people are using in the world I
55:19 - think at this point you know most modern
55:23 - web browsers support es6 natively and if
55:26 - you're a web developer they're
55:27 - professional web developer there are all
55:29 - sorts of ways to put something behind
55:31 - the scenes that so that if somebody is
55:33 - if the code is written in es6 but the
55:35 - web browser doesn't support it it works
55:37 - anyway this is not the subject of this
55:39 - video but this is a subject of what are
55:42 - these things they're by the way isn't
55:44 - there like es8
55:45 - like I'm already way behind so I'm like
55:47 - here making fight yet yes
55:49 - six video somebody in the future when
55:50 - it's like es 712 will be like amused by
55:53 - this old historical antiquated like
55:56 - video this human being with actual like
55:59 - human body instead of robotic whatever
56:01 - anyway I'm off track now yes six is a
56:04 - standard I'm starting to use it in all
56:06 - my videos so what is the difference why
56:10 - so I'm gonna just tell you what the
56:12 - difference is in technical terms and
56:14 - then I'm gonna go and explain it
56:16 - var X uses something called block scope
56:22 - and here's the thing if you're just
56:24 - learning to program for the first time
56:25 - you go watch the variable videos and
56:28 - just substitute let for bar if you're
56:29 - interested if you've been programming
56:31 - for a while you want to know what this
56:32 - new stuff is about then this video is
56:33 - for you or if you just started learning
56:35 - a program and you really can't want to
56:36 - know this like level of detail then I
56:38 - guess keep watching let X oh my god I
56:43 - said it wrong it did it totally wrong
56:45 - oh by there's like there's like so many
56:48 - people watching this video we're just
56:49 - like screaming at their screen for like
56:52 - the last 30 seconds bar uses function
56:56 - scope let uses block scope and if you
57:04 - program if you learn to program in Java
57:06 - drop by in Java in C++ in processing
57:12 - which is built
57:13 - of Java and this is how I learned to
57:14 - program everything was always block
57:16 - scope it's the only way that I think I
57:18 - actually just when I even use var I'm
57:21 - just assuming it's block scope and
57:22 - writing code as if it is block scope but
57:24 - it's not and that's what's prone to
57:26 - error and block scope I personal mean
57:29 - they know I don't want to I don't want
57:31 - to be too down on function scope I'm
57:32 - sure function scope is a very nice scope
57:35 - and I would love to hang out with
57:37 - function scope and have some time
57:38 - together but I prefer block scope and so
57:42 - let's let me get this cube this is way
57:44 - too long of a video to explain this let
57:48 - me get to the computer and start to
57:49 - explain what I mean here okay I'm over
57:52 - here so I have some code and I am going
57:59 - to start writing some code so what I'm
58:00 - going to do is I'm gonna say var x
58:03 - equals 100 okay let's say var x equals
58:07 - 100 I'm going to say console dot log X
58:11 - console dot log X this is a look a weird
58:18 - example to start with that I'm gonna get
58:20 - to some examples that will hopefully
58:21 - help a little bit more but what should
58:22 - happen when this code runs set up starts
58:26 - this first line of code should execute
58:28 - and what should say I don't know what X
58:29 - is are you nuts
58:31 - I haven't heard about anything named X
58:32 - now I'm gonna say what X is and if then
58:34 - if it was able to go onto the next line
58:36 - of code would say what X is and then it
58:38 - would console.log 100 but that's
58:39 - actually not what's gonna happen I'm
58:41 - gonna refresh all I care about is the
58:43 - console here I got undefined in 100 well
58:47 - that's not so unreasonable right because
58:50 - X is something that's undefined but
58:52 - shouldn't I really maybe possibly get an
58:55 - error there let's look what happens if I
58:56 - switch this now to let uncaught
59:01 - reference error X is not defined so you
59:03 - might say oh I like the other way better
59:05 - because it didn't break but here's the
59:07 - thing the fact that it is not letting
59:10 - you talk about that variable above where
59:14 - it was declared and initialized is is a
59:19 - is more is is a situation which is less
59:23 - prone to error let me
59:24 - show you some reasons why so first of
59:27 - all one thing that's interesting is I
59:29 - could do this let X then I could say X
59:34 - equals 100 and then I could put the
59:37 - console.log here this would now give me
59:40 - exactly what var did so why why what's
59:45 - going on here well there's something in
59:47 - JavaScript with var called wasting
59:54 - wasting I'm so proud of myself my
59:57 - posting is because there was a long
59:58 - period of time where people would say on
59:59 - what that is but now I do I think and
60:02 - I'm gonna explain it so if I'm hoisting
60:08 - what is hoisting so I'm gonna write some
60:10 - other code I'm gonna say I'm gonna say
60:14 - for VAR Ivy's bar I equals 0 is less
60:17 - than 100 I plus plus I'm gonna write a
60:19 - loop and I'm gonna like some stuff will
60:22 - happen here and then I'm gonna say var x
60:26 - equals Mouse X plus 100 and then I'm
60:29 - going to say if X is greater than 50
60:31 - then bar Z equals 20 and ye and and then
60:38 - draw an ellipse but you know whatever
60:40 - bar y at X comma Y 100 100 so this is
60:44 - sort of nonsense code but I'm I'm
60:47 - writing this code to make a point there
60:50 - is a point when you write code like this
60:53 - in ES spot previous to es6 in javascript
60:57 - what the interpreter actually means
61:00 - you're actually modified before it runs
61:02 - it does this thing called hoisting and
61:04 - it actually does this I don't think
61:10 - right and then I'm going to take out it
61:12 - it adds like a line of code at the top
61:14 - of the function that declares all the
61:15 - variables and then deletes all the
61:19 - variable declarations so this is why
61:22 - this is why those variables with var
61:26 - there's variables with VAR have function
61:28 - scope because even though if I declare
61:32 - var down here VAR y equals 20 the
61:35 - hoisting process puts the Declaration of
61:37 - the top
61:37 - and it's a variable that's available for
61:39 - the whole for the entire function setup
61:43 - it has function scope even though it's
61:45 - declared and only used inside of this if
61:46 - statement so I can say things like
61:48 - console.log Y up here and I can do
61:52 - things like console.log I at the bottom
61:55 - so I'm gonna get undefined because Y
61:58 - doesn't have a value yet and then I'm
61:59 - gonna get what am I going to get down
62:01 - here console.log 100 because that loop
62:03 - is gonna finish and left eye with the
62:04 - value 100 so that's exactly what I got
62:08 - and even drew part of that ellipse and
62:09 - then so technically like this code is
62:15 - sort of problematic because I've
62:17 - declared two variables I've wasted two
62:19 - variables called I right so now the so
62:25 - this is really the this is really the
62:26 - issue this wasting process which happens
62:29 - behind the scenes and lets variables be
62:31 - available to a broader scope beyond
62:34 - where they are actually declared and
62:35 - used makes big code prone to error at
62:39 - least in my experience so you know for
62:42 - example if I'm writing a loop here if
62:48 - I'd simplify this like and I want to
62:51 - have a separate variable for I somewhere
62:53 - else I'm really just I'm running into
62:55 - trouble the fact that I can actually use
62:57 - this variable I afterwards is there's
62:59 - all these problems that could happen by
63:01 - accident if I had another variable that
63:03 - was more global called I and the scope
63:05 - can get really confused so I should
63:09 - probably do this video so using let is a
63:14 - nice solution to this problem now I
63:16 - don't know so why is it called let
63:19 - versus var I mean in my understanding of
63:21 - this is well why not just change the
63:23 - behavior of bar well if you change the
63:26 - behavior of bar then you're possibly
63:28 - going to break all this code that has
63:31 - been written over time so in order to
63:32 - write order to have a new version of
63:34 - JavaScript that has variables that only
63:36 - have block scope block scope they're
63:39 - only available within whatever curly
63:41 - brackets they're declared in whether
63:42 - that's if whether that's for a new name
63:47 - has to be invented so we just have to
63:49 - all change over and say like
63:51 - now let's just all use let let's use let
63:53 - I can't remember but let's use let let's
63:54 - use left let's use yeah I'm gonna just
63:55 - let them to use let let again this video
63:59 - could have been made 30 seconds by me
64:01 - just saying hey remember that thing
64:02 - called VAR it's called let now but there
64:04 - is actually a technical difference and
64:05 - let's look at that again right
64:09 - right now I'm gonna run this code and we
64:14 - see 100 i console log i as 100 if I
64:18 - change this to let I will get an error I
64:21 - is not defined and that's the error that
64:24 - I want I is only available inside of
64:27 - this block this is the block that's the
64:31 - block I has block scope if I put an if
64:34 - statement in here if mouse X is greater
64:37 - than 20 let J equal 20 console.log J I
64:46 - will get an error here because J is only
64:49 - available for this and you want your
64:51 - variables to only be available for I
64:54 - mean sometimes you need global variables
64:55 - I'm not saying all variables should have
64:56 - that little as scope as possible but
64:58 - they should have the smallest scope that
65:01 - is needed it helps you organize your
65:02 - code helps you be less prone to error I
65:04 - mean they're making errors is fun
65:05 - everybody should make errors but this is
65:07 - a helpful thing okay huh what do you
65:11 - guys think did I explain that what
65:13 - questions do you have
65:14 - I guess write them in the comments and I
65:17 - didn't get to talking about what Const
65:22 - is so let me try let me try to talk
65:26 - about in a separate video in the next
65:28 - video what Const is and if there's
65:30 - anything that I missed or some questions
65:32 - there's a lot of chat going on right now
65:33 - if you're watching this as an edited
65:34 - video later is there anything that I
65:36 - missed I'm gonna go check that live chat
65:37 - and talk about at the beginning of the
65:39 - next video and there's a lot more es6
65:41 - stuff that i want to talk to talk about
65:42 - so there's classes and there's promises
65:46 - so only get to that stuff eventually but
65:47 - I just wanted to talk about in this
65:48 - video
65:49 - let
65:54 - all right how did I do I should do a
65:58 - straw poll like that was like on a scale
66:01 - of one to ten that was a useful and
66:04 - interesting video that made sense I
66:06 - would give myself like a three and a
66:08 - half but maybe you'll be more generous
66:10 - to me okay I'm looking to see if there's
66:16 - any questions question when are you
66:18 - going to harmonic motion after I talk
66:20 - about const super interesting and clear
66:22 - thank you yom that's i'm glad to hear
66:24 - that eight out of ten out of ten i was
66:29 - terrible
66:30 - okay okay okay fun fun out of ten ten oh
66:33 - you guys watch do nice you know i just
66:34 - saying this because i need the positive
66:36 - feedback great thank you guys okay so I
66:41 - think I should move on I don't think I
66:43 - did I get anything horribly wrong did I
66:45 - miss any crucial details it doesn't seem
66:48 - like I did all right
66:53 - I'm saying okay I'm thank you for all
66:55 - those comments alright I'm gonna move on
66:56 - and talk about Const this is not
67:00 - probably and more likely to get wrong
67:03 - okay I'm back for another video about
67:06 - stuff that's a es6 again if you're just
67:10 - watching my beginner programming videos
67:12 - and just learned about programming you
67:14 - might just go back to watching those
67:15 - this is a little bit of behind the
67:16 - scenes stuff very technical but it is
67:18 - interesting and it can be useful the
67:20 - thing I want to talk I talked in the
67:21 - previous video about let and var and the
67:23 - difference between those two things and
67:25 - you know you could for most sketching
67:27 - that I'm gonna do in p5 and making crit
67:30 - weird experiments I could use them
67:31 - interchangeably and not worry about it
67:32 - too much but there is another term that
67:35 - you're going to see you're gonna see
67:37 - people saying var X if they are using
67:40 - style previous to es6 or 2015 ECMAScript
67:45 - you're gonna see let if people are using
67:47 - es6 a more modern style of JavaScript
67:50 - but you're also gonna see people using
67:52 - Const and what does Const mean now there
67:55 - is no reason you have to ever use Const
67:58 - ever I mean somebody I'm sure come up
68:01 - with a reason why you you might have to
68:03 - but what I'm saying is for the things
68:04 - that I'm making I could just use let but
68:07 - my
68:07 - kotas perhaps a little less efficient in
68:09 - the way that it runs and uses memory so
68:11 - cost is only an option to help with the
68:14 - efficiency of how your program runs and
68:17 - manages memory on the computer because
68:19 - if you have some data if you have a
68:21 - variable in your program that you know
68:24 - it's value is never going to change the
68:27 - computer can be source can be smart
68:29 - about how it stores that information it
68:31 - doesn't have to like leave extra space
68:33 - for extra tough now I'm kind of
68:34 - oversimplifying but that I think is a
68:35 - useful way to think about it so for
68:38 - example if I know that I want to have a
68:40 - variable called cat and I want to store
68:44 - in it the number 99 I don't need to say
68:46 - let cat if cat is never going to have
68:49 - another value ever I can say Const for
68:52 - constant because cat is going to be a
68:54 - constant now here's the interesting
68:55 - thing this makes sense when it comes to
68:57 - just numbers but there's more to it than
68:59 - that
68:59 - what if you're declaring a function or
69:02 - what if you're clearing an object so
69:03 - let's at least first look at the simple
69:05 - simple scenario of working with numbers
69:07 - so I'm gonna come back over here and all
69:11 - of this I can do just in the JavaScript
69:14 - console in the browser itself so if I
69:16 - say let X equal 50 can you guys see this
69:18 - let me make a little bigger now I can
69:22 - look at the value of x and the value of
69:24 - X is 50 and I could say x equals 100 and
69:27 - now the value of x is 100 let's do this
69:30 - again let's say Const y equals 50 so now
69:35 - I have a variable called Y which is a
69:36 - constant its value is 50 now I'm gonna
69:39 - say y equals 100 uncaught type error
69:43 - assignment to a constant variable so you
69:46 - cannot assign to a constant variable you
69:52 - cannot reassign the value it's forever
69:54 - 50 so I was I feel like I need to go
69:58 - back to white bore but I don't think I
69:59 - do so what does this mean in terms of
70:01 - objects it's a little bit strange and
70:03 - I'm not sure I fully understand this
70:04 - behavior so I might have to like come
70:06 - back to this a little bit and I'm seeing
70:08 - alka putting some interesting
70:10 - suggestions in the chat here ok so let's
70:13 - look at what if I say what if I have
70:15 - like a particle constant particle and
70:18 - the particle has an X and a Y so it's
70:20 - really a JavaScript object oh I made it
70:23 - Const let's find we know what it's going
70:24 - to do when it's let particle equal it's
70:27 - just an object like anything so this is
70:30 - what it is it's an object it has an x
70:32 - and a y it's a constant but
70:35 - interestingly enough when you make an
70:36 - object a constant that doesn't mean you
70:39 - can't manipulate the inner workings of
70:41 - the object like I can actually say
70:43 - particle dot X equals 200 and that is
70:49 - totally valid so I can change those
70:52 - internal variables because those
70:54 - internal variables themselves are not
70:56 - constant I can even do things like which
70:59 - surprised me when I first saw this I can
71:02 - say particle Z equals 50 which means I
71:05 - can add another property to that object
71:11 - but what I can't do is I can't now say
71:15 - particle equals I'm going to recreate a
71:17 - new object I'm gonna recreate that
71:21 - object uncaught error assignment to a
71:24 - constant variable i cannot suddenly say
71:27 - particle is now the string hello this
71:29 - protects me from making some errors too
71:31 - because if I'm using a ver but I can't
71:33 - reassign it by accident is something of
71:34 - a different type so I can't make it a
71:37 - new object so again I could use let but
71:41 - this is something that allows the code
71:42 - perhaps to run a bit faster they use a
71:44 - little bit less memory so if you know
71:46 - that this is and maybe to protect
71:48 - yourself against some errors so this is
71:50 - a useful technique and mostly I'm
71:51 - explaining this because when you look at
71:52 - examples you're gonna see it in a place
71:54 - where you'll see it often at least where
71:57 - I see it often is sorry I want erase I
72:04 - click up these tissues to race with let
72:06 - Matt to maybe let's edit out this
72:07 - erasing or like speed through it or
72:09 - something I can't I also can't use my
72:12 - right and for erasing the way that I in
72:18 - mind most of my videos in the way that
72:20 - I've shown how to declare a function is
72:23 - saying function you know
72:27 - go like this this is a function
72:31 - definition
72:32 - I say function the name of the function
72:34 - parenthesis with whatever arguments are
72:36 - in there this is the equivalent of
72:38 - basically saying var go equals function
72:42 - or of course now we know it's actually
72:46 - the equivalent of saying let go equal
72:48 - function if i'm using es6 so if i'm
72:53 - declaring all these functions if I'm
72:54 - writing functions into my code it's
72:56 - often the case that I never want to
72:58 - reassign or alter that function that
73:00 - function is done so function I'm just
73:02 - intending to use in my code so you will
73:03 - see this quite a bit
73:05 - Const go equals function so you could
73:08 - consider this again this is a lot now
73:12 - let me type this over here so you can
73:14 - see it so in other words what I'm saying
73:18 - is let's say I'm gonna have some
73:19 - functions function go that's one way of
73:22 - declaring a function the way that I
73:23 - typically have done in my videos but I
73:26 - can say Const go equals function so
73:29 - again while this might offer some
73:32 - optimization benefits
73:34 - it doesn't necessarily offer a lot of
73:36 - benefits for teaching and education
73:38 - especially for beginning programming
73:40 - which is why I will continue to use the
73:42 - top syntax because if I'm going to teach
73:44 - somebody for the first time ever how to
73:46 - write a function Const go equals
73:48 - function is a bit more probably
73:51 - confusing that just function go so I
73:53 - think that's everything I should say I'm
73:57 - gonna poke pause for a second Siraj just
74:01 - released his video because I got a
74:03 - notification this should be this kind of
74:04 - edit this out did I miss anything about
74:07 - Const mmm that's important how does
74:13 - Const fact scope good question I assume
74:16 - constant uses block scope also so there
74:21 - was actually just an important question
74:22 - in the chat just now I talked a lot
74:23 - about scope in the previous video and I
74:26 - probably want to in some ways now that I
74:28 - think I probably made a video just only
74:29 - about the idea of scope but what how
74:32 - does Const affect scope so const also
74:35 - uses block scope let and cons both use
74:38 - block scope the same exact way
74:40 - the difference is const is a variable
74:42 - that can never be reassigned a Chuck spy
74:56 - in the chat is asking where can I learn
74:57 - all this stuff I think probably my
74:59 - beginner JavaScript series is where you
75:01 - can start from scratch okay I think this
75:04 - is good I'm not seeing anything oh yeah
75:08 - why not just cannot using the arrow
75:11 - syntax yet so let me mention that so one
75:14 - thing I should mention is actually es6
75:17 - there's also another way of declaring a
75:19 - function that involves equal greater
75:21 - than and almost it looks like an arrow
75:22 - this is called the arrow syntax I'm not
75:26 - using this yet I will come back and make
75:27 - a video about this so you I could go
75:29 - even a step further with how I might
75:31 - declare a function by incorporating this
75:33 - arrow syntax but I'm not ready for that
75:34 - yet I got to take little tiny steps into
75:37 - the es6 pool okay thanks for watching
75:40 - these this this video about Const I hope
75:42 - this helped please ask your questions
75:44 - and offer your Corrections in the
75:46 - comments and I'll see you soon thanks
75:51 - that's called the lambda expression oh
75:58 - I'm just being told this is called a
76:00 - lambda expression thank you okay alright
76:09 - so we got those out of the way and
76:11 - that's some good stuff that I've done
76:12 - that's been on my list for a while
76:15 - and now what I'm gonna actually do is
76:19 - rename this folder simple harmonic
76:22 - motion rename maybe well let me do that
76:30 - okay let me just don't save
76:36 - we move this over here you talk amongst
76:38 - yourselves for a second go watch Suraj's
76:40 - video is still the same results here ok
76:46 - where do we add 5:30 we're doing ok so I
76:51 - got this one done you can take this one
76:52 - off simple harmonic motion I'm looking
76:56 - for my this one I'm just gonna call this
77:00 - I don't need to simple harmonic motion
77:03 - and one thing I'm going to show you is
77:08 - if you're familiar with memo aachen the
77:12 - artist mmm
77:15 - I'm most of all the name simple harmonic
77:18 - that Google will correct me yeah here we
77:23 - go so this is a wonderful series of
77:29 - artworks and sorry I am trying to run my
77:43 - server again this is a series of
77:47 - artworks about simple harmonic motion
77:50 - and it's sort of the inspiration for
77:53 - what you can do with this very simple
77:55 - idea I'm also going to look for so one
78:02 - thing I want to do is just search on
78:04 - youtube simple harmonic motion shipment
78:09 - I already have a video tutorial already
78:16 - but I don't think that I code anything
78:19 - from scratch in this one listen this one
78:21 - only has like eight and a half thousand
78:23 - views because one of my old videos let's
78:25 - quickly take a look at scan through it
78:27 - know that ignore the ad ignore the
78:29 - ignore the ad I apologize I apologize
78:31 - skip skip so you guys can't hear the
78:34 - video right now I could switch something
78:35 - to have you here
78:36 - so I'm explaining about sine and cosine
78:38 - then I already have some code example
78:40 - I'm just showing code examples and
78:42 - talking about them so that's useful but
78:44 - it's also in processing so this is
78:46 - worthwhile look at me look how look how
78:48 - young I am
78:49 - this video I have the same beard
78:51 - different glasses different glasses very
78:54 - very little grey hair and I don't have
78:56 - an elbow scar and I have much much more
79:00 - range of motion okay now you guys arm
79:01 - you care about this okay okay go away
79:05 - younger person you okay making YouTube
79:11 - videos really aged as a person let me
79:13 - tell you that's I think from to that I
79:15 - think I made those videos possibly in
79:17 - 2012 so I'm not sure
79:24 - all right let's okay so what I want to
79:28 - do I kind of want to just basically do
79:29 - this but I also need Anna Rick maybe
79:32 - I'll do this in two parts
79:34 - alright this is going to be a pretty
79:37 - simple one and actually probably these
79:42 - have wonderful sound that you won't hear
79:43 - okay a DNA strand honey all right all
79:47 - right all right everybody relax relax
79:49 - relax
79:49 - B I'm talking to myself here when I
79:52 - drink stay hydrated it was really nice
79:54 - to see everybody's feedback about you
79:56 - names guest tutorial that I released um
79:58 - she has a clip oh I'm streaming but I
80:06 - don't see myself you can hear me though
80:09 - right
80:18 - hold on everybody why you can hear me
80:22 - but you can't see me restarted the
80:24 - computer still can't see me can you hear
80:36 - me okay you can hear me let me look at
80:44 - this why am I not seeing any of the
80:48 - Blackmagic inputs No so can't see me
80:55 - alright everybody hold on a second let
80:57 - me try to diagnose this
81:21 - just give me a second I'm sorry I
81:23 - shouldn't have started streaming until I
81:25 - knew it was working
81:40 - let me up I found myself found myself
81:46 - and now you can see me I'm in the void
81:49 - how do I get the mean so that's here I'm
81:56 - gonna delete this I don't know why when
81:59 - I restarted the computer all the inputs
82:01 - weren't showing up
82:16 - it's crazy how I have to redo this stuff
82:22 - and while I'm streaming weird alright
82:33 - understand why these black magic things
82:37 - are bane of my existence
82:55 - sorry everybody this must be
82:57 - excruciating to watch here I am
83:26 - well it's alright I'm gonna try
83:29 - restarting OBS I guess
83:31 - oh no but I have to quit to do that hope
83:37 - that works no I don't think this is OBS
83:43 - is fault I think this is black magic
83:49 - well let me make sure this is actually
83:52 - on it is do I see it yeah sorry
84:00 - everybody I'm gonna attempt to sorry I
84:05 - don't want to just be streaming the not
84:07 - working thing I thought I'd just like I
84:09 - clicked the streaming button really
84:10 - quickly because I thought like restart
84:12 - and start streaming yeah because the
84:13 - computer froze but I'm gonna need to
84:16 - restart OBS to try to reconnect to the
84:19 - stuff so I'm gonna stop streaming
84:21 - hopefully I'll come back I mean I will
84:23 - come back no matter what but hopefully
84:25 - I'll come back quickly