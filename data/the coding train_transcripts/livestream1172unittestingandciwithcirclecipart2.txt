00:01 - okay I'm back sorry about that thank you
00:05 - for your patience with me this now now
00:10 - that I got that little thing out of the
00:12 - way I have an easier time with kind of
00:16 - moving forward today so let me get my
00:18 - headspace in the right place and make
00:20 - sure everybody's here and watching again
00:26 - interesting I'm being told that oh
00:30 - there's big white glare on the board
00:32 - that's good to know I'm being told that
00:38 - YouTube limits the livestream
00:40 - notifications to two per day so if I get
00:45 - to a third one you might not get a
00:48 - notification when I finish this session
00:51 - now which I expect to go for at least
00:52 - another hour if not longer
00:55 - then I will try to set up a time if I
00:59 - had to guess right now I'm going to
01:02 - livestream now until 12:30 or so and
01:05 - then come back around three or four and
01:07 - that's all Eastern Time might I'm sorry
01:09 - for being my time centric okay so now
01:16 - here's the thing I'm so sad because I
01:18 - had like the good energy momentum thing
01:21 - so I wonder if I should even just start
01:24 - over and just pretend this was the
01:29 - beginning of my livestream and I'm sorry
01:36 - I have this cold I should mention again
01:38 - that I should start over and yeah we
01:43 - just start over and Matthew oh wait
01:47 - mati I think might actually be watching
01:49 - right now as I saw what you could choose
01:53 - to use the beginning and then splice it
01:57 - together but I think I think since I
01:58 - probably lost a lot of people and then
02:00 - new people joined and restart and fix
02:02 - the white Claire okay we talked about
02:06 - there's a white glare here where's the
02:07 - white glare I don't actually see it this
02:09 - right here or like up here
02:23 - what's that glare as I wait for the 20
02:33 - seconds just to the right of your
02:41 - writing okay
02:43 - really it's interesting I'm looking at
02:46 - it and I oh there's always a little
02:47 - glare there it's not so bad like if I if
02:52 - I draw here can't you see that the
02:55 - problem is its glare II there's not a
02:57 - lot I can do about it like it's the
02:59 - lights changed a little bit what's
03:02 - causing that glare hold on no glare yeah
03:08 - it's this light for sure so there we go
03:12 - when I bounce the light they're better
03:20 - better that looks better better better
03:27 - all right okay let me erase that yes
03:34 - perfect now thank goodness all right
03:38 - so sorry everybody I hope circle see hi
03:43 - anybody Circle C is actually watching
03:45 - this and like oh my god this idiot
03:47 - what's wrong with us like agreeing to do
03:50 - some content with this guy yeah alright
03:53 - let's come back and go to here and go
03:58 - back to here and here all right
04:06 - someday we'll see yours I'm gonna get to
04:10 - off-topic here but yes someday I will
04:13 - get it together to really like redo this
04:15 - studio but not today
04:26 - hello welcome to I don't know I'm in the
04:28 - wrong hello welcome to a special coding
04:38 - train episode this episode is the first
04:40 - in a series of some number of videos
04:43 - that I don't know right now because I
04:45 - haven't made them yet all about unit
04:48 - testing and continuous integration and
04:50 - this really fits into my playlists and
04:53 - topics about open source development so
04:56 - you know if you've never used git or
04:58 - github before watching this before
05:00 - you're here I might suggest going or
05:02 - watching my git hub introduction to
05:04 - github videos if you've never even never
05:06 - used node you might even watch my like
05:08 - what is node video I'll link to both of
05:10 - those in the description but other than
05:12 - that this is for the total beginner who
05:15 - has never done any unit testing or
05:17 - continuous integration and you know why
05:19 - I know that this video is for that
05:20 - person I am that person before last week
05:26 - I barely I mean I've done a little bit
05:28 - of unit testing and I've dabbled I've
05:30 - read I've seen other people do it mostly
05:31 - I'm afraid of it I think like others
05:33 - just gonna make it so I can never get
05:34 - anything done any more people sorry no
05:36 - it's gonna make it so you can get
05:37 - everything done any more so I'm here to
05:38 - investigate that and I should have
05:40 - mentioned this at the out rate this
05:41 - video series is sponsored by circle CI
05:43 - which is a company that provides as a
05:45 - service continuous integration now what
05:48 - that is I will get to eventually
05:50 - unfortunately you're gonna have to watch
05:52 - me cuz you talk to get to that but let's
05:54 - so let's start so I'm gonna come over to
05:56 - the whiteboard for really no reason
05:58 - other than to write the word here unit
06:01 - testing so continuous integration could
06:04 - be used for a variety of different
06:06 - things but probably one of the more
06:08 - common things it's used for from what I
06:09 - understand is TDD or test-driven
06:13 - development so let's think about this I
06:15 - was saying another video series you go
06:17 - to watch which is very useful about unit
06:18 - testing and with circle CI it's from MGP
06:22 - a fun fun function I will link to those
06:24 - videos in the description as well and
06:25 - npj says that you can think of software
06:28 - a software project p5 sketch you can
06:30 - think of my snakes and ladders game from
06:32 - last week as a big project divided into
06:35 - lots of little parts there's
06:36 - player part there's the snake part the
06:39 - latter part all of these are units and
06:41 - what if I change something about the
06:44 - player to fix a bug but don't realize
06:46 - it's also going to break whatever the
06:48 - LAT ladder functionality or the snake
06:50 - functionality is in this case if I have
06:53 - tests that run for each unit to say this
06:57 - little test code runs and says the
06:59 - ladder is working this little test code
07:01 - runs and says the snake is working this
07:02 - little test code runs says the player is
07:04 - working if I change just one I can run
07:07 - all the tests and know that my code is
07:08 - fine and the benefit of this is not just
07:11 - for your own personal sanity but for
07:13 - collaboration and open source projects
07:15 - because this can be automated you can
07:17 - have whenever somebody submits a pull
07:20 - request to your project that tests are
07:22 - run and it doesn't just give you
07:23 - confidence about merging it gives the
07:25 - contributor a good feeling and
07:27 - confidence that the tests have run and
07:29 - if they have it run then you can help
07:31 - them figure out how to fix it so that
07:32 - they do run so all this is good good
07:34 - good good good good I'm going to learn
07:36 - how to do it and try to adopt it more in
07:37 - my work now where have I encountered
07:40 - this before the place where I have a go
07:42 - the wrong buttons well I'm coming over
07:45 - here the place where I have encountered
07:47 - this before is with the open source
07:49 - project p5.js so p5.js you might be
07:52 - aware of is a library so it's a
07:57 - JavaScript library that I use for a lot
07:59 - of my tutorials learning about the
08:00 - basics of coding and graphics and
08:02 - creative coding and data stuff and all
08:04 - this sort of stuff so all of the source
08:05 - code for p5.js as a project is here and
08:08 - one thing you might not realize is that
08:09 - maybe you've encountered p5.js as just
08:12 - this file pause for a second because I
08:16 - this would be nice to actually just open
08:18 - up the snakes and ladders
08:29 - you might have encountered p5.js as just
08:31 - this file and here I have my snakes and
08:35 - ladders game in which you can see like
08:38 - that's the p5 just library and if I
08:40 - click on it it's like oh my god
08:41 - this is all the p5.js code but if you're
08:44 - working on developing the library
08:45 - scrolls girls girls girls if you're
08:47 - working on developing the library it's
08:49 - likely that you're not you don't want to
08:50 - work with that file so it's divided into
08:53 - lots of units and those units you can
08:55 - find in the github repository in this
08:58 - folder called source so in source you
09:01 - can see there's all the code for all the
09:03 - color stuff core stuff is like the core
09:04 - drawing functionality data events and so
09:07 - if and then there's a build process so
09:11 - once you finish doing your little change
09:13 - or whatever then the process the build
09:15 - process runs and finishes off with this
09:18 - you know smooshed together p5.js file
09:21 - that is all of the bits all of units
09:23 - together in one file so it can be used
09:24 - more easily so during that build process
09:27 - tests run so this is the source folder
09:30 - these are the source folders for example
09:32 - I'm gonna go here one of one of the
09:34 - aspects that I worked on a while ago is
09:36 - the random functionality so there's a
09:38 - there's a file called random dot j/s and
09:41 - if I click on that we can kind of look
09:43 - down and see like oh look here's like
09:45 - look this is the actual random number
09:48 - generator code that's inside the p5.js
09:51 - library this is what actually runs and
09:52 - it's kind of really interesting I should
09:53 - do a video about this linear
09:54 - congruential generator stuff but and how
09:58 - random seeding works but that's another
09:59 - topic so we can see this is the code now
10:01 - where was that we have to remember that
10:03 - was in p5.js
10:06 - source math.random so now let's take a
10:09 - look and say there is also but there is
10:15 - also test there's a folder called test
10:17 - folder called source folder called test
10:19 - I'm gonna go into test and look at this
10:21 - oh and then I'm gonna go into unit and
10:25 - all of a sudden look at this don't these
10:27 - directories look very familiar to you
10:29 - for every single unit piece of a puzzle
10:32 - of the p5.js library there is a
10:35 - corresponding test and so let's go right
10:37 - into math and let's go right into random
10:40 - now this is not
10:40 - source code for the library remember
10:42 - legally you could cut back and forth
10:44 - between the video and look the same but
10:45 - if I go here you're going to see this is
10:48 - a test now you might be wondering like
10:49 - whew what is sweet mean and what is what
10:53 - is I'm gonna look like test and assert
10:57 - and type of what is all this code so
10:59 - this is where you most likely want to
11:01 - involve yourself with it's a weird way
11:04 - to say it but might want to select and
11:06 - use a testing framework or a testing
11:08 - library if I write about this p5 uses a
11:11 - testing framework called mocha which is
11:14 - a very popular one I'm gonna as I get a
11:16 - little further into this tutorial used
11:17 - something called jest and I'll talk
11:19 - about the differences or what that is
11:20 - and I'll get to that in a little bit but
11:22 - we can start to even without knowing
11:23 - anything about it we can see some code
11:25 - here because look at this alright this
11:27 - is how we test the function random the
11:30 - first thing we do is we set the random
11:32 - seed and then we pick five random
11:33 - numbers then we set the random seed
11:35 - again and pick five more random numbers
11:37 - what should that do what makes it
11:39 - correct
11:40 - if when you send a random seed if you
11:41 - get the same sequence of random numbers
11:43 - so first of all though before we even do
11:45 - that like does random even produce a
11:47 - number so we should check to make sure
11:48 - all ten of those things are numbers and
11:50 - that's what this assert type of blahblah
11:52 - as a number is checking then we should
11:54 - check to make sure well random supposed
11:55 - to give us a number between 0 and 1 so
11:57 - we should check to make sure all those
11:59 - numbers are between that range and then
12:01 - we should test to make sure random seed
12:03 - worked are they all is it the same
12:04 - sequence of random numbers wake also
12:06 - test if when you pass in the argument 5
12:08 - if you get a number between 0 and 5 when
12:11 - you pass in the arguments 1 and 10 do
12:13 - you get the same you get a round number
12:14 - between 1 and 10 so this is what testing
12:17 - is that way if I'm contributing to p5
12:19 - and I change something somewhere else
12:21 - how what if I like don't realize it's
12:24 - something I'm doing somewhere else in
12:25 - the library actually breaks the way
12:27 - random works this will tell me that so
12:30 - this is why unit testing can be valuable
12:32 - in a large or even a small software
12:35 - project that is a collaborative project
12:37 - or even one that you're just doing it to
12:38 - test yourself as you go ok so that's the
12:42 - basic idea of testing now let's think
12:45 - about what are all the pieces you need
12:48 - so number one is so I'm gonna so there's
12:51 - so many possibilities you could do
12:53 - testing and
12:54 - Python whatever language you're doing
12:56 - you can do it so many I'm I'm gonna zero
12:58 - down and live in the JavaScript world
13:00 - you could be doing a server-side web app
13:03 - just like a client-side JavaScript thing
13:05 - some open source library that's meant to
13:06 - be used by there's so many complicated
13:08 - scenarios but let's pick a simple one I
13:10 - just have a single javascript file
13:14 - called sketch jeaious and this is my p5
13:18 - creative assignment bla bla bla bla bla
13:21 - bla bla bla and what I want to do is I
13:24 - want to run a test on the code that's in
13:26 - that file I need some mechanism to do
13:28 - that the thing the tools that I'm going
13:30 - to use to do that so just is just for
13:32 - the testing is I'm going to use node and
13:35 - I'm not using no no dot yes because I'm
13:38 - creating a web server although I might
13:41 - be doing that at some point in another
13:42 - project I'm using no just essentially
13:44 - it's like a command-line utility to run
13:46 - the test because there are node packages
13:50 - collections of code and libraries to
13:52 - allow you to do testing through node and
13:54 - the one that I want to use is something
13:56 - called jest and I'll be perfectly honest
13:59 - the reason why I'm using just is because
14:01 - I asked a whole bunch of people who seem
14:03 - to know about this stuff what should I
14:04 - use and they said yes now I believe p5
14:07 - uses MOCA you know type in the comments
14:10 - your favorite testing framework go nuts
14:12 - but just as a pro is an open source
14:15 - project from Facebook open source that I
14:17 - believe is generally paired with react
14:19 - now again I'm not doing react I don't
14:20 - even I know less about react and I know
14:22 - about continuous integration but I'm
14:25 - going to use Jess because it's pretty
14:26 - simple and I liked it I looked at it
14:28 - it's fine but you so that's what I need
14:30 - so what I'm going to need to do is
14:32 - somehow configure my node project to be
14:36 - able to run a command something like NPM
14:39 - or n wait hold on what do I write do you
14:44 - say NPM start or nodes start think it's
14:46 - NPM I forgot how we do this right when
14:51 - you make a little command in node like
14:53 - in the package that JSON and then you
14:55 - give you what you're gonna run for start
14:56 - what are you gonna run for tests you say
14:59 - then when you type into the console you
15:00 - say NPM test right somebody will tell me
15:03 - NPM start okay
15:10 - okay some people is a chatter saying I
15:13 - understand nothing sorry I'll try to
15:17 - figure out what you need to know to do
15:18 - this but okay so that I can write
15:25 - furniture being wheeled by in the
15:27 - hallway so that I can write NPM tests I
15:33 - want to run this command it's gonna do a
15:36 - whole bunch of stuff and it's either
15:37 - gonna say something like success or
15:40 - failure and hopefully if it's failure
15:43 - it's going to give me a report so this
15:47 - is the idea of testing now while I'm
15:49 - here in the kind of overall landscape of
15:52 - this let's let me make a little map here
15:57 - I can erase this so let's think about
16:04 - where everything lives because how to
16:07 - github how does github play a role in
16:09 - this and how does circle CI or
16:11 - continuous integration play a role in
16:13 - this so number one I have my on my
16:17 - laptop
16:18 - which is my local client computer where
16:20 - I'm doing the development I have
16:22 - sketched j/s I also have my whole node
16:27 - project which is really just by the way
16:31 - a package.json file and some other stuff
16:37 - what I could do is I could push this
16:41 - repository I'll use the idea of a cloud
16:45 - even though it's really just an
16:47 - underground bunker of course as we know
16:48 - I could use this I could push this
16:51 - repository to github so I could have it
16:56 - saved on github and the nice thing about
16:57 - that is lots of other people could start
17:00 - to pull it and then make changes or
17:03 - propose changes through pull requests so
17:07 - where do I run the tests on the one hand
17:09 - so these are lots of other little client
17:10 - computers on the Weatherhead one hand I
17:13 - could change my code and run my tests
17:16 - locally and then I know like my test run
17:18 - great I'm gonna push
17:20 - other people could clone the repository
17:22 - make changes run the test themselves and
17:25 - feel confident and push to the
17:27 - repository but wouldn't it be nice if
17:29 - github could run the tests for me any
17:33 - time that I try to push code there it's
17:35 - gonna say like let me test that first
17:37 - I'll tell you if it's ok it can't get up
17:40 - does not have that as a server you can't
17:42 - execute code on github you can host your
17:45 - projects there you can even a web host
17:48 - you know client-side JavaScript programs
17:51 - there but you need something else you
17:54 - need a continuous integration service
17:56 - and that is where something like circle
18:00 - CI comes in so I don't know what I'm
18:01 - drawing here but circle CI is another
18:03 - thing that lives in the cloud shaped
18:05 - underground bunker and what Circle CI
18:09 - does is it can be and it can be a
18:12 - service it can be linked as a service to
18:15 - your particular github account so you
18:16 - sign up for a circle CI account in the
18:18 - same way that you decided for a github
18:19 - account circle CI a-- has a good free
18:22 - tier which you can do just about
18:23 - everything that i've shown you in this
18:24 - video for small projects and small teams
18:27 - you can absolutely use that and so what
18:30 - you can do is you could say hey anytime
18:32 - i push or any time i commit or do a pull
18:35 - request please go and run open a little
18:39 - instance of a new server on circle CI to
18:42 - run a bunch of node stuff to check the
18:44 - tests and report back so this is the
18:47 - process and so what I'm going to show
18:49 - you as I in the next video I'm going to
18:51 - actually just make an entirely simple
18:53 - basic example of one little JavaScript
18:55 - program with one test and continuous
18:58 - integration I'm gonna make it so that if
19:00 - you the viewer watching right now you
19:01 - cannot you could you cannot submit a
19:04 - pool repent submit a pull request but I
19:06 - as the administrator of the repository
19:07 - will not be allowed to merge it unless
19:09 - the test that I have written for that
19:11 - project pass so that's the basic gist of
19:14 - it I'm sure there are gonna be some
19:15 - questions and things and I will return
19:16 - in a moment in the next video to start
19:19 - writing what I needed package that JSON
19:22 - what I need them sketched on is what did
19:24 - I need in a test file and all the other
19:25 - things that I'm forgetting to mention
19:26 - right now so
19:31 - okay so I see that there is a super chat
19:39 - message which I can't see but thank you
19:44 - to the super chat people are saying that
19:45 - this is confusing which is reasonable so
19:48 - before I keep going before I keep going
19:57 - let me see if there are any questions
19:59 - and let me understand let me ask the
20:02 - question if you are somebody who knows a
20:05 - little bit about JavaScript programming
20:07 - maybe a little bit about github and a
20:09 - little bit about node but have not done
20:12 - unit testing or continuous integration
20:14 - before did that make sense to you and
20:23 - I'm looking at most the slack Channel
20:25 - for the patrons and the YouTube channel
20:28 - YouTube chat personally I thought that'd
20:32 - make sense but okay one bird yes yes yes
20:39 - it didn't make sense to me okay no not
20:42 - really yes yes plus yes but pretty much
20:44 - okay
20:44 - no yes yes okay so you know I'm only
20:47 - doing my best here why do you think this
20:49 - is a tricky topic
20:50 - hopefully I introduced the idea pretty
20:52 - well and what I'm going to do is keep
20:57 - going
20:57 - anybody from circle see I watching I
20:59 - said I tweeted the link that didn't make
21:05 - sense and I'm exactly what you described
21:07 - says Cameron in the chat all right now
21:15 - let me just check I want to check my
21:16 - messages cuz circle see I was gonna make
21:18 - a special link I'm not gonna make any
21:20 - money off this link or anything it's
21:22 - just a link for them to track their
21:23 - statistics but I don't see that yet so
21:27 - that will just get kind that'll be like
21:29 - a graphical overlay at some point when
21:32 - these get finished okay let me go back
21:35 - to the chat let me check the time 11:40
21:38 - oh good and actually somebody who says I
21:42 - do this for a living
21:43 - like said that the description was on
21:45 - point so hopefully I didn't actually
21:46 - even make any say anything horribly
21:48 - incorrect okay so let me open up let me
21:52 - get to jest and so I have this I have
21:59 - this and this alright and I can get rid
22:03 - of the snakes and ladders and I am here
22:05 - okay I can close this so I think what
22:11 - I'm gonna do all right okay sorry I'm
22:22 - thinking about things there's gonna be a
22:26 - lot of waiting music as we install note
22:28 - packages and things so I'm just
22:33 - practicing my way to get Simon asked how
22:44 - do you link Circle CI to github just
22:46 - wait I'm going to show you I'm going to
22:48 - show you alright you've returned perhaps
22:57 - from somewhere else or I don't know some
22:59 - weird machine learning algorithm sent
23:01 - you here if you haven't watched my
23:03 - previous video which introduces the idea
23:05 - of unit testing and continuous
23:06 - integration I would recommend that you
23:08 - do this tutorial is sponsored by circle
23:11 - CI link to find out more right here
23:15 - maybe I don't know I don't know how this
23:16 - magical post-production stuff works and
23:20 - but what I'm gonna do in this video is
23:22 - I'm actually gonna make exactly what I
23:23 - talked about here I am going to make a
23:26 - sketch dot J's file that has a little
23:28 - bit off script code in it I'm gonna
23:30 - create a little note project so I can
23:31 - run a unit test I'm gonna push that
23:34 - project to github and I'm going to link
23:36 - it with circle CI so that the test will
23:39 - be run before I can merge any changes
23:41 - now github merge know what all these
23:44 - things mean I will also provide some
23:46 - links to videos that you might want to
23:48 - watch before arriving here if you
23:49 - haven't used
23:50 - any of those tools before but yeah I'm
23:52 - just plopping it right in the middle
23:53 - here if you've never programmed before
23:54 - no maybe maybe maybe this thing will be
23:56 - interesting here
23:57 - but yeah anyway okay that gonna be right
23:59 - so what what do I got this is my coding
24:02 - train github organization and so what I
24:04 - want to do is I want to make a new
24:05 - repository but I'm gonna do it in a
24:06 - slightly different way I'm not sure why
24:09 - but I'm just going to a first one I'm
24:11 - gonna do is I have a nice folder here on
24:12 - my computer called testing test test
24:14 - testing death test is the name of my new
24:16 - project cuz it's all about test test
24:18 - testing testing and I'm going to make a
24:21 - file in it and I'm just gonna call it
24:22 - sketch j/s just timeout for a second is
24:27 - that anybody hearing like a weird sound
24:28 - hum or anything because I'm hearing a
24:30 - hum but I think it's just in the hallway
24:33 - or something it went away all right so
24:37 - I'm gonna make a file called sketch
24:37 - touch yes and I'm going to this by the
24:39 - way I'm going to use the testing
24:41 - framework that I may use in a moment
24:42 - I'll show you something called jest I'm
24:43 - basically gonna do the example that's in
24:45 - the getting started tutorial and jest
24:47 - not my invention here so I'm gonna write
24:50 - a really simple function called the sum
24:52 - and what its gonna do is it's gonna
24:55 - return the sum of two numbers so again
24:59 - I'm showing you a completely trivial
25:03 - example that's kind of silly and and and
25:06 - and obvious just to unsee what all the
25:08 - pieces are and how it works and then
25:09 - hopefully what I'm gonna do is after
25:10 - this I'm actually gonna add some unit
25:12 - tests to my neural network library thing
25:15 - that I've been working on in some other
25:16 - video tutorials but I'll get to that
25:17 - later so I'm just writing this now what
25:20 - do I need to do well in order to run the
25:22 - tests I need to I need to make a node
25:27 - project so one way that I can do that is
25:30 - by by the way in terminal and I'm in my
25:34 - directory testing test test and I'm
25:36 - gonna say NPM in it that's a way to
25:39 - create a node project in that directory
25:41 - really all this is doing is making the
25:43 - package.json file which is the
25:45 - configuration file for your node project
25:48 - and again some other node tutorials I
25:49 - have go through this a bit more so I'm
25:51 - gonna do this and it's saying this
25:52 - utility will walk you through creating a
25:54 - package blah blah blah I want the name
25:56 - to be testing test test it's version 1.0
25:58 - it is all about all about testing test
26:01 - testing test test
26:04 - an entry point is sketchy-ass we would
26:06 - even auto-detected that was in their
26:07 - test command whoo the test command now I
26:12 - don't have to do this here because they
26:13 - always change it later but I know what
26:15 - it's gonna be it's going to be just just
26:18 - is the amande like javascript test test
26:21 - just anyway just get repository oh I
26:24 - don't have one yet can enter keywords
26:27 - testing test then author is the coding
26:32 - train license MIT I don't know
26:36 - and then I must say okay and then now if
26:39 - we look back in Adam look at this this
26:42 - new file has appeared the package that
26:44 - JSON file and that is the file that has
26:48 - all the configuration settings for my
26:50 - project this is the main file there's a
26:52 - test script I can run called jest it's
26:54 - all about testing it's by the coding
26:56 - train and it's license MIT excetera okay
26:58 - so now let's go to the jest website and
27:01 - I'm gonna actually click on get started
27:06 - so one thing that I can pull from here
27:09 - is if I want to run a test with jest
27:12 - I must install the node package jest and
27:15 - again we refer you to my video about
27:17 - node package manager and a lot of you
27:19 - who have experience with this will be
27:20 - telling you why aren't you using yarn
27:21 - because supposedly that's better for a
27:23 - variety of reasons I'm sure I will hear
27:24 - about but I'm still in the world of NPM
27:27 - so I'm gonna grab this and I'm going to
27:30 - paste this into terminal now I just want
27:34 - to mention what I've shown in other
27:36 - tutorials what - - save means that means
27:39 - I want to use this node package in my
27:42 - project for example I'm doing something
27:44 - on text analysis so I want the node
27:46 - natural text analysis package I'm going
27:48 - to say NPM install save node natural but
27:51 - save dev means I am using this but only
27:54 - for the purpose of development my
27:56 - project itself when I publish and
27:58 - release it is not doesn't mean the gest
28:01 - package I need just just for developing
28:03 - it so I'm gonna hit enter and I put on
28:06 - my waiting music
28:12 - [Laughter]
28:15 - oh we finished okay and now we're good
28:20 - now just to double-check this look at
28:22 - this package I J son now has dev
28:25 - dependencies jest version 22 point 1
28:29 - point 4 so that - - save - dev put it
28:32 - here in dev dependencies right now I
28:33 - have my testing framework now how do I
28:36 - write a test now one of the things you
28:38 - might remember sorry
28:40 - pause for a second because I shouldn't
28:42 - have closed that window one of the
28:52 - things you might remember from when I
28:54 - was looking at the p5 project is the
28:57 - source folder had all of your JavaScript
29:01 - code and the test folder had all of your
29:05 - testing code and they were the identical
29:07 - directory structures for every directory
29:10 - or JavaScript file there was a
29:11 - corresponding directory JavaScript file
29:12 - for testing and this is a fine way of
29:14 - doing it from what I understand it can
29:16 - become a bit unwieldy after a while to
29:18 - kind of keep these duplicate directory
29:19 - structures just provides a bunch of
29:22 - different ways of doing it through
29:23 - basically the keyword test and there's
29:25 - there's a way of having a folder that
29:27 - has tests in it but what I'm going to do
29:28 - here that's the easiest thing in the
29:30 - world is I'm just gonna make a new file
29:32 - and I'm gonna call that file
29:34 - Kember if it's test sketch is or sketch
29:37 - test such as pretty sure it's sketch dot
29:40 - test touch ass let's try calling it that
29:42 - and then let's go back to the getting
29:44 - started page and see what it says some
29:48 - so this is example that by the way I'm
29:49 - doing exactly the same example I'm
29:51 - creating and it says the kre-o file
29:53 - called some test yes so
30:05 - so I've created my file called sketch so
30:07 - you can see just is going to know that
30:10 - this file is associated with this file
30:12 - these are the tests for this file so now
30:14 - I need to write those tests oh boy
30:16 - so I am going to go and just keep
30:19 - falling along with this and I'm just
30:20 - going to to be honest with you copy
30:21 - paste the code from the example and
30:24 - later I'll try to write my own tests in
30:26 - a more interesting way and we can see
30:27 - this makes sense
30:28 - there is a function I wrote called sum
30:31 - that receives two numbers and returns
30:33 - those two numbers added together so you
30:35 - can see this is now the syntax the API
30:37 - that expect as a function to be as a
30:40 - function those are functions that are
30:42 - part of jest right some is my function
30:44 - test is part of jest and this is written
30:47 - with a really nice lovely es6 arrow
30:49 - syntax just just just to like unpack
30:52 - this for a second even though I like the
30:54 - way this is written I will try to write
30:55 - test this way to what I'm gonna do is
30:57 - I'm gonna just break this out into
31:00 - multiple lines of code just so you can
31:04 - just so you can see it in a slightly
31:06 - different way and just give me a second
31:08 - while I do this in the most convoluted
31:10 - manner so what this is saying here now
31:15 - you can see it's like I want to run this
31:16 - test this is the name of my test and the
31:19 - function to run the test is called some
31:20 - test and it's down here so this is just
31:22 - it's exactly the same as this but it's
31:24 - just written in a kind of more
31:26 - long-winded less traditional like less
31:29 - fancy new way of writing JavaScript okay
31:36 - sorry sometimes another corner of my
31:38 - eyes see something going on in the chat
31:40 - yeah yeah so these are good comments all
31:51 - right I'm gonna just pause and stop to
31:54 - some of these comments
31:56 - Simon writes if you're not using p5 you
31:59 - should probably rename Sketchup just to
32:00 - script HS or main digest to be honest
32:03 - I'm kind of already sketched out yes on
32:05 - purpose because although that is a good
32:07 - point
32:08 - I am I just kind of want this to live
32:11 - it's in a sort of informal way but yes
32:15 - and I'm missing the export piece I
32:17 - haven't gotten to that yet
32:18 - because I want the test to not rock ah
32:22 - I'm ahead of you sort of all right so I
32:26 - think we're kind of ready I've missed
32:29 - some stuff here which I'll get to bet I
32:30 - want it to fail at least first I have my
32:32 - JavaScript file and I have my testing
32:35 - file so there's no reason why I couldn't
32:37 - now and package that chase up Jason it
32:41 - says test jest and I have the dependency
32:44 - okay let's let's try it so now I'm here
32:47 - I'm gonna hit clear and I am going to
32:49 - say here we go and p.m. test
33:03 - one failed now
33:05 - I already know why I failed cuz we kind
33:06 - of did that on purpose cuz I don't be
33:08 - nice and let's see the test fail but we
33:10 - can actually see why did it fail hmm
33:13 - constant sum equals required dot slash
33:16 - some Oh what is that cannot find module
33:21 - dot some all right so here's the thing
33:24 - I'm making use of a feature of node that
33:28 - is not necessary when just doing
33:29 - client-side programming which is a
33:31 - client-side programmer might have an
33:33 - HTML file which just imports all of the
33:36 - JavaScript files I'm using but node we
33:38 - need to do this more explicitly and this
33:40 - is a little tricky here because maybe
33:41 - you can make the argument if I'm writing
33:42 - client-side code I should run like tests
33:45 - in the browser and there's a whole big
33:47 - world it's like possibilities here but
33:48 - I'm trying to stick to the very very
33:49 - basics the simplest possible scenario
33:51 - and if we look here in sketch that we
33:53 - can see constant sum now for it well
33:56 - constant that's a I could say let's um
33:58 - but this is good it's not gonna change
33:59 - not gonna be reassigned constant sum
34:01 - equals required dot sum well what this
34:04 - really should be in my case is dot
34:06 - sketch this is a way require is saying I
34:08 - am going to require another JavaScript
34:13 - file dot slash in the same directory
34:15 - called sketch dot yes then that's do you
34:20 - think that would be better now I'm still
34:21 - missing a piece I mean I'm not even
34:26 - gonna pretend that because I know this
34:27 - is gonna run it didn't fail some it's
34:30 - not a function so that's a different
34:31 - error message the reason why imported
34:33 - that file correctly but I didn't export
34:36 - it so this is one of the things I've do
34:37 - I just say export dot modules no module
34:42 - dot exports module dot exports equals
34:46 - some so this is again there's a lot more
34:48 - to this in terms of how you can link in
34:51 - reference different files but on a very
34:52 - basic level this is saying this node
34:55 - module should export the sum function
34:57 - that's the one I want to test if I had
34:58 - multiple functions I could export
35:00 - multiple functions there's a variety
35:02 - different ways I can do this
35:03 - so now here we go
35:10 - it's
35:16 - whoo okay so they test pass so this is
35:21 - basically if this is mid alum I've kind
35:23 - of come to the end of the testing
35:25 - component so all I've done so far is ah
35:34 - all I've done so far is created this I
35:39 - wrote my code and it could have been a
35:42 - p5 project I the module thing is gonna
35:44 - muck that up a little bit so maybe I'll
35:46 - show you a little trick about that in a
35:47 - second
35:47 - but all I've done is write this part so
35:51 - the next things that I need to do is
35:53 - send this project up to github and then
35:56 - figure out a way to allow anybody
35:58 - contributing it to it to have the tests
36:00 - automatically run via Circle C I okay
36:03 - so that's gonna happen in the next video
36:09 - all right okay so any quick comments
36:19 - oops
36:25 - yeah all right all right
36:33 - so I'm breaking this up into more
36:36 - smaller videos than I had thought but I
36:38 - think that's fine
36:39 - so now I'm in sort of third third little
36:44 - video and don't really need anything
36:53 - more here okay ready for this oh yeah
37:04 - all right any other questions tests all
37:13 - right all right I'm not seeing any super
37:15 - important comments I think people in the
37:17 - patriarch of arias nuances of es6 and
37:21 - what works we're all right what about
37:31 - the machine learning series you know it
37:36 - takes a be it takes me a lot to get up
37:38 - the courage to come here in this room
37:40 - and try to do some kind of gradient
37:42 - descent math math implementation in
37:44 - JavaScript so just though I'm hoping
37:46 - that I could do it today or it's I'm
37:49 - committed to doing it's happening just
37:51 - when it will happen I'm not sure and me
37:56 - I am Sumi asked when node starts
37:57 - supporting es6 modules are you going to
37:59 - redo all of your node tutorials oh
38:01 - definitely cuz I all yes for sure under
38:04 - present all right let's see okay all
38:12 - right welcome back now in my third this
38:16 - third video about unit testing in
38:19 - JavaScript with continuous integration
38:21 - I have finally where I left off the last
38:23 - video I reached the point where I wrote
38:25 - a simple test and when I run the command
38:27 - npm test the test runs and the test
38:30 - passes so now what I want to do yeah
38:35 - should I have like broken the code no no
38:37 - no no sorry go back let me start over
38:40 - it's fine it's fine
38:41 - hello again I'm back in my previous
38:44 - video in this series about unit testing
38:46 - and continuous integration I got all the
38:48 - way up to the point where I wrote the
38:51 - test and I ran the test through NPM
38:54 - tests and then the tests passed now this
38:57 - video series is sponsored by circle CI
39:02 - link to find out more about circle CI
39:04 - right here because the goal that I have
39:07 - with this series is to show that once
39:09 - all I've done so far is this piece once
39:11 - I've written my test locally using node
39:14 - for some JavaScript thing that I
39:16 - working on I want to plug that code up
39:19 - on github and integrate it with circle
39:21 - CI so that the test that I could run
39:23 - locally will run automatically here now
39:25 - I still might want to it's still a good
39:26 - practice to run the test locally like
39:27 - why push something to github that I know
39:31 - isn't gonna work I might as well test it
39:33 - but the point is if I'm collaborating
39:34 - with lots of other people somebody might
39:36 - forget to run the test not know how to
39:38 - run the test and this is gonna make me
39:40 - hopefully the open source contribution
39:42 - process a bit friendlier and instill
39:44 - confidence and happiness in the open
39:47 - source contributor does that that's what
39:50 - I that's all I would like in life okay
39:52 - happiness and confidence you go you know
39:56 - maybe 30 percent of one of those anyway
39:59 - till here we are so let's how am I gonna
40:01 - do this now you might not be aware of
40:04 - this but I can I don't need github at
40:06 - all if I just want to use version
40:08 - control and get I can just use version
40:10 - coma get right here with terminal on my
40:12 - computer and just like I said
40:14 - NPM in it to create a node project
40:17 - package that JSON JSON file I'm gonna
40:19 - say get in it I think that's right you
40:23 - know ah initialized empty github
40:26 - repository in testing test tests I
40:28 - should not get now one thing that I
40:29 - won't definitely want to do here is I
40:32 - want to create a new file called dot git
40:34 - ignore now this is a bit of an aside but
40:37 - it is sort of important get ignore file
40:39 - is a file where I can put names of
40:42 - things that I don't want to be part of
40:44 - the repository when I push it up to
40:46 - github like I need might need those
40:47 - files locally so something in that
40:48 - passwords in it or secret API keys those
40:51 - would be things and I don't want to push
40:52 - up to github but in this case I actually
40:54 - just don't want to send up the node
40:56 - modules like whoops modules like I have
40:59 - in package dot JSON I'm using this dev
41:01 - dependency just to run the tests and if
41:04 - I go into node modules it's like a huge
41:07 - amount of folders and files those things
41:09 - are not my code it's not a number they
41:11 - also get installed separately whenever I
41:12 - put it somewhere else on the server so I
41:14 - really don't want those things to be
41:15 - committed I also might as well say
41:17 - because I'm on this ridiculous Macintosh
41:19 - machine which makes these dot DS store
41:21 - files which by the way are my initials
41:23 - DES which kind of freaks me out like is
41:25 - this all these computers all about like
41:28 - my store and some
41:29 - weird way anyway I don't know little
41:31 - freaked out and then I don't know I
41:33 - don't know what this but I forget what
41:34 - this package dot lock file is I'm gonna
41:37 - I'm just gonna ignore that too so I
41:39 - don't want these files and now I can say
41:43 - get status to sort of see what's going
41:45 - on and we can see aha these are the
41:48 - untracked files these are the files that
41:50 - are part of my github repository so I am
41:52 - now going to say git add dot because I
41:57 - want to add everything then I would say
41:59 - git commit starting a new project about
42:04 - testing with tests and also more tests
42:09 - okay so I commit that and then I say git
42:12 - push origin master right - boom boom
42:16 - boom Wow of course I can't say git push
42:18 - origin master I just made this nice git
42:20 - repository in my computer it doesn't
42:22 - know where master is origin any of this
42:24 - stuff so in order for me to do that I
42:26 - need to create the repository on github
42:29 - so I'm gonna go I'm on github I'm logged
42:31 - in to my daniel sheath mon account and
42:36 - but i'm gonna create a new repository
42:38 - and this repository is gonna be called
42:42 - testing test test it is all about
42:46 - testing with tests also tests then i'm
42:52 - not gonna do this initialize repository
42:54 - to read me
42:55 - i don't need to get ignore cuz i did
42:57 - that myself and i want to owner i want
43:01 - to put this now this doesn't really
43:02 - matter so much to you but i'm gonna put
43:04 - this in the coding train organization to
43:06 - make it easier for you to find perhaps
43:07 - rather than in my own account and then
43:10 - I'm gonna say create repository and the
43:13 - nice thing about this is it's giving me
43:15 - this command I kind of did this stuff
43:17 - already like I created the repository
43:19 - locally on my computer usually by the
43:22 - way my other videos I just make the
43:23 - repository and github and then it's
43:25 - empty and I clone it to my computer to
43:26 - add stuff I'm just showing you a
43:28 - different way of doing this like I made
43:29 - it already
43:29 - now I'm gonna link it up with github so
43:31 - I can just grab this command right here
43:34 - and I'll paste it into here so you can
43:36 - see it so the idea here is that I'm
43:37 - saying hey remote I want to add a remote
43:41 - repository for this repository on
43:43 - my computer remote location for this
43:44 - repository I'm gonna call it origin and
43:47 - this is its URL get at github comm call
43:50 - encoding train testing test test test
43:53 - now I'm I have my this computer already
43:56 - set up with like special keys to be
43:58 - logged in and all that sort of thing
44:00 - that's a whole separate topic but if you
44:02 - have that I can make a video about that
44:04 - I suppose if I need to but so this this
44:06 - might you might have some permissions
44:07 - issues if you haven't set that up yet
44:08 - okay here we go
44:09 - so that looks like it did that and now I
44:13 - should be able say git push origin
44:14 - master okay that was fast food finish
44:23 - Brigid get the waiting music on so there
44:25 - it is now it's there I can go back to
44:26 - github I can hit refresh and we see all
44:29 - the code is there now you know what it's
44:31 - really a good idea to have a readme and
44:33 - I I agree so I'm gonna use this nice
44:35 - little button that says add a readme and
44:37 - I should put more in the Ramin which I
44:39 - will do later but I'm just going to
44:41 - commit directly to the master branch
44:45 - [Music]
44:50 - every project but apparently there are
44:52 - other ways of working so I'm actually
44:54 - going to make it the next step is I'm
44:56 - not going to be allowed to do that
44:56 - anymore
44:57 - I can't just commit stuff directly to
44:59 - the master branch these sort of
45:00 - published finished version without
45:02 - running those tests first so the reviews
45:05 - there now so where are we
45:09 - if I look back at my diagram we have now
45:12 - checked off this much we have now pushed
45:16 - it to github so we've checked off this
45:18 - much and anybody watching this this is
45:20 - you most of you probably watching this
45:21 - as a recorded video tutorial but I'm
45:23 - actually doing this live at the moment
45:24 - so not yet a moment you can start
45:28 - submitting your pull requests to this
45:30 - repository because I'm gonna and no to
45:32 - please be nice be nice about it and be
45:38 - on your best behavior and I am going to
45:41 - I polishin to said that I am going to
45:45 - your pull across will test will be run
45:47 - on them all right so I need to link this
45:52 - now - why why I'm here in the first
45:54 - place Circle C I so Circle CI is
45:57 - a company that provides as a service
45:59 - continuous integration and how do I get
46:02 - that I'm gonna go to go to app I'm so
46:04 - I'm at Circle City I calm you can start
46:06 - by going to this URL and I'm going to go
46:11 - to that now I'm already logged in so let
46:15 - me let me actually log out because I
46:17 - think this will be useful so you
46:20 - probably want to do sign up let's just
46:22 - click that for a second and sign up with
46:26 - github that's what I did I think I could
46:29 - probably just log in so they already
46:31 - have an account but so I'm gonna go to
46:32 - log in and I'm gonna just click log in
46:34 - with github so both should work just
46:36 - fine I log in and now I am in my circle
46:41 - CI dashboard interestingly enough I have
46:45 - no projects I'm gonna go over here to
46:47 - projects and it says coding trainers
46:49 - know projects building my circle CI
46:51 - because I don't actually know anything
46:53 - about this or do this I just try to
46:55 - learn it this week and make a video
46:56 - tutorial about it but I'm going to more
46:58 - in the future I'm very excited about it
47:00 - so what I want to do is I want to add a
47:01 - project I want to add a project and then
47:04 - mmm no no this is oh there it is testing
47:07 - test test huh that's what I want to add
47:09 - now I should show I should go back over
47:11 - to oh it figured out already so I could
47:14 - have gone to other like I'm a member of
47:17 - the ITP NYU organization which is where
47:19 - I teach the processing foundation
47:20 - there's me so but luckily I didn't
47:23 - realize this it's already defaulting to
47:24 - coding train so if you don't see the
47:26 - project that you're looking for here the
47:28 - github repository it could be because
47:30 - you're actually not in the correct
47:31 - organization or account but I am so I'm
47:34 - gonna go to testing test test and hit
47:35 - set up project now I want to use the 2.0
47:40 - version of circle CI because it's new it
47:43 - says new there and it's I hear it's
47:45 - great oh it's something called docker so
47:49 - this is another little piece that I got
47:51 - to put into this puzzle
47:52 - what is this docker thing talk about
47:55 - that in a second come back over here
47:59 - alright and I'm gonna pick my language I
48:02 - am using node Oh beautiful Wow does it
48:06 - just like know that already because the
48:07 - code that's in there it probably did and
48:09 - then
48:11 - it's gonna give me some instructions
48:12 - create a folder named circle CI and add
48:16 - the file config dot yml so this is what
48:19 - you need to do Circle C I can see your
48:22 - github repository because you've
48:24 - integrated them but it doesn't know what
48:27 - to do like what you might suppose were
48:29 - in a test like what does it you want me
48:30 - to do so in order to tell it I'm gonna
48:32 - go back to my repository I'm gonna
48:34 - create up snot a new file shoot I'm
48:37 - going to create a new folder this folder
48:40 - has to be called dot circle CI and it
48:46 - inside that folder I need a file called
48:49 - config dot yml so that yml is a format
48:55 - much like XML or JSON and it is I
48:59 - believe called it llamo so now what I
49:04 - could do actually is just like there's a
49:07 - sample so circle CI is nice enough to
49:09 - provide you with a sample I'm just gonna
49:10 - use that sample but I'm actually going
49:12 - to simplify it after I use it so I'm
49:14 - going to copy it to clipboard
49:15 - and I'm going to paste it in here and I
49:18 - am going to I'm gonna delete a bunch of
49:23 - stuff okay do this
49:44 - okay I think I've got what I want so I
49:48 - made you know I'll try to return back to
49:50 - that file at some point to look at some
49:52 - of the other pieces there but look at
49:53 - this is the configuration file it's
49:55 - saying I'm timeout Oh get pull to read
50:03 - me yeah oh I do want the package dot
50:08 - lock why do I want the package dot lock
50:13 - okay and yam ah yam leh I'm waiting for
50:24 - al-qaeda off to correct that I just
50:27 - thought that looks like a file I don't
50:28 - want
50:28 - it's basically metadata you'll be fine
50:32 - with that oh yeah I will I will add it
50:33 - back in okay so this is the yeah mol
50:38 - format that is giving the much like
50:42 - package JSON has all the configuration
50:45 - information for for my node project
50:49 - config dot yml has all the configuration
50:52 - information for circle CI and these are
50:54 - the things that I want to do the jobs
50:56 - that I want to do is I want to build my
50:58 - project and I want to build it using
51:01 - this image with docker what is that
51:05 - image so this is what's exciting docker
51:07 - is not something that I've used at all
51:09 - in any tutorial before but docker is and
51:12 - somebody correct me if I'm wrong here
51:13 - but docker provides a way of having this
51:15 - like self-contained environment that has
51:18 - no nothing external setup yet right so I
51:22 - can say like hey this is this clean new
51:24 - environment it's going to install node
51:26 - install the packages run the code from
51:29 - scratch so I couldn't so in other words
51:32 - if by accident a package is installed
51:34 - but I don't have it in my configuration
51:36 - file and I wasn't using something like
51:38 - docker I could not realize that my codes
51:40 - actually broken but it kind of runs by
51:41 - accident over here for some arbitrary
51:43 - reason so docker is a way of saying like
51:45 - let me start with this docker image this
51:47 - environment stand-alone environment and
51:49 - the one that I'm using is I want any
51:52 - node and I maybe what I should do
51:54 - probably is if I go on to my back to
51:56 - terminal if I say no - V I'm using eight
51:59 - point nine point zero so maybe I would
52:01 - say like hey why don't you give me eight
52:04 - point nine point was it zero or is a ten
52:06 - yeah zero so I think he'll be fine but
52:08 - you know you might want to that's
52:09 - another thing you doing which version
52:10 - node are using and then in order to know
52:13 - that my code works I just need to run
52:14 - npm install because i need to get all
52:16 - those packages and I need to run NPM
52:19 - test and this by the way it's going to
52:20 - make it run slow because NPM install
52:22 - takes a while to install lots of
52:24 - packages and I have to install fresh
52:26 - every single time Circle CI runs it and
52:29 - there's ways of caching it and
52:30 - isprobably a lot of that has to do with
52:31 - what I delete it out of there we can
52:33 - come back to that later but I want you
52:34 - to just see this is the very very basic
52:37 - idea and working directory
52:43 - should this be testing test test not
52:48 - repo right or is that like a default
52:54 - thing hey you know I don't know I just
52:58 - don't use yarn yet because I like I'm
53:00 - slow I get to like I start talk about
53:02 - es6 like four years after cubes out so
53:09 - I'm waiting for somebody maybe to tell
53:12 - me if I need to default project where
53:16 - project is a literal string not the name
53:17 - of your specific project processes run
53:20 - during the job can use the circle
53:21 - working directory environment variable
53:22 - path written into your VMO configuration
53:24 - file will not be expanded if your test
53:27 - store test results that path is a circle
53:29 - working directory - test I'm pretty sure
53:38 - that's gonna work if I leave it that way
53:39 - cuz when I was trying this out early
53:41 - this week I never changed it and I never
53:43 - had a problem but I don't know if that's
53:44 - correct or not not required
53:48 - apparently all right okay so maybe it's
53:55 - actually maybe it's actually unnecessary
53:57 - all right
53:59 - I should also point out that this
54:02 - working directory i think is actually
54:03 - unnecessary for a very basic example but
54:06 - if you need to because it's gonna
54:07 - probably just default to my root project
54:09 - directory but if i need to be specific
54:11 - about directories I could use that
54:12 - potentially okay so let's leave that
54:14 - there and now what I'm going to do is
54:17 - I'm going to say git status oh and by
54:21 - the way something in the chat told me
54:23 - that it's actually probably a good idea
54:24 - to have the package lock file because it
54:26 - has some important metadata in it so if
54:28 - we put that back while I'm doing this
54:29 - and I'm going to say a git status and
54:33 - I'm gonna I'm gonna say git add
54:35 - everything git commit adding circle CI
54:41 - and package lock JSON for no good reason
54:46 - I'm gonna do that okay now I'm gonna say
54:50 - git push origin I rejected oh oh well
55:03 - why did that happen so this actually
55:04 - happened I was excited for things to get
55:06 - rejected later but the reason why this
55:07 - happened now is I forgot that I added
55:10 - this readme file on github so my local
55:14 - repository doesn't have that change yet
55:16 - so I better pull that readme file and
55:21 - now and it put me into some texture I
55:25 - just said : return like instinctively
55:29 - and I'm going to now say git push origin
55:31 - master all right so now I have sent
55:36 - everything up to github so what do I
55:41 - have now I've done this I've sent it up
55:45 - again up and in theory I'm like linked
55:48 - somehow with circle CI huh let's see
55:53 - what else do I need to do there's a
55:54 - bunch of steps I want to do but I'm just
55:56 - curious what else do I need to do
55:57 - actually technically speaking so if I go
55:59 - back here oh well I want to say start
56:02 - building so I might be ready now did I
56:04 - follow all these steps I updated the
56:06 - llamó file I pushed the change to github
56:08 - and now I can click start building so
56:10 - I'm gonna do that
56:13 - Hopey goodness huh it's running it ran
56:20 - npm install' ran tests oh no such file
56:28 - or directory okay so maybe I needed I so
56:35 - maybe I needed that I think I needed
56:48 - that so it couldn't find my files
56:53 - because I'm kind of losing as I made a
56:57 - silly mistake in trying to make this
56:58 - simpler I think I actually really did
57:00 - need this all right I think I should be
57:06 - back I didn't actually check the audio
57:07 - or check the monitor or anything so I'm
57:09 - gonna wait and see if everyone's saying
57:12 - things are okay one thing those of you
57:17 - watching who are in the patron of group
57:19 - in the slack channel it just for me it's
57:21 - a little bit helpful if you post
57:22 - something and it has like a big preview
57:24 - thing I have this screen like zoomed in
57:26 - so I can read the chat a little further
57:28 - away and just like takes up my view and
57:30 - I can't see anything so if you post
57:32 - something delete that all right so I
57:35 - think I'm back so I don't know when did
57:40 - I when did I crash I mean I'm just gonna
57:43 - go oh so in other words working
57:47 - directory should just be this is that
57:50 - what it should be I should remove repo
57:54 - is this the correct I mean I kind of I
57:56 - kind of want to run it but I just I
57:58 - don't want to after saying the word try
58:01 - to make things simpler okay I'll just
58:03 - kind of and good thing the camera shut
58:07 - off I don't think you should do that do
58:10 - what now what I think you should be
58:14 - aware if you write me messages I
58:16 - generally don't have any idea what
58:18 - they're referring to because you guys
58:19 - are like 20 seconds or 30 seconds
58:21 - different than me
58:22 - so sometimes I can figure it out but me
58:26 - I am to me just right I don't
58:26 - you should do that the the tilde slash
58:32 - so what do I write here testing test
58:35 - test because I made a silly mistake is
58:43 - trying to make it simpler okay
58:46 - [Music]
58:59 - oh maybe I haven't
59:13 - now the project is there it wouldn't
59:19 - have run npm install our npm test if it
59:21 - wasn't there
59:36 - Circle working directory
59:46 - yes but it clearly had to there's no way
59:51 - we'd know to run this npm install an NPM
59:54 - test unless it just read the package I
59:58 - JSON file without pulling it I I did
60:02 - this earlier this week and I I didn't
60:04 - need III think actually to be honest
60:06 - with you I let me let's let me that's
60:09 - fine I was trying to like not let me
60:12 - just put this back to what it was just
60:14 - to prove my little silly point here I'm
60:22 - pretty sure I'm going to keep going
60:26 - because I can actually let me show you
60:29 - this is my working project that I did
60:33 - earlier this week it's in shift man it's
60:35 - called circle CI test and in here oh I
60:40 - did that that's what I did circle CIF
60:44 - but does that called that even which is
60:47 - so weird that's weird I don't know check
60:51 - out I forgot check out that is what I
60:58 - think I forgot I deleted it by accident
61:04 - yep all right that's probably it okay so
61:13 - I missed the reason why why it fails I
61:16 - missed a really important step here in
61:18 - my trying to make that file simpler I
61:20 - missed a very important step which is
61:22 - that I need to check out so what the
61:24 - first thing I need to do is check out
61:25 - the current code from the repository
61:27 - before I run NPM install an NPM test so
61:31 - it ran those things because that's
61:33 - what's written here but didn't actually
61:34 - grab the repository from github so now
61:37 - let's try this one more time so what I
61:39 - should be able to do is I should be able
61:41 - say git status just to check okay the
61:44 - only thing I did was modify my config
61:45 - file git add git commit forgot the check
61:51 - out step and get push origin master and
61:58 - now
61:59 - if we go here now it should if I go back
62:02 - to here it's actually running already so
62:07 - it's automatically any time I push
62:09 - something to get up it's already linked
62:11 - and it's running this so I can go in
62:12 - here and wait yeah you can see now it's
62:20 - whew it did it so look at that adds one
62:26 - plus two equals three past in four
62:28 - milliseconds testsuite one pass test one
62:30 - pass total time ran all test Suites oh
62:33 - that's the wrong whatever kind of works
62:36 - all right
62:37 - so this works one of their four
62:39 - wonderful now just for the sake of
62:41 - argument let me oh no no that's so let's
62:45 - now go and protect ourselves let's do
62:48 - this last oops let's do this last step
62:52 - so I do have the test running on circle
62:55 - CI but what I want to do now is I want
62:57 - on github I want to say protect master I
63:01 - want to make it so that you cannot push
63:04 - any code to master at all and you cannot
63:08 - merge any code to master without the
63:10 - tests having run and passed first so
63:12 - let's go do that
63:13 - so that is something I have to do
63:15 - through the github interface so I go
63:17 - back to the project and I'm gonna go to
63:19 - settings and I'm going to go to branches
63:21 - and right here what I want to do is
63:24 - under protect protected branches I want
63:27 - to protect master and I'm gonna do a
63:30 - bunch of things i'm gonna click protect
63:32 - this branch I'm gonna say I'm not gonna
63:34 - require pull request reviews right now
63:36 - that could be interesting but it
63:37 - requires status checks and I want to
63:40 - make sure look at this right down here
63:43 - that my circle CI status checks run and
63:47 - then I also want to do include
63:50 - administrators so even me as the
63:54 - administrator of this project cannot do
63:56 - anything without those tests running so
64:00 - I'm gonna hit Save Changes I am going to
64:03 - put in my password and now what I'm
64:11 - going to do
64:12 - is I'm going to make a change in my code
64:18 - I'm now going to work on my code
64:19 - dudududu Oh a plus B plus 42 that's
64:24 - definitely going to be a good change to
64:26 - my code yay
64:28 - and now what I'm gonna do is get add git
64:32 - commit I know a better way to add two
64:37 - numbers and I'm gonna say git push
64:40 - origin master aha yes good okay so it
64:49 - says protected it did not let me do that
64:51 - protected branch update failed required
64:53 - status check so we did not do that so
64:56 - now what I'm going to do is I'm gonna
64:57 - say okay I'm gonna say git push origin
65:01 - master : so I mean I could do is I could
65:05 - branch here on my computer and then
65:07 - create a new branch and move that do the
65:09 - change there and push it but this is a
65:10 - nice easy way of doing it git push
65:12 - origin master : live coding train so
65:16 - this is a new branch that I'm calling
65:18 - live coding train I want that to be the
65:20 - branch on github and I'm gonna take my
65:22 - master branch from my local lean self
65:24 - and push it up to get up and I'm gonna
65:26 - do this and so that had no problem
65:28 - having me do then I'm gonna go here look
65:32 - at this already less than a minute ago
65:34 - it says hot you recently pushed branches
65:36 - live coding train less than a minute ago
65:39 - let me compare and pull requests so I
65:43 - know a better way to add two numbers
65:45 - seriously I really do it involves the
65:49 - number 42 so you know obviously good
65:52 - practice in writing thoughtful messages
65:54 - and everything your pull requests
65:56 - I'm being silly here I'm gonna hit
65:57 - create pull requests and now look at
66:00 - this card here and it already ran the
66:03 - test I took so long talking and like
66:06 - blah blah blah did it actually probably
66:07 - ran the test even before I did the pull
66:09 - request so look at this it required the
66:12 - test failed and so this is disabled I
66:16 - cannot merge this pull request I can
66:18 - press this button as much as I want but
66:19 - the test has failed and I can even go
66:21 - under here under details I can probably
66:24 - I can do this it's going to take me
66:26 - directly to circle
66:27 - the eye and I can look that it expected
66:31 - the number three but received the number
66:32 - 45 so I don't think that if you click on
66:35 - that under more details you would be
66:36 - able to get here but because me is the
66:38 - administrator and the owner of this
66:40 - circle CI account I can see well what
66:42 - actually caused this pull request to
66:43 - fail so now I can now I realize it was
66:47 - the number 42 I can say git add git
66:51 - commit fixing the adding numbers thing
66:56 - and then I can say git push origin
67:00 - master what do I call it live coding
67:03 - train so I'm going to push this change
67:07 - that I made locally on my master to
67:10 - coding train and we should see now live
67:14 - in the page
67:16 - come on get there quick shoot where is
67:19 - it
67:21 - no it's running the checks again come on
67:27 - big test
67:28 - so one pending check one pending check I
67:31 - added some new commits you can see my
67:32 - new commit here it's there
67:44 - we need to refresh the page I could
67:46 - check I could look on circle CI so now
67:58 - all the checks have passed this branch
68:01 - has no conflicts I can show all checks I
68:05 - can see it there I could click on the
68:06 - details but now I can simply merge this
68:10 - pull request and it is now done so
68:14 - that's really it ok
68:16 - timeout for a second
68:19 - now anybody who's afraid of doing things
68:24 - live anybody in the patron slack group
68:26 - would you mind going and checking what
68:28 - pull requests are there and make sure
68:29 - that I'm not like gonna there's not some
68:31 - like you know inappropriate images or
68:34 - text in the pull requests I mean I don't
68:39 - mind if it comes up on the live so much
68:41 - like I was edited out for the video
68:42 - later but since I have some people
68:44 - watching not at the moment okay thank
68:45 - you so uh alright
68:47 - so now if you're watching this as a
68:49 - recorded video I took a little break
68:50 - there and there are a couple pull
68:52 - requests oh those are just mine oh wait
68:56 - there are no pull requests there's an
68:58 - issue wait hold on hi YouTube
69:02 - alright who wants to make a pull request
69:11 - all right of none at the moment not none
69:14 - no inappropriate ones just no pull
69:16 - requests all right I missed a bunch of
69:26 - things in the YouTube chat people are
69:27 - maybe asked some interesting questions
69:31 - you know I think overly cautious which
69:38 - is probably unnecessary but you know
69:40 - it's a scary world out there folks maybe
69:48 - nobody wants to do a pull request it's
69:50 - fine if your tests fail I'm okay with
69:52 - that
70:03 - all right I'm gonna close this issue
70:05 - thank you hello YouTube - H Rowland
70:09 - thank you for writing a perfectly
70:11 - appropriate github issue there was a
70:17 - self closed one oh really
70:19 - oh why did this one get closed
70:45 - I love that all right maybe I should
70:50 - skip the whole like a live pull request
70:53 - came in thing so so okay so I so people
71:04 - are watching actually not knowing how to
71:05 - do this a way that you could do this is
71:07 - actually just on this page under sketch
71:11 - dot yes click this edit button and like
71:14 - if you added something in here like if
71:15 - you made it return a times B then down
71:19 - here you should have an option you
71:22 - should have an option like look at this
71:24 - first of all you can't commit this to
71:26 - master because it's protected which is
71:27 - great you should have an option to
71:29 - create a new branch in your own fork it
71:32 - should let you do that so you can
71:34 - actually do this through the github
71:34 - interface oh okay
71:43 - fix add alright let's take a look at
71:45 - this one looks pretty good
71:49 - all right great all right there was a
71:54 - little edit point there while I was
71:56 - waiting in the live version of this
71:57 - somebody on the internet s AAA DQ a 27
72:02 - second seconds ago added a pull request
72:05 - to fix the add function I can go here
72:07 - under files change and see that AHA this
72:09 - is the code that was changed return a
72:11 - plus B it was changed to a minus B so
72:14 - now I'm gonna merge this wonderful pull
72:16 - request whoops well there's a bunch of
72:19 - them have come in and we're gonna see
72:21 - waiting for status report so this one it
72:24 - hasn't finished running the test yet
72:25 - let's go look at some of these other
72:27 - ones added plus C Oh interesting added
72:31 - plus C Oh interesting let's that's a
72:34 - good one let's check these tests so it's
72:38 - taking a while to run these tests whoops
72:47 - sorry hold on so many so many pull
72:52 - requests over okay stop it with the bow
72:54 - requests we're good we're good
72:58 - I'm sorry Matt sure that'll let's go
73:00 - back there alright alright there was a
73:07 - little edit point there while I waited
73:08 - to let you meet people from the
73:10 - community or watching this live you
73:12 - except for the this moment in time right
73:14 - now are not watching this live and there
73:16 - are some pull requests here so we can
73:18 - see here by the way some of this yellow
73:20 - means the status of the test is waiting
73:22 - to be reported and this means the test
73:26 - ran and tests passed so let's look at
73:29 - this me I am so me let's look at what's
73:32 - been changed so this first of all
73:35 - interestingly enough there is this is
73:38 - some nice things we can learn about
73:39 - better programming that I do here that a
73:41 - product function was added to return the
73:43 - product of a and B and then module dot
73:46 - exports was made into an object so you
73:48 - could get the sum which is the sum
73:50 - function or the product which is the
73:52 - product function and then look at this
73:54 - constant sum comma product equals
73:58 - require sketch so this is a nice way of
73:59 - importing multiple functions and we have
74:02 - here then a test of that so let's
74:07 - actually let's run this pull request I
74:10 - mean we don't need to run this pull
74:11 - request let's merge it looks great so
74:13 - I'm gonna say all checks have passed
74:14 - looks great so I'm gonna comment and I'm
74:19 - gonna merge and then I can go back to my
74:22 - pull requests page and we could see evil
74:25 - pull requests so I'm not going to keep
74:27 - going through all these I'd be
74:28 - interesting to see I you know it's very
74:30 - slow to run all of them because so many
74:32 - pull requests came at all once which is
74:34 - probably unlikely in a real scenario but
74:36 - I also and having it has to run npm
74:38 - install every single time and there is a
74:41 - way that that can be cached if you look
74:43 - at the sort of full sample config dot
74:45 - yml file alright so i will review all
74:49 - these later and merge them so what's
74:51 - left to do i think i've shown you the
74:53 - full picture I'm gonna do one other
74:55 - video where I set Duke I almost you know
74:57 - we do this again but I'm gonna set this
74:59 - up for a real open source project that
75:01 - I'm developing and I'm gonna just add
75:03 - maybe one test to it and then I'm gonna
75:05 - ask the community to contribute more
75:07 - tests to it so I'll do that in the next
75:09 - video because as it relates to the
75:11 - neural network machine learning project
75:13 - that I'm working on
75:14 - Oh evil pull Ruby told evil poor request
75:19 - is a good example so oh well it's out of
75:23 - date now so no no I'm not gonna get into
75:25 - this I feel like I'm I'm interested but
75:28 - I feel like I I was just showing the one
75:30 - thing for me am I am so many was fine
75:32 - and it's interesting that these aren't
75:35 - running and I guess what I'm not curious
75:41 - here what's in the queue so is there
75:47 - anything that how do I see the queue
75:58 - insights projects my builds all builds
76:05 - settings is there a reason why some of
76:10 - these is not building on pull requests
76:17 - why is that what did I do wrong
76:22 - huh well now that I'm imagining it's
76:32 - because let's try one of these I wonder
76:35 - if it's because the branch went out of
76:38 - date so now let me look at the builds
76:56 - No Oh No
77:09 - I need to click all build at circle CI
77:11 - okay hold on
77:13 - no I'm um I'm there is there a
77:17 - configuration thing that I need to say
77:33 - 300 minutes
77:55 - we've got mr. did I miss a setting here
78:01 - no that's all been working already
78:09 - options let me go back to the protected
78:16 - branches thing I think I've got
78:27 - everything so why anybody know oh all
78:36 - branches on the left side
78:46 - all branches on the left side
79:09 - huh
79:14 - well let me check my email because I do
79:17 - get email notifications oh this bill did
79:24 - not succeed no checking my notifications
79:34 - 12:25 p.m. that's the last time we got a
79:36 - test have been fixed
79:44 - branch selection you just change the
79:49 - master branch
80:02 - you know bang so what have I missed yeah
80:06 - why did it build me me I answer me as a
80:09 - member of the organization so me IME has
80:12 - permissions on coding training to
80:14 - organization maybe I need to there's
80:19 - some sort of collaborators and teams as
80:25 - before person remembers every member the
80:27 - reason No so there must be some kind of
80:34 - allow merge commits allow get up pages
80:41 - now there's got to be some waiting for
80:51 - said the first link seems to help okay
80:53 - hold on let me look at this okay pull
80:58 - requests let me look at just like this
81:02 - first one one expected check waiting all
81:14 - required status checks where's this link
81:19 - that might be helpful my circle CI is
81:24 - protected switch it off and on again
81:27 - switch what off and on again
81:30 - [Music]
81:46 - project overview board settings looks
81:53 - build environment just parallel
81:56 - vironment vance settings webhook
82:00 - notifications test commands advanced
82:03 - settings only build full requests no
82:13 - auto cancel redundant builds no build
82:17 - forked pull requests there we go
82:20 - this must be it oh somebody just found
82:23 - it I have that checked Alka already I'm
82:32 - pretty sure it's this run pull builds
82:35 - four pull requests from Forks so this
82:38 - got it and so me I am sameen you must
82:42 - have not made a fork you just made a
82:43 - branch in the repo yes yeah this is it
82:48 - okay so this is good to know okay so
82:56 - this is great that I discovered this
83:03 - okay I took another break and boy have
83:06 - the pull requests been coming in it's
83:08 - kind of amazing
83:08 - but you'll notice every single one of
83:11 - these is waiting waiting waiting
83:13 - strangely I just showed you how I merged
83:15 - me I am so means well I forgot that me I
83:18 - am so me is a member of the coding train
83:21 - organization so me I am so me was able
83:23 - to make a branch within the coding
83:27 - within testing test test itself rather
83:29 - than a fork of testing test test that's
83:31 - a little bit of a subtle distinction
83:32 - here but all of you watching all of
83:34 - these have made your own fork and then
83:36 - submitted the blow requests from there
83:38 - and there's actually a setting inside if
83:42 - so if I'm on the coop my testing test
83:45 - test project and I go here to settings
83:47 - and I go to advanced settings
83:52 - build forked pull requests
83:56 - this is what I need to click to on so in
83:59 - this sense if you're only working if
84:01 - you're working in a private repo or repo
84:03 - where only people with some sort of
84:04 - permissions are making changes but if
84:07 - you're accepting contributions from the
84:08 - community at large you're going to want
84:10 - to have this be on so I'm going to
84:11 - collect it click this is on I think it
84:13 - will dynamically save let's see let's
84:17 - see if i refresh here if it starts
84:20 - running some of these status checks
84:23 - pause for a second so let's go back to
84:32 - settings let's just make sure that stuck
84:44 - now do I have to do something to trigger
84:47 - to rerun it should figure it out right
84:49 - because somebody could make a new poll
84:51 - request now
85:02 - it was at the bottom here now ah
85:07 - computers are so hard oh look I just got
85:09 - a notification that the coding trainers
85:11 - live I'm stuck
85:28 - oh there go to github branch settings
85:33 - don't I have to hit the rebuild button
85:35 - possibly where's that button
85:45 - well it did a new one you can see it's
85:47 - doing a new one
85:49 - so where do I yeah it's cueing them in
86:02 - the question is how do I have it do ya
86:16 - update branch okay yeah it's starting to
86:22 - do them now okay we can see that these
86:30 - tests are now running this the evil pull
86:33 - request somehow passed the test I think
86:36 - some of them probably won't run until
86:40 - well let's see required let's I think so
86:45 - and we can go we can go and look in
86:46 - circle see I we could see here's a queue
86:48 - of all the different tests that are
86:50 - running this ones running now pull
86:52 - request number 22 failed rebuild I could
86:55 - rebuild that one so we can see now I
86:57 - should be able to look through all of my
87:01 - pull request and we could see yeah it's
87:04 - just running them in some order it's
87:05 - gonna take a while to run all them okay
87:07 - great so I think I finished this video I
87:10 - think I already finished it earlier then
87:12 - I came back and kept going but I'm
87:13 - totally all you've seen all the basics
87:15 - now right you've seen how it is you can
87:18 - write some JavaScript code how it is you
87:21 - can make a node project that can run
87:24 - some tests for you using jest you can
87:29 - push all your code to github integrate
87:32 - it with circle CI so that anytime
87:34 - somebody makes a pull request to your
87:36 - project which is protected you run the
87:39 - test and you can see where those tests
87:40 - passed before you merge the code alright
87:42 - so I want to try to do another video
87:44 - where I'll look at a slightly more
87:45 - real-world scenario where I'm going to
87:48 - push my matrix math library to github
87:52 - and put all this together and then
87:54 - solicit contributions for tests and the
87:57 - like from the community okay thanks for
87:58 - watching the pull request draft to do
88:06 - update manually not the owner
88:07 - okay great Macchio you're still watching
88:12 - by any chance is that n gonna be
88:14 - workable I kept stopping and starting
88:15 - with all those weird pull requests stuff
88:16 - but I think you'll probably pull some
88:18 - stuff out of that alright it's 12:45
88:26 - so by the way one of the things that I
88:28 - want to do I don't know if I'll have
88:30 - time for it today
88:33 - is is I wanted to like show how you can
88:40 - just run arbitrary node code but like
88:44 - every time this runs like so I basically
88:46 - I could write a bot that tweets every
88:49 - time somebody's submitted a pull request
88:50 - and whether the test passed or not so I
88:53 - was thinking of doing that but that I
88:56 - think um some people do that as a coding
88:58 - challenge king foot asks hey Dan can you
89:02 - discuss more about when and why someone
89:04 - would consider starting their unit test
89:06 - I think smaller single user projects
89:07 - like p5 minigames don't require this
89:09 - kind of testing in general I agree I
89:13 - think that if you're collaborating
89:15 - especially if you're making a library
89:17 - having tests is a really useful thing it
89:20 - makes what what I'm learning what I've
89:22 - come to more recently as a conclusion is
89:24 - that it actually makes contributing to
89:27 - the project of friendlier than not
89:29 - having tests and so so that's what I
89:34 - would say I mean I you know if I were
89:36 - teaching an intro programming class and
89:37 - I'm asking people to do an assignment
89:38 - each week I wouldn't be giving the time
89:39 - and also write unit tests p5 sketches
89:42 - and you notice that I've haven't done
89:44 - one there's you know user testing but
89:46 - but I think that large projects it's
89:49 - also really tricky to if it's graphics
89:51 - like are you gonna like start checking
89:52 - pixels like you know spitting up a
89:54 - phantom browser so these are good
89:56 - complicated questions okay were you or
89:59 - will you talk about TDD it kind of was
90:03 - right didn't I talk about that so let's
90:06 - do the let's do the matrix library so
90:18 - first what I want to do is I need to go
90:20 - to Twitter
90:28 - and I'm gonna look for some a username
90:38 - on Twitter with like Carla submitted
90:42 - unit tests I'm gonna look at this shift
90:45 - man
90:45 - Carla nope is this it yes wonderful okay
90:54 - so if I search for for this user and
90:59 - Schiffman here we go okay now I need to
91:13 - grab my let me do this is not part of
91:17 - the video let me just get the neural
91:18 - network code up on github nn coding
91:25 - train hey I'm doing some nonsense crazy
91:28 - stuff here because I was in the middle
91:31 - of it let's let's go to new repository
91:42 - neural network toy neural network Jess I
91:51 - don't know this this is a good name for
91:53 - the library toy neural network Jess I
91:57 - think so
91:59 - any better ideas oh yeah I talked a
92:05 - little bit about test-driven development
92:06 - but you're right I didn't really but
92:15 - I can always change the name a
92:18 - repository later neural network
92:25 - JavaScript library for coding training
92:31 - tutorials and I'm going to create this
92:36 - repository this is all I need get
92:51 - promoted get in it
92:54 - git remote add origin there get status
93:04 - Adam let's do a git ignore and node
93:25 - modules think I'm gonna skip all the
93:28 - steps that I previously have done NPM
93:35 - init package name toy toy neural network
93:42 - version 0.01 toy neural network
93:49 - JavaScript library for coding training
93:53 - tutorials entry point is none whatever
94:03 - test command is going to be jest that's
94:06 - the github repository yep oh I wanted
94:09 - that to be encoding trained shoot so I
94:12 - have to fix that neural network machine
94:17 - learning education JavaScript
94:22 - [Music]
94:24 - coming trained community licensed MIT
94:29 - yes so one thing I need to do by the way
94:33 - is I forgot and let me actually do this
94:40 - settings transfer ownership
94:46 - this is toy neural network J s and I'm
94:52 - going to transfer this to coding train
94:55 - I understand transfer team access let's
95:06 - just not worry about that right now and
95:08 - so now it's taking a few minutes but I'm
95:15 - there so the one thing I need to change
95:17 - is in package.json Jason this should be
95:21 - coding train as the URL for the get
95:24 - website and main should actually be like
95:29 - nothing just gonna leave this as blank
95:34 - and get remote remove origin git remote
95:47 - add origin now it's this okay so now
95:59 - let's add all the code and all the code
96:04 - all right we got to install NPM install
96:07 - - - save - dev jest let's go to the jest
96:12 - website
96:19 - getting started yep
96:22 - did I get that right
96:35 - all right so that's good so now what I
96:40 - need to do is we're gonna add so if I
96:50 - say NPM tests no tests found all right
96:55 - so this is interesting okay so get
97:01 - status get add adding just testing
97:09 - framework whoops
97:14 - so now I have Karla's tweet I have
97:22 - circle CI how do I get back to here I
97:31 - want to just get two projects yeah okay
97:35 - I have here refresh I haven't pushed it
97:49 - okay and I'm gonna how to read me which
97:55 - at some point I want to have be better
98:00 - I'm gonna remember to pull the read me
98:03 - now okay alright so I am now ready I've
98:10 - got to finish up here in a minute but so
98:18 - I'm gonna write one test I need to
98:25 - export the matrix library right one test
98:30 - for one of these functions and then run
98:35 - the test integrated with circle CI and
98:38 - then invite people to contribute more
98:41 - tests are also refactor the code in with
98:43 - more efficiency efficient ways and see
98:45 - if the test will run okay any any
98:53 - thoughts before I begin problem is I
98:55 - don't know how to write tests wholly
98:58 - test suggests that I actually know how
99:00 - to write is that let's let's look at the
99:06 - documentation is that it's the one that
99:13 - was like the some test so how would I do
99:16 - it with an array I should probably
99:20 - figure this out before I do it
99:28 - getting started using matchers right
99:32 - object assignments hmm I could probably
99:38 - do this with a raise to 2 equal
99:44 - recursive checks every field of an
99:45 - object or array oh okay so I should be
99:49 - able to do this
99:54 - I should be able to follow this okay all
100:01 - right we're just gonna try all right
100:12 - okay just looking into the chat I'm
100:15 - gonna I'm gonna get started now
100:20 - apologies I have a little bit of a cold
100:22 - my blowing my nose is probably making a
100:25 - loud noise into the microphone
100:41 - all right here we go so this is the last
100:51 - thing I wanted to do and I'm gonna take
100:52 - a break and I'll come back later this
100:53 - afternoon I hope I mean I don't know
100:55 - kind of I wanted to do more of the
101:01 - neural network stuff I wanted to go back
101:03 - and do 2048 again we'll see we'll see
101:05 - what can happen okay my nose is really
101:13 - running which it always does but in
101:15 - particular today so for now this is
101:26 - things gonna be the final I might do a
101:29 - coding challenge which is like using
101:31 - continuous integration to tweet but I'll
101:35 - have to save that for later okay
101:44 - energy energy Heat all right so here we
101:53 - are I am in another video in my series
101:57 - about unit testing test different driven
102:00 - development and continuous integration
102:01 - and I have been building I have another
102:04 - playlist where I'm building a simple
102:06 - neural network library in JavaScript to
102:08 - make some examples this video is not
102:10 - about how the neural network library
102:13 - works or what a neural network is you
102:15 - can go watch those videos for that but
102:17 - with this video I'm going to do is I'm
102:19 - going to add tests to the library and
102:22 - then solicit contributions from the
102:25 - community to add more tests and I'm
102:27 - gonna have those tests run using circle
102:31 - CI which is the sponsor of this video
102:33 - you can find out more about circle CI
102:35 - here and then we're gonna we're gonna
102:39 - have learned something because this is
102:40 - new to me I have never other than the
102:42 - contributions I've made to p5 jazz
102:45 - really done a test-driven development
102:47 - workflow before but I'm excited about it
102:50 - and I think what's exciting about it is
102:52 - to make contributing to open source to
102:54 - open
102:55 - pathways to make you people feel more
102:56 - confident in being able to review pull
102:59 - request to submit pull requests they'll
103:00 - run those tests and also writing the
103:03 - tests is a way you can contribute to a
103:04 - project even if you don't know how
103:06 - neural networks work you might be able
103:07 - to contribute to this project by helping
103:09 - write a single test for it okay all that
103:11 - said I've set up a bunch of things
103:12 - already so I have this github repository
103:15 - toy neural network in j/s it's on github
103:18 - I have it locally I have a package JSON
103:22 - file which has a which a science jest
103:26 - jest is the testing framework
103:28 - open-source testing framework from
103:30 - Facebook that I'm going to use and
103:36 - that's pretty much all I need and that's
103:38 - the dependencies are there so I need to
103:41 - write a test so the first day oh let me
103:42 - first mention thank you - Carla - beer
103:45 - on Twitter who did this already I kind
103:49 - of gave me the idea for this in a way I
103:50 - set up a series of easy to use automated
103:52 - unit tests for the current version if
103:54 - your artificial neural network matrix
103:55 - library code so here are a whole bunch
103:57 - of tests now Carla used a framework
103:59 - called Q unit so I'm gonna click on her
104:03 - the tests here and I'm gonna look under
104:05 - unit tests and what's useful about this
104:08 - is you can see Carlos doing something
104:09 - smart which I'm not going to do which is
104:10 - actually creating an HTML page to
104:12 - probably run the tests in the browser to
104:14 - see how they work but we can look at
104:16 - this this idea of testing to see if like
104:21 - matrix addition is working so we can
104:24 - hopefully use exactly this test but
104:26 - convert it to the syntax of jest and get
104:28 - it to run okay I'm gonna do that in this
104:31 - video so what other pieces do I need so
104:32 - this is the matrix library the matrix
104:36 - library is a class called matrix that
104:39 - you can create matrix objects with and
104:42 - you can multiply those matrices you can
104:45 - add things to those matrices it's a math
104:47 - bunch of math code that I need in the
104:48 - neural network project so with just
104:51 - something that I can do is I can create
104:53 - a new file and I can call that file
104:56 - matrix test j/s and this is where I'm
105:00 - going to write any tests that go along
105:03 - with matrix not Jas and so let's go to
105:06 - the jest again I don't really know what
105:08 - I'm doing so this is gonna be
105:08 - bit of a struggle here but I think what
105:10 - I would like to do is kind of use this
105:16 - Oh
105:18 - let's let's try I want it basically
105:20 - let's try this test object assignment
105:22 - well so let's do this so what I want to
105:26 - do test matrix add scalar so this is a
105:33 - what I want to do here is say a let and
105:37 - be a new matrix that and let's look at
105:41 - that Carlos use Carlos as a model here
105:45 - new matrix that's 3x3 so I'm gonna just
105:48 - follow this exactly and I'm gonna so I'm
105:53 - going to add this code right here so
105:56 - this is the idea I'm making a 3 by 3
105:58 - matrix with these values in it and then
106:00 - I'm going to add a scalar to it and I'm
106:03 - gonna say let add scalar whoops sorry
106:07 - let scalar 1 equal 5 does she create a
106:12 - scalar oh this is generic so running the
106:15 - test connects it's probably a way to
106:16 - like run it with a generic value
106:18 - oh let's kill her 1 equals 0 but it can
106:20 - be something else I'm gonna just say I
106:22 - would be 5 okay now what I want is to
106:27 - expect a 2 equal Oh a data to equal mm
106:40 - so I have to think about this
106:43 - I'm timeout for a second so I could do
106:53 - each row one at a time which is silly
107:03 - I could could do each row one at a time
107:10 - is there a way for me to yeah I can just
107:13 - try okay okay so I know what let me back
107:21 - up for a second I'm sorry let me just do
107:23 - this whole thing again
107:35 - sir let me go back a little bit to equal
107:43 - recursively checks every field of an
107:44 - object and array okay that's what I need
107:50 - sorry let me go back okay it's all right
107:52 - so in my previous videos where I went
107:55 - through a lot of steps of this I just
107:56 - used this to be function right expect
107:59 - two plus two to be which is basically
108:01 - two plus two equals four but there's
108:04 - actually a function in jest that I'm
108:06 - just learning about now called two equal
108:08 - which will check like oh is this object
108:10 - equal to this object it will recursively
108:12 - go through and check all the properties
108:14 - of the objects or all the elements of an
108:15 - array so this should be the code that I
108:17 - can start with and if I paste this into
108:21 - my test file now what I really am
108:23 - testing is adding number two matrix and
108:27 - I'm gonna go and grab Carlos code and
108:31 - just kind of grab this much of it at
108:33 - least and I'm going to do this and so
108:40 - what this is doing it's saying okay make
108:41 - a three by three matrix and these are
108:44 - all the numbers in the matrix and add
108:45 - and I'm instead of having a variable
108:47 - right now just be simple about this
108:49 - I'm just add one let's just add one so
108:51 - the new matrix should be two three four
108:53 - five six seven eight nine ten so I want
108:57 - to expect a two a dot data well and I'll
109:02 - call this m4 matrix I think and mm and
109:06 - two equal and I should be able to now
109:10 - put in a two dimensional array with the
109:15 - values in 2 3 4 comma 3 4 5 6 7 comma 8
109:23 - 9 10 so this I believe is now the test
109:33 - right let's take a look at this all
109:34 - together I could be doing something
109:36 - wrong here but right I want to create a
109:38 - matrix object adding and I'm gonna say
109:41 - adding a scalar that's the name of the
109:42 - test to a matrix I'm gonna add the
109:45 - number one to it and I'm gonna check to
109:47 - make sure the matrices date
109:49 - actually equals all this and I probably
109:52 - could have said expect em equal and then
109:54 - maybe done something like what an object
109:55 - with data and it would that be better
109:57 - I don't know well let's do that let's
110:00 - try this so just head of curiosity let's
110:03 - try this to see if it works now I'm not
110:07 - saying this is the best test there's
110:08 - probably more ways and jest to structure
110:12 - this to ever be more generic I need to
110:14 - make lots of tests this is just one but
110:15 - let's just see if this even runs and I'm
110:18 - missing some important pieces here
110:19 - clearly so first thing I can do is just
110:21 - write NPM tests and what it's going to
110:25 - do it's kind of it's going to find that
110:26 - file but says matrix is not defined so I
110:28 - need to make sure I export matrix and I
110:32 - say modules dot export equals matrix and
110:38 - then in matrix test I'm gonna say
110:43 - constant matrix equals require dot slash
110:51 - matrix so this should be I exporting the
110:54 - matrix class and then importing it here
110:56 - so now it should know what matrix is
110:58 - when I run that test running the test
111:04 - now it failed now oh modules dot export
111:08 - okay I can never get anything right it's
111:11 - module dot exports can never remember
111:15 - that apparently let's run the test one
111:18 - more time
111:20 - failed matrix is not defined Oh funny
111:26 - thing
111:27 - funny thing order is important matrix
111:32 - doesn't exist yet because I haven't
111:33 - defined the class so this actually has
111:35 - to be at the bottom let's try this one
111:38 - more time all right so we got further
111:54 - look at this okay interesting
112:01 - so what's happened here this it wants
112:04 - those objects to really be equal to each
112:07 - other and one thing that I didn't do is
112:10 - I didn't you know this I really should
112:14 - know why hold on no no let me look at
112:18 - this oh oh okay sorry sorry sorry sorry
112:27 - sir look at this it failed because this
112:32 - is what it got it got those correct
112:33 - numbers two three four five six seven
112:36 - but what it received also had columns
112:38 - and rows and I forgot that in this case
112:40 - my matrix objects if I look at the
112:43 - constructor have not only the data but
112:45 - columns and rows so I need to go back to
112:48 - my test and say expect what do I really
112:52 - expect it should have data columns is
112:54 - three and rows is also three and you
112:57 - know I don't the order shouldn't matter
113:00 - here the the properties of an object are
113:02 - not ordered but I like to I'll put
113:04 - columns and rows first and really rows
113:06 - should be first just in terms of my
113:08 - mental thinking it's always rows by
113:09 - columns okay so this should hopefully
113:14 - the test should pass right and you know
113:17 - this would be interesting to not have
113:19 - those be equal okay so let's let's run
113:21 - this again let's run the test and the
113:26 - test passed awesome
113:27 - so we've written our first test now have
113:29 - I done the best job ever in terms of
113:32 - optimal thoughtful testing driven
113:35 - development no but I've got to start
113:37 - I've got an actual test here if somebody
113:39 - were to try to refactor if I were trying
113:41 - to refactor my add function and do it in
113:43 - a different way and it didn't actually
113:45 - add the numbers up correctly this would
113:47 - fail and I would know but I don't want
113:49 - to do any more testing what I want to do
113:51 - now was a couple things there's one
113:54 - important detail that I've missed
113:55 - because this is right at the moment just
113:57 - client-side code only but this requires
114:00 - stuff and this module export stuff is
114:03 - going to mess that
114:04 - but let me at least get this building on
114:07 - Circle C I so this repository is already
114:11 - on github here and now I'm going to go
114:13 - to circle CI and I'm gonna say add a
114:15 - project and I want to add toy why is it
114:22 - not showing up oh there it is I just
114:26 - have to refresh I want to add the
114:28 - project toy neural network J s I'm going
114:31 - to set up the project it's going I'm
114:33 - gonna copy oh it was a as you might
114:35 - remember if you watch the previous
114:37 - videos I need to create a new folder
114:38 - called dot circle CI and in that folder
114:43 - I could need to create a new file called
114:45 - config dot yml and then I can go here
114:50 - and copy to clipboard all of the
114:53 - settings stuff now I'm gonna leave more
114:54 - stuff in here this time so I'm gonna
114:57 - check and just I want to use the same
114:59 - version of node that I'm using here 8.9
115:02 - so this is the version of node that it
115:05 - should run the test to is I'm gonna
115:08 - leave this work I don't think I need
115:10 - this working directory thing that's
115:11 - optional I definitely need to check out
115:13 - the code restore cache let's see if this
115:17 - helps speed it up so this is this should
115:19 - be a thing where it saves a cache of
115:23 - previous dependencies that it's already
115:25 - installed so don't have to reinstall
115:26 - them every time it needs to run the test
115:29 - run is NPM install I'm using NPM not
115:34 - yarn and then run the tests is NPM tests
115:36 - so I'm gonna leave all of this here and
115:38 - then I need to push this to github get
115:44 - status let's just make sure oh I
115:45 - modified all this and added the test I
115:48 - modified matrix that yes I'm going to oh
115:50 - and look at this I've got a problem here
115:53 - I've got a typo that's got to be circles
115:55 - CI the e key has anybody watches my
115:58 - videos knows the e key on my keyboard
116:00 - only works about 75% of the time if it
116:04 - misses it so that should fix that I'm
116:09 - gonna say good status again there's dot
116:12 - circle CI I'm gonna say git add dot git
116:15 - commit dash
116:16 - and adding unit tests with circle CI I'm
116:22 - gonna push this to github and there it
116:27 - is it's on github I'm going to go over
116:29 - here to github just to make sure I see
116:32 - circles I see it doc circle CI is here
116:34 - and I should be able to say start
116:35 - building so I'm gonna click start
116:37 - building and make sure this test runs
116:44 - and PM install is happening right now
116:51 - install song it's creating the cache
116:59 - yeah pike failing oh oh
117:05 - hmm so why did the test fail let's take
117:08 - a look
117:10 - cannot find module dot matrix from
117:14 - matrix SAS hmm must be a path thing oh
117:25 - no it's not I just made a silly mistake
117:28 - a very silly mistake it is kind of a
117:31 - path thing it is a path thing uh I made
117:34 - a silly mistake which is that I was
117:36 - thinking Capital m for because it's a
117:39 - matrix class and I want to reference it
117:42 - as capital and but the file date the
117:44 - file he was actually lowercase M that
117:45 - file is called matrix a chest and on my
117:48 - Macintosh II computer thing it didn't
117:50 - really care about that it worked but the
117:52 - circle CI servers are obviously clearly
117:54 - case sensitive in terms of what they're
117:56 - running so let's get add git commit a
118:01 - fix upper case issue a worse description
118:06 - ever get the push origin master and I
118:09 - think it will auto trigger a rebuild so
118:17 - I'm waiting to see if it does it
118:19 - automatically yep it's running six
118:22 - uppercase issue shoot still running
118:31 - still running Oh fixed check check so
118:40 - exact look look look it checked out the
118:41 - code it restored the cache it run npm
118:44 - install it save the cache and Iran NPM
118:46 - test and like that's past woohoo so now
118:49 - I am going to make it a moment where all
118:52 - of you can now contribute and give me
118:54 - some better tests so what I'm gonna do
118:56 - here is I am going to do there's a bunch
118:58 - of settings I need to configure I need
119:00 - to go to settings I'm gonna go to
119:01 - branches I'm going to protect master
119:05 - protect this branch require status
119:08 - checks I want to make sure Circle CI is
119:10 - checked and I'm also gonna include
119:12 - myself I don't want to be able to do
119:15 - anything even though I'm the
119:15 - administrator I still have to have my
119:17 - tests pass I'm gonna do Save Changes and
119:20 - then a last piece that I need to make
119:22 - sure I do if I want contributions from
119:24 - the community not just local branches
119:27 - for anyone who's up kind of have member
119:29 - access to that repository I need to go
119:32 - to circle CI and I need to go to this
119:35 - particular project under settings
119:38 - advanced settings right so I went to let
119:41 - me let me show you that again so I'm
119:43 - doing it quickly like if I'm here I want
119:47 - to click this Settings icon then I want
119:50 - to go down to advanced settings and I
119:53 - want to make sure oh you know what this
119:57 - is now on so interestingly enough I
120:01 - wonder if that's a global setting for
120:03 - all your projects or if it's on a per
120:05 - project basis I'm not entirely sure but
120:08 - I'm sure but I set it to on for a
120:11 - previous project I do need to make sure
120:13 - this is on because I want to build it
120:15 - for forked pull requests and let's take
120:17 - a moment I'll come back in a minute and
120:18 - we'll see if there any pull requests
120:20 - that I can actually merge right now oh
120:21 - no I forgot something I forgot something
120:24 - important okay here's a this is just a
120:27 - weird nuance to exactly what I'm doing
120:29 - with
120:29 - this particular repository but it's
120:31 - worth mentioning this happens to be and
120:34 - people can make pull requests while I'm
120:35 - talking about this this happens to be a
120:40 - matrix this matrix class is something
120:43 - that I'm using for client-side only code
120:45 - but you'll have noticed that I added
120:50 - this module dot exports the browser's
120:54 - not going to know what that is and in
120:56 - fact if I were to now run a little
120:58 - webserver to like check what my codes
121:02 - doing in the browser I'm gonna see this
121:08 - error message and just refresh again
121:11 - module is not defined so the module
121:14 - needs to be there this module call needs
121:16 - to be there in order for me to run the
121:20 - tests via node but the module can't be
121:23 - there for when I'm running the code in
121:25 - the browser now there are much more
121:26 - sophisticated ways around this with a
121:28 - much larger web app that you're working
121:29 - on in a build process but for Lisa run
121:33 - doing right now let me fix this with you
121:35 - know you call kind of a hacky solution
121:36 - but it's one that I figured out
121:37 - yesterday with some help thank you and
121:40 - so what I'm gonna do is I'm actually
121:41 - gonna say if typeof I can't actually say
121:46 - if module be nice if I could just say if
121:48 - module right
121:49 - if module exists then do that so that'll
121:53 - work for when node is running the code
121:55 - for the test but it'll not work this is
121:57 - the kind of the idea of what I want to
121:59 - do this won't actually work because it's
122:01 - still not defined to test if it exists
122:03 - but I can say if typeof module is not
122:08 - equal to undefined so this should now
122:11 - get rid of the error
122:13 - oops
122:21 - I'm looking at the wrong test and the
122:23 - wrong project where one Circle CI where
122:33 - where was that where have I been in the
122:35 - wrong pride project oh I was looking at
122:37 - the test test test settings all right
122:40 - let me go back to that okay okay I was
122:43 - looking the wrong project all right
122:44 - mm-hmm
122:47 - but first of all I'll go back why is
122:49 - this not working what did i do what did
122:54 - i do yesterday Circle CI test in my
123:04 - sketch ah yes if type of module does not
123:08 - equal undefined that worked for me
123:13 - yesterday
123:23 - well I just must not have saved it all
123:25 - right let me let me go back yeah I'm not
123:35 - saving it as what I'm doing Oh weird
123:37 - oh woops deleted entirely okay
123:44 - sorry everybody at least you're all
123:47 - watching me to keep me in check here cuz
123:49 - I wouldn't realize that too later
123:50 - alright oh yeah quotes around undefined
123:56 - that's the issue
123:57 - okay sorry thank you quotes around
123:59 - undefined cuz it's a string okay thank
124:01 - you
124:02 - alright back up for a second let's just
124:04 - go back to this thing here where I'm
124:12 - doing ah testing test test settings yeah
124:16 - oh right right right oh right right
124:20 - thank you all right I need to add what I
124:27 - need to do one more setting which is
124:29 - very important
124:30 - I'm gonna go back to Circle C I look I
124:32 - have these two projects testing test
124:34 - test was the build project I made in
124:36 - previous in my previous video tutorials
124:40 - where I did this a little bit slower
124:41 - step by step and I want to check the
124:43 - settings for toy neural network J s I
124:46 - want to go to advanced settings and then
124:49 - I want to check here's the really
124:51 - important one build forked pull requests
124:54 - I want to run the test for people not
124:57 - just from the coding train or official
124:59 - organization or kind of contributing to
125:01 - the project who can make a branch within
125:02 - the repository but people who are just
125:04 - from the community would fork the
125:06 - repository and then are sending back a
125:07 - pull request I want that so I'm going to
125:09 - click that too on that will live save
125:13 - there might be thing where you have to
125:14 - like go back and rebuild any pull
125:16 - request that was like submitted before I
125:17 - click that but now going forward they
125:19 - all should be fine and so I'm pretty
125:21 - much done except I forgot something
125:23 - important so here's the thing what I'm
125:26 - actually working on here is a
125:29 - client-side JavaScript project at some
125:32 - point I might want to make this you know
125:34 - a neural network library that could be a
125:36 - No
125:36 - module and I could have a more elaborate
125:38 - fancy build process to deal with all
125:40 - this but right now I'm just written
125:42 - these matrix dot these tests just for
125:45 - this matrix a J's file that lives as
125:47 - part of this web project so this is
125:49 - actually where it's being deployed and
125:50 - used as part of a web page the problem
125:53 - is I'm running a web server already if I
125:55 - go and refresh that page which I just
125:59 - did a second ago that this is the area I
126:01 - mean again module is not defined so
126:03 - while the test might run because I've
126:06 - set up this export of matrix properly so
126:09 - the test one the client-side JavaScript
126:11 - knows nothing about node modules and
126:13 - again they're prop they're sophisticated
126:15 - and better ways to handle this but I'm
126:17 - gonna do this with a slightly just like
126:19 - a quick trick here and I'm going to say
126:22 - here is that I only want this to happen
126:26 - if I'm the environment that I'm running
126:28 - is within node in a way that I can do
126:30 - that is I can actually I mean ideally I
126:32 - would just say this if module like if it
126:37 - exists then I can do that but this
126:39 - actually won't work because it's still
126:42 - not defined but a trick that I can do is
126:44 - I can actually ask for the type of it
126:46 - because the type of it will return I can
126:49 - say if I'm just like here if I say type
126:51 - of module I'm gonna get undefined in
126:55 - quotes so I can actually just check hey
126:57 - as long as it's not equal to undefined
126:59 - then go right ahead so now I should be
127:04 - able to not have this error in the
127:07 - browser and watch this gets of let me
127:12 - let me add this change get status get
127:15 - add checking if node environment for
127:23 - module and now oh I didn't mean commit
127:26 - yes 2 M 3 M
127:29 - how many M's are there and commit I like
127:31 - em ok now remember git push origin
127:35 - master
127:38 - I cannot do it I've protected myself so
127:41 - I am now going to say even if I feel so
127:44 - one thing I probably want to do is I
127:45 - might as well run and might as well make
127:48 - sure the tests still work yeah so the
127:50 - tests work so I can feel pretty
127:51 - confident it's fine
127:53 - even with that change notice still
127:54 - recognizing the module and I can say git
127:56 - push origin master and then I'll call
128:00 - this branch module fix I sent it up to
128:07 - github I'm now going to go back and I'm
128:11 - gonna go here I'm gonna say compare and
128:13 - pull requests I'm just gonna create this
128:17 - pull request and now I am going to wait
128:22 - come on circle see I give me tell me
128:25 - that my tests have passed oh and
128:35 - somebody approved these thank you okay
128:36 - now I'm gonna hit merge merge wonderful
128:43 - so now I have a project that involves
128:46 - test-driven development it has unit
128:50 - tests for the matrix math though it is a
128:54 - protected master branch on github and
128:56 - only pull requests that run passing
129:00 - tests will be able to be merged so I am
129:04 - now opening this repository up to the
129:05 - community obviously I have a lot more
129:06 - work to do on it to make all the neural
129:08 - network stuff work and you can imagine
129:10 - what other tests do I need to write but
129:12 - this is why this is important this
129:14 - matrix j/s library is pretty terrible
129:18 - and inefficient and slow so ultimately I
129:21 - might like to continuously refactor all
129:24 - these math functions and so I might
129:28 - start using like things like reduce or
129:30 - fill and I want to make sure that I
129:32 - didn't break the actual math and this
129:34 - process of test-driven development will
129:36 - allow me to do that and will allow it it
129:38 - will make it easier and nicer for those
129:40 - of you who want to to contribute as well
129:42 - you know maybe I'll swap out this whole
129:44 - thing with another matrix math library
129:47 - and then but use the same function names
129:48 - and does the code still work there's so
129:50 - many possibilities so I hope you enjoyed
129:52 - all
129:52 - his videos about unit testing continuous
129:55 - integration and test-driven development
129:58 - is possible that I've actually done this
130:00 - because I am the least test-driven
130:02 - development person but I think it's a
130:05 - good thing and I'm hoping to use it more
130:06 - in project in the future thank you again
130:08 - to Circle CI if you're interested in
130:10 - signing up you can check out this link
130:11 - here and for sponsoring these tutorials
130:14 - and I look forward to seeing you in
130:16 - future ones I have it one more that I
130:18 - want to make at some point so there
130:20 - might be another video in this playlist
130:20 - if you're watching this right now you
130:22 - can check it's not there you can
130:24 - complain in the comments I love
130:25 - complaints warms my heart goodbye Oh
130:34 - test-driven development requires the
130:36 - test to be written before the code so
130:38 - should I not have said that am I gonna
130:42 - get oh right double angles triple equals
130:52 - yeah all right I think this is good so I
130:57 - definitely just stop now because it's
130:59 - 1:30 I'm here much later than I had
131:00 - thought for this morning's session I
131:03 - feel pretty good about this let's see if
131:05 - there's any pull requests here oh
131:08 - there's already four add product test
131:12 - make readme more appealing and add more
131:15 - information let's take a look oh this is
131:19 - awesome
131:19 - thank you I'm just gonna merge this all
131:24 - checks at Pat little update branch and
131:28 - it's gonna it's going to rerun the tests
131:35 - fixing add function
131:42 - Oh interesting
131:47 - changing the I and J so is this I didn't
131:51 - use this convention in other places
131:53 - though have I review these four requests
131:57 - later but that's a good one
132:00 - let's see you did the the so let's merge
132:06 - this one where do I have the Travis logo
132:12 - sticker do I have it on my laptop I
132:19 - don't have a Travis logo in my lap - oh
132:21 - I do didn't realize that oh well okay
132:31 - hopefully that's not gonna be too much
132:34 - of a problem
132:35 - maybe we can match you you can fixed
132:39 - head post ad okay let's update the
132:44 - branch let's see here my Tammy's tests
133:06 - MTR Nord is probably a patron right
133:11 - because if you're able to review and
133:16 - check things thank you this looks great
133:24 - let's confirm that merge that one in and
133:30 - matrix plus matrix test conflicting
133:35 - files uh-oh alright so I'm not going to
133:39 - go through and this would be interesting
133:40 - to do try to resolve this but maybe you
133:41 - can refactor your pull request mus a b k
133:45 - IL ic' alright okay no you're not I'm
134:04 - just a normal good hub user so you did I
134:06 - guess I do I have like just permission
134:07 - permissions that anybody can review any
134:11 - well I'll figure that out later okay so
134:13 - thank you everybody
134:14 - any questions I hope to come back later
134:17 - this afternoon I would like to do the I
134:21 - would like to do the gradient descent
134:24 - piece of the neural network library to
134:25 - really have it done I just I need to I'm
134:28 - not ready to prepare for that I need to
134:30 - do some prep for that so let's see if I
134:32 - can find the time to do that otherwise
134:34 - maybe I will maybe I will do a different
134:42 - coding challenge or I'll come back and
134:44 - do the Twitter bot thing which would be
134:45 - kind of interesting to have Circle C I
134:48 - tweet yeah yeah it's interesting so
134:55 - whoops
134:59 - [Music]
135:02 - live this is being live updated it
135:04 - failed the test
135:05 - the test is running again where there's
135:08 - still conflicts I'm not sure all right
135:13 - so any last questions what are we doing
135:17 - next well right now I'm leaving you'll
135:18 - have some lunch
135:18 - and I have a couple meetings I have to
135:21 - do this afternoon I don't think I'd and
135:24 - so I hope to come back let's say like
135:28 - 3:30 or 4:00 two hours from now and just
135:33 - do maybe if I can finish off the
135:34 - gradient descent piece I would love to
135:37 - do that
135:38 - so the wallpaper if people ask me this
135:44 - all the time and I have it in a shared
135:46 - Google Drive somewhere but I maybe I can
135:49 - make that available on the website I
135:50 - don't know what's this screenshot oh
135:57 - that's funny
136:00 - [Music]
136:01 - all right so I think they finished
136:07 - checking ok did it all checks have
136:13 - passed that why are there these
136:14 - conflicts though I can't merge it
136:17 - because of these conflicts let's take a
136:18 - look yeah so fix those merge conflicts
136:22 - do I have to do that that's it that's a
136:24 - topic for another time ok thank you
136:28 - everybody I will be back this afternoon
136:32 - at least to say hi for some reason I
136:34 - don't come back I will post something to
136:36 - the community tab in YouTube or and
136:38 - tweet but I'm trying but but I hope you
136:41 - come back at least for a little bit even
136:42 - if just say hi that I unfortunately have
136:44 - run out of time restricting today any so
136:49 - thank you all for tuning in I and I'll
136:54 - see you again a little bit later I guess
136:59 - ok thank you everybody
137:12 - the ISEE in slack that a link to the
137:14 - snowy wallpaper is coming so actually I
137:18 - can I can post it because I have power
137:21 - to do that let's see if I could do that
137:23 - alka will probably get to it faster than
137:25 - me okay thank you everybody hope you
137:37 - enjoyed this special episode of the
137:39 - coding train thank you to circle CI for
137:43 - their sponsorship thank you to mpj for
137:46 - the wonderful videos that I watched that
137:48 - helped me figure out a lot of how this
137:49 - works and thank you to ITP students so
137:53 - gave me good advice about this the
137:56 - coding train patron community who showed
137:59 - me just as a testing framework I could
138:01 - learn and to everybody out there
138:03 - watching for watching these videos I
138:04 - will be back a little later today for a
138:06 - second live stream and the edited
138:10 - version of these videos should be
138:11 - available next week sometime might take
138:14 - me a little longer because we're gonna
138:15 - do some fancy post-production to them
138:18 - but you know maybe of all my gray hair
138:21 - can be fixed and didn't like you know
138:26 - little airbrushing here and I'll see you
138:30 - all soon
138:30 - thank you
138:34 - you