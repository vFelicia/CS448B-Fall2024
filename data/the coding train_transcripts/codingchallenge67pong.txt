00:00 - hello everybody um this is pong and I
00:03 - just finished a coding challenge where I
00:04 - programmed exactly this and this is
00:06 - working pong with very very very very
00:08 - few bugs it probably has some bugs I
00:10 - haven't noticed yet
00:12 - however I had a lot of problems making
00:14 - this video I was so excited like here it
00:16 - is again I'm going to have the greatest
00:18 - video ever on the Internet it's going to
00:19 - be 10 minutes of making pong and
00:21 - everyone will just be able to watch it
00:22 - in 10 minutes and make their own
00:23 - versions of pong to creative Delight of
00:26 - children everywhere but I I failed first
00:29 - of all the video is at least an hour
00:30 - long it's going to be longer now that
00:31 - I'm with this rambling introduction I
00:33 - had a lot of problems and things I
00:34 - couldn't figure out and I want to say
00:36 - that there was a a a major issue at a
00:39 - certain point later in the video I use
00:42 - this function to kind of look at how I
00:44 - can map an angle to a direction because
00:48 - based on where the paddle where the puck
00:51 - hits the paddle it should move in a
00:53 - certain direction and I forgot a couple
00:55 - things I didn't actually convert to
00:57 - radians when I was doing that test and
01:00 - the range that I used uh actually went
01:02 - in the wrong direction so uh those
01:04 - things will be wrong in the video the
01:06 - code however that you see Linked In This
01:08 - description has the corrected version
01:10 - and is what you see right here um
01:13 - there's some sound let me turn that off
01:15 - and I can move I'm going to play this a
01:16 - little bit more right now my left paddle
01:18 - is doing much better than my right
01:20 - paddle but I made it I made pong I hope
01:22 - you will do creative versions of it and
01:24 - I'll see you in another video sometime
01:26 - enjoy this coding
01:28 - challenge hello welcome to a coding
01:30 - challenge I am super excited for this
01:32 - one it's been a while people have asked
01:33 - me to do more coding challenges with a
01:35 - timer or simple games and I going to
01:38 - program in this coding challenge pong in
01:41 - 2 minutes and 30 seconds no definitely
01:43 - not it's probably going to be like three
01:44 - hours but you'll see how long this video
01:46 - is and then you'll know about how long
01:48 - it takes I am not stopping in the middle
01:49 - of this it doesn't matter what bugs or
01:51 - things I can't figure out I am going on
01:53 - but I'm not starting my timer just yet
01:56 - what I'm going to do before I start a
01:57 - timer is let's at least together you and
01:58 - me map out the pieces of PM figure out
02:01 - what features we're going to implement
02:03 - so if I have a computer Graphics window
02:05 - a canvas in a browser or some other kind
02:07 - of Graphics window um what I need to
02:10 - have are two
02:12 - paddles I need a left
02:14 - paddle and a right paddle and then I
02:18 - also need to have a
02:21 - puck the paddles move up or down based
02:25 - on keyboard input so maybe like we'll do
02:27 - I'm look over at a keyboard like you
02:30 - know A and Z and K and M or something uh
02:33 - you know whatever so it could be played
02:36 - on One keyboard I mean obviously one of
02:37 - the reasons I'm doing this is later I
02:39 - might make a video to look at some
02:40 - different um artificial intelligence
02:43 - algorithms that might allow us to like
02:45 - see if we can have the computer play one
02:47 - of the padds but that that's it's an
02:49 - aide um so I need the puck and the the
02:51 - puck needs to have an X and A Y and it
02:54 - also needs uh an X I'll call it X speed
02:58 - and a y-p speed because it needs to
03:00 - figure out which way it's going I need
03:03 - to have some type of collision detection
03:06 - between the paddle and the puck and then
03:08 - I also need to figure out if the puck
03:11 - goes past either side there's a score so
03:15 - this this player gets you know plus one
03:18 - score if the puck goes past the opposite
03:20 - side it's like air hockey it's pwn okay
03:24 - are we ready to do this now here's the
03:25 - thing have you ever programmed before if
03:27 - not you might have a little trouble
03:29 - following this video but I'm going to
03:31 - try to keep this fairly beginner
03:32 - friendly I'm going to use a programming
03:34 - environment called processing you can
03:36 - learn more about processing in this
03:37 - video's description um and I'm going to
03:40 - use a concept called objectoriented
03:42 - programming meaning I'm going to think
03:43 - of the puck as an object and each paddle
03:46 - as an object and the puck is going to
03:48 - have data associated with it like its
03:49 - location and its speed where it's moving
03:52 - and there's going to be functions like
03:53 - does the puck hit the paddle so those
03:55 - are the things I'm going to add to the
03:57 - program I will also make a JavaScript
04:00 - version that you can run in the browser
04:01 - so you can look in this video's
04:02 - description for that code as well I'm
04:04 - trying to say all the stuff out now
04:06 - because I know I have to get started in
04:07 - a second what else am I forgetting I
04:09 - think I can just get going now okay I'm
04:11 - gonna walk over here that's where my
04:13 - computer
04:15 - is all right now I have this timer going
04:17 - up there it says 14 minutes oops I'm in
04:21 - the wrong program here we go this is
04:23 - processing uh it's got a setup in a draw
04:25 - function I haven't started yet the time
04:26 - don't look at the timer yet I'm going
04:27 - hit refresh it'll go back to 20 minutes
04:30 - I'm really I'm I'm I'm procrastinating
04:33 - I'm going to do this how long is this
04:34 - it's already like five minutes long
04:36 - probably let's just get started okay
04:38 - ready here we go one two
04:42 - three okay pong um all right uh oh no
04:45 - I'm panicking okay first let me just add
04:47 - a background I'm G make a background
04:50 - that is black um the puck is go I want
04:53 - the puck to be I'm just going to make it
04:54 - a circle uh because that'll be easier to
04:56 - deal with so let's just get started oh
04:59 - and let me save this save
05:01 - pong uh I'm going to add another tab
05:03 - here in processing and I'm going to call
05:05 - that Puck and uh the way object-oriented
05:08 - programming works is I create something
05:10 - called a class and a class is a template
05:13 - for making things so this is the puck
05:16 - template I need to make an actual Puck
05:18 - so the template is going to have an X
05:20 - and it'll start in the uh middle of the
05:24 - window and the uh uh the template the
05:27 - puck is also going to have a y and it
05:29 - will CH also in the middle of the window
05:31 - and it's going to have a function I'm
05:32 - going to call it
05:34 - show and I'm going to in that function
05:36 - I'm going to say Phill 255
05:40 - ellipse XY and I'm just going to give it
05:43 - some arbitrary size 24 uh 24 so the liip
05:47 - function draws a circle with and how's
05:49 - the the font size is the font size okay
05:51 - um can you see it uh okay so let's now
05:54 - go and run this oh well now let's make a
05:56 - puck so now I can say Puck puck
06:01 - Puck equals new Puck and puck. show is
06:07 - that the right thing is it called a puck
06:08 - I don't know what it's
06:10 - called Uh here we go Tada am I done yet
06:15 - no so now we need that thing to move so
06:18 - for it to move I'm G to give it um I'm
06:21 - gonna uh I I probably shouldn't no I'm
06:23 - gon to say xped equals I'm going to make
06:25 - this a random number so I can use the
06:27 - random function I'm say random3
06:30 - 3 there's a lot of things about this
06:32 - that I should um be using vectors for
06:35 - and yped
06:37 - is33 here's the
06:40 - problem I don't actually want to do this
06:42 - oh it's so sad but let's just leave it
06:44 - this way I I can improve this
06:47 - later I I don't like this because I
06:49 - could get a puck that's not moving at
06:50 - all um let's just give it a fixed let's
06:53 - just give it a fixed Speed 3 1 it's
06:55 - always going to move the same way I I'll
06:57 - fix that later void uh update I'll call
07:00 - this I'm gonna write a function called
07:01 - update and in update I
07:05 - say I say x equals X Plus X
07:09 - speed y = y + y speed okay so now uh if
07:15 - I run this it doesn't do anything but if
07:18 - I say
07:19 - puck. update now I'm calling that
07:22 - function draw by the way is a thing that
07:24 - happens over and over again update show
07:25 - update show background update show
07:27 - background update show background update
07:28 - show I should not be singing it takes up
07:31 - to inch time there we go there there we
07:33 - go so now oh we're going to need some
07:35 - paddles I I'm strangely want to do
07:38 - something that I wouldn't normally do
07:41 - but before I do the paddles let's
07:43 - Implement some other parts of the game
07:44 - so let's let's write a function that's
07:46 - called uh edges so really we have to
07:49 - worry what happens oh what happens if
07:53 - the puck hits the top or the bottom
07:55 - right so if Y is less than zero
08:00 - then I need to reverse the Y speed so YP
08:03 - * equals -1 and actually I'm going to do
08:06 - this if Y is less than zero and this by
08:08 - the way is a symbol in programming for
08:10 - or in Java programming or processing
08:12 - also JavaScript two of these pipe
08:14 - symbols or if it's less than zero
08:16 - meaning it's above the window or greater
08:19 - than height meaning it's below the
08:20 - window reverse the speed and let's be
08:22 - sure that this is doing that by uh kind
08:25 - of giving it a very kind of initial oops
08:27 - oops wrong thing wrong wrong wrong let's
08:29 - just test this by saying giving it a
08:31 - very slow X but a fast
08:34 - y that didn't work oh I have to call
08:38 - it so uh I have to say uh puck. edges so
08:42 - I can write a function that gives it
08:44 - some logic to follow but if I don't call
08:45 - the function it doesn't do anything so
08:47 - okay so that's working it's going to
08:48 - bounce off the top of the bottom it it
08:51 - does that in pong right I think it does
08:53 - okay great so now let's uh let me go
08:56 - back to something more reasonable so now
08:58 - I also want to check though
09:01 - if x ever gets
09:05 - past the window then what I want to do
09:07 - is I want to say I want to um I want to
09:09 - like reset the puck if x is greater than
09:13 - with or X is less than zero I want to
09:16 - reset the puck now here's the thing I
09:18 - need to track both of those separately
09:21 - because different players are going to
09:23 - win but let's so let's just make that
09:26 - two separate if statements for later but
09:28 - let's just call reset right now and
09:31 - reset so I'm reset is going to be a
09:33 - function that I'm putting inside this
09:35 - object and what does it do it sets the
09:38 - puck back to the center and you know
09:40 - what I'm going to do I'm not even going
09:41 - to change its ype or xpeed I'm just
09:44 - going to let it be the same which is pro
09:46 - I should probably so now we can see
09:48 - here's what it's doing if it gets past
09:50 - the right hand side okay so that's
09:53 - actually a problem because it's always
09:53 - going to go the same way but Okay so
09:55 - we've got the puck moving yeah I didn't
09:58 - uh some
09:59 - James in the chat writes it didn't take
10:01 - into account the ellipse size so it's
10:03 - going to clip on the edges but not a big
10:04 - deal this is a good point I don't know
10:06 - if I have time for these details but let
10:08 - me see if I can uh I'll add that in
10:10 - later perhaps or that's something that
10:11 - somebody watching could add okay we need
10:12 - some paddles so what I'm going to do now
10:15 - is I'm going to make an object called
10:17 - paddle and again I need a template for
10:20 - the paddle and the paddle is going to
10:23 - get it needs to have an X location and a
10:26 - y location and a let's think of a height
10:29 - he um and you know what let's
10:32 - [Music]
10:34 - use and a width this is a little tricky
10:38 - I kind of want the paddle to be maybe
10:41 - using the reference part well let let's
10:43 - just we're going to do what we're going
10:45 - to do okay X and Y why is
10:48 - my okay stop everything's buzzing okay I
10:53 - turn off notifications before you start
10:54 - these things okay um so uh the other
10:57 - thing I'm going to do is when I make the
10:59 - paddle I want to pass in a uh I'm going
11:03 - to call this like I'm going to say x
11:05 - underscore this is a little bit weird if
11:06 - you haven't done object-oriented
11:08 - programming with constr this is what's
11:10 - known as a Constructor function so why
11:12 - so first of all why is always going to
11:14 - be um oh yeah let's have okay so here's
11:18 - the thing I I need a minute can I take a
11:20 - minute there's no way to pause this
11:22 - timer but I don't get to pause there's
11:24 - lots of different ways you can think
11:25 - about a
11:27 - rectangle you can think about a rectang
11:29 - angle as from this point uh with a width
11:32 - and a height so this is the XY with a
11:35 - width and a height you can think about
11:36 - it from here with a width and a height
11:39 - you can even think about it based on
11:40 - just these two corners I think I want to
11:42 - think about the rectangle strangely
11:44 - enough I don't really love this because
11:46 - it causes some other problems but I
11:48 - think it's just going to be easier for
11:49 - me to think of the rectangle from the
11:51 - center point um so I'm going to do
11:55 - that so I'm back so uh Y is always going
11:58 - to be height divided two width of the
12:01 - paddle is going to be like 10 pixels and
12:03 - the Height's going to be 50 pixels I'll
12:04 - probably have to change those later so
12:06 - um and then I want a function called
12:09 - show and I need to say rect mode
12:15 - Center and I'm going to say fill 255 for
12:18 - this as well and I'm going to say rect X
12:22 - Y with
12:24 - height and it's okay now where its X is
12:27 - is kind of a tricky thing
12:29 - um and you know what I'm going to do um
12:33 - we're going to leave this we're there's
12:35 - there's a better way to do this but I'm
12:36 - not going to worry about it right
12:38 - now uh okay so um so let's now in here
12:43 - let's make paddle I'm going to call it
12:45 - left and paddle right so I want to be
12:47 - able to use that same template to make
12:50 - two objects oh the power of
12:51 - object-oriented programming uh so I'm
12:53 - going to say left equals new paddle at
12:56 - zero and this is going to be wrong and
13:00 - right equals new paddle at width and
13:04 - then I want to say left.
13:08 - show wr. show okay let's run this and
13:11 - see what I get ah well it's not so bad
13:13 - there are the paddles they're really
13:14 - small paddles so a couple things one is
13:17 - notice how because the center of the
13:19 - rectangle is right on zero actually half
13:22 - the rectangle is off the off the window
13:24 - which is fine but just for you know just
13:27 - to keep things I probably want to say
13:28 - it's actual location is X wherever it
13:30 - was given its initial plus plus its
13:33 - width divided by two or shoot or minus
13:37 - depending on whether it's the left or
13:38 - the right okay better idea we're going
13:41 - to use an argument here Boolean left so
13:45 - is it the left or the right paddle so
13:46 - I'm going to make one Puck true one
13:50 - paddle true one paddle false I'm sure
13:51 - everybody in the chat is thinking of a
13:54 - lot of things that I'm doing wrong I
13:56 - can't look at the chat the I don't know
13:59 - post a lot of if there's something
14:01 - really major I don't know I don't know
14:02 - how to get my attention um okay so what
14:05 - I'm going to do is I'm going to say if
14:08 - left x = w / 2 else x equals with minus
14:14 - W divided by two so I'm basically going
14:17 - to take a Boolean variable in because
14:19 - there's only two kinds of
14:21 - paddles uh and now if I run this there
14:25 - we go and I should make these paddles
14:27 - taller let's make them 100 pixels
14:30 - and there we go so now we've got we're
14:32 - pretty good we've got
14:35 - Pawn oh someone's saying there's usually
14:37 - a gap between the paddles and the edges
14:39 - okay let's add that plus uh float Gap oh
14:45 - that's going to make it so complicated
14:47 - that's fine though actually it won't
14:48 - really um x = w / 2 + 10 minus 10 let's
14:53 - just give it a little or actually why
14:55 - don't I just use the full width
15:00 - um and that'll the Gap is however wide
15:02 - the uh the P paddles are okay there we
15:05 - go P oh I got nine minutes left okay ah
15:08 - so here's the thing I need first of all
15:10 - I need to move the paddles oi oi oi oi
15:13 - attention shift Master me false alarm
15:16 - got it uh okay so um what I need to do
15:20 - is move the paddles let's write a
15:22 - function
15:23 - called
15:25 - move and it's going to move by some
15:29 - number of
15:31 - steps so I'm going to say y + equal that
15:35 - number of steps and then I'm also going
15:37 - to say y equals constrain so I don't
15:40 - want to let the user move the paddle
15:42 - above off the window constraint is a
15:44 - function that says take this value and
15:46 - constrain it between zero and height
15:48 - only I don't want to constrain it
15:50 - between zero and height I want to
15:51 - constrain it between because X can't
15:54 - actually go all the way up I want it to
15:56 - stop because sorry Y is the middle of
15:58 - the battle between constrain between uh
16:01 - I want to draw a diagram but I'm worried
16:02 - about the time I should never use these
16:04 - timer things uh height it's height
16:07 - divided by two and height minus H
16:09 - divided by two so this would now keep it
16:11 - I'm G to I'm going to draw a diagram
16:13 - forget the time right because if if this
16:15 - is The Edge right I this is the this is
16:19 - the Y where it can't go up any further
16:21 - and this amount is the the paddle height
16:23 - divided by two so that's sort of an
16:25 - important piece there um now I have some
16:27 - errors here oh I need a semi
16:29 - colon so now how do I move how do I move
16:32 - the paddle okay well in processing in
16:35 - addition to setup starting the program
16:37 - and draw running the program I can have
16:39 - a key pressed function and in the key
16:41 - pressed function I get an event every
16:43 - time a key is pressed this code is
16:45 - executed am I standing in front of it
16:47 - let's move this over um so what I want
16:50 - to do is I'm just going to say if key
16:52 - equals
16:54 - a I'm going to take the left paddle and
16:57 - what do I call it move uh negative one
16:59 - that's up else if key equals z Oh I
17:05 - realize I'm gonna have a problem here
17:07 - left move
17:09 - one I'm uh and now I'm going to do the
17:12 - same thing for uh I don't
17:15 - know J and M this terrible interaction
17:20 - ideas but let's and and this should be
17:23 - the right
17:24 - one so now let's run
17:27 - this oh look how it moves so let's
17:30 - change this let's have it move 10 steps
17:33 - every time I press and I should probably
17:35 - make that a
17:39 - variable now I can't hold it down oh I'm
17:41 - really gonna have to fix this boy that's
17:43 - gonna I'm GNA need more time I need more
17:45 - time I got to fix this now actually it's
17:47 - kind of unplayable the issue is I can't
17:49 - hold down the key so this is a problem
17:52 - what I actually need to do is whenever I
17:55 - press the key I need it to start moving
17:57 - and not stop moving until I release the
18:00 - key so uh so what I'm going to do this
18:03 - is a little tricky but I'm going to take
18:05 - key released in in key release basically
18:08 - I want to say left stop moving or
18:11 - actually I can do move zero because I
18:15 - have that function WR move zero and the
18:18 - difference is instead of uh actually in
18:21 - oh this actually won't be so hard so
18:24 - right what what this does right now in
18:25 - the move function if I go to the paddles
18:28 - move function
18:30 - uh it's actually moving it in the
18:32 - function but what I want to do is I want
18:34 - it to have a uh I'll just call it like a
18:38 - mo I don't know what to call this I
18:39 - shouldn't I don't have time to think
18:40 - about it it is I'll just call it uh uh y
18:45 - change y change which is zero and I'll
18:50 - also have an update function which does
18:55 - this so the update function always
18:58 - changes it by y change and the move
19:01 - function just sets y change to a certain
19:05 - value so in other words I'm going to
19:11 - always uh left.
19:14 - update right do saving the hardest part
19:17 - for last left. update right. update so
19:20 - it's always moving it's just often
19:21 - moving by zero it's always moving by
19:24 - zero unless I press a key it sets it to
19:26 - move by a certain amount and stops once
19:28 - I release the
19:29 - key and now I'm going to do
19:32 - this so now this is quite a bit more
19:34 - elegant to play
19:36 - with there's issues with I can't press
19:39 - more than one key at a time but uh those
19:42 - things can be ironed out later okay here
19:45 - we go now um did Pong I see a question
19:49 - did Pong repel in different angles
19:51 - depending on where it hit the paddle in
19:53 - the original o the paddle was broken up
19:55 - into eight slices that make the ball
19:57 - bounce at different angles depending on
19:59 - which segment the ball hits why why make
20:01 - this so hard this is definitely going to
20:04 - take longer than that amount of time but
20:06 - let's first at least get the let me
20:08 - first
20:10 - um let me make this thing move a little
20:12 - bit faster
20:16 - here uh okay so and I why is it so slow
20:21 - okay okay great so first thing that I
20:23 - want to do is I want to check to see if
20:27 - the puck hits the patter this we can do
20:30 - and because I'm using object-oriented
20:32 - programming I can just have a Little
20:34 - Dream fantasy state of how I might write
20:37 - this right if Puck hits left or if Puck
20:44 - hits
20:46 - right
20:48 - Puck
20:50 - reverse reverse so and actually what I
20:53 - want to do is this is kind of like the
20:55 - idea but you know what I'm going to do
20:57 - all this can happen just in the puck
20:59 - itself I can just say Puck check left oh
21:03 - check paddle
21:05 - left Puck check paddle right okay so
21:10 - this is what I want to do I want you can
21:12 - see here it's it's got this red line it
21:13 - has no idea what check paddle is but the
21:15 - idea is that I want to write a function
21:17 - called check paddle that's part of the
21:19 - puck object that receives a paddle and
21:21 - checks if it's hitting
21:22 - it and I have to do it a little do I
21:26 - have to do it differently with the left
21:27 - and the right
21:29 - kind of uh yeah I shouldn't use reverse
21:31 - because that's a reserved word okay um
21:35 - okay so let's go into the puck I should
21:37 - have thought this through in advance a
21:40 - void check paddle paddle P by the way
21:44 - you'll notice here I didn't write a
21:46 - Constructor function technically don't
21:48 - have to unless you're have some type of
21:51 - logic that you need to execute in the
21:52 - Constructor function all I had with
21:53 - these set variables so I don't need one
21:55 - although you know proper object-oriented
21:57 - programming would have me write just
21:59 - this blank function that would get
22:00 - called when I say new Puck okay check
22:03 - paddle check paddle check paddle okay
22:07 - let's just pretend all I'm thinking
22:10 - about is the right paddle uh
22:13 - if x is greater
22:17 - than paddle.
22:22 - x uh and Y is less than paddle doy plus
22:31 - paddle. oh boy I'm just going to do it
22:33 - paddle. y I don't love this paddle. y
22:36 - plus paddle oh paddle. y plus paddle. h
22:39 - divided
22:40 - two and Y is greater than paddle do
22:46 - uh uh y minus paddle. h/ two I hate this
22:52 - long awkward if statement there's so
22:53 - many ways I could probably make this
22:55 - nicer but this look at this look at this
22:58 - horrible bug but let's let's let's
23:01 - use the fact that there are there's one
23:03 - minute left to explain what I'm thinking
23:06 - about here it's you're going to hear a
23:08 - ding sound actually you won't if it goes
23:10 - off while I'm over at the Whiteboard so
23:12 - I have to
23:15 - um okay I'm GNA give myself some bonus
23:17 - minutes so in other words I want to know
23:20 - if the X has moved
23:24 - past paddles X but I want to know this
23:27 - is paddles y y if the Y is in between
23:30 - paddle y minus h / 2 and paddle y plus h
23:35 - / 2 um so that is that's that's the
23:39 - section that I want to look at I I kind
23:42 - of want to I want to refactor this so
23:44 - badly to make it nicer but this is kind
23:45 - of will work how am I on time oh a
23:47 - minute left still so if this is true I
23:50 - want the puck
23:53 - xeed to change by to multiply Itself by
23:57 - negative one is is this and this is
23:59 - going to work for the right
24:01 - paddle so let me just only right now
24:04 - check the right
24:06 - paddle let's just see oh quick move down
24:09 - oh no move down no hey there we go ah
24:12 - okay this this really looks so wrong
24:14 - right
24:16 - um right because you can see here
24:19 - ah I
24:22 - really first of all it goes It goes way
24:24 - past so I really have to um I really
24:27 - have to
24:30 - uh I really have to I'm sorry I'm Los I
24:33 - really have to deal with the fact that
24:35 - the the puck has a size I'm just looking
24:37 - at the time how much more time should I
24:38 - give myself how about 10 more
24:42 - minutes oh my God that was really
24:45 - loud uh let's give myself 10 more
24:47 - minutes by the way if you want to know
24:48 - how to program a timer in JavaScript I
24:50 - previously did a coding challenge where
24:52 - I made that exact timer okay 10 more
24:53 - minutes let's see if we can do that okay
24:55 - so we've really got to deal with the
24:56 - fact that the puck
24:58 - the puck needs an R so its size I like
25:02 - the size of it as reason why I was
25:03 - drawing it at 24 so the radius is
25:05 - actually
25:06 - 12 and you know what I kind of want I
25:09 - want the paddles to variables to be half
25:12 - height half width it's going to be much
25:14 - better that way um but we'll worry about
25:17 - that later R * 2 R * 2 so there's a
25:21 - couple things here one thing that I want
25:23 - is now in the paddle in the puck to
25:28 - check
25:28 - If
25:30 - X plus r right because if its right Edge
25:36 - is has is past the paddle X and not just
25:40 - past the paddle X but past the paddle
25:42 - left Edge which is minus paddle W
25:46 - divided divide by two oh my kingdom for
25:49 - some clean not so horrible long if
25:52 - statement but let's just look at this
25:53 - and see if this looks
25:55 - nicer um which key do I move it down
25:57 - there you go who did
26:00 - that that didn't look exactly
26:03 - right did it I can't tell it's moving so
26:09 - fast hold
26:12 - on oh that's perfect okay I saw that's
26:14 - perfect okay so that's great so that
26:16 - works for the right paddle here's the
26:19 - thing I think what I need to the problem
26:22 - is there's a little bit of an issue
26:26 - which is that
26:28 - I want to check if the x is greater than
26:32 - the X for this paddle but I want to
26:35 - check if it's less than for this paddle
26:40 - so I think what I need is to indicate
26:43 - because you know I could do some more
26:45 - sophisticated thing where it could
26:46 - bounce off either side but it doesn't do
26:48 - that in pong so I might want to pass
26:50 - that function maybe a plus one or a
26:53 - negative one depending on which side of
26:55 - the paddle I'm coming from I could also
26:58 - Al just write two different functions I
26:59 - don't know what's best but let's try my
27:01 - goofy
27:02 - way of giving this a number like
27:07 - Direction so this is like the direction
27:09 - it's coming from so in other words I'm
27:11 - going to check right it's coming in the
27:14 - positive
27:16 - direction I'm going to check paddle left
27:20 - it's coming in the negative
27:23 - Direction so in that
27:25 - case um
27:29 - uh let's look can I can I do something
27:31 - like
27:33 - this so I'm
27:35 - gonna I want to like format this in a
27:38 - way where I can kind of see
27:41 - it like these are the these are the
27:43 - things I'm checking if x + r is greater
27:47 - than so uh and this is well
27:52 - Direction it this is minus so I should
27:54 - really say Plus
27:58 - Direction times right because I want to
28:02 - check on this side the x minus but on
28:06 - the other side I want to check the X
28:08 - Plus so and I this needs to also be this
28:12 - needs to
28:13 - be plus Direction times R right because
28:18 - R is am I moving to the right of it or
28:20 - to the left whether it's going and then
28:23 - this has to become less than now can I
28:28 - how can I turn a less than to a greater
28:32 - than with oh I could just use the puck
28:35 - speed if it's going to the right or the
28:38 - left that's a good point um um how can I
28:42 - change
28:43 - this uh so here's the thing let's just
28:47 - do this ridiculous
28:49 - way
28:53 - if so first all right let's just let's
28:55 - break up this if statement I don't like
28:57 - what I'm doing here
28:59 - if let's just check these things first
29:01 - let's just check if the Y is in
29:04 - between so if the Y is in between which
29:06 - is just this if
29:09 - statement then we can move
29:11 - on if Direction equals ne1 then
29:19 - check uh the x value uh if it's less
29:24 - than and uh I can actually just do this
29:29 - um because I'm going to be lazy make
29:31 - right I can check this and I can put
29:34 - this as an and if direction is negative
29:38 - 1 and so I actually don't need this
29:40 - direction I don't need this uh Direction
29:43 - because I can use the X speeed okay I
29:45 - got it I got it I got it we're going to
29:46 - take this out and we're going to say if
29:49 - x speeed is greater than is less than
29:53 - zero that's the negative One Direction
29:56 - then I'm checking it against the right
29:58 - edge of that
30:00 - paddle and if that's the case xped *
30:04 - equals
30:06 - -1 else
30:09 - if uh if x speed is less than
30:14 - zero and and now I need to just do the
30:16 - opposite thing so if it's moving to the
30:18 - right actually by definition it's
30:20 - already is moving to the right else if
30:22 - oh camera went off time out this will
30:24 - get edited out actually you know it
30:26 - won't camera went off in because the
30:28 - timer still going um x + r is greater
30:33 - than p.x minus P.W / 2 then also and I'm
30:37 - sure I could join these with an
30:39 - or oh boy I made this so convoluted and
30:42 - complicated but now let's think about
30:44 - this this is very very hard to read this
30:46 - is not so friendly but this is what
30:48 - we're doing first I just want to know is
30:50 - the paddle y position between the top
30:52 - and the bottom then is it on the right
30:55 - side of the screen is it moving to the
30:56 - right or is it moving to the left it's
30:57 - moving the right check if it's gone past
30:59 - that paddle if it's moving to the left
31:00 - check if it's gone past that paddle
31:02 - let's see if this
31:03 - works uh oh and I don't need this
31:05 - direction thing anymore that was a
31:07 - digression that seemed interesting but
31:09 - unnecessary uh and now uh oh boy oh look
31:14 - at this crazy crazy Puck crazy pong whoa
31:18 - strange issues uh it's just a flag with
31:21 - negative 1 or plus one and multiply uh
31:25 - people are people that's probably a a
31:28 - very good
31:29 - idea but what did I do wrong if x speed
31:32 - is less than zero can I there should be
31:35 - like a pause here for debugging um okay
31:38 - let me think about this if x I need I
31:41 - need the problem is I need to sketch
31:43 - this out while I'm looking at the code
31:45 - um if so let's let's oh this camera went
31:49 - off too sorry
31:52 - everybody coding challenge disaster okay
31:55 - wait
32:00 - hold on okay
32:07 - um let me check this out right so X
32:12 - speed is positive the Puck's X should be
32:16 - greater
32:19 - than the paddle x minus oh the Puck's X
32:24 - plus r should be greater than the
32:26 - paddles X minus its width divided two
32:31 - right this are the points we want to
32:36 - check if it's greater plus X Puck x
32:40 - minus Puck width divided by two multiply
32:42 - by otherwise if x speed is less than
32:46 - zero that seems
32:50 - right um but really here's the thing why
32:53 - have the
32:56 - same the thing thing
32:59 - is what did I do
33:05 - wrong x * equals negative 1 what did I
33:08 - do wrong let's run this again oh whoops
33:11 - I refreshed the
33:12 - timer that was totally by
33:16 - accident oh it's getting it's getting
33:19 - stuck so first of all
33:23 - um I'm panicking I'm panicking everybody
33:27 - it's getting stuck why is it getting
33:29 - stuck uh xus R let's let's just look at
33:33 - um let's just look
33:35 - at first of all let's treat these
33:43 - separately uh let's treat these
33:46 - separately so let's just look at um
33:49 - let's just look at the
33:50 - right let's just check the right paddle
33:53 - first uh what did I get wrong
33:56 - here I need another oh I need another
33:59 - close bracket this is me debugging so
34:01 - much for my
34:03 - timer okay so why is it
34:06 - stopping um because it changes oh it
34:08 - doesn't it's not updating it's it's not
34:11 - moving off so it's still there uh
34:14 - because where do I check then I show
34:16 - then I
34:18 - update it should move though because
34:21 - it's checking it should should get a
34:23 - chance to move I mean
34:29 - um uh so you know if we just I guess
34:33 - what I could say here is x equals P do
34:38 - uh X Plus P do I could just shove it I
34:44 - could shove it off to the um wait wait
34:49 - wait oh I'm on the wrong side here this
34:52 - is the side that I want what I could do
34:54 - is if it's moved past it I could I think
34:57 - this is the same as the gravity bouncing
34:59 - ball problem I could just Shuffle it
35:01 - right to its proper spot which is
35:04 - p.x minus P do W / 2 minus
35:13 - r
35:17 - oh uh
35:22 - uh oh it's checking oh this is like a
35:25 - terrible thing that I'm doing
35:29 - no wonder this is awful this is like an
35:32 - awful thing that I've
35:33 - done because it's just it's this is
35:36 - still like the right paddle so it's
35:39 - still checking this it I can't I can't
35:42 - actually do it this way with its xeed
35:45 - because I actually only wanted to check
35:49 - the paddle based on its direction oh boy
35:52 - can I have a can I have a mulligan here
35:55 - can we edit edit this part out I I said
35:57 - I wasn't going to do it so oh this isn't
35:59 - going to be that short 12 minute I'll do
36:01 - another version of this in JavaScript
36:03 - where I won't make these mistakes okay
36:05 - let's be I'm going to be really method
36:06 - I'm GNA unfortunately have to do a
36:08 - terrible thing that I wanted to avoid
36:10 - check paddle
36:13 - left and that's just going to
36:16 - be uh checking
36:20 - uh this is the right
36:23 - right no this is the left check paddle
36:25 - left so forget about this XP
36:32 - thing I have to check all these things I
36:34 - ran out of steam here and this is going
36:39 - to make this much easier I was just
36:40 - trying to avoid I was trying to reuse
36:42 - the same
36:43 - function and I think I should just
36:45 - refactor this later after I think about
36:46 - it check paddle right and then now we
36:49 - need to say if it is still within the
36:51 - paddle but the x is different uh and the
36:55 - X uh X is X Plus R is greater than this
36:59 - minus so now we should be good so now
37:02 - what I just need to do is I just need to
37:04 - say check paddle
37:05 - right and check paddle left I just need
37:08 - a slightly different algorithm for each
37:09 - paddle and two different functions
37:11 - that'll do it okay there we
37:15 - go
37:17 - now the other thing that people were
37:19 - saying is the angle should change based
37:21 - on where it hits
37:24 - it let's implement the score first I've
37:27 - got five minutes somebody tell what's so
37:29 - okay so the angle should change so this
37:31 - this has to do with angle so actually no
37:33 - no never mind I'm going to do something
37:35 - here so here's the thing remember when I
37:37 - said I wasn't too happy about the way I
37:39 - created this initial speed well I don't
37:42 - actually want to create a
37:45 - speed I need the Whiteboard here
37:48 - everything you ever want to do is more
37:51 - complicated than you
37:52 - think I don't actually if I pick a
37:55 - random xped
37:57 - between like5 and five and a random Ys
38:01 - speed between say5 and five I could
38:04 - potentially pick an X speed of zero and
38:07 - a y speed of zero that's not what I want
38:09 - what I actually want is to pick a random
38:12 - speed that's always maybe going five but
38:16 - is just in a random Direction so what I
38:18 - really want is a random angle between 0
38:21 - and 360 or between 0 and 2 pi and I have
38:24 - this other video It's called polar coord
38:27 - you can go look up that right now
38:29 - because if I pick a random angle I can
38:31 - then say x speed equals uh whatever
38:35 - speed I want like five time cosine of
38:38 - that angle and y speed is five time sign
38:40 - of that angle so this has to do with a a
38:42 - right
38:44 - triangle uh and S and cosine of that
38:47 - angle um and I I go through the math of
38:49 - that in another
38:50 - video okay so now what I'm going to do
38:53 - here is I'm actually going to take this
38:55 - out of here I'm going to do this in the
38:56 - Constructor
38:58 - because what I want to do is float angle
39:01 - equals a random angle between 0 and 2
39:05 - pi and I want to say x speed equals
39:09 - cosine of that angle and I'm just times
39:12 - five and yped equals 5
39:16 - Time s of that angle so now when we run
39:19 - this we should see the puck always going
39:22 - in a different always going at the same
39:24 - speed but in a different direction
39:27 - so the reason why this is important is
39:29 - because this angle thing I think is
39:31 - actually technically a variable that I'm
39:33 - going to want to keep track of oh
39:35 - vectors I should be using vectors that's
39:38 - okay we're gonna be fine
39:42 - um
39:44 - okay uh people were taking bets on how
39:47 - long this was going to take me and I I
39:48 - think somebody is about to win um okay
39:51 - so uh now uh what can I do here so now
39:56 - this should also by the way this
39:59 - algorithm should go in that reset
40:02 - function which sets it back to the
40:04 - middle and then by the way why not in
40:06 - the Constructor just call
40:09 - reset now I wish I could keep track of
40:12 - the angle and then I could
40:15 - just
40:18 - okay let's run
40:22 - this uh I'm playing it I'm playing it
40:25 - okay come on come on come on come on
40:27 - this is pretty
40:29 - good
40:31 - hey kind of made pong here oops
40:35 - whoa that's bad that's a bug look at
40:40 - that okay so I got to deal with there's
40:42 - so many
40:43 - Bucks I should have pretend I should
40:45 - have not made that happen um okay so
40:49 - here we go let's at least add the score
40:51 - let's do something
40:52 - satisfying add score and sound okay so
40:56 - I'm GNA I'm going to say uh left
40:59 - score and right
41:01 - score and I'm going to put those on the
41:04 - screen I'm going to say Phil 255 text
41:07 - left score uh um 10 I I don't know I'm
41:13 - just going to pick some location and
41:15 - text uh right
41:18 - score uh and I should uh you know with
41:21 - minus 10 something like
41:23 - that uh let's try that so uh so let's
41:26 - see if get the
41:31 - score whoops so you can see the score is
41:34 - there I should make the font size a lot
41:38 - bigger and then maybe make this uh in a
41:42 - different spot okay you can see the
41:44 - score is there yay okay now let's start
41:47 - adding some points where do the points
41:49 - increase uh we're in the puck um the
41:54 - edges issue if it goes off to the r
41:57 - right this is uh right left score gets a
42:01 - point and I don't love the fact that I'm
42:03 - using this Global variable here in the
42:05 - puck object I probably should return and
42:07 - the scores really s bit but just for the
42:10 - sake of quickness here um I'm going to
42:12 - say WR score plus plus here so now let's
42:15 - see if we can get some scoring going one
42:21 - one two: one two to two 3 to2 Okay so
42:25 - we've got score so in a lot of ways in
42:27 - pretty good shape let's add a sound uh
42:29 - do I even have the Sound Library import
42:33 - uh sound okay so what did I just do by
42:35 - the way under sketch import Library I
42:39 - can go to import Library import sound if
42:41 - you don't have the Sound Library you're
42:43 - have to go to add Library it'll bring up
42:44 - this menu search for sound hit install
42:47 - then you'll have the Sound Library so I
42:48 - have the Sound Library I'm going to say
42:51 - uh P sound I think is called Ding and
42:56 - then uh
42:58 - P sound equals new P Sound ding. MP3 may
43:03 - have to say this
43:06 - this ding.
43:09 - MP3 the timer went off oh my God that's
43:13 - scared to me can I have 10 more minutes
43:16 - please 10 more minutes there we go I
43:18 - knew this was useless uh it's not P
43:21 - sound apparently let's look at the uh
43:24 - why am I adding sound this is really
43:25 - oops this is really just taking up a lot
43:27 - of unnecessary
43:29 - time processing
43:32 - sound uh sound libraries uh I want to
43:35 - look at sound file I don't know why I
43:37 - said P sound sound file file I just
43:41 - imagined it was called P sound sound
43:46 - file and then um and let's just call
43:50 - Ding and ding ding equals uh sound file
43:55 - and then let's have it ding should we
43:57 - have a ding every time someone gets a
43:59 - point ding.
44:01 - playay ding. playay okay let's run
44:08 - this that's so
44:11 - loud is it loud for you
44:14 - guys oh come on this is really this is
44:17 - like that thing in air hockey where it
44:19 - gets to the middle and you have to walk
44:20 - around and pick it up and put it back
44:23 - really just why I'm testing the sound
44:25 - and now and now you're going to bounce
44:27 - the punk okay we can we can restart
44:32 - it can you guys hear that
44:38 - sound volume is fine okay okay so we've
44:42 - kind of got pong here's the
44:46 - thing
44:48 - I oh my God stop stop okay there's a
44:52 - couple things missing here a lot one is
44:54 - there's a bug that the the the ball get
44:57 - stuck behind the paddle so we should
44:59 - really deal with
45:00 - that number two is um oh I think I know
45:05 - how to deal with that actually that's
45:06 - going to be easy one let's fix that
45:08 - let's fix that because I'm realizing
45:10 - that what I'm checking for really if it
45:12 - just gets past the middle of the paddle
45:15 - right it's so I think that's really the
45:17 - issue the edges isn't really um um it's
45:22 - really like the width
45:25 - minus what is it called right paddle
45:28 - right minus right divide minus right dot
45:36 - umw right and then the this
45:40 - is uh left. W so I really just want to
45:44 - check not if the ball gets all the way
45:46 - to the edge but just a little bit past
45:48 - the paddle although is that going to
45:50 - make it disappear in a weird way maybe
45:53 - well that's going to so maybe it's okay
45:54 - if it gets all the way to the edge oh so
45:58 - maybe it's more maybe it's not about
46:00 - that maybe it's actually so I don't like
46:03 - that because we want it to go and it
46:04 - really should be if x should get all the
46:05 - way off the edge If X plus if x minus r
46:10 - is off the edge and if X plus
46:13 - r is less than zero that means it's all
46:16 - the way off the edge what I really
46:17 - should fix is here where I'm
46:20 - checking the
46:22 - um checking this monstrosity here
46:26 - because
46:28 - what
46:29 - if
46:32 - um it should only actually reverse its
46:36 - speed
46:38 - if as long as also I should also just
46:41 - double check as long as the X is not
46:44 - greater than maybe the other side of the
46:48 - paddle so not greater than
46:51 - p.x plus W /
46:55 - 2 so as long as it
46:58 - is uh right
47:01 - because if it's already gotten so it's
47:05 - it might get past the paddle further
47:07 - away so as long as X is actually less
47:10 - than it has to be greater that has to be
47:12 - like really
47:14 - within the um within that within the
47:16 - paddles bounds
47:20 - so I saw starting angle yes yes the
47:23 - starting angle should be constrained
47:25 - okay okay good point X is less than um
47:30 - um X is less
47:33 - than the um paddles X just just say the
47:38 - paddles X like it should be between the
47:40 - edge and its
47:41 - Center so this is like a quick extra
47:44 - double check to make sure it's not kind
47:46 - of behind the paddle and this is another
47:50 - quick double check to make sure as long
47:53 - as it is greater than uh paddle. X
47:57 - okay so let's try this and now we should
48:01 - okay I'm going to constrain that angle
48:03 - in
48:05 - reset what we're going to do is we're
48:08 - going to constrain the angle
48:11 - between negative pi 45 degrees which is
48:15 - pi ID 4 and 45 degre which is pi ID
48:21 - 4 and so that will always give me
48:23 - something pretty much pointing to the
48:26 - right
48:28 - but um what if I want randomly to go to
48:30 - the left sometimes so I can
48:36 - say my chicken is ready My Tofu whatever
48:40 - tofu tofur is ready okay um my uh if uh
48:44 - my toast a toast that's what I was
48:46 - looking for um if x be this is
48:51 - horrible if you've made it hash ding
48:54 - ding ding ding ding if you made it to
48:56 - the end of this um if uh uh what was I
49:00 - doing oh yes if random 50% of the time
49:05 - let's have it go the other direction uh
49:08 - if uh random one is NE less than five
49:12 - let's have um let's have x speeed times
49:16 - equals negative 1 so I'm always picking
49:18 - an angle between 45 and 45 degrees in
49:21 - this direction but half the time it
49:22 - might go the other direction or I think
49:24 - I might have fixed everything
49:28 - oh it looks like it's off right it's
49:33 - not look at that so why what's wrong
49:35 - here well let's see if this side is
49:39 - right oh boy I think I have
49:42 - my can I please take a
49:46 - break I can't I will finish
49:49 - this I will finish this so why is that
49:51 - off it was working before let's look at
49:53 - this I wish I didn't have this horrible
49:54 - if statement I hate my horrible if
49:56 - statement
49:58 - okay stop
50:00 - dinging okay let's take this out for a
50:03 - second let's
50:06 - also just make the angle always
50:10 - zero uh just so I can test this did that
50:14 - mess something
50:17 - up
50:20 - no okay so something is woefully wrong
50:24 - and is it bouncing in the right part
50:26 - here
50:27 - it looks like it's a little bit off
50:30 - right
50:32 - yeah okay so let's see if we can figure
50:35 - this out what did I screw up paddle
50:38 - check paddle right let's check the
50:40 - paddle
50:47 - right okay if y okay the Y thing is
50:50 - right it's the x if x + r is greater
50:54 - than the paddles x minus p. W divided
50:58 - two that seems
51:01 - right I have an extra speed minus one
51:04 - where where where where where where
51:05 - where oh look at that oh no
51:08 - wonder that's G to screw stuff
51:14 - up okay I think it's working now does it
51:17 - just mean that it's visually like I feel
51:19 - like it should get a little closer oh no
51:21 - it's working oh it's just because it
51:23 - moves five pixels per frame so it's
51:25 - always it's you know
51:27 - it's sometimes not going to appear
51:28 - exactly but that's right okay now let's
51:30 - put this back in what did this
51:32 - do let's make sure it's also with uh
51:38 - within a certain
51:40 - range okay that's good it was working I
51:42 - had that extra thing there now let's
51:44 - give it some a random angle again uh a
51:48 - random angle where's where where did I
51:51 - do that in
51:53 - Puck let's take out angle equals zero
51:56 - okay now we're going to play it here we
51:58 - go
52:02 - oh so let's see if I can make that bug
52:06 - happen yeah okay that bug is gone it's
52:09 - not getting stuck behind it anymore so
52:10 - everything is actually done except for
52:13 - one big thing the angle that it moves
52:18 - the way that it changes should actually
52:20 - change according to
52:23 - um according to where it hits
52:27 - on where it hits on the paddle attention
52:31 - shift Meister okay that's a good way to
52:33 - catch my attention um
52:36 - okay oh no the timer's gonna go that's
52:39 - like the third time I refreshed it to 10
52:40 - minutes am I like 45 minutes into this
52:43 - now oh my God this is hilariously
52:44 - embarrassing um okay so I I should do
52:48 - this in multiple Parts but I'm just not
52:50 - I should just consider myself done but
52:52 - I'm not we're going to finish this out
52:57 - I need some of ginger tea here 48
53:00 - minutes at least finish it for an
53:06 - hour you do realize I'm doing this live
53:08 - on a live stream with other people
53:10 - watching with like lights on me standing
53:12 - up in a very stressful I'm wearing like
53:15 - a light up bow
53:18 - tie now now we're just getting
53:20 - ridiculous here with this timer okay all
53:23 - right oh I walked over here why did I
53:25 - walk over here so let's think about
53:32 - this we're going to call I think the
53:34 - title of this video should probably be
53:36 - pong in 60 minutes because I think it's
53:38 - going to be a 60-minute
53:40 - video okay here we go now here is the
53:47 - paddle and here is the puck coming at
53:50 - the paddle so what we're saying is if it
53:54 - hits in the center
53:57 - maybe it
53:59 - would reverse its X Direction precisely
54:03 - and not change the angle but if it hits
54:06 - closer to the side it would then project
54:10 - further
54:11 - down so we'd be rotating the angle by
54:14 - some amount the further down the paddle
54:17 - it gets is that correct and same thing
54:20 - if but what if it hits up
54:22 - here would that cause it to also rotate
54:25 - further down because it's just basic on
54:26 - the distance to the center or would that
54:28 - actually have it reflect further in
54:31 - which one is it somebody help me out I
54:33 - don't know how pong actually
54:37 - works like is it
54:41 - always somebody tell me can we can we
54:44 - pause this video for a minute I'm
54:46 - waiting for the chat
54:48 - uh uh thinking will waste time yes
54:52 - further in what is
54:54 - the further in what does that mean be
54:56 - more
54:57 - specific okay let's think of let me look
54:59 - in the code to where I need to do this
55:03 - um depending on the movement direction
55:06 - of the paddle middle third is straight
55:08 - on the paddle is like a circle and the
55:11 - angle reflect the angle from the
55:14 - center uh if hits on the very corner it
55:17 - should go in the opposite direction
55:18 - further at the
55:20 - top uh all right so if it hits further
55:23 - up angle goes up hits further down down
55:26 - angle goes
55:28 - down reduce the angle incoming angle
55:31 - doesn't matter top is reflect up top
55:34 - third Ricochet is up divide it into
55:36 - thirds uh
55:38 - okay here's the thing I'm trying to
55:40 - avoid actually using the
55:42 - angle um because then I going have to
55:45 - get into tangent and all that stuff and
55:47 - I should have just used vectors in the
55:48 - first place oh my God Adam
55:51 - Justin or Adam J Austin sorry in the
55:54 - chat just po posted a um just oh does it
55:58 - actually just give you where it hits it
56:00 - gives you a specific angle no matter
56:01 - what its direction is that's perfect how
56:03 - do I Google for
56:05 - that there's no angular reflection this
56:07 - makes it so easy um how how do how do
56:10 - Adam J Austin how do I Google that image
56:12 - how'd you find it uh
56:15 - whoops uh Puck angle
56:19 - Direction that's not pong paddle angle
56:24 - direction oh this makes it so easy
56:27 - easy uh where is there a picture where's
56:31 - that picture it came into the slack
56:34 - channel can someone just tweet it to me
56:36 - at the coding
56:39 - train pong angle segments thank you pong
56:43 - angle segments okay pong angle segments
56:47 - there it is oh no that's even this one
56:48 - this is one okay this is totally
56:50 - manageable look at this so here this is
56:53 - so much easier to deal with because it
56:54 - doesn't actually matter what Ang it's
56:56 - coming in it just it just goes at that
56:58 - angle no matter what so um what I'm
57:02 - going to do is I'm actually just going
57:04 - to map the angle I don't even need to
57:06 - divide it in segments I can be fancier
57:08 - and have it be continuous so I just need
57:10 - to take its y value it's y position from
57:14 - zero to the bottom and map it between 45
57:17 - and 45 deges Orga 135 and 135 okay let's
57:21 - do this okay so where does it hit the
57:25 - paddle
57:27 - over an hour was the correct
57:31 - answer um okay okay okay this is where
57:35 - it changes speed but now forget about
57:39 - all this
57:40 - nonsense all I want to know is I want to
57:44 - know the difference
57:49 - between the so the difference between I
57:51 - want to know it's Y location minus
57:57 - the top the paddle Y location
58:00 - minus I really should have the paddle
58:03 - keep track of its top and bottom
58:04 - location so I don't have to keep
58:05 - calculating all the time but I want to
58:07 - know how far from the top is y and
58:12 - then I want to have an angle I can use
58:15 - the processing map function where I take
58:17 - that difference which goes between zero
58:19 - and P Doh zero to the top right it could
58:22 - be all the way at the bottom or could be
58:23 - all the way at the top and map that
58:25 - from4 45 to 45 and then X speed equals
58:32 - uh 5 * cosine of angle and yped equal 5
58:37 - * s of
58:39 - angle and then I'm going to do the same
58:42 - thing for the
58:46 - right the difference is I want the range
58:49 - to be between 35 135 and 135 what did it
58:52 - say in that I might have to rethink I
58:55 - probably have to think these angle
58:56 - values because a computer Graphics
58:58 - window and angles Point down and also
59:01 - hello radians people radians radians
59:05 - radians um so uh let's just convert this
59:09 - to uh uh um rad equals radians of 45 so
59:16 - I want to go from I mean I could do it's
59:19 - pi divided by
59:21 - four but I don't feel like uh I'm sure
59:25 - this is wrong
59:27 - uh radians
59:30 - 135 negative red to Red okay let's just
59:33 - throw caution to the wind here I'm sure
59:36 - it's wrong yeah okay so first of all you
59:38 - can see how I have it it's going in the
59:41 - other direction so this one should
59:43 - actually be
59:45 - 45 stop dinging hold on does it still go
59:50 - does it still ding if I turn my volume
59:52 - off maybe not
59:57 - okay let's try it
59:59 - again that doesn't look
60:03 - right is that right or is it going oh
60:06 - that kind of looked
60:14 - right is that right that can't be
60:18 - right
60:22 - whoa so I think my okay so it's clearly
60:25 - wrong so so let's think about okay let's
60:28 - think about what these angles actually
60:30 - should be versus that
60:32 - diagram uh I should never take a diagram
60:35 - literally okay uh okay so this is the
60:39 - diagram let's just look at the left one
60:41 - okay uh and I can see what the problem
60:43 - is already oh
60:45 - no that's actually correct this is
60:48 - computer Graphics because the left one
60:50 - should be between - 45 and 45 that's
60:54 - actually correct
60:58 - um hold on because I was concerned that
61:02 - it's flipped but if you rotate oh but
61:05 - our sign and cosine all right let's make
61:07 - a separate let's make a separate sketch
61:10 - to be sure about this
61:13 - okay we're going to figure this
61:18 - out zero is to the right zero is to the
61:22 - right but do s and cosine they do the
61:26 - actual math and they don't know about
61:27 - the axis being flipped
61:32 - right or do they uh I don't need draw
61:36 - right because what what I'm what I'm
61:37 - saying here
61:39 - is let's do this what I'm doing is I'm
61:42 - saying um I have uh size 400
61:46 - 400 and I want to draw a line from width
61:51 - divided by two height divided by two let
61:53 - me just do 200 200 200 200 to 200 plus x
61:58 - 200 + y and I'm going to have an angle
62:02 - equal
62:04 - -45 and then I'm going to say uh x uh x
62:10 - equals uh 100
62:13 - times okay hey stop 100 times um cosine
62:21 - of that
62:22 - angle and y = time sign of that
62:29 - angle okay so it's doing exactly what I
62:31 - thought it should do kill the timer it
62:34 - doesn't matter anymore uh okay so this
62:38 - is right oh sign no no sign should only
62:42 - do this for the Y I
62:44 - don't okay so so this is right I feel
62:48 - like though that this
62:49 - is so um so maybe my positioning is
62:53 - wrong so let's see so if it hits uh so
62:56 - that's right let me go back to my other
63:00 - sketch this is the left paddle
63:03 - okay I got something wrong
63:06 - here it's the mapping that's probably
63:09 - wrong right so this should be
63:13 - 45 so this should be 135 right I had it
63:17 - right the first time because the
63:18 - difference if it's at the
63:21 - top y minus the paddles y minus
63:26 - oh
63:29 - hello it's not it's y minus the paddle
63:34 - of
63:35 - Y minus that right that's the actual top
63:38 - location that's the difference that
63:41 - needs to be in
63:42 - parenthesis that was a big mistake
63:47 - right um because that's the difference
63:51 - and it's kind of counterintuitive to me
63:54 - but
63:56 - right and this is the same
64:00 - issue okay so
64:03 - now let's see what I get
64:07 - here there we
64:14 - go yeah this looks doesn't this look
64:16 - right now oh I feel so
64:22 - happy pong oh wait why did it have a
64:27 - bug what was that bug I don't like that
64:30 - bug oh you know what the bug is I know
64:32 - what the bug
64:33 - is I think the bug it kind of like skips
64:36 - past it because the the paddle moves
64:39 - kind of
64:40 - fast and I mean the puck moves kind of
64:42 - fast and this check is a bit of a
64:46 - problem this extra check that I put on
64:48 - for it so it doesn't get stuck I think
64:50 - what I really want is um let's check the
64:54 - as long as it's greater than uh let's
64:57 - look at the
64:58 - right the right Edge so it because
65:02 - sometimes it's going past it's it's able
65:04 - to skip past that middle because it's
65:05 - only 10 it's only I could make a wider
65:07 - paddle and then I wouldn't have this
65:08 - problem that's probably what I should
65:10 - just do because my speed is five but I
65:12 - could also be um so let's just make a
65:15 - wider
65:16 - paddle uh let's make a wider
65:19 - paddle yeah we're not going to have this
65:22 - problem anymore
65:25 - I'm terrible at
65:29 - this okay hey I did
65:31 - it it only took like an hour oh it's the
65:35 - watching the beginning of this video is
65:36 - gonna be so
65:38 - sad can but this is this is
65:44 - pong my left hand which who's gonna win
65:47 - left or right oh it did that
65:50 - again why does it do that what's that
65:54 - bug I think it's
65:57 - um oh I know what the bug is so actually
66:00 - what I should here's the other thing I
66:02 - should do if I want it to bounce off the
66:05 - right Edge it can skip over the right
66:06 - Edge and be told to move back but I
66:08 - think I should really probably to be
66:11 - safe um I should always place it back to
66:15 - the correct location so I should also
66:17 - say x equals the paddle X plus uh the
66:21 - paddles width divided by two and here I
66:24 - should just show it back x
66:27 - minus equals the paddles x minus the
66:30 - paddles with / two I think this is also
66:34 - going to make it feel a little bit more
66:35 - accurate one hour and one
66:38 - minute there we go okay I had to stop oh
66:42 - that was a little bit weird I thought
66:43 - that was it getting stuck on it maybe I
66:45 - was still moving the paddle is the
66:47 - problem oh boy oh I must have messed it
66:50 - up I made it worse uh did
66:57 - oh oh oh oh oh oh I forgot about R I
67:00 - forgot about r x
67:02 - equals I want it to go on the right this
67:06 - also minus r and I want this to also be
67:09 - plus r this is going to be done I swear
67:11 - this is
67:13 - done if I had done this in JavaScript it
67:16 - totally would have taken me 15
67:19 - minutes yay
67:24 - pa okay okay okay okay thanks for
67:27 - watching I hope you enjoyed this it only
67:29 - took apparently 61 minutes and I don't
67:32 - know what else I'm going to do but this
67:34 - V video is over if you actually watch
67:36 - this whole video then I commend you you
67:38 - are amazing you are you are a part of my
67:40 - heart and I will give you an internet
67:43 - hug and send you on your way uh goodbye
67:46 - the stream is making me anxious um hey
67:48 - all right everybody before I go somebody
67:50 - in the chat just said the stream is
67:51 - making me anxious
67:55 - oh
67:56 - shoot my sound board's not working let's
67:59 - just take a deep breath
68:02 - everybody okay goodbye see you soon
68:05 - byebye
68:09 - [Music]