00:00 - you'll be bleep you okay hi everyone I
00:03 - just did a coding challenge where I
00:04 - programmed this game from scratch using
00:07 - the p5.js library in JavaScript and in a
00:10 - moment I'm going to travel back into
00:12 - time and you're gonna watch that coding
00:14 - challenge this is the end result I'm
00:16 - doing this after I actually did it this
00:17 - is recording this part the reason why
00:19 - I'm doing that is I want to mention
00:20 - something to you I want to tell you
00:22 - about Suraj's channel Suraj geology
00:24 - suraj makes video tutorials about
00:27 - machine learning and now that I've done
00:29 - this coding challenge I'm going to pass
00:31 - this game off to Suraj and Suraj is
00:33 - going to train a bot to play it and get
00:35 - a high score now the game doesn't
00:36 - actually have the score features yet I'm
00:38 - going to add that in later so check this
00:39 - video's description for a link to Suraj
00:41 - this video where the bot plays asteroids
00:44 - and hopefully plays it much better than
00:45 - I ever could so now I'm gonna do dinner
00:48 - to go back at the time and starts this
00:49 - coding challenge which will happen in
00:51 - two parts the first part will just be
00:54 - programming the asteroids and the ship
00:56 - and the second part will be the lasers
00:59 - your view nobody likes that upset Gibbs
01:02 - your puke in the chat they're really
01:03 - upset which is only making you do it
01:04 - more which is kind of a problem enjoy
01:06 - the video enjoy the coding challenge see
01:08 - you at the end or in the next one bye
01:10 - alright here we are I'm gonna start
01:13 - programming asteroids from scratch I'm
01:16 - not entirely from scratch because I mean
01:18 - there's a framework called p5.js that
01:20 - has a lot of hooks in it for drawing and
01:22 - animation but the actual game mechanics
01:25 - I'm going to just sort of figure out on
01:26 - the fly I haven't done this before and
01:29 - we'll see what happens if you want to
01:31 - know how long this takes just look at
01:34 - the how long this video is and then
01:36 - you'll know but I don't know because I
01:37 - can't time travel into the future
01:38 - although it would be if someone to
01:40 - figure that out for me I'll be very
01:41 - helpful for a lot of things I need
01:42 - okay let's going this is the game
01:44 - asteroids and here we go so the first
01:47 - thing that I need to do is I think I
01:49 - should program the spaceship the thing
01:51 - that's in the center of the screen that
01:52 - you can kind of like turn and then push
01:54 - around so what I'm going to do to do
01:56 - that is I'm going to create a ship
01:58 - object and the framework that I'm using
02:01 - is called p5.js which has a lot of
02:03 - things will allow me to draw the
02:04 - triangle pretty easily but it also has a
02:06 - vector a vector object built into it so
02:11 - something that I want this ship to have
02:13 - is a position and I'm going to have that
02:16 - position start at the center of the
02:20 - screen which is with / - and height
02:22 - divided by two and then I'm going to
02:24 - write a function called render where I
02:29 - draw the ship as a triangle so how do I
02:33 - draw a triangle there's a function in p5
02:36 - called triangle and all I need are all I
02:40 - need are three XY coordinates so what I
02:44 - could do is draw a triangle like this if
02:46 - I think of this as like a zero zero then
02:50 - this could be like five comma five this
02:53 - could be like negative five comma five
02:55 - and this could be like negative five
02:57 - comma zero so that would give me three
02:59 - coordinates of the triangle but maybe
03:00 - these shouldn't be five that should be a
03:02 - variable that has to do with the size of
03:03 - it so I'm going to come back over here
03:05 - and I am going to now add this dot R
03:10 - equals ten and I'm going to say a
03:13 - triangle is three points what I looking
03:16 - over there negative this dot R negative
03:20 - this dot R this dot R a lot of this dots
03:24 - this dot R this R and then zero negative
03:30 - this dot R so what I want now is to
03:33 - create a variable this is just to get
03:35 - the ship called ship and then I'm going
03:41 - to say ship equals new ship this is
03:44 - calls this constructor function and
03:46 - creates an object that has a position on
03:48 - R value and a function called render so
03:51 - I can now say ship dot render and I can
03:55 - run this code and we'll see what we've
03:57 - got
03:57 - look there's a nice little triangle but
03:59 - it's up there in the top left corner
04:01 - because I didn't actually use the
04:03 - position so something I can do in p5 is
04:05 - I can take translate the translate
04:08 - function translates the coordinate
04:10 - system by an X and a y-value vectors
04:13 - have an x and a y value so I can say
04:15 - translate by x and a y which essentially
04:17 - will position the ship now where it
04:20 - actually is so I now have that triangle
04:21 - there I could make it a little bit
04:24 - bigger I could also say
04:26 - I could also say no fill and Stroke 255
04:32 - this says don't fill the interior of the
04:34 - triangle and give the stroke a white
04:36 - stroke and now I have a nice little
04:38 - triangle right there in the center
04:39 - excellent so now what do I need to do I
04:42 - need to be able to figure out a way that
04:43 - when I press the right arrow key and the
04:45 - left arrow key the triangle rotates so
04:49 - let's figure that out the ship rotates
04:51 - so one thing I should probably add here
04:54 - is of a variable called I could call it
04:56 - angle I'm going to call it heading so
04:58 - I'm going to say it's heading is 0 and
05:00 - before I draw the triangle after I
05:03 - translate I'm always going to rotate by
05:06 - this dot heading so we can see now
05:08 - that's that now what if I change the
05:11 - heading to 90 degrees will be pointed to
05:14 - the right hmm that's not exactly right
05:15 - let's not point it to the right because
05:19 - p5i most computer graphics environment
05:22 - think in terms of radians which is a
05:24 - different unit of measurement
05:25 - according then degrees so to the right
05:28 - 90 degrees is PI divided by 2 radians so
05:32 - I can actually say pi divided by 2 and
05:35 - you can see now there it is it's
05:37 - pointing to the right
05:38 - so that's the heading now what I want I
05:41 - mean the heading is something arbitrary
05:43 - I can start it at 0 for right now so
05:45 - what I want to do is I need to be able
05:48 - to rotate it so I need another function
05:50 - and I'll call it this dot turn now one
05:57 - thing about these functions javascript
05:59 - is a funny place with object-oriented
06:00 - programming and objects have this thing
06:01 - called a prototype so this isn't the
06:03 - best way and I've gotten comments about
06:05 - this to just put these functions in the
06:07 - constructor function itself some people
06:09 - like to put them but just for a sort of
06:10 - ease of use and readability right now
06:12 - I'm just putting the functions in here
06:14 - this dot turn equals function so I can
06:17 - say ah maybe this needs a an angle value
06:20 - that it turns by and I say heading plus
06:23 - equals angle so anytime I call this
06:26 - function this dot turn any of I call
06:29 - this function ship turn it'll turn the
06:31 - ship so for example if in the draw loop
06:33 - draws it p5 has a draw loop that
06:35 - animates over and over again if I were
06:37 - just to say ship turn 0.1
06:41 - we can see ah okay heading is not
06:44 - defined uh always forget this time so I
06:51 - think where did I forget that this dot
06:54 - heading plus equals angle there we go
06:58 - now I have my ship spinning yes okay but
07:01 - I don't want it to just spin randomly I
07:02 - want to spin if I am pressing the right
07:05 - arrow key so now I need to go back to my
07:08 - code and I need to add a key pressed
07:11 - function now p5 allows you to have these
07:14 - kind of global event handlers one of
07:17 - them is function key pressed so anytime
07:18 - I press a key this function will happen
07:20 - and what I want to do here is just check
07:22 - if the key code is a right arrow ship
07:29 - dot turn by 0.1 else if the key code is
07:34 - left arrow ship turn negative zero point
07:40 - one okay that's pretty good right so now
07:44 - I'm going to turn off this turning
07:46 - that's happening in draw I'm hit refresh
07:48 - and now when I press the right key it
07:50 - turns when I press the left key to turn
07:51 - this is kind of terrible I can't hold
07:53 - down the key to turn it I have to press
07:56 - it one at a time so we're going to have
07:57 - to change how this works and actually
08:01 - there's a sort of a funny way I could do
08:02 - this I'm going to I'm going to make a
08:05 - global variable I could probably
08:06 - packages in the object a bit better and
08:09 - actually I'm going to I'm going to make
08:12 - a variable in the object called this dot
08:14 - rotation and set it equal to zero and
08:17 - this dot turn actually just always turns
08:23 - it by that rotation amount and then I'm
08:27 - going to say this dot set rotation is a
08:30 - function that receives an angle and then
08:34 - this taut rotation equals that angle so
08:37 - now what I want to do is when I press
08:38 - the key I want to set the rotation when
08:40 - I release the key I want to unset it
08:42 - because I want to be able to just I want
08:44 - to handle the key pressed and released
08:45 - it differently so now I can say here set
08:49 - rotation point one set rotation negative
08:54 - one and if I add an event for key
08:56 - released now I can say ship dot set
09:01 - rotation zero so now this should what
09:06 - didn't work so what did I miss
09:09 - I've got a bug here was a nice idea
09:11 - right oh you know what I forgot to do I
09:13 - forgot to call ship turn so I always
09:17 - have to turn it I might be turning it by
09:19 - zero sometimes but the function turn is
09:21 - always calling it's always happening in
09:23 - the draw loop uh sketch eleven shiz
09:27 - which is ship okay so now there we go so
09:32 - now as I hold the key down it turns okay
09:38 - there we go it's turning as I hold it
09:40 - down now
09:41 - the next thing I need to do is I need to
09:43 - be able to move it so when I press the
09:45 - up arrow I want to apply a force in the
09:48 - direction that it's pointing let's think
09:50 - about how I'm going to do this so in
09:52 - other words here's my ship let's say
09:56 - it's pointing in this particular
09:57 - direction so I have this particular
10:00 - angle as this variable heading so what I
10:05 - need to do is I want it to have a
10:06 - velocity that's moving in that direction
10:08 - so I need to add two concepts to the
10:10 - ship I need to add the concept of a
10:12 - velocity which changes its position but
10:15 - I also need to add this concept of an
10:17 - acceleration I don't actually the
10:19 - accelerations the thing that changes the
10:20 - velocity so when I press up which is
10:22 - like a boost thrust or boost onto the
10:25 - ship it's like a force that pushes it
10:27 - and it starts to move so let's see how
10:29 - we can add that both of those things
10:30 - will also be vectors so if I go back to
10:33 - the code boy asteroids is much more
10:34 - complicated than I imagined still only
10:37 - on the ship this dot velocity equals
10:41 - create vector zero zero I want to add a
10:45 - function called update which is always
10:50 - updates whatever this object is doing
10:52 - and I'm going to say this dot position
10:54 - add this dot velocity so if I were to
10:58 - run this you can see oh wait first of
11:00 - all I've got I always make this always
11:02 - forget this I've got to actually call
11:04 - now shift update
11:07 - okay now if I hit refresh it's not doing
11:12 - anything but what if I give it a
11:14 - velocity create vector a 1 comma zero so
11:20 - it's velocity is a vector pointing to
11:22 - the right 1 comma zero now if a it
11:24 - refresh there it is it's moving now it's
11:26 - not pointing in the direction then it's
11:28 - moving so many problems here but we're
11:30 - going to fix all of those things the
11:31 - idea here is that the velocity just
11:33 - starts at zero but instead of assigning
11:34 - it a value I'm going to push it so I
11:37 - need some sort of function that's like
11:38 - this dot boost and when I boost it what
11:45 - do I do I add something to the velocity
11:48 - so I need a vector that points in the
11:50 - direction that it's pointing and I know
11:53 - the direction based on an angle so I
11:55 - need to get a vector an X and a y based
11:58 - on that angle fortunately for us p5 as a
12:00 - framework has a function to create a
12:02 - vector from an angle I could do it
12:03 - manually using sine cosine and
12:05 - trigonometry and I have other videos
12:06 - that show that but if I just come over
12:08 - here I can say var force equals P five
12:15 - dot vector dot from angle heading so
12:18 - this will give me a vector that points
12:20 - in the direction of that heading and I
12:22 - can now say this dot velocity ad force
12:27 - so now I need to add else if keycode
12:31 - equals up arrow
12:33 - that'll be my key for boosting it ship
12:36 - dot boost so let's see how this goes now
12:42 - if I press the up key uh heading is not
12:45 - defined I forgot that this ever have to
12:49 - like I should have to put a quarter in a
12:51 - jar every time I forget this been
12:53 - working an object in JavaScript and then
12:56 - I would be I would be wealthy except for
12:58 - the fact that those would be my own
12:59 - quarter so it wouldn't really work but
13:01 - whatever I just said wealthy in this
13:03 - very like fancy way like I don't know
13:05 - anyway so now if I hit the up arrow uh
13:08 - heading is not defined sketch that just
13:10 - live 41 I die not hit save I must not
13:14 - have hit save there we go now you notice
13:18 - it's working but it's not pointing in
13:20 - the right direction
13:21 - so this is a silly problem because I
13:23 - drew a triangle kind of like pointing up
13:26 - but a rotation of zero is pointing to
13:30 - the right so I kind of just need to like
13:32 - adjust everything I probably could have
13:34 - been could have drawn the rectangle
13:36 - oriented to the right but I can just fix
13:39 - this in my code with a one little line
13:41 - that just says rotate heading plus pi
13:46 - divided by two that should rotate it
13:48 - always offset by 90 degrees and if I do
13:51 - this you can see I am now pushing it
13:55 - around like asteroids now you can't see
13:58 - what keys I'm pressing but left left
14:00 - left right right up up so one thing I
14:02 - want to add is a little bit of dampening
14:05 - or friction just to like make it a
14:06 - little easier for me to play right now
14:08 - and also it's an interesting thing to
14:09 - see in the update function what I'm
14:11 - gonna do is always say this dot velocity
14:13 - dot multiplied by zero point nine five
14:18 - so I just want to reduce the velocity
14:20 - the magnitude of that vector by five
14:22 - percent every frame and you'll see what
14:24 - that does so as I accelerate it kind of
14:28 - slows down and stops now I'm doing it
14:30 - too much the other thing is I can't hold
14:31 - down the up key so I have to do the same
14:33 - exact thing that I did with turning I
14:38 - need to handle that in ship so what I'm
14:42 - going to do is say ship dot boosting
14:44 - true I'm going to change this I'm going
14:47 - to say ship boosting false and I'm going
14:51 - to create a variable called this dot
14:54 - this dot is boosting equals false and
14:58 - then I'm going to write the function
14:59 - this dot boosting which gets a boolean
15:04 - value as an argument and I'm going to
15:09 - say this dot is boosting equals B so I
15:12 - can and then in update I think I can
15:15 - just do this in update I'm just going to
15:18 - say always say this dot boost so it's
15:22 - always oh no no no if it's boosting if
15:25 - this is boosting then updates already
15:30 - always being called so I basically want
15:31 - to turn boosting on and off boost is
15:34 - totally the
15:34 - wrong word I think the word is thrust
15:36 - but whatever it doesn't matter you get
15:38 - the idea um okay so I think this is
15:40 - exciting I think this is gonna work
15:42 - let's see oh my god so now I can hold oh
15:45 - whoa okay it went really fast so now I
15:48 - need to deal with the fact that because
15:49 - I can hold it down that force is much
15:52 - too strong so I'm going to say force dot
15:55 - multiply by 0.5 so I'm going to reduce
15:57 - its magnitude by half I haven't reduced
15:59 - it by 90% just to sort of see so you can
16:03 - see I can now hold the mouse down and
16:05 - it's still it has that and turn it
16:07 - around so it's essentially like drive it
16:09 - around the screen the friction is too
16:10 - much though I just wanted to have a
16:11 - little bit of dampening so I'm just a x
16:14 - 0.99 there we go so I've got asteroids
16:19 - here pretty much I've got the core
16:20 - mechanic now down of driving this
16:23 - triangle around the screen this is
16:25 - totally fun okay
16:27 - ah now what do I need to do boy there's
16:29 - a lot left to do I need to add actual
16:32 - asteroids I also need to deal with the
16:34 - fact that this should wrap around that's
16:36 - kind of an easy problem let's let's add
16:37 - that real quick so I should add a
16:40 - function called this edges equals
16:43 - function oh this is going to be so
16:44 - tedious and I want to say if this dot
16:48 - pause dot X is greater than a width plus
16:51 - minus this dot R so I just want to kind
16:54 - of like if it's nope plus R if it's like
16:57 - all the way off the screen then have it
16:59 - have its position equal negative R else
17:03 - if this dot paws X is less than negative
17:06 - this dot R then have its position get
17:09 - reset to the other side of the screen
17:12 - right so this should do it for X whoops
17:14 - let's drive off this side oh I'm not I
17:18 - do this every time when you write a
17:22 - function you need to actually call it
17:24 - for anything to ever happen
17:26 - so in draw in draw I now also want to
17:28 - say ship edges let's see if that works
17:32 - now whoops and drive off the screen and
17:35 - I got an error
17:36 - I forgot this dot where did I forget
17:41 - this dot in my edges function this dot R
17:47 - and this dot our I don't need this dot
17:51 - with right because with a refers to the
17:53 - width in this sort of global sense of
17:55 - the canvas but our is part of this ship
17:57 - object so now I can drive off the edge
18:01 - and here I come back so asteroids kind
18:04 - of like we would see it in both places
18:06 - and fancier ways and stuff now I just
18:07 - need to implement this for the top and
18:09 - the bottom height and Y and Y and Y and
18:18 - height so now I should have I can drive
18:22 - off the top the side and I can like turn
18:25 - around and slow myself down so I can
18:27 - drive around this is fun I did not get
18:29 - distracted to keep playing the game okay
18:31 - it's time let's add some asteroids now
18:33 - one thing I don't love here is that my
18:35 - code is getting to be a little bit
18:36 - unwieldy so I want to take this whole
18:38 - ship constructor function and I'm going
18:40 - to add a new file and I'm going to call
18:43 - it a ship KS and I'm going to put the
18:45 - whole ship constructor function there
18:47 - I'm going to make a new file called
18:48 - asteroid j s because I want all the code
18:52 - for Astrid the asteroids things that are
18:54 - flying around I want to put there and
18:55 - then what I need to do is in my
18:58 - index.html file I need to make sure that
19:00 - I am also referencing ship j s and
19:03 - asteroid j s so I haven't done anything
19:06 - that should change the way this program
19:07 - works I just moved reorganized my code a
19:10 - little bit I feel good about that how do
19:12 - you feel about that are you still
19:13 - watching maybe I feel like I've been
19:16 - doing this for hours so probably hasn't
19:17 - been that long okay so now asteroid so
19:20 - the first thing I need to deal with is
19:22 - the fact that unlike the ship where
19:25 - there's just one of them I'm going to
19:27 - need many asteroids flying around the
19:29 - screen so I need to save our asteroids
19:32 - equals bracket bracket because I want it
19:35 - to be an array an array being a list of
19:37 - things as opposed to one thing then what
19:39 - I want to do just to get started I want
19:41 - to say asteroids dot push new asteroid
19:44 - push being a function that adds
19:45 - something to an array and I forgot to
19:47 - parentheses there so we need to add an
19:50 - asteroid to that list and then in the
19:53 - draw loop I is less than I want to loop
19:57 - now one of the other comments I get
19:59 - constantly on my channel is why don't
20:01 - you use
20:01 - for each loop and maybe someday I will
20:04 - but I'm just kind of like old and not
20:08 - very good at this that I'm sort of used
20:09 - to these kind of loops with iterating
20:12 - over an index so someday I'll add a for
20:15 - each loop in JavaScript to some of these
20:16 - but right now I'm just going to do this
20:18 - I'm going to do a
20:19 - astroids index I render so notice this
20:22 - is a technique that I often employ I
20:24 - haven't actually written any of the code
20:25 - for the asteroid I'm just imagining what
20:27 - I need I need an array I need to make a
20:30 - new one and then I need to loop through
20:31 - all them and add and call render so now
20:34 - this gives me kind of a template for
20:36 - what I need to write in this asteroid is
20:38 - fun it a JavaScript file I need to write
20:41 - a constructor function called asteroid I
20:44 - also want the asteroid to have a
20:46 - position create vector and you know the
20:48 - position for right now we'll just be a
20:50 - random spot random with random being a
20:53 - p5.js function that gives me a random
20:55 - number between zero and some value like
20:57 - width or height and then I need a render
21:01 - function which is something that I'll
21:04 - draw now what I'm going to do right now
21:05 - just for the I'm what I'm going to do
21:08 - right now is I'm going to call this I'm
21:10 - going to say a translate this dot pause
21:13 - X this dot pause dot Y and I'm just
21:16 - going to write I'm just going to draw a
21:19 - circle zero zero and you know we need an
21:24 - R as well this dot R equals 50 and then
21:27 - I'm going to say this dot R times two
21:29 - because the the ellipse function wants
21:32 - and the lips function wants a diameter
21:34 - so to draw a circle so the radius times
21:37 - choose the diameter so let's see how
21:39 - this goes where's my asteroid there it
21:42 - is here's one asteroid and it's a circle
21:44 - I can hit refresh and it should I must
21:47 - have something wrong with my random cuz
21:49 - right look it seems to be off the screen
21:51 - let's take a look at that random with
21:53 - random height hm
21:55 - oh I know what the problem is I meant to
21:58 - talk about this but I forgot so here's
22:01 - the thing these translates build on each
22:04 - other so the ship is translating and
22:08 - rotating the triangle the asteroid is
22:11 - now translating the ellipse so that
22:13 - asteroid is actually being drawn
22:14 - relative
22:14 - - the ship's location and strand anise
22:16 - but I can show you what I mean like this
22:18 - I got to get to appear look as I move
22:21 - now that's kind of interesting but it's
22:23 - not what we want so one thing I need to
22:25 - add is are these functions that are in
22:27 - p5 that are push the functions push and
22:30 - pop so push is going to save the current
22:33 - translation and rotation state and pop
22:37 - is going to restore it so if I put push
22:39 - and pop around it it makes all this
22:41 - translate rotate for the triangle not
22:43 - affect the other thing and you can see
22:45 - now and also actually if the styles so
22:48 - that you can see now the the asteroids
22:51 - being positioned you know randomly now
22:53 - let me go back to here the asteroid and
22:57 - I also need to add that to here because
22:59 - there's going to be a lot of asteroids
23:01 - and I want them to be independent from
23:02 - each other and I'm also going to say
23:04 - stroke 255 no fill okay so now what I
23:09 - want to do even though I could just keep
23:11 - going it I think it would be really good
23:14 - for us to sort of procedurally generate
23:16 - random asteroids that have that jaggedy
23:19 - look from the original asteroids game I
23:20 - could make this game just with the
23:22 - circles but that act in some ways that
23:24 - defeats the point of what I want to do
23:26 - so I know the whiteboards not the
23:28 - greatest today but I'm going to come
23:30 - over here and just briefly explain how
23:32 - I'm going to do this so I'm drawing a
23:34 - circle with the function ellipse another
23:38 - way I could draw a circle is by setting
23:41 - all the points of a circle as vertices
23:44 - and then connecting them as one polygon
23:47 - and you can see this is like a bit less
23:50 - of a high-resolution circle but if I
23:53 - move these points around a little bit
23:55 - then I can also make something that
23:58 - appears more in jaggedy so how do I get
24:00 - these points I need to do something
24:02 - called polar to Cartesian coordinate
24:05 - transformation and I have another video
24:07 - I think that goes through that in detail
24:09 - or if I don't I better make one and link
24:11 - to it from here but really what I just
24:13 - need to do is think of each one of these
24:14 - spots as an angle from the center and/or
24:18 - distance from the center radius and then
24:20 - I need to convert that to an X Y with a
24:21 - little bit of trigonometry so time to
24:24 - review your trigonometry pause this
24:26 - video and go read about trigonometry
24:28 - if you're watching it okay so what I'm
24:30 - going to do here is I'm going to take
24:31 - out this ellipse and I'm going to write
24:34 - a for loop yet again I'm gonna say a
24:36 - equals zero actually I want to say I
24:38 - equals zero I'm gonna use I equals zero
24:41 - I is less than I don't know let's just
24:44 - use ten points i plus plus I can use the
24:48 - p5 map function to get an angle so I
24:51 - want to take I which goes from zero to
24:55 - ten and I want to get a an angle that's
25:00 - between zero and two pi to pi being the
25:03 - equivalent of 360 degrees then I want to
25:06 - say VAR x equals this R times cosine of
25:10 - that angle this will give this is the
25:12 - polar to Cartesian coordinate the polar
25:15 - coordinate is R comma angle the
25:17 - Cartesian coordinate is X comma Y name
25:19 - for Rene Descartes the mathematician VAR
25:22 - y equals sine of the angle and then what
25:25 - I can do is I can set a vertex at that x
25:28 - and y position okay and now in addition
25:32 - to that what I'm going to do is say
25:33 - begin shape so I want to create an
25:35 - arbitrary shape out of vertices this
25:38 - list of vertices all with their XY and
25:40 - shape and we're going to see what this
25:42 - gives me so you can see it there it is
25:46 - it's kind of like a circle but it's a
25:47 - little more jagged E and notice how it's
25:48 - not connected at the end so an easy way
25:51 - for it for me to do that in p5 is just
25:53 - to add this closed function which will
25:54 - tell the shape to close itself at the
25:56 - end the other thing that I think would
25:58 - be interesting to do is have this BA be
26:03 - flexible so each time I do it I have a
26:05 - different number I have a sort of a
26:06 - different resolution so I'm going to do
26:08 - a variable called total which is a
26:11 - random number between let's say it could
26:13 - be between 5 and 15 points so this is
26:17 - going to say this total and this would
26:20 - now be this total so sometimes it will
26:23 - have a few vertices sometimes we'll have
26:25 - a lot so you can see I'm getting
26:28 - different ones and now you know what
26:30 - would be much better is if I stopped if
26:33 - I right now in the sketch what I should
26:36 - just do here is add a bunch of them so
26:38 - let's add ten of them at the beginning
26:43 - and now so I don't know if we can see
26:47 - there's a whole bunch of them all with
26:48 - the different amount of verses and the
26:49 - other thing I should do is make the size
26:51 - of them variable so I'm also going to
26:53 - say this dot R equals a random number I
26:58 - don't know between five and twenty five
27:01 - that didn't work this dot R oh that's in
27:06 - the ship
27:07 - I changed the ship size which is to be
27:10 - fixed and I want the asteroid itself to
27:14 - have a random value between 15 and 70/50
27:18 - was it looks like a good sort of maximum
27:19 - size so now you can see and this is too
27:21 - many I want to start it with fewer so
27:26 - let's just start it with five okay so we
27:30 - can see here is now a bunch of asteroids
27:31 - now here's the thing these don't look
27:33 - like the asteroids in asteroids so how
27:35 - do I going to make them jaggedy and more
27:37 - interesting looking what I believe I can
27:38 - do is I can actually let's see how am I
27:44 - going to do this in the asteroid what I
27:46 - can do is offset our each time by some
27:50 - random value hmm
27:52 - but I need it to be the same random
27:54 - values each time so there's a bunch of
27:57 - ways I could do this but I'm going to
27:59 - make this uh I'm going to make this a an
28:04 - array and I need how many I need however
28:14 - many points I have I need that many
28:16 - offsets so this dot offset equals a
28:21 - random amount so when I create the
28:24 - object I make an array of offsets for
28:26 - each one of those vertices and let's say
28:29 - it's between like negative five and five
28:30 - I might want to make it bigger and then
28:32 - now the X and y is plus this dot offset
28:37 - index I and and you know let me let me
28:43 - make this a little simpler to read I'm
28:45 - going to just make another variable the
28:47 - R is actually this dot R plus the offset
28:49 - for each one and now here's the polar to
28:53 - Cartesian
28:54 - coordinate transformation okay I hope
28:58 - this works
28:58 - oh boy I'm gonna be excited if it does
29:00 - if it looks like asteroids ah total is
29:03 - not defined this dot total where's total
29:07 - not defined this total oh I don't see
29:12 - any asteroids this dot offset index I I
29:15 - see in the chat somebody is a yes I need
29:20 - an index I here I need to set each spot
29:23 - in the array whoops there we go that's
29:26 - looking kind of better so you can see
29:28 - these look kind of more like asteroids
29:30 - we can make the offset much more extreme
29:33 - yeah this is better so now I've got
29:37 - something that looks much more like
29:38 - those procedurally generated asteroids
29:40 - so now these asteroids by the way I can
29:43 - still drive around right the whole point
29:45 - is to drive around and not hit the
29:46 - asteroids they're a little bit big I
29:47 - don't know if I'm making this game too
29:48 - hard to play but the asteroids should
29:51 - move right
29:52 - I need the asteroids now to move around
29:53 - the screen so they need an update
29:58 - function and the same thing I could just
30:02 - say this stop position dot add this dot
30:04 - velocity only they don't have a velocity
30:06 - so let me give them a velocity this
30:09 - velocity equals and p5 has a function to
30:12 - create a random vector so a vector of
30:16 - length one pointing in a random
30:18 - direction so I can just say random 2d to
30:20 - give me a random vector if I go to
30:22 - sketch a s I can say did it that
30:28 - asteroids index I update and here we go
30:36 - there we go now the asteroids are moving
30:39 - around
30:39 - oh the asteroids also need to to when
30:42 - they leave to come back so one thing I
30:45 - can probably do is just reuse this edges
30:47 - function you know I could do some kind
30:48 - of fancy object-oriented inherent
30:51 - inheritance thing but I'm just going to
30:53 - take this exact function and yeah I
30:57 - could I could use the same function and
30:59 - assign it to both but I'm just going to
31:01 - copy paste it right now then I'm going
31:03 - to go to sketch J s and say asteroids
31:08 - Edge's okay there we go
31:12 - now I've got the asteroids moving around
31:14 - and now all I need to do boy am I not
31:18 - finished yet oh yeah I have no collision
31:20 - detection so I'm not I'm definitely not
31:23 - going to add collision detection to this
31:24 - today because you know whatever
31:26 - asteroids they're they're in different Z
31:29 - space and they pass through each other
31:30 - and it's room a djegal sense and what
31:32 - happened to my ship there it is
31:34 - but I should add a feature where I can
31:37 - now fire little lasers at the asteroids
31:42 - and break them apart
31:48 - [Music]