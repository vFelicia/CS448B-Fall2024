00:00 - Hello welcome to part 8 of github, git, and all that stuff for
00:05 - poets and in this particular video.
00:07 - I'm going to show you how to have your poem or whatever it is you're making - webpage
00:11 - hosted through github so
your git repository on github
00:16 - can actually be uh... you can get
free web hosting with it so.
00:21 - And this is by using something called
github pages. Github pages is a
00:24 - rather large topic because there are tons of features that it has available for
00:29 - you but I'm not sure the very basics.
00:30 - Just how to take your files and
have them viewable through you R.L.
00:34 - So that's the first thing that I'm
in a do in this particular video so
00:38 - if you've been following these videos
along there's these important git concepts
00:41 - that I've been covering in each one
of these videos commits we have
00:44 - a repository a commit is like
a same branch is ticking.
00:48 - Is having a separate branch of changes
that you might merge into your
00:53 - master branch later if you like
those changes there's push and
00:55 - pull of pushing being to send and
pull being to to retrieve so
00:59 - there's all the stuff that I've
covered in all these other videos and
01:02 - the exciting thing is that
using git hub pages
01:08 - all of this stuff works
identically exactly the same way.
01:12 - So you can have a project that you are
working on through git keeping track of
01:17 - its history collaborating through gits but
if you flip a switch and
01:22 - it's on git hub you can
actually view that project as
01:26 - directory of as as if it's hosted on a
website so let me show you how this works.
01:31 - The key to it is that on your brain.
01:33 - The key is that typically by default
your git branch is called Master.
01:39 - That's the sort of like fundamental
core branch of your project where you're
01:43 - like flight rules things are your
main poem your main code whatever it
01:48 - is lives in the master branch for
github pages to work.
01:51 - You want to get rid of this idea of having
a master branch you still can have one but
01:56 - for simplicity.
01:56 - You could just think of your
master branch as being called.
02:01 - gh - pages.
02:04 - So as long as the branch that you're
working on is called gh-pages.
02:09 - There is automatically a secret
your well by which you can access.
02:13 - Now there's a lot more to this how but
02:16 - I'm avoiding saying that now and
I'll get to it later.
02:18 - So let's come back up and the so
let's just do this right now.
02:21 - It's actually going to be quite simple and easy.
02:22 - I'm going to go.
02:23 - I'm on my profile page I'm the rainbow
coder for lack of a better username.
02:28 - And I'm going to make a new repository and
I'm going to call this poem website.
02:36 - So this is my repository name poem
website says ridiculously bad for
02:41 - repository name but that's fine.
02:42 - You could come up with something better
and this poem will be on the Internet.
02:49 - And really on the World Wide Web
talking about.
02:52 - So that's my description
it's going to be public.
02:54 - I want to initialize it with a read me.
02:56 - So you can see what I'm doing so
I'm just making a new or
02:58 - positively through the github.
03:00 - Interface.
03:00 - Just like I always have before.
03:03 - So one hundred I'm going
to create repository.
03:06 - There it is now I have this repast So
03:09 - notice here that by default
the repository lives in the master branch.
03:15 - So in order for
03:16 - two years github pages all the thing to
do is click here and make a new branch.
03:21 - So I'm going to type in
git hub - pages and
03:25 - I'm going to select Create branch gh-
pages.
03:29 - So now I have this branch gh-pages.
03:32 - Now here's the thing that Master
of branch is still there and
03:37 - in fact if I were to go to this
repository again by default.
03:41 - It's going to put me on
to the master branch.
03:44 - So to make things simpler.
03:45 - I want to make sure that gh-pages is the default branch.
03:52 - So where I do that.
03:53 - I need to go to settings so I'm going to
click on settings and under settings.
03:58 - I'm to go over here to brand.
04:00 - Is on a click on branches and over here.
04:03 - Notice here this is where
it says default branch.
04:06 - So I want to go to this
default branch place and
04:08 - I want to switch default branch and
I want to switch it to G.H.
04:12 - pages and then I want to click update
now it's going to it's going to say like
04:17 - my goodness changing your default branch
could have unintended consequences.
04:23 - It can and this is you know it's reliving
a little bit in the danger zone here.
04:27 - But what's the big deal if there's
nothing in this are positive and yet
04:31 - I'm just making a poem and
04:32 - messing around this is actually quite
OK to do with a brand new or positive.
04:35 - You're not affecting anything else that's
happened in the history because there is
04:38 - no history so far so I'm going to say I
understand update the default branch and
04:43 - now the default branch is G.H.
pages so if I go back to this loops.
04:50 - Poem website repository.
04:52 - You can see that I am now by
default in the branch G. H. pages.
04:57 - Now there's a little bit.
04:58 - This is fine and I could stop here but I
want to be really I'm really serious about
05:02 - github pages But I'm not stop
I'm I'm of all it on github pages.
05:07 - So I also want to go over here to branches
where this is the link where I could view
05:11 - what are all the branches associated with
this repo and I'm going to click here.
05:14 - And I'm going to see that
the default branches G.H.
05:17 - pages but
I still have this other branch of Master.
05:20 - So over here on the right hand side
there's this little trash icon.
05:24 - I can click this and
05:25 - actually delete the master bridge and
this is worth doing because I
05:28 - don't want to by accident ever work on
the master branch in this particular case.
05:33 - So I'm going to delete this branch and
05:35 - you can see it's gone it's kind of x-out
05:38 - I now all I have now is a G.H.
pages bridge.
05:42 - OK we did it this for positive is now or
a positive hosted through good pages.
05:48 - So I can I can go to
settings by the way and
05:51 - I can scroll down under github-pages.
05:53 - You can see here.
05:56 - Your site is published at this U.R.L.
So by definition is.
06:00 - If you have gh-pages branch
in your repository the U.R.L.
06:05 - for that repository will
be your user name dot GitHub dot
06:10 - IO slash the repository name which
in this case is poem website.
06:15 - Now here's the thing you absolutely
can use a custom URL
06:19 - for example I have plenty I have several
websites posted through github
06:23 - pages nature of code dot com for
example is hosted with github pages but
06:27 - it isn't at Shiffman Dot Github
Dot I O  slash nature of code.
06:31 - So there is a way to do that and
06:33 - on another video we will
explore that as a topic.
06:35 - It's just a good sort of
configuration thing but
06:38 - you get this sort of free
URL that you can use.
06:40 - Now let's go to that URL 
and you can see here.
06:44 - It's going to say page not found
the reason is there are no files there.
06:49 - There's no files there for me to look
at I mean maybe in the repository.
06:55 - There is a file called Read
Me I might be a look at that.
06:57 - But let's let's take a step further.
06:59 - Let's add a file.
07:00 - So I'm going to go here
under create new file.
07:03 - And I'm just going to name the file.
07:05 - Now I'm just going to make
a temp plain text file.
07:07 - I'm going to call it poem dot T.X.T. and
07:11 - I'm going to do I'm going to
write some poetry git hub.
07:16 - Pages git hug
07:19 - It's that I wrote that by accident.
07:20 - I'm the keep it githug git
hug is a hug on the pages.
07:28 - Oh Dear this poem is terrible.
07:31 - OK So that's my poem you can you
send me a pull request to approve it
07:35 - I'm going to do commit new file and
07:38 - you can see that it's committing it
directly to the G.H. pages branch and
07:42 - you can see there it is so I can see
it here in my github repository.
07:46 - But now look at this.
07:48 - I can go to the U.R.L.
and I can put it in there.
07:53 - Poem.
07:55 - So I can access that particular file and
there you can see there it is.
07:59 - I now have a web
08:00 - Page with this particular poem on now
that web page is a plain text file.
08:06 - So all it shows up as raw text those of
you who have used the Internet before or
08:12 - browse the web have noticed that web
pages have different fonts and images and
08:17 - animations so.
08:18 - To go further with this to actually
host a dynamic web site through get home
08:23 - pages you need to actually have H.T.M.L.
files.
08:26 - Perhaps also image files perhaps
also something called C.S.S. files.
08:30 - The whole set of the totals
about how to use H.T.M.L. C.S.S.
08:34 - and javascript to create different kind of
web pages that could go and look at it and
08:37 - come back to this but
I'm going to leave going to just one step.
08:40 - I'm going to make an H.T.M.L.
poem just here.
08:44 - So you can see a little bit more.
08:45 - So what I want to do now
is I'm going to go back and
08:50 - I'm going to say another I'm going
to create another new file and
08:53 - you know what I'm going to
call this file index . html
08:55 - If you name a file index .html then you don't actually have to
09:00 - type in that file name on the web.
09:02 - It will be the default file
that's open whenever I go to.
09:06 - Rainbowcoder dot github dot
09:08 - IO Slash Poem website.
09:11 - So I'm to call it that and
then I'm going to type looks.
09:14 - I'm going to type some H.T.M.L. into this
file you know I'm probably missing some
09:18 - things you're supposed to have in H.T.M.L.
but H.T.M.L. is all about having these
09:23 - tags open H.T.M.L. close H.T.M.L.
open body closed body and in the body.
09:28 - I can put something like h1 which
means header one and I can say  poem and
09:34 - then I could say like H
three by Daniel Shiffman.
09:40 - And then I could say like P. which is for
a paragraph and I could say this.
09:46 - You know Rainbow rainbow
you are my rainbow and.
09:53 - I could put a period and
close the paragraph and
09:56 - you can see this is you can check
out my other tutorials to learn
10:00 - More about H.T.M.L.
10:01 - but this is writing some markup which
is giving it some formatting and
10:04 - I'm going to just add a little more
formatting like I'm going to add strong.
10:08 - So this is going to make that
particular rainbow bold and
10:12 - then I'm going to hit commit and
I say making an H.T.M.L. poem and I'm
10:18 - going to commit that new file and you can
see now what do I have in my repast story.
10:23 - I know the index studied
in dition a poem dot T.X.T.
10:26 - and if you remember this is what
poem dot T.X.T. looks like.
10:31 - However now if I go to the URL and I just get rid of that right.
10:37 - And I want to go to just the core U.R.L.
rainbowcoder github dot IO  slash.
10:43 - Poem website and I hit enter.
10:46 - You can see there is my poem and formatted
so I've now used a little bit of H.T.M.L.
10:50 - and it's freely available on the Internet.
10:53 - This is a website.
10:53 - People can contribute to this
website by making poll requests.
10:56 - You can make changes to it
through the github interface.
10:59 - You could clone that repository down to
your computer the same way I showed you in
11:03 - other videos you could make
branches you can make changes.
11:06 - Just remember the one thing
that's going to be different.
11:10 - I'm actually going to let's
do this really quickly.
11:13 - Let's say you want to
work with this locally.
11:16 - I want to get I'm going to go to clone or
download.
11:19 - I'm going to copy this particular
this U.R.L. and go to terminal.
11:24 - This is something that I did in a previous
tutorial if you need to go back and
11:27 - look at that and I miss a first of all
just so you know I'm on the desktop of my
11:30 - computer and I say git clone.
11:35 - So we can see now that here is that.
11:40 - You can see there are the files.
11:42 - One thing for you to remember if I say.
11:52 - No it's telling me I am
on Branch G H dot pages.
11:56 - So if I ever want to get
updated changes get pull.
12:00 - Normally we were saying things like
get pull origin master no longer
12:04 - is there a master branch.
12:06 - So I have to remember if
I've use any of these other
12:09 - get commands to always use G.H. dot pages.
12:12 - OK So there you go.
12:13 - That's the basics of it you can put
image file anything that you can do in
12:17 - a web page you can put
into this repository.
12:20 - You can add stuff you can commit stuff.
12:22 - Your whole web pages there online for
anyone to work to see and
12:25 - for you to work with through
the through the git.
12:28 - Platform.
12:29 - What I'm going to do in the next video for
those of you who might have come to
12:32 - this series by working with something
called P5 js I'm going to show
12:36 - you how to actually take a code example
something that has H.T.M.L. C.S.S.
12:40 - and Javascript and a host that with github pages which would be quite simple.
12:44 - But I'm just going to put that in
a separate video because it does
12:46 - involve programming in source code but
you can actually just.
12:49 - Still just with this video put a text
file or some basic H.T.M.L. on line.
12:53 - OK Thanks for watching and let me know
what questions you have in the comments.