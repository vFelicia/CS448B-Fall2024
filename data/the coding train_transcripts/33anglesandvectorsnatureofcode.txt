00:00 - hi again so the next topic that i really
00:02 - want to look at
00:03 - are the trigonometric functions sine
00:04 - cosine tangent and specifically
00:06 - something known as polar coordinates but
00:10 - before i get there actually i want to
00:11 - take a little break
00:12 - and look at something that's a really
00:14 - common problem in
00:16 - coding visuals in p5.js and it relates
00:18 - to that as well and will kind of ease us
00:20 - into
00:21 - looking more closely at those
00:22 - trigonometric functions and so the topic
00:24 - that i want to look at is
00:25 - what if what i want is things that are
00:28 - moving around
00:28 - in my p5.js canvas to point in the
00:31 - direction
00:32 - that they are moving let me be a bit
00:34 - more specific about that
00:35 - let's say instead of drawing a circle as
00:37 - my mover object
00:39 - i'm going to draw it as a triangle and
00:42 - that triangle is moving with a
00:43 - particular
00:44 - velocity so i know now that i can
00:47 - rotate something right if this is if
00:50 - this is my object
00:51 - i can rotate something relative to the
00:53 - x-axis by the way an angle is often
00:55 - written in a diagram as the greek letter
00:58 - theta so i
00:58 - i might be doing that so just mention
01:01 - that here
01:02 - i want to rotate this triangle by some
01:05 - angle
01:06 - and what if basically to lock it in the
01:09 - direction that it's moving
01:10 - i want to know the angle associated with
01:12 - a particular vector
01:14 - the velocity vector relative to the
01:16 - horizontal x-axis
01:18 - now you might have a more creative idea
01:19 - of how you want to rotate an object
01:21 - that's not keeping it locked exactly to
01:23 - its velocity vector maybe you want it to
01:25 - sort of approach that vector
01:27 - or spin in the opposite direction or do
01:29 - some kind of like strange or unique
01:31 - behavior but just to understand how do i
01:34 - have it pointing
01:34 - exactly locked to its velocity vector
01:37 - well a way
01:38 - that i could do that is i can take any
01:41 - vector
01:42 - and i can draw its components
01:45 - right this is its x component and its y
01:48 - component this is the velocity vector
01:50 - and suddenly you might notice aha i have
01:53 - a right triangle and this angle here
01:57 - is one of the angles inside of this
01:59 - right triangle
02:00 - and trigonometry the trigonometric
02:02 - functions
02:03 - deal with the relationship between the
02:06 - sides of a triangle
02:07 - the in this case the x y and magnitude
02:10 - of the velocity vector
02:12 - and the angles inside that triangle so
02:14 - if i
02:15 - know the x and y of the velocity
02:18 - then i maybe there's a way for me to
02:20 - calculate what this angle is
02:22 - and in fact one of the trigonometric
02:25 - functions is known as tangent
02:27 - in this case tangent of that
02:30 - angle equals the length of y
02:34 - over the length of x i'm going to talk
02:36 - about what tangent is in a bit more
02:38 - detail in the next video when i go
02:40 - through all of the trigonometric
02:41 - functions
02:42 - including sine and cosine but this
02:44 - should just give you an
02:45 - inkling of how you might then eventually
02:48 - solve for this
02:49 - angle in the nature of code book chapter
02:52 - 3 that's linked in this video's
02:53 - description i go through the full
02:54 - details
02:55 - of how to solve for this angle but i'm
02:57 - going to stop here and just let you know
02:59 - that one of the nice things about
03:00 - working in p5
03:02 - is if i have a variable that's storing a
03:04 - vector like velocity
03:06 - i can actually just say velocity dot
03:08 - heading
03:09 - and it goes through the math using the
03:12 - tangent
03:13 - of the angle using the x and y
03:15 - components of
03:16 - the velocity vector to solve for that
03:18 - particular angle
03:19 - and i can take that value and i can use
03:22 - it to
03:22 - rotate a particular object that i'm
03:26 - drawing
03:26 - so let's see that in action in the code
03:28 - itself so here i am
03:30 - back in my mover object and i'm going to
03:32 - change the way i'm drawing it
03:34 - to be a triangle
03:42 - so i very quickly just use the radius
03:45 - value that i was using for the size of
03:47 - the circle
03:48 - to set the points of the three vertices
03:51 - of a triangle
03:55 - there's lots of different ways you could
03:57 - do that but i'm just saying negative r
03:59 - negative r for this point negative r
04:01 - positive r for this point
04:03 - and r comma zero for this point so not
04:05 - drawn exactly to scale but that's a
04:07 - quick way
04:07 - to make a triangle based on one single
04:09 - value i can add back in rotate by the
04:12 - angle
04:14 - and you can see now these triangles are
04:16 - spinning according to the
04:18 - arbitrary angular motion algorithm that
04:20 - i did in the previous video
04:22 - but that's irrelevant here so i can
04:24 - comment all of that out
04:27 - and ultimately i just want the angle to
04:29 - be
04:32 - the heading of the velocity
04:37 - i also just made a quick adjustment to
04:40 - say
04:40 - to like have this point be halfway down
04:44 - and this point be halfway down
04:45 - so that the triangle is a bit more
04:47 - elongated because i could see
04:48 - if it's really pointing in the right
04:50 - direction and you can see that here
04:52 - right now
04:52 - that it is this is where i'll stop for
04:54 - this example you can imagine
04:56 - the possibilities of where you might
04:57 - apply this in different projects that
04:59 - you're created and working on
05:00 - but before i go i do want to mention
05:02 - that the inverse is also true
05:04 - right here i'm getting an angle from a
05:06 - vector but i can also if i had an angle
05:10 - i can make a vector from that angle
05:13 - there is a way to do this
05:15 - with something known as polar
05:16 - coordinates and sine and cosine
05:18 - but i can also use a function in p5
05:22 - called
05:22 - from angle
05:28 - this is an example of another static
05:30 - function you can go back and look at my
05:32 - video on static functions with p5 vector
05:35 - but i can make a vector from a
05:37 - particular angle
05:38 - this is really useful if you want to
05:40 - build a sketch where maybe you're using
05:42 - the arrow keys
05:43 - to drive a object around
05:47 - the canvas to quickly demonstrate this
05:49 - this is my
05:50 - mover sketch from chapter two the only
05:53 - thing that i've done differently here
05:54 - is change the drawing of it as a circle
05:57 - to a triangle and i've eliminated
05:58 - gravity so i've taken that out
06:00 - so there's no acceleration the object is
06:02 - not moving
06:03 - what if i just override the concept of
06:06 - acceleration
06:06 - and set the velocity to a manual vector
06:11 - if i were to set it as a vector one
06:13 - comma zero you can see
06:14 - it's moving to the right if i change
06:17 - that vector to one comma one
06:19 - it's moving down now i need to also add
06:22 - rotate by that angle and now we can see
06:26 - it's pointing in the direction and it's
06:27 - moving
06:28 - but what if i want the angle to be the
06:30 - starting point of where it moves
06:32 - i can say p5 vector
06:37 - from angle this dot angle so now i
06:40 - create the vector
06:41 - from whatever that angle might be so if
06:44 - i were to make that
06:45 - angle pi divided by 4 we can see
06:48 - now it's moving at a 45 degree angle
06:50 - what if
06:51 - that angle as it moves changes
06:55 - now it's moving in a circle maybe i
06:59 - increase
07:01 - the magnitude of the velocity and it's
07:03 - moving in this kind of circular pattern
07:05 - because it's always
07:06 - turning the angle is always turning what
07:09 - if i were to
07:10 - change the angle according to key
07:12 - presses
07:14 - for example in draw i can say if key is
07:18 - down
07:25 - based on whether i'm pressing the left
07:27 - arrow or the right arrow i can adjust
07:29 - the
07:30 - angle let me slow it down again to make
07:32 - this easier to demonstrate
07:36 - oh i did it in the wrong direction once
07:38 - again because
07:39 - i'm pressing you can't see which key i'm
07:41 - pressing but left i actually wanted to
07:43 - rotate
07:44 - counterclockwise so left should be a
07:46 - negative angle
07:47 - right should be a positive angle and
07:48 - that was kind of a lot to turn
07:52 - i can drive this object around
07:55 - the window so what i'm emphasizing here
07:58 - is that the angle is both something that
08:00 - can come from the velocity from a vector
08:02 - if we're calculating the vector based on
08:04 - some kind of algorithm
08:06 - or i can define a vector based on that
08:08 - angle
08:09 - and i'm going to unlock this even more
08:10 - in the next video and look at sine and
08:12 - cosine
08:13 - so here's an exercise you could try this
08:15 - is pretty difficult i think
08:17 - but i've shown you in this example right
08:18 - if i go back to the mover's code
08:20 - how to get the velocity from a
08:23 - particular angle that i'm
08:25 - manipulating with the arrow keys well if
08:27 - you've ever played the game
08:28 - asteroids you might recall that as you
08:32 - turn the object you can then apply a
08:33 - thruster which will push it
08:35 - as if there's a force being applied to
08:37 - it in a given direction
08:39 - it looks exactly like this so here i can
08:41 - use the arrow keys
08:43 - to turn this object when it's pointing
08:45 - in a given direction i can press z
08:47 - to push it in that direction notice it's
08:49 - not necessarily
08:50 - moving in the direction that it's
08:52 - pointing but i can apply
08:54 - a force in the direction that it's
08:56 - pointing
08:57 - so how can i turn an angle into an
09:00 - acceleration vector
09:01 - that's how it works in asteroids so of
09:03 - course i've linked to this
09:04 - example also in the video's description
09:07 - but this might be something before you
09:08 - look at that you try to see if you can
09:10 - implement yourself
09:11 - as well so hopefully this gives you a
09:13 - little bit more understanding of how you
09:15 - can work with angles
09:16 - in the rotation of an object that you're
09:18 - drawing in a canvas
09:20 - and in the next video i'm going to go
09:21 - even further with this by looking more
09:23 - closely at
09:24 - sine and cosine themselves and a concept
09:26 - known as polar coordinates
09:28 - see you there
09:38 - you