00:00 - hello welcome to another coding
00:03 - challenge this is a coding challenge as
00:05 - part of my programming with text stuff
00:07 - and I'm going to attempt to do something
00:09 - that I actually didn't I knew about this
00:11 - before but I'd forgotten about it
00:12 - someone in the chat during one of my
00:13 - live streams mentioned it so I'm going
00:15 - to attempt in this video to program
00:17 - what's called an acrostic I went to ten
00:24 - I like tying that with the zoom thing
00:25 - but that didn't really work so what is
00:27 - an acrostic an acrostic is a poem or
00:30 - other form of writing in which the first
00:32 - letter or syllable interesting enough of
00:34 - each line spells out a word message or
00:37 - the alphabet so what I want to do and
00:39 - I'm gonna just come over the whiteboard
00:40 - to explain this is like if we have a
00:42 - certain word like mango I can't believe
00:47 - I didn't use rainbow or blueberry
00:49 - blueberry rainbow or unicorn but then I
00:53 - want to have a poem where the first
00:56 - sentence is like my beautiful flower
01:01 - always smells nice and oh that's fine it
01:14 - starts I have no ability to be creative
01:20 - and think with words it's just not with
01:22 - me but you will do something better and
01:23 - plus we're gonna ask the computer do
01:24 - this anyway so now I think there's a lot
01:26 - of interesting questions about this what
01:27 - I want to do is create a webpage that
01:30 - has a text input box so the user could
01:33 - type in a word and then get the acrostic
01:36 - coming down now across it can be a lot
01:37 - of things it can we to work with
01:38 - syllables the the actual like letter
01:41 - could appear in the middle of each
01:42 - sentence it could be highlighted there's
01:44 - so many stylish interesting things you
01:45 - can do but I'm gonna try to do something
01:47 - really simple I'm just gonna create a
01:49 - little poem as one word per line and
01:51 - each word starts at that Leonard no it's
01:53 - not it seems like it's not a lot but I
01:55 - think we're gonna get some good
01:56 - JavaScript HTML Dom manipulation stuff
01:59 - maybe I'll use the word Nick API to find
02:02 - words that start with a certain letter
02:04 - and then you after watching this video
02:06 - can improve on this and make a more
02:07 - creative version that does something
02:09 - more style
02:09 - listicle animates are actually has think
02:12 - about ways that you might use oh I could
02:15 - have done something like a Markov chain
02:16 - I this Markov chain videos to like
02:18 - generate the text that starts with a
02:20 - given letter some kind of white there's
02:22 - a word I'm not allowed to say anymore
02:23 - because it makes everything crash its
02:26 - rhymes with machine burning but I can't
02:30 - say it's the topic that shall not be
02:33 - named but you could use that to like
02:36 - some kind of it rhymes with maccer n't
02:40 - rural wet work anyway on to the coding
02:46 - so you could read more about across
02:48 - dicks here obviously on the Wikipedia
02:50 - page you can see a nice example here and
02:52 - I already have open the word Nick
02:55 - developer API cuz I thought while ago
02:57 - that I was going to use it so let's get
02:59 - started the first thing we need to do
03:01 - and I've got some code here there's
03:05 - nothing in this what I want to do is
03:06 - first at least add I'm gonna cross stick
03:09 - a header in the HTML page then I want to
03:12 - make a little paragraph and I want to
03:14 - make what do you call this thing input
03:19 - word let's do it
03:22 - I can't even remember I haven't coded in
03:25 - so long I don't even remember what the
03:26 - stuff is but hopefully this is gonna be
03:28 - right let's look at our web page now
03:31 - there we go so the idea here is that I
03:34 - type in a word like mango or a unicorn
03:37 - who would be cool actually if it's
03:39 - constantly generating the acrostic as
03:41 - you're typing so it's like actually
03:43 - generating with each letter each letter
03:44 - you delete but let's not do that on the
03:45 - fly let's have a submit button and let's
03:48 - add a button and say submit button so
03:53 - now we have the submit button the idea
03:56 - here is that I'm gonna say unicorn and
03:59 - I'm gonna hit submit and I'm gonna see
04:01 - my across the cure that's very hard for
04:03 - you to see this tiny tiny tiny tiny
04:04 - stuff but now you can see that it's
04:06 - bigger okay so we've got the web page
04:07 - and of course you as the viewer of this
04:09 - video can make it much more beautiful
04:11 - and interesting interactive web page
04:13 - that gets the word in a different way
04:14 - but this is where I'll start next what I
04:18 - need to do
04:19 - is oh you know I'd be interested we
04:22 - could use the kit well we're not gonna
04:22 - use canvas I'm using the p5.js library
04:25 - as I often do but I'm not gonna use
04:27 - canvas so I'm gonna say it's for any
04:29 - kind of like drawing or animation but
04:30 - you might want to I'm gonna say no
04:32 - canvas no cameras no it's like oh that's
04:41 - very not very nice
04:42 - I like say yes whenever possible I like
04:44 - to say yes if you can say yes say yes
04:46 - what is this crazy do you guys see
04:48 - what's going on here the like there's
04:51 - some kind of like goes to the machine
04:53 - like that's really weird what is going
04:56 - on okay
04:58 - so Adam was going crazy I am now trying
05:00 - for the first time ever visual studio
05:02 - code which is an open source code editor
05:04 - I think by from Microsoft anyway you can
05:06 - look that up on your own I'm gonna give
05:08 - that a try and save this file I'm gonna
05:10 - hit and things are still working so what
05:12 - do I need to do I first need to get
05:14 - access to when a user clicks the button
05:17 - and when they click the button
05:18 - what word they've typed in okay so what
05:21 - is that I'm gonna do something really
05:24 - crazy for the first time ever on my
05:26 - youtube channel net button equals select
05:33 - submit so there's a couple things now I
05:36 - made a video tutorial about this new
05:40 - keyword in JavaScript yes six version of
05:44 - JavaScript called let I'll summarize it
05:45 - for you instead of bar type let now I'll
05:48 - get I'm gonna make another video which I
05:49 - will put a link to in the description of
05:51 - this video when I make it to talk about
05:52 - what is let why might you use instead of
05:55 - bar but right now let is bar bars let
05:57 - far as let let his bar bars let let his
05:59 - bar okay but what I'm doing is I want to
06:01 - select that's a mid button now this is a
06:05 - hash our pound submit means I need that
06:08 - submit button to actually have an ID
06:13 - submit and I want the input to have an
06:17 - ID I'll call that word let me just call
06:19 - it a word input
06:24 - and I'm gonna call this submit button
06:27 - just to be overly verbose so now I'm
06:29 - gonna select submit button and I'm gonna
06:34 - say let input equals select there's so
06:41 - much autocomplete but if this text ed
06:43 - there's word input I might have to turn
06:46 - that off at some point but okay so now I
06:48 - have my two elements that are on the
06:50 - HTML page that I can start to get
06:51 - information from for example when I
06:55 - press the button on the mouse I want to
06:57 - make an acrostic so I'm gonna write a
07:01 - function make a cross make make acrostic
07:06 - so this here in case you're wondering
07:09 - when I this is p5.js sent a function in
07:13 - p5 stages it's yes when I press the
07:15 - mouse on the button call the function
07:16 - make acrostic here's the function make
07:18 - acrostic the first thing I just want to
07:20 - do is say let word equals word input dot
07:25 - value there we go so I am getting
07:28 - whatever somebody typed in and I'm going
07:30 - to console dot log word now I'm gonna
07:34 - hit refresh and here we go
07:37 - oh my sound effect board died that's
07:39 - fine rainbow submit Oh word input dot
07:45 - value is not a function hmm so what did
07:48 - I get wrong select word ah I called my
07:55 - variable input and the ID was word input
07:58 - so that's just supposed to be input
08:00 - there's a mistake that I made good for
08:03 - me type in rainbow again hit submit and
08:09 - there we go and now what they going to
08:10 - do to make development a little bit
08:12 - easier is I'm just going to in the HTML
08:15 - I'm going to say a value equals rainbow
08:19 - so that way when I load the page up it
08:23 - actually just fills in rainbow for me
08:26 - and I'm going to do something else when
08:29 - I load the page up I'm actually just
08:31 - going to call the function make acrostic
08:34 - so I don't even have to my arms are
08:36 - still sore that's a long story and
08:38 - probably
08:38 - videos about but that's why I don't have
08:40 - to press the button every time I load
08:41 - the page I could just hit refresh and
08:44 - it's running that acrostic functions so
08:47 - now we're set up but now comes the
08:49 - actual harder part what I need to do is
08:53 - look at the each letter one at a time
08:55 - and start a new line of a poem with that
08:59 - letter so how do I iterate over each
09:01 - character of a string that's not so not
09:05 - something I can definitely manage a VAR
09:07 - Oh call the emergency es6 train for nut
09:15 - I equals 0 I is less than word dot
09:19 - length I plus plus now I'm going to say
09:24 - mmm what should I do
09:26 - let's make a div for each one I don't
09:29 - know there's lots of different ways I
09:31 - could think about creating each line I'm
09:33 - gonna just do it as a div creative word
09:36 - car at O so word yeah car at I so now if
09:45 - I do this we can see there is your
09:48 - concern I can move this over here so I'm
09:50 - not standing in front of it there is the
09:52 - beginning as my acrostic rainbow if I
09:55 - type in mango mango mango so really all
10:01 - I've done so far is have a text input
10:04 - field of button and I could then look at
10:07 - each letter one at a time and put them
10:08 - on a separate line because each one is a
10:10 - separate div okay now I'm gonna have to
10:14 - be a little bit clever probably about
10:16 - how I organize these lines and all that
10:17 - sort of thing but now here's what I want
10:20 - to do instead of just putting the letter
10:22 - what I want to do is go and make write a
10:26 - line of poetry that starts with that
10:28 - letter and again instead of a line of
10:30 - poetry I'm just gonna have one word that
10:32 - starts with that letter so how do I get
10:34 - a word that starts with that letter
10:35 - well there's any number of ways I could
10:38 - do that I could try it out writes an
10:39 - algorithm to make up a word I could load
10:41 - a text file and sort all the words in
10:43 - that text file in some kind of
10:45 - associative array Dictionary JavaScript
10:48 - object thing that keeps track of every
10:49 - word by letter and I've done that
10:51 - videos and that actually would be a good
10:52 - you should try that I'm gonna use the
10:54 - word Nick API word Nick is a API
10:59 - application programming interface a
11:01 - thing that your application can
11:02 - interface with via programming that's
11:05 - one way to think about it that has a lot
11:07 - of information about words it's like a
11:09 - big dictionary with lots of information
11:10 - that words and I can if I go to
11:13 - developer or Netcom and I go to Docs I
11:16 - can start to look at what are some of
11:18 - the things that I can ask word Nick one
11:21 - of the things that I can ask word Nick
11:22 - is give me some words and one of the
11:27 - ways I can ask for some words is by
11:29 - searching and one of the ways I can
11:32 - search is by search any words that start
11:35 - with a certain letter so I'm going to
11:37 - ask for words start with the letter R
11:41 - I'm going to I could say like only now
11:45 - so things could be interesting there
11:47 - this is interesting corpus count corpus
11:50 - count is a part of the word Nick API
11:52 - where to keeps this big corpus of lots
11:55 - of I think articles and books and things
11:57 - I could say well how common is the word
11:59 - like za would have a really high corpus
12:02 - count but fractional would have a lower
12:09 - corpus can't think of anything so I kind
12:13 - of actually want to have rare words I
12:14 - think it'll be more interesting so I'm
12:15 - gonna say somewhere the corpus count
12:16 - between 1 and 25 dictionaries may be a
12:20 - little bit different I don't have to
12:21 - read the documentation and minimum
12:23 - length let's not get one letter words
12:25 - let's at least have a six letter word
12:28 - and no maximum length and I don't really
12:32 - need to get ten words I'll just take
12:34 - whatever is first and I'm gonna now
12:36 - click try it out and I can see here I've
12:39 - got for our reiterate I don't know why
12:43 - it gave me a first search result with
12:46 - the letter R now if I do it again it
12:49 - doesn't seem to be random actually so
12:52 - maybe I do actually want giving it to me
12:55 - in some order or maybe there so let me
12:57 - ask for 10 and now I can get a bunch so
13:01 - I think I'm going to ask for a bunch and
13:02 - pick one random
13:03 - we provable rattlin road-book rootage
13:07 - red beat these are some great words and
13:10 - I can also by the way start to do all
13:13 - sorts of things like then ask word Nick
13:15 - for a sentence that uses that word and
13:16 - information about the etymology of that
13:18 - word probably but I'm gonna leave that
13:20 - again those are exercises that you could
13:21 - use to further expand on this so how do
13:24 - I actually get this well look this
13:26 - request URL and I have a whole set of
13:28 - video tutorials about working with api's
13:31 - and request your rels and how you do
13:32 - this and you can go back and review
13:34 - those I'll link to that in this video's
13:35 - description but all we need to know for
13:37 - this video is this request URL I'm gonna
13:40 - grab it I am going to copy it and I'm
13:44 - going to put it in my code I am going to
13:46 - say let URL equal this and I think it's
13:52 - wrapping the text so we're looking at
13:54 - this but the thing is I actually don't
13:56 - want it this is the thing that I want to
13:58 - change I want to make this same request
14:01 - but for different letters I'm gonna do
14:03 - something kind of silly let url one
14:07 - equal all the stuff in this URL up to
14:09 - here and then I'm going to say let URL
14:13 - to equal all the rest of it and by the
14:18 - way I need an API key so I really should
14:21 - go and sign up for an API key and I have
14:24 - one and I might pause this and at this
14:27 - video in a second to put what a working
14:28 - one in there but when I used word mix
14:31 - website it gave me a temporary API key
14:33 - just so I could like play around and
14:35 - learn how to use it so I'm gonna see if
14:37 - that still works so this is now the
14:39 - second part of the URL and so now when I
14:43 - make for each one of these what I need
14:46 - to do whoo oh boy there's gonna be some
14:48 - tricky stuff here always tricky stuff
14:51 - let's just let's take a break from this
14:54 - algorithm for a second and just at the
14:55 - beginning let's say load JSON so load
15:02 - JSON is a function that allows me to
15:05 - load some data from API call a URL and
15:11 - I'm going to load the first half of the
15:14 - URL plus the letter R
15:17 - plus the second half of the URL I'm just
15:20 - getting you are now because what I want
15:22 - to do is this needs to eventually become
15:23 - dynamic like I need to get different
15:26 - letters yes okay okay okay let's edit
15:38 - that out perhaps so then when I load the
15:43 - data from the API I need to write a
15:45 - callback function to tell me when that's
15:47 - ready so I'm gonna write this function
15:49 - I'm gonna say data got data okay so now
15:55 - I'm gonna say got data and what I'm
15:58 - going to do with is I'm gonna write a
16:00 - function I'm gonna call it got data I'm
16:05 - gonna get some data and I'm just gonna
16:06 - say console.log data so I just want to
16:09 - see now that this works with word mnek
16:12 - it's gonna go back to here and I'm gonna
16:16 - hit refresh oh I have an error sketch
16:19 - digest line - what's wrong here oh
16:22 - there's like an extra are here for no
16:24 - reason
16:27 - okay look total results 2308 search
16:33 - results here all the words are I don't
16:35 - know why r is one I guess it always
16:37 - gives you that first re-entry he read
16:39 - Litton great so I got that and I got 10
16:42 - there are two thousand three hundred
16:44 - eight possibilities so I should probably
16:46 - maybe I shouldn't give it a limit if I
16:49 - take the limit out maybe I'll just get
16:53 - all of them and I can pick a random one
16:54 - there might be a better way to do this
16:55 - there's probably way for me to ask for a
16:57 - random one through the way I form the
17:00 - query but let's do this anyway so now I
17:06 - got it just so lonely gave me ten I
17:08 - wonder if 10 is the maximum but I'll
17:11 - come back to that later maybe somebody
17:13 - in the chat will will tell me how to do
17:15 - this later I'm just going to get 10 and
17:17 - pick a random one okay so we know that
17:19 - works how's the thing I need to do this
17:23 - I need to do this load the JSON for
17:27 - every letter
17:30 - is every letter it is VAR o gonna load
17:39 - bar let letter equal word dot card at I
17:46 - then I want to create a div with that
17:50 - letter and then I want to load the JSON
17:52 - instead if the hard-coded R value I want
17:55 - to load the JSON with the letter so
17:57 - let's see how this goes and let's be a
18:00 - little let's be simpler here let's go to
18:02 - index of HTML and let's have it just do
18:04 - it for Bo Bo W let's just use it to it
18:07 - for three letters so look at this I got
18:11 - results now here's the thing did I get
18:14 - them in the order bo w this one is o so
18:23 - i got o first then i got w and ice can
18:28 - only assume the last one is b so here's
18:32 - the thing this is really key when
18:34 - working with api's and making multiple
18:36 - API calls everything in java is
18:38 - asynchronous meaning you don't your the
18:42 - code is gonna execute at some point
18:44 - later whenever the api has happened of
18:46 - return and that could happen in any
18:47 - given order no matter what order your
18:48 - ask for things in so i could do
18:51 - something where i asked for them ask for
18:54 - b and only when i get the results back
18:55 - then asked for o and only when i get the
18:57 - results at back then asked for w that's
19:00 - one option another option which i think
19:03 - i might like better is to instead keep
19:08 - track of what i'm asking for when it
19:10 - comes back just check what it was and
19:12 - then use that so this I think is what
19:14 - I'm gonna do alright actually one thing
19:16 - I should add to this is say skip equals
19:20 - one because what we know I noticed you
19:22 - that and thank you to the chat for
19:23 - helping with this word Nick is always
19:25 - returning just the single letters the
19:26 - first result which I might actually want
19:28 - to use to know which one came back but
19:31 - whatever I'm gonna put skip equal one so
19:32 - that I don't get it right now okay so
19:36 - now here's the thing let's make sure
19:38 - this still works
19:40 - okay got three results bo w now
19:44 - what I need to do is I want to keep
19:48 - track of this particular div so if I
19:51 - make this div let div equals create div
19:57 - then what I want to do is when this
20:01 - comes back I want to feed in the got
20:05 - data function which is up here and I'm
20:06 - gonna move this down now I'm gonna move
20:09 - this and just put it here so I can see
20:12 - it more clearly
20:13 - I want got data to know about this
20:16 - particular div and somehow say like div
20:19 - HTML and then you know something so I
20:23 - have to something out of the data
20:25 - so first let's get the date got data
20:27 - function to pick a random word so if I
20:30 - look at the actual data it's in a
20:32 - property called search results and it is
20:36 - a that's an array and I need to pick a
20:39 - random one so I'm gonna say VAR options
20:42 - equals data dot search results let let
20:48 - this is really really hard habit to
20:50 - break then I'm gonna say var let word
20:56 - equals random options so something nice
20:59 - that p5 does for you is with the random
21:01 - function you can pass in an array and
21:03 - I'll just pick a random one out of it
21:05 - and then console.log word so now if I
21:08 - hit refresh here mmm interesting I
21:15 - didn't do that CRO okay word okay so
21:18 - it's picking that is not an array of
21:21 - words it's an array of object each
21:23 - object has three properties one of which
21:25 - is actually the work the property of
21:27 - words so I'm gonna call this a selection
21:30 - and then let and then I'm going to say
21:32 - console.log selection dot word so now
21:36 - when i refresh this I get three words
21:38 - let's get rid of this it's saying we
21:42 - don't need console dot log acrostic and
21:44 - it's confusing that it's console logging
21:46 - buh let's get rid of that so I'm getting
21:50 - wo B I should get three different words
21:53 - each time some really interesting weird
21:55 - words that I've never heard of before
21:56 - okay oblige mint wolf tap barrenly okay
22:01 - so now we've got our words but I want
22:05 - those words to know which did to go into
22:08 - so they go in the right order and then
22:10 - eventually I'm gonna want to highlight
22:11 - the character and I you may need spans
22:13 - who knows what I'm gonna need but let's
22:14 - let's try this okay but I really haven't
22:20 - coded for like two months this is crazy
22:21 - okay I think what I need is a closure so
22:26 - what I want to do is I'm gonna say pick
22:29 - word and I'm gonna say div and then I'm
22:34 - gonna pass it the URL so I'm gonna write
22:36 - a separate function called pick word and
22:40 - I'm gonna pass that function the div and
22:43 - the URL which sort of lets me pair those
22:46 - two things together and they can always
22:48 - live together so that when the URL gets
22:51 - back gives back data it can go with the
22:53 - div bear with me and I have a couple
22:55 - videos about closures and doing this
22:57 - I'll reference those in this video's
22:58 - description so now I could take this
23:00 - load I can basically rename I could
23:03 - write a new function called pick word
23:08 - and what does it need it needs a div and
23:11 - maybe that shouldn't be added should be
23:13 - like an element I might not need to be a
23:15 - div later and it needs a URL the great
23:19 - comment came from the chat which it
23:21 - probably makes more sense for this pick
23:23 - word function actually to include the
23:25 - letter to just receive the letter and
23:28 - have this work of the URL formation
23:32 - happen in the pic word function so I'm
23:34 - gonna change that and then I'm gonna say
23:36 - let URL equal this and then I'm gonna
23:40 - say load JSON from the URL got data this
23:47 - is what I had before however what's new
23:50 - now is that the callback is enclosed is
23:54 - in a closure is enclosed inside this
23:56 - outer function so that instead of
23:58 - console logging selection dot word I can
24:02 - say div dot HTML it's that specific div
24:04 - that came into the pic were done
24:06 - div dot HTML selection
24:09 - worked so now here we go
24:14 - Volney Oh obscene or whimsical this
24:18 - breckel loose pours whimsical miss and I
24:21 - can try doing rainbow oops oh wait a
24:25 - second aah Oh No Oh interesting
24:27 - ooh I love that what's kind of fun about
24:29 - that is it was sort of accidental let's
24:31 - take out now the thing that does it
24:33 - automatically so I don't want to like
24:35 - have it do it automatically and it's
24:38 - kind of interesting to do it with a
24:39 - longer word so let's go back to my hold
24:43 - on I lost my here we go
24:46 - let's go back to putting in rainbow here
24:52 - now I actually have to submit take a
24:54 - look here do you see how it filled it in
24:57 - slowly because all those are having
24:58 - asynchronously it put me those letters
25:01 - there immediately now if I didn't want
25:02 - it to do that I could actually just
25:05 - create those divs as empty so I could
25:11 - create an empty div with no content so
25:16 - then I might see them fill in but I
25:19 - wouldn't see them fill in I mean you
25:20 - know I could retrieve I there's so many
25:22 - ways I could animate this or do it
25:23 - differently so here's the thing this is
25:26 - my acrostic coding challenge finished
25:29 - we're gonna read this poem road-book i
25:32 - gret is prob nick not ticked lu copied
25:35 - Iseman Obachan wire rod here's what I
25:38 - would like any of you who are watching
25:40 - or interested to try to do share with me
25:42 - at Schiffman on twitter in the comments
25:44 - next time I do a live stream I'll share
25:47 - some of your results this code will get
25:48 - posted look at the digit for the code
25:50 - but a couple things do this so that the
25:52 - first letter is highlighted how can you
25:55 - make the first letter bold or
25:56 - capitalized to highlight it in some way
25:58 - how could you make this more poetic so
26:01 - that you get a full sentence here and it
26:03 - reads more like a poem and another thing
26:05 - you might think of as what if the
26:06 - acrostic isn't so simple and I'm gonna
26:09 - just Google acrostic for a second
26:11 - because I know an example will come up
26:13 - if I do this images maybe where the the
26:20 - letters don't necessarily have to be the
26:21 - first letter so how would you create
26:23 - something and line it up like this and I
26:25 - could always come back into a part two
26:27 - to this coding challenge if people are
26:28 - really interested but I'm gonna leave
26:30 - yeah I think I better close this window
26:32 - before I get something I don't want to
26:33 - see but this is the basic idea
26:36 - I get user input a word I know in the
26:39 - users hit a button I look at each letter
26:42 - individually I go out to an API but I
26:45 - could have used other data sources look
26:46 - up my Markov chain stuff to generate a
26:49 - context-free grammar maybe parts of
26:51 - speech tagging read attach as tutorials
26:53 - are lots of other my programming with
26:55 - text tutorials to think about ways you
26:56 - can make this more poetic visualize in a
26:59 - different way and that sort of thing I'm
27:01 - being told in the chat that maybe the
27:03 - max limit for the word Nik API is 125 oh
27:06 - and there's a bug when I hit submit
27:08 - multiple times it's not really a bug it
27:10 - just does it again so that's something
27:11 - you could fix you can have an erase
27:13 - worth there before or put a nice break
27:15 - in between them or something like that
27:17 - okay thank you very much this is gonna
27:21 - be irrelevant in the future when we're
27:22 - all just like brains floating in some
27:25 - sort of goo but this has been the first
27:28 - coding challenge I've done after a long
27:29 - time after I had a broken elbow accident
27:32 - and it's great to be back thank you for
27:34 - watching so I probably was a little off
27:35 - my game here if you're actually still
27:37 - watching this and thank you and I
27:39 - appreciate it see you on the next coding
27:41 - train
27:46 - [Music]