00:00 - hello welcome to a very special guest
00:02 - tutorial on the coding train I don't
00:04 - have my train whistle oh well this guest
00:06 - tutorial is going to be about the
00:08 - connect this connect to so this tutorial
00:11 - is designed does it work with also the
00:12 - connect one no only the connect 2 and
00:15 - the guests that I have to present about
00:18 - the connect 2 and this project called
00:19 - connect Ron is Lisa Jam Cory now Lisa is
00:23 - a graduate of ITP the program where I
00:25 - teach she's also a researcher there
00:27 - she's an artist
00:28 - there will be links to more information
00:30 - about her work and her website in this
00:32 - video's description most of her research
00:34 - is around the body and movement and
00:36 - gesture and all the kinds of things that
00:38 - you can do with this connect and this is
00:40 - her open source project called the
00:42 - connect Ron originally developed started
00:44 - with sean vann every who also teaches
00:46 - here at ITP and lisa has been working on
00:48 - this project for two years now and it's
00:53 - gonna talk to give you an overview of
00:54 - how it works and write a little bit of
00:55 - code in p5 it's open source if you're
00:58 - interested in contributing more
01:00 - information about that in the video's
01:02 - description and also lisa is currently
01:04 - researching what other types of depth
01:06 - sensors might work well with this
01:08 - connector on software given that the
01:10 - Microsoft is no longer making this thing
01:11 - it so buy them and you can still use
01:13 - them we have a closet full from
01:14 - downstairs ok so I hope you enjoy this
01:17 - guest tutorial from Lisa and again all
01:21 - the information in the video description
01:22 - and if you have any questions ask them
01:24 - in the comments thanks so much well
01:27 - thank you so much Dan for having me it's
01:29 - really an honor to be here today on the
01:31 - coding train to talk with everyone about
01:33 - connect Ron Connect Ron is a open source
01:37 - tool to bring connect data from the
01:39 - connect v2 onto or into the browser so
01:43 - you can work with it in your favorite
01:45 - creative coding libraries like p5.js and
01:48 - 3j yes and all of the other things that
01:50 - you love to work with in the browser
01:52 - so I think a great place to start is
01:54 - just to get a basic understanding of how
01:56 - connect Ron works and so for that I'm
01:58 - going to hop over to the whiteboard so
02:00 - if you've worked with a connect before
02:03 - you and if you haven't that's completely
02:06 - great also but if you have worked with
02:08 - one before you're probably used to this
02:10 - type of setup where
02:11 - you have your computer and then you have
02:16 - a USB 3 cable connected to your Kinect
02:23 - right and and since the Kinect SDK is
02:30 - just available on Windows this would be
02:33 - a Windows computer or PC and and so once
02:39 - you have this connected and you're
02:40 - running whatever software you're used to
02:42 - running to get connect data then you
02:44 - have your live Connect data coming onto
02:48 - your screen from your Kinect right and
02:52 - then you have access to all these great
02:53 - things with the Kinect the connect to
02:56 - gets let's see where is a good place to
03:00 - write all right over here we get 625
03:04 - bone skeletons we get an RGB feed at
03:13 - 1920 1080 and also a depth feed which is
03:18 - 512 by 424 and then an infrared feed as
03:22 - well which is the same resolution as the
03:25 - depth so this one little camera gives
03:29 - just gives us all this great stuff which
03:31 - you get on your PC so that's the typical
03:34 - setup what connect Ron does is it takes
03:40 - this data and it broadcasts it out over
03:44 - the Internet so so let's imagine we have
03:48 - this set up but now we open the connect
03:52 - Ron server right so this is now running
04:00 - the connect Ron server and now this is
04:03 - all being broadcast out so let's see
04:06 - like this right and that's working over
04:10 - something called web RTC which is just a
04:16 - group of protocols that allows you to
04:19 - send live data over the Internet
04:23 - so now
04:25 - you can have another computer over here
04:30 - that can listen and it can listen to the
04:34 - information that's coming over the
04:36 - network from the connector on server so
04:38 - this computer is now running the
04:40 - connector on API which is just a
04:47 - JavaScript library that you run in your
04:50 - browser so you run it in something like
04:52 - Google Chrome and because it's running
04:54 - in the browser and it's and you don't
04:57 - actually have the connection connected
04:59 - to this computer this can actually be a
05:01 - Mac or a PC and then in real time it can
05:08 - just listen for that information and
05:10 - draw the connect data here at the same
05:13 - time so that's sort of the very very
05:17 - basic part of Connect Ron but then
05:20 - what's really exciting is this is
05:22 - actually two-way communication WebRTC
05:24 - allows for data to go both directions so
05:28 - this computer actually has the ability
05:30 - to talk back and forth with the connect
05:34 - Ron server so now this computer can get
05:40 - the get the data from the connect and
05:41 - display it but it can also change like
05:46 - ask for different things from the
05:47 - connector control to connect over the
05:50 - over the connection so for example maybe
05:55 - right now it's streaming the body data
05:57 - the skeleton data but this computer can
06:00 - stay to this connect over a distance you
06:02 - know I don't want the body anymore give
06:04 - me the RGB or maybe it doesn't want that
06:08 - anymore maybe it wants the depth feed so
06:10 - it becomes in a way like a remote
06:13 - control for this connect right and so
06:15 - this connect maybe let's say this one is
06:18 - in New York City and this one's in LA
06:24 - this computer in LA that's not even
06:27 - connected to the connect can be
06:29 - controlling it across the country in
06:32 - real time and then what gets really
06:35 - exciting is that you can then actually
06:38 - have a second computer running the
06:42 - connector on API and this one can also
06:45 - be receiving data and displaying data in
06:48 - real time and it also has two-way
06:50 - communication and could be controlling
06:52 - that connect in real time and this one
06:56 - you know this one doesn't have to be in
06:57 - LA maybe this one's in San Fran and then
07:01 - maybe you have one more let's see if you
07:05 - can see it down here but you have one
07:07 - more and maybe this one also connected
07:11 - is in Chicago or let's go to Europe
07:15 - maybe this one's in Berlin right so now
07:18 - we have a number of different computers
07:22 - that have access to this connect around
07:24 - the world and they're able to get
07:26 - real-time data from that connect and
07:30 - then we can get really crazy and we can
07:34 - add in one more element which is another
07:39 - PC this one is connected over USB USB 3
07:45 - to another connect and this one is
07:50 - running the connector on server as well
07:54 - so this one will be connect on server
07:56 - number 2 and so this one's number 1
08:00 - right and so we have this other connect
08:03 - Ron over here and maybe this one is in
08:07 - Shanghai and this one can then broadcast
08:14 - out its signal as well and this computer
08:19 - can also be listening for this server so
08:22 - now we have the connected or from two
08:25 - different connects in two different
08:26 - locations in the same browser and this
08:30 - again is two-way communication so this
08:32 - computer which is in LA which is running
08:36 - the connect Ron API on a Mac can
08:41 - actually control these two different
08:43 - connects that are across the globe one
08:46 - in New York City and one inch
08:47 - and hi and then of course these other
08:51 - users or coders here in San Francisco
08:53 - and Berlin can connect into this one as
09:00 - well okay so now I'm over here with my
09:07 - PC and I'll just switch to the over
09:09 - ahead of you real quick so you can see I
09:11 - have my Kinect and it's the v2 the Xbox
09:16 - Kinect and it's connected just by a USB
09:20 - here
09:21 - yeah USB over here to my computer so
09:25 - really simple so now I'm going to come
09:30 - to the connector on website which is
09:32 - just connect on github I oh and go to
09:36 - getting started which explains how to
09:39 - set up the server and then what you
09:43 - would do at home if you're doing if
09:45 - you're following along is you would
09:46 - download this preview release which
09:49 - brings you over to github where you have
09:52 - a zip file to download I've already
09:54 - downloaded it and opened the zip file
09:57 - and inside there's this connector on
09:59 - application so I'll double click on that
10:04 - and I'll scoot it over here
10:10 - and so now connect Tron is running and I
10:15 - have access to all the feeds coming from
10:17 - the Kinect so there's Dan ok so you get
10:30 - a color feed then there's also the depth
10:32 - feed which this is a 8 bit depth and
10:36 - whatever's closer to the camera is
10:38 - darker and whatever's farther away from
10:41 - the camera is lighter and then there's
10:45 - actually a raw duck feed as well and
10:47 - this is a 13 bit depth so this is the
10:49 - full resolution of the depth that that
10:52 - the connect can see and then we have the
10:56 - tracked bodies so this is the skeleton
11:01 - that this is kind of like the bread and
11:03 - butter of Connect it has this amazing
11:05 - ability to pull out the joints of of a
11:11 - person into twenty five joints and it
11:13 - can find six people at once so I'm gonna
11:16 - click over here to all bodies and you'll
11:18 - see it's actually showing the same exact
11:19 - thing so the Kinect can see six
11:22 - different bodies at the same time and
11:25 - those are all piled together in one JSON
11:28 - object but sometimes you want all six of
11:32 - those bodies and sometimes you just want
11:34 - the single bodies that are being tracked
11:36 - by the Kinect and so that's what this
11:38 - tracked bodies option gives you then the
11:43 - last things on here are the infrared
11:47 - kind of those fun things with glasses
11:50 - the long-exposure infrared which is just
11:53 - the slightly more exposed infrared and
11:55 - then the key feed which this feed
12:00 - actually cuts out the RGB color of a
12:04 - body from the background this works like
12:06 - very well also when you have like a
12:08 - curtain or something in the back so it
12:10 - really cuts out the back but it's
12:11 - working pretty well here so then you can
12:13 - do fun things where you can layer a
12:15 - person in different scenes and stuff
12:17 - online and then the last feed here is
12:20 - our G B D and this one is actually
12:23 - taking the RGB feed and it's mixing in
12:26 - the the depth as the Alpha Channel so
12:30 - you can actually get both depth and
12:31 - color at the same time in one image
12:35 - amazing cool so we'll go back to the
12:41 - skeleton and then just real quick I
12:43 - wanted to walk you through the Advanced
12:45 - Options oh and I can't forget there's a
12:49 - record button here so you can record
12:51 - data coming in whether its skeleton data
12:54 - or the image data depth data and replay
12:57 - it back on your website later on if you
12:59 - don't want to be working with live data
13:01 - so here under Advanced Options there's a
13:05 - field here to be able to enter in your
13:08 - own peer server so connect works over
13:11 - peer j/s
13:13 - and by default it sets up a connection
13:15 - on your local network which is what
13:17 - we'll work on today but if you wanted to
13:20 - go out onto the World Wide Web and be
13:22 - able to work across continents like we
13:25 - were looking at on the whiteboard you
13:26 - would need to actually set up a peer
13:28 - server which is pretty straightforward
13:30 - but I'm not going to be able to go over
13:31 - it today because I just don't have
13:34 - enough time but that's where you would
13:35 - enter that information in then you can
13:37 - also change the sizes of your images in
13:39 - case you want them bigger or smaller
13:41 - need to make them smaller for your
13:43 - bandwidth or whatever and then finally
13:46 - there's an option here to block API
13:47 - calls so when we were looking at the
13:51 - whiteboard board before well maybe I can
13:54 - actually hop over there real quick back
13:56 - over here at the whiteboard you might
13:58 - remember we were talking about how all
14:00 - of these computers have the ability to
14:03 - have two-way communication between the
14:07 - the connect and and the API so that
14:13 - means that anybody who's listening to
14:16 - the connect can also be requesting
14:17 - things of the of the connection server
14:20 - so that's awesome but you may not want
14:23 - everybody like the person in LA and the
14:26 - person in San Francisco and the person
14:27 - in Berlin to all be able to make request
14:30 - to your server at the same time you know
14:32 - imagine if this one wants the skeleton
14:35 - wants the body is this one wants the
14:37 - depth speed and this one wants to RGB
14:38 - feed you're probably going to run into a
14:40 - little bit of an issue so that's what
14:44 - the block API calls is for if you just
14:46 - want to broadcast and you don't want
14:48 - anybody to be able to really access your
14:51 - connect and make any changes to it from
14:53 - abroad you can just block them by
14:55 - hitting this button or really them by
14:58 - hitting that button again so that's
15:00 - everything here on the server side and
15:04 - once this is up in running you can just
15:06 - walk away and program from another
15:08 - computer and that's what I'm going to do
15:10 - now I'm going to switch over to my Mac
15:12 - and I'm going to program on top of this
15:15 - okay so I'm back and I'm here now on my
15:19 - I've left my Kinect plugged into my PC
15:23 - which is running the connector on server
15:25 - and that data is now being sent over my
15:28 - local network here at ITP and so I'm
15:33 - gonna now program in the p5 alpha editor
15:37 - and to start I just I open up a new
15:40 - project here at alpha dot editor p5.js
15:45 - org and I'm gonna head over to the
15:49 - connect Ron documentation site and in
15:52 - the API getting started I'll just grab
15:54 - the the library reference to be able to
15:59 - include it here in my index file so I
16:06 - just cut and paste it here and now I
16:10 - have the connector on API included in my
16:12 - code so I'll head back over to sketch
16:14 - Jas and I'll start by saying by just
16:20 - creating a connector on variable and
16:22 - then in my setup Oh make my connector on
16:29 - a new connector on now just a note here
16:33 - the connect Ron will actually if I were
16:35 - coding on the same exact computer where
16:38 - my server is attached if I just declared
16:40 - that connector on like this with no IP
16:42 - address in it it'll automatically
16:45 - connect to my to the server that's
16:49 - running on the same computer but because
16:51 - they're running on two different
16:52 - computers I need to put the IP address
16:55 - here of my my connect Ron server so that
17:02 - is sure one seven two yeah six one six
17:09 - two one eight two 5.25 one no sorry you
17:20 - have to set up your own or maybe I also
17:22 - don't want for you to connect to and put
17:24 - it in there put it in the comments for
17:26 - you but so and this is the number that's
17:29 - right at the top of your connect Ron
17:30 - when you open it
17:31 - let's see actual
17:33 - I can show you here it'll be this number
17:36 - here at the top of your connector on
17:39 - server when you open it up so you just
17:41 - take that number and you put it here in
17:43 - quotes in your new connector on and then
17:47 - you make a connection to that server so
17:52 - connector on make connection and now
17:54 - we're connected then the last thing that
17:57 - I need to do is ask for a feed and so
18:00 - for this I'm going to ask for tracked
18:03 - bodies so I say connector on start track
18:07 - bodies and then I'm going to tell my
18:11 - program what to do with that connect
18:13 - data once it receives it and so for this
18:15 - I'll say draw a body and I'll write that
18:21 - function down here which is draw a body
18:23 - and then the data that comes in will
18:29 - come in as a body so let's just make
18:35 - sure that this is working before we go
18:37 - any farther
18:38 - oh console body no console.log and we're
18:42 - just gonna say here just to make sure
18:44 - it's working so let's see I'll hit play
18:46 - and if you can see down here in my
18:50 - console let's see I'm getting here here
18:53 - here here here here here can we see that
18:57 - yeah so so this tells us that we are
19:00 - receiving data and it's running that
19:02 - function every time that the data comes
19:05 - in from the server so that's great
19:06 - I now know that I'm getting my connect
19:09 - Ron data and so now I just need to do
19:11 - something with it
19:12 - so I'll do that by creating a for loop
19:15 - to go through all of the joints in the
19:17 - body and draw them to the screen so I'll
19:21 - create a simple for loop I is less than
19:27 - body joints which is the array of joints
19:31 - on each skeleton and the length of that
19:33 - and then I plus plus so iterating
19:36 - through all 25 joints and then I'm going
19:41 - to draw a circle
19:44 - for each of those joints and I'll put it
19:51 - at depth X and depth Y and then I'll
19:59 - make it ten by ten great and we'll make
20:07 - those red for now great so we'll run
20:16 - that and shipping can I make you dance
20:21 - around in front of my camera let's see
20:27 - they're getting you yes great so it's
20:31 - working but we have one problem we're
20:33 - drawing a background over top of of
20:36 - Schiffman so we're not gonna be able to
20:39 - see them so we need to move the
20:39 - background here actually and then the
20:45 - other thing that we need to do is scale
20:47 - the depth X and depth Y or the joints to
20:50 - the camera so let's see we'll make it
20:54 - scale to the side of the width and to
20:57 - the height of the canvas and so now
21:02 - there we go
21:03 - now we've got Schiffman dancing on
21:07 - screen amazing right great so that's
21:15 - connector on in a nutshell is just these
21:17 - couple of lines of code and you have
21:18 - access to all of the data on the Kinect
21:21 - so I guess that's it cool thank you so
21:27 - much Lisa for that wonderful tutorial
21:29 - about Kinect Ron and the Microsoft
21:30 - Kinect - which is the one that you
21:33 - should get if you want to try to run
21:34 - this software if you're interested in
21:37 - more the Kinect Ron website has a lot of
21:39 - documentation more examples that you can
21:41 - see here for p5.js there are also some
21:43 - 3j s examples that work with the 3d
21:46 - library for JavaScript ejs that you can
21:48 - find link to in this video's description
21:50 - so again if you're interested in
21:51 - contributing if you have some thoughts
21:53 - or ideas about what other 3d depth
21:55 - sensors might
21:56 - be good for Lisa to look into our
21:57 - research to keep the development of the
21:59 - connector ongoing feel free to write
22:01 - those in the comments and I'll see you
22:03 - in a future video goodbye
22:09 - [Music]
22:14 - you