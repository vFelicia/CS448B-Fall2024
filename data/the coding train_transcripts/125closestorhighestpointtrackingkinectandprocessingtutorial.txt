00:00 - hi in this video I want to look at an
00:03 - algorithm that lets you do the kinds of
00:05 - things like find the closest thing in
00:07 - the room or find I'm doing all sorts of
00:10 - like vogue poses find the highest thing
00:12 - in the room I don't know why I need to
00:14 - do that for the highest thing but
00:15 - whatever or and this is a similar type
00:19 - of algorithm if you've ever looked at
00:20 - like a color tracking algorithm find the
00:22 - brightest thing or find the most red
00:24 - thing in the room I like to refer to
00:26 - this as like the world-record algorithm
00:28 - which means like I've got to look at
00:30 - every single pixel and keep track of
00:32 - which pixel is the record holder and
00:33 - hold onto that record holder the closest
00:36 - thing the highest thing the most read
00:37 - thing and when I get to the end have
00:39 - that XY coordinate that I can use for
00:41 - something else so a lot of things that
00:43 - you might do with the raw depth data of
00:45 - the Kinect could involve this like if
00:46 - you know the person is always standing
00:48 - like this in a fencing pose what is
00:51 - where is their hand because their hand
00:52 - is always the closest thing or if you
00:54 - want to determine if a person is moving
00:56 - up and down how do you find the top of
00:58 - their head what's the highest thing
00:59 - within a given threshold so let me go
01:02 - over to the whiteboard for a second to
01:04 - just talk in generally speaking about
01:05 - how this kind of algorithm works and
01:07 - then we're going it in a couple
01:10 - different scenarios okay so as with just
01:14 - about everything that involves images
01:15 - and pixels or depth points you've got
01:18 - this grid right and the grid has a bunch
01:20 - of X's and a bunch of wise and there's
01:23 - always this loop all the examples have
01:25 - this for every X for every I look at
01:29 - every pixel I've got some glare here so
01:32 - hopefully gonna be able to see what I'm
01:33 - reading but if they shout at me just
01:35 - shout at your computer screen or ever
01:37 - you're watching this and I will
01:38 - hopefully hear you someday if you can't
01:41 - read what I'm about to write but but so
01:43 - the way that this works is you need to
01:45 - find the record holder so what let's say
01:48 - we wanted to find the the closest thing
01:53 - so remember the depth values are between
01:56 - 0 and 4500 so we could start by saying
02:01 - the initial record right the world
02:04 - record for the closest thing would be
02:07 - 4500 because that's the furthest back so
02:10 - any pixel that beats 4500
02:12 - is by definition the new record holder
02:15 - so we have to say something like if I
02:18 - have the current depth in a variable I
02:21 - need to say if that depth is less than
02:24 - the record then the record is now that
02:30 - depth so this is the core algorithm for
02:33 - every pixel is the first one beating the
02:35 - record it is that's the record holder is
02:37 - the next one beating that record no is
02:39 - the next one beating in that record no
02:40 - is the next one being that record yes
02:41 - okay that's the record holder and while
02:44 - we're doing this we could also keep
02:45 - track of you know the record X and the
02:48 - record Y so if we went every time we get
02:51 - that new record we store that X&Y so the
02:53 - time we get to the end of this loop in
02:56 - those variables are the X and y that win
02:59 - this record okay so to demonstrate this
03:03 - example now what I have is I've adjusted
03:05 - this example a little bit and what it's
03:08 - doing now is it's showing you both the
03:10 - depth image as well as coloring
03:13 - particulars of that depth image this
03:15 - pink color that are within this
03:16 - threshold so now I need to figure out
03:18 - what pixel in that threshold is perhaps
03:22 - a record holder of some sort of record
03:24 - so we'll look at the closest thing and
03:26 - also the highest thing and I'm pretty
03:27 - sure the closest thing is going to not
03:29 - work that well but the highest thing I'm
03:31 - hoping is going to work pretty well so
03:33 - let's do the thing that's not going to
03:34 - work as well first and let's just look
03:37 - at a little bit of what's changed in the
03:38 - code just to show you so first of all
03:40 - I'm looking at the depth image as well
03:42 - and then what I'm doing is if the pixel
03:45 - if this on depth value is in the
03:48 - threshold I'm setting that particular
03:50 - color to this pink value if or purple
03:53 - the hell you I don't know what color it
03:54 - is
03:55 - can't tell if it's not then I'm just
03:58 - pulling the color value from the depth
04:00 - image itself and updating the pixels and
04:02 - drawing the depth image so that is why
04:04 - you are seeing this particular result
04:06 - it's essentially what I had earlier in
04:09 - the previous examples with just also
04:11 - adding in those depth pixels instead of
04:13 - black so now we need to figure out this
04:15 - way about getting a record holder so the
04:18 - first thing we need to do is say what at
04:20 - the beginning what's the record distance
04:22 - I'm looking for the thing that's closest
04:24 - so the thing that's
04:26 - closest the record to start would be
04:27 - something really really high so the
04:29 - record would be 4,500 that's as far as
04:32 - it passes something is possible to be
04:34 - from the connect then I need the record
04:36 - X which will be at 0 and the record Y
04:38 - which will be at 0 so I want to test
04:40 - every pixel x and y if it beats the
04:42 - record if it does beat the record set
04:45 - our X to that new X and set our Y to
04:47 - that new Y and then draw a circle at
04:49 - that record value at the end so right
04:52 - here I'm going to check only inside the
04:54 - threshold you know in a different
04:56 - scenario where I had the connecting like
04:58 - an open space and a sort of flat wall
05:01 - and people just came into the middle I
05:02 - don't really need to do this Thresh
05:04 - holding thing because I'd but there's so
05:05 - much stuff in this room there's a desk
05:07 - there's computer there's a wall that
05:08 - it's not so I think using the threshold
05:10 - here helps it be a little bit more
05:12 - accurate so I could say if that distance
05:15 - is less than the record then the new
05:17 - record is that particular distance right
05:19 - for every single pixel does that pixel
05:22 - beat the record if it does I've got a
05:23 - new record and if it beats the record
05:26 - then I need to save that particular X&Y
05:29 - in our X and our Y so all we need to do
05:32 - this kind of record algorithm is a
05:33 - starting record starting our X and our Y
05:36 - and then every time we beat that record
05:38 - save those two values and then at the
05:42 - end I can draw a circle at our X and our
05:45 - Y and I'll just make that circle white
05:49 - so it kind of we pick it up and we can
05:52 - see now ok now first of all you can see
05:54 - that circle is just jumping around
05:55 - that's because first of all there's very
05:57 - little that's like stray pixels that are
05:59 - that are making it in the threshold so
06:01 - now you can see that it's kind of
06:03 - working now you can see that white
06:05 - circle is following my hand now notice
06:06 - this is much less accurate than what I
06:08 - did before with the sort of average
06:09 - section of pixels mostly because anytime
06:12 - you're looking for a single pixel it's
06:14 - not such a great thing I kind of want to
06:16 - find a group of pixels that are like
06:17 - beating that record but that aside you
06:20 - can see the basic idea is working but
06:22 - it's really like if I come and stand in
06:24 - here like oh there's a lot of me that's
06:26 - in the threshold but my head actually
06:29 - I'm bending over is closer so you can
06:31 - see if I move my hands out they're a
06:32 - little bit closer if my shoulder comes
06:34 - in my shoulder is the closest thing so
06:36 - you can see it's jumping around a lot
06:38 - but it's always finding
06:39 - a particular pixel that is closest to
06:41 - sort of demonstrating the idea but let's
06:44 - change it now let's have it fine I'm
06:46 - going to stand here to sort of let's
06:48 - have it find the pixel that's highest
06:50 - and I'm a little worried we're gonna
06:52 - have a little bit of an issue because
06:53 - you can see something jumping to the top
06:54 - but let's see because there might be
06:56 - some stray pixels that is picking up
06:58 - that are kind of but let's see if we can
07:00 - get it to work so what is the record now
07:03 - so the pixel that is highest is could be
07:07 - zero the record would start at the
07:09 - height of the screen so I'm going to
07:11 - comment this out I'm going to leave both
07:14 - of these in this example I'll try to
07:15 - post this code somewhere we could
07:16 - download it put a link in the video
07:18 - description so the record would now be
07:21 - the height of the window or I could
07:23 - really say it really makes sense here to
07:26 - say depth height so that's the starting
07:29 - record and now if inside this threshold
07:34 - distance that's not the depth what I
07:37 - want to know is if Y beats that record
07:39 - so if this particular Y pixel is just
07:43 - I'm looking for any pixel inside that
07:44 - threshold that's very high then I've
07:47 - beaten that record so record equals that
07:50 - Y value save this save the X and the y
07:53 - and then draw it so the same exact idea
07:56 - I'm just changing what the test is like
07:58 - the height is the Y value if it's less
08:00 - than that record so now we run this and
08:02 - we can see it's picking up a lot of
08:05 - noise but if I come in and bend down so
08:07 - there's too many pixels up top you can
08:10 - see that it's flickering there's too
08:12 - many pixels up top that are pulling up
08:13 - some sort of value so I'm going to try
08:15 - to do like a little bit of a hack here
08:17 - again we're going to say and was it
08:20 - let's skip let's skip the first like 50
08:23 - pixels I'm only going to look let's see
08:26 - if this helps there we go
08:29 - so now you can see I'm getting the top
08:30 - of my head pretty accurately if I move
08:32 - my hand up here I'm getting the top of
08:34 - my hand so if I had a particular project
08:38 - that wanted to have something move based
08:40 - on whether I'm moving up and down this
08:41 - is going to do some X squats here you
08:44 - can see that this works so you know I
08:46 - had to sort of like calibrate and do
08:48 - some goofy things but you can see this
08:49 - is a very simple
08:51 - way of just finding the top so like
08:52 - people always get obsessed with like
08:53 - finger tracking like let me find the
08:56 - finger but you can see how accurate this
08:57 - is I'm just getting like the tip of my
08:59 - finger now there's no finger tracking
09:00 - here just like if I go like this it's
09:02 - getting the top of my elbow but if you
09:03 - tell people to stand like this and wave
09:04 - their finger you can see how like kind
09:06 - of super accurate that tracking is just
09:08 - for looking this is like the simplest
09:10 - thing ever I'm just looking for the top
09:12 - pixel inside this threshold so hopefully
09:15 - this shows you a few types of things you
09:17 - can do we've seen a range of things just
09:19 - sort of visualizing the 3d data from
09:22 - like looking for threshold to get in
09:23 - between for tracking the height of
09:25 - something the average location um this
09:28 - is where I'm finishing this video set
09:30 - today but there will be some more ones I
09:32 - guess who knows when you're watching
09:33 - this the more ones might already exist
09:35 - the more ones and you'll see them in the
09:37 - next video
09:38 - okay so thanks for watching this I'll be
09:41 - alright that and I will talk to you soon
09:43 - okay good bye