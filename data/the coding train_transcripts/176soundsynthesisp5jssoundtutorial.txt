00:00 - hello welcome to a video tutorial about
00:03 - sound synthesis in the browser using
00:06 - JavaScript using the p5js sound library
00:09 - now this is a uh one part of a
00:11 - continuing series about uh programming
00:13 - with sound and what I'm going to do in
00:15 - this particular video which is quite
00:16 - different from my previous four videos
00:18 - is instead of loading a sound from a
00:20 - file like some
00:22 - music or perhaps playing a sound effect
00:25 - like good rbow what I'm going to do is
00:29 - instead create in a way sound from
00:31 - nothing sound synthesis now of course I
00:33 - could do sound synthesis
00:35 - myself me me me okay I can't sing it's
00:38 - terrible um but this is the idea my
00:40 - vocal cords are vibrating and they're
00:43 - creating a vibration that vibration is
00:45 - traveling through the air uh and it's
00:47 - actually going into a microphone the
00:48 - microphone reads that vibration records
00:50 - it then it's coming out of the speaker
00:51 - of your computer which is vibrating and
00:53 - then traveling again through the air and
00:54 - eventually into your ear so this idea of
00:57 - a sound wave is something we need to
00:58 - talk about this wave that travels
01:00 - through the air how can we in code
01:02 - synthesize that wave create a sound and
01:04 - then control that wave to essentially
01:06 - play A Melody play a tune allow create
01:08 - an interactive piano all these types of
01:10 - things are possible with what I'm going
01:12 - to show you how to do so the first idea
01:14 - is really to think about a sound wave so
01:16 - let me um let me come over here and
01:19 - there are a couple key Concepts which I
01:20 - think are quite important so what I'm
01:22 - going to draw for you here is something
01:24 - called a sine wave now I'm sure I am not
01:26 - drawing this exactly correctly but if
01:29 - you take the sign function the sign
01:32 - function being a function from
01:33 - trigonometry where is if you have a
01:36 - triangle and you take s of theta it
01:39 - equals the opposite the length of the
01:41 - opposite side of the triangle divided by
01:43 - the hypotenuse of the triangle so you
01:45 - can go and look at all my trigonometry
01:46 - and triangle tutorials and stuff
01:48 - somewhere else that's not really
01:49 - relevant for here what's interesting is
01:51 - if you if you think of this angle as a
01:54 - value that's changing over time and we
01:56 - to graph that you're going to see a wave
01:57 - pattern like this so it's a perfect
02:00 - symmetrical repeating wave form a s wave
02:03 - and if that s wave travels through the
02:05 - air you're going to hear a tone now a
02:08 - wave has certain properties one property
02:11 - is amplitude so if we can look at this
02:13 - is like the top of the wave and this is
02:15 - like the bottom of the wave and you can
02:16 - think of that height as something called
02:20 - uh amplitude so the height of the wave
02:22 - and now the height of the wave is
02:24 - actually is actually a volume so the
02:27 - higher the wave the louder the sound the
02:28 - amplitude ah I mean I'm sure there's
02:30 - like a very fine nuanced scientific
02:33 - distinction between those terms but we
02:35 - can think of it for right now somebody
02:36 - will yell at me in the comments in the
02:38 - chat and I'll feel very embarrassed and
02:39 - sad and that I got everything wrong but
02:41 - anyway so amplitude that's the height of
02:42 - the wave now another key part of the
02:44 - wave is something called period so
02:47 - period and I'm going to uh like this is
02:50 - the amount of time or the length between
02:54 - of the length of a full cycle of the
02:56 - wave so you can see from here this top
02:58 - of the wave all the way here is one full
03:00 - cycle that just repeats over and over
03:02 - again how long it took for that cycle is
03:04 - the
03:05 - period um and in the case of sound we're
03:07 - really thinking about time and seconds
03:09 - how many that that wave like how long
03:11 - did it take for that wave form to um to
03:13 - wave so to speak now one divided by
03:17 - period one over period is a term called
03:21 - frequency meaning not how long for one
03:23 - cycle but how many cycles per second and
03:26 - this is actually a measurement you've
03:27 - probably heard uh Herz so if something
03:30 - is 60 hertz that's a frequency of 60
03:34 - cycles per second and this is key
03:36 - because what we're going to do is set
03:38 - we're going to create a wave with code
03:40 - we're going to set its amplitude we're
03:42 - going to set its frequency as a value in
03:44 - hertz and then listen to it so these are
03:47 - the concepts what I want to do now is
03:48 - look at how do I in JavaScript create
03:51 - this waveform and control its amplitude
03:54 - and frequency okay let's go and do that
03:56 - now so coming over here uh I think I'm
03:59 - back over here uh and here here you are
04:02 - here I am I'm going to play some music
04:05 - for a second just to get my mind okay
04:07 - that's good enough uh and I'm going to
04:09 - minimize this I'm going to open my
04:11 - browser open over here and I'm going to
04:13 - go to this is an example I've running so
04:14 - I have a completely empty blank canvas I
04:16 - don't actually need a canvas for this
04:18 - example I'm just doing stuff with sound
04:19 - I'm going to go back to the code and I'm
04:21 - actually just for the sake of argument
04:23 - going to make the canvas a little bit
04:24 - smaller so it takes up less space on the
04:26 - page okay so what do I need to do first
04:28 - I need to create a sound
04:30 - wave so what I'm going to do is I'm
04:33 - going to create a variable I'm going to
04:35 - call it wave and uh technically the term
04:38 - for a wave in uh p5js Sound Library is
04:40 - oscillator a wave being something that
04:42 - oscillates much like plucking a string
04:44 - right you pluck a string it oscillates
04:46 - like a wave and it vibrates through and
04:48 - and and pushes that wave through the air
04:50 - up to your ear you hear a sound okay so
04:52 - what I need to do is say wave equals new
04:55 - P5 do
04:57 - oscillator so this is a new object
04:59 - object you might not be familiar with P5
05:02 - do oscillator um this now I've created
05:05 - an oscillator object so this object
05:07 - exists it's up to me to turn it on and
05:09 - turn it off to set its frequency to set
05:10 - its amplitude to configure that
05:12 - oscillator so to speak uh one thing that
05:13 - I think is important for me to mention
05:15 - is that here in index. HTML um you know
05:18 - I I have a reference to the p5js Sound
05:21 - Library you can't really see it all the
05:22 - way there there we go um so you need to
05:24 - for this to work you need to make sure
05:25 - you have the p5.js file loaded as part
05:28 - of your project um so now I'm back to
05:31 - here the other thing I think is Worth
05:32 - showing you and I have it here is the
05:35 - reference page for P5 do illat so this
05:37 - is something you might want to look at
05:38 - on your own time and review there's
05:40 - actually a nice little uh example on
05:42 - this page but I just want to show you
05:43 - here are a bunch of the functions that
05:45 - I'm going to start to demonstrate to you
05:47 - start stop amplitude frequency set type
05:50 - connect disconnect so there's a lot of P
05:52 - all those things I showed you about
05:54 - manipulating a a a song file an MP3 file
05:57 - that you load and play there's similar
05:59 - things going on here so one thing that's
06:01 - really important though is this idea of
06:02 - set type so look at this I talked about
06:05 - sine waves but you could also have a
06:07 - triangle wave a Sawtooth wave or a
06:09 - square wave and I actually have an image
06:11 - here I was going to draw these as
06:12 - diagrams but I'll just use this image
06:14 - instead so what the waveform actually
06:16 - looks like uh is going to determine what
06:19 - the sound sounds like and and of course
06:22 - the world is your oyster in terms of
06:23 - possible ways that you might be able to
06:25 - do sound synthesis but P5 by default
06:28 - allows you to create oscillators of
06:30 - these four forms sine wave Square wave
06:33 - triangle wave and Sawtooth wave and this
06:35 - image uh comes from uh Wikipedia and I
06:37 - believe this is a Creative Commons
06:39 - license image I better check that but
06:41 - hopefully I'm uh but I'm pretty sure
06:43 - it's available to be used in this video
06:45 - and you could also use it as well anyway
06:46 - okay so u i I'll post a link to it in
06:49 - the uh description okay so so we'll try
06:51 - a bunch of different forms but let's
06:52 - just start with a sine wave so the first
06:54 - thing I want to do in my code is say
06:56 - wave. set type uh and I believe believe
07:00 - uh I need to pass in a string meaning a
07:02 - word in between quotes uh sign being
07:04 - sine wave the other thing I could do is
07:06 - set the
07:07 - amplitude uh oh by just saying amplitude
07:10 - I'm going to set it to one and then I
07:11 - can say wave. frequency I'm going to set
07:14 - some frequency let's try uh 300 whatever
07:17 - that might sound like and
07:20 - then I'm going to uh ah play it I think
07:23 - I need to say uh play play or start I'm
07:26 - not sure let's look at the reference
07:28 - page uh it looks like start starts the
07:31 - obsil and there's a there's a there's a
07:34 - a Nuance to this function which I think
07:35 - will be interesting to see so I'm going
07:36 - to say start so let's uh refresh this
07:41 - sketch can you hear that a nice tone
07:45 - let's go back it's very hard for me to
07:47 - hear it the way I have the sound
07:48 - configured for let me make this
07:52 - 400 that sounds very
07:57 - similar what did I do wrong uh so maybe
08:00 - that frequency function isn't correct uh
08:02 - let's
08:03 - look let's look back frequency
08:10 - uh time
08:12 - out back again there was an issue with
08:16 - the order of these operations so setting
08:18 - the amplitude and setting the frequency
08:20 - will not work unless you call those
08:22 - after start and it actually says that in
08:24 - the documentation I just didn't read
08:25 - that properly so what I'm going to do
08:27 - now is go back to the page and I'm going
08:29 - to refresh it you can hear that 400 and
08:32 - I'll mention that 400 440 the frequency
08:35 - of 440 is actually the musical note a
08:37 - can tune your vial into it now can you
08:40 - hear that that's the musical note a if
08:41 - I'm right and I'll just metion now if I
08:43 - make that a little bit higher if I say
08:45 - 1,00 you should be able to hear that
08:47 - that's quite a bit uh higher so let me
08:49 - go back to this and actually let me just
08:51 - turn the amplitude down to zero and
08:53 - there you go now you'll notice in this
08:55 - program because I I don't hopefully I'm
08:57 - not blowing anyone's ears out that um
09:00 - that there is I have a play pause button
09:02 - so while I was taking a break there for
09:04 - a second to figure out what was wrong I
09:06 - added that button let's just look at the
09:07 - code so very briefly there's just a
09:09 - button that says play and pause there's
09:11 - a function called toggle associated with
09:13 - whenever that button is pressed and then
09:15 - in that function I have a Boolean
09:17 - variable that's set to either true or
09:18 - false based on whether this Boolean
09:21 - variable playing and then in draw I'm
09:23 - either coloring the background pink or
09:25 - gray depending on whether that Boolean
09:27 - variable is true or not so if I if I go
09:30 - back here and run this again you can see
09:32 - playing that button toggles the
09:34 - background so one of the things that I
09:35 - want to do show you is that I can
09:37 - actually just take this code right
09:40 - here and I can put that here
09:43 - in uh in the toggle function and then I
09:46 - could actually say wave. stop here in in
09:50 - in the else so right now what I want to
09:52 - do is toggle this that oscillator on and
09:55 - off so I'm going to run
09:57 - this do you hear it
10:00 - I think you
10:01 - do wait I don't hear
10:04 - it I don't know why I can't hear it
10:06 - anymore oh the amplitude is at zero so
10:09 - let me turn it back to
10:11 - 0.5 okay now you can hear
10:15 - it right on and off oh I think there's
10:18 - like a low
10:19 - hum uh anyway hopefully the sound is
10:22 - fine uh so okay so I can toggle that
10:25 - sound on and off now there's a couple
10:26 - things one I should mention is uh you
10:28 - don't actually have I don't actually
10:29 - have to start and stop it what I could
10:32 - really just do is you know start it
10:36 - right here in setup and I could
10:38 - immediately set the amplitude to zero
10:41 - and then what I could do here is just uh
10:43 - and I could also set the frequency here
10:45 - in
10:46 - setup and then what I could do is just
10:48 - set the amplitudes so I don't need start
10:52 - I just want to set the amplitude to 0.5
10:54 - or set the amplitude to zero so I'm
10:56 - going to run that again
10:59 - I'm turning off now one thing I'll
11:01 - mention is do you hear that little like
11:02 - clipping each time I start and stop it
11:04 - there's a quick clip of the sound that's
11:06 - because this oscillator comes in at full
11:09 - amplitude immediately so often with a
11:11 - sound like this it's a little bit
11:12 - advantageous to kind of fade it in very
11:14 - slowly and there's actually the
11:16 - amplitude function and I believe start
11:17 - and stop there is an optional second
11:19 - argument so if I put in like one as a
11:21 - second argument it's going to take one
11:23 - second to fade in that sound or Fade Out
11:26 - that sound and I could put in 0.1 or
11:27 - something much shorter if I want but
11:29 - let's take a listen to
11:31 - that did you hear that fade in very hard
11:34 - for me to hear it because it's very
11:36 - quiet out of my speakers but hopefully
11:38 - it's piping through the sort of YouTube
11:39 - recording system and you can actually
11:41 - hear it okay so hopefully you heard that
11:42 - distance now let's talk a little bit
11:44 - about uh let's do one more thing I think
11:47 - which would be worth doing what what I
11:49 - think would be worth doing is let me
11:50 - create a
11:52 - slider and I'm going to say slider
11:54 - equals create slider and now I need a
11:57 - range so the audible I believe a a
11:59 - reasonable sort of audible range of
12:01 - frequencies is between like 20 and
12:02 - 20,000 perhaps but I don't want to blow
12:04 - out your ears I'm afraid of doing
12:06 - anything too crazy so I'm going to have
12:08 - a range a frequency range between like
12:10 - let's just say 100 and 1200 which I
12:13 - think will be somewhat reasonable and
12:15 - I'm going to start at the musical note a
12:17 - 440 so I'm going to create a slider and
12:19 - in uh in draw what I'm going to do is
12:22 - I'm going to say
12:25 - wave uh I somebody is I usually when in
12:30 - the chat if someone's blasting with
12:32 - Emojis I know that something's wrong but
12:34 - I don't know what that is um so uh wave.
12:38 - frequency I should uh
12:40 - frequency uh slider. value so what I
12:43 - want to do is now at least tie the
12:44 - frequency to a
12:46 - slider and so first I need to play it
12:49 - you can hear
12:52 - that so you can see as I can change that
12:54 - frequency on the fly so this is the
12:56 - basic idea I can synthesize a sound as a
13:00 - waveform I can fade it in I can fade it
13:03 - out I can change its frequency I can
13:04 - change its amplitude and I want actually
13:06 - let's just briefly maybe I will'll add
13:08 - like triangle wave or Sawtooth wave or
13:10 - Square wave just to hear what some of
13:11 - those sound like but mainly what I want
13:14 - to do in the next video is talk about
13:16 - something called an envelope and an
13:18 - envelope is a way of kind of crafting
13:20 - around that oscillator uh sort of
13:22 - musical attack a fade in a fade out and
13:24 - that's going to make allow us to
13:26 - configure the oscillator in a way that
13:28 - might sound more like an electric piano
13:30 - or a particular kind of musical
13:31 - instrument I'm not we're not going all
13:32 - the way there to that and then I want to
13:34 - talk about what are specific frequencies
13:37 - of specific musical notes how do those
13:39 - relate to a concept called midi and how
13:41 - might you create a program that sort of
13:42 - generates a tune or allows a user to
13:44 - interactively play uh piano okay so
13:50 - um um so what I'm going to do here is
13:53 - Let's uh so I think I'm done but let's
13:55 - just uh let's just look uh before I go
13:58 - let's look here at
14:00 - um the oscillator object oh I'm in
14:02 - frequency uh uh oscillator object what I
14:05 - want to look at is uh this so the
14:08 - options for uh set type sign triangle
14:10 - soft tooth or Square so let's just try a
14:12 - triangle wave um
14:16 - and hear what that sounds like see if
14:18 - you can hear the
14:24 - difference has a kind of different
14:25 - quality to it and so what I recommend um
14:29 - that you do one thing you might think
14:30 - about as an exercise is can you create a
14:32 - whole interface an interface for
14:34 - changing the wave form for changing the
14:36 - frequency for changing the amplitude
14:37 - what happens if you have multiple
14:38 - oscillators can you harmonize so this
14:40 - you know there's a lot of bunch of
14:41 - things you could try here and I also
14:43 - want to remember to make sure I do
14:45 - something where we visualize that wave
14:46 - itself so where the wave is drawn on
14:48 - screen so I should I should make that
14:50 - happen at some point too okay thanks for
14:51 - watching the sound synthesis video I
14:53 - look forward to hearing your feedback in
14:55 - the comments and the chat and all that
14:56 - sort of stuff there's no there's no chat
14:58 - I guess actually after it's over
14:59 - bye hello video epilog I realized I
15:03 - forgot actually to remove wave do stop
15:05 - in here when I was showing you that you
15:06 - didn't need stop that you could just
15:08 - fade the amplitude down to zero so I'm
15:10 - going to actually take that out and I'm
15:11 - going to go back I'm going to run this
15:12 - again hit
15:14 - play hit po pause and pause is probably
15:17 - the wrong word it's fade in fade out and
15:19 - I could make the text of the button
15:20 - change all sorts of stuff I could make
15:21 - this better but at least that was a
15:23 - brief correction okay thanks for
15:24 - watching this video