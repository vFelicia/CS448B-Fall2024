00:00 - [TRAIN HORN]
00:00 - Hello.
00:01 - And welcome to a coding
challenge, Generating StyleGAN
00:04 - Rainbows With Runway ML
and passing those to P5 JS
00:08 - to display them in the
browser for our delight.
00:11 - And so this is basically
making a version of software
00:16 - that I built for
the I/O Festival.
00:19 - The talk that I gave
at the I/O Festival
00:22 - will be out on the internet
at some point soon.
00:24 - And if it is, I
will include a link
00:25 - to it in this
video's description
00:26 - where I had people
play a game on stage.
00:29 - And when they finished
the game, an AI rainbow
00:32 - was generated and tweeted to
the I/O Rainbow's on Twitter
00:35 - account.
00:36 - So I'm going to build a little
mini version of this today.
00:40 - And so the primary
tool that's going
00:41 - to do the generating
of the rainbows
00:44 - is something called Runway ML.
00:46 - So this is the first
coding challenge
00:48 - that I'm using with Runway.
00:51 - And I've talked in a
couple other videos
00:53 - in a livestream more
about what Runway
00:55 - is, how to download
and install it,
00:57 - how to sign up for
an account, how
00:58 - to get some free credits,
and that sort of thing.
01:01 - So I'll refer you to that video
if you want to find out more.
01:04 - But if you have
Runway downloaded--
01:06 - find a link to download
it in the description.
01:08 - If you've signed
up for an account,
01:10 - and you're on the
Browse Models page,
01:12 - you will find yourself here.
01:13 - And where you want to go next is
you want to look for StyleGAN.
01:16 - Now, I see StyleGAN right here.
01:19 - But just in case you don't,
I could type it in up here
01:21 - under Browse Models.
01:23 - I could click here.
01:25 - This is now giving me,
"Generate photorealistic images
01:27 - of faces, landscape, and more."
01:29 - There's more information about
the license for StyleGAN,
01:33 - credits about who created and
authored the original StyleGAN
01:36 - paper that you can
find out about.
01:38 - But I just want to use StyleGAN.
01:39 - So I'm going to click
Add to Workspace.
01:41 - And if you don't have
a workspace already,
01:43 - you can click New Workspace.
01:45 - I have one called
Coding Train Livestream.
01:47 - And then here I am.
01:49 - Now, I can generate a variety of
types of things with StyleGAN.
01:54 - And these are known
as checkpoints.
01:56 - So there are
checkpoints, you can see,
01:57 - for cars, and
landscapes, and portrait.
02:00 - Wouldn't it be nice if there
was a checkpoint for rainbows?
02:04 - And guess what.
02:05 - There is.
02:05 - So I'm going to click
the rainbows checkpoint.
02:08 - Then I'm going to choose
the input source, which
02:12 - is just going to be a vector.
02:14 - And I'll talk about what
that is in a little bit
02:16 - as I get to writing
some code to do this.
02:20 - And then what I want to
do is click Run Remotely.
02:23 - So this is very important
for me to be clear.
02:25 - This requires cloud credits
that you have to pay for.
02:29 - If you sign up through the link
in this video's description,
02:34 - you'll get free $10 in credits.
02:36 - And there's actually a
coupon code, CODINGTRAIN,
02:38 - which you can get an additional
$10 in credits as well.
02:42 - So that's certainly enough
to run this example.
02:44 - Some models in Runway you can
run locally on your computer
02:47 - without using cloud credits.
02:48 - But this one in particular only
runs remotely at the moment.
02:52 - So I'm going to
click Run Remotely.
02:54 - It's running.
02:55 - So I'm going to give it
some time to start up.
02:57 - So now we see it's
starting to populate.
02:59 - And this is what's known
up here as the latent
03:02 - space, this sort of space
of imaginary rainbows
03:06 - that this generative
model is producing.
03:08 - And this is one
of the reasons why
03:10 - I love using Runway is that
I can actually just kind
03:13 - of browse around this
space, and kind of
03:17 - have this 2D view of this
multi-dimensional world of all
03:21 - of these rainbows.
03:22 - And I can do things like,
oh, I really like this one.
03:25 - And I could just change
the output here to preview.
03:27 - And so I can see it here.
03:28 - And I could download this one.
03:30 - And I now have my beautiful
StyleGAN generated rainbows.
03:34 - But what if I want to have these
rainbows in my own software?
03:38 - If I wanted to show
them on a web page?
03:41 - Or if I want to tweet
them from my Twitter bot?
03:44 - Or any other types
of thing that you
03:46 - might be making, whether
it's JavaScript, processing,
03:49 - open frameworks, or some
other piece of software
03:51 - that you want to
connect to Runway.
03:53 - The way that you do that is
through talking to Runway
03:57 - over the network.
03:58 - So over here in the bottom--
03:59 - I'm sorry.
04:00 - In the top right,
there is a Network tab.
04:03 - If I click on this,
it's showing me
04:05 - a variety of different options.
04:07 - I can communicate
with Runway over OSC.
04:09 - This is something I did
in another video tutorial,
04:12 - communicating with processing
and Runway over OSC
04:15 - to demonstrate the PoseNet
model for detecting
04:17 - human skeletal poses.
04:19 - I could also use Socket I/O
for real time web sockets.
04:22 - But really what I want to do
is just an HTTP connection.
04:27 - I want to make an HTTP request.
04:28 - I want to post some
data to Runway.
04:30 - And I want to receive
the image back.
04:32 - And, in fact, there's JavaScript
code right here out of the box
04:36 - that I could copy and paste.
04:37 - So I encourage you
to just actually
04:39 - go and grab this
JavaScript code,
04:41 - and make your own example.
04:42 - But I am going to do this
using the built in P5
04:45 - function, HTTP Post.
04:47 - So I'm going to
write my own code
04:48 - for doing this, referencing
everything that's
04:50 - here under the HTTP option.
04:53 - My next step then is
to go to the browser.
04:56 - And I am going to write this
code in the P5 web editor.
05:00 - So first thing
that I might do is
05:02 - let's make sure this is
running, if this works.
05:05 - OK.
05:05 - Great.
05:07 - Let's make a button.
05:08 - Create Button.
05:10 - And I'm going to call
that button rainbow.
05:13 - And I'm going to attach that
button to an event called--
05:19 - whoops.
05:20 - Let me hit stop
here for a second--
05:22 - Generate Rainbow.
05:26 - So when I run it, a
button will appear.
05:30 - Rainbow.
05:31 - And then presumably
when I click the button,
05:34 - a function called Generate
Rainbow will be executed.
05:37 - So I need to write
that function.
05:39 - And in that function,
this is where
05:41 - I want to send my
request to Runway itself.
05:46 - So I need to make an HTTP post.
05:50 - So I probably want to
look at the HTTP post.
05:53 - This is a P5 specific function.
05:55 - You could use fetch.
05:56 - I have some video
tutorials about how
05:58 - to use the fetch function
to make a post request.
06:00 - And you could do that here.
06:01 - But I'm going to use
P5 in this example.
06:03 - So I'm going to go to the HTTP
post reference page on P5.
06:07 - And this is going to show
me the stuff that I need
06:10 - to include in the post request.
06:13 - So here's the stuff that I need.
06:15 - I need a path.
06:16 - Where am I posting this to?
06:18 - I need a data type, which
is what kind of data
06:21 - am I sending along
with this post request?
06:24 - And then any
parameters, data that
06:26 - needs to go along with
the post request, as well
06:29 - as the callback and the
error callback for getting
06:31 - information back.
06:32 - So if I could just take this
and bring this into my code,
06:36 - I'm just going to put
this in the comments
06:39 - right here as a reminder.
06:41 - So what are the things?
06:42 - The path is--
06:46 - Runway's telling me this.
06:47 - It's actually this.
06:49 - The server address.
06:50 - Local host port 8000.
06:53 - So I'm going to
paste that in here.
06:55 - The data type is JSON.
06:59 - That's the kind of data.
07:00 - The data I'm sending is what?
07:03 - So this is the data I
need to send to Runway.
07:06 - And Runway's telling
me about that here.
07:08 - Input specification.
07:10 - What does it expect?
07:11 - It expects a field
called Z, which
07:16 - is an array of 512 floats.
07:19 - What is that?
07:20 - And then it requires some
other value called truncation.
07:24 - What is that?
07:25 - So if you wanted to dive deeply
into this input specification,
07:28 - you would probably want
to do some more research
07:30 - on the StyleGAN model itself.
07:32 - Look at the paper.
07:33 - Look at the GitHub repo.
07:35 - And kind of understand more
about the neural network's
07:37 - architecture, and
its parameters,
07:39 - its hyper parameters that
control its behavior.
07:42 - I think it's worth,
though, for a moment taking
07:44 - a minute in this video
tutorial to talk about what
07:47 - this z is, cause it's a very
important concept in machine
07:51 - learning.
07:52 - So there is this machine
learning model called StyleGAN.
07:58 - And it needs some
kind of input in order
08:02 - to generate some kind of output.
08:05 - Now, the output that it
generates is an image, 512x512.
08:11 - I mean, ultimately
what it's outputting
08:13 - is just a whole lot of numbers.
08:15 - But those numbers can be
interpreted as colors of pixels
08:18 - and repackaged in the image.
08:19 - So that's happening
for you by Runway.
08:21 - Right?
08:22 - We're seeing the output
of it right here,
08:25 - packaged as an image.
08:26 - But what's the input?
08:28 - I mean, ultimately, in
this particular example,
08:31 - I don't care about the input.
08:33 - I just want, give me a rainbow.
08:34 - Give me a rainbow.
08:34 - Give me a rainbow.
08:35 - But in order for the model
to generate a rainbow,
08:38 - it's got to start
from somewhere.
08:40 - And in essence, I could
start with something random.
08:44 - But what that random thing
that I want to start with
08:47 - is is something called a
vector, referred to as z.
08:52 - And what it is is 512 numbers.
08:56 - So I have this list
of 512 numbers,
08:58 - probably between 0 and 1.
09:01 - So generally inputs
to neural networks
09:03 - are normalized with some range.
09:05 - And in a way, this is
like a unique signature
09:08 - for a particular output.
09:10 - So if I want to just get
any so-called output,
09:13 - I can just make up a
list of random numbers.
09:15 - And I would always get
the same exact rainbow
09:18 - with the same set of numbers.
09:20 - So we could see that happen.
09:22 - Right?
09:22 - If I fix that set
of numbers, I'll
09:24 - always get the same output.
09:25 - But what I could do is tweak
these numbers a little bit,
09:28 - dial some up, dial some down.
09:30 - And that's going to
change the output.
09:33 - And that's what you're
seeing here in this space.
09:37 - What you're seeing
here is rainbows that
09:42 - are attached to given z inputs.
09:44 - And Runway is being very
clever about showing you
09:47 - similar ones in a two
dimensional flat space
09:50 - on a computer screen.
09:51 - But actually, all of those
rainbows that are generated
09:55 - live in 512 dimensional space.
10:01 - So that's kind of
crazy, and mind blowing,
10:03 - and very confusing.
10:04 - I think I have a video
tutorial where I do something
10:06 - with four dimensional space, and
I can barely understand that.
10:09 - But this is kind
of the weirdness
10:11 - of working in
machine learning is
10:13 - you could imagine a three
dimensional space would just
10:15 - be full of rainbows in 3D.
10:17 - Like all over this room,
there'd be rainbows everywhere.
10:20 - 2D.
10:21 - It's just on a poster, like
look at all the rainbows.
10:24 - But the only way to
actually literally organize
10:27 - all of the rainbows
generated by StyleGAN
10:29 - would be to have
them all sitting
10:30 - in 512 dimensional space.
10:32 - Not a thing we can
understand as human beings.
10:34 - So that's why Runway
cleverly organizing them
10:37 - for you to look at in
two dimensional space
10:39 - is quite useful.
10:40 - But you could kind of
walk through that space.
10:42 - Right?
10:43 - I could do a random walk
from vector, to vector,
10:46 - to vector in that five
dimensional space to produce
10:48 - an animation of kind of
morphing, changing rainbows.
10:51 - And that's something
you should really
10:52 - do after you watch this
video, and share it with me.
10:55 - Cause I would love to see that.
10:56 - So one of the nice things
about if I'm working in Runway
10:59 - and I find a rainbow that I
really like, for example--
11:02 - oops.
11:03 - I can zoom in and out.
11:04 - This is nuts.
11:06 - This one's kind
of crazy looking.
11:07 - If I like this one, oh, look
at this strange double rainbow.
11:12 - So let's use this one.
11:14 - So if I like this
one, I can actually
11:16 - click here and
export that vector,
11:19 - and those 512 numbers
as JSON itself.
11:22 - So if I click here,
and I click back here,
11:25 - I could see this is it.
11:26 - This is that JSON file.
11:28 - So I'm just going to go
call this rainbow.JSON.
11:34 - Let's actually go
to the web editor.
11:36 - This is sort of
nuts what I'm doing.
11:37 - But why not?
11:39 - Let's add a file.
11:41 - Then I'm going to drop
this file in here.
11:46 - And then I'm going
to look at this.
11:47 - And we can see, look, this is
just that array of numbers.
11:51 - And actually, why even bother
making it a separate JSON file?
11:58 - Because I'm just going to say
const z equals this array.
12:04 - So I actually just
literally copy
12:06 - pasted that array of numbers.
12:07 - It looks like, by the way,
it's between negative 1 and 1.
12:13 - Into my processing sketch.
12:15 - So I'm going to
call this rainbow z.
12:19 - Now, where was I?
12:20 - I was somewhere.
12:21 - I was over here in runway,
because what I wanted to do
12:25 - was send that
array of 512 floats
12:29 - as the z property in the
data that I'm sending.
12:33 - So I'm going to do z, rainbow z.
12:36 - And then I need truncation.
12:37 - So truncation is a
hyper parameter--
12:40 - I spelled that totally wrong--
12:42 - associated with StyleGAN.
12:43 - If you want to learn
more about truncation,
12:45 - that's something you
probably just want
12:47 - to read about in
the paper itself.
12:48 - But it kind of changes the
craziness factor, in a way,
12:52 - of the rainbow that
you're going to get.
12:55 - And it's a number.
12:56 - I believe that is a
number between 0 and 1.
12:59 - And I think the default
that's being used right now,
13:01 - my guess is that it's 0.5.
13:03 - So it's possible
I'm actually going
13:04 - to get a different
rainbow out if I'm
13:06 - wrong about that
truncation number.
13:08 - But now I have the data.
13:09 - Then I need a callback
and an error callback.
13:11 - So I want to post to a path.
13:14 - I want to post that data type.
13:16 - This is sort of silly to have
this separate variable here.
13:19 - I can just put
JSON right in here.
13:22 - Then I want to post that data.
13:25 - And I want to say, got
rainbow, or got error.
13:28 - So I need two callbacks.
13:30 - So now I want to say,
function, got rainbow.
13:36 - Data.
13:38 - And let's just
console log the data
13:41 - to see if it comes
back from Runway.
13:43 - All right.
13:44 - We're going to run this.
13:45 - I'm going to click
the Rainbow button.
13:48 - Got error is not defined.
13:49 - OK.
13:50 - Fine.
13:51 - I need to define the
got error function.
13:55 - Got error.
13:57 - Error.
13:58 - Console.log.
14:00 - Error.
14:01 - This is good for
some error checking.
14:02 - OK.
14:03 - Now I'm going to
press this button.
14:05 - Ooh.
14:05 - I got an error.
14:07 - [BUZZER]
14:08 - [DING]
14:10 - I found what I got wrong.
14:11 - So the server address
is local host port 8000.
14:15 - But I want to make a post
request to the query route.
14:19 - So this is actually what
I need as the URL path.
14:22 - So I'm going to copy this.
14:24 - Go back to my code.
14:26 - We're going to hope
that this fixes it.
14:28 - I'm going to put that in here.
14:30 - Slash query.
14:32 - Now I'm going to hit rainbow.
14:36 - Ah!
14:37 - Look at that.
14:37 - So it console logged something.
14:39 - What in the world?
14:43 - I know you might
not believe this,
14:44 - but this is actually
a rainbow right here.
14:46 - This is the strangest looking
text version of a rainbow.
14:49 - But what's actually
happening there?
14:51 - I'm getting an object.
14:52 - Oh, and it's got an image in it.
14:54 - But the image is
just this sequence
14:55 - of all these characters.
14:57 - So this has to do
with base 64 encoding.
15:00 - Let's go back to Runway to
make sure I'm right about this.
15:02 - You can see this is the output.
15:04 - And image.
15:05 - And that image is
a Base64 image.
15:08 - Base64 encoding,
first of all, this
15:09 - is something that I've used
in a couple other videos
15:12 - where I've explained
this more thoroughly.
15:13 - So I'll link to that in
the video's description.
15:15 - But essentially, it's
just a way of encoding
15:18 - all the colors of an
image as ASCII characters.
15:22 - So instead of having
numbers for the colors,
15:24 - we have unique characters that
correspond to certain color
15:28 - values.
15:28 - The nice thing
about using Base64
15:30 - is the web speaks Base64.
15:32 - So I can create an image
very easily in JavaScript,
15:37 - in P5 with the Base64
encoding of the image.
15:41 - So rather than console log
that, let me try to do that.
15:46 - And you could read
more also about it
15:47 - on the Base64 Wikipedia page.
15:49 - But let me go back here.
15:51 - And I'm just going to say
create image data image.
16:00 - So image property
of the data object
16:06 - that's coming back from Runway
has the Base64 encoding in it.
16:09 - And P5's create
image function knows
16:11 - how to turn that into
an image element that
16:13 - will appear on the web page.
16:14 - So let me bring this over here.
16:17 - Let me run this again.
16:19 - Let me hit rainbow.
16:20 - And there it is.
16:21 - Look.
16:21 - And it's the same one!
16:22 - It's the same one, because
I gave it this exact vector.
16:26 - But what might be
more interesting here
16:28 - is why not make a
random one each time?
16:31 - So I'm going to do this.
16:33 - When I post I'm going
to create a variable
16:38 - called rainbow Z, which
is an empty array.
16:42 - I'm going to loop all
the way up to 512.
16:47 - And I'm going to
say rainbow Z index
16:49 - I is a random number
between negative 1 and 1.
16:52 - And that's going to
be the rainbow Z.
16:54 - So now every time
I get a rainbow,
16:56 - press the rainbow button,
it will be a different one.
16:59 - So now I'm getting
random rainbows.
17:01 - Now, here's the thing.
17:02 - They're kind of
just, by default,
17:04 - making all these dumb elements.
17:06 - Maybe what I want to do
is actually draw them
17:09 - onto the canvas.
17:10 - So maybe I'll make the canvas.
17:12 - They happen to be 512x512.
17:14 - So I'll make the canvas 512x512.
17:16 - What I'll do is put this in a
variable called rainbow image.
17:20 - I could push them into
an array to save them.
17:24 - Then I'm going to say
rainbow image hide.
17:26 - So we don't actually see it.
17:27 - But I'll draw it
onto the canvas.
17:30 - So now what this is doing is
it's creating the image dom
17:33 - element from the
Base64 encoding,
17:35 - hiding it from the dom, and
then drawing it onto the canvas.
17:37 - So every time I press
this rainbow button--
17:41 - [STATIC]
17:42 - Oh, silly JavaScript and
your asynchronous nature you.
17:45 - I think I can't draw the image
right here, because it's not
17:49 - actually ready yet.
17:51 - So what I think that I'll do,
since I happen to have a draw
17:54 - loop, is I'll move this here.
17:58 - And I will make this
a global variable
18:02 - that I will declare at the top.
18:04 - I could do this in other ways.
18:07 - And then I'll just check.
18:09 - As long as rainbow image
exists, I will draw it.
18:14 - So now, this should
give me every time
18:17 - I click the rainbow button--
18:18 - oh, and I still want to hide it.
18:23 - Whoa.
18:24 - Whoa.
18:25 - Every time I click the rainbow
button I get a new StyleGAN
18:28 - generated rainbow
right here in P5 JS
18:31 - in the web editor
being generated
18:34 - from Runway from the cloud.
18:36 - Oh, we should do a diagram.
18:37 - Let's review all of the
pieces in this example
18:40 - because there are a lot of them.
18:42 - So I have my own laptop
that's sitting there
18:45 - on the table over there.
18:46 - And there is the
web browser running.
18:51 - That's a thing that's running.
18:52 - And there is also the software
Runway that's running.
18:56 - Now, Runway has spun up a local
server at local host 8000.
19:04 - The browser is actually
making requests
19:07 - to the P5 web editor's server,
which you don't necessarily
19:13 - have to do.
19:13 - I could just develop
my JavaScript locally.
19:15 - But I'm actually writing
my JavaScript code
19:18 - from the P5 Web JS editor.
19:20 - But it is executing and
writing that code locally
19:23 - in the browser.
19:24 - So this is kind of not
a super important point.
19:27 - But it makes a post
request to Runway.
19:31 - So when the code makes a
post request to Runway,
19:34 - Runway, in turn, runs on the
StyleGAN model on a cloud GPU.
19:45 - You need to have
credits to do that.
19:47 - That is returned back to
Runway, the resulting rainbow,
19:51 - and then sent back to P5
and rendered in the browser.
19:55 - This diagram didn't turn
out like I imagined it.
19:57 - So I thought it would
be more interesting.
20:00 - But these are the pieces.
20:01 - P5 and runway are
both running locally.
20:06 - But the actual StyleGAN
model is running
20:09 - on a Runway server in the
cloud that you have access
20:12 - to through your account.
20:13 - Now, at some point you
might realize, well,
20:16 - what if I wanted to create
a website where that
20:18 - would show StyleGAN rainbows.
20:21 - I mean, you can't run Runway
locally on your laptop.
20:24 - But then a website that's
deployed somewhere else,
20:26 - how would you manage that.
20:28 - So if somebody opens
up your P5 sketch,
20:30 - it won't work unless they're
running Runway themselves
20:33 - on their local computer.
20:35 - But stay tuned.
20:36 - I know that Runway is
developing features
20:38 - to be able to deploy your server
that's running the StyleGAN
20:42 - model too, like a
permanent URL in the cloud
20:46 - somewhere, that you could
then have your JavaScript
20:48 - programming accessing that other
people could run without having
20:50 - to install Runway themselves.
20:52 - So that's something
that you could
20:53 - stay tuned and follow the
future development of Runway.
20:56 - The other thing that's
really important for me
20:58 - to mention here is that this
StyleGAN model doesn't just
21:03 - exist by accident.
21:05 - So the StyleGAN
architecture is something
21:08 - that comes from the
original StyleGAN
21:10 - paper and pre-trained model.
21:12 - One of the founders
and creators of Runway,
21:14 - Anastasis Germanidis, actually
trained a particular checkpoint
21:18 - for StyleGAN with rainbows.
21:21 - And this was trained with 5,000
images tagged with the word
21:25 - rainbow keyword, sorted for
relevance from the Flickr API
21:29 - using this scraping code
to scrape from Flickr,
21:33 - from Sam Levine,
AntiBoredom on GitHub.
21:36 - So if you want to find
out more about training
21:38 - your own checkpoint
with StyleGAN
21:41 - I would refer you to these
resources, which I'll include
21:43 - in the video's description.
21:44 - OK.
21:45 - So what are you going
to do with this?
21:46 - I hope that you use
this StyleGAN rainbow
21:49 - model for something fun.
21:51 - But more likely, hopefully what
you're taking away from this
21:54 - is the fact that you can
write JavaScript code that
21:57 - connects to Runway running a
machine learning model that's
22:00 - actually running in the cloud.
22:01 - It could be running
locally also,
22:03 - depending on which model
you're using from Runway if it
22:05 - supports that.
22:06 - And then send a post request.
22:09 - Connect via WebSockets.
22:10 - Connect via OSC.
22:13 - Some network
connection to Runway.
22:15 - Get the results back.
22:16 - And use that in your
own web application.
22:19 - I would love to see people
figure out interesting ways.
22:21 - Like how would you generate the
rainbow vectors in such a way
22:28 - that you're kind of doing a
random walk through that latent
22:31 - space, that 512
dimensional space.
22:35 - So that's something
you could really
22:36 - think about and play with, and
render something out perhaps.
22:39 - You might not even
need to use JavaScript.
22:41 - You might be able to do this
even more, from processing,
22:44 - for example.
22:45 - But if you make something with
this, please share it with me.
22:48 - Go to thecodingtrain.com,
the coding challenge
22:50 - page associated with this
particular example, which
22:53 - you'll find linked to in
this video's description.
22:56 - And may we fill the
world with more and more
22:59 - generated rainbows.
23:01 - See you soon.
23:01 - Goodbye.
23:02 - [TRAIN HORN]
23:03 - [MUSIC PLAYING]