00:05 - [Music]
00:27 - [Music]
01:00 - [Music]
01:10 - [Music]
01:23 - [Music]
01:28 - [Music]
01:29 - e
01:43 - [Music]
01:53 - [Music]
02:04 - [Music]
02:15 - [Music]
02:22 - [Music]
02:57 - [Music]
03:18 - [Music]
03:35 - [Music]
03:51 - [Music]
04:01 - [Music]
04:11 - [Music]
04:24 - [Music]
04:33 - [Music]
04:52 - [Music]
05:23 - [Music]
05:59 - e
06:06 - [Music]
06:50 - [Music]
07:24 - [Music]
07:43 - hello welcome to the coding train and as
07:47 - we always do we begin with our
07:49 - ceremonial reading from the book The
07:53 - Great Book of random numbers
08:04 - 20416 is everything working on today's
08:07 - live stream I think it is I don't see
08:09 - anybody saying it's
08:12 - not
08:15 - 87410 75
08:19 - 646
08:21 - 64
08:23 - 176 8
08:26 - 2752 63606
08:32 - 3711 573
08:36 - 46
08:38 - 69512
08:43 - 56464
08:45 - Hi how are
08:47 - you oh I am feeling very tired today but
08:52 - I am getting myself going and ready to
08:56 - live stream about a topic
09:04 - that I don't feel too good
09:07 - about um I'm a little confused how to
09:10 - approach this
09:12 - topic um but I'm going to make an
09:14 - attempt and I'm G to play around with
09:15 - some very new features that are part of
09:17 - ml5 JS but maybe this is the first time
09:20 - you're watching me or the coding train
09:22 - which are kind of the same thing I
09:24 - suppose and you might want to understand
09:26 - where you are so this is uh first of all
09:29 - this is YouTube It's a website with
09:33 - videos on it it's got a lot of really
09:36 - amazing stuff A
09:39 - L I don't
09:41 - know this is not I am not here to
09:43 - evaluate the merits of YouTube but I am
09:47 - here what can I just please start over
09:50 - hold on I didn't start over this this is
09:53 - a disaster
10:08 - hello happy Friday welcome to the Cod
10:10 - train my name is Dan uh I come here I
10:13 - soon to be probably on Thursdays but for
10:16 - the foreseeable future until I say so I
10:19 - am here on Fridays live streaming coding
10:23 - challenges coding tutorials a lot of
10:25 - nonsense and wasted time that's why I
10:27 - like to start reading from my book of
10:28 - random numbers just to emphasize that
10:31 - there might not be a lot of value in
10:32 - what you're about to watch may maybe
10:35 - you'll find it entertaining maybe it
10:36 - will brighten your day maybe it's on in
10:37 - the background maybe you might learn
10:39 - something who knows any of these reasons
10:42 - uh there apparently is a coding Garden
10:44 - raid going on in the chat I have arrived
10:48 - this old internet fogy has now arrived I
10:52 - was making videos before YouTube was
10:54 - even a website um no I wasn't actually
10:56 - was I I was actually I did make some
10:58 - videos before
10:59 - this is not the point of what I'm saying
11:00 - but I feel very excited that I entering
11:03 - the culture the streaming the culture
11:05 - the streaming culture of today's content
11:09 - creators and I am seeing here people
11:12 - raing the chat from coding garden with
11:15 - CJ
11:17 - um uh oh okay hold on got to do some
11:24 - serious notification shutting off of
11:27 - here uh
11:31 - okay check my messages this is what you
11:34 - this is what everybody does when they
11:35 - live stream when you have like a lot of
11:37 - people tuning in live to watch you do a
11:39 - coding tutorial you just pause for a
11:40 - minute and check your
11:43 - messages
11:45 - okay so this is why I'm checking because
11:48 - I was checking to make sure that I have
11:50 - a babysitter who picks up my son from
11:52 - school on Fridays at 3:30 p.m. so that
11:57 - um to um uh so that I don't have to so
12:00 - that I can live stream um and I was
12:03 - checking to make sure that was confirmed
12:04 - for today and apparently it is not so I
12:07 - have to continue checking my messages
12:09 - and if that is the case I will have to
12:11 - rush out of here at about uh fortunately
12:13 - my son's school is very very close to
12:15 - where I am right now so you know even if
12:16 - I even if I shut the streaming off at
12:18 - 3:20 PM I'd make it by 3:30 but I would
12:21 - the ra go CJ's tell me the raid concept
12:24 - originated on
12:26 - twish did I pronounce that correctly
12:31 - twsh no maybe oh do I have some news in
12:34 - the world of coding train to tell you
12:42 - about train breaking news breaking
12:46 - news there is a brand new coding train
12:50 - merchandise store that I am excited low
12:54 - audio so uh can I please just complete a
12:58 - thought without looking at the chat
12:59 - moving on to something else um thank you
13:01 - for telling me about the low audio I had
13:03 - an issue last week welcome Karan Pawa to
13:08 - the passengers of the coding
13:10 - train so I had an issue last week where
13:14 - the audio in the recorded version was
13:18 - peing a lot and you'll notice when I
13:20 - release the next edited video of my
13:22 - poset and regression that the audio
13:25 - isn't so great so um I uh turn it down
13:29 - down so that it wouldn't do that um can
13:33 - everybody turn their audio up while
13:35 - you're watching today and then hopefully
13:38 - actually let me do so let me record let
13:40 - me turn the recording
13:42 - on um let me turn this recording on and
13:45 - I will check it in a little bit also so
13:48 - I just need to turn on the multiorder
13:51 - which is now
13:52 - going minimize that here I am back all
13:55 - right so some people are telling me the
13:56 - audio is fine it is it is low lower than
13:59 - it was last week and that's on purpose
14:01 - so I'm going to keep it the way it is um
14:04 - and hopefully it'll be
14:06 - fine
14:12 - um what was I talking about ah
14:16 - yes breaking news new coding train store
14:21 - which I am
14:23 - now going
14:27 - to uh
14:29 - um I got a Super Chat question that I'll
14:32 - answer because I can't resist that uh
14:36 - how long have you been programming
14:37 - seriously and how long do you take over
14:39 - the world uh seriously I have been
14:41 - programming there's a few different
14:43 - answers to this question so probably the
14:45 - first code that I
14:51 - wrote we got to go way
14:58 - back
15:00 - 1984 85 somewhere around there basic
15:04 - apple 2 plus does that I sound like I
15:06 - have the years about right there could
15:07 - have been a little bit earlier somewhere
15:09 - in the early 80s Apple 2 some Basics so
15:13 - that was the first code I
15:17 - wrote next would have
15:20 - been I think I took some kind of
15:23 - programming course in middle or high
15:24 - school I believe if I'm correct the
15:27 - programming language I used was assembly
15:28 - Lang
15:32 - language this is to indicate the passage
15:34 - of time then we would have to go way
15:37 - fast forward all the way to about maybe
15:40 - 97
15:41 - 98 late 90s I took an evening course in
15:45 - C++ didn't take I this is not for me I
15:49 - don't know what I'm doing here I do not
15:51 - understand
15:52 - this then we get to 2001 I enter as a
15:58 - student at the interactive
16:00 - telecommunications program at New York
16:01 - University's TI School of the Arts where
16:03 - I am standing right now uh of course it
16:06 - actually isn't where I'm standing right
16:07 - now because it was in a different
16:07 - building then but you know you get the
16:10 - idea and I learned uh the lingo
16:13 - programming
16:14 - language um with uh in a course called
16:18 - introduction computational media that's
16:19 - in the macr media director
16:21 - environment um I'm gonna get start
16:23 - getting through this a little bit faster
16:25 - um which incidentally was invented by
16:27 - John Henry Thompson if you're you're not
16:29 - familiar with John Henry Thomson he came
16:30 - and visited the coding train and talked
16:32 - about his work Google his name and find
16:34 - out uh about his contributions to
16:36 - computer science really amazing
16:38 - wonderful fellow
16:41 - um and uh would you mind doing oh yes
16:45 - David I will do the community
16:46 - contributions before you but please
16:48 - don't pay me to do that I gotta TR I
16:51 - think I might just have to turn the
16:52 - super chats off membership I appreciate
16:54 - it makes me very the super chats make me
16:55 - uncomfortable I mean it helps it helps I
16:58 - appreciate appreciate it um um but yes I
17:02 - will do those uh I'm going to do those
17:05 - as soon as I get through the story so
17:06 - macr media director I took a Java class
17:09 - I did C and C++ I learned a to 95 I took
17:12 - a course in the computer science program
17:14 - at NYU um then I just in 2003 I
17:17 - discovered processing and that sort of
17:19 - like took over for the next 10 years
17:22 - until I started doing JavaScript
17:23 - probably around 2013
17:25 - 2014
17:26 - okay I'm going to come back to the
17:29 - door Ah that's what I was looking for
17:32 - drum
17:34 - roll who weird weird glitchiness
17:39 - this is going to have to wait because we
17:42 - will go to community
17:44 - contributions um so first of all let me
17:46 - just mention something really
17:50 - important coding train has a Discord I
17:53 - mean it has had a Discord for quite a
17:55 - while it just was an unofficial Discord
17:58 - and now it is
18:01 - a official Discord and yes this is a I
18:06 - cut myself I was uh doing the cardboard
18:08 - boxes for cycling and I just like sliced
18:11 - my finger on a cardboard box I didn't
18:13 - even know that was a thing that you
18:15 - could do that fortunately it's still
18:18 - attached and I have a nice little
18:19 - Pokemon Band-Aid I think this is a
18:23 - Charmander ah the Discord join the
18:25 - Discord there's a link in this video's
18:27 - description somebody who's an admin will
18:28 - hopefully post it into the chat um love
18:31 - to see you there um I am trying to be
18:35 - active and participate but there is a
18:37 - generous and wonderful community of
18:38 - people who are more active and know more
18:40 - about the stuff than I do there as well
18:43 - um now let's go to the Kaleidoscope
18:46 - snowflake
18:47 - Challenge and see so one of the things
18:50 - you can do so first of all in the
18:51 - Discord there is a share uh Channel if
18:54 - channel is the right term you can raid
18:57 - can you raid the can you ra read the
19:01 - Discord
19:02 - um there's a channel where you can share
19:05 - your work but also for permanent well
19:09 - until the apocalypse uh or until the
19:11 - website goes down which might happen
19:13 - before the apocalypse uh there for uh
19:16 - you can also submit a link to your work
19:19 - uh if it's related to one of the videos
19:21 - on the page for that video so there are
19:23 - one two three four five and I I one of
19:26 - these days I'll have a whole system for
19:27 - how I go through all this stuff um let
19:29 - me click through a bunch of these and
19:30 - take a look at
19:31 - them uh we're going to go just in order
19:34 - here snowflake make and share Firebase
19:37 - by Ashu to
19:43 - agal code. solar.com I've seen this
19:46 - before oh look at this so look at this
19:50 - wonderful tweet with all these different
19:51 - snowflakes oh and I can design my
19:55 - own oh I love it so this is like a nicer
19:57 - interface with like a Color Picker it
20:01 - looks like it's got the same kind of
20:03 - symmetry that I did in my snowflake
20:05 - video then I can save
20:09 - it and I can give it a title like done
20:12 - live or live on coding train and
20:17 - shmon uh save to Firebase
20:22 - saving saving to a database that's so
20:26 - cool uh and then I can also look at all
20:30 - these other ones that are popular or not
20:32 - popular and you can like them awesome
20:34 - beautiful work thank you for this um
20:37 - let's look at this color and Pen weight
20:39 - controls by Ravi
20:43 - demon oh okay so this is looks very
20:45 - similar to mine but with this is using
20:47 - something called dat guy it looks like
20:49 - which we can change the Symmetry change
20:51 - the color with like a much nicer
20:54 - interface uh now this is like ninefold
20:56 - symmetry that is really nice clear and I
20:59 - could save which presumably downloads as
21:01 - an image I just erased my beautiful work
21:04 - Wonderful uh let me David has to go back
21:07 - to Works maybe so maybe I should start
21:08 - with his first not well third at this
21:11 - point so let me go to David uh and see
21:14 - oh look at this snowflake Creator don't
21:17 - tell me this background is full of all
21:19 - of the snowflakes that have been created
21:21 - with this Creator could that be true um
21:25 - so once again I can draw it has a I like
21:28 - this there's nice little sort of guide
21:29 - as to where the snowflake should be here
21:32 - in this circle I can change the
21:34 - snowflake the weight so let's try
21:37 - something really thick here for like the
21:39 - center which I always think looks kind
21:40 - of
21:41 - nice and then I can change I can make a
21:45 - color whoa what's this oh I got like all
21:47 - these color Pickers so interesting so I
21:50 - can add a color and then if I close this
21:54 - now I'm drawing in that color cool and I
21:57 - can change the background color
22:00 - [Music]
22:04 - maybe and oh that's another color I
22:07 - don't know did I click on the wrong
22:08 - thing anyway I'm having lots of fun
22:11 - playing with this thank you for creating
22:13 - this and this amazingly I'm kind of so
22:16 - surprised if I just click right here
22:18 - there I am P5 web editor all of the code
22:22 - lovely to see oh here's the color
22:25 - selector add class Color Picker create
22:28 - Color Picker
22:29 - one so I don't I'm I'm kind of like
22:32 - willfully not knowledgeable about actual
22:35 - web development so I'm always intrigued
22:37 - when I see people using these kind of
22:39 - features that are very common to a
22:41 - website uh David says it's just a
22:42 - snowing GIF but I will live for the rest
22:45 - of the day with the fantasy that this
22:47 - was a project where you design a
22:49 - snowflake and it enters a world of
22:51 - snowflakes falling because I love that
22:53 - idea all right now uh animated snowflake
22:57 - by Marcus uh
23:01 - whitly okay that is super
23:09 - cool
23:12 - whoa okay I have to think about
23:15 - this so first of all big difference
23:17 - between what my example does and this
23:19 - one is certainly that um some data
23:23 - structure has to keep track of all the
23:25 - points of the snowflake
23:28 - oh oh with the super chats oh you know
23:31 - how to you know how to bring out the
23:33 - guilt in
23:34 - me um so I uh moras moraki I will uh
23:39 - talk about the voron diagram in a moment
23:41 - and it is high on my list although very
23:43 - hard to get to all this stuff um so in
23:46 - my Kaleidoscope snowflake example code I
23:49 - never erase the background so just
23:52 - whatever the mouse is doing I'm painting
23:55 - color into the canvas at that moment
23:59 - in six times around uh in a circle so
24:03 - here I would have to memorize or store
24:05 - the path in an array draw all the points
24:09 - of the path with Symmetry and then apply
24:13 - some type of behavior to all the points
24:16 - which looks like maybe just moving out
24:18 - from the
24:19 - center so that's I'm speculating I I I
24:22 - just everything in my body just wants to
24:24 - like turn everything
24:26 - off and
24:28 - um thank you David Snyder for upgrading
24:31 - to
24:34 - conductor I keep whenever see a
24:36 - conductor I know I have the train thing
24:37 - I just think an Orchestra conductor
24:41 - um I just want to leave and like try to
24:43 - program this and play around with it or
24:45 - or or do this live but I've I've got to
24:46 - stick to my plan I have a plan which is
24:48 - not a good one but I made it so I'm
24:50 - going to stick to it um one more and
24:53 - then let me address
24:56 - verono snowflake generator by clippy who
24:59 - I have seen quite a bit I think in the
25:01 - Discord oh look at this an embedded page
25:03 - on this page
25:04 - says who is this
25:12 - mysterious embedded
25:14 - [Music]
25:16 - page he's talking to me um while drawing
25:19 - the snowflake you have an on-screen
25:20 - indicator that locates the center of the
25:22 - drawing and lines that show the Symmetry
25:23 - and thickness of the brush once you
25:25 - export the image to another tab
25:26 - instructions below the indicators will
25:29 - disappear and the image will no longer
25:30 - be cut remember the Symmetry is
25:31 - represented as a green line on the right
25:33 - of the screen and you can change it with
25:34 - W or W Etc there's a q I can do
25:37 - something there's an E I can do
25:38 - something
25:42 - okay I I better look at those
25:44 - instructions
25:47 - again
25:49 - um I can erase my stuff like s a new tab
25:52 - will appear in the
25:53 - image thickness is repr the blue
25:57 - line I don't see the green line so this
26:00 - this the description leads me to believe
26:04 - um s oh look at that it opened it in a
26:07 - new tab and I can and made it into an
26:09 - image that's super interesting I wonder
26:11 - how that works um this is
26:14 - lovely um and there's apparently a lot
26:16 - of controls and things that I can do one
26:18 - thing I might suggest is the use of an
26:19 - alert for instructions uh you know I
26:22 - think there might be some more elegant
26:24 - ways to think about how that interaction
26:26 - is maybe an overlay that you can press
26:27 - like info not info because I sort of
26:29 - feel like I forgot what the keys were so
26:32 - I just want to like enable the
26:33 - instructions again so that might be I'm
26:35 - thinking oh Mike is asking how did the
26:37 - snake AI do I uh not very
26:41 - well um Mike made a snake AI that I
26:44 - think
26:46 - um uh yes I
26:48 - uh so many things in the chat this is
26:51 - why CJ has a really good system for
26:53 - dealing with the chat by looking at the
26:54 - messages one at a time said of all once
26:56 - in a crazy Caff um
26:58 - but um the Mike made a a really
27:02 - excellent snake AI neuro Evolution I
27:05 - think example which is a cing a
27:07 - contribution on if I'm right I mean
27:10 - might it actually maybe should be more
27:11 - on the Flappy Bird contribution page
27:14 - because maybe the the
27:17 - core um thing uh is the evolu the neuro
27:21 - Evolution and not the snake game itself
27:23 - but I think um I don't remember which
27:27 - snake game it's on is it on this
27:32 - one yeah it's right here so this let's
27:34 - just open it up so this is h i was I let
27:37 - this run for like 12 hours um and I
27:40 - think um it didn't get very far I think
27:44 - probably uh Mike if I were to suggest
27:47 - how you could get this to perform better
27:50 - would be that to sort of do away with
27:53 - the need I mean I love the visual here
27:56 - that I'm actually watching every game
27:58 - every attempt play one after another all
28:01 - in real time it's sort of sped up but
28:03 - it's real time so if you were to like
28:05 - play out all these simulations without
28:08 - having to draw them you could have a
28:11 - much higher population going and maybe
28:13 - you just show one at a time like an
28:16 - arbitrary one or you sort of like show
28:18 - the one from the previous generation
28:20 - that did the best um maybe you show a
28:23 - grid of them I think there's a lot of
28:24 - possibilities there okay
28:26 - verono it was was um moraki who asked
28:30 - can you do the verono diagram in a
28:33 - future segment please Dan thank you
28:35 - thank you for the please thank you for
28:37 - the thank you I appreciate it uh so a
28:40 - topic that I would really like to
28:43 - explore in depth on this channel is
28:46 - computational geometry and I was on a
28:49 - kick for it for like a week or two in
28:52 - the fall and if I recall I did gift
28:56 - wrapping challenge coding
28:59 - train um I did this uh convex whole gift
29:03 - wrapping algorithm I was I wanted to
29:05 - start by doing some more basic uh
29:08 - foundational computational geometry
29:10 - algorithms this is one of them and
29:12 - that's oh that was in July and that's uh
29:15 - all I got to so um and now I've been
29:19 - focusing on the machine learning stuff
29:21 - this fall this spring I'm going to focus
29:24 - on the uh simulation uh um nature of
29:28 - code uh chapters and
29:30 - examples this could kind of fit into
29:32 - that um I also have been wanting to do
29:36 - more of those Cabana videos and in a way
29:39 - of sort of thinking oh some of these
29:41 - more oneoff pretty algorithms that are
29:43 - visualized Mak sense in that context I
29:46 - sort of was doing them less here in the
29:47 - live streams but it's very hard to find
29:48 - the time to those command videos it's
29:50 - also very
29:51 - cold supposed to snow tomorrow so I
29:53 - really want to record one tomorrow if it
29:55 - snows so I think that would be fun so I
29:57 - do want to get to it um but uh the thing
30:01 - that I need want to do first and maybe I
30:03 - could just skip ahead to that there
30:04 - might be some others that are in between
30:06 - that should be in between this and that
30:07 - would be a Delany or Delani
30:09 - triangulation which also is a
30:12 - foundational piece of of doing a verono
30:14 - diagram even though there's many
30:16 - different
30:18 - um um different uh ways of of computing
30:22 - a veroni diagram and Simon points out
30:24 - that he created a GitHub issue it's on
30:26 - the rainbow topics repo issue number one
30:28 - 1436 which uh goes through some
30:30 - follow-up ideas in computational
30:33 - Geometry okay now back
30:40 - to the new coding train store and it's
30:44 - kind of a should say this is kind of a
30:46 - soft launch I think it's maybe missing
30:49 - um one or two more products that might
30:51 - be added and I think the designers might
30:53 - still be working on tweaking things a
30:55 - little bit but if you go to St standard.
30:59 - tvthe coding train or coding train I
31:02 - don't know which that should be which
31:03 - should it be the coding train or coding
31:06 - train let's try coding train and hit
31:11 - enter you will
31:14 - see the new coding train store and um
31:19 - and you know
31:21 - uh I was about to try to justify why I'm
31:23 - doing this but it's just a thing that
31:25 - exists that if you're interested in
31:27 - these things you you could buy them and
31:29 - I'm doing it as a thing for people who
31:31 - requested or might want these things
31:33 - don't buy the stuff if you don't want to
31:35 - if you're not interested don't
31:36 - contribute to capitalism and waste but
31:40 - if you know be pick and choose pick and
31:42 - choose if this makes it into your pick
31:43 - and choose list great um let me talk
31:46 - about some of the things that are here
31:47 - for sale uh I got it oh that's not the
31:50 - right thing to click I'm like trying to
31:52 - click on the monitor over here and oh
31:55 - because let me see if this works my
31:57 - overhead camera there we go ah oh hiding
31:59 - secret secret thing not so
32:02 - secret um so first of all there is the
32:06 - I'm like man I'm white no this is like
32:07 - the Q what's that
32:09 - um uh is it QVC I feel like I'm on QVC
32:13 - now this dices and slices oh and it's
32:16 - got water in
32:19 - it cating train is brought to you by oh
32:23 - brilliant.org
32:24 - thank you to uh brilliant.org for uh
32:28 - sponsoring today's live stream um you
32:31 - can check it out for free at
32:32 - brilliant.org coding Trin and uh you can
32:36 - get um uh 20% off a premium subscription
32:39 - uh if if you if you go through that link
32:41 - and you'll find more information did I
32:43 - say 20%
32:46 - off let's make sure I get this
32:53 - right I got it right oh you can't see
32:56 - because the overhead camera
32:59 - it says 20% behind there there we go
33:02 - um 20% off okay uh what was I doing
33:06 - store
33:09 - yes okay this is the mug that has water
33:12 - in it let me drink the
33:16 - water uh it says oh no no I showed it
33:18 - the wrong way coffee now is it upside
33:26 - down coffee now see this is my Band-Aid
33:30 - Charmander
33:31 - right refactoring later isn't that
33:36 - cute um then the thing that I'm really
33:40 - excited about are these
33:43 - notebooks invisible look at this we
33:45 - invented invisible
33:48 - notebooks what what what no um this is
33:55 - the coding train notebook I'll stand
33:56 - over here this is good uh you can see
33:58 - it's lovely cover here it's got a nice
34:00 - little back and when you open it up look
34:03 - it's graph paper can you see that I
34:06 - don't know it's graph paper it has the
34:08 - cute little characters so I it's got her
34:11 - little friends there in the
34:13 - corner so uh that's
34:18 - there was it upside
34:21 - down I can't tell
34:23 - anymore oh yeah it was upside
34:26 - down there we go sorry I'm looking at
34:29 - things in a weird s way there's the
34:31 - notebook here's the back so uh lovely
34:34 - little
34:35 - notebook those cute little
34:38 - characters okay graph paper I said
34:42 - that now what else do I got for you uh
34:46 - oh I don't have one of these so I think
34:48 - maybe I'm done with the overhead camera
34:50 - for a
34:51 - moment um there's a nice little pin and
34:54 - then there's these stickers um if you're
34:56 - interested in these stickers I do have a
34:58 - sheet of stickers here that I can show
35:00 - you um and I guess I could put them my
35:03 - overhead but my on my uh stream deck I
35:06 - don't have a button for the overhead
35:08 - camera so have to manually click the
35:09 - mouse um so you can see these lovely uh
35:11 - stickers here that you can um get all
35:13 - right I feel
35:15 - ridiculous so I've got to stop now
35:19 - um but the other thing I'm very excited
35:21 - about is I am attempting so you know I
35:23 - have this uh silly train whistle thing
35:26 - so this is a train whistle that
35:27 - purchased off Amazon I don't remember
35:29 - how much uh it costs it makes a really
35:31 - excellent
35:33 - sound um you know it must be tuned right
35:36 - there's four flutes basically I can show
35:38 - you here there's like four
35:40 - flutes um and you blow the air through
35:42 - here it's uh and it's nicely made then I
35:46 - have this other one because I ordered a
35:48 - a box of several hundred of these
35:50 - although I really should learn how to
35:52 - just use a CNC machine and make them
35:54 - myself um think I just need this to be
35:56 - like out a little bit more yeah
35:58 - so this is these are uh blank ones and I
36:01 - am learning how to use a laser cutter
36:03 - and I've been experimenting with um
36:05 - laser etching so you can see this was
36:07 - the first attempt uh was a little bit
36:10 - too harsh um
36:13 - and um this was the second attempt which
36:15 - is a little bit too light and I think
36:17 - this is the Goldilocks just about right
36:20 - but I was just putting the logo here I
36:22 - want to come up with a nice design and
36:23 - put it on all the different side these
36:25 - will not be for sale though these are
36:27 - for people who join uh there's different
36:29 - levels of membership if you see that
36:31 - join button on YouTube um if you're
36:33 - interested I'm trying to come up with
36:35 - exciting and clever and fun uh rewards
36:38 - what happened in your finger it was a
36:40 - cardboard box it came out out of nowhere
36:44 - it attacked me sliced my
36:48 - finger so there'll be a few more things
36:50 - coming soon and I will
36:53 - um uh talk about them next okay I don't
36:56 - want to I I don't want to spend too much
36:57 - time on
36:59 - this little announcement um all
37:03 - right someone that I'm forgetting their
37:06 - name um asked about processing Community
37:08 - day so let me take a minute to talk
37:11 - about that in my official capacity as a
37:16 - person who does stuff with the
37:17 - processing
37:19 - Foundation um and I
37:22 - can uh move that
37:25 - now day. processing.
37:28 - .org all
37:34 - right so um if you recall 2019 the first
37:38 - processing Community Day I think was in
37:40 - 2017 if I'm right about that but last
37:43 - year in 2019 was the first year we had
37:46 - something called processing Community
37:48 - Day worldwide meaning anyone anywhere in
37:51 - the world could organize their own
37:52 - processing Community day and this year
37:55 - we are leaning into that and EMP
37:57 - emphasizing it even more um and uh have
38:02 - a mentorship program for anyone who
38:04 - wants to organize a PCD so um sorry
38:09 - there's my mouse is here
38:11 - so um something that I think will so
38:15 - first thing that you should do if you're
38:16 - interested is these are all Recaps that
38:18 - were written by organizers of pcds from
38:22 - last year in other cities um you can
38:25 - read them for yourself here um
38:28 - then there's information about how you
38:30 - can host your own and what kind of
38:32 - support there's an organizer's kit
38:34 - there's going I think there's a slack
38:35 - Channel or some other ways
38:40 - of um engaging with the
38:43 - community
38:46 - um yeah slack workspace um but and
38:49 - organizer kit and more thing but I think
38:51 - probably what might interest you even
38:53 - more is to look at this map so let's
38:56 - take a look at it
38:58 - and we can see where different ones that
39:00 - have been scheduled already so I know
39:02 - that I think it was uh Ste in the chat
39:05 - had mentioned PCD Copenhagen uh
39:07 - organized by run Matson and Andreas
39:09 - refcard emails are here their Twitter
39:12 - handles Etc you can find out there's a
39:14 - website for it I don't know um this is I
39:17 - guess the date it was I don't know if it
39:18 - has oh date of the event whoa that's
39:21 - soon hey let's all go to Copenhagen
39:24 - let's do a coded Garden raid in person
39:29 - um
39:31 - so so check that out find one that's
39:34 - close to you that you can attend um and
39:38 - um if you don't find one that's close to
39:41 - you that you can attend maybe consider
39:44 - uh organizing one yourself and you can
39:47 - certainly reach out to me um and I would
39:49 - be glad to help you if I can but um
39:52 - pretty much I think what you want to do
39:54 - is um is uh use any of these mechanisms
39:58 - to ask questions to get mentorship to
40:01 - learn about how to organize a processing
40:03 - Community Day uh I'm hoping to go to as
40:06 - many of them as I can as of now I'm
40:08 - going to go to the one in New York City
40:09 - because I think that's February 8th um
40:11 - and I think you can register for it uh
40:13 - as of right now uh I think it's at like
40:15 - processing. NC
40:19 - maybe uh 2020 yep um the the schedule is
40:23 - just absolutely incredible uh if you
40:25 - look at it so you can find out more
40:26 - about it
40:27 - here and um asked you asked about
40:31 - PCD 2020 okay great all right now I have
40:36 - stalled long enough give me one moment
40:40 - to see if I have a babysitter picking up
40:42 - my son from school okay all right we're
40:45 - good
40:50 - [Music]
40:53 - everybody sorry now I'm going get my
40:55 - other messages stop I am not looking at
40:58 - my phone
40:59 - again bad oh don't nice hand just oh can
41:04 - we please shut it all off sometime all
41:09 - right so what's
41:16 - next let me do a quick check actually I
41:20 - don't think it's been a half an hour
41:21 - since I press record so I'll wait a
41:22 - little bit
41:24 - longer but I
41:27 - I don't know so a couple things one I
41:30 - don't have to leave at 3:30 which is
41:32 - good so I think 1:30 2:30 330 I think
41:35 - four is a good time if you if you're
41:39 - watching this right now and you're still
41:40 - here an hour and a half or so from
41:43 - now do me a favor and remind me to just
41:46 - like shut off the stream and go do
41:49 - something else I recently I've been
41:50 - streaming I just get run into issues and
41:53 - everything takes longer and I'm just
41:54 - very excited about everything and I've
41:56 - been going for like three three and a
41:57 - half four hours I don't think that's
41:58 - really good for
42:00 - anybody so I'm going to try to finish up
42:02 - by 4 o' today if I can which gives me a
42:05 - couple hours now um and um what um what
42:11 - I want to do is talk about something
42:14 - called convolutional neural networks why
42:17 - am I doing this this is not the coding
42:19 - train is not a machine learning AI
42:21 - Channel you might think that it is given
42:23 - how much time I'm spending on it but and
42:26 - I think that's probably because it's
42:29 - these days if you want to have
42:32 - computational literacy if you want to
42:33 - learn to code and participate in the
42:36 - world of software and data and creative
42:38 - coding you can't escape machine learning
42:41 - as a part of that discussion so it's
42:43 - important for me to focus some time and
42:45 - energy on it but I do want to also make
42:48 - sure the channel continues to have very
42:50 - beginner friendly content just you know
42:52 - fun generative algorithms and other
42:54 - kinds of things but I did teach a course
42:57 - at
42:58 - NYU
43:00 - um um this past fall it ended in
43:03 - December called introduction to machine
43:05 - learning for the Arts and my goal this
43:09 - fall was to create video tutorials for
43:12 - everything that's in this course and so
43:14 - if I look at it I have video tutorials
43:17 - for I have kind of like an intro I have
43:20 - video tutorials for image classification
43:21 - and transfer learning um some video
43:24 - tutorials for pre-trained models and
43:26 - physical interaction like poset um I
43:29 - don't really have H yeah so data
43:31 - collection and model training this is
43:33 - the stuff that I've been doing more
43:34 - recently um with using the example of
43:38 - capturing pose data and so I would say
43:42 - that I'm pretty well covered up to week
43:44 - five in terms of the video materials for
43:46 - the course but I have almost next to
43:49 - nothing I do have videos on sketch RNN
43:51 - so that's good um but I have almost next
43:54 - to nothing on
43:56 - 6789 9 10 uh these 6 through 10 so I'm
44:01 - cutting myself off Janu the week of
44:04 - January 27th pretty much um this that
44:07 - last week is the first week of the NYU
44:09 - semester where I will be teaching my
44:11 - course um uh nature of code um which is
44:17 - uh built around this uh book so I I do
44:20 - have video tutorials for this whole
44:22 - thing but they're made years ago and
44:23 - they're not in JavaScript so this is the
44:25 - I'm going to reboot all of these gonna
44:27 - make video tutorials for all of this
44:29 - stuff and I'm starting that the week of
44:31 - January
44:32 - 27th but I want to see how much I can
44:36 - finish off and catch up on that I missed
44:37 - last semester between now during my
44:40 - winter
44:41 - break
44:42 - um so uh I think today I am going to
44:47 - attempt to talk
44:53 - about convolutional neural networks
44:58 - how do you feel about
45:00 - that let me know with an emoji in the
45:09 - chat
45:12 - Circle send chat no message what do you
45:16 - think about convolutional neural
45:18 - networks
45:21 - send all right that didn't work I don't
45:23 - know why it didn't work whatever um oh
45:26 - did I miss mentioned this
45:29 - new sticker there's another new
45:36 - sticker okay
45:39 - so so how am I going to approach
45:44 - this let's go to this
45:47 - page where I have some
45:51 - notes and
45:53 - links so here's a good starting point
45:55 - for me okay people thank you for these
45:59 - weird emojis in the
46:04 - chat love it
46:08 - um
46:11 - so I want to do
46:15 - so I'm getting there I'm building up the
46:17 - confidence for this ml5 gs. org I'm just
46:20 - opening up URLs that are going to help
46:25 - me uh
46:32 - reference neural network okay I need
46:37 - this
46:38 - page I need no I don't need this page I
46:41 - need this
46:43 - page I need
46:46 - a whiteboard marker oh
46:51 - hi I like to torture Myself by having a
46:54 - bin of whiteboard markers on the floor
46:56 - right there about which maybe like 60%
46:59 - of them don't work You' think I would
47:02 - just go pick one before I start and make
47:03 - sure it
47:06 - works yep now I should make a new bin
47:09 - that is maybe that is the garbage bin
47:12 - and I just don't
47:15 - know two
47:18 - more
47:20 - nope I'm not putting them back in that
47:23 - pin one oh this one's green
47:28 - H that's not going to do me any good
47:29 - it's not uh oh wait there's a green one
47:33 - with a cap on it that's the wrong
47:38 - color mystery solved oh wait I think the
47:41 - good whiteboard markers are actually
47:42 - over there oh this one's just fine okay
47:46 - how's the focus on
47:53 - that oh I'm so glad people in the chat
47:56 - are asking asking things like what is
47:58 - convolution because it's giving me a
48:00 - boost of a reason why uh to do
48:12 - this aha oh I know what I know how to
48:14 - begin this Oh wrong I know how to begin
48:16 - this ah aha
48:18 - aha
48:22 - okay all right all right we're going to
48:25 - do something cool
48:32 - H got it I got it I got it everybody
48:35 - question is am I going to build this
48:37 - example yes yeah let me just take a look
48:39 - let me just see where it
48:41 - is
48:43 - um wait I was already
48:48 - there low rest pixels this is what I
48:51 - want
49:01 - all right I'm gonna
49:04 - uh yeah I'm gonna make this
49:08 - example shoot so now I'm
49:16 - confused
49:19 - um yes Simon is asking me that Simon
49:23 - says I thought you would do this in
49:24 - vanilla tensorflow.js I don't know if I
49:26 - would use word vanilla with
49:27 - tensorflow.js
49:29 - um but uh yes but no that would make
49:34 - sense I right now I'm trying to move on
49:36 - to emphasizing uh ml5 and you know
49:39 - there's certain points in time where I
49:40 - would want to go dig into tensorflow.js
49:42 - but we've actually added a convolution
49:44 - network feature to ml5 so I think that's
49:46 - where I'm going to focus
49:49 - um let's make this a coding challenge
49:57 - uh let's make this a coding
50:01 - Challenge
50:02 - [Music]
50:05 - and oh I should really I should really
50:09 - decide in advance what I'm doing all
50:10 - right here let me just let me talk to
50:12 - you through my thought process
50:14 - here what I want to do is show you how
50:16 - you can use ml5 neural
50:21 - network to um
50:26 - how you can use ml5 neural network to
50:30 - train a model on image data and that's
50:34 - what this example is
50:38 - doing but it is using a plain vanilla
50:42 - neural network uh with no convolutional
50:45 - layers which uh bring which isn't as
50:53 - accurate or as um
50:58 - sorry I'm thinking about this
51:02 - um which has some pitfalls and so
51:05 - reasons why it doesn't work so well and
51:06 - convolutional neural networks have a
51:09 - mechanism a kind of layer a
51:10 - convolutional layer which I would like
51:12 - to describe and go through and then show
51:13 - how to implement an ml5 um which
51:17 - helps um increase
51:21 - the benefits and accuracy uh of uh
51:26 - increase
51:28 - the increase the B the accuracy I can I
51:32 - can I take a break now all right
51:36 - let's let's do this let's do some coding
51:40 - log in I I got it I just have to stop
51:43 - worrying and just
51:47 - um go for it so let me just see here uh
51:51 - file
51:53 - duplicate um
52:21 - and let's do
52:40 - sorry everybody
53:08 - okay
53:47 - hold on a sec
54:14 - um I'm just setting myself up with a
54:17 - basic
54:24 - template uh
54:38 - let me not let me not worry about that
54:39 - right now
54:58 - thinking about
55:12 - this okay all right everyone uh all
55:16 - right so this is good
55:32 - all right we're going to knock this
55:50 - out okay
55:59 - I'm I'm like off today for some reason I
56:01 - mean I'm I'm always off but I'm like a
56:03 - little off where I am off but I'm gonna
56:05 - get it
56:09 - back
56:14 - okay all right
56:26 - let me if you will please bear with me I
56:30 - just want to check to make sure my
56:31 - recording to disk system is working
56:37 - okay W that's really loud
56:46 - [Music]
57:08 - [Music]
57:11 - okay all right I think everything's good
57:16 - [Music]
57:41 - [Music]
57:44 - all
57:50 - [Music]
57:52 - right okay oh it spills a little bit all
57:54 - right
58:01 - all right I've got
58:08 - it hi Susanna first time watching
58:12 - welcome um
58:17 - okay and you thought we were done with
58:20 - the ml5 neural network tutorials but no
58:24 - there is one more because I am leading
58:26 - to something I am going to you will soon
58:29 - see in this playlist a section on
58:32 - convolutional neural networks but before
58:34 - I get to convolutional neural networks I
58:36 - want to look at reasons why a
58:39 - convolutional layer I I have to answer
58:42 - this question like what is a convolution
58:44 - I've got to get to that but before I get
58:46 - to that I want to just see why they
58:48 - exist in the first place so I want to
58:50 - start with another scenario for training
58:53 - your own neural network
59:01 - yeah that scenario is an image
59:07 - classifier okay hold on I see where I'm
59:09 - going I see where I'm going with this
59:11 - The Narrative it all fits together that
59:13 - scenario is an image classifier now
59:20 - [Music]
59:21 - aha no more starting over people is this
59:24 - camera like it's like to the it's like
59:26 - sideways again isn't
59:28 - it does that always seem to
59:31 - happen that's better
59:34 - right good
59:37 - enough that scenario is an image
59:40 - classifier now you might rightfully be
59:42 - sitting there saying to yourself you've
59:45 - done videos on image classifiers before
59:47 - and in fact I have the very beginning of
59:50 - this whole series was about using a
59:52 - pre-trained model for an image
59:53 - classifier and guess what that pre trade
59:56 - model had convolutional layers in it so
59:59 - I want to now take the time to unpack
60:01 - what that means more and look at how you
60:04 - could train your own convolutional
60:07 - neural network again first though let's
60:10 - just think about how we would make an
60:11 - image classifier with what we have so
60:19 - far I don't know I think that like I'm
60:21 - think I might be overdoing the speeding
60:23 - up stuff which I like it when I need to
60:25 - draw big diagram but me just like
60:27 - pausing speeding up talking I think
60:29 - maybe the let's go with a little bit
60:31 - more of a natural
60:35 - flow we're starting with an
60:41 - image oh wait no I did it again but
60:44 - there's no way to like how did I used to
60:46 - do this before I used to have the speed
60:48 - up and post I just forget about it I'm
60:50 - just going to forget that post exists
60:52 - and that I'm just here with you in real
60:53 - time it's you and me talking about an
60:56 - image
60:58 - classifier we have an
61:00 - image oh no I want to draw a
61:05 - cat oh you're watching a crazy person on
61:08 - the internet
61:10 - today we have an
61:16 - image and that image is being sent into
61:20 - an ml5 neural network
61:27 - and out of that neural network comes
61:29 - either a classification or regression
61:31 - and in fact we could do an image
61:32 - regression and I would love to do that
61:34 - but let me start with a classifier
61:36 - because I think it's a little simpler to
61:38 - think about and consider so maybe it
61:41 - comes out with one of two things either
61:44 - a cat or a
61:46 - dog and some type of confidence
61:53 - score we've talked about how a neural
61:56 - network
62:05 - is in my previous videos I
62:13 - just what am I saying
62:16 - here I previously looked
62:19 - at I previously zoomed in on the ml5
62:22 - neural network and looked at what's
62:24 - inside right we have this hidden layer
62:27 - with some number of units and an output
62:29 - layer which in this case would have just
62:30 - two if there's two classes everything is
62:33 - [Music]
62:34 - connected
62:50 - whoops everything is
62:53 - connected no what am I doing
63:05 - yes and then there also
63:10 - um and then there are the
63:14 - inputs with postet you might recall
63:17 - there were 34 inputs because there were
63:19 - 17 points on my body each with an XY
63:23 - position what are
63:26 - these well let's say this image is 640
63:30 - by
63:32 - 480
63:34 - yikes let's use smaller
63:42 - numbers let's just say for the sake of
63:44 - argument that this image is 10 by 10
63:47 - pixels so I could consider every single
63:52 - Pixel to be
63:55 - an individual input into this ml5 neural
64:00 - network but each pixel has three
64:05 - channels and r g and B so that would
64:09 - make 100 times three inputs 300 inputs
64:15 - that's reasonable so this is actually
64:17 - what I want to implement take the core
64:20 - idea of a two- layer Network um
64:27 - take the idea of a two-layer neural
64:29 - network to perform classification the
64:31 - same thing we've I've done in previous
64:32 - videos but this time use as the input
64:36 - the actual raw pixels can we get
64:38 - meaningful results from just doing
64:45 - that after we do that I want to return
64:48 - back to here and talk about why this is
64:51 - inadequate or not necessarily inadequate
64:54 - but why how this can be improved on by
64:57 - adding another layer so this layer won't
65:01 - sorry the inputs will still be there
65:03 - we're always going to have the inputs
65:05 - the hidden layer will still be there and
65:08 - the output layer will still be there but
65:10 - I want to insert right in here something
65:13 - called a convolutional layer and I want
65:16 - to do a convolutional a two-dimensional
65:18 - convolutional layer so I will come back
65:21 - you want to just skip to that next video
65:23 - if and when it exists that's where I
65:25 - will start talking about that but let's
65:26 - just get this working as a frame of
65:34 - reference
65:36 - um all right folks how am I doing
65:39 - here 28 by 28 I know I should have done
65:42 - 28 by 28 Simon's always right always
65:45 - listen to Simon as what I say remember
65:48 - to duplicate before starting so people
65:50 - can start from the same place thank you
65:53 - Violet what good advice
65:56 - uh so this is going to be
65:59 - template and then let me do
66:06 - duplicate all right this is exciting
66:08 - stuff people I mean I could I just think
66:10 - this is not Germain is that the word I
66:12 - want to use this is not Germain to the
66:15 - topic at hand so if people want to learn
66:18 - about the pixel stuff I'll refer them to
66:19 - a separate
66:22 - video um
66:25 - and I gotta take a little sponsorship
66:28 - break in a moment I think this now is
66:29 - actually probably a good time for me to
66:30 - do
66:34 - that let's see if I can get I actually
66:36 - let me do this and then I'll take a
66:38 - break after after this before talking
66:40 - about convolutional n networks because I
66:41 - think I can get through this actually
66:43 - sort of
66:53 - quickly all right
67:02 - um
67:16 - okay what I have here now is some
67:18 - starter
67:19 - code starter code oh sorry I'm like
67:23 - remembering a thing on the internet from
67:24 - a couple weeks
67:26 - ago just have to cough I'm going to mute
67:28 - my
67:41 - microphone wait hold on let me make this
67:43 - a little bit
67:50 - bigger I'm going to start with some
67:52 - pre-written code all this does it's a
67:55 - simple p 5js sketch that opens a
67:57 - connection to the webcam resizes it to
68:00 - 10x1 pixels and then draws a rectangle
68:05 - on in the canvas for each and every
68:07 - pixel so this could be unfamiliar to you
68:10 - how do you look at an image in
68:12 - JavaScript in P5 and address every
68:15 - single Pixel individually if that's
68:17 - unfamiliar to you I would refer to my
68:19 - video on that topic that's appearing
68:21 - over next to me right now and you could
68:23 - go take a look at that and then come
68:24 - back here but really this is just
68:26 - looking at every X and Y position
68:28 - getting the RGB values filling a
68:30 - rectangle and drawing it so what I want
68:33 - to do next is think about how do I
68:36 - configure this ml5 neural network which
68:40 - expects that 10x10 image as its
68:50 - input I'm going to make a variable
68:51 - called pixel
68:53 - brain and pixel brain will be a new new
68:55 - ml5 neural
69:11 - network I should have mentioned that uh
69:14 - you can find the link to the code that
69:15 - I'm starting with in case you wanted to
69:17 - code along with me the both the finished
69:18 - code and the code I'm starting with will
69:20 - be in this video's description so to
69:22 - create a neural network I call the
69:23 - neural network function and give it a
69:25 - set of options one thing I should
69:27 - mention is while in all the videos I've
69:29 - done so far I've said that you need to
69:32 - specify the number of inputs and the
69:34 - number of outputs to configure your
69:36 - neural network the truth is ml5 is set
69:39 - up to infer the total number of inputs
69:41 - and outputs based on the data you're
69:43 - training it with but to be really
69:45 - explicit about things and and and make
69:47 - the tutorial as clear as possible I'm
69:49 - going to write those into the options
69:52 - so how many inputs they about that for a
70:01 - second the number of columns times the
70:03 - number of the rows times RGB maybe I
70:05 - would have a grayscale image maybe I
70:07 - could just make it I don't need a
70:08 - separate input for RG andb but let's do
70:10 - that why
70:15 - not and I have the the 10 by1 in a
70:18 - variable called video size so let's make
70:21 - that video size times video size time
70:23 - three
70:25 - let's just make a really simple
70:27 - classifier that's like I'm here or not
70:31 - here so I'm going to make that
70:36 - two the task is
70:40 - classification and I want to see
70:42 - debugging when I train the
70:45 - model so now I have my pixel brain my
70:48 - neural network
71:02 - just thinking about
71:03 - this I I think I'm gonna
71:05 - take these
71:17 - out three not two three not
71:22 - two oh times three thank you there
71:26 - oops that should be
71:29 - three thank
71:34 - you all right um now I'm GNA go with my
71:39 - usual terrible interface by that I mean
71:41 - key presses
72:17 - this is so silly what what do I want to
72:19 - do here I could have made
72:24 - buttons no let's make
72:32 - buttons let's have today be a day of
72:34 - slightly better
72:36 - interfaces instead of key presses let me
72:38 - put a couple buttons in the um on the
72:49 - page uh no no uh let's just go
72:53 - with let's just go with with key
73:01 - presses let go back to key
73:06 - presses let's go with my usual typical
73:09 - terrible interface meaning no interface
73:11 - and I'm just going to train the model
73:12 - based on when I press keys on the
73:14 - keyboard so I'll add a key press
73:17 - function and then I'm going to do
73:20 - something a little goofy here which I'm
73:21 - just going to say um when I press the
73:24 - key add example
73:25 - key so I need a new
73:32 - function called add
73:35 - example label so basically I'm going to
73:37 - make the key that I press the label so
73:40 - I'm going to press a bunch of keys for
73:41 - when I'm standing in front of the camera
73:42 - and then press a different key when I'm
73:43 - not standing in front of the camera
73:57 - now comes the harder
74:15 - work sorry losing my track of
74:22 - things now comes the harder work I need
74:25 - to figure out how to make an array of
74:27 - inputs out of all of the
74:32 - pixels luckily for me this is something
74:34 - that I have done before and in fact I
74:37 - actually have some code that I could
74:38 - pull from right in here which is looking
74:41 - at how to go through all the pixels to
74:43 - draw them but here's the thing I am
74:46 - going to do something to flatten the
74:48 - data I am not going to keep the data in
74:51 - its original columns and rows
74:53 - orientation I'm going to take the pixels
74:55 - and flatten them out into one single
74:57 - array guess what this is actually the
75:00 - problem that convolutional neural
75:02 - networks will address it's bad to
75:03 - flatten the data because its spatial
75:05 - Arrangement is
75:07 - Meaningful
75:18 - so I'll start by creating an empty array
75:21 - called inputs
75:29 - then I'll Loop through all of the
75:39 - pixels and to be safe I should probably
75:42 - say video. load pixels the pixels may
75:45 - already be loaded because I'm doing that
75:47 - for down here and I could do something
75:49 - where if I'm drawing them I might as
75:51 - well like create the data here but I'm
75:53 - going to be redundant about it and and
75:55 - I'm going to say um ah but this is this
75:58 - here's the weird
76:06 - thing I thought I wasn't going to talk
76:09 - about the pixel array in this video I'm
76:10 - just refer you to the previous one but I
76:12 - can't escape it right now for every
76:15 - single Pixel in an image in p5js there
76:20 - are four spots in the
76:22 - array a red value a green value a blue
76:25 - value and an alpha value Alpha value for
76:28 - transparency the alpha value I can
76:30 - ignore because it's going to be 255 for
76:32 - everything all there's no transparency
76:34 - if I wanted to learn transparency I
76:36 - could make that an input and have 10 by
76:38 - 10 Time 4 but I don't need to do that
76:40 - here so in other words pixel zero starts
76:44 - here and pixel one starts at so this is
76:48 - the the first pixel starts at index zero
76:51 - 0o one two three and the second pixel
76:54 - starts at index 4 so as I'm iterating
76:57 - over the all of the pixels I want to
77:00 - move through the array four spaces at a
77:02 - time there's a variety of ways I could
77:04 - approach this but that's going to make
77:06 - things easiest for
77:12 - me so that means so that means right
77:15 - over here this should be plus equals 4
77:18 - then I can say the red value is video.
77:22 - pixels index I
77:31 - the green value the blue value the
77:35 - sorry the green value is at I + one and
77:39 - the blue value is at I + two and just to
77:41 - be consistent I'm going to just put a
77:43 - plus zero in there so everything lines
77:45 - up nicely so that's the r g and B values
78:00 - how does the
78:02 - push just want to see something I'm
78:05 - curious about how push works so if I
78:07 - have an
78:09 - array oops not
78:15 - int can I do
78:18 - this oh I can I can push three things at
78:21 - once into the array perfect
78:26 - then I want those RG and B values for
78:28 - this particular pixel to go in the
78:30 - inputs
78:43 - array I really really want to fix
78:45 - something in the web editor which is
78:46 - when you autof format it doesn't scroll
78:49 - all the way back up to the Top If
78:50 - somebody could like make that happen for
78:52 - me my whole life would change
78:58 - um yeah I could use Phil I could
79:00 - probably use a higher order function
79:01 - you're all right about
79:04 - that oh yeah because it's already
79:08 - oh I'm so
79:12 - silly I'm so
79:16 - silly why am I doing it this
79:20 - way the chat is making a very good point
79:23 - which is that I have all the stuff in an
79:25 - array already and all I'm really doing
79:29 - is like making a slightly smaller array
79:30 - like removing every fourth uh element I
79:33 - could probably do that with like the
79:34 - filter function or some kind of higher
79:35 - order function or maybe just use the
79:37 - original array so I not really sure why
79:39 - I'm doing it this way but I'm trying to
79:40 - emphasize the sort of data preparation
79:42 - step so I I I look forward to hearing
79:45 - your comments about and maybe
79:46 - re-implementations of this that just use
79:48 - the pixel array directly but I'm going
79:49 - to keep it this way for right now so I'm
79:51 - taking the r g and B and putting them
79:53 - all into my new array
79:58 - then the target is just the label a
80:00 - single label in an
80:06 - array and I can now add this as training
80:08 - data pixel brain add data inputs
80:18 - Target let's just make sure this doesn't
80:21 - give me any errors if I press the key
80:27 - no errors I guess that's
80:32 - good um let me train the
80:36 - model should probably make sure this is
80:38 - actually doing
80:42 - something skip that mat you edit that
80:44 - thing out let's say let's console log
80:46 - something just to see that this is
80:47 - working so I'm going to console log the
80:50 - uh
80:51 - inputs um and let's also console log the
80:55 - Target just to see that something's
80:57 - coming
80:58 - out so a
81:02 - whoops yeah we can see there's an array
81:05 - there and there's the A and now if I do
81:07 - B I'm getting a different array uh with
81:10 - B there so I'm going to assume this is
81:11 - working I could say inputs. length to
81:14 - make sure that that's the the right
81:20 - idea yeah it's got 300 things in it okay
81:34 - now one thing that I have emphasized is
81:37 - that it's hold
81:43 - on next step is to train the model so
81:46 - I'm going to say if the key pressed is
81:52 - T don't add an example but but
81:55 - rather train the model and uh let's give
82:00 - it train it over 50 Epoch and have a
82:03 - call back when it's finished
82:20 - training let's also um let's also add an
82:24 - option to save the data just in case I
82:26 - kind of want to like stop and start a
82:28 - bunch of times and not not collect the
82:29 - data
82:42 - again all right
82:58 - and I'm ready to go except I missed
83:00 - something important I have emphasized
83:02 - before that when working with neural
83:04 - networks it's important to normalize
83:07 - your data to take the data that you're
83:09 - using as inputs or outputs look at its
83:12 - range and standardize it to some
83:14 - specific range typically between zero
83:16 - and one or maybe between negative one
83:18 - and one and it is true that ml5 will do
83:21 - this for you I could just call
83:23 - normalized data but this is a nice
83:25 - opportunity to show that I can just do
83:28 - the normalization myself for
83:30 - example I know this is another reason to
83:32 - make a separate array sort of um I know
83:35 - that the range of Any Given pixel color
83:38 - is between zero and 255 so let me take
83:41 - the opportunity to
83:44 - just um divide every RGB value by 255 to
83:48 - squash it to normalize it between zero
83:50 - and one
83:55 - all right let's see how this goes
83:57 - oh yeah let's just see how this
84:03 - goes so H
84:07 - oh so H for here I
84:12 - am bunch of
84:15 - examples and N for not here
84:25 - what an
84:28 - interface and now t for
84:34 - train zon zoinks
84:54 - what did I
85:00 - miss just adding the normalize data
85:02 - function
85:04 - in
85:18 - whoops you know I really should put
85:20 - something in that's console login
85:41 - oh wait no that's me being here
85:45 - whatever it's backwards but I don't care
85:47 - right now I'm just trying to test it
85:51 - out okay so that's working now because I
85:54 - added this in but I don't want to do
85:57 - that what am I
86:05 - missing it really should work without
86:07 - calling normalized data and I
86:10 - think I need to investigate why uh
86:32 - yeah so what's going on
86:34 - here because I've really tested it not
86:37 - requiring normalized data in fact the
86:40 - example I thought doesn't use
86:49 - it l rest pixels
86:59 - right I'm doing the
87:02 - same exact thing
87:09 - here I don't call normalized data let's
87:12 - look at this earn this
87:15 - example is it because it's not doing
87:17 - classification
87:35 - no oh it's not working without calling
87:37 - normalized data hold on this is a
87:44 - bug have an
87:47 - idea I think there's a function called
87:50 - uh hold
87:52 - on you're going to get to the bottom of
87:54 - this
87:56 - everybody
87:58 - Source uh neural
88:01 - network
88:05 - um let's look
88:18 - here this is the
88:21 - release oh has this not been do I need
88:23 - the develop maybe I need the newer
88:25 - version has this
88:40 - fixed hold on a sec let's go to release
88:44 - no I'm in development so never
88:47 - mind I'm in
88:52 - development I thought there's like it
88:55 - checks to see I remember something where
88:56 - it checks to see if the data has been
88:58 - normalized let's see a
89:00 - normalize oh let's look in um here
89:24 - this like warmup
89:47 - thing so confused
90:13 - I should give up on this
90:27 - inputs
90:49 - outputs nobody in the chat is giving me
90:51 - the answer to this debug this if
91:00 - issue well I guess I should just go back
91:11 - to I guess I should just go back to
91:20 - um oh wait a second
91:28 - this is what I'm looking
91:35 - for is normaliz so there's some things
91:39 - that happen Beyond just normalizing the
91:42 - data
91:44 - here this data normalize data data raw
91:48 - prepare for training
92:13 - so can I
92:16 - call just want to like see if I can like
92:20 - kind of hack a little fix to this right
92:23 - now
92:28 - prepare for
92:32 - training is that what I
92:34 - do is normalized equals false says
92:40 - Sam I think it needs to do some other
92:44 - stuff um okay hold on let me go back
92:48 - to let me go back to my example
93:08 - just quickly
93:11 - see pick prepare for training is not a
93:17 - function this what's this
93:47 - let's have a
93:48 - look
93:51 - at pixel brain
94:15 - all right taking a
94:17 - look data
94:20 - config meta
94:26 - data is in
94:28 - there ready
94:55 - so Simon asked me why don't I just go
94:57 - back to normalized data because I mean
95:00 - so that would make sense if I wanted to
95:01 - be most efficient about my time but I
95:03 - really want to know it's bothered me
95:05 - every single time that it doesn't
95:08 - work um I don't think it's as simple as
95:10 - just setting is
95:12 - normalized equal to
95:19 - True hold on I have
95:22 - a I have a bit of a
95:26 - um a way of sort of asking this question
95:30 - hold
95:42 - on what I don't understand is this is
95:45 - clearly a function
96:05 - well maybe Simon is right and I should
96:07 - debug this later neural networks's meta
96:10 - is normalized all right let's try hold
96:13 - on one data raw prepare for training
96:16 - data raw yeah this is what I want to
96:21 - do prepare for training data raw but
96:25 - what why is that not a
96:31 - function neural network I make a new DIY
96:35 - neural network is this because I'm in in
96:39 - in release it's not a function prepare
96:42 - for
96:43 - training oh
96:46 - oh oh I do need to use the built version
96:51 - from
96:52 - development hold on on everybody hold
96:57 - on a there's still there's like 300
96:59 - people here I don't know why that's the
97:01 - case hold
97:10 - on oh why did that
97:19 - happen uh
97:31 - oh oh right I forgot there's a whole new
97:34 - built version hold on let me just try
97:38 - this
97:44 - uh I'm G to just build the library from
97:46 - that Branch development for a second
97:53 - while that's
97:56 - happening let me know I lost like in the
97:59 - last five seconds I lost like 15 viewers
98:02 - uh this is going to take a minute to
98:03 - build so while that's happening let me
98:07 - talk to you about a wrong wrong button
98:10 - let me talk to you about today's sponsor
98:12 - of the coding train uh friends over at
98:15 - brilliant.org if you here's the thing
98:20 - sometimes when you're coding you get
98:21 - totally stuck and you absolutely the
98:23 - smartest thing you can possibly do is
98:25 - take a break and go take a walk rest
98:28 - call a friend call your mom I don't know
98:31 - something uh I don't you know one thing
98:33 - you could do is like go do a puzzle now
98:34 - maybe if you're coding your break
98:36 - shouldn't be a puzzle but often from
98:38 - something else I'm doing my break is a
98:39 - puzzle and brilliant.org is a lot more
98:41 - than just puzzles but um uh
98:44 - brilliant.org is an interactive website
98:46 - for lifelong Learners looks like my
98:49 - library has built um and it's something
98:51 - that I really enjoy and take a a lot of
98:54 - inspiration from so brilliant.org
98:57 - actually has a whole bunch of new
98:59 - courses on their website one of which is
99:02 - called algorithm fundamentals and
99:04 - they're completely interactive so a
99:07 - totally different way of learning from
99:09 - just like watching me Babble on and mess
99:11 - around and get stuck all the time is
99:13 - something like Brilliance and you can
99:14 - see right here being demonstrated this
99:17 - algorithm uh a contact searching
99:20 - algorithm and then you can actually play
99:22 - around and interactively move stuff and
99:25 - change stuff this is just you know like
99:27 - it's basically like working with pseudo
99:28 - code to develop an algorithm uh to learn
99:31 - about an algorithm
99:34 - um so um this new course has bigo
99:37 - notation conditionals Loops arrays all
99:39 - of these uh fundamentals programming
99:41 - there Dragon drop exercises it's the
99:44 - Bedrock of any education in computer
99:46 - science um and and usually you're stuck
99:48 - with like sort of like fighting with all
99:50 - this like syntax and so this is a really
99:51 - nice way of learning these con conepts
99:53 - interactively um in a really fun way
99:56 - there also is the um CS fundamentals
99:59 - course um which I can show you a little
100:02 - bit of here um so in terms of again this
100:05 - is all interactive of writing programs
100:07 - and how fundamentals and computer
100:08 - science Works um that's something that
100:10 - you would absolutely take uh take a look
100:13 - at you know it's January I'm a little
100:15 - bit late for this but you know you might
100:16 - have a a New Year's resolution to learn
100:19 - something new this year to learn
100:21 - something every day uh to try out an
100:23 - algorithm every day uh prove yourself a
100:26 - little bit every day and so something
100:27 - like brilliant is a great way of doing
100:29 - that um let me come back over here one
100:32 - of the things I like to do is look at
100:34 - what the daily challenges
100:36 - are um and so um there's two of them
100:39 - today Simon was telling me there was a a
100:41 - recent let me get the chat back up here
100:43 - for
100:44 - me um Simon was telling me that there
100:48 - was a um a recent um
100:53 - daily challenge that was related to
100:55 - something I did and maybe Simon you can
100:56 - remind me of what that was but um I this
101:00 - let's see am I logged in yeah I'm logged
101:02 - in under my premium account let's go do
101:04 - this one I love these kind of puzzles so
101:07 - I I um so this is a grid fill puzzle
101:09 - it's like similar to sodoku and you
101:12 - place numbers and squares in a certain
101:13 - way but certain
101:15 - way and so the idea here is that they
101:18 - have to add up so I can't this is
101:21 - showing me how I'd step through the
101:22 - solution to figure it out so let's go
101:24 - try let's together try this
101:27 - puzzle this will be
101:30 - fun okay oh it's actually asking me how
101:33 - many solutions does this puzzle have
101:35 - well let's just see if we can get a
101:36 - solution maybe it's
101:38 - zero zoom in
101:42 - here all right so the way that I do
101:44 - sidoku at least is I always look for
101:46 - something where a certain number has to
101:48 - be in a certain
101:50 - spot so if I have two ones two twos two
101:53 - three three
101:56 - threes let's let's look at I think gr
101:58 - gray means uh nothing could go there so
102:00 - that's like a
102:01 - zero so why did I interrupt the ml5
102:05 - sorry Suzanne I'll be getting back to it
102:08 - uh just thanking brilliant who is just
102:09 - the sponsor a series of Simon tiger
102:12 - series of two challenges balanced
102:15 - Perfection that's the one I should go
102:16 - back and look at okay so it looks like
102:18 - here to get to nine if I have a two I
102:22 - mean one of these has to be a four one
102:23 - of these has to be a four one has to be
102:25 - a three right that's the only way I can
102:26 - get to
102:28 - nine
102:31 - so uh that one could be a four either
102:34 - could be a four let's try one of them
102:37 - either one of these could be a four what
102:38 - if I do it here there will cause an
102:41 - issue if I put it here because then this
102:43 - has to be a three and then that one has
102:45 - to be a
102:47 - two and that still works there's no like
102:49 - that's not not working um and here
102:54 - you know these could be two twos a three
102:55 - and a one so to me it feels like I could
102:58 - this is not a definite like either one
103:00 - this one well if this is a four this one
103:02 - has to be a u a one to be seven and this
103:07 - one has to be a three let's just see if
103:09 - this solution plays out then over here
103:12 - ah then this has to be a four so this
103:14 - could cause a problem or maybe it's
103:17 - right then this has to be nope nope
103:19 - though this won't work to put a four
103:21 - there because up at the top that one has
103:23 - to be a four to get six but I've already
103:25 - got six and I don't have a zero so great
103:28 - so now we know by process of
103:30 - elimination that this one has to be a
103:33 - four so then this one has to be a three
103:36 - then this has to be a two then this has
103:38 - to be a three I'm having stop talking to
103:41 - me then this has to be a
103:44 - one okay now
103:47 - what so to get I have one two three and
103:50 - four left to get to seven
103:53 - a four and a one or a three and a two
103:56 - and to get to six the same thing a four
103:58 - and a one or a three and a two I think
103:59 - oh and then same thing across does
104:02 - diagonal have to do anything no so I
104:04 - think there's going to be two solutions
104:06 - here right so let's just try one let's
104:07 - put a a four here which means this has
104:10 - to be a one and then a three here is
104:13 - that eight and then this one has to be a
104:15 - two that's one solution now let's just
104:17 - switch them can the four go here and the
104:20 - two go here the one go here and the
104:22 - three go here
104:23 - all right two is did I miss a third
104:27 - solution is there a third
104:32 - solution let's try
104:41 - two I want to make a in P5 a puzzle
104:45 - generator like this a sidoku puzzle
104:47 - generator
104:55 - all right one day streak okay um all
105:00 - right so um if you are interested in uh
105:05 - brilliant hold on a sec here I am gonna
105:09 - take a short intermission I just need to
105:11 - check
105:15 - something oh
105:17 - weird
105:19 - um my I was checking my in intermission
105:22 - animation which seems seems to
105:24 - be not
105:26 - working but I'm not going to worry about
105:28 - that
105:33 - um let me turn this off um um you can
105:37 - sign up for free at brilliant.org coding
105:39 - train um all of the daily challenges at
105:42 - least the one that is active that day
105:43 - are available for free and there's lots
105:45 - of other free content and then if you're
105:46 - interested if you like it you can
105:48 - consider signing up for the premium
105:49 - subscription and if you do that through
105:50 - that link you'll get uh the first 200
105:52 - people we'll do so we'll get a 20% off
105:54 - discount and they'll know that the
105:55 - coding train sent you let's just see if
105:58 - this
106:00 - works no that does work I don't know why
106:02 - that didn't work so take a take a minute
106:04 - to sign up I'll be back I'm gonna get
106:05 - some water and I'll be back in about
106:07 - five minutes to finish off the
106:09 - convolution thing
106:20 - [Music]
106:43 - [Music]
107:16 - [Music]
107:26 - [Music]
107:39 - [Music]
107:44 - [Music]
107:52 - e
107:58 - [Music]
108:09 - [Music]
108:14 - [Music]
108:20 - [Music]
108:30 - [Music]
108:41 - [Music]
109:13 - [Music]
109:29 - all right coming back in just a minute
109:31 - or
109:31 - two got the mic on I think you can hear
109:40 - me
109:42 - okay going to take a slightly shorter
109:45 - break uh just to get a move on here with
109:49 - this I've really got to figure this out
109:52 - because it's it's making me crazy okay
109:54 - so what did I do I built the
109:58 - library and it should be here under dist
110:01 - this should be the one that I just built
110:03 - uh just now today 3:4 p.m. so let's
110:06 - manually add the library to this project
110:11 - let's stop
110:13 - here
110:17 - um let's do
110:20 - this and
110:29 - um let's see what happens oh then let's
110:32 - change it to the local version of the
110:42 - library I forgot that I had this
110:44 - horrible issue and I should just
110:46 - normalize the data with the function but
110:48 - I'm stubborn and I have uh this here
110:51 - okay let's see here
111:00 - here all right didn't say
111:03 - oh prepare for training is not a
111:07 - function am I losing my
111:16 - mind uh do I have to add some examples
111:18 - first
111:27 - pair for training is not a
111:32 - function all right I'm gonna have to
111:33 - just go back to normalize
111:38 - data I cannot solve this right
111:49 - now weird
111:56 - actually you know what I
111:59 - can by golly I
112:04 - can you're I'm sorry everyone but I'm
112:07 - gonna be really stubborn about this
112:09 - because this is the time for me to look
112:11 - at this the future of ml5 is at stake
112:15 - here not getting to convolutional neural
112:17 - networks am I um okay let me go to
112:28 - actually what is the latest
112:31 - Branch um with the neural network
112:38 - work oh maybe that was there's no active
112:42 - Branch so yes so it's it is
112:45 - development um
112:53 - so something that I can
112:55 - do is I can do so if I'm in the library
112:59 - I can do npm start
113:02 - run and what that's going to do is
113:04 - actually host a local version of the
113:07 - library right here at localhost 880 ml5
113:12 - JS so here's the built version of the
113:16 - library and I can copy this and in the
113:20 - sketch that I'm working on
113:26 - I can let's get rid of
113:29 - this well yeah I can go into
113:35 - index.html and it should I should be
113:37 - able to load that version of the library
113:41 - that I'm working with
113:43 - locally so
113:47 - now ml5 is not defined
113:53 - I've gotten this to work
114:04 - before there it
114:16 - is that shouldn't do it that won't do it
114:22 - I can't get this to
114:24 - work all right let's take we're going to
114:26 - take some Extreme Measures
114:29 - here um and we're going to download this
114:40 - sketch oh
114:42 - seriously um and
114:48 - now why F the compile
115:01 - okay um what is going on
115:04 - here
115:08 - um gonna go
115:12 - to all right
115:18 - uh open up this sketch and visual studio
115:21 - code take a a look at it
115:26 - whoops thought I was being so clever by
115:28 - putting the dock to the right okay so
115:30 - let's look at this
115:56 - going to build the local version of the
116:08 - library
116:10 - okay then I'm going to run over here I'm
116:13 - going to run a
116:14 - server oh
116:18 - really that's weird
116:32 - what's going on with my setup
116:40 - here okay I'm running the
116:43 - server
116:48 - yes
116:50 - okay something is happen
116:54 - happening we're going to solve
116:58 - this we're going to solve this okay
117:00 - where okay what I've got going on right
117:02 - now is I have
117:04 - built a local version of the library at
117:08 - Local Host 880 ml5
117:10 - JS then I
117:14 - have also my sketch running here I have
117:19 - the code for my sketch in Visual Studio
117:21 - code and it is referencing
117:24 - oh okay it is
117:31 - not it should
117:35 - reference
117:36 - this version of the
117:40 - library see what I get
117:44 - now okay
117:46 - great so just to be really really really
117:50 - sure that I'm actually working with my
117:52 - own built version of the library that I
117:54 - can edit I'm going to go back to the
117:56 - library and I'm going to go to the
117:58 - neural network
118:02 - Constructor
118:05 - oh uh oh so wait why is there some of
118:08 - like a
118:10 - DIY why was it called DIY
118:17 - somewhere it's
118:19 - weird um I was think it called DIY I
118:22 - think something's changed but I'm going
118:24 - to go to
118:26 - this sorry for all the
118:33 - scrolling um I'm going to go to index HS
118:36 - here and I'm going to just say console
118:40 - log Cho
118:42 - Choo so now I am and now if I go back to
118:47 - terminal it's re it should have rebuilt
118:50 - the library with that new console log
118:54 - and there we
118:56 - go choot choot so my changes to the
118:59 - library are taking
119:06 - effect now what I actually want to do I
119:09 - just realized is I don't want to go
119:11 - through I don't want to deal with having
119:13 - to collect the data
119:19 - constantly well let me just let's go
119:21 - through the motions here for a
119:24 - second I'm collecting some
119:26 - data oh I'm in such a better place for
119:29 - debugging
119:33 - now prepare for training is not a
119:35 - function fine fine I believe
119:39 - you there is no prepare for training
119:48 - function it's not here it was
119:53 - because I'm in oh
119:57 - wait let's get the
120:02 - latest G to get rid of my
120:11 - changes so I I'm not synced with the
120:14 - latest that's on
120:17 - okay now I'm
120:20 - synced should have rebuilt the library
120:23 - it rebuilt the library let me put
120:26 - my cho cho back in there ah see again I
120:31 - knew it was called something different
120:33 - DIY neural network oh
120:44 - boy compiled
120:47 - successfully Choo Cho
120:53 - collect some
120:55 - data call train
121:04 - aha it didn't tell me that the prepare
121:07 - thing was an issue all
121:11 - right let's go now
121:15 - to back to my
121:17 - example and let's try
121:24 - what I'm going to do
121:26 - is as soon as the video is
121:33 - ready let's do something very very silly
121:36 - which is just add example add example
121:38 - add
121:41 - example
121:46 - um I wanted to like add some data real
121:50 - quick hold that
121:54 - set time out add
121:58 - um add
122:00 - example
122:01 - a so like do that 100 milliseconds from
122:06 - now let's add just like two
122:10 - examples and then let's do a
122:18 - b so I I really don't care
122:22 - that the data is
122:23 - meaningless and then
122:28 - um half then at 500 milliseconds half a
122:33 - second later let's call
122:38 - train so pixel brain train finish
122:44 - training so I just want to do something
122:47 - to test this idea
122:49 - out that um
122:53 - um oh quickly add some data this is like
122:56 - a little quick sequence like add some
122:58 - data and then call train and see what
123:02 - happens without
123:15 - okay
123:18 - weird oh wait wait wait wait wait let's
123:20 - take out the key pressed
123:39 - sketch line
123:42 - 50 weird what is going on
123:54 - oh you know
123:57 - wait yeah sorry I think I
124:00 - have uh hold
124:04 - on it was
124:08 - caching disable cach I don't know why
124:10 - this computer it's like
124:19 - okay all right so it's doing something
124:23 - maybe it actually
124:29 - works this is
124:31 - weird has it been working all along and
124:33 - I just have the wrong version of the
124:39 - library um let's take this
124:43 - out and let's go back to my method
124:56 - okay we're going to add some examples of
124:58 - me being
125:00 - here
125:03 - oops what's in the ad example console
125:06 - log let's get rid of this yeah that's
125:12 - fine I'm here I'm here I'm here what
125:15 - sketch 37 get rid of
125:20 - this I'm here I'm here I'm here I'm here
125:22 - I'm here I'm here I'm here I'm here I'm
125:24 - here I'm not here I'm not here I'm not
125:26 - here I'm not here I'm not here I'm not
125:28 - here I'm not here now let me train the
125:31 - model oh
125:35 - whoa
125:37 - huh well
125:40 - that's W weird that it's like working
125:43 - now so what's changed so let me be more
125:47 - thoughtful about actually collecting
125:49 - some
125:51 - but I was say like what better data
125:53 - could I possibly
126:07 - collect let me cor
126:10 - collect very ridiculously
126:15 - 100
126:19 - samples and then
126:25 - let me do
126:27 - 100 of not
126:39 - here and then boy but welcome to what
126:42 - programming is because like it wasn't
126:44 - working and then I downloaded locally
126:46 - and rebuilt everything thinking I'm
126:47 - using the exact same thing and it is
126:49 - working so clearly there's some mismatch
126:52 - somewhere which I haven't discovered yet
126:55 - this is what coding is uh oh is there a
126:58 - save data okay so I saved that data I
127:00 - don't need to collect it again let me
127:02 - try
127:04 - training
127:08 - yeah oh thank you Marcos for the happy
127:10 - New Year message all right so this is
127:12 - totally
127:14 - working what without I don't have do I
127:17 - have normalized data in there and I'm
127:18 - like going crazy
127:26 - no no no all right this is insane all
127:30 - right I'm gonna take this all this
127:33 - code let me call load let me just try
127:37 - loading the
127:44 - data how big is this
127:47 - file 1.4
127:49 - megabytes uh
127:51 - shiftman do Json let's just call it
128:04 - data and then let me
128:13 - just soon as it's loaded let me call
128:16 - train so now I'm just seeing like well
128:18 - can I get this result again with no
128:26 - normalizing
128:28 - yes all right so now we're going back to
128:30 - the web
128:33 - editor and we're going to duplicate
128:36 - everything and take all this
128:38 - code and paste it
128:42 - in then I'm going to go here take this
128:46 - which is exactly the same and paste it
128:49 - in
128:51 - and try running it in the web editor
128:54 - does it
128:56 - work ml5 is not defined why is the web
128:59 - editor not able to load from Local Host
129:01 - I could have sworn I've done this
129:05 - before that's
129:07 - weird why does this not work in the web
129:10 - editor I could have sworn I have done
129:12 - this
129:17 - before anybody know
129:27 - weird all right so let's go back
129:32 - to here and do npm what let's try
129:36 - building the
129:44 - library going to get rid of this disc
129:47 - folder
129:51 - npm run
129:57 - build I don't think that I need my
130:00 - Global IP
130:01 - address I'm not I don't I should I've
130:04 - been able to access local things
130:08 - before
130:11 - cores I guess I need to have cores in I
130:13 - guess cores isn't enabled on
130:18 - the but I'm accessing it from a separate
130:20 - server
130:24 - yeah I'm using a different server for my
130:26 - example though a different port I don't
130:28 - really know
130:34 - why remember I said I was going to stop
130:36 - at
130:41 - 4 I gotta get back to my roots on this
130:44 - channel all this machine learning ml5
130:47 - stuff is making me crazy come on build
130:49 - this Library
130:56 - okay so Simon is telling me to remove
130:59 - the Choo Cho no no I want the Choo Cho
131:01 - in there because I that is the one thing
131:03 - telling me it's actually the same
131:04 - version of the library I mean I do need
131:06 - to remove it
131:08 - eventually um so this this I just built
131:11 - this
131:11 - now so now if I go here and do add
131:18 - file bring this in here
131:21 - then I should be able to
131:30 - say okay good sign it doesn't have the
131:37 - data so now I can bring that data in
131:59 - okay
132:01 - okay
132:06 - okay all
132:10 - right I'm going a little crazy
132:18 - but that's okay
132:39 - where's my key
132:43 - pressed
132:48 - yeah okay so now
132:53 - Choo
132:57 - Cho oh wait no not here not here not
133:00 - here not here not here not here not here
133:02 - not here not here not here not here not
133:03 - here not here here
133:09 - here
133:12 - okay I don't know what was going on it's
133:14 - a mystery to me I just didn't have the
133:18 - most recent in development version of
133:21 - the ml5 library that has some bug fixes
133:24 - in it that clearly make this work and I
133:27 - just spent an hour discovering that
133:30 - there was nothing wrong with my code
133:31 - there was nothing there's no bug in the
133:33 - ml5 library I just was doing it wrong
133:36 - with the wrong Edition version thing
133:41 - bobber and
133:44 - you all eight of you that are
133:49 - left got to enjoy
133:55 - that yeah I should have kept the
133:57 - previous code to compare
134:01 - well yeah now I do want to get rid of
134:04 - the choo choo
134:06 - message just because that's gonna be
134:09 - confusing um so let me do that really
134:16 - quick let me do get stash
134:21 - then let me build it
134:29 - again oh
134:39 - boy I'm so sad that the title of this
134:42 - video says convolutional neural
134:45 - network Zachary MacArthur writes I
134:48 - really enjoyed watching this and that is
134:49 - very very nice of you to say even if
134:51 - it's not true I think it is true that
134:52 - that felt like a very genuine message
134:54 - but even if it wasn't true I appreciate
134:56 - the effort it took to write that um okay
135:00 - uh come on build build I want you just
135:01 - start the
135:04 - music arm me is watching from India and
135:08 - it's 2:10
135:11 - a.m. thank you
135:28 - okay now one more
135:31 - try um we're going to get rid
135:34 - of this version of the
135:40 - library we are going
135:42 - to add
135:48 - file this version of the library
136:06 - okay if I could possibly if anyone could
136:08 - possibly remember where the hook cookie
136:13 - Kaka I
136:17 - was close out this stuff
136:22 - I'll leave this open I just minimize
136:26 - it I can close out this
136:33 - stuff so I think
136:36 - honestly I'm just back to where I
136:41 - was um dt6 why don't you start streaming
136:45 - a little earlier like the good old days
136:47 - I would I think next Friday I'll be
136:48 - streaming in the morning so next Friday
136:50 - where I will be continuing this because
136:52 - I'm clearly not getting to that much of
136:54 - it today I will be streaming in the
136:55 - morning all right nor Isaac I think is
136:58 - reminding me of where I
137:07 - was okay
137:21 - let's see if this
137:24 - works I'm going to collect it so I'm
137:26 - going to press this is a little bit
137:28 - silly but I'm going to press h for me
137:30 - being here in front of the
137:33 - camera oh
137:41 - whoops then I'm going to move off to the
137:43 - side and I'm going to use n for not
137:46 - being in front of the camera so I'm not
137:49 - here
137:52 - and I'm just GNA do a little bit right
137:54 - now and then I'm going to hit t for
137:57 - train and whoa loss function going crazy
138:01 - but eventually it gets down it's a very
138:03 - small amount of data that I gave it to
138:05 - train but we can see that I'm getting a
138:06 - low a low loss function if I had built
138:09 - in the inference stage to the code it
138:12 - would probably start to guess Dan or no
138:18 - Dan so let's add that in
138:23 - so once it's finished training let's add
138:26 - a function called predict or
138:30 - classify say classify
138:38 - video and to be honest this is exactly
138:41 - what I've done this this is no different
138:43 - than everything in the previous video so
138:44 - I'm just going to type it out again
138:52 - or maybe I'll just copy paste
138:55 - it let's go to hold
139:18 - on oh but I have to get the inputs
139:29 - oh I I'll do it
139:34 - again yes
139:40 - sorry when I'm finished training then
139:43 - I'll start classifying
139:50 - the first thing I need to do if I'm
139:51 - going to classify the video is pack all
139:54 - of those pixels into an input array
140:16 - again then I can call classify on Pixel
140:19 - brain
140:42 - and add a function to receive the
140:44 - results
141:16 - thinking how I want to demonstrate this
141:22 - could draw it on the
141:24 - screen I could console log it I could
141:26 - make a paragraph element
141:51 - let's do something fun and have it say
141:52 - hi to me so I'm going to make this
141:55 - label a global variable with nothing in
141:58 - it and then I'll say label equals
142:00 - results label and then here in
142:06 - uh and after I draw the
142:10 - pixels let's just say Phil
142:13 - 255 text
142:19 - size after I draw the pixels let's write
142:22 - either right high or not WR
142:48 - high so just to see that this works
142:50 - let's make the label H to
142:52 - start
142:54 - and it says
142:56 - hi now let's not make it h and let's go
143:00 - through the whole
143:11 - process oh wait no I'm doing it wrong
143:13 - it's gonna say hi when I'm away
143:17 - ah let's go through the whole process of
143:19 - collecting the data
143:32 - again train the
143:42 - model and says
143:45 - hi no don't say hi
143:48 - anymore oh I forgot to
143:53 - uh I forgot to classify the video
143:57 - again after I get the results so it
144:00 - classified it only once and I want to
144:02 - then recursively continue after I get
144:04 - the results to classify the video
144:18 - again I actually
144:25 - oops let me just
144:35 - say just so we can finish this out I
144:38 - actually saved all the data I collected
144:40 - to a file called data. Json and now I
144:42 - can say pixel
144:45 - brain load data data. Json and when the
144:50 - data is
144:56 - loaded then I can train the
145:04 - model so now I've eliminated the need to
145:07 - collect the data every single time let's
145:09 - run the
145:10 - sketch it's going to train the model I
145:13 - don't really even need to see this and
145:15 - it gets to the end hi no
145:25 - [Music]
145:31 - hooray oh David Snider what did you miss
145:35 - oh so much so much you missed so much
145:50 - two things I'm really curious
145:53 - about
145:55 - is just to see how this works with
146:08 - objects I'm actually really curious to
146:10 - see how this works with objects so maybe
146:12 - I'm going to try this uh mug
146:16 - um I'm G to compare this to teachable
146:19 - machine I don't have I have a I have the
146:32 - ukulele I'm really curious to see how
146:35 - well this works with objects so and what
146:39 - is distinctive here I'm going to try
146:40 - this with this ukulele let's try three
146:43 - let's be bold and try three objects I'm
146:45 - going to try the
146:47 - ukulele this uh
146:51 - a Rubik's
146:52 - Cube and then also this coding train
146:55 - notebook uh which you can get online but
146:58 - I'm not advertising that here but let's
147:00 - just try let's try these three things
147:03 - I'm going to run the sketch
147:06 - again and I'm going to press U for
147:18 - ukulele can I yet how will this compare
147:22 - to a teachable machine image classifier
147:24 - this is just a vanilla neural network
147:27 - with one layer a 10 by1
147:30 - pixels one hidden
147:32 - layer so that's a bunch of examples for
147:40 - ukulele the Rubik's Cube is small but so
147:43 - R for Rubik's Cube
147:59 - okay and then notebook n for
148:06 - Notebook because I want to have
148:07 - something to compare for the
148:09 - convolutional neural network that I'm
148:11 - eventually going to
148:16 - build all right now I'm going to save
148:20 - this
148:23 - data so let
148:33 - me I'm going to call it three
148:37 - objects uh yuk Rubik's Rubik what was
148:42 - that note
148:50 - so I'm going to upload this file UK
148:52 - rubic note let's get rid of
148:58 - this I'm going to upload this file UK
149:00 - rubic note uh to my
149:07 - sketch and I'm G to
149:10 - load that as the
149:18 - data and incidentally
149:20 - I need to change the number of outputs
149:22 - to three it's actually going to infer
149:25 - from the data so even if I make that
149:26 - mistake I think it's going to ignore it
149:28 - but I like to have that in there just as
149:30 - like it's my uh you know Comfort safety
149:32 - blanket thing um and then let's
149:40 - just draw
149:43 - on the let's just draw the
149:47 - label so
149:51 - and again I didn't bother to include a
149:54 - nothing category which I should
149:58 - have so model seems to be training no
150:04 - problem and so now
150:06 - it okay R for Rubik's that's good what
150:10 - else did I do
150:14 - ukulele youu for
150:17 - ukulele kind of working
150:20 - and do I get an
150:23 - N an N for
150:29 - Notebook now you can see how sensitive
150:32 - it is I think teachable machine would
150:35 - probably have had more of sort of
150:38 - flexible accuracy meaning it probably
150:40 - would have kept with notebook even as I
150:41 - moved this back but this really learned
150:44 - that I was like sort of filling the page
150:47 - with these blue
150:48 - pixels uh
150:51 - um so in the chat um uh is being
150:55 - suggested that you should add an element
150:56 - to the page so you can add your own data
150:59 - so right you could now build an app
151:01 - where somebody coming to this could
151:04 - train their own model by typing in their
151:07 - own labels and that's really what
151:08 - teachable machine does but I'm not
151:10 - really trying to create an image
151:12 - classifier here I'm just trying to
151:14 - demonstrate the sort of capabilities of
151:17 - ml5 with looking at just just raw pixel
151:21 - information as input to a neural
151:24 - network the next step is for me to go
151:27 - onto a
151:36 - new I really want to try a regression
151:51 - I'll fix this
151:59 - later four o'clock it's four o'clock
152:02 - people one example a day is pretty much
152:05 - what I'm what I'm uh getting to it would
152:09 - seem um
152:28 - just quickly try something I got to do
152:30 - this for my own
152:33 - sanity I'm G do pixel
152:39 - regression
152:46 - and um
152:53 - I just want to sort of like see this
152:56 - with
152:57 - the uh neural network this with this
153:00 - neural network regression
153:02 - example so what do I need I need uh all
153:06 - this stuff to do an
153:15 - oscillator and then I need
153:31 - um
153:35 - to
153:43 - um this I'm going to need for when I get
153:45 - the results
153:57 - um I want to create a
154:05 - slider so where do I where do I have
154:10 - add
154:13 - data add data frequency fre Target
154:16 - frequency okay
154:20 - okay got it so now what I want to do is
154:23 - do
154:28 - a oh I'm in the close post classifier
154:31 - cancel um let's create a
154:39 - slider and have it go from 200 to 800
154:43 - and start at
154:45 - 440 and then uh let's do slider.
154:54 - input uh
154:57 - oops wave. frequency the slider. value
155:03 - so I just want to quickly uh see if I
155:07 - can get a
155:11 - slider to control the
155:15 - frequency do I need to say uh wave.
155:18 - playay or something
155:28 - start oh I don't want an
155:31 - envelope it's much
155:42 - simpler okay now I need to also make
155:45 - sure you're hearing
155:47 - this uh so out
155:51 - put sound output multi-output
155:59 - device can you hear
156:02 - this is it overwhelming the volume is it
156:04 - too loud
156:32 - and then I'm going to do the
156:35 - thing where I I'm GNA do the thing where
156:38 - if I say
156:39 - d well keep s uh if I say
156:45 - d i
156:53 - I'm just getting pieces from all my
156:55 - previous
156:56 - examples pose deploy regression
157:00 - no uh data
157:02 - collection pose data collection
157:05 - regression I get this delay
157:11 - function Grandma here let just stick
157:13 - this in the bottom
157:23 - um and then
157:28 - uh oh no then I say
157:32 - uh let State equals uh
157:37 - waiting and I say uh State equals
157:43 - collecting await delay 10 seconds State
157:48 - equals
157:50 - awaiting and then in
157:56 - draw the target is now slider.
158:03 - value adding example slider.
158:07 - value um because it's a
158:10 - regression uh and that should be divided
158:14 - by 800 I'm going to like manually
158:17 - normalize here
158:21 - continue to manually
158:22 - normalize uh and
158:26 - then um I'm just going to call in
158:29 - draw if State equals
158:34 - collecting uh add
158:46 - example so let's see what do I say d
158:52 - okay so this is
158:54 - working it's adding
159:03 - examples and then if I hit
159:08 - T all right well I didn't move it's not
159:11 - going to learn anything because I all
159:13 - the examples had the same image
159:19 - so that's fine let's
159:23 - stop so when I train the
159:26 - model let's set wave amplitude to
159:31 - zero and then in got
159:34 - results do I have a got results function
159:37 - yet I need the got results function from
159:40 - here
159:52 - and what I'm doing I don't need to draw
159:54 - anything just want to set the
159:57 - frequency and also the slider or
160:00 - frequency value times
160:03 - 800 and then slider. value same thing so
160:10 - let res uh
160:12 - value equal results index z. value times
160:17 - 800 and let's say say value slider value
160:25 - okay here we go
160:28 - everybody
160:30 - [Music]
160:32 - uh should really invert it but whatever
160:35 - um this now what do I say d
160:43 - [Music]
160:57 - I don't know if 10 seconds was enough
160:59 - let's save that
161:01 - data
161:07 - Cas not not so
161:11 - promising oh is it too
161:13 - loud oh well somebody needs to tell me
161:16 - in the uh Discord sorry
161:20 - okay that's good to
161:25 - know
161:38 - uh hold
161:46 - on better
161:50 - sorry
161:51 - everybody I didn't
162:00 - know oh how do I
162:28 - is this
162:30 - okay try to make it a little
162:35 - quieter okay sorry
162:43 - everybody I need more than 10 seconds to
162:46 - collect the data
163:09 - let me just you know what I should let
163:12 - it normalize
163:15 - itself uh
163:19 - let me
163:23 - try let me try this again but I need
163:26 - more
163:29 - than 10 seconds to collect the
163:35 - data where's key pressed
163:42 - oh let me give
163:45 - myself like 30 seconds
163:49 - 30,000
163:51 - milliseconds let's try
163:54 - that okay
164:05 - [Music]
164:15 - [Music]
164:41 - okay stopped save the
164:44 - data train
164:52 - why is it not
164:56 - learning yeah I
165:01 - know why why why
165:07 - why oh hold on a sec something is
165:17 - wrong something is wrong
165:19 - did I save that
165:22 - data right oh huge amount of data
165:32 - okay the X's are 300
165:40 - pixels and the Y is just a number so
165:43 - this is
165:45 - right the data looks right
165:55 - so now I think the data is right so now
165:57 - I should be able
166:00 - to um do
166:04 - this and say pixel
166:08 - brain low
166:14 - data oh it's not going to let me upload
166:16 - a 12 megabyte file to the
166:20 - Ed let's download
166:24 - this which is good I'd much rather be in
166:26 - Visual Studio code right now trying to
166:28 - figure this
166:32 - out
166:42 - um ah
167:15 - why why why why
167:44 - um now
167:54 - put this in here going to
167:56 - [Music]
168:08 - load
168:17 - okay okay
168:20 - where's my got
168:37 - results all right let's see what happens
168:40 - here
168:47 - whoops so I'm not not getting a loss
168:50 - going
169:02 - down the posture is
169:05 - terrible all right good but I'm getting
169:07 - an error I like
169:10 - that okay sketch. JS line
169:17 - 66 oh
169:19 - weird
169:23 - entries oh oh it shouldn't be
169:25 - classify should be predict let's just
169:29 - train it for very few epochs right now
169:32 - to test get this going should say
169:36 - predict video
170:05 - where did I do the number repx let's
170:06 - just do like five
170:26 - value is
170:31 - zero what did I miss about training
170:35 - inputs task is
170:38 - regression why did this not work
170:51 - is my data
171:12 - bad I think my data is good
171:54 - I'm only getting zero out of the neural
171:57 - network so
172:03 - strange
172:14 - well let's try um
172:19 - let's try letting it normalize the
172:22 - data let's get rid of all my normalizing
172:32 - stuff and let's do this
172:35 - again um
172:52 - let's see what am I doing
172:57 - here let's take this
173:06 - out
173:11 - and ke pressed
173:26 - let's try
173:32 - this oh why am I not hearing the sound
173:56 - wait why am I hearing the sound
174:00 - now what
174:02 - did what did I
174:05 - miss I don't want to see These Warnings
174:09 - anymore how do I tell it not to give me
174:11 - the warnings
174:19 - font is too big I don't
174:21 - care
174:29 - um that's
174:34 - weird why am I not hearing the sound
174:36 - anymore where did I turn that off
174:53 - oh oh because of the
174:56 - like inter oh the interaction stuff I
174:59 - forgot about
175:16 - that okay sorry I forgot that
175:18 - Chrome will block starting sound okay so
175:20 - now I want
175:23 - to collect the data again
175:28 - [Music]
175:41 - [Music]
175:51 - [Music]
176:01 - save the data train the
176:06 - model
176:15 - huh remove outputs one
176:20 - I still have a divide by 255
176:29 - left let's get rid of
176:35 - these oh let's got to give it more
176:40 - Epoch ah okay thank you
177:05 - all right I don't need to collect data
177:06 - for 20 seconds for 30 seconds let's do
177:16 - 15 oh I had 50 pck there
177:28 - [Music]
177:45 - okay okay save this
178:01 - data I wonder
178:09 - if it's just stuck at
178:14 - 800 just stuck at 800 I wonder if
178:40 - does it
178:41 - [Music]
178:44 - need all right let's look at
179:08 - let's try giving it
179:14 - um the video it's 30 let's give it50
179:18 - let's give it many more hidden
179:21 - units and let me grab this data I
179:25 - collected um so this is pixel freak 2
179:30 - wow it's so much less data
179:49 - now
179:54 - let's
180:01 - nothing 50 hidden units many more
180:07 - parameters oh I'm getting one
180:10 - out oh because I probably
180:23 - I'm really
180:32 - stuck well I should give up on this try
180:35 - quantizing the output to a musical scale
180:38 - yeah I could do the
180:44 - classification people are giving me some
180:46 - good suggestions but this
180:51 - should in
180:54 - theory work I'm worried that I'm the
180:57 - data is bad and I'm like there's
181:00 - a let's take a look at
181:03 - this uh this
181:07 - one these are all the pixel
181:15 - colors and then when I go to y
181:20 - 200
181:27 - yeah
181:31 - 200 there should
181:35 - be wait a
181:38 - second wait a second no Y is 464
181:57 - well I'm gonna upload this for people to
182:01 - take a look at I I gotta I gotta just
182:03 - give up on this right
182:05 - now let me clean this up a little bit by
182:09 - getting rid of some unnecessary
182:13 - files um let me get rid of the P5
182:15 - Library
182:27 - I'm GNA let people take a look at this
182:29 - maybe somebody watching can
182:31 - like figure it
182:43 - out so what I need here is
182:51 - these three script
182:57 - Tags I'm sad
183:02 - today unsure about what I'm doing here
183:05 - and if any of this makes
183:14 - sense I don't know why none of my
183:16 - formatting stuff was working things seem
183:19 - to
183:26 - be wait how is this how am I having a
183:31 - loss of 300,000 what is going on
183:34 - something is wrong with my data I mean I
183:37 - should I
183:39 - could so weird
183:57 - 16 hidden units what is going
184:03 - on did I spell regression wrong
184:19 - I guess I could try Okay I I gotta put
184:21 - this aside I got to take my own advice
184:26 - here and um close this
184:54 - okay I'm going to just make a repo with
184:58 - this
185:01 - code
185:12 - and upload it
185:39 - okay so let me a lot of people joined
185:42 - late or most people have left which is
185:46 - what they should have done um but uh
185:48 - Chris has asked me can you restate the
185:51 - problem
185:53 - so I was working on a tutorial video
185:58 - about the capabilities of ml5 and I
186:01 - looked at how to build an image
186:03 - classifier just reading a um a low
186:06 - resolution oh whiteboard camera went
186:14 - off so we'll come back in a second
186:18 - a low resolution version of the image
186:21 - with 300 RGB values so 10 by10 image RGB
186:24 - for each one 300 inputs uh into two or
186:28 - three different categories
186:29 - classification worked so then I redid it
186:33 - but I wanted to do a regression where
186:35 - the output is a continuous value between
186:37 - 200 and 800 and I couldn't get it to
186:41 - work I'm not sure where I went wrong to
186:43 - be honest my guess is that I actually
186:46 - don't I mean I don't know it might I
186:47 - don't have a
186:48 - guess
186:50 - um
186:52 - so I did I miss normalize
186:55 - data
186:58 - ah did I actually forget to type in
187:02 - pixel brain normalized
187:05 - data that was the whole point of me
187:07 - redoing this so that I put that did I
187:09 - just forget to type that line of code in
187:11 - there oh if this
187:14 - works I'm gonna I don't know what poop
187:16 - my pants is that the appropriate
187:19 - reaction
187:28 - um
187:30 - weird
187:31 - also
187:35 - huh oh am I not like running the server
187:38 - anymore huh oh I renamed the folder
187:51 - so many
187:55 - things
188:04 - well first of all don't play the
188:14 - sound Lori wrote a very nice comment
188:16 - which is it makes
188:18 - you'll get it working at some point not
188:19 - getting something work is always
188:21 - frustrating but don't be too sad it's
188:23 - always nice to see you work thank you
188:25 - Lori for that nice comment I mean part
188:26 - of what I'm doing is to show you that
188:28 - this is what it is Dena is asking can I
188:31 - make a logarithmic frequency spectrum
188:34 - yes um take a look at the um P5 fft in
188:38 - the P5 Sound
188:39 - Library but that didn't seem to fix
188:42 - it what is going on I feel like
188:46 - something is going on where the target
188:49 - is not
188:52 - right okay I have to put this aside and
188:55 - look at this and come back to it but let
188:58 - me at
189:02 - least go here and
189:11 - uh
189:13 - um add that in here
189:22 - yeah that
189:27 - should let me just give me let me just
189:30 - collect the data one more time not just
189:34 - for the sake of
189:43 - argument no no I put it here yeah I put
189:46 - the normalized data in
189:54 - here yeah so Josie is asking about
189:56 - normalizing
189:58 - so yeah why Aon is saying why is it
190:01 - 300,000 I've never seen anything like
190:05 - that is there I I can't don't recall if
190:08 - there's an existing example of
190:11 - this I'm very stubborn and I have
190:13 - trouble putting things away which is
190:15 - often the best thing is do I just look
190:17 - at this later I'm sure I'll figure it
190:19 - out
190:22 - um let me go to uh
190:27 - examples low rest pixels all of these
190:30 - are not regression examples the only
190:33 - regression example is this simple one
190:37 - and
190:38 - then I made a pose regression example
190:42 - which totally worked
190:53 - so one thing that I really want to do
190:55 - with this and I should um hold on let's
190:58 - let's be a little bit more thoughtful
190:59 - here for a second is let's
191:03 - now clone this repo because I I want to
191:06 - just do a couple more things on this
191:37 - want to do a couple more
191:43 - things um let me close out some other
191:46 - stuff
191:53 - um oh I don't know if it actually no no
191:57 - I think it was right um just do this one
192:00 - more time let me just okay so
192:04 - now that's not going to
192:09 - work still running the other server I
192:12 - don't want to do
192:21 - okay
192:24 - so still not
192:30 - working but one thing I want to do that
192:33 - could present a problem is I have some
192:36 - really redundant code which is I make
192:39 - this input array over and over and over
192:41 - again so I really should change this to
192:47 - I should write a function let's just put
192:49 - it at the
192:53 - top called get inputs where uh I make an
192:57 - array and I return
193:00 - it right so every time I want to get the
193:06 - RGB value
193:10 - inputs I should just call get inputs so
193:14 - here that's going to be in a few
193:15 - different places
193:17 - inputs
193:19 - equals get
193:23 - inputs and then and this is drawing so
193:26 - I'm going to keep that and then the
193:27 - other place that I'm doing it is in
193:30 - predict
193:34 - right
193:37 - oh
193:42 - yeah so that's making things a little
193:45 - bit more consistent
194:05 - um and let's not load the model anymore
194:23 - [Music]
194:46 - h no oh but at least we're back with
194:49 - like a loss that's at 0.
195:02 - five
195:06 - but no matter what I do I just get two
195:09 - it just only predicts
195:14 - 200 is there a bug
195:21 - one possible
195:30 - bug let me try
195:45 - this let me forget about the frequency
195:47 - for a second just turn that
195:55 - off and
196:09 - then let me just use like a a normalized
196:13 - range for the output
196:33 - you I have this suspicion that maybe the
196:35 - pixels aren't going in
196:37 - correctly like am I like not reading
196:47 - yeah all
196:58 - right only zero
197:08 - I yeah well that didn't none of that
197:11 - that didn't that didn't change anything
197:17 - have to put this
197:36 - aside just pushing those changes
197:43 - up um there one I mean
197:52 - all right I we now see the problem do
197:56 - you have XY rotated in your pixel array
197:59 - yeah but I'm not I'm actually using the
198:02 - raw pixels I'm not even X Ying
198:09 - anything I'm I'm going to have to
198:20 - um put this
198:30 - aside let's just pretend that this let's
198:33 - just go back to uh where I
198:37 - was close out all this stuff I
198:41 - mean last few little things I could try
198:45 - just just for the sake of
198:48 - argument let's try okay I have some wait
198:52 - I have let's just try a couple little
198:55 - things I can't
198:57 - resist
198:59 - um where are all the
199:12 - options mean could a different loss
199:15 - function is that what I need or learning
199:17 - rate I think I'm gonna I'm GNA
199:19 - investigate this later take a break
199:21 - thank
199:25 - you I'm
199:28 - gonna I'm going to go back to
199:36 - this
199:38 - one this was where I started with it not
199:41 - working I'm
199:45 - open pick neural network was this
200:05 - the so Mata maybe this can be salvaged
200:10 - whenever you end up looking at this and
200:12 - we'll discuss it by um
200:16 - basically I'm just going to like do a
200:18 - little wrap up here with this and
200:20 - demonstrate
200:22 - [Music]
200:24 - this
200:27 - and eron is saying maybe the regression
200:29 - function is broken and that's what I'm
200:31 - thinking but I got it to work with the
200:33 - poset example I made so I don't think it
200:35 - is
200:38 - [Music]
200:42 - um um Muhammad is asking a great
200:44 - question which maybe I'll join the
200:46 - Discord and and I can uh help you out
200:47 - there but I can try to answer it is
200:50 - confusing but there is a playlist that's
200:51 - good for getting started um so let me do
201:10 - this I was also curious okay let's see
201:17 - so it worked there with knowing whether
201:20 - oh we can always put something else
201:22 - behind me
201:26 - so I was also curious to see whether it
201:29 - would work to recognize a few simple
201:31 - objects like this Rubik's Cube ukulele
201:35 - and coding train notebook so I quickly
201:37 - collected some data and just labeled
201:39 - them with u are you are an n and it does
201:43 - actually work you
201:47 - n and R so is this as robust and
201:52 - accurate as the version of Something
201:54 - object detect image classification that
201:56 - I did with the teachable Machines videos
201:58 - it's interesting to compare and contrast
202:00 - but here there's no pre-rain model I
202:03 - actually collected the data and trained
202:05 - this model with a plain vanilla ml5
202:08 - neural network with just one hidden
202:10 - layer which is kind of amazing but the
202:13 - point of this again is for me to look at
202:16 - next what are the what what how can this
202:19 - be how can this be improved so I want to
202:21 - eventually look at what does it mean to
202:24 - add a convolutional layer in here what
202:27 - can be improved what does it mean to
202:29 - have a convolutional layer how do you
202:31 - add a convolutional layer in the ml5
202:34 - library that's what I'm going to cover
202:36 - in the next video I also have been
202:39 - trying really hard but I haven't been
202:40 - able to get it to work to make a
202:42 - regression U maybe by the time I release
202:45 - the edited version of this video I'll
202:46 - have a working version of the regression
202:48 - which I will insert right
202:50 - here if it was there hooray if it wasn't
202:53 - look in this video's description
202:55 - eventually I'll get that to work where I
202:56 - can set a uh frequency of an oscillator
202:59 - so um to to uh um to how I move
203:05 - about try that let me do that
203:09 - part I was also trying to get very hard
203:12 - just now but it's not in this video um
203:19 - oh wait Isaac says I fixed it with
203:21 - learning rate hold
203:24 - on hold on
203:26 - everyone hold on
203:36 - everyone I was about to try the learning
203:45 - rate what did you make
204:06 - it what did you make it let's try 0 five
204:23 - 0.002 works oh it needs to like a was
204:26 - like a really really high learning
204:39 - rate the defaults for regression in ml5
204:44 - are bad bad B
204:51 - default oh oh oh this is very
204:55 - exciting this is very exciting oh Isaac
204:59 - I send you like
205:02 - a join the Discord and message me I
205:05 - could send you a notebook or something
205:07 - thank you um I think the activations by
205:11 - default are
205:12 - sigmoid I don't remember what the uh
205:16 - whole holding horses
205:20 - sound can we finish on like a high note
205:24 - here
205:25 - um I can't believe I didn't think to try
205:29 - that um wait wait wait wait wait I want
205:34 - to put all the frequency stuff back
205:57 - I can't remember if I collected this
205:58 - data now not normalized or
206:08 - what I'm so
206:13 - confused wait a sec oh I did weird stuff
206:16 - to the
206:26 - slider let me try collecting the data
206:32 - again
206:34 - uh we learned today not to give up which
206:37 - is true
206:39 - um 0
206:42 - 800
206:44 - 400 just to start hold hold on I got to
206:47 - like re I got to collect the data again
206:52 - because I want everything to be
207:02 - consistent so let's make the slider go
207:05 - between 200 and 800 we'll start at
207:11 - 440 and I'm going to call normalize data
207:16 - when I train the model I'm going to
207:19 - call normalize data when I train the
207:21 - model and then in
207:26 - prediction when I predict when I get the
207:29 - results I can just use the value to set
207:31 - the frequency and the
207:35 - slider
207:40 - okay and I have all my options in key
207:43 - pressed where's key pressed to turn this
207:47 - off to save the data to collect the data
207:49 - for 15 seconds okay here we
207:57 - go oh whoops I have to start I have to
208:01 - also put back
208:06 - this so now I'm going to start
208:08 - collecting
208:11 - [Music]
208:28 - okay train the model let's save the
208:30 - data train the
208:38 - model working working working working
208:41 - working working working working working
208:43 - working working working working working
208:56 - y
209:21 - [Music]
209:38 - okay I'm like I don't even know what to
209:40 - do
209:42 - now okay all right
209:48 - oh my God I I I feel like I need to do
209:51 - all this
209:52 - again not really I don't mean like all
209:54 - of this
209:57 - again I have to pee so bad right
210:01 - now I also need to go home well it's
210:04 - five
210:06 - o'clock um
210:16 - my
210:25 - messages
210:33 - um okay okay all right so
210:40 - now we are
210:46 - like no what what's this yeah leave I
210:48 - don't I don't want this
210:56 - okay
211:03 - okay so there's
211:05 - this and then there's this
211:08 - one oops
211:16 - oh yeah
211:19 - okay
211:22 - okay okay
211:28 - now let me just train this one more
211:44 - time for
211:50 - [Music]
211:58 - [Music]
212:43 - okay
212:45 - [Music]
212:54 - just get the I'm gonna be done for to
212:57 - the day in a
213:00 - moment um
213:29 - now pixel
213:39 - regression okay and
213:51 - and let's
213:55 - see Jon
214:17 - hold on sorry I want this to do the
214:20 - right thing which
214:28 - is I'm just gonna change this to that's
214:32 - fine uh
215:09 - we'll make sure this works in the web
215:10 - editor
215:19 - [Music]
215:23 - okay awesome all right
215:42 - now right
215:48 - I'm going
215:53 - to go away in a
215:58 - moment that's kind of
216:01 - pathetic so I was gonna maybe draw that
216:03 - again there
216:20 - okay all
216:25 - right
216:32 - okay
216:36 - okay wait what I don't know what people
216:39 - are talking about in the chat now
216:54 - okay drunken science I did and you're
216:56 - about to
217:01 - see since I was able to
217:04 - get since I was able to get this image
217:07 - classifier very basic TW layer vanilla
217:11 - neural network image classifier at ml5
217:13 - to work to know if I'm in front of the
217:15 - camera camera or not I thought let's
217:17 - just try it with a few different objects
217:19 - and see how well it works so I collected
217:22 - a whole bunch of data um no I collected
217:25 - a bunch of images of this ukulele this
217:27 - coding train notebook and um Rubik's
217:31 - Cube and I think you'll see that if I
217:33 - show it
217:39 - the must have moved the camera so sad
217:42 - Rubik's C it's all like off
217:57 - notebook let me not that trading the
217:59 - model again will do
218:08 - anything you know what I have a plenty
218:10 - of footage that we can put behind
218:12 - me of it working I don't have a base
218:16 - class I should have had one
218:20 - why is this the wrong like data
218:23 - [Music]
218:25 - file
218:28 - no whoa what is going
218:34 - on oh I wasn't standing in front of the
218:38 - camera gele
218:45 - all right let's TR
218:49 - let's I'm I'm a crazy person and I don't
218:52 - and I refuse to give
219:04 - up I'm G to give it a bunch of examples
219:07 - of this ukulele
219:17 - let's
219:26 - actually so I'm pleased that that worked
219:29 - um let's see how it
219:35 - performs I don't know how this is going
219:37 - to get edited
219:38 - but UL all right here we
219:43 - go I'm pleased that that works worked I
219:47 - probably shouldn't but I just want to
219:48 - try having three outputs so let's try
219:51 - something similar to what I did in my
219:53 - previous videos using teachable machine
219:55 - to train an image classifier and we'll
219:57 - look at this ukulele coding train
219:59 - notebook and a Rubik's Cube so let me
220:02 - collect a whole lot of data uh I'm going
220:04 - to press U for ukulele R for Rubik's
220:07 - Cube and N for Notebook
221:03 - oh the camera went
221:08 - out that hasn't happened in a while
221:15 - have to refocus it a pain in the
221:22 - neck I have to refocus it hold on
221:46 - save the data in case I need it later
221:49 - and train the
221:51 - model why didn't I remember to do a
221:56 - nothing all right so now uh ukulele
222:01 - you n for
222:05 - Notebook and can we get an R can we get
222:08 - an R can we get an R
222:19 - ah
222:21 - sorry I wasn't I stood to the side when
222:24 - I was doing the Rubik's Cube so that is
222:27 - pretty important so it's not working so
222:29 - well so that's not a surprise I don't
222:32 - expect it to work that well this is why
222:34 - I want to make another video that covers
222:39 - how
222:41 - to take this very simplistic approach
222:45 - and improve upon it by adding something
222:47 - called a convolutional layer so what is
222:51 - a convolution what are the elements of a
222:53 - convolutional layer how do I add one
222:55 - with the ml5 library that's what I'm
222:57 - going to start looking at in the next
223:00 - section of
223:02 - videos and we'll see does it work better
223:16 - but before I go I can't reg resist just
223:20 - trying one more thing so I actually just
223:23 - rewrote this example very quickly let me
223:47 - but before I go I can't resist just
223:49 - doing one more thing because I really
223:52 - want to look at and demonstrate to you
223:55 - what happens if you change from using in
223:57 - pixel input to perform a classification
224:00 - to a regression so I took code from my
224:03 - previous examples that just demonstrated
224:05 - how ml5 and regression works and I
224:07 - changed the task to regression I had to
224:09 - lower the learning rate thank you to the
224:11 - live chat who helped me figure this out
224:13 - after like over an hour of debugging I
224:15 - had to lower the learning rate to get
224:17 - this to work um and train the model to
224:26 - uh what did I
224:30 - do and train the model with training
224:32 - data of me in different positions with
224:35 - different uh wave frequencies for a and
224:39 - I train the model with me standing in
224:41 - different positions associated with a
224:43 - different frequency that P5 Sound
224:44 - Library liary played and you can see
224:46 - some examples of me training it over
224:48 - here and now I am going to run it and
224:51 - see if it works and that will be the end
224:53 - of this
224:55 - video so I had saved the data and now
224:57 - it's training the
224:59 - model and as soon as it finishes
225:01 - training you'll be able to hear
225:12 - [Music]
225:23 - all right so I will leave that to you um
225:25 - as an exercise I I'll obviously include
225:28 - the link to the code for this in the
225:30 - video's description on the web page on
225:31 - the coding train.com with this
225:33 - particular video I can come back and
225:34 - implement it you can go find the link to
225:36 - the live stream where I spent hour over
225:38 - an hour implementing it but um I'll
225:40 - leave that to you as an exercise C if
225:42 - now you follow this video and have image
225:43 - classification working can you change it
225:45 - to a regression and have it control
225:47 - something with continuous output okay if
225:51 - you made it this far thank you and I
225:54 - will be back and start to talk about
225:56 - convolutional neural networks what they
225:57 - mean in the next
226:05 - video all right this is the this is it
226:07 - everybody I've got to go I mean I'll be
226:10 - back next Friday for sure I can get back
226:13 - earlier because I I really want to build
226:15 - an auto encoder I'm very excited about
226:17 - this um which I don't know how I'm going
226:20 - to do um what did you use for Chrome
226:22 - dark mode asks David SNY oh I don't
226:26 - know to be honest I have no idea I have
226:30 - to look that up ask me in the Discord
226:32 - okay remind them to join the Discord
226:33 - server at the end you can join the
226:40 - Discord there's also a new coding train
226:42 - store
226:45 - which you can find at going to Standard
226:46 - TV standard. TV coding
226:50 - Trin um and there's some stuff here like
226:53 - this handy notebook that you can use for
226:55 - image
226:56 - classification uh so just wanted to
226:58 - point that out if you're interested you
227:00 - can check that out you know I'd also say
227:02 - there's this is part of standard. TV and
227:04 - there's a ton of other creators with uh
227:06 - really wonderful stuff uh here that you
227:08 - can also look at and I'm done I'm done
227:15 - can I answer a few more
227:18 - questions can you code it so that when
227:20 - the Sound reaches a certain note by the
227:22 - person moving to take a photo yeah so
227:24 - you could make a that's a great idea for
227:26 - a project you could do a classification
227:29 - oh oh
227:31 - oh
227:34 - um the name of the Discord server it's
227:37 - called coding train there's a link in
227:39 - this video's description and if somebody
227:41 - could paste it into the chat maybe but
227:44 - in the video's description there's a
227:45 - link to the Discord uh to the invite
227:48 - um Aon thanks for the thanks for the way
227:53 - uh option of the advice about using
227:56 - filter this is a great idea for a
228:03 - project maybe we can maybe we can
228:05 - include this we'll see someone uh who is
228:07 - this in the chat um
228:25 - well um a great idea just came up in the
228:28 - chat by the way that you could think
228:29 - about also as an
228:31 - exercise how would you make a photo
228:33 - booth when that recognizes something and
228:35 - then takes your picture of course you
228:36 - could have done that with the teachable
228:37 - machine stuff so I don't know how great
228:39 - that a suggestion is never mind that's a
228:40 - great idea we won't include that in the
228:42 - video but that is a great idea uh
228:48 - maybe I can manage to get the Discord
228:50 - Link in the
228:55 - chat let's see if I can solve this
228:58 - before the song ends I haven't been I
229:01 - haven't been cubing in quite a
229:09 - while I feel the pressure
229:26 - where's that other silly white
229:35 - piece oh my God I'm losing my mind
229:45 - I'm so ridiculous it's been so long
229:47 - since I worked on a Rubik's Cube now
229:50 - it'll go fast because I was just forgot
229:52 - what I was
230:01 - doing how much time do I have oh I have
230:03 - a minute 20 I'm going to be fine
230:25 - what am I doing here what am I doing
230:37 - here 46
230:40 - seconds 46 seconds left oh there's more
230:46 - oh it's going to be cutting it really
230:50 - close I'm going to have to get lucky
231:06 - here I hate this cube is not a good
231:09 - one oh 14 seconds oh I can do it
231:17 - no I started to
231:20 - panic I started to panic I started to
231:26 - panic I started to panic let me just
231:29 - give me give me a second here
231:33 - everybody okay okay
231:38 - okay I'm gonna give myself 20 seconds
231:41 - again
231:58 - a little bit of time to
232:00 - spare thanks everybody for watching I
232:03 - will see you next week um is it possible
232:06 - to save an ml5 neural network as a Json
232:09 - uh this do that would actually be a good
232:11 - Fe I think yes I don't know if that's
232:13 - easily done in
232:15 - ml5 um thanks everybody for watching I'm
232:17 - going to go and it's going to be the
232:19 - weekend and this might get edited into
232:22 - something and I I got to come back and
232:23 - talk about the convolutional stuff and I
232:25 - guess that'll be next week sometime um
232:27 - thanks
232:36 - everybody actually I forgot I usually
232:38 - like to play at the end the songs with
232:41 - uh words in them
232:56 - just to come back for a second um Aon
232:59 - yeah I want to actually eventually start
233:01 - to use images from files and not the
233:03 - webcam so I will have to investigate
233:13 - that for
234:12 - is
234:20 - aren't related at all you pick like I'm
234:22 - picking random numbers between Z and 10
234:24 - 9 2 7 6 1 9 4 8 9 2 1 three I pick nine
234:31 - a lot apparently but with pearing noise
234:33 - I might pick numbers like this two three
234:36 - four three four five six 5 4 five six 7
234:41 - five six 7 five 6 S 8 8 seven six look
234:45 - this is like pear noise performance
234:48 - [Music]
234:53 - 9 2 1 I 2 four four five six 5 this is
235:00 - like PE noise
235:07 - performance but with curing noise I
235:09 - might pick numbers like this 2 three 4 3
235:13 - four 5 6 6 5 4 5 6 7 5 6 7 5 hurly noise
235:19 - that is noise so this isly noise that
235:21 - isly noise this is this is noise that
235:23 - isur noise so this is noise that is
235:26 - noise noise that is noise so this is
235:28 - noise that is noise this is this is H
235:30 - noise that is noise so this is noise
235:32 - that
235:39 - is
235:41 - is
235:43 - is that is
235:49 - but with pear and noise I might pick
235:51 - numbers like this 2 three four three
235:54 - four five six five four five six five
235:58 - six 5 2 four four five five five six
236:07 - six this is like pear noise performance
236:10 - art
236:27 - and I'm going to say once again here we
236:30 - go sanin
236:37 - [Music]
236:59 - autot tune and the internet will fix
237:01 - that for
237:05 - me sing it with me it's theat
237:14 - [Music]
237:18 - it'san
237:29 - [Music]
237:30 - sanan unicorns and rainbows and cupcakes
237:34 - what else is
237:36 - there yes kittens thank you very much
237:39 - kittens and rainbows and cupcakes notice
237:41 - that and look what I get I'm really
237:43 - losing my
237:44 - M okay let's do
237:49 - [Music]
238:00 - [Music]
238:07 - it kittens and kittens and kittens
238:09 - kittens and kittens and kittens and
238:10 - kittens kittens and kittens and kittens
238:12 - and kittens kittens and Kitt kittens and
238:14 - kittens kittens and kittens and kittens
238:16 - and kittens kittens and kittens and
238:17 - kittens and kittens kittens and kittens
238:19 - and kittens and kittens kittens and
238:21 - kittens and kittens and kittens kittens
238:22 - and kittens and kittens and kittens
238:24 - kittens and kittens and Kitt and kittens
238:26 - kittens and kittens and kittens and
238:27 - kittens kittens and kittens and kittens
238:29 - and kittens kittens and kittens kittens
238:31 - and kittens
238:53 - [Music]
239:01 - I feel just sort of like a nice feeling
239:04 - of relaxation everything's going to be
239:07 - okay today dream is not broken it has
239:09 - not frozen this is a this is a wonderful
239:12 - thing okay we're going to do it I'm
239:14 - really getting to something I need my
239:16 - sound
239:19 - [Music]
239:23 - effect unicorns and rainbows and
239:29 - cupcakes what else is there unicorns and
239:34 - rainbows and
239:36 - cupcakes that was invalid syntax I
239:38 - forgot uh there was one other thing here
239:41 - that I think is important that I will
239:43 - use continuously over and over again in
239:46 - all sorts of text generation analysis
239:49 - things that I will use continuously over
239:52 - and over again first thing I need to do
239:55 - is yes kittens kittens kittens I really
239:58 - losing my mind okay we're going to do it
240:02 - kittens and kittens and kittens and
240:03 - kittens kittens and kittens and kittens
240:05 - and kittens kittens and kittens and
240:06 - kittens and kittens kittens and kittens
240:08 - and kittens and kittens kittens and
240:10 - kittens and kittens and kittens kittens
240:11 - and kittens and kittens and kittens
240:13 - kittens and kittens the kittens of dust
240:15 - you