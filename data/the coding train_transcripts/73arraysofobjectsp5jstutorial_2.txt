00:00 - okay so now I've made two videos one
00:04 - just about what is an array in the
00:06 - syntax of an array and the other video
00:08 - looking at how to use a loop to iterate
00:10 - over every element in that array and in
00:12 - this video I want to unlock this great
00:16 - power to you which is how to take an
00:18 - object and duplicate that object many
00:21 - times into an array so first this is
00:23 - viscera again just to revisit this is
00:25 - what I'm talking about how would you
00:26 - make an example like this happen and you
00:28 - know each one of these objects it needs
00:30 - to have a position on the screen it
00:32 - needs an X Y it needs to have a speed
00:34 - like how fast is it moving along the y
00:36 - axis it needs to have some functionality
00:37 - like move along the y axis like check if
00:39 - it hit the bottom so each one of these
00:41 - needs its own set of properties and its
00:43 - own set of functionality and that's what
00:45 - I covered in a previous video how to put
00:48 - a function into an object and so we have
00:50 - an example of that here right this is a
00:52 - bubble object let me just actually take
00:54 - a moment to review over here just that
00:55 - syntax so if I have an object like var
00:59 - bubbled an object is a collection of
01:03 - name value pairs an object has
01:06 - properties each property has a name then
01:10 - there is a colon then there is the value
01:13 - and typically we think of these all
01:15 - right you think I think of these as what
01:19 - do I think of just as like numbers right
01:21 - it has an X and it's number is 100 and
01:24 - it has a Y and it's number is 50 but in
01:28 - addition to having these properties just
01:31 - be like simple variables with values an
01:33 - object can have a the name could be a
01:36 - function like the name can be something
01:39 - like display sorry and the value can be
01:41 - a function tripping over my words here
01:43 - right so in it this is what makes
01:45 - objects really powerful it's not just a
01:48 - collection of numbers or data or strings
01:50 - or colors it's also the ability to use
01:52 - those properties in execute some code
01:55 - with those properties so for example if
01:57 - I want to have a display property I
01:59 - might want that to be a function now
02:02 - it's important to us this function is
02:03 - not being executed this is just the
02:06 - definition of the bubble object and the
02:08 - display function is a function that
02:10 - could be executed
02:11 - later and if that function were to be
02:14 - executed it would draw an ellipse act
02:16 - and this is the tricky thing your
02:19 - instinct might be to write bubble dot x
02:21 - right because the way that you access
02:23 - properties of an object is by the name
02:26 - of the object dot the name of the
02:27 - property and then you get the value back
02:29 - but here because I'm inside the object
02:32 - there's a special JavaScript keyword
02:34 - that you can use to refer to the name of
02:37 - the object the specific object this
02:39 - object what I want to do is refer to
02:41 - right here this particular object guess
02:43 - what the keyword is this might think of
02:46 - it as me I am the bubble my ex that type
02:50 - of thing so this X and this Y and this
02:52 - is probably one of the things it might
02:55 - mean for me I just forget to type that
02:57 - all the time and sometimes things don't
02:59 - work so as like an error message so it's
03:00 - really important that you remember to
03:01 - type that so this is the syntax we're
03:04 - starting with and if you see over here
03:05 - it's basically exactly the same syntax I
03:08 - happen to have a bit more sophistication
03:09 - here I have both a display function and
03:11 - a move function and then if I come down
03:15 - here you can see aha in draw the bubble
03:19 - moves the bubble is displayed so I don't
03:21 - have any of this code anymore just in
03:23 - the wind like I don't have variable
03:25 - flying around and I don't have you know
03:27 - lots of code and draw I've had bay this
03:29 - mini program this bubble and now I've
03:31 - gotten a drop so that was a quick little
03:33 - couple minute review of objects in
03:35 - syntax but the point of this is not just
03:36 - to be happy about this object I want to
03:39 - make more than one so obvious certainly
03:42 - a strategy to make more than one would
03:43 - be copy-paste this whole thing but this
03:45 - is not good strategy and I could change
03:48 - the number and change something this is
03:49 - not going to sustain you very long it's
03:51 - not the worst thing to practice with
03:52 - when you're first getting started make a
03:54 - couple objects instead what I want to do
03:57 - is I want to say var bubbles equals
04:02 - bracket bracket I want to have an array
04:05 - of bubbles and I want to put objects in
04:09 - those bubbles so now one thing I didn't
04:12 - actually mention in my previous video is
04:13 - normally not normally but in the
04:16 - previous example I said make an array
04:17 - and put these numbers in it put this
04:19 - text in it
04:19 - this is actually an empty array so I'm
04:22 - starting the array is empty one of the
04:24 - interesting is about
04:25 - script is if the array is empty and you
04:27 - just assign something to the first spot
04:29 - and then assign swing to the second spot
04:31 - then just sciencing the third spot
04:32 - javascript will just like I'm going to
04:34 - figure out what you're doing I'll just
04:35 - make the array the right size for what
04:36 - you're putting in it so I could quickly
04:38 - do something like this bring this object
04:41 - definition into setup and say bubbles
04:46 - index 0 equals that object so now oh my
04:50 - god the blue the scary the blob is back
04:53 - I got to fix that my green screen set
04:54 - because blob takes over once a while and
04:56 - tries to eat me and I don't want it to
04:58 - because I don't want to make more videos
04:59 - I I guess I do I mean I don't know if I
05:04 - should but um
05:05 - so what was I saying yes index 0 so I've
05:08 - put an object into the first spot in the
05:10 - array the array now has a bubble object
05:13 - in it and actually I could say print
05:16 - line bubbles just to take a look at it
05:18 - and you can see UPS I forgot that I have
05:23 - this extra code in here a little comment
05:25 - out for a second print line bubbles and
05:27 - you can see there it is there's the
05:29 - array it's got one object in it now I
05:32 - can adjust note a weird little nuance to
05:34 - JavaScript you know what if I decided
05:36 - like I'm gonna put this in the fourth
05:38 - spot index three zero one two three
05:41 - you know I haven't put anything the
05:42 - first spot or the second spot or the
05:43 - third spot what like what's going to
05:44 - happen so if I do that you'll notice
05:46 - that JavaScript it just wants to do just
05:49 - wants to like figure out what you mean
05:51 - and what are you trying to do let me try
05:53 - to guess something and strangely enough
05:54 - it made an array with four elements in
05:56 - it but the first three are null so
05:58 - javascript is a lot of flexibility and
06:00 - how you assign things into an array I
06:02 - can't think of a good reason why you
06:03 - would do this you're sort of asking for
06:05 - trouble you're going to run into errors
06:06 - later when you try to access a value
06:07 - that has null high high blue blob but
06:11 - but it's important to realize that
06:14 - JavaScript into an array so let's go
06:17 - back to putting it in the zero spot and
06:19 - then what do I need to do well down here
06:23 - what I want to do is not I don't have an
06:26 - individual variable named bubble anymore
06:28 - get a little closer in here what I want
06:31 - to do is say ah move the zero element of
06:34 - the array move this display the zero
06:37 - element
06:37 - so now I just want to refer to the array
06:40 - and the specific object in the array but
06:43 - so let's run this and you can see we
06:45 - have exactly what we had before this
06:47 - single object moving around the screen
06:49 - so I haven't used the power of objects
06:51 - and arrays yet I'm just taking that
06:52 - single object and put it in the first
06:55 - spot in an array and I can make a little
06:57 - bit of an improvement down here to draw
06:59 - even though there's only one thing in
07:01 - the array you know maybe it would be
07:03 - good for future use later to have a
07:05 - little loop where I just check the and I
07:09 - look through the length of the array
07:11 - right and this picks up from the
07:13 - previous video the previous video I loop
07:15 - through every number to set I look
07:18 - through every number in an array to set
07:21 - the width of an ellipse here right and
07:24 - now I'm going to do is say no matter how
07:27 - many bubbles are in this array go from
07:29 - zero to the length of the array up by
07:31 - one each time use that value as the
07:33 - index move and display all the bubble
07:35 - objects so this it doesn't matter if
07:37 - there's five or ten or two this loop
07:40 - will always apply this logic move or
07:42 - display to every object in the array and
07:44 - there we go there's only one I only put
07:48 - one object in the array so how do I put
07:50 - the second object in the array okay well
07:52 - I could copy paste this and say bubbles
07:54 - index one but there's got to be a better
07:57 - way right what I can do instead is why
08:01 - not put a loop around this I don't know
08:05 - how many times should I loop four times
08:08 - and then write what I can do is what I
08:15 - can do is now as I'm looping 0 1 2 3 I'm
08:19 - going to put an object in the zero spot
08:22 - put an object in the one spot so this
08:24 - same code that made that individual
08:26 - object I can reuse that multiple times
08:28 - one time two times so now the array by
08:31 - the way if I say print line bubbles here
08:36 - you can see look at that there are four
08:39 - objects in the array and they're all all
08:42 - four hopefully I won't get eaten by the
08:43 - blue mass there are all four moving
08:45 - around the screen I don't know I can
08:47 - make 400 of them that's a lot of bubbles
08:50 - look at that there
08:51 - kind of starting in the center what
08:53 - could I do differently well one thing I
08:56 - can do is give them a random starting
08:57 - value between zero and the width I could
09:03 - give them a random starting value Y
09:04 - value between zero and height so one
09:06 - thing that you can also know is in
09:07 - addition to having functions as
09:09 - properties or values as properties you
09:12 - can execute code that evaluates to a
09:14 - value it's a little bit weird because
09:16 - like this has code in it and that has
09:18 - coded it the difference is random is
09:20 - being executed right now and evaluating
09:21 - to a number that's being assigned to X
09:23 - here this code is not being executed
09:25 - right now it's being defined as
09:27 - something in a function that could be
09:28 - executed later when is it executed its
09:31 - executed down here when I loop through
09:33 - all the elements of the array so if I
09:34 - run this you can see there's my four
09:37 - hundred bubbles and we can see this down
09:39 - here is like this is this is what
09:41 - actually is in that array so I'm going
09:43 - to take that printout it's not
09:44 - particularly useful to look at it in the
09:45 - console there anymore but you can see I
09:47 - can I could I could just go crazy now
09:49 - and I could make four thousand of them
09:51 - because now one thing is important to
09:53 - realize is there's a limit to how much
09:55 - you can draw in p5 and how like fast
09:58 - it's going to run so that sketch is now
09:59 - running very slowly because it's trying
10:01 - to draw 4,000 circles every frame but
10:03 - what's amazing about this is I haven't
10:05 - changed anything in the code but this
10:07 - number this is the only number that
10:10 - controls how many objects are on the
10:13 - screen so why changing this is the this
10:15 - is the amazing power of the reuse of
10:17 - modularity and reusability of objects so
10:19 - this program is modular in that there is
10:21 - this object that has these parts its
10:23 - properties its functions I know which
10:25 - part to edit when I wanted to change how
10:27 - it looks or change how it moves and it's
10:29 - reusable this single block of code is
10:31 - being used four times or 400 times to
10:34 - make many objects and all I need to do
10:35 - down here is loop through all the
10:38 - objects and say apply the same command
10:41 - to all them move all of them display all
10:44 - them now you'll notice that the editor
10:46 - here the p5 editor has this little like
10:48 - yellow highlighted line number so look
10:50 - what's I'm afraid to look at it I'm
10:52 - going to I'm going to look at it you
10:54 - let's do this together
10:55 - oh it says don't make functions within a
10:59 - loop so I've upset the editor I'm very
11:01 - sorry but it it's like complaining that
11:03 - might
11:04 - my JavaScript is in proper style the
11:07 - truth of the matter is that maybe this
11:08 - is a bad idea for an hour but at the
11:09 - same time it works this is a great way
11:11 - to practice but the thing is here this
11:14 - maybe could be improved in the sense
11:17 - that setup code like has all this code
11:20 - in it and this bubble is very simple
11:22 - what if this bubble got more and more
11:23 - complex so in the next video what I want
11:26 - to do is look at a technique for taking
11:29 - the way this object is made and taking
11:31 - it out of here and putting it in
11:32 - something called a constructor function
11:34 - here I'm just literally making the
11:36 - bubble object but what if I had this
11:38 - other function whose job it was to make
11:41 - bubble objects for me and I could just
11:43 - call that function anywhere from in the
11:45 - code and I would just I would be able to
11:47 - just say make a new bubble and setup and
11:49 - again life is just about making your
11:52 - code short it's really not about that
11:53 - life is about like people and
11:54 - relationships most I could code doesn't
11:57 - really matter but you know it's I you
11:58 - know I guess you can use it for
12:01 - something I'm using it for something
12:02 - talking to a camera about it okay so I
12:04 - just I just think the same lame joke in
12:08 - every video you're tolerating it this
12:10 - video is now over should be cut off okay
12:14 - so that's what I want to do in the next
12:16 - video I want to look at how can we work
12:18 - with this thing called a constructor
12:20 - function which is perhaps a bit more
12:22 - typical what you'll see in a lot of the
12:24 - examples on the p5 website if you look
12:26 - at other types of examples of making
12:27 - objects with JavaScript you might see
12:29 - this style in other places as well okay
12:31 - so if you watch the end of this video I
12:34 - thank you and I will see you in the next
12:37 - one or or I mean I'll see myself in the
12:39 - next one I guess okay