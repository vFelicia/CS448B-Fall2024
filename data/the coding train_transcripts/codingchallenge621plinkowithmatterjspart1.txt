00:00 - oh all aboard
00:04 - it's right anything here on the Coty
00:07 - train and I am here ready to create a
00:11 - coding challenge and today's coding
00:13 - challenge is going to be AI never mind
00:18 - never mind all this nonsense
00:19 - Plinko so I'm going to attempt to make
00:21 - Plinko I'm using a physics engine known
00:24 - as matter AF what is Plinko you may ask
00:26 - good question
00:27 - I don't really entirely sure but I think
00:30 - clinco is a thing where you have a bunch
00:32 - of all that that fall from the top of to
00:37 - dimensional it's a physical thing you
00:38 - drop the balls at the top there's all
00:40 - these little things that they bounce
00:41 - into and they end up somewhere in the
00:43 - bottom husband's parable explanation
00:45 - should redo this whole video I'm going
00:48 - to make it and then you guys can pull if
00:50 - you don't know what slinko is pause go
00:51 - try to look it up and then come back
00:52 - okay I have a sort of vague idea in my
00:55 - head okay so yes and I'm being reminded
00:57 - by out getting the chance to stay
00:58 - hydrated now that I've lost half of the
01:03 - people who maybe we're going to watch
01:04 - this video the rest of you let's go okay
01:07 - so the first thing that I want to do
01:09 - here is boy let's hmm try to think about
01:15 - this here there's a lot of pieces to
01:17 - this boy this it's gonna be hard let's
01:19 - think about this over on the whiteboard
01:21 - for a second okay so how does Plinko
01:24 - work I can use the whiteboard to explain
01:25 - it let go is the same where there is a
01:29 - grid of stationery I call them like not
01:33 - really I think each row would be offset
01:36 - from books offset from the one below it
01:39 - so it'd be something like this all the
01:42 - way come on and then the idea is that
01:43 - you would drop things from the top and
01:45 - it would fall right down and bounce here
01:47 - and you know ideally the ideas would be
01:49 - a 50% chance of it going this way and a
01:51 - 50% chance of going that way then it
01:54 - would hit here and there would be a 50%
01:56 - chance of going this way versus a 50%
01:57 - question and interestingly enough if we
01:59 - do this correctly which I'm sure we
02:01 - won't forget we've is me I'm so Jeff I'm
02:03 - gonna do it correctly we would see a
02:05 - nice normal Gaussian distribution of
02:07 - they'll and like they would mostly land
02:09 - in the center with a few outliers boys
02:11 - there's some like TV show now called the
02:13 - wall I should just put like I kept like
02:15 - a crate some sort of like clickbait
02:16 - titles video but I'm not going to do
02:19 - that so any idea so then they'll fill up
02:21 - in the bottom we could use this so like
02:22 - you know you wouldn't certain amount of
02:24 - money or whatever so this is a
02:25 - simulation so what I need is I need some
02:27 - mechanism for catching everything in
02:29 - different slots so these would be kind
02:32 - of stationary in the physics engine I
02:33 - can probably make these stationary
02:34 - rectangle if that's the thing then these
02:38 - would be ecstatic as the word I'm
02:39 - looking for static circle objects that
02:42 - are around and then I'm going to have
02:43 - dynamic circle objects falling from the
02:45 - top so I need really three kinds of
02:48 - things I'm going to call these particles
02:50 - because that's a good name for them I'm
02:53 - going to call these Legos because we're
02:58 - making slinko and then this is going to
03:00 - be a bucket we'll call these buckets to
03:03 - catch the thing so I need to make three
03:04 - kinds of objects and some kind of
03:07 - planning this out I guess I know I'm
03:08 - going to need a raise for all of these
03:10 - things so let's sort of see how that
03:13 - goes let's try making just the particles
03:15 - first okay so what I'm going to do is oh
03:21 - the cup is in front again sorry
03:23 - everybody
03:23 - I have a you don't want to know what's
03:25 - going on here with my multiple camera
03:27 - system craziness okay so what I'm going
03:31 - to do is I'm going to add a JavaScript
03:33 - file and I'm going to call it a particle
03:35 - J s and i'ma say function particle and
03:40 - I'm going to when I create a particle
03:42 - the things falling from the top I want
03:44 - to create it an X Y location now here's
03:47 - the thing I'm using a physics engine
03:48 - called matter yet and I already have in
03:51 - index.html a reference to the matter Jas
03:54 - library now I also have a reference to
03:56 - the p5.js library that's the library of
03:58 - using for drawing and that's the library
04:00 - that I use with just about in many of my
04:01 - videos almost all of them but matter dot
04:03 - you have to do and if you want to learn
04:05 - more about matter dot yes I will link to
04:07 - a set of tutorial videos about mat or
04:09 - separately I'm just going to kind of
04:10 - rapidly go through adding stuff from mat
04:12 - or without maybe explaining everything
04:14 - but I do
04:14 - tutorial videos okay now I do need to go
04:18 - to the matter touches website and I want
04:20 - to Google matter getting started
04:22 - maybe wiki because I know that this is
04:26 - going to have some of the code that I
04:28 - want on it like this for example so one
04:30 - thing is matter is a library where all
04:33 - of the objects and functions that you
04:34 - might call a call from our name spaced
04:37 - they all start with matter dot something
04:40 - and I'm going to definitely eat an
04:41 - engine in the rent I don't need a render
04:42 - actually because I'm using p5 an engine
04:44 - a world bodies so this is a way of just
04:46 - sort a Lea Singh them sort of the same
04:48 - matter dot all the time and so what I
04:52 - need is I want to have an engine I want
04:59 - to have a world I want to have a bunch
05:02 - of particles that's what I'm starting
05:03 - with engine world and a bunch of
05:05 - particles
05:05 - okay so engine equals matter dot no no
05:11 - engine create I don't know world equals
05:16 - engine dot world what's the chance that
05:18 - that's right so I need to create an
05:20 - engine and then I want to reference to
05:21 - the world at that engine create it sort
05:24 - of seems unlikely that that's correct
05:25 - oh it is correct engine equals engine
05:26 - that create and the world is you can see
05:29 - later engine that world ok great now
05:31 - what I want to do is I want to start
05:33 - creating some bodies so the way I'm
05:36 - going to do that is I'm going to say VAR
05:37 - p equals a new particles and I just want
05:41 - to put it it at the top in the middle
05:43 - 300 comma 50 so I want to make a single
05:46 - new particle now I'm calling the new
05:49 - particle constructor function so over
05:51 - here now what I need to do is I actually
05:53 - need to make a something called a body
05:56 - and body comes from body stuff so bodies
06:00 - is a thing that matters a chest will
06:02 - make matter as the physics engine it's
06:03 - going to handle moving everything and
06:05 - doing all of that
06:05 - so my particle object is just a wrapper
06:07 - for a matter jf circle thing so I want
06:12 - to make a matter a a circle thing at X&Y
06:15 - it needs to have a radius this dot R so
06:22 - open up this on our art so I think I
06:24 - think that's right
06:26 - so I should look in the documentation I
06:28 - know
06:28 - have managed is memorized so I'm going
06:31 - to have to pull up the documentation
06:33 - here go under documentation go under
06:36 - bodies and now I'm looking for circle XY
06:39 - radius now there's options and all sorts
06:41 - of other things which I might get into
06:42 - but this looks like I'm doing well so
06:44 - far here X Y R okay now the other thing
06:47 - I need to do is I need to say world dot
06:50 - add world this body what's this doing I
06:55 - have to not only do I have to make a
06:57 - body that's a matter body that can exist
06:59 - and have physics I need to tell the
07:01 - world that it actually want that body
07:02 - could be in the world seems a little bit
07:04 - redundant but you know you might want to
07:06 - make objects that you don't actually
07:07 - present will participate into physics
07:08 - yet so those two things are separated
07:10 - and then I want to write a function
07:13 - where I can display it and I should I
07:16 - should use that let's use the prototype
07:17 - thing I have some videos that explain
07:19 - prototypes to lips throw caution to the
07:21 - wind
07:21 - prototype dot show equals function so if
07:23 - you're wondering about this prototype
07:25 - that way of attaching methods to objects
07:28 - I'll link to a video about prototypes
07:30 - but this is a way of saying particles
07:32 - all particles are going to have a show
07:33 - function and in the show function I'm
07:35 - going to say what am I going to say I'm
07:39 - going to say fill 255 Stroke 255 ellipse
07:44 - and where is the body
07:46 - here's the thing normally when I make an
07:48 - object I give it an X and a Y or a
07:50 - position vector but not here right now I
07:54 - am relying on matters a chance to do all
07:56 - the physics for me so it's up to me to
07:58 - say hey you know that body that's a
08:02 - matter judge as body could you please
08:04 - tell me what its position is currently
08:06 - and then I can say and you know what I'm
08:09 - going to do I know that eventually I'm
08:11 - going to want rotation so I'm going to
08:13 - say translate this posix pause dot Y
08:19 - instead of setting the ellipse to that
08:21 - location and then I'm going to draw the
08:23 - ellipse at 0 0 and I want to give it a
08:26 - diameter which is its own radius times
08:29 - two now this guitar doesn't actually
08:30 - exist so I don't think that some unhooks
08:34 - and I have got an error there I seem to
08:38 - remember looking at the matter digest
08:39 - occupation as a circle body doesn't
08:41 - actually
08:41 - track of its radius in a property so I'm
08:43 - just going to make an extra property
08:45 - myself to keep track of it and that way
08:47 - I can draw it that way so now I've made
08:49 - a body I've added it to the world and I
08:51 - showed I have a my own particle object
08:53 - that is a wrapper for a matter de s body
08:56 - essentially so now let's if I go to
09:00 - sketch data and I just say particles dot
09:07 - push P and then I say a peep show let's
09:11 - see if it shows up I hope so I hope so
09:14 - hope so I hope so I would do my drumroll
09:16 - thing now but that doesn't never seems
09:17 - to work okay particle is not defined
09:21 - I always forget a few add the reference
09:25 - to the new JavaScript file yeah and the
09:29 - sound was laggy the new javascript file
09:31 - to the index.html smooth so I need to
09:36 - add that here what did I call it
09:37 - particle gif so I'm going to add that
09:39 - here okay now I'm hit refresh okay what
09:41 - did I miss
09:42 - cannot read property body of undefined
09:44 - at objects I must have done something
09:48 - wrong oh I forgot to add the are I added
09:54 - it are and so it needs to have a radius
09:56 - otherwise what's it going to do well
09:57 - let's see if that fixes it I'm guessing
10:00 - that big stick and now we're going to
10:03 - see the particle there we go so there's
10:05 - the particle that single particle now it
10:07 - has no physics why does it have no
10:09 - physics well here's the thing a physics
10:11 - engine requires me to say hey go to the
10:14 - next moment in time move ahead in time
10:17 - and time can mean a lot of different
10:18 - things but it could mean real-world time
10:20 - it can mean frame spot of animation in
10:22 - this case I want to tie each frame each
10:26 - time through the draw loop to a new
10:28 - moment in time and the easiest way to do
10:30 - that there's there's a lot of options
10:31 - that you can configure this is I'm just
10:33 - going to say engine update I think
10:35 - that's all I say engine update oh maybe
10:38 - I have to say engine update well let's
10:43 - try engine dot update does that do it no
10:46 - engine an update is not a function
10:48 - engine update engine it might be that
10:51 - the function update is namespaced in
10:54 - and then you pass in the thing you want
10:56 - to update that's it okay so you can see
10:59 - there's my Plinko particle falling down
11:01 - so we're in good shape we've got the
11:04 - Plinko particle now maybe what I want to
11:06 - do also is just to kind of is to do
11:11 - something like let's have if frame
11:15 - account modulus 60 equals zero so
11:19 - modulus is the remainder of division so
11:22 - this will equal zero when frame count is
11:24 - zero 60 120 180 240 300 et cetera so I'm
11:29 - going to say add a new particle every 60
11:34 - frames which is approximately two
11:35 - seconds let's do this a show of
11:38 - undefined
11:39 - Oh right and then silly me I should
11:43 - someday use a for each loop but right
11:48 - now I'm just going to loop through all
11:49 - the particles and show them and here we
11:52 - go so now we should see two seconds in
11:54 - about two seconds later oh boy something
12:02 - must be wrong here I'm kidding
12:04 - where are those Winco particles if frame
12:07 - count module is 60 equals zero add a new
12:10 - one that looks good to me what have I
12:12 - done wrong let's console.log frame count
12:15 - just to make sure that's the thing yeah
12:18 - looks like oh it started with one by the
12:20 - way so I'm not sure why what did I miss
12:24 - oh I know the problem is you guys see it
12:30 - now look right here it's right here
12:32 - right there translate pause that X pause
12:35 - that Y so I knew I was going to add this
12:40 - earlier when I was doing it I saw that
12:41 - ever so translations are cumulative so
12:45 - when I translate to the position of one
12:46 - particle the next particle I draw will
12:48 - be relative to that one and so these are
12:50 - all getting translated way off the
12:52 - screen I need to not have them be
12:54 - relative to each other rather I need to
12:56 - say push anding to say pop and now so
13:01 - what push and pop does is it's like
13:03 - stays translate restored so it undoes
13:05 - the trans
13:06 - and now if I go back to my code there we
13:10 - go look at all my slinko things every
13:13 - ten frames my little Plinko particles
13:15 - falling down so we can go back to sketch
13:18 - and I can take out this console.log
13:21 - nonsense and I can put it back to 60 and
13:25 - we can kind of there's still another
13:27 - console.log happening where's that other
13:29 - console oh particle set length and so we
13:31 - can see here and still it's upsetting me
13:33 - that there's not one at the beginning so
13:36 - I'm also going to what I'm going to do
13:38 - is I'm going to write a function new
13:41 - particle that just does that those two
13:45 - lines of code and look and I'm going to
13:48 - say a new particle here and I'm also
13:50 - going to have a new particle
13:52 - instantaneously in set up at the very
13:54 - beginning so now we get a particle and
13:55 - two seconds later we get particle the
13:57 - two things later we get particle I'm a
13:59 - little bit behind
14:00 - okay now the nice thing is the chart the
14:04 - physics is already working as you might
14:06 - have noticed when I made this look if I
14:07 - make this every five frames you can see
14:09 - they're kind of like hitting each other
14:10 - it's a little bit funny that's a little
14:11 - bit like I'm a weird but but let's we're
14:13 - going to get to more physics later okay
14:15 - now I'm going to do I think I'm going to
14:18 - do this as a two-part challenge so so
14:21 - let me go a little bit further let me at
14:23 - least add the stationary cling coats so
14:26 - I want to now try to add these
14:28 - stationary pingas and the truth of the
14:29 - matter is I could probably reuse this
14:31 - particle object and just make particle
14:34 - objects here and give them like an
14:36 - argument that systems is static but I'm
14:38 - going to make some seriously redundant
14:40 - code just for like sort of ease right
14:43 - now they could think I could use
14:44 - inheritance in a nice way to have them
14:45 - relate I just want to make a separate
14:46 - object that just keeps track of these
14:48 - stationary plane goes because I just
14:50 - want to treat that differently so that's
14:52 - how I feel today okay you can you can
14:54 - you can refactor my code later to make
14:56 - it better okay so let's come back here
14:59 - and let's go to particle jet and I'm
15:01 - going to do save as this is really I'm a
15:03 - little bit uncomfortable what I'm doing
15:04 - here I'm going to say
15:06 - Plinko Jas and I'm going to say function
15:09 - Plinko and please go
15:12 - I really should use inherited 0 come
15:14 - back and use inherit another time Plinko
15:16 - dot prototype dot show
15:17 - and something I'm going to do here is
15:19 - I'm going to add another variable called
15:22 - options so when you create a physics
15:25 - object in matter gif in addition to
15:27 - giving it that circle body and XY and a
15:30 - radius I can give it some options and
15:31 - the option I want right now is static I
15:34 - want an editing know I'm adding the
15:35 - right file is static truth so and then I
15:38 - want to pass this fourth argument as
15:40 - options there might be a way that I
15:42 - could just make all these options
15:43 - actually could I make the XY I don't
15:45 - know if that's your but anyway that for
15:46 - targeting options and there's other
15:47 - options I'm going to be I'll add later
15:49 - like friction and other physics settings
15:51 - but let's leave that up for now okay so
15:53 - now in and here's the thing I could prop
15:56 - of matter J s also has these iconic
15:59 - concept as a composite so I could tell
16:02 - it to make a stack of things with rows
16:03 - and columns so I could probably use that
16:05 - let's look at that for a second now I
16:08 - just have to kind of I think that's
16:10 - great but I feel like I just need to
16:12 - like set them in my own location right
16:14 - now without using the composite thing so
16:16 - I'm going to say Bar plink goes and what
16:20 - I'm going to do is I'm going to say for
16:22 - VAR x equals let's do the I and J
16:27 - actually I equals 0 I is less than let's
16:29 - make the Plinko thing 10 by 10 maybe or
16:32 - 10 by 5 I don't know 5 by I don't know
16:34 - what should be I should have some
16:36 - variables for maybe column let's do that
16:39 - and a rows and so we're going to this
16:43 - many columns and then I need a spacing
16:46 - so I'm going to make a sort of a double
16:49 - loop here a nested loop to go through
16:52 - all the rows and probably rows should be
16:55 - on them outside actually whatever I'm
16:58 - not so sure just yet because I I is the
17:02 - X so I say I think the way I'm going to
17:03 - think about this is to put I on the
17:04 - inner part of the loop so I'm doing a
17:07 - nested loop right because I want to say
17:09 - set all of these then go down here and
17:12 - set all of these so for every road you
17:14 - all the columns next row do all the
17:15 - columns or for every Y do all the exits
17:18 - ok so now what I want to do is I want to
17:21 - say var P equals new link go at I times
17:28 - spacing comma J time spacing I haven't
17:30 - figured out what spacing
17:31 - should be but I just want to know I
17:32 - don't want to be at every column in row
17:34 - location with however far apart they're
17:36 - supposed to be and let's just say right
17:38 - now spacing equals the width of the
17:42 - window divided by the number of columns
17:44 - but really need five across them so
17:46 - that's about the spacing I'm sure I'm
17:47 - going to have to massage this a little
17:49 - bit and then I'm going to say here
17:51 - Plinko dot push P so now I'm adding the
17:56 - PUD ghost I like the word Plinko it's
17:58 - just a great word pick Cokely Cokely go
18:00 - let's make a slot about glucose and now
18:04 - I want another loop here to go through
18:08 - all of the plink O's and show them and
18:11 - just to be 100% certain that they're
18:14 - different I would like to give it like a
18:19 - different color or something so let's
18:21 - make them like a green color color not
18:26 - being my strength here but let's just do
18:28 - that so what's going on now what's plink
18:30 - plink is not defined so a lot of things
18:33 - I probably personal I don't know where
18:34 - that happened whereas I say clink clink
18:36 - is not as good of words point go so much
18:38 - for further word plink plink plink go
18:40 - and now I'm going to go to index.html
18:43 - and I now I need to remember this I
18:45 - remembered it this time I need to add a
18:47 - reference to Plinko and now I'm going to
18:52 - refresh it and what am I missing
18:53 - cannot read got some sort of like thing
18:56 - that I forgot already again I probably
18:57 - forgot the are again right I probably
18:59 - forgot to pass in a radius I certainly
19:02 - did
19:03 - so let's give each one of these things
19:04 - that's separated by spacing a radius of
19:06 - four pixels and now I don't see anything
19:10 - I see these things falling I wonder if I
19:14 - have an I and J issue I'm seeing they're
19:16 - called pegs I've been told in the chat
19:18 - by C community that they're not called
19:20 - windows they're called peg that would be
19:22 - a good name for them okay fine the whole
19:23 - thing is Plinko I times spacing J times
19:27 - spacing
19:27 - I put J IJ is less and rows columns rows
19:31 - looks reasonable let's just look here do
19:34 - I act let's look at the array let's make
19:38 - sure it's built full of stuff and we has
19:40 - one thing in it that's a little bit
19:41 - weird oh and look at it it's all the way
19:43 - up there which makes no sense what so
19:45 - so plus equals spacing in the for-loop
19:52 - i/o column no no no yeah this is wrong
19:56 - the whole point of doing this is I want
19:58 - to be able to think of the rows and
19:59 - columns as individual numbers I and J 0
20:02 - 1 2 3 4 and I when I'm drawing to the
20:04 - screen I want to add the spacing aspect
20:07 - so now we can see how they're now it's
20:10 - not in any place that's logical so one
20:12 - thing that I need is for the center
20:15 - column right I need it I need an odd
20:18 - number of columns well I don't need an
20:20 - odd number I need a column to line up
20:21 - with where the thing is falling I need
20:23 - to have one of these columns in the
20:24 - center so let me think about how to do
20:26 - that and also I want the particles to
20:28 - start at the top yes
20:29 - so particles starting at the top and I
20:32 - want I need to make the whole thing much
20:34 - taller so let's go down to 800 pixels
20:36 - great so that we can see it's going on
20:39 - to 800 pixels I want to shift everything
20:40 - down right everything should start at
20:43 - and I'm actually going to do this bar x
20:46 - equals I plus 1 times spacing because no
20:52 - no no no no X is fine at I time spacing
20:56 - and Y should be spacing plus I times
21:00 - spacing just to kind of offset
21:03 - everything by and then I'm going to put
21:05 - x and y here this will make it a little
21:06 - easier to work out well what did I do
21:08 - wrong there spacing plus a J thank you
21:11 - very much ok so that's a little bit
21:14 - better but I also want to shift
21:16 - everything over by 1/2 of spacing I
21:19 - think so I want to shift everything over
21:21 - by spacing divided by 2
21:23 - there we go ah look at that
21:26 - so ok so first of all couple things
21:29 - it's pretty great actually look at it
21:32 - just like get stuck and kind of roll
21:34 - over so one thing is ah it was going to
21:39 - be a simple gonna be a puzzle here of
21:40 - having working out the spacing but one
21:42 - thing is let's give these things some
21:43 - balance so the way that we think gives
21:45 - things bounce in matters is is by
21:49 - working with the friction and rest
21:51 - - so restitution is a term for
21:53 - elasticity a high restitution will make
21:55 - it very bouncy and so what I want to do
21:58 - and this is why I should be using is I
22:00 - want to add this options thing both to
22:02 - particle and Plinko which really should
22:05 - be a peg and this is these are not
22:07 - static I'm going to just work only in
22:09 - the particle for a second restitution
22:11 - and I want that to be one which is as
22:13 - bouncy as possible so let's just add
22:16 - that options that didn't really seem to
22:21 - change anything right so let's also
22:23 - let's get rid of any friction so now the
22:28 - particles should have a high restitution
22:31 - and no friction that's a little bit
22:35 - better right you can see it's kind of
22:36 - bouncing but I probably need to work on
22:37 - the peg so I really saw those police
22:39 - codes the peg
22:40 - so let's actually take these same
22:42 - variables I'm not sure what it would do
22:45 - here to have four different amounts but
22:47 - let's uh let's add a high restitution
22:50 - and a low friction also to the the peg
22:53 - it really would expect this to be more
22:57 - bouncy with those numbers what Medicus
22:59 - hasn't gathered I spelled restitution
23:01 - wrong I said one of the things about
23:04 - JavaScript it's not going to tell you
23:06 - this is a really unfortunate thing if I
23:08 - was working in another environment I'll
23:09 - be like I don't know what that is rest
23:10 - is to shun restitution what's the chance
23:14 - I got that right now
23:17 - restitution falling there we go Boing
23:22 - Boing Boing Boing Boing oh it's gonna be
23:25 - fun - sound effects of this so you know
23:28 - we could see now we've got something
23:29 - we've got these things kind of bouncing
23:31 - along here now they're all taking
23:33 - exactly the same path how are we going
23:35 - to get it to have like a 50% chance of
23:37 - going why is it going to the left so
23:39 - interesting this is super inner lips
23:41 - okay well first of all what I want to do
23:42 - is I want to shift every other row um so
23:48 - let's let's uh let's maybe reduce the
23:51 - restitution a little bit yeah that's a
23:53 - little bit better and then let me
23:55 - alternate where the rows are
23:58 - so what I want to do is
24:01 - in sketch jf I want to say every other
24:06 - row right which is if J is the row right
24:12 - if J modulus 2 equals 0 then so so then
24:20 - let's or equals 1 it's got to be a nicer
24:26 - way to do this so I'm setting X then
24:28 - what I want to do is X minus equal just
24:31 - sort of like take that I let's do it
24:32 - this way X equals I plus spacing and
24:35 - then if it's an even row then I'm going
24:39 - to add in offset it by spacing / - let's
24:42 - see if that works there we go so this
24:44 - looks a bit more now here's the thing I
24:46 - probably need to really calibrate this
24:49 - in some way that they kind of you know
24:52 - balanced but let's just let's not worry
24:55 - about that too much and let's actually
24:56 - just make this let's just give ourselves
24:59 - a lot more columns and rows and see what
25:02 - happens and why is the top one now oh
25:06 - good it's not even I want to have 11
25:10 - columns
25:11 - yeah there we go so and I think I want
25:17 - so there's going to be some majors
25:18 - that's probably like a specific layout
25:20 - that is going to work pretty optimally
25:22 - well but this is a good start
25:24 - so this completes part 1 of this coding
25:27 - challenge and what I'm going to do in
25:29 - part 2 is I'm going to do a couple
25:32 - things I don't know what I mean what am
25:34 - I going to do in part 2 I'm going to add
25:36 - buckets to the bottom to catch them and
25:38 - maybe think about the layout and spacing
25:40 - a little bit more okay so that's what
25:42 - I'm going to do in part 2
25:45 - [Music]
25:53 - you