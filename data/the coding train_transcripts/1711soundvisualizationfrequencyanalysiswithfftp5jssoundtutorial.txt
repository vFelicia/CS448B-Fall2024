00:00 - hello in this video I'm going to take
00:02 - what I did previously which is uh
00:05 - drawing a kind of graph of the volume of
00:07 - song um and instead of drawing the
00:10 - volume of the song the amplitude of the
00:13 - song across all frequencies I'm going to
00:16 - use an object in P5 called the fft
00:19 - object to analyze the sound in a way
00:21 - that I can get the amplitude for low
00:24 - frequency sounds for high frequency
00:26 - sounds and in that sense I might see a
00:28 - different graph based on
00:30 - a different graph if it were somebody
00:31 - whistling and there were high pitch
00:33 - sounds versus somebody speaking in a
00:35 - very deep voice or something like that
00:37 - so we'll see what happens once I start
00:39 - to use that let me pause the music for a
00:40 - second now so in P5 the object that I'm
00:44 - interested is this P5 fft object so we
00:48 - used P5 do amplitude to get the current
00:51 - volume of a sound P5 fft analyzes the
00:55 - sound Returns the results from the
00:57 - frequency spectrum or time domain he
01:01 - what are those things the frequency
01:03 - spectrum the time domain anyway so the
01:06 - the the the issue is here there's raw
01:09 - data coming in from an MP3 file a
01:12 - microphone whatever and that raw data
01:15 - has to be processed and analyzed through
01:17 - an algorithm to pull things that we care
01:20 - about out of it one methodology for
01:23 - doing this is called fft so if I go to
01:25 - the Wikipedia page you can read a lot
01:27 - more about it fast for your trans
01:30 - transform I'm not going to write this
01:32 - algorithm from scratch or create the
01:34 - engine that does the fft analysis
01:37 - luckily for us P5 sound made by Jason
01:40 - seagull which is built on top of the web
01:43 - audio API has this built into it and so
01:46 - the idea is that what it does is it
01:48 - takes the sound and chops it up um well
01:51 - that's not really right but let me let
01:52 - me come over here for a second to see if
01:54 - we can think about
01:58 - this
02:00 - so if this is me analyzing the sound the
02:06 - amplitude amplitude object gives me a
02:10 - single value volume and I might be able
02:13 - to get I probably with the amplitude
02:14 - object I could get sort of like left and
02:16 - right channel like if it was stereo
02:17 - sound what's the amplitude of the left
02:20 - uh versus the right channel so maybe I
02:22 - could get two but with fft what I can
02:25 - actually get is something that looks we
02:28 - can and we'll make this like a graphic
02:31 - equalizer in other words what is the
02:33 - amplitude at different frequency levels
02:36 - and I can request the fft algorithm to
02:39 - give me the amount frequencies at
02:41 - various resolutions so to speak so I can
02:43 - ask for 256 bands so frequencies with a
02:48 - with a a level of detail of 256 or 512
02:51 - or whatever generally the sort of
02:53 - standard here are these um um powers of
02:56 - two so to speak but um uh I encourage
02:59 - you to I'll try to put some resources in
03:02 - the in this video's description with
03:03 - more about fft stuff and how it works
03:06 - but for right now let's actually just
03:07 - try to make it work so what one thing I
03:09 - want to do is I want to change this
03:12 - amplitude object to be an fft object and
03:16 - then I want to say instead of making a
03:18 - new P5 amplitude object I want to make a
03:20 - new P P5 fft object let's go to the
03:24 - reference and click on
03:27 - fft and let's look at what's what the
03:29 - functions are so I can waveform we'll
03:32 - look at waveform later but analyze
03:34 - computes the amplitude values along the
03:36 - frequency domain the array indic it
03:39 - gives me an array and those indices
03:41 - correspond to specific frequencies
03:44 - lowest to highest okay so let's just say
03:47 - we can look here actually one of the
03:48 - things that I think I need to do or
03:50 - maybe it does it by default let's just
03:52 - see okay so I'm going to say uh analyze
03:55 - so what I'm going to do here in draw now
03:57 - let's let's uh let's get rid of
04:00 - the circular stuff maybe we can come
04:02 - back to that in a second going to
04:03 - simplify a lot here I I want to instead
04:06 - of asking an amplitude object to give me
04:08 - a level I'm going to call this variable
04:11 - spectrum and I'm going to say amplitude
04:13 - uh
04:14 - analyze and sorry fft
04:18 - analyze and now I'm just going to say
04:20 - console.log um Spectrum so let's take a
04:24 - look at what we're getting in the
04:27 - browser oh can not read property analyze
04:30 - of undefined so I've got an issue here
04:34 - uh VAR
04:35 - fft uh oops fftt equals new P5 fft and
04:39 - now analyze okay let's try that
04:42 - again so we can see here that what I'm
04:46 - getting is this array now how big is
04:48 - that
04:49 - array that array is Spectrum oops let's
04:53 - look at the length of that
04:57 - array it is 102 4 so by default I get
05:01 - 1024 frequency
05:04 - bands I believe if I give it an argument
05:07 - like
05:09 - 512
05:11 - no smoothing bins ah so a smoothing is
05:16 - so it takes two arguments the length
05:19 - this first argument these are optional
05:20 - is a smoothing amount so we'll play with
05:22 - that later um I guess let's try doing it
05:25 - oh and I could do set input analyze get
05:28 - energy let's see get centroids smooth
05:30 - smooth fft analysis by averaging with
05:33 - the last analysis frame wow that's so
05:35 - wonderful that it does that for you so
05:37 - let's try saying um zero smoothing and
05:41 - 512
05:43 - bands uh and let's go here great so now
05:46 - you can see I'm getting 512 the reason
05:48 - why I wanted to do that is because let's
05:51 - get
05:52 - 256 you know I just want to kind of I'm
05:55 - going to make my canvas 256 by 256 now
05:58 - so what I want want is to have uh one
06:01 - pixel per band which is going to be a
06:03 - quick way of kind of drawing the result
06:06 - here um so what I'm going to do
06:09 - now let me pause that music is I'm going
06:13 - to Loop through that array I goes from
06:15 - zero to the length of the
06:19 - array and a given amplitude at any given
06:23 - time is Spectrum uh index I and now uh
06:29 - uh the Y value I want to map that which
06:32 - goes between zero and one from uh height
06:35 - to zero so I can now say once again I
06:40 - can draw a line from the bottom of the
06:45 - window oh I comma
06:47 - height to I comma
06:52 - Y and now what we have here and if I say
06:55 - stroke 255 right I want to draw a line
06:58 - for each one of these bands and we
07:00 - should see
07:01 - now ooh so I didn't do something very
07:05 - well here so what are ah interesting
07:08 - let's look at what are the values what
07:09 - is the so I'm wrong about the range the
07:12 - range is not between zero and one
07:17 - clearly let's look at that Spectrum
07:19 - array
07:21 - again so it looks like the range that
07:24 - it's actually giving me back is maybe
07:26 - between 0 and 255 that's just kind of a
07:28 - guess it's probably in the documentation
07:31 - so let me fix that
07:33 - range and we can say 256 kind of as the
07:36 - top there we go so now what we're seeing
07:40 - here is this kind of frequency analysis
07:44 - and you can see the lower frequency
07:46 - sounds are much higher than the high
07:49 - frequency sounds let's change the
07:52 - song to
07:55 - uh this Dot and we can see if there's
07:59 - like a pretty different quality as
08:01 - always I always forget the this dot this
08:03 - dot this dot yeah you can see there's
08:04 - many more with the with the percussion
08:06 - in the background and you could start to
08:09 - see how you could do more sophisticated
08:11 - analysis because if you can measure the
08:14 - amplitude of say a certain high
08:16 - frequency sound you might be able to do
08:18 - some beat detection to kind of determine
08:20 - when are those kind of high frequency
08:22 - drum beats happening and in that sense
08:25 - the the noise from my voice or whatever
08:27 - is singing or something else affect
08:30 - that okay so this is the basics of
08:33 - graphing fft analysis let's just make it
08:36 - um let's reduce the number of let's make
08:38 - it look a little more like a graphic
08:39 - equalizer give it some rainbow colors
08:42 - and kind of reduce the number of bands
08:44 - okay so what I'm going to do here is I'm
08:46 - going to change it to um give it uh
08:50 - 64 and so I also want to have a variable
08:53 - now which I'm going to call a w which is
08:56 - what's the width of each band and that
08:58 - that W whoops that W would be equal to
09:01 - the width of the window divided by the
09:03 - total number of bands or 64 and I could
09:06 - probably make that in a variable so now
09:07 - what I want to do is have I in oh I want
09:12 - to draw the bands at so now if I do this
09:14 - right as always I always for there's
09:16 - only that many bands only 64 now so what
09:20 - I want to
09:22 - do is draw it at I *
09:27 - W and you can see now
09:30 - these lines areed
09:33 - out and I could also now uh make this a
09:38 - rectangle instead so the rectangle
09:40 - starts at uh I *
09:44 - Wy and I * W and it and its its height
09:49 - is whatever height minus y then I would
09:53 - think as always I always forget the this
09:55 - dot this dot oops it width is W sorry
09:59 - kind of an interesting effect so you can
10:01 - see I'm drawing them as rectangular
10:04 - bands and now certainly I could give
10:06 - them uh a Phil and I could say Phil you
10:10 - know I 255 255 and I could make uh the
10:15 - color mode uh HSB and now you can see as
10:19 - always I always you know and I could
10:20 - obviously expand and map the colors
10:22 - differently but you can see the idea
10:24 - here now I could I could make W uh you
10:28 - know minus two whoops I could have W
10:31 - equal that you know minus 2 or something
10:35 - so there's a little spacing in between
10:37 - them as always I always forget this do
10:41 - dot dot the W should remain the same but
10:44 - when I actually go to draw the rectangle
10:46 - it's width should be a little bit less
10:48 - and maybe what I want to say
10:51 - is no stroke but I should never get into
10:54 - like visually doing anything because I
10:56 - have no visual Talent whatsoever so you
10:57 - get the idea oh let's add smoothing so
11:00 - let's see what happens if we add the
11:02 - smoothing um so remember that you can do
11:05 - this thing you can give you can actually
11:07 - smooth these values let's give it 0.
11:08 - five see what that looks like as always
11:10 - I always forget this
11:12 - do I can't tell what's going on here
11:15 - let's make that
11:17 - one as always I always forget
11:20 - this
11:22 - 0.9 as always I always forget yeah okay
11:25 - so you can see this smoothing now what
11:27 - what it's doing is it's taking frequency
11:30 - and averaging it with the value before
11:33 - so you get this quality of um of sort of
11:38 - smoother values as a as an amplitude
11:40 - gets higher instead of jumping directly
11:42 - to that value it's kind of interpolating
11:43 - to that value and we could program this
11:45 - oursel using say the lurp function
11:47 - what's interesting about this is another
11:49 - idea I have going back and find I've got
11:50 - this like pearing noise terrain video
11:54 - What If you were to take fft values and
11:56 - map those to the sort of terrain and
11:58 - sort of threedimensional
11:59 - of some type of landscape that could be
12:01 - an interesting thing to try Okay um
12:04 - people in the chat are requesting the
12:06 - circle so why not right let's do the
12:08 - circle you can stop watching this video
12:10 - if you don't want to see it anymore so
12:11 - what I'm going to do is first of all
12:13 - will it let me just ask for 360
12:17 - bands uh let's make the canvas
12:22 - 360 as always I always yeah so one thing
12:24 - it will not the value provided is not a
12:26 - power of two so this is going to make
12:29 - doing the
12:33 - um this is going to make the circular
12:36 - thing a little bit trickier but not
12:38 - really that much not that tricky so
12:39 - let's let's make this
12:42 - happen uh let's um so let's uh
12:50 - first I always forget okay so the first
12:52 - thing I need to do here is uh translate
12:55 - to the center we saw this translate to
12:58 - the center
12:59 - Cent now I want to
13:03 - have a radius r equal to map that
13:09 - amplitude which goes from 0 to
13:12 - 256 to something like 0 to or let's
13:15 - let's give it a minute 40 to 200 okay so
13:19 - then I'm going to use a line here I'm
13:23 - going to say uh let's actually use begin
13:26 - shape and end shape the same way we did
13:27 - that before I could there's going to be
13:30 - there's some things I could do that'll
13:31 - be let's let's get it working the way I
13:33 - had before and I'll show you some other
13:34 - things you could do to do do in a
13:35 - slightly different way so what I'm going
13:37 - to do now is say varx = R * cosine of
13:42 - that angle VAR yal R * s of that angle
13:45 - being I at this point um let's oh angle
13:48 - mode is already set to degrees um and
13:50 - then I'm going to say uh
13:53 - vertex uh X comma y so let's see what we
13:57 - get uh now
14:00 - uh line 58 unexpected token so I think I
14:02 - have somehow I have an astray bracket
14:05 - there we can get rid of this stuff is
14:07 - unnecessary now and I'm going to run it
14:09 - again whoa I did something
14:12 - crazy well this is an interesting effect
14:14 - so let's go look what's wrong
14:16 - here oh let's I don't need this W thing
14:20 - anymore what am I missing here I don't
14:21 - need volume history so much extra
14:24 - stuff go okay I don't know what I had
14:27 - wrong so you can see ah so I just don't
14:30 - have the full 360° yet so how do I deal
14:34 - with that so if I'm getting say um 256
14:38 - bands but there's
14:40 - 360° what I actually want this angle to
14:44 - be angle equals map I which goes from 0o
14:49 - to spectrum. length from 0 to 360 pretty
14:53 - easy enough and then instead of I I can
14:55 - use angle
14:57 - here and uh now we can do this again as
15:01 - always I always forget dot
15:05 - angle as always
15:08 - forget oh yeah so there's just not a lot
15:10 - of high frequency sounds and the low
15:12 - frequency sound is really
15:14 - loud so my mapping is a little bit
15:19 - off there now you can sort of see what's
15:21 - going on here um and we can uh we can
15:25 - kind of mess with this a little bit
15:27 - remember I had that fill in there why
15:29 - not just add that here let's see if it
15:32 - if I fill per
15:37 - vertex uh I should be able to fill it
15:39 - per vertex I don't have a stroke um but
15:43 - anyway I'll let you guys kind of mess
15:45 - around with that you know I could rotate
15:47 - lines around it let's let me make it
15:48 - different colors
15:51 - um also say every height has a certain
15:54 - color and you can map the song two
15:56 - dimensionally so I I really should stop
15:57 - this but I can't help myself so one
16:00 - thing I want to do is actually what I
16:03 - want to do is draw a line I'm going to
16:06 - instead of saying begin shape end shape
16:09 - I could use rotate but since I've
16:11 - already done the calculation I'm going
16:13 - to draw a line from the center to that
16:17 - XY and uh uh what I'll do is I'll say uh
16:23 - stroke I 255 255 and now as always I
16:29 - it's really much slower so you can see
16:32 - um it's slow because that's a lot of
16:35 - lines to
16:37 - draw I am getting a nice um so I guess
16:42 - what I probably want to do is reduce the
16:45 - number of bands as you can see it's
16:49 - running more smoothly now anyway I could
16:51 - play with the color in a different way
16:53 - um I could use rotate and have these be
16:55 - rectangles um I could think about the
16:58 - mappings I have it spin I could connect
17:00 - it there's all sorts of possibilities
17:02 - here but I'm kind of showing you a range
17:04 - so hopefully you enjoyed this and got
17:05 - something out of it you know obviously I
17:07 - would hope that you watching this could
17:09 - come up with sort of more cre I want say
17:13 - more creative ideas or your own take on
17:15 - what it means to visualize the fft uh
17:18 - Spectrum array from uh sound file okay
17:21 - and I'll see you in a future video I'm
17:23 - going to do a few more videos that'll be
17:25 - next in this playlist and I don't know
17:27 - what it's going to be in them yet but
17:28 - yeah if you're watching this now and the
17:29 - video is already there then you know you
17:31 - know before I do although because you're
17:33 - in the future or I'm in the present past
17:35 - something like that
17:40 - [Music]
17:45 - goodbye