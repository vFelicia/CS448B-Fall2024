00:02 - hello again how are you I hope you're
00:04 - doing well uh I'm doing okay I'm
00:06 - actually feeling a little stressed out
00:08 - but I'm going to go forward with this
00:09 - video anyway so I'm starting a new
00:11 - series uh this series of videos is going
00:15 - to be about using data in processing so
00:18 - we'll look at a lot of things where do
00:20 - we find data how do we get data what if
00:22 - the data's from a file or from a URL or
00:25 - how do I chop it up or how do I sort it
00:27 - or there's lots and lots of what form
00:30 - in what's an API there's so many things
00:33 - to talk about and cover here in this set
00:34 - of videos but before we can do any of
00:36 - that the foundation the building block
00:39 - the thing that we need to be comfortable
00:41 - with and happy with and just feeling
00:44 - good about our day with is this idea of
00:47 - a string what is a string now in fact a
00:49 - string is something that's quite
00:51 - familiar to you probably I know who
00:52 - knows who you are or why you're watching
00:54 - this video but chances are you've seen a
00:57 - string before in fact if you watched
00:58 - some earlier videos from just a couple
01:00 - ago we were load we were using strings
01:02 - we loaded an image maybe we had
01:04 - something on our hard drive called a
01:07 - file do JPEG and it was some characters
01:12 - and it was and it was in between quotes
01:14 - this is a string a string is a sequence
01:16 - of characters uh in between quotes now I
01:20 - mean actually the in between quotes part
01:21 - is just the way that we declare a string
01:23 - the string itself is just this sequence
01:25 - of characters and if if we want to do
01:27 - anything that has to do with text
01:29 - certainly we we need a string we need to
01:31 - a way to represent that text but in fact
01:33 - most of the data we're going to look at
01:35 - even if the data is all numbers that
01:37 - data is going to come in as text um so
01:41 - this is something we need to become
01:42 - comfortable with so how do we how do we
01:44 - make a string in processing well a
01:46 - string is a data
01:49 - type uh we now have a variable I I made
01:52 - this I made up this wonderful beautiful
01:54 - variable name s with the data type
01:56 - string and what is the String it is this
01:59 - sequence of character characters so I
02:01 - think one of the things we can first
02:02 - start to look at in working with strings
02:05 - and processing is just drawing them to
02:07 - the to the window so let's um let's come
02:09 - back over here and let's say we
02:12 - have a string s to be or not
02:17 - Tob and you know obviously I could say
02:20 - print line
02:21 - S and run this particular sketch and we
02:24 - can see down here in the bottom to be or
02:26 - not to be that's our string we we're
02:27 - representing it as a variable and we're
02:30 - printing it now let's say what we
02:32 - actually want to do is draw it to the
02:34 - window we know how to draw things it can
02:36 - draw an image it can draw a rectangle I
02:37 - can draw a line uh uh we can draw a
02:39 - string also so I can say text S and then
02:43 - now I need to give an X and A Y where I
02:46 - want that text to appear so let's uh put
02:50 - this in some arbitrary location right
02:52 - here and we can see there it is our
02:54 - little tiny friendly string to be or not
02:57 - to be it's there in the window you can
02:58 - barely read it though let's make it
02:59 - bigger
03:01 - with with shapes we can set colors we
03:03 - can set sizes text is no different I can
03:05 - use the text size function and I'm going
03:08 - to say text size uh
03:10 - 64 and now I have my lovely string here
03:14 - to be or not to
03:17 - be okay so one of the first things you
03:19 - might start thinking about is I'm I'm
03:21 - I'm here to put text in my processing
03:25 - window and the thing that means a lot to
03:27 - me is picking my font that's my joy and
03:29 - life is picking a font and I don't like
03:32 - this font whatever it just chose by
03:34 - accident or by default which it looks
03:36 - like it's aerial or something like that
03:38 - so one of the things you can do in
03:39 - processing is you can say text
03:43 - font and I need to put something in
03:45 - there what goes in there I need to
03:48 - reference a font the way to reference a
03:51 - font is to make a Pont object so I'm
03:53 - going to make uh Pont object and I'm
03:56 - going to say create font and I'm going
03:58 - to use the font George dots one of
04:01 - my personal favorite fonts and I'm going
04:05 - to run this sketch and now we can see to
04:07 - be or not to be is in a different font
04:09 - isn't isn't life good and happy and
04:10 - wonderful that we have we can just pick
04:12 - whatever font we want now okay you know
04:15 - the thing is I'm kind of
04:16 - like you know just going through the
04:19 - motions here because in the end I'm the
04:22 - less concerned about drawing text to the
04:24 - screen I mean that's that's a not that's
04:27 - something that to to it's okay to be
04:29 - concerned with but I'm trying to get to
04:31 - the data stuff the parsing the the
04:33 - chunking of data so let's actually get a
04:36 - little closer to
04:38 - that by looking at a slightly different
04:40 - way to draw this
04:42 - string okay so um for let's take for the
04:47 - moment uh um okay so I'm going to move
04:51 - this string
04:52 - up and I'm gonna draw it
04:56 - again and what I want to do
05:00 - let's put this down a little lower okay
05:02 - what I want to do in the the top is just
05:05 - the string there it is on the screen the
05:07 - bottom is also just the string there it
05:08 - is on the screen but I I want a little
05:10 - thought experiment here what if I were
05:12 - to color each one of these characters
05:14 - with a different color what if I were to
05:17 - draw each character at a different size
05:19 - what if I were to animate that string so
05:21 - that it like moves around the screen
05:22 - like a snake or wraps itself around on a
05:25 - curb what if I want to visualize text in
05:27 - a more flexible and dynamic animated way
05:30 - now I just said the point of all this is
05:32 - not about drawing text it's about
05:34 - working with text as data but actually
05:37 - manipulating the way we draw this text
05:39 - will actually help unlock some of the
05:40 - clues to how we're going to work with
05:42 - text as data so uh how do we figure out
05:45 - like well this is a string this
05:48 - string this string over here is a data
05:51 - type and in fact it's capital S which
05:53 - means it's an object an INT is a
05:56 - primitive data type like just a number a
05:58 - float is just a number a P image is an
06:00 - object an image it's got pixels it's got
06:02 - width it's got height a string also has
06:04 - a lot of stuff it's got this this this
06:07 - sequence of characters but there are
06:09 - lots of other functions that we can to
06:11 - use call upon this object to work to
06:14 - manipulate and work with this string car
06:17 - at
06:19 - length uh index
06:23 - of uh
06:26 - substring two lowercase
06:30 - there are lots and lots of methods that
06:32 - we can call to manipulate and play with
06:34 - these strings and we're going to see all
06:36 - of these in the set of videos I'm
06:38 - recording today and later today and
06:40 - tomorrow and later this week whenever it
06:42 - happens so how do we find out about what
06:45 - these F what what are the possible
06:48 - functions and what do they do well uh
06:51 - string is so commonly used in processing
06:54 - that I wasn't really prepared for this
06:56 - unfortunately I'm going to open up a
06:57 - browser window here and I'm going to say
06:59 - processes
07:00 - .org
07:02 - string and that there is in fact oops a
07:06 - reference page for strings in processing
07:09 - and we can see a lot of those methods I
07:10 - listed over there here they are here and
07:12 - there's some more information you can
07:13 - click on them and there's examples I
07:15 - should point out though however
07:20 - that I'm back uh I should point it's
07:23 - going to happen to the other camera soon
07:24 - in a second I should point out that uh
07:28 - string really uh it comes from java and
07:32 - in fact you know this is kind of like an
07:33 - awful place to be that's making me feel
07:35 - very uncomfortable inside you know
07:37 - actually I I I I rather like it it makes
07:40 - but you know anyway the whether the the
07:42 - Java talks are are very long- winded
07:44 - with a like way too much information but
07:47 - and and a little bit hard to parse and
07:48 - find fall but the point is if you really
07:50 - want to find dig into the everything
07:52 - there is to ever know about a string you
07:54 - can string is a class that's part of
07:56 - java processing built on top of java we
07:58 - have access to everything you can do
07:59 - with strings in Java in
08:02 - processing so I encourage you uh I'll
08:04 - try to leave some links for you to go
08:06 - look at that stuff but I want to come
08:09 - back over here and I want to start
08:11 - looking at some of these functions that
08:13 - we use that we can use to manipulate
08:16 - strings let's look at car at and length
08:19 - Okay car at and length car at gives us
08:23 - an individual character at a specific
08:25 - index remember this thing that we that I
08:28 - that we talked about at some point
08:29 - called an
08:31 - array array might be some numbers or
08:34 - some objects or whatever it is it's a
08:36 - ordered list of stuff we access each
08:40 - individual element of the array by its
08:42 - index starting with zero and counting up
08:46 - so this array which has five elements
08:49 - has in indices index values 0 1 2 3 4
08:52 - guess what this particular string that
08:54 - has 1 2 3 4 5 6 seven eight characters
08:58 - each one of those character characters
08:59 - can be referenced by an index also
09:01 - starting with zero eight the last one
09:04 - will be seven the length of this string
09:06 - you can't see those uh zero uh seven the
09:09 - length of the string is eight each
09:11 - character is referenced by its index so
09:14 - if I want
09:15 - to come back if I want to look at and
09:20 - draw
09:21 - simply the first
09:25 - character here we go there's my T if I
09:28 - want to draw the fourth
09:31 - character there's my B so this works car
09:35 - at Works length by the way will give us
09:37 - the length of the string so let's say I
09:39 - want to go through all of the characters
09:41 - in The
09:44 - String I can do this now I'm going to
09:48 - draw every single character in the
09:49 - string oh look they're all on top of
09:51 - each other right there because I drew
09:53 - them all at the location 10 comma 300
09:55 - now before I go a little farther with
09:58 - this
10:00 - there's a couple pieces of there's a
10:01 - kind of a key piece of information here
10:03 - that the the mouse arrow is right there
10:04 - at the end of length look at that that
10:06 - doesn't look if you remember an
10:08 - array come over here if I had an
10:14 - array I would say
10:16 - vs. length length being a property of
10:19 - the array that gives me the length of
10:21 - that array
10:22 - five I'm coming back over here look at
10:25 - that length has parentheses length is a
10:28 - function a method of the string object
10:30 - so even though it's very similar this is
10:32 - an easy thing that you're get tripped up
10:33 - on even though it looks just like the
10:35 - length of an array it's actually a
10:36 - function it has to be executed it needs
10:38 - open and close parentheses for it to be
10:40 - called so let's say we want to space
10:42 - these out um I'm going to uh make up a
10:45 - variable called
10:48 - X and I'll start it at 10
10:51 - whoops and I'm going to uh in fact we
10:54 - don't uh we can like put all this up
10:57 - here now um I'm going to say draw each
10:59 - character at x and x equal x plus I
11:02 - don't know 32 whoops what did I do uh in
11:05 - I equals z let's run this okay now I
11:09 - have those characters spaced apart each
11:11 - one is spaced apart by 32 pixels H that
11:15 - doesn't look right the actual spacing I
11:17 - don't know you you who know about these
11:19 - things like typography that has a term
11:22 - like letting or kerning or something
11:24 - like that you know there's all these
11:25 - nice terms I don't know about any of
11:26 - that stuff but um the these characters
11:30 - are are are this is obviously not right
11:32 - so there's got to be a way around this
11:34 - and in fact in processing there is a
11:37 - function called text
11:39 - width if um I were to draw the function
11:43 - text width sorry gives me dynamically
11:46 - the width of any character that's being
11:48 - drawn in the window so we can use text
11:51 - width to say draw the T now move by the
11:54 - width of that character and draw the O
11:56 - now move by the width of that character
11:57 - and draw the B so I'm going to um I'm
12:00 - going to uh just add something here by
12:03 - putting each character in a a separate
12:06 - variable and by the way the car data
12:09 - type which is a primitive type is a data
12:11 - type for an individual character so I'm
12:12 - looking at every single character in
12:14 - this string which is a sequence of
12:17 - characters uh I'm going to draw that
12:19 - character and then I'm going to move by
12:21 - the text width of that
12:23 - character and look now the string looks
12:26 - just like the one above now we can start
12:28 - to do things like say hey uh give me a
12:34 - random uh
12:38 - fill now we have a random color for each
12:40 - character which we would not be able to
12:41 - do by drawing the text all at once and
12:44 - now we also I could do something like
12:47 - I'm going to actually change this and
12:48 - just say text size random 12 to
12:53 - 128 this I think is illustrates the
12:55 - point even better that now each
12:57 - character is a different size
13:00 - and but yet the layout is still correct
13:03 - so here's the thing there's a lot of
13:04 - stuff you could try here none of this is
13:06 - animated so what if you have the text
13:08 - grow and Shrink or what if you have each
13:10 - character kind of like move around or
13:12 - what if you have it not on a perfect
13:14 - line but kind of on a curve and and I
13:16 - can show you there's if you're following
13:18 - along with the learning processing
13:20 - examples I'm going to go here to chapter
13:22 - 7 there's a couple that I'll just show
13:23 - you to open up um so
13:26 - example uh 17.8
13:30 - this is drawing the text along a curve
13:32 - this is a pretty high degree of
13:34 - difficulty problem but you know what you
13:36 - could think to yourself is actually
13:38 - could I figure out how to draw a set of
13:40 - rectangles along a curve if you can draw
13:42 - a set of rectangles along the curve then
13:44 - you just need to place each character
13:46 - within that rectangle there's a there's
13:48 - another function that I think there's
13:50 - there's another little piece of drawing
13:52 - text that I've kind of missed here uh
13:54 - which is text
13:56 - align and uh this is also going to be
13:58 - helpful if I say text align Center um
14:02 - you can see that now that each character
14:03 - is aligned by its Center and you can see
14:05 - that it's it's uh off where it's it's
14:07 - located if I said uh with divided by
14:10 - two you can see here now the text is
14:12 - centered on the ren so text align
14:14 - there's you know you can look up and
14:16 - there's a lot of this stuff in uh
14:17 - processing going I go back to what it
14:19 - was before um so that's something you
14:21 - can think about the other thing you
14:22 - might think about uh looking at is and
14:24 - I'm going to go open up another example
14:26 - which
14:27 - is uh
14:31 - 17.10 oh boy okay so let's uh let's zoom
14:34 - in here and let's take a look at this so
14:37 - look this looks just like text on the
14:39 - screen each one of these characters is
14:40 - individually placed there's actually an
14:42 - object like a particle object for each
14:44 - one it retains its own location it
14:46 - retains that rotation information and as
14:48 - I click the mouse you can see they start
14:50 - to move around randomly uh and then if I
14:53 - let go of the mouse they're going to
14:54 - slowly come back to their original
14:55 - location so these are the kind of ideas
14:58 - and experiments you could to play with
15:00 - um I didn't really go too far into
15:02 - actually the font stuff I was was very
15:04 - much skipping over that one thing that I
15:06 - think is worth uh uh mentioning is here
15:10 - let's just to talk for a minute about
15:11 - this create font function the create
15:14 - font function is pulling fonts that are
15:17 - installed on your system it's pull
15:18 - pulling from the system fonts and I
15:20 - could actually look at what all those
15:22 - possible system fonts are by uh by
15:25 - saying P
15:26 - font. list and this will uh this will
15:30 - dynamically pull up a list of all the
15:32 - fonts that are installed in the system
15:33 - and I could you know I could just like
15:35 - pick one of these out and uh put it in
15:38 - here and run this again and we're going
15:40 - to see now I have a completely different
15:41 - font so whatever fonts are available to
15:43 - you you can use in processing um the
15:46 - nice thing about this working in this
15:47 - rendering mode is that the fonts are
15:49 - being drawn as actual like shape data
15:53 - they're not like images that are just
15:55 - being placed on the screen so you can
15:56 - grow and Shrink them and even though I
15:57 - specified the size 6 before it's going
16:00 - to dynamically uh make everything look
16:02 - nice no matter what size you draw it at
16:03 - you have to watch out the if you're in a
16:05 - different mode if you're in 3D or other
16:08 - modes sometimes the font has to be
16:10 - rendered as an image and then if you're
16:11 - starting to grow it or Shrink it it's
16:13 - going to look pixelated or squished um
16:15 - there's also ways of uh packaging a font
16:18 - with your processing sketch Itself by
16:20 - including it in the data folder so you
16:22 - know I'm kind of rambling here because
16:25 - you should have just stopped this and
16:27 - gone on to the next video cuz where
16:28 - we're getting to here where we're hoping
16:30 - to get to is looking more about is is
16:34 - looking more closely as this particular
16:36 - string as data we've seen carat length
16:39 - later we're going to see index of
16:41 - substring and L to lowercase the next
16:43 - thing though that however that I really
16:45 - want to look at which is a sort of key
16:46 - component of working with data uh and
16:49 - strings are the functions split and the
16:52 - functions join so one of the first
16:54 - things that I think we can look at in
16:56 - terms of working with data is have this
16:59 - stuff it's a giant string how do I split
17:01 - it up it's all these numbers separated
17:03 - by commas how do I split those up it's a
17:05 - novel with a lot of words in it how do I
17:08 - split that up and count all the words in
17:09 - it so we're going to look at a few of
17:11 - these scenarios and then we'll get even
17:14 - further to the we'll get even further
17:16 - say like oh well if the data is in a
17:18 - standardized format like XML or Json
17:21 - what's XML what's Json we'll talk about
17:23 - all these things as we get from video to
17:25 - video for now though I would suggest to
17:26 - you that the first thing you might start
17:28 - with is just hardcode some data numbers
17:32 - characters as
17:33 - strings try going through them by
17:36 - character by character try drawing it
17:38 - try um you know what if you were to
17:40 - visualize each one of these um not as
17:42 - the character itself but as a rectangle
17:44 - with a color basically there so many
17:46 - things you could think of um in terms of
17:48 - just playing with strings and drawing
17:51 - and processing okay so the next video
17:53 - we're going to look at split and join
17:56 - and I have to stop this now somehow