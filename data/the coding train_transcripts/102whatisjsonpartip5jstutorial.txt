00:03 - OK.
00:03 - I'd like to do a little dance
at the beginning of this video.
00:06 - In this video, I am planning
to talk about JSON exclusively.
00:09 - What is this data format, JSON?
00:12 - What does it look like?
00:13 - What does it mean?
00:14 - And if you happen to have data
in a JSON format, how could
00:17 - you use that data in a
program that you're writing,
00:19 - so that it runs in the web
browser and JavaScript using
00:22 - the p5.js library?
00:23 - OK.
00:24 - So I have some information
that I talked about
00:26 - in the previous video.
00:27 - If you watched that previous
video, by the way, thank you.
00:30 - That was kind of you.
00:32 - OK, so, let's say,
the scenario that I'm
00:34 - posing here-- this
will be interesting--
00:36 - so you're interested
in flowers, and you
00:37 - looked all over the internet.
00:39 - You couldn't find any
information about flowers.
00:41 - But you have this book
all about flowers.
00:44 - Here's something you
could actually do--
00:46 - novel concept-- you could
just type the data yourself
00:50 - into a file to use
in your program.
00:52 - So let's first think
about how that might work.
00:54 - So actually, even before I
start doing anything over here,
00:57 - let's do that just even
in our code, right.
00:59 - So you know-- you know how
to program, or at least I do.
01:03 - I think you do, if you've been
watching the videos, hopefully,
01:06 - because I don't know if I'm
doing a good job or not.
01:08 - But you might say to
yourself like, "Ah, I
01:11 - am going to make this
object called flowers,
01:16 - and it's going to have a name.
01:21 - I'm just going to
say it's a flower.
01:23 - It's going to have a
name like "sunflower".
01:26 - And it's going to have
a color, which is--
01:30 - I always want to do
color, and then I
01:32 - realize there's a problem.
01:33 - I should just admit that
there's a problem here.
01:35 - So what I started
doing, by the way, was
01:37 - I want to use the
p5.js color function,
01:39 - which is so nice, that I could
make a nice yellow color,
01:41 - which yellow is red
and green, I think.
01:43 - But that's not going
to work up here.
01:45 - The color function is only
available once I'm actually
01:48 - in Setup, once the
page has loaded.
01:51 - So I'm going to make
that global variable.
01:53 - And I'm going to make
my object here, sorry.
01:55 - So name, sunflower.
01:58 - Color is-- and let's
not name it color,
02:01 - because that's a keyword.
02:02 - Let's name it col is color.
02:05 - How do you make yellow?
02:06 - Red and green, I
think that's right.
02:08 - How about like some red, and a
little bit more green, right?
02:12 - So I've now--
02:14 - Whoops, and there's
no semicolon there.
02:15 - So I've now made data.
02:18 - I've made an object,
a JavaScript object.
02:20 - It has data in it.
02:21 - So I could add all
sorts of other data,
02:24 - like what's the average
height of a sunflower,
02:26 - and what season do
sunflowers grow,
02:28 - and what's most popular
latitude longitude in the world
02:31 - where sunflowers appear.
02:33 - I could keep adding all that
data as these key value pairs.
02:36 - And I could do
something like, say,
02:38 - "Oh, now I'm going to
draw a black background."
02:42 - And then I'm going to say
fill by the flower's color.
02:45 - And I'm going to draw a text
on the screen with the flower's
02:50 - name at pixel
value 10, comma 50.
02:55 - And I could say
createCanvas 400, 400.
02:59 - So you know, if I were to run
this sketch, we could see,
03:01 - look at that.
03:02 - I've got my text called
yellow sunflower.
03:05 - I have the yellow sunflower
text right there on the screen.
03:08 - So this is working with data.
03:11 - This is actually working with
data in JavaScript Object
03:14 - Notation, because that's
a JavaScript object,
03:16 - and the notation is the
syntax of JavaScript.
03:19 - So actually, working
with JSON data
03:21 - is exactly what you
already know how
03:23 - to do if you've been
programming in JavaScript.
03:25 - So I want to come
back over here,
03:27 - and then put our brains
back in the scenario.
03:29 - So you have your
encyclopedia of flowers,
03:32 - and you're starting to put
all the data into a data file.
03:35 - So one of the pitfalls of
this here is this works,
03:41 - but it's not so great.
03:42 - Like what if I had like
1,000 different flowers
03:44 - or huge amounts of data?
03:46 - I wouldn't want to have all
of that just in my code.
03:49 - I want that to be
somewhere else.
03:51 - You know, eventually
I might want
03:52 - that to be served up
by this like web server
03:55 - somewhere that's an API
that's just sending everybody
03:58 - in the world data about flowers,
because wouldn't that be nice.
04:01 - But here at this moment, I'm
just using it for myself.
04:03 - The thing that I
would want to do
04:05 - is put the data in
a separate file.
04:09 - So let's look at how
we might do that.
04:11 - Now there's one thing that's
different, which is that--
04:17 - somebody correct
me on the internet
04:18 - if I'm wrong about this--
04:20 - but one thing that
you need to do
04:22 - once you move the data to a
separate file, first of all,
04:28 - you need to create a file.
04:30 - And I'm going to call
it like flower.json.
04:36 - So our sketch files
have been called
04:39 - sketch.js, because
they're JavaScript files,
04:43 - files with JavaScript
code in them.
04:45 - Now I'm making a new file.
04:47 - Its extension is .json
because it's JSON data.
04:50 - But this is a data file,
important difference.
04:53 - There is no code in here.
04:54 - It might have the
same syntax as this,
04:56 - but there's nothing to execute.
04:58 - There's no code to run in there.
04:59 - It's just information that
can be loaded into an object.
05:03 - The point is, this
is no longer going
05:05 - to be written directly here.
05:07 - Flower is somehow going to equal
"load this particular file."
05:12 - So the difference is, there's
no variable name in this file.
05:16 - It's just an object.
05:17 - So the file starts
with a curly bracket,
05:20 - ends with a curly bracket.
05:21 - And then, the other thing that's
important is, if you notice,
05:25 - name is a string,
so the name's--
05:28 - sorry, name is the
property of flower,
05:32 - and its value is "sunflower,"
a string in quotes.
05:35 - But in the JSON file, you'll
want these property names
05:39 - to also be in quotes.
05:41 - So you'll see that what I want
to do is say "name" sunflower.
05:47 - And the other thing
that I can't do, right--
05:49 - I did this in my program-- is
I executed the color function
05:53 - here.
05:54 - But I could do
something different,
05:55 - like I could say its
"red" value is 255.
06:01 - Its "green" value is like 200.
06:05 - And its "blue" value is 0.
06:08 - So notice the syntax here.
06:09 - It's an object.
06:10 - And this should be in quotes.
06:12 - It's a bunch of key value
pairs, property name, value.
06:16 - So a flower has a name.
06:18 - It's sunflower.
06:19 - A flower has a red value.
06:20 - It's 255.
06:21 - All of this is a list
of these properties,
06:23 - all separated by commas.
06:24 - The last one has
no comma after it.
06:27 - And then a close curly bracket.
06:28 - Now as I go through
more and more examples,
06:30 - you're going to see that this
file can get enormously more
06:34 - complex.
06:35 - It can have arrays
built into it.
06:37 - It can have objects
nested in other objects.
06:39 - And I'm so excited to look
at all of those scenarios.
06:42 - But right now I'm going to
keep it very, very simple.
06:44 - But the reason why I'm
mentioning the syntax so
06:46 - specifically is one comma out of
place, one quote out of place,
06:51 - your program won't work.
06:52 - And often, you're not going to
get such a great error message.
06:55 - So you know, we have to
sort of like think about
06:57 - and look at like how
you can deal with that.
06:58 - But one way of dealing
with it is just
07:00 - be really, really careful as
you kind of enter your data
07:03 - into a JSON file.
07:04 - So you know, I pretend I'm
reading my flower encyclopedia.
07:06 - I found all this information.
07:08 - I'm going to format the
data so I can use it.
07:10 - So I've come back over here.
07:11 - How am I doing on time?
07:12 - Seven minutes, you're watching
a video for seven minutes.
07:15 - That's really quite
impressive on the internet.
07:17 - And I'm going to go
over here to this Plus.
07:20 - And I'm going to hit
that Plus which is going
07:22 - to allow me to add a new file.
07:26 - And the new file is going
to be called flower.
07:28 - I was saying flowers,
because ultimately I
07:30 - kind of want this
file to be a list
07:33 - of different kinds of flowers.
07:34 - But right now I'm
kind of being simple,
07:36 - so I'm just going
to say flower.json.
07:39 - And I'm going to do
exactly what I said.
07:41 - I'm going to say "name"--
07:43 - oops, "name" colon "sunflower",
"r" is 255, "g" is 200,
07:53 - and "b" is 0.
07:57 - Now, so you can see
here, now I have
08:00 - this file called flower.json,
and it's got the data in it.
08:03 - Now I hopefully
did that correctly.
08:06 - But let's say you're not
sure if you did it correctly.
08:09 - Well, there happens-- there's
a lot of these tools online.
08:12 - There's a lot of
tools online that
08:13 - allow you to validate or check
the syntax of a JSON file
08:16 - to make sure it's valid.
08:18 - So I'm going to very quickly
just copy paste this,
08:20 - and go to Chrome.
08:22 - I'm going to open up Chrome,
and I'm going to go to JSON--
08:26 - I'm going to Google
JSON formatter,
08:27 - and just click on the
first thing that comes up.
08:30 - I'm going to paste the
data into this box.
08:32 - And I'm going to click Process
right here, which is going
08:35 - to validate and check my JSON.
08:37 - And it says "valid."
08:38 - And you can even see it sort
of like syntax highlighted it,
08:41 - and did some things with it.
08:42 - And we might look at this
later, and some other ways
08:44 - you could do this.
08:45 - But this, I'll try
to include a link
08:46 - to this particular tool in
either like an annotation,
08:49 - or in the comments below.
08:52 - So this is something
you might want to do.
08:54 - And now, once we've done
that, the question is now,
09:00 - here under sketch.js,
how do you change, right?
09:04 - I don't want to say flower
equals this stuff right
09:07 - here in the code.
09:08 - I want to say flower equals
the stuff that's in that file.
09:11 - How do I get the stuff
that's in that file?
09:13 - So the way that you do
that is with a function
09:16 - called loadJSON.
09:18 - So this process of saying like,
I don't want to type the code.
09:22 - I want var flower to equal this
stuff is accomplished with this
09:27 - function loadJSON();.
09:29 - So I believe I talked
in some video--
09:32 - link below or link in an
annotation, I like to do that--
09:35 - about loadImg();.
09:38 - There's also a function
for load table.
09:40 - There's load sound, if you're
using the p5 sound library.
09:43 - So this is just yet
another way of grabbing
09:46 - some sort of external
piece of information,
09:48 - could be a text file, a JSON
file, an mp3 file, a movie
09:51 - file, an image file, loading
it for use in your sketch.
09:54 - In this case, loadJSON(); takes
everything in the JSON file,
09:58 - and essentially makes all of
that as the data stored in that
10:01 - variable.
10:02 - And then I can access
it exactly the same way
10:04 - I would normally in
JavaScript, as if I had written
10:07 - all that data into the variable
itself, hard-coded in the code.
10:10 - I hope that makes sense.
10:11 - So now, but there's a
couple pitfalls with this.
10:15 - The question sort
of now arrives like,
10:17 - where do you put that
loadJSON(); code?
10:19 - It would make sense to
put it right here, right?
10:22 - Instead of this, if
I comment-- oops--
10:25 - I'm going to like put this
down here and comment it out.
10:28 - I would say loadJSON
("flower.json");.
10:32 - So this would make sense to you.
10:35 - You're just going
to say hey, instead
10:37 - of setting it equal to
this stuff directly,
10:39 - let me load it from the file.
10:41 - And then of course, one
thing I would have to change
10:43 - is flower.r, flower.g,
flower.b, right,
10:46 - because I don't have a color.
10:47 - I have a RGB.
10:48 - So this should work.
10:49 - It's not going to work.
10:50 - I don't think it's
going to work.
10:51 - Let's try it.
10:52 - So you can see-- ah!
10:53 - Uncaught TypeError.
10:55 - Cannot read property
"toString" of undefined.
10:58 - That's a very sad error.
10:59 - There's a couple things
sad about that error.
11:01 - I don't know what--
11:01 - Line 15,085?
11:03 - That's not a-- I don't
have 15,000 lines of code.
11:05 - So it's reporting to you
something that's happened deep
11:08 - into the p5.js library.
11:10 - And essentially,
the issue is I am
11:14 - trying to access properties
of a flower object
11:17 - that doesn't exist.
11:19 - But it should exist.
11:20 - I loaded it right there.
11:23 - This is the time where I like
to om, meditate, and remember
11:26 - that JavaScript is always
asynchronous, something
11:29 - like that.
11:31 - I'm trying to introduce
singing into the videos.
11:33 - I think that's probably
a terrible idea.
11:35 - But we'll see.
11:38 - So in other words, I've
asked to load that data.
11:41 - And that data is going
to take some time.
11:43 - It's on the hard drive.
11:44 - The gnomes in the
computer have to go
11:46 - and dig into the hard drive and
find it, and pull it back up.
11:49 - But draw, boom, is
happening immediately.
11:51 - So what I need to do
is I need to enforce.
11:54 - There's a couple things.
11:55 - I need to enforce that the
data is loaded before I start
11:58 - trying to draw with the data.
12:00 - And a quick way to do
that, which is ultimately
12:01 - not the way that I'm going to
show you in all of the videos,
12:04 - but at least we're
getting started.
12:05 - A quick way of doing that is
using the preload function.
12:09 - So function preload(), you
know, everything is event-based.
12:13 - And you know, the events that
are happening here in this
12:15 - particular sketch is
preload() ("flower.json");.
12:21 - So the preload is the
first thing that runs,
12:24 - and then everything that
in preload when it finish--
12:26 - anything that's
loaded in preload
12:27 - when it finishes loading, setup
that runs, and then draw runs.
12:31 - So this is a way of
guaranteeing that by the time
12:33 - we get to draw, that data will
be in that particular variable.
12:36 - I really hope this works now.
12:37 - And you can see it
does, and you can
12:39 - see I have my text of the
sunflower there on the screen.
12:41 - So this just sort of wraps up a
kind of very basic start of OK,
12:47 - there's a loadJSON(); function.
12:49 - What is JSON?
12:50 - What is the syntax?
12:51 - There's a loadJSON(); function
that allows me to load that
12:54 - stuff that's in the
file into a variable.
12:56 - And then I can use the stuff
in that file in the same way
12:59 - that I do in just about any
JavaScript, any p5 sketch
13:01 - that I've ever done before.
13:03 - So what do I need--
13:04 - what's missing here,
a couple of things.
13:06 - One is I think we need
to increase the order
13:09 - of complexity of the JSON file.
13:11 - Like this isn't really
getting us very far.
13:14 - There's not a lot
of data here, you're
13:16 - not usually going to see JSON
files that look this simple.
13:19 - They're going to have tons
of information in them.
13:21 - Every-- 10 recent New
York Times articles,
13:24 - who wrote the article, all
the comments for each article,
13:27 - an ID for the article, a
word count for the article,
13:29 - there's lots of information,
and arrays, and nested objects.
13:33 - So what I want to
do in the next video
13:35 - is look at some
more complex data,
13:38 - and how it might be
formatted, and how
13:40 - you can kind of do some
detective work to figure out
13:42 - how to access that data.
13:44 - What I would suggest to you,
if you want to do an exercise
13:46 - before you work--
13:48 - go to the next video, is pick
something that interests.
13:51 - You try to make a
JSON file for it.
13:53 - Put some data in it.
13:54 - See if you can load
that data and display
13:56 - something based on that data.
13:57 - I'm sure you could think of
something more interesting
13:59 - than just what I've done here.
14:01 - And something else
that I'll mention,
14:02 - which I'll show in the
beginning of the next video,
14:05 - is there is a wonderful
GitHub repository.
14:09 - What's GitHub?
14:10 - Oh my god, what's Git?
14:11 - I need to make a
video about that.
14:13 - But I don't know.
14:15 - Whoops, I'm in the
wrong place here.
14:17 - I'm trying to open something.
14:18 - I just can't find--
14:19 - Oh, Chrome, that's what
I was trying to open.
14:21 - This is a GitHub repository
maintained by Darius Kazemi.
14:25 - Hopefully I pronounced
his name correctly.
14:27 - And what it is, is it's
a whole lot of JSON
14:30 - files all about
different topics,
14:32 - that people have manually
made or pulled together
14:35 - from different sources
and contributed.
14:36 - So let's say you're
interested in art.
14:39 - I could click here,
"isms," and this
14:41 - is like a big list of
all sorts of like kinds
14:45 - of "isms," like lettrism,
luminism, lyrical abstraction
14:50 - "ism."
14:51 - So anyway, I encourage you--
14:52 - I'll put a link.
14:53 - Another place you
can do, if you're
14:54 - like don't want to feel like
typing out your own data set,
14:57 - is go to this repository.
14:59 - Look at the different
JSON files there,
15:01 - try to copy paste one
of them into your code.
15:03 - See if you can get access to it.
15:04 - Then I'm going to look at
one from this particular set
15:06 - named--
15:07 - I have one about birds
that I have in mind
15:09 - that I'll look at in another
example, of other context.
15:11 - Then-- you know, this is
perhaps for another time--
15:14 - but you might think
about contributing back.
15:16 - If you've made the
most wonderful flowers.
15:18 - Is there a flowers one in here?
15:20 - Let's look.
15:21 - Flower, code, oh, yeah,
there;s fireworks, flowers.
15:27 - Look at this!
15:29 - I needed this.
15:30 - So here's a list
of flowers, anyway.
15:32 - You might make your own data
set and contribute it back
15:35 - to this place for other
people to use as well.
15:37 - So thanks for watching.
15:38 - And in the next video, I'm
going to pull another JSON file.
15:41 - There's a bit more
complexity to it,
15:42 - because that's going to help us.
15:43 - And we're all on this train.
15:45 - We're going to get
to this point of we
15:46 - don't have this local file.
15:47 - We're actually
getting the JSON data
15:49 - from Instagram, or The New York
Times, or some other source
15:52 - [INAUDIBLE] that you might find.
15:53 - OK.