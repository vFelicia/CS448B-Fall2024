00:00 - [WOODEN TRAIN WHISTLE]
00:00 - Welcome back to Part 2 of my
video series about Teachable
00:04 - Machine and P5 ML5.
00:05 - So if you're wondering,
wow, where am I?
00:08 - You probably should go back and
watch the first video, where
00:10 - I look at what Teachable Machine
is, how to train an image
00:13 - classifier in the browser
with Teachable Machine,
00:15 - save your model, upload it,
and then bring that model
00:19 - into a P5 JS 5 sketch,
and the project that I did
00:21 - displayed an emoji that
corresponds to the label
00:24 - that the classifier
classified in the image,
00:26 - like a unicorn, a rainbow--
00:28 - you know, that kind of stuff.
00:29 - But what I want to show
you how to do in this video
00:31 - is how you could
use this technique
00:33 - to control an interaction.
00:35 - And a good example of
that, I think, is a game.
00:37 - So I have coding challenge
number something,
00:40 - which was the snake game.
00:41 - So here's the version
of my snake game in P5,
00:44 - where I have to drive
around, and I can't--
00:46 - I'm so bad at it--
00:47 - pick up the food,
and I can play it.
00:49 - And there's really only
four things I can do--
00:52 - up, down, left, right.
00:54 - Well, guess what?
00:55 - That matches up with a
classification problem.
00:57 - What if I showed
an image for left--
01:00 - left, an image for
right, an image for up,
01:03 - and an image for a down.
01:04 - So I'm going to go and try
to train a model with images
01:07 - for all of those.
01:08 - All right, here comes left.
01:14 - Here is right.
01:18 - I'm going to add a
class for up, but I
01:20 - need to use both
my hands for up,
01:21 - so I'm going to turn
off the hold to record,
01:24 - and I'm gonna give
myself a countdown.
01:28 - Then I'm going to
add a class for down.
01:35 - And now I really need a
class for do nothing, right?
01:38 - Because it always have
to classify as something,
01:40 - so what if I just stand very
still right in the middle,
01:43 - that'll be the do nothing.
01:44 - And we'll call that nothing.
01:51 - All right, so I have the data
for left, right, up, down,
01:54 - and nothing.
01:55 - Let's train the model.
02:00 - Let's test it out.
02:01 - OK, nothing, right, left, up,
down, up, right, left, nothing.
02:18 - All right!
02:19 - This is awesome!
02:20 - Kimberly, it worked!
02:22 - Let's export the model.
02:27 - Now that I've uploaded the
model and I have the URL,
02:30 - I want to use it in my code.
02:31 - I have my snake game, which I
wrote in challenge number 115.
02:35 - I also have the code that I
wrote in the previous video.
02:38 - So rather than write all that
again, let me just copy paste
02:41 - over the bits that I
need, and I'll talk you
02:43 - through what those are.
02:44 - So certainly I need the
Video, Label, and Classifier
02:47 - and Preload functions.
02:50 - So let me bring that
into my snake game.
02:53 - Then, from set up, I
need to create the video
02:57 - and start classifying the video.
02:59 - So let me bring that
in here, and I'm
03:01 - going to do that right
after createCanvas.
03:04 - I need this Classified
Video function.
03:09 - And I need this Got
Results function.
03:12 - So even just running this to see
if I don't get any errors-- oh!
03:15 - But I got the error
that I forgot about.
03:18 - So because I started
with an example that
03:20 - doesn't have the ML5
library imported,
03:23 - I've got to manually import
it into this example.
03:26 - And the way that I do that is by
copying and pasting the script
03:29 - tag to index the HTML.
03:31 - Here's the script tag that I
need on the ML5 JS home page.
03:35 - And in my snake example, I
can reveal the index of HML
03:38 - file over here on the
left, click on it,
03:40 - and add in that script
tag right there.
03:43 - Save and run again.
03:48 - No errors, I don't
see anything, but it's
03:50 - classifying the images.
03:52 - Let me draw the video
so we can see it.
03:56 - So there's the video.
03:58 - Let me also draw the label,
so I can see what it is.
04:02 - So I'm gonna say
text label 10, 50.
04:06 - And let's just make it
text size 32, Fill to 55.
04:11 - Let's do this.
04:14 - And it's a train.
04:15 - OK, I've got to
get my model URL.
04:17 - That's the model URL
from my previous example.
04:21 - Copy-- and again, your URL
might be slightly different.
04:25 - Look at what it tells you.
04:26 - OK, I've got the new one.
04:28 - Run it again.
04:31 - Something interesting is
going to happen here, I think.
04:33 - Nothing, that's good.
04:35 - Up is good.
04:37 - Down is good.
04:38 - Up is good.
04:39 - Down is good.
04:40 - Right and left seem to be wrong.
04:42 - Well guess what?
04:43 - My image is not flipped.
04:46 - So Teachable Machine,
if you go back
04:48 - to look at when I was training,
when you saw my hand over here,
04:51 - the image was mirrored because
I'm looking at the computer
04:55 - like it's a mirror.
04:56 - So what I actually want to
do for this to work more
04:58 - accurately is flip the video.
05:01 - And fortunately, ML5
has a nice utility
05:03 - for doing this-- there's a
variety of different ways
05:06 - I can do this with
P5 only but M5
05:08 - knows that this might come
up, and can flip it for you.
05:11 - To take care of this, I'm
going to add a new variable.
05:13 - I'm going to call it flipVideo.
05:16 - I'm going to say,
right in Setup,
05:17 - I'm going to say flipVideo
equals ML5 flipImage.
05:22 - This is the function that
takes any image and flips it
05:24 - and puts it in the new variable.
05:26 - I'm going to need to do
this actually continuously,
05:29 - because it's a
video-- there's always
05:30 - new images, and every new
image, I need to flip it.
05:33 - So I'm going to put this right
here in the classify function
05:35 - as well.
05:36 - To make this easier to see,
let me also make the canvas
05:39 - the actual size of the video.
05:41 - Then I'm going to classify
the flipped video,
05:44 - and also draw the flipped video.
05:47 - And now let's see what happens.
05:50 - I can see the full video.
05:51 - And, also, it's mirrored.
05:53 - So that's left, that's right,
that's up, and that's down.
06:04 - Left needs some
work, but maybe I
06:06 - need to do better training data.
06:07 - Now that I have those
labels, guess what?
06:10 - I can control the snake
based on the labels.
06:13 - The way that I did it before
was in the keyPressed function,
06:16 - with key codes.
06:18 - Let's change this function
name to controlSnake.
06:21 - We'll change keyCode to label,
and instead of the arrows,
06:26 - we'll say the label names.
06:31 - This was something extra
that was in the example
06:33 - before, that I could just make a
snake get bigger for debugging,
06:36 - so I don't need that anymore.
06:38 - I just want to control left,
right, down, up, and then
06:41 - if it's nothing,
don't do anything.
06:43 - So I don't need to add
that to the "if" statement.
06:45 - In gotResults, once I get the
label, I can call controlSnake,
06:50 - and we're off and running.
06:53 - Up, go up!
06:53 - There we go.
06:54 - Go the right!
06:55 - Go to the left!
06:56 - You got it!
06:57 - Get that food!
06:58 - You got it!
06:58 - No, go to the left, left!
07:00 - Up!
07:02 - Right!
07:04 - Down!
07:05 - Left!
07:07 - Down, right!
07:08 - Yes.
07:09 - Ohh!
07:11 - It works!
07:12 - I don't want to do it
anymore, because that
07:13 - was as good as I could get it.
07:15 - But guess what?
07:15 - I bet you you could make
a better version of this.
07:18 - Train your own model
with your own images,
07:21 - bring it into the snake game,
bring this to another game,
07:23 - share it with me in the
comments, remember--
07:26 - if you're doing something where
left and right really matters,
07:29 - you're going to want
to flip the image,
07:32 - just like it's flipped
in Teachable Machine.
07:34 - Thanks for watching.
07:35 - I've got one more
video for you, where
07:37 - I'm going to show you how
to use the sound classifier,
07:40 - and that's coming up next.
07:41 - And who knows?
07:41 - Maybe by the time
you're watching this,
07:42 - there'll be even more videos.
07:44 - Thanks for watching, make
your own creative version,
07:46 - and I'll see you in
a future episode.
07:48 - [WOODEN TRAIN WHISTLE]
07:48 - [MUSIC PLAYING]