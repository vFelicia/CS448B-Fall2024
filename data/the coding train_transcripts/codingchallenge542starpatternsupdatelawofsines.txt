00:00 - hello and welcome to a follow-up video
00:02 - on the Islamic star patterns coding
00:05 - Johnson I did so did this I don't know
00:07 - if this is really technically a coding
00:08 - challenge or what but I had some so many
00:11 - wonderful suggestions and ideas that
00:13 - came out of that coding challenge that I
00:14 - thought it would be worth doing a follow
00:16 - up video just to add some features to it
00:19 - as well as correct I don't know if
00:21 - errors the right words but certainly a
00:23 - major sort of flaw in the way that I
00:26 - built that particular example so this by
00:29 - the way is the current state of the
00:30 - community created version people have
00:33 - submitted pull requests where now there
00:35 - are sort of nicer sliders for
00:38 - controlling the Delta and the angle
00:39 - there is it can turn on and off the grid
00:42 - I can try different types of tiling
00:45 - pattern so I encourage you to check this
00:46 - out and contribute to it the link to
00:48 - this the github repository for this
00:50 - particular version of it is in this
00:52 - video's description now where I left it
00:54 - off if you were watching just the actual
00:56 - coding challenge was with this and so
00:58 - just to remind you to the way to one
01:01 - technique as pioneered by a paper that
01:03 - I'll also link to you by Craig Kaplan to
01:06 - create these star patterns okay so the
01:09 - way that the paper describes how to do
01:11 - this algorithm is to take a polygon the
01:14 - quad hexagon and to emanate rays these
01:21 - are called sort of a technique called a
01:24 - Hanken technique which I talked a lot
01:25 - about in the previous fruity code
01:27 - strange word to say but it works to send
01:30 - out rays from the side and then send out
01:34 - rays from this side and then connect
01:37 - them so where they connect and you'll
01:39 - see if you do this from all the sides
01:41 - and you tile the polygons in all
01:43 - interesting different ways you'll get
01:44 - these beautiful star-like patterns and
01:48 - they're wonderful I enjoyed them they're
01:50 - nice tiling pattern so what I did I over
01:54 - engineered it I believe in that I made
01:56 - just like polygon objects edge object is
01:58 - Hanken object and then I said every edge
02:01 - send the Ray out check every other edges
02:03 - ray and figure out where they're all in
02:05 - your second and final one that's the
02:06 - close kind of interesting there's a lot
02:07 - of like useful math in there and good
02:09 - thinking but really with these types of
02:11 - regular symmetrical
02:12 - polygons those rays are always always
02:15 - always going to meet along a very
02:19 - specific along the sort of the I don't
02:22 - know what to call this the bisector of
02:25 - they're going to meet at a very precise
02:27 - location that we can calculate pretty
02:30 - easily with something called the law of
02:32 - sines so this was suggested by Gabriel
02:36 - on Twitter
02:37 - who sent me a tweet saying hey you know
02:39 - what you could do you could use the law
02:41 - of sines to calculate the length of the
02:44 - Hankin just because you know the angle
02:46 - and you know the length of the edge of
02:48 - the polygon and with some math you'll be
02:50 - able to calculate that length so that's
02:52 - what I thing I want to do is really
02:53 - simplify the code to use this law of
02:55 - sine so let's look at what is the law of
02:57 - sine this is the law of sines now we
03:01 - could derive this from de picking a
03:03 - triangle dividing it into right
03:04 - triangles but simplest way to sort of
03:07 - define it is I'm gonna I'm gonna I'm
03:09 - going to come over here gonna press this
03:11 - button put a couple over here I got this
03:13 - I'm going to draw a triangle and the
03:17 - triangle is going to have three sides a
03:20 - B and C it also has three angles we can
03:24 - call this angle maybe alpha this angle
03:27 - we'll call beta and this angle I'm gonna
03:30 - call theta I don't know I've got the CD
03:32 - off I'm like Greek letters aren't starts
03:34 - the best
03:34 - so these law of sines states that alpha
03:41 - start not sorry sorry sorry a divided by
03:44 - sine of alpha equals so a look at the
03:48 - the side that's adjacent that's opposite
03:51 - the angle and by a I mean the length of
03:53 - this the length of this equals B divided
03:57 - by sine of beta equals C divided by sine
04:05 - of theta so this is a formula we could
04:08 - figure this out because you know if we
04:09 - put a right triangle here we're going to
04:11 - see that we're going to be able to do
04:12 - things like sine is beta equals this
04:16 - length over a sine of alpha equals this
04:19 - length over B and if we do some math
04:21 - we're going to end up a bit
04:22 - this equation so this is quite of a
04:24 - useful equation a lot of geometry
04:25 - scenarios now why is it relevant in this
04:28 - particular scenario okay let's go back
04:33 - to that polygon let's say we have and
04:35 - I'm really just going to recreate the
04:36 - diagram that Gabriel so nicely sent to
04:39 - me so let's say we have this polygon and
04:41 - let's say we have a ray emanating from
04:45 - here I'm also going to draw a line that
04:48 - splits this particular angle in half so
04:54 - now I'm going to draw an ominous send
04:56 - that Hank in out this is the hanket it
04:59 - goes out like this and the other one
05:01 - goes out like this right so these angles
05:07 - are equal and we call these angles theta
05:09 - these angles are the angles in my
05:12 - application that I'm setting with that
05:14 - slider that's changing the direction
05:16 - they're always going to meet right here
05:18 - as they turn in turn out they're going
05:20 - to meet somewhere along this path so we
05:23 - know this angle theta what can you see
05:26 - this zooming on it and now this angle
05:29 - I'm going to call alpha we know that
05:32 - angle because we know the angle the
05:35 - interior angle of a polygon actually
05:36 - there's a formula I think this is right
05:38 - for any polygon of n sides the interior
05:43 - angle equals n minus 2 times pi set
05:52 - right because it's got four sides the
05:56 - number of sides minus two times pi
05:59 - divided by and that's the interior angle
06:01 - cuz this is the sum so if you think
06:03 - about this this is equal to it with it
06:05 - with a quad this is equal to two pi
06:08 - divided by four which is n pi divided by
06:11 - 2 which is right that's a 90 degree
06:12 - angle okay so so that's leading me today
06:15 - we know alpha because alpha is the
06:18 - interior angle of the polygon and also
06:20 - divided by two so what do I really need
06:22 - to know what I want to know is the
06:24 - length of the hanket because I know the
06:26 - direction of the Hank
06:27 - because I'm calculating that myself I'm
06:30 - making it up it's a line with an angle
06:32 - so I need to know the length of it so
06:34 - what I do know is right that length
06:37 - Hanken length I'm going to call it H
06:39 - length divided by sine of alpha equals
06:45 - what well here's something else known
06:49 - right I know this length this is that
06:52 - mid length path length this is the edge
06:55 - length so I'm going to say that's the
06:56 - edge length divided by 2 equals edge
07:00 - length divided by 2 divided by what's
07:06 - this let's call this angle beta sine of
07:11 - beta but how do I know that angle I
07:15 - don't know that angle I know theta
07:17 - because that's an angle I made up
07:19 - I know alpha because that's half of the
07:22 - interior angle of the polygon but what's
07:24 - this angle well actually that angle is
07:26 - really easy to figure out because alpha
07:28 - plus beta let's start state uh plus beta
07:32 - plus alpha equals PI right the sum of
07:36 - all the angles of any triangle equals
07:39 - 180 degrees or PI so now I can actually
07:42 - just change this to sign of right
07:46 - what am I trying to figure out beta beta
07:48 - equals PI minus beta minus alpha PI
07:53 - minus theta minus alpha and then what I
07:57 - can just do is multiply both sides of
07:59 - this equation by sine of alpha and I can
08:03 - say now times sine of alpha so this is
08:07 - now a formula to calculate that Hanken
08:10 - length the second length I need I think
08:13 - it I got a hanker for angling the Hanken
08:15 - length is the edge length divided by two
08:18 - times sine of alpha divided by sine of
08:21 - PI minus theta minus alpha ok so let's
08:24 - see now if we can actually just
08:26 - graphically simplify the code by
08:28 - implementing this particular formula and
08:30 - seeing if we get it right okay coming
08:33 - back over here so let's go to the code
08:38 - now again this is I think quite
08:40 - over-engineer
08:41 - in the sense that I have a separate
08:43 - object for each edge a separate object
08:45 - for each Hanken a separate object for
08:47 - each polygon and it's maybe that's maybe
08:51 - a little bit much for this especially as
08:55 - the formats get simple but I give that
08:57 - as a challenge if anybody wants to help
08:59 - submit something to like really simplify
09:01 - this you know I don't know that we need
09:03 - all these different objects but I'm
09:04 - going to use them and the first thing
09:05 - I'm going to do is go into the edge and
09:07 - if you recall the code in this Hankin
09:12 - does all this work to first find the
09:16 - first thing that's fine is the midpoint
09:17 - then we need a vector that points from
09:20 - the midpoint to the edge and then what
09:23 - we're doing is using Delta to offset
09:26 - those things so this is all the same the
09:31 - difference is and then we rotate by the
09:33 - angle so now the question is here - this
09:38 - is what's totally unnecessary this find
09:40 - end this function this fine end function
09:42 - was checking everything because I can
09:44 - actually now I can just do law of sines
09:47 - right here this is all I need all I need
09:50 - is once I've got those vectors
09:51 - normalized and pointed in the right
09:53 - direction I just need to give them a
09:54 - length right right here in this top part
09:56 - is where I am here so I've calculated
10:00 - both of these vectors and I just need to
10:03 - figure out what their lengths should be
10:04 - so I can actually do that math right
10:07 - there which eliminates the need for this
10:10 - whole find ends function and also in the
10:15 - maybe in the polygon object right this
10:18 - whole like every edge check every other
10:20 - edge totally unnecessary
10:22 - we can just actually tell them all
10:24 - calculate your own Hanken and use that
10:27 - calculate your own Hanken and use the
10:28 - law of sines so let's go here and let's
10:31 - use that law of sines so what did I say
10:33 - I'm going to look back over up that
10:35 - formula for a second I said that the
10:38 - Hanken length
10:40 - hank in length equals now let's let's
10:42 - make some things a little bit simpler so
10:44 - let's say bar beta right I need beta is
10:48 - what I say it's PI minus PI minus beta
10:53 - minus alpha so
10:54 - of pi minus angle with theta minus alpha
10:59 - now we don't have alpha what is alpha so
11:02 - right now I'm just going to say alpha
11:03 - equals PI divided by 2 and this is a
11:07 - silly way to write it / - but really I'm
11:10 - going to need later I'm going to need
11:13 - some formula I'm going to calculate
11:15 - actually you know what let's just assume
11:16 - let's do it this way alpha equals so
11:20 - interior the interior angle equals size
11:25 - - minus 2 times pi divided by sighs this
11:34 - is me calculating the interior angle for
11:36 - a polygon now then also I want to say
11:40 - then alpha equals the interior angle
11:45 - divided by 2 or multiply by 0.5 so beta
11:47 - equals pi minus the angle minus alpha
11:50 - that's that so now H length equals the
11:54 - edge length now what is the edge length
11:56 - the edge length is what well if this is
12:02 - a vector up here this is a vector that
12:04 - points from the middle to the edge so
12:06 - the length of these two vectors right is
12:11 - is actually just the magnitude of that
12:14 - so I can get the edge length right here
12:18 - edge length but also plus Delta right
12:23 - remember that Delta is the thing that
12:24 - offsets it from the middle point so the
12:26 - edge length is actually the length from
12:28 - the middle to the edge plus Delta so
12:30 - that I have up here so I already have a
12:34 - length so I could say the Hanken length
12:38 - equals and eel eggs and you know what I
12:44 - said in here I this was a for a generic
12:47 - formula which was a length divided by
12:49 - two but I already have that built in
12:50 - because the vector I calculated is this
12:53 - thing plus the Delta so in my form and I
12:55 - don't need this divided by two here if
12:57 - this is length divided by two there okay
13:00 - so what I have is edge length
13:07 - time sine of alpha and then divided by
13:15 - sine of the angle what's the chance and
13:18 - then I could just say v1 dot set mag
13:24 - each length right those two vectors are
13:26 - the hankins and b2 equals set mag so all
13:31 - you do is set the magnitude of those
13:33 - vectors okay now aha I'm going to make
13:37 - that new hanket object so the Hanken
13:39 - object did all this elaborate stuff
13:40 - because it was trying to figure out the
13:42 - end of all the blah blah blah I don't
13:43 - need this be anymore this is the end the
13:46 - end is the point from where it starts
13:49 - plus the vector that Hank and vector and
13:52 - I don't need this previous D any of this
13:53 - stuff anymore
13:54 - so I believe and I don't need this find
13:56 - end function which is all this elaborate
13:58 - math for looking at point intersection
14:00 - I've got a much simpler scenario now so
14:03 - that's why this Hank an object is
14:05 - perhaps not so necessary because I've
14:07 - got this very basic object now that just
14:09 - has a beginning and an end point and I
14:11 - could really call this I might call this
14:13 - B to be honest with you just to simplify
14:18 - things okay let's go back and run the
14:20 - code looks the same to me so nothing has
14:26 - changed but I know you can't really tell
14:28 - but if this were like a much larger
14:30 - polygon or pattern I think the
14:32 - performance wise it should be a little
14:34 - bit faster it's not specific more
14:35 - flexible so so this is working we added
14:39 - the law of sines to the star pattern so
14:42 - this video had that this concludes the
14:45 - discussion of how to improve and make
14:47 - life simpler
14:49 - calculating all the Hanken vertices with
14:52 - the law of sines and hopefully you also
14:54 - just sort of learn something about
14:55 - geometry that you might apply to your
14:58 - own scenario that you're figuring out in
14:59 - some time now what would be useful is to
15:01 - also as another step to work out
15:04 - different tiling patterns and again I
15:06 - can show you a bunch here here's a
15:08 - hexagonal tiling pattern and if I shape
15:12 - makes the delta much smaller and the
15:14 - angle like this you can see right you
15:17 - can see this is a hexagonal dialing
15:19 - pattern and you can see
15:20 - how those Hank and vertices connect and
15:22 - make these star patterns so so I
15:26 - encourage you to experiment to
15:28 - contribute this repository there's a
15:30 - nice way in this repository that you can
15:32 - just add a tiling pattern if you take a
15:33 - look at it you just make your own
15:34 - JavaScript file that implements the
15:36 - tiling pattern and it folds right into
15:38 - the so I encourage you to contribute to
15:40 - this and I will if there's enough
15:41 - interest come back and do another video
15:43 - which just goes through other tiling
15:45 - patterns and I really actually want to
15:47 - do something about a periodic tiling
15:49 - patterns at some point so I'll come back
15:50 - so thanks for watching the small
15:52 - addendum correction with the law about
15:54 - the law of sines and Hanken star pattern
15:59 - [Music]
16:09 - you