00:00 - okay another matrix math video I I need
00:04 - I mean there's lots more of matrix
00:06 - there's lots more to matrix math and
00:08 - again let me encourage you I will link
00:10 - to in this video's description to check
00:12 - out three blue one brown's youtube
00:13 - channel which is a whole series about
00:15 - linear algebra i'm just kind of
00:17 - implementing the minimum that I need for
00:20 - this neural network example that I want
00:22 - to build in JavaScript so the missing
00:25 - piece and I just talked about at the end
00:26 - of the last video is to transpose a
00:29 - matrix transposing a matrix means take
00:32 - all the rows and make them columns so
00:37 - ABC this row becomes the first column
00:39 - ABC this row becomes the first column -
00:42 - yeah now this is yet another function
00:46 - which requires me twitch which requires
00:49 - me to make a new matrix so I'm not
00:50 - actually taking the matrix it's I mean
00:52 - it could take the matrix that redo it
00:55 - but I think what I'm gonna do is make
00:56 - let's just write this function transpose
00:58 - and the first thing I need to do is make
01:02 - a new matrix which I will call result
01:05 - again equals a new matrix and it has the
01:10 - number of rows that it used to have
01:12 - columns and has the number of columns
01:15 - that it used to have rows and I should
01:19 - be able to just say now it should be as
01:21 - easy as it should be as easy as if I was
01:25 - like ever going through the entire
01:27 - matrix and I should be just saying that
01:30 - the results matrix I J equals the and
01:41 - actually I should say the results matrix
01:42 - J I equals the the this matrix I J we
01:54 - see this now it's possible I got this
01:55 - backwards but it should be if I'm
01:58 - writing over all the rows and columns
02:00 - every row column position should become
02:03 - the column row position so I should be
02:05 - able to just say J index I equals the of
02:08 - the new matrix is this matrix I come
02:11 - i J that should work so and then I need
02:15 - to say return again return results okay
02:22 - so let's test this out could I really
02:24 - have done this this quickly very
02:27 - unlikely oh why am I saying plus equals
02:29 - should not be plus equals it should just
02:31 - literally be equal and if I go into the
02:37 - sketch that I had and all I need is a so
02:43 - I'm gonna have this random one and then
02:47 - I'm going to say let B equal a dot
02:50 - transpose and then I'm going to say
02:55 - console dot table a and console table B
03:01 - all right let's take a look I'm not
03:05 - accounting for the number of rows and
03:07 - columns differences I think that I am
03:09 - hold on let's take a look probably get
03:11 - this wrong whoops and of course I need
03:18 - to consult the actual matrix object to
03:21 - see it try this again six seven four one
03:26 - zero nine six one seven zero four nine
03:29 - six seven four six seven four one zero
03:32 - nine one zero nine all right I think we
03:36 - got transpose correct so that's great so
03:42 - we did this we're done we're done with
03:44 - the matrix math videos and it's the next
03:49 - one that will the next thing I need to
03:51 - do is actually start thinking about how
03:53 - does this feed-forward algorithm work if
03:57 - I were to write a feed-forward function
04:00 - and I were to give it some input by word
04:03 - you feed some input how do I
04:07 - ultimately return some guests so this is
04:12 - where lots of matrix math needs to
04:16 - happen so again if you're interested I'm
04:20 - also going to link to three blue one
04:22 - Brown's video what is
04:24 - a neural network it's an excellent
04:25 - animated explanation of a lot of the
04:28 - things that I covered in the earlier
04:30 - videos in this playlist but what I'm
04:32 - going to do is try to write the code for
04:34 - the neural network right here once we
04:36 - have that done I think I'm going to just
04:37 - try doing a couple tests like I'm going
04:39 - to solve a problem called XOR which is a
04:40 - really simple problem and I'm also going
04:42 - to look at the EM NIST data set which is
04:45 - kind of like the hello world of machine
04:46 - learning with this neural network and
04:48 - then oh then with the idea of just
04:50 - seeing if it works so that I can then
04:52 - once I know that it works I can do some
04:53 - more creative stuff with it okay so
04:55 - thanks everybody and see you in the next
04:57 - video
04:58 - [Music]