00:02 - There's a couple
of missing pieces
00:04 - in our search for the meaning
of functions in JavaScript.
00:09 - And so this video I want to
fill in one little gap here,
00:12 - and I want to look at what
it means for a function
00:14 - to return a value and
what's the syntax for that
00:17 - and why you might
want to use that.
00:19 - Now, this will be kind
of like a short video.
00:21 - I'm just going to kind of really
lay out the quick syntax of it.
00:24 - And I hope that
in future videos,
00:27 - the scenario of needing a
function that returns a value
00:30 - will come up a bit more often.
00:31 - And then it'll make
more sense in a kind
00:33 - of more involved context.
00:34 - But let's just sort of see
how this goes for a second.
00:37 - So I think to begin the
discussion, the best way
00:39 - to begin the discussion is to
look at these two functions
00:43 - that are part of the P library.
00:45 - There's the ellipse function.
00:46 - And there's the random function.
00:49 - What's the difference?
00:50 - I mean, there's a lot of
differences between these two
00:52 - functions.
00:53 - But what's a key difference
between these two functions?
00:55 - Ellipse draws an
ellipse in the window.
00:58 - Random provides a random
number between a range,
01:03 - between the minimum and maximum.
01:04 - And so when I say
provides, what I really
01:06 - mean is it returns a value.
01:08 - It evaluates to a number.
01:09 - When the random function
finishes executing,
01:12 - it hands back this answer.
01:14 - And that answer
is often used to--
01:18 - it's stored in a variable,
or you might use it,
01:22 - fill random 255, right?
01:27 - This is using the
random function
01:29 - to pick a random number
between 0 and 255
01:32 - and use it instantly inside
of this fill function
01:34 - to set a color.
01:35 - Ellipse does not
evaluate to anything.
01:37 - It just draws a
circle and finishes.
01:39 - And this is that distinction.
01:42 - Random is a function
that returns a number.
01:45 - So what does it mean--
01:46 - these functions are
in the P5 library.
01:49 - They were written by somebody.
01:51 - And this function was
written with a new kind
01:53 - of line of code.
01:55 - That line of code
is return something.
01:57 - So let's look at
the syntax for that.
02:00 - And I'm going to kind
of just make up somewhat
02:03 - of a silly scenario, and
we'll just sort of build
02:06 - a quick example that does this.
02:08 - So the syntax for
defining a function
02:10 - is function, the name
of the function--
02:16 - that's something
that you make up--
02:18 - the parameters to the function--
02:21 - that's also something that you
make up-- an open curly bracket
02:25 - and end curly bracket,
and then the code
02:26 - that goes inside the function.
02:28 - So this is whatever
code you want to be.
02:30 - And typically, if a function
returns a value, that return
02:34 - statement, this new
statement's going
02:36 - to come at the end
of the function.
02:37 - Now, there's exception
to this, of course.
02:39 - But here is the new line
of code, return something.
02:44 - That's the question.
02:46 - What goes there?
02:47 - So this looks just like the
definition of a function.
02:52 - And we wrote a flower
function before,
02:53 - function flower
with some arguments.
02:55 - It drew some stuff
to the screen.
02:57 - Now this is the same,
but we're adding
02:59 - a new line of code return.
03:00 - So let's think about conversion.
03:02 - So this is-- oh, boy, this
camera keeps shutting off.
03:08 - Hopefully this will fix it.
03:10 - Hello.
03:10 - I'm back.
03:11 - So let's think about
converting numbers.
03:13 - So something you can do in
P5 that comes up quite often
03:18 - is you have an
angle, and you want
03:21 - to know what its
value in degrees is.
03:26 - I don't think I've talked about
angles in any of these videos.
03:28 - Maybe I have.
03:29 - I talked about it in class.
03:30 - But let's just look
at this for a second.
03:34 - Oh, boy, this is a bad example.
03:36 - So if you're not familiar,
there are two ways
03:38 - of thinking about angles.
03:40 - One is degrees, 0 degrees,
90 degrees, 180 degrees.
03:43 - These are common degrees.
03:46 - Another is radians.
03:48 - So a radian's a unit of
measurement for angles.
03:51 - Pi divided by 2
radians is 90 degrees.
03:54 - So what this
function should do is
03:56 - it should take the
value pi divided by 2,
03:59 - convert it from
radians to degrees,
04:01 - and we should see 90
print out down here.
04:04 - And by the way--
04:06 - hopefully I'm going
to get this right.
04:08 - And you can see that
that's what we got here.
04:10 - So this function
converts a number
04:12 - to another unit of
measurement and provides that
04:15 - and print it out.
04:15 - So the thing is let's look at
something different, something
04:18 - that's not in P5.
04:19 - Let's say what you
want to do is you know
04:23 - a marathon is a 26.3 or 26.4--
04:31 - I don't know.
04:31 - I can remember-- 26.3,
something like that, miles.
04:35 - So I want to have a function.
04:37 - I want to know how many
kilometers is that.
04:39 - So I need a function
that converts that number
04:41 - from miles to kilometers.
04:44 - So if I run this, of course, we
get uncaught reference error.
04:48 - Miles to kilometers
is not defined
04:50 - because that doesn't exist.
04:52 - So it's up to us now to
define that function.
04:56 - So how do we define a function?
04:59 - Function, the name
of the function,
05:02 - and then whatever
the parameters are.
05:05 - One parameter is miles.
05:06 - So when that function
is called, 26.3
05:09 - will get sent into that
miles variable, the parameter
05:12 - to the function.
05:14 - And then what's the formula?
05:15 - Miles time's 1.6.
05:17 - So I don't if that's
100% accurate.
05:19 - But 1 mile to 1.6 kilometers
is 1.60 [INAUDIBLE],,
05:23 - something like that.
05:23 - But you get the idea.
05:25 - This is a very simple
formula to convert.
05:27 - And now we have the answer.
05:30 - The kilometers is
miles times 1.6.
05:33 - All we need to do
is say return km.
05:35 - So this is this new line
of code, return a value.
05:39 - That means when this function
finishes executing up here,
05:42 - it will evaluate to a number.
05:44 - And so let's look at this.
05:48 - And now we can do it again,
km2, what is a ultra marathon?
05:53 - I don't know what an
ultra marathon is.
05:55 - 100 miles?
05:59 - So we're looking at
this function twice.
06:02 - So we can see 26.3 miles is
42.08 something, something,
06:06 - something kilometers.
06:08 - And say 100 miles
is 160 kilometers.
06:11 - So this is how a function
can return a value.
06:14 - Now, you might as an
exercise just come up
06:17 - with some other
type of conversion.
06:19 - Celsius to Fahrenheit
is a good one.
06:21 - It has a bit more of
a complex formula.
06:23 - Look it up online.
06:24 - If I can ever remember
to do anything,
06:26 - I would put it in the
description for this video.
06:29 - And your weight on
the moon versus Earth
06:34 - is another thing you
could think about.
06:36 - Kilograms to pounds--
there's so many--
06:39 - dollars to some other currency.
06:42 - So you come up with some
kind of conversion formula.
06:45 - Maybe try to implement
this function.
06:46 - That would be something
I think you could try.
06:48 - What I want to do in the next
video that I'm going to make
06:51 - is start looking
at how functions
06:52 - can be inside of objects.
06:54 - And in that case,
I think there's
06:56 - another scenario that
I want to demonstrate,
06:57 - which is having a function--
07:00 - let me think about
this for a second.
07:02 - If you have an
object, and you want
07:03 - to know if the mouse
is on top of it,
07:06 - could the object itself
have a function that
07:08 - sends you back true
or false based on
07:10 - whether the mouse is
over that object or not?
07:13 - So that's what I'm
thinking about.
07:17 - This wasn't the best
video I've ever made.
07:19 - But hopefully it kind of
succinctly just, at least,
07:22 - gives you a sense of the
syntax and how it works.
07:24 - And I'm going to hit Stop now.