00:00 - [Music]
00:14 - um
00:26 - [Music]
00:46 - [Applause]
00:56 - [Music]
01:10 - so
01:13 - [Music]
01:34 - [Music]
02:21 - believe the yeah is probably
02:37 - [Music]
02:48 - so
03:16 - [Music]
03:33 - [Music]
03:44 - me
03:48 - [Music]
04:12 - do
04:14 - [Music]
04:26 - do
04:35 - good morning i'm not ready
04:38 - that's not really that what you're
04:39 - supposed to start with a live stream i'm
04:41 - also kind of going to speak a little bit
04:43 - more quietly
04:44 - not because it's very it's early morning
04:46 - here in uh brooklyn
04:48 - new york where i am broadcasting from
04:50 - but because there are
04:52 - children sleeping in the next room uh
04:57 - when i did my late night shows um
05:01 - the children were sleeping a little bit
05:03 - further away from where i live stream
05:04 - although still
05:05 - you know within earshot for sure but you
05:08 - know with the heat and different there's
05:09 - like we only have certain
05:10 - air-conditioned
05:11 - uh areas so um
05:16 - my idea which is uh uh apparently going
05:19 - incredibly well so far
05:22 - was that um i would try and i know it
05:24 - was like weeks ago that i said this that
05:25 - i would um
05:27 - live stream in the morning um i tried
05:29 - the late night thing it's very difficult
05:30 - these days with
05:31 - um being quarantined um at home and
05:34 - everybody being in the house all the
05:35 - time no school no camp to find the time
05:38 - to live stream so the evenings the night
05:42 - time and the morning are my
05:43 - experiments so welcome to the coding
05:45 - train morning show
05:47 - cue the morning show theme song oh it
05:50 - doesn't exist
05:51 - amazing how come it doesn't exist um
05:54 - good morning to fran mg and
05:58 - lok sham and akash and spidey zack i
06:00 - love your name
06:01 - spidey zach um tapu and cooper
06:06 - and i guess tapu is saying good evening
06:08 - dan because
06:09 - one of the nice things about streaming
06:10 - at this time is i have a feeling that
06:12 - there are a lot of you who
06:14 - often can't tune in because it's the
06:15 - middle of the night or very early in the
06:17 - morning for you whereas
06:19 - particularly if you're you know if
06:20 - you're on the other side of the world
06:22 - maybe it's just
06:23 - sort of the um a perfect a lovely friday
06:26 - evening you're sitting down with your
06:29 - evening tea turning on the tube
06:33 - and watching a coding live stream
06:36 - all right so um to help us get uh woken
06:39 - woken to help us wake up
06:43 - what's going so well it's like
06:44 - everything i ever dreamed of
06:47 - to help us wake up
06:50 - let's begin this morning with our
06:52 - ceremonial reading of the random numbers
06:55 - q the reading of the random numbers
06:57 - theme song
07:05 - let me just check the chat uh we're
07:07 - getting scratching on the mic
07:09 - okay um hi cj um
07:13 - oh good i'm glad cj is watching i don't
07:15 - know if cj is planning to be
07:17 - to stream this morning and i understand
07:19 - of course if you are and have to go
07:20 - but um i feel like some of the stuff i
07:22 - want to try to
07:23 - do today will need cj's help mike was
07:26 - jumping
07:27 - um is it i want to make sure the mic
07:32 - is uh um
07:35 - the mic is working uh fine before i keep
07:37 - going i guess i'll read my random
07:39 - numbers
07:39 - as a mic test
07:47 - fifty six thousand four hundred and
07:48 - forty
07:50 - uh sixty nine thousand one hundred sixty
07:52 - nine
07:53 - five thousand nine hundred and thirty
07:54 - nine fifty seven
07:56 - thousand five hundred and sixteen eighty
07:59 - five thousand one hundred and twenty
08:01 - seven
08:02 - seventy four thousand one hundred and
08:04 - fifty nine
08:05 - uh fifty three thousand two hundred
08:07 - ninety five
08:09 - twenty nine thousand eight
08:13 - 7409 28
08:17 - 140. i
08:19 - don't see the mic is fine um akash says
08:23 - i'm looking
08:24 - beautiful and diabetes
08:27 - staring in the chat um honestly
08:31 - no cause i don't know
08:34 - do i need to for live streaming for you
08:36 - people you wonderful wonderful beautiful
08:38 - people of internet
08:39 - i don't think so um i will bathe today i
08:42 - don't bathe every day
08:44 - it's quarantined do you do i need to
08:46 - bathe every day i don't think so
08:49 - i mean i i try to bathe as often as
08:51 - reasonable and
08:52 - to keep sort of healthy and clean
08:56 - why are you making me talk about this i
08:58 - do have coffee
09:01 - i did notice that um somebody did say in
09:03 - the chat that i look 20 years older
09:05 - i think let me let me explain to you why
09:08 - so first of all
09:09 - i don't i there's just like an optical
09:10 - illusion happening in other videos
09:12 - one is a lot of the videos on my channel
09:14 - are literally from almost 10 years ago
09:17 - so i am 10 years older
09:20 - the green screen lighting setup that i
09:22 - have in the uh recording studio where i
09:24 - typically record tutorials
09:26 - um thank you anthony oh where's my bell
09:30 - um uh something about that like the way
09:34 - the green screen and the lights i just
09:36 - oh we've got a new member
09:39 - oh no that's for the super chat um thank
09:41 - you um wait
09:42 - i'm explaining why i look older because
09:44 - i don't i look my age
09:45 - which is 46 oh very soon to be turning
09:48 - 47 my birthday is coming up thank you
09:50 - very much oh today
09:51 - hey people of the internet let's do
09:53 - something together
09:54 - today is actually my daughter's birthday
09:56 - she's sleeping still
09:57 - she is turning nine years old nine years
10:01 - old today
10:02 - see if you get that reference um it's
10:04 - the beard yes i was getting to that
10:06 - um but her i don't know she can hear me
10:08 - but hopefully she's still sleeping
10:09 - because she's literally sleeping like
10:11 - within 20 feet from me there's a door
10:14 - um but um her favorite one of her
10:17 - favorite things in the world
10:18 - are parrots so i don't maybe we can make
10:20 - a p5 sketch with like parrots in it or
10:22 - something as like a little
10:24 - happy birthday present for her that
10:25 - could be nice
10:27 - that wasn't on my list of things to do
10:29 - this morning though
10:30 - let me show you my list i have it right
10:32 - here there it is
10:34 - there's my list oh wrong button oh i
10:37 - never actually
10:38 - uh excuse me for no no i did i did over
10:42 - it ah okay hold on hold on everybody
10:45 - um talk amongst yourself for taking oh
10:49 - there it is
10:51 - oh weird oh
10:54 - is the um ah oh i forgot to mention
10:58 - ah everything's falling apart
11:01 - my buttons my buttons my buttons
11:06 - okay here i'm gonna get this please
11:08 - please
11:09 - give me just just give me a minute less
11:12 - than a minute i can do this very quickly
11:17 - i thought i could
11:20 - [Music]
11:22 - computer why you forsake me oh there you
11:26 - are
11:28 - [Music]
11:31 - what's happening
11:33 - [Music]
11:36 - it's happening
11:39 - [Music]
11:41 - it's happening
11:47 - [Music]
11:55 - as i was saying in my well-prepared and
11:58 - rehearsed
11:58 - live stream where i don't make any
12:00 - mistakes or have any technical issues
12:02 - don't say um or
12:03 - like or uh because i have a script and a
12:07 - teleprompter and everything is highly
12:09 - planned and prepared
12:10 - as i was saying during this live stream
12:13 - i have a list of things that i want to
12:15 - work on
12:16 - it is right over
12:21 - [Laughter]
12:22 - crud
12:25 - here there's something on the list
12:28 - boy that was a lot of work but a lot of
12:31 - effort for
12:31 - a joke that completely fell flat
12:35 - what was i saying i have no idea i don't
12:38 - even remember
12:40 - is it time for me to be done yet can i
12:43 - go on with my day
12:44 - no because i'm going to do some coding
12:46 - i'm going to work on a project actually
12:48 - what i wanted to say is that i'm
12:51 - choosing this summer to just not worry
12:53 - so much about some of the sequence
12:54 - tutorials
12:55 - that i have and hope to continue uh like
12:58 - um starting back in september
13:00 - um i think there's a good chance that it
13:02 - might be reasonably safe for me to go
13:04 - record in the tutorial recording studio
13:06 - that i have we'll see um and so
13:09 - stay tuned hopefully this fall for
13:11 - continuation of
13:12 - the nature of code series guess what's
13:14 - coming i'm
13:15 - so excited about this i have finally
13:18 - figured out
13:19 - how to get twitter bots to reply
13:22 - to tweets and a stream or trigger events
13:26 - based on a search word or a reply or a
13:29 - favorite
13:31 - with the new twitter api web hooks
13:34 - system that i have been trying to figure
13:36 - out for years
13:37 - i did figure it out so i'm teaching that
13:39 - in my fall course at nyu which is
13:41 - going to be an online course but i will
13:44 - be recording videos
13:45 - on the coding train for that course so
13:47 - that is coming up i mean i'm going to
13:49 - get to that for sure
13:50 - in september because i i'm signed up to
13:52 - teach that class
13:54 - um but this summer i just want to work
13:57 - on
13:58 - you know fun random projects that i
14:02 - haven't gotten around to
14:03 - i want to experiment with controlling
14:05 - the hue lights that are behind me
14:06 - i've been well let's write these things
14:08 - down i made this list
14:10 - for a reason so the things that i one
14:13 - thing you know the things that i've been
14:14 - working on is
14:15 - gpt2 uh text generation
14:19 - and i i did um i did that previously i
14:22 - made
14:23 - on one of the late night shows i made a
14:25 - sort of dad joke
14:26 - bot so that is um something that
14:30 - i made previously you can go back and
14:31 - find some of those um
14:35 - i control the hue lights from node
14:39 - and i didn't get very far with that so i
14:41 - don't know maybe like a check minus
14:45 - is that a thing uh this is like a medium
14:47 - like started project
14:49 - um actually the gp uh discord bot
14:52 - um i believe if um i recall correctly i
14:55 - connected the
14:56 - gpt gpt-2 model to a discord bot i
14:59 - wanted to connect the hue
15:01 - lights also to a discord bot where that
15:04 - during
15:04 - the live stream you could control
15:08 - from chatting and discord the hue lights
15:10 - behind me but
15:12 - the other thing that i really wanted to
15:14 - explore this summer which i'm hopefully
15:15 - going to do today which is very high
15:17 - risk because please
15:18 - please don't hack my youtube channel
15:19 - during this session i'm going to try
15:21 - really really really really hard
15:25 - not to reveal my api keys and tokens and
15:28 - all that stuff but i really want to work
15:29 - with the youtube api
15:31 - i know that um i can't remember who it
15:33 - was in the member chat
15:36 - it's a tilde not a check minus yes thank
15:38 - you i don't know if that's
15:40 - um i will cj says i will wait till
15:44 - your stream is over before i start mine
15:46 - this morning
15:49 - um thank you so you definitely don't
15:50 - need to do that but that's actually a
15:52 - wonderful thing if we can do that
15:53 - because
15:54 - a it gives me a reason to try to like
15:56 - give my i really should finish around 10
15:58 - o'clock because
15:59 - kids are gonna wake up it's my as i
16:00 - mentioned it's my daughter's birthday
16:02 - um um thank you chi chaitan cheatin
16:06 - i'm sorry that i might be mispronouncing
16:08 - your name
16:10 - uh the rubik's cube ai says sean
16:13 - oh i have such pain in my heart there is
16:16 - such
16:16 - deep deep pain and sadness for the
16:19 - videos and projects that i have left
16:22 - just lingering unfinished unresolved and
16:25 - that is one of them
16:27 - ah um anyway what i was saying is that
16:31 - we could send everybody all the way over
16:33 - to cj i don't know if you have a plan
16:34 - cj for your stream let me know if you
16:36 - have a plan if you don't perhaps we can
16:38 - even
16:38 - think about something that i'm working
16:39 - on that you could continue definitely
16:41 - don't need to do that but
16:43 - that is a possibility if you were
16:45 - interested
16:46 - everyone should check out coding garden
16:48 - with cj if i haven't said that enough
16:51 - millions of times let me talk about a
16:52 - couple other things i do have a sponsor
16:54 - um it's been a while since i had um
16:58 - oh and i'm gonna have to remove the um
17:00 - my to-do list
17:02 - i can't find the button for that there
17:03 - it is and it'll bring up my sponsor
17:06 - brilliant.org um
17:09 - brilliant brilliant uh sorry my sponsor
17:11 - brilliant the website is brilliant.org
17:13 - it's just called brilliant i do get that
17:15 - wrong i did get email feedback about
17:16 - getting that wrong so i'm getting it
17:18 - right this time
17:18 - thank you very much uh you know i i'm
17:22 - i'm always conflicted about um having
17:24 - sponsors
17:25 - um on the coding train um you know
17:28 - obviously the content and the teaching
17:29 - and the stuff that i do
17:30 - is primary um so but sometimes i think
17:33 - the stars align
17:34 - and uh it's really wonderful for me to
17:36 - be able to have
17:37 - um be able to have sponsors to keep this
17:39 - channel sustainable and going with all
17:41 - the different pieces i've got moving
17:43 - but it's really great when i have a
17:44 - sponsor that i feel like really aligns
17:46 - with the mission of the coding train and
17:47 - brilliant is one of those so
17:48 - um if you go to brilliant.org coding
17:51 - terrain you can sign up just for free
17:53 - if you go through that link it lets them
17:54 - know that you found it through the
17:55 - channel um it's
17:56 - just a site that's full of learning
17:59 - interactive learning courses so
18:00 - i spend a lot of time talking
18:04 - and demonstrating and on brilliant you
18:06 - can read and interact so it's really
18:08 - self-paced learning
18:09 - fun puzzles well i'll take a break in
18:11 - the middle and i'll do their daily
18:13 - puzzle which is kind of one of my
18:14 - favorite things to do
18:15 - and the two courses i want to i'll
18:16 - highlight for you are the neural
18:17 - networks course
18:19 - and the python programming course which
18:20 - are you know for obvious reasons highly
18:22 - linked to the stuff that i'm doing on
18:23 - this channel
18:24 - okay um can you tell us
18:27 - how you are so happy every time
18:31 - acting thank you thank you thank you
18:35 - does anybody know that reference
18:37 - remember
18:38 - i am 46 years old and i will be 47 on
18:42 - july 29th i'll just let you all know my
18:44 - birthday because then maybe you could
18:45 - wish me a happy birthday when it's my
18:46 - birthday
18:47 - why not that'll be nice that's a nice
18:48 - thing i will not be streaming on july
18:50 - 29th i should mention schedule wise
18:53 - i will be um off for the month of august
18:55 - i actually will have a lot of work to do
18:57 - to prepare for
18:58 - my nyu courses but i will be mostly off
19:00 - from the coding train that doesn't mean
19:02 - though that there won't be videos
19:03 - released
19:04 - because i not in secret because if
19:06 - you're a member of the coding train you
19:07 - know this already
19:08 - um i have been working on a new coding
19:12 - in the cabana video i will show you the
19:13 - code from it i'll show it to you right
19:15 - now
19:15 - i'm going to open it up this is exactly
19:17 - oh i forgot that i made all these extra
19:19 - versions of it too
19:20 - um but i'm just going to show you um
19:27 - i'm going to show you here
19:33 - this is the project that i built i
19:36 - wonder what the youtube compression
19:38 - is doing with this but this is the
19:39 - project that i built in my next coding
19:42 - in the cabana video
19:43 - you might say like oh you've already
19:45 - done this i recognize this
19:46 - what does it look like to you
19:50 - giving you some time to type it in the
19:52 - chat type it in the chat
19:54 - type it in the chat um
19:57 - chinchya asks do you stream on twitch
20:00 - besides youtube no i have tremendous
20:02 - twitch envy
20:04 - all of the amazing things that i've seen
20:06 - people do on twitch
20:07 - i'm gonna name a few of them uh cozy
20:09 - coding with aaron davey you've gotta
20:11 - check out cozy coding aaron was a guest
20:12 - on his channel i mentioned coding garden
20:14 - with cj
20:15 - i know that saint plays uh i think it's
20:17 - saint plays tv maybe somebody could put
20:19 - that in the chat
20:20 - kobe who is a very dedicated viewer of
20:22 - the coding train streams on twitch
20:24 - and they're all david snyder worked on a
20:26 - project with kobe and
20:27 - at some point maybe i'll be able to get
20:28 - the they're working on that with the
20:30 - youtube api
20:30 - and this is one that i'll show you but
20:32 - so much amazing stuff
20:34 - people are saying simplex noise aha okay
20:37 - coming back to that
20:38 - um i have twitch envy but i've built
20:40 - this audience on youtube uh
20:42 - i'm kind of like an old fogie and maybe
20:45 - it makes sense for me to be like i'm the
20:46 - youtube streamer
20:49 - how's it going over there kids on twitch
20:54 - okay boomer now um
20:59 - but no i don't stream on twitch but i i
21:01 - i think about it
21:02 - often very often i think about streaming
21:05 - on twitch
21:06 - um so the question was how do i stay
21:11 - happy all the time
21:12 - nobody got my reference acting thank you
21:15 - um
21:18 - so um let me explain what this is is you
21:21 - might notice
21:22 - from the title over here this says
21:24 - marching squares cabana
21:26 - so while the oh i hear i hear people
21:29 - awake i hear footsteps the little pitter
21:31 - patter
21:33 - happy birthday i'm live streaming
21:38 - i think you know that already i mean
21:40 - that wasn't the dog and i'm waking
21:41 - people up
21:42 - um people still want me to actually
21:46 - there's no answer to how do i stay so
21:48 - motivated and happy i
21:49 - you know how i stay so motivated and
21:51 - happy it's people like you
21:53 - it brings me joy to share this stuff
21:56 - with the world with youtube with
21:57 - students with friends with colleagues
22:00 - um to discover to learn it it makes me
22:02 - happy i mean i have sadness in my life
22:04 - things are hard
22:05 - i think they're also you know i'm very
22:07 - lucky and privileged
22:09 - we don't need to get into all this why
22:10 - am i getting into all this but i
22:12 - i really honestly i mean that is a
22:14 - genuine answer
22:15 - um it's the the chance to share and be
22:18 - part of a community it's very hard these
22:20 - days to be
22:21 - so uh physically separated from that
22:23 - community
22:24 - um and it's and i'm lucky that i already
22:26 - have this thing set up where i can even
22:28 - though i'm just staring
22:29 - into like a camera
22:33 - in a room by myself with waking up my
22:34 - children who are sleeping and scouting
22:36 - get warm in here because i don't have
22:37 - the air conditioning i see thunderstorms
22:38 - coming
22:39 - i really like the rain in fact i'm kind
22:41 - of excited if it rains because it makes
22:43 - a lot of noise and i think that'll be an
22:44 - interesting
22:45 - um delightful sort of like background
22:48 - noise for this channel
22:52 - um
22:54 - okay cool cj says that uh answering
22:56 - questions and hanging out stream i by
22:58 - the way do you notice how i can't like
22:59 - seem to finish a thought
23:02 - it's a little bit of a a a
23:05 - characteristic of mine that just goes
23:07 - throughout my entire life but it's
23:08 - really really exaggerated or uh
23:12 - brought out by the sort of like live
23:14 - streaming of talking and looking at the
23:15 - chat and thinking about this
23:17 - i i'm going to get back to what i was
23:19 - actually talking about which is
23:20 - marching squares coding in the cabana
23:22 - video um that is coming out very soon
23:25 - um you can actually find almost all of
23:27 - the code for it
23:28 - um my one of my favorite examples is
23:31 - um uh i think it's this one
23:35 - let me just show it to you um which is
23:38 - using and let me actually
23:40 - draw more stuff i know i'm kind of
23:42 - you're not seeing the code but i can
23:44 - switch myself to over here
23:46 - oh come on uh oh
23:49 - okay banner i mean they're the sponsor
23:52 - they can have a banner
23:53 - um
23:57 - uh okay this is what i wanted to show
24:00 - this is the marching squares algorithm
24:02 - with
24:03 - a running with um
24:06 - with circles bouncing around the canvas
24:08 - um i
24:09 - ironically i didn't actually program
24:11 - this during
24:13 - the the
24:16 - cabana video i mean this example will be
24:18 - released and it uses the exact same
24:20 - algorithm just instead of running over
24:21 - noise it's running over these circles
24:23 - i think this is actually really a
24:25 - tremendous
24:26 - way of demonstrating it um it also is
24:28 - using interpolation so the actual
24:30 - marching squares contours
24:32 - are much smoother but there are just um
24:36 - so many um possibilities you can do with
24:40 - this algorithm that i think people will
24:41 - really
24:42 - um i can't wait to see your community
24:45 - contributions so you know
24:46 - even though the video probably won't be
24:48 - able to be released until next week
24:50 - i will have a quick members only preview
24:53 - basically my process is such when the
24:54 - video is done i order professional
24:56 - captions for it so it's closed captions
24:59 - while i'm waiting for the captions i
25:01 - release it for the members of the coding
25:02 - train
25:03 - and then once the captions come in and
25:05 - that sometimes can take up to three or
25:06 - four days
25:08 - hopefully it will be faster once the
25:10 - captions come in then i release it for
25:11 - the public
25:12 - so um anyway but the code is all
25:15 - available currently on so if you want to
25:18 - get a jump start on making
25:19 - um if you want to get a jump start
25:24 - on making your own version of it
25:28 - you can oh that's weird
25:32 - anyway there's a lot of the code
25:34 - examples are here in this github repo
25:36 - coding train slash marching cubes
25:39 - marching squares i have not done
25:41 - marching cubes though i need to come
25:42 - back and do that at some point
25:44 - um so check this out
25:49 - no i can't again not used to my buttons
25:51 - there we go
25:52 - uh check out this repo and you can start
25:54 - playing around with the code
25:55 - right now uh but let me uh if you want
25:59 - to know about the algorithm
26:00 - um this was my main reference so you can
26:03 - see j and i mention this and this will
26:04 - be in the video but it's jamie wong's
26:06 - article this is from 2014
26:08 - that goes through the math for the
26:10 - algorithm and
26:11 - shows the um and actually implements
26:13 - this metabolism so i felt i wanted to
26:15 - try to do something different in the
26:17 - video
26:18 - which is why i chose to do it over
26:19 - simplex open simplex noise
26:21 - but the metaballs um way of visualizing
26:23 - the algorithm is quite fun
26:24 - and then the interpolation okay so
26:27 - but i do need another topic i should do
26:30 - a wheel spin for it today
26:33 - i'm obsessed with wheel spin
26:39 - um but i do need another topic for the
26:41 - next coding in the cabana video which is
26:43 - the whole point of me mentioning that
26:44 - was gonna be away in august
26:45 - is i'm gonna record a coding and fan a
26:47 - video before i leave
26:49 - and then actually i don't have to even i
26:50 - don't have a plan for what i'm doing in
26:52 - august so
26:53 - we'll see if i really go away but that's
26:55 - the goal
26:56 - um somewhere local that i can drive and
26:59 - still be
26:59 - uh safely socially distanced um with the
27:02 - family
27:03 - um but uh what was i saying
27:07 - ah i don't have a topic yet for that
27:08 - coding cabana video my idea was to do
27:11 - delani triangulation
27:12 - and i kind of like i have an example
27:14 - that i made years ago i could pull it up
27:16 - right now but i'm not going to
27:18 - um the problem is that i feel like i
27:21 - need a really
27:22 - long period of time i mean that's going
27:23 - to be at least an hour long video
27:25 - maybe people don't care and that like a
27:26 - really long coding cabana video would be
27:28 - enjoyable
27:29 - but i try to keep those to like 20 to 30
27:31 - minute projects
27:33 - so um we'll see
27:36 - generative color gradients with noise i
27:39 - like that
27:39 - i i feel like though so one the one
27:42 - um thing that i i want to do something
27:45 - that's a bit
27:46 - more unique i feel like there's i mean
27:49 - everything's so interrelated but i feel
27:50 - like
27:51 - um there might be a lot of that um that
27:54 - is
27:54 - a little bit hey christian um k weekman
27:58 - is here
27:59 - um i feel like that
28:02 - is um perhaps
28:07 - uh a little redundant with a lot of the
28:09 - other videos that i made okay
28:10 - he's not looking on us
28:14 - i am looking at you except i can't
28:17 - see you i wish i could somebody will uh
28:19 - someday invent the cool magical thing
28:21 - where i can have this like
28:22 - giant screen behind the camera like sort
28:24 - of like a zoom brady bunch grid of
28:26 - everybody watching
28:27 - that would be wonderful sieve
28:30 - of era tostinis says sam hey sam
28:34 - thank you for your coding train
28:36 - membership it is highly appreciated
28:40 - i don't know if i ever gave you a random
28:42 - number when you join
28:45 - and why not now maybe it's the time the
28:48 - song
28:49 - i believe is a new member because the
28:52 - purple
28:53 - this dot icon is for a new member and
28:56 - for new members i like to assign you
28:57 - your own custom
28:59 - random number because i do have a
29:00 - million of them i don't have a million
29:01 - members
29:02 - i got a million subscribers though which
29:04 - is insane
29:06 - forty nine thousand and sixty there you
29:08 - go son are you programming today
29:13 - i don't i mean i i in theory yes
29:17 - all right because i think ah the only
29:18 - other thing i need to i wanted to
29:20 - mention
29:21 - and let me go to youtube dot com slash
29:24 - the coding train
29:25 - and i wanted to mention that i am uh
29:28 - starting a oh this one doesn't have
29:30 - closed captions i am uh
29:32 - starting a new guest conductor series i
29:34 - have had guest conductors
29:36 - um on the coding train before i never
29:38 - called them guest conductors that's just
29:39 - a new term for it i have a whole
29:40 - playlist of guests
29:42 - cj having been one of the guests um i
29:45 - am now featuring um black voices in tech
29:49 - as part of support for black lives
29:50 - matter uh the movement
29:52 - um and um uh aaron davey and
29:56 - nelson from amigos code were the first
29:59 - two
29:59 - uh guest conductors and a week from
30:02 - tomorrow
30:03 - it looks like if all goes according to
30:05 - plan
30:07 - um i will be bringing you uh the artist
30:10 - uh chrissy brimage who um i
30:14 - did um did not know of before a couple
30:17 - weeks ago when
30:18 - psy who is uh producing this series um
30:21 - sai coding train community managers
30:22 - producing this series uh introduced me
30:24 - to chrissy's work um and chrissy
30:27 - works with something called blender and
30:29 - does a lot of work with
30:30 - uh 3d uh models i think um i could
30:34 - scroll around and look at uh her website
30:37 - here
30:37 - um but um uh
30:41 - so we're gonna get a um
30:44 - a tutorial uh a brief tutorial and
30:46 - that's gonna be a week from tomorrow
30:48 - it's supposed to be tomorrow but
30:49 - my fault scheduling wise it didn't
30:50 - actually work out so a week from
30:52 - tomorrow will be a saturday morning
30:54 - uh with blender uh live stream so please
30:56 - tune in to that i'll also be doing a
30:58 - fundraiser i'm still
30:59 - working on setting that up so i will um
31:00 - announce that as well that will be a um
31:03 - fundraising live stream okay
31:06 - um simon has told me to look at the
31:10 - puzzle from yesterday
31:11 - uh oh uh oh okay
31:14 - are you gonna be around to help me when
31:16 - i get stuck
31:19 - all right all right let's get to some
31:22 - let's get to some coding why don't we
31:26 - okay so oh boy so
31:29 - there's going to be a lot of time if i
31:32 - if all goes according to plan actually
31:34 - let me
31:37 - uh it's fine i can just do this
31:41 - i i want to have a good system for
31:44 - um hiding my screen because if i'm going
31:47 - to
31:47 - do the youtube api i'm going to have to
31:49 - be really really careful i always try to
31:52 - be careful but
31:53 - with a lot of things i don't really care
31:54 - so much if things slip through i can
31:56 - regenerate or whatever but like things
31:58 - like my email my
31:59 - bank account my youtube channel um
32:02 - i really need to be careful with that so
32:05 - um austin is telling me to check up
32:07 - check out stand up math's most
32:09 - recent video for a topic for coding in
32:11 - the cabana
32:12 - okay
32:15 - uh stand up maths
32:20 - let's take a look
32:25 - is it this one the almost impossible
32:27 - chessboard puzzle
32:28 - or complex fibonacci numbers
32:32 - both of these look super interesting and
32:33 - i would love to watch them
32:35 - i love stand-up maths
32:41 - i hear little voices happy birthday
32:45 - to you happy birthday
32:50 - to you did you all notice
32:53 - the name of usain bolt's uh new
32:56 - daughter uh olympia lightning bolt isn't
32:59 - that an awesome name
33:00 - my daughter's name is olympia so that
33:03 - made me happy
33:04 - okay three blue one brown also the
33:06 - second most recent
33:07 - meant austin okay i'll take a look maybe
33:10 - there
33:10 - could be some nice visuals there complex
33:12 - fibonacci numbers
33:13 - okay um so
33:17 - um what i what i would like to sort of
33:19 - see
33:21 - um let's uh let's see what happens here
33:25 - is i want to just kind of jump right i
33:28 - literally have not looked at this
33:29 - in let's see what are the dates on this
33:32 - since
33:32 - may 29th is it it's like july now i like
33:38 - have not worked on this looked at this
33:39 - since may 29th i want to see if this
33:40 - still works
33:41 - um because i want to like see if i can
33:44 - um
33:46 - uh use the youtube api actually one of
33:48 - the reasons why i want to look at the
33:49 - youtube api
33:50 - is um violet who um helps me um
33:54 - i think violet uh is hopefully watching
33:57 - i thought violet in the chat at one
33:58 - point violet had a really
33:59 - exciting idea of some things we could
34:01 - try to do to celebrate the 1 million
34:03 - subscribers which i know happened a
34:04 - while ago but i'm just way behind on
34:06 - everything
34:07 - and so if i could possibly use the
34:09 - youtube api to get a list of all of the
34:12 - subscribers um usernames there might be
34:14 - like something we could do with that
34:15 - so that's one of the reasons why i
34:17 - wanted to look at the youtube api today
34:19 - um i want to be able to uh one of the
34:22 - ideas i have is to create an overlay
34:24 - that members names could sort of like
34:26 - pop up in like a thank you segment uh
34:28 - randomly
34:29 - um while i'm streaming i want to see if
34:32 - i can i know this is going to be like
34:34 - a big nightmare um and
34:37 - this is why i have twitch envy but i
34:38 - would love to be able to
34:40 - interact uh in real time with the
34:42 - youtube chat
34:43 - um right now i know i could do that with
34:44 - discord um
34:48 - so that's definitely a possibility um
34:53 - um one of the actually you know i do i i
34:56 - um i
34:57 - i wonder if i was thinking about the
34:59 - complex fibonacci series just remind me
35:01 - uh members
35:02 - in the discord remind me about i mean by
35:03 - the way the discord is open to the
35:05 - public anybody should remind me i just
35:06 - um we have a members-only uh channel in
35:08 - there
35:08 - which is why i keep saying that um
35:11 - remind me about this uh fibonacci not
35:13 - the um the complex number thing because
35:16 - i have some thoughts on that
35:17 - um i wanted to ah be able to interact
35:20 - with the youtube chat because i think it
35:22 - would be fun
35:24 - for the youtube chat to be able to
35:25 - control the hue lights or to
35:27 - interact with an overlay or just like
35:29 - for me be to be able to
35:30 - like you know do stuff with that
35:34 - so um so
35:38 - that's kind of the plan so let me just
35:40 - at least see
35:41 - if this even works still
35:44 - um terminal no i term i
35:48 - i'm so uh yeah sure
35:52 - you can update oh i fixed this
35:55 - somebody and somebody gave me a really
35:57 - nice fix for this
35:59 - and i forgot the command i'm not going
36:01 - to worry about it right now
36:03 - um what am i looking for uh
36:06 - lights
36:10 - um all right let's just see i don't
36:13 - let's see if this still works oh yeah
36:17 - oh yeah it still works
36:21 - oh yeah a code i wrote a month ago still
36:24 - works i can't believe it i can't believe
36:26 - the code i wrote over a month ago so it
36:28 - works i haven't looked at it since
36:30 - that's amazing
36:33 - so oh and now i just want to do now i
36:36 - just want to like make this into a
36:37 - server and then have a p5 sketch that i
36:39 - can
36:40 - like set the light color let's just do
36:42 - that can we do that
36:45 - i know i said youtube api but i think
36:47 - this will be fun
36:49 - um let's do that
36:54 - simon uh wrote me a comment which i
36:57 - would say is exactly why i'm a little
36:59 - bit afraid of uh discord api
37:01 - straightforward twitch api
37:05 - a bit of a pain youtube api big
37:09 - painful nightmare okay let's take a look
37:11 - at this lights code
37:14 - because i don't even remember how it
37:15 - works
37:17 - um and let me get it into a place where
37:20 - you can
37:20 - see it um and
37:24 - this that fun i guess it's good to have
37:26 - a nice big uh font for you
37:28 - to be able to see so i'm loading the
37:31 - node
37:32 - a hue api i'm using dot
37:35 - uh um dot environment so i have
37:38 - environment variables like the username
37:40 - this is stuff that i want to keep secret
37:42 - um because it's like for it's it's how
37:44 - i'm actually accessing the hue lights
37:46 - and
37:46 - i think probably you wouldn't be able to
37:48 - you know
37:50 - even with the username like break into
37:52 - my local network here to control them
37:54 - well that would be exciting if somebody
37:55 - did and then
37:57 - i just call turn light on
38:00 - and run through
38:04 - this and it's just got a little loop to
38:07 - go through
38:07 - every possible hue um and set so
38:11 - let me see um how i feel like it should
38:15 - be not
38:15 - too difficult to turn this into a web
38:19 - server
38:20 - right if i just use x and i know i have
38:22 - a lot of people watching
38:24 - who know this stuff better than i do so
38:26 - because then i could just create
38:27 - a route where i can receive an
38:30 - rg and a b value and then i can have a i
38:33 - mean i probably would want to use web
38:34 - sockets
38:35 - to be controlling it in real time but
38:37 - that's more work
38:38 - for me right now so let me just try
38:40 - running uh
38:41 - making a quick express server i'm going
38:44 - to go
38:44 - to and i realize i'm kind of jumping in
38:48 - uh for any of anybody who's watching
38:50 - who's um
38:51 - maybe a a beginner with javascript maybe
38:53 - you've seen my p5
38:55 - tutorials but haven't programmed uh in
38:57 - every node.js or
38:58 - on maybe the idea of server client is
39:00 - new to you
39:02 - i do i would suggest um
39:07 - i'm sort of searching for node web api
39:10 - coding train
39:11 - because yes this uh 8.1 intro to session
39:14 - 8 building an api in node
39:16 - this is probably um what i would
39:20 - suggest starting with um also the
39:24 - working with data and apis
39:25 - series i do go through actually i go
39:27 - through a lot of this in this series so
39:28 - i might actually suggest that
39:30 - so those are two these two series both
39:32 - cover
39:33 - a lot of the sort of step-by-step
39:34 - tutorial stuff for what i'm just gonna
39:36 - like
39:36 - play around with right now okay but
39:38 - let's go to
39:39 - uh node express
39:44 - and there must be just like a hello
39:46 - world example right
39:48 - um
39:52 - i mean i probably could figure this out
39:54 - without it but i just want like the like
39:56 - basic
39:59 - the basic example i guess i could just
40:01 - go to one of my examples
40:04 - let's do that intro data and
40:07 - apis uh no no yeah i guess i'm gonna
40:10 - have to say coding train because
40:11 - i'm not that actually this did come up
40:15 - it's kind of amazing that's a video of
40:17 - mine but this is what i'm looking for
40:19 - um let's go to module two i believe is
40:22 - the project i think the data
40:25 - selfie app will have what i need in it
40:28 - and i'm looking basically to do
40:30 - this i don't need the database though
40:33 - so i want to add in addition to be able
40:36 - to control
40:37 - hue lights um i want to create a
40:40 - express app i'm going to listen to port
40:42 - 3000
40:43 - i'm going to serve a static
40:46 - directory and i am going to
40:50 - call public and i'm going to limit
40:53 - uploads to one megabyte unnecessary for
40:56 - what i'm doing right now but i'm going
40:57 - to leave that boilerplate stuff in there
40:58 - and then i just need one route i'll use
41:00 - a get
41:02 - um and let's uh let's put this i don't
41:05 - know really where it matters i'm gonna
41:06 - put this here i'm gonna call this uh
41:09 - that route to be uh hue
41:13 - and uh there's a request how do i get
41:16 - the
41:16 - like let's say i have my goal here is to
41:18 - have like r
41:19 - equals g equals like that's going to be
41:22 - is it request.params
41:25 - like are those the url
41:30 - our query arguments that come in are
41:32 - they dot params somebody will tell me
41:35 - um and uh respond
41:40 - oh boy there's some sort of crazy uh
41:42 - auto complete going on respond a
41:44 - thank you acting acting
41:50 - thank you
41:55 - okay uh oh that's i just wrote a
41:58 - i just made up a function in express you
41:59 - could just say respond
42:01 - nope response dot send i believe is what
42:04 - it is let's see if this works
42:06 - uh node oops index
42:10 - listening uh localhost
42:14 - 3000 slash hue acting
42:18 - thank you and request.query
42:22 - um let's see oh shoot
42:25 - it was empty first of all let me not
42:29 - while i'm testing let me not have this
42:31 - turn light on function called
42:33 - and so i'm being told it's request.query
42:36 - let's
42:36 - try that
42:41 - let me run the server again
42:47 - great empty now let me try a question
42:50 - mark
42:51 - r equals 255 and g equals
42:54 - zero and b equals zero
42:58 - perfect there we go so that came into
43:00 - the server
43:01 - so by the way if this is new to you this
43:04 - is how
43:04 - the web works i mean i'm not using rusty
43:07 - in routes here
43:08 - which is i could also pull information
43:10 - from a
43:13 - by having slash this and slash that and
43:15 - slash
43:16 - the other but um these are called
43:20 - uh query string arguments i think
43:23 - i'm basically passing named variables
43:26 - key value pairs
43:27 - to the server this way so now
43:31 - if i just put a little
43:35 - p5 sketch and this is my ridiculous way
43:38 - of creating a p5 sketch
43:42 - where i'm going to make a new folder i'm
43:44 - going to call it public
43:46 - um i'm going to make a new file i'm
43:48 - going to call it index.html
43:49 - i'm going to paste that in and then i'm
43:52 - going to make a new file i'm gonna call
43:53 - it
43:54 - sketch.js and i
43:57 - i mean i can uh and then
44:01 - uh where where where where where
44:05 - what am i doing oh i don't need the
44:07 - style sheet um
44:09 - and then sketch.js
44:14 - uh i gotta turn this off
44:19 - who who writes these web apis
44:22 - svg path seg line to horizontal abs
44:27 - i mean let's write a song we should have
44:29 - a song
44:34 - um uh we should have a song called
44:38 - uh svg svg path maybe i can
44:41 - get some music here
44:48 - line to the right hand on amazon
45:05 - that size create canvas
45:09 - uh 400 400
45:12 - function draw
45:18 - oh i've got a real problem going on here
45:21 - uh how do i change this
45:30 - everything's fine now uh background
45:33 - uh
45:39 - now let's see if my so this is acting
45:42 - thank you and if i just go to localhost
45:44 - 3000 there we go i've got my p5 sketch
45:47 - great so what i want to be able to do
45:49 - eventually is click on this p5 sketch
45:52 - and click on a color
45:53 - and have that set my hue lights behind
45:55 - me
45:56 - oh interestingly how do i create
46:00 - how do you know in photoshop when you
46:01 - have these color pickers
46:04 - i mean i guess if i keep the saturation
46:06 - and brightness
46:07 - constant i could map all the hues over a
46:10 - grid
46:11 - um i guess i don't even i guess i could
46:13 - use i have two axes
46:15 - so i could map maybe
46:18 - should i map just like keep set maybe
46:21 - i'll keep saturation
46:23 - constant and i'll map hue and brightness
46:26 - um to x and y
46:27 - let's do that really quickly so let's
46:30 - just say in let's get rid of
46:32 - background let's say a color mode
46:37 - hsb and then i want to look at
46:41 - every x
46:46 - oh i gotta i gotta get rid of gotta turn
46:48 - that autocomplete off
46:50 - for the default stuff um i i've done
46:53 - that before
46:53 - i just forgotten how i got to do every y
46:56 - i'm not sure if we're getting to the
46:58 - youtube api folks but we will be taking
46:59 - a break in about 10 minutes
47:01 - this is actually going to go pretty fast
47:03 - i'm realizing the question is can i open
47:05 - this up to the public i could use like
47:07 - ngrok maybe
47:08 - and run the server right from here uh
47:11 - create color picker oh p5 has a create
47:15 - color picker
47:16 - function oh but that's so boring i want
47:19 - to make my own
47:21 - all right let's try it though
47:26 - create color picker
47:29 - what is that
47:33 - oh i've got an error
47:37 - oh extra curly bracket
47:41 - oh okay so let's do this now but can i
47:45 - get events off of this
47:46 - oh i guess i gotta look i did not know
47:49 - this was a thing in p5
47:52 - amazing
47:55 - so create color picker color picker
47:57 - position
47:58 - color picker dot color all right let's
48:01 - definitely put
48:02 - this in
48:05 - can i get events
48:10 - like can i get a changed event
48:14 - um well let's let's do this oops
48:19 - okay background
48:23 - color picker oh so let's make that a
48:26 - variable
48:31 - color picker equals create color picker
48:33 - color picker
48:35 - dot color
48:43 - um i might need to turn the air
48:46 - conditioning on which
48:48 - will create a little bit of background
48:49 - noise but i think we'll be fine
48:52 - where are we here we are so if i now
48:55 - click here
48:56 - and i do this and what do i do
49:00 - oh oops if i do this i go here
49:03 - and i just click out of it cannot read
49:05 - property
49:06 - mode of undefined
49:12 - was this wrong i thought that's what the
49:14 - example said
49:17 - color picker color picker dot color
49:22 - all right didn't i just do this exact
49:28 - example
49:31 - oh what did i do wrong before what did i
49:33 - have wrong
49:41 - uh i wonder what i did wrong weird
49:45 - like oh because if i don't give it an
49:47 - initial color
49:48 - it fails you have to give it an initial
49:51 - color that's insane it should probably
49:52 - have a default color i would think but
49:54 - that's fine somebody can
49:56 - if i don't know what the world i don't
49:57 - know what the world of viewers of the
49:59 - coding train thinks
50:00 - but recently i you could consider that a
50:02 - bug perhaps
50:04 - let's give it a color let's just
50:08 - give it um uh that and let's see
50:12 - there we go and let's um
50:16 - let's make this i don't know why i feel
50:18 - like making the that's
50:20 - much too much i'm like
50:23 - crazy here this is so ridiculous what
50:24 - i'm doing okay so now
50:26 - oh there we go oh so it's okay awesome
50:30 - oh this is gonna be fun
50:33 - so now okay perfect so now
50:36 - um and let's can i get an event
50:41 - like color picker dot input
50:45 - um
50:53 - let's see if this works
50:57 - rather than having the draw loop
51:01 - yes okay so that's great so regular
51:05 - um kind of dom events there's input and
51:07 - there's change
51:08 - i'm going to use input and then i am
51:10 - going to say let's let me just use
51:12 - changed right now
51:13 - and see what that because that might
51:15 - only be when i like lift up the mouse
51:17 - oh that one doesn't or click yep so i'm
51:20 - going to do that just because i want to
51:21 - first get it to work
51:22 - kind of not in real time i don't know if
51:24 - i'm going to need web sockets for that
51:26 - oh this is awesome so now let me just
51:28 - see what that looks like console.log
51:31 - colorpicker.color and we'll just see
51:33 - where those rgb values are
51:34 - let me make this a little bit bigger for
51:36 - you i don't need the sound library
51:39 - let me just get rid of that
51:43 - okay so now i'm going to change it to
51:46 - this color
51:48 - and i get levels
51:51 - maxes array there's not like an
51:55 - r property i mean it's fine
52:00 - there's this object interesting are
52:03 - there functions like
52:05 - get red get blue i mean i guess i'll
52:08 - just use the array
52:09 - levels 0 1 2.
52:13 - all right oh but am i setting in my
52:17 - server the way i had it work was
52:20 - setting hue saturation brightness
52:25 - so i guess i will
52:29 - if i oh
52:38 - there's the children would like some
52:41 - breakfast
52:42 - they're not asking me but i i'm usually
52:44 - the breakfast cook
52:49 - i don't know if you can hear them
52:51 - through my mic here
52:53 - let's see if i change this to
52:56 - [Music]
52:59 - a color mode hsb
53:05 - uh it says rgb
53:11 - mode rgb how come it didn't change it to
53:13 - hsb
53:15 - and i assume by the way in the let me
53:18 - just look at the node hue
53:19 - api because i can probably just change
53:21 - this to uh red green blue
53:25 - that'll be easier uh node hue api i have
53:29 - to turn
53:30 - tell me if um
53:34 - let me know how bad that is sound wise
53:38 - i just turned the air conditioner on
53:40 - because it's very warm
53:42 - very very warm in this room
53:49 - okay is this the node hued api i'm using
53:53 - i think so and i am
53:57 - using a light state oops
54:01 - which is this thing and
54:05 - on white brightness saturation is there
54:09 - a saturation x
54:10 - y um
54:14 - anybody see here where i can set it as
54:15 - an rgb color
54:19 - i'm trying to think of what the like
54:22 - logical way for me to do this is
54:27 - apparently you can set the color picker
54:29 - mode to hsb
54:31 - how do i do that
54:36 - um
54:40 - light state value off
54:43 - brightness hue saturation x
54:46 - y well that's interesting
54:49 - color temperature
54:53 - effect color loop wow there's all these
54:56 - other things transition time
54:59 - fascinating uh rgb
55:06 - so rgb there we go we'll set an rgb
55:09 - value perfect
55:10 - so i can do rgb
55:13 - so this is what i'm going to uh set
55:16 - color
55:18 - um actually so i guess i want to do
55:22 - let me let me make some of this like
55:23 - init color
55:27 - um
55:32 - let me create a function just called
55:34 - init color
55:35 - and let me because i don't think i need
55:39 - to do this every time i change
55:40 - the light value so let's say
55:44 - let's call init color and i guess
55:47 - this
55:52 - this is a sort of silly way that i'm
55:54 - doing it but i want to have access to
55:55 - this api
55:56 - variable because then i can write a
55:59 - function called
56:02 - probably an async function called set
56:03 - color to an rgb value
56:06 - and then there
56:11 - i would do this
56:15 - state is new light state rgb
56:18 - rgb and so i want the light to be
56:21 - on and i suppose i'm
56:26 - oops on rgb and then set the state to
56:30 - that
56:31 - and then
56:34 - i don't i guess i don't need console.log
56:37 - light
56:38 - set to r g
56:46 - b
56:49 - okay so uh oh light id
56:56 - is
56:58 - how did i set that before light id did i
57:00 - just have that hard-coded
57:05 - i don't understand where that comes from
57:12 - oh i have it hard-coded okay great
57:17 - uh i could probably turn on like the
57:20 - noise filtering but i'm i'm not gonna
57:22 - bother with that right now
57:27 - i saw in the weather report that there's
57:30 - going to be thunderstorms all day long
57:32 - today
57:32 - but i don't know if um
57:37 - if um i know i don't is that tropical is
57:41 - i saw also in the news that there's a
57:42 - tropical storm like forming off the
57:44 - coast of north carolina one of those are
57:46 - related okay
57:48 - set color async function set color
57:52 - um so i think i'm good now i call init
57:56 - color
57:57 - and then uh when i get
58:01 - an um where is my route
58:04 - in the server what happened to that
58:07 - other code oh i have it up here
58:09 - um by the way so hue for hue light not
58:12 - for um
58:12 - so now i should have a um
58:19 - i should get i can get rgb
58:23 - um r g b and then i should be able to
58:27 - say
58:28 - set um and this can be an async function
58:32 - because then i can say await set color
58:35 - rgb
58:37 - and then i can say i'll just send back
58:41 - an object which sends back the r value
58:45 - just sends back
58:47 - [Music]
58:48 - i guess i can do something like status
58:51 - success
58:54 - and then send back the rgb values so
58:56 - let's see if this even works
58:58 - so now if i rerun this server
59:02 - and i go to here
59:05 - but i want to go to slash hue now i'm
59:08 - about to hit enter
59:10 - when i hit enter we should see the
59:11 - lights turn to red
59:14 - this is a good time to use this
59:17 - whenever i use the sound effect it
59:19 - inevitably means it's not gonna work
59:28 - that was so cool okay now let's change
59:30 - this to
59:32 - 150.
59:36 - okay it's hard for you to read these
59:38 - colors as being that different but let's
59:39 - make it
59:40 - this color there we go oh this is wild
59:43 - oh this is fun
59:44 - by the way i have a lamp here also
59:46 - that's changing color i could probably
59:48 - put that
59:48 - like in front of the camera for you to
59:50 - see it or like over here
59:52 - let's see there's a nice spot right here
59:53 - i could put a nice much brighter lamp
59:55 - would that be worthwhile let's see
59:59 - does anybody care i just want to make
60:02 - this as pleasant
60:04 - and exciting for you as possible
60:07 - and so let me unplug this
60:13 - oh lamp please don't knock things like
60:17 - i'm sort of at risk of spilling coffee
60:20 - all over
60:21 - my computer right now like what if i put
60:23 - this lamp
60:26 - here
60:29 - that's not good hi everybody do you see
60:32 - me
60:33 - uh i have my um ipad i'll move that
60:37 - with the music cues let's put the lamp
60:40 - here okay that's good
60:44 - that's good i know the light behind me
60:46 - changes but come on this is going to be
60:48 - much more dramatic and exciting
60:50 - where do i plug this in i don't have a
60:54 - plug
60:56 - if i really i'm going to put my fingers
60:58 - here i'm going to think really hard
61:01 - um where's that plugged into
61:04 - no is there oh there's a plug over here
61:07 - oh no extension cord i need a next do i
61:10 - have an extension cord
61:12 - this is going very well good planning
61:15 - every good planning good good good
61:16 - planning
61:18 - there is an extension cord there what's
61:20 - plugged into the extension cord
61:23 - uh currently plugged in oh no
61:26 - no no that extension cord i was about to
61:29 - go take an extension cord over there
61:31 - which is very very very very clearly
61:34 - what
61:34 - everything is plugged into including the
61:36 - computer that's allowing you to see me
61:38 - and listen to me right now okay
61:41 - um this this is
61:44 - this is something i can accomplish
61:48 - wait let's see if i put it over here
61:50 - it's going to be much closer to where
61:51 - the outlet
61:52 - is you can't i have an idea
61:56 - i can reach the outlet now
61:59 - okay so the light is plugged in you
62:02 - can't see it
62:05 - but if i move myself
62:08 - over there we go
62:13 - then i can put my ipad back
62:17 - don't spill the coffee
62:20 - spill no
62:26 - okay
62:33 - oh oh i just realized something
62:37 - this is not light id number five
62:40 - [Laughter]
62:43 - oh no i forgot that i had that
62:46 - hard-coded in
62:47 - can i guess which light it is
62:52 - uh where's the light id you know maybe
62:55 - it's
63:00 - six
63:05 - i guess it wasn't six oh this is such a
63:09 - fail
63:10 - there is no lag four
63:22 - it's not four how did i figure out what
63:24 - the different lights were
63:26 - how did i figure that out before i think
63:28 - i went to like a special like
63:30 - console um
63:33 - oh oh boy
63:38 - random lucky number seven
63:44 - lucky number seven all right i'll try
63:46 - lucky number seven
63:47 - who's it is july after all
63:58 - did it change oh
64:02 - i'm so sad all right i'm gonna uh when i
64:05 - take a break
64:06 - i will um go and look i think there's a
64:09 - thing that i can log into that has all
64:10 - the private information that will list
64:12 - all the different lights
64:13 - let me just put this down here for right
64:15 - now because i need to take a break in a
64:17 - minute
64:17 - no there's a hue lamp in the light it's
64:20 - all that
64:21 - let's just get this to work uh because i
64:24 - want to take a break and do the
64:26 - brilliant um the brilliant puzzle
64:29 - um so let's let's go back to five
64:35 - and let's get it to now from the p5
64:38 - sketch
64:41 - i should be able to say
64:44 - let's go back and look at
64:48 - this pick a color
64:52 - and we're seeing the levels are i can
64:54 - get it out from the levels array
64:56 - so let's do that so um
65:01 - uh rgb equal
65:06 - this um let r
65:09 - equals rgb dot rgb dot levels
65:13 - index zero i don't know if there's a
65:14 - better way to do this but this is what
65:16 - i'm going to do
65:17 - then i need the g and the b one
65:22 - two uh then i'm going to say load
65:25 - json uh
65:28 - slash hue uh question mark
65:32 - r equals r and
65:35 - g equals g
65:38 - and b equals
65:43 - b
65:47 - okay and now
65:51 - uh and then i should say i should get a
65:53 - callback like uh
65:55 - color set and let's write that
65:58 - function separately um and
66:03 - let's just uh console.log the response
66:06 - okay
66:07 - let's see if this works oh that's
66:10 - um i always forget that i can do this so
66:13 - i think
66:14 - this is like that object destructuring
66:17 - sort of thing
66:18 - let's try this const and it doesn't have
66:21 - to be constant
66:21 - i'm very inconsistent about my use of
66:25 - uh equals rgb.levels does that work
66:30 - i love that if that works and in fact
66:36 - i can be even insaner if that's a word
66:40 - and just do this
66:45 - does this work does this work
66:48 - all right let's see
66:52 - okay we are gonna pick keep an eye on
66:55 - the lights behind me
66:58 - let's what color are they now they're
66:59 - green so let's get them to be a
67:01 - nice bright like pink
67:04 - i'm going to click here they're going to
67:06 - say my little hue light prayer
67:08 - say a little hugh light prayer
67:16 - ah why did they turn
67:20 - was that just an effect hold on i have
67:22 - to turn around and actually look at them
67:24 - that was exciting it worked um
67:28 - i saw them when i looked in the camera
67:29 - like they flashed white
67:31 - but i can't tell if that was just an
67:32 - artifact of
67:34 - yeah they flash they why did they
67:38 - flash a different color before they
67:41 - changed is that part of the hue behavior
67:44 - is that a bug in my code
67:49 - oh because i have the on
67:52 - so i should
67:56 - set the light on in init color
68:05 - so i should set it to be on here i can
68:08 - just do this
68:13 - so now
68:17 - if i rerun the server
68:21 - now it shouldn't do that i should be
68:23 - able to just say
68:25 - uh this
68:29 - no it's still flashed
68:34 - i assumed did i keep it in there by
68:36 - accident
68:37 - oh because it's a new light state no
68:43 - set light state no why does it flash
68:50 - huh
68:58 - i don't wonder why that is well let's um
69:00 - one thing i wanted to ch it works
69:03 - one thing i wanted to change is
69:09 - so clearly i can also do something here
69:11 - like this right
69:19 - this should work also
69:22 - boy my uh auto format is really really
69:25 - excited about
69:26 - putting the object properties on
69:28 - different lines there's something called
69:30 - transitions in the document
69:31 - yeah do i need to um let's look at that
69:35 - very briefly
69:37 - actually let's not look at that well
69:38 - let's look at that uh node hue
69:40 - api um
69:44 - light state oh wait but actually i
69:48 - wonder if well is that part of the
69:51 - light state transition time
69:57 - transition slow transition fast
70:00 - transition instant let's try that
70:11 - let's try uh does this how i would do it
70:25 - p5
70:29 - what color are they now let's go to red
70:33 - oh yeah that worked transition instant
70:34 - so the setting the transit the default
70:37 - transition that's weird but
70:39 - it is what it is right no flash let me
70:42 - check
70:43 - perfect oh awesome okay so now
70:46 - i should be able to change this to
70:50 - let's see i mean again i think it
70:52 - probably makes more sense to use
70:54 - um to use
70:58 - what am i trying to say here uh
70:59 - websockets because if i want to have
71:01 - this sort of continuous connection where
71:03 - i'm kind of dragging the mouse around
71:04 - and setting a color
71:05 - but let's just see even if it works with
71:07 - a sort of like one user
71:08 - local server i'm going to change the
71:10 - event to input
71:14 - and now i'm looking
71:23 - looks like it's having a little trouble
71:24 - oh no no i'm just not in the
71:26 - ah it's like it's hard for me to tell if
71:29 - this is working
71:35 - yeah it's freaking out a little bit i
71:38 - think probably i need to do like
71:40 - web sockets or something but
71:43 - because um probably the requests aren't
71:46 - you know i probably shouldn't allow
71:48 - myself to send another request
71:50 - look it's just doing this continuously
71:52 - it's like behind
71:54 - maybe well this is crazy like it's
71:57 - sending so many requests
71:58 - okay time out so i got to put a limit on
72:01 - it
72:04 - uh i see that's why it's freaking out
72:06 - let's just see if i can i mean again
72:07 - web sockets would be the right thing
72:10 - here
72:10 - but i think what i could do is i could
72:13 - have a variable like
72:15 - next color is true so
72:18 - i'm only going to
72:22 - call load json if next color is true
72:26 - so i'm just going to use a little flag
72:27 - variable just really quickly and when i
72:29 - get a response
72:31 - i can set next color it's true but
72:35 - as soon as i'm gonna ask ask i'm gonna
72:37 - set next color is false
72:38 - so now i'm i'm kind of slowing down my
72:42 - calls to the server
72:43 - i'm only calling to the server when um
72:46 - one um when i get a response
72:50 - uh after i get a response back so let's
72:52 - see if this helps things
72:58 - yeah you can see the the console is not
72:59 - getting overloaded now
73:01 - yeah and it's it's working i just want
73:03 - to look at it in real life
73:04 - wow this is sort of totally fun um
73:07 - cool so now i have full control from
73:10 - p5.js
73:11 - but and obviously i should also um
73:16 - it would make much more sense for me to
73:18 - put
73:22 - this here and no need for a draw loop
73:28 - so now also you can see the color
73:31 - up top as i change it here it changes
73:34 - the hue lights and if i just knew
73:37 - what the light id was for this one it
73:39 - would also change
73:42 - yeah websockets keeps an open connection
73:45 - okay so yes the goal is to see if i can
73:48 - use the youtube api
73:50 - to control the lights
73:53 - we'll see um i'm going to take a break
73:58 - because
74:00 - want to tell you about the uh sponsor of
74:03 - the coding train
74:05 - uh brilliant well give me a moment here
74:09 - because i am the kind of person who
74:14 - super super prepares
74:19 - let's go to the website brilliant.org
74:26 - oh i definitely want to log in
74:30 - new computer good work everybody this is
74:33 - this is riveting
74:34 - um
74:37 - uh riveting live streaming
74:41 - [Music]
74:45 - getting all sorts of messages
74:50 - let me get my login for brilliant
74:58 - and here we go oh my god this password
75:02 - is insane
75:08 - i also uh
75:12 - okay i do use a password manager i
75:16 - the thing is this coding train log into
75:18 - this computer
75:19 - is new and i haven't installed
75:21 - everything so i just have to do
75:24 - everything with the most
75:27 - slow
75:30 - way possible see if that works
75:36 - and
75:39 - [Music]
75:44 - okay
75:50 - okay um
75:54 - save why not so simon
75:58 - is corner connection the one you're
76:00 - telling me to do i don't have the chat
76:02 - up anymore i'm such a mess here
76:06 - but everything is going to be fine in a
76:09 - second
76:11 - ah by the way a solar liner is telling
76:15 - me that i need to throttle request
76:17 - because there's rate limiting in the hue
76:19 - api
76:19 - side as well that's good to know um
76:23 - okay so let me tell you
76:27 - about brilliant for a moment so i talked
76:29 - at the beginning of the live stream
76:30 - about brilliant it's a
76:32 - site that i love um i'm always looking
76:35 - for inspiration
76:36 - for things to learn for material for my
76:38 - courses that i teach
76:39 - for coding challenges that i could do
76:42 - and brilliant is just like a
76:44 - treasure trove of this stuff so i know a
76:46 - lot of people
76:47 - are looking for online math and science
76:49 - resources right now and maybe you're a
76:50 - student
76:51 - looking to uh or a professional brushing
76:53 - up on cutting-edge topics
76:55 - or maybe you just want to understand the
76:56 - world better check out
76:58 - brilliant so you can add some learning
77:00 - structure to your day you can set a goal
77:03 - and you can just do a little bit every
77:04 - day because it has these like wonderful
77:06 - interactive challenges and courses
77:08 - um it's a so it's a it's a it's a
77:11 - problem
77:11 - solving based website with a hands-on
77:13 - approach there's over 60 interactive
77:15 - courses in math science
77:16 - and computer science the puzzles will
77:18 - surprise you
77:19 - and expand your understanding of the
77:21 - modern world and all of brilliance
77:23 - courses have storytelling
77:25 - code writing interactive challenges and
77:27 - problems to solve
77:28 - so a couple courses that i would really
77:31 - recommend you check out
77:32 - um one is the brilliant neural network
77:35 - course
77:36 - you can see this interactive uh
77:40 - essay in a sense of like explaining how
77:42 - neural networks work
77:43 - where you can sort of like draw and
77:45 - watch the weights and connections
77:46 - actively change through this
77:48 - mnist digit recognition example i mean
77:51 - this is like this is actually also like
77:53 - for me when i see stuff like this i
77:54 - think like oh wow
77:56 - this would be a wonderful thing to learn
77:58 - how to program in processing or p5.js
78:01 - like
78:01 - could i create this kind of interactive
78:03 - demonstration on my own
78:05 - um another course that i think people
78:07 - would be really interested in
78:08 - is is the programming course and it's in
78:10 - python so you know on
78:11 - on coding train i don't really program
78:13 - in python except on very very rare
78:15 - occasions but
78:16 - one of the most frequently asked
78:18 - questions in the comments is
78:19 - where can i learn python and so
78:22 - um i've been kind of going through this
78:24 - course and really enjoying it
78:26 - you can see how like you can actually
78:27 - just write code right there in the
78:29 - lessons and it has
78:30 - written explanations and checkpoints and
78:32 - all that stuff so
78:33 - um take a look at those courses
78:36 - you can sign up for free right now and
78:38 - the daily puzzles available to you
78:40 - but if you want to get um
78:43 - full access to everything in brilliant
78:45 - um you can sign up for a premium
78:47 - subscription and if you go to
78:49 - let me come back to here with uh whoops
78:53 - um this oh nope here
78:56 - with this brilliant.org coding train
78:59 - um you will uh get the first 200 people
79:02 - to sign up will get 20
79:03 - off of a premium subscription you can
79:05 - also say i have premium one of the nice
79:06 - things you can do
79:07 - is you can i you know what's a good
79:09 - birthday present for my daughter who's
79:11 - nine uh she can use my premium account
79:13 - to be frank but
79:15 - if i wanted it to give it to somebody
79:16 - who wasn't in my immediate family
79:18 - i would i would gift them this account
79:20 - maybe maybe she should have her own
79:21 - account because she's but you know she's
79:23 - young i don't know if she's using
79:23 - computer anyway
79:25 - i don't need to figure out what i'm what
79:26 - i'm buying her as a present today
79:29 - but uh brilliant.org is a great present
79:31 - for a
79:32 - friend or family member who's uh
79:34 - interested in learning
79:35 - okay um it's a it's the a
79:39 - surprising shortcut one oh
79:42 - that's today's puzzle i want to do this
79:45 - one
79:46 - because um
79:49 - toggle tags puzzles are solved with
79:52 - logic
79:53 - all right let me look at this one
79:56 - because simon really wants me to do it
79:58 - if you've ever watched a duck swim
80:00 - furiously upriver without appearing to
80:02 - move
80:02 - or a seagull fly directly into a gale
80:05 - without getting anywhere
80:07 - you already have an idea about the
80:08 - relative velocity oh velocity that's the
80:11 - thing that i i do
80:12 - on the coding train relative to you the
80:14 - duck or the gull doesn't seem to move
80:16 - very much at all right relativity but
80:17 - relative to the water air they're moving
80:18 - pretty quickly
80:19 - which viewpoint is the right one are
80:21 - they moving stationary doesn't even
80:22 - matter okay i'm not going to do a
80:23 - dramatic reading of all of this
80:25 - simon you're going to help me right see
80:27 - this is what i love all these like
80:29 - interactive
80:30 - okay so i see reference for the water
80:36 - swim speed water frame
80:42 - um okay oh whoa look at this
80:46 - flowfield see all this is so connected
80:49 - hi austin
80:50 - wow austin i've not seen you in a very
80:52 - long time
80:53 - welcome um small
80:57 - fairy boat oh i have no it takes hikers
81:00 - between two points on opposite banks of
81:02 - a swiftly flowing river
81:04 - the current is the fastest in the center
81:08 - i don't know if i totally understand
81:09 - this and gradually become slower near
81:11 - the edges
81:12 - the decrease on either side is symmetric
81:15 - about the center of the river
81:20 - so that means the current so the the
81:24 - i've i assume this isn't the correct
81:26 - answer because i'm sort of
81:28 - because it seems like well wouldn't it
81:30 - just be fastest if you stay
81:32 - c the center of the whole time
81:35 - if you want to get across the fastest to
81:37 - minimize the time of the trip
81:39 - variety different routes the speed of
81:40 - the boat relative to the water
81:42 - is constant oh but the angle that the
81:44 - boat makes with the current
81:46 - varies the ferry operator finds that for
81:49 - the current this one's hard
81:50 - it's got three difficulty spikes
81:57 - i don't understand this one the ferry
82:00 - operator finds that for the current
82:01 - today one of the routes shown above is
82:03 - faster than all the other routes
82:04 - which of these routes gets the boats
82:06 - across the river in the least time all
82:08 - right maybe we can do phone a friend
82:11 - here
82:12 - i think i'm missing a key element of the
82:14 - challenge
82:18 - because why wouldn't it just be fastest
82:22 - going directly across if the current is
82:24 - fastest in the center
82:35 - and what's the difference between a and
82:37 - d
82:38 - because those look symmetric oh the
82:40 - current is pointing down
82:43 - oh i see
82:47 - the cr the center is over here i'm
82:49 - fundamentally
82:51 - misunderstanding this completely got it
82:56 - so now my intuition is
82:59 - is telling me that it certainly wouldn't
83:01 - be d we can eliminate d
83:03 - right so then take us way out of the way
83:08 - we can eliminate c unless we can't
83:10 - really eliminate c could that still be
83:12 - the best
83:13 - but you know intuition is saying
83:15 - something about a
83:18 - do you not or do you not want to go
83:19 - against the current so actually
83:21 - we can't eliminate d because d is going
83:23 - to allow us to go with the current to
83:25 - increase our velocity
83:30 - can i write a simulation i
83:34 - do a simulation of this i honestly have
83:36 - no idea what the answer is
83:38 - and i'm very tempted to just click on
83:40 - the explanations
83:41 - but i'm going to happily get this i'm
83:42 - going to happily be willing to get this
83:43 - one wrong
83:48 - think brackets decrone
83:51 - i don't even know what that is brackish
83:53 - stock
83:54 - oh back a stroke chrome curve
83:59 - in mathematics and physics a brackish
84:02 - stone code
84:03 - curve from the ancient greek
84:07 - brachistos chronos meaning shortest time
84:09 - is the curve of fastest descent
84:12 - is the one lying on the plane between
84:14 - point a and a lower point b where b
84:16 - is not directly oh below
84:19 - a on a bead which slides frictionally
84:21 - okay
84:26 - so it's a cycloid
84:31 - oh yeah so we want to go fastest at the
84:33 - beginning
84:40 - okay this would lead me to believe based
84:43 - on this this is
84:44 - really cool so this is definitely
84:46 - something i would love to create a p5
84:48 - sketch to simulate
84:51 - this would lead me to believe d is the
84:56 - answer
84:58 - brachy stone brachiostur crone i thought
85:00 - that was a dinosaur
85:01 - broccoli brachisto chrome
85:06 - dinosaur no
85:11 - it's a good dinosaur okay brachiosaur
85:13 - that's a dinosaur right
85:16 - brachiosaurus yeah it's kind of got like
85:19 - a bra
85:19 - is that connected because it's curve is
85:21 - like that am i just totally imagining
85:23 - this
85:24 - there's an excellent youtube video by
85:26 - vsauce
85:27 - on the brackets to chrome curve bracket
85:30 - chrome
85:32 - vsauce
85:36 - okay i'm not going to watch this right
85:39 - now
85:40 - but i definitely want to do this as a p5
85:44 - uh oh and look it's even got
85:47 - um uh with don't troy with uh adam
85:50 - savage they built one this is so
85:52 - i can't believe i don't know about this
85:56 - this is wild and i see
85:59 - a three blue one brown video about this
86:02 - i i really
86:04 - all right so let's just go with d
86:08 - and hit submit
86:13 - okay
86:17 - oh explanation i was wrong
86:23 - so b will waste time the beginning
86:26 - because it's moving
86:35 - a
86:43 - i'm so confused
86:49 - i'm so confused your animation is wrong
86:53 - wait
86:59 - what happened here where am i
87:02 - the answer is a so
87:05 - i just was thinking about it i i those
87:08 - diagrams tricked me
87:12 - but that it's like gravity pointing down
87:16 - the current
87:19 - all right let's look at i don't i don't
87:23 - know that this
87:23 - explanation is correct everybody's
87:26 - discussing it let's keep going
87:33 - okay to visualize i use desmos to make
87:36 - up functions
87:38 - these are the trajectories of the four
87:39 - roots defined by color
87:42 - this is the force of the current in the
87:44 - function the x position of the ferry
87:47 - consider there's no current the ferries
87:49 - still behave the same way
87:52 - then subtract the four trajectories from
87:54 - that function
87:56 - the blue curve is actually a straight
87:58 - line this means by using the blue route
87:59 - a the fair uses the strategy of
88:01 - constantly orienting the same way the
88:03 - second explanation after this one is
88:05 - just so amazing
88:07 - the second hint is that the current is
88:09 - not the same gradient as the river
88:11 - current
88:12 - um
88:17 - interesting falls a straight path until
88:19 - it turns right
88:20 - right i yeah it's got a turn it's got to
88:23 - turn and then go against the current
88:25 - i see so a it gets all of this speed
88:31 - and then just really like goes up to be
88:34 - able to like maximize
88:37 - the current right here that sort of is
88:40 - my intuition
88:42 - all right um if anybody so first of all
88:45 - you can submit your own explanation here
88:48 - if anybody i i'm looking at you simon
88:51 - anybody else wants to make a p5
88:53 - demonstration of this
88:54 - using like my nature of code examples um
88:57 - i would
88:57 - love to see that and there's i think
89:00 - people are in the chat or really
89:01 - discussing this
89:02 - in an amazing way so simon's about to
89:04 - tell me which explanation
89:06 - he's talking about but i want to go and
89:07 - just do the other challenge because
89:10 - [Music]
89:12 - let's take a look at it
89:15 - let's try one more although i should
89:16 - probably keep moving on but i want to
89:18 - see if i have another chance to get one
89:19 - right because this one
89:22 - how many how many daggers two this is my
89:26 - level i'm at level two
89:29 - okay um
89:33 - toggle tags puzzles provide a list of
89:35 - constraints that the characters in the
89:37 - puzzle need to satisfy
89:38 - read on for some examples or jump
89:40 - straight to the puzzle below
89:46 - okay so five friends ivy j kurt larmor
89:49 - i've gone out to a game together
89:51 - so there's an even number of purple caps
89:53 - so you
89:54 - all of these conditions have to be met
89:56 - sorry you might not be able to see this
89:58 - all these conditions happen to be met so
90:01 - um like if kurt is wearing a purple cap
90:04 - then i have to click on
90:05 - curt i can't click on cur
90:10 - oh right but it's now showing me it's
90:12 - stepping me through okay
90:14 - all right let's just go to the uh then
90:16 - there's let's go to let's go to the
90:17 - puzzle
90:18 - okay in this challenge you need to
90:19 - determine the contents of each treasure
90:21 - chest
90:22 - as well as whether each chest is labeled
90:26 - with the true or false statement each
90:27 - chest has a statement written
90:29 - on it one of the four statements is
90:31 - false and the other three are true
90:33 - so i have to pick false for one of them
90:36 - and the other
90:36 - true the chest that contains only gold
90:40 - coins is labeled with a true statement
90:44 - so if this one is true it can't this one
90:47 - can't be
90:48 - this right this one can be true um
90:52 - okay
90:56 - so exactly one chest contains each of
90:59 - the following ah so
91:01 - these are unique the true and false
91:03 - labels are accurate given what well of
91:05 - course
91:06 - uh given with the same equines okay so
91:08 - let's just try
91:10 - sorting this out
91:13 - what can i use first the chest that
91:16 - contains
91:16 - only gold coins is labeled with a true
91:18 - statement
91:20 - so which ones chest a contains a mix of
91:24 - gold and silver coins oh oh how many
91:27 - solutions does this puzzle have
91:28 - okay oh this is tricky
91:35 - um okay i'm a little bit lost here
91:39 - one of the four statements is false the
91:42 - other okay so let's see let's just
91:43 - figure out let's say
91:45 - this one is false that means these have
91:49 - to be true
91:50 - okay i'm just going to go through these
91:51 - ones i'm using the brute force method
91:54 - so if this is true then this chest
91:56 - contains no gold coins that's false
91:58 - so it has it has to be either the mix or
92:01 - this
92:02 - and if this is true chest a contains a
92:04 - mix then it has to be the mix
92:06 - okay this chest contains
92:10 - no gold coins is true so it can be the
92:13 - silver or the rock
92:15 - oh but this contains the nope so this
92:18 - one cannot be the false
92:19 - already uh if that's the false
92:23 - then this has to be the mix so uh this
92:26 - cannot be the fault so this one has to
92:27 - be true
92:29 - so let's say this one is the false
92:32 - well this contains the that can't be so
92:35 - if this is true this has to be false
92:37 - so this is true this so this has to be
92:38 - the false one i figured out the true and
92:40 - false
92:40 - this is the only possible this is the
92:43 - only possible scenario
92:46 - so now if this is true uh
92:50 - then this has to be this oh but it
92:51 - contains no gold coins
92:56 - so if this is true and this is true no
92:58 - one of these has to be false
93:02 - i i think the answer is going to be did
93:04 - i make a mistake here
93:08 - b people are saying b is false all right
93:11 - so these camp so first of all these both
93:15 - these both can't be true right it can't
93:18 - be
93:19 - that this contains no gold coins and
93:22 - this contain
93:23 - and we're saying that chest a contains a
93:25 - mix of gold and silver
93:26 - so one of these has to be false we
93:29 - already already said if this one is
93:30 - false there's no possible solution
93:32 - what if this one is false chest a
93:35 - contains a mix
93:36 - okay let's try it contains no gold coins
93:40 - so this could be either the silver coins
93:42 - or the rocks
93:43 - but these are true so this also has no
93:45 - gold so this one has to
93:46 - so either this has to be the silver or
93:48 - this must be the silver so this contains
93:50 - this one has to be a mix this can't be
93:53 - the mix
93:54 - so this could be all gold
93:57 - no gold the chest that contains only
94:02 - gold coins is labeled with a true
94:03 - statement
94:05 - no i i it's got to be zero
94:10 - i mean i'm maybe i didn't go through
94:12 - this as thoroughly as i needed to
94:19 - let's see if i can get one right today
94:21 - i'm going with zero
94:27 - ah i got it right
94:32 - there is only one chest with the false
94:34 - statement
94:36 - reading the statements of chess c and d
94:38 - it is clear that only one of them can be
94:39 - true
94:40 - didn't i say that about a and d
94:43 - well right that's also true anyway i got
94:45 - it right
94:47 - [Laughter]
94:52 - thank you everybody all right i got to
94:53 - take a short break i said i was only
94:55 - going to go until
94:56 - 10. but um what time is it now
95:00 - it is 9 30. so let me we're going to
95:02 - think i'm going to take a short break
95:03 - um you know if you want to sign up for
95:05 - brilliant.org go to brilliant. if you
95:07 - want to sign up for brilliant go to
95:08 - brilliant.org
95:09 - codingtrain um you can do that while i
95:12 - take a short break here
95:14 - um and um you know you could put your
95:16 - own answer or explanation to any of
95:18 - these and
95:18 - tweet it at me at shiffman i'd love to
95:20 - see it especially if you make a p5
95:22 - version of either of them
95:23 - yeah i will go let's try to get back
95:24 - let's see if we can get the youtube api
95:26 - working
95:26 - before i go um and uh what was it gonna
95:30 - say
95:31 - that's what i'll do when i come back and
95:33 - take after a break um
95:35 - yeah so sign up uh and you may have your
95:39 - breakfast
95:40 - um the chat something in the chat is
95:42 - telling me that video and voice
95:44 - is so delayed i don't know let me know
95:46 - if that's true for everyone
95:48 - um and i'm just gonna be doing a little
95:50 - like
95:51 - comment moderation here come on people
95:54 - uh thank you austin who got to it before
95:56 - i could
95:57 - um and
96:00 - um yeah so uh intermission starting now
96:04 - about five minutes everybody
96:12 - [Music]
96:22 - so
96:25 - [Music]
96:38 - [Music]
97:23 - [Music]
97:52 - [Music]
98:00 - do
98:04 - [Music]
98:42 - do
98:49 - [Music]
99:38 - do
99:41 - [Music]
100:17 - [Music]
100:20 - do
100:25 - [Music]
100:32 - [Music]
101:02 - do
101:05 - [Music]
101:16 - do
101:21 - [Music]
101:38 - hi everyone just a couple more minutes
101:40 - i'm trying to find the
101:43 - hue light for that lamp id
102:04 - [Music]
102:26 - so
102:33 - [Music]
104:12 - i'm still trying to find it
104:16 - i really want to find it it's coming i'm
104:20 - working on it
104:21 - uh
104:24 - [Music]
104:27 - okay here we go i think
104:38 - sensors
104:39 - [Music]
104:44 - lights let's see i can show you what i'm
104:48 - doing in a second here
104:53 - i've ah i've got it i've got it
104:56 - dimmable 18. i've got all the numbers
105:00 - hallway gotta find
105:05 - so close
105:18 - [Music]
105:26 - so close i'm looking through all the
105:28 - lights
105:33 - a little more music here here we go hold
105:35 - on
105:39 - this is me this is my intense
105:41 - concentration music
105:44 - i guess i can put my camera on i'm just
105:46 - i'm finding
105:50 - the id for this lamp just give me a
105:52 - minute here
105:53 - if i look at my q
105:57 - [Applause]
106:00 - [Music]
106:04 - what's the other one
106:16 - id number two all right everybody
106:21 - welcome back uh thank you for sticking
106:24 - with me here thank you to brilliant
106:26 - for their sponsorship of the coding
106:28 - train if
106:29 - we uh go to light id number two
106:34 - and by the way what i did is
106:37 - this is a function which uh i can just
106:39 - go to api.configurationgetall
106:42 - and then this will list every bit of
106:44 - information about all of the lights
106:46 - and i just looked up the id i i don't
106:48 - i'm just a little bit worried there's
106:49 - some private information in there there
106:51 - probably isn't
106:52 - um that's why i'm not showing it to you
106:53 - but i'm going to comment this out now
106:55 - and and they're there already you just
106:57 - saw a little bit of the
106:59 - of it i don't think there's anything in
107:00 - there um okay um there's the
107:03 - that's the local ip address of the light
107:04 - which i don't th of the bridge which i
107:06 - don't think
107:07 - will give you any information and now
107:11 - we're going to go to
107:12 - localhost 3000 and
107:16 - there we go gloria
107:20 - come here come here come here
107:24 - can you guys see her come on up can you
107:26 - just
107:27 - say hi there she is there's a little dog
107:29 - dog
107:30 - good girl i know you want to go for a
107:32 - walk we'll go for a walk soon
107:34 - okay i have to take her for a walk
107:37 - hopefully it's not gonna thunderstorm
107:39 - okay i already took her i took her at
107:40 - 6am this morning so it's about time
107:42 - getting close okay this is working it's
107:45 - not nearly as exciting as i thought it
107:47 - would be because
107:48 - this light isn't really showing up i
107:51 - can't get the
107:52 - uh i could as much as i thought it would
107:54 - be let's just let's just see if i can
107:56 - get both
107:57 - um so what would i do if i want to do
107:59 - light id2
108:01 - uh what if i do this light ids ids2
108:05 - and 5 let's just adjust the code
108:09 - to light state
108:13 - well i'm going to be and then i can do
108:17 - uh let i equal zero
108:21 - i is less than light ids dot length
108:25 - i plus plus i'm sure there's a nice four
108:27 - each or four of loop that i could use
108:30 - and then we could say light ids index i
108:35 - and let's see what happens here now are
108:38 - they doing both of them
108:39 - well what happened to the other one um
108:43 - what happened to the
108:44 - other one light ids
108:47 - length
108:51 - oh i didn't restart the server i forgot
108:53 - i'm not using nodemon there's a
108:55 - there's a node module called nodemon or
108:57 - node monitor which will restart the
108:58 - server
108:59 - light id is not defined uh
109:02 - where's that light ids
109:05 - light ids ids
109:13 - let's be lazy about this here oh no
109:15 - let's let's let's do it correctly let's
109:17 - do the same thing
109:18 - to turn the both on
109:24 - uh light ids index
109:27 - i all right come on everybody here we go
109:30 - very exciting moment here on the coding
109:31 - train
109:37 - now interesting there's a little bit of
109:40 - a delay
109:41 - right because it takes a minute to do it
109:44 - takes a
109:44 - millisecond to do one or the other
109:46 - what's cool is um what you can't see
109:47 - it's like it's also changing on my phone
109:50 - uh you can't really see that but like
109:52 - the app is like
109:53 - actually active there you go uh
109:57 - if i go like to like a dark blue see
110:00 - dark blue
110:01 - all the way to a red that's kind of cool
110:03 - and it's doing that too
110:04 - okay so the goal for today was maybe to
110:08 - actually
110:09 - get the youtube api to also control the
110:12 - lights
110:13 - um i think i'm going to allow myself to
110:14 - go to 10 30.
110:16 - um let me just send a little text to my
110:19 - um i wanted to also make a special like
110:22 - birthday i'm just not gonna get to that
110:25 - um but let's just see if i can at least
110:29 - get a kind of hello world thing
110:31 - going if i go back to my um
110:35 - to-do list here and i've got another one
110:38 - or two more live streams in me this
110:40 - month
110:41 - so i feel like i feel good about
110:45 - where i am with the hue lights for my
110:46 - projects um i want to do more with gpt2
110:50 - the twitter bot stuff is on this list as
110:52 - well although that's really going to
110:53 - come in the fall
110:55 - but there's plenty more i could do with
110:57 - the discord bot stuff
110:59 - but um i let's see if at a minimum i can
111:03 - get started
111:04 - with looking at the youtube api today
111:06 - and again this
111:07 - there's this is a major problem with me
111:09 - doing this in a live stream
111:10 - which is that i'm at serious risk of
111:13 - exposing
111:13 - some kind of um private key to
111:17 - communicate with youtube
111:18 - and do things like just like delete
111:20 - every video on my channel
111:22 - so i hope that no one watching would do
111:24 - that but i know that the internet is a
111:26 - scary and treacherous place so i'm gonna
111:28 - be really careful
111:29 - and try and in many cases just keep you
111:31 - in this view
111:32 - but um let's see how this goes so i have
111:35 - never
111:36 - used i don't know that's not entirely
111:38 - true uh
111:39 - i haven't anytime recently looked at the
111:41 - youtube api so this i'm really doing
111:43 - this fresh
111:45 - i mean one thing i could do is i could
111:48 - use a different youtube channel to
111:51 - experiment that's what i should do
111:53 - um cj you wanna let me use your channel
111:55 - no i'm just kidding
111:58 - so i wonder if i could
112:02 - create a channel under this google
112:04 - account
112:05 - which is just like it let's try that
112:08 - because i'm logged into the google
112:10 - account associated with daniel at
112:12 - thecodingtrain.com
112:13 - which is an email address you can use to
112:15 - reach me although i barely
112:16 - ever read those emails uh
112:20 - try info at thecodingtrade.com because
112:22 - that's read by other people who work on
112:23 - the coding train
112:25 - um second account another bus so let's
112:28 - see what happens if i just go to
112:30 - youtube right now like do i have a
112:32 - channel with this account
112:34 - it's funny i have premium with this
112:36 - account which is sort of funny but
112:37 - now i'm just realizing i have two
112:39 - youtube premium accounts
112:40 - but this is not like i'm subscribed
112:44 - this is i'm not the coach so this is
112:46 - good so let's see
112:47 - uh i do have a channel if i go to
112:50 - youtube
112:51 - okay hold on
112:54 - is this account a manager no
112:58 - perfect okay so i can freely show this
113:02 - to you
113:03 - because this is youtube studio this is a
113:05 - channel
113:06 - that has no as one subscriber and no
113:10 - videos let's go under videos
113:14 - no videos perfect
113:18 - so this is what i'm going to do this is
113:20 - much lower risk
113:22 - i'm going to and i could probably am i
113:24 - able to live stream
113:26 - from this channel probably not
113:29 - i probably haven't done enough
113:32 - to is it live streaming get
113:35 - started all right let's verify
113:38 - my account i'm text i'm going to run a
113:41 - like a simultaneous live stream from the
113:43 - webcam
113:44 - text me the verification code
113:48 - i'm putting in my phone number oh my god
113:50 - i just
113:52 - couldn't see it so not revealing my
113:54 - phone number this is good
113:56 - i'm getting the verification code
113:59 - hopefully got it
114:07 - submit okay my youtube account is now
114:10 - verified
114:12 - i'm going back to live
114:16 - streaming
114:19 - get started i mean i don't know
114:24 - okay oh ready and want whomp
114:29 - uh ready in 24 hours all right what if
114:32 - i so i won't be able to interact with a
114:34 - live chat
114:36 - today but that's fine i just want to get
114:37 - the basics maybe i should like
114:39 - upload at least one video
114:42 - so what i can do is open up like
114:46 - quicktime i mean i have open broadcast
114:48 - studio but let me just do it this way
114:50 - do movie recording we could try like the
114:53 - tom scott thing
114:55 - like oh my god i look terrifying
114:59 - um we could try the thing where
115:02 - uh we like based on the view count
115:05 - change the title or like
115:06 - comments or something so
115:10 - um let's see
115:14 - okay all right
115:19 - um
115:22 - all right okay let's record
115:25 - uh let's uh
115:29 - hello let's just use the microphone
115:33 - hello i don't know why there's no oh
115:35 - this is hello
115:36 - i don't know why there's no audio but i
115:38 - don't care oh and it just froze there we
115:40 - go now there's audio okay
115:46 - hello oh why am i getting
115:49 - audio feedback in my ear
115:57 - let's try this again
116:02 - hello hello okay better hello
116:05 - welcome to a test video no this is the
116:07 - camera
116:09 - hello and welcome to a test video now
116:12 - it's
116:21 - last chance gotta get this right
116:30 - hello and welcome to oh where's my train
116:33 - whistle
116:34 - shoot
116:37 - maybe i'll just read random numbers in
116:39 - this video
116:40 - where'd i put all that stuff
116:44 - this is how it goes on the coding train
116:45 - it takes me like an hour just to
116:47 - uh record my test video oh here it is i
116:50 - don't know where the whistle is though i
116:51 - lost the whistle
116:56 - here we go this is the last time i'm
116:59 - doing this
117:04 - all right comment yeah okay
117:12 - hello welcome to the first video ever on
117:14 - the coding train random number channel
117:17 - in this video i will read you a random
117:19 - number forty seven thousand
117:21 - five hundred and five thanks for
117:24 - watching everybody
117:28 - uh okay let's see do i need to trim off
117:30 - the beginning here
117:38 - all right let's play this
117:55 - oh the all right i can't do that one
117:59 - more time
118:00 - i'm like upset but what if this video
118:02 - like takes off in some weird way
118:06 - uh yes no these are these are that's not
118:08 - the official
118:09 - coding train train whistle that i use to
118:12 - make sound
118:13 - these are just uh test whistles for as
118:16 - member rewards but i lost access to my
118:18 - laser cutter so i can't make that
118:22 - all right we're going to do this one
118:24 - more time now that i've rehearsed this
118:28 - close anyway delete cancel delete
118:32 - this is ridiculou this is the most
118:33 - insane thing that i've ever done
118:36 - why am i paying so much attention to
118:38 - this okay
118:48 - okay here we go
118:52 - hello and welcome to the coding train
118:54 - random number channel
118:55 - in today's video i bring you the random
118:58 - number
119:00 - 14 622
119:03 - thanks for watching everybody
119:08 - all right that was much better let me
119:11 - just trim out the beginning
119:27 - okay now we save this video
119:36 - um and now
119:40 - we will go to
119:43 - um studio
119:46 - and we're going to upload this video
119:52 - uh where did i where did i save that
119:59 - here we go
120:05 - oh can i just drag it can i select it i
120:08 - don't know what's going on here
120:09 - okay we're uploading this video
120:12 - and we're calling this uh
120:15 - i forgot what the random number was but
120:18 - whatever
120:19 - uh this is a test uh
120:23 - next is not made for kids i guess
120:29 - next next
120:34 - publish public
120:38 - publish
120:41 - okay uh now we should be able to go to
120:45 - here
120:46 - and uh watch this video
120:50 - hello and welcome to the coding training
120:53 - all right so if
120:54 - people want to try to find this video
120:56 - you can find it uh here
120:58 - um and uh this is actually this is what
121:02 - i want to do
121:03 - i mean i'm not i've got just a half an
121:05 - hour left here i've really got to go at
121:06 - 10 30.
121:08 - um um but um
121:11 - what i would like to do is
121:14 - uh i could like auto upload videos for
121:17 - every random number in the book i'd have
121:19 - a million videos
121:20 - each just with me reading that there's a
121:22 - lot of really awesome popul
121:24 - possibilities here okay oh i forgot
121:27 - about the community contributions
121:29 - oh i'm the worst i'm the worst i'm the
121:32 - worst i'm the worst i'm the worst
121:34 - or maybe i'll do that at the end just as
121:37 - a quick
121:38 - um quick um
121:43 - quick thing to celebrate the end of this
121:45 - live stream okay
121:46 - so now youtube api node.js
121:53 - okay so use this wizard to create or
121:56 - select a project in the google's
121:58 - developer console
122:01 - so next live stream i'll be able to like
122:03 - play with the chat
122:04 - um and
122:08 - uh let's see i have read
122:11 - and agreed uh okay i read these before
122:14 - because i i've read these before agree
122:17 - and continue
122:20 - oh a new project named my project but
122:23 - what if i want to name it
122:26 - hello enabling api sorry
122:30 - okay uh select a project
122:33 - my project can i please make a new
122:35 - project i'll just fine that's fine
122:37 - can i rename the project it bothers me
122:39 - that it's called
122:41 - um called my project new project
122:46 - coding coding train
122:50 - test create
122:58 - okay
123:00 - and um
123:06 - all right now continue
123:16 - ooh free trial is waiting activate now
123:18 - to get 300 credit to explore google
123:20 - cloud products okay
123:22 - go to credentials so this is definitely
123:24 - the danger zone here for me to be like
123:26 - but i'm totally much less worried about
123:29 - it now
123:30 - i mean obviously people can wreak havoc
123:31 - on that channel but so let me just
123:33 - before i click go to credentials let me
123:35 - switch to here
123:37 - um okay doesn't look like
123:41 - anything yet that is i need to be
123:44 - worried about
123:44 - so find out what kind of credentials you
123:46 - need so i definitely want the youtube
123:48 - data api
123:50 - all right fine where will i be calling
123:52 - the api from
123:53 - web browser web server let's go with web
123:57 - server i mean i might like to do it from
123:59 - web browser but let's go with web server
124:01 - right now
124:02 - what data will be will you be accessing
124:05 - public data
124:06 - so this could be oops
124:09 - this could certainly be what i start
124:10 - with just public data
124:12 - but let's do the user data because
124:15 - ultimately i'm really going to want my
124:17 - specific user data
124:19 - um get your credentials
124:22 - what credentials do i need
124:26 - set up oauth consent screen
124:29 - okay boy what a pain this is so let's do
124:32 - this
124:37 - um oauth consent screen choose how you
124:40 - want to configure and register your app
124:42 - including your target users you can only
124:45 - associate one app with your project
124:50 - all right let's do this right now this
124:53 - will help
124:54 - so one of the advantages of me doing
124:55 - this which i really should switch my
124:57 - channel to this is i have a
124:59 - g suite the codingtrain.com organization
125:02 - the actual channel is just under one of
125:04 - my other google accounts
125:06 - but i think this will help me be
125:08 - protected
125:09 - because if i keep it with internal i
125:13 - guess that's what i'm guessing
125:17 - okay so let me hit create here oh my god
125:21 - this is seriously uh
125:24 - the coding train test
125:28 - is it going to make me do internal
125:32 - that's fine scope email profile ad scope
125:36 - do i need more scope
125:40 - i want youtube is that a scope
125:44 - yeah so i want youtube
125:48 - data i think i want all of this
125:55 - upload i'm going to select all the
125:58 - youtube stuff
126:03 - add okay add all the youtube stuff
126:07 - your current per minute token grant rate
126:10 - limit is 100 grants per minute
126:14 - okay that this seems fine i guess i'll
126:16 - use the defaults
126:17 - authorized domains
126:22 - uh that's probably something i should
126:23 - use
126:26 - uh let's just do save i'm gonna hit save
126:32 - anybody have any don't show your api key
126:35 - yeah yeah i know
126:37 - um okay
126:42 - okay
126:45 - got it this should be good let's go to
126:48 - credentials now
126:51 - create connection so this is definitely
126:55 - where uh let's see
126:58 - uh add credentials
127:02 - at the top of the page and select an
127:04 - email address enter a product name
127:06 - select create credentials select oauth
127:09 - client id
127:12 - select the application type other enter
127:14 - the name youtube data start
127:15 - api quick start okay download so i'm
127:18 - going to do this
127:20 - i'm going to follow these steps but i'm
127:22 - going to ver
127:23 - follow these steps just in this view i
127:26 - mean i'm still protecting the api key
127:28 - but i'm not as worried about it um
127:32 - so um i'm going to read to you what i'm
127:35 - doing
127:36 - add credentials select oauth consent
127:40 - screen oauth client id
127:44 - okay name uh
127:48 - enter the name youtube data api
127:50 - quickstart so let me do that
127:54 - so i did that
127:58 - and then what else does it want me to do
128:01 - select the application type other and
128:04 - click ok don't see
128:08 - that but
128:11 - um
128:21 - hmm i know maybe i'm going to need some
128:22 - help here
128:27 - uh highly recommend corey schaefer's
128:30 - video he made a really good video about
128:32 - this
128:35 - schaefer youtube i don't know why my
128:38 - caps lock is on
128:40 - python youtube api getting started okay
128:43 - i'm going to take a look at this
128:45 - uh thank you
128:49 - um but what i'm confused about
128:52 - here is
128:56 - i'm adding credentials to my i did that
128:59 - create a oauth
129:00 - i just refresh i don't know like maybe i
129:03 - need to hit refresh
129:04 - oh okay create
129:07 - okay great oh there we go client id
129:12 - uh uh there there's there
129:15 - there's this secret one that's great
129:18 - that i'm showing this to you
129:20 - let me let me regenerate it
129:25 - i'm sure there's i'm going to delete
129:28 - this one
129:29 - i'm trashing that one
129:35 - maybe you got it fast but i now deleted
129:37 - it
129:39 - and then i'm going to do create
129:40 - credentials again oauth client id
129:43 - uh web application
129:47 - uh youtube data quick start api create
129:52 - and now i've got it and
129:56 - uh what i'm gonna do okay so you can't
129:58 - i'm gonna i'm
129:59 - happily gonna bring this back because
130:01 - you can't see the full thing and i'm
130:03 - also gonna hit download here so this is
130:04 - what's important
130:05 - i think there's there's the client id
130:07 - there's also the client secret so even
130:09 - with the id
130:10 - you wouldn't be able to hack into the
130:11 - channel but i'm gonna click download
130:14 - so now everything in this file
130:16 - clientsecret.json
130:17 - i definitely
130:19 - [Laughter]
130:22 - i definitely don't want you to see it
130:23 - let's trash this one i don't know what
130:25 - just showed up on preview there
130:27 - but let's delete it and i'm going to
130:30 - make another one
130:31 - i'm going to make another one and
130:32 - download it without showing you okay
130:34 - boy this is very challenging create
130:36 - cadentials
130:38 - oauth client id uh i'm going to say web
130:41 - application
130:42 - uh youtube data api quick start
130:46 - create uh okay
130:50 - download i now have that file which i am
130:54 - going to really really attempt to not
130:56 - show you
130:59 - and i'm going to close
131:02 - this
131:05 - so hopefully now
131:09 - i have my
131:12 - file so i should be able to create a new
131:14 - project
131:22 - just calling this youtube api test and
131:25 - i'm going to go into that
131:29 - let's make a node project
131:33 - and let's follow these instructions so
131:36 - npm install
131:37 - google apis i don't you don't need the
131:39 - save anymore
131:44 - um okay and npm install google auth
131:50 - library
131:52 - um then i want to hopefully
131:55 - uh without
131:59 - showing you i want to
132:02 - um let me just let me deal with this
132:05 - client
132:06 - secret file
132:12 - so i've got my client secret file in
132:16 - the youtube api test so
132:19 - just to show you i have the client
132:21 - secret in this file clientsecret.json
132:24 - which i will not be showing you
132:26 - i am now going to um here
132:30 - uh open up the code and not
132:34 - click on client secret and not click on
132:36 - client secret
132:37 - but just to be sure i'm going to go back
132:39 - to here
132:40 - i'm going to create a new file called
132:43 - index.js
132:45 - which that is the file i'm editing not
132:47 - client secret
132:48 - not client secret not client secret
132:52 - now let's go i don't know let's just
132:54 - copy paste all of this
132:55 - oh my god seriously
132:59 - this is the quick start it's a lot of
133:01 - code here let's copy all this
133:03 - well i'm going to have to really parse
133:05 - through this to understand it
133:07 - better um i think this i'm having a real
133:11 - hard time reading my code with the font
133:13 - this big
133:14 - so let's go to like 28
133:18 - which i think this is still plenty big
133:20 - for people to see but it's gonna be a
133:21 - lot easier for me to look at right now
133:24 - um so i don't know i'm just gonna try
133:25 - running this
133:34 - client secret credentials installed
133:36 - client secret so how come
133:38 - i didn't get that
133:42 - where is it trying to get it from
133:47 - where is it loading it
133:54 - credentials oh read file client
133:57 - secret.json isn't that right though
134:05 - client underscore secret
134:08 - why would this not have worked
134:14 - [Music]
134:23 - i've got everything here
134:28 - this
134:32 - hold on let's
134:36 - let's comment out
134:45 - let's um
134:49 - [Music]
134:50 - content well i don't want to console log
134:53 - the content
134:54 - because then you're going to see it
134:59 - is there a directory that it's like
135:01 - reading oh token directory
135:04 - token path youtube node.js
135:08 - quickstart.what but all i'm trying to
135:11 - read is this file right now
135:14 - like i know dot credentials
135:18 - hold on let's just make sure it's
135:19 - reading the file
135:23 - okay it's reading the file file so it's
135:26 - something oh so
135:29 - youtubenow.jsquickstart.json
135:30 - and you need a dot credentials folder
135:34 - there's i must have missed a step
135:46 - if modifying these scopes delete your
135:48 - previously saved credentials at dot
135:50 - credentials how come i don't have this
135:54 - file
135:59 - authorize read file token path
136:09 - what did i miss
136:18 - um
136:21 - there's someone's uh maida oh
136:24 - cj is telling me i made a write-up of
136:27 - how to get live chat messages
136:30 - i do not use the google npm module just
136:32 - http requests oh that's cool for me to
136:34 - see
136:35 - okay so i will look at that later but
136:37 - i'm going to um
136:41 - i want to get this working
136:44 - but i'm confused why what
136:48 - it doesn't explain what this file is
136:51 - and why there's a dot credentials
136:57 - store i mean
137:00 - i got an error let's try this
137:04 - bummer
137:07 - i thought maybe it would like say what
137:09 - some of the common errors are
137:12 - i just i'm so confused
137:17 - um
137:20 - nobody is telling me is there a download
137:23 - there is a download
137:25 - but it's just this file
137:31 - it's just this file api samples
137:36 - but like what is this file it's not i
137:39 - don't understand what this file is
137:43 - i mean it's going to create this right
137:46 - it should be creating that file
137:50 - let's see what the actual error message
137:52 - i got is i didn't look at it too closely
137:55 - so let me put this back in
138:01 - cannot read property client secret of
138:03 - undefined
138:05 - index line 33 okay so let's actually
138:11 - authorize oh okay so that
138:15 - all right there's something wrong with
138:16 - the file okay
138:19 - um let me
138:22 - um let me go back to here and i'm going
138:24 - to look at that file client secret
138:29 - client id oh it's under web
138:33 - so i think the file is formatted
138:35 - differently than the tutorial
138:37 - that's what it is credentials so hold on
138:40 - i i know what to do here
138:42 - this is super annoying because the the
138:44 - example is out of date
138:46 - and i can't show it to you without yeah
138:49 - so it's not credentials dot installed
138:53 - client secret it's
138:55 - credentials.web.clientsecret
138:58 - um so the example is wrong
139:02 - and i just need to make sure i don't
139:05 - show any of this again
139:09 - so let me go back to here it should be
139:11 - credentials.web
139:14 - web and web i think there's a redirect i
139:17 - didn't actually check hold on
139:25 - back to here let me look at
139:28 - client.secret again
139:30 - web what what is this one looking for
139:32 - it's looking for
139:34 - web dot redirect uris
139:38 - and i do not have that i didn't set one
139:43 - up so maybe it won't care
139:47 - let's see if it doesn't care
139:50 - like this is no
139:58 - so and let me close this oh the rain is
140:00 - starting
140:01 - okay so uh what i did here we're gonna
140:04 - see if this fixes it
140:05 - is it's actually stored um in the file
140:08 - under
140:08 - dot web um i could read i could have
140:11 - renamed the json file but i'm reading
140:13 - and then i'm just i don't have a
140:14 - redirect so i'm going to see what
140:15 - happens if that's left undefined
140:19 - and then cj is also telling me
140:23 - that the method does not require oauth
140:25 - and just requires an api key
140:27 - which i like so i probably should have
140:30 - looked at that in advance
140:32 - and maybe i could uh go look at that but
140:34 - but
140:35 - now that i've got not very much time
140:37 - left let me um
140:39 - and i haven't even i didn't get to
140:41 - making a
140:42 - parrot p5 sketch maybe i'll maybe i will
140:45 - though
140:46 - really quickly before i go let me just
140:47 - see what happens here
140:50 - token path is not defined
140:55 - oh i why did i uncomment these
141:02 - okay uh authorize
141:05 - at this url
141:12 - missing required parameter redirect uri
141:16 - what can i just make that the
141:17 - codingtrain.com
141:19 - um so can i just make this
141:31 - can i just do that
141:37 - redirect uri mismatch does not match the
141:40 - one
141:41 - all right so i've got to go actually add
141:42 - that in
141:46 - wow this is crazy um
141:50 - where was i console
141:54 - um let me just go back to here for a
141:56 - second
141:57 - wow this is what a nightmare uh
142:00 - so if i go back to this one
142:04 - um and i am adding a redirect uri
142:07 - which is just the codingtrain.com
142:13 - so just so you see i i can't show this
142:16 - to you because it's got the client id
142:17 - and the client secret on this page
142:19 - but i'm just going to show you very
142:22 - briefly what i'm doing
142:24 - so i'm adding an authorized redirect uri
142:26 - here
142:27 - and hoping that that does the trick
142:40 - oh no okay so hopefully that does the
142:43 - trick
142:45 - um and let me go back to
142:47 - [Music]
142:48 - um and close this page
142:55 - and
142:59 - let me go back to the code
143:16 - uh
143:19 - this is so sad
143:22 - the redirect uri in the request does not
143:25 - match the ones
143:25 - authorized to update the authorized
143:28 - redirect uris let me go here
143:31 - and go directly to this link
143:42 - it's there it's an authorized redirect
143:46 - uri
143:50 - look there it is it's there
143:54 - like does it want me to have one that's
143:58 - like
144:02 - without that
144:09 - of course
144:20 - now i have both of them you're using the
144:23 - wrong o
144:24 - auth flow you're currently using the one
144:25 - that expects a user to sign into google
144:27 - account
144:27 - the redirect url sends the verification
144:29 - code to your server and the server
144:32 - oh you need to redirect to localhost
144:34 - blah blah whatever okay
144:46 - hmm
144:51 - oh i see maybe i need to actually do
144:53 - something for real
144:58 - it can't contain url fragments relative
145:01 - paths or wild cards and can't be a
145:02 - public ip address
145:05 - to this path
145:10 - so it needs to be a path to the server
145:20 - if you just want the youtube api you
145:21 - don't need oauth
145:24 - and i guess that's what i'm learning it
145:26 - needs to be a url from which the request
145:28 - is made
145:33 - so so it just could be like in other
145:36 - words it should just be something like
145:45 - like this is this right
145:53 - now or it has to be localhost is what
145:58 - a 60 is telling me remove the last slash
146:01 - oh oh must be http or https
146:06 - okay let's just try this then
146:17 - let's try adding this as well
146:23 - and see what happens okay
146:30 - so let's see if this if without the
146:34 - slash if that fixes it i know i'd
146:38 - ah
146:42 - okay
146:43 - [Music]
146:47 - this will allow the coding train test to
146:50 - view your youtube account
146:54 - you may be sharing sensitive info with
146:57 - this cyber app or with
147:00 - the people watching that i don't know
147:01 - who they are okay allow
147:04 - oh it just redirected me to here okay
147:06 - perfect that's what i wanted it to do
147:08 - and i could get all this nonsense stuff
147:10 - which
147:11 - probably now i'm exposing to you in a
147:14 - way that i shouldn't
147:15 - whatever good luck to you
147:18 - oh enter the code from the page here uh
147:23 - how come it didn't give me the code
147:26 - try that again
147:31 - don't i get a code
147:36 - don't i get a code
147:46 - where's my code allow
147:55 - is it up in the um hold on
148:00 - allow the oh here's the code i've got
148:04 - the code
148:04 - i'm just not going to show it to you got
148:07 - it
148:09 - i've got it in the url
148:12 - so there we go and now i'm going to
148:15 - enter that
148:16 - code here
148:20 - i'm not showing this to you i'm entering
148:22 - the code
148:23 - token stored um
148:32 - oh this is funny it it actually like the
148:35 - channel it's using is google developers
148:39 - that's funny so i just want to um
148:43 - i want to show you the code
148:49 - so hold on a sec just give me a second
148:54 - so what it did is
148:58 - it actually worked the token was stored
149:01 - to this
149:03 - uh project am i not on the desktop
149:05 - that's weird or
149:06 - just put it there and then the the thing
149:09 - is it's like
149:10 - using the google developers channel so i
149:12 - think i need to change the channel id
149:15 - but this was good enough i've
149:18 - authenticated so what do i do now
149:22 - i have my token was this just to get a
149:25 - token
149:27 - and now oh and now i got stuff i did a
149:31 - call
149:32 - channels list for username
149:39 - snippet content detail statistics so
149:42 - this is like
149:43 - now i have this off now can i
149:47 - can i just do something now to load that
149:49 - token every time
149:51 - right i don't need to go through this so
149:54 - what do i do now
149:57 - [Music]
150:02 - um
150:04 - got people are um what do i do now
150:08 - basically what your um channel id
150:12 - yeah thank you around thing who posted
150:15 - that
150:16 - um but it was not able to be shown
150:19 - um all right let me look at back at the
150:23 - instructions
150:26 - run the sample okay it worked
150:29 - except i had to change something okay
150:31 - notes
150:34 - authorized information is stored in the
150:36 - file system so
150:37 - subsequent executions will not prompt
150:39 - for authorization oh
150:40 - so if i do this again if i run this
150:43 - again it's
150:44 - it's just gonna work ah perfect okay the
150:47 - code example is built
150:48 - to know okay great okay we're good
150:51 - everybody
150:53 - um now what i'm going to do i just i
150:55 - just want to get my
150:56 - channel so i should be able to just
151:01 - the authorized stuff is done doesn't
151:03 - need a token
151:04 - get channel where is get channel being
151:06 - called
151:09 - here so once it reads the file and
151:12 - authorizes it goes to get channel
151:14 - so this i can call just like i'm going
151:16 - to call this like
151:17 - do stuff
151:22 - and i'm going to call this uh
151:29 - get channel do stuff
151:34 - um and we're i'm gonna return to this in
151:36 - a future live stream
151:38 - let's just see if i can get four service
151:41 - search
151:41 - so i'm service google youtube so now
151:44 - this this is where i need to look at the
151:46 - api docs
151:47 - because i want to do other stuff here so
151:50 - where are those docs
151:55 - look yeah yeah i got that okay um
152:00 - 1033 google api so
152:04 - data api reference documentation
152:08 - so i should be able to do all this stuff
152:10 - now right
152:11 - delete download insert
152:15 - list
152:23 - so members i just want to get the that's
152:26 - actually one of the things i want to do
152:27 - is get members search
152:29 - subscriptions like how videos list
152:32 - let me just see if i can get that video
152:35 - list by video id
152:37 - so v3
152:41 - service
152:45 - oh but i'm using the official this is
152:48 - weird
152:48 - i just i just wanna i could just like
152:51 - request stuff
152:52 - using a get request which is what i want
152:54 - to do
152:59 - all right let's just see what is the
153:01 - package i'm using
153:03 - google apis
153:08 - does that have documentation
153:13 - i think maybe cj might be right in that
153:16 - it makes more sense
153:18 - for me to
153:23 - like just use requests but
153:33 - specifying request body
153:37 - i'm so confused i'm so
153:40 - confused google youtube
153:45 - so can i call service.videos
153:49 - is that what i want to do if i'm like
153:51 - here
153:55 - list by video id
154:00 - try this api
154:06 - but uh all right list by video id
154:09 - and the video id is
154:18 - that's the video id auth part
154:22 - 4 username so i don't want for user name
154:25 - i want
154:28 - part id right
154:33 - id this
154:37 - okay and then console log
154:42 - respon let's see videos let's call this
154:44 - videos
154:47 - no video found and let's just console
154:50 - log
154:52 - uh videos
154:56 - let's see if this works yeah i think i
154:59 - would prefer to do this honestly with
155:01 - just like
155:02 - fetch because this is really confusing
155:05 - me but i'm
155:06 - i'm curious to see what happens here oh
155:10 - yeah look at that okay
155:16 - so that worked this is the video right
155:20 - channel id title descriptions
155:23 - right this is that video duration
155:26 - license content view count
155:28 - like count okay we're getting somewhere
155:33 - i just want to get okay this is pretty
155:34 - good now can i
155:36 - like do i have permission to like change
155:40 - its i'm just doing the tom scott thing
155:43 - now because that's all i can think of
155:45 - can i set something
155:48 - how do i video insert update
155:53 - i need to do a put what
155:58 - off youtube partner
156:01 - do i have these scopes i think i have
156:03 - these scopes set
156:06 - request body snippet
156:09 - set values for these properties
156:10 - snippet.title
156:14 - try it i can't do that
156:23 - so what i want to do is
156:27 - set the
156:33 - snippet.title is that what i want to do
156:39 - and execute no ah i don't know call
156:45 - show code
156:51 - part equals snippet.title author
156:56 - yeah this would be so much easier based
156:57 - on what i'm seeing here to just use
157:01 - and this is using something else this is
157:04 - like
157:05 - is there a node one here
157:08 - there's no node one
157:14 - all right i'm gonna have to i'm gonna i
157:16 - really probably need to investigate
157:18 - this
157:24 - i'm going to need to investigate this
157:28 - i can set values specify a value
157:33 - and how do i set i don't know how to use
157:35 - a put
157:37 - with this
157:41 - service videos
157:45 - list but i'm not on list i'm on
157:51 - yeah i am on update service videos
157:54 - update
157:55 - can i just call service videos update
157:58 - and the id part
158:02 - like what happens if i just call update
158:04 - i'm just curious
158:08 - insufficient permission well
158:12 - all right um all right everybody
158:16 - uh if you want a quick win you can make
158:18 - a get request to that last url i shared
158:22 - to get the latest live messages
158:26 - i don't know what that means
158:33 - uh la oh but
158:36 - oh this is just like okay i see oh and
158:39 - my api key
158:42 - uh add my api key
158:47 - i'm live streaming you know okay
158:53 - i'm trying to finish up okay
158:57 - i gotta finish up everybody
159:01 - um where do i get my api key
159:09 - uh
159:14 - so your api key is in my client secret
159:18 - or in that credentials quick start
159:21 - i'm going to use your script the problem
159:24 - is i need to get it
159:26 - can you put that in a um
159:30 - let me go to cj's gists all right we're
159:32 - going to try to get a quick win here
159:34 - using cj's for cj's help
159:39 - uh w3 cj
159:45 - look at this okay
159:50 - uh request a list of live
159:53 - events
159:56 - okay and then
159:59 - use the video id to request live
160:01 - streaming details
160:05 - oh you've actually put this in here
160:06 - already
160:09 - request live chat messages using this
160:12 - active
160:13 - live id oh my god
160:17 - i'm terrified here
160:20 - um so which one is it this one
160:28 - um next page let's try this okay
160:32 - so this is the url i want but i need an
160:34 - api
160:35 - key so i must have an api key somewhere
160:39 - i have so many credentials i'm
160:41 - overflowing with credentials
160:45 - where do i find it let me go to my
160:47 - console hold on everybody
160:50 - i'm going back to my console and going
160:52 - to my credentials
160:54 - api key i can create one okay i'm
160:56 - creating i'm creating an api key
160:58 - got it i got one okay uh
161:02 - restrict your key to prevent author
161:04 - unauthorized use
161:06 - ah let's not restrict it i'll just
161:07 - delete it eventually
161:09 - okay so now i'm gonna put it in
161:18 - ah look at this it's working it's
161:21 - working okay thank you cj
161:23 - i'm gonna put this into my hue light
161:26 - code
161:29 - okay so we're gonna use node we're gonna
161:31 - we're gonna we're gonna speed through
161:32 - this i'm going back to the hue light
161:34 - thing
161:35 - uh where's my hue light
161:38 - so um
161:42 - what i'm going to do in this
161:45 - is i'm going to write a function
161:51 - pull youtube
161:55 - and i'm going to uh
162:00 - hold on everybody um i'm going to put my
162:02 - api key
162:03 - in my env file so just give me a second
162:19 - okay so now that's in dot env
162:24 - so um
162:27 - so
162:31 - uh process.env dot
162:34 - i forgot what i called it youtube api i
162:38 - think that's what i called it so i've
162:40 - got my api key
162:43 - oh whoops um and
162:46 - um then i just need to get cj's
162:50 - oh no that's fine you might have seen
162:51 - some
162:53 - i ah it's got a dot dot dot in there i
162:56 - don't think you could get it
162:59 - this is the url that i want copy
163:02 - link address it's so hard to do this
163:06 - url equals and then
163:10 - uh api key
163:15 - so that's that what did i call it
163:21 - all right fine we'll make it capital
163:24 - and i just want to make sure it's called
163:26 - in uh dot env it's called yt api
163:33 - it is
163:37 - okay we're getting close to getting a
163:40 - win here
163:42 - um so now
163:45 - what i will do is i need to use
163:49 - node fetch right node
163:52 - fetch i feel like that's a thing i use
163:56 - um write node
164:00 - fetch okay yeah what
164:03 - will it
164:06 - okay i can use native prime i think this
164:08 - will work so
164:09 - uh mpm oh hey hold on
164:15 - npm install node
164:19 - fetch and then
164:23 - we're going to require it
164:28 - let's just
164:34 - um
164:37 - and then i'm going to say
164:40 - response equals await
164:44 - fetch url
164:47 - json await
164:51 - response.json console.log
164:55 - json so this should give me
164:58 - a bunch of recent uh chat messages
165:04 - i really gotta go here i can't believe i
165:06 - i just like can't stop live streaming i
165:08 - have a problem
165:10 - we're just gonna get the lights to
165:11 - respond to one chat message and then
165:14 - like leave in a blaze of glory
165:21 - did i not call poll youtube and also why
165:24 - does it keep
165:25 - console logging yeah that ip address
165:30 - i don't we let's not worry about the
165:32 - color just pull
165:34 - youtube
165:38 - cannot access fetch before
165:40 - initialization oh
165:42 - silly me
165:53 - all right live
165:56 - chat messages happening
166:01 - use like dislike ratio to control the
166:03 - brightness
166:05 - oh so ah i would gladly if somebody
166:09 - because i'm really trying to like
166:12 - what would be my um
166:15 - what would be the url for getting
166:18 - likes to likes
166:23 - to for brightness
166:26 - um so i'm just going to look for i'm
166:28 - going to look for numbers
166:31 - let me just go with this chat message i
166:34 - like the idea if somebody can quickly
166:36 - create what the um
166:39 - url call is for like likes and dislikes
166:41 - of this video
166:43 - that would actually be awesome um
166:47 - uh yeah the air conditioner went off uh
166:49 - it's set to go off when it reaches a
166:51 - certain temperature
166:52 - so if i just look at these messages
166:55 - there i guess there's probably it's
166:56 - probably under items
166:58 - kind items and snippet is probably where
167:04 - so let me just see um this is high risk
167:07 - here but
167:07 - um let me say console.log
167:11 - items
167:14 - uh index zero
167:18 - uh dot uh snippet
167:21 - so let's see what happens here
167:27 - display message did somebody write this
167:29 - as the
167:30 - message yeah
167:34 - who is cj great okay so i'm just gonna
167:36 - look for any messages
167:38 - that have that have a number in it
167:42 - um and that'll be the hue i'll set that
167:45 - to the hue
167:46 - so i'm gonna now look through um
167:49 - let
167:52 - let me just iterate through all the
167:54 - messages
167:57 - so let's just do let messages
168:00 - equal json.items
168:04 - and let's let's go through all of the
168:14 - messages
168:18 - um and then i'm going to say console.log
168:23 - no no so let txt
168:26 - equal messages dot uh
168:32 - uh index i dot snippet
168:36 - dot display message i think is fine
168:41 - right yeah
168:42 - display message i'm going to say dot
168:45 - trim just to trim any white space and
168:48 - then if
168:49 - um like i can quickly write a regular
168:52 - expression like
168:54 - uh dash like
168:58 - uh three digits uh one to three
169:04 - digits dot uh exec is that no or match
169:09 - like is it like this like um
169:13 - test i think i think this is
169:16 - ah hold on ah
169:20 - help get me out of this
169:23 - um like if i have a string
169:30 - and if i say s1 dot test isn't that um
169:36 - that's not a oh the regular expression
169:39 - you tested on the string
169:44 - that's it okay so i can say if
169:47 - te uh if
169:52 - if i get a digit but one to three digits
169:55 - so
169:55 - a value between 0 and 255 loosely
169:59 - uh dot test text
170:02 - then um val equals let me convert that
170:06 - to a number
170:10 - and then oh are you serious what the
170:13 - please don't do this to me formatting
170:16 - thing
170:17 - don't format the regular expression
170:22 - hold on fine you know what any
170:26 - any digit will do
170:29 - what all right hold on a
170:32 - format on save
170:36 - turn that off
170:41 - val equals number.text let sum
170:44 - equals zero sum
170:49 - plus plus uh
170:54 - let count equals zero
170:58 - you know sum plus equal val
171:01 - count plus plus average
171:05 - equals sum divided by
171:08 - count and then
171:11 - [Music]
171:12 - uh new light state
171:16 - what was the one with hue yeah
171:24 - let's set the uh
171:29 - now we're going to
171:37 - turn the light on saturation
171:41 - brightness uh
171:44 - average oh hugh
171:48 - average okay everybody
171:54 - let's just see why is this giving me
171:56 - like it doesn't like oh because it
171:59 - does it really need a parenthesis around
172:01 - this ah it wasn't like recognizing that
172:03 - as a regular expression
172:05 - so if your message in a minute just
172:07 - contains
172:08 - a digit try to keep it between 0 and 360
172:11 - please
172:12 - all right i'll say that if val is
172:15 - greater than
172:16 - is greater than or equal to zero
172:20 - and val is less than or equal to 360.
172:28 - oh it won't auto format for me anymore
172:30 - i'm gonna
172:31 - all right so now we're gonna see
172:35 - if uh let's just
172:39 - see if it's finding messages and then
172:42 - let's just see if this works so take a
172:43 - look at the lights behind me
172:45 - i'm giving everybody a minute to put
172:47 - their numbers in
172:50 - ah 255 is not within a loud limit oh
172:53 - it's between 0 and 100.
172:55 - okay everybody oh no that's for
172:58 - saturation and brightness
173:00 - no wonder i had those as 100. okay let
173:02 - me try this again
173:07 - cannot read property lights of undefined
173:09 - oh i i didn't uh
173:11 - init lights i need to await
173:15 - emitting the color uh
173:18 - async function this is a very silly
173:25 - thing that i'm doing
173:29 - is init color
173:37 - it isn't okay great so now it should
173:41 - init the color
173:44 - pull youtube chat the chat's going crazy
173:47 - good thing i don't have slow mode on
173:49 - and get an average hue and set it
173:52 - let's see if this works
173:58 - why is it listening in port 3 oh no
174:04 - hold on
174:10 - am i getting here no
174:15 - a weight in it color
174:23 - why is it stuck
174:31 - am i just being impatient
174:44 - oh i didn't call go i didn't call the
174:47 - function go
174:48 - here we go everybody now it's really
174:50 - happening
175:00 - no
175:04 - is my hue thing stopped working
175:15 - why oh i just want this to work
175:18 - [Music]
175:20 - i was getting these messages before hold
175:22 - on let's pull youtube let's get rid of
175:24 - that
175:27 - yeah that's working so what's wrong with
175:29 - my
175:30 - init
175:36 - what happened to this function
175:44 - did somebody disconnect the hue bridge
175:48 - well i wasn't looking
175:53 - light id is not defined okay now that
175:55 - worked that was weird
176:04 - light five okay here we go everybody
176:08 - here comes
176:15 - uh ultra
176:19 - it works it works i was like why did it
176:23 - get these
176:24 - because uh it the test is like it just
176:28 - has to find it in the
176:29 - so there is a bit of a flaw here which
176:32 - is that
176:33 - and let me just fix this real quick
176:37 - pull youtube pull youtube uh
176:40 - i'm gonna say it has to match the
176:42 - beginning
176:43 - or is that an end is it like this
176:49 - i think it's this okay
176:58 - not a not an n is not a parsable partial
177:01 - number
177:02 - is that is oh it must be the other way
177:06 - around this is the beginning of the
177:07 - string
177:09 - and this is the end
177:13 - yes it's still red let's see what the
177:19 - what the average value is
177:22 - so this is working console.log
177:27 - average
177:30 - all right so now
177:34 - can everybody do what's um
177:40 - q value three well
177:45 - the average was 80.
177:50 - 73. can we try to get the number up
177:54 - can we try to get the number up like
177:56 - everybody do like 360 360 360.
178:00 - well that would be red again
178:08 - it's not changing q value
178:16 - of
178:28 - actually let me just go here sorry i
178:30 - forgot i have my own color picker
178:44 - so
178:49 - let's see if we can get to like
178:52 - green should be like 124.
178:55 - let me just hard code it in
179:05 - it set it to red
179:15 - no matter what i do
179:32 - that's 11. okay everybody we know this
179:40 - works
179:54 - so
180:04 - all right we're going to set it to a
180:05 - blue amount
180:08 - let's just see
180:16 - okay that works now something is wrong
180:18 - with my
180:20 - range of the hue values what is the
180:23 - range hold on this is the last thing i
180:35 - oh my god i've lost my mind here i'm
180:38 - sorry everybody i'm not i'm i'm gonna be
180:40 - like
180:49 - oh that's right it's between zero
180:52 - and six five five three five
180:56 - no wonder
181:00 - oh my goodness
181:04 - the my discord chat wasn't scrolling
181:09 - my discord chat wasn't scrolling i
181:11 - didn't realize there were new messages
181:14 - okay oh i had the people were giving me
181:16 - the answers
181:17 - so okay okay new policy here
181:20 - this is the maximum number we're gonna
181:23 - this is gonna work
181:35 - new policy get your numbers in people
181:41 - get your numbers in between
181:44 - okay i could also just pick a random
181:46 - number here this is it this is the end
181:48 - get your numbers in everybody get your
181:52 - numbers in
181:56 - get your numbers in we are about to sign
181:58 - off the coding train for
182:00 - the day successfully having gotten
182:03 - the average number from the youtube chat
182:07 - to set the lights behind me
182:11 - here we go everyone here comes
182:15 - in three two one
182:19 - go 172.166 which is right can we get
182:24 - this number up
182:24 - come on people let's get this number up
182:29 - oh by it's just hiding all the messages
182:34 - ah cj went live a couple of minutes ago
182:36 - perfect okay everybody
182:40 - so everyone laughs
182:43 - we're just getting red uh we know this
182:45 - works i wanted to see a different color
182:48 - but that'll
182:48 - have to wait so uh coding dot garden
182:52 - everyone head over to visit
182:56 - coding garden on twitch
183:00 - um we're watching this ad now all
183:04 - together let me at least mute the sound
183:07 - we're gonna pull up coding garden stream
183:16 - all right this is like an accidental
183:20 - let's let's just say thank you all the
183:22 - people that were involved in that hype
183:23 - train
183:23 - first of all code uh where's dole cj's
183:26 - hair is green
183:27 - and thank you very much which is amazing
183:31 - there were many people that subscribe
183:32 - that is amazing and when i was not
183:33 - streaming all right
183:34 - so uh i'm i'm i'm broadcasting cj's live
183:38 - stream right now and hopefully everybody
183:40 - will
183:41 - always the regular expression was set to
183:42 - three minutes okay
183:44 - thank you with the almighty aaron
183:46 - murdock thank you for those hundred bits
183:47 - element here thank you for the two month
183:49 - resub what's up all right we're gonna
183:50 - try this one more time very much clink
183:52 - 50 two
183:53 - twitch prime resub i appreciate you try
183:54 - this one more time
183:56 - took the time out of here yes yes
184:00 - trains for that uh tier 1
184:05 - all right everybody i gotta go
184:08 - thanks for joining for this live stream
184:09 - stay tuned i guess let me mute cj
184:12 - um let me
184:16 - see h talking in my ear now so let me
184:18 - also mute
184:19 - uh here um go check out codegarden
184:23 - on uh twitch um for your streaming needs
184:27 - of today
184:27 - i'm gonna go have a a day here at home
184:31 - celebrating my daughter's birthday if
184:32 - you make a p5.js sketch
184:35 - that has anything to do with parrots um
184:38 - her name is olympia you want to wish her
184:39 - a happy birthday you can tweet that at
184:41 - me
184:41 - at schiffman leave it as a comment in
184:44 - this video
184:44 - archive and i will see you all maybe
184:47 - next friday
184:49 - morning i'm going to do an i'm going to
184:50 - follow up to do a bit more of this stuff
184:52 - with the youtube api because i would
184:54 - like to get a little
184:55 - further with it all right so
184:59 - see you all and um and
185:02 - and thank you his hair is the coding
185:05 - garden yeah
185:06 - okay uh goodbye everyone
185:09 - um i'm gonna take you out with a little
185:12 - bit of
185:17 - follow cj well heisenbrock with the
185:20 - twitch friend sub thank you very much
185:22 - heisenbrock
185:23 - uh and also uh dave hall online with
185:26 - the the uh theresa so many resubs
185:30 - chris thanks so much uh this is great
185:34 - um i've had affiliate enabled on my
185:36 - channel for i guess three months now so
185:38 - if quite a few people are renewing and i
185:39 - appreciate you all nova script thank you
185:41 - for that follow
185:42 - action twitch thank you for the follow
185:44 - baxteria thank you for the follow
185:46 - pawn repeat thank you for that follow
185:47 - diploidle thank you for the follow
185:49 - all grave thank you bananas as always i
185:52 - always forget that this stop
185:53 - stop it stop this stop i'm gonna do this
185:56 - stop this stop i'm gonna do this this
185:57 - stop this stop get stuck
186:04 - [Music]
186:33 - [Music]
186:40 - this dot
186:41 - [Music]
186:55 - of this dot song never forget this dot
186:58 - [Music]
187:08 - somebody
187:10 - i'm going to say once again here we go
187:19 - [Music]
187:23 - it's look forward to cartesian
187:31 - [Music]
187:36 - coordination
187:42 - autotune and the internet will fix that
187:44 - for me
187:45 - [Music]
187:49 - see it with me
187:53 - [Music]
188:11 - [Music]
188:14 - song