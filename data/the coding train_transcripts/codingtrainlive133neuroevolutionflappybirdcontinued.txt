00:03 - good afternoon good evening good morning
00:07 - good day good day I say good day this is
00:12 - the coding train on a Wednesday
00:15 - I think it's Wednesday today as you
00:17 - might remember if you watched last
00:19 - Friday that I was not then I said I
00:23 - would not be available this Friday which
00:25 - is still true and so instead the Train
00:29 - hoped a couple days early this week I
00:32 - had I noticed in my schedule four
00:35 - o'clock six o'clock window of time Here
00:38 - I am live streaming on the coding train
00:41 - so what am i planning to do today you
00:43 - are you might be asking yourself well so
00:47 - happens that I have a bit of a plan I
00:51 - would like to look I got some
00:55 - suggestions that came in I would like to
00:57 - do a part four for the flappy bird neuro
01:01 - evolution coding challenge which now has
01:03 - been released in three parts and it's
01:06 - very cruel to this poor bird but I'm
01:09 - gonna I want to make this bird a better
01:11 - bird we all should strive to be a better
01:13 - bird with better flapping in our lives
01:16 - and that's my plan so I'm just looking
01:21 - everybody seems to be saying hello and
01:24 - this is what's going on blah blah blah
01:25 - blah blah alright so now what else do I
01:29 - have to say hmm just gonna check just
01:33 - give me a second to check for something
01:35 - because I would like to make an
01:36 - announcement
01:36 - but I have to check just have to check
01:42 - check he ran into doo doo doo did it
01:47 - okay okay not yet not yet not yet not
01:51 - yet nope
01:51 - can't make my announcement just yet but
01:53 - maybe sometime during this live stream I
01:56 - will talk about mine it's not really now
01:58 - I made this too much of a thing I might
01:59 - have another live stream this week and a
02:02 - surprising time with some surprising
02:05 - guests and if it doesn't happen this
02:07 - week it'll happen a different week it'll
02:09 - happen sometime all right now
02:12 - Daniel says lahpet Colo field you seek -
02:16 - soir song s what song do is that right
02:21 - alright now I can't read it
02:23 - Oh should I launch the casual debate
02:27 - about whether Java or C++ is faster okay
02:30 - so let's just get started here oh one
02:36 - more thing I want to talk about I'm also
02:39 - a there's a class going on back here I
02:40 - can hear them talking and some sound I
02:42 - think it ends at 5 o'clock so in about a
02:44 - half an hour I might feel a bit more
02:47 - inclined to be a little bit more
02:49 - ridiculous but for right now I'm taking
02:50 - this very seriously this is a serious
02:53 - coding channel with serious educational
02:57 - content to learn stuff ok let's see uh I
03:04 - want to talk about something to do so as
03:08 - you know maybe probably dough why would
03:11 - you know I'm currently teaching a course
03:14 - at a New York University called the
03:16 - nature of code spring 2018 I have been
03:19 - making a lot of videos on this YouTube
03:20 - channel this spring that go along with
03:22 - that course the students watch the
03:23 - videos kind of they watch the videos if
03:25 - they can watch the videos you apparently
03:26 - watch the videos anyway so week 10 of
03:31 - this course the topic was neuro
03:34 - evolution and that is why I spent last
03:38 - week's focus was on neuro evolution and
03:41 - the flappy bird game so if I go to the
03:44 - notes here for neuro evolution hold on
03:50 - hold on good I'm getting some private
03:52 - messages I'm just gonna reply that I've
03:55 - live streaming online this is gonna be
03:56 - entertaining just for my own sanity oh
03:59 - well just give me a second here I'm
04:01 - going to reply with this link and I'm
04:05 - going to go here well we'll get back to
04:10 - you soon
04:12 - I am live on YouTube right now
04:21 - okay that entertained me to be able to
04:24 - send that message now I'm just gonna
04:26 - check and I make my announcement can I
04:27 - make my announcement I don't see them
04:30 - emails right now all right back to the
04:33 - slack channel there we go all right I
04:36 - was saying something so I have this
04:39 - neuro evolution code example and demo
04:43 - that's what I'm gonna work on today to
04:44 - improve and after that's done if I have
04:46 - some more time I'm going to talk through
04:48 - this other example that I have been
04:50 - building so I actually started making
04:52 - this example last year and it didn't
04:54 - work very well I mean I tried it again
04:56 - and then again and then again some more
04:59 - and then again some more and then I gave
05:01 - up then I tried it some more and I gave
05:05 - up it's a circle of coding life I try
05:09 - some more I give up and come back to it
05:11 - I try someone give up but every once in
05:12 - a while in the circle of coding life
05:15 - somebody comes along to help you out and
05:17 - me I am so me frequent coding trained
05:21 - contributor and viewer had some
05:24 - excellent suggestions that fixed a
05:26 - couple things that I had really kind of
05:27 - done in an odd way and now this example
05:30 - is do I don't know if I should say that
05:32 - it's working
05:33 - but it's doing something so let's take a
05:35 - look at it okay so let's take a look at
05:39 - what's happening here the goal for this
05:41 - example is to evolve steering agents to
05:46 - collect food and so what you're seeing
05:49 - right now if I actually let me let me
05:53 - know loop this for a second so if I look
05:59 - at any one of these oh interesting so I
06:01 - kind of alright well so I got to work I
06:05 - got to think about this cuz but there's
06:08 - so you can see here each one of these
06:10 - vehicles
06:12 - oh I'm standing from this one each one
06:14 - of these vehicles has eight sensors
06:16 - attached to it those sensors light up
06:19 - when they come across a piece of food
06:20 - those sensors are then inputs into a
06:24 - neural network in the code and the
06:26 - output of the neural network is a
06:28 - desired velocity I want to go this way
06:30 - I'm gonna go this way
06:31 - it's and when it starts they're all
06:33 - making random choices based on
06:35 - their sensor readings over time that
06:38 - they will slowly lose their health and
06:40 - they will die if they collect food their
06:43 - health will increase they will live
06:45 - longer every moment that one of these
06:48 - vehicles or agents what everyone call
06:50 - them lives it has a chance of
06:51 - reproducing and it makes a copy of
06:53 - itself with that same neural network
06:55 - with some mutation so over time they
06:58 - should evolve a neural network system
07:01 - that would push them in the direction of
07:04 - the food you would think and in fact
07:06 - they also get deleted they die if they
07:09 - leave the window so in theory they are
07:11 - also being fed as inputs information
07:13 - about where they are in the space they
07:15 - would probably in theory also evolve a
07:18 - behavior where they would turn around
07:19 - when they're getting close to the edge
07:20 - so this is what I've been working on you
07:24 - can see what the annotation here is this
07:26 - is how many frames this particular agent
07:28 - has been alive so you can see here if I
07:32 - set this running again say loop I don't
07:36 - and let this run now what I'm going to
07:38 - do so most of what you're seeing here is
07:40 - random behavior we could sit here and
07:41 - watch it evolve for a while but I have
07:43 - this slider here which will let me speed
07:45 - it up and right now it's just doing a
07:48 - hundred cycles per frame so let's let it
07:50 - do this 17 new messages okay let's see
08:01 - [Music]
08:02 - do you think I've get enough time up I'm
08:09 - looking at the chat any questions about
08:10 - this
08:11 - people are still speaking French all
08:17 - right I think that's good let me slow
08:20 - this back down and let's evaluate them
08:22 - let's take a look what do you think I
08:24 - like this one it's just spinning there
08:27 - so you can see there hopefully sometimes
08:31 - after watching this for a while there's
08:33 - one that just lasts a really long time
08:35 - in theory the one that has the highest
08:36 - score rate is highlighted so this one
08:39 - currently has the high score
08:39 - unfortunately it just died okay I'm
08:44 - watching this nobody's discussing in the
08:48 - chat this
08:48 - wonderful example that I worked for an
08:50 - entire year on the soundboard volume is
08:54 - very low interesting alright that can be
08:59 - fixed
09:18 - so I'm gonna just I just wanted to show
09:23 - this this is hopefully I will I would
09:27 - like to do this actually as a coding
09:28 - challenge build the whole thing from
09:30 - nothing but but I would like to see if I
09:35 - can make some like minor tweaks and
09:37 - improvements to this first even still I
09:39 - really like what this one is doing here
09:41 - it feels very o come around turn around
09:43 - turn around turn around oh that's so sad
09:46 - that's so sad oh it sounds like it's
09:50 - coming through your mic and knock the
09:51 - system that's interesting
09:53 - hold on oh well
10:08 - I mean am I really gonna go crazy about
10:12 - the sound stuff right now mute output
10:16 - there this Pro oh whoops
10:17 - I think I I think now I might have fixed
10:22 - that that fix it alright alright so now
10:46 - let's put this aside and let's let's let
10:50 - me return to what I'm here to do okay so
10:57 - now what I need to do is I need to find
11:09 - and how it could be turned down yeah I
11:13 - bet cuz I turned it up quite a bit so
11:17 - let me turn it back down to what it was
11:22 - okay there we go alright
11:33 - actually hmm yeah this should be fine
11:37 - [Music]
11:42 - alright let's look here there we go
11:48 - there we go there we go alright so this
11:54 - is where we last left off
12:01 - let me see if I have this camera up and
12:05 - running okay that camera is up and
12:11 - running I am over here doing some
12:14 - jumping jacks neck pain it's only 4:40
12:20 - we're doing all right now they come back
12:25 - here and see what's going on how we
12:27 - doing there flappy bird okay whoa all
12:30 - right everybody so I'm gonna just let me
12:34 - look at this list let's think about this
12:36 - does anyone have any other suggestions
12:38 - in the chat well let's read through
12:40 - these so first I want to add a feature
12:44 - where the bird is removed if it hits the
12:48 - bottom or the top that apparently is
12:50 - part of the game the pipes the closest
12:53 - pipe detection I think I need to fix
12:55 - because when the front of the pipe
12:58 - passes it's no longer a relevant pipe
13:02 - and I still need to I still need to
13:05 - detect it all the way until the back
13:07 - passes why velocity is the input I don't
13:10 - know why I just thought like why bother
13:12 - adding that it was a really key and then
13:14 - if this might end up needing to be a
13:16 - part five which is saving and loading a
13:19 - bird that's been trained to play really
13:21 - well and like loading it back in like a
13:23 - separate environment to just play the
13:25 - game okay so so here we go people are
13:32 - saying better hit detection limit the
13:34 - jumping rate to the birds don't fly
13:35 - straight up in the original game yes so
13:40 - I've got those okay so I think this is
13:41 - what I'm gonna do so let me get the code
13:46 - going
13:53 - in case you're wondering by the way this
13:56 - other if you're looking for there's also
14:02 - this version of the same exact thing
14:05 - which has a lot of these features built
14:06 - into it already this is just the version
14:09 - that I made last year and you can see
14:12 - look the e key does not work you can see
14:19 - here that there's some more information
14:22 - about the high score and it also I gotta
14:25 - move this over there we go
14:29 - I can run the best one so far and this
14:31 - by the way has the Y velocity of in this
14:35 - has the Y velocity as input and it also
14:37 - has the feature that if it hits the
14:40 - bottom or the top this one just this one
14:44 - that did the best so far seems to only
14:46 - want to stay in the middle it's gonna
14:47 - die right now right yeah so let's let's
14:50 - uh let's let this go a little bit longer
14:53 - oh wait I got a continue training let's
14:57 - get one to do better they look like
14:59 - they're doing better now alright so
15:01 - let's let this go for a little while
15:03 - this one seems like a really good one I
15:06 - kind of want there to be just one left
15:08 - okay there's one left run best go back
15:11 - now we can just speed it up just a
15:12 - little bit so we can see now this one
15:15 - has been trained really really well and
15:17 - it doesn't seem to have any problem
15:19 - beating this very simple game so that I
15:21 - want to achieve results like this as I
15:23 - make these improvements to the tutorial
15:26 - okay does it get data about how near the
15:33 - next pipe is or just its gap Y location
15:36 - ask Medan I believe I mean yes it gets
15:40 - information about the the X location of
15:43 - the closest pipe but unfortunately it
15:46 - does starts ignoring that pipe as soon
15:48 - as the front of it as soon as the front
15:50 - of it passes the bird and it probably
15:53 - should consider it like and it starts
15:55 - looking at the next one it could easily
15:56 - jump up by accident so so yeah okay it
16:00 - seems to have no problem anyway but that
16:01 - might be worth fixing okay that's an
16:05 - easy fix
16:07 - all right so I'm gonna close that I'm
16:10 - going to close this I'm going to oh
16:15 - actually I didn't want to close that I
16:17 - was gonna have that at the beginning the
16:21 - whole point of me opening that also must
16:26 - to have this version the improved
16:30 - version so just give me a second let me
16:33 - train it again to have the improved
16:35 - version as these sort of starting
16:37 - background to this part for okay
16:52 - you guys probably can't hear the music
16:53 - coming from the classroom next door but
16:55 - I can alright how are we doing here we
17:04 - got a good one
17:09 - ok ready everybody
17:13 - you could vary the gap width but I'll
17:15 - make the birds have to train more yeah
17:17 - okay let me Reese
17:22 - let me recycle the camera I'm a recycles
17:25 - the camera it's a very expensive camera
17:28 - why not just recycle it
17:29 - no I meant cycle the camera not recycle
17:32 - welcome to part 4 of the flappy bird
17:36 - neuro evolution coding challenge so I
17:38 - didn't actually do part 4 when I read to
17:40 - the original challenge which was parts 1
17:42 - through 3 links in this video's
17:43 - description breathe but I got many
17:48 - excellent suggestions about things that
17:49 - I could do to improve it and so I
17:51 - actually did implement a bunch of those
17:53 - and what you're seeing here right now is
17:55 - a version of the neuro evolution
17:56 - challenge with those things improved and
17:58 - this is a particular it's really oh it
18:02 - keeps dying hold on I'm gonna start over
18:06 - I want a better one that doesn't die
18:07 - well train it some more the funny thing
18:13 - that I just realized is it go it kind of
18:17 - if it if it if one beats the game
18:19 - perfectly it's not gonna train anymore
18:21 - because so let's try this one did that
18:26 - one get a new high score I don't
18:27 - remember now hold on let me let it beat
18:29 - the high score
18:33 - so I just have to get above 5,000 to see
18:36 - that I have one that's doing better then
18:40 - I'm going to start this video over
18:49 - all right we're above do we have two of
18:50 - them I think there's two of them there
18:52 - come on which one's gonna win ah maybe
18:53 - there's one now no let's think there's
18:55 - still two I don't think that's like
18:57 - effect who knows
19:00 - let's get to ten thousand this is good
19:02 - enough this is gotta be good okay too
19:10 - much noise hello welcome to part 4 of
19:16 - the flappy bird coding challenge so when
19:19 - I originally did the coding challenge
19:20 - parts one through three linked in this
19:22 - video's description I did not do a part
19:23 - four in fact I finished I was like I'm
19:25 - done but I got so many great comments
19:28 - from the in the in the comments feed
19:40 - probably shouldn't do that they probably
19:42 - hear me through the wall I got so many
19:47 - great comments I got so many great
19:51 - comments in the videos the videos
19:54 - comments is that what it is I'm gonna
19:56 - make I'm really gonna make Macchio work
19:57 - on it's editing today I can feel it
19:59 - already I got so many great comments
20:01 - with wonderful suggestions on how to
20:03 - improve the game the training the bots
20:07 - the thing let me just start over I'm
20:09 - just gonna start over Oh can't we c'mon
20:12 - isn't this too late for you last time I
20:15 - know this is torture for the people
20:17 - watching live two comments feed yeah my
20:20 - I used my Google Reader to check the RSS
20:23 - feed of the comments and I read them in
20:28 - 1997 I traveled back in time
20:37 - hello and welcome to part 4 of the
20:42 - flappy bird neuro evolution coding
20:44 - challenge now you might have thought you
20:46 - might have watched part 3 it's on it's
20:48 - done finished coding challenge complete
20:50 - but I got so many excellent comments and
20:53 - suggestions about how to improve my
20:56 - neuro evolution simulation that I
20:58 - decided to come back and attempt a part
21:00 - for mmm this is part 4 so
21:02 - oh by the way and before I actually came
21:04 - back to attempt I did some work to test
21:06 - out some of these ideas and here you can
21:08 - see this is a version of it running with
21:10 - some of these improvements and you can
21:12 - see that I pretty much have a little
21:14 - bird here that has beaten the game as it
21:16 - stands alright so let me close this out
21:18 - I'm gonna go to this github issue and
21:22 - look at these for look at these for
21:26 - timeout for a second tonight I forgot to
21:29 - look at these at a generation count
21:33 - deserialize this in the part 4 video
21:36 - yeah yeah all right so I'm gonna these
21:39 - are good suggestions but I'm let me just
21:41 - go with my list right now thank you I'm
21:50 - gonna go over to this github page where
21:53 - I kept track of some of the comments and
21:55 - put them here in a list so these are the
21:57 - things that I want to add to be honest I
21:58 - might do this last one in a part 5 but
22:00 - let's see LEDs at the very least what I
22:03 - want to do is apparently a very
22:05 - important feature of the game is that if
22:07 - the bird reaches the ceiling or the
22:08 - floor output to the bird so I want to
22:11 - make sure to implement that there's an
22:13 - issue a bug in which the pipes detection
22:17 - for the closest pipe
22:19 - I'm only detecting it up to the point
22:21 - where it reaches the bird itself and not
22:23 - as it passes it and that sort of causing
22:25 - some issues as well as oh my goodness
22:28 - why velocity I mean let's think about
22:30 - this for a second I have this diagram
22:32 - over here right if this is my bird and
22:37 - this is the gap approaching right what
22:42 - if the bird is already moving up or what
22:45 - if the bird is following that falling
22:47 - down this would make a very big
22:49 - difference in whether I should jump or
22:51 - not because if I'm moving up jumping
22:54 - might cause me to hit the top the the
22:56 - top part of the pipe so I shouldn't jump
22:59 - but if I don't jump while I'm moving
23:00 - down I'll probably hit the bottom so
23:02 - having Y velocity whether I'm already
23:04 - moving up or down as part of the inputs
23:06 - into the system is going to create a
23:08 - much smarter bird and it makes sense
23:10 - that a bird playing the game would know
23:11 - if its move
23:12 - up or down so I feel like that's a fair
23:14 - input so let's go and add those things
23:17 - all right so what do i what do I need to
23:20 - do so first let's go with adding the Y
23:24 - velocity verse order let's go with
23:26 - adding the Y velocity as an input that's
23:27 - probably most interesting thing in terms
23:29 - of the actual algorithm that's going on
23:31 - here I'll go back to my code blue zoom
23:32 - beckon I'm gonna go to the bird the bird
23:36 - as you recall has a brain so the brain
23:39 - previously has four inputs top and
23:43 - bottom of the pipe exposition of the
23:45 - pipe Y position of the bird now I want
23:48 - five inputs I don't know let's increase
23:50 - the number of hidden neurons to make it
23:52 - a bit more sophisticated I like a
23:54 - sophisticated bird now then we're gonna
23:56 - go down and we're going to look here aha
24:00 - these are the inputs the Y location the
24:02 - top the bottom the X location all
24:04 - normalized to arrange between zero and
24:05 - one so now all I need to say is that
24:10 - this dot velocity let's make that an
24:15 - input now this is a bit interesting here
24:17 - now let me just make sure that's the
24:18 - variable right this dot velocity now
24:20 - here's the thing when I wanted to when I
24:22 - use something like the exposition as an
24:25 - input or the Y position there's a
24:27 - distinct right there's a distinct way to
24:31 - normalize that value to arrange between
24:33 - zero and one the Y values go between
24:36 - zero and four eighty divided by four you
24:37 - have a number between zero and one but
24:38 - the velocity is a bit more mysterious
24:40 - first of all it could be negative it
24:42 - could be positive
24:43 - what should I really do here let's try
24:47 - something arbitrary let me try dividing
24:50 - by ninety no ten so you know in the end
24:52 - I just need an input maybe it's okay if
24:54 - it's also negative I want it within kind
24:56 - of like a smallish range but I think if
24:58 - I divide it by something that's probably
25:01 - gonna do just fine oh and this should be
25:03 - inputs four so in that sense I now if I
25:08 - go back and run it I should have already
25:11 - a smarter bird so let's let this run for
25:14 - a little while let's train it for a
25:16 - little while and we can see oh yeah this
25:21 - is the number of generations I've gotten
25:22 - up to seven because it's already kind of
25:24 - pretty smart let's
25:25 - down and we can see we can see there it
25:29 - is figuring it sort of figured it out
25:31 - alright well this some things are a bit
25:33 - different from this than the other
25:34 - version but you can see that adding that
25:36 - Y velocity has already probably improved
25:37 - it okay time out
25:48 - looking at some chat messages here I
25:50 - should take the log of the velocity and
25:53 - normalize that's interesting is that
25:54 - really true what did I do in my other
26:02 - one that I prepared so if I go to the
26:06 - code to the other one that I did then I
26:09 - go to the bird class and I find oh oh
26:16 - look at that I actually did this I
26:18 - didn't realize that I are but rarely
26:21 - gave it a range between negative five
26:23 - and five and map that between zero and
26:26 - one is that better
26:32 - the bird doesn't die when it touches the
26:35 - ceiling in the original game oh I didn't
26:37 - have a max velocity bird no died on the
26:40 - ceiling you can't take a log of a
26:42 - negative that's a good point
26:43 - well Simon Says make them read if
26:48 - they're bad and green if they're good
26:50 - but how do I know if they're bad or good
26:54 - all right I'm just gonna leave it as I
26:57 - have it we'll see how it does it's
26:59 - working um one thing I don't love that I
27:02 - did here also okay hold on I'm gonna
27:07 - just secretly fix this because outside
27:17 - of the video itself oh yeah I just don't
27:21 - want the range of the slider to go so
27:24 - high alright okay so really not the
27:30 - ceiling all right well let the still
27:33 - love them live if they if they go to the
27:35 - ceiling
27:39 - you can't jump if you're already going
27:42 - up in the original game really if your Y
27:46 - velocity is up it won't let you tap to
27:48 - like jump jump that's interesting well
27:55 - these are all important details
27:57 - I can't possibly implement them all let
27:59 - me just get them one at a time all right
28:01 - okay so the next feature I would like to
28:03 - implement now that we've added Y
28:05 - velocity is let's try fixing the pipes
28:09 - closest detection so let me explain
28:11 - what's wrong so what I'm doing is if I
28:16 - have the bird here and I have this pipe
28:19 - I am looking well hold on this isn't
28:27 - really a great place to draw because I'm
28:29 - not standing because I could do it over
28:31 - here that might be better okay so if
28:39 - this is the bird and this is the pipe
28:43 - and this is another pipe I have an
28:46 - algorithm that says oh hey this is the
28:49 - one I should look at but if there
28:51 - happens to be another pipe over here
28:52 - that's technically closer I want to
28:54 - ignore it because I only care about the
28:56 - pipes that are in front of me
28:57 - but still it's there on this in the
28:59 - canvas because it's part of the
29:00 - animation so I have an algorithm that
29:02 - already deals with that but
29:04 - unfortunately right as soon as the if
29:07 - the pipe is here it's still gonna read
29:08 - as the closest but if it's actually like
29:11 - here right above it as soon as the front
29:13 - of the pipe passes the bird it's gonna
29:17 - ignore that pipe and so if it sees
29:19 - another one coming it's got to go up it
29:21 - could kind of get it should really still
29:22 - consider that pipe it should consider
29:25 - that pipe all the way until the back of
29:26 - it passes I think this is going to be an
29:27 - easy thing to fix hold on a sec here I
29:35 - think this is going to be an easy thing
29:37 - to fix so let's go to tritter to do and
29:42 - find this part of the code
29:44 - yes that's what I'm doing in
29:48 - bird bird somewhere in here in think
29:53 - this is me finding the closest pipe and
29:57 - as long as the distance between the
29:59 - pipes X location and my location is
30:03 - positive that's something that I want to
30:05 - look at but let me actually just find
30:07 - the distance in the back of the pipe oh
30:08 - this is so easy
30:09 - pipes dot X plus pipe W so that that W
30:17 - is the width of the pipe so I should be
30:19 - a plus pipes index I dot W minus this X
30:27 - so this should now work this is actually
30:29 - the location that I'm looking for it
30:31 - which is behind the pipe wonderful
30:32 - alright do I even want to run it again
30:34 - do I care let's run it again let's speed
30:37 - it up to train for a little while and
30:51 - there we go and let's just let's still
30:54 - run we can see there we go oh poor poor
30:56 - little flappy bird lost the game alright
30:59 - so now what else do we have to do I go
31:03 - back to my list
31:03 - we now ah fix when the bird hits the
31:09 - bottom now I'm told by the chat that
31:11 - actually in the original game hitting
31:14 - the ceiling is allowed so let's only add
31:16 - the bottom I guess so if I go into the
31:21 - bird there is a function called I
31:26 - believe well there isn't actually so
31:32 - hold on a second let's go to the sketch
31:34 - I forgotten how my code works completely
31:36 - and let's go and see here ah if pipes
31:40 - index I hits bird so if a pipe
31:44 - intersects the bird then I want to
31:47 - remove that bird we've done that now I
31:50 - also if the bird or
31:54 - [Music]
32:02 - hmmm edit point here I don't I just have
32:06 - done this all I think I want to refactor
32:09 - this - yeah no that's fine we'll just do
32:17 - we'll do it we'll do another the problem
32:20 - is here alright so this is the loop
32:24 - where I remove birds but the problem is
32:29 - this loop is inside the pipes so do I
32:32 - really want to remove a bird here I mean
32:35 - I don't know what the best way of doing
32:36 - this is but what I'm going to do is I'm
32:39 - just gonna create another little quick
32:41 - check down here I'm gonna use I and I'm
32:47 - gonna say if Birds index I what should I
32:55 - say off screen off screen then here is
33:00 - another reason why I might want to
33:02 - remove that particular bird and put it
33:05 - into my saved Birds array which was
33:06 - immediately a bit of a silly solution
33:09 - but it works so I need to write a
33:11 - function here in bird which is called
33:14 - off-screen and I'm just going to return
33:16 - return this dot y is greater than height
33:20 - or this dot well I can't resist having
33:24 - it die if it hits the ceiling I cannot
33:26 - resist let's just add that for a second
33:28 - off-screen so let's see if this works
33:31 - and let's do this so look there at the
33:35 - bon ha you know what there's an issue
33:37 - here I think somewhere in here alright I
33:39 - had this extra code to constrain them
33:43 - within the screen which is sort of silly
33:44 - and now I can remove that they don't get
33:47 - constrained they just die so you can see
33:50 - they're hitting the bottom they're dying
33:51 - so now let's speed this up and let's let
33:54 - this go I'll be back in a minute
34:06 - [Music]
34:24 - all right oh I could use a sigmoid to
34:31 - squash the velocity that's a clever idea
34:34 - [Music]
34:37 - all right
34:39 - okay okay I have returned looks like
34:44 - we've got a pretty good one here that
34:46 - doesn't seem to have any problem beating
34:48 - this game lovely look at you go look at
34:50 - you scrappy little bird flapping your
34:53 - way through this course beautiful so I
34:56 - think we've made some pretty good
34:57 - improvements here I don't know let's
35:01 - make the game a little bit harder just
35:03 - to see so what did we have now in pipe
35:07 - oh the spacing is 175 that is way too
35:10 - easy so let's make it 125 and let's give
35:13 - a little refresh here and I will be back
35:16 - again in a minute
35:26 - so sigmoid was a really good suggestion
35:32 - [Music]
35:37 - five o'clock let me check my email see
35:41 - if I can make my announcement Thank You
36:06 - Isaiah who is flappy bird is dedicated
36:10 - to you okay all right I have returned
36:15 - this bird looks pretty pretty pretty
36:18 - good let's see how it's doing here yep
36:19 - doesn't seem to have any problem with
36:21 - this one 25 spacing what do you think
36:25 - can we push it a little just 100 75 80
36:30 - 50 I don't know let's try flip a coin
36:35 - whoa look at that look at it go oh it's
36:38 - such a good little bird there all right
36:39 - oh this is a bad idea 75 it's gonna be
36:42 - way too hard see in a little bit
36:56 - [Music]
37:14 - [Music]
37:19 - who seems to be doing it
37:22 - [Music]
37:25 - alright dare I say that it's working
37:28 - it's hard to tell with its so sped up
37:29 - let's actually slow down there's
37:30 - actually two of them going oh my
37:32 - goodness oh there's a bunch of them in
37:33 - there let's just let's let's look at it
37:36 - at a more yeah seems pretty reasonable
37:41 - to me alright so this is pretty exciting
37:47 - to see you know I probably again I don't
37:50 - have the exact physics of the original
37:52 - game so that probably could be some
37:53 - tweaks there but as you can see just
37:55 - really that Y velocity if I take the out
37:58 - that Y velocity input well let me just I
38:00 - think the Y velocity is probably the
38:02 - most important fix that we made so I can
38:04 - really quickly just in the bird itself I
38:06 - can just let me just set the Y velocity
38:09 - to zero so basically it's not getting it
38:11 - anymore it's as if it's a constant input
38:13 - so it sort of become irrelevant I don't
38:15 - think it's going to be able to solve
38:17 - this now so let me give it a little bit
38:19 - of a run here for a few minutes
38:30 - right people is it Remy in the chat says
38:34 - jumping height way too low to gap size
38:38 - so that's a good point
38:41 - all right so I've let this run for a
38:44 - while but you can see like it's just
38:46 - like it's all over the place it's not
38:48 - able to sort of fit itself through these
38:50 - pipes there there is a good point in the
38:53 - chat that I probably with that then I
38:55 - haven't really debate this sort of
38:57 - amount that it jumps very very low so
38:59 - it's able to kind of like perfectly
39:00 - position it's almost as if it's just
39:02 - like finding the exact spot so you know
39:05 - one thing I might just try let's put it
39:08 - back let's put the velocity back let's
39:09 - make it a little bit harder for the bird
39:11 - let's give it a bit more of a powerful
39:14 - jump
39:15 - let's give it 16 instead of 12 this will
39:18 - make it a harder game for it to play I
39:20 - think but let's see if we can do it
39:31 - I don't know back to you if you're gonna
39:34 - do all of these is like weird little
39:35 - sped up things that could be fun I feel
39:37 - like you should have one output then
39:39 - check if it's over 0.5 or not yeah that
39:41 - would that's a very reasonable
39:42 - suggestion so the reason why the
39:50 - generations now are so much or so
39:53 - variable is that like why did it have
39:59 - like 50 generations that it only had
40:01 - three so it starts a new generation once
40:04 - all the birds have died so I could
40:06 - program it in a different way but that's
40:08 - currently how it works
40:09 - [Music]
40:17 - so you could see I don't know it's my
40:20 - hit detection looks like it might be a
40:23 - little bit generous I think that
40:24 - collision detection is a little bit
40:26 - generous you can see I don't know that
40:29 - maybe maybe the lift okay so I'm being
40:34 - told there's a very important feature
40:36 - which is that if it's moving up it
40:39 - cannot jump it can only jump if it's
40:43 - moving down so let's see if we can add
40:45 - that oh boy I did not know that was the
40:48 - case so the way that I would add that is
40:53 - this is where it chooses to jump up and
40:56 - so I suppose I mean I guess it just I
41:01 - might as well render the decision
41:02 - irrelevant right so and if output 0 is
41:08 - greater than output 1 and this dot
41:11 - velocity is moving down which means
41:17 - greater than or equal to 0 okay so I'm
41:20 - allowed I'm not allowed to go up unless
41:22 - I'm already going up let's try it and
41:24 - let's let me just for the sake of
41:26 - argument let me put this back to the the
41:28 - pipe distance let me put that back to
41:30 - 100 this was gonna be such a short video
41:34 - now it's so long and let me speed this
41:35 - up and I shall return
41:42 - yeah we really need better graphics I
41:45 - agree oh I forgot about the slack
42:00 - Channel I'm Bob whitey right I'm 15 I've
42:17 - been following your channel for many
42:18 - years so how old were you when you
42:19 - started following the channel yeah you
42:22 - can jump when going up oh you can pretty
42:24 - sure all the times I played and I'm sure
42:26 - I jumped while going on yeah I feel like
42:29 - you can jump while going now anyway
42:36 - alright there's some interesting
42:38 - discussion now in the chat as to whether
42:40 - that's actually a feature of the game
42:41 - but I did implement it and I'm only
42:43 - letting it jump while it's moving down
42:46 - and it still seems to be able to kind of
42:47 - get through these which is pretty cool
42:49 - to see I do kind of like the quality of
42:51 - it right now of what it's what it looks
42:53 - like so that's kind of cool all right so
42:56 - who knows I'm gonna take that feature
42:57 - out because apparently that there's it's
43:00 - unclear as to whether that's actually a
43:02 - feature of the game I don't feel like
43:05 - that needs to necessarily be a feature
43:06 - of the simulation but I will leave it in
43:09 - as a comment in case anyone wants to
43:13 - reference it alright so now I feel like
43:17 - this is in good shape but what I want to
43:20 - be able to do right what I want to be
43:22 - able to do is let's say I mean this
43:23 - isn't a very complex problem I'm able to
43:25 - kind of like train a bird to play the
43:27 - game very well very quickly but if I had
43:29 - something that took a really long time
43:31 - to train I would want to be able to save
43:33 - the model and buy the model I mean a
43:35 - copy of all of the parameters and values
43:38 - and weights and variables and things
43:40 - that are in that bird's neural network
43:42 - brain I want to save a copy of that so
43:45 - that I could load that later and luckily
43:48 - for us there's a nice way of doing that
43:50 - so
43:51 - we'll come in part now what is part five
43:54 - oh this is a part 5 code challenge see
43:58 - you there
44:05 - yes so Marcos Rios in the chat rightz
44:09 - wouldn't bird training get faster if you
44:11 - limit the bird lifespan so probably it
44:14 - makes it would that would make sense for
44:15 - me to add something like that like right
44:17 - now once it's sort of figured it out it
44:19 - could just go infinitely so let's see
44:24 - here let me think about how I want to do
44:28 - this Oh flappy bird al
44:34 - well here we go oops
44:40 - restart oh so it's actually like until I
44:44 - jump yeah boy this is much so one thing
44:54 - is the gravity as much oh so it's not as
45:02 - generous with the collision detection I
45:07 - use the spacebar oh space where so much
45:09 - easier okay here we go everybody
45:11 - Oh terrible at this
45:21 - I'm now I'm officially a YouTube gaming
45:24 - channel this is me at a YouTube gaming
45:27 - channel playing flappy bird well I get
45:30 - millions of subscribers now I hear the
45:33 - gaming channels are very popular come on
45:38 - [Laughter]
45:41 - ok I can do it breathe breathe breathe
45:47 - it's gonna happen for me though it's
45:50 - gonna happen it's gonna happen ok I did
45:58 - it
45:58 - uh-huh alright so but let's just just to
46:02 - check a few things definitely dies when
46:04 - it gets
46:04 - the bottom hold on does it die when it
46:08 - goes to the top no I can just go forever
46:10 - and ever and ever but I will die because
46:14 - the pipe is infinitely high I wonder if
46:17 - in my game there's a bug where I could
46:18 - actually jump over the pipe probably not
46:21 - the way I programmed it alright so I
46:24 - think I'm close enough I would love for
46:26 - people to make their own variations of
46:27 - this but I think yeah yeah yeah all
46:35 - right look I'm much better at training a
46:39 - neural networks like the game yeah so
46:44 - you know who knows okay so let's move on
46:48 - and let's do that last part so one thing
46:50 - that I want to just check is the am I
46:53 - using the latest version of the neural
46:55 - network library which has a serialized
47:00 - deserialize so serialized will this
47:07 - should work yep there's a copy serialize
47:13 - so so yeah I should be able to do this
47:17 - alright so I'm not going to implement
47:19 - obviously the serialization I could show
47:21 - it but scrape oh i'm i might be using
47:31 - scratch sooner than you think
47:33 - you guys are already you guys are hacked
47:36 - into my email to see what i keep
47:37 - checking to find out about all right um
47:45 - [Music]
47:46 - this is we this is great what what what
47:49 - everybody should do if you start a
47:50 - youtube channel i highly recommend that
47:52 - in the middle of your live stream you
47:53 - just start checking your email that's
47:56 - like the only thing i can do that's
47:57 - worse than that is like see if I haven't
47:59 - text on my phone
48:06 - alright let's do this last part
48:23 - what time is it 5:15 all right I'm good
48:25 - I'm good I'm good
48:26 - there's time here hello can you believe
48:32 - it Oh 5:14 this means hold on let me
48:36 - just scooch I just gonna go peek in the
48:37 - classroom next door to see if there's
48:38 - nobody in there I'll be right back
48:40 - you'll be able to hear me as I go oh
48:42 - this okay I'm over here hello this is a
48:52 - door there's a door this is a room it's
48:55 - actually a closet it's a fairly large
48:57 - closet the door is now open
49:02 - I'm exiting exiting can you still hear
49:05 - me I'm in the hallway I'm looking in the
49:08 - classroom I'm actually standing in the
49:09 - classroom next door I'm gonna bang on
49:11 - the wall do you think you can hear if I
49:13 - bang on the wall hmm unfortunately my
49:17 - mic is still on me so this is kind of
49:18 - like a very poor test but there is
49:20 - nobody in there now I could be loud okay
49:26 - here we go everybody ready
49:47 - welcome to of this multi-part flappy
49:53 - bird coding challenge I anticipate only
49:56 - at least 600 more parts to go I think
49:59 - this might actually be the last one so
50:00 - look what I've got I've got this bird it
50:02 - jumps it doesn't jump it fits through
50:05 - pipes it does what I have always dreamed
50:08 - it would do but I want here's the thing
50:10 - now I have this and what if I just by
50:14 - accident I'm over here and I'm like whoa
50:15 - whoops and I hit refresh that bird that
50:18 - bird that I've loved is gone forever I
50:21 - will never get it back never I might be
50:24 - able to get another bird that's similar
50:25 - that does as well but I will never get
50:27 - that original bird back however I'm
50:32 - gonna that's why I'm gonna add another
50:33 - feature this thing so the feature that
50:36 - I'm going to add is save and load a
50:38 - particular bird okay so I what what I
50:43 - want to do let me let it let me let it
50:44 - train again so I'm gonna let sit that
50:47 - let this go actually the thing is when I
50:48 - when I tab away from the Browse hurts
50:52 - the browser is smart and stopped the
50:54 - animation from going so it's actually
50:55 - not continuing to train but that's fine
50:57 - and what I want to do actually there is
50:59 - a function inside of the neural network
51:02 - library called serialize and deserialize
51:05 - no I actually didn't implement these
51:07 - functions in a tutorial you could act if
51:09 - you want to see how the neural network
51:10 - library was built I have a ten-part or
51:13 - something video series building the
51:14 - whole library but through a pull request
51:17 - I'm gonna go see who made that pull
51:20 - request so I can I credit them let's
51:24 - find who pull requested to serialize and
51:27 - deserialize
51:29 - [Music]
51:33 - there's closed serialize this is it here
51:43 - great merged
51:51 - I have returned to show you the pull
51:55 - request from engine feeder this was pull
51:59 - request number 50 that added these
52:00 - serialization and deers de serialization
52:03 - functions so what it actually does well
52:08 - you know it's it's it's fine it's fine
52:11 - well I'm like I always have the slack
52:13 - channel the Patriot group slack channel
52:15 - in the corner of my eye
52:15 - sometimes when and there's like some
52:17 - like YouTube video that gets posted it's
52:19 - like what is that but I will I will
52:21 - gracefully ignore it even though I
52:23 - didn't just do that then coming back to
52:25 - making I really see a whole thing that I
52:29 - used to do was just go off on all these
52:32 - tangents and make these totally insane
52:34 - and not actually edit them now I'm drunk
52:38 - with power drunk with editing power
52:40 - because I'm not even doing the editing
52:41 - thank goodness for math blank who does
52:45 - the editing but now I I think I got a
52:47 - really slow down here a little that's
52:49 - crazy I'm gonna back up a little bit
52:52 - just to make this less complicated for
52:55 - you and I'm then I'm not gonna do any
52:58 - more anything whoops I have returned to
53:06 - show you the actual pull request where
53:08 - the serialize and deserialize methods
53:11 - came in thank you - engine feeder 101
53:13 - who made this pull request on 3/10 which
53:16 - was a little while ago so if I go back
53:18 - to those functions you'll see that look
53:20 - at this JSON dot stringify this well I
53:29 - want to use the whiteboard all right
53:38 - let's talk a little bit about what's
53:40 - happening in the let me actually just
53:46 - erase some of the whiteboard and then
53:51 - come back feel sad to lose these
54:13 - diagrams but I think it's fine just
54:27 - [Applause]
54:43 - okay
54:58 - okay okay so let's say I have a simple
55:04 - class like let's say I have a particle
55:06 - class class boy lots of squeaking going
55:11 - on here class particle and in the
55:14 - constructor function I set like this dot
55:20 - X equal to something maybe it's a random
55:22 - number and this dot y equal to something
55:26 - maybe a random number so then what I'm
55:28 - going to do next is I'm going to write
55:29 - some code like this let P equals equal a
55:35 - new particle and what if I now say JSON
55:43 - dot stringify P what do I get
55:49 - well what I get is a strength raw text
55:56 - that is the json formatted data that is
56:01 - part of this particular instance of a
56:03 - particle object now if there's methods
56:05 - and functions in here those won't be
56:07 - included but if all I want are the sort
56:10 - of variables the properties of the
56:12 - particle
56:13 - what's its current velocity what's its
56:14 - current XY location then I'm gonna get
56:16 - that stuff this is going to give me a
56:18 - string that just looks like this X you
56:22 - know whatever it is 100 comma Y you know
56:26 - 20 and curly bracket so even though the
56:31 - neural network is much more complex this
56:35 - is doing exactly the same thing it's
56:37 - basically saying hey all that stuff
56:39 - that's part of the neural network all of
56:42 - the values of all of these weights and
56:43 - things just serialize all that put it
56:46 - all in a big JSON file let's take a look
56:48 - at what that actually looks like so so
56:51 - now what I'm gonna do is I'm gonna go to
56:53 - my code I'm going to go to the bird code
56:55 - and what I'm gonna do actually go to the
56:57 - sketch and what I'm gonna do is I'm
56:59 - gonna say is there a mouse press I'm
57:01 - gonna just I'm gonna add key pressed
57:05 - what I'm gonna do when I add key pressed
57:07 - is I'm gonna say let be
57:10 - equal population index zero so I'm gonna
57:13 - pick just one bird from the population
57:15 - Brett eventually I want to like get the
57:17 - best one the one that I want to save
57:19 - then I'm going to say and I'm gonna call
57:21 - this a bird then I'm gonna say let JSON
57:23 - equal bird dot serialize and all this is
57:28 - doing right I could have just right here
57:29 - I could just say let JSON equal json dot
57:34 - stringify bird so the serialized
57:38 - function just does this for us it calls
57:40 - json dot stringify so i'm gonna do that
57:42 - then did you something totally insane
57:45 - actually I'm not just gonna say console
57:47 - dot log JSON let's just look at it in
57:49 - the console and I'm gonna say if key
57:52 - equals s so I'm only gonna do this if
57:56 - I've pressed the s key and I feel like
57:58 - there's something weird in JavaScript or
58:00 - p5 where I actually say the capital S
58:02 - but whatever let's figure that out so
58:04 - here we go let's go here so all these
58:06 - birds are going I'm now gonna press s
58:08 - and population is not defined because
58:13 - it's not called populations called birds
58:15 - that would be nice to call it what it's
58:17 - called and now I'm going to press s bird
58:22 - dot serialized oh right of course it's
58:25 - not the bird object that has the
58:27 - serialized function built into it it's
58:29 - the brain it's the bird brain bird brain
58:33 - so this also should have been json dot
58:36 - stringify birdbrain okay
58:38 - we're getting there brain is the neural
58:39 - network object inside of the bird that's
58:41 - the only thing that I care about to save
58:42 - if I wanted to save more stuff I'd have
58:44 - to do that but right now we're good I'm
58:46 - gonna do this we're gonna get it fit
58:48 - save and look at this you can see look
58:50 - at that this is all the data these are
58:52 - all the values that are in all those
58:54 - arrays it's all the stuff so guess what
58:56 - I could do next I can say save JSON bird
59:03 - dot JSON JSON so I think this function
59:07 - in p5 the save JSON function will save
59:10 - the data Oh actually interestingly
59:13 - enough it's already made into a string
59:16 - oh this is so interesting
59:21 - I think I actually don't need to see so
59:23 - I could just say I could just say save
59:26 - because this is technically as well I've
59:30 - won waited into territory that I didn't
59:31 - want to wait into but the save JSON
59:34 - function in p5 is designed to take an
59:37 - object that hasn't been turned into a
59:38 - string and turn it into the string so
59:41 - you can save it where as what I want to
59:43 - do is I already made the thing into the
59:45 - string I just want to save the string so
59:47 - let's actually try a few different
59:48 - things just for fun let's try saying
59:53 - save JSON bird sorry bird dot JSON and
60:00 - then bird so I'm not gonna bother with
60:03 - serializing it I think the p5 save JSON
60:05 - function will do that for me so let's do
60:07 - this then I'm gonna hit s and ooh boy
60:13 - we got some crazy air saved JSON so
60:15 - let's look up the reference hey I
60:17 - probably got the order wrong save JSON
60:19 - p5.js let's look at the reference and
60:23 - let's look ah the data goes first and
60:27 - then the name of the file goes second
60:29 - okay
60:31 - so bird comma bird JSON there we go
60:36 - now let's try this again JSON is not
60:42 - defined because I don't need to
60:46 - console.log anymore let's do it again
60:48 - oh it actually did it you can see right
60:51 - down here what when you call save Oh doc
60:57 - when you call save Oh you can't no you
60:59 - hold on Mathieu let me try that over
61:03 - again okay wait a second okay
61:06 - oh thank you keys have to be wrapped in
61:13 - quotes good point
61:20 - all right holy we're gonna get there let
61:26 - me try that again
61:29 - so let me hit save now again finally and
61:33 - now what you can see is actually I'm
61:36 - gonna go here and do show and find her
61:37 - so I don't know if you could see that
61:38 - down here but down here right down here
61:40 - it actually oh look at this this is
61:43 - bothering me is that better try this one
61:46 - more time let me delete them so hold on
61:53 - we're gonna make this okay try this one
62:02 - more time
62:05 - oops
62:06 - alright we're gonna try this one more
62:08 - time actually what I'm also gonna do is
62:11 - move this up alright I'm gonna try this
62:14 - one more time I'm gonna hit s and you
62:18 - can see I look what just happened right
62:19 - down here the browser downloaded a file
62:22 - called bird JSON automatically so I
62:25 - don't have any real file management
62:26 - capabilities from the client but I can
62:29 - auto trigger a download to go directly
62:32 - to the default downloads directory of
62:33 - the browser so I can now click here and
62:35 - say show and find her and now I should
62:37 - have look at that this bird JSON file
62:39 - whoops and what I should be able to do
62:42 - is then drag that and take a look at it
62:44 - in atom so there it is look at this this
62:48 - is actually oh I saved the whole bird
62:51 - look at this
62:52 - I didn't mean to do this I saved the
62:53 - birds X&Y it's gravity it's lift its
62:56 - velocity look now I saved its brain
62:57 - input nodes so I forgot of course all I
63:00 - want to do is just save the brain so
63:03 - what I can do now is I can change this
63:06 - to go back to bird and I can change
63:12 - whoops I'm sorry back to sketch and I
63:15 - can change this to save JSON bird brain
63:19 - ok here we go ready and I'm gonna save
63:22 - that and now I have another one I'm
63:26 - gonna open that up in atom and we can
63:30 - see this is now just the bird itself so
63:32 - you can see these are the weights that
63:34 - this this is sorry not the bird this is
63:36 - the neural network of the bird and these
63:38 - are all of its current weights all these
63:40 - numbers seem and feel rather meaningless
63:42 - but they're quite meaningful until how
63:44 - how it works so now we can then write
63:49 - another sketch that loads that JSON file
63:52 - back in so how do I want to do that
63:56 - let's take a minute here because give me
63:58 - minutes so a couple options are one is I
64:04 - could I couldn't make an entire other
64:09 - sketch that's just the flappy bird game
64:11 - that loads a bird or another is I could
64:20 - create a mode in this that loads a bird
64:22 - let's make a totally separate sketch
64:26 - yeah I can use drop but so actually
64:41 - before I go and create a sketch that
64:43 - loads the JSON let's actually make this
64:45 - load a bird that we want to load so one
64:48 - thing that I could do is after I've I
64:50 - have to drive training for a while I
64:51 - could kind of find the current bird and
64:53 - the population that has the highest
64:55 - score so I could say actually I could
64:58 - say no there's only one bird right now
65:00 - whoops no loop so look I'm gonna do this
65:03 - kind of manually this is pretty terrible
65:05 - so now I'm just want to make sure
65:06 - there's just one bird so it's just one
65:08 - bird so this is definitely the one that
65:10 - I want to save so I'm gonna hit s and I
65:15 - got that bird so now I have the bird
65:17 - that's doing really well and it's in
65:19 - bird to JSON so I am going to just call
65:24 - this best bird JSON okay so now of
65:31 - course what I would really want to do
65:33 - and I leave this to you the viewer as an
65:35 - exercise is make it interface auto
65:38 - detect one that's been doing well
65:39 - trigger the download make like an upload
65:42 - button that I can upload the best one
65:43 - but I'm gonna do this in sort of a hacky
65:45 - way what I'm going to do is I'm going to
65:47 - make an exact copy of my sketch
65:59 - and I'm just gonna call it flappy bird
66:02 - and I am going to go into Adam and I'm
66:09 - gonna get rid of the genetic algorithm
66:11 - code completely I'm done no genetic
66:15 - algorithm here I'm gonna go to the
66:19 - sketch and I'm gonna say hey you know
66:21 - what I don't need all the birds and
66:23 - one'd all save birds I don't need the
66:24 - counter all I need is one bird and I
66:31 - don't need the save thing and I'm going
66:34 - to just say function preload I am going
66:38 - to say let data bird data or birdbrain
66:44 - birdbrain then I'm gonna say birdbrain
66:48 - equals load JSON best bird JSON then in
66:56 - setup all I need to say is bird brain
67:02 - sorry bird equals neural network dot d
67:10 - serialize birdbrain and this is actually
67:20 - so I should call this brain data or
67:24 - brain JSON let's call this trying to
67:27 - make this make sense
67:27 - brain JSON then this is the actual bird
67:34 - brain deserialize the brain JSON and
67:40 - then the bird is a new bird with that
67:43 - bird brain so this is the process of
67:46 - loading the data then deserializing it
67:51 - into an object than creating a new bird
67:54 - with that object because my bird code
67:56 - the constructor accepts a neural network
67:59 - object as the brain it will remake it so
68:01 - let's go back what else do I need to do
68:03 - in sketch adding new pipes you know
68:06 - there's only one bird now so all I need
68:09 - to do is
68:10 - I'm actually not even gonna worry about
68:12 - this I'm just gonna let the bird play
68:14 - and I'm gonna let the bird go off-screen
68:20 - I'll just like you know I hold on so in
68:23 - theory I should do something if the bird
68:27 - hits the pipe I'm gonna just say
68:29 - console.log collision just so we see it
68:34 - doing something if the bird goes off
68:36 - screen I'm gonna say bottom and then
68:40 - here
68:41 - oh that's the pike sorry and this is
68:45 - just one bird now if one bird off-screen
68:51 - I'm just gonna say console dot log
68:55 - bottom oh so much code to write and now
69:01 - I could just say bird think bird updates
69:04 - this is all this stuff for the genetic
69:06 - algorithm so I don't need to worry about
69:07 - that and then I want to draw up show the
69:11 - bird and show all the pipes so this is
69:16 - now I just made a version of the game
69:19 - basically all I did was eliminate the
69:20 - genetic algorithm and eliminate the
69:22 - array of birds because there's just one
69:24 - bird and I also need to make sure I
69:26 - don't want to have this J dot J s file
69:28 - anymore in index.html and now I also
69:31 - need to go and grab from my downloads
69:34 - where was that
69:35 - I need to grab that best bird JSON file
69:39 - I'm gonna go to the desktop and put it
69:42 - in flappy bird so now this best bird
69:45 - this is the data from that best bird
69:47 - that I saved and I should be able to go
69:50 - back to sketch and say best I called it
69:52 - best underscore bird so give me a second
69:56 - here and let's run that sketch I'm gonna
70:07 - run a little webserver so I can look I
70:09 - will run it on a different port so now
70:13 - I'm gonna go to localhost 8001 and I
70:16 - have some errors counter is not defined
70:19 - so I'm using I left this counter thing
70:23 - in there which is
70:24 - oh no I do need counter oh I do want
70:27 - counter so I need to have the the
70:29 - counter I need that's my frame count to
70:31 - know how many pipes I is not defined and
70:35 - sketched at J s line 36 pipes ooh this
70:40 - should not be a bracket there right
70:43 - because this is me checking all of the
70:44 - pipes unexpected and fit foot sketch
70:50 - alright so I think I'm missing yet
70:52 - another curly bracket here and there we
70:56 - go
70:56 - so this should be that bird right so now
71:02 - I've loaded the one that I trained oh
71:03 - yeah that worked and loaded the one that
71:06 - I trained how exciting so now what could
71:10 - I do let me just be sure that this is
71:12 - working let me go back to the other
71:14 - sketch all right and let me save another
71:18 - one so I'm gonna just I'm gonna save
71:21 - like a bad one because I'm this is just
71:23 - going to be an arbitrary one right so
71:25 - I'm gonna hit s and I'm gonna get this
71:28 - one and this one I'm gonna call bad bird
71:33 - and I'm gonna go to back to my sketch
71:37 - and it would put bad bird in there so
71:41 - now I have whoops
71:42 - what is this sublime is open I have bad
71:46 - bird this is all of the waits for the
71:49 - bird that wasn't really trained these
71:50 - are the waits for the bird that was
71:52 - trained so if I go here if I go back to
71:55 - my code and go to sketch that j/s you
72:01 - know and I could what I what would be
72:03 - interesting is to run both of them like
72:05 - to load a few different birds now I'm
72:06 - gonna load the one that doesn't do well
72:08 - let's just see and let me by the way let
72:11 - me set the slider the default of the
72:14 - slider to whoops where did I create that
72:18 - slider oh yeah sorry let me set the
72:21 - default of the slider to 3 just so it
72:23 - starts sped up whoops I'm in the wrong
72:26 - sketch so now this is the bad one bad
72:31 - ones pretty good you can see the bad
72:32 - ones not doing very well right as
72:34 - opposed to the good one
72:41 - which is not colliding it really should
72:46 - be is the collision thing actually
72:48 - saying collide did it say it when I did
72:50 - the bad one yeah it is okay you can see
72:54 - that I'm getting lots and lots of
72:55 - collisions with the one that wasn't
72:56 - trained well so again this could use a
73:00 - lot of refinement like maybe I want to
73:02 - think more systematically maybe I want
73:04 - to have an electron app that's actually
73:07 - doing the training and saves the JSON
73:08 - file so I could have some file
73:10 - management maybe you're asking yourself
73:11 - what's an electron app it's a way of
73:13 - wrapping a webpage basically into a
73:15 - desktop application so you have more
73:17 - control over your file system I could
73:19 - write a node I could have a server-side
73:21 - program written in node that is managing
73:23 - saving JSON files of birds that I've
73:25 - trained and reloading them and requite
73:27 - could make a bird flappybird API I'm
73:30 - just gonna give you all these different
73:31 - trained birds for different situations
73:34 - so there's a lot of ways you could go
73:35 - forward with this so hopefully you've
73:36 - got something out of this I think dare I
73:38 - say I'm but right now this part five
73:42 - really wraps it up I will say that even
73:45 - though so you're going on the coding
73:48 - train website you will find the exact
73:50 - code for both of these examples in there
73:53 - kind of raw state but I'm also making a
73:56 - separate example that I've demonstrated
73:59 - which is here I'm just gonna quickly
74:05 - load it up that's going that that has a
74:07 - bit more interface stuff to it so I will
74:09 - also link to this example that will have
74:11 - a bit more that'll be a bit nicer like
74:13 - I'm gonna do I have a save and a load
74:15 - button in here so this one already has
74:17 - the feature now if I speed it up and
74:19 - train it for a little bit train train
74:21 - train train train train train train
74:22 - train train train train train train that
74:25 - I could then say hey just show me the
74:27 - one that's done the best so far so and
74:30 - so now you could save that one and load
74:31 - that one so I will create that stuff
74:33 - I'll make that example available but as
74:35 - an exercise for yourself try to make it
74:37 - what can you do add some design add some
74:39 - saving loading have have a computer bird
74:42 - compute could compete with a human
74:44 - player bird I don't know be creative
74:46 - make something share it with me and I
74:48 - hope to see you in a future video
74:50 - [Music]
74:51 - uh oh my god eighty-six new messages I'm
74:57 - so not checking out the chat anything
75:00 - important
75:02 - like Alessi and said maybe you can
75:04 - explore going into something like
75:06 - cookies or local storage Oh what oh yeah
75:10 - cookies are local storage that is a good
75:12 - idea I should do that yes I would like
75:17 - to do that
75:25 - [Music]
75:28 - all right how did I do
75:30 - is that gonna turn into something that I
75:32 - can release just hold on let me check
75:36 - something
75:38 - I'm not checking my email I'm totally
75:41 - not checking my email no messages
75:44 - nothing important okay right local
75:48 - storage is perfect since you need to
75:50 - serialize anyway that is a good point is
75:54 - this the end the end is just a little
76:02 - [Music]
76:07 - anyway is this the end I don't know okay
76:13 - it seems that for every new iteration
76:15 - 90% collide right away yeah that's
76:17 - probably cuz there's a lot of mutation
76:19 - going on so most of them are just gonna
76:20 - do wildly incorrect things review
76:23 - support requests alright
76:37 - oh well look at this look at this
76:42 - it's actually written in here look at
76:52 - this ah that's that's all local that's
76:57 - all you need to do to use local storage
77:00 - seriously amazing can we fix the collide
77:12 - part yeah yeah I would take a pull
77:18 - request to fix that because I don't
77:20 - really feel like it what did I do
77:23 - [Music]
77:25 - that's funny shows the highlight thing
77:27 - in it so I'm just checking if the bird
77:30 - is in between the top and the bottom and
77:34 - the X and the y so I'm not taking in
77:37 - consideration this size so I really
77:41 - should be saying like the bird radius
77:43 - right right now the bird it doesn't
77:47 - actually have a size the bird is just so
77:53 - this is the issue with the the collision
77:57 - like if I do this
78:07 - this is actually exactly the same right
78:11 - this is exactly the same as if I do this
78:18 - this is basically what its collision
78:21 - detection so I probably should if I
78:32 - wanted to fix this oh if I wanted to fix
78:37 - this I would have to make this dot our
78:41 - [Music]
78:42 - the thing is I didn't train it with a
78:45 - radius so I'm gonna I'm gonna stop
78:47 - myself I'm not gonna do that right now I
78:49 - would gladly accept a pull request I
78:51 - could certainly make a part 7 but that's
78:55 - the issue you just need to add the
78:56 - radius and then this if statement here
78:59 - would need to take in account that
79:01 - radius could you round the corners of
79:04 - the obstacles yeah a save and load
79:07 - button might be nicer than a key press
79:09 - should think you think yes that's a very
79:13 - good point
79:13 - flappy mosquito all right uh-huh
79:21 - part 7 so I'm trying to think here 5:45
79:25 - I've got to get going soon but what I
79:28 - wanted to do let's do the fall I need to
79:30 - do this anyway so let's give me a second
79:39 - here what I want to do is let me let you
79:48 - see what I'm doing here I should really
79:53 - set up I should fix the camera oh do I
79:56 - have what's the chance oh no I don't
79:57 - have I need a memory card reader I think
80:01 - I should lie I should do a cut why magic
80:03 - lantern child oh no way we'll wait I
80:05 - think I don't want documentation do I I
80:07 - don't care do is there a problem if I
80:08 - document me using magic lantern by the
80:13 - way how did I do that thing before where
80:16 - I just kept layering on oh yes I had the
80:19 - live thing okay
80:21 - now hold on I don't have I have stuff
80:26 - downstairs that I could use oh but I was
80:27 - gonna verse thing else oh yeah okay so
80:29 - hold on
80:29 - oh hey let me set up I term let me go to
80:36 - NSC s 18 so now I've got the the new
80:44 - neuro evolution steering and let me open
80:48 - that up and let me go in here actually
80:53 - let me just let me open this in Adam you
81:01 - know it's thinking of making a video by
81:03 - the way I was thinking of making a video
81:04 - of just kind of like what is tensorflow
81:06 - jas maybe I'll do that before I go but
81:16 - let me do this other thing
81:17 - I wanted I want to do tutorials with it
81:20 - but I'm not really ready to do that
81:24 - okay so sketch vehicle okay so what I'm
81:30 - looking at here is I am now looking at
81:43 - this other demonstration of neuro
81:45 - evolution whoa oh whoops
81:49 - no wait oh there we go
81:54 - this is another demonstration of neuro
81:57 - evolution I talked about at the
81:58 - beginning of this live stream and but
82:04 - what I want to do is kind of like just
82:06 - go through and add some comments and
82:07 - clean up the code a little bit so let me
82:15 - do that because I want to release this
82:17 - for my class okay so let's see this is
82:19 - an array of vehicles that's correct this
82:21 - is an array of food this is show a dish
82:25 - this is really a checkbox to show
82:28 - additional info this is a
82:33 - a slider to speed up simulation how how
82:39 - big is the food how much food should
82:45 - there be so these are all I'm just gonna
82:47 - add confidence to this
82:49 - how many sensors does each vehicle have
82:58 - how far can each vehicle see okay
83:04 - so add the canvas grab the checkbox and
83:09 - slider I think the default angle mode in
83:13 - p5 is radians so you don't think didn't
83:15 - need to do that so this is a now so this
83:18 - is create initial population I think I
83:25 - could simplify this right now to just
83:28 - have the vehicles spawn in a random
83:30 - location
83:33 - so let's actually just build that in
83:38 - here it's gonna make things simpler and
83:45 - then the constructor just needs the
83:47 - brain object and here I can just say if
83:52 - brain right if there's an actual brain
83:56 - object so that that simplifies things a
84:00 - little bit okay back to sketch this is
84:06 - how how fast should we speed up variable
84:13 - to keep track of highest-scoring vehicle
84:21 - so this okay run the simulation cycles
84:30 - amount of time okay so this is always
84:35 - keep a minimum amount of food so the
84:42 - first thing that I do is if the amount
84:44 - of food is less than a certain amount
84:46 - just
84:47 - more food and there's a there's this
84:49 - like buffer here and that should
84:54 - probably be a global variable that's
85:00 - really like food buffer equals 50 so
85:03 - let's put that here don't put food near
85:08 - the edge you know a lot of these things
85:09 - are kind of silly they're just in there
85:11 - it's sort of like trying things out so
85:13 - this should now be food buffer food
85:20 - buffer food buffer food buffer and
85:23 - interestingly enough there's another
85:25 - place where I use that value which is in
85:28 - the neural networks inputs right here
85:33 - whoops so this is food buffer I'll come
85:39 - back to this in a little bit all right
85:45 - so now eat any food great go through all
85:50 - the vehicles and find the best so this
85:52 - is looping through am i removing stuff
85:54 - here yes so I need to loop through
85:56 - backwards this is a little bit silly if
85:58 - I'm finding the best and okay so so this
86:02 - is like think and update every vehicle
86:04 - if the vehicle is dead remove it
86:07 - otherwise it's a candidate to be the
86:09 - best if it scores higher than the record
86:13 - so save it now if there is less than 20
86:18 - apply reproduction so I'm only going to
86:20 - reproduce the vehicles if they're less
86:22 - than 20 I don't know if that makes sense
86:23 - maybe I should always allow them to
86:24 - reproduce I don't know let's leave that
86:26 - in there though this would be max or
86:28 - minimum population
86:29 - I don't know this should probably be a
86:30 - variable - I believe that right now for
86:33 - every vehicle create a child vehicle
86:37 - with a probability based on the score
86:41 - divided by the record so I kind of feel
86:44 - like maybe I think this is fine so this
86:47 - is kind of arbitrary but I'm going to
86:48 - leave that and as long as it did produce
86:50 - one add it to the population okay
86:56 - according to score
86:59 - argument to birth is probability and
87:06 - then here if if there is a child then
87:12 - push that all right let me just check
87:15 - the chat here okay so now this is
87:21 - drawing all the food there's no poison
87:23 - involved and just this is just drawing
87:26 - all the food arbitrary colors this is if
87:29 - it's D and debug highlight the best so
87:33 - this is highlight the best if in debug
87:40 - mode and then draw all the vehicles okay
87:49 - let's see how let's see if I didn't
87:51 - break anything ah brain dot copy is not
87:54 - a function shoot
87:56 - let's see I broke something I probably
88:00 - should have tested a little bit more in
88:02 - the interim what line of code was that
88:06 - vehicle dot J s line 37 if brain okay so
88:17 - what did I do here
88:26 - let's see what this is undefined oh it
88:30 - got a number oh because I forgot when I
88:36 - create them probably in the birth
88:41 - function so anywhere I make a new
88:44 - vehicle let's look for that I'm giving
88:49 - it the location which I don't want to do
88:52 - so I just want to pass in the brain that
88:56 - should fix it new so this should say new
89:03 - vehicle with brain copy and then I guess
89:10 - the it it mutates here that's fine so it
89:14 - should mutate here okay all right I can
89:19 - take out the console.log and now that
89:21 - that's fixed all right let's just let
89:24 - this run for a little bit so me I am so
89:30 - me writes in the chat my reasoning
89:33 - behind population length population dot
89:36 - length limit is that when they get
89:38 - really good they out-compete for food
89:40 - and all score really low so that makes
89:42 - sense to like limit the population
89:43 - because if there's too many cloning
89:45 - themselves they'll run out of food so
89:47 - let's just let this run for a while and
89:50 - see if it's doing something that feels
89:52 - somewhat logical yep this looks pretty
89:59 - good you can see this one over here is
90:01 - doing really well it needs to find
90:04 - something though ah yeah there we go oh
90:05 - come on you can do it oh this one is
90:06 - good this one is like I can't believe
90:08 - it's not the high score it's gonna be
90:09 - soon enough
90:10 - where'd it go come back oh it's gonna
90:12 - get stuck that's sad it's gonna get
90:15 - stuck oh I'm standing in front of it
90:16 - it's gonna get stuck over here so
90:19 - hopefully once one someday one will
90:20 - overtake it this one is doing well now
90:22 - so they get really stuck here on the
90:25 - edges because they've kind of learn to
90:26 - like move away but then as soon as they
90:28 - move away they trying to go back so it's
90:31 - kind of interesting I don't know how to
90:32 - deal with that well but they're they're
90:34 - learning okay so you can see there's a
90:36 - bunch of getting stuck in the corner
90:37 - that's fine all right
90:38 - so things are working well now
90:40 - let me go back to vehicle so this is
90:43 - this this is a class for an individual
90:47 - sensor so the vector describes the
90:54 - sensors direction and you know I almost
91:03 - feel like it might make more sense to
91:05 - give it an angle here so right here I
91:10 - kind of feel like I want the sensor to
91:12 - get an angle I don't know why I want to
91:16 - refactor this and have the it make the
91:19 - vector from the angle so it's just a
91:27 - unit vector so I'm gonna call this
91:29 - direction instead of vector BEC that
91:32 - might be silly and then the value so the
91:34 - idea of each sensor is each sensor is if
91:38 - I could just slow this down for a second
91:40 - I should have a pause button but I'll
91:42 - just say no loop each sensor is
91:45 - emanating from each vehicle it has eight
91:49 - surrounding it and the debug mode only
91:51 - draws it if it's sort of like detects
91:53 - it's near a piece of food and the
91:55 - thickness is relates to how near it is
91:57 - to that food so the idea of the sensor
92:00 - is that this is the sensors direction
92:03 - and this is the sensors reading the
92:09 - value like and I guess it's I think it's
92:12 - zero if it's not detecting anything and
92:14 - one if it's like detecting the food all
92:17 - the way there but we'll find out so this
92:18 - is a class for an individual sensor each
92:21 - vehicle will have n sensors this is the
92:28 - class for each vehicle a vehicle can be
92:33 - made from a brain neural network okay so
92:40 - I'm commenting this so this is all the
92:43 - physics stuff right acceleration
92:45 - velocity position interestingly enough I
92:48 - sort of feel like right it's a little
92:53 - cleaner just to give it
92:54 - no velocity I've broken too many things
92:57 - okay so I because I changed this up here
93:00 - I gotta fix this I probably shouldn't
93:02 - have done that and I know I could be
93:05 - using let me search for this with okay
93:11 - so this is actually now the direction
93:15 - here this is now I could have used a
93:19 - tool that would actually like re4 that
93:21 - that should have fixed that all right so
93:24 - what was I double-checking I was up here
93:31 - and oh wait all the physics stuff right
93:35 - does it matter if I just give them no
93:37 - velocity when they start I think I
93:40 - prefer that why I have them moving in a
93:42 - random location okay another super chat
93:48 - from Isaiah thank you okay
93:57 - Thank You Isaiah Federer thank you
94:00 - you're welcome to join the patreon if
94:03 - you want that you're you credit is good
94:06 - okay so now all the physics stuff oh
94:11 - this is silly that's unnecessary if they
94:14 - have no velocity to begin with and now
94:17 - this is how this denotes this indicates
94:22 - how well it's doing this is really like
94:26 - fitness more it's really more like
94:28 - fitness but we'll call it score Oh
94:30 - this sensor angle so this doesn't need
94:35 - to be a variable I this can be this is
94:37 - never changing so this variable I think
94:41 - I'm kind of abusing global variables a
94:44 - little bit but let me take this out here
94:47 - this doesn't really this is kind of a
94:49 - global constant and really would go here
94:56 - what's so this is what's the angle in
95:01 - between sensors
95:06 - don't autofill for me yeah and then now
95:13 - I'd be saying this and this is not this
95:16 - is not gonna no it's not going to know
95:18 - what to pious is two pi is out here so I
95:20 - can say math dot pi times two because
95:23 - that's a p5 built-in variable and the p5
95:26 - variables aren't available until setup
95:28 - happens all right so now this is now a
95:36 - global variable so create an array of
95:43 - sensors and if a brain is passed via
95:58 - constructor copy it otherwise make a new
96:06 - brain inputs are ups inputs are all the
96:14 - sensors plus position and velocity info
96:22 - so again I could be more thoughtful
96:24 - about this about sensors dot length plus
96:27 - 6 but that will work too out arbitrary
96:33 - hidden layer and two outputs for x and y
96:39 - will desire velocity so this neural
96:44 - network takes in all the sensor readings
96:46 - some position and velocity information
96:48 - and then spits out an x and y desired
96:51 - velocity health health keeps vehicle
96:59 - alive okay so this is update called each
97:07 - frame each time step
97:15 - physics so okay fine update update
97:18 - velocity limit speed to max keep speed
97:27 - at a minimum yeah that's fine Matt a
97:34 - minimum update velocity
97:38 - no update position and then reset
97:45 - acceleration slowly die I'll just lead
97:50 - decrease health decrease health increase
97:58 - increase score okay now dead return true
98:05 - if health is low if health is less than
98:07 - zero or if vehicle leaves the canvas
98:12 - that's what's going on here I'm gonna
98:18 - call this clone is that a reserved word
98:20 - in JavaScript clone I feel like I'd
98:22 - rather call this clone than over birth
98:24 - it's a bit more of I think an
98:26 - appropriate term argument to clone is
98:34 - probability and I'm gonna say this I'm
98:38 - gonna call this new vehicle rather than
98:40 - child I think that's probably better and
98:45 - so this function is called clone make a
98:49 - copy of this vehicle with according to
98:55 - probability so pick a rant pick a random
99:02 - number okay otherwise we'll return
99:11 - undefined okay so now clone is not
99:17 - reserved thank you so now this by the
99:20 - way is what well this is this is not
99:24 - gonna this is only gonna live in this
99:25 - live stream I'm not gonna make a
99:26 - tutorial out of this or anything like
99:28 - that's stand
99:28 - but I'm you're watching this so
99:31 - hopefully this is something to watch
99:33 - okay so all sensors start with the
99:36 - maximum length then okay so this is a
99:42 - function to calculate all the sensor
99:44 - readings and predict a desired velocity
99:46 - that's right
99:47 - think list is the list of food maybe I
99:51 - should just call this food list is a
99:54 - little bit weird so let's call this food
99:55 - it'll be a little clearer I think okay
100:03 - all sensors start with maximum length
100:06 - then iterate over all the food the food
100:09 - other position is the food position
100:11 - that's fine that's a good name where is
100:14 - the food how far away skip if it's too
100:18 - far away if it's too far away otherwise
100:24 - what is what is vector pointing to food
100:32 - so now I take a I make a vector pointing
100:36 - from this position to the foods position
100:44 - then I check all the sensors okay the
100:49 - Delta is the angle between the sensors
100:54 - angle and the foods and angle so this is
100:57 - what's going on here is in this example
101:00 - is the idea is that I have a vehicle it
101:06 - has all of these sensors poking out of
101:08 - it and maybe there's a piece of food
101:11 - right here so what I'm looking for is
101:14 - from here I calculate the vector
101:16 - pointing to the food and then I
101:19 - calculate the Delta relative to every
101:22 - one of these sensors right what's the
101:26 - angle in between every one of these
101:27 - sensors and if the angle between is
101:30 - within a given threshold and now here's
101:33 - the thing that angle is between is just
101:36 - that checking the Delta if it's you know
101:40 - if it's this closest sensor
101:42 - but I might want to I mean this is an
101:44 - interesting question for this like so
101:46 - right now right it technically it's
101:50 - going like if the food is here
101:52 - this sensor is gonna I'm sorry I should
101:55 - say let's say the sensor reaches out to
101:57 - here this sensor is gonna light up
101:59 - because it's kind of it's within the
102:03 - halfway point between these two sensors
102:05 - this piece of food but it's not actually
102:07 - intersecting it so I might actually
102:09 - really want to be more thoughtful about
102:11 - like doing some kind of detection of
102:13 - like within a certain range but I'm not
102:16 - gonna worry about that this is pretty
102:18 - good close enough so this is checking
102:20 - the Delta and then if this food is
102:25 - closer than the previous one so then
102:28 - replace the sensors value so actually
102:31 - the sensors value is 50 or the sensor
102:37 - length otherwise it's the sensors value
102:40 - is just the value of the closest piece
102:44 - of food and if it doesn't see any food
102:46 - its value is the total okay so that
102:48 - works now I have to create the inputs so
102:53 - I'm gonna just say this is goofy but
102:57 - these inputs are mapped these four
103:05 - inputs are mapped to distance from edges
103:10 - then these inputs are the current
103:15 - velocity vector and then now all of the
103:20 - sensor readings these are all the sensor
103:22 - readings and now the sensor readings get
103:25 - mapped then in the inverse so if if if
103:29 - there's a food zero pixels piece of food
103:31 - zero pixels from the vehicle its sensor
103:35 - its
103:35 - input to the neural network is one if
103:37 - it's at the if its the backs of them its
103:40 - input is zero then I get the outputs the
103:44 - outputs I map to a velocity vector
103:47 - between negative 1 and 1 this is kind of
103:49 - I wonder if
103:54 - the outputs should actually be the angle
103:56 - and magnitude would that make any sense
103:59 - more than the X&Y amount I mean really
104:02 - what would make more sense for this
104:04 - would be to basically like think about
104:07 - the outputs being a joystick and the
104:09 - joystick is saying like just how much to
104:10 - turn left or right
104:11 - how much to speed up or how much to slow
104:14 - down that probably would make the most
104:16 - sense but I don't really so I could but
104:22 - but I'm gonna leave this as I'm gonna
104:28 - leave this for what it is I'm sort of
104:29 - cure I'm gonna leave it I'm gonna try it
104:30 - with the angle in a second so turn
104:32 - desired velocity and apply the steering
104:35 - formula Craig Reynolds steering formula
104:39 - and apply the force yeah right so me I
104:48 - am Sania is making a good point which is
104:49 - that all the inputs are kind of based on
104:51 - X Y values so if I expect my outputs to
104:54 - suddenly be like angle and magnitude
104:55 - that might but you know with if I had a
104:59 - more stuff it may be more hidden layers
105:01 - you know a neural network is as a
105:05 - universal function approximator should
105:06 - be able to convert from an XY coordinate
105:08 - system to a polar coordinate system so
105:12 - now okay check against array of food
105:18 - calculate distance if we're within food
105:23 - radius if we are in if vehicle is within
105:33 - food radius remove that piece of food
105:38 - increase the health apply force display
105:41 - color based on health translate to
105:48 - vehicle position draw lines for all the
105:58 - activated sensors
106:04 - so this just looks at all the sensors if
106:07 - the value is greater than zero draw a
106:09 - line for it and then also draw text
106:17 - school draw a school display score next
106:21 - to each vehicle then draw a triangle
106:28 - rotating in the direction of velocity
106:29 - that's what this is this is a highlight
106:34 - with a gray bubble so I think I'm done
106:39 - now commenting this this is the wrong
106:44 - URL nature of code 2018 all right
106:59 - is this still working or what did I
107:00 - break all right it's not refreshing for
107:03 - me okay I didn't break anything so let's
107:11 - let this run for a while okay I'm gonna
107:12 - let this run for a while and see how it
107:14 - performs please oh yeah
107:18 - don't worry this is going to get
107:19 - uploaded and I'm looking for
107:20 - contributions now let me be clear I'm
107:24 - not looking for contributions to
107:26 - necessarily I mean I am looking for
107:28 - contributions to make this better but
107:30 - let me qualify that with what makes this
107:33 - better this is meant to be an example
107:35 - demonstration so there's certain things
107:37 - that would make this better would be
107:39 - adding a lot of features to it but I
107:43 - don't want to add features to it I want
107:46 - I just I want it to be as simple so I
107:49 - would like it to perform better wait
107:51 - what what just happened here why did it
107:53 - that was weird I don't remember dragging
107:57 - it back to one did I hit refresh or
107:58 - something I'm gonna let this run for a
108:00 - little while so in other words I would
108:01 - like it to work better in instance like
108:05 - evolved smarter vehicles that collect
108:07 - the food with greater efficiency but I
108:12 - don't want to over complicate it or add
108:14 - a lot of features that make this a big
108:16 - complex
108:18 - simulation so but if you make something
108:21 - from this I would love to learn about it
108:23 - and see it linked out to that so
108:25 - creative projects that have more design
108:27 - ideas and feature ideas I would like to
108:29 - link out to butt fixes and things just
108:32 - anything to simplify this or to make it
108:34 - more clear from an educational point of
108:36 - view or to improve the efficiency of the
108:38 - food collection evolution
108:40 - I would love so let's I just ran this
108:45 - for a while let's take a look at it now
108:48 - so let me slow it down and kind of zoom
108:51 - in you know it's doing something it's
108:58 - clearly doing something different than
108:59 - where it started so and you can see it's
109:03 - speeding up is this one detected it it's
109:05 - sped right up and to go to it so that's
109:07 - good like now it this one seems to only
109:10 - be able to like it's really only learned
109:11 - one of its sensors and you can see how
109:14 - they get stuck in between them
109:15 - and why now it sort of figured that out
109:17 - so you know again they have to learn
109:20 - over time now maybe I need multiple
109:22 - hidden layers this may be this is a
109:24 - complex enough problem that the neural
109:26 - network actually needs multiple hidden
109:27 - layers I don't know about that I mean I
109:31 - could I could try adding more nodes but
109:40 - I don't a certain point like more nodes
109:42 - in one hidden layer isn't as powerful as
109:45 - multiple hidden layers because you
109:46 - create many more combinations of
109:48 - parameters so same player in the chat
109:55 - rightz please create a discord server
109:57 - dan I believe there is an unofficial and
110:00 - whatever that means a discord server I
110:02 - would be happy to log into it or try it
110:04 - but I the official like coding terrain
110:07 - community well is the YouTube community
110:10 - I'm also available on Twitter at
110:13 - Schiffman but there is a slack channel
110:16 - that is for patreon subscribers so
110:17 - that's kind of how I create some
110:19 - discussion and that's the equivalent of
110:21 - kind of like signing up for the class I
110:23 - guess I don't know
110:25 - I don't know what you get from that but
110:26 - it's a smaller community people have
110:28 - signed up for the patreon that I'm using
110:29 - a slack rather than the discord Ben
110:37 - writes hate coding trading I started
110:39 - watching your videos two years ago and
110:40 - I'm now working as a back-end web
110:42 - developer I love hearing that that's
110:44 - wonderful
110:45 - so let's see how this is performing over
110:48 - time now so you know look this one has
110:53 - lasted this one has a score of 5,000 I
110:56 - have not seen them now I've sadly to say
110:58 - that I think unless a piece of food
110:59 - spawns over here oh come on you can do
111:01 - it yes yes yes so this one has really
111:04 - lasted a long time
111:07 - unfortunately it's kind of just waiting
111:09 - for food food to spawn near it they
111:11 - don't seem to be able to evolve right
111:13 - now what would be really effective is
111:15 - for them to evolve a good wandering
111:16 - strategy to like really explore if
111:19 - there's no food near them they seem to
111:20 - be stuck going in circles in this corner
111:22 - but this one is definitely the highest
111:23 - score you can see it highlighted here we
111:26 - can like look at this one here what it's
111:28 - doing it's kind of collecting that food
111:30 - now it has nothing we still have our
111:32 - friend who's got like a score of like
111:34 - 6,000 right now moving in circles so
111:36 - it's really interesting to see what this
111:37 - is done now let's speed this up let me
111:42 - let me let some a bunch more generations
111:43 - go slack is definitely better for a
111:47 - programming related group and less
111:49 - linear conversation well that's good I
111:53 - have been thinking about doing some one
111:56 - thing I would like to do someday with
111:57 - the channel is like I kind of call in
111:58 - office hours type thing Zack Lieberman
112:02 - does these open office if you don't know
112:03 - Zack Lieberman follow him on Twitter yes
112:05 - makes amazing like daily sketches using
112:07 - open one of the core developers have
112:08 - open frameworks he does this open office
112:10 - hours thing it's not it's not broadcast
112:12 - it's private but people can just sign up
112:14 - and Skype in and have free office hours
112:15 - with Zack which is kind of amazing or
112:17 - meet in person and I've always wanted to
112:19 - do something like that as well but
112:21 - haven't figured out a way to do that
112:23 - all right let's slow this back down I
112:27 - probably should just highlight the score
112:29 - of the best one where is the best one oh
112:31 - it's over here look at them what is it
112:33 - that causes them to evolve this like
112:36 - swirling behavior in the corner
112:38 - I wonder if the food buffer is actually
112:44 - a bit of an issue like right now the
112:46 - food cannot spawn is that is this
112:49 - exactly like fifty pixels from the edge
112:51 - maybe right this is probably about fifty
112:54 - pixels from the edge that food buffer
112:56 - variable you know I could have one thing
113:07 - as I could add wrap so instead of like
113:09 - having to learn to like not leave I
113:11 - could let them leave and come back but
113:13 - ah
113:18 - Kari K H got the same kinds of results
113:21 - that's good to know
113:21 - so I would like to build this as a
113:24 - coding challenge look at this you can
113:26 - see like they all the food down here so
113:29 - then when a new one spawns they spawn in
113:31 - a random location they can kind of find
113:34 - some of the food that's up here yet
113:36 - where's the best one it's still here
113:37 - it's gonna like lose its health soon
113:40 - enough that's the thing they eat so much
113:42 - food they become these like gluttonous
113:44 - vehicles I've just collected so much elf
113:46 - it lasts for so long I wonder if I
113:50 - should like they should have to continue
113:54 - to eat more quickly to survive I think
114:04 - the reason is they learned with me I
114:05 - have some here they learn to respond to
114:06 - the buffer by moving in the inverse
114:08 - direction but not directly well I've got
114:09 - to go so when they hit the buffer they
114:11 - drift to one side Y divided by height
114:15 - same for X no buffer into account I'm
114:17 - not sure what that means TMC max health
114:20 - saturation yeah I think like I think
114:24 - probably limiting they're either
114:26 - limiting a maximum health let's try
114:28 - adding that so let's say max health I'm
114:34 - just going to say it's two for right now
114:37 - and this dot health
114:53 - this dot health zero and max health can
115:03 - you have stat I know you can have static
115:05 - functions in JavaScript can you have
115:07 - static variables because a lot of these
115:08 - constants would sort of make sense as
115:10 - static properties of the vehicle but I
115:13 - don't I don't think you can do that like
115:16 - I kind of some things are properties of
115:17 - the vehicle and then some things are
115:19 - like these global variables cuz they
115:21 - don't really change so I don't know
115:24 - those should be I'm constants as well
115:26 - okay let's see let's try max health what
115:28 - did I call it max health static
115:35 - properties are coming but not yet right
115:40 - so food isn't useful when you don't need
115:42 - it let's try this let me just look at
115:46 - like any random popular element of the
115:51 - population
115:52 - what's its max health is two and its
115:56 - health was some negative because it died
115:58 - so I can't tell the thing is that I
116:00 - don't have a good sense of what a
116:02 - reasonable oh I have the best one so
116:06 - hold on let me take out the max health
116:11 - for a second so in theory I have always
116:16 - the best one here oh no it's a local
116:18 - variable we make that a global variable
116:20 - so I can examine it
116:29 - and the console so the best ones health
116:38 - is like almost two right now now die
116:45 - that one died oh well this update in
116:51 - real time it won't right but I can what
116:55 - I should just say is best on health Oh
117:00 - 18 yeah god it could get really high I
117:04 - guess it goes down pretty fast I don't
117:06 - know what's a reasonable thing to cap it
117:08 - at me I am sue B is suggesting are you
117:15 - set interval to log to health you don't
117:17 - like I like to do it manually like this
117:21 - okay alright so let me add that in now
117:26 - anybody anybody have suggestions for
117:28 - what a good something to try as a
117:30 - maximum health I tried to let me limit
117:33 - it where did I do that let's try three
117:37 - let's not be so aggressive let's just
117:40 - limit it's at three and so let me
117:42 - constrain it and let's let it run for a
117:48 - little bit as soon as I get that thing
117:53 - where I could copy/paste from one
117:54 - computer to another set up static and
118:02 - constant all right so now let's see what
118:09 - this does
118:15 - like I think they're gonna die much more
118:19 - quickly and not so they're not really
118:20 - gonna get stuck at the edge so the thing
118:23 - is can they figure out to move more
118:27 - towards the center to wander more I
118:30 - don't know you can see they're still
118:34 - getting stuck at the edge but they're
118:39 - dying work we this one's doing really
118:41 - well like look how like well it's
118:43 - just picking up the food it probably
118:47 - needs also like a little bit more
118:49 - maximum force because it's difficult for
118:51 - it to steer but it does it now see now
118:56 - it's stuck I mean the other thing is I
118:58 - could give them much further sensors and
119:03 - I don't know if this defeats the purpose
119:04 - but like I could say the vehicles I had
119:08 - to go get tweaked this stuff forever
119:09 - like if I make a sensor length 150 like
119:12 - watch what happens now they can really
119:15 - they're really like they're probably I
119:17 - would think not going to get stuck as
119:19 - much on the edge cuz they're gonna pick
119:20 - up food even if they're like far away
119:23 - from the food so let me run this for a
119:24 - little bit
119:26 - max health should be PI add an input for
119:35 - its health that's interesting
119:37 - right if it's health is getting low
119:39 - should it do something different I don't
119:40 - know so let me like do this now the
119:43 - thing is it the way I have this debug
119:44 - view it's sort of hard to see them but
119:46 - let me take that off so what do we see
119:49 - now it looks like sort of more
119:52 - reasonable right like I don't see them
119:57 - getting stuck along the edge I actually
119:58 - kind of like this let's speed it up a
120:02 - little bit
120:09 - alright this this the problem is there's
120:12 - a lot of noise to the sensors because
120:15 - they're gonna see so many more pieces of
120:16 - food but so they're they're kind of
120:20 - acting a little crazier in the center
120:22 - but they're not getting stuck at the
120:24 - edge because they're detecting the food
120:26 - so this is certainly better I think this
120:29 - is pretty interesting to watch though
120:31 - real the thing that I would like to do
120:32 - now is turn off debug and watch it like
120:37 - more slowly over time like can we really
120:39 - see like if I sit here I'm going to zoom
120:41 - in like this is not really sped up can
120:46 - we really get a sense of watching this
120:48 - evolution now max health equals pi
121:01 - so even over it without it really sped
121:03 - up over a little bit of time we're
121:04 - seeing this evolutionary behavior I kind
121:08 - of liked it when I made it lose score
121:10 - when it accelerated that's interesting
121:14 - but I would I like those I like these
121:19 - little moments when they get a burst of
121:20 - speed and then they slow down so but
121:25 - anyway there's so many properties here
121:27 - I'll let I'm gonna let let me let me
121:28 - upload this so I'm gonna put this in in
121:32 - a couple different actually I where am I
121:34 - gonna put this all right git add changes
121:52 - made during livestream to improve the
121:58 - simulation what live stream changes dear
122:04 - diary today on the coding train I tried
122:11 - something new instead of making a
122:17 - tutorial I just pulled up an example I
122:23 - been working on for quite some time and
122:29 - I added comments to it then I became
122:36 - obsessed with tuning it tuning it and
122:45 - against and tuning it but I really
122:52 - whoops but I really but I really should
122:57 - go home and have dinner now because it's
123:05 - late maybe tomorrow
123:08 - Oh maybe tomorrow the pull request ferry
123:16 - will visit me with some nice
123:21 - improvements mind you I don't want to
123:25 - make the code more complex so
123:28 - improvements by improvements I really
123:35 - mean simplifications or small changes
123:42 - that improve the the the be evolutionary
123:54 - genera the evolutionary algorithm for
123:59 - neural network model I hope this example
124:07 - spires some interesting work special
124:11 - thanks to me I M so me for their
124:16 - contributions and also to dairies
124:26 - because I'm me github to Darius K for
124:36 - inspiring me to think of git commits as
124:43 - a diary Sincerely Yours Daniel chief
124:54 - maman
124:56 - okay alright
125:00 - so now I'm gonna close this and hey
125:07 - where to go
125:08 - don't tell me I lost it close please I
125:11 - would hate to lose that get status get
125:16 - oh I'm in neuro oh I'm on branch neuro
125:18 - that's fine git push origin neuro and
125:26 - this is a little kind of unnecessary but
125:28 - I'm gonna do
125:28 - anyway I'm gonna pull request it to
125:30 - myself so you look great pull request
125:37 - and I'm going to whoops I'm going to
125:42 - merge ok so that is completed and so I
125:55 - think I'll leave this here for a little
125:57 - bit longer just in this repo ultimately
126:00 - this is going to get moved to here
126:03 - so ultimately the idea right now I have
126:06 - in the neural network library an XOR
126:08 - example an amnesty actually the amnesty
126:11 - example is kind of broken I think doodle
126:13 - classification and the neuro evolution
126:15 - flappy bird so eventually the neuro
126:17 - evolution flappy bird steering will make
126:20 - its way here and then and then and then
126:26 - I'm gonna start remaking these examples
126:29 - the first one being the doodle
126:30 - classifier with tensorflow jas so that's
126:32 - my plan that hopefully I'm gonna get to
126:34 - that next week alright so thank you
126:38 - everybody for watching and tuning in to
126:40 - this live stream I'm just gonna check my
126:42 - email this is good these are some good
126:52 - messages these are some really good
126:55 - messages they're not what I'm looking
126:56 - for right now ok so I am really hoping
126:59 - to be back here let me just say I'm
127:00 - hoping to actually do a live stream this
127:02 - Saturday morning and there's a project
127:05 - that I'm looking to investigate it's
127:07 - related it's related to Google's CS
127:09 - first and Earth Day and their Google
127:11 - logo challenge but I was sort of waiting
127:13 - to hear back from the Google's education
127:16 - team I think to get some feedback about
127:18 - what would make the most sense for me to
127:20 - do so if I get it together I'm making no
127:23 - promises right now but Saturday morning
127:26 - probably around 10 a.m. well I have to
127:29 - be done by 11:30 a.m. but that now has
127:34 - probably isn't but I also might just
127:37 - record a video offline and release it on
127:40 - Saturday so stay tuned
127:41 - hopefully on Saturday there will be a
127:43 - live stream or a new upload looking at
127:46 - doing an Earth Day challenge with the
127:47 - Google logo so that's something I'm
127:49 - thinking about doing if you have any
127:50 - ideas or thoughts about that please let
127:53 - me know okay so thank you everybody I'm
127:59 - going to be gone now wait I don't have
128:03 - it yet
128:04 - but apparently I'm told I could have an
128:08 - outro so instead of just pressing like
128:10 - stop on the live stream there could be
128:12 - like this outro actually let me try this
128:14 - here's gonna be my outro go I'm not
128:21 - there let's see if we can make this work
128:30 - wait how do i how do I do this
128:34 - Oh clothing tree live and then if I go
128:41 - over here and then right if I go here
128:49 - and I
128:54 - and I do something weird and then I come
128:58 - back over here waiting at certain point
129:05 - the duplication fix happened that's not
129:21 - good oh I think this should be blank I
129:24 - shouldn't be in that that's the problem
129:26 - right because oh wait no not this again
129:30 - how do I get it without this like
129:32 - opening sequence thing oh so much
129:34 - duplication I know I'm back okay let's
129:37 - see this is my outro it's gonna take
129:52 - forever to get to so many because I had
129:54 - this whole long process of so many
129:56 - people yeah this by the way I find very
130:01 - entertaining fun entertaining if you
130:04 - were actually still watching at this
130:05 - point you know yeah it's pretty scary
130:07 - alright goodbye thank you for watching
130:14 - the coding tree I guess it works better
130:27 - if I just have this open because it
130:36 - definitely needs to be one wearing a
130:38 - like conductors cap
130:56 - right also perhaps a oh let's make sure
131:05 - the camera doesn't shut off well this is
131:08 - bad for me to go in front of it that's
131:09 - really bad
131:11 - unicorn hoodie is probably a good thing
131:13 - to add to this okay now I think we're
131:27 - finally ready for me to read the random
131:31 - number okay 4053
131:37 - seventeen thousand seven hundred fifteen
131:39 - forty three thousand four hundred thirty
131:41 - four thousand five hundred twenty two
131:43 - sixty eight thousand eighty nine thirty
131:45 - thousand three hundred fifty five twenty
131:48 - thousand three hundred and twenty two
131:50 - fifty two thousand three hundred and
131:52 - thirty three seventy six thousand 76 and
131:56 - ninety one thousand seven hundred and
131:59 - twenty seven alright thanks for watching
132:01 - the cody dream this has been the coding
132:04 - train with me your host Daniel
132:09 - Schiffman whether we I think the quality
132:22 - of the background is like degrading over
132:24 - time that's kind of interesting
132:26 - why is it doing that where's the unicorn
132:28 - hoodie the court buddy is my favorite
132:30 - part
132:30 - come on back here to court lady come on
132:33 - back you there no that's the oh there's
132:35 - the unicorn everybody out of the way the
132:37 - unicorn hoodie is the video compression
132:46 - is totally insane right I mean what
132:50 - would happen if I just oh oh whoa oh no
132:54 - no Kay this is this is over now goodbye
132:58 - hey
132:59 - um this is crazy what it's doing all
133:03 - right let me okay so I'm gonna leave I'm
133:07 - gonna leave and um oh the SpaceX stream
133:16 - started I've got a good idea space X
133:26 - livestream
133:37 - okay oh it's gone now somehow I thought
133:46 - wait a sec oh no no II what am i
133:50 - watching here I'm so confused
133:51 - okay I'm not watching my stream anymore
133:53 - like why am I not duplicating anymore
133:56 - I'm just gonna sit here wait for the
133:57 - space Xtreme is it gonna launch how long
134:01 - till it launches Oh 11 minutes people
134:08 - want to hear that hold on let me let me
134:15 - make it so you can watch both the coding
134:17 - tram and a rebroadcast am I gonna get in
134:19 - trouble for three broadcasting the space
134:21 - Xtreme I don't think so whoops we're
134:25 - gonna attempt to land this stage today
134:27 - on the drone ship after it separates
134:28 - from the upper stage now that upper
134:30 - stage our stage two as we call it that's
134:33 - right on top of stage one poster boy is
134:35 - single in vac engine on it that's Merlin
134:37 - vacuum engine that's the engine that
134:39 - ignites after stage one separates and
134:42 - begins its journey back to earth the
134:44 - second stage it's what's going to carry
134:45 - tests from the edge of space and
134:47 - accelerated it to orbital speeds of just
134:49 - over seven and a half kilometers per
134:51 - second now Tess is currently sitting on
134:54 - the very top of that stack inside of our
134:56 - seventeen foot diameter payload fairing
134:59 - that's that nose cone structure you see
135:01 - on your screen up top the fairing is
135:03 - what protects the spacecraft from Aero
135:05 - thermal heating and looks as we launch
135:07 - it into space once we reach vacuum ten
135:14 - minutes we don't need them anymore
135:16 - there's just a structure that you see on
135:19 - your screen there that is referred to as
135:21 - our transporter erector this is what we
135:24 - use not only to roll the rocket out of
135:25 - the hangar and to the pad and then to
135:27 - lift it up and support it in its
135:28 - vertical position but it's also what
135:31 - routes Falcon 9's fluids power until
135:33 - image
135:33 - umbilicals from the ground systems all
135:36 - the way to the vehicle itself and does
135:38 - so until Falcon 9 goes on internal power
135:40 - and launches and clears the pad at that
135:42 - point the vehicles internal flight
135:44 - computer and automation and radio
135:46 - frequency communication is what's going
135:48 - to take over the test space there we go
135:53 - this is going to be the quality the 24th
135:57 - Falcon 9 landing if we're successful
135:59 - today and SpaceX just eight launch this
136:02 - year I'm gonna wait I just I had my own
136:07 - commentary I don't have anything you
136:09 - know what I would like to do is do like
136:11 - a lunar lander challenge somebody on
136:13 - Twitter I think it was on Twitter sent
136:15 - me like a lunar lander simulation I mean
136:20 - it's obviously much simpler than oh and
136:21 - coating stem stem cotangent a wonderful
136:25 - YouTube channel and an oxidizer which is
136:36 - liquid oxygen fuel is about 90 percent
136:40 - are so loaded on the rocket and stage
136:42 - sorry on stage one and 75 percent loaded
136:46 - on stage - oh I'm sorry
136:48 - actually our p1 the fuel is fully loaded
136:50 - on stage one in two and it's LOX that's
136:53 - about 90 percent loaded on stage 175
136:56 - Toby strong what's the music you use at
136:59 - the start it's called core even I'd
137:06 - allow filming television composer in Los
137:08 - Angeles because a friend of mine and he
137:11 - sent me a bunch of music tracks actually
137:13 - the composer of Zuko de train song and
137:15 - that's when we're creating rainbow so
137:17 - that when you start feeding them their
137:19 - full flow of liquid oxygen in flight
137:20 - that lock stays nice and cold and
137:23 - doesn't manage the landings the rocket
137:25 - village in exact exactly what I wanted
137:27 - to do I would love to do a neuro
137:31 - sounding like we are looking good for an
137:33 - on-time wash today I'm not hearing about
137:35 - any issues with upper-level clouds our
137:38 - ground level winds are looking within
137:39 - limits as are those upper-level winds
137:41 - and we're within our lightning rules
137:44 - spacecraft is currently healthy it's on
137:46 - internal power and the range is
137:48 - currently go for an on-time they're
137:50 - super Chad I missed that thank you super
137:53 - child now I'm looking at my phone
138:01 - literally looking at my phone yeah I
138:08 - don't think that music is anywhere we're
138:13 - waiting for the lunch we're launching
138:19 - NASA's transiting exoplanet survey
138:21 - satellite come on SpaceX
138:26 - you can do it you can launch t-minus
138:31 - seven minutes everybody
138:34 - exercises oops wrong oh how come I don't
138:56 - hear it anymore
138:57 - we're high tech wide field-of-view
138:59 - cameras designed and manufactured by mi
139:01 - t--'s Lincoln Laboratory cool these
139:03 - cameras will allow tests to detect
139:04 - exoplanets which are planets that are
139:06 - outside of our solar system well it does
139:08 - this by looking for a phenomenon known
139:10 - as a transit this is where a planet
139:12 - passes in front of the toast star
139:14 - causing a periodic dip in that star's
139:17 - brightness this allows scientists to
139:19 - assess the size mass atmospheric
139:22 - composition and structure of those
139:24 - planets and this is particularly
139:26 - exciting to astrophysicist and
139:27 - astrobiologists because some of those
139:29 - planets may fall into what is referred
139:31 - to as the habitable zone that means it
139:33 - might have the right conditions to
139:35 - sustain liquid water and potentially
139:37 - support life falcon 9 will be ingesting
139:39 - Taniguchi are a
139:43 - at its highest point reaches two hundred
139:45 - and seventy three thousand kilometers
139:47 - that's over two thirds of the way to our
139:50 - moon after test separates from Falcon 9
139:53 - over the net 60 days the spacecraft will
139:55 - use its onboard dressers to perform a
139:57 - series of maneuvers which includes a
139:59 - flyby of the moon in order to slingshot
140:02 - it into its final high earth science we
140:04 - will this orbit is what's going to give
140:06 - test an unobstructed view of the night
140:08 - sky allowing the spacecraft to absorb
140:10 - and observe and catalogue thousands of
140:13 - exoplanets for future studies James Webb
140:16 - Space Telescope Space Telescope and
140:18 - large ground-based observatories there's
140:21 - a wonderful project by Jer Thorp which
140:24 - is a data visualization of a lot of the
140:26 - Kepler data we have five minutes
140:28 - I can go track that down really quickly
140:31 - Jer Thorp Kepler turtle sequences have
140:35 - started sequences are starting at one
140:47 - point I had 45 seconds away from liftoff
140:53 - so let's check in on the rocket one more
140:55 - time before stepping in in a terminal
140:56 - count
140:59 - so anyway III do exciting no I can't
141:03 - look at this anymore I have a code
141:09 - example an old puffing coded rocket
141:10 - while on the ground and in flight and
141:13 - very soon what you're gonna see is those
141:15 - cradle arms that are holding their
141:16 - rocket they're going to open up and the
141:19 - transporter erector it's going to lean
141:21 - back slightly it's going to retract you
141:24 - also might see some venting coming from
141:26 - the side of CV
141:27 - that's totally normal it's just liquid
141:29 - oxygen that's boiling off eating up and
141:32 - being released from the tanks at t-minus
141:34 - one minute the Rockets internal fly
141:35 - computers are going to take over which
141:37 - are here on the countdown that as Falcon
141:39 - 9 is his merits the range is currently
141:42 - looking good for an on-time launch today
141:44 - that they are going to launch with the
141:45 - Roger no power and it's go and whether
141:48 - it's go we are looking awesome for a 651
141:51 - p.m. t0 now our launch window today is
141:59 - only 30 seconds long but that's pretty
142:01 - much an instantaneous window for some
142:03 - reason we can't get off today we'll come
142:05 - back again tomorrow at 7 o 9 p.m.
142:07 - Eastern Time Here I am inside the space
142:10 - X rocket last three and a half minutes
142:12 - of terminal count
142:22 - I'm ready to go come on SpaceX let's
142:25 - lunch ready looks messed up a pleasure
142:37 - complete
143:03 - [Music]
143:08 - launch rocket come on switch to the
143:19 - middle it's cured by the way I highly
143:27 - suggest you just go and watch the actual
143:29 - SpaceX livestream you won't have to meet
143:32 - here
143:33 - Oh to the my stitch to know how clocks
143:39 - on that week right we want to know what
143:42 - they're saying
143:52 - Falcon 9 is on internal power Falcon 9
143:55 - on internal power
144:04 - maybe it goes in someone Gragas
144:08 - closeouts is starting clothes out
144:10 - clothes out
144:29 - eeeh PS is ready for launch FTS ready
144:33 - for launch
144:37 - token Hines and startup grant as close
144:41 - as it's complete
144:46 - congas completing for floyd present for
144:51 - flight how do you go from watching go
144:53 - for launch
144:53 - LD
145:07 - all aboard all aboard stage ones that
145:19 - start at pressures DUI is 15 seconds
145:22 - 90-80 usually 10 9 8 7 6 6 5 5 4 4 3 3 2
145:34 - 2 1
145:50 - launched my decorations
146:22 - as you just saw Falcon 9 has
146:25 - successfully cleared the pad and is now
146:28 - on its a spent Basin is coming up in
146:36 - about 15 minutes you're gonna hear the
146:37 - call out that Falcon 9 would have had
146:39 - max Q that James for maximum aerodynamic
146:41 - pressure that's the point at which the
146:44 - rocket is seeing its highest stresses on
146:46 - its ascent
146:54 - vehicle has passed maximum aerodynamic
146:56 - pressure to tell by the cheers what you
147:01 - heard on that call-out we have gotten
147:03 - through max Q coming up next we're gonna
147:06 - hear the call for impact absorption as
147:08 - we go that was it that is where we chill
147:12 - in that Merlin vacuum engine down to
147:15 - operating temperature
147:23 - now coming up your short where you're
147:25 - gonna hear three big events happening in
147:27 - rapid succession
147:28 - the first is Miko that stands for main
147:30 - engine cutoff that is where all nine of
147:32 - the first agencies are going to shut
147:34 - down that's in preparation for the next
147:35 - step which is stage set for stage
147:37 - separation there's where stage 1 will
147:39 - separate from stage to stage 1 will make
147:41 - its way back down to the drone ship
147:43 - stage 2 will continue on with tests to
147:46 - its orbit and then you're going to hear
147:48 - second engine start that is the ignition
147:50 - of the second stage engine let's check
147:53 - it out here hello I'm here reporting
147:55 - live from inside the rocket pretty
148:07 - pretty warm in here actually we go
148:12 - [Applause]
148:15 - [Music]
148:16 - [Applause]
148:23 - and as you just saw we had a successful
148:27 - stage separation and in successful
148:29 - mission of that second stage engine
148:38 - fairing should be deploying at any
148:40 - moment there we go
148:41 - and you can see that tiny but strong
148:44 - test spacecraft inside of that on top of
148:48 - stage two stage one is making its way
148:52 - back down to earth well we're gonna see
148:55 - coming up pretty shortly is a boost back
148:58 - burn grid fins have deployed today just
149:08 - following nominal trajectory call
149:11 - trajectory yes
149:18 - how long does this thing go right now
149:24 - stage is gonna continue to burn all
149:27 - right I think maybe I'm gonna go I hope
149:34 - you're enjoying the SpaceX livestreams
149:36 - coming up for stage one the next one's
149:39 - going to be the entry burn that's where
149:41 - we're going to reignite three of the
149:44 - stage 1 engines and that turn is
149:46 - intended to slow down stage ones descent
149:50 - as it makes its way through that thick
149:52 - upper atmosphere how do I rotate in
149:55 - I feel like rotating would be good
149:56 - there's gotta be like a rotation seeing
149:59 - that at 6 minutes and 29 seconds or so
150:01 - so in about a new transform rotate well
150:09 - there's this but how do I just like can
150:15 - resize is there a place I can grab on to
150:21 - to rotate it's silly Apple taskbar no
150:30 - this is live
150:40 - okay okay I gotta go
150:43 - we're hearing that stage choose burn is
150:46 - still performing nominally
150:56 - all right everybody at least wait for
150:58 - the booster LAN this was fun this will
151:02 - be recorded I can always come back and
151:04 - do this again
151:04 - hey stay choose gonna continue to
151:07 - pressure about another what this really
151:09 - should be in one minute until we see
151:12 - that reentry burn this
151:14 - now after that reentry burn stage one is
151:18 - gonna continue on making its way down to
151:20 - the drone ship and coming up thereafter
151:22 - will be the landing burn that'll be the
151:24 - third of the three burns and at that
151:26 - point we're gonna reignite that center
151:28 - engine inai and that'll be it's actually
151:31 - a seven o'clock I have to go alright
151:33 - thank you but go and watch the real
151:36 - SpaceX go and watch the actual SpaceX
151:40 - livestream I'm gonna go and I will see
151:48 - you hopefully another livestream next
151:50 - week for sure a week from this Friday
151:52 - won't be here this Friday I'll
151:53 - definitely be here a week from this
151:54 - Friday and it might be at least a
151:56 - livestream in between then or a video
151:59 - that that I'll be doing between then
152:01 - okay so let me get going here I'm gonna
152:10 - hit stop and goodbye I will see you next
152:14 - time on the coding train thank you for
152:16 - tuning in and participating this insane