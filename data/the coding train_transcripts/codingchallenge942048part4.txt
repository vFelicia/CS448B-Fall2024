00:00 - hello I am back for a part four of the
00:02 - 2048 coding challenge should I be here
00:05 - I'm not really sure but there was at
00:07 - least one very significant bug in this
00:09 - current version and I think there are
00:11 - some things that we could improve I have
00:12 - actually already made a list and this is
00:17 - my list I want to fix that really
00:19 - important bug I want to add a condition
00:22 - that knows when the game has been
00:24 - completed when you've reached 2048
00:26 - there's anything that I see I should
00:28 - refactor to make nice while I'm doing it
00:31 - maybe I'll do that maybe I'll come back
00:33 - another time because really I kind of
00:35 - I'm starting to realize through feedback
00:37 - that I've gotten from you the viewing
00:38 - audience that possibly considering doing
00:41 - this in a more object-oriented
00:42 - programming manner where each tile is an
00:45 - object that knows about its neighbors
00:46 - this will really actually I think really
00:48 - lead me to be able to do animation more
00:50 - easily so animations I really want to
00:52 - get to but that's I think becoming a big
00:54 - project I really need to refactor so
00:56 - that's gonna wait save for later but I
00:57 - think at least if we add some colors and
01:00 - specifically notate which new tile when
01:05 - there's a new tile like the two or four
01:06 - that just magically appears is a
01:08 - different color like purple then I think
01:11 - that will really help so this is my list
01:12 - I'm going to go do the first thing we do
01:14 - is just fix that bug now this bug was
01:17 - not discovered by me it was discovered
01:19 - by thank you to deng cojocar on github
01:29 - that i had a bit of an issue here if
01:32 - you'll notice here in my if statement if
01:34 - options dot length is greater than zero
01:38 - that's not how that's busy if statement
01:42 - was completely ignored the whole time
01:43 - that is just ending the if statement and
01:45 - the code keeps going so I really need to
01:47 - fix that it's actually already been
01:48 - merged on github but the new version
01:52 - um this part four is being recorded I'm
01:56 - back thank you
01:58 - apologies for that interruption right
02:03 - here this code was not even getting
02:05 - executed at all so oh I was saying that
02:08 - this video currently right now me I
02:11 - make recording this a few days later
02:13 - after I did the original version of the
02:15 - coding challenge that's why there's been
02:16 - this little hiatus so I need to get rid
02:17 - of that and I need to put some curly
02:18 - brackets in here and now I think we
02:21 - fixed this very significant bug so we
02:24 - have check fixed a bug
02:27 - I should probably test the code be nice
02:30 - if I had some use by the way this game
02:31 - I've recently made a video tutorial
02:33 - series on unit testing wherever that
02:35 - shows up this game would be great to add
02:38 - some unit tests too as I continued to
02:39 - prove it to make sure the game itself
02:40 - doesn't break okay so let me zoom back
02:44 - out let me at least just this is my live
02:47 - human being unit I'm unit testing I'm
02:49 - just gonna like make sure it kind of
02:51 - still works and it still kind of does
02:52 - okay great now let's add oh now that I
02:54 - forgot to mention the one thing I did in
02:57 - between the recording of part three in
02:59 - part four is I did at the very least
03:01 - just kind of break I had all of my
03:03 - justice code in one file sketch that Jas
03:06 - and I broke it up and put it into
03:07 - multiple files so all the functions that
03:09 - deal with kind of iterating over the
03:11 - grid I've got here and functions that
03:13 - have to do with some of the game logic I
03:15 - put in a separate file so that's gonna
03:16 - make things a little bit easier to
03:17 - manage and for the time being until I
03:20 - implement some build process that would
03:22 - then like put them all back into one
03:23 - file I just need to make sure I
03:25 - reference all three of those files here
03:26 - in my HTML file all right back to end
03:32 - game condition so in grid are maybe in
03:37 - game I'm game right is that where I had
03:39 - I had a function called is game over
03:42 - which was incredibly awkwardly insanely
03:45 - written to determine if there were no
03:48 - empty if there are no moves possible
03:49 - left so I want to write a function now
03:53 - called game one and I probably could I
04:01 - could probably have both of these be one
04:03 - function right the game is over it also
04:05 - if you've won but like I could check for
04:08 - it right here but what I'm gonna do is
04:10 - I'm just going to do a totally separate
04:11 - because this is gonna be super easy to
04:13 - do I'm just gonna check if any anything
04:17 - equals 2048 return true and then
04:23 - otherwise return false
04:25 - if you get to the end and there was
04:27 - nothing equal to 2048 so this is a nice
04:29 - function just to check is anything equal
04:32 - to 2048 and someday I might refactor
04:34 - these with some higher-order array
04:35 - functions but for right now just
04:36 - iterating through everything and
04:38 - checking okay now let me test know how
04:41 - am I going to test if this foe first of
04:43 - all you need to use this function I'm
04:45 - going to go back to the sketch and down
04:46 - here is where I check is game over and
04:49 - now I'm going to also check game one and
04:55 - maybe I should call this is game one
04:58 - that's a little bit awkward phrasing
05:00 - there if game one console dot log game
05:08 - one now obviously I would want to maybe
05:10 - include like a nice animation or bad Dom
05:12 - element or something but I'm just giving
05:14 - you this Gump it's putting in the
05:15 - skeleton of this here so let's go back
05:17 - and change this to is game one to be
05:22 - consistent with my excellent function
05:24 - naming and then now how can I test this
05:27 - well I come to something a little bit
05:29 - ridiculous which is that I could say in
05:31 - the ad number function where's my ad
05:36 - number function where did I put that
05:39 - would be good look at all these
05:41 - different files so I have no idea where
05:42 - anything is I think that's a grid I
05:44 - would get ad number so what I could do
05:48 - is instead of adding a two or a four I
05:53 - could add like a 256 or a 512 that would
05:57 - probably make it pretty easy for me to
05:59 - get to 2048 pretty quickly so let's
06:01 - create a version of the game I'm gonna
06:03 - refresh I'm starting with just 256 and
06:06 - I've got 512 whoa something crazy
06:09 - happened where I made the 1024
06:12 - tiny I got to figure that out
06:16 - so I should also fix that and now 2048
06:20 - game 1 so I got a 2048 so why all of a
06:25 - sudden is my sizing completely insane
06:27 - where this is ridiculously tiny where
06:30 - did I have that here is where I have my
06:33 - sizes 64 64 52
06:38 - well I don't know let's make this I
06:46 - don't know let's make this 36 and this
06:49 - 18 let's just try that it probably would
06:56 - alright that's I'm liking this a little
06:58 - bit better but ah but really if I could
07:00 - just add some colors than here but it
07:02 - could pop a little more because I would
07:03 - see that 1024 of the 2048 has this nice
07:06 - bright color so wait and game condition
07:14 - that wood is now completed so let's go
07:18 - to the colors let's go to the colors
07:19 - right now and then we'll revisit the
07:21 - sort of idea of refactoring so let's go
07:22 - to the colors so we're refactoring as we
07:25 - go
07:25 - so one thing weirdly I have here's the
07:28 - sizes this is kind of strange I have
07:31 - four sizes I should really make some
07:35 - kind of lookup table right so this could
07:38 - be in a JSON file but let's just put it
07:40 - up here let's put and really this this
07:42 - is why I probably want this
07:43 - object-oriented as well but let's put
07:46 - let's let's make a JavaScript object
07:49 - we're gonna call it styles I know that's
07:51 - no good tiles colors and sizes let me
07:56 - call it tiles colors and sizes somebody
08:00 - will think of a better name okay so
08:03 - let's say this is what we have right we
08:05 - have the numbers can be two the numbers
08:12 - can be for the these are all the options
08:14 - right eight 1024 we're almost done
08:20 - 2048 so now each one of these whoops I
08:25 - didn't want this to reformat it this is
08:27 - they look up to is the lookup for what
08:30 - do I need I need a size font size which
08:34 - will be 64 and I need a color which
08:37 - would be I can think I could probably
08:39 - just do this as a hex value it's a
08:41 - string so let's just say so I'm gonna do
08:46 - this so I would love to make this like a
08:48 - config file that I load or something
08:50 - and now so now
08:52 - all I need is to put this after every
08:54 - single one of these so I'm gonna put
08:59 - this in a separate file and take this
09:00 - whole thing colors and sizes and I'm
09:08 - going to make a new file I'm gonna call
09:10 - it config J s and I'm just gonna add
09:14 - that one also here in index.html and now
09:22 - if I look at this let's take a look at
09:24 - this okay 2 is 64 4 64 8 is 64 16 is 64
09:30 - 32 is 64 then I'm gonna go down to 36 36
09:36 - anybody who's watching this right now if
09:39 - you could possibly give me some
09:41 - suggestions for colors then I'm gonna go
09:45 - to 1024 I'm gonna go to 18 and 18 oh I'm
09:52 - back so I now just went to the the
09:58 - Styles files for my coding training
10:00 - website and here's a bunch of colors so
10:02 - let me go and grab these it's probably
10:06 - not enough colors but we can figure
10:07 - something out so I'm going to now come
10:10 - at this out let's use the red for the -
10:16 - whoops - and the 4 okay so now that I
10:23 - have this crazy colors and sizes
10:26 - variable let's just call it colors sizes
10:29 - colors sizes I'm gonna now go back to
10:34 - this code where I draw everything and I
10:38 - don't need this anymore in fact I don't
10:40 - even need this anymore because I'm not
10:42 - really concerned about the length I do
10:44 - need this because I want to look up its
10:49 - size and color based on its string so
10:52 - now I'm gonna say sizes colors index s
10:56 - really not really indexed but property s
10:59 - dot size that's the font size
11:05 - that goes here and the color goes here
11:11 - it's just possibly going to work
11:15 - refresh okay sizes colors not defined
11:19 - because I'm a lunatic and I forgot I
11:22 - know let's see colors Isis okay colors
11:30 - five colors sizes there we go that
11:32 - should fix that wrong name oh I forgot I
11:37 - want to make the rectangle have that
11:39 - color not the text although that's kind
11:41 - of interesting so where is the rectangle
11:44 - so this really needs to be up here and
11:51 - the fill should be here and the text
11:57 - size can be here now this is gonna be a
11:58 - little bit of an issue because Val is
12:00 - not defined up here the Val has to be up
12:04 - here also and if Val is not equal to
12:08 - zero
12:12 - I'm gonna have this fill otherwise no
12:15 - fill just do that
12:17 - so now s is not defined put that up here
12:25 - okay whew weird weird Oh me weirdo me
12:29 - did some horrible something to create a
12:31 - bug yes so I guess I could say Val to
12:36 - string I'm being told in the chat might
12:38 - be a more elegant way of saying that and
12:42 - also the stroke should be zero no matter
12:44 - what and let's try this okay I've got oh
12:48 - I've got a color there oh look at this
12:53 - fill 0 I need to put a fill to make sure
12:56 - the text appears
13:05 - looking good got some colors oh yeah
13:11 - let's go back though so why did my color
13:15 - for 512 doesn't seem to be appearing so
13:19 - let's go down did I forget it
13:21 - 512 oh it's so that's why I don't have a
13:26 - color for 512
13:27 - let's give it something like this one
13:32 - everyone who cares about color is just
13:34 - going completely insane right now there
13:37 - we go okay so now I've got some colors
13:39 - now let's go back to the ad number
13:43 - function and let's have it ad twos and
13:48 - fours again and let's see how it goes
13:50 - okay so I feel like two and four should
13:55 - have a different color and they should
13:57 - probably just start with something much
13:59 - lighter so let's again I'm not gonna get
14:02 - too worked up over the design of this
14:04 - because I've already done like a
14:05 - horrible job and I'm going to just make
14:13 - that I'm just like oh there we go yellow
14:16 - let's have two in for be a bit different
14:19 - or maybe a bit different
14:22 - there we go okay very greenish in
14:26 - yellowy okay so this is good this helps
14:28 - already and by the way you know one
14:30 - thing that might be nice is just to
14:33 - emulate the design a bit more there's no
14:35 - reason why I couldn't this is a
14:36 - little-known fact p5.js I can use
14:38 - rounded rectangles the rect function in
14:42 - p5 can actually draw a rounded rectangle
14:47 - and the way that you do that is by
14:51 - giving it a value at the end that's
14:53 - basically the v argument is the radius
14:58 - of the the optional radius of the top
15:01 - left top right bottom right and bottom
15:03 - left but I believe if we give it just
15:04 - one radius it's going to do the same for
15:07 - all of them so I'm going to in where I
15:10 - draw the rectangle I'm gonna give it a
15:13 - fourth argument
15:16 - wherever I draw that rectangle right
15:17 - here and I'm gonna say let's just say 30
15:20 - the side of curiosity what does that do
15:23 - there we go now I've got some nice
15:25 - rounded rectangles so I've got it's a
15:28 - little design me feels a little more
15:29 - like a game that I might actually want
15:30 - to play so what I want to do is I want
15:35 - to each time if I move if I press to the
15:41 - right this is the new tile for I want to
15:44 - be able to indicate that somehow this is
15:46 - where I could really really really use
15:48 - object-oriented programming and I'm so
15:50 - tempted to just refactor the whole thing
15:52 - with obscure key programming but I've
15:53 - kind of wait I'm gonna hold off that's
15:55 - gonna add some day be part I don't know
15:58 - 734 of this 2048 video series apparently
16:02 - that's now gonna be about setting you
16:04 - know 64 hours long but what I'm gonna do
16:07 - ridiculously is I'm gonna have a
16:10 - duplicate grid I'm just gonna have grid
16:16 - - oh this is the worst grid - also equal
16:22 - a blank right I can't can't live with
16:23 - myself but Caleb might love going grid
16:25 - to grid I just called grid underscore
16:28 - new grid underscore new equals a blank
16:33 - grid okay grid underscore new equals a
16:36 - blank grid and then whenever in where do
16:42 - I add a new tile add number is in I
16:44 - believe it's in grid J s and so here
16:47 - whenever I add a new tile to that spot I
16:51 - can just say grid new and have that
16:55 - equal to one okay so I have a total this
16:58 - is exactly what I was going to program
17:00 - to be good for because if there were
17:01 - actually an object sitting in that array
17:03 - then I could just give it another
17:04 - property instead I'm creating a whole
17:06 - additional array just for another
17:08 - property so again the more I want to add
17:12 - the more I need to refactor but let's
17:13 - keep going with this to see if this
17:15 - works now when I go to draw it when I go
17:19 - to draw it which is right here right
17:22 - this is where I draw let's change the
17:24 - outline if grid new of I J equals 1 a 1
17:37 - for it being new I could have put true
17:38 - in there which probably would have made
17:39 - more sense then I'm gonna change it to
17:41 - stroke
17:43 - you know like 200 0 200 so give it a
17:47 - different color otherwise I'll just put
17:51 - the stroke 0 and an else to be a bit
17:53 - more clear about this and then once I do
17:57 - that I should also just like it's done
18:00 - it's no longer new for the next time I
18:02 - probably need to reset it back to zero
18:04 - so now we should see look these are the
18:08 - two new tiles oh boy you really can't
18:12 - see that visually can you so let's do
18:15 - something to also stroke wait you know
18:20 - like 16 I don't know what the stroke
18:21 - weight is that I've been setting was it
18:23 - like 4 or something so now oh boy this
18:27 - is a really awkward I'm so bad at design
18:30 - but you're gonna leave see what the new
18:33 - one is this is why I have a youtube
18:34 - channel because then other people can
18:37 - make this stuff better because what
18:38 - would be the point
18:42 - ok so wonderful so this is kind of
18:45 - working there's so much awkwardness here
18:47 - this is sometimes above the other ones
18:49 - because it just depends on the order or
18:51 - it's below so there's so much I should
18:53 - do to fix this but at least the
18:54 - functionality is there so I didn't
18:58 - really do very I mean it kind of maybe
19:00 - by accident did some refactoring mostly
19:02 - I caused more things that need to be
19:04 - refactored by adding new features but
19:07 - let's look through and let's fix a
19:09 - couple things first of all I'm being
19:10 - type I'm told that before actually right
19:13 - now in my code when I add a new number
19:17 - if we look at the add number function in
19:21 - grid Jas I now have a 50% chance of it
19:27 - either being a 2 or a 4 and I'm told the
19:29 - 4 actually only happens at 10 10 percent
19:32 - of the time so this should be a point 9
19:34 - if the random number I pick is greater
19:37 - than point 9 no no it's greater than 0.1
19:41 - because
19:42 - gonna be greater than 0.1 90% of the
19:44 - time that will give me a 2 otherwise a 4
19:46 - and we can kind of we could sort of just
19:49 - eyeball that and see like oh I'm really
19:50 - getting twos beak have you seen a new
19:53 - four not yet but at some point one out
19:56 - of about ten times there's a new floor
19:58 - so that's fixed that's good there's a
20:02 - lot of refactoring I could do in terms
20:04 - of what I'm doing here
20:07 - Simon points out that from some of the
20:10 - ways that I'm dealing with this I could
20:11 - actually you know instead of flipping it
20:14 - I could actually just change the way
20:15 - that I add the zeros to the to the
20:17 - arrays add them on the other side
20:18 - instead of one side the one thing that's
20:22 - pretty offensive to me in what I've
20:25 - written so far is this kind of craziness
20:27 - so what I'm doing here right is anytime
20:31 - I flip it or anytime I rotate it I need
20:34 - to before I go back and draw to you to
20:35 - flip reverse the flip or reverse the
20:37 - rotate and by way of and you could also
20:40 - rotate another word for this would be
20:41 - transpose right I'm transposing the grid
20:44 - and instead of just transposed to get
20:46 - back I could just transpose it three
20:48 - more times so let's at least let's at
20:51 - least fix that and so this is an example
20:52 - of refactoring in a way I'm adding more
20:54 - code but I'm going to go to this rotate
20:57 - grid I'm gonna call this transpose grid
20:59 - and actually let's do this kind of in a
21:02 - sort of interesting way what if I say
21:07 - transpose grid and have direction like a
21:11 - variable called direction so maybe one
21:14 - means one way and negative one means the
21:15 - other way and so if Direction equals one
21:21 - then I want to do this kind of
21:27 - transposition otherwise I think if I
21:30 - just say J I right this would be this
21:37 - would be undoing what I did up here a
21:39 - little bit confusing but see what I mean
21:41 - like I'm setting the new grids values to
21:44 - do the opposite of their indices and I'm
21:47 - doing the same exact thing here but with
21:50 - starting with J and I so this should
21:54 - undo it if I'm right
21:56 - and now I should be able to look for the
21:58 - reason also why I want to rename this
22:00 - function is to make sure I find
22:01 - everywhere where I call it
22:02 - so now if I wherever I say rotate grid
22:06 - which is right here I want to say
22:08 - transpose grid 1 oh and actually then I
22:17 - could just transpose it the other way
22:19 - right without this flip negative 1 right
22:25 - transpose grid grid negative 1 right I
22:29 - don't even need to flip it now because
22:31 - it's rotated and it's not flipped
22:33 - anymore
22:34 - but interestingly now what I need to do
22:37 - is I need to keep track of which way it
22:39 - went so let me add a variable called
22:42 - direction equals 1 so here I'm going to
22:47 - rotate it by its direction or and by its
22:51 - direction but I'm gonna set direction
22:52 - equal to negative 1 here and then if it
22:56 - was rotated I should be able to just
22:59 - call transpose grid grid direction times
23:03 - negative 1 to go back the other way
23:05 - right so this is a little bit again
23:08 - looks good this is just one like tiny
23:10 - little improvement here there's so much
23:12 - I could probably do but this is at least
23:15 - a little bit nicer this just flips it
23:17 - back and this just transposes it the way
23:20 - the up the opposite way that it was
23:21 - originally transposed all right so let's
23:23 - try to make this a little more readable
23:25 - with a switch statement switch key code
23:29 - this is a nice way of writing an if
23:31 - statement a chain if else if statement
23:33 - with a bunch of different options and I
23:36 - can say case I've got these different
23:39 - cases down arrow case up arrow case
23:49 - right arrow case left arrow and then all
23:58 - other cases I forget how to do all other
24:00 - cases and then I need to open each of
24:03 - these I need to make sure that I have
24:04 - break
24:09 - at the end and here we go so now I need
24:17 - to get the stuff now in this case I
24:19 - don't do nothing right down arrow it's
24:22 - it's done then here up arrow I'm gonna
24:26 - flip the grid and right arrow I'm going
24:30 - to transpose the grid left arrow I'm
24:35 - going to transpose the grid but the
24:36 - other direction and then otherwise
24:43 - nothing otherwise I didn't actually
24:47 - press a key wrong : placement oh right
24:53 - the color goes afterwards okay so doctor
24:57 - fix all the colons
25:00 - if anybody ever watches this I'm gonna
25:02 - be completely amazed there we go I knew
25:05 - something was wrong I'm getting some
25:07 - weird it doesn't like that I'm not doing
25:08 - anything there
25:11 - let's just put down arrow here
25:14 - oh no the colons in the wrong place here
25:16 - that's why alright so now I this is
25:20 - great oh this is so lovely and what do I
25:25 - do if I want nothing else what a case
25:30 - default or do I just say default just
25:34 - say default oh yes it's amazing that
25:39 - I've gotten through years and years of
25:40 - teaching programming and I cannot give
25:43 - us a which statement in my mind played
25:45 - equals false okay so I think this feels
25:50 - better now though look at this look at
25:51 - this lovely nice switch statement it
25:54 - shows everything down arrow up arrow
25:57 - right arrow left arrow or some other key
26:00 - alright alright alright this is still
26:04 - kind of insane and this really needs to
26:07 - this really needs to be thought
26:10 - rethought but let's let's take a deep
26:14 - breath and see if this is still working
26:17 - yeah I don't think I broke anything be
26:19 - nice to have some unit tests right
26:22 - whoa something's going on here uh-oh I
26:26 - broke something it's not going to the
26:29 - left hold on a second stop the presses
26:34 - miss like three hour long part seventeen
26:38 - so the problem is while I had this
26:41 - wonderful idea that this would undo the
26:48 - transpose right this does in fact undo
26:51 - the transpose but undoing the transpose
26:53 - isn't actually the same as transposing
26:56 - originally in the opposite direction for
26:58 - that I'd actually need to well I think
27:02 - in the end here it's going to be much
27:03 - simpler if I just keep that flipping
27:05 - back in so really what I got rid of that
27:08 - thing yeah I had simplified it so I
27:09 - don't need to flip flip tout trust me
27:12 - right now but really what I need to do
27:14 - here is I don't need to this is always
27:18 - going to transpose in this direction the
27:21 - difference is I can get rid of this
27:26 - variable what I need to do in addition
27:30 - when I'm going to the left before I
27:32 - transpose it is I should just flip the
27:34 - grid so the fact that I have these
27:36 - functions already I need to flip it then
27:41 - I can transpose it and the same thing
27:43 - here I can untranslated but if I'm I've
27:55 - written my code to swipe down so if I'm
27:58 - swiping up I just need to flip if I'm
28:00 - swiping to the right I just need to
28:02 - transpose if I'm swiping to the left you
28:05 - flip and then transpose and then I can
28:07 - transpose back and unflinching then flip
28:16 - and then here I'm gonna want to flip and
28:19 - then run transpose so let's see how this
28:22 - goes down works up works down works
28:25 - right works right works left works down
28:28 - works left left
28:30 - alright so I'm back in business I have
28:33 - fixed that terrible bug that I
28:34 - introduced
28:36 - and I want to think about this all I
28:38 - want to do this in an object-oriented
28:39 - way so badly but we've come to the end
28:41 - of this as I mentioned before it's 24
28:45 - hour me fumbling through making 2048
28:48 - with support chosen colors and designs
28:51 - and you the viewing audience will now
28:53 - take this you will take this and make
28:56 - your own version of the game and submit
28:58 - it and submit it to be so you can find
29:02 - it at the coding train comm there's on
29:05 - the coding challenges page for this
29:06 - coding challenge which will be linked in
29:08 - this video's Direction description
29:09 - there's a way you can submit your
29:11 - contributions and I look forward to
29:13 - seeing what you make and someday maybe
29:15 - someday if enough people tell me that
29:17 - they actually might be interested in
29:19 - seeing yeah apart 79 of this series I
29:23 - will come back refactor this in an
29:25 - object-oriented way and add animations
29:27 - okay thanks everybody
29:29 - oh there's this weird extra console log
29:31 - in there from when I was debugging
29:33 - before I go let's just get rid of that
29:35 - console a little direction I don't need
29:37 - that anymore okay okay very good okay
29:38 - good bye everybody
29:44 - [Music]