00:00 - so this is kind of part two of two
00:02 - videos where we're looking at collisions
00:05 - between objects collisions is really
00:06 - wrong word intersection how do two
00:08 - objects talk to each other how do two
00:10 - objects know where the other one is in
00:12 - relation to each other so I have a
00:14 - simple example that I started with with
00:16 - just two objects update and display both
00:19 - of them I check to see if they're
00:20 - intersecting and if they're intersecting
00:21 - they change color you can see they've
00:23 - kind of moved far apart from each other
00:24 - so they're not but I could refresh the
00:26 - page and randomly they're moving
00:28 - randomly you can see they start to
00:29 - flicker as they overlap so what I want
00:31 - to do in this video is move from two
00:34 - objects to an array of objects so how do
00:37 - you have 100 of these on the screen all
00:38 - checking if they're overlapping any
00:40 - other object so the first thing that I
00:43 - need to do and I'm just do this all in
00:44 - the code the first thing I need to do is
00:46 - change this from two separate variables
00:49 - to an array so let me close this because
00:51 - it's like flickering like crazy and let
00:54 - me change this to an array called
00:56 - bubbles so now I'm going to start with
00:59 - an empty array now I'm going to keep
01:00 - this kind of a sane just for a second
01:02 - and I'm going to say bubbles index zero
01:07 - is a new bubble and bubbles index 1 is a
01:12 - new bubble bubbles I probably should
01:15 - have done this in advance index 0 update
01:18 - and and now I want to say 0 and 1 update
01:25 - 0 in one display if bubbles zero
01:27 - intersects bubbles one change both of
01:30 - their colors so you can see I've
01:32 - actually done nothing new here instead
01:34 - of just having two separate variables I
01:35 - now have two spots in an array so here
01:40 - you can see great it's still the same
01:42 - exact program it's working now that I
01:44 - have an array I could use a loop so
01:49 - instead of manually referencing index 0
01:52 - index 1 what I want to do is say for VAR
01:55 - I equals 0 I is less than 2 I plus plus
01:59 - and make 2 bubble objects and let's give
02:04 - them like random locations
02:09 - and then here the same thing in draw I
02:14 - could have a loop that says looping all
02:19 - the way to bubbles dot length yeah it
02:21 - should have pre-made this but that's
02:23 - okay
02:24 - like this and then I update and display
02:28 - all of them now I didn't put the
02:31 - intersects thing in there yet cuz like
02:33 - how am I going to do that right like
02:36 - okay so first let's just see with what
02:38 - this does it so there's two objects on
02:41 - the screen and they're not anywhere near
02:43 - each other so they're not changing color
02:44 - but that's fine if I change this to 5
02:48 - there's 5 objects on the screen a bunch
02:50 - of them are overlapping but they're not
02:52 - changing color right because I'm only
02:53 - checking if 0 is intersecting one so
02:56 - let's think about this for a second so
02:58 - let me come over here and let's say I
03:00 - have this array and what I have I had 5
03:05 - let's just do four I have a B C and D
03:09 - what do I want to check I want to check
03:12 - if a is intersecting b c and d right and
03:17 - actually let's just say for a second i
03:18 - want to check if a is intersecting a b c
03:20 - and d and then i want to check to see if
03:23 - b is intersecting a B C or D and then I
03:28 - want to check if C is intersecting a B C
03:32 - or D and I could go on and do D as well
03:35 - and I've kind of run out of space here
03:36 - but you can imagine what it is I want to
03:38 - check each object first I want to check
03:40 - a and then I want to check B and then I
03:41 - want to check C and then I want to check
03:43 - D and every time I check a I want to
03:45 - check all the other objects and every
03:46 - time I check B I want to check all the
03:48 - other objects and every check of C's I
03:49 - see I want to check all the objects so
03:51 - how do I loop through how do i iterate
03:53 - through every object with a for loop for
03:55 - i goes from 0 0 1 2 3 but when I get
04:00 - here I also want to do another loop so
04:02 - for every I loop for every I loop so
04:05 - what I need is a loop inside a loop for
04:08 - every object for every other object now
04:10 - I do want to figure out a way to
04:12 - eliminate a versus a B versus B C versus
04:15 - C and we'll get to that in a moment but
04:16 - let's come back and look at that right
04:18 - so here this loop all I want to do is
04:21 - update and display
04:22 - all the particles bubbles sorry but
04:24 - after I do that I need to say let's loop
04:28 - again for every bubble update display
04:35 - and then check all the other bubbles now
04:36 - oh boy I did something terrible here
04:38 - right I used I to ice so I is the
04:40 - variable that's keeping track of this
04:44 - iteration 0 1 2 3 but I need another
04:49 - variable to keep track of the inner loop
04:51 - so 0 0 1 2 3 0 0 1 2 3 0 0 1 2 3 0 0 1 2
04:58 - 3
04:58 - kind of like kept some like rhythm to it
05:00 - so over here what I need to do is say
05:02 - something like and I could use anything
05:04 - I want but I'll use J it's kind of
05:06 - typical so here what I'm saying is for
05:08 - every I for every J for every particle
05:12 - check every other particle so I have
05:15 - another picture of myself over there I
05:17 - can't look at ok so now I've got this
05:21 - piece of code here now this code makes
05:23 - sense I can move that into here auto
05:27 - format which is command T by the way I
05:30 - think I lost a bracket now I've got it
05:32 - and you can see there's a lot going on
05:34 - here but what's going on for every
05:37 - bubble update and display and then I'm
05:39 - done check every other bubble and check
05:41 - not at 0 in your sex 1 what am I on the
05:43 - outer loop is I for every I check every
05:47 - J for every I check every J then change
05:53 - if they're intersecting change I and J
05:55 - now let's look at this and run this now
05:59 - no matter what they're all just
06:00 - flickering right there all intersecting
06:02 - somebody why are they all intersecting
06:04 - somebody because they're all
06:05 - intersecting themselves right I need to
06:07 - deal with the fact that for every object
06:09 - is going to check every other object I
06:12 - need to deal with the fact that I don't
06:13 - want a to check aI don't want B to check
06:15 - B there's a really easy way to do that
06:17 - right I don't want to do any of this if
06:19 - I is equal to J so as long as I is not
06:25 - equal to J and the bubbles are
06:27 - intersecting right so you can see that
06:29 - as long as they're not the same object
06:32 - and they're intersecting each other
06:33 - change both of their colors so if we run
06:37 - this you can see that if they're
06:40 - overlapping somebody they're flickering
06:41 - if they're not overlapping they're not
06:43 - flickering this is kind of an awful
06:45 - example in the sense that design wise it
06:48 - just got these white circles and
06:50 - something they go crazy flickering
06:51 - colors when they're overlapping so I
06:52 - kind of want to like leave this to you
06:54 - to do something perhaps a little bit
06:56 - more interesting here but this I think
06:58 - is a structure that you can really play
07:00 - with you've got this function that
07:02 - checks the relationship between these
07:04 - objects what can you do based on that
07:07 - relationship when they start getting
07:08 - closer do they start moving faster when
07:11 - they start when they hit each other they
07:12 - move away from each other or do they try
07:14 - to glom on to each other when they
07:16 - intersect do they make a new object that
07:19 - gets added to the array so they're kind
07:20 - of like duplicating or mating in some
07:22 - sort of strange way so there's a lot of
07:24 - possible things you could do that and
07:25 - this is a lot to wrap your head around
07:26 - here but this is kind of like a core
07:29 - idea of dealing with this idea of nested
07:31 - loops and it will come up again in other
07:34 - scenarios in terms of looking at pixels
07:36 - on a grid or every column in every row
07:39 - there's a lot of times this nested loop
07:41 - comes up for every object check every
07:43 - other object there's another way I'll
07:45 - leave you with sort of like a thought
07:46 - experiment is another way you could make
07:47 - this a little bit more efficient which
07:49 - is that if you start with objects 0 you
07:52 - could just count through right we in
07:54 - fact I'll be coming over here and say
07:55 - there's another efficiency here you
07:57 - could add so this I could leave as an
07:59 - exercise for you and someone will remind
08:02 - me in the comments I'll make this exact
08:05 - solution but if a is checking B C and D
08:11 - right it's actually also checking a
08:13 - we've now found a way to eliminate this
08:15 - check but now B is checking a B C and D
08:21 - we've eliminated this check but we don't
08:23 - need to check B versus a anymore because
08:25 - we already checked a versus B and in
08:27 - terms of intersecting if a intersects B
08:29 - B also intersects a so there's another
08:32 - way we could simplify this to eliminate
08:34 - some further checks but that's really
08:35 - just a technical exercise that kind of
08:36 - works either way so I this video is a
08:40 - kind of a good stopping point I think
08:42 - and hopefully you got something out of
08:44 - this
08:44 - idea the other thing to remember is one
08:48 - of the interesting things about this
08:49 - video is I never all this is good I
08:51 - never ever touched the code over here
08:54 - the bubble object never had to change
08:56 - this is the wonderful thing about moving
08:58 - all of the code that really operates the
09:01 - object into the object itself all I did
09:03 - is change the way the world works
09:05 - instead of having two single bubble
09:07 - objects I made an array of objects and
09:08 - the logic for how I had to check all the
09:11 - objects changed a lot out here but I
09:13 - never ever had to change a single line
09:15 - of code in the object its constructor
09:16 - function of the object itself so I think
09:18 - that's kind of a useful thing to note as
09:20 - well and something you might aspire to
09:22 - in terms of rewriting your code to keep
09:24 - these objects as like kind of robust
09:26 - entities that can kind of stand the test
09:28 - of massive code changes but they still
09:31 - just sort of work as they they're
09:32 - they're they're self-sufficient okay so
09:35 - I've got one more video that I would
09:37 - like to make in this objects and arrays
09:39 - discussion which is looking at how to
09:40 - load a bunch of images and so these
09:42 - bubbles how do you display these bubbles
09:44 - as images instead of just circles which
09:46 - I think several people had asked me
09:48 - about over the last week so to make that
09:49 - video now and then I'll be ready to do
09:51 - videos about p5 Dom although I don't
09:53 - think that's going to happen today at
09:54 - this point okay uh and I'm hitting stop