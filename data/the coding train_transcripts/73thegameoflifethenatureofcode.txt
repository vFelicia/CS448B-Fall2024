00:01 - now we're ready to talk about a
00:04 - two-dimensional cellular automaton and
00:06 - the one we're going to look at is
00:07 - arguably the most famous southern time a
00:10 - time of all the game of life and now it
00:12 - gate so in 1970 I encourage you all to
00:13 - read this article Martin Gardner
00:15 - published an article in Scientific
00:16 - American called mathematical games the
00:18 - fantastic combinations of John Conway's
00:20 - new solitaire solitaire game life so
00:23 - this was really a thought experiment in
00:26 - many ways get out your checkerboard get
00:27 - out your checkers a checker on a square
00:31 - on a cell means one no checker there
00:34 - means zero and play this game see what
00:36 - plays out now Conway wasn't just doing
00:39 - this for fun although it is fun if
00:42 - you've ever tried this at home but
00:43 - Conway was really trying to produce
00:45 - really trying to think about biological
00:47 - reproduction and could a system that
00:49 - exhibits the properties of biological
00:50 - reproduction be simulated with such
00:52 - simple rules in a game-like way and so
00:55 - Conway started with a few core
00:57 - principles which are outlined nicely in
00:58 - this article
00:59 - there should be no initial pattern for
01:01 - which there is a simple proof that the
01:03 - population can grow without limit there
01:05 - should be there should be initial
01:06 - patterns however that apparently do grow
01:08 - out without limit so in other words
01:10 - there are paths this this system can
01:12 - kind of grow out of control but there's
01:15 - no way to predict or prove exactly how
01:17 - it's going to behave just from its
01:18 - initial pattern and if you think about
01:20 - that that's really Wolfram's clap from
01:23 - the previous video that's really
01:24 - Wolfram's classification for complexity
01:27 - right there is this there is this
01:29 - unpredictable growth pattern that you
01:32 - that's going to come out of these simple
01:34 - this simple initial state okay now the
01:37 - third principle here is there should be
01:38 - simple initial patterns that grow and
01:40 - change for a considerable period of time
01:41 - before coming to an end in three
01:43 - possible ways fading out completely
01:45 - settling into a stable configuration or
01:48 - entering an oscillating phase so we're
01:50 - going to see that there's also these
01:51 - patterns that ultimately come to
01:53 - uniformity repetition or or as well so
02:00 - we're going to see that while this this
02:02 - game of life will run in this kind of
02:05 - amoeba like bacteria away for quite a
02:07 - while it will eventually settle into a
02:09 - stable state so this is kind of really
02:11 - interesting can we
02:12 - achieve this again just with squares on
02:16 - a grid and each square which is we're
02:18 - calling a cell has a 0 or a 1 so let's
02:21 - look at how we might define this from a
02:23 - systems point of view and then
02:24 - ultimately how we would write the code
02:26 - to simulate this and i should note
02:28 - country was doing this you know not only
02:30 - without processing but with without a
02:32 - computer essentially ok so um let's come
02:35 - over here so one of the things you
02:36 - remember from the one-dimensional CA and
02:39 - this is kind of one of the reasons why
02:40 - we looked at it in this order is that if
02:43 - we have this cell here's the cells
02:45 - neighborhood it's just three cells
02:47 - myself the friend to the right and the
02:51 - friend to the left now in a two
02:53 - dimensional CA we have something a
03:00 - little bit more complex going on
03:02 - obsessively drawing grids here on the on
03:05 - the board here okay so let's say we're
03:07 - talking about this cell what is its
03:09 - neighborhood but we could define a
03:11 - cell's neighborhood in a lot of
03:12 - different ways but the simplest way we
03:14 - could possibly think of doing it in two
03:16 - dimensions would be see every cell to
03:19 - the right or left as well as the ones to
03:21 - the right right left up or down as well
03:23 - as the ones diagonally so if we count
03:25 - these there's 1 2 3 4 5 6 7 8 9 cells
03:29 - total remember there were eight possible
03:32 - ways that these cells could be
03:33 - configured now two to the ninth possible
03:37 - ways 512 I hope I got that right
03:40 - there are 512 possible ways this cells
03:42 - could be configured so we're not going
03:43 - to account in the two dimensional CA
03:45 - there's not really a good reason to
03:47 - account for every possible outcome we
03:49 - could say like ah there's only eight
03:51 - possible outcomes the first one is a
03:52 - zero the second one is a 1 the third was
03:54 - a 0 the 4th one is a 0 v 1 is a 1 right
03:57 - I could actually do that if I were doing
03:58 - all 512 we be here for quite a long time
04:00 - so in the case of 2d CAS and boy you
04:03 - want an exercise for yourself try to
04:05 - make a 3-dimensional one right there are
04:08 - so many possible neighborhood
04:09 - configurations that we look at them in
04:11 - terms of generalities and this is what
04:13 - the game of life approach does it says
04:16 - things like this if there's a whole lot
04:18 - of cells around you that are half of the
04:20 - state of one you know turn your state to
04:22 - zero if there's none around you that of
04:24 - the state of that of the state
04:26 - one also turn your state dessert we're
04:27 - going to look at generales if the number
04:29 - of neighbors that have a value of 1 is
04:31 - greater than 5 is less than 2 we're
04:33 - going to look at it in those terms and
04:35 - the game of life is is really looking at
04:38 - these in the terms of what we think of
04:40 - almost in a way of like population
04:41 - dynamics so we have three key principles
04:44 - in the game of life death birth and what
04:52 - we'll call stasis
04:54 - I guess so death means we are a cell and
04:58 - our state was one but in the next
05:01 - generation our state is going to be a
05:03 - zero not a six right
05:05 - when do we die we die do from two
05:10 - possible principles one is
05:12 - overpopulation we are crowded or - I
05:15 - don't like lots of cells of the state of
05:17 - blood around me it's too much I must die
05:19 - so overpopulation means that four or
05:23 - more cells are alive I don't know what
05:29 - I'm writing here are alive now we also
05:34 - died due to loneliness we can be very
05:39 - sad and say that that we can't we can't
05:42 - stay alive if there's nobody to be our
05:44 - friend around us so in the case of
05:46 - loneliness that is one or fewer live
05:51 - neighbors I'm not doing this in the most
05:53 - organized way here on this board but we
05:55 - can see here this is death death if our
05:58 - state was one we go to zero if there's
06:00 - overpopulation
06:00 - too many cells around us are alive or
06:02 - not enough cells around to sort of live
06:03 - now let's think about birth for a second
06:08 - birth is when our state was zero and now
06:12 - we're going to be born we're going to go
06:14 - from dead zero to alive the only time we
06:18 - have birth is if we have exactly three
06:23 - live neighbours exactly three live
06:28 - neighbours so these are the conditions
06:31 - by which we die go from 1 to 0 this is
06:33 - the condition by which we go from 0 to 1
06:35 - and I said the last principle here is
06:37 - stasis in essence what we're saying is
06:40 - in
06:40 - all other cases state remains the same
06:45 - right so if our state was zero and we
06:48 - don't have three live neighbours we stay
06:50 - at zero so if we have two live
06:51 - neighbours one live neighbor zero like
06:53 - neighbors six live neighbors we stay at
06:54 - zero right and if we if our state is one
06:59 - and we don't if we have two or three
07:02 - neighbors right it's not overpopulation
07:03 - or loneliness we stay alive
07:05 - so this is the set of rules and now you
07:08 - know it's interesting to think about how
07:09 - did Conway come up with this would you
07:11 - have come up with these rules how much
07:12 - trial and error would it have taken you
07:14 - with a computer obviously you can try a
07:16 - lot of different rules and I encourage
07:17 - you to try rules most of the rules that
07:20 - you would try with a to DCA are going to
07:22 - get you very boring results everything
07:25 - goes to one everything goes to zero
07:26 - nothing ever changes but this set of
07:29 - rules is this kind of magical sweet spot
07:32 - where you get this unbelievable almost
07:34 - bacteria like reproductive complex
07:38 - complex outcome so let's take a look at
07:40 - how that works in processing I'm not
07:43 - timing myself again
07:44 - okay so the example that we're looking
07:46 - at here is example 7.2 this is a very
07:49 - simple implementation of game of life
07:51 - and we're going to talk about a couple
07:53 - more calm things that we could add to it
07:55 - to make it a little bit more difficult
07:57 - to program but more useful perhaps as
08:00 - well okay so let's take a look at a
08:02 - couple things number one we should point
08:04 - out is that no longer do we have a
08:06 - one-dimensional array right we now have
08:10 - a two-dimensional array
08:11 - talking about RCA right RCA is it at a
08:15 - given generation is a two dimensional
08:17 - grid of states not a one dimensional
08:19 - grid so in this example we have a two
08:20 - dimensional array and if you don't or
08:22 - not a familiar with two-dimensional
08:23 - arrays I will include a link to a
08:26 - tutorial in the processing website about
08:27 - two dimensional arrays okay now a couple
08:30 - other things we have the same same idea
08:33 - here where we have a function called
08:36 - generate the function called generate is
08:39 - where we create the next generation and
08:41 - we have to compute the states for every
08:43 - single next generation now what is the
08:45 - value that we need to calculate notice
08:48 - all of these all of these rules require
08:51 - us to know the toe
08:52 - a number of live neighbors right we need
08:54 - to say here am I look around me at this
08:58 - moment in time how many neighbors are
08:59 - alive are there four are there one are
09:01 - there three are the two are there one
09:03 - and depending on my state and the
09:05 - combination of my state and the number
09:06 - of live neighbors this is how we're
09:08 - going to get our results so let's take a
09:10 - look at how that happens one thing
09:11 - that's a little bit insane here is we
09:13 - have this loop going through every
09:15 - single cell a nested for loop for every
09:18 - column for every row we're going to do
09:20 - this to every cell in our so every cell
09:24 - in our two-dimensional array once we get
09:26 - to each cell we've got to do a little
09:27 - mini loop this little mini loop is the
09:30 - loop that says hey let's look at our own
09:31 - little neighborhood right what does that
09:33 - mean like if we're looking at this
09:34 - particular cell we're going to loop
09:36 - through all of these cells right first
09:39 - we're going through every single one and
09:41 - when we get to each one this one we look
09:42 - at these this one we look at these and
09:44 - that's what this mini loop is right here
09:46 - and what do we do we add up we start
09:48 - with a total number of neighbors at 0
09:49 - and we add them all together once we
09:51 - know the total number of neighbors that
09:53 - are alive we can then implement our
09:57 - rules and let's see if I can uh I'm not
10:00 - well prepared here let me I'm just going
10:03 - to make this much wider so you can see
10:05 - it oh the awkward pause sing to yourself
10:07 - about the game life ok so if we look at
10:12 - this here we can see here are those
10:13 - rules loneliness if I'm alive on I have
10:16 - less than 2 neighbors my neck new cell
10:18 - is 0 my new state 0 I die if I am Alive
10:21 - and I have more than 3 neighbors my new
10:24 - state is 0 I die loneliness over
10:26 - population birth if I am dead and I have
10:29 - exactly three live neighbours my new
10:31 - state is alive otherwise stasis
10:32 - everything stay the same so you can see
10:34 - just in a little set of a conditional
10:37 - statement here based on what is my state
10:40 - what are my neighbor what how many
10:43 - neighbors do I have alive what is the
10:44 - new state and again the next generation
10:48 - then becomes the current generation when
10:49 - we run this you've all been waiting for
10:52 - this your whole life the game of life
10:55 - here we go here is the result and we can
10:57 - see we can lit it's just like going to
10:59 - go for quite some time we can see there
11:01 - are these places where it reaches a
11:03 - static state there are these little
11:05 - oscillating places where it's
11:06 - oscillating back and forth back and
11:08 - forth and I encourage you if you're
11:10 - wondering why is it doing that get out a
11:12 - piece of graph paper get out a
11:13 - checkerboard and try to calculate the
11:15 - generation you know put put for put
11:17 - those four states on and see look at it
11:19 - and why are why are the ones around it
11:21 - staying off why are the ones inside
11:23 - staying on it's it's it's it's quite
11:25 - entertaining to do that I'm gonna go
11:27 - have lunch in a little bit I might you
11:28 - know get up some papers do that while
11:30 - I'm having lunch okay so what are some
11:33 - other things to say about this a lot to
11:36 - say and I'm sure I'm going to miss a
11:37 - bunch of things but a couple things I
11:39 - want to mention well one thing that's
11:41 - really important is that we haven't
11:44 - enough men in the previous video on this
11:45 - one I've really left this out we haven't
11:47 - talked about what to do with the edges
11:49 - right look at here's a one-dimensional
11:52 - CA right this cell has neighbor to the
11:56 - left neighbor the right what do we do
11:57 - with this cell it has a neighbor to the
11:59 - right it has no neighbor to the left if
12:01 - you notice in my examples if we go back
12:03 - to the code here I am taking a sort of
12:06 - license to make things very simple I'm
12:08 - actually starting at column 1 and ending
12:11 - it calms my ending it at the total
12:13 - columns minus 1 starting at Row 1 ending
12:15 - at the total rows minus 1 what this
12:17 - allows me to do is never have to worry
12:19 - about that the edges the edges are in a
12:21 - sense staying constant we don't
12:23 - calculate their their values perhaps a
12:26 - more useful thing right think about a
12:28 - one-dimensional CA as being a strip of
12:30 - paper
12:31 - tie the two ends together and we have a
12:34 - continuous strip of paper right we could
12:37 - say this edge is neighbor to the right
12:39 - is this one its neighbor to the left is
12:40 - this cell so we could wrap around the
12:43 - edges that's and I have examples in the
12:46 - repository that do that as well it makes
12:47 - the code look a little more confusing
12:48 - and I'm using the modulus operation to
12:50 - do that but that's an important thing to
12:52 - realize the other way you could do is
12:54 - you could design different rules for the
12:55 - edges you could say well the edge only
12:57 - has one neighbor so I'm going to come up
12:58 - with a rule set just for the edge but
13:00 - that to me is like unbelievably light
13:02 - you causing yourself so much trouble
13:03 - just for the edge it's very inconvenient
13:06 - so I'm you know that's an interesting
13:08 - idea but in my examples I'm either
13:10 - ignoring the edge or doing wrap around
13:12 - the other thing I should just point out
13:14 - here we're going to get to this again to
13:16 - think in the next video is really where
13:18 - how do we go a little further with
13:20 - two obvious ways that you might think of
13:22 - as your own exercise and I'll talk about
13:23 - them a bit more in the next video is
13:25 - number one what's the most what's the
13:28 - thing that you're always looking at that
13:31 - you're working with which is a a
13:33 - two-dimensional grid of of cells that
13:36 - have a state pixels pixels live in two
13:39 - dimensional grids they all have a state
13:41 - their color sure there are millions of
13:43 - possible colors with black and white is
13:45 - just 0-1 Gray's are 0 to 255 right all
13:49 - just about all image processing
13:51 - algorithms are cellular automata right a
13:54 - blur is just saying take a pixel and
13:56 - average it with its neighbors that's the
13:59 - rule for how a color changes from
14:01 - generation to generation if you were to
14:03 - apply a blur over and over again
14:05 - if you look in Photoshop there's a
14:07 - convolution filter which allows you to
14:09 - set the weights of various pixels in a
14:12 - neighborhood that is a CA algorithm
14:14 - there I've seen a water ripple like
14:17 - effects water color effects all sorts of
14:19 - types of things that you could do with
14:20 - the CA so one you might think about
14:21 - applying this to image processing and
14:25 - the other thing you might think about
14:26 - which I think is really important here
14:28 - is the fact that these cells they could
14:31 - be object oriented right now we have a
14:33 - two-dimensional grid of numbers but what
14:37 - if instead of a 2-dimensional grid of
14:40 - numbers sorry
14:45 - exercise oh no that's an exercise is an
14:48 - example example 7.3 what if our game of
14:52 - life was a two-dimensional sorry about
14:54 - this two-dimensional grid of cell
14:56 - objects right what if instead of just
14:59 - having two-dimensional integers we had
15:01 - two-dimensional objects those objects
15:03 - could no where are they on the screen
15:05 - what has been their history of states
15:07 - other aspects do they move there's so
15:10 - much you could do that in this
15:11 - particular scenario is very simple but
15:14 - it just shows you how in this case what
15:17 - we're doing is when a state when a cell
15:19 - gets a new state its when it goes from
15:21 - live to dead its turn when it dies it's
15:24 - blue it's red for a moment when it's
15:26 - born it's blue for a moment so the fact
15:28 - that we could store more about a cell in
15:30 - an object is something that's going to
15:32 - afford you a lot of
15:33 - possibilities and you can see here all
15:35 - we're doing is storing each cells
15:37 - location its width and its previous its
15:41 - its current state in its previous state
15:43 - you know the other thing you should
15:46 - really well I'm going to get to this I
15:47 - think in the next video actually boy I'm
15:49 - really screwing these up now this is
15:50 - kind of a learning exercise it may might
15:52 - like rieta these or remake them in a
15:54 - different order but I want to talk
15:55 - through a whole lot of exercises and
15:57 - possibilities with CAS in the next video
16:00 - so you could just keep watching if you
16:02 - want or you can stop