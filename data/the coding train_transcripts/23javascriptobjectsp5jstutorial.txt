00:02 - So hopefully by
now you've played
00:05 - a little bit with
variables in p5,
00:08 - maybe used mouse x, mouse y.
00:10 - You made up some of
your own variables.
00:12 - And I wanted to look,
actually, at an example.
00:14 - It doesn't really
have a lot more to it.
00:15 - This example is
just like the one
00:17 - I made previously where
I have a circle that's
00:19 - just moving across the screen.
00:22 - And you can see here,
how did I do that?
00:24 - There's an incrementation
operation right down here
00:27 - that every time through
draw, x goes up by 1.
00:30 - So first the circle's
here, then it goes up by 1,
00:32 - then it's here, then it's
here, then it's here.
00:34 - So that's how you move
something on the screen.
00:37 - Now, one thing I
did here is I added
00:39 - a whole lot of other variables.
00:41 - Let's have a y and a
diameter for the size
00:43 - of that circle, an r, g, b
variables for the background.
00:47 - So maybe I could do some things
like increment the red amount,
00:51 - decrement the green amount.
00:54 - And hopefully
these are the kinds
00:55 - of things that you've
been playing with.
00:58 - And what I want to
do in this video
00:59 - is show you a way to
organize your variables.
01:04 - And while it seems a little
bit silly and premature,
01:06 - perhaps, to be
like, this is fine,
01:09 - I'm actually not going to change
anything about this program,
01:12 - but I'm just going to change
the way it's organized.
01:16 - And this is going to set
a foundation for later
01:19 - as well as help
you to kind of just
01:22 - keep your code in a neat and
tidy way, which is something
01:27 - that I'm a little
too obsessed about,
01:28 - and I'm really working on it.
01:30 - I really am, I swear.
01:32 - OK.
01:32 - So let's think about
how that could work.
01:36 - So let's just say for the
moment that I have a variable x,
01:42 - and it has an
initial value of 0.
01:44 - And I have a variable y, and
it has an initial value of 100.
01:50 - And I have a variable
diameter, which
01:54 - has an initial value of 50.
01:57 - So these three variables,
they go together, right?
02:01 - I'm using them for that circle.
02:03 - The x I'm using
for the x position
02:05 - of that circle on the
screen, the y position
02:07 - I'm using for that
circle on the screen,
02:09 - and the diameter for that
circle on the screen.
02:11 - And while this relationship
of these variables
02:13 - is only something in my mind,
JavaScript doesn't care.
02:16 - The computer doesn't care.
02:17 - You could use the
variables for anything.
02:18 - I could plug this x value
into the color for something,
02:21 - and it would work.
02:22 - It might be helpful if I could
put all of these together.
02:27 - And there is a way
I could do that.
02:29 - I can say var, and
I could say circle.
02:33 - So I have the circle
on the screen,
02:35 - and I'm going to
call it a circle.
02:37 - And then what I'm going
to do is say equals,
02:40 - and I'm going to have an open
curly bracket and a closed
02:44 - curly bracket.
02:46 - So what's happening
is circle-- you
02:49 - can think of it as a container.
02:51 - What I would like to
do is instead of having
02:53 - three variables
floating on their own,
02:56 - I would like to not have
these three variables floating
02:59 - on their own, but
I would like to put
03:00 - those three variables inside
of this variable called circle.
03:05 - In order to do that, I'm
going to say x colon 0 comma--
03:10 - boy, I really hope I'm getting
the syntax of this right
03:13 - because this is new for me.
03:15 - And if I get it wrong, I
can always make it again,
03:18 - and I'm sure somebody
on the internet
03:19 - will tell me if anybody
actually watches this.
03:22 - y colon 100 comma
diameter colon 50.
03:32 - Now, where the line breaks
are don't actually matter.
03:35 - The curly brackets
matter, the colons matter,
03:38 - and the commas matter.
03:39 - So you can see that,
just like setup--
03:42 - function setup was
a block of code
03:44 - with a beginning and
an end, function draw
03:46 - is a block of code with
a beginning and end--
03:48 - this variable circle
now has a block of code
03:51 - with a beginning and an end,
and circle is a container
03:54 - for these three variables.
03:59 - Now, container is actually not
the technical term for this.
04:04 - And what is interesting about
what you have just seen here
04:06 - is you have now learned
about JavaScript objects,
04:10 - JavaScript objects.
04:12 - The syntax for this is
JavaScript Object Notation.
04:17 - The way that you create
an object-- this circle
04:20 - is an object, and that
object has data inside of it.
04:24 - It has an x, a y,
and the diameter.
04:27 - And boy, are we
going to someday get
04:28 - to some really
exciting stuff where
04:29 - we see that an object can also
have behaviors and so much
04:32 - more to it.
04:33 - But right now, you can think
of there's my circle object
04:36 - and I'm visualizing the
circle object on the screen.
04:39 - I'm visualizing its data.
04:41 - It's x is 0, its y s 100,
and its diameter's 50.
04:43 - By the way, I'm not using
these terms by accident.
04:45 - What's super exciting about
this is learning this--
04:48 - I'm not going to get to
this for many, many videos.
04:50 - This is exactly how you get
data from lots of things.
04:53 - So if you want to get today's
webinar into your p5.js sketch,
04:58 - you might connect to
some weather service
05:00 - that's going to send you data.
05:01 - It's going to send your
data exactly like this--
05:03 - weather colon temp, weather
equals bracket temperature
05:07 - colon high temperature colon.
05:09 - So learning this syntax is
going to lay the foundation
05:14 - for just about everything
you do in JavaScript.
05:16 - Here is a JavaScript object.
05:19 - So let's now look at how we
implement this in the code.
05:23 - So I'm coming back over here.
05:25 - And instead of these
three variables,
05:28 - we're going to find out if I
did this correctly syntax wise.
05:32 - x colon 0, y colon 200.
05:36 - Oops, and I put a
semicolon there.
05:37 - Comma is actually correct.
05:39 - And then diameter colon 50.
05:42 - And I can put a semicolon there.
05:44 - So this is really
one line of code.
05:46 - It ends with a semicolon.
05:47 - But I'm breaking it
into separate lines.
05:50 - And I'm going to use p5
Editor's Autoformat, whoops,
05:53 - which you can see it sort
of autoformatted for me,
05:56 - and this is sort of a
standard way of doing it.
05:58 - So sorry, that was a
bit of a digression.
06:01 - But I did just
notice a little bug
06:02 - in the editor, which I'm
going to file as soon
06:04 - this video's over.
06:05 - So x is 0, y is
200, diameter's 50.
06:08 - So I can remove these
variables from the top,
06:12 - and I'm going to hit Save.
06:13 - And now I'm going to run this.
06:15 - Aha.
06:16 - Now, look at this.
06:18 - This is also a key
moment because, boy,
06:20 - are you going to have a
lot of errors happening
06:22 - when you run your code.
06:23 - So I'm going to zoom
in to the bottom here.
06:26 - And we can see,
what is this error?
06:27 - Uncaught reference error--
x is not defined on line 20.
06:32 - So I'm going to zoom back out.
06:33 - We're going to go
down to line 20.
06:35 - Ah, x is not defined.
06:37 - Well, x is no longer defined.
06:38 - I didn't declare a
variable named x.
06:41 - What I did is I declared a
variable named circle, which
06:44 - is an object, and
one of the fields,
06:46 - one of the pieces of
data in that object is x.
06:49 - So how do I get, then, that x
which is inside of the circle?
06:54 - And the way that you do
that is with something
06:56 - known as dot syntax.
07:01 - Right?
07:02 - When I just had this
variable, variable x,
07:05 - I just said ellipse at x.
07:09 - So now, what do I want to do?
07:11 - I want to draw the
ellipse at what?
07:15 - I want to draw the
ellipse at the circle's
07:17 - x, the x inside circle.
07:20 - And the way that I get there
is I refer to the variable name
07:23 - circle, and I get to that x
value inside with a dot, .x,
07:30 - circle.x.
07:31 - OK.
07:32 - Let's go back, now, over
here and come down to here,
07:37 - and I'm going to say circle.x,
circle.y, circle.diameter,
07:44 - and circle.diameter.
07:47 - OK.
07:48 - Oh, and look at this.
07:49 - I've already forgotten.
07:49 - I was going to--
almost ran this again,
07:51 - and it's going to say, uncaught
error, because on line 22,
07:54 - x is not defined because
I need to change this
07:56 - to circle.x and circle.x.
08:03 - So I run this, and we've got
the same exact program now.
08:05 - Again, nothing new
has happened here.
08:09 - It's the same exact
program as before.
08:12 - But I did do
something interesting,
08:13 - which I organized a
bunch of variables
08:16 - into something, which leads
to me to a point where
08:19 - maybe this might be useful
if I were to make two
08:22 - of them, circle1 and circle2.
08:26 - This way, I don't have
all these x1, x2, y1, y2,
08:31 - everything floating around.
08:32 - So this way of organizing
your collections of variables
08:35 - that are being used together
conceptually into an object
08:38 - can really help you organize
and keep track of things
08:41 - and lays a good foundation
for a lot of things.
08:43 - There's a lot more work
to do with object-oriented
08:45 - programming later, and
it also sets a foundation
08:47 - for working with data that
comes from other sources
08:50 - because we'll have
exactly the same syntax.
08:52 - So as an exercise that
you might try for yourself
08:55 - is see if you can
take something you're
08:58 - working on, reorganize your
variables into these objects.
09:01 - And if you're looking at this
one, try to make two objects.
09:06 - Try to maybe make your
own color object that
09:08 - has an r, a g, a b, and
an alpha, perhaps, in it.
09:12 - Those are things that
you could try to do.
09:14 - And hopefully this video was
useful and interesting to you.
09:17 - And I finished recording it.
09:18 - Excellent.
09:18 - OK, goodbye.