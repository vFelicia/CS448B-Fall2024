00:00 - Welcome to nature
of code chapter 1,
00:02 - [BELL DING]
00:03 - Vectors.
00:04 - So the purpose of
this first video
00:06 - is just to explain
what a vector is.
00:09 - What is a vector,
as well as look
00:13 - at what it means to use the
concept of a vector with p5.js.
00:19 - Now, if you watch some of the
videos in the introduction
00:21 - section, one of the examples I
went through is a random walk.
00:25 - In this example, I have
two variables, x and y.
00:29 - Together they make up a
position in the canvas,
00:33 - and then every cycle through
draw, every frame of animation,
00:36 - I pick a random
number, 0, 1, 2, and 2,
00:38 - and move it either to the
right, the left, up, or down.
00:41 - This is using vectors.
00:44 - So the concept of a vector
is something you're probably
00:47 - using all the time
in your programming
00:49 - without realizing it, but
maybe you're not actually
00:52 - getting full power
out of vectors
00:54 - because you're not yet using p5.
00:57 - vector.
00:57 - That's really where I'm leading
here, but let's zoom back out
01:01 - and talk about what a vector is.
01:03 - So first, let me use another
term for you, scalar.
01:09 - So scalar might sound like some
scary math terminology that
01:14 - seems unfamiliar to you,
but this is actually
01:16 - something you have definitely
been using all along.
01:18 - For example, here is an
example of a scalar value, 6.
01:24 - [GASP]
01:24 - I've got another one for you.
01:26 - 14, 0.319222.
01:31 - [GASP]
01:31 - That's my favorite scalar.
01:33 - So a scalar is a numeric value.
01:36 - A single value.
01:37 - It is a magnitude.
01:39 - So the concept here
is something is
01:42 - something that has a magnitude.
01:43 - Examples of things that
are scalar quantities
01:45 - are like, oh, the
length of this marker.
01:47 - Maybe the surface area of
this beautiful coding train
01:51 - notebook.
01:52 - How hot is it
outside, whether it's
01:54 - Fahrenheit or Celsius or Kelvin,
that's a scalar quantity.
01:57 - The distance between two points.
01:59 - How far away in the world
are you from me right now.
02:02 - That's a scalar quantity.
02:03 - Anything that you can measure
as a single magnitude,
02:06 - that is a scalar.
02:07 - A vector, however, has not just
magnitude, but also direction.
02:18 - This is the idea of a vector.
02:21 - It's a quantity, an
entity that has both
02:24 - a magnitude and a direction.
02:27 - One thing that's
important for me to say
02:28 - is vectors can exist in many
kinds of dimensional spaces.
02:33 - Two dimensional spaces,
three dimensional space,
02:36 - four dimensional, five
dimensional, six dimensional,
02:39 - and you might have heard me say
the term vector in other videos
02:42 - that I've made maybe about
machine learning and data,
02:45 - but what I'm going to do in
this series is constrain myself,
02:50 - restrict myself to
talking about vectors
02:54 - in a two dimensional space.
02:57 - This is because I am working
with them in a p5.js canvas,
03:03 - and that happens to be
a two dimensional space.
03:05 - You might choose, and I
might do some examples that
03:08 - look at vectors in
three dimensions,
03:10 - and in fact, p5 vectors do
support three dimensions.
03:13 - 3D graphics are a
thing, but my focus
03:15 - and trying to explain all
of this and look at the math
03:18 - will be sticking
in two dimensions.
03:20 - The typical way a vector is
represented is by an arrow.
03:25 - So let me return back to
this random walk example,
03:29 - and look at this.
03:30 - I had an x and a y, and an
x and y is moving randomly,
03:33 - drawing its trail.
03:35 - How could I think of
that x and y as a vector.
03:39 - Remember, I had two
variables, x and y.
03:42 - They represent a point in space,
two dimensional space, x and y.
03:48 - I could think of
these-- this x and y
03:51 - together as a vector that
provides instructions
03:55 - for how to get from the origin
point, 0, 0, all the way
03:59 - to that x and y.
04:01 - So this is the idea of
thinking in terms of vectors.
04:05 - This entity, this vector
has both a magnitude,
04:08 - what is the magnitude?
04:10 - It is the length of this
arrow, and a direction.
04:14 - What is the direction?
04:15 - It's the way the
arrow is pointing,
04:18 - and I could think of
that in different ways,
04:20 - but one way of
thinking about that
04:21 - is as an angle,
often represented
04:23 - with the Greek letter, theta.
04:25 - So I could think of a vector
as the length of an arrow,
04:29 - as well as what direction
it's pointing as an angle
04:33 - relative to the origin point.
04:36 - Let me take a minute to
redo this diagram in a more
04:38 - traditional math
way, because canvases
04:41 - are a little strange in that
the origin is in the top left
04:44 - and that y points down.
04:46 - But a more typical Cartesian
plane, a two dimensional plane,
04:51 - Cartesian name for Ren√©
Descartes, the mathematician,
04:55 - might have an x, y
coordinate right here,
04:58 - and I could represent
the origin right here,
05:00 - and I could draw an
arrow between these two.
05:03 - So conceptually, the
vector has the magnitude,
05:07 - which is this particular
length, and the direction,
05:11 - which represented by
this angle relative
05:13 - to the horizontal axis.
05:15 - However, I am
conflating a little bit
05:18 - two concepts, which is
this idea of a coordinate
05:21 - or a position and a vector.
05:23 - This idea of this vector itself,
the concept of this vector
05:27 - is just this arrow.
05:29 - It doesn't represent
any specific location
05:32 - in two dimensional space.
05:34 - It just represents instructions
for how to get from one
05:38 - position to another position,
and in the case that
05:41 - I'm talking about, those
instructions are from
05:44 - the origin to the position, x,y.
05:47 - So in a moment, I'm going to
start talking about velocity,
05:50 - which is going to be used in
our code to describe, well,
05:53 - if this is my thing at this
x,y, it's going to go here,
05:56 - then it's going to go here,
then it's going to go here,
05:58 - then it's going to go here, I
might have a bunch of velocity
06:00 - vectors giving it a path.
06:03 - This idea of the vector
itself is really a concept
06:07 - of the arrow, not the
specific location,
06:10 - but a position in a p5 sketch
can be thought of as a vector
06:15 - with instructions from how to
get to the origin to that x,y
06:19 - location itself.
06:20 - And in that sense,
it really is relative
06:22 - because if I use the
translate function
06:23 - to move the origin
around, that vector is
06:25 - going to move around with that.
06:27 - Oddly enough, even though I
am starting this discussion
06:30 - of about vectors, focusing on
these core concepts, magnitude
06:34 - and direction, the
actual values stored
06:39 - in the p5 vector object, which
I really haven't shown yet
06:42 - but I'm going to get to, are
not the magnitude and direction,
06:45 - but rather the
components of a vector.
06:48 - What do I mean by components?
06:50 - Well, that I actually mean
these this x and this y.
06:54 - Because in fact, look
at this arrow here.
06:58 - I can make this into a
little bit of a triangle,
07:03 - and imagine the y
equals 3, right?
07:07 - The y value is 3, go
up by 3, the x value
07:10 - is 4, go across by 4.
07:13 - x equals 4, y equals 3.
07:17 - The data stored with
the vector are actually
07:19 - these numbers 4, 3, and I
could choose to write them
07:22 - in different ways.
07:23 - I could say 4, 3, or I could
write these are in brackets
07:30 - and write 4, 3 like that.
07:31 - So in many cases,
more generically,
07:34 - a vector is actually
just a list of numbers,
07:36 - it's a list of components, and
if I were in two dimensions,
07:39 - I would have two numbers.
07:40 - Three dimensions, three numbers,
four dimensions, four numbers,
07:43 - et cetera, et cetera,
and this again,
07:45 - comes up more in machine
learning and data science,
07:48 - but in the concept
of physics, I'm
07:50 - really thinking about
this two dimensional space
07:52 - with just an x and a y.
07:53 - And incidentally, I will
ask you the question,
07:56 - what is the magnitude
of this vector?
07:59 - Think about that for a second.
08:02 - Maybe you've heard of in
3, 4, 5 triangle, right?
08:06 - If one side of a right
triangle with a 90 degree angle
08:09 - is three, the
other side is four,
08:11 - the hypotenuse of
that triangle is five.
08:13 - So one of the things
you'll discover
08:15 - as I do more videos about
different vector math
08:17 - is a lot of the
math with vectors,
08:19 - particularly in two
dimensional space, that is,
08:21 - relates to trigonometry and
all the same math associated
08:25 - with right triangles.
08:27 - Returning back to this
random walker example,
08:29 - we can look at it with
a new outlook on life,
08:31 - and that is vectors.
08:32 - Instead of having--
and this is really
08:34 - the first thing
when you're starting
08:36 - to program with p5 vector.
08:39 - This is already using the
concept of vectors in the way
08:41 - that I described it to you,
but I want to rewrite this now
08:45 - with p5 vector.
08:47 - Here is the reference page
on the p5 website for p5.
08:50 - vector.
08:51 - Now, it's a little strange that
there's this thing called p5.
08:54 - vector, maybe I can
return back to that
08:55 - in a moment in a little bit.
08:57 - But what I want to highlight
for you is this right here.
09:00 - Create vector.
09:01 - The function, create
vector, is what
09:04 - makes an object in p5 that
is a vector object a p5.
09:08 - vector.
09:09 - And when you create
a vector, you
09:11 - give it two values,
an x and a y.
09:14 - It also can optionally take
a third for an x, y, z,
09:17 - but again, I'm not making use of
the third dimension right now.
09:20 - So the first thing beyond all of
the fun interesting new vector
09:25 - math that I will explore is
just replacing my old x, y
09:29 - variables with one variable
that is a p5 vector.
09:33 - Going into the code,
I'll comment this out,
09:36 - and I will say--
09:37 - I'm going to say
pos for position,
09:40 - and then here in
setup, I'm going
09:42 - to say position
equals create vector,
09:46 - and the x is width divided by
2, the y is height divided by 2.
09:50 - I want to draw that
point at pos.x and pos.y.
09:56 - And while this code,
this random walker code
09:58 - is based on the core idea of
a random walker that can only
10:01 - go in four different
directions, up, down, left,
10:05 - and right, I want to instead
simplify this and just
10:10 - let x and y change by any
random floating point number
10:13 - between negative 1 and 1.
10:15 - So to do that, I'll say
pos.x equals pos.x plus
10:18 - random negative 1, 1.
10:20 - Same for y, and I'm
going to run the sketch.
10:25 - So step one of working
with vectors in p5
10:28 - is go and find
something you once
10:30 - made that had separate
x and y variables,
10:33 - and see if you could use
create vector instead for them.
10:36 - Yeah, go ahead.
10:37 - Do that now.
10:38 - I'll wait.
10:38 - [CLOCK TICKING]
10:42 - Step two, I would
say is that I want
10:45 - to start building a foundation
for a physics engine.
10:48 - Ultimately, through all
of these chapter 1 videos
10:51 - and chapter 2 videos, by
the end of all of them,
10:54 - I'm going to have a
very rudimentary physics
10:57 - engine that I can build a
lot more projects on top of.
11:01 - It will also serve as a
foundation of knowledge
11:04 - and understanding to use
more sophisticated and robust
11:07 - physics engines from
other libraries.
11:09 - That's the point of
where this all is going,
11:12 - but in order to do that,
I want to make heavy use
11:14 - of object-oriented programming.
11:16 - So if you've never done
object-oriented programming
11:18 - before or worked with
classes in JavaScript,
11:20 - a class being a template
for creating an object,
11:23 - then I might refer you to go
back to my beginner coding
11:26 - videos, where there's
a whole section
11:28 - on object-oriented programming.
11:29 - But for right now, just to recap
that, I'm in a very quickly
11:33 - create a walker object.
11:35 - So instead of having a
position variable that's
11:39 - in the global space, I'm
going to make a walker class
11:42 - and create a walker object
that is in the global space.
11:46 - Also to keep things organized,
and this is just my style,
11:48 - I'm going to make a separate
JavaScript file for walker.
11:53 - Then I'll write it as a class
with a constructor function
11:59 - that will receive an x and y.
12:01 - You will have one
variable, a position.
12:05 - What is the walker do?
12:06 - It walks, so I could call
that step or walk or update.
12:09 - I'm going to use
the name update,
12:11 - I'm going to write
a function, and I'm
12:13 - going to grab the code that I
have here, bring it into walker
12:16 - js, and what am I missing?
12:18 - [MUSIC PLAYING]
12:19 - (SINGING) This dot, this dot,
this dot, this dot, this dot.
12:24 - Now that I have the position
vector as part of the walker
12:27 - class, I need to
refer to the position
12:29 - as this dot position,
which at some point
12:31 - is going to create some awkward
looking longer winded code,
12:33 - but we're going
to live with that.
12:35 - And then I think I'm going
to have a show function
12:37 - for drawing the walker.
12:40 - I will grab this code that
draws the point, this dot,
12:48 - and now I have my
walker class complete.
12:51 - If the constructor
creates a position vector,
12:53 - the update function updates
the x and y position,
12:56 - and the show function
draws the position.
12:58 - Back into sketch, I'm going
to make the variable now
13:01 - called walker and setup
call the constructor
13:08 - with an initial position of 200,
200, and then in draw, update,
13:16 - and I think I forgot the
stroke in all of that
13:18 - as part of the show function.
13:23 - Put that back in, and now,
whoops, what do I have wrong?
13:27 - Oh, I forgot to reference
walker.js in index of HTML.
13:33 - And there we go.
13:34 - I have exactly the
same random walker.
13:38 - So this brings me to the end
of this first video about what
13:42 - is a vector and using p5 vector
in your code in your job script
13:46 - code in p5.js.
13:48 - But I have really barely
scratched the surface.
13:51 - I'm not doing anything other
than thinking of this p5 vector
13:54 - as a place to hold
the x and y variable.
13:58 - I really want to start thinking
about this concept of a vector
14:00 - more formally, and if I
have a position represented
14:06 - as a vector pointing
from the origin
14:08 - to the x, y location where
I'm drawing something,
14:11 - then couldn't that object
that has that position also
14:15 - have a velocity representing
as an arrow that's
14:21 - moving its current position
to its next position
14:24 - in my animation?
14:26 - And maybe I could
have also something
14:27 - called an acceleration, which
in the same way that velocity
14:31 - is changing the
position over time,
14:34 - the acceleration is changing
the velocity of time?
14:38 - And I've heard about this
thing called a force.
14:41 - Maybe there's something like
Newton's laws and physics
14:44 - in motion and things
that are at rest
14:46 - and they stay at rest
and all that stuff.
14:48 - Could I somehow take
this concept of a force.
14:51 - Maybe you've heard of
this equation force
14:53 - equals mass times acceleration.
14:56 - Could that play a role in how
acceleration is calculated,
15:00 - which changes velocity,
which changes position,
15:03 - and so these are the
foundational elements
15:05 - of a physics engine, and I am
going to build all of those
15:09 - slowly bit by bit, while talking
about different mathematical
15:14 - operations with
vectors and that's
15:15 - what you'll see in the next few
videos and the next few videos
15:18 - all throughout
chapter 1 chapter 2.
15:19 - So if you're interested,
just keep on watching.
15:22 - I don't know if they're
there right now,
15:24 - but when they're there,
they'll be there,
15:26 - and you can watch them.
15:27 - I'm making them.
15:28 - And these clothes are
different clothes depending
15:30 - which day I'm recording them.
15:32 - Goodbye.
15:32 - [MUSIC PLAYING]