00:00 - (ding)
- Hello,
00:01 - welcome to a followup Coding Challenge:
00:04 - Quick Draw Again, thingamabob,
00:06 - Quick Draw API Web Component edition.
00:09 - So, previously in a Coding
Challenge, I downloaded
00:14 - a large data file from the
Google Quick Draw data set.
00:18 - I talked about what the
Google Quick Draw data set is.
00:20 - It's just a collection
of millions and millions
00:22 - of these doodles that people made playing
00:24 - the Google Quick Draw game,
and I created a node server
00:28 - locally on my computer to open
that very large data file,
00:32 - and pass information about the drawings
00:35 - to a JavaScript program that
would read that information
00:37 - and then replay the drawings in a canvas.
00:40 - Basically, almost to
the day that I released
00:44 - that Coding Challenge, Google
came out with something new
00:47 - called the Quick Draw component,
00:49 - and what the Quick Draw web component is,
00:51 - it allows you to actually, using markup,
00:54 - and importing a JavaScript file,
00:56 - just actually embed Quick
Draw doodles in a web page.
01:01 - I'm not going to do that in this video.
01:03 - What I'm going to do is actually show you
01:05 - how to use the API
directly to pull the data
01:09 - from the drawing yourself
so that you can draw it
01:11 - in a canvas.
01:12 - So what I'm going to do, just to be clear,
01:14 - I know that wasn't clear at all,
01:16 - I'm going to do exactly what I did
01:18 - in the previous Coding Challenge
01:19 - but instead of downloading
a very large data file
01:21 - and spitting out my own node server,
01:23 - I'm just going to ask the
Google API itself for a drawing.
01:29 - And then I'm going to go eat lunch.
01:30 - I should probably go eat lunch now.
01:32 - Maybe pizza is one or something.
01:34 - Actually I'm not a big pizza eater,
01:35 - but we'll pick some food themed drawing,
01:38 - and just to be sure that
it's actually working
01:40 - to do it this way, I am going to do this
01:42 - in the p5 web editor so that I can be sure
01:45 - that you can be sure that
I'm not secretly downloading
01:48 - a big file, running a
node server somewhere.
01:49 - Why would I do that though?
01:51 - Okay, so here's the thing,
it's a bit confusing.
01:55 - Because this is so new,
this API is available,
01:58 - it's out there, but it's
a bit confusing to use it,
02:00 - so the first thing you're
going to want to do is go to
02:04 - this GitHub repository
quickdraw-component,
02:08 - and then down here somewhere in here,
02:10 - you're going to want to find this,
02:12 - join the Quick Draw API Google group.
02:15 - Now by the time you're watching
this, this may have changed,
02:17 - but I will hopefully
keep the code up to date,
02:20 - but maybe this sign up
process will have changed.
02:22 - So as soon as you go
02:23 - to the Google Quick Draw
API Google group, I joined,
02:26 - you'll end up at this page, click join.
02:27 - You'll need some sort of Google account.
02:29 - Then you're going to want to go
to your Google API dashboard.
02:32 - So here I am,
02:34 - I'm at
console.developers.google.com/apis/dashboard,
02:38 - there are a lot of APIs
there that you could look at,
02:41 - and what I'm going to do is
now search for Quick Draw.
02:46 - I made a project by accident,
which I didn't mean to,
02:50 - but this is what I'm looking for,
02:52 - Quick, Draw! Data API private.
02:54 - Now, this will not appear
to you unless you join
02:57 - that Google group,
02:59 - so that's a little bit
of the confusing thing,
03:00 - at least at the time that
I'm doing this today,
03:03 - November something, 2018.
03:04 - It's the 25th, 26th, something
like that, all right.
03:08 - So, I'm going to click here to,
03:11 - and I need to make a project,
03:13 - so I'm going to call this project...
03:14 - So I want to first create a
project, try to click enable,
03:17 - I'm going to call this Coding Train
Test, I'm going to hit create,
03:22 - and then I'm going to go back
and search again for Quick, Draw,
03:27 - Quick comma Draw,
03:31 - and I'm going to grab this here.
03:34 - Okay (grunts).
03:36 - Ah, here we are.
03:38 - Somehow I made it to the
Coding Train Test project.
03:41 - You want to create a project
and get to your Coding Train,
03:44 - well you're not going
to call it Coding Train,
03:45 - get to your project page.
03:46 - Now,
03:48 - I'm going to find that API.
03:50 - It takes a minute for the
project to actually be created.
03:54 - I think I was going too quickly there.
03:55 - I'm going to go to Quick Draw
data API, ah ha, there we go.
03:58 - Now I'm on this page.
04:00 - Now I'm going to click enable.
04:02 - Okay, so now I have this API enabled.
04:04 - The next thing that I want to
do is go here under credentials
04:07 - because I'm going to need an API key,
04:09 - so I'm going to go here under credentials.
04:12 - Here's my API key, fantastic.
04:15 - So here's the thing, I am going
to regenerate this API key
04:18 - as soon as I finish this
video so you won't be able
04:21 - to use it, you'll have to create your own,
04:23 - and I'm going to copy it
very quickly just over here.
04:28 - Now in my code, I'm just going to add it
04:30 - at the top as a comment
so I always remember it.
04:33 - Okay, so here's the
thing, I should mention
04:36 - that this while you can use the API,
04:40 - I'm going to do that right now,
04:41 - if you're going to use
this for a large project,
04:44 - you might want to actually
consider self hosting the API,
04:46 - which is kind of what I
did in the previous video,
04:48 - but actually using Google's code,
04:50 - which is probably much more robust
04:52 - and has a lot more possibilities.
04:53 - But once I have my API key,
04:55 - all I need to do, I'm
going to scroll down here
04:57 - to API middleware, I just need
to go to this particular URL.
05:03 - I'm going to use the
load json function in p5,
05:06 - I'm going to paste this in here.
05:07 - So now what I want to do is I
want to say drawing category.
05:10 - I know that cat is category,
I'm going to say ID.
05:13 - So I could ask for a
very specific drawing,
05:15 - but I think I can actually just say random
05:17 - to get a random one and
then get my API key,
05:21 - and then, is animated,
I don't want animated,
05:25 - and format equals, I want it json.
05:29 - We want to get that json, so let's see,
05:31 - if I take this URL now...
05:36 - (scoffs) Not found.
05:38 - (buzz)
(ding)
05:40 - All right, I'm back.
05:42 - So interestingly enough, even
though the documentation says
05:47 - ID required, ID (number) or "random,"
05:50 - I thought this means I
can actually type random
05:53 - into the URL query string, but maybe not,
05:57 - because now if I go back here,
05:58 - and I just zoom in up here
and get rid of id=random,
06:03 - just start with key, I
can see, there we go,
06:05 - each time I do this,
06:07 - I'm going to get a random
cat drawing here in json.
06:11 - So look at this.
06:12 - Ah, lovely, all right, so,
great, we're not using this API.
06:16 - So I can go back here, I
can go back to my code,
06:20 - and I'm going to say
a constant URL equals.
06:26 - So I'm just going to save this,
06:28 - and obviously I would
want to do something more,
06:30 - I could do so much here by I
could actually form the URL
06:34 - with a particular category,
but cat, meow, agory,
06:39 - but right now I am just going
to keep that, and in setup,
06:43 - I'm going to say load json URL,
06:47 - I'm going to give it a callback, got cat,
06:50 - I'm going to write this
got cat function drawing,
06:56 - and I'm just going to
say console.log drawing,
06:59 - so let's see that in p5,
07:02 - if
07:04 - I actually, and I'm going to
get rid of the draw function,
07:07 - if I've actually got,
there we go, drawing.
07:12 - So this looks like, there it is,
07:13 - so you can see down here in the console,
07:15 - all that data came in.
07:17 - So all that data came
in so I've got the cat,
07:19 - and now, guess what, I can draw it, okay.
07:22 - So, let's just make this 255 255.
07:27 - I wonder if this is the simplified data.
07:30 - Looking back at the documentation,
07:32 - I just realized is animated,
if I set that to true,
07:36 - I will get the data back that actually has
07:38 - the timing information
related to how the user drew
07:41 - the drawing down to the milliseconds,
07:45 - but in my previous coding challenge,
07:46 - I didn't bother to use, I just
used this simplified data,
07:49 - which is just the X and Y values
07:51 - of the particular path
07:55 - that the user drew,
07:57 - and it also is reduced normalized
08:00 - to 255 by 255 pixels square.
08:03 - So I want to use the
simplified data just to make
08:05 - my life easier, 'cause as I mentioned,
08:07 - I need to go get something to eat.
08:09 - Is pizza one of the categories?
08:10 - I guess I'll try pizza.
08:15 - Yeah, looks like pizza
came in as something.
08:17 - So now what I'm going to
do here is in got cat,
08:21 - which I'm now going to call got pizza,
08:25 - got pizza, what I'm going to do,
08:27 - I really, I could just go to
my previous code, do I dare?
08:31 - Github.com/codingtrainwebsite,
08:36 - and I'm going to go to Coding
Challenges all the way down
08:39 - to quick coding challenge
122, Quick Draw, sketch.js,
08:43 - and this is the code right here
08:47 - where I in draw, where I
draw that particular pattern.
08:52 - So I'm going to grab
that, oh this is terrible.
08:56 - Look at this.
08:57 - Basically, actually, here's the thing,
08:59 - this whole thing, there's no
reason for me to rewrite this.
09:02 - Just to prove that this works,
this is the entire code,
09:07 - and I am going to go back to my code.
09:12 - I'm going to paste my
entire thing in here.
09:16 - The only thing I'm going
to change is instead
09:19 - of my own node server slash cat,
09:22 - I am going to go to the particular URL.
09:24 - There might be some
slight differences here,
09:26 - but let's see what happens.
09:29 - Blocked by CORS.
09:31 - (buzz)
(grunts)
09:34 - I didn't have the CORS problem before.
09:36 - Hi, I'm back, and I'm moving very quickly,
09:39 - because the reason it wasn't
working wasn't my code,
09:41 - wasn't some mistake I made,
wasn't the dreaded CORS error,
09:44 - it was that I exceeded my quota.
09:46 - Now how could I possibly
have exceeded my quota?
09:48 - Because I certainly did not make
09:53 - something like 19 thousand API requests
09:57 - in the last few minutes, and in fact,
09:59 - somebody watching this,
10:00 - this is why we can't
have nice things, people,
10:03 - must have taken the API key.
10:05 - So I have a different API key,
10:06 - and because I talked for too long,
10:07 - it probably also just got used,
10:09 - but let's hope it's here in this
sketch, I'm going to run it.
10:14 - 429 error.
10:20 - (buzz)
So let me at least show you
10:21 - what the error is.
10:22 - I thought this was a CORS error,
10:24 - but it's actually the server
responded with the error 429,
10:27 - and 429 is an issue with the key,
so I'm going to conquer this.
10:34 - I'm going away, I'm going
to generate a new key,
10:38 - and then I'm going to immediately run it
10:40 - for the first time live before
anybody can possibly get it.
10:46 - (ding)
All right,
10:48 - I'm going to conquer you, internet.
10:50 - Thank you to meiamsome for the suggestion.
10:51 - What I'm going to do, I
already started doing this,
10:53 - I'm going to create an
input field, key input.
10:56 - I'm going to say key input = create input
11:01 - with nothing in it.
11:04 - Let me, I'll put on auto refresh here,
11:06 - and let me uncomment this out, okay.
11:08 - So now,
11:10 - we should see there's this input field,
11:12 - so what I'm going to do
now is I'm going to say
11:14 - key input.attribute,
11:16 - this is all the p5 dom library,
11:18 - type is a password,
11:21 - so what this means is
anything that I type in here,
11:24 - you can't see, and then
when I call new cat,
11:28 - I'm actually going to say,
11:30 - I'm going to get the API
key is key input.value,
11:35 - so I'm going to get the
input from the value.
11:38 - (laughs) My brain is not speaking anymore.
11:41 - I'm going to, yes, I'm going
to get the API key from there,
11:45 - and then I'm going to with,
11:46 - what I did to this URL is I just left it
11:49 - with key = blank at the end, so now,
11:54 - I am going to say + API key,
11:59 - so if the API key is in here,
12:02 - if the API key is in here,
12:05 - then,
12:07 - what will happen is it
will pull it from there.
12:11 - You won't be able to see it,
12:13 - it will pass into the,
you won't need to do this,
12:15 - you don't need to be crazy,
12:16 - I'm just here trying
to defeat the internet,
12:21 - and unfortunately, I might have
made a mistake, but hold on.
12:24 - So I'm going to get rid
of the screen behind me,
12:28 - I'm going to go get my API key,
12:32 - I'm going to put it in my clipboard,
12:37 - I'm going to put this back,
12:39 - I'm going to paste it in...
12:44 - (tapping fingers)
12:47 - Oh.
12:49 - Syntax error, syntax
error, what's going on?
12:53 - (buzz)
All right,
12:54 - new cat is commented
out, that was a problem.
12:57 - I think what I want to
also do is create a button
13:03 - like start,
13:06 - and then I'm going to say start
13:11 - = create button,
13:14 - start = create button, start,
13:17 - and then I'm going to say
start mouse pressed new cat,
13:21 - so now,
13:24 - now, I should, the sequence should be,
13:27 - I'm going to win, this is going to work,
13:29 - I'm going to paste my API key in there,
13:32 - then I'm going to click the start button,
13:35 - then I should start seeing my cats,
13:37 - and it won't be cats, they'll be pizza,
13:39 - because I'm going to go eat
lunch, but probably just a salad.
13:42 - Okay whew.
13:45 - Here it comes again.
13:48 - Disappear.
13:49 - Quick, get my API key.
13:53 - Then paste this in here.
13:57 - You can see it again, now
I'm going to hit start.
14:02 - Ha.
14:04 - (celebratory music)
14:07 - Thank you very much.
14:12 - I can get another pizza.
14:14 - There we go, every time I
press start, we'll get a pizza.
14:18 - So anyway, you can see now,
there was no point to this.
14:22 - The whole point to this was
that the exact same code I wrote
14:28 - in the previous Coding Challenge,
14:30 - I can now
14:33 - run from anywhere by using
14:35 - the official Quick Draw API from Google.
14:39 - I might have to just come
back and do this video again,
14:41 - but it's going to exist in some form
14:43 - 'cause this was all too insane.
14:46 - So I am going to take this away
14:51 - so that nobody sees my key by accident,
14:54 - and I will see you in a
future Coding Challenge.
14:59 - (imitating motor)
15:04 - (upbeat music)