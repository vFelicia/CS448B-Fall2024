00:00 - hello and welcome to part three of my
00:03 - quadtree coding challenge and in this
00:05 - coding challenge what I want to do is I
00:07 - want to see can this work will this work
00:09 - I have this very very very slow sketch
00:13 - that has 1000 particles each particle is
00:17 - checking every other particle where it
00:20 - is in the window and if it is
00:22 - overlapping or intersecting one of them
00:24 - it's highlighting itself white and if
00:27 - it's not it's keeping its color to gray
00:29 - and you'll notice this is running at
00:30 - about 5 frames per second can I use a
00:33 - quadtree to reduce the number of cycles
00:37 - computational cycles I need to do to
00:39 - check every particles location against
00:41 - every other particles location and get
00:43 - this running at 30 frames per second
00:47 - let's let's go okay so I'm actually
00:51 - gonna refresh this and when there's
00:52 - nothing there now because I actually do
00:55 - I had all that code I deleted it I'm
00:57 - gonna write it now so what I do have
00:59 - already is a particle class so I have a
01:02 - very simple particle it just has an X a
01:03 - Y and a size and it's drawn as a circle
01:06 - so let's do this let's say I'm thinking
01:11 - about this I'm thinking about this let's
01:12 - make an array of particles and I'm gonna
01:15 - say for let I equals 0 eyes less than 1
01:18 - and let's just start with 100 because I
01:20 - don't want to deal with it running slow
01:21 - until it's time to really implement the
01:23 - quadtree
01:23 - and I'm gonna say particles index I is a
01:25 - new particle and I'm gonna give the
01:28 - particle a random location on the window
01:30 - then I'm gonna say for let P of
01:34 - particles and I think it's like P dot
01:38 - update probably and P dot I don't know
01:41 - what it is let's look move and render
01:43 - all right who knows what I call these
01:44 - things move and render and I must say
01:48 - background 0 ok so now we can see there
01:53 - we go no problem look at all my
01:55 - beautiful particles I'm moving around
01:57 - and so we can see by the way just even
02:00 - with like a thousand of them drawing a
02:03 - thousand particles is no problem P 5
02:05 - canvas I could draw a thousand circles
02:07 - any old day of the week 30 frames per
02:09 - second whatever nice frame rate but now
02:12 - what if I
02:13 - to say four and I think I could say let
02:16 - I'm gonna do this again this is I'm
02:18 - gonna separate this out into a separate
02:19 - loop let P of particles for let other of
02:23 - of particles and I want to now check if
02:28 - P intersects other then I want to
02:34 - highlight this particle P dot highlight
02:38 - so this is the idea right I want to
02:41 - check I want to do a nested loop for and
02:43 - also I should I got it make sure as long
02:46 - as P is not equal to other so as long
02:49 - piece shouldn't check itself and again
02:50 - there are plenty of ways to optimize
02:52 - this nested loop like I don't if P is
02:54 - checking other I don't need other to
02:55 - check P but that's not the point here
02:57 - I'm gonna let this be as inefficient as
02:59 - possible is right now do I have an
03:01 - intersect function do I have a highlight
03:03 - function I don't think oh it would be
03:04 - nice if I kept those
03:06 - so let's write an intersex function
03:09 - intersects other so what do I need to do
03:14 - I need to know the distance between this
03:16 - dot X this dot Y and other dot X other
03:20 - dot Y and then I'm going to return
03:22 - distance is less than so they're
03:25 - intersecting if the distance is less
03:27 - than this dot R plus other not R right
03:30 - so this is going to tell me then I'm
03:33 - going to just do I'm going to make a
03:35 - variable called highlight and set that
03:39 - equal to false I'm going to in render if
03:43 - highlight fill white otherwise fill just
03:49 - this sort of grayish color and that
03:51 - should be this dot highlight and then
03:56 - reset highlight and I'm gonna say this
04:01 - highlight equals and then value so I'm
04:05 - gonna write a function that's like set
04:06 - highlight that's going to turn
04:08 - highlighting on or off I could do a
04:11 - better job of this but this will work
04:12 - right because basically what I want to
04:14 - do is first I want to just set the
04:18 - highlight false for all the particles
04:22 - right they're all not highlighted then
04:24 - what I'm doing the check if it
04:27 - Chile is intersecting I can set the
04:30 - highlight to true so now let's go back
04:33 - to just 100 particles and we can see
04:36 - perfect when there okay now the distance
04:40 - oh you know what I'm not drawing them
04:42 - I'm drawing them with the radius as the
04:46 - diameter so they're actually half the
04:47 - size so I should fix that in my render
04:50 - function I'm not being consistent this
04:52 - should really be radius times two if I'm
04:54 - using R as a radius for the math so now
04:57 - we can see right when they are
04:59 - overlapping they're highlighted white
05:01 - when they're not overlapping they're not
05:03 - okay so this is working fine I can
05:06 - actually let me look here in the oh
05:10 - there's like oh I got a deal with that
05:14 - for a second hold on I have a little
05:17 - extra bit of code in there by accident I
05:19 - can look at the framerate no problem 27
05:22 - frames per second let me just ignore
05:24 - what I'm doing for a second in my
05:25 - quadtree code I was adding some unit
05:28 - tests and stuff and I'm gonna just get
05:30 - rid of that okay so we can see here look
05:32 - at the frame rate 26 frames per second
05:35 - now let's see that if I go back to my
05:38 - sketch and I add a thousand particles
05:43 - let's look at the frame rate now five
05:45 - frames per second also now that I have
05:48 - so many I'd probably want it to be them
05:50 - not to be as big because so let's
05:55 - actually make them half the size and now
05:58 - frame rate is still five frames per
05:59 - second okay
06:01 - we're here for the quadtree right let's
06:03 - add the quadtree so the thing is what do
06:06 - I need to do right here this is what I
06:09 - need to replace I'd say I'm still want
06:11 - to go through every particle but now
06:14 - instead of looking at every every every
06:16 - every particle I want to just query I'm
06:19 - gonna say let others equal oh wait half
06:21 - that I have to create a quadtree
06:23 - so I'm going to first I need a quadtree
06:25 - variable quadtree then I'm gonna say
06:29 - quadtree is a new quadtree I haven't I
06:33 - did that color coding John so long ago I
06:35 - forgotten what I need I think I need a
06:37 - boundary so I'm gonna say a boundary is
06:40 - an
06:41 - rectangle like my quadtree example has
06:44 - some geometry classes like a rectangle
06:47 - and the rectangle I'm going to make it
06:48 - 300 comma 200 that's the center and it's
06:51 - 600 comma 400 so I probably should use
06:53 - width / - height / - with light but
06:56 - that's fine I'm just gonna leave that so
06:58 - I'm gonna make a new quad tree with that
06:59 - boundary then what I'm going to do and I
07:04 - think this got added after so one of the
07:08 - things that actually this is a bit I
07:09 - can't believe I'm not even at I forgot
07:11 - about this but these things are moving
07:12 - so if I build the quad tree with all of
07:15 - those particles as soon as they move how
07:18 - my god I'm missing so many pieces here
07:20 - there's more to this video than I
07:22 - thought all right hold on here we go
07:24 - this is gonna be good
07:25 - I knew I knew there was something going
07:26 - on here okay so what do I what does what
07:29 - does this quad tree expect the quad tree
07:33 - if I look at it it expects me to insert
07:35 - a point a point is a particular object
07:39 - with an x and a y oh look I already
07:41 - added this oh so this is so if you
07:43 - follow the last tutorial this won't be
07:45 - there let's take this out so here's the
07:48 - idea let's watch watch and learn okay
07:50 - here we go this is where I left off in
07:52 - the last tutorial I forgot about this
07:53 - now I'm gonna go back to my code save
07:56 - this and I'm gonna say okay what I want
07:59 - to do is I want to build this quad tree
08:01 - so what I'm gonna do is I'm gonna say
08:03 - quad tree I'm gonna say let a point be a
08:07 - new point at particles index I dot X and
08:12 - particles in X I dot Y and I'm going to
08:14 - say quad tree insert that point right
08:18 - this is where I last left off I'm
08:19 - creating a point object and putting the
08:21 - point object in the quad tree the quad
08:23 - tree is going to organize itself to keep
08:24 - points together that needs to be
08:26 - together but here's the thing I've now
08:29 - made this new point object I want to put
08:30 - the particle in the quad tree so really
08:33 - I want my quad tree to store the
08:35 - particles and then the particles are
08:36 - moving some kind of like update their
08:38 - location in the quad tree how am I gonna
08:39 - deal with this well there are a variety
08:41 - of solutions to this number one I wrote
08:43 - the quad tree code so I could just
08:45 - rewrite it to work with my particle
08:48 - object and set the point object but
08:50 - something I could do to make it more
08:51 - generic is I could
08:53 - this is a this box2d works this way and
08:55 - some physics libraries do I could add a
08:57 - property to the point object called user
09:00 - data and what that means is when I
09:07 - create a point object of court
09:09 - my data that I need for the quadtree is
09:11 - its X Y location but I could also say
09:14 - attach yourself to this other object so
09:16 - that when I find this X Y location I can
09:18 - know that it's attached to this
09:20 - particular particle so in other words
09:22 - what I can do now is I can say make a
09:23 - new point with this particles X&Y
09:28 - referencing also this particle again
09:30 - there's some redundancy here but this
09:32 - will work well enough it's also very
09:34 - generic so if somebody else is using
09:35 - this quad tree as a library they could
09:37 - kind of use it with whatever classes
09:38 - they've they've they've created so but
09:42 - here's the thing this created that quad
09:44 - tree but as soon as I call all the
09:45 - points move they're going to be in a
09:46 - different location they're not where
09:48 - they originally were so actually I don't
09:50 - want to do this here what I want to do
09:52 - is do this here in draw and I this the
09:57 - nice thing about this is I have the
09:58 - particle and a variable called P so I
10:00 - want to create a new point whoops what
10:04 - is going on here
10:05 - give me back my coche okay I want to do
10:10 - a new I want to create a new point add
10:12 - an x and y with a P and I want to insert
10:14 - it into the quadtree but draw looping
10:16 - over and over again so when I insert the
10:19 - first time the next time I don't want to
10:20 - reinsert it I just want to update this
10:21 - location well the truth of the matter is
10:23 - while that would be a nice way of doing
10:27 - it
10:27 - updating the locations and probably most
10:29 - efficient it actually is a little bit
10:31 - simpler if I just remake the quadtree
10:34 - every frame the quadtree is the thing
10:36 - that I'm just going to recreate every
10:39 - frame for the purpose of optimizing the
10:41 - collision detection so again I could be
10:43 - more thoughtful about this and have a
10:45 - global quadtree I think there's even
10:47 - maybe a clear function by now in that
10:49 - quadtree class that I wrote but I'm just
10:50 - gonna remake the quadtree object every
10:52 - frame build it from scratch every time
10:55 - through draw okay so now I've inserted
10:59 - all of the points the quadric let's just
11:01 - run this to make sure it's like still
11:02 - working no syntax error sketchiest line
11:05 - 29
11:07 - oh I forgot that I was doing something
11:09 - down here okay another error quadtree
11:13 - nine your capacity should be a number
11:14 - but is undefined ah I forgot about the
11:16 - capacity so the quadtree each node of
11:19 - the quadtree has a limit to how many
11:21 - particles can go in it let's just use
11:23 - four that's what I've been using we
11:24 - might get better better or worse results
11:26 - depending on that number
11:29 - so let's and let's let me give myself
11:34 - some more space here with all this okay
11:38 - so we can see that this is working but
11:39 - running slow so while I've got the Quan
11:43 - building the quadtree I have it lost
11:45 - even though there's computation involved
11:46 - in building the quadrat for rebuild at
11:48 - every frame there's so much less
11:50 - involved in doing that then checking all
11:52 - the locations and now here's the thing
11:55 - that I want to do let me just shut this
11:57 - off so that I don't like kill my
11:59 - computer what I want to do now is here I
12:02 - started here instead of looking at every
12:06 - other particle in the whole particles
12:09 - ArrayList I want to query I want to say
12:11 - I'm gonna say let others equals QT e dot
12:15 - query now what do I want to quit I think
12:18 - query is the name of the function query
12:22 - query class query query query query
12:25 - query quick query range and found but
12:29 - and also worried about found found a
12:31 - member when I wrote that found is the
12:32 - array that's being recursively added to
12:35 - but I want to query a range and the
12:38 - range could be and Moraine could be a
12:42 - rectangular range or a circular range
12:45 - and actually I have this this has been
12:47 - added since the last tutorial but this
12:49 - geometry object for a circle I'm going
12:51 - to use a circular range Y if I have a
12:53 - particle and has a given R and my other
12:58 - particle has a given R I only need to
13:02 - look at particles within what a range
13:06 - that is are I drew this kind of bigger R
13:09 - times 2 right because the particles are
13:12 - intersecting only if they're within R
13:15 - times 2 of this particle now if the
13:18 - particle were different
13:19 - is we'd have a more complicated problem
13:21 - and I encourage you to implement that as
13:24 - your own exercise but because my
13:25 - partners are the same sizes I've got a
13:27 - pretty easy easy scenario here so what I
13:30 - can do is I can in sketch I can say quit
13:34 - okay so first make a circle there's a
13:37 - new circle object where it should be at
13:40 - P X P Y and it's sizes PR times two this
13:46 - is the range I want to check for any
13:48 - other particles within the range the
13:51 - distance of this particles radius times
13:53 - two I want to query that circle let's
13:56 - call this range I want to query this
13:59 - range then others is now a smaller
14:02 - amount this is all I just needed and the
14:04 - other of others so I'm no longer
14:06 - checking the full particles list I'm
14:08 - querying the crud quadri for a smaller
14:10 - subset of particles for me to check
14:13 - intersection and now I think we might be
14:15 - done I don't know I don't know I don't
14:17 - know they look at this this was remember
14:19 - this let's let this run again this is it
14:23 - running before really slow five frames
14:27 - per second I'm gonna hit refresh I hope
14:31 - I don't have any errors oh that looks
14:37 - good it's running fast but it's not
14:40 - highlighting so what happened there
14:45 - P does not equal other and P intersects
14:48 - other why okay hold on I have a bad
14:51 - feeling that oh the particle thank you I
14:59 - forgot so that's the thing right right
15:02 - right right right so this is the whole
15:03 - thing these are points I called them
15:06 - others well let's call them points I'm
15:08 - getting the points for every other of
15:12 - points for every point of points other
15:19 - equals point dot user data I need to
15:23 - actually look at the that object right
15:25 - the member of the particle which is the
15:28 - thing that works with intersects had
15:29 - said highlight and all of that is
15:32 - this Quadra is giving me an array of
15:34 - points and as I look at each point I
15:36 - need to pull out the user data okay I
15:38 - can't I can't bring myself to use that
15:40 - drummer there we go so now whoops
15:44 - framerate oh look at that
15:47 - 48 frames per second it was five frames
15:50 - per second now it's 48 frames per second
15:51 - whoo-hoo so you know there's issues with
15:53 - this well I've really set myself up for
15:55 - success here these particles have a
15:57 - really nice even uniform distribution
16:00 - across the entire canvas they're all the
16:03 - same size there's only a thousand of
16:05 - them I'm not actually like having them
16:07 - bounce off each other or any kind of
16:08 - complex collision resolution but this is
16:11 - the basic idea what you can see is that
16:13 - with a quadtree
16:15 - right if I just quickly like all I have
16:17 - to do now to to switch them on and off
16:21 - right is to say let me comment this out
16:25 - and if I say for other let other of
16:30 - particles this is so now no quadtree
16:39 - right I'm just looking at every other
16:40 - particle super slow super slow frame
16:46 - rate of about 5 and now switch to using
16:49 - the quadtree
16:53 - super fast so good bye everyone
16:56 - oh thanks for watching this tutorial I
16:58 - encourage you to try to make a version
16:59 - of this where the particles on a
17:01 - somebody already has done this a pull
17:04 - request on my quadtree repo but making
17:06 - it a version of this with the flocking
17:07 - simulation can't you know how is that
17:10 - going to work what if you have you know
17:12 - what if the particles aren't so evenly
17:14 - distributed how could you do it with
17:15 - different sizes Oh could you visualize
17:17 - the quadtree so draw the quadtree
17:19 - dynamically as it's like changing and
17:21 - updating that might be a beautiful thing
17:22 - to create make your own quadtree
17:24 - visualizations I hope you do all those
17:26 - things share them with me and I will see
17:28 - you in a future coding challenge
17:31 - something or other a video goodbye
17:32 - subscribe like I don't know that kind of
17:35 - stuff goodbye
17:40 - [Music]