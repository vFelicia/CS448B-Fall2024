00:02 - [Music]
00:29 - [Music]
00:35 - [Music]
00:45 - [Music]
01:12 - [Music]
01:22 - [Music]
01:40 - [Music]
01:52 - [Music]
02:08 - [Music]
02:22 - [Music]
02:30 - [Music]
02:53 - [Music]
03:04 - [Music]
03:30 - [Music]
03:40 - [Music]
04:15 - [Music]
04:58 - [Music]
05:31 - [Music]
05:49 - hello good morning and welcome to the
05:54 - coding train with me your host Daniel
05:58 - chip I always feel so ridiculous doing
06:01 - this I you you may have noticed that I
06:03 - wasn't around last week live streaming
06:06 - that was because I was sick I had
06:09 - another lovely case of laryngitis but
06:12 - things think to have come back I'm able
06:14 - to speak I'm gonna try to limit myself
06:15 - to just a couple hours today which is
06:18 - really how much I should limit myself to
06:19 - always but sometimes things tend to
06:21 - spiral out of control and I'll suddenly
06:23 - have livestream for four hours wondering
06:25 - why but I will be back tomorrow
06:27 - so today whatever I do today will be in
06:30 - two parts so part one today and part
06:33 - what to tomorrow
06:35 - so first let me thank today's sponsor -
06:39 - Lane - Lane is a password manager I
06:43 - could not live without password
06:46 - management and it's something that you
06:49 - if you don't use a password manager you
06:50 - might consider checking out - Lane and
06:52 - you can go to - line.com slash coding
06:55 - train to get a free 30 days of - lien
06:57 - premium and also a discount if you
06:58 - choose to purchase it so I'll come back
06:59 - and talk a little bit more about - Lane
07:01 - later but I want to thank them right
07:04 - from the outset for helping make it
07:06 - possible what I do here on this YouTube
07:10 - channel I also want to talk about
07:12 - something near and dear and close to my
07:15 - heart so let me whoops that doesn't
07:19 - matter
07:19 - let me open up a web browser by the way
07:23 - this is a new computer and so I have not
07:27 - done anything really to set up this new
07:30 - computer I mean I set up my own personal
07:34 - log into this computer with my dev
07:36 - environment but then I this morning just
07:38 - created a coding train login and I've
07:41 - not set up the dev environment so that's
07:42 - something I will actually do during
07:44 - today's livestream which will either
07:45 - thrill you for it because you'll get to
07:49 - see some of these you know behind the
07:52 - scenes it shouldn't be behind the scenes
07:54 - it should be right out in the front of
07:55 - the scenes but it's a little bit of you
07:58 - know you might be wondering like well
07:59 - what are the visual studio code
08:00 - extensions you have installed and that
08:02 - kind of stuff so I'm going to go through
08:04 - that because I have to can't do anything
08:06 - without having gone through that and
08:08 - then that's one thing oh but where I was
08:12 - I was talking about I want to talk about
08:15 - the processing foundation so few things
08:20 - about the processing foundation so if
08:22 - you're not familiar with the processing
08:23 - foundation processing foundation is a US
08:26 - not-for-profit 501c3 tax-exempt
08:29 - organization we are a charity based in
08:31 - New York State if you're wondering about
08:33 - all the legal jargon processing is the
08:36 - entity that maintains these software
08:38 - applicants processing p5.js processing
08:43 - dot PI or Python version and processing
08:45 - processing for Android and then there's
08:47 - also it's very confusing processing for
08:49 - pi which is the Raspberry Pi
08:51 - implementation of processing so all of
08:53 - these different tools maybe you use them
08:55 - maybe you teach with them maybe you just
08:56 - been exposed to them because you watch
08:58 - them on the coding train whitebalance
09:00 - looks good on green screen maybe the
09:02 - folk
09:02 - sorry I business it appears that if I
09:05 - cannot I cannot keep my focus which
09:07 - might actually be true but what happens
09:09 - is I'm on a little thought and then I
09:11 - see out of the corner of my eye I had a
09:12 - message it seems important I start to
09:13 - read it and then I lose track of what
09:15 - I'm talking about and here we are let me
09:19 - double check the focus
09:21 - today I will be advertising the mud
09:26 - coffee let's put that here and see if I
09:29 - can focus on this coffee because it
09:32 - seems like I might be out of focus a
09:34 - little bit then I will come back and
09:36 - talk about the processing foundation oh
09:40 - yeah it does seem a little out of focus
09:49 - let's see let's see what that better
09:50 - maybe that is better tell me everyone if
09:56 - the focus seems a little better on me
09:57 - now hopefully it does and he'll have a
10:00 - sip of my bud coffee
10:01 - it is not a password manager but it will
10:06 - keep you awake I've been having a lot of
10:08 - trouble sleeping I think I have to I
10:10 - think I really need a no screens policy
10:12 - after 8 p.m.
10:15 - I've got a little bit of a Pokemon go
10:17 - problem
10:18 - should I not show you admit that or no
10:25 - processing foundation so I have been
10:28 - part of the processing project as a
10:31 - contributor or enthusiastic user of the
10:35 - processing since around 2003 when I
10:40 - learned about the project from some
10:41 - workshops that others had taught at ITP
10:43 - where I am currently and over the years
10:46 - I've been you know with each year that
10:49 - passes I've got a little bit more
10:50 - involved maybe to get less involved I
10:52 - don't know where the what the exact
10:54 - trajectory is but without the processing
10:57 - foundation and all of and countless
11:00 - hours of volunteer work and some paid
11:04 - work that's been generously funded
11:06 - through donors and other types of
11:08 - initiatives none of what I do on this
11:11 - channel would be possible so recently
11:15 - there is a new one of the one of the
11:18 - tools that I use probably the most these
11:20 - days is p5.js library so I'm going to
11:27 - the processing foundation medium page
11:29 - which I probably could have got to from
11:31 - from here there we go I might have gone
11:35 - to the wrong place there oh this is what
11:37 - I wanted to look at but I wanted to look
11:38 - at the East too so first of all if
11:40 - you're wondering what's the latest stuff
11:42 - going on with the processing foundation
11:44 - you should check out the the articles
11:48 - that are on medium and the first one I
11:50 - want to highlight for you is this
11:51 - article written by Lauren McCarthy the
11:53 - creator and leader lead developer of the
11:57 - p5.js project and I won't read
12:01 - the whole article for you but you can
12:04 - kind of get the idea here no no I don't
12:06 - need to sign in you can kind of get the
12:08 - idea here from the title making space
12:11 - for the future of p5.js
12:12 - so after seven years of developing and
12:15 - leading the project lauren is planning
12:18 - to transition out of her role as project
12:21 - lead in January 2020 and we are hoping
12:24 - to have a rotating model of leadership
12:27 - with a new leader every year and this
12:29 - would be a paid position so this is
12:32 - something we are currently act at this
12:37 - is something that we are currently
12:40 - actively fundraising for because this is
12:42 - something that is a question of can this
12:44 - project even continue how do you sustain
12:47 - a open source a healthy inclusive open
12:51 - source project and this is a constant
12:53 - struggle and there are no easy answers
12:54 - and I'm sure lots of projects run up
12:56 - into all the same questions and issues
12:58 - lots of people are working and thinking
13:00 - about this I encourage you to read this
13:02 - entire article written by Lauren
13:04 - McCarthy and if you want to if you have
13:07 - the means and Ken you know so part the
13:09 - reason why it's an open free open-source
13:11 - library is some of you watching this
13:13 - maybe cannot support the project
13:15 - financially and that's totally fine
13:17 - that's great that's what it's here for
13:21 - but if you can or you know somebody who
13:22 - can or there's a way that you can
13:23 - contribute or advocate for it in some
13:25 - capacity I would encourage you to donate
13:27 - and so I want to draw your attention to
13:30 - this other article by Dorothy Santos who
13:34 - is the project manager of the process of
13:37 - sorry program manager of the processing
13:39 - foundation and and we are running a
13:47 - fundraiser like a month I don't all the
13:49 - information is in this article written
13:51 - by Dorothy you will notice something
13:53 - here that might look familiar to you I
13:54 - don't know maybe you've seen more rows
13:57 - and the sort of like a little booklet or
13:58 - zine this looks like something that you
14:00 - might have seen on the coding train it's
14:03 - because as part of the fundraiser there
14:07 - are
14:08 - okay no I don't need to be interrupted
14:09 - there are rewards rewards from this is
14:13 - work by the artist Maya man these are
14:18 - raizo prints that you can get as part of
14:19 - your donation Kate Hollenbach and I'm
14:23 - gonna scroll down and find Saskia uh
14:26 - freckie she's told me how to pronounce
14:28 - her name I've drawn a little bit of a
14:31 - blank right now but I think it's for
14:32 - these I love I love all of you but I I
14:35 - have a affinity to these kinds of
14:37 - geometric patterns that are created with
14:39 - processing and p5.js and other but sigh
14:43 - who is the coding trained community
14:44 - manager who many of you may have come
14:46 - across in your communications with
14:49 - things around this channel of has been
14:51 - working very hard on a coding train zine
14:54 - so as of now this is exclusive to
14:58 - donations to the processing foundation
15:00 - you know I will share all the code and
15:02 - all the images in here are part of
15:03 - things that have been on the channel so
15:06 - but if you are interested this is
15:09 - something that I am working on producing
15:10 - and could be part of a reward with a
15:12 - donation I will also be doing my annual
15:19 - processing fun livestream fundraiser
15:24 - holiday fundraiser closes not tuned what
15:27 - playing a ukulele and making a fool of
15:29 - myself singing holiday songs with coding
15:32 - themed lyrics I will be doing that next
15:36 - week probably a week from today
15:38 - that's the date I'm targeting I haven't
15:39 - in scheduled yet oh but wait next
15:41 - Thursday or Friday or Wednesday so yeah
15:44 - I can't do it after the 20th I'll be
15:46 - away so that's my plan so actually
15:50 - speaking of which I need a maybe I don't
15:56 - know if violet is watching violet has
15:59 - been working on helping to maintain a
16:02 - lot of the community contributions and
16:04 - github repos associated with a coding
16:06 - train they are doing they're being so
16:08 - it's I'm so grateful for their help with
16:10 - this and if I go to github.com slash
16:14 - coding train I'm trying to think like
16:15 - where where where can you submit didn't
16:18 - I do like let's see holiday
16:22 - I feel like there was a repo last year
16:25 - for this having trouble remembering
16:28 - let's look oh wait I can type in here
16:34 - holiday holiday songs okay we could just
16:38 - use this still so I had a book of like
16:42 - holiday ukulele songs which were the
16:44 - songs that I had chords for that I could
16:46 - play I saw a YouTube tutorial about how
16:49 - to play last physical last Christmas I
16:53 - don't know about this Christmas thing I
16:55 - never I was not somebody who celebrated
16:57 - Christmas as a child you can make your
16:59 - inferences as to what sort of winter
17:01 - themed holidays that I my family
17:03 - celebrated Hanukkah I don't know why I'm
17:05 - dancing around the Hanukkah bush but but
17:14 - I love I have a love for holiday music
17:17 - as embarrassing as that might be and so
17:20 - if you have some songs you want to write
17:23 - the lyrics for provide me ukulele chords
17:25 - for or a backing track I will play about
17:28 - b3 backing track even you can submit
17:32 - that to this repo please I encourage you
17:36 - contribute to my time of making a fool
17:40 - of myself next week okay now so I've
17:46 - talked about the processing foundation I
17:48 - have talked I've thanked dashlane ah one
17:53 - other thing I want to mention let's go
17:56 - to their might be other things I want to
17:58 - mention but in my update on what's
18:00 - happening in the world of the coding
18:01 - trade Oh
18:02 - two things I want to mention so i one
18:06 - thing that i did recently
18:08 - hmm am I gonna be able to find this wait
18:13 - no okay
18:14 - I'm looking for here we go so I recently
18:19 - had was lucky enough to have my
18:22 - beginners guide to machine learning
18:24 - playlist converted to a youtube learning
18:27 - playlist this is a new feature I don't
18:28 - know if it's out of beta or still in
18:29 - beta but this is a new feature within
18:31 - the last Kevin Ware's launched but
18:33 - sometime in the last year
18:35 - which is allows for a little bit of
18:37 - extra organization of video content on
18:39 - YouTube in with more like a syllabus
18:44 - style if you will
18:46 - organization so you I just want to like
18:49 - a lot of there's nothing there's not
18:51 - well there there's some pretty new
18:52 - content here because I some of these
18:56 - videos just came out within the last
18:58 - week but what this is whoops is I've
19:03 - basically collected all of the videos
19:05 - where I'm using the ml 5gs library
19:07 - including my sort of introduction to the
19:09 - library the image classification videos
19:12 - the transfer learning videos this is a
19:15 - little bit of an aside but it's useful
19:16 - the canon classification videos the
19:19 - teachable machine videos the train your
19:21 - own neural network videos which is what
19:23 - i'm actually continuing today they'll go
19:25 - in a new section probably called pose
19:27 - poses working with poses i'm going to
19:29 - call it and then i a few different
19:31 - videos which touched on audio so they're
19:33 - here so you know if you are looking to
19:35 - sort of find and go through somewhat
19:37 - sequentially all of the javascript
19:41 - machine learning videos i have they're
19:42 - here now
19:42 - that's to say it's not actually all the
19:44 - JavaScript videos i have because there
19:47 - are a ton of them if you UPS know ah oh
19:51 - go come back pull my log in as i don't
19:54 - even know what's going on sleeping - who
19:59 - can you hear that
20:01 - you cannot hold on everybody we're gonna
20:04 - have a little like random number ASMR no
20:10 - no we're not we're not I got to keep
20:12 - moving here
20:12 - welcome back to that later great channel
20:18 - here by the way every day I should check
20:20 - out every day I what am I looking for my
20:23 - home my channel what's going on your
20:26 - channel when my logged in ass no I'm uh
20:29 - oh I'm somebody else with no channel I
20:32 - have too many Google login it's such a
20:35 - problem this is my Daniel at the coding
20:38 - train calm login which you'd think would
20:40 - be the owner of my channel it's not some
20:43 - day I'll figure that out dark theme is
20:44 - on
20:45 - YouTube this is a log and I only use for
20:51 - logging and during my livestream so who
20:53 - knows what I'm subscribed to or what is
20:54 - recommending but how why do I not see
20:57 - the sidebar oh wait I do this there we
21:00 - go Oh
21:02 - Oh No I've saved this I guess oh no this
21:05 - is what I'm looking for oh this is the
21:06 - worst what I was saying is I have a lot
21:11 - of other videos on neural networks and
21:13 - machine learning but thank you David I
21:19 - will mention that there's a lot of other
21:21 - videos on machine learning they're a bit
21:22 - lower level and deal with a little bit
21:24 - in Python but mostly like programming a
21:26 - neural network from scratch and some
21:27 - other background math and that sort of
21:28 - thing so okay by the way this spring I
21:34 - I'm only just take your temperature on
21:36 - this I'm not gonna do a poll not gonna
21:37 - do anything scientific here but I am
21:40 - thinking of redoing this entire series
21:43 - which was recorded let's see let's look
21:46 - at one of these like vector video so
21:48 - first of all look how different I look I
21:51 - mean do you see any gray hair where's
21:55 - those stripes in the beard they're gone
21:57 - so this was recorded quite some time ago
21:59 - it was published on YouTube in 2015 but
22:02 - I think I even recorded these before
22:04 - that so it's 2025 years later I am
22:08 - thinking of redoing all of these videos
22:10 - in JavaScript along with writing
22:13 - updating the nature of code book so if
22:16 - that's the thing that would excite you
22:17 - let me know every day I can't we c'mon
22:22 - that is correct
22:24 - and again if I apologize for this for
22:27 - those of you in the member slack channel
22:28 - if you could remove the previews I can
22:31 - see very little of the history of the
22:33 - conversation I can see none of it as
22:34 - soon as there's like a big unfolding
22:36 - preview of something ok so there were
22:43 - other things mentioned there's the wheel
22:44 - there's the community contributions I
22:50 - think those were other things so let me
22:52 - mention the wheel we're actually before
22:56 - I mentioned the wheel David maybe you
22:58 - could point
22:58 - where I should go where's the best place
23:00 - for the discussion on that and let me go
23:02 - to community contributions so I know
23:04 - Simon always points out the videos that
23:07 - I never showed any of the communities on
23:09 - at this point I'm probably not gonna get
23:11 - to ones that are a big backlog and lists
23:13 - or something that I particularly want to
23:15 - highlight but I will at least show you
23:17 - the community contributions on the most
23:19 - recent coding challenge which was
23:21 - released yesterday or two days ago where
23:26 - I created I implemented the minimax
23:29 - algorithm to have a to play the game
23:33 - tic-tac-toe so let's go to this first of
23:36 - all let's go to the live demo where I
23:39 - will now attempt
23:45 - to beat this player this computer that
23:53 - sick tactile by way you could like do
23:57 - some kind of cool gesture tic-tac-toe
23:59 - game haha see that move watch this now
24:03 - I'm gonna go here haha here cannot get
24:07 - me okay got you oh oh so sad sorry
24:15 - coding train github page it's the most
24:18 - recent repo created so that was the
24:20 - challenge the X's are being played by
24:23 - the minimax algorithm if you're
24:25 - wondering what that is there's a
24:26 - 30-minute video for you to watch and
24:28 - then there have already been Wow
24:31 - I have not been I did not look at this
24:34 - this morning there are one two three
24:36 - four five well two of them are from
24:39 - Simon so five unique people
24:42 - contributions already there's
24:46 - tic-tac-toe minimax in Python with alpha
24:48 - beta pruning alpha beta pruning is not
24:50 - something I implemented as part of the
24:51 - challenge I alluded to it you know I I
24:54 - assume that this is not something that I
24:56 - can easily run here but I would
24:58 - encourage you to check out there's a
25:01 - David Snyder's example of this in Python
25:03 - it's nice this is wonderful anytime
25:05 - you're creating something if it's not
25:07 - something that just runs in the browser
25:08 - natively making a little gift including
25:10 - this part of readme is a wonderful thing
25:11 - to do
25:13 - thank you for that I'm going backwards
25:16 - for whatever reason reverse I ooh Oh Oh
25:20 - seriously Wow this is reverse I'm in
25:26 - Emacs with alpha beta beta pruning by
25:28 - copper France all right everybody ready
25:30 - for me to show my reverse eye skills Oh
25:36 - we stretch is it reverse i reverse see
25:40 - live LC new live LT I don't know am I am
25:46 - I going first what are these little dots
25:48 - that I don't I haven't played this game
25:51 - in a very long time oh okay well I guess
25:53 - I'm black
25:57 - is it giving me a clues of where to go
25:58 - or those are the only places I can go oh
26:01 - there's the only place I can go by the
26:02 - way I'm not thinking at all what I'm
26:04 - doing so please okay I don't think I'm
26:13 - gonna win this feel like oh the guy
26:16 - remember I played this in years the goal
26:19 - service to get the corners right
26:20 - reversed see I'm being told oh Kobe says
26:25 - their contribution is still waiting to
26:27 - be approved so Kobe I can maybe pull it
26:30 - up anyway all right all right
26:32 - whose is incredible I'm gonna play this
26:33 - on my own tie fighter thank you copper
26:36 - France for this I'm very curious to take
26:37 - a look at your code do something about
26:41 - my look at this wow wow so this is
26:44 - actually it looks quite similar looks
26:46 - like the whole game has been implemented
26:48 - here amazing okay let's keep going
26:51 - and go - okay so Simon I know cuz Simon
26:55 - made his own video about this where he
26:59 - made a chess AI I'm just gonna go so so
27:02 - one of the things about the minimax
27:04 - algorithm is with tic-tac-toe I always
27:07 - looked into the tree of possible
27:09 - outcomes all the way to the end of the
27:11 - game but there are some games I
27:14 - mentioned this in the video that are so
27:15 - complex you couldn't eat computationally
27:19 - visit every single possible move that
27:21 - could come from the from now to the end
27:23 - of the game so with something like chess
27:26 - you have to decide well whatever your
27:28 - heuristic is whatever your estimated way
27:30 - of computing the sort of score of the
27:33 - game at any given time
27:34 - how far down how many moves ahead do you
27:37 - want to look so I this second one from
27:39 - Simon has a customized a little search
27:41 - depth but let's just look at the first
27:42 - one and one thing I'm curious about
27:44 - Simon is did you implement your own
27:47 - version of chess or did you use like an
27:50 - existing chest library uh-oh Loui mouth
27:54 - shall I am very sorry
27:58 - this one a my French is terrible and I
28:01 - shouldn't have done that
28:02 - tried to pronounce perversity in French
28:04 - tried not even a French or the origin
28:06 - game okay I'm curious did you implement
28:08 - your own version of chess or did you
28:10 - find
28:10 - an implementation of chess in JavaScript
28:13 - and then just add the minimax algorithm
28:14 - to it so we can see here that I assume
28:18 - if I do something like this and move my
28:19 - pawn and then move my other thingy you
28:23 - could see my chess expertise I'm gonna
28:27 - lose definitely gonna lose this is wild
28:31 - amazing to see Thank You Simon encourage
28:33 - you to play this I'm sure some of you
28:35 - who are sophisticated chess players will
28:37 - easily beat this AI but it is
28:39 - interesting to think about house house
28:42 - how good at playing the game can minimax
28:44 - be with chess let's go to tic-tac-toe
28:50 - with alpha beta pruning so this looks
28:53 - very much like whoops this is very
28:56 - similar to my game and if we look at the
29:02 - code whoops
29:03 - source code what I'm curious to see is
29:05 - it really easy to see where the alpha
29:13 - yeah so you can see here in with the
29:17 - they function has for in addition to the
29:23 - depth has additional arguments alpha and
29:25 - beta which are keeping track of what the
29:28 - score is and allowing the algorithm to
29:32 - skip down certain paths down the tree
29:35 - knowing that there couldn't possibly be
29:36 - a better outcome there so Simon is
29:40 - saying that he used chess j/s for the
29:42 - chess engine and chessboard JS for the
29:45 - visualizer that's great so I wonder if
29:47 - that's something that I could actually
29:48 - tackle it's not realistic I think for me
29:50 - for me to program my own chess engine
29:52 - not without like a very long multi-part
29:54 - series but certainly certainly doing
30:05 - something like what Simon did could be
30:06 - possible all right let's see if we can
30:08 - find Kobe's contribution oh it's already
30:14 - added Connect four Wow
30:18 - so Kobe looks like he added
30:23 - in emacs connect 4 and minimax connect 4
30:26 - with alpha beta pruning once again I'm
30:28 - just gonna go to the regular connect 4
30:30 - this is something I was actually hoping
30:32 - to do I'm gonna move here whoops whoops
30:37 - back it's a little bit slow there that's
30:41 - not where I meant to go let's go here do
30:46 - not want to give them Oh weird
30:51 - not what I expected ah no no bad
31:16 - I shouldn't go there that's bad move all
31:18 - right all right all right you get the
31:19 - idea everybody you've all had better
31:21 - ideas of what moves you dude this is
31:22 - great Thank You Koby for this this is
31:24 - pretty amazing it even just that basic
31:26 - algorithm I will the normal version is
31:33 - really slow showing the alpha beta
31:35 - pruning zoos so this would be so I guess
31:37 - from I'm gathering from Kobe that that
31:43 - Kinect for is a good example of there
31:47 - are so many more possibilities than
31:49 - tic-tac-toe that having the alpha beta
31:52 - pruning really improves the speed so I
31:55 - that would be something that's worth me
31:57 - doing a follow up perhaps about yeah I
32:02 - can it feels much more responsive and
32:04 - quick now of course I think I just lost
32:07 - so thank you alright
32:10 - and then so thank you for those
32:12 - community contributions please continue
32:14 - to make them if you don't know how to
32:17 - add one there's some instructions and
32:23 - and and information here just file a
32:24 - github issue asking for help I will say
32:27 - that don't be intimidated by this
32:30 - amazingness and sophistication of these
32:32 - I want your community contributions even
32:35 - if all you did just change the colors of
32:37 - what I made to make it your own
32:39 - beautiful like rainbow themed
32:41 - tic-tac-toe like I want to see
32:43 - everything that you do don't worry about
32:45 - getting things wrong or it's not cool
32:48 - enough not it's all wonderful in my eyes
32:51 - that you're watching these videos and
32:53 - making stuff and in particular something
32:55 - that some of you who are maybe I have a
32:58 - affinity for visual design or interface
33:01 - design you know you might I would
33:04 - welcome versions that clean up how the
33:07 - interaction is and change the way the
33:09 - game looks visually and those are
33:11 - exciting and wonderful to see okay so
33:15 - last update before I start actually
33:18 - doing some stuff here always good by the
33:21 - way I uh I think it's so funny that I
33:27 - always just type github flash website
33:30 - I think that's gonna get me somewhere
33:31 - coding train I don't know I don't know
33:33 - where I'm going just typing get up calm
33:35 - slash website coding train if I go to
33:38 - repositories it is the most recent
33:42 - topics wheel so let's see
33:50 - so David Snyder's not a lot here right
33:54 - now but big boots asks sorry to come
33:57 - back to just answer this question big
33:58 - boots asks hi big boots does it have to
34:03 - be p5 to contribute absolutely not I
34:06 - think though the whole reason for having
34:09 - the contributions is for people to bring
34:11 - to it something that they are excited to
34:14 - share and that might be I made a version
34:16 - of this in a different programming
34:18 - language that's wonderful
34:19 - the advantage of p5 is yours can be run
34:22 - easily in the browser but if yours
34:24 - doesn't run in the browser link to a
34:26 - video or a gif or some other kind of
34:29 - documentation if you can so it's easy to
34:30 - take a look
34:35 - darshan is asking me something about the
34:37 - community contribution for the
34:39 - regression challenge but it didn't work
34:40 - for an audio context problem hmm
34:43 - ah oh you mean it didn't work last time
34:46 - but now it does work
34:48 - sure darshan thank you for your
34:50 - contribution I will take a look at that
34:53 - where where do I the regression channel
34:59 - the regression video and
35:20 - regression based on node frequency and
35:22 - color predictor okay I don't know what
35:27 - to do so something to think about
35:31 - is to think about what that may be I'm
35:34 - just gonna figure it out oh this is very
35:36 - similar to my si si si ah this is just
35:41 - like my example so of course I know what
35:43 - to do oh and I get to like just draw
35:47 - stuff around that's so much better
35:51 - let's train it so I know oh I guess the
35:58 - stuff what happened this time I tried
36:14 - do we still have the audio context
36:17 - problem I'm sorry please everybody check
36:19 - this out I'm sure I'm just completely
36:20 - incompetent and not getting difficult to
36:22 - work correctly but when they almost say
36:23 - so one thing that I think is something
36:25 - for all of you to think about when you
36:27 - create interactive work to put on the
36:28 - web is you have to think about what
36:30 - context people are coming to it from now
36:32 - I know what keys to press because this
36:35 - is based on the challenge and in fact
36:37 - that's this is great this is being
36:39 - shared as a variation off of that
36:40 - example and if presumably someone's
36:42 - checking out has watched the video and
36:43 - so but the thing you could think about
36:44 - in terms of always having on the page
36:46 - some instructions or user test it with
36:48 - somebody a friend before you post it not
36:50 - have a thing could always help at least
36:54 - for classes
36:55 - ah okay but try this one more time c d e
37:03 - f i've got for train alright we've got
37:10 - to los people we've got a loss okay all
37:19 - right I think it's trained is what am I
37:23 - supposed to hear something oh it's the
37:26 - color oh that is so cool oh I see it's
37:31 - not sound it's color that is beautiful
37:36 - looking I can paint now I love this so I
37:39 - feel like the letters are kind of
37:42 - getting in the way of my experience with
37:43 - this because I love the fact that it's
37:46 - now this basically gradient over and did
37:51 - you do a regression with three different
37:53 - outputs you must have this is beautiful
37:57 - I think there's so much potential to
37:58 - this I'm sorry that it took me so long
38:00 - to figure it out and so I would think
38:03 - about maybe what you might consider
38:05 - doing is instead of having the user type
38:11 - in these letters which is I res what I
38:13 - did in my example but maybe there's a
38:14 - way there could be a color picker here
38:15 - and I could paint certain colors and
38:19 - then I could train the model and then
38:22 - paint over the space based on those oh
38:24 - there's so many possibilities and image
38:26 - processing and filtering and interact
38:28 - our this is wonderful thank you for
38:30 - sharing this thank you for that I get it
38:32 - right
38:34 - I really enjoyed I really I really think
38:36 - this is wonderful
38:38 - great work if you make if you update it
38:41 - or make any changes to it please let me
38:42 - know thank you darshan Belfer darshan
38:48 - okay and let me know if I mispronounced
38:53 - your name by the way can I just say
38:58 - something if I ever ever ever ever ever
39:01 - get anyone's pronouns wrong please reach
39:04 - out to me and let me know they make an
39:07 - effort to be thoughtful about how I
39:10 - refer to people on the channel but I'm
39:12 - sure I make mistakes and I want you to
39:17 - reach out to me and correct me and help
39:19 - me if at any point I've mispronounced
39:21 - your name get an incorrect pronoun refer
39:23 - to you by the wrong name please reach
39:26 - out to me any way that you know how to
39:28 - reach out to people on the Internet okay
39:32 - [Music]
39:34 - are we at 10:40 we are so I've got about
39:39 - an hour and 20 minutes left I think what
39:44 - I'm gonna do is work on setting up the
39:47 - dev environment and then take a short
39:50 - break and start talking about and
39:53 - teaching you about Poe's net in the ml5
39:56 - library and looking out about how to use
39:58 - Poe's net with the neural network
39:59 - classifier so we do the ASMR random
40:04 - number reading now though the one thing
40:08 - I want to do actually cuz it could be
40:09 - necessary later so I'm just gonna go to
40:11 - I should do this oh no no no this is
40:15 - this weird thing with a Mac where you go
40:17 - to like audio MIDI setup and then I
40:20 - create a multi output device because I
40:24 - want to go to the speakers and pro
40:25 - capture Pro capture is what is the
40:28 - capture card that's taking the signal
40:31 - from my laptop
40:31 - so now I think if I were to go to
40:38 - see what sort of meditation YouTube
40:41 - wants to recommend to me today how come
40:47 - you don't hear that
40:49 - [Music]
40:55 - no output multi-output device
40:58 - now you hear that okay
41:01 - [Music]
41:07 - sixty nine thousand two hundred and
41:10 - fifty one
41:11 - fifty-four thousand four hundred and
41:14 - sixty
41:15 - 60 1634
41:20 - 31
41:22 - [Music]
41:23 - seventy 1848
41:27 - seventy two thousand two hundred and
41:29 - eleven fifty three thousand okay perfect
41:35 - that was me testing the computer audio
41:37 - my voice is still a little shot doing
41:40 - the best again I've got to really gotta
41:42 - get a lot of vocal rest if I'm gonna do
41:43 - this holiday song fundraiser next week
41:48 - okay so let's see what I honestly like I
41:52 - don't even know what's going on in this
41:53 - computer let me open up I term so ah
41:57 - okay I term is the terminal application
42:06 - that I like to use one setting that I
42:09 - really really really feel that I need I
42:11 - think it's under it's the one that like
42:13 - when you resize the font it doesn't
42:15 - resize the window does anybody know
42:17 - where that one is I also like to use
42:21 - reuse previous sessions directory I
42:25 - should really make a video about all
42:27 - these settings not that mine are any
42:30 - good parents I mean where is this one
42:36 - advanced no profiles general text where
42:44 - is this one I can never find this one
42:48 - and he's under general
42:53 - zooom but just window and changing font
42:57 - size there it is hate that setting okay
43:01 - because what I like to do is I like to
43:05 - be able to increase the font size well
43:07 - we've got a spam problem here in the
43:09 - chat unfortunately oh thank you thank
43:13 - you to the volunteer moderators or
43:15 - inevitably gonna help out with this
43:16 - sorry everybody
43:18 - why why why people why can't we just
43:22 - enjoy Thursday morning of coding live on
43:25 - the Internet I'm gonna try to do
43:28 - something about this as well I know like
43:32 - what did something I do something to
43:33 - prompt this there's so many people all
43:42 - of a sudden is it like a some kind of
43:49 - emoji army coming to DDoS what is going
43:55 - on why does this happen I guess I could
44:02 - turn me I should turn on slow mode IP
44:06 - ban all right all right everybody you'll
44:12 - get to enjoy the this dot song when I
44:13 - figure this out as always I always
44:15 - forget to dis stop this stop it stop
44:17 - just waiting for your instructions
44:31 - [Music]
44:56 - [Music]
45:00 - sorry it's gonna take me a minute to
45:04 - login the wrong account I'm gonna do
45:16 - this this dot this dot this star this
45:18 - star never forget to this start somebody
45:21 - composed that song for me
45:25 - getting to the place right thing I can
45:27 - enable slow mode
45:40 - YouTube changed so many things in
45:43 - creator studio I cannot find it
46:05 - where is slow mode
46:13 - oh yeah the worst is over all right well
46:16 - I can't figure out how to find silly
46:18 - slowmode anyway so here could I do it in
46:23 - the chat window itself ah manage
46:25 - monterrey for a toggle timestamps no
46:30 - analytics Viewer activity stream health
46:33 - there's no slow mode anywhere settings
46:44 - allow embedding live chat found it ok
46:48 - should I should I enable it or is it
46:54 - it's over now I guess alright I know
46:57 - where it is now so if it happens again I
46:59 - will enable slow mode slow mode would
47:04 - still be appreciated alright let's add
47:05 - slow mode I'm just gonna should I just
47:12 - do like five seconds between messages
47:13 - let's try that okay okay back to our
47:26 - regularly scheduled programming okay so
47:29 - the first thing that I like to do with
47:31 - my console setup is to install something
47:35 - called oh my zsh so first of all so
47:42 - there are different shell systems that
47:46 - people like to use I've been using zsh
47:50 - recently and then this
47:52 - oh my zsh is is essentially a theme
47:55 - which sets up various defaults and
47:57 - colors for knowing what github branch
48:00 - you're on and things like that in
48:01 - terminal so I'm gonna grab this little
48:05 - command here from the oh my z SH
48:07 - homepage I'm going to run it and now I
48:13 - am back to what I'm used to so this just
48:15 - shows me what it shows me here is a
48:19 - little tilde as the prompt you'll see in
48:21 - a little bit if I get into a github repo
48:24 - that it will show me more information
48:25 - about that and various other things okay
48:29 - now the next thing that I want to do is
48:34 - see if I have notes I have note
48:36 - installed that seems like a recent
48:41 - enough version now I'm pretty sure one
48:46 - of the things I like to do is make sure
48:48 - that node is installing global packages
48:52 - to a directory that's part of my user
48:55 - account rather than like down into the
48:58 - depths of the system files of the
49:00 - machine across all users and there's
49:02 - actually a really nice web page that
49:03 - gives you instructions for that and kind
49:05 - of looking forward I just look search
49:07 - fixed global permissions error NPM and
49:13 - then it's taking me to this NPM j/s
49:15 - documentation page and if you're
49:18 - wondering what's node what are node
49:20 - packages I would refer you to some of
49:21 - the other videos I've done that have
49:23 - gone through that but this what I like
49:25 - to do is put a directory and my my use
49:29 - at my user level which is what this
49:32 - tilde slash means called NPM global so
49:35 - let me do this then I'm going to call
49:40 - NPM config set prefix so it knows about
49:44 - this directory then I need to add it to
49:49 - the path the the path the path is an
49:54 - environment variable of your machine I
49:56 - mean it's different on different
49:57 - operating systems where it will look up
49:59 - where executables are for any commands
50:01 - you type in so I'm gonna add this as
50:04 - part of my path and then this in theory
50:07 - I don't know if this it shouldn't work
50:08 - right because I'm using zsh so I
50:12 - probably need to say source tilde dot zs
50:15 - let's just see what happens like what
50:17 - would this gonna do there right there's
50:18 - no such file so instead I would say
50:21 - source zs h zs hrc so that's the
50:29 - configuration file for my zsh bash so
50:34 - that should add this path export to that
50:36 - permanently
50:38 - that is now done and now if I do
50:41 - something like say npm install - g HTTP
50:44 - server which is a node package i use
50:46 - quite a bit to run a web server it
50:50 - should work and i can even just go to
50:53 - hold on here and I don't see that NPM
50:59 - global because the Mac is hiding my
51:03 - hidden files but I think if I do this
51:06 - there we go
51:06 - shift command dot by the Soyuz phone a
51:10 - Mac at least will show all the hidden
51:11 - files and you can see now under NPM
51:13 - global that's where the node modules are
51:17 - that I've installed most notably HTTP
51:19 - server so that's useful to know now the
51:22 - other thing is I need to make sure do I
51:25 - have get yes it knows about get if I do
51:30 - like get config how do I tell it to like
51:32 - tell me what's in get config
51:41 - I know how to like set something show
51:45 - contents of git config git config list
51:50 - oh so all that's there who knows what
51:55 - this is just credential helper oh my
51:57 - goodness I'm gonna have to do so much
52:00 - here so first of all I need to set who I
52:03 - am and so to do that I can say git
52:15 - config - - global username Schiffman git
52:25 - config - - global how's it like email
52:31 - what is it get email what is it
52:37 - user dot email pretty sure this is the
52:41 - one that I use and get config - task
52:46 - list there we go I'm lost in vim again
52:50 - all I know : QQ that's what I use also I
52:56 - could say I could just look at the git
53:00 - config file which is there okay so
53:04 - that's done but what if I want to so one
53:09 - of the things that I want to do right
53:11 - now in order to do this tutorial which
53:13 - I'm barely going to get to today is
53:16 - clone the ml5 library repo and so I like
53:22 - to use an SSH SSH key and so I'm gonna
53:27 - set that up right now so I should like
53:32 - make video tutorials and all these
53:33 - things so I'm just gonna do it kind of
53:34 - quickly so let me see what happens that
53:36 - should give me an error maybe it's just
53:38 - gonna work right permission denied so I
53:41 - could get this to work by changing to
53:43 - HTTP HTTPS oh it uses less that wasn't
53:50 - vim I don't know anything
53:54 - and that was that was less not vim but
54:03 - so what I need to do is you know I might
54:11 - need to like not show you my computer
54:15 - screen for part of this but because I've
54:17 - got I don't want to but this is what I
54:19 - want to do so generate a new SSH key
54:24 - actually kind of check I don't have any
54:25 - existing ones will be impossible so this
54:28 - is what I'm gonna do I'm going to
54:30 - generate a key with this command for my
54:36 - email this is my I'm just gonna I think
54:44 - all the defaults are gonna be fine with
54:47 - me what's your opinion on whether I
54:49 - should use a passphrase I know I should
54:52 - use a passphrase but can I get away with
54:54 - no passphrase livestreaming you think
54:57 - I'm gonna try this
55:01 - no passphrase no passphrase oh no we
55:05 - have I just like allow people to hack
55:10 - things I'm not adding it to github yet
55:13 - all right so I feel like does this
55:17 - random art image can you engineer the
55:21 - key from this image that's showing me
55:29 - we run through these again
55:37 - oh I'm overwriting it I did that again
55:43 - but I'm overwriting it so you can't see
55:45 - that art image I don't know if that's a
55:47 - security issue yeah
55:49 - exposed okay now I need to add the key
55:57 - to my SSH agent and then I need to do
56:05 - this add that your SSH private key to
56:08 - the SSA Jade and store your passphrase
56:09 - in the keychain okay so that's done and
56:16 - now what I need to do is just add the
56:18 - SSH key to my github account so this is
56:21 - where I am going to unfortunately I
56:25 - think log out cuz I'm not log out but
56:28 - just to hide my screen and I'll show you
56:29 - but what I'm gonna do is I'll just show
56:31 - you what I'm gonna go to up here and
56:34 - then I'm gonna go to settings so I'm
56:37 - gonna I'm gonna hide my screen for a
56:39 - second click on settings and then I'm
56:44 - going to go to ssh and GPG keys and i'm
56:50 - going so on this screen I think that
56:52 - it's got my MAC addresses and various
56:54 - things so I'm not going to show it
56:56 - there could be oh it's only the public
56:59 - key that was shown okay there could be
57:05 - so I'm reading the chat I I should
57:09 - figure out a way to make a tutorial with
57:11 - like a dummy github account that would
57:12 - be a good way of doing this but I'm
57:14 - gonna press Inge new SSH key I'm calling
57:18 - this coding train login and then I'm
57:20 - gonna paste my key in by copying it so
57:29 - this by the way is how I can actually
57:32 - just say copy my public key and then I'm
57:36 - gonna go back into the github interface
57:38 - and paste it in and add it and I'm just
57:43 - gonna show you what I snow it's still
57:45 - got a like a MAC address or something
57:47 - there
57:47 - so I'm not gonna show it to you all
57:50 - right so that should be done and I'm
57:54 - closing all this if I did it correctly I
58:01 - should be able to go to documents whoops
58:04 - yes allow I'm going to make a directory
58:06 - called ml 5 and I'm going to say git
58:12 - clone and I'm going to go back to the ml
58:16 - 5 library
58:26 - and I am receiving the ml5 library
58:40 - [Music]
58:48 - [Music]
58:50 - okay there we go so the reason why I'm
58:56 - doing this is because I want to make an
59:01 - example that uses the ml5 neural network
59:05 - function finishing off this series this
59:11 - has been the stuff that I've been
59:12 - teaching this semester and if I go to
59:14 - the ml5 website go to the reference and
59:17 - go to neural network you'll see this is
59:20 - already a part of ml5 the current
59:23 - release and I have used it in examples
59:26 - but Joey Lee who is one of the
59:29 - contributors and has really been doing a
59:31 - lot of work this year and for the past
59:32 - year to manage lis the development of
59:35 - the library um has been refactoring it
59:37 - the neural network librarian has made
59:39 - some updates and changes nothing really
59:40 - changes in terms of the user facing
59:44 - aspect of the library but the behind the
59:46 - scenes have changed and so to make sure
59:48 - everything I'm doing is working
59:49 - correctly I mean there hasn't been a
59:52 - release yet I want to build my own
59:54 - version of the library that I can use
59:57 - for the purpose of this tutorial so
59:59 - you're gonna get to see a little extra
60:00 - thing about how do you build the ml5
60:02 - library so first step was clone the repo
60:04 - that's been done now and I also want to
60:09 - find out I also want to look I'm already
60:13 - here I want to look at his recent pull
60:15 - request which is refactor and
60:18 - re-implementation of neural network
60:22 - because I want to know the branch so
60:25 - this is the branch that I care about
60:27 - it's not an image that's so weird
60:30 - just get up make that into an image or
60:31 - Oh like I can copy I can copy it okay
60:34 - that's what I wanted to do because so
60:38 - first of all you can see why I like oh
60:40 - my Z SH it's showing me that I'm in a
60:43 - git repo and that's the branch that I'm
60:44 - on I wanted to get check out this
60:47 - particular branch because I want to
60:50 - build from that brain
60:53 - do I need to is it already I guess it
60:56 - has everything and then now I'm going to
61:00 - go to the library page and follow the
61:03 - instructions for building the library
61:05 - which should be under contributing and
61:08 - it's pretty simple if you have
61:10 - everything installed basically the first
61:17 - thing that I've already done these steps
61:18 - like I have node and get and all those
61:21 - things installed I've cloned the repo
61:23 - I'm using an SSH key and now I'm going
61:27 - to change into ml v library I am there
61:30 - already I'm gonna type NPM install so
61:35 - this should take a little bit
61:36 - this is installing all the packages and
61:39 - dependencies that the library needs to
61:41 - be built so Simon who's commenting on
61:52 - various things that I need as part of my
61:53 - workflow I'm going to do things as I
61:56 - need them so I don't need a list right
61:58 - now is unnecessary because when I need
62:00 - live server I will install it
62:09 - [Music]
62:13 - okay so now that I've done this one
62:19 - thing I want to do is let me just open
62:20 - the source code for the library in
62:22 - Visual Studio code which I've already
62:24 - installed
62:25 - I haven't configured there might be some
62:27 - settings and things and one of the
62:28 - things that I really like to be able to
62:29 - do is type code from the command line oh
62:33 - and it worked I guess I already
62:35 - installed that at some point but I want
62:38 - to say code dot because I want to open
62:39 - up the ml 5 library so to do that if if
62:43 - that doesn't work natively on your
62:45 - computer if you're if you're using
62:46 - Visual Studio code come on there we go
62:53 - then what you can do is do shift command
62:56 - P which brings up all of these commands
62:59 - and then if I type in command install
63:03 - code command in path that's what you
63:05 - need to do so I really like having this
63:07 - feature because I can quickly from the
63:09 - command line just open a folder in
63:11 - Visual Studio code which I have now just
63:13 - done and what I reason why I wanted to
63:16 - show you package.json whoo so I'm
63:19 - definitely going to need to do change
63:21 - some settings let's change the font size
63:23 - to maybe better font size to 36
63:28 - I'm also get packages of JSON again
63:30 - that's better so what I'm looking for is
63:40 - scripts these are all the things I can
63:44 - run NPM run commit NPM run pre-built NPM
63:49 - run and the ones that I care about
63:52 - actually right now our NPM run start an
63:57 - NPM run build these are just aliases to
64:00 - a longer command web pack dev server web
64:04 - pack so web pack is a bundling thingy
64:07 - framework that does all of the work of
64:10 - bundling all of the source files into
64:12 - one JavaScript library file and I most
64:18 - often use
64:19 - p.m. I'm sorry envy a web PS npm run
64:24 - start because i want to run a web server
64:27 - that's constantly rebuilding the library
64:29 - as I make changes but in this case I
64:31 - just want the current version library so
64:34 - I'm gonna run npm run build maybe I'll
64:39 - make this a little smaller just so it
64:40 - fits in one line alright let me go so
65:17 - then when I need to figure out what
65:19 - Visual Studio code settings I want I go
65:23 - over to the coding garden to CJ who
65:26 - keeps track of all of the extensions he
65:29 - uses so let's see if I can find that
65:31 - coding garden vs code extensions mmm I
65:39 - think we know where this is coding
65:41 - garden just go to coding our website
65:44 - view the gear support
65:47 - could it be gear to stream no this is
65:50 - you this is super useful though ooh I
65:53 - need some of this stuff okay where where
66:00 - where where where where where search
66:03 - filter this by weight coding guard like
66:06 - like streaming goals is coded garden
66:09 - look how nicely organized everything is
66:10 - and there's like a custom search and a
66:12 - link it's just wonderful Koni garden
66:15 - does such a great job but they know
66:17 - where that is maybe it's on the github
66:23 - hooting Garden github let's try this
66:29 - yes code settings there we go looking
66:35 - for it we're at 1 hour Thank You Simon
66:38 - for that reminder I am getting close to
66:40 - my contractually obligated break theme I
66:48 - kind of am a default theme sort of
66:50 - person the thing that I want to know is
66:54 - style formatting beautify okay so let's
67:00 - use let's I the thing that I like the
67:04 - most is style and formatting so let's
67:07 - install this
67:08 - yes lint I want to have this okay then
67:14 - let's install beautify I don't know it's
67:18 - only got a four star rating only one
67:20 - hundred twelve ratings somebody telling
67:24 - me to stop now before I go forward I
67:26 - guess I can always uninstall it I think
67:29 - this is what I was using before as well
67:31 - I know there's something built in then
67:34 - something that I definitely want is save
67:39 - format on save code actions on save
67:43 - format on save so I like to have four it
67:46 - can cause you some problems but I like
67:48 - to have format a file on save let's do
67:51 - that I think the bracket colorizer thing
67:55 - is pretty cool too I'm a little bit
67:57 - afraid to install it because it's very
67:58 - visually noisy but I guess I could
68:00 - always disable it it's install it for
68:02 - right now so this is something that like
68:06 - provides a lot of visual information to
68:08 - see which brackets match up and
68:10 - parentheses match up with other brackets
68:12 - and parentheses it's got a lot of stars
68:17 - okay
68:21 - okay that's good and we can see so good
68:29 - is this still going oh all right so this
68:32 - this works so now we can see that it
68:38 - there should now be of new folder this I
68:41 - I didn't show this wasn't there before
68:42 - this is the version of the library that
68:45 - I just built and what I'm going to do
68:48 - it's because when I start making this
68:50 - coding example our over an hour into
68:54 - this livestream let's see can I get away
69:04 - with 32 here it's gonna be posing that
69:12 - example one I want to just use a locally
69:21 - uploaded version of the library and so
69:32 - I'm going to add the file I'm gonna drag
69:35 - that here so this is how I can now make
69:38 - a coding example with my temporary
69:42 - custom build of the ml 5 library knowing
69:46 - that by the time this video is out that
69:48 - this will be in the release so I won't
69:50 - be mentioning this in the edited version
69:52 - I'm just showing this now this will be
69:54 - closed and I will just be in sketch KS
69:58 - but I should be able to see console dot
70:01 - log ml 5 it's loaded the library I can
70:06 - see it down here okay
70:09 - any questions about what I have done so
70:17 - far yeah Nathan's thing I remember you
70:20 - had prettier instead of beautifier and I
70:22 - think that I did a prettier but I just I
70:25 - always just go with whatever CJ well one
70:28 - thing that I want to check really just
70:31 - as a quick technical thing is I've been
70:32 - recording with a new piece of software
70:34 - called V mix and I want to just see if
70:38 - oh no no no don't stop I'm gonna see
70:40 - sort of like a status report 202 dropped
70:44 - frames in an hour and 10 minutes my
70:52 - question would be is that significant I
70:55 - don't know we will find out I suppose
70:59 - okay well there's a lot of messages here
71:17 - alright so I'm gonna take a short break
71:19 - but before I take my short break I want
71:21 - to take a moment to thank today's
71:24 - sponsors my friends over at dashlane so
71:27 - you might be wondering hey I noticed
71:30 - you're logged in to the peopie web
71:32 - editor you can't even see that as as
71:34 - coding train and i'm gonna log out for a
71:37 - second and I'm going to show you how
71:39 - easy it is for me to log in just using
71:43 - dashlane logs me right in so - Lea is a
71:47 - password manager I cannot live without a
71:50 - password manager and you're the main
71:55 - benefit that you really get from it is
71:57 - just like a shortcut for everything that
71:59 - you wanted to of the Internet you can
72:01 - fly through forms and breeze through
72:02 - checkouts it lets you fill out forms
72:05 - like really quickly a one-click logins
72:07 - autofill for all of your payments stuff
72:08 - which I use a lot - I have like too many
72:11 - can't keep track of all this stuff you
72:13 - know I you know you keep all of your
72:15 - stuff in a Google Doc all of your like a
72:17 - list of all your passwords and credit
72:18 - card numbers don't do that for you as a
72:24 - password manager and it's nice to know
72:26 - you can have it on your phone or any
72:28 - operating system and it syncs and all
72:30 - that stuff you know there are other
72:32 - services like keychain and Chrome but
72:34 - you're really locked into a single
72:35 - system so everything's trapped in one
72:37 - place and you know there's other systems
72:39 - that maybe aren't as reliable maybe
72:42 - don't take privacy as seriously - Layton
72:45 - never has access to your personal data
72:46 - and won't trick you into subscribing so
72:49 - you can sign up at - Lang comm slash
72:53 - coding trained there's no credit card
72:55 - required
72:56 - it's always an ad-free product it's like
72:59 - the coding trick apparently because this
73:00 - is an ad you can you can go to - like
73:04 - com slash coding train you're getting a
73:06 - free 30-day trial if - lating premium so
73:09 - all you'll be able to try out all the
73:10 - features and then if you choose if you
73:12 - do like it and choose to purchase it if
73:14 - you use the coding train coupon at
73:17 - checkout you will also get 10% off a
73:19 - discount off of the - Lane premium so
73:23 - thank you so much
73:24 - you know there's a 40 - Lane for
73:26 - supporting the channel it's I really
73:29 - appreciate it
73:30 - if you're if it seems that it might be
73:33 - something that interests you if you
73:34 - check it out through that link that'll
73:35 - know that I sent you there and that will
73:37 - help me out a little bit so I'm gonna
73:41 - take a break you can you can take a
73:42 - minute to sign up Oh before I take a
73:44 - break let me try to do something so sign
73:47 - up for now or just hang out listen to
73:49 - some music I have something I was hoping
73:52 - this thing that I have come in before
74:01 - before i livestream so I could use it
74:04 - dirt as an interstitial but it didn't so
74:08 - I'm gonna just give me a minute here cuz
74:10 - I'm gonna I'm gonna put something
74:12 - different on the screen during my break
74:14 - and I'm also I've lost the chat cup and
74:19 - I know there's not a lot of time left
74:21 - today this was a gift this a bit of a
74:22 - housekeeping livestream so let me see if
74:33 - I can how I can get to this it's gonna
74:36 - take me a little bit everybody it's
74:37 - gonna be worth it it's not worth it well
74:39 - what else am I gonna do it [ __ ] amongst
74:42 - yourself
74:43 - sign up for deadly donate to the
74:45 - prostitute foundation any of these
74:46 - things
74:51 - can't see my screen right
74:56 - [Music]
75:19 - [Music]
75:33 - [Music]
75:39 - [Music]
75:45 - [Music]
76:18 - [Music]
76:38 - okay everybody come to things like very
76:48 - important
76:49 - [Music]
77:28 - [Music]
77:45 - hold on everybody I'm almost there
77:57 - [Music]
78:16 - [Music]
78:27 - almost there
78:29 - mediasource baby
78:34 - [Music]
78:53 - Oh PS not read an MOV file shoot no why
79:02 - no why turn that off hold on everybody
79:09 - everything's gonna be okay so VLC can
79:21 - play
79:30 - [Music]
79:36 - [Music]
79:44 - mp4
79:47 - [Music]
80:09 - [Music]
80:15 - [Music]
80:22 - why won't it play
80:24 - alright I failed the LC videos let's do
80:50 - this hold on
81:02 - [Music]
81:11 - alright never mind I have a nice little
81:16 - looping animation of this train and I
81:20 - was trying to get OBS to play it so that
81:21 - it would be there when I take a break
81:23 - instead just gonna be this back in just
81:33 - a few minutes I'm gonna get some water
81:35 - okay
81:36 - [Music]
81:48 - [Music]
82:02 - [Music]
82:09 - [Music]
82:32 - [Music]
82:44 - [Music]
83:10 - [Music]
83:20 - [Music]
83:55 - [Music]
85:05 - [Music]
85:13 - [Music]
85:29 - [Music]
85:45 - [Music]
85:51 - auto-tuned and the internet will fix
85:53 - that for me
86:05 - [Music]
86:12 - it's coordinates unicorns and rainbows
86:32 - and cupcakes what else is there yes kids
86:37 - thank you very much kittens and rainbows
86:39 - and cupcakes notice that look what I get
86:42 - I really
86:49 - [Music]
87:01 - [Music]
87:11 - [Music]
87:26 - [Music]
87:36 - [Music]
87:53 - [Music]
87:55 - all right
87:57 - [Music]
88:00 - here we are again right there all right
88:32 - I noticed there were maybe some issues
88:35 - because the audio is coming through the
88:37 - mic and also is being sent out through
88:39 - the capture card and maybe there's like
88:42 - a lag between them so sorry if there's
88:44 - some weird music issues I would like to
88:47 - accomplish something today
88:49 - beyond my rambling mess and so let me
88:55 - tell you what I'm hoping to accomplish
88:58 - at this point by the end of tomorrow and
89:03 - we'll jump right into it tomorrow this
89:07 - is it's tricky because it's for me this
89:09 - is the end of the NYU semester so it's
89:12 - kind of like the busiest time I'm kind
89:15 - of exhausted if I'm being honest and but
89:18 - it's like a lot of stuff to like catch
89:20 - up on and finish up for the year and I
89:22 - can I miss streaming last week so I feel
89:24 - like I can undo all this stuff but let
89:28 - me so you might remember that I used I
89:32 - made a previous series and get my water
89:34 - here about this project called teachable
89:37 - machine from Google Creative Lab and
89:43 - when I did this series I didn't touch on
89:50 - this particular pose the pose model that
89:55 - you could train so let me just show you
89:56 - really quickly so for example what I'm
89:58 - gonna do is call this Y right now hold
90:04 - on so I'm going to record for 30 seconds
90:11 - and I'm gonna give myself a five-second
90:13 - delay
90:14 - and let me get rid of these and let's
90:18 - cord oh boy I need more room
90:30 - there's my why oh it's still recording
90:40 - this is my why 30 seconds is a long time
90:44 - I did not need to record for 30 seconds
90:49 - so pose net which is the machine
90:52 - learning model that is tracking all
90:53 - these points clearly this is not the
90:56 - optimal alright let's let's do an M and
91:03 - I guess I did 30 seconds before but it's
91:06 - just 2 15 seconds this is no good see
91:16 - this is a C not an M the point is you
91:23 - can train a machine learning model to
91:26 - assign labels to various poses and the
91:31 - data for those poses that I'm collecting
91:32 - are the XY locations of all these key
91:35 - points on a pose net skeleton and then
91:39 - if I were to train this model let's see
91:42 - how that goes
91:56 - well it's taking a long time
92:07 - oh hello everybody I did a pose project
92:10 - with the snake game right but I wasn't
92:13 - using so this is a really good point
92:16 - Abhijit is mentioning in the chat that
92:19 - what I so this is this is great so I
92:22 - actually want to reference that so I did
92:24 - different poses for the snake game but
92:27 - it wasn't actually the data for the the
92:31 - data was not the locations of the
92:34 - various parts of my body but rather the
92:36 - pixels of the image that it was seeing
92:38 - so in that sense as soon as I would turn
92:41 - the camera and have a different
92:42 - background it wouldn't work anymore but
92:44 - if I actually train a model with my pose
92:46 - positions then that would still apply no
92:51 - matter even if I like took took my
92:55 - laptop to a different location with
92:57 - different lighting conditions in a
92:58 - different background so this is one of
92:59 - the advantages of doing it this way okay
93:03 - all right I'm not going to keep going
93:06 - with this what I'm going to do is I'm
93:09 - going to go over to ml5 Jaso what
93:13 - happened to that sketch that I had open
93:18 - pose an example okay
93:26 - reference
93:39 - oops so by the way here's something that
93:41 - somebody could file as an issue for the
93:45 - ml5 website or even actually fix this by
93:49 - just clicking edit this document this
93:51 - should be a link to this should be a
93:58 - link to this actual blog post real time
94:09 - human pose estimation in the browser
94:11 - with tensorflow j/s and in addition to
94:14 - it actually being a link for
94:16 - accessibility this is a we know one of
94:19 - the principles of accessibility in
94:21 - particular for users of the web who who
94:25 - use a screen reader is when things are
94:28 - linked with generic language it's not as
94:30 - helpful as if there is information about
94:32 - the content in the in the text that is
94:35 - linked itself so this should probably
94:37 - say something like the original post set
94:40 - model was ported to tensorflow j/s by
94:43 - dan Ovid you know read more at and then
94:47 - the name of the article real time human
94:49 - posed estimation in the browser with
94:50 - sensor flow Jas or something and
94:52 - actually linked the name of the article
94:53 - so if anybody wants to do that pull
94:55 - request right now you I would do that
94:57 - here live but I've already spent enough
94:59 - time doing random other things you can
95:01 - actually get to it from clicking edit
95:02 - document okay but I'm gonna go to that
95:07 - blog post I'm just gonna look at yeah
95:11 - I'm just gonna remember
95:28 - just looking here
95:52 - always returns an array
96:02 - okay
96:22 - okay
96:34 - okay
97:04 - so I'm looking I wanted to find
97:05 - something I just want to be able to
97:06 - reference the training data kind of
97:09 - assuming that it used cocoa this is more
97:22 - information than we need for this first
97:25 - of this video
97:43 - sorry to say
97:52 - oh right there's a version 2.0 actually
98:17 - belief the training code is
98:19 - closed-source so I don't actually know
98:24 - what it was used what data was used to
98:27 - train I was hoping at least would tell
98:29 - me the data set somewhere here but I'm
98:30 - not seeing it
98:40 - Oliver is pointing it's an hour and a
98:42 - half already we didn't start I know I
98:44 - know this is the this is just what's
98:49 - happening this week for me thank you for
98:51 - your patience I'm just gonna go forward
98:58 - okay
99:07 - okay
99:15 - alright let me add to this example
99:38 - is that how it works create capture
99:40 - video create video capture I can't
99:42 - remember okay it's definitely this and
99:49 - then let's do
100:05 - okay
100:10 - this is gonna be better anyway because
100:12 - the square was a problem okay oh I
100:17 - should get an external webcam I have an
100:21 - idea
100:28 - oh you know what I will get the external
100:37 - webcam for tomorrow when I come back to
100:38 - finish this Wow
100:50 - okay
101:07 - this is what I'm looking for okay
101:14 - all right here we go I'm going to make a
101:17 - video tutorial about pose net and I'll
101:25 - have accomplished something today hello
101:38 - and welcome to another beginner's guide
101:40 - to machine learning with ml 5gs video I
101:43 - in this video I'm going to cover the
101:46 - that was my one start over option hello
101:54 - and welcome to another beginner's guide
101:56 - to machine learning video tutorial in
101:58 - this video I am going to cover the pre
102:00 - trained model pose net and I'm going to
102:03 - look at what pose net is how to use it
102:06 - with the ml 5 chess library with the p5
102:08 - just library and track your body in the
102:11 - browser in real time that's my statement
102:15 - of what I'm gonna show you
102:16 - thank you for editing you I used to say
102:21 - like that'll be edited out and that
102:22 - would be interest in all my videos and
102:24 - now no really that's better or not I
102:27 - just realized that the whiteboard camera
102:29 - is not on come on whiteboard camera
102:41 - how does this look
102:43 - oh boy this camera is like crooked right
102:49 - by the way one thing I did is I
102:52 - hopefully fixed the white balance of
102:54 - these cameras and they are that's better
102:58 - now the white balance is yeah the white
103:05 - balance is fixed now so it might look
103:07 - off but at least it can be color
103:09 - corrected later and it won't like auto
103:11 - adjust okay
103:23 - model I want to look at is pose net and
103:27 - with what this camera is so much lower
103:32 - than what I wrote that at a very
103:35 - reasonably normal height can't see it at
103:38 - all so weird cameras got lower somehow
103:42 - I'm not sure what oh it's pointing down
103:44 - a little bit that's fine oh you could
103:46 - see my almost see my legs I'll fix that
103:58 - later I know it got the sniffles all of
104:00 - a sudden the model I want to look at is
104:08 - pose net Mathew we'll do our like
104:26 - speeding up as I draw stuff I love that
104:27 - I love that even if it's just like a
104:29 - little bit the model that I want the
104:32 - model that I want to look at is pose net
104:37 - with any machine learning model the
104:39 - first question we should ask is what are
104:42 - the inputs and what are the outputs
104:56 - and in this case
105:06 - let me start the whole thing over I got
105:09 - I got it again I know what I'm doing now
105:11 - everybody model as I mentioned that I'm
105:24 - looking at is called pose net with any
105:31 - machine learning model that you use the
105:33 - first question you probably want to ask
105:35 - is what are the inputs and what are the
105:41 - outputs and in this case the pose net
105:46 - model is expecting an image as input and
105:54 - then as output it is going to give you
105:57 - an array of coordinates
106:11 - in addition to each of these XY
106:15 - coordinates it's going to give you a
106:16 - confident score for each one
106:30 - and what do all these XYZ and what do
106:36 - all these XY coordinates and confidence
106:38 - scores correspond do they correspond of
106:40 - course pot my voice is cracking
106:44 - I'm sniffling it's all going going
106:48 - downhill fast people and what do all
106:53 - these XY coordinates and confidence
106:55 - scores correspond to so I'm like I
107:03 - should use an external webcam you know
107:05 - what I have right here a camera an
107:06 - external camera should just send this in
107:09 - to pose that and then track my but
107:10 - whatever I don't know how to get this
107:13 - into p5 yes all right and what do all
107:17 - these X Y coordinates correspond to they
107:20 - correspond to the key points on a pose
107:24 - net skeleton now the pose net skeleton
107:36 - isn't an anatomically correct skeleton
107:38 - it's an arbitrary skeleton that involves
107:45 - let me actually just do that again
108:10 - now the pose net skeleton isn't an
108:12 - anatomically correct skeleton it's an
108:15 - arbitrary set of seventeen points on the
108:19 - human body that it is looking for and
108:21 - you can see those listed all right here
108:24 - from nose all the way down to right
108:26 - ankle and each one of these gets an X
108:37 - location a Y location and a confidence
108:40 - score to talk about this is the craziest
108:54 - last remember I don't know I have some
108:55 - pretty crazy live streams
109:11 - when you see the full body all I'm gonna
109:14 - just add something here later for this
109:16 - match and I will add something
109:26 - yeah I mean we can add something good
109:35 - I'd be done oh come on energy people
109:40 - energy now the pose net skeleton isn't
109:50 - necessarily an anatomically correct
109:51 - skeleton it's just an arbitrary set of
109:54 - what is 17 points that you can see right
109:56 - over here
109:57 - from the nose all the way down to the
109:59 - right ankle that it is trying to
110:01 - estimate where those positions are on
110:03 - the human body and give you XY
110:05 - coordinates as well as how confident it
110:06 - is that it's correct about those points
110:20 - let me make some footage here so this
110:30 - can potentially be used actually maybe I
110:32 - won't do this right now
110:33 - I'll do this later
110:35 - [Music]
110:53 - now the other question you should always
110:55 - ask yourself when you're working with
110:57 - the pre-trained model is who trained the
110:59 - model what data that they use to train
111:00 - the model and what are some of the
111:02 - pitfalls that might arise based on how
111:04 - the process of collecting that data
111:06 - exactly I just want to like let me let
111:11 - me let me say this one more time also
111:16 - whenever you use a pre trained model one
111:17 - of the things
111:29 - life
111:39 - I started by emphasizing that when you
111:41 - use a pre-trained model you want to make
111:43 - sure you understand what are the inputs
111:45 - that are expected and what are the
111:46 - outputs the other thing that you really
111:48 - want to think about as you go to use the
111:50 - model is how is this model trained what
111:53 - data set was used to train it how is
111:55 - that data collected who collected the
111:57 - data and is there any reason why you
111:58 - might not want to use the model based on
112:01 - that data that was collected maybe the
112:03 - data wasn't oh I forgot that I'm
112:14 - live-streaming to the public sometimes I
112:15 - just do these for I didn't really forget
112:17 - so as you do these recording sessions
112:19 - like this way just go I'm trying saying
112:21 - the same thing over and over again I
112:22 - have to like stop myself from doing this
112:24 - I'm gonna move on all right well I
112:27 - started by emphasizing how when you're
112:29 - using a pre train model you want to look
112:30 - at what the inputs are and their
112:31 - corresponding outputs but another thing
112:33 - you really want to think about and do
112:34 - some research is how is the bottle
112:36 - trained who trained the model what data
112:38 - was used to train the model how is that
112:40 - data collected and what are the kinds of
112:42 - questions that you want to consider
112:44 - around those details that might lead you
112:47 - to I got this sentenced exactly the way
112:55 - that I want it good acting thank you
112:57 - Chris
112:58 - Abhijit has to leave physics exam ghosts
113:02 - go study for your fits exams take that
113:03 - don't don't don't watch this nonsense of
113:05 - me repeating the same sentence this is
113:06 - I'm trying to get this right because
113:08 - Mike this tutorial is really not about
113:11 - the the law that's big the story around
113:15 - data collection for machine learning but
113:17 - I want to emphasize how even if you're
113:20 - just kind of quickly using pose debt for
113:22 - an interactive project it's important to
113:24 - be thoughtful about these questions so
113:26 - this will be the last time I don't think
113:30 - I need to say this thing about how I
113:31 - began another thing you want to consider
113:36 - when using a pre trained model is to be
113:38 - yeah
113:43 - something else you want to consider when
113:45 - using a pre-trained model is who trained
113:48 - the model and what I understand how
113:55 - people are writing best teacher ever
113:56 - when all I'm doing like not getting
113:58 - anywhere one other important question
114:08 - you should ask yourself and do some
114:09 - research about whenever you find
114:11 - yourself using a pre trained model out
114:13 - of the box something get somebody else
114:15 - trained just who trained that model why
114:17 - did they train that model what data was
114:19 - used to train that model and how is that
114:21 - data collected suppose that is a bit of
114:23 - a unique animal in the pose that is a
114:29 - bit of an odd case because the model
114:31 - itself the trained model is open-source
114:33 - you can use it you can download it
114:35 - there's examples for it in tensorflow in
114:37 - tensorflow Jas and ml5 jazz but the
114:40 - actual code for training the model from
114:42 - what I understand or what I've been able
114:43 - to find is closed source so there aren't
114:45 - a lot of details koko dataset
114:59 - a data set that is commonly used for
115:03 - training models a data set that's a data
115:12 - set that's used often in training models
115:14 - around images is Coco are common objects
115:17 - in context and it has a lot of labeled
115:19 - images of people striking poses with
115:21 - their key points marked so I don't know
115:24 - for a fact whether Coco was used
115:26 - exclusively for training pose net
115:28 - whether it was used partially or not at
115:30 - all but your best bet for starting point
115:32 - for finding out as much as you can about
115:34 - the pose net model is to go directly to
115:36 - the source the github repository for
115:38 - pose net in fact there's a pose dent 2.0
115:40 - coming out and there also is a wonderful
115:43 - web there also is an excellent blog post
115:47 - called real time human pose estimation
115:49 - in the browser was tensorflow j/s that
115:51 - was written by Dan Ovid that was written
115:57 - by Dan Ovid yeah I'm just that was
116:03 - written by dan-o fed with yeah that was
116:08 - written by Dan Ovid with illustration
116:10 - with thank you I read everybody's so
116:19 - nice in the chat today thank you
116:26 - your best bet for doing some read yeah
116:31 - you should also make sure I would also
116:34 - highly suggest you read the blog post
116:36 - real-time human pose estimation in the
116:39 - browser with tensorflow JS by Dan Ovid
116:41 - and editing and illustrations from Irene
116:43 - Alvarado and Alexis gallo so there's a
116:45 - lot of excellent background information
116:47 - about how the model was trained and and
116:51 - about how the model is trained and other
116:54 - relevant details
117:04 - okay now
117:44 - no humans of it yeah although I want to
117:46 - say one other things
117:52 - there we go
118:15 - and if you want to learn more about the
118:17 - koko image data set I highly suggest you
118:20 - check out the humans of AI project by
118:22 - Phillip Schmitt
118:36 - if you want to learn more about the KOCO
118:39 - image data set I also would point you
118:40 - towards the humans of AI project by
118:42 - Phillip Schmitt which is an artwork an
118:44 - online exhibition that takes a critical
118:45 - look at the data in that data set itself
118:50 - okay
118:58 - now most likely if you most likely if
119:02 - you're here the reason why you might be
119:03 - interested in pose that is because wow I
119:06 - can make an interactive project that
119:08 - just knows where my hands are my
119:09 - shoulder is and and anybody can walk up
119:12 - to and interact with it I could do body
119:13 - tracking in real time in the browser
119:15 - with a web camera and yes in fact you
119:16 - can so that's what I'm gonna show you
119:18 - code wise how to do right now and the
119:19 - easiest way to get started with that
119:21 - from my point of view is the p5 web
119:23 - editor with the p5 library I have a
119:24 - basic sketch that's just opening up a
119:26 - connection to the web cam and drawing
119:28 - the video right here and now I'm gonna
119:30 - add the ml 5 library to it so I have the
119:32 - mmm mmm yeah take deep breaths it helps
119:39 - speak without stuttering whoo I got a
119:44 - little dizzy there
119:53 - now for you in many cases if you're
119:56 - interested in Poe's net it's just
119:57 - because wow I have an interactive
119:59 - project I want to make and I can but
120:01 - anyways now for you watching this video
120:08 - my guess is you've arrived here because
120:11 - you want to make something an
120:13 - interactive project with gesture with
120:14 - body tracking and pose that is a really
120:17 - quick and easy way of doing so in the
120:19 - browser okay
120:30 - twelve o'clock okay was a little more
120:32 - time
120:49 - if you found your way to this video most
120:51 - likely you're here because you're making
120:53 - interactive media projects and PostNet
120:56 - is a tool that you could use to do
120:58 - real-time body tracking very quickly and
121:00 - easily it's it's frankly pretty amazing
121:02 - that you can do this with just a webcam
121:04 - image so one way to get started which in
121:06 - my view is one of the easiest way is
121:07 - with the p5 web editor and the p5.js
121:10 - library which very so i have a sketch
121:12 - here which connects to the camera and
121:13 - just draws the image in a canvas you
121:16 - also need to make sure you have the ml5
121:18 - library imported that would be through
121:22 - you also want to make sure you have the
121:24 - ml 5 J's library imported the most
121:27 - recent vert you also wanna make sure you
121:29 - have the most recent version of the ml 5
121:30 - GS library imported and that would be
121:32 - through what is it that you a script tag
121:35 - that's what I'm looking for you also
121:37 - want to make sure you have the ml 5 GS
121:38 - library imported and that will be
121:40 - through a script tag in index.html and
121:43 - will will create up create something
121:45 - that'll just go on the screen therefore
121:46 - that once you've got all that setup
121:54 - we're ready to start coding so I'm gonna
121:55 - create a variable called pose net I'm
122:00 - gonna say pose net equals new pose net
122:02 - oh no new no none of that
122:07 - I'm gonna say I'm gonna say pose net
122:09 - equals ml v dot pose net so all the ml 5
122:17 - functions are initialized the same way
122:20 - by referencing the ml 5 library dot the
122:22 - name of the function in this case pose
122:23 - net now typically there's some arguments
122:25 - that go here and we can look up what
122:27 - those arguments are by going to the
122:28 - documentation page
122:46 - here we can see there's a four rut here
122:50 - we can see there's a variety of
122:51 - different ways to create the post here
122:55 - we can see there's a variety there's
122:56 - here we can see there's a few different
122:58 - ways to it here we can see there's a few
123:03 - different ways to call the post net
123:04 - function I just want to give it a video
123:07 - and the way I want to do it actually
123:09 - isn't even listed here I just want to
123:12 - give it a video and a callback
123:16 - interesting
123:23 - here we can see there's a few different
123:25 - ways we can call the post net function
123:26 - for us I just want to do it the simplest
123:28 - way possible I want to give it the video
123:30 - which tells the ml 5 pose that function
123:34 - that I just just I'm just gonna keep
123:41 - going give me a second I'm gonna stop
123:42 - stop I'm gonna stop stopping every two
123:45 - seconds I'm going to stop stopping stop
123:49 - stopping just gonna move along here here
123:57 - we can see there are a few different
123:58 - ways to call the pose net function I
124:00 - want to do it the simplest way possible
124:01 - I'm just going to give it the video
124:04 - element and a callback for when the
124:06 - model is loaded which I don't even know
124:07 - that I need
124:25 - I'll make sure there's no errors and run
124:27 - this again and we can see pose net is
124:33 - ready so I know I've got my syntax right
124:35 - I've called the post net function I've
124:37 - loaded the model
124:56 - hoes that works a little bit different
125:00 - the way post that works it's actually a
125:02 - bit different than everything else in
125:04 - the ml5 library and it works based on
125:06 - event handlers so I want to set up a
125:09 - pose event by calling this method on on
125:13 - pose I want this function to execute
125:16 - whenever the pose net model detects a
125:19 - pose then call this function and give me
125:22 - the results of that pose whenever
125:39 - I can add that right here and set up
125:41 - pose net on pose and then I'm going to
125:45 - give it a callback called got poses
126:01 - and now presumably every single time it
126:05 - detects suppose it sees me it sees my
126:07 - skeleton it will log that to the console
126:10 - right here
126:19 - so this is working I can see it logging
126:22 - it here
126:34 - so now that it's running I can see the
126:36 - all these objects being logged let's
126:38 - look gets let's take a look now that
126:41 - it's working I can see a bunch of
126:43 - objects being logged let's take a look
126:45 - at what's inside those objects Oh p5 web
126:55 - editor
127:07 - so while the p5 web betters built-in so
127:13 - while the p5 web editors built in
127:15 - console is really useful for basic
127:16 - debugging sometimes what I want to
127:18 - investigate all of the details of a
127:20 - JavaScript object I want to open it so
127:27 - even though the p5 web editors so the p5
127:31 - web editors console is incredibly useful
127:33 - for basic debugging but sometimes what I
127:35 - want to investigate the depths of
127:36 - everything that within a JavaScript
127:38 - object I find it a little bit easier to
127:40 - look at the native console itself so I'm
127:42 - gonna do that right now
127:55 - and so I have the chrome I have the
127:59 - developer the browser developer console
128:01 - open right here I'm just gonna stop the
128:03 - sketch from running let me stop the
128:04 - scheduler I've stopped the sketch from
128:08 - running and I've zeroed in on one of
128:10 - these objects that's been log to the
128:12 - console and I'm looking at the built in
128:14 - browser console here and we can see that
128:16 - gives me an array so what's in the array
128:18 - every single pose that it detects there
128:21 - could be three or four people here is an
128:23 - element in the array and each element of
128:25 - the array is an object with multiple
128:27 - properties there's a pose property and a
128:29 - skeleton property let's look at the pose
128:31 - property first whoops
128:35 - why is it huh what
128:44 - it's just my browser broken oh is it
128:48 - because I stopped the sketch and it
128:50 - doesn't know what it is anymore
129:06 - yeah there we go
129:13 - do this let me turn to us again
129:24 - all the way once again from the top
129:27 - dan dan dan the p5 web editor console is
129:38 - super useful for basic debugging but but
129:40 - sometimes when I want to look at the
129:41 - depths and investigate everything that
129:43 - there is - - with a particular
129:44 - JavaScript object that I'm logging it's
129:46 - a bit easier to go to the developer
129:48 - tools of the browser itself in this case
129:50 - I can get to them through a quick key
129:51 - command or just in chrome View developer
129:54 - JavaScript console I don't need to say
129:57 - I'm not gonna include those details
129:59 - sorry once again from the top it's time
130:08 - pose net time on the coding train the
130:19 - console in the p5 web editor is
130:21 - incredibly useful and for basic
130:23 - debugging but certainly in this case I
130:24 - really want to look deep into the
130:26 - internals of the JavaScript object that
130:28 - is the pose and so for that I think the
130:30 - built-in developer console in the
130:33 - browser will be easier I can get to that
130:35 - really easily and I'm just gonna pick
130:37 - any one of these and here I've got I've
130:40 - got one to look at so we can see it
130:41 - right over here it's uh each one of
130:44 - these things as an array with an object
130:46 - in it that up yeah
130:56 - could you start over I just got here
131:06 - last time I swear for months yet poor me
131:12 - toward you watching this I can't believe
131:23 - I'm gonna say this again the p5 the p5
131:30 - console is very useful for your basic
131:32 - debugging in this case I really want to
131:34 - like dive deep into this object that I'm
131:36 - logging here the poses object so in this
131:38 - case I'm gonna open up the actual
131:39 - developer console of the browser I could
131:42 - see a lot of stuff being logged here
131:44 - very very quickly I'm gonna pick any one
131:45 - of these and unfold it so i can see that
131:49 - i have an array and the first element of
131:51 - the array is a post there could be
131:52 - multiple poses that the model is
131:55 - detecting if there's more than one
131:56 - person in this case there's just one and
131:58 - i can look at this object it's got two
132:00 - properties a pose a pose property and a
132:03 - skeleton property definitely want to
132:05 - come back to the skeleton property but
132:07 - let's start with the pose property it
132:08 - can unfold that and we can see oh my
132:11 - goodness look at all this stuff in here
132:13 - so first of all there's a score so i
132:16 - mentioned how the that with each i
132:20 - mentioned that with each one of these XY
132:23 - positions of every key point there is a
132:25 - confidence score there is also a
132:29 - confidence score for the entire pose
132:32 - itself and because the camera seemed
132:33 - very little of me it's quite low just at
132:35 - 30% then i can actually access any one
132:39 - of those key points by its name knows
132:43 - left eye right eye all these all the way
132:46 - down once again to right and right ankle
132:48 - so let's actually draw something based
132:50 - on any of those key points we'll use my
132:52 - nose
133:01 - so I'm gonna make the assumption that
133:03 - there's always only going to be a single
133:05 - person if I if there were multiple
133:06 - people I'd want to do this differently
133:08 - and I'm going to make if I'm gonna good
133:10 - stop I'm gonna make a variable called
133:12 - pose then I'm gonna say if it's found to
133:16 - pose and I can check that by just
133:18 - checking the length of the array if the
133:19 - length of the array is zero then pose
133:24 - equals poses index zero so I'm gonna
133:27 - take the first pose from the array
133:44 - I'm gonna take the first pose from the
133:47 - array and store it into the global
133:50 - variable but actually if you remember
133:52 - the object in the array has two
133:53 - properties pose and skeleton so it seems
133:56 - there's a lot of redundant lingo here
133:58 - but I must say poses index 0 dot pose
134:02 - actually let me just do this
134:33 - well I did
134:38 - oh I see
134:41 - it was fine yes
134:48 - poses index 0 dot pose I this could be a
134:52 - good place to use the confidence score
134:54 - like only if it's like of a high
134:56 - confidence actually use it but I'm not
134:58 - I'm just gonna take any pose that it
134:59 - gives me then in the draw function I can
135:06 - draw something based on
135:17 - okay
135:19 - then in the draw function I can draw
135:22 - something based on that pose so for
135:23 - example let me give myself a red nose
135:36 - so now if I run the sketch ah so I got
135:40 - an error so pose could be first let me
135:44 - take out the console.log this is a lot
135:46 - of extra stuff for it to do ah so I got
135:54 - an error so why did I get that error the
135:56 - reason why I got that error is it hasn't
135:58 - found to pose yet so there is no nose
136:01 - for it to draw so I should always check
136:03 - to make sure there is a valid pose first
136:05 - if there is a valid pose then draw that
136:13 - circle and there we go I now have a red
136:21 - dot always following my nose
136:43 - right Thank You Nathan yeah people are
136:46 - pointing out Nathan is pointing out that
136:47 - sometimes when I'm going into the
136:49 - JavaScript console I can't find the data
136:51 - anymore it's because when I stop the
136:53 - sketch it does exist in memory anymore
136:55 - it got cleaned up so okay all right so
136:59 - now we have this
137:09 - so as an exercise if you're falling
137:12 - along you know pause the video right now
137:13 - and then add two points for your hands
137:16 - and see if you can have like dip two
137:18 - different circles that are following
137:20 - your hands did you get that working
137:27 - you're all at it for you
137:57 - whoops
138:12 - I forgot what it's called
138:19 - oh there's no hand wrists
138:24 - it's the wrist and your right wrist left
138:30 - wrist okay sorry
138:38 - if you're following along if you're
138:42 - following along pause the video and try
138:44 - to add two more points where your hands
138:47 - are now there isn't actually a hand a
138:49 - key point it's a wrist key point but
138:51 - that'll probably work for our purposes
138:52 - I'll let you try that how did that go
138:57 - okay Ivan added for you now
139:28 - let's see if this works
139:36 - those were bad should probably pick
139:39 - shoulders
139:47 - so one thing you might notice is this is
139:49 - working terribly why is it working
139:51 - terribly because I'm not showing it my
139:54 - full body so most likely this goes back
139:57 - to how the date oh how whoo this is
140:03 - working terribly think I'm almost kind
140:08 - of getting it right and there we go but
140:10 - why is it working so poorly well first
140:13 - of all I'm barely showing him only
140:14 - showing it from my waist up and most
140:17 - likely the model was trained on
140:19 - full-body images take a minute here
140:51 - now I turned the camera I should
140:58 - probably
141:02 - now I turned the camera to point at me
141:04 - over here and I'm further away and you
141:07 - can see how much more accurate this is
141:08 - because it sees so much more of my body
141:10 - I'm able to control where the risks are
141:13 - and get pretty good accurate tracking as
141:15 - I'm standing further away from the model
141:18 - noting model as I'm standing further
141:20 - away from the camera
141:41 - we can also do so there are also some
141:44 - days tricks we could try for example I
141:46 - can estimate distance from the camera by
141:48 - looking at that there also some other
141:54 - interesting tricks we could try for
141:55 - example I could estimate distance from
141:57 - the camera by looking at how far apart
141:59 - are the eyes
143:13 - so for example here I'm storing the
143:16 - right eye and left eye location in
143:18 - separate variables and then calling the
143:19 - p5 distance function to look at how far
143:22 - apart they are and then I could just
143:24 - take that distance and assign it to the
143:26 - size of the nose so as I get closer the
143:37 - nose gets bigger it you almost can't
143:39 - tell because it's sizing relative to my
143:42 - face but it gives it more of a realistic
143:44 - appearance of an actual clown nose
143:46 - that's attached by changing its size
143:48 - according to the proportions of what
143:51 - it's detecting in the face
144:17 - we just look at the pose again
144:54 - now forking for convenience I was
144:57 - referencing each of those
145:08 - you might be you might be asking
145:09 - yourself well what if I want to draw all
145:11 - the points all the points that it's
145:13 - tracking so for convenience I was
145:14 - referencing each point by name right eye
145:16 - left eye nose right wrist but there's
145:19 - actually a key points array that has all
145:22 - 17 points in it so I can use that to
145:24 - just loop through everything if that's
145:25 - what I want to do
146:01 - so I can loop through all of the key
146:04 - points and get the XY of each one
146:32 - and then I can draw a green circle at
146:34 - each location
146:42 - what did I do wrong
146:55 - shoot
147:09 - oh it's got a part in a position good
147:14 - oops
147:16 - so that code didn't work because I
147:17 - forgot that each element each key point
147:20 - is more than just an XY it's got the
147:22 - confidence score it's got the name of
147:24 - the part and a position so I need the
147:26 - key points index zeroes position X pose
147:36 - key points index I dot position X dot
147:42 - position dot y now I believe this will
147:44 - work and I'm gonna turn this over here
147:52 - I'll stand back over here and we can see
147:55 - now I'm drawing even if I get my leg up
147:57 - into the picture
147:59 - I guess I hurt myself can I get a full
148:04 - body picture people I'm gonna make this
148:07 - happen
148:14 - we're slack here weigh it down a little
148:18 - bit and here we go
148:25 - I only think I'm not seeing are my
148:27 - ankles oh it's not there we go I got
148:29 - kind of accurate there my pose okay
148:34 - so you can see I'm getting all the
148:36 - points of my body right now standing
148:38 - about probably six feet away from the
148:40 - camera
148:56 - okay hold on everybody
149:10 - where's the why is the skeleton blank
149:19 - let me look at the example that drawers
149:35 - a scout
149:42 - oh it's just not this is awkward hold on
149:49 - is it drawing the skeleton oh yeah it is
149:54 - interesting how why does it only
149:56 - sometimes do that that feels like a bug
149:59 - to me like why not just draw all the
150:01 - connected
150:02 - I guess it's based on the confidence but
150:16 - all right
150:28 - so um er I did do this in a previous
150:31 - stream let me I'll explain that in a
150:33 - minute
150:33 - I'm doing this again though because the
150:36 - previous stream I did this is like this
150:37 - one well over an hour it was using a
150:40 - previous iteration of the library so I
150:42 - don't have a nice succinct video
150:43 - tutorial for Poe's net which is why I'm
150:45 - making this okay
150:59 - there's one other aspect to the data and
151:01 - I haven't shown you here it
151:12 - that's fine
151:17 - there's one other aspect of the data
151:19 - that I haven't shown you here and that's
151:20 - drawing the actual skeleton in a lot of
151:23 - the demos that you see there are lines
151:25 - connecting the different points now you
151:26 - could just build your own lookup table
151:28 - of which points are connected to which
151:29 - points but pose that will dynamically
151:31 - sort of like make guesses as to which
151:33 - points should be connected to which
151:34 - points based on like how you're standing
151:36 - I guess so and why why is there a
151:40 - separate skeleton thing why wouldn't
151:42 - that just be like a permanent like these
151:44 - things are always connected like the
151:45 - shoulder is always connected to the
151:46 - elbow that doesn't make any sense to me
151:49 - I guess right like with the Kinect you
151:55 - just know which points it like why is it
151:56 - not just like a permanent lookup table
152:01 - why is the skeleton something dynamic
152:11 - relates to the threshold doesn't have to
152:16 - do with the confidence scores it must be
152:18 - all right I'm just gonna say presume
152:20 - somebody will correct me
152:32 - there's one other aspect of this that I
152:33 - haven't shown you yet so if you've seen
152:35 - demos of pose net and some of the
152:36 - examples the points are connected with
152:38 - lines so on the one hand you could just
152:40 - memorize like always draw a line between
152:41 - the shoulder to the elbow and the elbow
152:43 - to the wrist but pose that what I
152:45 - presume is based on the confident scores
152:47 - will dynamically give you back which
152:49 - parts are connected to which parts and
152:51 - that's in the skeleton property of the
152:56 - and that's in the skeleton property of
152:59 - the poses object that it returns when it
153:02 - gets results
153:12 - and that's in the skeleton property of
153:14 - the poses and that's in the skeleton
153:19 - property of the object found in the
153:22 - array that was returned to us so I could
153:24 - actually add a new global variable
153:26 - called skeleton we've been good for
153:30 - Halloween skeleton equals and let me
153:32 - just stop this for a second
153:34 - poses index 0 dot skeleton
153:49 - hold on
153:56 - it's gonna look up how's this work
153:59 - for every there's a 0 and a 1 part a and
154:03 - Part B okay fine I can loop over the
154:11 - skeleton
154:27 - why do I don't keep closing that I can't
154:29 - memorize it
154:37 - yeah that's what every
154:53 - and skeleton is actually a
154:54 - two-dimensional array because in the
154:56 - second dimension it stores the to the
154:59 - and skeleton is actually a
155:02 - two-dimensional array because in the
155:04 - second dimension it it holds the the two
155:07 - locations that are connected so I can
155:09 - say a equals skeleton index I index 0
155:13 - and B is index 1 and then I can just
155:21 - draw a line between the two of them
155:37 - so I look at every skeleton point I get
155:40 - the two parts Part A Part B and just
155:43 - draw a line between the X's and Y's of
155:44 - each of those make it a kind of thicker
155:50 - line and give it a the color white and
155:57 - let's see what this looks like
156:17 - and there we go this I guess about you
156:20 - you can edit back and forth between
156:22 - these two shots since we're recording to
156:24 - both and there we go this is my pose net
156:32 - and we can actually like even like side
156:34 - do them or something and there we go
156:38 - that's the full and there we go that's
156:42 - pretty much and there we go that's
156:46 - pretty much everything you could do with
156:48 - the ml5 pose net function right this is
157:00 - what I'm gonna mention this so for you
157:07 - you might try to do something like make
157:09 - a googly eyes that's something I
157:11 - actually did in a previous video where I
157:12 - looked at an earlier version of pose net
157:16 - and you could also look at some of these
157:19 - other examples that demonstrate other
157:21 - aspects for example you can actually
157:22 - find the pose of a JPEG that you up that
157:25 - you load rather than images from a
157:27 - webcam but what I'm want to get to is
157:30 - what is but what I'm looking to do with
157:39 - this which I'm going to get to in the
157:41 - next video but what I want to do which
157:47 - I'm going to get to in a follow-up video
157:49 - to this is not take the outputs and draw
157:52 - something but rather take these outputs
157:56 - and feed them as training data into ml5
158:01 - neural network what if I say hey every
158:04 - time I make this pose label that a Y and
158:08 - every time I make this pose label that
158:10 - an M a C and a you see where I'm going
158:13 - could I create a pose classifier I can
158:16 - use all of the X Y positions label them
158:19 - and train a classifier to make guesses
158:21 - as to my pose
158:27 - this is very similar to what I did with
158:30 - the teachable machine image classifier
158:32 - the difference is with the image
158:34 - classifier as soon as I show it a
158:37 - different background or I've one the
158:40 - difference is with the image classifier
158:41 - soon as I move the camera to a different
158:43 - room with different lighting and a
158:44 - different background with a different
158:45 - person it's not gonna be able to
158:47 - recognize the pose anymore because that
158:50 - was trained on the raw pixels this is
158:52 - actually just trained on the relative
158:53 - positions so in theory somebody around
158:56 - the same size as me swapping out it
158:59 - would recognize their pose and there's
159:01 - actually a way that I could just
159:02 - normalize all the data so that it would
159:04 - work for anybody's pose potentially so
159:06 - you can train your own pose classifier
159:08 - that are worked generically in a lot of
159:10 - different environments so if you make
159:18 - something with ml5 pose net please share
159:20 - it with me and so if you make something
159:24 - with ml5 pose net or with pose that with
159:26 - another environment please share it with
159:27 - me I would love to check it out you can
159:29 - find the code for everything in this
159:30 - video in the link in this video's
159:32 - description I'll see you in the future
159:33 - oh okay all right everyone
159:48 - it's 12:40 this this is it I can always
159:54 - come back so tomorrow I'm gonna do the
159:56 - classifier tomorrow I probably will
159:59 - livestream around the same time 10 a.m.
160:01 - so stay tuned for that and there you go
160:11 - I'm so exhausted I'll take a few
160:15 - questions if people want to ask I'm
160:17 - gonna stop all the recording and up
160:20 - start uploading that stuff it's actually
160:23 - you know what for posterity sake I'm not
160:25 - gonna stop it yet I will I will do that
160:27 - when I can all right any any questions
160:30 - any notes anything anybody wants to say
160:34 - speak now or forever hold your peace
160:39 - peace peace I'm holding my Peas hey the
160:44 - last after lunch oh yeah so I did do
160:48 - this previously in this for of code to
160:52 - answer all MERS question in that hour of
160:53 - code livestream but what what what the
160:57 - ml five library didn't have was the
160:58 - ability to access the key points by
161:00 - their name in such an easier way entry
161:02 - point into doing this that totally this
161:04 - tutorial is a little bit better will I
161:05 - ever do slam I mean not anytime soon but
161:10 - it's certainly something that interests
161:11 - me so someday maybe can you start
161:23 - streaming a half an hour earlier please
161:25 - I'm not so sure it's vens on my schedule
161:27 - tomorrow it's the morning for me so I
161:29 - need time to get in and get set up but
161:31 - maybe will you make a deep learning
161:37 - tutorial ask code bulletin so I would
161:40 - say that I I mean far be it for me to
161:43 - know exactly what it is that I'm doing
161:45 - but I would say that I have a lot of
161:47 - videos that touch on deep learning
161:48 - concepts all throughout the channel
161:50 - they're a little tricky to find but see
161:52 - what you can find and feel free to reach
161:54 - out on Twitter or otherwise if you're if
161:56 - you're struggling to find assignments
162:02 - asking about generator functions I have
162:04 - a long list of things to get to and it's
162:07 - I just have to try to prioritize and do
162:10 - what I can the best that I can
162:12 - [Music]
162:20 - micki poses as it can you use the camp
162:22 - thing to control a game like the Kinect
162:24 - so yes this pose net is very similar in
162:28 - terms of its tracking abilities to what
162:29 - the Microsoft Kinect product us what's
162:32 - very different is that's a depth sensor
162:33 - that has a lot more information about
162:36 - the scene so it's able to do probably I
162:38 - would guess more accurate tracking and
162:40 - in particular it gives you depth
162:43 - information as well how about making a
162:45 - sign language gesture classifier using a
162:48 - low-res stream opposed net currency
162:50 - that's a terrific job idea and I'll
162:52 - point you to abhishek who created this
163:03 - project making amazon alexa respond to
163:07 - sign language using AI i'm not i
163:09 - actually don't know if he used a post
163:12 - net for this he might have actually just
163:16 - used transfer learning and images but
163:18 - it's a wonderful project i would
163:20 - encourage you to check out related to
163:24 - what you're asking about
163:26 - [Music]
163:29 - so why why me and ask what's the purpose
163:33 - of this livestream I've really
163:34 - conflicted about this because why not
163:40 - just make short tutorials so this is
163:42 - what I'm doing my goal if everything
163:44 - goes went well today
163:45 - this post that tutorial oh when Matthew
163:47 - works on it as it will be fifteen
163:49 - minutes or less
163:50 - and I just ideally I would record the
163:55 - edited stuff I don't know but people
163:57 - seem to enjoy seeing the longer versions
163:59 - in the live stream it's not perfect but
164:01 - that's what I'm doing right now is
164:03 - YouTube your main job it is not my main
164:06 - job is working as a teacher at here at
164:09 - ITP I forgot what I thought was the
164:10 - other thing I wanted to mention if you
164:13 - were in New York City the first ever ITP
164:16 - show in Brooklyn is happening this
164:18 - Sunday and Monday Sunday December 15th 2
164:21 - to 6 p.m. Monday December 16th 4 to 8
164:23 - p.m. the winter show of all this is
164:25 - where I teach this is my main job and I
164:28 - will be doing a livestream either Sunday
164:31 - or Monday probably Monday but maybe
164:33 - Sunday from the winter show
164:39 - [Music]
164:41 - I'm using ml5 feature extractor helper
164:44 - to load and train mobile net model with
164:46 - my own data set how can I save the
164:48 - training data in this case nest Beshear
164:52 - that's a good question I don't think ml5
164:55 - has any built-in functions to save your
164:58 - training data it definitely has a
164:59 - function to save the model so if you
165:04 - want to save the training data you might
165:06 - have to do something custom for that I
165:08 - have to think about that more but you
165:10 - you can certainly save all the images or
165:12 - you could you could pull out the
165:14 - features and save the features I don't
165:16 - know there'll be a great discussion on
165:18 - the ml 5 non-existent forum I guess on
165:21 - the github right now
165:26 - [Music]
165:31 - all right everyone I appreciate you I
165:35 - will be back tomorrow against my better
165:38 - judgment but I would do want to finish
165:40 - this project hope hopefully tomorrow
165:43 - will just be two hours because I have a
165:44 - lot to do and take care of with the show
165:46 - coming up live stream from show and the
165:49 - processing fundraiser in addition to the
165:51 - holiday songs so I mentioned the holiday
165:54 - song thing but probably more importantly
165:56 - is you know now I'm on a third or fourth
166:00 - year doing this one year I did like
166:02 - snowflakes I don't remember what I did
166:05 - the other one year I did trees like fur
166:08 - you know your standard holiday thing
166:13 - that has a tree involved with it so what
166:16 - could I do this time for us like a
166:17 - winter themed bunch of like coding stuff
166:19 - please suggest it in rainbow topics and
166:24 - then what we can do is create a label
166:28 - like why don't I make a label right now
166:31 - there's the holiday telephone label
166:34 - already I guess we could just use the
166:37 - same one let's just use the same let's
166:41 - use the same label so please suggest
166:43 - them and I will try to like upvote you
166:45 - can also up vote thing up vote them by
166:48 - oh how there's a lot here okay I'll take
166:52 - a look at these ooh
166:52 - Northern Lights using pro noise so I'm
166:54 - going to do some coding topics during
166:56 - the holiday livestream please suggest
166:59 - them here not here okay I did snowflakes
167:05 - both years
167:08 - [Music]
167:10 - Nathan yeah if you can make it to New
167:12 - York City Brooklyn
167:13 - you can run audio for the live stream
167:17 - chaos equations I've done those okay uh
167:22 - procedurally generated machine learnings
167:25 - to know people who look style get maybe
167:27 - I could do train a runway model off
167:30 - something wintery themed I'm definitely
167:33 - gonna do that okay goodbye everybody see
167:36 - you next time on the coding train la I'm
167:43 - still here
167:52 - [Music]
168:01 - [Music]
168:08 - [Music]
168:15 - [Music]
168:47 - [Music]
168:53 - [Music]
169:03 - [Music]
169:16 - [Music]
169:29 - [Music]
169:40 - [Music]
169:58 - [Music]
170:10 - [Music]
170:27 - [Music]
170:40 - [Music]
170:48 - [Music]
171:11 - [Music]
171:23 - [Music]
171:50 - [Music]
171:59 - [Music]
172:11 - [Music]
172:33 - [Music]