00:00 - ♪ (bell ringing) ♪
Hello! Welcome to the third video in my
00:04 - build a classifier with p5.js and
TensorFlow.js and there is neural network
00:09 - in there.
00:10 - So... I am really exploring this machine
learning library TensorFlow.js
00:13 - and I want to come up with a creative
example that shows the full classification
00:18 - process from collecting data, training and
deploying a machine learning model.
00:23 - And so... the example that I'm working
with is this idea of color classification.
00:28 - So... I'm crowdsourcing this data from
you, the viewing audience, and,
00:32 - if you look at this... you might remember
I built this little web app to...
00:38 - in the previous video... I think that was
yesterday... and then now it's today,
00:42 - 24 hours later. It's been improved,
thank you to the internet, the wonderful
00:45 - people who have pull requested various
design fixes and updates. You can check
00:49 - all that on github to see who the
contributors were.
00:52 - Now, let me add a few things here.
Brown, kind of brown. Let's purplish.
01:00 - Let's bluish. Now, one thing I will
mention, thank you to Bruno who brought
01:05 - this up in the patreon slack channel.
I sort of said yesterday, you know...
01:09 - I just wanna pick a trivial data set.
I wanna make something that's not...
01:13 - that has very little... sort of like
meaningfulness to it just to sort of
01:17 - demonstrate the whole process.
01:19 - But, there is something kind of
interesting going on here, in theory,
01:23 - which is that we are looking at human
perception. And I am not mathematically
01:29 - calculating... like labeling a color 
according to the RGB values.
01:33 - I am asking you, the viewers, to tell
what you think a color is.
01:36 - And so, there is a lot of
interesting scientific research
01:39 - in this area, and will reference this
video that talks about Berkley researchers
01:45 - and other research around the
surprising pattern
01:48 - behind color names
around the world.
01:49 - So... there is a lot there
01:51 - that you can dig into.
01:52 - So... maybe there is more here
than I might originally have thought.
01:56 - The problem with what I built over here...
02:00 - is that...
02:02 - you know you're wonderful, I love
02:03 - all of you who watch these videos and
leave nice feedback...
02:06 - and leave critical feedback,
and all that sort of stuff. But...
02:09 - the database is a little bit off
the rails because
02:12 - I just left
the rules wide open.
02:14 - Anybody can write and anybody can read
to the database.
02:18 - And so...
02:21 - thankfully...
02:25 - panzer on github...
02:28 - left a pull request analyzing the data
02:30 - and looking at, kind of like: okay,
well there is a lot of stuff here
02:34 - that looks wrong. Maybe there are some
bots that started classifying colors.
02:38 - And so... wrote all these functions to
analyze and filter the data.
02:41 - So I encourage you to check out this
wonderful pull request.
02:46 - This pull request is now part of the
repository, however, it took a slightly
02:49 - different approach, which is, and thanks
to meiamsome, who helped me with this,
02:56 - which is that I changed the rules.
02:59 - So the rules yesterday were just basically
read: true, write: true.
03:04 - These are firebase rules. And meiamsome
helped me look into how you could
03:09 - customize the rules. And the things that
have been added to the rules now are:
03:15 - we have some things to validate to make
sure the RGB values being put in the
03:19 - database are actually numbers. So you
can see how this looks here, newData
03:23 - is a number and it's between zero and 255.
03:26 - We have something to
validate at the label.
03:28 - You know... one of the things
that people put: other words that weren't
03:31 - part of my set of classification
labels into the database.
03:34 - So I have to check that it is a string.
And that the actual data's
03:37 - value matches this regular expression.
So... if you have never seen regular
03:41 - expressions before, I do happen to have a
video series about that
03:44 - (bell's ring)
03:45 - that you can go watch. But this, you can
see that it matches any of these dash ish.
03:49 - So that's protecting, and then...
authentication was turned on.
03:54 - So what you don't see is that it is
anonymous authentication, but you can
03:57 - only write if you've been authenticated.
04:00 - This way, it's anonymous... I can track
every person, or every entry.
04:06 - Well, it's not necessarily a person,
but every entry from a particular
04:09 - IP address into the database with a
unique id. So if I consider there is a bot
04:14 - that's just flooding the database,
I could either block it or just, like...
04:17 - clean that data out of it.
04:18 - So that's what I am going to
do in this video.
04:21 - I am going to use a similar approach to
this pull request. I am going to actually
04:26 - read the data from the database,
and then, I am gonna... like... analyze it
04:29 - and delete stuff if it seems
like it's no good, and then download a
04:34 - JSON file that I'll then use in the
TensorFlow.js example that I am going
04:38 - to build.
Did I just spend the whole video
04:41 - introducing this topic? I think I
might have, but I am going to move on
04:44 - and keep going anyway.
04:45 - Before I dig into to code, let me just
reference one more web page to you
04:49 - I wanna show you. This is a project that,
at the time of this recording it hasn't
04:53 - technically been released yet, but you
can find it at ml5js.org, and probably is
04:57 - released now that you're watching this
video... but ml5 is a machine learning
05:00 - library built on top of TensorFlow.js
that I and other
05:04 - folks at ITP have been working on. And I
just wanna reference on Hannah Davis
05:07 - who's an artist and researcher,
a contributor to ml5, who wrote this
05:11 - wonderful tutorial about making your
own datasets, and thinking about questions
05:15 - to ask, in particular about responsible
data collection, and tagging and
05:18 - crowdsourcing. So hopefully I'll come back
to this topic again and again in my video
05:22 - tutorials. But I would encourage you to
check this out and really think about it.
05:26 - One thing we could think about it here
is: number one: I am building an example
05:30 - that requires people to see the colors. So
what about people who are colorblind, low
05:34 - vision or blind? That's something I really
should be thoughtful about in this example
05:38 - how can I approach that. And then, you
know, who's really able to participate in
05:43 - tagging and submitting data.
Who's being left out.
05:47 - So, I think the good news for me
is this is meant to be somewhat of a
05:50 - generic tutorial and the data, wow! Does
it matter so much if it's perfect? because
05:56 - I just wanna show that whole process, but
you, then, actually being a person who
06:00 - might work with machine learning out in
the real world, you really wanna be
06:05 - thoughtful about that data. And I hope
that... I can link to more resources
06:09 - about that and cover that more on this
channel as well.
06:12 - So... all that aside, now I am ready to
dig in and look at the data and do the
06:16 - thing that's probably gonna take me the
next 24 hours, or three days,
06:20 - or three weeks: try to clean the data and
make it usable for me.
06:23 - So... yeah, that's what I'm gonna do.
06:26 - Okay... so... I have a... I mean
I could do this... I could download the
06:32 - data directly from firebase and just
put it in like a google sheet to
06:35 - look at it. That might be useful.
06:37 - But what I'm gonna do is: I'm just
going to actually write a p5 sketch or
06:40 - just a javascript program to look at the
data first. So... I have... I have this
06:45 - sketch. All that's in it so far is just
that connect to firebase and authenticate.
06:50 - So... what I wanna do is to
retrieve data...
06:52 - I think I'd say something like database...
once... value... and then I have
06:59 - a callback like gotData.
I don't know if this is right.
07:05 - And, by the way, I've learned that the
javascript, recently at the Javascript
07:08 - Convention, which is not how p5 works,
which is often the error is first as the
07:13 - callback arguments, and then
the results is second.
07:17 - I don't know... I'm just speculating what
the firebase API might be like.
07:21 - Let's see what happens.
Database once is not a function.
07:24 - I probably need dot ref.
And then a probably need like... colors or
07:27 - something, right?
Probably something like this.
07:31 - I could just go and look on
the documentation. I also have this
07:35 - firebase tutorial. Oh yeah, I need the
database reference. And then... on my
07:41 - tutorial I say dot on but really...
oh! gotOne and errData.
07:45 - So maybe there is two callbacks.
Who knows? Who knows!
07:48 - Let's say... let's do this:
let ref... equal database... ref colors.
07:57 - And then let's say ref once,
value got data.
08:01 - And let's look and see what comes back.
08:06 - Let's go back to here.
Alright, something came back.
08:12 - No nothing came back. Nineteen...
08:14 - Alright, what's going on here? Maybe I
should go back and look at my
08:19 - actual example.
Got one... error data... so let's...
08:22 - Oh! that's a pointer to the data, right!
08:27 - So actually the data... so... so... so...
it actually is a separate callback for
08:31 - error. It looks like.
08:35 - So, I'm gonna like... not worry about the
error callback right now.
08:38 - I'm gonna use gotData. And then...
08:42 - Let's look at the results.
08:46 - This looks really like: how could I
possibly use this? So...
08:49 - what you're actually getting back is like
this pointer to the data, you gotta call
08:52 - functions on it to actually
look at what's there.
08:55 - So, presumably, something like results dot
value is probably what the API is.
08:59 - No. It's not a function.
09:01 - So I have to go back and look at my
tutorial... dot val!
09:04 - Let's try that!
Let's try dot val.
09:12 - And there we go, look at this!
09:14 - Oh! it's a lot of data. Boy, the console
is not able to render this.
09:18 - So, now, is this actually an array?
09:21 - Oh! It's just actually an object with
all the data in it. So I need to turn
09:25 - that into an array. What's the...
09:27 - Because I kinda wanna loop through it...
09:29 - I wonder what's the... oh! You know
what I'll do... this is what I'm gonna do:
09:34 - I am going to... so now... now I'm gonna
process the data.
09:37 - So, first, let me just get all the keys.
09:40 - So I can object do keys... so let me just
say let data equal results dot val...
09:47 - Let's not console log that.
09:50 - Object dot keys, data.
09:51 - And then console dot log keys dot length.
09:58 - And, I don't need this page anymore!
10:00 - I'm going back to here, clean data...
10:04 - So there is five thousand, nine hundred
and two entries into the database.
10:08 - This is never gonna change because just
while I'm recording this video I shut off
10:12 - the ability to write to the database.
10:16 - Okay, so... what we can actually start to
do now is: I could say for let key of
10:21 - keys. And, I could say let a record equals
data key.
10:30 - And I could say console log record.
10:33 - So this is gonna log all five thousand of
those one at a time, I think.
10:38 - So I can see, these are all... it's just
logging every single data point.
10:41 - And we can see that they're...
For every single one, there is an
10:45 - R, a G and a B, the label and then this
user id.
10:47 - So now, I think there was... I have...
10:50 - Watching the database this morning...
10:52 - I think there was a bot, that was posting
to it. So now, it's possible... it could
10:57 - be that there is just one person who
actually clicked a lot of times.
11:01 - But, so let me... what I'm gonna do
right now to just examine the data
11:04 - a little bit is... I'm going to...
11:08 - look at... the user, by user id and
count up how many entries for each
11:14 - user id. So I basically need to do
something like a concordant.
11:19 - So... if I say... UID...
11:24 - if I look at that...
11:26 - You can see there is all the user ids...
11:29 - And what I wanna to now is just
associate... so I'm gonna just say:
11:33 - user id by count... and I'm gonna say...
is an object...
11:43 - Okay... so what I wanna do is I wanna
say if user id by count of that...
11:51 - okay... so I need the id, which is this.
11:57 - If user id by count id... it does not
exist. Then, I want to set it to one.
12:07 - Otherwise, I want to increase it.
12:13 - And then, I want to... console log that.
12:17 - So let's look... this should give me all
the user ids...
12:23 - By how many people... by how many
entries I have.
12:28 - So we can look. 35, 33, 78, 147, 208...
189... what's the record here?
12:39 - 201... there is something I've already
forgot, 236...
12:43 - So what's this, is there anything
suspicious here? That's the question...
12:47 - Alright! It's probably worth me sorting
this. This is why I should just put
12:51 - everything into a spreadsheet. But I'm
just gonna sort it myself.
12:54 - So, in order to sort it, I want user's...
I'm also gonna have an array that
12:59 - I'm gonna sort... and so, if I find the
new id, I'll put that in the array, and
13:06 - then I wanna say... users dot sort... and
now I need a comparing function...
13:13 - to compare... two of them: a, b, and I'm
just gonna say return...
13:23 - user id by count a... minus...
user id by count b.
13:32 - So that'll sort the array.
13:38 - Sorting probably makes a new array,
I think... I can't remember, does it
13:42 - change the array or make a new array?
13:45 - So... right! I wanna sort the users array
and then... I'm just gonna do...
13:51 - Let... id of users... I'm just gonna
iterate over the array and console
13:58 - dot log... id plus user id by count
for that one.
14:09 - So I know I'm kinda like... ops...
14:12 - This would be a good time for me to use
those new string literals...
14:16 - Someday I'll get to that...
14:18 - So let's take a look at this.
What did I get wrong?
14:21 - Ah! It looks like I did! That worked!
14:23 - Amazingly that worked.
14:24 - So we can see somebody just did one,
thank you!
14:27 - Thank you!
(indistinguishable sounds) who did one...
14:31 - And then we can see here... 236 entries
from this particular user.
14:38 - Alright! these by the way are called...
template literals is what I meant...
14:42 - By the way, since I mentioned it, let's
actually use it. This is a new feature
14:46 - of the ES 6... I'm here... why not...
14:48 - Where... if I use back tick...
14:52 - I can create a string...
14:56 - That's just with variables with this
syntax, I believe...
15:01 - Does this go out here?
Yes that goes there.
15:03 - So what this does is, in other words,
15:08 - I could say:
15:10 - user...
15:12 - submitted...
15:14 - I can just write a full string...
15:16 - And then, basically, anything that's in
between these dollar sign and curly
15:20 - brackets is rendered as the variable
value.
15:23 - So now if I run this...
15:25 - Again...
15:29 - I don't know why that didn't...
Ah yes! You can see... now it has
15:33 - that full... and I kind of don't want all
of this extra stuff, but I'll just show
15:37 - you that you can put together a string...
15:39 - And so... okay... so I happen to know,
based on earlier research of the day...
15:44 - and watching that this particular user is
a bot... but I'm getting the suggestion
15:53 - from the chat to just... discard anything
that's over one hundred...
15:58 - So it looks like this... so that...
So those are some...
16:02 - Those are ways that I can do this.
16:03 - Another correction I just got is that
I believe users dot sort actually
16:07 - changes the array...
16:10 - And, you know... since I've started using
arrow syntax, I could write this way which
16:15 - is perhaps a bit more readable...
but... who knows...
16:18 - Okay... alright! So the question here
really is: what to do next?
16:23 - I know that this... from my analysis
earlier looking at... these...
16:27 - things being added to the database
that this appeared to be a bot...
16:31 - I also could, other chat suggestion...
I could... just remove everything that's
16:36 - a hundred or more...
16:37 - I'm actually gonna stop this tutorial.
This was sort of like getting to actually
16:41 - being able to look at the data and
I'm gonna do a whole next video,
16:44 - because what I think might be useful
is actually just look at the data. Because
16:48 - this is information I can visualize. I can
say: show me everything that's pinkish;
16:52 - show me everything that's bluish...
and I could also say like... ignore this..
16:55 - I could see by user... what they...
I can actually look at what they...
16:59 - try to see: is something really just way
out there that maybe I shouldn't include?
17:03 - Okay?
So that I'm gonna do in the next video.
17:05 - I'm gonna add some tools
to visualize the data.