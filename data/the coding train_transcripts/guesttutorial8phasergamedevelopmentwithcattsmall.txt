00:00 - hello and welcome to a coding train
00:02 - guest tutorial this guest tutorial is
00:05 - sponsored by code pen code pen is a
00:10 - social development environment it's an
00:12 - online code editor and it's heart allows
00:15 - you to write code in the browser and see
00:16 - the results as you build a useful and
00:19 - liberating tool for developers of any
00:21 - skill and particularly empowering for
00:22 - people learning to code it is very
00:24 - beginner friendly it allows you to do
00:27 - HTML CSS JavaScript you can use the
00:29 - p5.js library with code pen I have used
00:31 - it in some previous videos I will
00:33 - include links to those videos below and
00:35 - this guest tutorial featuring the
00:38 - amazing cat small will include all of
00:41 - its code as a code pen link to in this
00:44 - video's description ok so what are you
00:46 - here to watch cat small is a product
00:49 - designer user researcher game designer
00:51 - web developer artist she has an amazing
00:54 - website link all her bio and links to
00:56 - all of her stuff are in the description
00:58 - below one of the things she does a lot
01:00 - of his game design and she knows how to
01:02 - build games with a JavaScript library
01:04 - called phaser and this is a library that
01:07 - I have not explored in any of my
01:08 - tutorials it's not something that I knew
01:10 - about before cat came to show it and so
01:12 - she's gonna walk you through what phaser
01:14 - is and how to build a simple game with
01:16 - phaser I should mention that what you're
01:18 - watching is an edited archive of a live
01:21 - stream that Kat and I did so you might
01:23 - if you watch that you might have seen
01:25 - some of this content already but the
01:26 - core tutorial information and as well as
01:29 - some QA with cat are included in this
01:31 - particular video so thank you so much
01:33 - for tuning in and I'll let cat take it
01:37 - away ah cool
01:39 - hi this is phaser game development I'm
01:41 - going to show you how I make it browser
01:44 - friendly games so firstly I am cat small
01:48 - I am a game programmer a game designer
01:51 - I'm also a product designer at Etsy and
01:54 - I also make lots of art mostly on
01:57 - Instagram and sometimes on Twitter if
02:00 - you want to play my games you can play
02:04 - them at cat small niche I owe it's like
02:07 - wherever right there
02:08 - yeah but we're not here to only talk
02:12 - about making
02:13 - today we are here to talk about making
02:15 - games ah so I often use a JavaScript
02:21 - framework called phaser and I use it
02:24 - because I am mostly a web programmer by
02:27 - day and so it's much easier for me to
02:31 - switch contacts if I'm using the same
02:34 - language you can make language or you
02:36 - can make games with lots of languages
02:38 - for example c-sharp if you use unity but
02:42 - I find that phaser is much closer to
02:44 - what I'm using during the day so it's
02:46 - really convenient and specifically
02:48 - phaser is an open-source JavaScript
02:50 - framework and my framework that means
02:53 - that it's a set of code that enables you
02:55 - to make things without having to
02:57 - reinvent the wheel things that have
02:59 - already been created lots and lots of
03:02 - times
03:02 - for example physics and games like we've
03:06 - pretty much standardized that so it's
03:07 - easier to use a framework than having to
03:09 - write your own physics engine from
03:11 - scratch also open source means that
03:15 - phaser is free to use and it's
03:17 - constantly updated but usually when you
03:20 - use phaser you actually pull a version
03:22 - of it to your computer so that's like
03:24 - whatever version you're using at that
03:26 - point in time is the one that you will
03:27 - continue to use so you don't have to
03:29 - worry about it being updated randomly on
03:31 - you which if you've used certain game
03:34 - engines you're very familiar with the
03:36 - suffering of random updates and the
03:39 - other thing that's really nice about it
03:41 - being open source is that you can
03:42 - actually contribute to its development
03:44 - so lots of people are contributing to
03:47 - making phaser better it also has a
03:49 - patreon that you can support which is
03:51 - really cool and the other nice thing is
03:54 - that originally phaser was built by a
03:55 - company that actually also made and
03:58 - makes html5 games and they made this
04:00 - tool because when when flash was
04:05 - basically destroyed by Apple back in the
04:07 - day when they announced that the newest
04:09 - iPhone was not going to include flash
04:11 - they decided that it was time to figure
04:14 - out a good framework for the platform
04:18 - for the web and there weren't a lot of
04:21 - tools at the time that we're doing such
04:23 - a good job so they took it into their
04:25 - own hands and
04:25 - that's how we ended up here so the
04:28 - newest version of phaser the current
04:31 - version is the third one it's like it
04:34 - was 3.0 now they're at like 3.2 or
04:36 - something like that and that's the one
04:38 - that I'm gonna be working in today they
04:41 - are still working out some kinks which
04:42 - is why it's at point two at this point
04:44 - but the improvements to this version
04:47 - include a better game camera new
04:50 - properties for game objects which make
04:52 - it easier for you to custom build things
04:55 - that you want to build it also has
04:57 - crisper pixel art which honestly for a
05:00 - while was pretty challenging because
05:02 - sometimes the sprites would be fuzzy and
05:04 - now there's actually built-in support
05:06 - and you can just type one thing that
05:08 - says pixel art equals true and then all
05:10 - the art is beautiful which is amazing
05:12 - and there's also an improved scene
05:14 - manager so that's how you actually build
05:17 - levels in the game and now they've done
05:19 - a lot of reworking to that so before I
05:23 - show you how I work in phaser some
05:26 - things that I wanted to note really
05:27 - quickly are I'm just gonna kind of go
05:30 - through them but every framework in game
05:32 - engine has its own quirks so these are
05:34 - just some things to keep in mind it's
05:36 - not like a oh no don't use this it's
05:38 - more of a hey you should keep this in
05:39 - mind if you decide that you want to work
05:41 - with phaser so firstly phaser uses
05:46 - JavaScript as I mentioned so for
05:48 - security reasons it requires a server to
05:50 - run so when you're working on the game
05:52 - on your local computer you can create a
05:55 - local server using Python or PHP you can
05:58 - use your command line to create one of
05:59 - those or you can use a program like
06:01 - xampp or any of the other programs that
06:04 - you might have used in the past if
06:05 - you've ever worked with WordPress for
06:06 - example to host a website what this does
06:10 - is it allows you to run phaser games
06:12 - without an internet connection so you're
06:14 - basically replicating what it's like to
06:16 - actually play a game your game for
06:19 - example on the internet next phaser uses
06:24 - JavaScript again and usually when you're
06:26 - writing JavaScript you're working in a
06:27 - code editor there are a couple of visual
06:30 - editors out there but because phaser is
06:32 - constantly updated in it's open source
06:34 - and these
06:35 - editor's are not usually affiliated
06:37 - directly with fazer those might be a
06:39 - couple of versions behind so if you for
06:42 - some reason are really attached to the
06:44 - person that I'm about to show you be
06:47 - warned that some of the visual editors
06:48 - may not be that up-to-date yet so if
06:51 - you're interested then I would suggest
06:52 - maybe just using sublime text or vim if
06:55 - you're that kind of person or whatever
06:57 - code editor you prefer and finally if
07:02 - you have made a game before then you
07:04 - have heard of the game loop and usually
07:07 - that just involves creating the game's
07:09 - initial state so that's known as to
07:11 - create function and then you update the
07:13 - game every millisecond or so and that's
07:15 - called the update function so the create
07:17 - function runs ones and then the update
07:19 - function continues to run as the game is
07:22 - updated phaser actually has a third part
07:25 - of the sleep that runs before the other
07:26 - two and that's called the preload
07:28 - function and what that does is it allows
07:30 - you to preload files from the server or
07:33 - around the internet so for example if
07:35 - you wanted to use google fonts that is
07:37 - how you would preload google fonts
07:39 - before you actually ran the game so I'm
07:42 - going to show you what all that means if
07:44 - you're kind of like what
07:45 - so now that you know these things we can
07:48 - actually start and I'm gonna walk
07:49 - through how I made a very simple game
07:52 - using phasers newest version so what I'm
07:55 - gonna do first is I'm going to show you
07:57 - how I usually separate my files because
08:00 - usually I am making games that have
08:01 - multiple scenes or levels and then after
08:06 - I do that I'm gonna show you a simple
08:08 - game that I made using phasers template
08:10 - art which you can see up here looks
08:13 - really cute thank you phaser for
08:15 - actually including some really adorable
08:16 - art to use and it only has one scene so
08:20 - I put everything in one file so that you
08:21 - could go through and look at it and I'm
08:23 - gonna be using code pen which was really
08:25 - convenient and what you can do after
08:26 - this or even during this if you want to
08:28 - walk through at the same time is you can
08:31 - go to code pen do slash cat small and
08:33 - the stuff is there which is great so
08:38 - hopefully this will show you two ways
08:39 - that you can work with phaser one for
08:41 - simpler games and then
08:43 - once you are feeling like going more
08:45 - advanced then you'll be able to easily
08:48 - do that as well cool so this is what a
08:51 - version of my templates usually look
08:55 - like I'm gonna really quickly attempt to
08:57 - see if I can resize this because the
09:00 - font is so small oh there it is it's so
09:03 - convenient maybe like 20 okay cool so
09:09 - how I usually organize things is that I
09:11 - have an index file that kind of just
09:14 - like holds and loads all of the the
09:18 - JavaScript his phaser is all JavaScript
09:20 - so what you usually want to do what you
09:22 - have to do is you have to load in the
09:25 - phaser JavaScript first and you can
09:28 - download that from phaser I oh now you
09:32 - see all my bookmarks they're great and
09:35 - what you do is you just go to download
09:38 - and then you can download it and it's
09:39 - awesome
09:41 - then what you do is you include any game
09:45 - files that you wanted to include so in
09:48 - this case I usually have global
09:50 - variables I also have a file that
09:52 - preloads all of my files up front just
09:55 - because I would rather have there be one
09:57 - time period where everything is pre
10:00 - loading at once and then I don't have to
10:03 - worry about my scene my scenes
10:04 - constantly loading between them or
10:06 - things loading between my scenes but you
10:09 - can organize things however you want
10:11 - which is great and then what I do is I
10:13 - usually have a main menu a gameplay
10:15 - state and then I would have a Wednesday
10:16 - to lose state etc however many scenes I
10:20 - wanted to have in my game I would put
10:22 - them in separate files and I'll show you
10:23 - what those contain in a moment so once
10:26 - all these files are load loaded which is
10:28 - why they are in the head tag in your
10:30 - HTML what you do is you have a body tag
10:33 - which is how every website is created
10:35 - and inside the body tag I put I usually
10:39 - this is where I usually put my
10:40 - JavaScript specifically for
10:41 - instantiating the game so what I do is I
10:44 - say on page load create this game config
10:47 - that contains a couple of things
10:49 - including the type of this or rendering
10:52 - that we're going to use it can be a
10:53 - phase
10:54 - you can have phase or choose it
10:55 - automatically there are also a couple of
10:58 - other display settings that you can
10:59 - choose from you can tell phaser that the
11:02 - container should have a certain width
11:03 - and height and then for the scene we're
11:07 - actually giving in this object that's
11:09 - called my game dot scenes which I will
11:11 - tell you about more in a second and then
11:14 - once you actually have the configuration
11:16 - you can say variable game is a new
11:20 - version or a new instance of the phaser
11:23 - game class and you're pulling in the
11:25 - config that you just created so next I'm
11:29 - going to go to the next file that was
11:31 - included up here which is the global
11:32 - variables where all I am doing is saying
11:34 - my game equals blah and then the scenes
11:38 - contain an array of scenes and then I
11:40 - also defined a frame rate and this is
11:42 - where I put any other thing that I want
11:44 - to kind of refer to a bunch so that when
11:46 - I if I ever need to adjust something
11:47 - across all my files I just have it in
11:50 - one convenient spot everyone kind of
11:52 - does their global variables in a
11:53 - different way and I just found this to
11:55 - be the most convenient tbh so next what
11:58 - I do is I created two states as I
12:00 - mentioned there's one or a three States
12:02 - sorry there's one that I just used for
12:04 - pre loading so in the preload state I'm
12:06 - creating a new class of this scene
12:08 - called preload and then what I'm doing
12:11 - is I would put anything that I wanted to
12:14 - load in first in here and then next I
12:17 - would just start the main menu and then
12:20 - the same thing in the main menu I would
12:23 - just right now there's nothing in it so
12:25 - this is just a template but I would
12:27 - start the gameplay but if you wanted to
12:30 - actually do something you would do that
12:31 - stuff in the create section so one thing
12:35 - you'll also note is at the bottom of
12:36 - each of these you I wrote some code that
12:39 - adds the scene to the list of scenes
12:42 - that were in the global variables and
12:44 - that just makes sure that all these
12:46 - scenes are going in the order that I
12:48 - want them to and they're going in the
12:50 - order that they are loaded on the
12:52 - original HTML page so that's how I
12:54 - usually create my more complex games if
12:57 - your brain has exploded a little bit
12:59 - that's fine but what I'm going to do now
13:01 - is go through a simpler game that I made
13:04 - in a single JavaScript
13:06 - and there is no HTML involved at all I
13:10 - wrote some minor CSS just so that the
13:12 - spacing is a little bit tighter on the
13:15 - page itself but everything else is
13:17 - contained in this singular JavaScript
13:18 - file so if you're just using a singular
13:21 - file what you can do is define and
13:24 - declare all of your objects in a single
13:26 - place so at the top I usually put the
13:28 - main things that I want my game to be
13:30 - aware of the player which will
13:33 - eventually be defined more the enemies
13:35 - which is for now an array the number of
13:38 - enemies I want to spawn which I can
13:39 - change at any point from right here for
13:42 - now the enemies that are left are the
13:44 - number of enemies to spawn but later
13:46 - that's going to change because the point
13:48 - of this game is that we're gonna clear
13:49 - the enemies when they're weak so we're
13:52 - going to go up to them we're going to
13:53 - touch them and then if they are not weak
13:56 - then we lose health and that's kind of
13:58 - how the game works there's like a
14:00 - positive and a negative reinforcement
14:01 - that we're giving to people here so
14:05 - right now we're gonna define at the
14:08 - beginning that maybe the enemies are
14:09 - safe and then over time that's going to
14:11 - change we have a number of hit points
14:12 - with just five we are defining a string
14:16 - and then an object so that will later
14:18 - contain that string the score which is 0
14:21 - etc we've got some text objects and then
14:25 - we also have a couple of other things
14:26 - that we're including which we'll say is
14:27 - the game has the game started yes or no
14:31 - and then has the game finished yes or no
14:33 - and that's how we know if the game is
14:34 - currently running so then everything is
14:37 - contained within this gigantic game play
14:40 - state which is super fun so how it works
14:45 - is just going back up to the top here so
14:49 - as I mentioned before we have a lot of
14:53 - stuff in this one file or in this one
14:55 - scene so we're in this scene we're
14:58 - actually going to do the following I'll
14:59 - play through it really quickly so when
15:02 - you click on the game it starts and then
15:04 - you can move around and when they are
15:07 - pink they are not safe when they are
15:10 - inverted they are safe for you to touch
15:12 - so if I go up to one right now my HP
15:15 - went down
15:16 - Oh No Oh No game over and then I didn't
15:22 - really include a easy way to actually
15:23 - restart the game so I just rerun it so
15:26 - that's what we're making if you were
15:27 - curious okay so cool so the first thing
15:31 - we have to do is actually load the
15:33 - assets for this game so how you do that
15:35 - is there are a couple of types of images
15:38 - and sprites that are included in phaser
15:41 - one is a straight up image the other
15:43 - type is a sprite sheet so you can say
15:45 - how much a single frame width and height
15:47 - are for a sprite sheet itself for images
15:51 - you just say hey load this image and
15:52 - this is what it's going to be called so
15:54 - I have an object called sky I have an
15:56 - object called dude and I have an object
15:58 - called Mattie or these are like sprite
16:00 - sheets and images rather they are not
16:02 - objects yet and those are the only
16:04 - things that I'm including in the preload
16:06 - function so what I do next is I go down
16:09 - to the create function where it which is
16:11 - where you set up the actual scene once
16:13 - the files have loaded so what I'm doing
16:16 - here is actually creating the
16:17 - backgrounds and I create the background
16:18 - first because all the other objects I
16:20 - create are gonna go on top of the
16:22 - background so you want to make sure that
16:23 - you put that in first and you
16:25 - instantiate things in the order that you
16:27 - actually want them to show up on the
16:28 - screen although you can also change the
16:30 - ZN index which is like x y&z so you can
16:34 - change the direction or the order of
16:36 - things if you want to as you're going
16:38 - through but why do that this is a simple
16:40 - game so we're just gonna go with it so
16:43 - what I do next is I actually create the
16:45 - player and then I'm using phasers
16:49 - animations properties to create these
16:52 - global animations that I can use at any
16:54 - point in time so just breaking down the
16:56 - player really quickly how it works when
16:59 - you want to create a sprite object is
17:01 - you say this don't add that sprite
17:04 - you'll notice that there's this physics
17:05 - thing in here and I'm gonna talk a
17:07 - little bit more about that later but
17:08 - phaser has a phaser three especially has
17:12 - a new way that they're defining physics
17:13 - so it's actually defined from a global
17:16 - standpoint rather than within the
17:18 - individual scene so this dot physics
17:21 - just refers to the game object which has
17:24 - physics in it and we're adding the
17:26 - sprite to the game object
17:29 - it is at the 32x and it is at the height
17:33 - that we define below I'll describe the
17:35 - Hat or show that more in a second and
17:37 - it's using the image that we called dude
17:39 - which if you remember was dude so
17:43 - hopefully that makes some sense and what
17:47 - we're gonna do next is again I mentioned
17:49 - creating these image these animations so
17:51 - what we're doing is we're naming it this
17:54 - key is going to be called left or this
17:55 - animation is going to be called left the
17:58 - frames that we're using our dude the
18:00 - first frame and that's it and then we're
18:04 - creating one that's down left right
18:06 - we're doing down writing up as well so
18:10 - if we go over here what that looks like
18:12 - is this and I'll show you how we call
18:15 - that as well and some time I'm just
18:17 - going to leave that flashing cause it's
18:19 - cute just kidding so now what we're
18:21 - doing is we're saying that the player
18:24 - should actually collide with the edges
18:26 - of the screen which is useful because we
18:28 - don't want the player to walk off the
18:30 - edge and then disappear it's not exactly
18:32 - fun and then what we do once we've
18:35 - defined all the stuff around the players
18:37 - we're saying hey this is how we can
18:41 - include keyboard input because we're
18:42 - gonna need that at some point so what
18:44 - you do in that case is you say the
18:46 - cursors and this are going to be the the
18:50 - game object should take in the input
18:53 - method of the keyboard and it should
18:55 - create the cursor keys which are up down
18:56 - left and right arrows so it's convenient
18:59 - that phaser again just has some of these
19:00 - things built-in so you don't have to go
19:02 - about defining the keyboard keys
19:04 - manually which is not fun and you can
19:08 - have this in here or not I just put it
19:10 - in here because whatever when you're
19:12 - programming it like 9 p.m. or whatever
19:14 - you're kind of like yeah that makes
19:16 - sense
19:16 - which order should I start this in
19:18 - anyway moving on so then what we do
19:20 - after we've created the the player and
19:23 - worked with defining the keyboard keys
19:26 - is that we create the enemies so the
19:29 - enemies we're going to use we're gonna
19:31 - create a group of them firstly as I
19:34 - mentioned before and we're going to use
19:35 - the image that's called baddie and we
19:38 - are going to repeat this the number
19:40 - times that we created defined and the
19:43 - enemies to spawn above so if you don't
19:45 - remember what that looks like it's up
19:47 - here it's this and it's that cool so
19:52 - what we then do is we go through each of
19:55 - these enemies that we created and make
19:58 - sure that it's actually on the screen
20:00 - which is fun and we do that because
20:03 - otherwise we want to actually like
20:05 - randomize where they're showing up so
20:07 - that's what this code is here if you
20:09 - want to walk through this in the actual
20:11 - code pen that I created it's there but
20:14 - what it's basically saying is if it's
20:16 - off the screen then put it back on the
20:18 - screen and it's doing that for both the
20:21 - X and the y vertices so just making sure
20:25 - that these things are on-screen if they
20:27 - are like half cut off for some reason
20:29 - it's fun and that's just like check
20:32 - saves anyhow moving on we also want to
20:34 - create animations for the enemies
20:36 - because we have a safe version and an
20:38 - unsafe version and then once we do that
20:41 - we want to update the physics colliders
20:43 - like the actual bodies for them and
20:46 - there's a way to see what that looks
20:47 - like that I'll show you in a moment
20:49 - after I go through the create so you can
20:50 - see what this config looks like for
20:52 - example and then what I'm going to do is
20:55 - generate the actual text for the score
20:57 - I'm going to put it at 32 X 24 Y and
21:00 - it's going to use the score string that
21:02 - we made above plus the actual score
21:04 - number which at first is 0 and we're
21:06 - going to keep it invisible until we
21:08 - actually let the player click the screen
21:10 - and we do the same thing for the HP and
21:13 - then we actually generate our intro text
21:16 - and we show it on the screen which is
21:18 - why we don't have the visible equals
21:20 - false there and then what we do is we
21:23 - say when the input is or when the game
21:26 - object itself is clicked and the game
21:28 - has not started yet start the game and
21:31 - then we generate this timer and when
21:34 - that timer runs what its gonna do is
21:37 - switch the enemies from safe to unsafe
21:40 - and then what we also do is we say that
21:42 - if the player and the enemies overlap
21:45 - and the enemies are actually like a
21:47 - group so every single one of these that
21:49 - you see on the screen is a part of that
21:51 - group so
21:52 - player interacts with any of these
21:54 - enemies then it's going to create it's
21:57 - gonna run this collide with atom a
21:58 - function so now what I'm gonna do very
22:00 - quickly is go down here to show you what
22:02 - the config looks like it's probably like
22:04 - what the heck this seems like there's
22:06 - more involved and there is so these
22:10 - parts you already seen this I mentioned
22:13 - earlier pixel art equals true is what
22:15 - actually makes the screen look much more
22:17 - crisp so if I were to not include that
22:20 - things would look very fuzzy and we just
22:22 - have a pixel art game so it's nice this
22:24 - is the physics definition that I
22:26 - mentioned so we're using arcade physics
22:28 - so if I change this debug to true that's
22:31 - how you spell true definitely how you
22:32 - spell true what will happen is you'll
22:36 - actually see the physics bodies so
22:39 - arcade physics is straight up just
22:41 - squares and rectangles but there are
22:43 - more complicated types of physics that
22:44 - you can use as well that involve
22:46 - actually defining the shapes more you
22:49 - can use circles and things like that to
22:50 - you in those types of physics what
22:52 - arcade physics is very easy for if
22:54 - you're just making a simple game like
22:55 - this one so now that you know a little
22:59 - bit about that very simply you can also
23:01 - have gravity in your game but because
23:04 - we're just working in this like very
23:05 - abstract XY state where we just want
23:09 - people to like walk around and not
23:11 - really care about gravity we don't have
23:12 - any but it's really important that you
23:13 - do have physics enabled because you want
23:16 - the player to be able to actually
23:17 - collide with objects so it's very
23:19 - important that they have these bodies
23:21 - there which is the weirdest thing I've
23:23 - probably ever said and then we have one
23:26 - scene so all we say is that the scene is
23:28 - the gameplay scene and it's just easier
23:30 - because then otherwise your your object
23:32 - for this config would be massive and so
23:35 - at least breaking it up a little bit by
23:36 - having the gameplay scene as its own
23:38 - little object is more convenient for
23:40 - like reading through the code or at
23:42 - least that's how I felt about it so now
23:44 - that we've looked at that a little bit
23:46 - and you've seen the create let's
23:49 - actually go down to the update function
23:52 - which is where a lot of other stuff
23:54 - happens okay so what we do is we make
24:00 - sure that the players velocity when the
24:02 - game
24:03 - when the player is not pressing a button
24:05 - we want to make sure that the player
24:07 - objects velocity is at zero so they're
24:10 - not just like shooting off somewhere
24:11 - basically and then what we want to do is
24:14 - say if the game started and has not
24:16 - finished
24:17 - then if the cursors are moving dead or
24:21 - if they're pressed then we should move
24:22 - the player in whatever direction that
24:25 - the cursor pressed wants it to go in
24:27 - so that's left/right up/down cool and
24:32 - then what we do next is we make sure
24:35 - that the score is updated at any point
24:37 - and that's literally all that we're
24:39 - doing in this function so it's pretty
24:41 - great but to just break things down a
24:43 - little bit we're studying the velocity
24:44 - which is another physics property to 150
24:47 - in any directions so that's positive
24:50 - negative in the up the horizontal or the
24:53 - vertical and then we are just saying
24:55 - that the scoretext object should be set
24:58 - to the updated version of the score and
25:00 - the score string or the hit points and
25:03 - the hit point string which are objects
25:05 - that we defined in the create function
25:06 - so everything kind of refers back to
25:09 - things that were already created which
25:10 - is very nice and then the last thing
25:12 - that I did you probably noticed that
25:15 - there were a couple of functions in
25:16 - there and you might have been like what
25:17 - are those so there are there's a
25:19 - function called switch enemies state
25:21 - that changes the enemies from safe to
25:23 - unsafe so when the game is actually
25:25 - running which is really important
25:27 - because there's a game over area in this
25:29 - when the game is running if the enemies
25:32 - are not safe which you can write in a
25:33 - variety of ways and I realized that this
25:35 - is the very simple way easier for just
25:37 - showing people if the enemies are we're
25:42 - not safe then make them safe so you're
25:45 - just like switching binaries there are a
25:47 - variety of ways that you can write this
25:48 - this is one of the simplest and easiest
25:50 - ways and then you play the animation
25:52 - specifically on the enemy object so what
25:56 - you have to do is you say for each of
25:58 - the children in the enemies group go
26:01 - through them and play this animation
26:03 - that's called safe for that enemy which
26:06 - is again referenced in the parentheses
26:09 - of that function and then you do the
26:11 - same thing for the unsafe parameters as
26:13 - well and then we also have one called
26:16 - collide with
26:17 - to me which is happening between the
26:19 - player and the enemy when they collide
26:21 - to each other if you saw that overlap
26:23 - earlier that overlap property is what is
26:26 - referred to here so if the game has
26:28 - started and has not finished again just
26:31 - useful if the enemies are safe or are
26:34 - not safe rather then you subtract hit
26:36 - points and if the enemies are safe then
26:38 - you add to the score and then when the
26:41 - enemy is touched in either either way
26:44 - you want to make sure that you're
26:45 - actually disabling it so what that does
26:47 - is it hides it basically and doesn't
26:49 - make it a functioning part of the game
26:50 - anymore and then you subtract from the
26:52 - number of enemies left and then what you
26:55 - do is you end the game whenever
26:57 - necessary so if the hit points are 0 or
27:00 - are less than 0 you want to actually
27:02 - kill the game and you can I pulled out
27:07 - kill game because there are a couple of
27:08 - things that were being written twice as
27:10 - you can see below and so it was easier
27:12 - to just kind of like write them once and
27:13 - reference them so you kill the game and
27:15 - then you change the intertext to say
27:17 - either game over or greatjob you won I
27:19 - did not win
27:21 - so it says game over rerun to play again
27:24 - but if I did win by making sure that my
27:27 - hit points were over zero and the
27:29 - enemies left were less than zero then
27:31 - that would be cool also we should
27:34 - probably have that anyway continuing so
27:38 - we have this function that's called
27:39 - start game that's run only when you
27:42 - click when you click here so that's this
27:45 - so what that does is it hides the it
27:49 - hides some things and it unhides other
27:50 - things so it sets intertext to false in
27:54 - terms of visibility and then it sets the
27:57 - score text to actually show up the same
27:59 - with the hit point text and then it says
28:01 - that the game has started but the game
28:02 - has not ended Wow and then finally the
28:05 - last thing that is a function in here is
28:08 - when we kill the game so we say that the
28:09 - game has ended the player should not
28:11 - move anymore again really important the
28:15 - intro and the intro text is now visible
28:18 - again but it's changed to a different
28:19 - text you can also pull those out into
28:21 - separate like win or lose things if you
28:23 - wanted the score text and the hit points
28:27 - text are no longer visible and that's
28:29 - pretty much what happens
28:30 - so just running through this again you
28:34 - just kind of like poke around and hope
28:36 - that you don't oh no no no no yes gonna
28:43 - win this time it's the simplest of okay
28:47 - cool
28:47 - oh that's why I included the less then
28:49 - see this is what happens when you live
28:51 - edit your code anyway imagine that there
28:54 - was one less there and all as well okay
28:58 - so if you wanted to learn a couple of
28:59 - more things about phaser specifically as
29:01 - I mentioned the official the official
29:07 - phaser website is phaser dot IO it's all
29:10 - the way up there yeah and phaser three
29:15 - examples if you're interested in the
29:16 - newest version of phaser three then you
29:18 - can go to labs phaser do the template
29:22 - that I made the first thing that I
29:23 - showed you is available at this very
29:26 - long link or you can just go to code
29:28 - pentaiah slash Kat small you can just go
29:30 - to that part and then you can click
29:31 - around you can see under my projects
29:34 - there is this one template if you are
29:36 - interested in the sample game that I
29:37 - just showed you it's at this pen with
29:39 - the gvj EP m that one or again you can
29:44 - just go to code pen dot io / Kat small
29:47 - if you have any other questions you can
29:49 - find me on the Internet
29:50 - you can tweet me or you can visit my
29:52 - website or if you want to play my games
29:54 - it's that cat small HD IO thank you it's
29:58 - been real yell at me stand here and talk
30:10 - that mic will pick me up so let me look
30:14 - for some of these questions okay so I
30:15 - actually this was my question to that I
30:17 - was kind of curious about there's some
30:17 - really specific technical questions but
30:19 - a very sort of broad general question we
30:21 - can ask by math blank so have you used
30:23 - other game frameworks and what
30:26 - advantages
30:27 - our disadvantages to space or over other
30:30 - ones some that people somebody I don't
30:32 - know anything about these someone in the
30:33 - chat mentioned construct yeah yeah
30:37 - so I firstly used construct two I've
30:39 - also used unity and I've tried with a
30:43 - couple of other ones like back in the
30:44 - day I think I don't know if impact is
30:46 - still like a thing but anyway I tried
30:48 - that I've also tried some stuff with
30:50 - like game maker studio what I'll say is
30:53 - that phaser is really good for making
30:57 - games that you want to host on the web
31:00 - and also package for like applications
31:02 - and things like that
31:03 - it's like specifically made for that
31:05 - construct to you is as well but it's
31:08 - much it's more challenging to work with
31:10 - if you know how to program which is a
31:13 - weird thing to say
31:14 - you can definitely like build your own
31:15 - plugins and stuff like that using actual
31:17 - programming but like I found that for a
31:20 - person like me who just wants to be able
31:23 - to like pack away at stuff and like just
31:25 - directly program phaser is much better
31:29 - for like html5 game development
31:31 - specifically I generally have a fun time
31:35 - with it I feel like unity is is great at
31:37 - what it does if you are looking to
31:39 - launch on consoles or things like that
31:41 - but especially lately as Chrome has
31:44 - changed the way that it works with
31:47 - programs like unity for example you
31:50 - can't at least last I checked you
31:52 - couldn't host unity game or you couldn't
31:54 - play unity games on Chrome like very
31:57 - easily and I don't know if that's
31:59 - changed since the like the last five
32:01 - months but that was a really big unity
32:03 - killer in terms of web game development
32:05 - for me and I specifically want to make
32:07 - things that anyone can play and phaser
32:10 - because it is just a JavaScript
32:11 - framework that you literally are hosting
32:14 - on a webpage is the easiest way to do
32:16 - that so I find that if that's what you
32:18 - want to do or if you want to also have a
32:20 - game that you can play on the web that
32:21 - is also working on apps it's perfect for
32:23 - that use case and so right so you could
32:26 - pack it you can use phaser and package
32:28 - your game into losing like PhoneGap yeah
32:30 - and make it
32:31 - to make an electron app yeah like a
32:33 - desktop exactly awesome it's great
32:35 - someone asked actually cuz they noticed
32:37 - there's like phase r3 yeah like two
32:40 - maybe some of the tutorials or some of
32:42 - these like few Sofia's kind of knew it
32:43 - if you're a total beginner it's best to
32:45 - get started with phaser three mm-hmm
32:47 - just to be using the most current good
32:49 - question um so I would say that there is
32:53 - a very basic getting started with phaser
32:55 - that's like using the newest and it's
32:58 - like the newest tutorial that's using
33:00 - the newest version so if you're looking
33:02 - to get into using phaser I would highly
33:04 - suggest that if you feel like you need a
33:06 - lot of documentation there is like the
33:09 - labs link that I mentioned up there and
33:12 - that's really helpful but I will also
33:14 - say that there is just because of time a
33:17 - lot more documentation on phaser too but
33:20 - that is not the that's not the way it's
33:23 - working any pores so I wouldn't really
33:25 - recommend it because they did a pretty
33:27 - large rewrite so I would highly
33:28 - recommend trying to use the newest
33:31 - version and just working with that
33:32 - tutorial there's a couple of other
33:33 - tutorials as well and there's like many
33:35 - many more that are being added day by
33:37 - day and week by queex so I would
33:39 - recommend trying the newest thing and
33:42 - just seeing how that works for you and
33:44 - if you find that you are just looking
33:46 - for something to just try making a game
33:49 - in general maybe I don't know I feel
33:51 - like it's easier to just like go with
33:52 - what is the newest thing it's kind of I
33:55 - mean there might be some conceptual
33:57 - aspects that probably go across later
34:00 - but I think it probably makes sense to
34:03 - work with the most recent one and they
34:04 - kind of help contribute to it right yeah
34:08 - exactly there's like a forum and
34:10 - everything so you can ask all these
34:11 - kinds of questions in terms of like I
34:13 - can't figure out how to do this one
34:14 - thing and there is no document for it
34:16 - yet and then you can help actually make
34:18 - it which is a great point
34:19 - another question that Elendil in the
34:21 - chat asks which I was curious about - I
34:23 - mean I think I know the answer to this
34:24 - but if you wanted to do something that's
34:26 - a multiplayer and network based that's
34:28 - something that you would probably I
34:29 - guess do separately that you'd have to
34:32 - you wouldn't you know you'd most likely
34:35 - as far as I know I haven't really delved
34:37 - too much into that yet but my assumption
34:40 - would be that again you because it's
34:42 - like straight-up just JavaScript you
34:44 - could
34:44 - make that work pretty simply which is
34:46 - convenient so I think we get kind of
34:48 - rough I guess I'm just curious just
34:49 - generally speaking like where do you do
34:53 - independent game developer I assume so
34:55 - where do you come up with your ideas for
34:57 - games and do do user testing like house
34:59 - that is a huge question obviously you
35:01 - brought how does that like how's that
35:05 - process for you how long does it take to
35:06 - make it go very loosely yeah so some
35:09 - games I make in like three days with a
35:11 - couple of people like I go to a lot of
35:12 - game jams which are like usually like 24
35:16 - or 48 hour time periods where you sit in
35:18 - a space with people and you you have an
35:21 - idea usually that's based on like a
35:22 - theme so they like they give you a theme
35:23 - and then they're like go have fun and
35:26 - then you have 48 hours to make the thing
35:28 - and usually the elongated versions of
35:31 - that when I've made games for I've made
35:33 - a game that took like nine months I made
35:35 - a game for one of my thesis projects I
35:37 - also I'm still working on some and I'm
35:41 - working on them for like several years
35:42 - but usually it's like the idea is either
35:45 - like inspired by a theme from the game
35:48 - jam or it's like oh this random part of
35:50 - my life would be really cool as a game
35:53 - so like one of the things that I worked
35:55 - on my first actual game that I coded by
35:58 - myself which was like very exciting was
36:01 - a game where you are trying to get to
36:02 - the train and you have to like shove and
36:04 - kick people out of your way and they
36:06 - just like fly around which is like my
36:08 - first use of fun games physics and that
36:10 - was really fun and it's like a very real
36:12 - slice of life kind of thing and I find
36:14 - something really fun about those kinds
36:17 - of games and then usually how it works
36:18 - is you get the idea and then I figure
36:20 - out like okay now that I know like the
36:22 - narrative idea slash the main mechanic
36:24 - like how does that work in a larger
36:27 - context and then I try to figure out
36:30 - like what the rules are what this world
36:31 - of the game is and then I just kind of
36:35 - like start prototyping and experimenting
36:37 - get the basics working I usually do a
36:40 - lot of play testing with people even if
36:42 - it's a 48 hour game I try to find
36:44 - someone who can just play it like
36:46 - friends and people like sort of you
36:48 - directly sitting with a watching them
36:49 - play like sort of release like tweet
36:52 - something out
36:53 - yeah so I've done a couple of things
36:55 - where I've had people like use a Google
36:57 - Form and I'll just like send it out on
36:58 - Twitter or like Facebook and I'm like
37:00 - hey can you just try this thing and like
37:02 - see what it's like
37:03 - just like fill out this form and like
37:05 - let me know your feelings about it and
37:06 - people always have a lot of really
37:08 - helpful things to say yeah so I'm a huge
37:10 - fan of just getting stuff out there and
37:12 - seeing what people think awesome thank
37:15 - you so much cats for a wonderful video
37:17 - tutorial that was amazing I also just
37:20 - really appreciate having content on this
37:22 - channel of guest tutorials about stuff
37:23 - that I knew nothing about if you make
37:25 - something with phaser from this tutorial
37:28 - please share with me in the comments or
37:30 - on Twitter or all the other places on
37:32 - the internets where you can share those
37:33 - things thank you so much to Kat and
37:35 - thank you also to code pen for
37:37 - sponsoring this video all of the code
37:40 - that Kat wrote is available as a pen on
37:42 - code pen but you see behind me
37:44 - link to in this video's description so
37:46 - you can check it out and make your own
37:48 - version of it by following the links so
37:51 - see you again
37:52 - sometime maybe in another video maybe I
37:54 - guess okay goodbye
37:59 - [Music]
38:04 - you