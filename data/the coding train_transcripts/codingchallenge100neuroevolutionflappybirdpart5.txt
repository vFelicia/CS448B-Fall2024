00:00 - Oh welcome to of this multi-part flappy
00:05 - bird coding challenge I anticipate only
00:08 - at least 600 more parts to go I think
00:11 - this might actually be the last one so
00:12 - look what I've got I've got this bird it
00:14 - jumps it doesn't jump it fits through
00:17 - pipes it does what I have always dreamed
00:20 - it would do but I want here's the thing
00:23 - now I have this and what if I just by
00:26 - accident I'm over here and I'm like whoa
00:28 - whoops and I hit refresh that bird that
00:31 - bird that I've loved who's gone forever
00:33 - I will never get it back never I might
00:36 - be able to get another bird that's
00:37 - similar that does as well but I will
00:39 - never get that original bird back
00:42 - however I'm gonna that's why I'm gonna
00:45 - add another feature this thing so the
00:48 - feature that I'm going to add is save
00:49 - and load a particular bird okay so I
00:54 - what what I want to do let me let it let
00:57 - me let it train again
00:58 - so I'm gonna let sit that let this go
01:00 - actually the thing is when I when I tab
01:03 - away from the Browse hurts the browser
01:05 - is smart and stopped the animation from
01:07 - going so it's actually not continuing to
01:09 - train but that's fine and what I want to
01:11 - do actually there is a function inside
01:14 - of the neural network library called
01:16 - serialize and deserialize no I actually
01:18 - didn't implement these functions in a
01:20 - tutorial you can if you want to see how
01:22 - the neural network library was built I
01:24 - have a ten-part or something
01:26 - video series building the whole library
01:27 - but through a pull request I have
01:30 - returned to show you the actual pull
01:32 - request where the serialize and
01:34 - deserialize methods came in thank you -
01:36 - engine feeder 101 who made this pull
01:38 - request on 3/10 which was a little while
01:41 - ago so if I go back to those functions
01:43 - you'll see that look at this JSON dot
01:46 - stringify this well okay so let's say I
01:49 - have a simple class like let's say I
01:50 - have a particle class class boy lots of
01:55 - squeaking going on here class particle
01:58 - and in the constructor function I set
02:03 - like this dot X equal to something maybe
02:06 - it's a random number and this dot y
02:10 - equal to something maybe a random number
02:12 - so then what
02:13 - gonna do next is I'm gonna write some
02:15 - code like this let P equals equal a new
02:20 - particle and what if I now say json dot
02:29 - stringify p what do I get
02:34 - well what I get is a strength raw text
02:41 - that is the json formatted data that is
02:46 - part of this particular instance of a
02:48 - particle object now if there's methods
02:50 - and functions in here those won't be
02:52 - included but if all I want are the sort
02:55 - of variables the properties of the
02:57 - particle
02:58 - what's its current velocity what's its
02:59 - current XY location then I'm gonna get
03:01 - that stuff this is going to give me a
03:04 - string that just looks like this X you
03:07 - know whatever it is 100 comma Y you know
03:12 - xx and curly bracket so even though the
03:16 - neural network is much more complex this
03:20 - is doing exactly the same thing it's
03:23 - basically saying hey all that stuff
03:24 - that's part of the neural network all of
03:27 - the values of all of these weights and
03:29 - things just serialize all that put it
03:31 - all in a big JSON file let's take a look
03:33 - what that actually looks like so so now
03:37 - what I'm gonna do is I'm gonna go to my
03:38 - code I'm going to go to the bird code
03:40 - and what I'm gonna do I should go to the
03:42 - sketch and what I'm gonna do is I'm
03:44 - gonna say is there a mouse press I'm
03:46 - gonna just I'm gonna add key pressed
03:50 - what I'm gonna do when I add key pressed
03:52 - is I'm gonna say let B equal population
03:55 - index 0 so I'm gonna pick just one bird
04:00 - from the population right eventually I
04:02 - want to like get the best one the one
04:03 - that I want to save then I'm going to
04:05 - say and I'm gonna call this a bird then
04:07 - I'm gonna say let JSON equal bird dot
04:10 - serialize and all this is doing right I
04:13 - could have just right here I could just
04:15 - say let JSON equal json dot stringify
04:21 - bird
04:22 - so the serialize function just does this
04:24 - for us it calls json dot string of
04:26 - so I'm gonna do that then did you
04:29 - something totally insane actually I'm
04:31 - not just gonna say console dot log JSON
04:34 - let's just look at it in the console and
04:35 - I'm gonna say if key equals s so I'm
04:39 - only gonna do this if I've pressed the S
04:42 - key and I feel like there's something
04:43 - weird in JavaScript or p5 where I
04:46 - actually say that capital S but whatever
04:48 - let's figure that out so here we go
04:49 - let's go here so all these birds are
04:52 - going I'm now gonna press s and
04:54 - population is not defined because it's
04:58 - not called populations called birds it
05:01 - would be nice to call it what it's
05:02 - called and now I'm going to press s bird
05:07 - dot serialized oh right of course
05:10 - it's not the bird object that has the
05:12 - serialized function built into it it's
05:14 - the brain it's the bird brains bird
05:18 - brain so this also should have been json
05:20 - dot stringify bird brain okay we're
05:23 - getting there
05:23 - brain is the neural network object
05:25 - inside of the bird that's the only thing
05:26 - that I care about to save if I wanted to
05:28 - save more stuff I'd have to do that but
05:30 - right now we're good I'm gonna do this
05:31 - we're gonna get it fit save and look at
05:34 - this you can see look at that this is
05:36 - all the data these are all the values
05:38 - that are in all those arrays it's all
05:40 - the stuff so guess what I could do next
05:42 - I can say save JSON bird JSON JSON so I
05:51 - think this function in p5 the saved JSON
05:54 - function will save the data oh actually
05:57 - interesting we enough it's already made
06:00 - into a string oh this is so interesting
06:05 - I think I actually don't need to see so
06:08 - I could just say I could just say save
06:11 - because this is technically as well I've
06:15 - won waited into territory that I didn't
06:17 - want to wait into but this save JSON
06:19 - function in p5 is designed to take an
06:22 - object it hasn't been turned into a
06:24 - string and turn it into a string so you
06:26 - can save it whereas what I want to do is
06:28 - I already made the thing into the string
06:31 - I just want to save the string so let's
06:32 - actually try a few different things just
06:36 - for fun let's try saying save JSON
06:40 - bird sorry bird dot JSON and then bird
06:46 - so I'm not gonna bother with serializing
06:49 - it I think the p5 save JSON function
06:51 - will do that for me
06:51 - so let's do this then I'm gonna hit s
06:54 - and ooh boy we got some crazy air saved
07:00 - JSON so let's look up the reference see
07:02 - I probably got the order wrong save JSON
07:05 - p5.js let's look at the reference and
07:08 - let's look
07:09 - ah the data goes first and then the name
07:13 - of the file goes second okay
07:16 - so bird comma bird JSON there we go now
07:21 - let's try this again
07:23 - alright I'm gonna try this one more time
07:25 - I'm gonna hit s and you can see I'll
07:28 - look what just happened right down here
07:30 - the browser downloaded a file called
07:33 - bird JSON automatically so I don't have
07:35 - any real file management capabilities
07:37 - from the client but I can auto trigger a
07:40 - download to go directly to the default
07:42 - downloads directory of the browser so I
07:44 - can now click here and say show and find
07:46 - her and now I should have look at that
07:48 - this bird died JSON file whoops and what
07:51 - I should be able to do is then drag that
07:53 - and take a look at it in atom so there
07:57 - it is look at this this is actually oh I
08:00 - saved the whole bird look at this I
08:02 - didn't mean to do this
08:03 - I saved the birds X&Y it's gravity it's
08:05 - lift its velocity look now I saved its
08:07 - brain input notes so I forgot of course
08:09 - all I want to do is just save the brain
08:12 - so what I can do now is I can change
08:16 - this to go back to bird and I can change
08:22 - whoops I'm sorry back to sketch and I
08:25 - can change this to save JSON bird dot
08:28 - brain okay here we go ready and I'm
08:31 - gonna save that and now I have another
08:33 - one I'm gonna open that up in atom and
08:40 - we can see this is now just the bird
08:41 - itself so you can see these are the
08:43 - weights that this this is sorry not the
08:46 - bird this is the neural network of the
08:47 - bird and these are all of its current
08:49 - weights all these numbers seem and feel
08:51 - rather meaningless to
08:52 - but they're quite meaningful until how
08:54 - how it works so now we can then write
08:59 - another sketch that loads that JSON file
09:02 - back in so how do I want to do that so
09:06 - actually before I go and create a sketch
09:09 - that loads the JSON let's actually make
09:11 - this load a bird that we want to load so
09:14 - one thing that I could do is after if
09:16 - I'm training for a while I could kind of
09:18 - find the current bird in the population
09:20 - that has the highest score so I could
09:23 - say actually I could say no there's only
09:25 - one bird right now whoops no loop so I'm
09:29 - gonna do this kind of manually this is
09:31 - pretty terrible so now I'm just want to
09:33 - make sure there's just one bird so it's
09:34 - just one bird so this is definitely the
09:36 - one that I want to say so I'm gonna hit
09:39 - s and I got that bird so now I have the
09:43 - bird that's doing really well and it's
09:45 - in bird to JSON so I am going to just
09:50 - call this best bird JSON okay so now of
09:57 - course what I would really want to do
09:59 - and I leave this to you the viewer as an
10:01 - exercise is make an interface well auto
10:04 - detect one that's been doing well
10:05 - trigger the download make like an upload
10:08 - button that I can upload the best one
10:10 - but I'm gonna do this in sort of a hacky
10:11 - way what I'm going to do is I'm going to
10:13 - make an exact copy of my sketch
10:25 - and I'm just gonna call it flappy bird
10:28 - and I am going to go into Adam and I'm
10:35 - gonna get rid of the genetic algorithm
10:37 - code completely I'm done no genetic
10:41 - algorithm here I'm gonna go to the
10:45 - sketch and I'm gonna say hey you know
10:47 - what I don't need all the birds and
10:49 - one'd all save birds I don't need the
10:51 - counter all I need is one bird and I
10:58 - don't need the save thing and I'm going
11:00 - to just say function preload I am going
11:04 - to say let data bird data or birdbrain
11:10 - birdbrain
11:12 - then I'm gonna say birdbrain equals load
11:15 - JSON best bird JSON then in setup all I
11:24 - need to say is bird brain sorry bird
11:29 - equals neural network dot d serialize
11:40 - birdbrain and this is actually so I
11:47 - should call this brain data or brain
11:51 - JSON let's call this trying to make this
11:53 - make sense
11:54 - brain JSON then this is the actual bird
12:00 - brain deserialize the brain JSON and
12:06 - then the bird is a new bird with that
12:10 - bird brain so this is the process of
12:12 - loading the data then deserializing it
12:18 - into an object than creating a new bird
12:20 - with that object because my bird code
12:22 - the constructor accepts a neural network
12:25 - object as the brain it will remake it so
12:27 - let's go back what else do I need to do
12:29 - in sketch adding new pipes you know
12:32 - there's only one bird now so all I need
12:35 - to do is
12:37 - I'm actually not even gonna worry about
12:38 - this I'm just gonna let the bird play
12:41 - and I'm gonna let the bird go off-screen
12:46 - I'll just like you know I hold on so in
12:49 - theory I should do something if the bird
12:53 - hits the pipe I'm gonna just say
12:55 - console.log collision just so we see it
13:00 - doing something if the bird goes off
13:02 - screen I'm gonna say
13:04 - bottom and then here
13:07 - oh that's the pike sorry and this is
13:12 - just one bird now if one bird off-screen
13:17 - I'm just gonna say console dot log
13:21 - bottom oh so much code to write and now
13:27 - I can just say bird think bird updates
13:30 - this is all this stuff for the genetic
13:32 - algorithm so I don't need to worry about
13:34 - that and then I want to draw show the
13:37 - bird and show all the pipes so this is
13:42 - now I just made a version of the game
13:45 - basically all I did was eliminate the
13:47 - genetic algorithm and eliminate the
13:48 - array of birds because there's just one
13:50 - bird and I also need to make sure I
13:52 - don't want to have this J dot J s file
13:55 - anymore in index of HTML and now I also
13:57 - need to go and grab from my downloads
14:00 - where was that
14:01 - I need to grab that best bird JSON file
14:06 - I'm gonna go to the desktop and put it
14:08 - in flappy bird so now this best bird
14:11 - this is the data from that best bird
14:13 - that I saved and I should be able to go
14:16 - back to sketch and say best I called it
14:18 - best underscore bird so give me a second
14:22 - here
14:23 - and let's run that sketch I'm gonna run
14:33 - a little web server so I can look I will
14:36 - run it on a different port so now I'm
14:39 - gonna go to localhost 8001 and have some
14:43 - Harris counter is not defined so I'm
14:46 - using I left this counter thing in there
14:49 - which is
14:50 - oh no I do need counter oh I do want
14:53 - counter so I need to have the the
14:55 - counter I need that's my frame count to
14:57 - know how many pipes I is not defined and
15:01 - sketch at js9 36 pipes ooh this should
15:07 - not be a bracket there right cuz this is
15:09 - me checking all of the pipes unexpected
15:15 - end fit put sketch alright so I think
15:17 - I'm missing yet another curly bracket
15:20 - here and there we go
15:23 - so this should be that bird right so now
15:28 - I've loaded the one that I trained oh
15:30 - yeah that worked I loaded the one that I
15:32 - trained how exciting so now what could I
15:36 - do let me just be sure that this is
15:38 - working let me go back to the other
15:40 - sketch all right and let me save another
15:44 - one so I'm gonna just I'm gonna save
15:47 - like a bad one because I'm this is just
15:49 - going to be an arbitrary one right so
15:51 - I'm gonna hit s and I'm gonna get this
15:54 - one and this one I'm gonna call bad bird
15:59 - and I'm gonna go to back to my sketch
16:03 - and it would put bad bird in there so
16:07 - now I have whoops
16:09 - what is this sublime is open
16:12 - I have bad bird this is all of the waits
16:14 - for the bird that wasn't really trained
16:16 - these are the weights of the bird that
16:18 - was trained so if I go here if I go back
16:22 - to my code and go to sketch that Jay s
16:27 - you know and I could what I what would
16:29 - be interesting is to run both of them
16:31 - like to load a few different birds but
16:32 - now I'm gonna load the one that doesn't
16:34 - do well let's just see and let me by the
16:37 - way let me set the slider the default of
16:40 - the slider to whoops where did I create
16:44 - that slider oh yeah sorry let me set the
16:48 - default of the slider to three just so
16:49 - it starts sped up whoops I'm in the
16:52 - wrong sketch so now this is the bad one
16:56 - that one's pretty good you can see the
16:58 - back of one it's not doing very well
16:59 - right as opposed to the good one
17:07 - which is not colliding it really should
17:12 - be is the collision thing actually
17:14 - saying collide did it say it when I did
17:17 - the bad one yeah it is okay you can see
17:20 - that I'm getting lots and lots of
17:21 - collisions with the one that wasn't
17:23 - trained well so again these could use a
17:26 - lot of refinement like maybe I want to
17:29 - think more systematically maybe I want
17:31 - to have an electron app that's actually
17:33 - doing the training and saves the JSON
17:35 - file so I could have some file
17:36 - management maybe you're asking yourself
17:37 - what's an electron app it's a way of
17:39 - wrapping a webpage basically into a
17:42 - desktop application so you have more
17:43 - control over your file system I could
17:45 - write a node I could have a server-side
17:47 - program written in node that is managing
17:49 - saving JSON files of birds that I've
17:51 - trained and reloading them or I could
17:53 - make a bird flappybird API I'm just
17:57 - gonna give you all these different
17:58 - trained birds for different situations
17:59 - so there's a lot of ways you could go
18:01 - forward with this so hopefully you've
18:02 - got something out of this I think dare I
18:04 - say I'm but right now this part five
18:08 - really wraps it up I will say that even
18:11 - though so you're going on the coding
18:14 - train website you will find the exact
18:16 - code for both of these examples in there
18:20 - kind of raw state but I'm also making a
18:22 - separate example that I've demonstrated
18:26 - which is here I'm just gonna quickly
18:31 - load it up that's going that that has a
18:33 - bit more interface stuff to it so I will
18:35 - also link to this example that will have
18:37 - a bit more that'll be a bit nicer like
18:39 - I'm gonna do I have a save and a load
18:41 - button in here so this one already has
18:43 - the feature now if I speed it up and
18:45 - train it for a little bit
18:46 - train train train train train train
18:48 - train train train train train train
18:49 - train train that I could then say hey
18:52 - just show me the one that's done the
18:54 - best so far so and so now you could save
18:57 - that one and load that one so I will
18:58 - create that stuff I'll make that example
19:00 - available but as an exercise for
19:02 - yourself try to make it what can you do
19:04 - add some design add some saving loading
19:06 - have have a computer bird compute could
19:09 - compete with a human player bird I don't
19:12 - know be creative make something share it
19:13 - with me and I hope to see you in a
19:15 - future video
19:17 - [Music]
19:24 - you