00:00 - Welcome back.
00:00 - If you made it through the
previous video, oh, mwah.
00:03 - Thank you so much.
00:04 - In this one, I'm just
going to get right down
00:06 - into writing the code.
00:07 - What am I talking about?
00:08 - "Steering Behaviors for
Autonomous Characters."
00:11 - All of the examples I'm
going to code and show you
00:14 - are based on the 1999
paper by Craig Reynolds.
00:18 - I talk a lot more about
that in the previous video.
00:20 - You could go back
and watch that.
00:21 - Here, I need to start somewhere.
00:23 - And the canonical example to
demonstrate a steering force
00:28 - is the steering behavior seek
or pursuit of a static target.
00:33 - Now, I'm about to go
diagram this myself,
00:35 - but I just want to point
something out here.
00:37 - Steering equals desired
velocity minus velocity.
00:41 - That's all there is to it.
00:43 - It's a very simple formula.
00:45 - Now, what the desired
velocity actually is--
00:49 - that's the tricky question.
00:51 - The good news for seek--
00:53 - it's pretty easy to come up
with the desired velocity.
00:55 - But as we get to more
and more examples,
00:58 - and as you make
your own behaviors,
01:01 - thinking about what is
the objects, the entities,
01:04 - the creature, the particle,
the vehicle's desire
01:08 - is incredibly important.
01:09 - So let's map out a
scenario in p5.js.
01:18 - So what do I have?
01:19 - I have a vehicle that's
my particle or mover
01:21 - object essentially.
01:22 - I'm going to draw
it as a triangle.
01:24 - It's got a current velocity.
01:25 - And then I've also got a target.
01:26 - So the first question
that needs to be asked
01:29 - is, what is the
desired velocity?
01:35 - Going back to Reynolds'
paper, this is where we are.
01:37 - We're on the action
selection step.
01:39 - What are the goals for
this particular vehicle?
01:42 - Maybe it's hungry.
01:44 - This is food.
01:45 - And its goal is to get
there to eat the food.
01:48 - Now, you might have
your own interpretation
01:50 - of this scenario, but I'm
going to put this out there.
01:52 - I think that the
vehicle's desired velocity
01:55 - is to move as fast as
it possibly can directly
01:59 - towards the target.
02:00 - For example, if it could
have this velocity,
02:04 - if that were its
velocity vector,
02:05 - it would instantly
teleport to the target.
02:08 - But we have to
remember that this is
02:10 - a world that we're designing.
02:11 - And we need to put
some constraints on it.
02:13 - Returning back to the simple
vehicle model in the paper,
02:16 - you'll notice there's a
property there called max_speed.
02:20 - This is not something that I
have necessarily introduced
02:23 - in previous examples.
02:24 - The vehicle, in addition to
having a position, a velocity,
02:28 - an acceleration, all
those types of things,
02:31 - now has a maximum speed.
02:35 - And I'm going to define
then its desired velocity
02:38 - as a vector that points
directly to the target
02:42 - with a length of maximum speed.
02:46 - Step two-- steering.
02:48 - And that is that wonderful,
beautiful, simple formula.
02:55 - The steering force is
the desired velocity
02:59 - minus its current velocity.
03:01 - Think about this for a moment.
03:02 - It actually makes
total sense, right?
03:04 - If I'm going in this
direction, but I
03:06 - want to be going
in this direction,
03:07 - the way I should steer
is the difference
03:09 - between those two things.
03:10 - It's like almost an error.
03:11 - If I'm moving in exactly the
same direction as my desired
03:14 - velocity, the difference between
all those things is zero.
03:16 - I don't need to
change my velocity.
03:18 - Now, you might be thinking,
didn't we do this already?
03:21 - Isn't this just
gravitational attraction?
03:24 - Like this particle is
attracted to this attractor?
03:27 - Well, it's very similar,
but it's quite different.
03:30 - In the gravitational
attraction example,
03:33 - the particle body had no ability
to perceive its environment.
03:38 - It didn't understand if I'm
going in this direction,
03:42 - maybe I need to compensate
for that to get to the target
03:45 - more quickly.
03:46 - It was just being pulled.
03:47 - So the force being
applied was just
03:50 - a force that points
directly from the object
03:52 - to the target in the
gravitational attraction
03:55 - example.
03:56 - Let's now look at if I were to
actually work out desired minus
03:59 - velocity, what would I see?
04:02 - This is that desired vector.
04:04 - If I take the
velocity vector, if I
04:06 - were to add desired
plus velocity,
04:09 - I would put the velocity here.
04:12 - But to subtract
desired minus velocity,
04:15 - I just take the
velocity, turn it around,
04:19 - and now I have this vector.
04:21 - This is my steering force.
04:24 - If I take this and
kind of put it up here,
04:28 - you could see how there's
an intelligence to pushing
04:31 - this vehicle further in the
direction of the target itself
04:34 - based on the fact that it's
moving in this direction.
04:37 - If you want, pause the video.
04:38 - Have this vehicle moving
in this direction,
04:40 - and then work out what's
the steering force.
04:42 - You'll see that it's different.
04:43 - And here this autonomous agent
is perceiving its environment
04:47 - by understanding where the
target is and its own velocity
04:52 - and how that plays a role
into what force it could use
04:55 - to steer towards that target.
04:56 - And this is it.
04:57 - We're ready to go to the
code because all I need to do
04:59 - is figure out, how do I
calculate this desired
05:01 - velocity?
05:02 - Then do the vector math to get
the steering force, and then
05:05 - what?
05:07 - Apply force.
05:09 - Everything else is
just all the same stuff
05:11 - that I've done in
previous videos.
05:13 - Step three-- locomotion.
05:15 - Apply force.
05:16 - Force goes into acceleration.
05:17 - Acceleration goes into velocity.
05:19 - Velocity goes into the position.
05:20 - All that stuff is all stuff
that I've done before.
05:23 - I'm going to begin with the
particle class from chapter 4
05:25 - and just change that particle
to now be called a vehicle.
05:28 - I'm going to just give it an
empty velocity to start with.
05:33 - It doesn't need the
lifetime variable anymore.
05:35 - I mean, I might
want that someday,
05:36 - but I'm going to remove that.
05:39 - And I want to add an
additional function.
05:41 - I want to add a
function called seek
05:45 - that presumably will receive
a vector, which is the target.
05:51 - Calculate the steering
force within that function.
05:54 - But before I write
the code in there,
05:56 - let's go to Setup and
Draw and create a vehicle.
06:03 - There we go.
06:04 - Now, my vehicle is
a tiny, little dot.
06:06 - Let's change that
into a triangle
06:07 - so I can see it point in the
direction that it's moving.
06:17 - There's my little triangle.
06:20 - Let's make that
quite a bit bigger.
06:23 - And there we go.
06:24 - Now I need a target.
06:31 - I'll make a vector to define
the position of the target
06:34 - at the mouse location, and
then just draw a circle there.
06:37 - And, certainly, the
target could be something
06:40 - more sophisticated, but I think
this is a quick way for me
06:42 - to demonstrate the idea.
06:45 - Vehicle.seek(target).
06:47 - Step one-- what is the desired
velocity of vector that
06:51 - points from the
vehicle's position
06:54 - to the target with a length
of magnitude of maximum speed?
07:02 - Using vector subtraction,
I now have a vector
07:04 - called desired that points
all the way from the position
07:08 - to the target.
07:09 - I need to set its
magnitude to maximum speed.
07:13 - Oh, I don't have a
maximum speed variable.
07:15 - So now I need to make one up.
07:19 - I'm going to just pick four.
07:21 - This is obviously
a major parameter
07:24 - that will really affect the
way your system behaves.
07:26 - And it might be something that
you make different vehicles
07:28 - with different maximum
speeds or initialize them
07:30 - based on some
algorithm, but I'm just
07:32 - going to hard code the
number in four right there.
07:36 - Next step-- the steering
force is the desired
07:39 - velocity minus the
actual velocity,
07:42 - the current velocity itself.
07:46 - Take that desired velocity.
07:48 - Subtract the velocity.
07:49 - And we now have it in a
force vector called steering.
07:53 - Applied force-- oh, we're
going to be going so fast.
07:57 - Well, look at that.
07:58 - It's seeking the target.
08:00 - I should probably rotate it
according to its velocity.
08:04 - Remember in chapter
3, I show that you
08:06 - could call the heading function
to get the angle associated
08:09 - with that velocity vector and
then rotate by that angle.
08:13 - And look at that.
08:13 - Look how perfectly it
steers towards that target,
08:16 - almost too perfectly.
08:18 - What am I missing?
08:19 - Well, in a way, I'm
not missing anything.
08:21 - This example is complete.
08:23 - This is the algorithm for
calculating a steering
08:25 - force based on a desired
velocity for seeking a target.
08:29 - But going back to
Reynolds' paper,
08:30 - it's important to remember
that, what is the goal here?
08:34 - The goal isn't necessarily
for the vehicle
08:37 - to reach the target
as fast as possible.
08:39 - I mean, it might be.
08:41 - But if that's
really the case, we
08:42 - have the power to
just set its location
08:45 - to the target's location.
08:46 - The goal is to simulate
motion behaviors
08:50 - in a lifelike and
improvisational manner.
08:52 - And the way that we can
really tune our system now
08:56 - is not just based on
that maximum speed.
08:59 - There's another property
here-- maximum force.
09:03 - What is this vehicle's
ability to steer?
09:06 - Is it able to turn on a dime and
instantly get to that target?
09:10 - Or does it take a lot of work
for it to change its direction
09:13 - and speed up and slow down?
09:16 - I'm going to add a
maximum force property
09:18 - and set it to
something quite low.
09:22 - The idea is that this
maximum force property
09:26 - is something that limits the
magnitude of that steering
09:30 - force.
09:30 - If the steering
force magnitude is
09:32 - less than that maximum
force, it doesn't need
09:34 - to make it that maximum force.
09:36 - That's just a maximum.
09:37 - So rather than setting
the magnitude directly
09:40 - like I did with desired, I
want to use the limit function.
09:45 - Now let's run this sketch again.
09:47 - Now, it's moving really slowly.
09:49 - Because, remember, steering
isn't just changing direction.
09:52 - It's any kind of change
in the velocity vector.
09:55 - So it starts with a
velocity vector of zero.
09:58 - It takes a while for it to
ramp up and get some speed.
10:01 - But we can quickly
see now if I were
10:03 - to change the maximum
force from 0.01 to 1,
10:10 - now we're back in that
turning on a dime.
10:12 - What happens if I make the
maximum speed even higher?
10:16 - Now you could see it's able
to steer quite effectively
10:20 - but also go much faster.
10:22 - So those properties
play a huge role
10:24 - in the behavior of the
agent in the system.
10:27 - Before I move on, I want to make
one organizational change here.
10:30 - I actually don't need separate
desired velocity and steering
10:34 - force vectors.
10:36 - Ultimately, I don't need to
save that desired velocity
10:39 - its own variable.
10:40 - So I'm actually just going to
change this to be called force,
10:44 - set its magnitude
to maximum speed,
10:46 - and then just say force
subtract this dot velocity.
10:52 - Rather than create
a new vector that
10:55 - is the result of
desired minus velocity,
10:58 - I could just
calculate the desired
11:00 - and then subtract the
velocity out of it
11:02 - and call it force the
whole way through.
11:04 - I've got a lot more
things to demonstrate.
11:06 - Namely, I want to change
this into an arrive behavior.
11:09 - So right now, you
see that the vehicle
11:11 - is shooting past the target
and has to turn back around.
11:14 - How could it have as a
goal to slow down and stop
11:16 - when it reaches the target?
11:17 - Maybe you want to
try that on your own.
11:19 - Stop.
11:20 - I'm about to say goodbye,
and I'll let it say goodbye.
11:22 - But before I say goodbye,
since I have this maximum speed
11:26 - variable, I'm really
using it in this video
11:28 - to demonstrate the idea
of setting the magnitude
11:31 - of the desired velocity.
11:32 - But if that's the
vehicle's maximum speed,
11:35 - I should also limit its
actual velocity by that.
11:40 - Ultimately, I'm not sure
how much difference that's
11:42 - going to make in the
actual end result,
11:44 - but it is an important note for
me to add that property in here
11:47 - as well.
11:47 - OK, back to me saying goodbye.
11:49 - But here's two
exercises that you
11:50 - could try if you're looking for
something to expand on this.
11:52 - One is, what happens if you
attach sliders to maximum speed
11:56 - and maximum force?
11:57 - How does that
affect the behavior
11:59 - of the vehicle in
real time as you're
12:00 - tweaking those parameters?
12:02 - Also, Reynolds
describes in his paper
12:04 - a behavior known as pursuit.
12:06 - So what if the target is moving?
12:09 - On the one hand, it could be
exactly the same algorithm
12:12 - that you just seek wherever the
current location of the target
12:14 - is.
12:15 - That's ultimately
what's happening here
12:17 - as I move it with the mouse.
12:18 - But if the vehicle is able
to perceive its environment
12:21 - and see which direction
the target is moving,
12:24 - couldn't it make a
prediction as to where
12:26 - it's going to be a
little bit in the future
12:28 - and seek that
location rather than
12:31 - the exact position of the target
itself right at this moment?
12:35 - So that's another
thing you could try.
12:37 - Take a look at how
this is explained
12:38 - in Reynolds' paper,
which I've linked
12:40 - to in the video description.
12:41 - All right.
12:42 - Next up, the arrive force and
then more and more and more.
12:46 - I don't know how many of
these I'm going to do.
12:48 - But, eventually, I'll get to--
12:49 - I would love to get to all
of them in future videos.
12:52 - Thanks for sticking with me.
12:53 - We'll look forward to
hearing what you think
12:54 - and what questions you
have in the comments.
12:56 - And I will see you
in the next video.
12:58 - [MUSIC PLAYING]