00:00 - hello welcome to the third video about
00:03 - regular
00:06 - Expressions I'm actually pretty uh
00:08 - excited about regular expressions and
00:10 - I'm especially excited about this video
00:12 - because now I think I we after this one
00:14 - I'm going to have all the tools that I
00:15 - need to match all of those phone numbers
00:18 - so let's look at the next piece here
00:20 - I've talked about position meta
00:22 - characters Single Character meta
00:23 - characters quantifiers and now I want to
00:25 - talk about character classes so
00:27 - character
00:28 - classes a character
00:31 - class is stuff that appears in between
00:36 - square
00:38 - brackets and this is one way I'm going
00:40 - to talk about two things in this video I
00:41 - don't know if this is the right term but
00:43 - I'm going to talk about character
00:44 - classes and alternation so alternation
00:47 - these are two different ways of saying
00:50 - of a of of having an or like operation
00:53 - meaning if I say this a b c match an a
01:00 - or a b or a c okay that's a character
01:03 - class match right this also matches a
01:06 - dash or a period now one thing that's
01:10 - important to realize and there's so much
01:12 - funny business and little things to
01:14 - remember and look up but mostly you're
01:15 - going to have to look up this stuff or
01:16 - mess around and get it wrong a lot but
01:18 - remember dot is a meta character dot is
01:21 - a meta character that means any
01:23 - character so why doesn't this match a
01:26 - dash or any character well it turns out
01:28 - that dot inside of a character class is
01:31 - no longer that meta character instead
01:33 - it's a literal Dot and I should also
01:35 - mention I really should have done this
01:36 - in the last video uh I just realized I
01:38 - just forgot that if I want to match a
01:40 - literal dot not in U that's not in a
01:44 - character class like if I want to match
01:46 - email addresses so I want to match
01:48 - anything that's like dot oh this is
01:49 - actually going to be perfect for this
01:51 - like so this is a scenario that I want
01:52 - to do what if I want to match anything
01:55 - Donnet
01:57 - or.com or.org now obviously there can be
02:00 - more than just that for email addresses
02:01 - but this is a good start so alternation
02:05 - is going to be a way to allow us to say
02:07 - or net orom or org but how do I match
02:11 - the actual dot back slash dot means
02:14 - literal dot so if you have a meta
02:17 - character um like for example a bracket
02:19 - is now a meta character so but if I want
02:21 - to match a literal bracket I have to say
02:23 - back SL bracket so it's a way of
02:24 - escaping it so I'm going to come back to
02:26 - the email address we'll get to that in a
02:28 - minute but so these are character
02:31 - classes match any one of these
02:33 - characters let's look a little bit about
02:34 - how this works um let me come back over
02:37 - here let me open up Adam again uh and
02:39 - let me try to like make some character
02:41 - classes so what I want to match is
02:45 - um let's think about the uh let's I'm
02:48 - going to make up something I'm going to
02:49 - match l y or I and K so what is this
02:54 - going to match L followed by the
02:57 - character class Yi followed by n okay
03:01 - and I'm going to type some stuff
03:03 - here uh the
03:06 - link is quite a link don't you think so
03:11 - you can see what did that do it matches
03:13 - both l y NK and l i n k based on the way
03:17 - that we have this character class so I
03:20 - could say or a space or a parenthesis
03:23 - you know all this stuff would work I
03:25 - don't know why I would want to do this
03:26 - but I could say l space NK l l print es
03:31 - NK
03:32 - uh I don't know why that didn't work oh
03:36 - um
03:39 - L I don't know what I got wrong oh other
03:42 - other other way
03:45 - parentheses right so I can use a
03:47 - character class to match any possible
03:49 - any any one of these characters okay so
03:52 - let's go back to the phone number for a
03:53 - second look now remember what I had
03:55 - before I had three digits followed by a
03:57 - dash followed by uh three digits
04:00 - right look what that's matching 9917
04:03 - d555 now what if I down here change that
04:06 - to followed by either a dash or a dot
04:10 - dash or a DOT look at this now I've
04:13 - matched and let me put this back to make
04:15 - these phone numbers you can see now I've
04:17 - matched both of these phone
04:20 - numbers except weirdly I'm getting
04:22 - something weird here so let's we got to
04:23 - be a little bit better about this let's
04:25 - match now followed by a dash or a DOT
04:30 - followed by
04:32 - four four
04:35 - digits now look what I've got I've got
04:38 - this phone number and this phone number
04:39 - now I know you can't see the regular
04:41 - expression let me let me just show this
04:42 - to you again three digits followed by a
04:45 - dash or a DOT followed by three digits
04:46 - followed by a dash or a DOT followed by
04:48 - four digits we're now we're talking now
04:50 - we're cooking I can match any possible
04:52 - phone number where it's of this form in
04:55 - this article but look at this ah there's
04:58 - also these parentheses how do I deal
04:59 - with that okay well optionally I could
05:01 - start with an open parenthesis so let me
05:04 - do
05:06 - this optionally now look at this uh
05:08 - invalid regular expression why so a
05:10 - parentheses we're going to see in a
05:11 - moment is part of this thing called
05:13 - alternation so I need to say I want to
05:15 - match optionally a literal parenthesis
05:18 - and then after the phone number instead
05:20 - of the dash or the dot the first one it
05:22 - could also be a close parenthesis but
05:24 - inside the character class I don't need
05:26 - to escape the parenthesis oh boy uh but
05:29 - look at this this now I've matched all
05:30 - three of them so you might have had to
05:32 - have to pause this video copy that down
05:34 - and you really should just you should
05:35 - make up a song or talk yourself thly
05:38 - through slowly through a regular
05:39 - expression and I'm going to do it for
05:41 - you we're going to like have a moment
05:43 - here where we're going to read this
05:45 - regular
05:46 - expression I would like to match a
05:48 - literal open parenthesis optionally
05:51 - followed by three digits followed by a
05:54 - dash or a period or a close parenthesis
05:58 - followed by three digits followed by a
06:00 - dash or a period followed by four digits
06:03 - so this is the kind of thing you need to
06:05 - try to translate and one way of also
06:07 - creating regular Expressions is to
06:09 - iterate so I could have written this in
06:11 - a more long- winded way and then
06:13 - shortened it and shortened it and
06:14 - shortened it kind of over time and maybe
06:16 - we'll see that process as I do more and
06:17 - more examples okay so we're moving
06:19 - through this I think I've kind of
06:20 - covered now for you what a character
06:23 - class is oh and I should ah I missed
06:26 - something really important this Dash is
06:28 - that a D okay so special characters
06:31 - inside of a character class are Dash and
06:35 - carrot uh let's look at how those work
06:37 - so even though this Dash in this
06:39 - particular scenario is matching a
06:41 - literal Dash it can work a different way
06:45 - so let me show you what I mean by that I
06:46 - want to match I'm going to try to get
06:49 - closer here I want to match um any Dash
06:53 - now notice in the character any Dash um
06:56 - or period so you can see I matching any
07:00 - Dash or period but I'm going to show you
07:02 - something else I want to match A- Z if
07:05 - the dash is not the first character it
07:08 - does not mean a literal Dash instead it
07:11 - means any character A through Z so look
07:14 - at this I'm matching any any character a
07:17 - through C right I'm matching an A or a b
07:20 - or a c I can also say or any character 0
07:23 - through five so now I am matching right
07:26 - I could say I want to match only phone
07:29 - numbers
07:30 - that have the number z0 through five
07:33 - sequences of three numbers only with the
07:36 - the numbers 0 through five so notice how
07:38 - I've matched 212 and 555 but I did not
07:41 - match 646
07:43 - because 646 has a six in it which is not
07:47 - a character Zero through five let me
07:49 - show you something crazy remember how I
07:52 - said so Dash is a special character
07:54 - inside a character class carrot is also
07:57 - a special character let me come back
07:59 - over here and I want to uh show you what
08:03 - happens if I put carrot here what did I
08:06 - now match anything that's not a zero
08:09 - through five which is actually kind of
08:12 - insane because I in my mind you can
08:15 - easily forget these things I thought I
08:17 - was going to get sequences of numbers
08:19 - that aren't 0 through five but this just
08:21 - means anything except 0 through five so
08:23 - this means like any character except a b
08:25 - or c right I'm matching including spaces
08:28 - including numbers including periods
08:29 - including punctuation so you can negate
08:32 - the character class if the carrot symbol
08:34 - is the first symbol if the carrot symbol
08:35 - is in the in the middle it's just a or
08:38 - carrot or B or C it's literal and Adam
08:40 - is helping us along by color coding when
08:42 - something's a meta character and not
08:44 - color coding when it's not a meta
08:46 - character um okay so um I think I'm kind
08:49 - of all the way through the character
08:51 - class thing I did realize though that
08:54 - something is going on here which is that
08:57 - um I want to match let me just show this
08:59 - to you right I want to match any
09:01 - character A through Z oh look at this um
09:05 - notice that this matched capital T even
09:08 - though I'm lowercase A-Z now usually the
09:11 - default is going to be the other way
09:13 - around um but and here the context is
09:15 - I'm using adom so in this case over here
09:18 - I can make this regular expression case
09:21 - sensitive by uh clicking this match case
09:24 - and now you'll see that I'm not matching
09:26 - any capital letters but if I wanted to
09:28 - match only capital letters I could say
09:31 - A- Z so this by the
09:35 - way is now a regular
09:38 - expression here we
09:40 - go to match any fourl
09:44 - words only with characters in them so
09:47 - not and um right only with characters
09:50 - with them so this will not match oops L3
09:55 - NK but if I change this instead of a to
09:58 - d W it'll match so- W includes numbers
10:02 - and characters if I only want characters
10:05 - I need to include I need to write a
10:07 - character class like all capital A
10:09 - through Z all lowercase a through z now
10:11 - here's what I could do let's be better
10:12 - about this let's say I want to match a
10:16 - single capital letter followed
10:20 - by one or more lowercase letters so you
10:23 - can see now I've
10:26 - matched only capitalized words
10:30 - and I didn't match actually though if a
10:34 - something is the right I didn't match a
10:36 - but I could make instead of followed by
10:39 - one or more lowercase letters I could
10:41 - put a star there zero or more and now I
10:43 - matched a so you can see if you want to
10:45 - look oh there's a something going on
10:47 - here so by the way this was considered a
10:49 - word boundary right in here so we'd have
10:51 - to change our regular expression a
10:52 - little bit if we didn't want to allow
10:54 - something followed by an apostrophe okay
10:58 - um all all right so we're we're we're
11:00 - moving along here there's a little bit
11:02 - more that I want to cover in this video
11:04 - which is something called alternation so
11:06 - character class is a way of kind of
11:08 - stringing an or a or b or c or anything
11:12 - not a or b or
11:14 - c but there's another way to have an or
11:17 - and you need parentheses for that and
11:19 - you need a pipe symbol so remember when
11:21 - I was saying I want to try to match
11:23 - emails so I could say net or Comm so
11:27 - this is not saying n or e or t this is
11:30 - saying NE or c m so this pipes this
11:35 - looks a lot more like programming I I
11:37 - think this might be referred to as
11:38 - alternation having a memory of reading
11:40 - the word alternation in Jeffrey friel's
11:42 - ma during regular Expressions Book which
11:44 - I highly recommend um net or com so
11:46 - let's look and see how this
11:48 - works um I'm going to come back over
11:50 - here I'm going to write a bunch of
11:52 - emails uh Daniel shiffman domnet or
11:56 - daniel. shiffman gmail.com here here's
11:59 - all my email uh uh at nyu.edu there now
12:03 - I'm going to get a lot of emails from
12:05 - people I guess so let's try to match any
12:07 - of these email
12:08 - addresses okay I should have written
12:10 - fake email address here I'll just spell
12:12 - my name wrong no whatever it's fine um
12:14 - so let's think about this what I want to
12:17 - match is any word
12:20 - characters one or more I'm sorry I'm I'm
12:23 - I'm not in this I'm blocking one or more
12:25 - word characters followed by what an
12:30 - symbol followed by one or more word
12:34 - characters followed by a literal dot not
12:38 - any character followed by a literal dot
12:40 - back slash dot followed by net or Comm
12:44 - or
12:45 - edu and look oh look at this I
12:49 - forgot that an email address can have a
12:52 - dot in it as well so look what it
12:54 - matched H so let's try to fix that so in
12:58 - the in here I guess I can say any number
13:00 - of word characters or a DOT will it let
13:03 - me do that yes so I can put the that
13:06 - meta character in the uh so you can see
13:08 - now I've matched any email address if I
13:11 - took out this
13:12 - edu you can see that now I could have
13:15 - just done something like you know anyway
13:17 - we can make this more generic but you
13:18 - can see how this works right so this is
13:21 - um you can see how these these regular
13:22 - expressions in and by the way here's you
13:24 - know regular Expressions one way you can
13:25 - use them is like form validation oh you
13:27 - didn't type in a valid email hopefully
13:29 - after you watch these videos you're
13:31 - going to come up with some more creative
13:32 - and experimental uses of regular
13:34 - Expressions but that's one place that
13:35 - they are used certainly in code and that
13:38 - sort of thing okay so
13:41 - um uh d d d I think that brings me to
13:44 - the end here um some the side effect
13:47 - that we're going to that you're going to
13:48 - see in the next video is that when you
13:51 - use parentheses you also get this thing
13:53 - that happened that is called capturing
13:56 - groups and then you can do all sorts of
13:58 - interesting things with find and replace
14:00 - and something called a back reference
14:01 - and that's stuff that I'm going to show
14:03 - you in the next video okay so U thanks
14:06 - for watching this one and all there is
14:09 - is more regular Expressions to come
14:15 - [Music]