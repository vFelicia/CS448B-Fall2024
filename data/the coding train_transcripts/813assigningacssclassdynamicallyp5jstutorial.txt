00:00 - so I've missed a I think two important
00:03 - details in this little rather long
00:05 - series now about HTML CSS and Dom
00:07 - manipulation in p5 that I would like to
00:09 - kind of fill in some gaps and so here is
00:12 - a scenario that I think will fill in one
00:15 - particularly important gap that I want
00:17 - to first talk about which is we have
00:20 - looked at how a class is a way of
00:23 - selecting a group of Dom elements but
00:26 - what if those Dom elements aren't things
00:29 - that are written into the HTML file here
00:31 - is an example where I have used a for
00:34 - loop to make a hundred paragraphs with
00:37 - the word apples in them and a hundred
00:39 - paragraphs with the word blueberries in
00:41 - now we saw in a previous video how I
00:44 - could assign an event to all those
00:46 - paragraphs but what if I wanted to style
00:48 - all those paragraphs well certainly I
00:50 - could use P dot style and add things to
00:55 - that and this will dynamically encode
00:58 - style all the elements but what if I had
01:00 - previously spent a lot of time working
01:03 - out very elaborate now here I haven't
01:06 - done that because I just have one piece
01:07 - of style information but you have a CSS
01:10 - file that you got from a friend or you
01:13 - just spent a lot of time preparing a lot
01:15 - of style information in CSS what if when
01:17 - you create those elements you want to
01:19 - assign all of them this particular style
01:22 - that's already written into your style
01:25 - CSS your style information in the HTML
01:28 - file well it turns out that in the same
01:31 - way that I could create a paragraph that
01:37 - is that has a particular class
01:41 - associated with it this is how I would
01:43 - do that in HTML I can also do that when
01:45 - I make the element in JavaScript so what
01:49 - I can do here is I can say this
01:52 - particular paragraph that I've made that
01:55 - I've given a random position in the
01:56 - window I can also say make it a member
02:00 - of the class Apple and make thee all of
02:04 - these a member of the class blueberry so
02:09 - now when we look at this you can see all
02:11 - of the apple pear
02:13 - our styled with a red background and all
02:16 - the blueberry paragraphs are styled with
02:18 - a blue background this is perhaps the
02:19 - ugliest web page anyone has ever made
02:22 - and you the watcher of this video will
02:24 - have a beautiful design sense and all
02:26 - sorts of interesting ideas but so you
02:28 - can see you can push I would I would try
02:31 - to do this see if you can now create an
02:33 - artificially create a scenario for
02:35 - yourself where you want to make all of
02:36 - the CSS all the styling here in the CSS
02:39 - and you want to and you want to then
02:44 - generate the elements in JavaScript and
02:47 - assign them a class you could also by
02:49 - the way switch classes midstream oh this
02:51 - is exciting let's try this so what if I
02:53 - did something like and I'm gonna
02:55 - actually make this create a I'm gonna
02:57 - show you another thing this is we
02:58 - haven't really looked at the create a
03:00 - tag but the create a tag is a way of
03:04 - creating an anchor tag now normally you
03:06 - might put something like if I do this
03:10 - right I'm making a whole lot of elements
03:14 - with the word blueberries in them that
03:16 - are links anchor links to google.com so
03:21 - if I do this you can see now anytime I
03:24 - click on one of these blueberries I've
03:26 - got the Google Website because I'm
03:28 - clicking on the web I'm clicking on the
03:30 - term it goes to Google a trick that you
03:32 - can use is using the pound symbol
03:35 - meaning don't actually go anywhere
03:38 - instead I'm gonna handle that in
03:40 - JavaScript boy I really gone off the
03:41 - deep end here but this I think is kind
03:44 - of an interesting scenario now what if I
03:46 - say now suppress change you know become
03:53 - Apple so now I'm gonna make a function
04:00 - called become Apple and I say this dot
04:06 - class Apple so what I'm saying is all of
04:11 - these Dom elements were created to be
04:14 - blueberries but if I press on them they
04:19 - become apples and remember the magic of
04:21 - the key word this this is something that
04:23 - p5 does for you if you
04:26 - a callback as if you pass a function as
04:29 - a callback to a Dom element and you're
04:31 - doing that the same callback to many Dom
04:33 - elements the this keyword will know
04:36 - which Dom element actually triggered
04:38 - that event so this particular Dom
04:40 - element should become a member of the
04:42 - class Apple
04:43 - let's fix let's do a couple things to
04:45 - this first of all let's say I want to
04:47 - say font size actually all of let's say
04:51 - all the paragraphs should have I just so
04:55 - we can see it a little better font size
04:57 - of 24 point and a color of white since
05:03 - you've got these red backgrounds so now
05:05 - if we run this did I not oh those knock
05:09 - paragraphs oh you know what yeah I don't
05:11 - know why that didn't work let me just
05:14 - put it in here Oh cuz class might I
05:16 - don't know I'm somebody will correct me
05:18 - I shouldn't live coding while I'm making
05:20 - these videos it's very dangerous okay so
05:23 - you can see it lets make less of them
05:25 - let's just make ten of each of them now
05:29 - remember all of the blueberries now any
05:32 - blueberry when I click on it when I
05:37 - click on the blueberry the become Apple
05:40 - function will be triggered we'll change
05:42 - it to be of the member class didn't work
05:48 - do I have an error P great class
05:54 - blueberry mouse press become Apple this
05:56 - class Apple I have like a failure again
05:59 - this is so sad I'm gonna I'm gonna just
06:03 - add some stuff here let's make sure
06:04 - let's fix this live there's no wonder my
06:07 - failed videos so how do you do bug this
06:09 - sort of problem this makes sense right
06:11 - mouse pressed become Apple trigger this
06:14 - code change its class to Apple I should
06:16 - see it visually look different on the
06:17 - page so let's at least make sure this
06:19 - code is happening console.log this is
06:21 - happening and by the way instead of
06:24 - console.log i could just say print line
06:25 - so let's do let's run this again click
06:28 - on blueberries so that is happening now
06:32 - what is now this dot class apple should
06:36 - change its styling information
06:38 - I wonder if it's actually just adding
06:40 - the class Apple not not changing it I
06:44 - wonder if I have it so one thing that
06:48 - I've realized I think that I have a
06:51 - conceptual problem here which is that
06:54 - dumb elements can be members of
06:56 - different classes so let's let's
06:58 - discover if this is true by saying also
07:02 - like an apple I'm going to give it I'm
07:07 - going to give an Apple a certain amount
07:10 - of padding so you can see all the apples
07:13 - have padding but the blueberries do not
07:15 - look the blueberry got the patch it did
07:18 - change to an apple but it's still blue
07:20 - why did it change it's because oh i've
07:25 - off the deep-end in this video into the
07:26 - into the nether region of whatever but a
07:30 - Dom elements can actually members of
07:33 - multiple classes so when I said class
07:35 - Apple I didn't say remove the class
07:37 - blueberry and become an apple I simply
07:41 - said also become a member of the group
07:44 - Apple now blueberry says to be blue
07:47 - apple says to be red blueberry says to
07:50 - have no padding Apple says to have a lot
07:53 - of padding well if this object is both a
07:56 - blueberry and an apple it was a
07:58 - blueberry first so it's gonna be blue
08:00 - forever and ever
08:01 - but blueberries don't have any padding
08:03 - so since it doesn't have any padding it
08:05 - will be an apple when it comes to
08:07 - padding and you can see that that's now
08:09 - what's happening now there probably is I
08:11 - you know a p5 function called whoops I
08:17 - maybe there's a p5 function called
08:19 - remove class and this would now say I
08:27 - didn't work so I was going to look I was
08:30 - gonna get that wrong and then look in
08:31 - the reference for this function but if I
08:33 - wanted to only be an apple I need to
08:36 - first remove the class blueberry you
08:38 - know I went off on a tangent and I had
08:40 - some problems that I had to debug in
08:42 - then I had to think about why I might be
08:43 - wrong and it all magically has worked in
08:45 - the end which is great but what let's
08:47 - let's let's meditate for a second
08:51 - go back to why we're here the point of
08:53 - what I was trying to show you was a
08:54 - missing piece is that classes and ID's
08:58 - are things that you often want to build
09:00 - into the HTML page so you can access
09:02 - elements from JavaScript but now we're
09:05 - seeing that the inverse is also true
09:07 - classes and ID's are things that might
09:09 - exist in the HTML page part of your CSS
09:12 - and you sometimes want to assign those
09:14 - in JavaScript and what's kind of
09:15 - exciting about those is you can assign
09:17 - them and you can take them away so um
09:19 - this is kind of a useful thing I could
09:21 - also do something like oh okay so that's
09:25 - that's item number one now there is
09:27 - another aspect of this another aspect of
09:31 - this is that oh that I missed in and you
09:35 - know what actually no that's fine I'm
09:37 - gonna no that's good so that's good for
09:40 - this video here's here's my suggestion
09:42 - to you for an exercise I'm gonna make
09:43 - this into two videos I think always Lyc
09:45 - second another video is better then just
09:47 - keep going so here's my exercise for you
09:50 - do something similar create for yourself
09:54 - a whole lot of Dom elements or may
09:57 - actually you know it here's an exercise
09:59 - so you do it differently than what I did
10:00 - here make a bunch of Dom elements like
10:03 - five of them six of them in your HTML
10:04 - file give them all classes and assign
10:08 - them styling information based on those
10:11 - classes in the CSS now in your
10:13 - JavaScript select them you select all by
10:17 - class and then build in some event that
10:19 - changes their class so you can
10:21 - dynamically style them adding and
10:23 - removing classes as well so that that's
10:25 - kind of an exercise that I think you
10:26 - could try and in the next video I'm
10:27 - gonna show you one more missing piece
10:29 - which is how you can use parent and
10:31 - child with a p5 variable not just with
10:34 - an ID and what that might allow you to
10:36 - do