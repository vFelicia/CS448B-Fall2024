00:00 - oh hello I'm back I don't know if
00:05 - there's a pract I didn't like post
00:07 - anything and schedule this I just sort
00:09 - of like was live-streaming earlier then
00:12 - I had to go downstairs for a meeting and
00:14 - then I thought I got to finish this when
00:15 - I come back now it's like almost 7:00 in
00:17 - the evening it's been a very long day
00:19 - very long week I haven't seen anyone
00:22 - post anything in the chat yet so we'll
00:24 - see if if this is actually happening
00:29 - usually it takes weirdly I don't
00:33 - actually see that I am streaming oh no
00:37 - people are starting to say hi and that
00:39 - does say that I am live the Internet can
00:41 - totally see you is what it says now in
00:45 - my little like dashboard there and I do
00:47 - see myself as well okay so I'm back
00:48 - alright so what's going on here um it's
00:52 - been a very long week I said that
00:54 - already I'm saying it again
00:55 - I made this version of snakes and
01:00 - ladders earlier and now I'm trying to
01:02 - figure out if I can kind of like wrap
01:04 - this all up what do I need to do is the
01:11 - question here do I need to what's going
01:18 - to be the end
01:19 - what's this gets edited into something
01:22 - what will that be
01:25 - so let me think about this some one
01:31 - possibility yeah it looks like I'm
01:34 - coding checkers right one possibility is
01:37 - that I just pick up off from where I
01:41 - left off and that's a very long coding
01:44 - challenge another possibility is that it
01:47 - gets divided into three parts one for
01:50 - part one would be the part where I just
01:54 - program the system without any snakes
01:56 - and ladders sorry sometimes there's a
01:59 - delay there might be a little bit of an
02:00 - audio delay here I can see it based on
02:02 - what I see in the monitor then part two
02:06 - would be adding the snakes and ladders
02:07 - and then part three would be kind of
02:08 - like refactoring and fixing it up and
02:11 - kind of
02:11 - can animate a little bit so I can also
02:16 - go back and do the whole thing again
02:19 - which is I don't think I will
02:22 - and yes oops I'm not in the slack
02:27 - channel let me take a look at that okay
02:30 - so let me think about this and how do I
02:32 - get this computer not to go to sleep why
02:34 - does it go to sleep just give me a
02:35 - second here give me a second here this
02:38 - is a computer that I use on the side to
02:39 - monitor some stuff and it always goes to
02:41 - sleep and so many times I have told it
02:45 - not to just oh let's go to energy saver
02:49 - oh look at that 15 minutes
02:53 - how about never there we go no I've got
02:57 - that fixed okay yes I could do I kind of
03:00 - want to do 2048 it's probably a terrible
03:03 - idea because I'm tired it's late I'm not
03:06 - gonna be at my best but why not
03:12 - only 900 subscribers still 400k is that
03:16 - true that's crazy well maybe we could do
03:21 - something some kind of like get up to
03:24 - 400 K subscribers that would be exciting
03:26 - well let me finish this off let me undo
03:33 - whatever I did most recently let me get
03:39 - back to where I was is this where I was
03:46 - yeah this is where I was where I was
03:49 - testing some stuff out I like the fact
03:51 - that the player by the way by accident
03:54 - has a all right so I did this then I'm
04:06 - just trying to get it back to where I
04:08 - could like last left off we take out the
04:11 - framerate and so what does this look
04:16 - just happened
04:22 - what happened to my player
04:26 - where did my player go well look at this
04:30 - the light by the way my lighting is off
04:32 - because this light I just noticed you
04:35 - can see I don't know if you can see this
04:37 - I'm like over here how do I point to
04:39 - that right over there there's like a
04:41 - little bit of a this light it's not in
04:44 - the right position oh how do I fix this
04:50 - how do we tighten this this thing I
04:57 - think that's better now I think that's
04:59 - fixed all right let's see here what did
05:06 - I just do to make it that I can't see
05:14 - the player anymore
05:16 - oh something weird is happening hold on
05:29 - there we go oh I was like commenting
05:31 - something out that shouldn't have been
05:33 - commented out okay there we go alright
05:37 - so this by the way when I made it go
05:39 - just one thing I don't know why I didn't
05:41 - increase the framerate when I was trying
05:42 - to debug this before alright and let's
05:46 - go back to the player and go to here
05:52 - there we go okay why did it get
05:58 - undefined what did I mess up
06:05 - so sometimes okay so there's another bug
06:07 - I need to fix play or digest line 24 I'm
06:14 - sorry I probably shouldn't start it ya
06:15 - know why not why not let's let's enter
06:17 - current tiles at this set spot Oh
06:19 - so if this if it goes over so what I
06:25 - would like to know is it stopped can i
06:30 - let's look at what this dot spot is so
06:33 - two hires are too low too high went past
06:40 - the end so right now in sketch oh this
06:46 - doesn't need to oh I started doing this
06:48 - which I don't want to do yet okay shoot
06:56 - where did I end with maybe I can undo a
07:00 - little bit more here let's see let's get
07:06 - rid of this there we go there we go
07:13 - there we go and put the frame rate back
07:18 - here okay now I think I am legitimately
07:21 - back to the state that I was alright
07:28 - math.max oh that would have been that
07:30 - would have been smart the maximum
07:34 - alright if not current return I've no
07:38 - idea what that's referring to okay so it
07:41 - is now 7:00 p.m. on the East Coast I am
07:44 - somehow still live streaming on YouTube
07:46 - and I'm very low-energy in terms of my
07:52 - inner soul but I'm gonna push through
07:55 - and cry - as quoting the chat here keep
08:02 - on truckin so the first thing that I
08:07 - want to do is I actually want to animate
08:13 - the roll
08:14 - so some animate I don't want to do like
08:17 - a full-blown animation so let me come in
08:19 - and do it
08:19 - let me just as a thought experiment let
08:23 - me let me let me make some content for
08:27 - Mature to think about using to edit this
08:30 - stuff together so the first thing that
08:38 - I'm going to create is a little bit of a
08:41 - end to the - the first for the first
08:50 - video ah let me let me just I'm gonna do
08:53 - record way too much stuff it doesn't
08:55 - have to all be used maybe we won't use
08:56 - any of it
08:57 - alright and although I should maybe
09:05 - maybe I should finish the whole thing
09:07 - first let me finish the whole thing
09:10 - first and then let me come back because
09:11 - what might be nice is to have the
09:13 - finished version so what I'm gonna do is
09:14 - the third part it's actually gonna be
09:16 - the third part I won't say part three
09:18 - just in case and I'm gonna add the
09:20 - animation stuff and here we go look I'm
09:22 - getting something like weird shadowing
09:24 - but that's fine
09:26 - hello I'm back to continue my exciting
09:30 - snakes and ladders game and what I'm
09:34 - realizing and what you've seen as I've
09:36 - been kind of putting this together in a
09:38 - very messy and overly complicated
09:41 - probably way is it's very hard to know
09:43 - what's going on and whether it's working
09:45 - or not I in between this last part that
09:47 - you might have seen in this I stopped
09:49 - and I'd like to check something so I'm
09:50 - pretty sure that it is working correctly
09:52 - logically but it would really help I
09:54 - could just sort of do some debugging by
09:56 - like console logging more stuff to see
09:58 - what it's doing but I would really like
10:00 - to just see an animation so I would like
10:02 - to see an animation where I kind of
10:04 - think of the game as having different
10:06 - states there's the state where I am
10:09 - somewhere then there's the state where I
10:10 - roll the die or the die if that's or
10:14 - maybe it's spin whatever it is roll the
10:15 - die and then I see where I'm going to
10:18 - move to then I move there then if that
10:21 - part is a snake or a ladder I see that
10:23 - I'm going to move to a new spot if not
10:25 - I'm just going to roll again
10:27 - so I want to think about different
10:29 - states so I'm gonna do this in a goofy
10:31 - way that is a limit for the first time
10:34 - in my life ever use Const because what I
10:37 - really want to do is make some constants
10:39 - that are like look that are talking
10:42 - about the state of the games I'm gonna
10:44 - say oh this is probably I'm gonna say
10:47 - roll state oh this is like so overly
10:50 - like talkie and too many characters but
10:53 - a minute I'm if it's afraid to call it
10:55 - roll because what if I something else
10:57 - called roll roll state where I'm rolling
10:59 - the die I'm gonna say preview state
11:03 - which actually is that the sames when I
11:06 - roll the die I see the preview of where
11:08 - I'm about to go so I'm gonna make that's
11:09 - gonna be the same then I'm going to have
11:11 - move state where I draw my next move and
11:15 - then I'm going to have a snake ladder
11:19 - what's a word there's got to be a word
11:21 - for snake and ladder Schnatter lake
11:26 - let's try Schnatter I like that
11:28 - Schnatter s'matter which is that the
11:32 - state of moving to the snake or ladder
11:36 - if that exists and then I'm gonna go
11:38 - back to the roll state
11:39 - so looking through the draw loop let's
11:42 - think about what happens so if so now I
11:46 - need a variable called state and States
11:50 - is going to start at roll state so I'm
11:55 - gonna start the game the game is gonna
11:56 - have the roll States
11:57 - so if then I'm going in to draw I'm
11:59 - always gonna draw all the tiles why not
12:03 - I'm always gonna draw all the Snider's
12:05 - that's my new word show Snyder's
12:08 - refactoring that's my word for snakes
12:11 - and ladders so if I go into the tile
12:15 - object show Snyder's and this should
12:20 - actually be I could probably do some
12:22 - global find and replace I might change
12:23 - that later from snake or ladder to
12:24 - s'matter okay so now back here player
12:29 - dot roll so definitely this is something
12:31 - that happens if state equals if state
12:38 - equals roll state I want to roll and I
12:43 - want to increase the number of rolls
12:45 - okay so that I want to do now then I
12:49 - want to maybe had to say player show
12:53 - preview so in the player what the player
12:58 - does in roll is have an actual so right
13:04 - now I do everything all at once I roll
13:05 - the die I move the spot I draw the tide
13:07 - I check if it's a snake or ladder I move
13:11 - it so I got to divide all this up into
13:12 - different parts this will make this
13:14 - better
13:14 - so I need more variables hope is the
13:18 - eboard variables the answer is more
13:19 - variables this dot roll maybe I can use
13:25 - the word die I don't know that because
13:27 - for I'm going to say roll equals
13:30 - yeah roll equals negative 1 so it
13:33 - doesn't have a roll at the beginning and
13:34 - this is gonna be rolled I gonna call
13:37 - this roll die actually rolling the die
13:39 - and then I'm gonna keep whatever this
13:42 - roll is so that's the only thing I'm
13:44 - gonna do in roll die so I don't know
13:47 - something this is something else I'll
13:49 - figure that out later all I want to do
13:51 - is pick that roll
13:52 - and so go back to the sketch I want to
13:56 - roll die and I don't need the tiles so
14:02 - back in the player I don't need the
14:04 - tiles I'm just picking that number now
14:06 - what I said that I want to do I think is
14:08 - show the preview so what I might like to
14:12 - do is just kind of like highlight all
14:14 - the ones up until the next spot so I
14:16 - need to like figure out what the next
14:17 - spot is but not actually move the player
14:19 - there yet so if I think about that
14:21 - actually what I do is I maybe I have
14:27 - next I have a next this dot next equals
14:33 - negative one is it nice by the way
14:35 - how all of these variables have the same
14:38 - number of characters they line up so
14:40 - nicely that makes me so happy so I'm
14:43 - going to say then this dot next equals
14:47 - this dot spot Plus this dot roll right
14:53 - so I keep track of the current spot and
14:56 - the next role and then I want to say
14:59 - player show preview and what the preview
15:06 - is going to do and I'm gonna need the
15:07 - tiles for this is it's going to
15:09 - highlight some of the tiles so I'm going
15:12 - to say for let I equal this dot spot is
15:18 - less than this dot next and the end is
15:23 - going to be if this dot next is that is
15:28 - past the end of the tiles so I have to
15:30 - say the end is the maximum of this dot
15:38 - next and tiles dot length right if this
15:43 - dot no no no the minimum whichever ones
15:46 - lower minimum are the maximum right I
15:49 - want to say like if if next is 12 then
15:52 - the number of tiles is 10 I want the end
15:53 - to be 10 so it's whichever one is the
15:56 - smaller than one so I think that's the
15:58 - minimum function I'll fine so I'm going
16:01 - to go all the way up to the end I plus
16:04 - plus and I'm going to say tile
16:06 - index I highlight so what that's going
16:11 - to do it should highlight all of the
16:13 - tiles that I'm about to move to and so
16:16 - if I go into tile and I create a
16:20 - highlight function I can just say let me
16:24 - highlight them with a nice little green
16:26 - and some alpha and draw that rectangle
16:29 - so what happens dare I dare I attempt to
16:33 - run this now and just see this so what
16:36 - I'm gonna do actually is comment out the
16:38 - rest of all of this and see if I can
16:45 - roll the die and see the highlighting
16:49 - show Schnatter x' it's not a function
16:53 - really really sketch as line 63 shows
16:57 - Natters is not a function shows Natters
17:03 - snakes and let Schnatter it's not a
17:06 - Schnatter it's a stair Schnatter show
17:10 - Schnatter
17:10 - show its Nadder never record coding
17:14 - challenges late in the evening on a
17:16 - Friday all right cannot read property
17:20 - length of undefined player is line 13 so
17:23 - let's figure this out tiles doesn't know
17:27 - what it is because I forgot to pass in
17:29 - the tiles when I call show preview
17:31 - probably you just use tiles of the
17:32 - global variable but cannot read
17:36 - highlight of undefined now I think I
17:38 - know why this is the problem so in the
17:42 - show preview function when the game
17:46 - starts the the players actually at spot
17:49 - negative one because it needs to a roll
17:51 - of one gets you to the first spot so I
17:53 - do have this other thing where I need to
17:55 - say start equals the maximum of zero in
17:59 - this dot spot so if it's negative one I
18:02 - gotta I think I can fix that right
18:05 - maximum means the highest is that right
18:07 - is that right oh no no I'm doing it
18:11 - backwards I'm doing it backwards if you
18:14 - want the maximum to be 10
18:16 - you use minimum because I want the lower
18:18 - one I did that backwards all along silly
18:24 - me
18:24 - silly me silly silly me all right cannot
18:28 - read properly highlight of undefined
18:30 - so let's look at let's look at console
18:35 - dot log I right here just to sort of see
18:38 - whoops the e key on my computer barely
18:41 - works negative one it's still got
18:43 - negative one the minimum no no I did it
18:47 - backwards again okay here we go there we
18:50 - go okay so we can see here on getting
18:52 - that preview perfect perfect I'm getting
18:55 - that preview for state one now I'm not
18:56 - doing anything but doing that over and
18:57 - over again but that's great now what I
19:00 - need to do is say the state what happens
19:03 - now immediately equals move state what
19:07 - did I call it move state move state yep
19:09 - the state should equal move state now if
19:17 - the state equals move state then what I
19:23 - actually want to do is move the player
19:24 - so I'm gonna say player dot move so I'm
19:30 - gonna say player dot move and in the
19:33 - player I'm going to say move and I think
19:38 - it's really just a matter of saying this
19:41 - dot spot equals this dot next right just
19:47 - move it to the next spot and I could
19:50 - also like check if it's off the edge at
19:53 - the end but let's not worry about that
19:54 - right now then what I want to do all of
19:58 - these I want to call player dot show
20:02 - right I want to say player dot show
20:04 - right which just draws the player in the
20:07 - spot where is the show function and I
20:12 - need to give it the tiles this is really
20:14 - kind of convoluted about giving the
20:16 - touch all right so then I'm gonna give
20:22 - it the tiles cuz it needs to figure out
20:24 - what tile to show itself on so let's try
20:27 - this
20:29 - all right so why did this happen only
20:31 - once did I put a no loop in there
20:34 - zero one two what's what is what am i
20:37 - console logging anyway I want to I want
20:42 - to move and then I want it oh and then I
20:45 - want to set the sorry state equal to
20:49 - roll state so I'm gonna have to check
20:53 - the snakes soon but let me do this so
20:55 - let me do this oh yeah so let me set the
20:58 - frame rate down this is great now I've
21:00 - really got something I can kind of track
21:02 - a little bit let me put the frame rate
21:03 - back down oh look at that whoa wait a
21:07 - second something's wrong here
21:09 - I want to see a head and then I want to
21:13 - see it move I want to see it in its old
21:16 - spot what do I have wrong all right what
21:18 - do I have wrong oh boy this needs to be
21:25 - an else--if right because I just changed
21:27 - it to move State and then I do it
21:29 - immediately but no no no I only wanna be
21:32 - able to do one of these states yes
21:34 - switch statement would have done me well
21:35 - here so let's now run this again and I
21:39 - have an error cannot get center of
21:41 - undefined Claire J s line 44 let's enter
21:45 - equals current current equals tiles dot
21:47 - this dot spot so what is this dot spot
21:51 - there it is negative one because once
21:59 - again I can't draw the player at its
22:02 - negative spot so this is a case that as
22:05 - long as this dot spot is yeah I guess a
22:10 - nice way of doing this would be if if
22:14 - not current returned so just like get
22:17 - out of here this is one way that I could
22:18 - do it if there's no current thing I
22:19 - don't need to draw it get out of here it
22:25 - moves but it's moving one spot beyond
22:28 - where the role is right so why is that
22:34 - so that's a little bit of a mistake the
22:36 - role says I need to include the next
22:41 - less than or equal to next
22:43 - I need to go all the way up to that spot
22:46 - there we go moves through there I kind
22:50 - of want to keep the highlight in there
22:53 - but I could do it but at least I could
22:55 - see so this is really doing what I
22:56 - wanted to do now I can see it it's roll
22:59 - and then it moves there now now what I
23:03 - want to do is oh it's going to land on
23:05 - the ladder but it's not gonna go to
23:07 - snake it's not going to go down now or
23:08 - that's a ladder visually I've got some
23:11 - real serious graphic design issues there
23:12 - now what I need to do is at the end of
23:16 - the move State at the end of the move
23:19 - State I need to check if the player is
23:23 - on us if the player so if the player is
23:27 - honest matter I need to do something
23:33 - otherwise I can just go back to the roll
23:36 - state right if the player is on a
23:39 - Schnatter now how do I know that what do
23:40 - I have going on is that the something
23:43 - else that I hadn't figured out yet yes
23:46 - it sort of is right so this is I can
23:49 - call this is Snyder and I can say I can
23:56 - look at the tile at its spot and I can
23:59 - say if tile snake or ladder is not equal
24:05 - to 0 return true so this at least so as
24:12 - long as there as long as it's actually
24:13 - on a tile and that tile is a snake or a
24:17 - ladder return true otherwise return
24:21 - false let's just put this in there right
24:23 - now and if I know I could return the
24:25 - result of this let's do that but I might
24:27 - want to do some other stuff in here
24:29 - which maybe is a bad idea
24:30 - so let me just return the result of this
24:33 - just to like make this a little bit more
24:37 - elegant and I need more space to see my
24:41 - code as long as there is a tile and hey
24:45 - that tile is a snake or a ladder return
24:47 - true otherwise
24:48 - oh no yeah otherwise return false that's
24:50 - what I'm doing so now if I were to go
24:55 - out
24:57 - into the sketch I'm going to say no you
25:02 - know like no loop console dot log hello
25:08 - so I'm just want to see that right there
25:11 - it's stopped so if I can get lucky and
25:13 - have it land on one of these so now I
25:15 - can speed it up and it should stop at
25:18 - some point it'll land on one of these it
25:21 - didn't and it got to the end so if it
25:23 - gets to the end so let's fix it so it
25:26 - starts over again player dot j/s line 21
25:29 - player digest line 21
25:31 - if it gets to the end and the end is
25:34 - this is the last one now that have less
25:38 - than equals the length minus 1 that
25:40 - should fix that okay if you guess the
25:44 - end it didn't actually restart because I
25:46 - got rid of all that game logic
25:47 - what is this player digest line 20 oh I
25:50 - don't need this anymore thank you
25:53 - why come on land on one of these oh I
25:55 - know a way to fix that let's have it
25:58 - just move one spot every time the role
26:01 - is always one Oh interesting so it's not
26:05 - detecting that it's landing on a
26:08 - Schnatter why not if I mess something up
26:13 - let's let's look at this return tile
26:21 - this is the tile that it's on this dot
26:24 - spot right because it has moved its
26:27 - moved oh this is not a I didn't call the
26:31 - function so if I I didn't rename the
26:34 - funk is is Schnatter okay great there we
26:38 - go so we can see it stopped so that's
26:40 - good I'm detecting that correctly now
26:42 - what I want to do is go to another state
26:44 - I want to say state equals what did I
26:49 - call it
26:51 - s'matter state
26:59 - state equals Schnatter state okay so now
27:05 - otherwise go back to the role state so
27:08 - you can move and go back to the role
27:09 - state now I need to check else if state
27:12 - equals Schnatter state oh this is very
27:16 - exciting Oh everything is so much harder
27:19 - to program than you think if state
27:21 - equals Schnatter stake state creating a
27:27 - tongue-twister here now what I need to
27:28 - do is what I need to go back to here and
27:33 - where's my something else the stuff that
27:36 - I saved did I lose it well this is the
27:39 - time where I need to move Schnatter move
27:44 - Schnatter so what I want to do is I want
27:47 - to say this dot that's why I need I'm
27:50 - the player I need the reference to the
27:52 - tiles you know what this is ridiculous I
27:54 - should just have the player store an
27:57 - internal reference to the tiles or it
27:59 - uses this is getting a bit ridiculous I
28:11 - should really have the player just store
28:13 - an internal an internal variable that
28:17 - stores a reference to the like it could
28:19 - actually add this dot tiles here and it
28:21 - points to the tiles or just use as a
28:23 - global variable I think for expediency
28:24 - right now I'm trying to stay true to
28:26 - object oriented programming in some way
28:28 - there's really no point in me passing in
28:30 - the tiles everywhere because I can just
28:34 - use the fact that it is a global
28:36 - variable tiles Styles tiles is a global
28:39 - variable I need it everywhere let's not
28:42 - go nuts let's take that out of having to
28:45 - pass it through everywhere and just know
28:47 - that the player can go look up stuff in
28:49 - the tiles whenever it wants to because
28:52 - what I need to do right now in the
28:54 - player is move according to this matter
28:56 - so I need to get its current spot and it
29:01 - actually would make sense that the spot
29:03 - perhaps not to be an index but to store
29:05 - which pilots on but that aside then I
29:07 - could say this dot spot plus equal the
29:13 - tiles snake or ladder value so now let's
29:19 - go and just change this to Schnatter to
29:24 - be consistent so let's find everywhere I
29:28 - say this dot snake or ladder and change
29:32 - that to this dot Schnatter
29:34 - and replace all and that should be make
29:38 - our lives a little bit more consistent
29:40 - so now if state equals Schnatter state
29:45 - now what do I do
29:46 - I say player dot what did I call it
29:49 - move Schnatter move Snyder so there's a
29:55 - regular move and there's a Schnatter
29:56 - move and those happen separately and as
29:59 - soon as that's done the state goes back
30:01 - to the role state okay let's see if we
30:03 - let's see if this is if we're good here
30:07 - where did everything go
30:09 - this is a bad sign that there is nothing
30:14 - on the screen there what did I mess up
30:16 - let's look at the state it's zero it's
30:21 - in the role state let's look at the
30:25 - player the spot is not a number next
30:28 - it's not a number so something went
30:30 - wrong with the players next and spot
30:33 - almost immediately so let's take out
30:37 - this little bit here let's take out this
30:41 - else if to see if the move Snyder really
30:44 - just screwed stuff up spot zero roll one
30:50 - next zero but it's because mmm alright
30:56 - let's let's I'm gonna just back up for a
31:02 - second and I'll go back to move state
31:05 - roll state move state roll state okay so
31:07 - move state roll state works hey what
31:09 - happened to my Snyder's why don't I see
31:12 - them anymore
31:15 - I must be something to do with the show
31:19 - Snyder so these seem to not exist oh
31:23 - because
31:24 - I left this in there I left the tiles in
31:27 - one spot which is really a problem when
31:29 - I was like refactoring I left that in
31:30 - there so is there some other place I
31:33 - I have tiles and this is okay so let's
31:39 - see here what have I done to deserve
31:41 - this
31:42 - if this dots not or does not it probably
31:45 - also messed something up when I oh I
31:49 - know I think I might know what the
31:50 - problem is I think I know what the
31:53 - problem is I refactored oh this is I'm a
31:55 - terrible programmer and I change didn't
31:58 - change the property here that's why we
32:00 - don't have them anymore so let's put
32:03 - that back okay now we're back to where
32:07 - we were before my refactoring actually
32:09 - caused more problems than its solved so
32:12 - let me see now if I can put this back
32:14 - and even I don't know I'm just gonna go
32:18 - crazy and put this Schnatter snake back
32:20 - okay
32:21 - so ah okay good now I'm back I'm still
32:24 - debugging let's let's go back to alright
32:31 - so do we ever get to what's causing the
32:34 - problem we did we lose immediately okay
32:36 - hold on if I stare at the code for
32:40 - longer I'll know what's happening I need
32:42 - some better debugging strategies let's
32:44 - think about this I owe em can you roll a
32:51 - zero shouldn't start where you are
32:53 - already oh I'm getting some comments
32:55 - else if switch state equals okay yeah by
33:00 - the way this I really should this is a
33:02 - little nice little improvement I can
33:03 - make but let's figure out let's figure
33:05 - out where it's going wrong I'm gonna
33:06 - back out of my adding the Schnatter
33:09 - state let's go back and just see all
33:15 - right I said I still have a problem
33:17 - that's good so I have a problem where
33:20 - spot 0 Row 1 oh and I forgot this has to
33:24 - be in there that's where the problem is
33:25 - okay so this is fine this is fine now do
33:32 - I detect at least I can say is this
33:37 - detect correct
33:39 - if it lands on one it's gonna keep going
33:42 - whoops whoops I don't want that this is
33:46 - another I don't want this else here so
33:50 - so much mess but I just want to see if
33:52 - the detection
33:53 - oh it's detecting it all the time no my
33:56 - is Schnatter function is a big problem
33:58 - this function is not working properly so
34:01 - let me look at the player object if oh
34:08 - this I forgot oh boy this renaming of
34:13 - variables really really bad bad bad
34:17 - Schiffman alright so now we're not
34:20 - seeing it yep there we go we landed on a
34:24 - spot and there we go so we landed on two
34:26 - there were just two and we can see here
34:29 - when we land on one we got one another
34:32 - one another one okay so we're good now
34:34 - now we're good with the is is Schnatter
34:39 - okay we're good with it's matter now we
34:43 - can go back to once we are honest matter
34:48 - setting that state to the Snyder state
34:51 - otherwise go back to the rule state okay
34:54 - oops and I've got my brackets out of
34:56 - place there we go so basically what I'm
35:00 - doing here is I move the player if it's
35:02 - a snake or a ladder go to that state
35:04 - otherwise just roll again so now if it
35:07 - is a sink or a ladder
35:08 - let's try actually doing this and
35:10 - rolling oh it's working look did you see
35:16 - that now it happens really fast
35:18 - look what happen when it gets to there
35:20 - it goes back see we're in this nice loop
35:23 - and we're actually singing we're
35:25 - actually seeing it if I slowed it down a
35:26 - little more you know it might be nice to
35:27 - animate it going you sliding down that
35:30 - thing but as you can see you probably
35:33 - don't want to watch me try to Pat okay
35:36 - so we're we're in pretty good shape now
35:37 - a couple things I need to do number one
35:40 - is I need to figure out if the game is
35:41 - over so that should work fine this
35:44 - should be the same idea if the player
35:46 - spot is greater than equal to the end
35:48 - keep it at the end set game over equal
35:50 - to true
35:51 - this player show anymore if game is over
35:53 - reset the player all this stuff should
35:56 - really still work in terms of averaging
35:58 - and all of that so let's put all this
36:00 - stuff back and let's run this now the
36:03 - thing is I need to be able to roll more
36:06 - than just a one and I want to slow it
36:09 - down a tiny bit so I can really watch
36:11 - and see that it's running so what I'm
36:13 - gonna do is I'm gonna go by I'm gonna
36:14 - not make the framerate one frame per
36:16 - second but I make it five frames per
36:18 - second and then by golly I am going to
36:25 - really trying to like keep up the energy
36:27 - right it's like fading fast but I'm
36:29 - keeping it up I am going to be able to
36:35 - roll one through six so if I go back to
36:38 - here I want to roll one through six and
36:40 - now here we go
36:41 - so I'm seeing where I roll now remember
36:44 - white is a snake so I fell down I got
36:47 - past it here we go I got up the ladder
36:50 - and we made it to the end yes we are
36:55 - making snakes enough now you can see
36:58 - here that my talent well it barely lies
37:01 - in anything I tell it lies and maybe
37:04 - talking encoding at the same time
37:05 - although I kind of do that brother
37:06 - ridiculously employed my talent
37:08 - certainly doesn't lie in visual design
37:10 - in interaction design there's a lot of
37:13 - improvements here but at least I'm kind
37:15 - of showing you the pieces here how could
37:17 - you create these different states now
37:18 - that I have these different states I
37:19 - could actually have internal animations
37:21 - in those states as well so let me at
37:23 - least just to really like feel that this
37:26 - is working in an interesting way let me
37:28 - go back to the sketch just to finish off
37:31 - here let me make five five snakes five
37:39 - ladders let me make let me instead of
37:44 - making it ten by ten let's make it 20 by
37:46 - 20 for fun so I need to look for that
37:49 - resolution to make it 20 now and then
37:53 - let me let it run quickly so we're going
37:56 - to now watch a simulation of snakes and
38:00 - ladders on a 20 by 20 grid
38:04 - I'll make I'll make this bigger and see
38:07 - how this plays out whoa okay I forgot
38:09 - that my circle is much too big so we can
38:12 - see that on this 20 by 20 grid with
38:14 - these random snakes and ladders that we
38:18 - are averaging so far sixty-seven rolls
38:21 - let's let that this is a little bit of a
38:23 - bug here that when I'm drawing the
38:24 - player the player should be drawn
38:26 - according to the tile size so I I guess
38:31 - this where does that does that have a
38:34 - where can I access that I'm not gonna I
38:36 - don't know I'm just gonna make that
38:37 - sixteen right now so I could be five so
38:40 - now we can see here is it and I almost
38:43 - want to make this even more insane by
38:46 - just creating 15 of each and now let's
38:52 - watch this totally insane snakes and
38:55 - ladders game can it ever make it it's
38:57 - doesn't made
38:57 - oh it made it in 75 rolls I made it in
39:00 - like just a few rolls so we can now see
39:02 - we can see this is something if you try
39:05 - to create a math formula to compute the
39:08 - average amount of rolls that would take
39:10 - for it to make it from the beginning to
39:12 - the end I don't know that you could do
39:13 - that but now we can watch this little
39:15 - Monte Carlo simulation of just running
39:16 - it over and over again and kind of get
39:18 - that average ourselves so this is snakes
39:20 - and ladders so much you could do to
39:22 - animate this better to make it a game
39:24 - that you could play to try different
39:28 - ideas out to think about the space not
39:30 - as a grid but as some kind of like you
39:33 - know pathway you know Candyland like
39:36 - pathway so many possibilities and yes I
39:40 - should have used ctrl shift F to find a
39:43 - replace in all of the spots but next
39:46 - time I will do a better job of that so
39:47 - this is out really for sure definitely
39:50 - the end of this game which I am now told
39:55 - from the live chat that this is also
39:58 - called escalators and eels
39:59 - snakes and ladders chutes and ladders
40:01 - escalators and eels make your own thanks
40:04 - for watching Oh see you in a future
40:05 - coded challenge
40:07 - all right through 2048 oh you know
40:12 - before I do 2028 which I am considering
40:14 - doing which is a terrible idea but I am
40:16 - considering it
40:17 - I'm gonna give Matt you a little bit of
40:19 - help and I know I'm making this kind of
40:23 - awful but let me let me make a nicer
40:27 - looking version of this to just have in
40:30 - the background during the like clips
40:33 - that will kind of organize this all
40:35 - together and Matthew if you're watching
40:37 - this at some point I am happy to I can't
40:39 - on Monday but I I don't know how I'm
40:41 - going to de like releasing this but I
40:42 - could always come back on Tuesday and
40:45 - rerecord some intros so let me see here
40:49 - let's have fewer of these and let's set
40:54 - the I thought the frame rate of five was
40:56 - actually pretty effective and the real
40:59 - game is ten by ten so I don't know why
41:01 - it let's let's go back to that I know
41:07 - this board isn't a great one let's get a
41:09 - nice looking that's pretty good actually
41:15 - so I should make the probably should
41:21 - make the snakes red let's at least do
41:25 - that in this version of it because let's
41:35 - make it like a kind of reddish color
41:39 - otherwise a oh that's not red otherwise
41:44 - a kind of greenish color and we'll do
41:52 - the preview will do that preview thing
41:57 - as actually blue oh and now I need to
42:03 - get a nice I need to have a nice that's
42:07 - actually not so bad
42:09 - all right
42:19 - all right here we go rainbows snakes
42:21 - right okay hello you were about to watch
42:26 - a coding challenge where I attempt to
42:28 - make a game called snakes and ladders
42:30 - this is a bit of an intro that I'm
42:32 - recording after I've completed this is
42:33 - the finished version you could now
42:35 - decide if you want to keep watching but
42:37 - the reason why I'm recording this intro
42:38 - is that this challenge and ended up
42:41 - being in a few different parts because
42:42 - it took took a long time and so while
42:44 - I'm doing it I don't know that it's
42:46 - gonna be that but I'm letting you know
42:47 - that it's gonna kind of end abruptly but
42:49 - there'll be a second part in a third
42:50 - part look at this video's description if
42:52 - you're watching this video that means
42:53 - there will be a link in this video's
42:55 - description to the second part and in
42:56 - that video they'll be linked to the
42:57 - third part even if there does we'll be
43:00 - there okay thanks
43:01 - let me let me try to be more succinctly
43:03 - I'll give that to you a couple different
43:05 - takes now I'm not gonna use this cuz I
43:09 - use it um hello I went it quickly before
43:11 - the coding challenge starts this is the
43:13 - end result of the coding challenges my
43:15 - own kind of crazy version of snakes and
43:17 - ladders that could use a lot of
43:18 - improvement mind you but I wanted to
43:19 - come here let you know that the
43:20 - challenges in multiple parts I don't say
43:22 - this during the challenge because I
43:24 - didn't really realize it I just kept
43:25 - programming it but if you end a little
43:27 - bit abruptly this first part if you look
43:29 - at the video's description there will be
43:30 - a link to the next video in the series
43:32 - so the whole snakes and ladders
43:34 - challenges there but it's in three parts
43:36 - enjoy okay now I'm gonna be at the end
43:43 - I'm gonna say you might not need to use
43:45 - this but I'm gonna record all these
43:46 - possibilities okay so I'm stopping the
43:49 - challenge now in this part where all I
43:51 - did oh look I have a bug hold on time
43:56 - out let's find out what this bug is Wow
44:00 - interesting we have an edge condition
44:02 - player yes line 32 cannot read
44:05 - properties matter of undefined player
44:08 - dodge is line 32 look at this I didn't
44:12 - check if it's a legitimate tile huh but
44:20 - why would I get there if it's not where
44:23 - is it hold on everybody let's look at
44:28 - player dot spot now oh it's
44:32 - back at the beginning so somehow back at
44:35 - the beginning in my resetting everything
44:38 - probably this when it reset somehow it
44:41 - got to be negative one where did this
44:45 - spot well where could that have happened
44:52 - this dot reset sets everything back to
44:55 - negative one and then oh this state you
45:02 - know what I think what could happen is
45:06 - if the game over is true I better set
45:10 - the state back equal to roll state I
45:13 - think it it could be that the game ended
45:16 - but it wasn't move state or something
45:17 - and then this messed things up because
45:20 - the last tile has a Schnatter oh it does
45:23 - it shouldn't been allowed to though oh
45:26 - oh that's the mistake actually that's
45:31 - the mistake I mean it's nice to put this
45:32 - in here but the last tile what I've been
45:35 - like recording all these with a death
45:37 - scythe to redo all these good this is
45:39 - totally invalid all right I'm gonna redo
45:44 - these totally invalid example of the
45:49 - game uh I don't think 2048 is happening
45:52 - but you hold on where do I pick the
45:53 - status if we that I invented this word
45:56 - Schnatter I mean I didn't invent this
45:58 - has to be I thought this would work I
46:02 - guess I need a minus one here no no no
46:05 - wait this is for the - index - whoa oh
46:11 - no it's a snake it's a snake that ended
46:15 - up in the top so yeah I guess this has
46:20 - to be oh yeah can't be the last spot a
46:24 - minus one there a minus one there I
46:27 - don't think I need to that'll just
46:29 - battle B now I'm gonna go back and
46:30 - rerecord all these start over sorry I'm
46:33 - starting over
46:33 - okay the role State thing probably was
46:35 - fine but I added that in that's good
46:37 - alright let's find a nice one this looks
46:42 - pretty good
46:43 - right I don't
46:46 - I like this one this one is awesome okay
46:51 - great great okay here we go again you
46:59 - can't have a snake in the last tile
47:01 - because then you can never win the game
47:02 - but okay
47:08 - let's try this again now move the mouse
47:11 - thank you
47:14 - drink some water
47:22 - yeah I should make it move would be
47:26 - really nice to make it move one at a
47:28 - time through all those spots and then
47:30 - see it slide up the thing but I'm not
47:32 - gonna do that right now all right
47:35 - wait I see Alka is typing well you don't
47:38 - have to have a perfect role to win the
47:40 - game that's true okay anyway sorry to
47:44 - met yet hi you're about to watch a
47:53 - coding challenge this is the final
47:55 - result it's my version of the game
47:56 - snakes and ladders
47:58 - you can decide now if you want to keep
47:59 - watching or not but the reason why I'm
48:01 - recording a little intro to the intro is
48:03 - that this challenge is actually in
48:05 - multiple parts and so check the video
48:07 - wait this might end a little bit
48:08 - abruptly but check the video's
48:09 - description and there'll be a link to
48:11 - the next part and you'll those three
48:13 - parts to complete the full snakes and
48:15 - ladders game so here you go that kind of
48:21 - sucked one more time this is like it's
48:25 - you know who's watching me at 7:40 p.m.
48:27 - on Eastern Time on a Friday night I
48:31 - could do this a few more times animate
48:33 - instead of 2048 I gotta go home at some
48:35 - point it's like one was 8 o'clock it's
48:36 - like my bedtime was 2 hours ago
48:39 - let me just be to make the same stupid
48:42 - joke though is that okay with you I'm
48:43 - gonna make the same joke about how you
48:44 - can decide whether I'm just letting you
48:46 - know that I might be there just one more
48:47 - time with fielding I shouldn't be doing
48:54 - this game I mean I know I'm trying to do
48:56 - too fast hello you are about to watch a
48:58 - coding challenge that is in for
49:00 - beep arts and this is an intro to the
49:01 - intro so to speak it's my version of the
49:04 - game snakes and ladders this is what it
49:05 - is so you can now decide if you want to
49:07 - keep watching it you know there's a lot
49:09 - of room for improvement here but the
49:10 - reason why I'm recording this extra
49:11 - little bit is that while I'm doing the
49:13 - challenge I'm doing it on the fly I
49:14 - don't realize that I'm gonna end up
49:16 - ultimately having it be in three
49:17 - separate videos so I just want to let
49:19 - you know if it ends abruptly check the
49:21 - video's description and look for the
49:22 - link to the next part
49:23 - alright thanks and enjoy all right now
49:28 - now I'm gonna come back and say alright
49:32 - so that's ended now so far I this phone
49:36 - alright that wraps up the end of the
49:38 - first part of this challenge and the
49:40 - next part I'm going to start trying to
49:42 - add the snakes and ladders and boy do I
49:45 - run into a lot of trouble so enjoy I did
49:48 - my best and you'll see what happens
50:03 - all right okay okay this is the second
50:05 - part of my snakes and ladders coding
50:07 - challenge this is the final result but
50:08 - where I laughed last left off I only had
50:11 - the board and the player moving without
50:13 - any snakes and ladders on the board so
50:14 - in this video I attempt to add the
50:16 - snakes and ladders
50:25 - alright so that's the end of part 2 it
50:28 - kind of might have ended a little bit
50:29 - abruptly there but what I'm going to
50:31 - attempt to do in part 3 which you see
50:33 - right here is because it was so hard to
50:34 - see whether was working or what was
50:35 - going on what I'm now gonna do in part 3
50:38 - is add this part which lets it happen in
50:40 - multiple stages so figure out how to
50:43 - animate it a little bit and there's
50:44 - plenty of room for improvement
50:47 - so enjoy and enjoy this third part these
50:51 - are the worst let me do some of these I
50:53 - actually think that and there's a little
50:55 - bit of an issue here where I think that
50:59 - the other ones it's fine for me to have
51:01 - the end result in the very first video
51:03 - but I think I'd almost rather just stand
51:06 - in front of this for the other one so
51:07 - I'm gonna redo all those I'm not
51:09 - breaking it I'm totally I should just be
51:11 - like turning off the livestream and
51:12 - doing this on my own
51:14 - I love how much people in the chat are
51:16 - enjoying this part let's try this again
51:22 - okay so that's the end of part 1 where I
51:24 - made just the board with no snakes and
51:27 - ladders if you check this video's
51:29 - description there should be a link to
51:30 - the next part where I start trying to
51:32 - add those snakes and ladders and it
51:34 - doesn't go as well as I might have hoped
51:36 - but you could just watch it if you want
51:41 - they saw a snake on the last tile again
51:44 - whatever okay does anybody else do this
51:51 - like livestream they're weird like takes
51:54 - and then edits up together I don't know
51:57 - yeah this okay alright welcome to part 2
52:07 - of my snakes and ladders challenge in
52:09 - this part where I really struggle I try
52:13 - to add snakes and ladders but strangely
52:16 - yeah I try to add sakes and ladders to
52:17 - the board and figure out a good way to
52:19 - organize that and there'll be one more
52:21 - third part after this second part - all
52:26 - right so that wraps up the second part I
52:29 - know it's kind of hard to see is it
52:30 - working what's going on so in the third
52:32 - part what I do is I attempt to think
52:34 - about the game as having multiple states
52:36 - so that I can organize so that I can
52:42 - hang on all right so that wraps up the
52:47 - second part there there's one more part
52:49 - you can check this video's description
52:50 - for a link to this last part so you
52:52 - might have noticed it's really hard to
52:53 - tell is this thing even working like
52:55 - what's going on so in the next part I
52:56 - try to think about the state of the game
52:58 - what's happening and what do I want to
53:00 - draw to indicate what's happening to
53:02 - give me a little bit of more of a debug
53:03 - view ultimately in the end you want to
53:05 - really animate for the user to
53:07 - understand and enjoy the game but I'm
53:08 - really just right now trying to get it
53:10 - to make sense for me so that's good
53:11 - what's gonna happen in the third part
53:16 - alright and then I think the third I
53:19 - think what I just did when I came back I
53:20 - kind of like said this is another part
53:22 - so I don't think I need another intro or
53:24 - int but just in case just in case just
53:27 - in case I don't think I need I don't I
53:32 - don't think I need this but I'll do it
53:33 - just in case
53:34 - the thing is though i want the
53:36 - challenges to be legitimate like trying
53:39 - to figure it out so if I really just
53:41 - like practice and figure this all out
53:42 - didn't do this weird extra thing like
53:44 - they wouldn't be they wouldn't be a
53:45 - spontaneous I think it's better that way
53:47 - alright you're watching this still
53:50 - somehow you're here you're watching the
53:51 - third part of my snakes and ladders
53:52 - challenges the last part where kind of
53:54 - add some animation stuff and at the end
53:56 - try to give you some ideas for how to
53:57 - improve on it and make your own version
53:59 - which I hope you do and I hope you share
54:00 - with me check this video's description
54:02 - for instructions on how to do that ok
54:04 - thanks and enjoy the last part alright
54:08 - so now everybody the YouTube chat is
54:12 - still screaming 2048 okay I'm excited
54:18 - about this
54:19 - we're totally someone's asking to
54:23 - present
54:25 - um the board shouldn't be a square all
54:29 - right all right all right oh yeah look
54:30 - at that
54:34 - why not
54:36 - why not I'm feeling good
54:39 - the night is young and I just splash
54:40 - some water on the green screen can you
54:42 - see it
54:42 - I don't think and see if there's
54:43 - actually by accident splash some water
54:44 - over here I don't know if that's doing
54:46 - anything to the background all right
54:49 - let's get out of here let's get out of
54:51 - here and get warm in this room I'm gonna
54:58 - open up processing my favorite thing to
55:00 - program in all of the all of you who
55:06 - complained earlier today let me just
55:10 - check my phone to make there's no like
55:12 - urgent messages and going to just send a
55:20 - quick little message that I'm a little
55:21 - bit later than I thought okay
55:25 - [Music]
55:36 - and now yeah people want me to do in
55:43 - JavaScript but that's I'm gonna be do
55:45 - this one in processing and I kind of
55:47 - have I feel like I have a good reason
55:48 - for that I will no matter what every
55:52 - single challenge gets ported and yeah
55:59 - all right so here we go all right um all
56:08 - right so here we're here let's see let
56:09 - me think about this I got to get 2048
56:11 - Wikipedia and then 2048 the game okay
56:23 - alright alright in my most controversial
56:33 - twist yet I have chosen to attempt 2048
56:37 - which is a lot of people were requesting
56:38 - and a lot of people are saying Oh 2048
56:41 - really ah so I'm not gonna try to make
56:43 - my own creative spin on this I'm just
56:45 - gonna see if I can implement this game
56:47 - and I hopefully you will learn from it
56:49 - enjoy it make your own version come up
56:51 - with your own creative idea let's just
56:53 - be clear I did not invent this game this
56:55 - if you want to read more about the game
56:57 - this is a sliding block puzzle game by
57:00 - Gabrielle surreally it was written in
57:03 - JavaScript and CSS during a weekend in
57:05 - 2014 it's an open source software
57:07 - project so I can actually look at the
57:08 - code which I haven't that would actually
57:10 - probably help if I looked at the code
57:11 - this game is very similar to other games
57:13 - notably 3 so it you know as everything
57:16 - is built on everything else I encourage
57:19 - you to read about the history of the
57:20 - game and look at it as an open source
57:21 - project I actually barely know this game
57:25 - I mean I have played it so I think I in
57:28 - this version obviously there's like a
57:29 - virgin' metouch version that you can use
57:31 - your fingers on one of those glass a'mma
57:33 - your those television phone things that
57:36 - people have these days but that's the
57:39 - best they're called right television
57:40 - phones
57:41 - but I'm gonna use the keyboard so I can
57:42 - press to the right look at all those
57:44 - twos go to the right I can press down
57:45 - right now I can press to the left look
57:47 - at all those twos go to the left now
57:49 - watch what happens if i press to the
57:50 - right again those twos combine to be a
57:53 - four if I press down you're giving some
57:56 - text all right if I ignore that if I
58:03 - press down those two combined so
58:05 - basically if the camera goes off again
58:12 - and I'm not finished with this coding
58:13 - challenge we have a problem
58:15 - and those so basically if two numbers
58:19 - are equal they will combine and make a
58:22 - new number like 4 and 4 make 8 + 8 + 8
58:24 - make 16
58:25 - the idea being can you get to 2048 but
58:28 - if two numbers do not not equal or it
58:31 - reaches the edge it will stop moving so
58:33 - I could just play this for a little
58:34 - while
58:35 - I'm not really thinking about I'm sure
58:36 - there's like a smart strategy but you
58:38 - can kind of see how this is going so I'm
58:40 - gonna not oh my god oh my god oh my got
58:42 - him I got him not good I'm not gonna get
58:45 - myself insanely addicted to this game
58:46 - right now I'm just gonna go over and
58:48 - start to program it and I will say it
58:51 - will not look this nice and it will
58:53 - probably not have any animations I just
58:55 - want to look at the core basic structure
58:56 - and mechanic of the game and I'm gonna
58:58 - do this and I probably should said this
59:00 - at the beginning in processing which is
59:02 - a Java based programming development
59:03 - environment it simplifies a lot of the
59:06 - aspects of the Java programming language
59:08 - to make drawing stuff I will also
59:11 - release a JavaScript version of this
59:13 - using the p5 library links to those kind
59:15 - of stuff will be in the video's
59:16 - description so what do I need I want to
59:18 - do this in an object-oriented fashion
59:20 - all of you don't like that can complain
59:22 - now okay are you like to plating here we
59:25 - go so I need a cell object and actually
59:27 - you know what by golly I'm gonna do it
59:30 - an even the simpler way I just need an
59:32 - integer
59:32 - I need a two-dimensional array of
59:34 - integers I probably use a 1 dimensional
59:36 - array and just look it up but let's use
59:37 - a two-dimensional array of integers and
59:41 - so I'm gonna just say make a an array
59:44 - board is a new interest 4x4 right so
59:49 - there's a little sort of fixed thing
59:50 - going here I'm gonna make a window
59:52 - that's 400 by 400 and I am now going to
59:56 - say x equals 0 I is less than 4 I I plus
60:02 - plus I can hard code all these values
60:03 - because the game you know I would it
60:06 - would be interesting to make a flexible
60:08 - version the game that can work with
60:09 - multiple size is it 4 by 4 yes 4 by 4
60:12 - but I might as well just think of I as
60:14 - my columns J as my rows and I'm going to
60:18 - draw a rectangle no fill a rectangle at
60:23 - I comma J also I need to figure out the
60:26 - X x equals I times was it going to be
60:31 - 100 each one is 100 y equals J times 100
60:35 - and I'm gonna draw a rectangle at X Y
60:37 - 100 100 and I'm gonna say no fill and
60:40 - I'm going to say stroke zero and I'm
60:43 - gonna have a background of 255 and I'm
60:47 - gonna make the stroke weight
60:48 - for everything like four so now if I run
60:52 - this let's save this save this as 2048
60:56 - and now run this okay oops I can't call
61:00 - a sketch a Java class cannot start with
61:03 - a number so it actually renamed it
61:04 - sketch 2048 okay let's run this there it
61:07 - is you can see my grid so so far I've
61:09 - got a grid now what I want to do is
61:12 - display the number now zero will mean
61:15 - it's empty but I'm actually going to
61:16 - display the zeros just for debugging
61:19 - purposes right now all right so what I
61:21 - also want to do is figure out a way to
61:23 - kind of make that so I'm gonna say
61:26 - text-align:center then I'm gonna say
61:30 - text X plus 50 Y minus 20 and I'm gonna
61:41 - put the board I I'm going to display the
61:45 - number that's there in the board and I'm
61:49 - gonna say text size you know 48 let's
61:53 - just try that and I think Phil is what
61:57 - sets the text color and processing so
62:00 - there we go
62:00 - okay so I did something wrong naught Y
62:03 - minus 20 I want them so why is the top
62:11 - minus 20 moved it up even further so I
62:13 - actually want to say like Y plus
62:15 - something like eighty close enough now
62:20 - why did it take so long to start I don't
62:21 - know but I mean so that's about right
62:24 - now obviously it's not centered
62:25 - perfectly my design is horribly flawed
62:28 - but I now have the basis for the game
62:32 - okay now how does the game start whoops
62:39 - no I want to start over how do I start
62:41 - over a new game well it's using like
62:43 - local storage or something so it looks
62:45 - like it starts with two oh wait I guess
62:50 - it starts with a couple just - I'm just
62:52 - gonna start out with two random twos so
62:54 - I'm gonna pick two random spots to put
62:56 - it to so in setup I'm gonna say
63:02 - int x equals int random 4 so I want a
63:12 - wise inch random 14 you know I really
63:15 - got to make sure I don't pick the same
63:16 - spot twice but and I'm gonna say board X
63:20 - y equals 2 then I'm gonna do so I'm
63:25 - gonna do this I'm gonna do this while
63:30 - success so I'm gonna just do a counter
63:32 - Wow int starting spots equals zero while
63:40 - starting spots is less than to do this
63:45 - and starting spots and if board X y
63:52 - equals zero if it's already a zero then
63:56 - make it a two and say starting spots
63:58 - plus plus so it should do this this is
64:01 - pretty silly algorithm written but it's
64:04 - gonna pick something as long as it's a
64:05 - spot that's not area to it'll set it to
64:07 - and it'll do that twice so just for the
64:09 - sake of argument let me make that like 5
64:11 - so you should see that no matter what
64:13 - every time I run it I should get five
64:16 - twos you know incidentally I could say
64:21 - what's the total number of spots 16 I
64:23 - mean it's gonna get there eventually
64:24 - right might take a while but it's
64:26 - eventually gonna get all twos but I just
64:27 - want to do it as two okay so now I have
64:30 - to choose 0 eventually don't wanna draw
64:33 - the zeros and actually maybe right now I
64:34 - shouldn't draw the zeros because that's
64:36 - just kind of confusing so if so I want
64:40 - to say if board IJ is greater than zero
64:45 - do this now all right my game has
64:50 - started
64:50 - now what do I do I need to listen for
64:53 - key events and I actually probably don't
64:55 - actually even need a draw loop here I
64:58 - need to listen for key events so down
65:01 - left right so there is a key pressed
65:03 - function key pressed and dare I use a
65:08 - switch statement that I barely know how
65:10 - to do I don't know why what's wrong with
65:12 - me I've been programming for so many
65:13 - years I can't get myself to use a switch
65:14 - state
65:16 - so I'm pretty sure let me just check I
65:18 - think in processing I can check the if
65:21 - the key code is up I think so I think
65:25 - it's a little bit goofy I'm gonna say
65:27 - print line up let's just see if this
65:29 - works
65:30 - so I'm looking down here into the
65:32 - console to see if I see the the key word
65:34 - up I could look this up but so I am
65:36 - seeing up all right so that's I think
65:40 - this is good I think some there might be
65:41 - some like so how do I do this somebody
65:44 - tell me switch key code Java switch
65:51 - statement I'm gonna do it here this this
65:55 - should get me this should this should
65:56 - work oh there we go okay so let me just
65:58 - so the switch statement is like a nice
66:00 - kind of if statement I what I want to do
66:02 - is say if it's this then do this
66:04 - otherwise if it's this switch just says
66:05 - which in these cases do this other thing
66:07 - so I think what I really want to do is
66:13 - just set a direction well actually I'm
66:21 - not sure what I want to do exactly but
66:22 - let's first get the switch statement so
66:23 - I want to say switch key code case up
66:26 - case down case right case left so let me
66:32 - just try something here int Direction
66:34 - equals negative one so this I'm gonna
66:39 - just say Direction equals zero Direction
66:43 - this is really silly like I already have
66:45 - the key code as a state and now I'm like
66:47 - making a new state but I at least want
66:49 - to like find out that my switch
66:51 - statement is working and so now I'm
66:55 - gonna get rid of all this other junk and
66:58 - now it's funny of the things that take a
67:00 - long time when your program aren't
67:02 - really big complicated things so we can
67:04 - see here this is in theory kind of nice
67:06 - because I could figure out what to do in
67:08 - all of these oh yeah interesting so I
67:14 - think what I want to do though is I want
67:16 - to like move the board so I need a
67:19 - function that moves the board I don't
67:20 - what to call it like swipe I'm gonna
67:22 - call it swipe
67:23 - I'm gonna write a function called swipe
67:25 - and even though I can only swipe
67:28 - in one direction I'm gonna just this is
67:32 - a little bit weird but I'm gonna say
67:34 - void swipe and I'm gonna pass in an x
67:38 - and a y direction because when I swipe
67:42 - up when I press up I want to swipe up
67:46 - which is 0 comma negative 1 right
67:49 - then I will swipe down I want to swipe 0
67:51 - comma 1 to the right
67:54 - I want to swipe 1 comma 0 and to the
67:58 - left this is I think this is not what I
68:02 - want to do but I'm just gonna see swipe
68:04 - I'm realizing now this is a little bit
68:06 - silly but I'm gonna swipe negative 1 to
68:08 - 0 so how do I approach this time out for
68:12 - a second edit point I think I want to
68:14 - use the whiteboard so I need to erase it
68:19 - so I will bring you over here with me
68:22 - I'm so hungry
68:47 - all right okay so all right let me think
68:58 - about this here so a couple things that
69:00 - I know I need I think if I have this 4x4
69:04 - grid
69:07 - it'll probably mess me up to start
69:10 - making changes to this grid itself so I
69:12 - need like kind of like a current state
69:15 - and I need a next so I probably need
69:17 - another 4x4 grid to write to so let's
69:23 - just do one case let's just say I could
69:24 - only ever swipe to the right I can only
69:27 - ever sleep right so if there's a two
69:35 - here and there's a two here so what do I
69:37 - need to do if I'm swiping to the right
69:39 - all I care about is the rows like I just
69:43 - need to say I just need to look is there
69:45 - anything here no is there something here
69:47 - oh great
69:48 - move it oh what's here if it's a number
69:52 - not equal to two or an edge it can't
69:54 - move otherwise take this value and put
69:57 - it here so that should be pretty easy to
69:59 - do actually and then keep going until
70:02 - what happens if it's let me ask a
70:05 - question what happens if it's two to
70:09 - four and I swipe does this become an
70:12 - eight at the end is that the game
70:14 - mechanic like it doesn't do a four there
70:16 - are the are just does the first thing
70:18 - and then it and I have to do another
70:20 - swipe to the right to become an eight
70:22 - I'm gonna pause for a second while I see
70:24 - if somebody can answer that question for
70:26 - me or maybe I can figure it out myself
70:31 - for for it becomes four four okay all
70:35 - right thank you to the chat for telling
70:37 - me that it and that this scenario ends
70:39 - with four four so the first time I find
70:41 - something that can be combined then this
70:44 - I'm done so I only do one combination so
70:47 - I just start is either empty or it's
70:49 - full you kind of move to the right or it
70:51 - can't its I keep going to the right
70:53 - until I can't anymore it then I move
70:55 - all right so let's just do the swipe
70:57 - right algorithm there's probably a nice
71:00 - way to always just rotate the board and
71:02 - just always do it in the same direction
71:05 - but I'm not sure my brain is gonna be
71:08 - able do that right now so I'm just going
71:12 - to pretend no matter what I'm doing I'm
71:13 - always moving to the right so what I
71:15 - need to do is I want to agree that's the
71:20 - next one right because I think that I
71:23 - don't know maybe I can overwrite the
71:25 - current grid actually because as I'm
71:27 - moving stuff I think I can want to write
71:29 - the current grid because there's nothing
71:30 - depends on something else really I'm
71:32 - going in one direction so I think it's
71:34 - fine I don't think I need that actually
71:35 - I think I lied when I said I needed that
71:37 - so what I want to do is I need to go
71:40 - from I equals zero I is less than 4 I
71:43 - plus plus so if I'm going to the right
71:46 - the outer loop is doing each row one at
71:51 - a time so I think of the rows is J so
71:54 - I'm actually going to put that in the
71:57 - outer loop oh I should really do the
72:00 - rotate them I should really do the
72:01 - rotate the board thing these should be
72:05 - in is correct it doesn't really matter
72:09 - but I should wrote I'm think I'm gonna
72:10 - rotate the board because that's gonna
72:13 - make them then I just have to always do
72:15 - it right if I rotate it I can just do
72:17 - the same algorithm in the same direction
72:18 - then rotate it back right it seems like
72:21 - that would be a good idea but let's do
72:23 - this to the right first for J plus plus
72:29 - okay so now what I need to do is I need
72:33 - to look at what's in oh this is actually
72:37 - no this is not a loop well it sort of is
72:40 - but I'm done I'm gonna break out of it
72:43 - so I'm gonna say if board I comma J is
72:49 - not equal to 0 now whatever I do here
72:55 - I'm gonna break right because this is
72:59 - basically me looking for the first
73:00 - instance of something that's not 0 and I
73:03 - don't like so this no matter what
73:05 - whatever happens here I'm going to be
73:07 - done with that inside
73:08 - Loup afterwards so now what I need to do
73:12 - if it's not equal to zero and actually
73:16 - to be honest with you there's no reason
73:18 - for me to go to the last spot because
73:20 - the last spot nothing's ever going to
73:21 - happen to it so I just want to go to
73:23 - zero one or two I don't need to check
73:25 - three then I just need to check I need I
73:29 - mean this is a little bit silly but I'm
73:30 - gonna do another loop in here
73:32 - Oh sort of like I could say while let me
73:36 - I could say like boolean finished equals
73:41 - false I'm not finished
73:42 - while not finished
73:48 - I want to MS I'm gonna actually say like
73:58 - okay hold on int index equals I I want
74:02 - to just keep that variable in a
74:04 - different and so while I'm and I'm gonna
74:09 - keep the finish I might be able to get
74:10 - rid of this but I'm gonna keep this and
74:11 - say I'm working out this algorithm in my
74:13 - head while I'm not finished I want to
74:15 - check next equals next equals index plus
74:22 - one okay so if next is the edge if next
74:31 - equals three finished equals true
74:39 - alright so I could also just say while
74:42 - true and then break here right so maybe
74:45 - that's a little bit simpler got a lot of
74:47 - breaks here okay so I'm going now if
74:53 - bored and I should get you know what I
74:57 - should do int num Ord IJ like I should
75:02 - put this this value I should put it in a
75:05 - variable it's gonna be helpful value now
75:11 - if if it's not equal to zero I'm gonna
75:17 - do this stuff otherwise I just keep
75:18 - going try to get the next one if it's
75:20 - not equal to zero
75:22 - I say I might not need this separate
75:24 - index variable but it's making it's
75:26 - helping you think about it
75:27 - I'm gonna get rid of this this one while
75:31 - true next equals index plus 1 if bored
75:34 - I really should probably just ask for
75:36 - the row can I do that can I say int row
75:41 - equals bored
75:43 - oh no cuz I didn't I didn't do it that
75:47 - way so I'm not gonna that would be
75:49 - interesting if I had thought been more
75:51 - thoughtful about it and people telling
75:53 - me it's spaghetti
75:54 - I know it's spaghetti I have to read 5
75:56 - to think this through then I can
75:57 - refactor it later a release for right
76:00 - now next if bored if bored index net
76:07 - next I'm still in the same row so it's
76:09 - always J equals that value right so this
76:15 - is this is if I'm at the end we're done
76:20 - if it equals that value then what do I
76:23 - do
76:25 - so first actually there's a couple
76:27 - things it could be it could equal 0 if
76:32 - it equals 0 then it equals that value
76:38 - and the original spot index J equals 0
76:45 - right so this is like swapping the value
76:48 - so this is like if it if it equals 0 so
76:52 - I'm gonna do that otherwise another case
76:56 - could be that it's the same value in
77:02 - which case it equals 0 same sort of
77:07 - thing but it equals value times 2 so it
77:13 - doubles the first thing I should check
77:17 - is if next equals 3 then break else if
77:26 - it equals 0 then pass it and I don't
77:31 - break I keep going
77:36 - because I keep moving right if I combine
77:40 - it I'm also done so I would say break
77:43 - and then what's the last possible
77:46 - scenario it could be it could be equal
77:49 - could be the value or it could be a
77:51 - higher value so if board then I also
77:57 - just break if next equals three or board
78:00 - next next J is greater than value is
78:09 - this right
78:10 - could this possibly be right let's think
78:13 - about this what I'm saying is the
78:15 - possibilities are I'm at the edge or an
78:20 - edge just like that I'm either at the
78:22 - edge because the next thing is three so
78:25 - next would actually be four right
78:27 - because three is a legitimate one for me
78:29 - to check so if next is four I can't go
78:31 - any further or if the next is a bigger
78:34 - value I can't go any further otherwise
78:37 - if it's zero I take that spot and what I
78:43 - have to keep going index equals next I
78:45 - have to keep going otherwise combine it
78:48 - and I'm done all right I think that's I
78:51 - think that's it so now there's a bunch
78:55 - of like this is very spaghetti so well
78:57 - let's think about this let's think about
79:03 - this I start with a value and if the
79:06 - value is not zero I'm gonna do some
79:08 - stuff and if I do anything at all
79:14 - then I'm done so this is yeah so let's
79:17 - this should probably go out into a
79:18 - function this this whole while loop this
79:21 - whole thing should go out into a
79:23 - function but let's let me just leave
79:24 - this in here and see what I've got going
79:27 - right now and I think oh boy I really
79:32 - could have messed some stuff up here
79:34 - because I don't even have the correct
79:36 - number of curly brackets so I've
79:38 - probably done something horrible
79:44 - all right so something really owned this
79:46 - is I don't know why I have a double
79:48 - equals there that may
79:49 - no sense ah all right how it's pretty
79:56 - good oh wow can I please get a different
80:02 - configuration of the board yeah all
80:05 - right so so far this algorithm actually
80:08 - shockingly worked so far now one thing
80:12 - that I believe 2048 does and if I look
80:18 - at the lookit here at the game play is
80:22 - that it lets see a player tile slide if
80:31 - the Chalobah
80:32 - score but somewhere I guess a new two
80:34 - appears every dozen new like new tiles
80:37 - appear where does it say how the new
80:39 - tiles appear every turn a new tile will
80:41 - randomly appear in ambu spot on the
80:42 - board with the value of either two or
80:44 - four oh so it could be a value of two or
80:46 - four so I might as well make the exact
80:48 - game so this can be if random so I can
80:55 - actually ha I should reuse this so this
81:00 - by the way add new spots a total number
81:07 - of new spots whoo this is nice and then
81:10 - while starting spots is less than num do
81:14 - this and I need starting spots to be
81:16 - zero and then here I should say if
81:20 - random is less than 0.5 make it a 2
81:25 - otherwise make it a 4 and so at the
81:30 - beginning I'm going to add two new spots
81:32 - and then every time I press the key I'm
81:36 - also going to add a one new spot now
81:42 - again I can only move to the right yeah
81:49 - somebody tell me if this isn't working
81:51 - correctly at any point I mean I'm
81:54 - getting lucky oh I can only move to the
81:56 - right but I think there we go now I'm
82:01 - stuck obviously so that I
82:03 - to be more thoughtful about how I play
82:04 - this game but we could see this is the
82:06 - result I should get if I could only ever
82:08 - move to the right no matter what happens
82:10 - right am I not getting any new force
82:15 - you're right so why did that what did I
82:17 - miss there oh whoops there we go let's
82:20 - get some new force yeah so now we can
82:25 - see now I'm also getting new force and
82:28 - we can see I believe this game is
82:29 - working correctly now I really shouldn't
82:32 - but I kind of want to refactor this but
82:36 - I don't so this really does merit
82:38 - refactoring because this inner loop I
82:41 - really think this could be its own
82:43 - function just to do the sliding now
82:44 - here's the thing I need some advice
82:46 - you're watching this later in the final
82:49 - recorded version of this you won't be
82:50 - able to give me any advice other than
82:51 - complain that I didn't correctly at the
82:53 - comments but from the live chat I'm
82:55 - trying to think I could adapt this
82:58 - algorithm to go in different directions
83:00 - or I could rotate the numbers always
83:03 - move to the right and rotate back which
83:06 - should I do before I get before I get to
83:17 - that actually I'm being told from the
83:18 - chat that it's only supposed to generate
83:19 - new tiles if a tile successfully moves
83:23 - okay yeah so it only a new tile if if a
83:30 - tiles the only new tile fatales
83:31 - successfully moves so how do I know so
83:34 - here I should say moved I should assume
83:39 - that no tile moved and then if a tile
83:44 - moves this is this is a tile moving
83:53 - right moved equals true or moved equals
83:59 - true both these cases here a tile moves
84:01 - whether it's moving to an empty spot or
84:04 - combining and if a tile moves then at
84:07 - the end of all this insane and nonsense
84:10 - the swipe function I can say
84:15 - if moved so add new spot one so I want
84:23 - to take that out of here and I'm just
84:27 - gonna put it here add a new spot one so
84:28 - let's see if this fixed is that Alright
84:32 - a tile move so I get a new spot tile
84:34 - moves so I get new spot
84:37 - it's like right I'm done I can't I don't
84:41 - get new tiles because nothing can
84:43 - combine I mean obviously you can if I
84:45 - went down but that's not gonna work
84:47 - Oh interesting ah here's a bug if this
84:51 - is going down
84:52 - that too is gonna make a for but I the
84:56 - last thing has to combine first I can
85:01 - return a boolean for swipe suggesters is
85:03 - it fun that's a good point right tu-204
85:06 - will create oh four oh four instead of
85:09 - oh four four oh alright so what are my
85:13 - edge cases that are wrong they're not
85:15 - really edge cases but here let me think
85:17 - about two couple cases is there going to
85:20 - be a part two to this challenge there's
85:22 - gonna be a part true to this challenge I
85:23 - think the rotating of the board let's
85:25 - see we can finish this off okay
85:31 - so here's that here's a problem right
85:34 - what you're saying is if I have two and
85:37 - two does this go to four right and right
85:45 - now it will just go to four there but
85:49 - should it end up like this is that
85:50 - correct that's one thing that's not
85:52 - going to work another thing that's not
85:53 - going to work is if I have two to two
85:56 - this should go to four right and right
86:03 - now with my algorithm I'm gonna get four
86:05 - to both of those are problems correct
86:12 - I'm gonna check the chat yeah okay
86:26 - all right so as long as those things I
86:29 - need to go backwards I need to obviously
86:30 - go in the backwards way I have to start
86:33 - merging from right to left obviously
86:34 - yeah yeah okay all right so the the
86:41 - major problem that I've encountered here
86:43 - is I have to start merging from the
86:45 - other direction I kind of like we move
86:47 - this along but that's not gonna work I
86:49 - actually want to like almost like suck
86:51 - stuff in that's the way it really needs
86:53 - to work okay so I think I have to
86:55 - rewrite that code almost entirely right
86:58 - because what I need to do is I want to
87:02 - get the value of the oh my goodness boy
87:09 - this is hard I want to start from the
87:15 - last spot I'm just gonna do a save as
87:22 - here for a second I want to start from
87:24 - the last spot and go down to the first
87:30 - spot except I don't need to go to the
87:35 - first spot probably because if I'm
87:36 - sucking things in there's nothing from
87:38 - there to suck to the to the next one
87:40 - maybe I need a new metaphor here all
87:43 - right so the first thing I want to do if
87:45 - I look at that last spot if it's a zero
87:51 - then I want to go the other way so hold
88:03 - on this pause this for a second I'm
88:05 - gonna let this edit here well I think oh
88:09 - yeah I need to I - - for sure
88:16 - oh why did I make this so hard I mean
88:25 - just I'm just thinking for a second make
88:27 - a function that shifts all the numbers
88:28 - to the right then run another function
88:30 - that scans from right to left combining
88:32 - equal numbers Eduardo I love that so the
88:37 - first thing I should do is just shift
88:38 - everything so this is a this is read I
88:41 - would worry I don't know refactor oh I'm
88:43 - not in the wrong camera I think I should
88:46 - refactor because I really want to be
88:48 - able just pull out the row as an array
88:49 - and I think I can't do that the way that
88:52 - I created this as X Y right because
88:57 - sorry I know that I'm kind of like off
88:59 - in a edit point here if I say board 0
89:04 - that doesn't give me the first row that
89:06 - gives me the first column correctly in
89:07 - the way that I've structured this right
89:16 - I'm just thinking here so because I
89:22 - think what I can do if I can just pull
89:24 - out the row and I can pass it to another
89:26 - function I can do all the combining
89:28 - there it'll make things much simpler
89:35 - anybody know if that's how it works in
89:37 - Java for the 2-dimensional array right
89:41 - this will pull out the array okay good
89:45 - all right so
89:52 - okay I've gotten some great suggestions
89:55 - from the chat and one thing that I could
89:58 - actually do is one thing I could
90:03 - actually do is just shift all the
90:04 - numbers over first and then combine
90:06 - anything that's equal in the correct
90:09 - direction so starting from the back so
90:13 - one thing that I might actually what I
90:14 - really want to be able to do is I
90:16 - wouldn't be able to just pull out a row
90:18 - and pass it to a function so we just
90:19 - have like a simple little single array
90:21 - that I'm manipulating so this is gonna
90:22 - require some refactoring okay so what I
90:30 - want to do is I want to actually think
90:34 - of this now as this is the row this is
90:38 - the Y and this is the X so I've got to
90:41 - kind of change everything it's actually
90:44 - not that big of a deal because I just
90:49 - kind of sort of reverse my loops I mean
90:56 - it's still the Y is still J I just want
90:58 - to sort of think of that first it's a
91:00 - little bit silly but I thought I'm doing
91:02 - this okay but x and y here okay
91:04 - so I want to do that and then this is J
91:06 - and this is I because when I create the
91:11 - array I want to think of this as Y sorry
91:17 - X this is gonna make my life much easier
91:24 - although I guess I could have just had
91:26 - everything go down hold on time without
91:33 - I'm gonna have everything go down get it
91:36 - that all out because Y is I'm so used to
91:40 - this IJ stuff that I think it's gonna be
91:43 - fine because I can pull out the call
91:45 - already
91:56 - so if I was coming from here I was just
91:58 - talking about pulling this out the thing
92:02 - is I've written this in a way where this
92:05 - is the column and this is the row hmm so
92:09 - what I actually wanted to do I think
92:10 - what will be easier is forget about this
92:13 - everything going to the right let me
92:14 - redo this to have everything go down
92:18 - because what I can actually do is and
92:23 - let me come back over here what I want
92:27 - to do here is because first go through
92:33 - each column and the columns right I'm
92:41 - gonna go through all the columns I know
92:43 - I totally botched this but I'm really
92:45 - gonna like I'm kind of redoing this
92:46 - again and what I want to do is I want to
92:49 - say give me a row which is from the
92:52 - board index I and it's not a row it's a
92:55 - column I want to look at each column one
92:57 - at a time so this loop right there the
92:59 - new loop that I've written is just
93:01 - giving me each one of these things as a
93:03 - single array now I want to say combine
93:09 - or like shift the column okay so I'm
93:15 - gonna write a function I'm probably
93:16 - going to need a lot of this stuff but
93:18 - I'm just gonna comment it out right now
93:23 - so I'm gonna come up here I'm gonna
93:25 - write a function and I'm gonna call that
93:26 - function shift and the only thing I'm
93:30 - gonna do in that function first just to
93:32 - deal with all these scenarios is I'm
93:34 - just gonna take every number and just
93:37 - move everything down so it doesn't
93:39 - matter what the numbers are they just
93:40 - all move down to the end so what I'm
93:45 - going to do is I'm going to use almost
93:48 - the same so this is an array some array
93:52 - I'm gonna call it column it's a column
93:53 - and I'm gonna say for every spot in the
93:57 - common to go from the back column up int
94:02 - I equals
94:06 - and I should curse like just call it J
94:08 - but whatever int J equals 3 J is greater
94:14 - than or equal to 1 just say greater than
94:18 - zero because I don't need to stop the
94:20 - last one and J minus minus so this is
94:23 - now me performing that shifting at oh I
94:28 - got him in the wrong screen wrong screen
94:30 - camera thank you that's fine boy I was
94:35 - doing that for a long time wasn't I it's
94:43 - okay I kind of was like messing that up
94:44 - anyway
94:47 - let me just put it back to what it was
94:53 - [Music]
95:01 - okay yeah all right
95:07 - I'm seeing some good and we just come
95:11 - back all right so what I want to do is I
95:16 - actually want to and I know this isn't
95:19 - where anybody remember what this was
95:21 - actually a second ago wasn't it
95:23 - I had this here right but I didn't have
95:31 - it right I had it all like screwy so I
95:37 - don't really see it there's not an easy
95:39 - way for me to see these donations I do
95:41 - super appreciate it ah you okay what
95:43 - Troy gave a donation right so you need
95:45 - to create a function that can take and
95:47 - look at it in multiple ways and then
95:49 - search backwards through that direction
95:51 - merging tiles yes well I think Thank You
95:56 - Troy I know I already recorded this bit
96:01 - thank you for that okay so wow that's
96:03 - super Ella can i maybe go now and just
96:07 - come back to this next week I got to
96:09 - finish why did I say that I would do
96:10 - this all right I just want to get the
96:15 - code back to where I didn't change the
96:17 - camera correctly only that I can't read
96:22 - the chat anymore all right how about
96:24 - whatever you shift delete out all zero
96:26 - in this indices then combine all the
96:28 - adjacent numbers let me let me do thank
96:30 - you for all these suggestions let me let
96:31 - me go with what I'm trying to do here so
96:33 - I just I kind of screwed up the code I
96:35 - don't know what it was before there's
96:36 - gonna be a little bit of a continuity
96:37 - error that's fun okay so actually what I
96:42 - want to do is I want to think about
96:45 - shifting all these things down so the
96:47 - way I kind of got the code in a little
96:49 - bit of a mess here but let me put it
96:50 - back to something what I want to do is
96:52 - go through every sorry every single X so
96:59 - X is the outer loop or I in my case and
97:03 - I is less than four and I plus plus and
97:08 - now this whole inner loop I'm gonna just
97:10 - comment out I might come back to it
97:13 - later I'm going to
97:14 - comes in now because what I'm gonna do
97:15 - is I'm just gonna pull out that column
97:17 - column equals board index I just want to
97:21 - pull out that column I've got the column
97:23 - and I can put it that's just a single
97:25 - array and I can just say shift it so I
97:29 - can write a function now just to deal
97:30 - with it I mean how hard can it be
97:32 - to shift elements in an array right I
97:34 - should be able to do that sometimes when
97:37 - you've been programming all day long
97:38 - easy to eat things that should be easy
97:41 - become kind of hard so I'm gonna pass in
97:44 - that array and I'm gonna operate on that
97:45 - array but I do want to start at the end
97:47 - so I'm gonna use a while loop actually
97:49 - weirdly enough I think this might help
97:51 - if I started index 3
97:53 - and I say while true so I want to keep
98:00 - going basically until I say break what I
98:03 - want to do is I'm going to say if column
98:07 - at and let me just say it's actually let
98:09 - me say J for the index if column J is a
98:13 - 0 then column J should get whatever was
98:22 - next to it column J minus 1 and then
98:29 - column J minus 1 should equal 0 right
98:35 - then J should go to the next spot - -
98:41 - and if if J equals the end 0 then break
98:52 - because I can't shift anything into that
98:54 - now I might have missed something here
98:56 - but let's try doing this so that didn't
99:05 - work but hold on because it didn't go
99:08 - all the way I have to keep oh if it's 0
99:12 - all right so so there's an issue it
99:22 - doesn't account for double zeros so if
99:24 - it's this worked but I need to
99:28 - if it's what look at this again what
99:33 - let's think about the algorithm here
99:35 - well that's gonna work try it one more
99:39 - time okay so this is gonna this will
99:47 - this will if I bring this over closer to
99:49 - me this is only going to go to here and
99:54 - the reason for that is that I start here
99:58 - and I bring this thing down then I move
100:00 - here and then I bring this thing down I
100:01 - got to start over each time I have to
100:03 - start over
100:04 - so if J equals 0 I'm not done I need to
100:08 - go back and set J equal J back equal to
100:13 - 3 I can just do this again now I'll be
100:15 - stuck in an infinite loop if every time
100:17 - we get to 0 I set J back goal of 3 but
100:19 - if when if when J goes to the end and
100:27 - back to the end and it is not a zero
100:30 - there then I should be able to break
100:33 - right that should fix that infinite loop
100:40 - achieved or maybe I just didn't click in
100:42 - the window no or or you say if I've
100:48 - shifted once just go back to say J plus
100:52 - plus that could also work but why didn't
100:54 - this work yeah so another way that I
101:03 - could do this actually is if I'm
101:05 - shifting then wait
101:15 - timeout brute-force just save the index
101:23 - of the last available index relative the
101:24 - one you are checking now just iterate
101:32 - that first loop four times just add some
101:40 - debug logs matrix math I know I'm
101:43 - destined to only do man Jim look this is
101:45 - so great get a break you need it I know
101:48 - I can't I have to finish this
101:52 - [Music]
101:53 - I'm sure I'm reading the chat there's
101:55 - some really interesting good suggestions
101:57 - here and I see I also said when I see
101:59 - Alka is typing I like and then it goes
102:01 - away it goes away what's there let's
102:05 - think about this so why didn't my
102:07 - solution work here let's let me um
102:10 - filter out zeros
102:12 - oh right if I were in JavaScript I could
102:18 - use the array but I'm not if moved J is
102:21 - three goods oh right
102:22 - if I do this I got it I got here we go
102:26 - good idea thank you
102:29 - okay well hold on ding ding I think
102:31 - actually I was this this thinking was
102:33 - flawed and actually if I move if I'm
102:40 - ever at the end I'm done but if I move I
102:43 - just need to go back to where I was
102:44 - before and I probably don't have to go
102:46 - all the way back to three but let's just
102:49 - shut set J back to three otherwise move
102:53 - to the next one I think that'll work
103:01 - if it's zero otherwise go down by one if
103:05 - you move it okay it's giving me
103:13 - JavaScript code
103:24 - that's really torturing me
103:27 - that's really really torturing me all
103:31 - right if if it's a zero grab the one
103:41 - next to it and set then one next to it
103:43 - at zero then go back to the beginning it
103:49 - shouldn't be a zero so you should go
103:50 - down by one and every time you do that
103:53 - eventually it'll go down by one and
103:55 - we'll get to be zero this should work I
103:58 - feel like this is right I think I need
104:07 - to print what's going on so let me print
104:29 - print array so I'm gonna do a little
104:32 - debugging here
104:33 - I probably never get to the end print J
104:48 - 3 3 3 3 3 3 3 2 3 all right so I'm
104:53 - definitely my issue is that ok infinite
104:56 - loop thank you very much that I'm
104:58 - getting stuck at 3 column J equals 0 3
105:07 - is the value of 2 and then 2 is the
105:11 - value of 0 and then go back to 3 so once
105:14 - you're back to 3 it shouldn't be 0
105:17 - anymore and you should go down to 2
105:20 - oh if the last one is 0 I'm still
105:29 - setting it to 3 so here actually if if J
105:37 - J minus 1 equals 0 I'm done otherwise go
105:46 - back to 3 right
105:56 - no you should it should only set it to 3
106:01 - if column J minus 1 was not 0 oh right
106:12 - let's stop my infinite loops here go
106:15 - back for a second ah
106:40 - right so if
106:52 - all right if column Oh if column J
106:56 - equals zero so okay hold on hold on hold
107:00 - on combining your values before you
107:06 - shift things into empty slots Chris Ray
107:10 - is a good idea find all nonzero values
107:13 - in the column and append them to an
107:14 - array of zeros I just make a new array
107:16 - this is lunacy what I'm doing this is
107:23 - total lunacy there's an edit point that
107:26 - just happened you you've saved yourself
107:28 - hours this is ridiculous what I'm doing
107:30 - I could just find all the nonzero
107:31 - elements and put them at the end this is
107:34 - crazy this is crazy so for example what
107:39 - I'm doing is so much easier right thank
107:42 - you in the chat whoever said this new
107:44 - column is a new integer array with four
107:47 - spots in it they're all zeros now all I
107:51 - need to do is go through my existing
107:54 - column which I could ask for the length
107:55 - but I know it's four and I can just say
107:58 - I could go backwards even I could even
108:00 - go backwards and I could get myself an
108:04 - index which is three and I could go all
108:09 - the way through all the elements I could
108:12 - start at three go all the way down to
108:15 - zero I - - and I could just try to find
108:19 - something that's not a zero if column
108:23 - index and I should make this J column
108:26 - index J the shifting is so unnecessary
108:29 - if column index J equals does not equal
108:33 - zero I found something that's not equal
108:36 - zero where should I put it put it in the
108:38 - new column put it in the last spot of
108:41 - the new column and then just move the
108:46 - index down to the next spot otherwise
108:50 - don't do anything and then column equals
108:55 - new column now did I miss something
108:57 - there I might have missed something
108:58 - there but this will be so much easier
109:02 - you know this this might not end
109:06 - been the two dimensional array properly
109:08 - so I got to think about that but let's
109:10 - let's at least give me print array
109:15 - column and print array so if this
109:20 - doesn't end up in the the let's see and
109:22 - I don't need this else because I
109:23 - actually don't need to do anything right
109:25 - I just go I'm go through and every time
109:27 - I find one there we go okay so hold on
109:30 - this is messed up okay so all right boy
109:34 - there's so much simpler all right so
109:37 - let's look at this oh this is so hard to
109:42 - read I need a better way of printing the
109:43 - array so I'm actually just gonna I'm
109:47 - gonna make my own print array and I'm
109:55 - just gonna actually you know what I'm
109:56 - just gonna say this is silly I'm gonna
109:59 - join the array I'm going to yeah I'll
110:02 - make my own printer a just so I can see
110:06 - and I'm gonna say string s equals join
110:11 - array with commas and then print line s
110:15 - Oh will it can I say string s array
110:21 - equals string array well let me convert
110:25 - it to a string and then join it hope
110:28 - maybe this needs to be a double quotes
110:31 - there oh boy I got lost and writing my
110:39 - own printer a function can I just join
110:42 - it oh now I really miss JavaScript
110:46 - because it would make me so much happier
110:49 - to be doing this with John now I regret
110:50 - regret my not doing I thought I was
110:53 - gonna make my life easier because I kind
110:55 - of more comfortable here let's scratch
110:57 - that
111:00 - [Music]
111:07 - some problem with making a printer a
111:15 - budget all right let me let me write a
111:19 - little quick ridiculous print array
111:21 - function that's my own and I'm going to
111:25 - just create a string
111:29 - this is ridiculous but I'm going to do
111:31 - it anyway I'm going to concatenate a
111:35 - nice little string with the elements of
111:37 - the array and a comma and then I'm going
111:40 - to say print line s so now I'm gonna say
111:42 - just to debug this I'm going to print
111:47 - the original column and then at the end
111:50 - I'm going to print the new column and
111:54 - let's see how that works so let's see
111:59 - and I also want to do a print line
112:01 - because it's doing a lot of these so let
112:05 - me just put a little space in there so I
112:06 - can see alright so what this did is yeah
112:12 - all the zeros state 0 is the 4 move to
112:15 - there the to move to there let me add
112:18 - some more stuff but I think this is
112:20 - right so the issue is however
112:21 - unfortunately that I've created this new
112:25 - so but I think what I'm gonna do then
112:27 - this is very silly is I'm just going to
112:29 - copy the values back over so what I'm
112:31 - gonna do is I make the new array instead
112:35 - of saying column equals new array I'm
112:37 - gonna actually just really inefficiently
112:40 - and ridiculously go through the column
112:44 - and take the values from the new array
112:47 - and I'm going to say column index I
112:49 - equals new so I'm gonna actually copy
112:51 - the values over rather than point the
112:54 - memory because that will stay within the
112:56 - two-dimensional alright and now I should
112:58 - have what about no it's not combining
113:02 - but I'm much closer and I'm doing much
113:04 - better now so now what I need to do is I
113:08 - need to add the new values let me so
113:11 - after I call this shift if moved so I'm
113:15 - gonna forget about this if moved thing
113:17 - for a second because I'm
113:18 - gonna assume stuff is moving just to see
113:21 - the things is working right so now this
113:23 - this works so nothing is combining but
113:25 - no matter what it shifts all the values
113:27 - now I just need to do the same thing
113:29 - again but combine the values together
113:34 - okay
113:36 - poof now what what time is this like
113:38 - nine is it like midnight already just
113:40 - like was the building shut down I'm
113:42 - gonna have to sleep here okay so now
113:45 - what do I want to do i want to i called
113:51 - shift now I'm gonna call combined so I
113:55 - probably could do this in one step I
113:57 - think my life is going to be easier if I
113:59 - fur ups I think my I think my life is
114:06 - going to be easier if I first shift the
114:11 - elements down and then combine them from
114:14 - the back right it should be kind of the
114:16 - same algorithm pretty much right so
114:18 - let's go now to combine because I could
114:24 - only combine one thing and I want to
114:26 - combine the last thing so oh I can
114:28 - combine and then shift again oh this is
114:30 - great
114:31 - so I can combine a column so I want to
114:37 - start from the back so I'm going to
114:39 - start with three I'm gonna go down to
114:42 - I'm gonna go down to zero but I don't
114:44 - need zero and now but right now it's if
114:49 - the last element to zero
114:50 - I'm done right if the last I'll if that
114:53 - element is zero nothing can be combined
114:54 - because everything has shifted over
114:56 - so if column so actually I can really
115:00 - even just say here if column index 3
115:03 - equals zero return do nothing can I do
115:07 - that in Java just return to get out of
115:09 - the function so if it's a three there's
115:11 - nothing there to combine otherwise now
115:15 - what I want to do is I want to check if
115:18 - so a is column index I B is column index
115:25 - I minus one if a equals B
115:32 - then column I equals a times two right
115:39 - so that's combining it and column I
115:41 - minus one equals zero and brand return
115:45 - I'm done
115:46 - you can only combine one thing could
115:47 - only combine one thing now yeah
115:51 - if not just keep going check the next
115:53 - one to see if you combine it this should
115:55 - be good
115:55 - now that's combined now yeah and
115:59 - actually I don't I can operate on that
116:01 - array so I don't need to make a newer
116:04 - I'm actually operating on that array and
116:06 - making it a zero now I should be able to
116:07 - just shift again just to like get out
116:11 - any of the zeros so this should actually
116:14 - be good I think let's run this oh yeah
116:18 - what did I what's wrong here
116:19 - I got an array out of bound exception
116:22 - for wait wait wait let me run that again
116:26 - hold on it starts for I how could i
116:33 - before
116:34 - oh I plus plus minus minus thank you
116:37 - major error there
116:39 - two for two oh wait combined I think
116:45 - this is working correctly I mean
116:47 - obviously it's adding stuff too much but
116:49 - I think it's combining correctly see if
116:52 - anybody can tell you right now now I
116:54 - need to know if something has moved so
116:56 - what I need to figure out is when I call
117:01 - these functions I need to know if
117:05 - something if anything has moved by the
117:08 - way I don't need any of this anymore all
117:10 - of that that I wrote is total nonsense
117:13 - I'm just deleting it now this is all I
117:16 - need to do but I need to figure out if
117:18 - something has moved so one thing I could
117:21 - do is I kind of each of these functions
117:23 - return a value if it's if something has
117:26 - shifted or moved I could also just check
117:30 - to see if the board is exactly the same
117:32 - [Music]
117:35 - so let me think about that what's is it
117:37 - easy to detect in these if something's
117:39 - moved so let's have that let's let's do
117:42 - that boolean moved equals
117:46 - at the end of the function I'll return
117:47 - this so this right is something moving
117:54 - not necessarily it's something moving
117:58 - only if index is not equal to J right
118:02 - that's it changing if index is not equal
118:08 - to j then moved equals true alright
118:12 - that's if that's something moved in here
118:14 - and then oh actually actually there's an
118:25 - easier way to do this because right here
118:30 - I can say if column index I if anything
118:34 - has changed if they're not equal then
118:44 - set it then set equal and something has
118:46 - moved so that should tell me if
118:48 - something's moved and then in combined I
118:51 - can do the same thing this is nothing's
118:53 - moved so return false and oh and these
118:56 - have to have a be a boolean now boolean
119:00 - boolean and at the end return moved then
119:08 - here in combined return false if at the
119:11 - end as a 0 it's no good and here return
119:15 - true and I guess if I make it all the
119:18 - way to the end return false so this is
119:22 - now going to tell me if any of them sure
119:30 - I don't need to really check all of
119:32 - these but because this but let's just do
119:36 - this oh no no no no no no this is no
119:39 - good
119:41 - first of all if anything has moved
119:44 - anywhere so I don't want to set the
119:50 - value ever doctor false so if it shifted
119:57 - moved is true
120:00 - this is this is now kind of spaghetti
120:03 - again if it's combined moved is true and
120:11 - the last one doesn't need that because
120:14 - by definition this is only gonna do
120:17 - anything if it combines something and so
120:19 - it's already been set to move and now I
120:21 - should be able to UPS add a new spot so
120:24 - now I should have I think the behavior
120:28 - of 2048 know something moved how come I
120:36 - didn't get a new so let's let's look at
120:40 - this moved equals moved or shift that's
120:52 - yeah that's better
120:54 - so this I'll keep it so moved is Fault
120:58 - false so this is better moved equals
121:03 - moved or shift so it's going to stay
121:06 - true this is much cleaner to look at it
121:11 - this way moved equals moved or combined
121:15 - and then I can do the same thing here
121:18 - moved or shift so let's look at yeah
121:26 - there we go well stuffs not moving now
121:29 - okay wait hold on what's just happened
121:33 - now all right
121:41 - two fours go to the bottom oh boy why
121:45 - did this four not move what did I change
121:50 - go through each column
121:59 - oh this could be maybe this
122:16 - why what I thought I had this working
122:37 - return false return true is this now if
122:45 - it makes it to the end
122:55 - I guess actually I could return a new
123:00 - array and the reset board back to that
123:02 - new array as soon as moves becomes true
123:11 - the function one alright soon hold on
123:20 - let me go all the way back let's let me
123:32 - redo this completely
123:41 - I'm just gonna think about this for a
123:43 - second and just go all the way back to
123:47 - where it's always adding stuff and this
123:51 - is just returned this is just returned
123:57 - and this is not here whoops it's so much
124:00 - console so much unnecessary console
124:03 - could have so much more code
124:16 - yeah all right that's good now I need to
124:23 - figure out a way to to determine if
124:30 - something has moved and I think honestly
124:32 - I've been messing with this the best way
124:36 - to do this is just with a global
124:37 - variable which is a little bit awful but
124:39 - I'm gonna just start with this for right
124:40 - now I'm gonna say boolean moved and if
124:43 - there's a false so I just want to figure
124:46 - out if something has moved so every time
124:48 - I swipe I reset moved back equal to
124:52 - false and then what I can do is in these
124:57 - functions combine like if anything has
125:00 - changed here like for example if at any
125:04 - point column index I does not equal
125:08 - new column index I right there's a new
125:09 - value then I can say moved equals true
125:11 - and then if at any point here I can say
125:16 - moved equal true so these are just the
125:18 - two spots there's much simpler these are
125:20 - just the two spots
125:21 - something's moved it's a global variable
125:23 - so I probably should think of a more
125:25 - thoughtful way of returning a value or
125:27 - passing a value around but I'm gonna do
125:29 - that right now
125:30 - and then I can I can just say this if
125:33 - moved add a new spot so let's see if
125:34 - this works there we go there we go and
125:39 - add a new one would even combine them so
125:41 - eventually we should get stuck right we
125:46 - got stuck nothing can move let's run
125:48 - this one more time so the game is
125:54 - totally playable now the only thing is I
125:57 - can only ever swipe down so if you want
126:01 - to look at the next step
126:02 - where what I'm going to attempt to do is
126:05 - when I press to the right just rotate
126:07 - everything this way so that it swipes
126:09 - everything to her you know down again
126:11 - but it'll only take the right and move
126:13 - it this way so it swept down and then
126:15 - move it back right that's what I'm an
126:17 - attempt to do in the next video if you
126:19 - can even stand to keep watching any of
126:21 - this stuff alright thanks very much
126:24 - and there we go
126:30 - alright I would add a counter so that if
126:33 - one or is greater you know that they one
126:36 - or more of them have returned true in
126:37 - regards to the boolean yeah yeah okay
126:39 - that's a good suggestion
126:40 - oh no is that really true that two two
126:43 - two two should be zero zero four four
126:45 - and I've missed that and four four two
126:49 - two should be eight four oh I missed
126:52 - stuff but I'm still good in terms of my
127:01 - I'm I'm still good the only thing that
127:06 - in terms the combine has to keep going
127:09 - it shouldn't leave here if it can
127:14 - combine more stuff by the way I'm gonna
127:19 - come back and do the rotation next week
127:21 - I'm not going to do that now because
127:23 - it's 9 o'clock at night
127:25 - oh so but I could just call the combine
127:30 - function until it doesn't have anything
127:33 - left to combine right so for example if
127:38 - I can say while combined well while true
127:49 - well how do I do this
127:53 - maybe like a do-while loop would work
127:55 - here or something like no while it
127:59 - combined column is true call it again
128:04 - this is really silly but right if I had
128:09 - it return true or false I mean it
128:12 - doesn't right now I could do it again it
128:15 - will never be more than two oh yeah
128:19 - you're right
128:20 - it can never be more than two so I can
128:22 - just say combine it twice I'll put that
128:27 - in the beginning of the next video
128:35 - whoops did that do something weird yeah
128:42 - why isn't the two making it all the way
128:43 - down there because that was a new -
128:48 - right it's confusing just one the new
128:50 - things come I think they didn't move
128:52 - correctly two and four should be at the
128:54 - bottom four - four all stay in the same
128:57 - place new - two ends up next to the
129:00 - floor for end up next to the to a new
129:03 - four appear at the bottom so nothing new
129:06 - for appeared at the top the four should
129:12 - go bind to the bottom to be an eight a
129:13 - new four appeared a new four appeared
129:19 - eight I think it's working yeah it's
129:23 - just weird cuz the new stuff doesn't
129:25 - animate so it kind of looks like it's in
129:27 - the wrong place because like a new -
129:30 - just appeared there alright - two four
129:38 - zero goes to zero zero four four it did
129:41 - that wrong it did something wrong
129:43 - I'm just curious so two two four zero
129:53 - what my algorithm will do is change it
129:58 - to four two two zero four and then it
130:02 - should do this for zero zero and that's
130:06 - not correct
130:10 - so I lost the chat four zero four eight
130:14 - made it to 16 because I combined twice I
130:18 - can't just
130:19 - I can't just willy-nilly combine twice
130:21 - okay so willy-nilly combining twice is
130:24 - not correct because then I will get this
130:29 - will this will go do this will actually
130:31 - because I'm doing this twice this will
130:33 - actually end up zero zero zero eight
130:35 - which isn't correct it should end up
130:37 - with this so but the mistake that I have
130:42 - is that four four two
130:46 - two will end up with my algorithm 2 2 4
130:51 - 4 will end up in my algorithm as 8
130:55 - well it'll at first it'll be 2 to 4 4
131:00 - because it won't move anything
131:01 - then it'll be 2 2 oh it's only if there
131:05 - is a zero so I have to repeat if a zero
131:11 - pulls out so there's it so the algorithm
131:17 - is correct right because the first thing
131:19 - it did this is what it will end up as
131:21 - but I now have a case where I have to go
131:23 - again why because I have a zero
131:27 - somewhere in the middle anytime I have a
131:30 - zero somewhere in the middle I can run
131:32 - this again which is different than this
131:36 - case this case the zero is not there's
131:44 - no shifting down so that is actually
131:48 - what I'm missing here is the way it
131:53 - should be correct is I should shift let
131:59 - me look at that
132:01 - shift which does nothing combined oh and
132:07 - then shift again but I shouldn't
132:09 - actually oh whoa
132:12 - after I shift again I can run combined
132:14 - that was the problem
132:15 - oh I just need to run combine a second
132:17 - time down here right right that should
132:20 - Ono but not if not if shift doesn't only
132:24 - a shift changes something if shift
132:26 - changes something right this should
132:30 - really return right this should really
132:35 - return a boolean right if things if this
132:39 - second shift changes something then I
132:46 - can run combine again I think that's
132:50 - correct because if the second shift
132:57 - changes something
132:58 - I can return if moved is true based on
133:03 - the second shift so that I'm gonna have
133:10 - to correct this in the next video but if
133:18 - but is that correct
133:20 - does that seem right I mean I know I can
133:22 - write the code for this right only if
133:24 - it's shifted again can I can I combine
133:26 - again right so pseudocode wise what I
133:36 - was missing when I'm missing yours if it
133:38 - changed if it's changed here so this
133:53 - seems right right so I need to where
133:59 - I've ended so far is this so I'm gonna
134:03 - do save a version 3 because I just want
134:07 - to try this real quick shift can just as
134:14 - like a temp moved I'm just gonna changed
134:20 - its false changed its true and then
134:31 - return changed and this should be
134:37 - boolean just a curiosity now am I
134:44 - getting everything right here now
134:53 - so two to four should be four four yep
134:57 - now should go to eight
134:59 - both those should go to eight yeah four
135:01 - should go therefore should go there two
135:03 - should go there I think it's doing Oh
135:07 - something did something weird happened
135:08 - there no just a new two appeared and I'm
135:16 - stuck now I think now so I need to do
135:23 - this last piece whenever I come back to
135:25 - this I think it works right I mean it
135:36 - only goes down but I think it actually
135:38 - works I mean I have to think about a
135:40 - better way of doing this but okay
135:44 - alright everybody that's it I kind of
135:51 - really want to finish this but maybe I
135:54 - could just do it again I don't know you
135:56 - manually set a column and set up for
135:57 - testing the thing is I don't actually
136:02 - just I have to rotate it I just need to
136:05 - pull all point this would be so much
136:06 - better in JavaScript because I could
136:08 - just pull out the section that I want
136:11 - and redo it but anyway there should
136:13 - really be a better way for
136:14 - multi-dimensional arrays to be aware of
136:16 - their corresponding rows and columns
136:18 - simultaneously yeah 0 4 2 2 is still
136:20 - wrong
136:24 - alright let's let me see something okay
136:32 - so I'm gonna not let's let's try this
136:37 - I'm not gonna add any new spots anymore
136:40 - and I'm going to say board 0 1 is what's
136:48 - the issue is 0 4 2 2 0
137:04 - whoops 0 1 2 3 so this is the situation
137:12 - this should end with 4 4 know isn't that
137:15 - correct
137:19 - 2 2 2 will be wrong try to break my
137:23 - algorithm people oh that's wrong that's
137:31 - wrong because why so let's think about
137:33 - that
137:42 - so what is my algorithm do 2 2 2 2
137:48 - doesn't shift anything then it combines
137:51 - this shouldn't it be left with this and
137:55 - then it should move it to this which
138:00 - should trigger another combine so I
138:02 - should get this that's the algorithm in
138:06 - my mind that I've written
138:11 - step 1 is nothing then combine these two
138:16 - leaving the 0 then shift why didn't that
138:18 - happen yeah I'm gonna I'm gonna look at
138:32 - this so this is good to see that this
138:33 - isn't working so now I know this is a
138:36 - case where my algorithm is faulty so I'm
138:39 - gonna go and I will pick this back up I
138:46 - don't even know I'm like so confused
138:49 - here I'm gonna just turn this off so
138:52 - thank you all for watching this again I
138:54 - think I need to like just be a little
138:56 - bit more disciplined in the future
139:00 - I gotta go get home eat some dinner go
139:02 - to sleep and I will see you all next
139:06 - week I will definitely be back here next
139:08 - Friday I might pop back in
139:12 - and did I catch oh yeah i yeah i'm sure
139:17 - in Austin and Matt I'm getting some good
139:18 - comments I probably something really
139:20 - small here but I'm I'm gonna end of
139:22 - games wrong I'm gonna I'm gonna come
139:23 - back to it and fix it next time okay
139:26 - goodbye everybody
139:28 - sorry that I'm just ending so abruptly
139:30 - but that's what happens