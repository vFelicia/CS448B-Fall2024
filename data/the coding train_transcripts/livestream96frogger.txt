00:00 - [Music]
00:02 - hello good morning afternoon hello it's
00:05 - Friday it is the day for the coding
00:09 - train with
00:10 - me Dan uh hello this is uh welcome I'm
00:15 - hoping that I'm live streaming which I
00:17 - probably just shouldn't say I should
00:18 - just assume at this point that things
00:19 - work because they typically do um I'm a
00:22 - little bit earlier today uh then I often
00:24 - am on Fridays due to a bit of a
00:26 - scheduling change
00:27 - someday the universe will come together
00:31 - with some way that I establish a regular
00:35 - weekly time slot that I do every single
00:37 - week but at this point I'm still kind of
00:39 - a bit of an ad hoc uh YouTube streamer
00:42 - if that makes any sense and um but
00:44 - anything that I do um will be archived
00:47 - and available to watch later and then of
00:49 - course uh this live stream will also be
00:51 - chopped up in little bits and edited
00:52 - tutorials so uh looks like we've got a
00:56 - bunch of folks here I see a chat
00:58 - scrolling uh um I see everything so okay
01:02 - so what's happening today I don't know I
01:05 - got a marker if I have a marker things
01:08 - will be okay I'm going to program
01:10 - something uh I think I've been if you've
01:12 - been following my live streams for the
01:13 - last few weeks you know that I have been
01:16 - uh on a path telling a story about
01:19 - machine learning and artificial
01:20 - intelligence but today we're going to
01:22 - take a little break from that I will be
01:24 - return I will return to it I think I
01:25 - what I need the next big example that
01:28 - I'm going to build is a full full uh
01:30 - multi-layered perceptron neural network
01:32 - example and I think that's going to need
01:35 - somebody actually made a comment on my I
01:38 - know I know on my perceptron video which
01:40 - I took to heart which was like you know
01:42 - your videos are great they might be a
01:44 - little bit better if you prepared for
01:45 - them um so while I do think that some of
01:49 - what I do in particular with some of the
01:51 - coding challenges works well due to the
01:53 - lack of preparation or maybe it doesn't
01:54 - work well but that's just sort of the
01:56 - thing that's I'm not ever going to
01:57 - change that and that's part of what I'm
01:58 - going to do today with no preparation
02:00 - whatsoever is program a game but I do
02:02 - think with some of the uh deeper more
02:04 - complex topics that a little preparation
02:06 - or a little allocation of time could
02:07 - help so I'm I'm want to make sure that I
02:10 - have a good block of time or maybe two
02:12 - days in a row where I can do two two two
02:15 - to three hour sessions to really build
02:17 - this much larger example that has a lot
02:19 - of pieces and components the neural
02:20 - network example okay so that said
02:26 - uh that said what will I do today
02:31 - my uh kids who are uh ages five and
02:34 - eight suggested that I do a fidget
02:36 - spinner
02:37 - simulation uh which I am considering you
02:40 - know I don't want to just latch on to
02:41 - the latest craze I don't know if I have
02:43 - my pet rock somewhere around here to do
02:45 - a pet rock simulation or a hula hoop
02:48 - simulation perhaps uh earlier crazes I
02:51 - suppose what's another one um anyway uh
02:55 - but we'll see maybe I'll maybe I will do
02:57 - that but it has been requested for a
02:59 - while
03:00 - to look at the game
03:02 - Frogger so let's see here I'm going to
03:04 - open up a web browser does anybody know
03:08 - where I let's let's look uh I think
03:11 - crossy road is another um version of
03:14 - this game let's look on Wikipedia for a
03:17 - second uh
03:19 - okay so Frogger apparently is a
03:23 - 1981 arcade game I have definitely
03:26 - played this game before I have never
03:27 - programmed this game before the the idea
03:31 - Loosely let's see if we can find an
03:33 - image is that you are a frog let's see
03:36 - let's look at this you are a frog
03:39 - where's the Frog there's the Frog down
03:41 - here at the
03:42 - bottom and your job is to get from the
03:46 - bottom to the other side in those little
03:49 - receptacle end points and you must not
03:52 - be hit by a car and so this is the road
03:56 - so don't get hit by a car and then when
03:58 - you get up to here here this is a river
04:01 - so you need to jump on either these lily
04:03 - pads or logs the frog is in the middle
04:05 - of the game thank you sorry that's where
04:07 - the frog is thank you ala this is how
04:09 - many lives I guess you have left um and
04:13 - and this is how much time is at the
04:14 - bottom so you can see there's a score so
04:17 - I think that I can do this I have some
04:20 - level of confidence uh we will need uh
04:23 - rectangle rectangle Collision detection
04:27 - right because I can really consider the
04:28 - Frog as a rectangle and each of these
04:30 - cars are the rectangle the logs the lily
04:32 - pads is rectangle so I just want to know
04:33 - if the frog has hit a car or the frog
04:35 - has jumped on a log
04:39 - um I expect that when I make this I will
04:42 - leave out things like the timer number
04:45 - of lives score visual design so I just
04:48 - want to build a simple framework for the
04:50 - basic functionality of the game and then
04:52 - let people create their own versions of
04:55 - it um
04:58 - okay um all right so I'm looking at the
05:01 - chat make no I'm not going to read that
05:03 - comment it's way too upsetting to
05:06 - me uh okay so that's pretty good now is
05:09 - there a place I think that's probably
05:11 - all I need but maybe maybe I can at
05:12 - least play a version of this game online
05:14 - does anybody know in the chat
05:18 - um uh does you know there um Mi I am so
05:22 - me in the chat is saying the grid
05:23 - behavior is a bit odd on the logs and
05:25 - turtles uh if I recall correctly so I
05:27 - think there's probably a lot of nuance
05:28 - to how this game was originally
05:30 - programmed a lot of these early Atari
05:31 - games you know had a lot of limitations
05:34 - in terms of memory and speed and I can
05:36 - be a bit more flexible with just I don't
05:39 - need to worry about a grid system
05:40 - exactly but
05:43 - um uh but ah yes yes okay so I'm gonna
05:48 - we'll see what happens okay um H
05:52 - somebody in the chat says this is ideal
05:54 - timing can you please start streaming
05:56 - every Friday at this time I I um
05:58 - typically this was my regular time at
06:00 - one point um the afternoon worked better
06:02 - for a variety of reasons uh mostly that
06:05 - I had a conflict in the morning and
06:07 - right now it's sort of Summer and I just
06:09 - to be honest summer schedule is going to
06:11 - be so uh wacky in terms of um travel and
06:15 - different other things going on so I'm
06:17 - just going to kind of on a week- to week
06:19 - basis um schedule live streams when I
06:22 - can but I will take note that I know
06:24 - that this that this time for some people
06:26 - is very good uh I will say that if you
06:29 - uh want to support what I'm doing other
06:32 - just watching and giving some um helpful
06:36 - criticism or supportive words is always
06:39 - helpful but you can go to um patreon.com
06:43 - coding Trin that is a crowdfunding
06:45 - website uh and members of the uh patrons
06:49 - of the coding train channel can uh get
06:52 - access to a slack Channel where I am
06:54 - very
06:55 - good at um where I am very good at um uh
07:00 - announcing when I'm going to go live in
07:03 - a in a in a slack Channel there uh Simon
07:05 - in the slack Channel says use oop and in
07:09 - fact I really think this is a great
07:11 - suggestion I think that this particular
07:14 - game is a really excellent opportunity
07:19 - to use certain principles of
07:20 - object-oriented programming like
07:22 - inheritance and possibly
07:24 - polymorphism um and and so I'm going to
07:26 - actually program this in processing
07:28 - using Java uh which at you know which I
07:31 - think is just a place that I'm a bit
07:33 - more comfortable with in terms of the
07:34 - objectoriented programming stuff and
07:36 - also I'm really living in this place
07:38 - where I want to explore this summer uh
07:42 - more about programming in JavaScript
07:44 - from uh with es6 and with functional
07:47 - stuff I've been getting a lot of
07:48 - feedback in the patreon patron slack
07:51 - group that's been discussing and giv and
07:53 - kind of pushing me in that direction and
07:55 - I'm a little bit cautious and I like to
07:56 - do things in the simplest way possible
07:59 - but um I feel so conflicted about that
08:01 - that sometimes like I just do this in
08:03 - processing that I don't have to worry
08:05 - about kind of what flavor of JavaScript
08:07 - I'm doing at the moment so that's kind
08:08 - of a plan um uh Ted in the chat asks
08:12 - please use p5js thank you for that
08:15 - comment I
08:16 - will um and you have to guys have to
08:18 - keep me honest about this either on
08:19 - Twitter in the comments but I absolutely
08:22 - am always happy and usually somebody
08:23 - from the community does this to just
08:25 - post a port of the code in JavaScript
08:27 - and especially for something like this I
08:29 - want to do that because people often
08:30 - want to share their versions of it and
08:32 - sharing and having stuff run in the web
08:33 - it's just so much easier for that um
08:37 - okay uh why did the
08:41 - frog why did the frog cross the road
08:44 - because it was staple to the
08:46 - chicken uh here's another one why did
08:49 - the frog cross the road because the
08:51 - chicken was on
08:52 - vacation these are the jokes we tell in
08:54 - my household okay uh I guess they dad
08:58 - jokes is uh
09:01 - apparently the term okay um me I am so
09:05 - me has volunteered to Port after I'm
09:07 - done which is great thank you and I be
09:09 - um I even am not opposed to doing a
09:11 - second pass over the video um if uh with
09:15 - um uh in JavaScript
09:18 - too okay um I'm just reading the chat
09:22 - for a
09:23 - second um oh can you please make a game
09:26 - with matter.js and uh the V I always get
09:30 - this a lot of people are telling me
09:31 - matter.js and neural networks uh yes I'm
09:34 - definitely going to do some stuff with
09:35 - neural networks and games and training
09:37 - AI agents to play games and it's just
09:39 - going to take me a while to get there
09:41 - but I will be doing all that I I often
09:43 - get I'm speaking a little quieter
09:44 - because I I can hear that there's a
09:45 - class going on in the room uh next to me
09:48 - and I don't uh once when I did a live
09:50 - broadcast somebody came in and said I
09:52 - was making too much
09:53 - noise so um I wonder if um Can can you
09:58 - guys let me know if the levels seem okay
10:01 - in particular in the slack group is a
10:03 - little easier for me to
10:06 - follow um can I
10:08 - start yes uh a lot of you are new here
10:11 - probably because I can see that you said
10:13 - hey your camera shut off this is
10:14 - something that happens to me it's I'm
10:16 - like sopus here I could probably fix it
10:19 - but the cameras go to sleep the cameras
10:21 - I'm using go to sleep after 30 minutes I
10:22 - have to go press the button to wake them
10:23 - up because you never know I might fall
10:26 - asleep in the middle of my uh my my
10:28 - thing
10:31 - okay so this is with some music and me
10:33 - talking and perhaps the levels are a
10:35 - little off with music and me
10:37 - [Music]
10:40 - talking are you ready for
10:44 - Frogger okay how are the
10:47 - levels
10:50 - um uh okay so I'm going to wait to get
10:52 - some information from the chat and then
10:54 - I think we're going to start with
10:57 - froger I'm I'm just
11:05 - curious is this a topic that interests
11:11 - people uh create
11:16 - poll uh this is now my straw poll 8 Fe
11:21 - f2d if you guys can vote there I'm not
11:23 - going to I'm going to do Frogger first
11:25 - the other thing that I would like to do
11:26 - today if I have time is a follow-up
11:28 - video about the perception because
11:29 - there's a few pieces of that that I
11:31 - didn't get in last week's coding
11:33 - challenge uh the music is louder but I
11:35 - don't see that much as concern levels
11:36 - are fine oh God
11:39 - no I'm just saying this is my kids
11:42 - requested and I you know I am a sucker I
11:46 - will do anything for YouTube views and
11:49 - likes I can't I I I would like to say
11:51 - that that's not true I would like to say
11:53 - that I'm just here to teach and just
11:56 - here to um give some entertainment or or
11:59 - to impart some knowledge or to help but
12:01 - really I'm here because some chemical
12:04 - reaction goes off in my brain when
12:06 - people click like and watch the videos
12:07 - and a different chemical reaction goes
12:09 - off my brain when people write I hate
12:10 - your videos but that's okay it happens
12:12 - it's on it's YouTube there's no way you
12:13 - can get around that but I I I I do
12:16 - appreciate the constructive criticism
12:17 - which I've been particularly getting as
12:19 - I've tried to do sort of more difficult
12:21 - math
12:24 - topics feel a little Twitchy today okay
12:28 - um
12:29 - all
12:31 - right what's with that
12:33 - coffee yes interesting thing about the
12:36 - coffee is that has a green heart on it
12:38 - so I don't know how well you can tell
12:40 - this but look at this I have an
12:41 - invisible coffee I also
12:47 - have a window a green
12:52 - window now maybe what I'll do is just
12:54 - show you what I'm holding here this is a
12:57 - preview uh I shot I I I'm working I I we
13:01 - did a video shoot for a new music video
13:04 - theme song trailer for the coding train
13:06 - and this was a green window to use for
13:09 - the train window so that will be coming
13:12 - to YouTube sometime later this
13:15 - summer uh okay back to
13:19 - here my five-year-old sis is watching
13:22 - with me hi 5-year-old sis my daughter is
13:25 - a 5-year-old sis she will be six though
13:28 - this summer uh she is at kindergarten
13:31 - right now and when this is over I will
13:33 - be going to pick her up from
13:34 - kindergarten then we will be having our
13:35 - tennis lesson this is my day today okay
13:39 - do I ever stop and ask is this what my
13:41 - life has become yes all the time
13:45 - although honestly I usually ask it this
13:47 - way hey is this what my life has become
13:50 - you know I said I think I was I did a
13:51 - podcast interview the other day where
13:53 - i'm really just a failed musical theater
13:56 - wannabe person like that's all I wanted
13:58 - to be was you know
13:59 - actually I didn't really want to be in
14:01 - the musicals I don't think because first
14:03 - of all even if I did I cannot
14:05 - sing but I just wanted to be a part of
14:07 - the Broadway I love it I saw the great
14:10 - Comet the other day got tickets to Evan
14:13 - Hansen I'm a big Broadway fanatic
14:15 - theater nerd okay uh where are the this
14:18 - dot shirts does anybody want to design a
14:21 - this dot shirt I would totally be open
14:23 - to that um I have the you can get these
14:26 - coding train shirts at coding train
14:29 - . storenvy.com I think we better get
14:31 - started here um I also have hoodies and
14:34 - some kids t-shirts um and other things
14:37 - you can get and this is another way you
14:38 - can support this Channel and finally a
14:41 - way that you can support this channel uh
14:43 - less directly but um probably someone an
14:46 - organization that needs more support
14:47 - than I do is the processing foundation
14:49 - so I just want to mention the tools that
14:51 - I typically use um processing and
14:55 - p5.js there's also processing. piy which
14:57 - is a python mode for processing are
14:59 - maintained by a nonprofit uh foundation
15:02 - called the processing Foundation
15:04 - processing foundation.org you can find
15:05 - out more about it and if you uh are
15:07 - interested you can become a member and
15:09 - support the foundation financially okay
15:12 - uh what else did I miss that I usually
15:14 - need to announce or thank I don't think
15:17 - so let's take a look at this view
15:19 - results no oh that's so sad come on
15:22 - people make me happy there's already 200
15:26 - votes I want to see some yes votes here
15:29 - come get me up to yes I got to tweet
15:34 - this uh am I logged into Twitter here I
15:37 - am as the coding train account okay I
15:39 - have two Twitter accounts at shiffman
15:42 - and also at the coding train the coding
15:43 - train though really just auto posts when
15:45 - I post a video I don't uh really check
15:47 - it that often like you can see that I
15:50 - have 36 notifications here um help get
15:55 - me
15:56 - to yes
16:02 - uh okay so I have uh Simon is saying no
16:06 - no no don't worry I won't do that
16:10 - before the oh yes it would be
16:12 - interactive the ideas that you would be
16:14 - able to click on it you would twirl it
16:16 - it would spin we would deal with like uh
16:19 - friction and uh angular velocity this
16:21 - would be a reasonable actually this is
16:23 - basically one of my nature code examples
16:25 - already um okay I just rebranding it to
16:28 - to try to get uh let's see view results
16:32 - how we doing here well getting getting a
16:34 - little closer getting a little closer
16:36 - okay but I got to go to Frogger that
16:37 - seems to be more interesting to
16:40 - people
16:43 - okay let's
16:45 - see should I wear some of my train
16:48 - conductor costume that's another
16:53 - question okay oh look a machine learning
16:56 - machine learning fidget spinner that is
16:59 - genius I have to think of a way to
17:01 - figure out to make a machine learning
17:03 - that wait if I just did neural network
17:05 - fidget Spinners or some sort of like all
17:07 - these like buzzword things that people
17:09 - wanted to learn plus fidget spinner that
17:11 - would be amazing I didn't even bring a
17:13 - fidget spinner with
17:14 - me I own I mean I don't get to play with
17:17 - them because because I never am allowed
17:20 - to be the one who gets the hold fidget
17:21 - spinner but I do indirectly own many of
17:24 - them okay uh let's move off of this and
17:27 - go to Frogger I don't think I need to
17:29 - play froger I think that with this here
17:33 - this is going to be good enough uh yeah
17:36 - genetic algorithms in fidget Spinners
17:37 - evolutionary design a fidget spinner
17:39 - there we go that's a great idea Jo did
17:41 - two people suggest at the same time Amir
17:44 - and Alka angular momentum exactly
17:47 - there's physics there's stuff okay um
17:50 - let's see here let's check how this uh
17:54 - whiteboard
17:55 - is I mean uh let's see if this pen is a
17:58 - good one
18:02 - uh I don't love it I don't love this
18:04 - marker let's try another
18:07 - one got one up
18:12 - here ah this one's better it's not the
18:15 - best but it's
18:17 - better can you guys read that okay looks
18:20 - pretty good
18:24 - um let's try one
18:27 - more
18:29 - it's pretty
18:31 - good um okay this one actually is even a
18:33 - little bit better all right I think I'm
18:35 - going to be ready to do the first coding
18:37 - challenge so my plan is to uh do this it
18:44 - text teams fine on the Whiteboard great
18:46 - my plan is to do this in multiple Parts
18:49 - um I think what I'm going to do is just
18:53 - create the basic mechanics of the Frog
18:57 - moving H let's think about
19:00 - this oh boy I I forgot about this whole
19:04 - like get into the I just kind of want to
19:06 - make a simpler version where you get to
19:08 - the end
19:10 - um I can hear sounds from the I'm
19:12 - thinking about this so one thing that
19:14 - I've learned is that I think sometimes
19:16 - when I try to implement every single
19:18 - detailed feature of a game my videos
19:21 - tend to spiral out of control uh in a
19:24 - way that's when I did Pong that kind of
19:25 - happened um and so I really want to keep
19:28 - this simple
19:29 - there's like a buzzing coming from the
19:31 - room behind
19:36 - me it's okay if I just meditate this my
19:39 - my uh Fitbit has this thing where I can
19:42 - uh do this like relax breathing for two
19:45 - minutes do you guys mind if I just do
19:47 - that you know mind just take a break for
19:49 - two minutes I'm going to do some
19:50 - relaxing breathing stuff no maybe I
19:52 - should PR proger okay get it I got it um
19:55 - okay so two parts one is I haven't seen
19:59 - anybody type cringe in the chat for so
20:01 - long it's been so long makes me so happy
20:06 - cringe okay
20:08 - um I will have to make a grid for the
20:11 - Frog okay okay I hear this feedback and
20:14 - I'm going to figure this out I think I'm
20:16 - going to do something a little you know
20:17 - what I'm going to just start the video
20:18 - because here I am just talking and
20:19 - talking and talking this might as well
20:21 - be part when I say start the video it's
20:22 - such a weird thing but what I mean is
20:25 - that uh uh uh this will get edited into
20:28 - to a tutorial a set of different um T
20:31 - videos in multiple parts so I'm just
20:32 - going to start the actual coding
20:34 - challenge some rows movements are faster
20:37 - or slower than the other oh it's by
20:39 - row so the
20:42 - um the so you're saying to me ala that
20:46 - these cars move at the same rate right
20:51 - and do they always stay does the design
20:53 - stay the same so it's like different
20:56 - cars different speeds okay that's
21:00 - interesting okay it's by row because
21:02 - it's by
21:04 - car okay how much time is this going to
21:08 - take good question what do you guys
21:12 - think knowing that I tend to ramble that
21:15 - I tend to make a lot of very basic
21:18 - mistakes how long will this take okay
21:21 - let me get processing open I'm going to
21:22 - do this in
21:26 - processing I'm going to use object
21:28 - oriented programming for
21:31 - this you guys I wish you could hear the
21:33 - music that's playing in the it's like a
21:35 - film class and I uh let me get the most
21:38 - recent version of processing which is
21:49 - 3.3.4 as always I always forget the this
21:52 - dot this do this do this do I'm going to
21:54 - do this do this do I'm going to do this
21:56 - this do this do this do
21:59 - do
22:03 - do do do do do forget do do
22:11 - do do do this
22:15 - [Music]
22:22 - do looks
22:26 - like I've got processing now let me open
22:29 - this
22:31 - up
22:35 - and make do this here how is this font
22:40 - size for you
22:43 - guys uh game
22:46 - play uh bergner in the chat just
22:53 - um uh Berner in the chat just posted a
22:57 - YouTube video with Frogger gameplay
23:00 - let's see if I can get that up
23:04 - here um what's the link
23:08 - here um oh boy um I bet you I can just
23:12 - search for it right uh Frogger Arc
23:16 - gameplay
23:19 - YouTube is this the one I think this is
23:21 - the one that was just
23:25 - [Music]
23:27 - posted
23:32 - so let's take a look at
23:41 - this oh I love all the little
23:45 - animations so see there's interesting
23:47 - enough the Frog moves on a
23:50 - grid but the
23:52 - Frog um when it gets on a log gets to
23:56 - move sort of independently of that grid
23:59 - which is kind of
24:02 - cool when there's a little extra thing
24:06 - there can you guys hear the sound by the
24:08 - way it's like crossy Road isn't doesn't
24:11 - Frogger predate crossy
24:19 - Road crossy Road endless arcade Hopper
24:22 - game crossy Road for me 198 I think of
24:26 - Frogger okay uh this is great I'm going
24:28 - to use this
24:29 - video
24:32 - um and start it as the
24:35 - [Music]
24:42 - background I'm GNA
24:49 - get okay so here we go oops I'm the chat
24:53 - stop we can hear the sound
24:56 - okay all right
25:02 - now how we doing everybody you ready for
25:05 - this I'm going to go and um you look
25:09 - like
25:10 - I
25:13 - agreed you will get no argument for me
25:16 - there okay so here we
25:20 - go we are going to
25:27 - begin
25:34 - only because you all said
25:36 - cringe in the chat that means I am
25:39 - bringing out the train whistle okay here
25:43 - we
25:47 - go hello uh welcome to another coding
25:51 - challenge with me coding challenge
25:53 - person YouTube thing okay this is a game
25:57 - called Frogger I'm GNA play this video
25:59 - here oh oh so Frogger is a game where a
26:06 - frog tries to get from the bottom right
26:09 - there there's the frog the frog is
26:11 - supposed to get from there all the way
26:13 - up there and the idea is the Frog needs
26:14 - to avoid the cars but then the Frog when
26:17 - it gets to the river needs to land on
26:19 - the logs or the lily pads wherever they
26:21 - are to make it across so I would like to
26:25 - make this game now I'm going to make it
26:27 - in something called process
26:28 - which is a programming environment um
26:31 - built uh with on top of the programming
26:32 - language Java that you can download from
26:34 - processing.org I will also release after
26:38 - the this video is finished and this will
26:39 - probably video be in a bunch of parts I
26:41 - will also release a JavaScript version
26:43 - of the code so you can make a browser
26:45 - based version of this game okay I have
26:48 - to stop this uh because it's distracting
26:50 - me too much um let me say another couple
26:53 - things um I'm going to keep things very
26:55 - simple so I'm not going to implement all
26:57 - the features of the game there won't be
26:59 - any sound all these little like
27:00 - beautiful animation details I probably
27:03 - won't Implement H you know as well as
27:05 - sort of the graphics and visual design
27:07 - but it is my hope that the internet the
27:09 - wonderful world of the internet will
27:11 - watch this video and take this code and
27:13 - make all sorts of crazy fun extra
27:15 - interesting versions of this game so
27:18 - let's get
27:19 - started pause
27:21 - timeout uh okay Frogger is 81 and crossy
27:25 - road is 87 thank you okay
27:28 - cars are slower than the turtles oh
27:31 - those are turtles not lily
27:35 - pads I'm being told uh that those um
27:39 - that these are not uh lily pads but
27:42 - rather they're Turtles I mean come on
27:45 - they kind of look like lily pads that's
27:47 - a turtle that's a turtle okay uh all
27:49 - right so okay oh guess what this is
27:52 - going to be a great opportunity to
27:54 - practice some object-oriented
27:56 - programming techniques right cuz there's
27:58 - a lot of things like there's cars
28:00 - there's logs they're similar they're
28:02 - different but there's a lot there's a
28:05 - lot that we could um use uh in terms of
28:09 - making objects that relate to each other
28:11 - or I just I don't know what I'm saying
28:13 - now but I'm going to get into stuff like
28:14 - inheritance of polymorphism in this
28:15 - video polymorphism just say polymorphism
28:18 - three times and the Java monster shows
28:20 - up at your door whatever that is the
28:22 - Java monster says system
28:26 - out call uh
28:29 - can we please I've lost my mind I I had
28:32 - you know I really gotta I need some more
28:34 - written I think I need to write my u t
28:37 - time out is this is this thing am I
28:39 - actually live streaming right now I
28:40 - think I am for a moment I just imagined
28:43 - that I was rehearsing which would be
28:44 - nice right
28:47 - okay all right uh volume is too low I I
28:51 - can't a lot of people are telling me
28:53 - this let's see what I can do here I will
28:56 - raise the volume a slight amount
29:00 - just because I am getting that comment
29:01 - from a lot of
29:05 - people uh which sorry hold on a sec
29:08 - which one am I plugged into
29:11 - three
29:14 - and uh I'm going to turn this up I don't
29:17 - know if you can see me where I
29:19 - am uh let's
29:23 - see test test test hello hello hello how
29:27 - is that is that better I think I'm a
29:29 - little bit louder now so hopefully
29:31 - that's fun River does not make sense
29:34 - because frogs can swim I totally agree
29:39 - uh okay volume is fine um all right
29:42 - people are saying I'm fine but it's some
29:43 - people are saying it's better
29:45 - okay all right so let's let's start by
29:48 - mapping out some of the pieces of things
29:50 - that we're going to need okay so one
29:51 - thing that we're I can see I've never
29:53 - programmed this before this is Scouts
29:55 - Honor or whatever uh
29:59 - let me do that again I don't want to say
30:00 - SC
30:03 - okay okay so let's think about um some
30:06 - of the things that we need uh I have not
30:09 - programmed this
30:10 - before uh but I did think about it a
30:12 - little bit this morning on the subway so
30:15 - um one of the things that we're
30:16 - definitely going to need I'm going to
30:17 - consider the
30:19 - Frog to be a square I'm going to also
30:22 - consider the cars to be squares or if
30:25 - it's a truck a rectangle same thing for
30:28 - the logs or the turtles all of these
30:32 - things are essentially just squares or
30:34 - rectangles really and you know then
30:38 - eventually if I were visually designing
30:39 - this I could put whatever I want inside
30:41 - of these elements but what I'm going to
30:44 - need to do right I need to
30:46 - know is a rectangle intersecting another
30:50 - rectangle or not because what I want to
30:54 - know is for example did the frog is the
30:58 - frog has the Frog hit a car so I need a
31:02 - function that tests whether any two
31:04 - rectangles are overlapping or not and
31:07 - this is actually kind of this is not too
31:09 - difficult of a function to implement
31:11 - because if I know the left the right the
31:14 - top and the bottom left right top and
31:18 - bottom of any rectangle I can just see
31:22 - is the I can just check to see if um
31:30 - this is this is what happens by the way
31:32 - when you program something live you do
31:35 - this kind of like live stuff stuff
31:36 - that's just so intuitive or you feel
31:38 - like it's easy suddenly you get this
31:40 - like frozen moment of like oh my God I
31:43 - don't know if I'm going to get this
31:44 - right but we can do this I can do this
31:46 - let's think this
31:47 - through okay so if I have a two
31:50 - rectangles each with Left Right top and
31:53 - bottom if the left of one
31:56 - rectangle right if the left of this
31:59 - rectangle is less than the right of this
32:03 - rectangle
32:05 - or the right of this rectangle is
32:08 - greater than the left of this
32:11 - rectangle then right
32:14 - that's these cases right these are
32:16 - overlapping but one of these has to be
32:19 - true
32:20 - and the top of this
32:24 - rectangle if it is if the top of this
32:33 - rectangle
32:35 - um hold let's take a time out
32:41 - here maybe it will help if I drink some
32:44 - of this
32:45 - coffee I usually don't have coffee I
32:47 - didn't get a good night's sleep last
32:53 - night it's funny I think it's almost
32:56 - easier to work this out
32:58 - for me if I were programming it then to
33:00 - try to map it out here all right if the
33:02 - top of this
33:04 - rectangle is less than the
33:08 - bottom or the bottom is greater than the
33:13 - top
33:15 - now so actually what does it have to
33:22 - be it's actually a different way to
33:24 - think about this would be to just say is
33:27 - the left
33:28 - in between is this in between the left
33:30 - and the right or is this in between the
33:33 - left and the right and is this top in
33:36 - between the top and the bottom and is
33:38 - this bottom or is this bottom between
33:39 - the top and the bottom okay that makes
33:41 - more sense that makes more sense right
33:49 - because this top is in between the top
33:52 - and the bottom of this
33:54 - one I'm spending way too much time on
33:56 - this so so I think when I actually
33:58 - release this as a tutorial I'm going to
34:00 - want to figure out a way to edit this
34:01 - down and not go through this whole
34:03 - elaborate me thinking this through maybe
34:05 - I'm going to come back and explain it
34:06 - again
34:08 - um this top is in between the top and
34:11 - the bottom right but I can't just say
34:14 - this top is less than the bottom because
34:16 - it could be up
34:18 - here and I can't just say this top is in
34:21 - between the top and the bottom because
34:23 - it could be over here I know I've gone
34:25 - off but one of these also has to be
34:27 - between these two okay look I already
34:30 - have somebody I can see on the computer
34:32 - over there I think I can see like ala's
34:33 - icon has already posted a really quick
34:36 - version of this right which is uh um oh
34:41 - we can do the
34:42 - negation ah that is a wonderful idea so
34:46 - I can say ah I can a more efficient way
34:49 - to do this and I'm GNA I'm going to
34:51 - double back is to say let's actually
34:54 - just test if they're not intersecting
34:56 - right oh this is so great great okay
34:58 - let's start over let's start oh this is
35:01 - an exciting moment thank
35:03 - you thank you
35:05 - ala uh okay this
35:08 - is you can see how I literally do not
35:11 - prepare for this because now this seems
35:12 - so obvious to me and if I had just
35:13 - Googled I would have seen this on stack
35:14 - Overflow and maybe I would have thought
35:17 - of it eventually once I started
35:18 - programming
35:19 - it this is going to be so much better oh
35:23 - I'm so
35:25 - excited erase all this I don't remember
35:28 - where I was I'm just going to come back
35:30 - to the
35:33 - beginning we're going to just we're g to
35:35 - we're going to start this we're GNA
35:37 - start this uh tutorial over I know that
35:41 - Thrills all the live viewers to go open
35:44 - a window get some fresh air go get a cup
35:47 - of tea just take a couple minutes to do
35:49 - something else because I'm GNA I'm going
35:51 - to get this happening a bit
35:55 - speedier okay
36:00 - okay here we
36:03 - go okay so let's map out some of the
36:06 - things we
36:07 - need no I didn't just do this a few
36:09 - minutes ago and mess it all up let's map
36:12 - out a some of the things we need uh to
36:14 - program Frogger so I'm going to consider
36:16 - everything in the world of Frogger to be
36:17 - a rectangle so the frog is a rectangle
36:21 - the cars are are rectangles you know
36:22 - they might be a long rectangle if it's a
36:24 - truck or a actual Square you know the
36:26 - Frog's going to be a square the same
36:27 - thing the logs the lily pads
36:29 - everything's a rectangle because what I
36:32 - want to be you know in you know
36:33 - obviously could put my own image in
36:34 - there there could be a little animation
36:36 - I hope that's what you guys will do if
36:38 - you make a version of this after
36:39 - watching this video but the only thing
36:42 - that I need is to be able to know does
36:44 - the Frog intersect a car or does it
36:47 - intersect a log so I need rectangle
36:50 - rectangle
36:52 - intersection and it turns out after like
36:55 - a messing after getting a little
36:56 - confused and doing a little research
36:58 - there's a really nice way of doing that
36:59 - so um I could actually do something so
37:02 - if I have a rectangle and what I'm what
37:04 - I keeping track of is the left side the
37:07 - right side the top and the bottom and if
37:11 - I had this is R1 for example and if I
37:14 - have another one that's R2 that also has
37:17 - a left right A top and a bottom I could
37:19 - say something like well is the top of R2
37:22 - in between the top and bottom of R1 if
37:25 - it is and also like the left side sides
37:28 - but that's actually going to be a lot
37:29 - trickier than just what if instead of
37:31 - trying to determine if they're
37:32 - intersecting what if I just try to
37:34 - determine if they're not intersecting
37:36 - right so if they're not intersecting is
37:39 - a much easier thing to test because I
37:41 - know they're not intersecting if the
37:43 - left of rectangle 2 is greater than the
37:46 - right of rectangle one right that means
37:48 - a rectangle is somewhere over here no
37:50 - matter where it is vertically it can't
37:51 - be intersecting or if the right of
37:53 - rectangle 2 is less than the the left of
37:56 - rectangle one that is over here same
37:59 - thing for the top if it's above it if
38:00 - the um so same thing for the bottom if
38:02 - it's above it and the top if it's below
38:04 - it so if I can determine if it's not
38:06 - intersecting then not not intersecting
38:09 - is intersecting so let's go write that
38:11 - code really
38:14 - quickly um there's some music playing
38:16 - that you guys can't hear but I can hear
38:18 - it and it's not just in my head there's
38:19 - a room back here okay
38:22 - um so what I'm going to do this is a
38:25 - little bit silly and unnecessary because
38:28 - there is actually a Java class can you
38:31 - hear it now it's much louder there is
38:33 - actually a Java class uh called
38:35 - rectangle that I could make use of but I
38:38 - am going
38:39 - to just make my
38:43 - own and I'm going to give uh it a left a
38:48 - right a
38:51 - top and a bottom so I'm going to create
38:54 - a rectangle that has a left right A top
38:56 - and a bottom
38:59 - and when I make that rectangle I'm going
39:01 - to write a Constructor for this object
39:04 - where I can what I'm actually going to
39:07 - do is I'm going to allow the rectangle
39:09 - to be defined with an x a y and a width
39:13 - and a
39:14 - height and then left is the
39:17 - X right is the X plus the width uh top
39:22 - is the Y and bottom is the Y plus the
39:25 - height right so often let me save this
39:28 - as
39:29 - Frogger so often in
39:34 - programming wish you guys could hear the
39:36 - sounds that are coming I just not
39:37 - talking about them because it's just
39:38 - going to be weird for people who are
39:39 - watching this and can't hear them and
39:40 - you think I'm a crazy person with sounds
39:42 - in my head which would not be such an
39:44 - unreasonable thing for you to think if
39:46 - you've watched any of my videos but
39:47 - nonetheless I
39:49 - digress uh typically in Pro in a lot of
39:52 - computer Graphics environments if I'm
39:54 - going to define a rectangle that's going
39:56 - to appear on the screen I'm going to
39:57 - Define it with an x a y and a width and
39:59 - a height but here I want to actually
40:00 - keep track of the left the right the top
40:02 - and the bottom for this intersection
40:03 - test then what I'm going to do is I am
40:07 - going to write a function here called uh
40:10 - intersects and that
40:13 - function oh good people in the chat are
40:15 - telling me they can hear the sound I am
40:17 - not completely insane only just you know
40:21 - mildly uh Boolean intersect I want a
40:24 - function that returns
40:26 - true and and let me zoom out here and it
40:29 - receives another rectangle so I want a
40:32 - function that tests a particular
40:34 - rectangle against another rectangle
40:36 - whether or not they're intersecting so
40:39 - the big expression that I want is is I
40:41 - want to say if I know they're not
40:43 - intersecting if I say that this do left
40:46 - is greater than the other's right or
40:51 - right so I actually don't in Java I
40:53 - technically don't have to say this dot
40:54 - but you know come on if I have an
40:55 - opportunity to write this dot I'm to
40:57 - write this dot so I want to look at this
41:00 - rectangle's left versus the other
41:02 - rectangle's right or this rectangle's
41:05 - right and maybe I could just uh put a
41:07 - line break here uh is less
41:11 - than
41:13 - [Music]
41:15 - the is less than the other rectangle
41:17 - left or this rectangle's top is greater
41:22 - than the other
41:24 - rectangles bottom or
41:27 - this rectangle's bottom is less than the
41:32 - other rectangle's top so if I return the
41:37 - result of this Boolean expression if any
41:41 - one of these things is true right
41:49 - if if any one of these things is true
41:53 - right if this left is greater than that
41:55 - one's right or this right is is less
41:57 - than that one's left etc etc then I know
41:59 - they're not intersecting and the inverse
42:02 - of that would be if it would be they are
42:05 - intersecting so actually all I need to
42:07 - do now is say return the result of not
42:11 - that whole expression and this is a
42:13 - really fast operation to determine if
42:16 - two rectangles are
42:20 - intersecting time out for a
42:22 - second
42:25 - uh yeah ala
42:28 - says uh I think the Left Right top and
42:31 - bottom should be calculated on the Fly
42:33 - and keep the x y w and H for ease of
42:36 - manipulation I think that's true except
42:39 - one of the nice things that um this is a
42:42 - good
42:46 - point and what I could do actually is um
42:51 - I'll I'll come to that later if I need
42:53 - it one reason not to do that and this is
42:56 - I'm um um matcha this could be
42:59 - um this could be
43:02 - uh this could be sorry I'm
43:05 - think processing actually has a
43:07 - rectangle Mode called Corners which
43:09 - allows me to draw a rectangle based on
43:11 - the corners but you're right if I'm
43:13 - going to be using images and Sprites and
43:15 - other things so but I can always double
43:16 - back and add those as variables here I
43:18 - think there's a lot of um different ways
43:20 - I could work this out okay so the
43:24 - question is how
43:25 - far yeah and Mi SOI writes in the chat
43:29 - remember premature optimization is the
43:31 - root of all evil I I could not agree
43:33 - more uh and I would say should you port
43:36 - it in es6 or not Mi is asking how about
43:40 - both you're welcome to Port it in es6
43:42 - and I'll do the non6 port if you prefer
43:44 - but I definitely want to have a not es6
43:46 - Port that matches kind of my other
43:47 - examples I really should have both okay
43:52 - um okay let's see how we doing here I'm
43:56 - um
43:57 - I'm trying I'm just I'm keeping track of
43:59 - like Parts here I might want to do this
44:01 - in multiple Parts
44:04 - okay jendrick asks why don't you negate
44:08 - all the comparisons and change the ores
44:11 - to
44:11 - ANS I think I could do that this to me
44:15 - feels a little cleaner in terms of
44:17 - writing it and the way that I thought of
44:19 - it I mean it was it came from a
44:20 - suggestion from Alka uh which I think
44:22 - probably came from um I mean
44:25 - maybe I just on the comment seems like
44:27 - it came from somewhere else but
44:30 - um um it's for me it was easier to think
44:33 - of the whole test for if they're not
44:35 - overlapping and then just negate that
44:37 - whole test but you're right and again I
44:39 - haven't actually tested this code so I
44:40 - don't know if it's going to work
44:42 - okay all right
44:45 - so and um okay so I got to keep moving
44:49 - here so we're GNA make the Frog now I
44:53 - have an idea I have a crazy idea
44:57 - oh I'm
45:00 - excited okay so here we
45:03 - go all right so now I think it's time
45:06 - right we have our sketch what I
45:08 - ultimately want to start with is I want
45:09 - to be able to write some code like this
45:11 - frog F or frog frog and then I want to
45:15 - be able to say a size you I want to have
45:17 - a canvas that's like 640 by 480 and I
45:19 - want to be able to say frog equals new
45:20 - frog and I want to say things like frog.
45:24 - show and maybe frog. update something
45:27 - like
45:28 - this so I want to write the code in an
45:31 - objectoriented fashion where I can just
45:32 - create this frog object now
45:35 - interestingly I made this rectangle
45:37 - object just to keep track of the
45:38 - properties of a rectangle so there are a
45:41 - couple options here of things I could do
45:43 - I could make a new class right I want to
45:46 - make a frog object so to make a frog
45:49 - object I need to say class frog and then
45:52 - I need to uh you know have a Constructor
45:54 - function and I need to have a function
45:55 - that's like show and a function that's
45:59 - update so this is the skeleton of the
46:02 - Frog class the class being the template
46:05 - for making an object here I have the
46:08 - Frog object and now you can I have no
46:09 - errors in my code now there's nothing I
46:11 - didn't like write the actual information
46:13 - that needs to go into the Frog class but
46:16 - I have a question I have a
46:19 - question a frog is a
46:22 - rectangle so there's two approaches I
46:25 - can take here I'm very excited about
46:27 - this CU I haven't covered this in a lot
46:28 - of my videos I'm going to look at
46:29 - something called
46:31 - inheritance what I might have done
46:33 - previously in other videos to avoid
46:36 - talking about inheritance is I might
46:37 - have said ah a frog has a rectangle
46:41 - associated with it so the Frog keeps
46:44 - track part of its data is the rectangle
46:46 - which defines where it is and in some
46:48 - ways I kind of want to do that because I
46:49 - think there will be some Simplicity to
46:51 - that however something else I could do
46:54 - is I could say frog EX ends rectangle
46:58 - meaning
47:00 - meaning the frog is actually a rectangle
47:05 - and it the Frog itself has an intersect
47:08 - function I don't have to retype it the
47:10 - Frog inherits all of those properties
47:12 - Left Right top bottom the Frog inherits
47:15 - the intersect function and now I can add
47:18 - additional functionality to the frog and
47:20 - the reason why this is maybe will be so
47:22 - powerful is I'm going to say
47:24 - car Class Car extends
47:29 - rectangle to so the idea is that the
47:33 - rectangle is the foundation for all the
47:37 - other things that will be in the world
47:38 - but cars and frogs behave differently so
47:40 - they also need their own code so this is
47:43 - how it's going to work so let's comment
47:45 - out the car for a second and let's start
47:47 - working on the Frog now we do have an
47:48 - error here it's giving me this red
47:51 - squiggly line the red squiggly line of
47:53 - Doom Red squiggly line so let's at least
47:56 - look and see what is that error here and
47:58 - it's going to say oh boy we do not like
48:00 - this
48:02 - error I don't have my sound effect for
48:05 - this eror I'll just play this
48:08 - one implicit super Constructor Frogger
48:11 - do rectangle is undefined so one of the
48:15 - odd things about working with
48:17 - inheritance is I need to define the
48:21 - Constructor the way an object is made in
48:24 - a somewhat of a special way so the Frog
48:28 - I mean sorry the rectangle has a
48:29 - Constructor make a new rectangle what I
48:32 - want to say is that the Frog also gets a
48:37 - uh an x a y and a width and a height
48:43 - right that's how I want to define a frog
48:45 - but I need to figure out how when I
48:48 - Define a frog with those values do its
48:51 - inherited properties get set and the way
48:53 - that I could do that is with a keyword
48:55 - called super super XY wh and what this
48:58 - does is this says when I say new frog
49:02 - with an XY width and height then make
49:05 - sure you also call the super super being
49:09 - the parent the super classes Constructor
49:12 - function passing in those values so this
49:15 - initializes the inherited properties of
49:18 - frog okay so now I have a frog that has
49:21 - essentially a rectangle and I can also
49:23 - do this thing where you know what maybe
49:25 - it's going to be useful to me to
49:27 - actually keep track
49:30 - of the these properties here and I'm
49:32 - going to put little underscores
49:35 - here um just to like differentiate I
49:38 - know this is getting a little bit
49:39 - cryptic and I I have an allergic
49:42 - reaction to cryptic code and I really
49:43 - try to avoid it but let me just try to
49:46 - explain what's going on the Frog keeps
49:49 - track of an XY width and height there's
49:51 - some redundancy here the rectangle keeps
49:54 - track of the Left Right top and bottom
49:56 - um so all of those properties are all
49:59 - together and then
50:02 - um uh and then so I initialize the the
50:05 - the stuff that's inherited from the
50:06 - rectangle through the super function and
50:10 - then I'm and I think this is probably
50:12 - Overkill here and I I almost I regret
50:14 - doing this and I want to go back and not
50:16 - do
50:17 - this because I think I could get away
50:19 - with just the
50:21 - um I'm pausing for a
50:25 - second
50:27 - frog and car is XY size says Simon truck
50:31 - is XY with height that's a good
50:34 - point uh I could just keep it as a
50:36 - square only needs one
50:38 - property um people are talking about
50:40 - which text editor they prefer in the
50:42 - chat I'm trying to think if I I I kind
50:44 - through ala's comment do do I want do I
50:47 - kind of I feel like I went on a too much
50:49 - of a digression
50:51 - here and that it's actually going to be
50:53 - totally fine to just draw it using Left
50:55 - Right top bottom
50:57 - um please don't do that that is cringy
51:01 - this.x equals x yeah I should probably
51:03 - do it that way okay hold on I'm
51:07 - gonna I'm going to back up here this is
51:11 - one of these days where I just feel like
51:13 - sometimes I do these coding challenges
51:14 - and I want them to have no editing and
51:16 - then other days I I kind of uh just go
51:19 - off the editing deep end today is an
51:20 - editing deep end day okay so somewhere I
51:24 - stopped before I started going on adding
51:26 - the X and Y I think I explained what
51:28 - super
51:32 - does Roman loo says don't use
51:34 - inheritance it's a bad idea most of the
51:37 - time including this yeah I gotta got
51:40 - excited about it I could have just put
51:42 - the rectangle in the object let's I'm
51:43 - going to keep it we're gonna the super
51:46 - thing made me want to like stop and
51:47 - crawl into a hole um but you know I'm
51:50 - I'm why
51:54 - not I'm going to keep going ah look and
51:58 - then somebody says inheritance makes the
51:59 - code beautiful so we're just trying a
52:02 - lot of different things but I'm not
52:03 - going to add the Redundant variables it
52:05 - kind of was making things a bit of a
52:06 - mess I don't actually need them um uh at
52:10 - the moment so
52:12 - okay so Mata for if you're able to
52:16 - follow this somehow I'm GNA edit point
52:19 - from where I explained what super does
52:22 - and now I'm just going to add the show
52:23 - function
52:25 - okay so now that I've written the Frog
52:28 - Constructor which essentially just calls
52:31 - the parent Constructor the super
52:33 - Constructor in
52:35 - rectangle I can now give it let's have
52:37 - the Frog start somewhere arbitrary 100
52:40 - or 100 um 50 and you know what the frog
52:43 - is a square so let's do one little goofy
52:46 - thing here which is the frog is never
52:49 - not going to be a square so I can just
52:50 - reuse that I can just show you a little
52:52 - trick here the Frog only needs three
52:54 - variables and then when it makes the
52:55 - rectangle it uses that with for both the
52:57 - width and the height there a little
52:59 - optimization there for no real good
53:01 - reason and then I'm going to get rid of
53:02 - this uh update function I'm going to say
53:04 - background 50 background zero let's just
53:07 - make it black um and then frog. show so
53:10 - I want to see that
53:13 - frog uh so I'm going to write a function
53:16 - now that says a Phill 255 a rectangle
53:20 - Left Right top
53:25 - bottom left
53:27 - right no no no no no left top right
53:32 - bottom right I want to draw there's a
53:34 - way that I can draw a rectangle and I
53:36 - haven't actually done it yet by
53:37 - referencing this point which is left
53:40 - comma top and this point here which is
53:43 - right comma bottom left comma top right
53:46 - comma
53:47 - bottom and processing will do that for
53:50 - me if I say wct mode Corners so this is
53:56 - a particular way to define a rectangle
53:58 - by its corners and since those are the
54:04 - properties that music is coming from
54:06 - me I clicked something by accident boy I
54:09 - hope I don't get a copyright violation
54:11 - on this video hope to edit that out that
54:14 - let's let's edit that out
54:16 - actually oh it's still
54:20 - playing I had some Mozart that I was
54:22 - using that was royaltyfree I thought but
54:25 - okay
54:27 - uh let me go back
54:32 - here the Left Right top and bottom come
54:36 - from the rectangle okay so now I should
54:38 - be able to run this and there it is
54:41 - guess what you've watched a video now
54:44 - for inert number of minutes so far here
54:47 - and what did I do I programmed a
54:50 - square a white square on a black
54:53 - background so in a way I'm kind of
54:55 - disappointed with the way that I'm doing
54:57 - this but hopefully you know because I
55:00 - spent all this time setting up all this
55:01 - structure and all I've got is a square
55:03 - on the screen but hopefully this is
55:04 - going to give us the foundation to
55:06 - really start getting the game going so
55:08 - let's try to move a bit more quickly now
55:10 - let's let's start the
55:15 - oh since the camera went
55:23 - off
55:25 - okay um
55:35 - so let's try to move a bit more quickly
55:37 - here and let's start moving that frog so
55:41 - I think okay so here's the thing if I go
55:43 - back to that gameplay
55:45 - video uh which uh is
55:50 - here where's the
55:52 - Frog come on frog where are you frog FR
55:59 - frog oh there's the Frog you could see
56:02 - the Frog always moves a distinct amount
56:06 - of space with each movement and it looks
56:08 - like the frog is actually moving
56:11 - essentially based on a grid which is
56:13 - about the size of the Frog itself um
56:16 - there's some Nuance to that but uh so
56:19 - what I want to do here is create a
56:21 - function I'll call it
56:24 - move and the will move by some
56:28 - amount or maybe a Direction so let's
56:32 - have a global variable which I think um
56:35 - I'm going call it grid so let's think
56:37 - again I'm going to be very fast and
56:39 - loose with this idea of a grid some
56:41 - games operate entirely fixed and locked
56:44 - to a grid system like Tetris for example
56:46 - I'm going to kind of just sort of think
56:47 - about this Grid in a loose informal way
56:50 - and use it when convenient and not use
56:51 - it when when inconvenient but let's just
56:54 - say the Frog right the Frog's size was
56:58 - 5050 so let's also right now have the
57:00 - grid be 50 and I'm going to say the Frog
57:03 - size is the grid like minus four so I'm
57:06 - going to kind of think of just this idea
57:08 - of there being a grid over the uh
57:13 - window over the whole window and um but
57:18 - the Frog kind of being a little bit
57:19 - smaller than that actual grid and ah
57:21 - there's going to be like centering
57:23 - issues forget it I'm going to be I'm
57:25 - going to keep things really simple I'm
57:26 - just going to have the Frog be the exact
57:29 - same size as the grid you know
57:31 - eventually someday if you were to use
57:32 - like a Sprite or an image you could
57:33 - actually just have some transparent U um
57:37 - uh kind of like buffer border that that
57:39 - keeps it a little bit smaller I'm G I'm
57:40 - going I'm going to keep things simple
57:41 - here so we're GNA have the Frog be the
57:43 - same size as the grid and so the Frog
57:46 - when it moves a given Direction which we
57:49 - could say a given X Direction and a
57:51 - given y direction it can only it can't
57:54 - move diagonally but let's just write it
57:56 - this way we're going to say X plus
57:59 - equals oh no left there is no X right
58:05 - I've defined this frog entirely by its
58:08 - rectangle which is the left and uh the
58:11 - left and right and top and bottom now
58:12 - maybe I want to have some redundant
58:14 - variables to keep track of its X Y maybe
58:16 - want it Center oh there's so much I
58:18 - could do here but let's just let's just
58:20 - keep going let's just fast and loose
58:23 - left plus X
58:25 - Direction and then top plus y direction
58:29 - okay so that's when I want to move it
58:31 - now I want to move it when I press the
58:33 - arrow keys so I'm going to write a
58:35 - function Global event called key press
58:37 - this is part of
58:39 - processing and I can
58:42 - say uh uh if the key is
58:45 - coded um right isn't it no hold on time
58:51 - out uh time out I need to look at the
58:53 - processing
58:55 - reference
58:57 - uh
58:58 - reference uh key
59:02 - code oh if key equals coded um yeah I
59:06 - don't know if I actually really need
59:07 - that because I could just check the key
59:09 - code because that's all I'm going to use
59:11 - is the arrow
59:12 - keys so let's go back
59:16 - okay I'm going to say if the key code
59:19 - equals up and this is all built into
59:21 - processing else and I could use a switch
59:23 - statement here I know everyone in the
59:25 - comments this switch statement but I
59:27 - started writing an if statement I I just
59:29 - never remember the Syntax for those
59:30 - switch
59:31 - statements so I want to just check all
59:34 - four
59:38 - possibilities up down right left so I
59:42 - want I want the Frog to move if it's
59:45 - moving up I want it to move 0 comma
59:48 - netive one if it's moving down 0 comma
59:53 - one if it's moving to the right
60:56 - but if we go back to the code here what
60:58 - am I doing when I move the
61:03 - left when I
61:04 - move let's say I move the right or I
61:07 - move the top if I move the top up right
61:09 - this is the rectangle and I move the top
61:11 - up it comes up here now my rectangle
61:13 - looks like this I'm like growing and
61:15 - pulling and I'm not actually moving the
61:17 - whole thing so I think what I probably
61:19 - want to do in this case is actually keep
61:21 - track of the center of the rectangle and
61:24 - its width and height separately um and
61:27 - move and then calculate the Left Right
61:29 - top bottom on the Fly I'm going to need
61:31 - to do
61:33 - that okay so let's figure out how to do
61:35 - that so in the
61:37 - Frog what I'm going to do is I'm going
61:39 - to create a separate set of
61:42 - variables X Y and W and I'm going to uh
61:47 - initialize those with a this Dot and a
61:50 - this dot so I'm going to keep those
61:52 - separate from the
61:54 - rectangle
61:57 - oh this is bad I probably should put
61:58 - those in the rectangle oh I don't know
62:00 - what I'm doing uh and then when I when
62:03 - it
62:04 - moves the X moves the Y moves now you
62:08 - might be asking why did I use this dot
62:10 - here so I have this thing where I have
62:13 - the arguments coming in oh Java oh Java
62:17 - and programming we should just all quit
62:19 - now go do something else but what what I
62:23 - have is I have the Constructor argument
62:26 - and those are sort of temporary local
62:28 - variables to the Constructor and I need
62:30 - to differentiate those from the actual
62:32 - variables that are tied to the Frog
62:33 - object itself which are the uh so I want
62:36 - to if I want to specify those I'm going
62:37 - to say this Dot and these uh um the the
62:40 - X these are just the constructure
62:42 - arguments okay um so what I want is to
62:45 - change but down here there's no
62:46 - confusion so I'm going to leave out that
62:47 - this dot this is probably a terrible
62:49 - idea for a variety Reasons I'm sure I
62:50 - will hear from all of you but that's
62:51 - what I'm going to do right now okay so
62:53 - then I'm going to draw it I'm going to
62:56 - actually
62:57 - say uh I'm going to say rect
63:02 - mode uh I'm I'm going to just leave the
63:04 - default Rec mode and I'm going to say uh
63:08 - X Y with with okay so now if I do this
63:14 - we're at least moving the Frog correctly
63:16 - now I fix the moving of the
63:20 - Frog someone in the chat wrote this is
63:22 - going to be pong all over again I'm
63:24 - going to do this in multiple parts
63:26 - though I fixed the moving of the
63:28 - Frog
63:31 - but the rectangle is not in the right
63:33 - place anymore so what I could actually
63:35 - do just for debugging purposes I'm going
63:37 - to say wct mode uh
63:40 - Corner sorry wct mode
63:44 - Corner wct mode
63:48 - Corners left right uh left top right
63:54 - bottom I'm going to show you what I
63:56 - right so now if I do this you'll see the
63:59 - rectangle data is not moving but the XY
64:03 - is moving so what I want to do this so
64:06 - convoluted the way that I've created
64:08 - this refactoring later maybe I'll do a
64:10 - whole video that's just refactoring this
64:12 - Frogger thing you'll you'll enjoy that
64:15 - it's coming it's coming eventually uh
64:18 - Left Right top bottom okay uh I don't
64:20 - need that anymore what I want to do now
64:23 - is where when I move it I should say
64:27 - update update um XY W uh update update
64:34 - based on uh XY
64:36 - ww okay so I'm writing a function called
64:40 - update which I will put in the rectangle
64:46 - function which really
64:51 - just does exactly what the Constructor
64:53 - does and I'm actually going to now just
64:56 - in the Constructor change this to this
65:01 - so in other words the rectangle has a
65:03 - way of always updating the Left Right
65:06 - top bottom which I need only for the
65:08 - intersect function and it will do that
65:10 - whenever the X and Y uh changes um so
65:15 - okay so this now if I run this we should
65:19 - see they're both in the same
65:22 - place
65:24 - pause super calls yeah um so you know
65:29 - I'm I'm kind of regretting a little bit
65:31 - my sort of like inheritance idea because
65:33 - I don't know if it's making it more
65:35 - convoluted than not but you know we
65:38 - might get the benefits of this later
65:41 - make this dotp less than this.bottom I'm
65:44 - I'm just sort of seeing in the chat that
65:46 - people are
65:47 - lost
65:49 - um
65:51 - oh I could have just moved the left the
65:54 - right and the top and the bottom
65:59 - yeah maybe I should go
66:02 - back cuz that made it kind of convoluted
66:04 - right maybe I should just fix my move
66:07 - function by moving the Left Right the
66:10 - left and the right and the top and the
66:12 - bottom but I'm going have to do that
66:13 - with
66:16 - everything I I totally want to start
66:18 - this over
66:19 - again cuz I made it in such a convoluted
66:22 - way where it's really just so simple
66:24 - like all I needed to do do was in the
66:27 - was in this intersect function just
66:29 - calculate the left and the right
66:32 - dynamically and just always have the
66:33 - rectangle be an X and Y and a width and
66:36 - a
66:42 - height anybody I there's no way to know
66:45 - because I've gone off the deepend with
66:47 - like stopping and starting I'm wondering
66:48 - how long this is so far and maybe when
66:50 - it gets edited down it wouldn't seem so
66:52 - crazy start over dude oh people in the
66:54 - chat are telling me they want me to
66:56 - start
67:00 - over all right I'm going to go
67:03 - back
67:05 - to I have an idea I'm not going to
67:08 - totally start over as much as I would
67:10 - like to but I'm going to go back to this
67:14 - update thing was kind of
67:24 - crazy
67:26 - I'm going to go
67:30 - back to the
67:33 - part where I
67:45 - moved everything will be okay everything
67:48 - will be okay I have to pee now also
67:51 - might have to take a break cuz I think I
67:53 - got very anxious here
67:56 - okay
67:59 - um let me go back I want to go back to
68:02 - this
68:10 - part this is pong all over again but
68:12 - this will be
68:15 - edited so this is the
68:21 - part
68:24 - where why am I not seeing the
68:27 - Frog um this is the part wck mode
68:30 - Corners Left Right top
68:33 - bottom
68:35 - um Left Right top
68:39 - bottom
68:42 - what what am I missing here why am I not
68:44 - what did I get wrong here where's the
68:47 - Frog it should be at 100 100 I just went
68:50 - back
68:53 - to JavaScript might be
68:57 - better oh the straw pole the fidget I
68:59 - just quit do the fidget spinner now
69:01 - thank you very
69:03 - much um oh things take so long I'm
69:08 - terrible at this have you guys noticed
69:10 - how terrible at this I am uh left right
69:14 - oh left
69:17 - top right bottom thank you thank you
69:21 - brain okay I think maybe that class
69:24 - ended behind me if it's not convoluted
69:26 - it's not Java yeah start over we'll wait
69:33 - okay okay um yes I have been doing
69:37 - Frogger since the stream stream started
69:40 - okay um okay so I'm going back to here
69:45 - and what I'm going to do I'm going to be
69:47 - at the I'm going to be at the problem
69:49 - I'm going to take a
69:52 - break I'm gonna I'm going to put on um
69:55 - some waiting music I'm going to take a
69:58 - one minute
69:59 - break because I also forgot to refill my
70:02 - water bottle and this is now
70:05 - finished and then I will be
70:08 - back and we will finish this we will
70:12 - finish this oh my
70:15 - God time for a dab okay I am now
70:18 - pressing this button where I will mute
70:24 - myself
70:25 - [Music]
70:50 - [Music]
71:06 - [Music]
71:54 - e
71:56 - [Music]
72:06 - [Music]
72:12 - okay I am
72:14 - back I have some water I know what the
72:18 - problem
72:18 - is not staying
72:21 - hydrated also I feel like this is a
72:23 - little bit low and my neck is hurting
72:25 - cuz I'm like hunched over
72:30 - okay This brilliant idea to use
72:33 - inheritance which now seems so
72:36 - unnecessary okay
72:39 - oh um let's go now
72:44 - okay I think people are trolling me in
72:47 - the
72:50 - chat uh okay keep the music on okay here
72:53 - we go
72:59 - I forgot what I wanted to do okay here
73:01 - we
73:04 - go so I'm going to go from where this
73:08 - gets messed
73:10 - up oh okay so what's going on here so
73:14 - obviously oh
73:16 - I did something very silly which is that
73:19 - I'm only moving the left and so I'm only
73:21 - moving the top so if the top moves up
73:25 - the top moves down then I'm just growing
73:27 - or shrinking the
73:28 - rectangle so this is a problem and I
73:31 - could get around this by saying like oh
73:33 - let me move both the left and the right
73:36 - and the top and the bottom but I think
73:37 - what I'm realizing is it's just going to
73:39 - be better for everybody involved and for
73:41 - the future of this game of
73:43 - Frogger um for me to just actually
73:47 - consider the rectangle itself to have uh
73:51 - an x a y a width and a height
73:55 - and
73:57 - then when it comes time to test for
74:02 - intersection that's where I can just
74:04 - calculate these values on the
74:08 - Fly and so I need to do that for this
74:11 - particular rectangle and then for the
74:14 - other I'll call it o right o o right o o
74:19 - Top O bottom which would be other
74:23 - dox so so what I'm doing is and again
74:26 - I'm sure this could be optimized in some
74:28 - way but if the rectangle itself keeps
74:31 - track of an X and Y in width and height
74:33 - then I can very quickly just calculate
74:34 - the Left Right top and bottom of one
74:36 - rectangle the Left Right top and bottom
74:38 - of the other rectangle and
74:40 - then I can test those so I'm doing a
74:44 - little
74:46 - refactoring and I'm sure I'll come up
74:49 - with a reason why this was a terrible
74:50 - idea sometime
74:52 - later but for now
74:55 - I can rewrite this code like this so
74:58 - this is exactly the same but the
75:00 - rectangle is keeping track of XY with
75:02 - now I have a little bit of an issue here
75:05 - which is that I made the arguments here
75:07 - to the Constructor XY with height and so
75:11 - honestly what I what I need to do to
75:14 - different I'm I'm going to say this do X
75:16 - this doy this do uh oh this do W is W
75:22 - this doy is y and this H is H and this
75:27 - is because in Java um if I have
75:31 - variables with the same name and the
75:33 - temporary param arguments to this
75:35 - Constructor the parameters are x y y and
75:39 - H and I want to use those to set the
75:41 - rectangle objects actual XY w x y w and
75:45 - H then that's where I want to use the
75:46 - this dot here to differentiate them and
75:48 - I don't have to down here because
75:50 - there's no confusion so if I don't say
75:52 - this dot it is this dot but I could if I
75:54 - wanted to add the this dot here okay the
75:56 - this dot the this dot I'm always talking
75:58 - about the this dot okay now everything's
76:01 - good I don't have to Define it by I can
76:04 - just Define it by X Y and W and then I
76:07 - can just move the X and the Y so now my
76:11 - frog is just so much simpler the
76:14 - rectangle can have all the gobbledygook
76:16 - about the how the rectangle is being
76:17 - considered but the Frog just has an X
76:20 - and A Y which I move and now there we go
76:24 - I am moving the Frog around the
76:30 - [Music]
76:35 - screen um okay he went away when you
76:40 - left H okay what eight
76:43 - hours all right okay so now oh right
76:47 - that's a good variable name okay so
76:49 - here's the thing do I dare now go on to
76:52 - part I think this might be part one I
76:55 - think the whole part one was just
76:56 - programming the
76:58 - Frog so I'm going to start the Frog at
77:00 - the
77:04 - bottom okay so intersect has an error
77:09 - all
77:11 - right oh
77:13 - yes oh that's why everyone's saying oh
77:16 - right not just because that sounds funny
77:17 - oh right all right I'll come back to
77:22 - that okay so I think that this is going
77:25 - to be the end of part one of programming
77:28 - Frogger I in the chat that's going on
77:30 - live right now I have now been told that
77:32 - I have an error in the rectangle which I
77:34 - forgot to say oh right I just said right
77:38 - where this should be oh right um and
77:42 - then the other thing that I want to add
77:43 - to this is that I want the Frog to start
77:46 - at the bottom center don't worry I'm not
77:49 - leaving there's going to be another
77:50 - video after this I'm just Ed I'm just
77:52 - differentiating them so I am going to
77:55 - have the Frog start at width /
78:00 - 2 minus grid divided by two that's the
78:04 - center minus half the grid that's a
78:07 - little bit no well well and then I'm
78:09 - going to say height minus no no no I
78:12 - just want to say width divided two minus
78:14 - grid and height minus grid I want to put
78:17 - it right there I guess I in the center
78:20 - so that should be grid divided by two
78:22 - right yeah so I want it to be there so
78:25 - now that I can start playing
78:28 - Frogger my screen is not divisible by
78:31 - 50 so let's fix that let's use uh let's
78:36 - make this I don't know it maybe it
78:38 - should just be a square for Simplicity
78:39 - 500 by
78:41 - 500 there we go so now hey I won Frogger
78:45 - yay okay so that's the end of part one
78:48 - in the next video I'm going to add the
78:50 - cars going by once we and that's going
78:53 - to be part two and then eventually part
78:54 - part three I'm going to add the logs and
78:56 - the turtles so see you in part
78:59 - two
79:03 - um so um the reason why I'm doing this
79:08 - I'm not going I mean I have another 40
79:10 - I'm going to be here for another 40
79:12 - minutes I might just stay till a little
79:14 - I'm going to be here for another
79:16 - hour um and what I'm going to do is
79:23 - um I'm not leaving I just want to have
79:26 - these um divided into parts so that
79:28 - there're shorter videos that people
79:29 - could watch um and maybe this will
79:32 - actually only be like 20 minutes even
79:33 - though it took me an hour because I kept
79:35 - stopping and
79:40 - starting
79:42 - okay um now I'm going to get and do part
79:46 - two I have a
79:49 - headache I
79:50 - don't I don't want to be here doing this
79:53 - this is terrifying
79:55 - okay um so let me think about this
79:57 - before we get
80:00 - going each kind of car has a different
80:03 - speed has a different
80:06 - row so maybe what I should start first
80:09 - by doing is just have one
80:12 - car and then car should get assigned a
80:18 - row then I could have one car per row
80:21 - and then I eventually could have
80:22 - multiple cars per row and the spacing is
80:24 - probably somewhat random and as they get
80:26 - to the end they just come back to the
80:28 - beginning okay
80:32 - okay I know I'm like for some reason I
80:35 - have so much trouble with these little
80:36 - simple games and yet I'll be like I'll
80:37 - just do that neural network programming
80:39 - thing okay here we
80:41 - go so we're going to be now in part two
80:44 - stay hydrated for part two get some
80:47 - energy I never I should I I I don't know
80:49 - about doing these live sessions before I
80:51 - have lunch I needed to eat a bigger
80:52 - breakfast clearly I didn't have my
80:53 - weedies
80:56 - [Music]
81:00 - all
81:01 - right I might not be getting to that
81:04 - follow-up perceptron video today but
81:06 - okay here we
81:09 - go hello welcome to part two of Frogger
81:13 - so what I made so far in part one if you
81:16 - can believe it I don't know it's all I
81:18 - got so far was a rectangle that I can
81:21 - move around the screen by pressing the
81:23 - arrow keys and now what I want to do is
81:27 - add some cars so I want to add the cars
81:30 - that are moving across um where which I
81:33 - have to avoid so what I want to do is
81:35 - first I already have a car Tab and
81:37 - hopefully I'm hoping boy am I hoping
81:40 - that all the work we did to figure out
81:42 - this rectangle thing and this frog thing
81:44 - will pay off when it comes time to
81:46 - program the car and it's going to be
81:48 - really simple so let's just first do one
81:51 - car eventually I'm going to need an
81:53 - array I'm going to have multiple cars
81:55 - but let's just have one car and I'm
81:57 - going to say car equals new car and I'm
81:59 - going to put the car at zero it's going
82:01 - to start at zero and it's going to be
82:04 - it's Y is going to be height minus grid
82:07 - * 2 and its size is also just going to
82:10 - be GD now the car and the truck could
82:13 - have a variable so and I'm going to I'm
82:15 - going to make it uh
82:17 - a so what did I miss here car so I'm
82:20 - going to have the car I'm working this
82:23 - up
82:25 - I'm just going to stay here so I'm gon
82:27 - to have the car be start at I'm going to
82:29 - comment this out for a
82:31 - second
82:36 - ah oh edit this part out I screwed up
82:40 - again um I was going to just use
82:44 - the ah never
82:46 - mind I can describe
82:51 - this this is having the car start at the
82:54 - bottom uh two row two rows up from the
82:57 - bottom and having its width be the side
82:59 - of the grid and its height being two no
83:02 - I want it's width if it's a truck it's
83:03 - going to be longer so I'm going to have
83:04 - it be a little bit wider just to try
83:06 - that out and its height be just the grid
83:09 - then I'm going to say uh car. show and
83:14 - let's just see if we can see the car now
83:16 - the car is not showing H what
83:21 - if what if I dare have the car car no
83:25 - this is a bad idea cuz ultimately on
83:28 - some level probably going to be drawing
83:30 - the cars in different ways let's just
83:32 - have the car extend I was thinking about
83:34 - having the car extend frog and I would
83:37 - inherit the show function but I'm
83:38 - actually just going to leave that here
83:41 - and I'm going to make the car like a
83:43 - slightly different color just for right
83:46 - now uh and I'm going to I need to have
83:48 - the same exact Constructor
83:51 - basically uh except I'm going to include
83:54 - a a height and so this now is the car so
83:57 - if I run this we should see okay what
84:00 - happened here ah whoops with height
84:03 - there we
84:05 - go uh what did I get wrong super XY with
84:10 - height uh something is wrong I got to
84:12 - debug
84:16 - this that's what I was expecting to see
84:18 - but I want to see it wider
84:21 - so what I want it to be is grid time two
84:26 - this
84:27 - value goes here which goes ah whoops
84:32 - just the way that I'm drawing it there
84:33 - we go that was just a little bug and now
84:35 - there we go so there is the truck there
84:39 - is the truck or the
84:41 - car and um okay so uh now we've got that
84:46 - now what I need is for the car to have
84:49 - maybe an update function and the car
84:51 - should also have its own variable called
84:55 - speed so let's just set the speed equal
84:58 - to two so this is one of the wonderful
85:00 - things about inheritance is I can
85:02 - inherit all the properties from
85:03 - rectangle and then add my own so the car
85:06 - is also going to have a speed and then
85:09 - speed is going to say xal X Plus update
85:12 - is going to say xal X plus speed so I'm
85:15 - going to say camera shuts
85:23 - off
85:25 - so I'm going to say uh car
85:28 - update and now we have the car moving
85:32 - yay and I can go past it as it moves by
85:34 - now when the car goes off I probably
85:38 - want it to
85:39 - reenter so what I Pro in update I'm
85:42 - going to say if x is greater than
85:45 - wi then x equals negative height never
85:50 - negative width so I want it to start off
85:52 - the screen and re-enter so what I mean
85:54 - by this is when the car's X which is its
85:57 - left side gets past the right side then
85:59 - it should reemerge on the other side and
86:01 - I might want to you know maybe have that
86:04 - be more of a delay or something so I
86:06 - could like you know maybe if it's you
86:09 - know further off the screen I could use
86:11 - W uh I could actually probably let me
86:13 - just use the grid size which is
86:16 - probably
86:18 - um oh but that I definitely want to do
86:21 - uh negative w u you know negative W
86:24 - minus grid there's just so many ways I
86:27 - could do this but I just want it to have
86:29 - a little bit of buffer so it's got to go
86:30 - more than just with and then it reenters
86:33 - so you can see now I've got look at this
86:36 - we're moving along now we've got the car
86:38 - moving so what do I need I need to have
86:40 - multiple cars okay so let's just think I
86:44 - could use an array list which allows me
86:47 - to have a flexible amount of cars but I
86:49 - for Simplicity I think I'm just going to
86:50 - have a fixed amount so I'm going to say
86:53 - car equals car car
86:55 - s cars index zero is that new car and
86:59 - cars index zero show and cars index zero
87:03 - update I want to make sure that just
87:05 - works what did I get wrong uh I didn't
87:07 - initialize the array cars equals new car
87:11 - with you know 100 cars so let's say
87:14 - there's well there's not going to be
87:14 - let's just let's go look at Frogger for
87:17 - a
87:17 - second what's a reasonable number of
87:20 - cars so you can see there's 1 two 3 1
87:22 - two 3 1 two 3 1 1 2 there's some
87:25 - configuration but that's 3 6 9 10 11 12
87:29 - 13 13 what a lovely number let's have oh
87:32 - uh no no that's actually 12 but whatever
87:35 - let's just have 10 10's a nice round
87:37 - number right now there's only one car
87:41 - okay now what I need to do is okay so
87:44 - how many um how many rows of cars let's
87:47 - say I have 10 cars and I have five rows
87:52 - that would give me two cars per row
87:55 - I mean this is sort of all arbitrary
87:57 - making this up but let's let's think
88:00 - about how many rows there
88:01 - are so I'm going to say for in I equals
88:07 - z i is less than let's just say there
88:09 - are going to be three rows for right now
88:15 - i++ so I'm going to say row equals
88:18 - zero row is less than three row Plus+ I
88:23 - almost kind of want to maybe I should do
88:24 - this much more manually let's do this
88:26 - let's configure this manually let's just
88:29 - say I'm going to do
88:31 - um let's keep track of an index which is
88:35 - zero then this is going to be the first
88:38 - row I'm going to put three cars in the
88:41 - first
88:44 - row so the three cars they're they need
88:48 - a starting X location uh x uh
88:53 - equals uh I * 100 + 50 so what I want to
88:59 - do is arbitrarily space them
89:04 - out and let's just say those are there's
89:06 - only going to be three cars right now
89:09 - there's only going to be three
89:11 - cars you'll see where I'm going in a
89:13 - second so I'm going
89:17 - to and you know what I can actually I
89:19 - forget I can use this enhanced Loop
89:21 - which is like a 4 each Loop for every
89:23 - car car in
89:27 - Cars car car show car update so this is
89:31 - a nice way I could say well whatever
89:33 - amount of cars there are show and update
89:35 - all of them okay so now what I should
89:38 - have
89:41 - here is three now you can see I didn't
89:43 - do a very good job of spacing them out
89:46 - so let's space them out more I *
89:51 - 200 uh I don't know why I have this Plus
89:54 - 50 there I'll just take that out right
89:56 - so now we can see there are there's the
89:59 - bottom row right so I can now that looks
90:02 - like really hard it's probably too hard
90:05 - so let's just have uh two cars in this
90:08 - row and space them out by 300 pixels uh
90:12 - and um I just need to match that I only
90:14 - have two so far there we go so we can
90:19 - see that's one
90:21 - row yay yay this is working I got
90:25 - distracted by my own game so let's now
90:28 - new so I'm going to to put a comment
90:29 - here oh and the whole point of this is I
90:31 - wanted to do index I want to keep track
90:33 - of the index boy an array list might be
90:36 - easier here because what I'm going to do
90:38 - this is Row one I'm doing this and again
90:41 - this could be optimized I could do this
90:43 - less manually I'm going to do row
90:46 - two which is now uh I'm I'm going to
90:50 - also add two cars to Road two so now I
90:53 - have a total of four cars let me move
90:55 - this down
90:56 - here and for row two I'm going to add
91:01 - those cars height minus grid times 3
91:05 - right because I need to go up another
91:06 - row I want to make these just square and
91:10 - they are separated by uh 200 pixels uh
91:14 - and let's take a look at
91:16 - this now I probably want to offset that
91:19 - by some amount so they look and again
91:21 - this could be random and they're oh
91:23 - they're moving at the same speed so each
91:25 - row should also get a different speed
91:28 - and and rodc in the chat is making a
91:30 - really
91:31 - great point which is I should make an
91:34 - object which is just like a row or a Car
91:37 - Lane object and it can keep track of its
91:39 - own cars and its position and speed I'm
91:41 - going to say that's like a refactoring
91:43 - thing that I'm going to suggest maybe
91:44 - people do as a exercise for after it
91:47 - because I'm going to keep things kind of
91:48 - simple here but that is a really great
91:49 - suggestion so one thing that I want to
91:51 - do is give these a speed so let's say
91:53 - for also I'm going to add a fourth
91:55 - argument here so this has a speed of two
91:58 - and this is going to have a speed of
92:00 - 3.5 uh and so now the car should also
92:04 - get a fourth argument called speed s the
92:09 - car Constructor should get a fifth
92:10 - argument so I'm going to want to be
92:11 - initialized so now also these cars which
92:15 - are all in row one have this particular
92:18 - speed and these cars which are all in
92:19 - row two have a different speed okay
92:21 - let's run this now and there we go we
92:24 - can see this looks a bit more like
92:25 - Frogger let's
92:28 - see
92:31 - right whether this is difficult or easy
92:34 - I'm not sure let's add one more
92:38 - row row
92:41 - three let's put in uh four
92:46 - cars they're going to be their height is
92:49 - going to be one more spot on the grid up
92:52 - and their speed
92:54 - is going to be uh really
92:59 - slow but um they are not spaced out by
93:04 - as
93:05 - much I'm just picking some random
93:07 - numbers this is Row
93:09 - three and what did I mess up uh so I
93:12 - have 2 + 2 + 4 is eight cars
93:18 - total there we go so now I have again
93:22 - now I have a whole bunch of cars and
93:24 - that you know again I could also have
93:26 - them each have an image associated with
93:28 - them it's their own animation but is
93:29 - this playable that's the
93:32 - question yeah that looks like I made it
93:35 - but have I actually you know so we've
93:38 - got a row of cars I'm going to just keep
93:40 - three but what I need to do I've got one
93:42 - more feature I've got to add to this
93:44 - part which is that I need to check that
93:46 - intersection thing but guess what I
93:48 - don't know why I spent the part one of
93:51 - this video's tutorial series on making
93:53 - frog or doing the intersection cuz I
93:54 - could have just waited now but thank
93:56 - goodness we did that because I have this
93:58 - function already so what I want to do is
94:01 - now say
94:03 - here if car
94:06 - intersects
94:08 - frog or maybe I want to say frog
94:10 - intersects car it doesn't matter frog
94:13 - and car both extend rectangle rectangle
94:17 - has in itself this convoluted but it
94:20 - works we don't know that it works I
94:22 - never tested it intersects function
94:24 - so now I could say if they intersect
94:27 - then let me do something like um let me
94:30 - just print let me just do a print
94:32 - line you know game over or
94:37 - something so now we should see if I look
94:40 - down here in the console
94:43 - oh is it doing it when uh I wonder if
94:49 - there because of yeah it's actually
94:51 - intersecting so I've got a little bit of
94:52 - a problem
94:54 - which is that it considers them when
94:57 - they're right next to each other
94:58 - intersecting so I think I maybe need to
95:01 - space out these Lanes a little
95:05 - bit uh which way I you know to give them
95:09 - a little bit of buffer let's do that I'm
95:11 - trying to think of which would be the
95:12 - best way to do that here I've kind of
95:14 - got such a ridiculous way so let's um
95:18 - add so let's um I I need to say uh row
95:23 - is is
95:25 - two so minus grid time actually one way
95:30 - that I can do it let's just do it this
95:32 - way as I'm just going to add a little
95:34 - bit of
95:35 - buffer two pixel buffer to grid this boy
95:40 - I'm really this really needs some
95:41 - serious refracturing but there we go you
95:44 - can see now there's a little bit of
95:46 - there's a bit little bit of daylight in
95:48 - daylight in there so I shouldn't be
95:50 - getting I don't see game over here I've
95:52 - got a little bit of daylight so now I
95:54 - can
95:55 - move ah game over oh look at this oh but
95:58 - I messed up the whole point of the grid
96:00 - thing now my frog is Off the
96:02 - Grid okay so oh
96:08 - oh time out for a second uh what do I
96:12 - what do I what do I want to do here
96:14 - change the intersection code to less
96:17 - than or equal great suggestion so what
96:20 - I'm going to do forget about that I let
96:22 - let me go back let me back that was a
96:24 - that was a bad
96:26 - digression let me undo
96:28 - this that's a much better idea I mean
96:31 - visually I'd love it to have that
96:32 - daylight there that's why I was doing
96:34 - that because I think it looks a little
96:37 - nicer so let me go back to running this
96:40 - I don't know you can really go as far
96:41 - back as you can Mata so we have a
96:44 - problem here which as you can see I see
96:46 - the game over already which is that it's
96:48 - actually intersecting when they're right
96:50 - on top when it's when they're right next
96:53 - to each other and that's because I
96:55 - because in my intersect function I'm
96:57 - actually checking right remember I'm
96:59 - negating whether they're not overlapping
97:02 - and so they shouldn't be overlapping if
97:04 - those edges are
97:06 - equal and so I think if I add this in
97:09 - here that should fix that problem oh and
97:12 - it's less than or equal uh not equal
97:15 - less than less than or equal
97:17 - okay all right game is not over okay so
97:20 - now let's see if I can do this can I get
97:22 - through them
97:25 - I did it I saw no game over down here
97:27 - now let's make sure the intersect
97:29 - function is
97:30 - working game over game over
97:33 - aha so we have actually what do I want
97:36 - to do let's let's actually just have If
97:38 - instead of game over let's um let's just
97:41 - reset let's call a um let's call a
97:45 - function called a reset game and I'm
97:49 - going to make that function I'm going to
97:51 - just put it up here at the top reset
97:53 - game
97:55 - game and what I'm going to do is and I
97:59 - think I'm just going to just reset the
98:01 - Frog's
98:03 - location uh and I'm I'm gonna I'm just
98:08 - going to put this here I'm going to make
98:09 - a new frog object and then I'll just
98:11 - call reset game here so I could be more
98:13 - thoughtful about this there might be a
98:15 - lot of other things you know ultimately
98:17 - I'm not really doing lives or levels and
98:19 - this isn't really a reset game but one
98:21 - thing you can notice here if there are a
98:22 - bunch of things that you want to reset
98:24 - that happen when the game starts but
98:26 - then also happen later when you make
98:28 - when something happens like the the frog
98:30 - and the car Collide I can have a
98:31 - separate function that does all that
98:32 - call that both in setup and also down
98:35 - here so let's see now if I can make it
98:40 - through not too hard to play actually
98:43 - let me run it again and mess
98:46 - up yeah so you can see if I mess up it
98:48 - just puts me back at the
98:52 - beginning so we've got we've got the
98:55 - basics of Frogger now part two done I'm
98:58 - going to end this part two and in the
99:01 - second part I'm going to add the logs
99:04 - the third part that is I'm going to add
99:05 - the logs at the top that instead of
99:08 - avoiding the frog has to actually jump
99:11 - onto and and ends up sticking to okay
99:14 - thanks for keeping going with me and I
99:17 - guess the will be a third part to this
99:19 - okay oh I still have row equals 2 make
99:22 - their side smaller than the grid yeah
99:25 - all those things would be good
99:28 - ideas frog are is supposed to move a bit
99:30 - more smoothly he visually hops across he
99:33 - can be caught mid Jump by a vehicle oh
99:36 - that's
99:37 - interesting um I'll let somebody else uh
99:41 - fix that Where's My
99:44 - Water um how many I haven't checked the
99:47 - I haven't checked the Spinners let's
99:49 - check the spinner which I won't have
99:51 - time today uh well I forgot what the
99:55 - um I think I closed that do I have it
99:58 - here fidget spinner simulation let's
99:59 - take a look at
100:02 - that oh look at this I got to yes I'll
100:06 - have to come back and do that another
100:09 - day um it's 1240 I so I want to do the
100:15 - okay so what I want to do now is create
100:17 - a
100:19 - um should I refactor this before I do
100:22 - the logs to create a lane
100:26 - object and the lane object store has a
100:29 - certain number of
100:36 - cars as I'm just going to run into this
100:39 - horrible problem now of all that manual
100:41 - hard
100:43 - coding um
100:46 - when uh when I get to the next
100:51 - step CU I also need a SA safety zone you
100:54 - can see I need a safety zone here please
100:57 - do the fidget spinner I think I should
101:00 - finish this don't you think I only have
101:02 - one more part to do I I think I might
101:03 - not bother with the top thing I'll leave
101:05 - that as an
101:07 - exercise um and also what happens when I
101:10 - need somebody to tell me what happens
101:12 - when the Frog lands on a log and the log
101:15 - goes off the screen do you get to like
101:17 - come back with the log
101:20 - right this is the most complicated part
101:23 - because you have to be attached to a
101:25 - particular log with an
101:29 - offset um okay let me fix this thing
101:32 - that I still have row two in The Code by
101:34 - accident for no
101:42 - reason you die so you have to if we do
101:47 - you have to jump off the log before it
101:50 - gets to the other
101:52 - side that's sad okay I think I can
101:55 - program
101:58 - that confirmed
102:01 - okay yeah okay it pushes the frog off
102:04 - okay um all right so how do I want to do
102:10 - this do I want to refactor a lane object
102:15 - I think I don't I think I want to keep
102:17 - with my I think I want to keep with my
102:20 - lazy way of doing
102:22 - this
102:23 - um because that could come later cuz
102:28 - that could come later you don't die
102:29 - straight away it slowly pushes you off
102:32 - Oh you mean you stay on it while the log
102:34 - is going and then and then if the log
102:36 - goes you you fall off the edge ah
102:39 - interesting oh car should be moving in
102:41 - the opposite
102:43 - direction oh
102:45 - right I forgot about that so I could
102:47 - that's
102:49 - easy um by uh by just messing with the
102:54 - speed so I'll do that I'll do that when
102:56 - I get to the the logs
103:03 - okay um okay let me let me have the cars
103:06 - move in the opposite direction no I'm
103:07 - not doing machine learning today
103:08 - negative speed okay let's come let's
103:11 - let's go into part
103:20 - three got to program this
103:29 - okay oh my goodness 700 some people are
103:32 - watching okay I gotta got to do a better
103:35 - job energy energy jazz hands
103:39 - okay okay welcome to part three of
103:41 - making Frogger in a way that's terrible
103:45 - and I'm doing a terrible job I'm just
103:46 - trying my best here but hopefully you're
103:48 - learning something and you will make a
103:50 - much better version of this what I have
103:51 - so far in Parts one and two I made the
103:54 - frog that moves around in Parts in part
103:56 - two I added the cars and I also ma
104:00 - implemented that if you if you uh hit
104:02 - one of the logs um hit one of the cars
104:04 - can't keep anything straight you it
104:06 - resets the game now there's a lot of
104:09 - nuance to this and you know in terms of
104:10 - visual design and there's a lot of ways
104:13 - this could be improved but I'm just kind
104:14 - of keeping it simple and I look forward
104:16 - to everyone's creative uh improvements
104:18 - of this but I do need to add something
104:20 - to this all the cars are moving in the
104:22 - same direction dire and that's not
104:24 - actually how Frogger Works some rows the
104:27 - cars move in the opposite direction so
104:28 - let's before I get into the logs let's
104:30 - at least add that so let's just say what
104:33 - happens if I in row
104:36 - two give the cars a negative speed soga
104:40 - 3.5 instead of
104:42 - positive you can see that's working but
104:44 - I don't have the code for them to come
104:46 - back so what I need to do in the car in
104:49 - update is if speed is greater than zero
104:54 - so if they're moving to the right check
104:57 - if they get off that
104:59 - edge else by definition they're moving
105:02 - to the left else
105:05 - if x is less than negative
105:09 - grid then
105:12 - X then x
105:14 - equals uh width plus grid right so this
105:18 - is just the opposite of checking instead
105:21 - of checking if they're off that uh if
105:23 - they're moving to the left I need to
105:24 - check if they're off that edge and now
105:26 - we should have yeah there we go so this
105:29 - is much better
105:30 - already uh just sort of in terms of
105:33 - what's going on okay so then there
105:34 - should be a sort of safety so I might
105:37 - maybe I'll draw these there's like a
105:38 - safety row at the bottom again and I
105:41 - really this this project really needs a
105:43 - lane object and the lane keeps track of
105:46 - what's in it and I think that that's
105:48 - something I'm going to leave maybe I'll
105:49 - do like a part four or something that I
105:50 - make that but I just want to visually
105:52 - draw something in for those Lanes so I'm
105:55 - going to say a
105:56 - rectangle um from zero uh height minus
106:01 - grid with the full width um to
106:06 - um uh with a height of grid and let's
106:09 - give that um a sort
106:12 - of I don't know what to what color to
106:14 - draw this let's try uh let's try this
106:18 - okay so we can see that's the Safety
106:20 - Lane and maybe maybe I should give it
106:23 - some transparency actually would make
106:24 - more
106:26 - sense so you can see that's the Safety
106:29 - Lane down
106:31 - here I'm going to add another Safety
106:33 - Lane which would be uh height minus grid
106:37 - times where do we get to so far we had
106:40 - grid time 2 grid time 3 grid Time 4 so
106:45 - now I'm going to have a safety Lane at
106:46 - grid times 5 there we go so we can see
106:50 - that's a safety
106:51 - Lane okay so now what I need to do is
106:55 - start putting some logs above okay are
106:59 - you ready for logs I'm ready for logs
107:03 - ready for logs okay um so what do I want
107:07 - to do I already have this whole car
107:10 - object could I possibly I think I could
107:13 - get away with having log extend car
107:17 - right because a log is going to have a
107:20 - speed a log is going to have the same
107:22 - update for function a log behaves
107:24 - exactly like a car there will be some
107:26 - difference so let's try saying and it
107:29 - could be a log or a turtle but I'm just
107:31 - going to keep everything a log right now
107:34 - I'm going to make a class called log and
107:36 - have it extend
107:40 - car let's see how this goes then what I
107:43 - want to do is what's the car Constructor
107:45 - look like
107:48 - this so what I'm going to do is just say
107:51 - super right
107:54 - because oh log a log is created just
108:00 - like a
108:03 - car
108:04 - then okay so this is actually pretty
108:07 - good we we don't have any different
108:09 - functionality just
108:10 - yet so what I'm going to do is I'm going
108:13 - to create yet another row which will
108:16 - actually
108:17 - be like row it's actually row five
108:21 - technically row
108:23 - I guess if the rows have numbering the
108:26 - rows the rows are numbered
108:31 - um by I I let me let me look at what's
108:35 - what's here actually
108:37 - oops what just happened comment this
108:40 - out my row numbering is horrible 0 1 2 3
108:47 - four and I'm drawing them at but the
108:51 - problem is I'm drawing them from the top
108:53 - so it's really getting drawn at row +
108:57 - one okay so again I need a whole I
109:00 - really need to refactor this whole row
109:03 - Lane thing I'm kind of I probably should
109:05 - do it now but I'm I'm just going to keep
109:07 - going so the next one is not at times
109:10 - five that's the Safety Lane it's at
109:12 - times six but it is row
109:16 - five and I'm going to put two logs in it
109:20 - and I'm going to say logs I'm going to
109:22 - Res start index over at zero and I'm
109:25 - going to put two
109:27 - logs and this should be
109:30 - times not five but times
109:33 - six and we need to have an
109:36 - array called logs and right now I'm
109:40 - going to say I'm just going to say I'm
109:42 - going to just start with two
109:48 - logs and then I'm going to uh logs
109:51 - equals a new what did I what did I get
109:54 - wrong here logs oh log not
109:57 - logs how am I doing then I'm adding the
110:01 - logs now what I'm going to
110:03 - do is I am going to have the same exact
110:06 - Loop here but I'm going to do it for all
110:10 - of the
110:15 - logs log so I just want to see do I now
110:19 - have there we go so you can see that
110:21 - those logs are identical now let's
110:23 - change them up let's make those
110:27 - logs have a of that row have a
110:31 - WID um that's three wide let's have them
110:35 - go a bit faster and let's space them out
110:39 - by quite a bit uh
110:42 - more okay so now we can see and two
110:46 - something else is moving exactly at two
110:49 - let's um so let's move them a little bit
110:51 - faster than that okay so those are the
110:54 - logs now I can't
110:57 - visually how come they're not coming
110:59 - back
111:03 - oh cars are missing what
111:06 - happened oh I have a
111:08 - bug what's going on
111:11 - here cars going to the right are no
111:18 - longer in the right
111:20 - spot when did that happen
111:28 - because I use and and not a nested
111:33 - oh yeah look at this my logic is way off
111:39 - here oh everybody told me this like 10
111:42 - minutes
111:44 - ago do I have to go
111:51 - back
112:02 - yeah I need to
112:05 - um I really need to say
112:13 - I right I really need to say this right
112:16 - I'm just testing this before
112:20 - I yeah that fix it okay hold
112:30 - on no it's okay it can it can live there
112:33 - for a little while right right it can
112:36 - live there for a little
112:38 - while okay so there was a pretty major
112:41 - bug that most of you probably for at
112:43 - least like 5 or 10 minutes there were
112:45 - probably yelling at your TV television
112:48 - machine I don't know how you watch this
112:49 - stuff if you're even watching it um
112:52 - which is is that anything moving to the
112:54 - right actually never came back on
112:57 - because of the way that I have
113:00 - this this if statement is quite flawed
113:04 - because why is it flawed if if speed is
113:08 - greater than zero and it's over to the
113:11 - right do this otherwise just check if
113:14 - it's less than I really need to check I
113:17 - really need to also check speed
113:19 - here wait hold on I have to
113:23 - why why is that I'm like my head is
113:25 - hurting here why can't I just
113:28 - check if speed
113:31 - because things moving to the
113:36 - right oh
113:38 - oh because oh oh
113:46 - oh I understand it now I
113:49 - think let's say that again
113:54 - things if speed is greater than zero and
113:57 - otherwise it could still be a thing with
114:00 - speed greater than zero if it's no
114:02 - longer over there so it it gets like set
114:05 - back and then it's less so it gets set
114:07 - back over there so it's getting set back
114:09 - and forth so I really need to check it
114:11 - only I only want to do I only want to
114:13 - move things back to the other side if
114:16 - they're actually are things that are
114:17 - moving to the right so this should
114:19 - really fix that problem uh and there we
114:22 - go
114:25 - thank you now we have
114:28 - cars and now I'm ready to jump on a log
114:32 - so here's the thing oh my
114:35 - goodness I really need that lane object
114:38 - right because now I need to know I
114:41 - really want if I'm on if I am not
114:44 - intersecting a log and I'm up
114:46 - here we've got a problem okay so I'm
114:51 - going to do things very man
114:53 - ually where I can really just check the
114:56 - Frog's location right I only want to
114:59 - start thinking about the logs if the
115:02 - frog is where Above This safety line
115:05 - what value is that so let's just see if
115:08 - I can get this right I'm going to
115:11 - say
115:12 - if
115:15 - frog is I'm just going to say right now
115:18 - if frog
115:21 - doy
115:29 - if frog. Y
115:32 - is greater than oh no is less than what
115:37 - was that Safety Lane it was grid height
115:41 - minus grid Time
115:44 - 5 height minus grid I really could have
115:47 - done this from the top instead of this
115:48 - height minus thing but that's fine
115:50 - height minus grid Time 5
115:54 - background let's just test this
115:56 - out oh I have to get through the cars to
115:59 - test
116:01 - it there we go okay so that's good this
116:04 - is the correct test to now know the game
116:08 - is over if I'm not intersecting a
116:11 - log so let's figure that out how do I
116:15 - check that Boolean I so what I need to
116:18 - do is check all logs and if I'm not
116:21 - intersecting any of them so let's do
116:24 - that inside this
116:27 - Loop if frog if the frog is up in that
116:30 - region um I'm I'm going to assume that
116:35 - I'm not okay I'm going to assume that
116:38 - I'm not okay I'm I'm not okay but if log
116:45 - intersects frog or if frog intersects
116:50 - log then okay is
116:54 - true right so now if all of that is
116:58 - done if I say if not
117:02 - okay reset game so one thing I want to
117:06 - do right now is I want to start the frog
117:08 - in the middle so let me start the frog
117:10 - in the middle which
117:12 - is the Frog starts at height minus grid
117:16 - Time 5 right I want to just start the
117:19 - Frog there and so if I just just into
117:23 - the whoops if I jump into the
117:27 - river but I should be able to jump on a
117:30 - can I why can't I jump on a log what did
117:33 - I miss
117:36 - here uh what did I get wrong here if
117:39 - frog intersects a log my okay should be
117:43 - out of the loop oh yeah of course so the
117:48 - the okay has to be out of the loop of
117:50 - course because I have to start I'm just
117:52 - doing this one time through draw with my
117:54 - frog I'm going to assume the frog is
117:57 - okay and this also should be out of the
118:01 - loop right so after all is said and done
118:05 - so this now should allow me
118:10 - to hold
118:12 - on oh wait I'm trying to jump I gotta oh
118:15 - I have a
118:16 - problem yeah I'm on a log and now I'm
118:18 - not I'm on a log you can't okay so first
118:20 - of all I want to draw the Frog last
118:23 - so I can see what's going on here I'm
118:26 - want to draw the Frog
118:28 - last so you can see I can jump onto the
118:31 - log now why can't I
118:34 - move do I have this wrong should this be
118:36 - times
118:39 - six why can't I move in the Safety
118:44 - Lane why can't I move in the Safety
118:51 - Lane
118:55 - oh oh no no no no ah so also of course
119:00 - oh my God crazy a silly obvious problem
119:03 - here now which is
119:05 - that I I wonder if I should do this in a
119:08 - separate Loop you know what I think I
119:09 - want to do this in a separate Loop just
119:11 - for clean just for sort of clarity
119:14 - sake
119:16 - because I always want
119:21 - to here's here's the reason why I always
119:23 - want to show and update all the logs but
119:25 - I only want to deal with this frog log
119:27 - intersection thing if the frogs within a
119:30 - certain zone so I'm just going to do
119:33 - this you know big deal let's Loop
119:35 - through all the logs twice so I'm G to
119:38 - assume that I'm not okay because clearly
119:41 - I'm not okay not okay I'm going assume
119:45 - that I'm not okay I'm going to go
119:46 - through all the logs if IUD the logs I'm
119:48 - going to be okay and only in this
119:51 - instance if I'm not okay I'm going to
119:54 - reset the
119:56 - game so this only happens all of this
119:59 - only happens if I'm within this uh
120:02 - region over here so now I can move
120:04 - freely I can even move back
120:07 - down but now
120:09 - I I'm no good if I jump into the river
120:12 - but I'm good if I jump on a log but
120:14 - guess what what's got to happen now if I
120:17 - jump on a log I should move with the log
120:20 - I should move with the log so I need to
120:22 - be attached to a log oh this is great so
120:26 - let's have the
120:28 - Frog have a variable part of it which is
120:32 - an attached log then I'm going to write
120:35 - a function I'm going to call it
120:40 - attach and I'm going to say attached
120:42 - equals that
120:45 - log so this variable is going to be by
120:48 - definition
120:50 - null at first
120:52 - okay now what I'm going to do is if I
120:58 - intersect that log then I want to say
121:00 - frog attach log so I want to attach the
121:05 - log to frog to that log I'm also going
121:08 - to need an update function so the Frog
121:11 - needs an update function and the
121:15 - Frog it's funny I thought this would be
121:17 - functionality of the log so far the log
121:20 - doesn't need any additional
121:21 - functionality
121:23 - I'm putting it in the Frog which I think
121:24 - is okay what I need is an update
121:27 - function and
121:29 - if attached is not equal to null so if
121:33 - this frog is attached to some
121:35 - log frog. X plus equals that log speed
121:41 - it should move according to that log
121:43 - speed oh attached speed
121:47 - okay I might need a I don't know that I
121:49 - need a detach function because when I
121:51 - can be attached to One log at a time and
121:54 - when I jump I'm either going to end up
121:55 - in the river and so I'm going to be the
121:58 - game's going to be reset or I'm going to
121:59 - attached to a new log so let's look at
122:02 - this now let me try to jump onto this
122:05 - there we go look at this I'm attached to
122:07 - it jump on this attach but you can see
122:10 - if I try to jump off I'm
122:13 - reset there's a little bit of an
122:15 - animation issue I really should see
122:16 - myself jump off and see that I'm in the
122:18 - wrong part maybe animate and then and
122:20 - get reset to but let's add let's add
122:22 - some more Lanes with some more uh
122:26 - logs okay so this was row
122:29 - five now I want to
122:32 - add row let's add one more
122:35 - row row six let's put uh three logs and
122:40 - those logs are less wide um and they
122:44 - move in the opposite
122:47 - direction more
122:49 - slowly and they're spaced out by a
122:52 - different
122:54 - amount I'm just like making up random
122:56 - numbers here oops and then if I add
123:01 - three logs I need to make the array have
123:03 - five in it oops and those should be at
123:07 - up one more Y location okay so now we
123:11 - see o what's going on here the those are
123:15 - disappearing too early ah I have another
123:19 - error I wonder if somebody
123:23 - I'm
123:24 - gonna I'm going to when I jumped back
123:27 - the Frog was still moving I definitely
123:28 - need a detach okay good point good point
123:31 - so reset game in reset game this is
123:34 - pretty easy I should just say uh frog.
123:40 - detach also so let's add that
123:45 - function or you know what I can
123:48 - do I don't actually need a new function
123:50 - I can just say attach attach
123:52 - null so that's kind of essentially
123:54 - detaching it just set the attached thing
123:56 - to null that'll fix that problem but I
123:58 - have a different problem I lost track of
124:00 - where I was the in car right if x is
124:06 - less than if speed is less than zero
124:08 - it's moving this way and X is less than
124:10 - negative grid no no no no no
124:13 - no not grid this should not be grid this
124:17 - should
124:18 - be this should be with Plus that should
124:22 - be with plus plus grid because that's
124:25 - the X but I need to find when the left
124:27 - side right the left side is X Plus width
124:31 - so w if it's less than negative W minus
124:35 - grid
124:36 - right it should get all the way off
124:39 - there we go okay so I just fixed that so
124:43 - now I should be able to jump here and
124:46 - jump there and jump back down and jump
124:48 - back up look at that jump back down and
124:51 - jump back up I just could do this all
124:53 - day jump and then I get
124:56 - reset now the question is can I jump
124:59 - onto the edge of it let's try that can I
125:01 - jump onto the edge oh come back oh it's
125:03 - still moving why am I still moving oh
125:05 - because when I jumped down I didn't
125:07 - detach okay I got you everybody so if I
125:12 - jump back to the safety
125:14 - zone which is if I'm out of this
125:18 - Zone I should also make sure to detach
125:23 - attach null oh convoluted code we could
125:25 - refactor this there'll be a whole video
125:27 - on refactoring someday okay so now I
125:30 - could jump up and jump back down and I'm
125:32 - not still moving what I wanted to show
125:34 - you was that oh am I allowed to I can
125:37 - hang off the edge which I think is okay
125:40 - let's make the Frog a little bit
125:42 - transparent um let's give the Frog a
125:45 - little bit of transparency just so we
125:47 - can see that
125:48 - better you know visually I I encourage
125:51 - you to think of a better way to visually
125:53 - do this um but we can see kind of where
125:57 - the frog is okay so I think we're kind
126:00 - of
126:02 - done I should add another row I should
126:04 - add the buckets at the top what am I
126:06 - missing pause for a
126:08 - second I should Al oh I know what I'm
126:11 - missing the Frog can't go off the
126:16 - screen create a new frog there not
126:19 - require oh I could just create a new
126:20 - frog not required to detach yeah good
126:24 - point uh
126:26 - okay okay so there's one thing we need
126:28 - to deal with this problem here goes the
126:32 - frog frog my frog is gone so the Frog
126:38 - can't ever actually leave the window if
126:42 - the log starts to leave it needs to get
126:44 - pushed off and I think there's a way
126:46 - we're going to be able to do this I'm
126:48 - going to do this just in the update
126:50 - function
126:52 - I'm going to say frog dox equals
126:57 - constrain the X can never go farther
127:01 - than zero on the left side and it can
127:05 - never go farther than width minus the
127:09 - Frog's width on the right side so let's
127:13 - look at this what's going to happen now
127:16 - and it gets to reset that was so
127:17 - remarkably
127:19 - easy there we go and the frog is now
127:22 - going to slide and then get and reset so
127:25 - if I don't jump off in time so if I
127:27 - let's see if I can jump off in time now
127:30 - there we go I jumped off in time can I
127:32 - jump on so that fixes it oh my goodness
127:35 - I think let's add one more row and then
127:36 - we can kind of be done if I just make my
127:38 - Frogger thing right a little shorter I
127:41 - mean I should do the buckets at the top
127:42 - but but you could probably do that let's
127:43 - add one more
127:45 - row row
127:48 - seven row seven is going to have two
127:51 - more logs
127:52 - so seven
127:55 - logs it's going to have two more logs
127:58 - those logs will go in the other
127:59 - direction positive direction really fast
128:02 - or really slow let's just make them
128:03 - really
128:04 - slow let's make them super wide and
128:08 - spread out by a
128:10 - lot and let's see oops and they need to
128:12 - be one row up so much hard coding here
128:16 - there we go I made this kind of easy so
128:20 - now
128:22 - yay so let's let's let's reset the Frog
128:25 - back to the
128:26 - bottom and now let's play
128:31 - Frogger
128:34 - hey I don't know what what's the Frogger
128:37 - music okay I got to get past ah
128:41 - shoot I did it okay now I go on this log
128:44 - on this log on this log and
128:48 - then
128:50 - oh went in the river at the top I should
128:53 - be allowed to get to the top so the
128:55 - whole top should be another safety zone
128:57 - which is like I'm going to uh add
129:01 - another rectangle at the top there 0 0
129:06 - I'm just going to have the top b double
129:08 - height that's my safety zone and so now
129:11 - I should be able to say if frog doy is
129:15 - less than this and uh
129:20 - and frog. y so the Frog should really
129:23 - just keep track of which row it is in oh
129:25 - boy the grid system the T I'm going to
129:27 - refactor the whole tile based system of
129:29 - this frog doy
129:32 - is and it's greater than grid times
129:36 - two so this should allow me to get to
129:39 - the top
129:42 - now
129:44 - okay
129:48 - yay that is Frogger in three three parts
129:52 - in what's probably like about uh 72
129:54 - hours of programming time with just this
129:57 - simple result there is a lot of
129:59 - spaghetti uh as in this code um I think
130:03 - I would definitely like to come back
130:04 - this won't be released as quickly as you
130:06 - might I would like to come back and do a
130:08 - refactoring of this to make it better I
130:10 - look forward to hearing all of your
130:11 - comments about refactoring so what can
130:13 - you do to uh so if you're looking for
130:16 - the code for this and you're at the end
130:17 - of this
130:18 - video you can find a link to it in this
130:20 - video's descript deson there will be
130:22 - both this version this processing Java
130:24 - version there will be a JavaScript
130:26 - version using the p5js library um and I
130:30 - encourage you to add your versions to
130:32 - the read me make levels make lives make
130:35 - a timer uh add visual design add sound
130:39 - make the frog green I will make the frog
130:41 - green at least I will make the frog
130:44 - green I will make the frog green right
130:48 - now we really have Frogger and I could
130:50 - very easily with inheritance that I have
130:52 - so far um I could uh and also oh the
130:56 - actual game of Frogger has those buckets
130:57 - at the top let's look at um let's look
131:00 - at this what did I miss so think about
131:03 - this visual design create your own
131:04 - visual design little animation make your
131:06 - own version of this thank you for
131:09 - watching this boy has this been a
131:10 - struggle I am really really struggled to
131:12 - make these what seem like such simple
131:15 - games but I am somewhat pleased with
131:18 - this result if we put them side by side
131:21 - there we go a Frogger Frogger Frogger
131:24 - okay um see you guys in a future coding
131:28 - Challenge and I will come back I think I
131:29 - would like to come back and revisit this
131:31 - after I get suggestions and feedback so
131:33 - look forward to that video and when it
131:34 - comes I will link to it in the
131:39 - description see you on the next ride on
131:41 - the coding
131:43 - train
131:45 - okay all right uh what time is it is
131:48 - 1:10 unfortunately this does Bring me to
131:51 - the end of today's live
131:53 - stream oh my goodness that was hard and
131:57 - stressful um I think that what I
132:00 - need is um really appreciate the nice
132:04 - comments I feel like I did a terrible
132:06 - job today um and my neck is really
132:09 - hurting me I think something about this
132:11 - setup like maybe this needs to be
132:13 - higher but if it's much higher that's
132:16 - too
132:18 - high um uh okay so let me think here if
132:23 - did I I think what it might need to
132:26 - do in the introduction I think I was
132:29 - fine in the introduction I don't think I
132:31 - need any additional intro to the first
132:34 - part of the coding challenge do
132:38 - I um I think it was fine so I can take
132:42 - five minutes and answer some
132:44 - questions oh I've got to get out of here
132:46 - by 1:30 and it's going to take me a
132:48 - little while to like turn everything off
132:51 - make Galaga next no it was fine okay did
132:53 - I mention
132:55 - processing and Java at the beginning I
132:59 - think I
133:02 - did yeah it's funny how
133:04 - like such a simple thing like just
133:08 - adding some color to the Frog I don't
133:10 - know why
133:13 - oops I couldn't think of that um I'm
133:17 - actually excited this is to me one of
133:19 - the much more interesting games that
133:20 - I've made in terms of you
133:23 - know snake and Space Invaders I feel
133:27 - like there's could be a lot of
133:29 - expressive variations of
133:31 - this um River should be blue well I just
133:34 - need to do a lane I'm gonna I'm going to
133:36 - do a fourth part to this so things that
133:39 - I need to do I should remind
133:42 - myself I should let you guys know that
133:44 - I'm going to be out of town next week
133:46 - Tuesday through Friday so I'm going to
133:48 - hope to do a live stream this coming
133:49 - Monday or Tuesday morning um and what I
133:53 - will do in that live stream
133:56 - is Frogger lane
134:00 - refactoring or Lane SL
134:04 - grid perceptron
134:08 - followup and fidget spinner simulation
134:13 - so these are the things that I hope to
134:14 - do in my next live stream and then when
134:17 - I come back for my trip out of town
134:19 - There's a good solid 3 week where I'm in
134:21 - town and so I hope to really dive into
134:23 - the neural network stuff then it'll be
134:24 - around the sort of July 4th sort of
134:26 - stuff here okay um make it all more
134:30 - squared okay I'm exhausted this was 2
134:35 - hours and 15 minutes my neck hurts I'm
134:41 - tired I hope editing magic makes this
134:43 - interesting and enjoyable to
134:47 - watch um yeah I know the face pal with
134:51 - the fidget spinner add color no no this
134:53 - is for all of you to to recreate this
134:57 - magic with your own visual design I will
134:59 - keep mine lame can we do the same coding
135:02 - with JavaScript rather than Java or it's
135:04 - going to be very different so I will
135:05 - release me I am so me volunteer to Port
135:07 - it but I will if um anybody else can
135:10 - help Port it and I will certainly be
135:11 - happy to Port it myself it will look
135:13 - very very similar the thing that will be
135:16 - the most different is how the
135:17 - objectoriented stuff works I'm not so
135:20 - convinced
135:21 - honestly right now I kind of don't know
135:24 - that this inheritance thing really added
135:26 - a lot of value here I mean I did get
135:28 - because the log could actually really
135:30 - just be the car it's just like a um and
135:33 - it really I'm just interacting with it
135:35 - with the frog in a different way so but
135:38 - the rectangle could just be a piece of
135:40 - data inside of the car object but say
135:42 - lovey I learned a lot today thanks
135:45 - that's nice hi from France bonjour it
135:47 - didn't add much value oh the
135:49 - objectoriented thing not my the not my
135:51 - whole session okay that's good yeah I
135:55 - you know it's funny like I um I have a
135:57 - new appreciation for game programming
136:00 - and people who teach game programming
136:03 - and you know I sort of take it for
136:04 - granted that and design patterns because
136:07 - I think that I'm just sort of flying by
136:08 - the seat of my pants with these things
136:10 - and you it clearly can see that there
136:12 - would be
136:13 - some uh that there's some like reusable
136:16 - ideas and patterns and libraries that
136:18 - would make doing this stuff so much
136:19 - easier
136:22 - [Music]
136:23 - um okay so thank you guys I will put on
136:26 - my Goodbye
136:28 - song which sort of feels silly to me at
136:30 - this point it is 2 and A2
136:33 - minutes
136:35 - um thank you Montreal Canada I'm going
136:38 - on a vacation to Canada sometime later
136:40 - in July I will be going to New Finland
136:43 - if I have any uh doing some bird
136:44 - watching going to see the puffins I hope
136:47 - uh near St John's if I have any viewers
136:48 - from that part of Canada uh please let
136:51 - me know give me your recommendations we
136:52 - can do a live nature coding Train
136:57 - episode
137:05 - um
137:07 - uh any plans for the h 100th live stream
137:10 - what number am I on what number am I on
137:13 - I don't have plans for the 100th live
137:15 - stream I need ideas for that hopefully
137:17 - the timing works up up you know what
137:19 - should I do for the 100th live stream
137:20 - one is I could wear a full train
137:22 - conductor outfit that's one idea I have
137:25 - one sitting over
137:27 - there that's idea number one for the
137:29 - hundreds live stream no that's the I'm
137:31 - on the 73rd coding challenge Simon the
137:34 - live streams actually have a different
137:36 - number so um I don't I think I'm this is
137:39 - like 95 or something in terms of live
137:46 - streams oh I didn't read a red Burns
137:48 - quote
137:49 - today I don't remember what the last one
137:52 - I read
137:54 - was I think
137:57 - okay here's another one if you can
138:00 - resist the temptation to run back to the
138:03 - shelter of your comfort
138:05 - zone yeah you know I have to say doing
138:08 - this YouTube channel as much as I uh is
138:12 - definitely an exercise in that because
138:13 - this does not feel comfortable at all
138:17 - today um so that's a piece of advice you
138:19 - can take with you today
138:21 - [Music]
138:23 - do the 100th live inside a
138:26 - train that's an interesting
138:31 - idea uh yeah the London trip that I did
138:33 - speak about at one time unfortunately
138:35 - did not H is not happening I will post
138:38 - about my uh travel in the uh slack group
138:42 - for those who you know would love to
138:43 - have a Meetup or something European
138:45 - Meetup at some point so have to put that
138:48 - on hold for another um summer or another
138:51 - time but I I am still trying to plan it
138:52 - maybe it'll be next fall that'll come
138:55 - 100th live should be entirely silent
138:57 - film I like that idea
139:00 - mine I always wanted to be a
139:05 - mine okay make railroad Tycoon that
139:08 - sounds
139:09 - [Music]
139:13 - hard okay oh five more seconds thank you
139:16 - everyone for tuning in I will be
139:18 - actually be back this coming Monday or
139:20 - Tuesday if things go well and then there
139:22 - will be uh another week Hiatus before
139:24 - another live stream so thanks for
139:26 - watching um
139:28 - patreon.com coding Trin uh processing
139:31 - foundation.org to support processing uh
139:34 - coding tr. storenvy.com if you want to
139:36 - get this t-shirt I don't know why you
139:38 - would want to but if you do and I will
139:40 - see you all in a future live stream uh
139:43 - shiffman on Twitter is a great way to
139:44 - get in touch um and I will see you all
139:46 - again soon goodbye enjoy your
139:49 - weekend