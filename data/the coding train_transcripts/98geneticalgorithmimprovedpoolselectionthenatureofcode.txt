00:01 - hello I'm back for another genetic
00:03 - algorithms video although this video
00:04 - actually that you're watching right now
00:06 - is not just a video about something you
00:09 - could do for genetic algorithms this
00:11 - video is ultimately about picking from a
00:14 - list of things randomly but picking some
00:17 - things more often than other things and
00:19 - this is a thing that you do have to do
00:21 - oh where's my Eraser over here I'm
00:24 - coming I'm coming this is a thing that
00:27 - you have to
00:28 - do um
00:30 - in in genetic algorithm because we want
00:32 - to we want to have a population of
00:34 - elements and we want to pick certain
00:36 - members of that population that have
00:38 - scored a higher Fitness score to uh have
00:41 - their genetic information more likely
00:43 - passed down to the Next Generation but
00:46 - let's let's let's let's erase our minds
00:49 - of the Wonder that is genetic algorithms
00:51 - and just start with a very simple
00:53 - scenario I'm going to create a
00:55 - JavaScript object um and this this
01:00 - marker has a very interesting smell uh
01:02 - and it's going to have uh things in it
01:05 - like uh
01:07 - mango five uh
01:11 - blueberry three uh
01:16 - Cherry uh one
01:19 - and
01:21 - apple
01:23 - one so what I want to be able to do is I
01:27 - want to be able to pick one I want to
01:29 - pick a fruit fruit randomly I want a
01:31 - function that says pick
01:35 - fruit and I call that function I'm going
01:38 - to get out of it returned a particular
01:41 - fruit maybe mango maybe blueberry maybe
01:44 - Cherry maybe apple and I am going to get
01:47 - mango five times as often as I'm going
01:50 - to get apple I'm going to get mango and
01:51 - I wrote These numbers very specifically
01:53 - to add up to 10 because it's very easy
01:55 - for me to just sort of do the math here
01:57 - but I'm going to get mang I want to get
01:58 - mango 50% of the time blueberry 30% of
02:01 - the time Cherry 10% of the time and
02:03 - apple 10% of the time this relates to so
02:06 - many different kinds of scenarios that
02:08 - you might do in computer programming if
02:12 - that makes sense okay so how do we do
02:14 - this now you've if you've been watching
02:15 - some of my other genetic algorithm
02:16 - videos or other videos I've done this a
02:18 - number of different ways one way that
02:20 - I've done this is I've built a separate
02:22 - array and i' what I've done with that
02:24 - array is I've put I just said hey let's
02:26 - put mango in it five times I'm just
02:27 - going to write
02:28 - m mang goes in this array five times and
02:31 - then I'm going to put blueberry in this
02:33 - array three times and then I'm going to
02:35 - put a cherry in at once and apple in it
02:37 - once so if I had a bucket full of all
02:40 - these letters and there's five M's in it
02:42 - three b's one c one a and I shuffle it
02:45 - around and pick one out randomly I'm
02:47 - going to pick M more five times as often
02:50 - as I'm going to pick
02:52 - a so um that's one way of doing it now
02:55 - there's a bit of an issue with this way
02:56 - of doing it this works really nicely for
02:59 - this but if I I have thousands of
03:00 - elements and thousands of different Pro
03:03 - and like a vast array of probabilities
03:05 - some of which are very very very very
03:06 - small probabilities I did have to build
03:08 - this array that just has so much stuff
03:10 - in it it's not a really efficient
03:12 - performance good performance solution
03:14 - and that's actually if you look at a lot
03:15 - of my examples that's the solution I'm
03:17 - using doesn't work so great so I'm going
03:19 - to propose I'm GNA I'm not proposing
03:20 - this I didn't invent this I'm just
03:22 - talking about it I'm going to look at
03:24 - another solution now there is another
03:25 - solution to this problem which is a Mech
03:28 - a way that you could sort of pick random
03:30 - numbers twice so what two random numbers
03:33 - so each one of these zero one 2 3 so on
03:38 - the one hand I'm just picking a random
03:39 - number 0 1 2 or three and I could do
03:42 - that easily by saying it depends you
03:44 - know in JavaScript or in processing
03:46 - actually floor um uh
03:50 - random four and this will give me zero
03:54 - one two or three so this is one way that
03:55 - I could do this but if I do that I'm
03:58 - just going to get each one of 25% of the
04:00 - time but if in addition to picking one
04:03 - of these randomly I picked another
04:05 - random
04:07 - number just between zero and one so this
04:11 - is the fruit that I'm picking and then
04:12 - this is kind of my like test number if I
04:15 - pick another random number that random
04:18 - number has to be less than the
04:21 - probability in order for me to for this
04:24 - first random thing to qualify so I might
04:26 - have to do this a bunch of times like I
04:27 - might pick three than 7 and then 2 and4
04:31 - and then 1 in8 and then 0 and 6 and then
04:35 - 3 and
04:37 - 01 or you know ah Apple qualifies so you
04:41 - can see mango is going to be able to
04:43 - qualify if I pick zero 50% of the time
04:46 - this second random number is going to be
04:48 - fine but if I pick Apple only 10% of the
04:51 - time is this second random number going
04:52 - to be fine so that's one way the problem
04:54 - with this way is I you know again with a
04:57 - lot of elements and a lot of
04:58 - probabilities I can be stuck doing this
05:00 - over I can you know that Loop can take
05:02 - many many many many times before it
05:04 - finds a qualifying random number so this
05:07 - video I'm going to program an entirely
05:09 - different algorithm uh it was suggested
05:12 - to use this algorithm in a GitHub issue
05:14 - I will uh link to that GitHub issue in
05:17 - this video's description which is hello
05:20 - description down there I'm get trying to
05:21 - get used to where things are over there
05:23 - is some no maybe over there is like an
05:24 - ad I don't know what you don't if I
05:27 - don't know if don't click on it maybe
05:29 - click on it I don't know now now I'm all
05:30 - stressed out okay uh never mind all that
05:32 - there's stuff around me I'm a person in
05:33 - a YouTube video but
05:37 - um there was a point to all this wasn't
05:39 - there ah okay so uh I will also in a
05:43 - moment bring up that GitHub issue to
05:44 - look at it um on the on the computer
05:46 - because I do have a computer over there
05:48 - which I will get to eventually okay so
05:49 - what is this other
05:51 - algorithm well one way you could imagine
05:54 - is let's say I created I don't know what
05:56 - this is a tube a pipe a rectangle some
06:00 - sort of two-dimensional space and I said
06:02 - ah 50% of that space is Mango's space
06:08 - and 30% of that space is blueberry's
06:12 - space and uh 10% of that space is Cherry
06:17 - and 10% of that space is Apple and this
06:19 - down here is zero and up here is one so
06:23 - what if I just pick a random number now
06:25 - between zero and
06:27 - one and it's almost like throwing a dart
06:30 - I could be over here and I'm going to
06:31 - throw a dart let's do it ready one two
06:35 - 3 I
06:37 - missed but actually it landed over here
06:39 - blueberry I'm going to be more likely
06:41 - there's more space for me to hit with
06:43 - mango than there is for blueberry than
06:45 - there is for cherry and apple now I
06:47 - don't I'm not going to build some whole
06:48 - entire like dart throwing simulation
06:50 - thing in my sketch so I need a mechanism
06:53 - to do this to pick the random number and
06:55 - figure out where I am and actually a way
06:57 - that I could the way that this could
06:59 - work is I can actually start up here uh
07:01 - you can pick a random number and then
07:02 - start subtracting values and find out at
07:05 - what point do I sort of exit this space
07:07 - so hopefully I'm going to program that
07:08 - algorithm we'll look at it hopefully
07:10 - it'll work and we'll come back here and
07:12 - sort of see if this makes more sense to
07:14 - us then okay um I'm going over there now
07:17 - okay here I am back in this uh VI this
07:20 - screen with my computer um so this is
07:22 - the GitHub issue that I was referencing
07:24 - there's a link to it in the video's
07:25 - description uh spectron thank you for
07:27 - this original suggestion and then also
07:30 - uh Sinclair z81 this is from a while ago
07:34 - it took me a while to get to this um uh
07:37 - has a very like fancy crazy oh look at
07:39 - this unicorn uh uh implementation of it
07:42 - that uses like es6 and all sorts of cool
07:44 - interesting JavaScript syntax
07:46 - that I don't fully understand uh oh but
07:50 - I will understand someday okay so um I'm
07:54 - gonna do my own so let me close those
07:57 - and let's let's write some code okay so
07:59 - first of all let's quickly I should have
08:01 - done this in
08:02 - advance okay uh there's a little pause
08:05 - there where I decided actually what I
08:06 - want to do is write the information I
08:08 - want to pick one of the I it's easier
08:10 - for me to put it in an array because
08:12 - what I want to do is pick one of these
08:14 - elements from the array and then I want
08:16 - the probability of how I pick it to be
08:18 - something relative to its score so the
08:20 - first thing that I need to do by the way
08:22 - is I need to normalize all of these
08:24 - scores to values between zero and one
08:27 - and so that they all add up to one I
08:28 - want them to be a percentage and um so
08:32 - the first thing that I'm going to do is
08:34 - I'm going to just Loop
08:37 - through every single
08:43 - fruit and what I need to do is I need to
08:46 - add up all the scores I need to find out
08:47 - what do they all add up to sum equals
08:50 - zero and I'm going to say sum plus equal
08:53 - um
08:54 - fruits index i. score then the next
08:58 - thing I'm going to do now here's the
09:00 - thing I might want to retain that score
09:03 - value or I might I be could just
09:04 - overwrite it but ultimately what I want
09:06 - to do I'm going to say fruits indexi
09:09 - doore equals fruits index I and I know I
09:12 - could say divide equals but I'm just
09:14 - going to write this all the way out
09:15 - fruits index i. score divided by Sum so
09:19 - the idea is I want to normalize all of
09:22 - those scores so all I need to do is add
09:24 - up the total and divide each one by the
09:26 - total that's exactly what I would have
09:27 - done here I get 10 five divided by 10 is
09:30 - 50% 3 divid by 30% you know and the math
09:33 - is never going to work out this
09:34 - perfectly but who cares because the
09:36 - computer's doing it not us okay so um
09:39 - what I'm going to do here is I am going
09:41 - to go back to the
09:42 - browser and I'm going to refresh you
09:44 - know this canvas is here for no reason
09:47 - um I'm just and I'm going to look at
09:49 - fruits and we can see here that now the
09:53 - scores are normalized 0.5.3 and I could
09:56 - if I want to it might make sense to say
09:58 - actually I'm going to add a new property
09:59 - to each one of these objects I'm going
10:01 - to say like Norm score for like or I'm
10:04 - just call it probability for probability
10:06 - fruits index i. probability so now I'm
10:08 - going to hit refresh I'm going to look
10:09 - at that fruits array and I'm going to
10:11 - see here now it retained the score and
10:13 - has a probability of 05 and as you can
10:16 - see if I were to go here and
10:19 - add you know one other fruit like uh
10:23 - melon and give it a score of you know
10:28 - 7.7 then then if I hit refresh and look
10:31 - at fruits you can see now I've got five
10:33 - and it's worked it out like it's the
10:34 - math isn't so clean because it doesn't
10:36 - add up to 10 but mango now has a 29%
10:39 - chance of being picked and melon has a
10:41 - 41% chance of being picked so this is
10:43 - good so now how do I pick one of these
10:48 - randomly according to its probability
10:51 - this now now it's time for me to write
10:53 - an algorithm that implements this
10:56 - particular write some code that
10:57 - implements this particular idea this I
10:59 - algorithm throw a d Dart and find a
11:01 - place in here so the way that I'm going
11:02 - to do that is first I'm going to write a
11:06 - function I'm going to call it uh pick
11:10 - one and it's going to receive a list so
11:13 - I'm going to have a generic function
11:16 - that could work with any list of things
11:18 - now it's going to be set up to work in
11:20 - such a way that the list of things is
11:21 - made up of objects that have a property
11:24 - called prob for probability but you know
11:26 - obviously I could make this more generic
11:28 - in other ways as well okay so the first
11:31 - thing that I'm actually going to do is
11:33 - I'm going to say VAR index equals z so
11:35 - I'm going to sort of assume that the one
11:37 - that I'm going to pick is the first
11:40 - one then I'm going to pick a random
11:43 - number between zero and
11:45 - 1.0 and I'm going to say as long as R is
11:50 - less is greater than
11:53 - zero then I'm going to say R equals R
11:58 - minus
12:00 - that
12:01 - particular object's
12:04 - probability so let's think about this
12:06 - for a
12:08 - second what I'm saying is that let's say
12:11 - I have something with a probability of N
12:16 - and I have something with a probability
12:17 - of
12:18 - 0.1 okay I shouldn't draw this right
12:22 - time out I shouldn't draw it right next
12:24 - to this because I'm going to do
12:26 - something different now so I'm going to
12:27 - use where is I don't have any space I'm
12:30 - going to come over here this is fine
12:33 - let's just say a simplified Arrangement
12:35 - where this is my like bar here and I
12:37 - have something that has a as a
12:40 - probability of 0.9 and B as a
12:42 - probability of 0.1 the first thing that
12:44 - I did is I picked a random number
12:46 - somewhere between zero and one and then
12:50 - I'm going to subtract 09 from
12:55 - it because 0 n is first how often am I
12:59 - going to pick a number between zero and
13:00 - one where I subtract 0.9 and now I have
13:03 - a value less than zero 90% of the time
13:06 - right only if I pick a number greater
13:09 - than 0.9 if I pick 095 and I subtract 0.
13:12 - n I'm going to have a value of
13:15 - 0.5 so 90% of the time I'm when I
13:18 - subtract this I'm going to be less than
13:20 - zero when I'm when I'm out when I'm done
13:22 - when I'm out I'm
13:24 - out you're out when I'm below zero
13:27 - that's the thing I'm left with 10% of
13:29 - the time I'll pick that number like
13:32 - .95 and then I go and subtract 0.1 and
13:35 - I'm out so 10% of the time I'll be left
13:37 - the last place I was I'm starting up
13:39 - here I pick some random number somewhere
13:42 - I subtract this am I already below zero
13:44 - or or should I keep going if I'm
13:47 - subtract this then I'm that less so this
13:49 - idea of just I keep subtracting these
13:50 - values and it doesn't matter what order
13:52 - right even if this was B was first and
13:55 - I'm always subtracting 0.1 first I'm
13:58 - only going to be less than zero if I
14:00 - happen to pick a random number that's
14:02 - less than 0.1 so hopefully this kind of
14:03 - makes some intuitive sense to you I feel
14:05 - like there's a very smart way to diagram
14:07 - this that I'm not doing but I've said it
14:09 - enough times I'm hoping it makes sense
14:10 - let's come back to the
14:12 - code so what do I need to do let's say
14:14 - so if so what I need to do now is say
14:17 - index Plus+ so I'm going to just keep
14:20 - doing this I want to go through the list
14:22 - until I have now gone below zero now
14:25 - there's a little bit and then I want to
14:26 - say return list index except for the
14:30 - fact that this isn't exactly
14:32 - right this isn't exactly right because
14:35 - um I like how this bracket is
14:37 - highlighted down here but anyway forget
14:39 - about that um this isn't exactly right
14:43 - because um I actually want
14:47 - to I want if if I say index Plus+ I'm
14:51 - going to go one past um the one that was
14:54 - actually the one that I wanted to pick
14:56 - if that makes any sense so I've got to
14:58 - very quickly just say index minus minus
15:00 - let me talk you through that right in
15:01 - the scenario where I just have 0.9 is
15:04 - the probability the first of index zero
15:05 - is 09 so I pick a random number I pick
15:08 - 08 I say r equal 8 minus .9 so that's
15:13 - negative .1 then I say index plus plus
15:15 - so I go to one and I go back to loop I
15:17 - don't loop again because I'm now below
15:19 - zero so I didn't I don't want to pick
15:21 - one I want to pick zero so going up is
15:23 - just if I'm continuing but if I'm not
15:25 - continuing I've got to back up one so
15:27 - this should work
15:29 - I hope um and so I'm going to hit
15:32 - refresh here and I'm going to say pick
15:33 - one
15:35 - fruits and I got mango and I got mango
15:39 - and I got melon and I got Cherry like
15:41 - cherry and I got melon I'm G to get
15:43 - melon most of the time right and so what
15:46 - I could do right now just to sort of
15:47 - verify that this is working I am going
15:50 - to say I'm going to write a little Loop
15:53 - here for VAR J equals z I don't know I I
15:57 - can use I again uh I equal 0 I is less
16:00 - than 100 i++ and I'm going to say VAR
16:04 - fruit equals pick one fruits and I'm
16:08 - going to say I'm going to do VAR melon
16:12 - count and if
16:15 - fruit uh fruit do what was it name
16:19 - fruit. name equals
16:23 - melon melon count actually you know what
16:26 - I'm just going to do that's fine I I
16:29 - something I could do is I could actually
16:30 - just create a count fruit. count Plus+
16:34 - so I'm going to give all these um while
16:36 - I'm over here I'm also going to say
16:40 - fruits index I'm going to give them all
16:42 - a count of zero so I'm going to count
16:44 - how many times they've picked and if
16:47 - this is correct doing it 100 is a small
16:49 - sample size we should see that they're
16:52 - picked proportionally to their
16:53 - probability so let's take a look at that
16:57 - let's run it and let's look at fruit
17:00 - so fruits the first one is mango which
17:03 - was picked 30 times at a probability of
17:05 - 29 that makes sense blueberry was picked
17:08 - 10 times you know it probability was 17
17:11 - Cherry was picked seven its probability
17:13 - was
17:14 - 5% uh melons picked 47 so this is this
17:17 - to me is working uh obviously with just
17:20 - picking it a 100 times it's not going to
17:22 - map so perfectly you know I would
17:24 - suspect if I made this 100,000 then
17:27 - those probabilities are going to over
17:28 - time going to even out and be the counts
17:30 - are going to be much closer to the
17:31 - probabilities okay so hopefully you have
17:34 - enjoyed this particular video which is
17:36 - just about how to pick elements from an
17:38 - array with different probabilities uh
17:42 - and this might uh work in a and oh what
17:47 - the nice thing about this particular
17:48 - algorithm is two things one is I didn't
17:50 - have to create a separate array with
17:53 - lots of duplicate versions of all these
17:54 - objects in it and I didn't have to do
17:56 - this thing where I have to pick random
17:57 - numbers multiple times and hope that one
17:59 - qualifies and it could get stuck in an
18:01 - infinite Loop this is going to happen
18:03 - every single time this is going to
18:06 - always uh pick and return a value you
18:09 - know sometimes it's going to have to run
18:10 - through this Loop a few times sometimes
18:11 - just once but it's going to this is this
18:13 - is a pretty efficient and fast algorithm
18:15 - for doing this okay so what did I miss
18:17 - what questions do you have did you apply
18:19 - this in something uh I'm going to apply
18:20 - this in something in just a moment so if
18:23 - if you look at this video's description
18:24 - there's a link to a video where I uh
18:27 - program a solution to the traveling
18:29 - salesperson problem solution is a little
18:31 - bit strong I don't know if it's really
18:32 - going to be a solution an attempt at a
18:34 - solution to the traveling salesperson
18:36 - problem uh in uh JavaScript with a
18:39 - genetic algorithm so thanks for watching
18:41 - I will see you in another video goodbye
18:49 - [Music]