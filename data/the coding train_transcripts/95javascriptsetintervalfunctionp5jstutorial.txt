00:02 - hello in this video I'm here and I'm
00:05 - planning to look at the set interval
00:08 - function in JavaScript the set interval
00:10 - function is a feature of native
00:12 - JavaScript it exists for you in the
00:14 - browser that you can just use it without
00:16 - any other JavaScript library whatsoever
00:18 - however I'm going to demonstrate set
00:19 - interval in the context of uh using the
00:22 - also the p5js JavaScript framework um so
00:25 - let's review for a moment uh in my
00:28 - previous video I looked at the function
00:29 - called set timeout the function called
00:32 - set timeout was one where you would you
00:34 - would give the uh you would give you
00:37 - would I'm going to keep going sometimes
00:39 - I would start over I'm just going to
00:40 - keep going um uh you would give that
00:43 - function two arguments one ARG the first
00:46 - argument is the name of another function
00:48 - uh and something like a function called
00:50 - rainbow and the second argument is a
00:52 - Time the time at which you want that
00:54 - first thing the rainbow function to be
00:56 - executed so this would result in this
00:58 - function rainbow happening 2,000
01:00 - milliseconds or 2 seconds later so the
01:03 - easy thing here is that okay well learn
01:06 - set timeout so why don't you learn now
01:09 - set interval set interval is actually
01:13 - basically exactly the same thing the
01:15 - difference is instead of executing
01:17 - rainbow once and only once 2,000
01:20 - milliseconds later set interval will
01:23 - execute the rainbow function over and
01:25 - over again every two seconds every two
01:28 - seconds rainbow one two rainbow one two
01:32 - rainbow one two that sort of thing so
01:34 - let's think about a context where that
01:37 - might be useful so for example and I'm
01:39 - going to um I'm going to save this as I
01:41 - should have done this uh set interval
01:44 - and I'm going to remove my code that I
01:46 - had from the previous example uh just to
01:49 - sort of start over from scratch again
01:51 - and I'm going to run this code so let's
01:52 - just say here's a scenario that might be
01:54 - useful let's say you have some sort of
01:56 - interactive experience you've built for
01:58 - the web there's an animation there's a
01:59 - canvas there might be a lot of other
02:00 - stuff and you want to have separately
02:02 - from that a Dom element a div a
02:04 - paragraph something that has a timer
02:06 - counting down or something that's
02:08 - pulsing uh every few seconds with some
02:11 - with a changing color or something like
02:13 - that so this is a nice place so I feel
02:15 - like set interval is useful if you want
02:18 - to animate a Dom element now I'm feeling
02:21 - a little I got a little pit in my
02:23 - stomach here because there's also
02:24 - something called request animation frame
02:26 - which in a lot of contexts in particular
02:29 - in an anim context becomes an important
02:31 - thing to know and look at and I will get
02:33 - to that I will I will consider that as a
02:35 - possibility but right now let's just
02:37 - stay and assume that there's never a
02:39 - problem set interval and we can use it
02:40 - for the kinds of things that I'm going
02:41 - to demonstrate to you in this video so
02:44 - let's say for example that in uh I want
02:47 - to create a I'm going to just call it uh
02:49 - a timer for lack of a better idea uh and
02:52 - I'm going to say timer equals create p
02:55 - and I'm going to put uh just the text
02:57 - timer in it and I'm going to run this
02:59 - and you can see that now underneath my
03:01 - canvas I have a paragraph element with
03:03 - the word timer in it now one thing you
03:06 - that you are probably aware of is that
03:08 - remember draw is this thing that's
03:10 - automatically looping all over again
03:12 - over and over again and by the way draw
03:14 - I bet behind the scenes uses something
03:15 - called request animation frame just a
03:17 - suspicion I have um so I could say
03:20 - timer. HTML and one of the variables you
03:23 - get for free this is a P5 variable set
03:26 - interval is part of native JavaScript
03:28 - frame count this variable that I'm using
03:29 - right here is part of P5 if I add that
03:33 - in there what I'm seeing in that
03:35 - particular Dom element is the number of
03:38 - times the draw has repeated the frame
03:40 - count so you can see that there is this
03:42 - element of set interval happening of
03:44 - this repeating action that's the draw
03:46 - Loop but what if I want my program to do
03:49 - other things based on time separate from
03:52 - this 60 or 30 or whatever it is frames
03:54 - per second animation this is where set
03:56 - interval comes in and is useful so let's
04:00 - say what I want to do is I want to say
04:04 - set
04:06 - interval and I'm going to make up a
04:08 - function called time it and I'm going to
04:10 - say function time it and that is where
04:14 - I'm going to say timer. HTML what so
04:17 - what is the content I want to put in
04:19 - that HTML element I let's make up
04:22 - another variable count counter equals
04:27 - zero let's update that d element to
04:30 - include the counter variable and let's
04:32 - increase counter by one so set interval
04:36 - and let's do that every 500 milliseconds
04:38 - so half a
04:40 - second so you can see now this even
04:44 - though there are two things going on
04:46 - there are sort of two looping threads
04:48 - the actual canvas animation is just
04:51 - managed by P5 and the draw function and
04:53 - this particular Dom element is managed
04:56 - by me and my own use of set interval
05:01 - so there's a there's a there's a there's
05:03 - a few roads down here that I might like
05:06 - to go on like first of all you might
05:08 - think okay what happens if I want that
05:10 - Dom element to interact going on the
05:12 - canvas I could reset the counter
05:13 - variable if I click on something there's
05:15 - lots of possibilities
05:16 - here uh but let's start with something
05:20 - that I think is probably the most useful
05:22 - which is what if I want to start and
05:24 - stop this interval based on something
05:27 - else so one thing that's really uh
05:29 - important about working with set
05:31 - interval is the function not only starts
05:33 - this interval going but actually creates
05:36 - an a JavaScript object that stores a lot
05:38 - of information related to the interval
05:41 - so I'm going to
05:42 - add a variable called interval and a
05:46 - global variable and in setup I'm going
05:48 - to set interval equal to set interval so
05:51 - now when this function is executed I
05:53 - have a reference to that interval so if
05:55 - I ever wanted to stop it for example
06:00 - mous pressed I can say clear
06:04 - interval interval so clear interval by
06:07 - the way this is also a function part of
06:09 - native JavaScript and what this function
06:12 - allows you to do is clear the interval
06:14 - meaning stop it so uh so here we go and
06:18 - you can see that that interval is going
06:20 - one two it's very hard for you to see
06:22 - because it's very tiny but I can zoom in
06:24 - and see 10 11 12 13 14 now when I click
06:27 - the mouse I've cleared that interval and
06:30 - it stopped at 19 so how would I click
06:34 - the mouse again and have it keep going I
06:36 - think this would a perfect exercise for
06:38 - you to do if you're trying to practice
06:40 - this stuff so what I might suggest let
06:41 - me get you a few more U steps along the
06:44 - way there I'm G to I'm going to create a
06:49 - button and I'm going to say start
06:52 - timer and I'm going to say button. mous
06:58 - pressed and I'll say uh do uh you know
07:02 - start timer and in start
07:09 - timer I'm going to say interval equals
07:11 - set interval and maybe I'll make another
07:14 - function called stop
07:17 - timer clear interval Set uh clear
07:20 - interval the interval now you can sort
07:23 - of see here now if I'm running this oh
07:26 - it already I already started it right so
07:28 - if I'm running this this you can see now
07:31 - I've made this extra button and that
07:34 - button has a function attached to it
07:36 - when I click on it that actually makes
07:38 - the interval so when I click on it you
07:40 - can see that that now the timer has
07:42 - started and it's counting up so right so
07:45 - there's a there's like a bunch of
07:47 - callbacks happening here because Mouse
07:49 - pressed when you press on it triggers
07:51 - start timer which triggers set interval
07:54 - which triggers time it so when do we
07:56 - call stop timer so the easiest thing for
07:59 - you to probably do right now would be to
08:01 - create a second button which is stop
08:03 - timer and then the call back for that
08:06 - second button Mouse press would be stop
08:08 - timer but I think an interesting thing
08:10 - that you might do is what if there was
08:12 - only one
08:13 - button right what if there was only one
08:16 - button I just call this do
08:19 - Tim do timer and what I'm going to do is
08:23 - I'm going to say button. HTML is
08:26 - stoptimer so that what this is what's
08:29 - happening here is now when I look at
08:32 - this when I click Start timer it's going
08:35 - to go here click start timer it's going
08:37 - to go here start the interval and then
08:39 - change the H HTML to stop timer so you
08:42 - can see the timer is going and the
08:43 - button text is actually now changed to
08:45 - stop timer so the next time I press the
08:47 - button I want to clear the interval and
08:49 - change the timer back to start timer
08:52 - that text so I need some sort of Boolean
08:54 - variable or some sort of way of checking
08:56 - if the interval is going or not and if
08:58 - it is going I should clear it and change
08:59 - the che text to stop start if it wait if
09:03 - it is going I need to clear it so that
09:05 - it stops and then change the text to
09:07 - start if it isn't going I need to start
09:10 - it and then change the text to be
09:12 - stopped because that would be the next
09:13 - thing so I'm going to leave that as kind
09:15 - of an open question uh I will gladly in
09:17 - the description of this video where I
09:19 - link to the code that goes with this
09:20 - video I will gladly put the solution in
09:22 - there and if you're following along and
09:24 - you go and you go follow the links it's
09:26 - not there right in the comments of this
09:28 - video because that just means I forgot
09:29 - and we'll add it right in so hopefully
09:31 - this gives you a sense of of of how set
09:34 - interval works and how it might be
09:36 - useful to you but I thought of one more
09:38 - thing that is going to lead me to
09:40 - another video that I don't know whether
09:42 - or not I'll make it today but it's an
09:43 - important question technical difficulty
09:45 - but I'm back and the point that I wanted
09:48 - to make is here we are with this very
09:50 - simple scenario of a
09:53 - single Dom
09:55 - element uh Sor sorry a single Dom
09:58 - element and animating uh with counting
10:01 - up every 500 milliseconds so what if I
10:04 - wanted to make
10:12 - another what if I wanted to make another
10:15 - Dom element called timer
10:20 - 2 and what I want is I want this one to
10:24 - also animate or also count up but maybe
10:27 - at a different rate now certainly I
10:30 - could then have two counter variables
10:34 - and I could also have uh in addition to
10:37 - two counter variables I could have two
10:39 - functions I could have time at one and
10:40 - time at two and then I could call set
10:42 - interval time at one at 500 set interval
10:44 - time at two at 1500 but there must be a
10:47 - way to just generically say this idea of
10:52 - having a Dom element change over time
10:55 - based on set interval I should be able
10:56 - to do that in a generic Way by calling a
10:58 - function like animate Dom element with
11:01 - this value at this range and to do that
11:05 - you need something called a JavaScript
11:08 - closure so is a topic I've been
11:10 - threatening to cover at some point in a
11:13 - video and I slowly been wrapping my head
11:15 - around this like weird strange concept
11:18 - that is actually quite elegant and
11:20 - simple in the end but is a bit confusing
11:22 - to get used to this idea um so that's
11:24 - something that I will cover in uh the
11:27 - next video I guess U because I think in
11:29 - my idea of making a video about using uh
11:32 - set timeout to play a Melody um this
11:34 - idea of a closure excuse me will also be
11:36 - relevant in that okay so thanks for
11:38 - watching and I'll catch you in the next
11:40 - one