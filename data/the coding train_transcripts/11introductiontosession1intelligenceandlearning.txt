00:00 - Okay, so maybe you watched the first the introduction to this
00:04 - larger Playlist the "Intelligence and Learning" set of videos
00:08 - But now this video is an introduction to just the first session and the first session is about
00:15 - Search and graph systems now. Why why why should that be the first session?
00:20 - I don't know might be a bad idea first of all I wanted a warm-up.
00:24 - So I wanted something to kind of get us thinking about algorithms
00:27 - Data and
00:29 - things that the intelligence, or that solve problems in an intelligent way, so
00:33 - And also there are some very you know some ways common unsolved problems of computer science like the traveling Salesperson problem
00:40 - which is one of the topics of this week's that could could use of
00:45 - new newly invented
00:47 - Machine learning system to solve it. You know I don't have my prop
00:51 - if I had my book
00:53 - Artificial Intelligence: A Modern Approach [Stuart Russell and Peter Norvig]
00:57 - Books yes, and I hope I got that right um you would see a lot of. I don't got my pen anymore.
01:04 - continuity error
01:05 - You would notice
01:07 - that
01:08 - There's a lot of algorithms in these books about search because one of the first one of the kinds of problems that
01:14 - artificial intelligence algorithms that intelligent algorithms
01:18 - often need to solve in computer science in
01:22 - applications
01:23 - Interactivity all the sort of kind of projects you might be thinking of making is
01:28 - there's a problem. I need to figure out the answer to this problem, but there are so many possible answers
01:34 - I couldn't possibly check every single one and so search refers to the idea of
01:41 - searching for the answer in A
01:44 - sea of possibilities now one way is to search every single possibility I mentioned the traveling salesperson problem. Let's talk about that for a second.
01:54 - So, I] want to talk about
01:58 - search and graph system. This is kind of loosely the topic for right now
02:05 - There goes that eraser. Oh my God! Sorry everybody the erasers okay! Everything's fine! OK so the traveling salesperson
02:14 - says oh, I have videos on this already, so you can go watch those there are some number of cities and
02:22 - let's say there are five and
02:24 - that a
02:26 - sales person
02:27 - needs to visit all of the cities in the shortest amount of time or picking it with the shortest distance in any order
02:33 - Starting with anyone ending with anyone, so I might be able to eyeball this and say like okay?
02:38 - Well, maybe that's the path that's probably not the path. It's probably more like that
02:42 - whatever the point is we could have a computer algorithms figure this out let's just check every single possibility, so
02:47 - first let's pick a city how many cities should I pick how many cities click? Oh? There's five okay?
02:53 - Now if I pick if there's five possibilities now once I picked one city. How many possibilities are there left? Four?
03:00 - I'm how many are left three now
03:02 - We're left to and we left one so five factorial 20 60 120 120 possibilities for five cities
03:09 - And this is 5 factorial, so this is a kind of problem. That doesn't seem like such a big deal
03:14 - but if I just have 10 cities
03:19 - What's 10 factorial no the computer could probably crunch through that number? What about 50 cities?
03:29 - Okay, that's just three with 64 zeros after it
03:34 - It's like a really really really big number. I mean, what's the listing the
03:40 - age of the known universe
03:45 - If you 13.6 times 2 billion years that other numbers a lot more than that
03:49 - So and you know even if we could do like a million per second or something. It's trust me
03:54 - We're going to have some issues. I'll talk about it. So what are some solutions to this next week
03:58 - We're going to look at genetic algorithms. Which is a technique for
04:01 - trying to optimally find a solution, and there are ways we might say something known as a greedy algorithm. I
04:08 - went off on a tangent there! We'll see if it is a problem and edit this part out
04:11 - but a greedy algorithm which might say like
04:14 - I don't know
04:14 - Let's just pick a city and then pick the closest one they took the closest one to that
04:18 - Trying to get us a pretty good answer
04:20 - Even if it's not the exact optimal answer... the point of what I'm saying is this is the application that I want to look at
04:25 - In this first week so the things that we need to learn about to be able to do things and work with
04:32 - problems like the Traveling Salesperson are:
04:35 - number one
04:36 - graph systems and
04:40 - number two
04:43 - search algorithms
04:45 - Okay, now. What is a graph system? A graph system
04:52 - is something ...
04:54 - a system that is made up of two elements
04:57 - node and an edge
05:00 - We can name these other things, but I'm going to call them the nodes and edges.
05:04 - One of the next videos that you'll watch if you follow this playlist will be on something called a binary search tree a binary tree
05:11 - Is a graph system where every node is connected to two
05:16 - children nodes a left and a right and those are connected to two and those are connected to two
05:24 - ETc, Etc, Etc, so this is one example of a graph system. So what you'll notice is
05:30 - We need some sort of Data structure to store
05:34 - what are all the nodes and what are all the edges and this depends on the problem a
05:38 - Common example also the graph system similar to the traveling Salesperson problem in a subway map
05:45 - So let's say you to get from this station to this station.
05:48 - Well there are all these other stations and roots and maybe they all are interconnected
05:52 - And there's many ways to get on this bus subway map makes no sense there's many ways to get there
05:58 - But they all take different amounts of time like maybe I could go from here to here to here to here to here
06:05 - Which is, hold on, let me redraw. Let me redraw this let me just draw it like this
06:11 - So let's say I want to get from here to here
06:14 - We could see like oh, I'm going to get from in one step to here and it's going to a two-step
06:18 - I want to take two trains to get to hear what if this train takes
06:22 - 60 minutes this train takes 30 minutes and each one of these is 65 to 60 to the 61 in this pic 6
06:29 - So even though I have to go on 1 2 3 4 or trains. This is optimal this will get me there faster
06:36 - This is known as a weighted graph system.
06:41 - So the graph system is a bunch of nodes those nodes might have value so a binary search tree
06:46 - You can use to organize
06:47 - An alphabetical order a lot of words or numbers and other variety of things and you could think of this...
06:53 - But the edges here don't necessarily have weights at least in a standard binary tree, but here they do. Now. There's an algorithm for
07:01 - Searching for that optmal path in this scenario in a weighted graph and it's called
07:06 - Dijkstra's Algorithm
07:09 - there's also another algorithm called A* and
07:14 - ETc ETc. So these are different examples binary search algorithm
07:19 - Dijkstra's Algorithm, A*, and the one that I'm actually doing today
07:22 - But that doesn't really matter to you because you're to watch these videos in sequence. I'll talk about a second
07:27 - It's something called Breadth first search
07:29 - So breadth-first search is a good algorithm for finding the shortest path between two nodes in a graph that
07:36 - Aren't weighted so the shortest number of steps and I'll talk about the example that I'm gonna use for that in a bit
07:41 - so this week is all about learning how to program a graph system and
07:45 - learning about different algorithms to efficiently solve a
07:50 - some type of problem associated with the graph system like the shortest path and you'll and so now
07:56 - Once you stop watching this video
07:57 - There's going to be a bunch of others in this playlist that I've made at all different times under different circumstances
08:02 - So this is experiment that I'm trying to put together a sequence course with all different coding challenges
08:07 - So you'll see there's a binary search tree example there will be a breadth-first search example
08:13 - There's there is no at the time of this recording
08:15 - but there might be at the time as you're watching a Dijkstra's algorithm
08:18 - A*. So, you'll see, and I'm going to be filling stuff in as time goes on
08:22 - Once you get to the end of all of those if you choose to watch them all I'll make another video that kind of wraps
08:28 - up and shows you a bunch of examples all together and
08:32 - gives you some ideas for some homework exercises that you might do that
08:35 - you could share with me in the comments
08:36 - And that sort of thing
08:37 - If you want to participate in a slack channel that I have that's going on for this course you can sign [up]
08:43 - Patreon.com coding train is a crowdfunding thing if you want to participate in this Slack channel
08:47 - but you can also always hit me up on Twitter at shiffman
08:51 - In the comments here which I do read. Okay.
08:53 - So that's what's going to happen next and I will see you if you decide [to] [come] back in a wrap-up video where I
09:02 - Kind of summarize bunch of this tough and give you some exercise ideas great, so I'm going to go and actually record a video
09:08 - Right now on breadth-first search, but you might watch some of these other ones first. Thanks very much.
09:14 - OOPS! I've always it back at the end of my videos when you think they're over so one thing
09:18 - I want to mention that if you're about to watch
09:20 - Some of these the rest of the videos in [this] sequence first of all you should you know if you don't know...
09:26 - Javascript programming in Pjs. You might want to take a look at some of my intro people have shows videos
09:31 - but more importantly than that if you have experience with
09:34 - Two things that [I'm] using in these videos is one is this a concept of prototype as a way of attaching
09:42 - Methods to an object in Javascript as well as this idea of an associative array, or hash table, and how that works in Javascript.
09:49 - So those two things or might be videos that you might wanna go and watch first before you start looking at some of the graph
09:53 - systems and different search algorithms, okay, just in case that matters to you, you know
09:58 - But you don't really have to know very much to follow this up along if you know a bit about
10:02 - Programming you've tried you watched them my other videos. Hopefully you'll be okay. If not let me know and I'll see what I can do okay.
10:13 - See you soon!