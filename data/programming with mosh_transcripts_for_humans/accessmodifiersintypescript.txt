With timestamps:

00:01 - all right so here I've created a point
00:03 - object with an initial coordinate now
00:06 - what do you thin our program you want to
00:08 - have this rule such that when we
00:09 - initialize a point object we should not
00:12 - be able to change the X or Y values with
00:16 - this implementation I can always come
00:19 - here and set point dot X to a different
00:21 - value how can we avoid this sometimes we
00:25 - need this feature in our programs
00:26 - because it will make them more
00:27 - predictable it reduces the chance for
00:30 - bugs so how should we prevent the
00:33 - coordinate of this point object to
00:34 - change after it's initialized well in
00:37 - object-oriented languages we have this
00:40 - concept called
00:41 - access modifiers an access modifier is
00:44 - basically a keyword that we can apply to
00:47 - a member of a class to control its
00:49 - access from the outside so in typescript
00:52 - we have three access modifiers public
00:55 - private and protected public and private
00:58 - are the most common and by default all
01:00 - members are public let me show you what
01:03 - I mean so here in our point class we
01:06 - have three members right we have two
01:08 - fields and one method so let me create a
01:13 - pointer object and type point dot look
01:17 - these are the members of the class and
01:19 - because they are all public we can
01:21 - access them here and that's why we can
01:23 - see them in the intelligence however I
01:26 - can go here and prefix this field with
01:31 - the private key word now once we create
01:35 - this point object if I type point dot
01:38 - look X is not in the list it's not
01:42 - accessible it's private so if we try to
01:44 - set point at X 2 3 look we have a
01:47 - compilation error in typescript it says
01:50 - property X is private and only
01:53 - accessible within class point now with
01:56 - this technique I can go here and apply
02:00 - the private keyword on the Y field as
02:03 - well and now once I initialize a point
02:07 - object I can no longer change is quite
02:10 - innate I can only call the draw method
02:13 - ok so this is why we
02:15 - access modifiers to control access to
02:17 - certain members of a class from the
02:20 - outside you can apply these access
02:22 - modifiers on field properties and
02:24 - methods now by default if you don't set
02:29 - an access modifier is assumed to be
02:31 - public so here the draw method as you
02:34 - know is public I can also add the public
02:37 - keyword here but this is redundant it's
02:39 - just making my code noisy so you don't
02:42 - really need to add this it's better to
02:44 - keep your code short and clean and use
02:46 - the private access modifier only when
02:48 - you need to next I'm gonna show you one
02:51 - of my favorite features of typescript
02:52 - around access modifiers hi thank you for
02:58 - watching my angular tutorial if you
03:00 - enjoyed this video please like it and
03:02 - share it with others also you can
03:04 - subscribe to my channel for free new
03:06 - videos every week this video is part of
03:09 - my complete angular course with almost
03:12 - 30 hours of high quality content where
03:15 - you learn everything about angular from
03:17 - the basic to the advanced topics all in
03:19 - one course so you don't have to jump
03:21 - from one tutorial to another in case
03:23 - you're interested
03:24 - you can get this course with a big
03:26 - discount using the link in the video
03:28 - description and if not that's perfectly
03:30 - fine continue watching as the next
03:32 - section is coming up

Cleaned transcript:

all right so here I've created a point object with an initial coordinate now what do you thin our program you want to have this rule such that when we initialize a point object we should not be able to change the X or Y values with this implementation I can always come here and set point dot X to a different value how can we avoid this sometimes we need this feature in our programs because it will make them more predictable it reduces the chance for bugs so how should we prevent the coordinate of this point object to change after it's initialized well in objectoriented languages we have this concept called access modifiers an access modifier is basically a keyword that we can apply to a member of a class to control its access from the outside so in typescript we have three access modifiers public private and protected public and private are the most common and by default all members are public let me show you what I mean so here in our point class we have three members right we have two fields and one method so let me create a pointer object and type point dot look these are the members of the class and because they are all public we can access them here and that's why we can see them in the intelligence however I can go here and prefix this field with the private key word now once we create this point object if I type point dot look X is not in the list it's not accessible it's private so if we try to set point at X 2 3 look we have a compilation error in typescript it says property X is private and only accessible within class point now with this technique I can go here and apply the private keyword on the Y field as well and now once I initialize a point object I can no longer change is quite innate I can only call the draw method ok so this is why we access modifiers to control access to certain members of a class from the outside you can apply these access modifiers on field properties and methods now by default if you don't set an access modifier is assumed to be public so here the draw method as you know is public I can also add the public keyword here but this is redundant it's just making my code noisy so you don't really need to add this it's better to keep your code short and clean and use the private access modifier only when you need to next I'm gonna show you one of my favorite features of typescript around access modifiers hi thank you for watching my angular tutorial if you enjoyed this video please like it and share it with others also you can subscribe to my channel for free new videos every week this video is part of my complete angular course with almost 30 hours of high quality content where you learn everything about angular from the basic to the advanced topics all in one course so you don't have to jump from one tutorial to another in case you're interested you can get this course with a big discount using the link in the video description and if not that's perfectly fine continue watching as the next section is coming up
