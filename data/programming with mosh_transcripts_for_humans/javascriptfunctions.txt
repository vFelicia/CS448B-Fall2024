With timestamps:

00:02 - in the category of reference types you
00:05 - have learned about objects and arrays
00:07 - now let's take a look at functions
00:09 - functions are one of the fundamental
00:12 - building blocks in JavaScript a function
00:15 - is basically a set of statements that
00:17 - performs a task or calculates a value
00:20 - let me show you a couple of examples so
00:23 - I'm going to declare a function using
00:25 - the function keyword now we need to give
00:28 - it a name let's call that greet after
00:30 - that we need to add parentheses that's
00:33 - part of the syntax for declaring
00:34 - functions and then curly braces now what
00:38 - we have here inside the curly braces is
00:41 - what we refer to as the body of this
00:44 - function and this is where we add all
00:46 - these statements to define some kind of
00:48 - logic in our application for example the
00:52 - logic for this function should be to
00:54 - display a message on the console so here
00:57 - we can add console the log hello world
01:02 - now note that here we have a statement
01:06 - so we terminated with a semicolon but
01:09 - when we are declaring a function we
01:11 - don't need to add semicolon at the end
01:13 - because we are not declaring it like a
01:15 - variable like this okay this is a
01:19 - function declaration right so now we
01:23 - have a function we can call this
01:25 - function like this so we add the name of
01:28 - the function and parentheses again and
01:30 - then semicolon to indicate that this is
01:34 - a statement save the changes now we have
01:37 - hello world on the console but that's
01:39 - pretty boring what would we do this let
01:41 - me show you how to make this more
01:42 - interesting our functions can have
01:44 - inputs and these inputs can change how
01:48 - the function behaves so let's say
01:51 - instead of displaying hello world we
01:53 - want to display the name of the person
01:56 - here like hello John so we can add a
02:00 - variable here in between parentheses we
02:04 - refer to this variable as a parameter
02:06 - so this greet function has one parameter
02:09 - called name and essentially name is like
02:12 - a variable that is only meaningful
02:15 - inside
02:16 - dysfunction so inside of this function
02:18 - we can work with this name variable but
02:20 - it will not be accessible outside of
02:23 - this function the name is an input to
02:26 - this function so instead of displaying
02:28 - hello world we can display hello
02:31 - then add a plus here to concatenate two
02:34 - strings so we can add name after now
02:39 - when calling the great function we need
02:42 - to pass a value for the name variable or
02:45 - name parameter more accurately so we can
02:49 - pass John here now we refer to this as
02:52 - an argument so John is an argument to
02:56 - the greet function a name is a parameter
03:00 - of the greet function it's one of the
03:02 - things that a lot of programmers don't
03:04 - know they don't know the difference
03:05 - between a parameter and an argument so a
03:08 - parameter is what we have here at the
03:10 - time of declaration but the argument is
03:13 - the actual value with supply for that
03:16 - parameter okay
03:17 - now let's save the changes so we have
03:20 - hello John now we can reuse this
03:23 - function but with a different input so
03:26 - we can copy this line here and change on
03:30 - to Mary save the changes now we have two
03:33 - different messages on the console now a
03:36 - function can have multiple parameters so
03:39 - here we can separate parameters using a
03:41 - comma so let's add another parameter
03:44 - like last name now we can change our
03:48 - console not blog add a space here and
03:52 - then display the last name now when
03:57 - calling this greet function we should
03:59 - pass another argument for the last name
04:01 - right but let's see what happens if we
04:03 - don't do this so I'm gonna save the
04:05 - changes see what we got
04:08 - hello John undefined because as I told
04:11 - you before the default value of
04:13 - variables in JavaScript is undefined so
04:16 - because we did not pass a value for the
04:19 - last name by default it's undefined so
04:23 - I'm gonna pass another argument here we
04:26 - separate them using a comma John Smith
04:30 - and we don't need the second call to the
04:31 - greet function save the changes now we
04:35 - have hello John Smith
04:40 - hi guys thank you for watching my
04:43 - javascript tutorial this tutorial is
04:45 - part of my JavaScript course where you
04:47 - learn all the essential JavaScript
04:49 - features that every web and mobile
04:52 - application developer must know if
04:54 - you're an absolute beginner or have some
04:56 - experience in JavaScript and are looking
04:58 - for a fun and in-depth course that
05:00 - teaches you the fundamentals of
05:01 - JavaScript this course is for you this
05:04 - course is also packed with tons of
05:06 - exercises that help you master what you
05:08 - learned in the course in fact many of
05:10 - these exercises are questions that come
05:12 - up in technical programming interviews
05:14 - so if you're pursuing a job as a
05:17 - front-end or a back-end developer or if
05:20 - you simply want to have a more in-depth
05:22 - understanding of JavaScript I highly
05:24 - encourage you to enroll in the course
05:26 - for a limited time you can get this
05:28 - course with a discount using the link in
05:30 - the video description click the link to
05:32 - find out more about the course and
05:33 - enroll

Cleaned transcript:

in the category of reference types you have learned about objects and arrays now let's take a look at functions functions are one of the fundamental building blocks in JavaScript a function is basically a set of statements that performs a task or calculates a value let me show you a couple of examples so I'm going to declare a function using the function keyword now we need to give it a name let's call that greet after that we need to add parentheses that's part of the syntax for declaring functions and then curly braces now what we have here inside the curly braces is what we refer to as the body of this function and this is where we add all these statements to define some kind of logic in our application for example the logic for this function should be to display a message on the console so here we can add console the log hello world now note that here we have a statement so we terminated with a semicolon but when we are declaring a function we don't need to add semicolon at the end because we are not declaring it like a variable like this okay this is a function declaration right so now we have a function we can call this function like this so we add the name of the function and parentheses again and then semicolon to indicate that this is a statement save the changes now we have hello world on the console but that's pretty boring what would we do this let me show you how to make this more interesting our functions can have inputs and these inputs can change how the function behaves so let's say instead of displaying hello world we want to display the name of the person here like hello John so we can add a variable here in between parentheses we refer to this variable as a parameter so this greet function has one parameter called name and essentially name is like a variable that is only meaningful inside dysfunction so inside of this function we can work with this name variable but it will not be accessible outside of this function the name is an input to this function so instead of displaying hello world we can display hello then add a plus here to concatenate two strings so we can add name after now when calling the great function we need to pass a value for the name variable or name parameter more accurately so we can pass John here now we refer to this as an argument so John is an argument to the greet function a name is a parameter of the greet function it's one of the things that a lot of programmers don't know they don't know the difference between a parameter and an argument so a parameter is what we have here at the time of declaration but the argument is the actual value with supply for that parameter okay now let's save the changes so we have hello John now we can reuse this function but with a different input so we can copy this line here and change on to Mary save the changes now we have two different messages on the console now a function can have multiple parameters so here we can separate parameters using a comma so let's add another parameter like last name now we can change our console not blog add a space here and then display the last name now when calling this greet function we should pass another argument for the last name right but let's see what happens if we don't do this so I'm gonna save the changes see what we got hello John undefined because as I told you before the default value of variables in JavaScript is undefined so because we did not pass a value for the last name by default it's undefined so I'm gonna pass another argument here we separate them using a comma John Smith and we don't need the second call to the greet function save the changes now we have hello John Smith hi guys thank you for watching my javascript tutorial this tutorial is part of my JavaScript course where you learn all the essential JavaScript features that every web and mobile application developer must know if you're an absolute beginner or have some experience in JavaScript and are looking for a fun and indepth course that teaches you the fundamentals of JavaScript this course is for you this course is also packed with tons of exercises that help you master what you learned in the course in fact many of these exercises are questions that come up in technical programming interviews so if you're pursuing a job as a frontend or a backend developer or if you simply want to have a more indepth understanding of JavaScript I highly encourage you to enroll in the course for a limited time you can get this course with a discount using the link in the video description click the link to find out more about the course and enroll
