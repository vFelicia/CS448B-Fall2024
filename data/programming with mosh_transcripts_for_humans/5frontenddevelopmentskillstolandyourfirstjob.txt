With timestamps:

00:02 - this is the second part of my web
00:03 - development series
00:04 - in the first episode we talked about
00:06 - some of the facts and challenges about
00:08 - web development
00:09 - in this episode we're going to talk
00:11 - about the five essential skills you need
00:13 - to land your first front-end development
00:15 - job i'm going to give you a detailed
00:17 - explanation of various languages and
00:19 - tools you need to know
00:20 - as well as a proper learning path and
00:22 - suggestions on how long it will take you
00:24 - to learn these
00:26 - [Music]
00:29 - hi my name is mash hamadani and i've
00:31 - taught millions of people
00:32 - how to code and how to become
00:34 - professional software engineers
00:36 - through this channel and my coding
00:38 - school codewithmosh.com
00:39 - if you're new here be sure to subscribe
00:42 - as i upload new videos
00:43 - all the time there's so many languages
00:45 - and tools out there
00:46 - html css javascript typescript
00:50 - java c-sharp c plus php python
00:53 - react jesus if you have been confused
00:56 - and feel overwhelmed
00:57 - you are not alone trust me so in this
00:59 - video i'm gonna give you a clear
01:01 - and solid learning path so you spend
01:03 - your time on the things that matter the
01:05 - most
01:06 - one of the mistakes that a lot of
01:07 - beginners make is that they waste so
01:09 - much time
01:10 - jumping from one thing to another and
01:12 - they don't learn anything properly
01:14 - so in this video i'm gonna give you a
01:15 - summary of these languages and their
01:17 - purpose
01:18 - but i've also compiled a complete pdf
01:20 - that contains
01:21 - a detailed list of the stuff you need to
01:23 - learn the link is below this video
01:27 - so to become a front-end developer you
01:29 - need to start with html
01:31 - css and javascript these are the
01:33 - fundamental languages of front-end
01:35 - development
01:36 - we use html to structure our web pages
01:39 - we use css
01:40 - to make them beautiful and javascript to
01:42 - program them
01:43 - let me give you an analogy think of a
01:45 - building a building in the real world
01:47 - is like a web page on the internet it
01:49 - has a skeleton or structure
01:51 - it can have pretty walls windows and
01:54 - tiles
01:54 - and it can have certain functionality
01:57 - for example when we press the elevator
01:58 - button
01:59 - it comes to pick us up here's a real
02:01 - example
02:02 - let's say we want to build a website
02:04 - like twitter for each tweet
02:06 - we want to have a layout like this so
02:08 - first we use html to define
02:10 - all the building blocks of this layout
02:12 - what are the building blocks here
02:14 - an image some text indicating the user's
02:17 - twitter handle
02:18 - another block of text containing the
02:20 - message and three icons for commenting
02:22 - retweeting and liking the tweet we use
02:25 - html to add these building blocks to our
02:27 - web page
02:28 - then we use css to give it visual
02:30 - effects for example with css we can make
02:33 - the font bold
02:34 - we can make our image round we can add
02:36 - some padding around here
02:37 - we can change the color of these icons
02:39 - and define their look when we hover over
02:41 - them
02:42 - so css is all about aesthetics or visual
02:45 - effects
02:45 - and finally we use javascript to add
02:48 - functionality to this webpage
02:50 - to decide what should happen when the
02:51 - user clicks on any of these icons
02:54 - every webpage on the internet you have
02:55 - seen is built with these three languages
02:58 - so the better you learn and understand
03:00 - these languages and their features
03:02 - the better you will be at front-end
03:03 - development
03:06 - okay so that's all for the fundamentals
03:08 - what's next
03:09 - well building websites often includes a
03:12 - bunch of repetitive tasks
03:14 - this is where front-end frameworks and
03:16 - libraries come
03:17 - a framework or a library comes with a
03:19 - lot of code that we can reuse in our
03:21 - websites
03:22 - so they help us get the job done faster
03:24 - that's why
03:25 - a lot of companies these days use one of
03:27 - these popular frameworks
03:29 - like react angular or vue now more
03:32 - accurately
03:32 - react is not a framework it's a library
03:35 - the difference between a framework and a
03:37 - library is that a framework forces our
03:39 - application into a structure
03:41 - so all applications built with a
03:43 - framework like angular
03:44 - end up having a similar structure so as
03:47 - you move from one project to another
03:49 - you will see a lot of things are
03:50 - familiar libraries don't force our
03:53 - applications into a structure
03:54 - they just provide some code for us to
03:56 - reuse but subtle distinction aside
03:58 - all these tools serve the same purpose
04:01 - they help us build applications faster
04:03 - now you don't need to learn all of these
04:05 - to get started as you move jobs
04:07 - you may need to learn about the other
04:08 - tools out of these react
04:10 - is the most popular tool it's built by
04:13 - facebook and is used to build facebook
04:15 - and instagram
04:16 - so i would say go for react
04:20 - all right what's next version control
04:22 - systems we use version control systems
04:24 - to track our project history and work
04:27 - collaboratively with others
04:28 - that's why you will find it in almost
04:30 - every job description
04:32 - git is the most popular version control
04:34 - system in the world
04:36 - and is used in 70 of software
04:38 - development teams
04:39 - so just focus on git and don't worry
04:41 - about other version control systems
04:44 - alright what's next well css is kind of
04:46 - an old language and
04:47 - it has limitations so if you use it on a
04:50 - medium sized or a large website
04:52 - sooner or later your code starts to get
04:54 - pretty convoluted and becomes hard to
04:56 - maintain
04:57 - so every time you want to change
04:58 - something you end up breaking something
05:00 - else
05:01 - now you might wonder why css hasn't
05:03 - evolved well
05:04 - it has and is currently at version 3 but
05:07 - every time there is a new feature in css
05:09 - all existing browsers need to support
05:11 - that feature
05:12 - unfortunately this is a slow process so
05:15 - this is where
05:16 - css preprocessors come in
05:20 - a css preprocessor is a program or a
05:22 - tool
05:23 - that lets you generate css code from a
05:25 - different language that is
05:27 - better and more capable than css so
05:29 - instead of using the plain old css
05:32 - we use another language that looks very
05:34 - similar to css
05:35 - in fact it's almost identical but it has
05:37 - some extra features
05:39 - then we give our code to a css
05:41 - preprocessor so it gets converted to the
05:43 - plain
05:44 - old css code that all browsers can
05:46 - understand
05:47 - that's the purpose of css preprocessors
05:50 - there are many preprocessors out there
05:52 - like sas less and stylus to name a few
05:55 - but again you don't have to learn
05:56 - all of them to get a front-end
05:58 - development job because these are
05:59 - all similar tools that serve the same
06:02 - purpose
06:02 - they're all like screwdrivers
06:04 - manufactured by different
06:06 - companies so as long as you understand
06:08 - the purpose of a css preprocessor
06:10 - and know how to use it you're good to go
06:13 - so my suggestion to you is to learn
06:15 - sas because it's the most popular css
06:18 - preprocessor
06:20 - we have the same problem with javascript
06:22 - because javascript is a fairly old
06:23 - language
06:24 - and has some limitations so a lot of
06:26 - developers these days
06:28 - use a more modern language like
06:30 - typescript or coffeescript to write code
06:32 - then they give their code to a program
06:34 - or a tool called transpiler
06:36 - which will translate and compile the
06:38 - modern code
06:39 - to the old javascript code that all
06:42 - browsers can understand
06:43 - once again you don't need to learn all
06:45 - of these languages you just need to know
06:47 - one of them to get started
06:48 - i would say go for typescript because
06:50 - it's most widely used
06:52 - as you move jobs you may work on a
06:53 - project that uses a different language
06:55 - you can then quickly learn that other
06:57 - language in a short period of time
06:59 - because all these languages are more or
07:01 - less very similar
07:03 - so to get your first frontend
07:05 - development job first you need to learn
07:07 - html
07:08 - css and javascript i would say if you
07:11 - spend
07:11 - three to five hours a day studying and
07:13 - coding you should be able to have a
07:15 - reasonable understanding of the
07:16 - fundamentals in three months
07:18 - you're not going to be an expert but you
07:20 - will understand them well enough to make
07:21 - things
07:22 - next you need to learn a front-end
07:24 - framework or library like react
07:26 - you would probably need one or two
07:28 - months to learn react
07:29 - after that you should learn a version
07:31 - control system like git
07:32 - you should be able to get the hang of it
07:34 - in about two weeks these are the
07:36 - absolute essentials that you will find
07:38 - on almost every job description now if
07:41 - you have extra time
07:42 - i would recommend you to learn sas and
07:44 - typescript to stand out from the rest of
07:46 - the crowd
07:46 - and increase your job opportunities sas
07:49 - is pretty easy and
07:50 - you will need a week or two to learn it
07:52 - typescript requires a bit more time
07:54 - and would probably take you two to four
07:56 - weeks so if you dedicate
07:58 - a few hours a day studying and coding
08:00 - after six months
08:01 - you should be able to apply for a junior
08:03 - front-end developer job
08:05 - of course everyone is different you may
08:07 - get there faster
08:08 - or it might take you longer to get there
08:10 - don't let that discourage you
08:12 - i believe you can achieve anything if
08:14 - you're determined and passionate about
08:15 - it
08:16 - [Music]
08:18 - now to learn these skills i have plenty
08:20 - of tutorials on my channel
08:21 - i also have comprehensive courses for
08:23 - serious learners
08:25 - these courses are perfectly structured
08:27 - to take you from
08:28 - zero to hero in a step-by-step fashion
08:31 - they also include
08:32 - real world exercises that prepare you
08:34 - for the job and come with a certificate
08:36 - of completion that you can add to your
08:37 - resume
08:38 - in case you're interested head over to
08:40 - codewithmosh.com
08:41 - in the next episode we'll talk about
08:43 - backhand development skills
08:45 - if you found the information in this
08:46 - video valuable please give it a like
08:48 - and share it with others also be sure to
08:51 - subscribe to my channel for more videos
08:52 - on programming

Cleaned transcript:

this is the second part of my web development series in the first episode we talked about some of the facts and challenges about web development in this episode we're going to talk about the five essential skills you need to land your first frontend development job i'm going to give you a detailed explanation of various languages and tools you need to know as well as a proper learning path and suggestions on how long it will take you to learn these hi my name is mash hamadani and i've taught millions of people how to code and how to become professional software engineers through this channel and my coding school codewithmosh.com if you're new here be sure to subscribe as i upload new videos all the time there's so many languages and tools out there html css javascript typescript java csharp c plus php python react jesus if you have been confused and feel overwhelmed you are not alone trust me so in this video i'm gonna give you a clear and solid learning path so you spend your time on the things that matter the most one of the mistakes that a lot of beginners make is that they waste so much time jumping from one thing to another and they don't learn anything properly so in this video i'm gonna give you a summary of these languages and their purpose but i've also compiled a complete pdf that contains a detailed list of the stuff you need to learn the link is below this video so to become a frontend developer you need to start with html css and javascript these are the fundamental languages of frontend development we use html to structure our web pages we use css to make them beautiful and javascript to program them let me give you an analogy think of a building a building in the real world is like a web page on the internet it has a skeleton or structure it can have pretty walls windows and tiles and it can have certain functionality for example when we press the elevator button it comes to pick us up here's a real example let's say we want to build a website like twitter for each tweet we want to have a layout like this so first we use html to define all the building blocks of this layout what are the building blocks here an image some text indicating the user's twitter handle another block of text containing the message and three icons for commenting retweeting and liking the tweet we use html to add these building blocks to our web page then we use css to give it visual effects for example with css we can make the font bold we can make our image round we can add some padding around here we can change the color of these icons and define their look when we hover over them so css is all about aesthetics or visual effects and finally we use javascript to add functionality to this webpage to decide what should happen when the user clicks on any of these icons every webpage on the internet you have seen is built with these three languages so the better you learn and understand these languages and their features the better you will be at frontend development okay so that's all for the fundamentals what's next well building websites often includes a bunch of repetitive tasks this is where frontend frameworks and libraries come a framework or a library comes with a lot of code that we can reuse in our websites so they help us get the job done faster that's why a lot of companies these days use one of these popular frameworks like react angular or vue now more accurately react is not a framework it's a library the difference between a framework and a library is that a framework forces our application into a structure so all applications built with a framework like angular end up having a similar structure so as you move from one project to another you will see a lot of things are familiar libraries don't force our applications into a structure they just provide some code for us to reuse but subtle distinction aside all these tools serve the same purpose they help us build applications faster now you don't need to learn all of these to get started as you move jobs you may need to learn about the other tools out of these react is the most popular tool it's built by facebook and is used to build facebook and instagram so i would say go for react all right what's next version control systems we use version control systems to track our project history and work collaboratively with others that's why you will find it in almost every job description git is the most popular version control system in the world and is used in 70 of software development teams so just focus on git and don't worry about other version control systems alright what's next well css is kind of an old language and it has limitations so if you use it on a medium sized or a large website sooner or later your code starts to get pretty convoluted and becomes hard to maintain so every time you want to change something you end up breaking something else now you might wonder why css hasn't evolved well it has and is currently at version 3 but every time there is a new feature in css all existing browsers need to support that feature unfortunately this is a slow process so this is where css preprocessors come in a css preprocessor is a program or a tool that lets you generate css code from a different language that is better and more capable than css so instead of using the plain old css we use another language that looks very similar to css in fact it's almost identical but it has some extra features then we give our code to a css preprocessor so it gets converted to the plain old css code that all browsers can understand that's the purpose of css preprocessors there are many preprocessors out there like sas less and stylus to name a few but again you don't have to learn all of them to get a frontend development job because these are all similar tools that serve the same purpose they're all like screwdrivers manufactured by different companies so as long as you understand the purpose of a css preprocessor and know how to use it you're good to go so my suggestion to you is to learn sas because it's the most popular css preprocessor we have the same problem with javascript because javascript is a fairly old language and has some limitations so a lot of developers these days use a more modern language like typescript or coffeescript to write code then they give their code to a program or a tool called transpiler which will translate and compile the modern code to the old javascript code that all browsers can understand once again you don't need to learn all of these languages you just need to know one of them to get started i would say go for typescript because it's most widely used as you move jobs you may work on a project that uses a different language you can then quickly learn that other language in a short period of time because all these languages are more or less very similar so to get your first frontend development job first you need to learn html css and javascript i would say if you spend three to five hours a day studying and coding you should be able to have a reasonable understanding of the fundamentals in three months you're not going to be an expert but you will understand them well enough to make things next you need to learn a frontend framework or library like react you would probably need one or two months to learn react after that you should learn a version control system like git you should be able to get the hang of it in about two weeks these are the absolute essentials that you will find on almost every job description now if you have extra time i would recommend you to learn sas and typescript to stand out from the rest of the crowd and increase your job opportunities sas is pretty easy and you will need a week or two to learn it typescript requires a bit more time and would probably take you two to four weeks so if you dedicate a few hours a day studying and coding after six months you should be able to apply for a junior frontend developer job of course everyone is different you may get there faster or it might take you longer to get there don't let that discourage you i believe you can achieve anything if you're determined and passionate about it now to learn these skills i have plenty of tutorials on my channel i also have comprehensive courses for serious learners these courses are perfectly structured to take you from zero to hero in a stepbystep fashion they also include real world exercises that prepare you for the job and come with a certificate of completion that you can add to your resume in case you're interested head over to codewithmosh.com in the next episode we'll talk about backhand development skills if you found the information in this video valuable please give it a like and share it with others also be sure to subscribe to my channel for more videos on programming
