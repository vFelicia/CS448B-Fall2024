With timestamps:

00:01 - so in the last section we use this
00:04 - console that log function to lock
00:07 - something on the console now this
00:09 - console object is what we call a global
00:13 - object so it's part of the global scope
00:15 - which means we can access it anywhere in
00:18 - any files we have a bunch of other
00:21 - objects and functions that are also
00:23 - globally available in node for example
00:25 - we have set timeout which you have
00:28 - probably seen before we use this to call
00:31 - a function after a delay like one second
00:34 - two second whatever so this is just part
00:36 - of the standard JavaScript we can use
00:38 - this on the client we can use this
00:40 - inside of a browser or inside of node we
00:44 - also have clear timeout similarly we
00:48 - have set interval which we use to
00:51 - repeatedly call a function after a given
00:54 - delay we also have clear interval which
00:58 - we use to stop that function from being
01:00 - called repeatedly so these are the
01:02 - global objects in JavaScript now he node
01:05 - we have a couple other global objects
01:07 - that you're going to learn about later
01:09 - in this section now in browsers we have
01:12 - this window object that represents our
01:15 - global scope so all the variables and
01:18 - functions that are defined globally we
01:20 - can access them via this window object
01:23 - so we can call window that console dot
01:26 - log or simply just console dot lock the
01:30 - JavaScript engine will prefix this
01:33 - statement with window dot console dot
01:36 - lock because that's where this object is
01:38 - defined similarly all these other
01:40 - functions you see here they belong to
01:43 - the window object so we can call window
01:46 - dot set timeout or call it directly by
01:49 - the same token when we declare a
01:52 - variable let's say message that variable
01:56 - is also available via the window object
02:00 - okay however in the last section I told
02:04 - you that in node we don't have this
02:06 - window object instead we have another
02:09 - object called
02:10 - global so all these functions and
02:13 - objects we have here we can
02:14 - access them by the global object so we
02:17 - can do global that console dot log or
02:20 - global that set timeout and so on of
02:23 - course it's easier to use the shorthand
02:25 - instead of prefix in them with this
02:27 - global but one thing you need to know
02:29 - about note is that these variables that
02:32 - we define here they are not added to the
02:35 - global object in other words if we do a
02:38 - console dot log of global that message
02:43 - we are going to see undefined on the
02:46 - console so let me show you I'm going to
02:49 - delete all the code here now back in the
02:52 - terminal let's run node app is so we get
02:57 - undefined in the console so as you can
03:01 - see the variables and functions that we
03:04 - defined here they are not added to the
03:06 - global object they're only scoped to
03:08 - this fire app dot j s so they are not
03:12 - available outside of this file and this
03:14 - is because note modular system that
03:16 - you're going to learn about in the next
03:18 - lecture
03:21 - hi guys it's mash here thank you for
03:23 - watching my node tutorial I just wanted
03:26 - to let you know that this video you've
03:27 - been watching it's part of my complete
03:29 - note course where you will learn
03:31 - everything about node from the basic to
03:33 - the advanced topics if you're serious
03:35 - about learning node I highly recommend
03:37 - you to enroll in my node course because
03:39 - this is much faster than jumping from
03:42 - one tutorial to another it saves you
03:43 - time plus you're going to get a lot of
03:46 - exercises that will prepare you for the
03:48 - real work and also at the end of the
03:50 - course you'll receive a certificate of
03:52 - completion then you can provide your
03:54 - current or future employer so if you
03:57 - want to enroll click on the link in the
03:59 - video description I hope to see you in
04:01 - the course

Cleaned transcript:

so in the last section we use this console that log function to lock something on the console now this console object is what we call a global object so it's part of the global scope which means we can access it anywhere in any files we have a bunch of other objects and functions that are also globally available in node for example we have set timeout which you have probably seen before we use this to call a function after a delay like one second two second whatever so this is just part of the standard JavaScript we can use this on the client we can use this inside of a browser or inside of node we also have clear timeout similarly we have set interval which we use to repeatedly call a function after a given delay we also have clear interval which we use to stop that function from being called repeatedly so these are the global objects in JavaScript now he node we have a couple other global objects that you're going to learn about later in this section now in browsers we have this window object that represents our global scope so all the variables and functions that are defined globally we can access them via this window object so we can call window that console dot log or simply just console dot lock the JavaScript engine will prefix this statement with window dot console dot lock because that's where this object is defined similarly all these other functions you see here they belong to the window object so we can call window dot set timeout or call it directly by the same token when we declare a variable let's say message that variable is also available via the window object okay however in the last section I told you that in node we don't have this window object instead we have another object called global so all these functions and objects we have here we can access them by the global object so we can do global that console dot log or global that set timeout and so on of course it's easier to use the shorthand instead of prefix in them with this global but one thing you need to know about note is that these variables that we define here they are not added to the global object in other words if we do a console dot log of global that message we are going to see undefined on the console so let me show you I'm going to delete all the code here now back in the terminal let's run node app is so we get undefined in the console so as you can see the variables and functions that we defined here they are not added to the global object they're only scoped to this fire app dot j s so they are not available outside of this file and this is because note modular system that you're going to learn about in the next lecture hi guys it's mash here thank you for watching my node tutorial I just wanted to let you know that this video you've been watching it's part of my complete note course where you will learn everything about node from the basic to the advanced topics if you're serious about learning node I highly recommend you to enroll in my node course because this is much faster than jumping from one tutorial to another it saves you time plus you're going to get a lot of exercises that will prepare you for the real work and also at the end of the course you'll receive a certificate of completion then you can provide your current or future employer so if you want to enroll click on the link in the video description I hope to see you in the course
