With timestamps:

00:03 - in the last lecture you learn how to use
00:05 - the object literal syntax to create an
00:07 - object but there is a tiny problem here
00:10 - imagine you want to create two circle
00:13 - objects so I'm gonna copy this code here
00:17 - and call this second circle object
00:20 - circle - now the problem we have here is
00:23 - that we have duplicated the
00:26 - implementation of the draw method so
00:30 - right now it's a simple method it has
00:31 - only a single line of code but what if
00:34 - we had ten lines of code here we
00:36 - wouldn't want to repeat all these lines
00:38 - here because if you have a bug in this
00:40 - method then we'll have to fix it in
00:43 - multiple places and also take into
00:45 - account that our circle object currently
00:47 - has only a single method what if we had
00:50 - ten other methods here we don't want to
00:52 - duplicate or repeat all that logic right
00:55 - so if our objects have logic we need a
00:58 - different way to create objects that's
01:01 - when we use factoring or constructor
01:03 - functions in this lecture you're going
01:05 - to learn about Factory functions and
01:07 - we'll look at constructor functions next
01:10 - so I'm gonna delete this second circle
01:13 - and show you how to create a factory
01:16 - function so factory function just like a
01:20 - factory producing products these factory
01:23 - functions produce objects so we define a
01:27 - function and call it create circle now
01:34 - we're going to move this definition of
01:37 - the circle object inside of our factory
01:40 - function so we have a circle object here
01:43 - finally we need to return this now one
01:46 - way is to return it like this but we
01:49 - don't really need this circle constant
01:51 - defined because we are not going to
01:53 - reference it anywhere we only want to
01:55 - return it so we can make this code
01:57 - shorter by removing the circle constant
02:02 - and simply returning this object so
02:05 - whenever we call the create circle
02:07 - function we'll get a circle object
02:09 - however we have hard-coded these values
02:13 - here so every circle that is created by
02:15 - this function it's
02:17 - radius will be one that's not what you
02:18 - want maybe we want to have a circle with
02:20 - a bigger radius so we want to pass
02:23 - radius as a parameter here so radius and
02:26 - then instead of hard-coding one you want
02:30 - to set the value so this radius argument
02:33 - that we supply when calling this
02:35 - function similarly we can add another
02:38 - parameter here like location and instead
02:42 - of hard-coding this object here we can
02:44 - simply set location to this location
02:46 - argument however for simplicity I'm
02:49 - gonna remove these two properties
02:52 - location and is visible so we can focus
02:55 - on the core of factory functions so
02:58 - let's delete these properties we don't
03:01 - need the location parameter either now
03:03 - we can make this code a little bit
03:04 - shorter so in modern JavaScript if our
03:08 - key and value are the same we can make
03:11 - our code shorter by removing the value
03:14 - and simply adding the key so that is
03:17 - exactly equivalent to this code right so
03:20 - that is better next we have our draw
03:23 - method there is also a shorter syntax to
03:26 - define this method so instead of
03:29 - defining it as a key value pair we can
03:31 - define it like this so draw parentheses
03:36 - and code block this is similar to how we
03:39 - define a function outside of an object
03:42 - right so if you want to define a
03:44 - function this is how we define it right
03:46 - so we have the function keyword then the
03:49 - name of the function parentheses and
03:51 - code block now when we put this inside
03:53 - of an object basically we're dropping
03:55 - the function keyword and simply adding
03:57 - this
03:59 - inside of the object you can see this
04:01 - syntax is a little bit shorter and what
04:03 - we have here so let me delete this and
04:07 - move this console not log statement in
04:10 - our draw method
04:14 - so now we have a factory function we can
04:18 - simply call this to create a circle
04:20 - object so I'm going to define this
04:23 - constant circle one and call the create
04:28 - circle function and pass one as the
04:30 - radius now let's log this circle object
04:33 - on the console circle one save the
04:36 - changes so you can see radius is set to
04:39 - one we also have this draw method so we
04:43 - can call circle one but draw and here's
04:48 - our draw message on the console now the
04:51 - beauty of this Factory function is that
04:53 - we have defined our logic in one place
04:56 - so we can call this function with
04:59 - different values or different arguments
05:01 - we get different circle objects but we
05:03 - have defined the draw method only in one
05:07 - place so if there is a bug in this
05:09 - method that we need to fix in the future
05:11 - there is a single place that we need to
05:12 - modify so now I'm gonna create another
05:15 - circle object circle to create circle
05:19 - I'm gonna pass to as the radius let's
05:22 - log this on the console circle to save
05:25 - the changes look we have two different
05:27 - circle objects and a single definition
05:30 - of the draw method so this is all about
05:33 - factory functions but factory functions
05:36 - are not the only way to create objects
05:38 - we can also use constructor functions
05:40 - and that's what you're going to learn
05:42 - next
05:46 - hi guys thank you for watching my
05:48 - javascript tutorial this tutorial is
05:50 - part of my JavaScript course where you
05:52 - learn all the essential JavaScript
05:55 - features that every web and mobile
05:57 - application developer must know if
05:59 - you're an absolute beginner or have some
06:01 - experience in JavaScript and are looking
06:03 - for a fun and in-depth course that
06:05 - teaches you the fundamentals of
06:07 - JavaScript this course is for you this
06:09 - course is also packed with tons of
06:11 - exercises that help you master what you
06:13 - learned in the course in fact many of
06:15 - these exercises are questions that come
06:18 - up in technical programming interviews
06:20 - so if you're pursuing a job as a
06:22 - front-end or a back-end developer or if
06:25 - you simply want to have a more in-depth
06:27 - understanding of JavaScript I highly
06:29 - encourage you to enroll in the course
06:31 - for a limited time you can get this
06:33 - course with a discount using the link in
06:35 - the video description click the link to
06:37 - find out more about the course and
06:39 - enroll

Cleaned transcript:

in the last lecture you learn how to use the object literal syntax to create an object but there is a tiny problem here imagine you want to create two circle objects so I'm gonna copy this code here and call this second circle object circle now the problem we have here is that we have duplicated the implementation of the draw method so right now it's a simple method it has only a single line of code but what if we had ten lines of code here we wouldn't want to repeat all these lines here because if you have a bug in this method then we'll have to fix it in multiple places and also take into account that our circle object currently has only a single method what if we had ten other methods here we don't want to duplicate or repeat all that logic right so if our objects have logic we need a different way to create objects that's when we use factoring or constructor functions in this lecture you're going to learn about Factory functions and we'll look at constructor functions next so I'm gonna delete this second circle and show you how to create a factory function so factory function just like a factory producing products these factory functions produce objects so we define a function and call it create circle now we're going to move this definition of the circle object inside of our factory function so we have a circle object here finally we need to return this now one way is to return it like this but we don't really need this circle constant defined because we are not going to reference it anywhere we only want to return it so we can make this code shorter by removing the circle constant and simply returning this object so whenever we call the create circle function we'll get a circle object however we have hardcoded these values here so every circle that is created by this function it's radius will be one that's not what you want maybe we want to have a circle with a bigger radius so we want to pass radius as a parameter here so radius and then instead of hardcoding one you want to set the value so this radius argument that we supply when calling this function similarly we can add another parameter here like location and instead of hardcoding this object here we can simply set location to this location argument however for simplicity I'm gonna remove these two properties location and is visible so we can focus on the core of factory functions so let's delete these properties we don't need the location parameter either now we can make this code a little bit shorter so in modern JavaScript if our key and value are the same we can make our code shorter by removing the value and simply adding the key so that is exactly equivalent to this code right so that is better next we have our draw method there is also a shorter syntax to define this method so instead of defining it as a key value pair we can define it like this so draw parentheses and code block this is similar to how we define a function outside of an object right so if you want to define a function this is how we define it right so we have the function keyword then the name of the function parentheses and code block now when we put this inside of an object basically we're dropping the function keyword and simply adding this inside of the object you can see this syntax is a little bit shorter and what we have here so let me delete this and move this console not log statement in our draw method so now we have a factory function we can simply call this to create a circle object so I'm going to define this constant circle one and call the create circle function and pass one as the radius now let's log this circle object on the console circle one save the changes so you can see radius is set to one we also have this draw method so we can call circle one but draw and here's our draw message on the console now the beauty of this Factory function is that we have defined our logic in one place so we can call this function with different values or different arguments we get different circle objects but we have defined the draw method only in one place so if there is a bug in this method that we need to fix in the future there is a single place that we need to modify so now I'm gonna create another circle object circle to create circle I'm gonna pass to as the radius let's log this on the console circle to save the changes look we have two different circle objects and a single definition of the draw method so this is all about factory functions but factory functions are not the only way to create objects we can also use constructor functions and that's what you're going to learn next hi guys thank you for watching my javascript tutorial this tutorial is part of my JavaScript course where you learn all the essential JavaScript features that every web and mobile application developer must know if you're an absolute beginner or have some experience in JavaScript and are looking for a fun and indepth course that teaches you the fundamentals of JavaScript this course is for you this course is also packed with tons of exercises that help you master what you learned in the course in fact many of these exercises are questions that come up in technical programming interviews so if you're pursuing a job as a frontend or a backend developer or if you simply want to have a more indepth understanding of JavaScript I highly encourage you to enroll in the course for a limited time you can get this course with a discount using the link in the video description click the link to find out more about the course and enroll
