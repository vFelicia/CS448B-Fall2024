With timestamps:

00:03 - here's another scenario for using a
00:05 - lambda function so we have our list of
00:08 - items let's say we want to filter this
00:10 - list and only get the items with price
00:13 - greater than or equal to $10 again one
00:17 - basic way is to define an empty list
00:19 - like filtered then we iterate over our
00:23 - list of items for each item we get the
00:25 - price if it matches our criteria we'll
00:28 - add it to this list but that's pretty
00:30 - basic a better approach is to use the
00:33 - built in filter function look at the
00:36 - parameters this function just like the
00:38 - math function takes two parameters a
00:41 - function and an iterable so it will
00:45 - apply this function on each item of this
00:47 - iterable if the item matches some
00:50 - criteria it will return it so let's see
00:53 - how we can use this function as the
00:56 - first argument we're gonna pass a lambda
00:58 - function this function takes an item and
01:02 - returns a boolean value that determines
01:05 - if this item matches a criteria or not
01:08 - in this case we want to get the price of
01:11 - each item and see if it's greater than
01:14 - or equal to $10 so the result of this
01:17 - expression is a boolean value if it's
01:20 - true this item will be returned now as a
01:23 - second argument to the filter function
01:25 - we pass our items list let's temporarily
01:29 - store the result in a variable called X
01:32 - and print it so we get a filter object a
01:37 - filter object just like a map object is
01:40 - iterable so we can loop over it and we
01:43 - can also convert it to a list right away
01:46 - so let's call list now we get a filtered
01:52 - list that we can print on the terminal
01:55 - so as you can see we only have product 1
01:58 - and 3 because their prices are greater
02:01 - than $10
02:09 - over the next two lectures I'm going to
02:12 - show you more examples of using lambdas
02:14 - in your programs so here we have this
02:16 - list of items let's imagine we want to
02:19 - transform this list into a different
02:21 - shape so currently each item in this
02:23 - list is a topple of two items let's say
02:26 - we're only interested in the price of
02:28 - these items so we want to transform this
02:31 - list into a list of numbers that is the
02:34 - list of prices here is a basic way to do
02:36 - this we can define an empty list then
02:40 - iterate over our list of items so for
02:44 - item in items we call prices dot append
02:49 - item a1 which returns the price of each
02:53 - item now let's print the prices so we
02:59 - get a list of numbers with this code we
03:02 - have transformed or mapped our original
03:05 - list into a different list okay but
03:08 - there is a better and more elegant way
03:10 - to achieve the same result instead of
03:12 - this loop we can use the map function so
03:17 - we call the built-in map function as you
03:21 - can see this function takes two
03:22 - parameters a function and one or more
03:25 - iterables so as the first argument we
03:28 - can pass a lambda function and as the
03:31 - second argument we can pass our list of
03:33 - items this map function will apply our
03:36 - lambda function on each item in this
03:39 - list let me show you what I mean so we
03:42 - pass a lambda this lambda is a function
03:45 - that will transform each item in our
03:48 - original list so the parameter to this
03:51 - function is item and here we simply want
03:55 - to return the price of that item so item
03:57 - of one now as the second argument to the
04:01 - map function we need to pass our items
04:04 - list so this map function will iterate
04:07 - over is a durable and it will call this
04:11 - lambda function on each item of this
04:14 - iterable now let's see what this
04:16 - function returns so temporarily I'm
04:19 - gonna assign this to a variable
04:20 - called eggs let's print eggs and also we
04:24 - don't need these three lines because we
04:27 - can achieve the same result using the
04:29 - map function so delete now let's run
04:32 - this program so this map function
04:34 - returns a map object which is another
04:38 - iterable so we can easily iterate over
04:40 - it for item in eggs will print item
04:46 - there you go so we get the prices
04:50 - alternatively we can convert this map
04:52 - object into a list object so we can use
04:56 - our list function earlier you learned
05:00 - that you can pass any either herbals for
05:02 - this list function to create a new list
05:05 - so we passed it here and now we can
05:10 - rename X to prices and simply print
05:14 - prices we don't need this loop here
05:17 - let's run the program so we get a list
05:20 - of three numbers so this is how the map
05:23 - function works it takes a lambda
05:25 - function and applies it on every item of
05:28 - this iterable
05:33 - hi guys thank you for watching this
05:35 - tutorial my name is muhammad ani and i
05:38 - have tons of tutorials like this for you
05:40 - on my channel so be sure to subscribe
05:42 - and also please like and share this
05:44 - video if you want to learn Python
05:46 - properly from scratch with depth I have
05:48 - a comprehensive python tutorial for you
05:50 - the link is below this video so click
05:53 - the link to get started thank you and
05:55 - have a fantastic day

Cleaned transcript:

here's another scenario for using a lambda function so we have our list of items let's say we want to filter this list and only get the items with price greater than or equal to $10 again one basic way is to define an empty list like filtered then we iterate over our list of items for each item we get the price if it matches our criteria we'll add it to this list but that's pretty basic a better approach is to use the built in filter function look at the parameters this function just like the math function takes two parameters a function and an iterable so it will apply this function on each item of this iterable if the item matches some criteria it will return it so let's see how we can use this function as the first argument we're gonna pass a lambda function this function takes an item and returns a boolean value that determines if this item matches a criteria or not in this case we want to get the price of each item and see if it's greater than or equal to $10 so the result of this expression is a boolean value if it's true this item will be returned now as a second argument to the filter function we pass our items list let's temporarily store the result in a variable called X and print it so we get a filter object a filter object just like a map object is iterable so we can loop over it and we can also convert it to a list right away so let's call list now we get a filtered list that we can print on the terminal so as you can see we only have product 1 and 3 because their prices are greater than $10 over the next two lectures I'm going to show you more examples of using lambdas in your programs so here we have this list of items let's imagine we want to transform this list into a different shape so currently each item in this list is a topple of two items let's say we're only interested in the price of these items so we want to transform this list into a list of numbers that is the list of prices here is a basic way to do this we can define an empty list then iterate over our list of items so for item in items we call prices dot append item a1 which returns the price of each item now let's print the prices so we get a list of numbers with this code we have transformed or mapped our original list into a different list okay but there is a better and more elegant way to achieve the same result instead of this loop we can use the map function so we call the builtin map function as you can see this function takes two parameters a function and one or more iterables so as the first argument we can pass a lambda function and as the second argument we can pass our list of items this map function will apply our lambda function on each item in this list let me show you what I mean so we pass a lambda this lambda is a function that will transform each item in our original list so the parameter to this function is item and here we simply want to return the price of that item so item of one now as the second argument to the map function we need to pass our items list so this map function will iterate over is a durable and it will call this lambda function on each item of this iterable now let's see what this function returns so temporarily I'm gonna assign this to a variable called eggs let's print eggs and also we don't need these three lines because we can achieve the same result using the map function so delete now let's run this program so this map function returns a map object which is another iterable so we can easily iterate over it for item in eggs will print item there you go so we get the prices alternatively we can convert this map object into a list object so we can use our list function earlier you learned that you can pass any either herbals for this list function to create a new list so we passed it here and now we can rename X to prices and simply print prices we don't need this loop here let's run the program so we get a list of three numbers so this is how the map function works it takes a lambda function and applies it on every item of this iterable hi guys thank you for watching this tutorial my name is muhammad ani and i have tons of tutorials like this for you on my channel so be sure to subscribe and also please like and share this video if you want to learn Python properly from scratch with depth I have a comprehensive python tutorial for you the link is below this video so click the link to get started thank you and have a fantastic day
