With timestamps:

00:00 - [Music]
00:03 - welcome to my late hour Q&A show in
00:06 - these shows you can ask me your
00:07 - questions on anything technical or
00:09 - non-technical topics and if I see the
00:12 - topic interesting and valuable to others
00:14 - I will include your question in my next
00:16 - show so tonight's show is about Junior
00:18 - versus Senior developers one of my good
00:21 - students Kyle from Melbourne has sent me
00:23 - this question what is the difference
00:25 - between a junior and a senior developer
00:28 - so briefly k has three years of
00:31 - programming experience including a year
00:33 - and a half of University study he's told
00:36 - me that in most interviews he has
00:38 - attended employers think that he's a
00:40 - junior developer but when he got his
00:43 - current job he demoed his previous work
00:45 - to his colleagues and they thought he
00:47 - has implemented quite a few Advanced
00:50 - features so Kyle is wondering what he
00:52 - should focus on to become a real senior
00:55 - developer and here's my response hi Kyle
00:58 - thanks for sending me your question
00:59 - question I should say that this is
01:01 - actually a pretty interesting question
01:03 - and I'm going to get into a lot of
01:05 - details in my response first of all
01:07 - there are two ways to Define what makes
01:09 - a developer junior or senior job
01:11 - agencies have their own criteria which
01:13 - is often based on the number of years of
01:16 - experience of course they have other
01:18 - criterias based on your skill set but
01:20 - they put a lot of weight on the number
01:22 - of years now in my personal opinion
01:25 - years of experience is not always a good
01:27 - way to assess if a given C candidate is
01:30 - a senior developer or not I've worked
01:32 - with developers with more than 10 years
01:34 - of experience who were at the
01:36 - intermediate level at best software
01:38 - industry as you probably know is very
01:40 - fast- pacing and if you don't constantly
01:43 - learn new things fast sooner or later
01:45 - you'll be behind the game I've seen
01:47 - developers with 20 years of experience
01:49 - who are still using Microsoft Access so
01:52 - do 20 years of experience make such a
01:55 - developer a senior developer not really
01:58 - so I personally believe being a senior
02:00 - developer depends on the skills not the
02:02 - years of experience and the skill set is
02:05 - subjective you ask 10 different senior
02:08 - developers what are the skills that a
02:10 - senior developer should have and chances
02:12 - are you will hear different answers but
02:14 - if you're interested to know my answer I
02:16 - would say a senior developer has
02:18 - experience with a wide range of
02:20 - Technologies often both on the front end
02:23 - and the back end they have reasonable
02:26 - understanding of design patterns or at
02:27 - least they know the key ones so if
02:29 - someone says abstract Factory or Builder
02:32 - pattern they know what they're talking
02:34 - about they're exposed to no SQL
02:36 - databases but not necessarily an expert
02:39 - in the area they're familiar with
02:41 - messaging tools and Frameworks but again
02:43 - not necessarily an expert they're able
02:45 - to troubleshoot problems often faster
02:48 - than Junior developers but not
02:49 - necessarily fast they can think of
02:52 - different solutions to solve a problem
02:54 - and they can explain the pros and cons
02:56 - of each solution from different points
02:58 - of view such as per performance
03:00 - scalability security maintainability and
03:03 - so on they often write cleaner and more
03:06 - maintainable code they should be able to
03:09 - write unit tests for their code whether
03:11 - before the production code which we call
03:13 - test driven development or tdd or after
03:16 - these are my personal criteria to tell
03:19 - if someone is a junior or senior
03:20 - developer but I think these are fair
03:23 - assumptions and if you ask 10 senior
03:25 - developers most of them are going to
03:27 - agree with most of the criteria I've
03:29 - listed here
03:30 - no one is going to say no a senior
03:32 - developer doesn't need to know unit
03:33 - testing no one is going to say a senior
03:35 - developer um doesn't have to write clean
03:38 - code now having said that I've worked
03:40 - with senior Consultants who fail at
03:42 - taking these boxes and it really
03:44 - surprises me how they end up getting
03:47 - those
03:47 - titles but that aside to answer a
03:50 - question what you should do to become a
03:52 - senior developer I would say there are
03:55 - two parts here one part is the number of
03:57 - years which you get judged upon at
03:59 - that's really out of your control so
04:01 - don't worry about it instead focus on
04:03 - what is under your control and that's
04:06 - the skill set I talked about so improve
04:09 - your coding skills learn to write
04:11 - cleaner and more maintainable code
04:13 - because I don't think anyone would
04:15 - regard a developer who writes messy code
04:18 - as a senior developer no matter how many
04:20 - years of experience they have if you're
04:23 - interested I have a course on UD called
04:25 - clean code look at the table of content
04:27 - and see if you know all the topics I
04:29 - have covered if not I would suggest that
04:32 - should be your starting point also spend
04:35 - some time studying and practicing unit
04:37 - testing that will certainly take you to
04:39 - the next level and on the side get
04:42 - yourself exposed to a wide range of
04:44 - front end and backend tools and
04:46 - Frameworks if you want to be a full
04:47 - stack developer on the client make sure
04:50 - you're pretty confident with HTML CSS
04:53 - JavaScript jQuery and bootstrap and I
04:56 - mean really really confident because
04:58 - this is the absolute minimum you should
05:01 - also be pretty confident in one of the
05:03 - leading front-end Frameworks like
05:04 - angular or react on the backand if you
05:08 - want to use Microsoft Technologies you
05:10 - should be pretty confident with H9 NVC
05:12 - web API Entity framework and relational
05:15 - database at an absolute minimum you
05:18 - should also be pretty confident writing
05:20 - most queries in plain SQL to get data
05:23 - out of your
05:24 - database now on top of all this if I
05:26 - want to give you a golden key I would
05:28 - say go and build three different
05:31 - applications end to end entirely by
05:34 - yourself pick any kind of domain you're
05:36 - interested in and build a real world
05:38 - application if you don't have any ideas
05:41 - look at the applications around you any
05:43 - website you visit any apps you use think
05:45 - of building a simplified version of that
05:48 - application when you build an
05:50 - application end to endend by yourself
05:52 - you will have a far deeper understanding
05:54 - of all these Technologies and various
05:56 - challenges of putting them together
05:58 - along the way when you join the team
06:01 - most of the time there is some Legacy
06:02 - code sitting there and there's a lot of
06:04 - magic happening in that code that you
06:06 - have no idea about most of the time
06:08 - you'll be working on little bits and
06:09 - pieces here and there and to be frank
06:12 - with you this stuff wouldn't really give
06:14 - you the depth that you need as a senior
06:16 - developer you will just learn how to
06:18 - maintain existing applications and this
06:21 - is not something to be proud of so in
06:23 - your spare time build an application end
06:25 - to end and deploy it to Azure yes you
06:28 - would have to pay a a little bit of
06:29 - money for your subscription but trust me
06:32 - that's not much and you can turn off the
06:33 - service shortly after deployment so you
06:35 - wouldn't have to pay any more money when
06:38 - you go through all these different
06:39 - phases of software development life
06:41 - cycle starting from the requirements and
06:43 - eventually deploying working software
06:46 - you would be a completely different
06:48 - developer so to recap on the client make
06:51 - sure you're pretty confident with HTML
06:53 - CSS JavaScript jQuery bootstrap and at
06:57 - least one of the leading Frameworks like
06:59 - Ang or react on the server if you're
07:02 - going to use Microsoft Technologies make
07:04 - sure you're pretty confident with as.net
07:06 - NVC web API enti the framework and
07:09 - relational
07:10 - databases on top of all this you should
07:12 - write really clean code you should know
07:14 - your unit testing you should know your
07:16 - design patterns then I would say you're
07:18 - a senior developer now just one thing
07:21 - since you're new to the industry you may
07:23 - get intimidated by different kinds of
07:25 - things you need to know but trust me
07:26 - it's not that hard when you build a word
07:29 - application end to endend you will deal
07:32 - with these Technologies all the time and
07:34 - after a while they become like a piece
07:36 - of cake so I hope I've answered your
07:38 - question and I wish you all the
07:41 - [Music]
07:57 - best

Cleaned transcript:

welcome to my late hour Q&A show in these shows you can ask me your questions on anything technical or nontechnical topics and if I see the topic interesting and valuable to others I will include your question in my next show so tonight's show is about Junior versus Senior developers one of my good students Kyle from Melbourne has sent me this question what is the difference between a junior and a senior developer so briefly k has three years of programming experience including a year and a half of University study he's told me that in most interviews he has attended employers think that he's a junior developer but when he got his current job he demoed his previous work to his colleagues and they thought he has implemented quite a few Advanced features so Kyle is wondering what he should focus on to become a real senior developer and here's my response hi Kyle thanks for sending me your question question I should say that this is actually a pretty interesting question and I'm going to get into a lot of details in my response first of all there are two ways to Define what makes a developer junior or senior job agencies have their own criteria which is often based on the number of years of experience of course they have other criterias based on your skill set but they put a lot of weight on the number of years now in my personal opinion years of experience is not always a good way to assess if a given C candidate is a senior developer or not I've worked with developers with more than 10 years of experience who were at the intermediate level at best software industry as you probably know is very fast pacing and if you don't constantly learn new things fast sooner or later you'll be behind the game I've seen developers with 20 years of experience who are still using Microsoft Access so do 20 years of experience make such a developer a senior developer not really so I personally believe being a senior developer depends on the skills not the years of experience and the skill set is subjective you ask 10 different senior developers what are the skills that a senior developer should have and chances are you will hear different answers but if you're interested to know my answer I would say a senior developer has experience with a wide range of Technologies often both on the front end and the back end they have reasonable understanding of design patterns or at least they know the key ones so if someone says abstract Factory or Builder pattern they know what they're talking about they're exposed to no SQL databases but not necessarily an expert in the area they're familiar with messaging tools and Frameworks but again not necessarily an expert they're able to troubleshoot problems often faster than Junior developers but not necessarily fast they can think of different solutions to solve a problem and they can explain the pros and cons of each solution from different points of view such as per performance scalability security maintainability and so on they often write cleaner and more maintainable code they should be able to write unit tests for their code whether before the production code which we call test driven development or tdd or after these are my personal criteria to tell if someone is a junior or senior developer but I think these are fair assumptions and if you ask 10 senior developers most of them are going to agree with most of the criteria I've listed here no one is going to say no a senior developer doesn't need to know unit testing no one is going to say a senior developer um doesn't have to write clean code now having said that I've worked with senior Consultants who fail at taking these boxes and it really surprises me how they end up getting those titles but that aside to answer a question what you should do to become a senior developer I would say there are two parts here one part is the number of years which you get judged upon at that's really out of your control so don't worry about it instead focus on what is under your control and that's the skill set I talked about so improve your coding skills learn to write cleaner and more maintainable code because I don't think anyone would regard a developer who writes messy code as a senior developer no matter how many years of experience they have if you're interested I have a course on UD called clean code look at the table of content and see if you know all the topics I have covered if not I would suggest that should be your starting point also spend some time studying and practicing unit testing that will certainly take you to the next level and on the side get yourself exposed to a wide range of front end and backend tools and Frameworks if you want to be a full stack developer on the client make sure you're pretty confident with HTML CSS JavaScript jQuery and bootstrap and I mean really really confident because this is the absolute minimum you should also be pretty confident in one of the leading frontend Frameworks like angular or react on the backand if you want to use Microsoft Technologies you should be pretty confident with H9 NVC web API Entity framework and relational database at an absolute minimum you should also be pretty confident writing most queries in plain SQL to get data out of your database now on top of all this if I want to give you a golden key I would say go and build three different applications end to end entirely by yourself pick any kind of domain you're interested in and build a real world application if you don't have any ideas look at the applications around you any website you visit any apps you use think of building a simplified version of that application when you build an application end to endend by yourself you will have a far deeper understanding of all these Technologies and various challenges of putting them together along the way when you join the team most of the time there is some Legacy code sitting there and there's a lot of magic happening in that code that you have no idea about most of the time you'll be working on little bits and pieces here and there and to be frank with you this stuff wouldn't really give you the depth that you need as a senior developer you will just learn how to maintain existing applications and this is not something to be proud of so in your spare time build an application end to end and deploy it to Azure yes you would have to pay a a little bit of money for your subscription but trust me that's not much and you can turn off the service shortly after deployment so you wouldn't have to pay any more money when you go through all these different phases of software development life cycle starting from the requirements and eventually deploying working software you would be a completely different developer so to recap on the client make sure you're pretty confident with HTML CSS JavaScript jQuery bootstrap and at least one of the leading Frameworks like Ang or react on the server if you're going to use Microsoft Technologies make sure you're pretty confident with as.net NVC web API enti the framework and relational databases on top of all this you should write really clean code you should know your unit testing you should know your design patterns then I would say you're a senior developer now just one thing since you're new to the industry you may get intimidated by different kinds of things you need to know but trust me it's not that hard when you build a word application end to endend you will deal with these Technologies all the time and after a while they become like a piece of cake so I hope I've answered your question and I wish you all the best
