With timestamps:

00:01 - in this lecture we're going to have a
00:03 - closer look at this keyword in
00:05 - JavaScript this is one of those features
00:07 - that confuses a lot of developers but
00:10 - honestly I think it's because of the
00:12 - poor teaching materials out there
00:14 - because I personally was confused about
00:16 - that this keyword for a long time so in
00:19 - this lecture I'm gonna make it super
00:20 - simple for you so we can explain it your
00:23 - seven-year-old brother so what is this
00:25 - this references the object that is
00:29 - executing the current function here I'm
00:31 - gonna give you a very simple rule of
00:33 - thumb if that function is part of an
00:36 - object we call the function and method
00:38 - right so if that function is a method in
00:41 - an object this references that object
00:44 - itself otherwise if that function is a
00:47 - regular function which means it's not
00:49 - part of an object this reference is the
00:52 - global object which is the window object
00:54 - in browsers and global in node let's
00:58 - take a look at a few examples so I'm
01:00 - gonna start by creating a video object
01:03 - in this object we're gonna have a title
01:06 - property and a play method let's log
01:11 - this here and finally call video play
01:16 - save the changes so we get our video
01:19 - object on the console so in this example
01:22 - because play is a method in the video
01:25 - object this references this object
01:28 - itself by the same token we can add a
01:31 - method later in this object and we'll
01:34 - get the same result for example we can
01:36 - add a stop method here set it to a
01:39 - function and here we can do console that
01:44 - log of this if we call the stop method
01:48 - once again we're going to see the video
01:51 - object on the console so save the
01:53 - changes and here is our video object
01:56 - because again stop is a method in the
02:01 - video object so that's an example are
02:03 - the first rule now let's take a look at
02:06 - an example of the second row a regular
02:09 - function so let's delete this and
02:12 - instead add a function called
02:16 - play video if you log this on the
02:20 - console we're going to see the global
02:22 - object which is window in browsers and
02:24 - global in node so let's call this
02:27 - function play video and save the changes
02:30 - so we get the window object here now
02:34 - what if this is a constructor function
02:36 - we call the constructor functions using
02:38 - the new operator so let's rename play
02:42 - video to video with a capital V that's
02:45 - the convention for constructor functions
02:47 - now here we're going to pass a title
02:50 - property and set this the title to title
02:54 - now we can use this constructor function
02:57 - to create a new video object so we use
03:00 - the new operator save the changes oops I
03:04 - forgot to pass a title here that's a
03:07 - title so what do we get here instead of
03:10 - the window object we get a new object
03:13 - and note that this object is not this
03:15 - video object here it's completely
03:17 - separate to demonstrate this I'm gonna
03:19 - change this argument to B so instead of
03:23 - the window object we get this video
03:26 - object because earlier in the course I
03:29 - told you that when you use the new
03:31 - operator this new operator creates a new
03:34 - empty object like this and sets this in
03:38 - this constructor function to point to
03:42 - the same T object so here on line 12 we
03:45 - add the title property so this new
03:47 - object so let's recap when dealing with
03:51 - a regular function this by default
03:53 - references the global object but if you
03:56 - call a function using the new operator
03:58 - which is the case for constructor
04:00 - functions this will reference a new
04:04 - empty object now the last example I'm
04:08 - going to clean up this code let's add
04:12 - another property in this object tags we
04:15 - set it to an array of three strings
04:19 - now let's rename the play method to show
04:22 - tags so here we can use this to get the
04:27 - current object and then get the tags
04:29 - property because this is an array we can
04:32 - call the for each method and here we
04:35 - need to pass a callback function so
04:37 - function in each iteration this function
04:41 - will get a tag and then we can display
04:44 - the tag on the console so consult the
04:47 - log of tag
04:48 - finally let's call video does show tags
04:51 - save the changes so we get ABC beautiful
04:55 - but what if we want to display the title
04:58 - of the video next to each tag well we
05:02 - can add this the title here save the
05:05 - changes
05:06 - we got undefined what's going on here
05:09 - well let's remove the title property and
05:12 - see what this is referencing save the
05:16 - changes it's referencing the window
05:18 - object but aren't we inside a video
05:21 - object here shouldn't this reference the
05:24 - video object no because here we are
05:27 - inside this callback function this
05:30 - function is just a regular function it's
05:34 - not a method in the video object the
05:36 - only method we have here is show tags so
05:40 - because this is a regular function this
05:43 - references the global object so it's the
05:46 - global object that is executing this
05:48 - anonymous callback function but how can
05:51 - we solve this problem and display the
05:53 - title of the video next to each tag well
05:57 - we have a few different solutions for
05:58 - this in this particular case the for
06:01 - each method has two parameters the first
06:04 - parameter is our callback function the
06:07 - second parameter is this arc so we can
06:12 - pass an object here and this will
06:15 - reference that object for example here I
06:18 - can pass a new object for the first name
06:21 - set tomash now when the same two changes
06:25 - you can see this is referencing this new
06:29 - object now in this example we all really
06:31 - want this object we want our video
06:34 - object so we can pass this here because
06:37 - at this point we are in the show tags
06:40 - method so this reference
06:43 - the current object so here we are not
06:45 - inside of a callback function we're
06:48 - still in the execution context of the
06:51 - show tags method so now if we save the
06:54 - changes next to each tag we can see our
06:58 - video object with this title property so
07:02 - we can add the title property here and
07:04 - with this we see the title of the video
07:07 - next to each tag beautiful but not all
07:10 - methods in JavaScript give you the
07:12 - ability to pass the this argument so we
07:16 - have a few different solutions for that
07:17 - and that's the topic for the next
07:19 - lecture
07:23 - hi guys thank you for watching my
07:26 - javascript tutorial this tutorial is
07:28 - part of my JavaScript course where you
07:30 - learn all the essential JavaScript
07:32 - features that every web and mobile
07:34 - application developer must know if
07:36 - you're an absolute beginner or have some
07:38 - experience in JavaScript and are looking
07:40 - for a fun and in-depth course that
07:42 - teaches you the fundamentals of
07:44 - JavaScript this course is for you this
07:46 - course is also packed with tons of
07:48 - exercises that help you master what you
07:51 - learned in the course in fact many of
07:53 - these exercises are questions that come
07:55 - up in technical programming interviews
07:57 - so if you're pursuing a job as a
08:00 - front-end or a back-end developer or if
08:02 - you simply want to have a more in-depth
08:04 - understanding of JavaScript I highly
08:07 - encourage you to enroll in the course
08:08 - for a limited time you can get this
08:10 - course with a discount using the link in
08:13 - the video description click the link to
08:15 - find out more about the course and
08:16 - enroll

Cleaned transcript:

in this lecture we're going to have a closer look at this keyword in JavaScript this is one of those features that confuses a lot of developers but honestly I think it's because of the poor teaching materials out there because I personally was confused about that this keyword for a long time so in this lecture I'm gonna make it super simple for you so we can explain it your sevenyearold brother so what is this this references the object that is executing the current function here I'm gonna give you a very simple rule of thumb if that function is part of an object we call the function and method right so if that function is a method in an object this references that object itself otherwise if that function is a regular function which means it's not part of an object this reference is the global object which is the window object in browsers and global in node let's take a look at a few examples so I'm gonna start by creating a video object in this object we're gonna have a title property and a play method let's log this here and finally call video play save the changes so we get our video object on the console so in this example because play is a method in the video object this references this object itself by the same token we can add a method later in this object and we'll get the same result for example we can add a stop method here set it to a function and here we can do console that log of this if we call the stop method once again we're going to see the video object on the console so save the changes and here is our video object because again stop is a method in the video object so that's an example are the first rule now let's take a look at an example of the second row a regular function so let's delete this and instead add a function called play video if you log this on the console we're going to see the global object which is window in browsers and global in node so let's call this function play video and save the changes so we get the window object here now what if this is a constructor function we call the constructor functions using the new operator so let's rename play video to video with a capital V that's the convention for constructor functions now here we're going to pass a title property and set this the title to title now we can use this constructor function to create a new video object so we use the new operator save the changes oops I forgot to pass a title here that's a title so what do we get here instead of the window object we get a new object and note that this object is not this video object here it's completely separate to demonstrate this I'm gonna change this argument to B so instead of the window object we get this video object because earlier in the course I told you that when you use the new operator this new operator creates a new empty object like this and sets this in this constructor function to point to the same T object so here on line 12 we add the title property so this new object so let's recap when dealing with a regular function this by default references the global object but if you call a function using the new operator which is the case for constructor functions this will reference a new empty object now the last example I'm going to clean up this code let's add another property in this object tags we set it to an array of three strings now let's rename the play method to show tags so here we can use this to get the current object and then get the tags property because this is an array we can call the for each method and here we need to pass a callback function so function in each iteration this function will get a tag and then we can display the tag on the console so consult the log of tag finally let's call video does show tags save the changes so we get ABC beautiful but what if we want to display the title of the video next to each tag well we can add this the title here save the changes we got undefined what's going on here well let's remove the title property and see what this is referencing save the changes it's referencing the window object but aren't we inside a video object here shouldn't this reference the video object no because here we are inside this callback function this function is just a regular function it's not a method in the video object the only method we have here is show tags so because this is a regular function this references the global object so it's the global object that is executing this anonymous callback function but how can we solve this problem and display the title of the video next to each tag well we have a few different solutions for this in this particular case the for each method has two parameters the first parameter is our callback function the second parameter is this arc so we can pass an object here and this will reference that object for example here I can pass a new object for the first name set tomash now when the same two changes you can see this is referencing this new object now in this example we all really want this object we want our video object so we can pass this here because at this point we are in the show tags method so this reference the current object so here we are not inside of a callback function we're still in the execution context of the show tags method so now if we save the changes next to each tag we can see our video object with this title property so we can add the title property here and with this we see the title of the video next to each tag beautiful but not all methods in JavaScript give you the ability to pass the this argument so we have a few different solutions for that and that's the topic for the next lecture hi guys thank you for watching my javascript tutorial this tutorial is part of my JavaScript course where you learn all the essential JavaScript features that every web and mobile application developer must know if you're an absolute beginner or have some experience in JavaScript and are looking for a fun and indepth course that teaches you the fundamentals of JavaScript this course is for you this course is also packed with tons of exercises that help you master what you learned in the course in fact many of these exercises are questions that come up in technical programming interviews so if you're pursuing a job as a frontend or a backend developer or if you simply want to have a more indepth understanding of JavaScript I highly encourage you to enroll in the course for a limited time you can get this course with a discount using the link in the video description click the link to find out more about the course and enroll
