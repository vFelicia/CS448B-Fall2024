With timestamps:

00:01 - all right so I've simplified the code
00:03 - from the last lecture I simply remove
00:05 - the method get distance because we're
00:07 - not going to use it later in this
00:09 - section so here on the top we define a
00:11 - point class and then below that we
00:13 - initialize a point object now this code
00:16 - is a little bit verbose because we have
00:18 - three lines to create a point object and
00:21 - put it in a valid State what if this
00:24 - point object had a few other properties
00:25 - that we had to initialize like this and
00:30 - maybe a few more here
00:32 - is there a cleaner way absolutely so let
00:37 - me delete this first all right
00:38 - in object-oriented programming languages
00:41 - we have this concept called constructor
00:44 - so every class can have a constructor
00:46 - which is basically a method that is
00:49 - called when we create an instance of
00:51 - that class so let me show you how it
00:54 - works in the class I'm gonna add a
00:57 - method the name of this method is
01:00 - constructor this is a reserved keyword
01:02 - in typescript now this method can have
01:06 - parameters so X which is a number and Y
01:10 - which is also a number and then here in
01:13 - this method we can initialize these
01:15 - fields so what should we write here this
01:19 - Delta X we set it to this X argument
01:22 - that we get here and similarly this that
01:25 - Y we set it to Y now look we got the
01:29 - compilation error here because when
01:31 - creating a new point object we need to
01:33 - supply these values look at the error
01:36 - supply parameters do not match any
01:39 - signature of call target so here we need
01:43 - to supply the values for X and y 1 and 2
01:46 - and with this we can simplify this code
01:49 - and get rid of these two extra lines and
01:52 - here's the end result now what if
01:55 - somewhere else in our program we don't
01:57 - know the initial coordinate of a point
01:59 - in other words what if I want to create
02:02 - a point object without setting these
02:04 - values is that possible yes absolutely
02:08 - but it's a little bit different from how
02:10 - you have seen that in other languages
02:12 - like C sharp and Java in
02:14 - sharp we can have multiple constructors
02:17 - in typescript we can't so the solution
02:20 - for this is to make these parameters
02:22 - optional so here after X I add a
02:25 - question mark and that makes X optional
02:29 - and similarly Y should be optional as
02:32 - well because once you make it parameter
02:34 - optional all the other parameters on the
02:37 - right side of that parameter should also
02:39 - be optional this is a rule by typescript
02:41 - and a lot of other programming languages
02:43 - so now look we don't have a compilation
02:46 - error when creating a point object
02:48 - without initial values hi thank you for
02:54 - watching my angular tutorial if you
02:56 - enjoyed this video please like it and
02:57 - share it with others also you can
03:00 - subscribe to my channel for free new
03:02 - videos every week this video is part of
03:05 - my complete angular course with almost
03:07 - 30 hours of high quality content where
03:10 - you learn everything about angular from
03:12 - the basic to the advanced topics all in
03:15 - one course so you don't have to jump
03:17 - from one tutorial to another in case
03:19 - you're interested we can get this course
03:21 - with a big discount using the link in
03:23 - the video description and if not that's
03:25 - perfectly fine continue watching as the
03:27 - next section is coming up

Cleaned transcript:

all right so I've simplified the code from the last lecture I simply remove the method get distance because we're not going to use it later in this section so here on the top we define a point class and then below that we initialize a point object now this code is a little bit verbose because we have three lines to create a point object and put it in a valid State what if this point object had a few other properties that we had to initialize like this and maybe a few more here is there a cleaner way absolutely so let me delete this first all right in objectoriented programming languages we have this concept called constructor so every class can have a constructor which is basically a method that is called when we create an instance of that class so let me show you how it works in the class I'm gonna add a method the name of this method is constructor this is a reserved keyword in typescript now this method can have parameters so X which is a number and Y which is also a number and then here in this method we can initialize these fields so what should we write here this Delta X we set it to this X argument that we get here and similarly this that Y we set it to Y now look we got the compilation error here because when creating a new point object we need to supply these values look at the error supply parameters do not match any signature of call target so here we need to supply the values for X and y 1 and 2 and with this we can simplify this code and get rid of these two extra lines and here's the end result now what if somewhere else in our program we don't know the initial coordinate of a point in other words what if I want to create a point object without setting these values is that possible yes absolutely but it's a little bit different from how you have seen that in other languages like C sharp and Java in sharp we can have multiple constructors in typescript we can't so the solution for this is to make these parameters optional so here after X I add a question mark and that makes X optional and similarly Y should be optional as well because once you make it parameter optional all the other parameters on the right side of that parameter should also be optional this is a rule by typescript and a lot of other programming languages so now look we don't have a compilation error when creating a point object without initial values hi thank you for watching my angular tutorial if you enjoyed this video please like it and share it with others also you can subscribe to my channel for free new videos every week this video is part of my complete angular course with almost 30 hours of high quality content where you learn everything about angular from the basic to the advanced topics all in one course so you don't have to jump from one tutorial to another in case you're interested we can get this course with a big discount using the link in the video description and if not that's perfectly fine continue watching as the next section is coming up
