With timestamps:

00:03 - one of the questions that often comes in
00:06 - programming interviews is the fizzbuzz
00:08 - algorithm you might be surprised that
00:11 - there are a lot of developers out there
00:13 - with even years of experience but they
00:15 - don't know how to solve this simple
00:17 - programming problem that's why I decided
00:20 - to include this in my course so let's
00:22 - see how this algorithm works and then
00:24 - you can spend 10 to 15 minutes on this
00:26 - exercise on your own so here we have a
00:29 - function fizz buzz that takes on input
00:32 - and depending on the input we give it it
00:34 - returns different results here are the
00:38 - rules if the input that we give it is
00:40 - divisible by 3 it will return the string
00:43 - fizz
00:44 - let me show you so we run this program
00:46 - we get Fitz if the input is divisible by
00:51 - 5 it will return Buzz take a look here's
00:55 - buzz now the third rule if the input is
00:59 - divisible by both 3 & 5 it will return
01:03 - fizzbuzz so let's pass 15 here we'll get
01:08 - fizzbuzz for any other numbers it will
01:12 - return the same input so if I pass 7
01:15 - it's not divisible by 3 or 5 it will
01:18 - return 7 itself so spend 10 to 15
01:24 - minutes on this exercise you will see my
01:26 - solution next
01:33 - all right let's see how we can solve
01:35 - this problem so we get the input and
01:37 - check to see if input is divisible by 3
01:41 - then we can set a variable like result
01:45 - to phase
01:46 - now let me temporarily simplify these
01:49 - rules because I want to show you a
01:51 - really cool technique so let's imagine
01:54 - if the input is divisible by 3 we'll
01:57 - return fizz otherwise we'll return bus
02:00 - so LS :
02:04 - we set the result to buzz and finally
02:08 - we'll return this result variable
02:11 - this is one way to implement these rules
02:14 - but it's not the best way there is a
02:16 - better and cleaner way let me show you
02:18 - so instead of defining this result
02:20 - variable and then returning it we can
02:24 - simply return this string here and also
02:29 - here and then we can get rid of line six
02:32 - so we remove one unnecessary line of
02:35 - code this was one technique the other
02:38 - technique I want to show you is when you
02:41 - have an if statement and in your if lock
02:44 - you're returning a value you don't
02:46 - really need an else clause because if
02:50 - this condition is evaluated to false the
02:53 - control moves to the else clause and all
02:55 - we are doing here is returning a
02:58 - different value so this is the only
03:00 - possible outcome so here we can remove
03:03 - this else clause and simply return bus
03:07 - so with this technique I remove an
03:10 - unnecessary indentation as well I've
03:12 - made our code more linear okay now let's
03:16 - go back to our original algorithm so if
03:19 - the input is divisible by three
03:20 - we'll return fizz now we check to see if
03:24 - the input is divisible by five will
03:26 - return bus so here we don't really need
03:29 - an Elif because if this condition is
03:32 - false we'll get here anyway
03:35 - so we can check if input is divisible by
03:39 - five we will return buzz once again if
03:44 - this condition is false the control
03:46 - moves here now we check the same if the
03:50 - input is divisible by three and it is
03:54 - also divisible by five then we will
03:58 - return fizz bus now this expression is a
04:03 - little bit long I would prefer to make
04:05 - it more readable by putting parentheses
04:08 - around the first and second parts like
04:13 - this that is cleaner now if this
04:16 - condition is also false the control
04:19 - moves here that means our number is not
04:21 - divisible by three or five so we should
04:24 - simply return the
04:25 - input once again we don't need an else
04:27 - or another if we simply return the input
04:31 - now let's run this program and see if
04:33 - it's working properly or not so we call
04:36 - our function with three and we get fizz
04:39 - beautiful let's call it with five we get
04:43 - Buzz perfect what if we call it with 15
04:46 - we should get fizz bus however we get
04:50 - fees what is going on here the reason
04:53 - this happened was because when we pass
04:55 - 15 here line two is executed obviously
04:59 - 15 is divisible by three so that is why
05:02 - we immediately return fizz to solve this
05:05 - problem we need to move this condition
05:08 - which is more specific to the top so
05:11 - I've selected these two lines using alt
05:13 - + up I move these lines up beautiful all
05:18 - right now let's run the program one more
05:19 - time
05:20 - so we get fizzbuzz once again let's test
05:23 - it with three now we get fares let's
05:27 - test it with five when writing functions
05:29 - don't assume that your function is
05:31 - working make sure to test it with all
05:33 - different kinds of values let's test it
05:36 - but 5 we get Buzz beautiful what if you
05:39 - pass 7 which is not divisible by 3 or 5
05:42 - we get 7 beautiful
05:48 - hi guys thank you for watching this
05:51 - tutorial my name is Mohammad Ani and I
05:53 - have tons of tutorials like this for you
05:55 - on my channel so be sure to subscribe
05:57 - and also please like and share this
05:59 - video if you want to learn Python
06:01 - properly from scratch with depth I have
06:04 - a comprehensive python tutorial for you
06:06 - the link is below this video so click
06:08 - the link to get started thank you and
06:10 - have a fantastic day

Cleaned transcript:

one of the questions that often comes in programming interviews is the fizzbuzz algorithm you might be surprised that there are a lot of developers out there with even years of experience but they don't know how to solve this simple programming problem that's why I decided to include this in my course so let's see how this algorithm works and then you can spend 10 to 15 minutes on this exercise on your own so here we have a function fizz buzz that takes on input and depending on the input we give it it returns different results here are the rules if the input that we give it is divisible by 3 it will return the string fizz let me show you so we run this program we get Fitz if the input is divisible by 5 it will return Buzz take a look here's buzz now the third rule if the input is divisible by both 3 & 5 it will return fizzbuzz so let's pass 15 here we'll get fizzbuzz for any other numbers it will return the same input so if I pass 7 it's not divisible by 3 or 5 it will return 7 itself so spend 10 to 15 minutes on this exercise you will see my solution next all right let's see how we can solve this problem so we get the input and check to see if input is divisible by 3 then we can set a variable like result to phase now let me temporarily simplify these rules because I want to show you a really cool technique so let's imagine if the input is divisible by 3 we'll return fizz otherwise we'll return bus so LS we set the result to buzz and finally we'll return this result variable this is one way to implement these rules but it's not the best way there is a better and cleaner way let me show you so instead of defining this result variable and then returning it we can simply return this string here and also here and then we can get rid of line six so we remove one unnecessary line of code this was one technique the other technique I want to show you is when you have an if statement and in your if lock you're returning a value you don't really need an else clause because if this condition is evaluated to false the control moves to the else clause and all we are doing here is returning a different value so this is the only possible outcome so here we can remove this else clause and simply return bus so with this technique I remove an unnecessary indentation as well I've made our code more linear okay now let's go back to our original algorithm so if the input is divisible by three we'll return fizz now we check to see if the input is divisible by five will return bus so here we don't really need an Elif because if this condition is false we'll get here anyway so we can check if input is divisible by five we will return buzz once again if this condition is false the control moves here now we check the same if the input is divisible by three and it is also divisible by five then we will return fizz bus now this expression is a little bit long I would prefer to make it more readable by putting parentheses around the first and second parts like this that is cleaner now if this condition is also false the control moves here that means our number is not divisible by three or five so we should simply return the input once again we don't need an else or another if we simply return the input now let's run this program and see if it's working properly or not so we call our function with three and we get fizz beautiful let's call it with five we get Buzz perfect what if we call it with 15 we should get fizz bus however we get fees what is going on here the reason this happened was because when we pass 15 here line two is executed obviously 15 is divisible by three so that is why we immediately return fizz to solve this problem we need to move this condition which is more specific to the top so I've selected these two lines using alt + up I move these lines up beautiful all right now let's run the program one more time so we get fizzbuzz once again let's test it with three now we get fares let's test it with five when writing functions don't assume that your function is working make sure to test it with all different kinds of values let's test it but 5 we get Buzz beautiful what if you pass 7 which is not divisible by 3 or 5 we get 7 beautiful hi guys thank you for watching this tutorial my name is Mohammad Ani and I have tons of tutorials like this for you on my channel so be sure to subscribe and also please like and share this video if you want to learn Python properly from scratch with depth I have a comprehensive python tutorial for you the link is below this video so click the link to get started thank you and have a fantastic day
