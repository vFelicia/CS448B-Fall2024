in video 10 I want to talk about lists and if you have studied programming in a more theoretical sense maybe for an exam you may will have come across the term array and lists are really pythons version pythons implementation of arrays so you can kind of take lists and arrays to be fairly interchangeable we'll also look at both one dimensional and two dimensional lists which are which work in the same way as one dimensional and two dimensional arrays okay before we start talking about a list let's just start talking about more of an umbrella term which lists for under so lists are an example of a data structure and the date structure is an organized collection of data and there are different data structures both in theoretical programming and also in actual languages Python has four main types we have lists we have sets we have tuples and dictionaries we're just going to look at lists in this video but I mention where the other ones differ as we go so why do we have data structures why do we need to have organized collections of data because well I mean we could just set a bunch of variables say we're trying to say our collection of data is our shopping list so the items on our list we could do you know item 1 equals Apple item 2 equals chocolate if you're feeling a little bit less healthy from the Apple and so on we could do a whole whole sequence of variable assignments but this is not really a very efficient use of our our code is going to be very difficult to manage if we try and package this in a nice organized collection it's going to be much much easier and with 2 items this is not a great example but if we took this down and ending a hundreds of items item 150th we've got a massive order having so many variables is not going to be very useful at all so instead we could set a list and again lists are identifiers so we can call this a shopping list when I say identifier I mean I can set a name it's not given to me by the program so I call it shopping list same sort of rules as where variables it's best to start at lowercase best not just out of numbers and avoid words like some or Len words which are built into Python so in shopping lists and the syntax for defining or yeah defining lists is with square brackets this time and my first item here was Apple someone Apple but after I diva string I'm going to put a comma and then I can put my second item in with a chocolate and I can continue this up to item 150 if I want to it would still be quite unwieldy but it's all under one name now if I run this or we haven't done anything yet let's just talk about this a second so I've got two items here I've got item 1 and item 2 but first we say is people think of a rink of lists in different ways you might think of a variable as being like a box and box has got a name which we give it to and inside the box you know we've got the in this case Apple as our string is stored inside the box a list is like a series of boxes but stored right next to each other and belonging to the same name if I do switch to interactive mode to just show you a few things presenter I've now to find this list called shopping list we've just two items that we say defining because really we're defining the structure here we've got two items stored in one dimension but I'll talk more about that later I can use in very similar to a variable I can change the values after they have been defined so I can we you know kind of redefine this with just maybe just Apple so one item instead of two oh Santa that's perfectly fine if I was using at Apple which is another data structure I mentioned earlier I can't do this at Apple is said to be immutable you can't change it after its first to find a bit like how constant can't be changed after is for us to find except for in Python we don't have constants I can also have an empty list so if I are maybe not quite sure what I'm going to put in it a bit like how you might initialize a variable to be a value like zero or an empty string we can also set a list to be empty by having no item in it by waiting lists for copy items are separated by commas and so far no comments here I've got no item so that's perfectly fine and wonder how strings can be accessed via their index over cleaned of different characters so if I do Guido as a name here assign Guido to variable names I don't know why PAP low but names we can index this by going names and following it with square brackets and putting an index number but we start counting from zero so capital G here is four zero index the first item but the zero index or nominee item the first character so we get G and so we can index it using that and really a list works in the same way a string is kind of coming from a list really so if I just set another one do a names properly this time just overriding this variable so we kind of both names as a variable and a list at the same time this will just get rid of the variable set Guido and let's do Alice Bob and Charlie ABC like that we've got now four items I kind of a same way use my index number so again zero in this case is not going to be capital G this is going to be Guido like that because we're indexing the zero for item in the list or the zero index if I wanted to get Charlie returned and I used V next number four but as Charlie is four for four item this is going to give me an error an index error because my index is out of range because really charlie is the fourth item but has an index of three so I should have used three not four and we can use all have the same index and drinks we did with strings you know if I want to start to index number two and just continue to the end I can do that that's perfectly fine we get Bob and Charlie if I want to use a negative index to start counting from the end I can do this time maybe a negative index of minus three and then the game just continue this to the end like an hour going to get Alice Bob and Charlie I can reverse the audit in my list using a third argument fever index if I want to swap it round lists have got an order which we can change other structures like except doesn't have an order get to order doesn't matter of the items but they do in lists just to show you a few useful functions and methods there are loads and loads of ones like with strings I won't show you all of them if you need eight pick one basis to google it no honesty because there'll be one built in or some method so you want to sort it or reverse it or something like that you can look up already showed you reversing actually earlier but anyway so useful one is checking the length so in this case I've got an empty list and I can check for length with the Len function so I can type it in list because you get 0 here because nothing's in it if I add 1 to it so you might think you can once you have to find it like this maybe if you want to add an item you use the zero index and set it to below the issue of this is really an error because it says for this assignment index is out of range which is because the 0th index doesn't exist yet because you've got no items at all and so python can't add in the item it can't change the item which doesn't exist so instead we have to use a difference this case in this case a method not function because we apply it directly to our object in this cases lists we do our list name and a dot and then we do our font in our method which is append so if we are appending a item we're just adding the item to the end and we don't have to worry about using any index because we're just putting a TV end no matter how big the list is at the moment now if I type in list and let's just leave a length actually length for the list I should get 1 now we have our item in the list if I want to get rid of this item I can use list dot remove and this will get rid of your first instance of the item if you have multiple instances of this item it will only get rid of the first one and we can check the length again you should now have 0 because it's got rid of hello I like we did with strings we can use the in keyword to get a boolean value to see if we've got a string in our list so if I do let's do Python in list we should get true returns and of course if we were doing this in script mode we'll need to set the sign back to a variable if we want to do a C++ to see if it's not in the list we could do not unless we use a boolean operator not so you just reverse it and because C++ is not in the list we get true that is like a search which doesn't tell us where it is so we can use list dot index and then supply our item looking for and should return us fiend s index exists that if I do list but index and do C++ first time like that we get an error because it's not in the list so you may need to do this check first and then have an if statement with this as a condition and then you can use to be index as well to prevent this error just to show you a few more things we can do so we've got two lists to find like this I can use what is either the addition or concatenation operator depending on the data type if I add these together let's see what happens it puts the two lists together so despite the items here being integers it doesn't work like normal addition it works like concatenation of participants together if you want to maybe change ABC so that it also includes XYZ as well so kinda like appending another list to it not just one item in that case we can do your mental assignment and do plus e cos of an XYZ then if I get X if I get ABC again it'll have all of the items and XYZ appended as well so I've got a list which is 1 3 4 5 and I just missed out to by mistake and I want to go back and change it because the lists are ordered and because we have these fixed indices I can't just add in 2 and it would fix itself so a few ways you could approach this one of them might be to try and change the index of this case if you want to change for e 2 2 this would be an X of 1 I changed just a to visually being it doesn't really fix the problem because it's replaces free and so we're also missing for you between 2 & 4 so instead we can use a a method in this case which means I have to put the list name then a dot and then the method here it's called insert and it takes two arguments in four brackets the first one is the index we want to insert it so in this case because I've made a mistake I want to be index 2 to get free back then I'll do a comma and then I'll put in 3 which I wants to be put into that index and press ENTER and now if I get my list have a look at it we should have index well index 2 with the item 3 under it okay I want to end by just talking about dimensions which it won't get what sounds a lot harder than it is so I'll try not to overcomplicate it so so far I've just looked at lists which operate in one dimension so thinking like you know an x axis the x axis on its own as a line is operating in one dimension and so far we've only store data in one dimension in one direction really just horizontally so you kind of got like a row of data here one two and three are our items in this list it's only stored in one direction well tentatively we can use two dimensions so to dim list thinking about adding in that y axis alongside the x axis we can now have a second dimension and really in practice this just means we've got a list within another list so I start off my list unusual but instead of putting in like a single item like this I'm going to put in another list so I didn't square brackets I can now just do one two into three in this one I close off this list as our first item so I do a comma then add in a second item to the game going to be another list and let's do four and five and six I close this off and make sure I close off again because really we've got in our first position our first index index zero we've got a list 1 2 3 then our second position our first index we've got 4 5 6 again in its own list and it's why we have double square brackets here so if I have a look a bit so 1 dim is really easy to index we index with just one number looks at how we start counting is 0 now with to them if I do exactly the same thing and using the X of 0 press ENTER I get my first item which in this case is a list it on its own so 1 2 3 but if I want to access one of the items in this sort of sub list I have to use a second a second index number so I'll do 0 say I want to get a 1 in this case I'll do another 0 because in this list 1 is for zero index press ENTER and I get just 1 if I want to get just five I'm going to again just make sure I use my identifier and then because I want because five is in this second list in index one I'm gonna put down one but as I sort of row if you can imagine a table and now we're looking at four column so I've looked over rows now looking at four column we want to get I think I said five which is our index number one in that list against we have one one and this will get us five so if you are wanting to imagine this 2d array as a table we would have you know warranty free as a row then we have four five six as a second row and it means our first index number is going to be our row index and our second index number is going to be our column index because once we have sort of targeted a row targeted an item we can then go inside for item and look at the individual item of in it so this would be really our column index but you may not even need to think of it like that that may have confused you as if it has don't worry because if you've understood it that's fine and really you you learn this by playing around with it a little bit so trying to figure out you know I want to get six this is going to be a first and next one a second index of to get six you can also have in you can also have dimensions further than two you know we can kind of imagine a threedimensional object we condom we can't imagine a 4d 5d 6d object because it don't exist in our real world they can't exist in Python so afridi all right let me try and do one here okay so I've done a I believe is a free dimensional right here six it takes a little bit of concentration because the character start to blur together so you can see here we first will have our sort of outer list which is fine our first item in this list is a 2d array of itself so we've got so that ends it ends here so we've got within it its first item is a list on its own the second item is another list then we have a comma which is for our outer list and we have the same thing over here as well so let's try this and try it in dexterous it's going to need free index numbers to target of individual items in this in this case we could just start easy and do a sort of triple zero index like this and we should get one because we're looking at our first item and our first item again him in our first item is one great to get 12 it's not gonna be quite as simple because I haven't done this in a nice you know consistent order because I've got two items in our first level our first dimension horizontal so this would be I want to get one because we start counting zero again in each of our sort of vertical list we've got two lists so again I'll have one here and then finally once we get beyond that we're now in this list we want the third item which would have an index of 2 so I should get 12 here which I do which is good and so on so I could do a fourth dimension as well which will just confuse things even more if you've got that many dimensions you've got a kind of question why you've got so many it seems unnecessarily confusing but I'd really recommend you have a play around with this set some or set some lists I should say yourself and practices indexing practice targeting individual items to try and get your head around how this works I will now suggest you pause the video and have a go at these two questions which are not too long question one is a little bit tricky I think maybe you won't find it tricky let's see about predicting the output from two blocks of code and question two is about programming a tiny little program to mimic what might happen at the guest have a door of a party with a look maybe a bouncer checking your list and this will require various wings we looked at in this video and also the if statements from the last video