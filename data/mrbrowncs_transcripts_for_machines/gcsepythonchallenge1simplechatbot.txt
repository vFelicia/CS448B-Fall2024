hello and welcome to a series of videos which I'm calling Python challenges the idea being in these videos I'm going to set a programming task for you to try and then I'll show you how to do it so I'll show you the solution and I'll do it myself the idea being if you're learning programming really you can't properly learn the skill of Python or skill of programming without practicing yourself and so these are meant to give you another opportunity to practice skills in this miniseries they'll get progressively harder or back as your idea at least hopefully it'll provide some challenge for you but right now we're just doing a really simple chatbot in this video because I want to just practice some fairly well for kind of most basic skills you learn when you're doing programming so printing dnev user input assigning variables and doing some basic arithmetic calculations these challenge videos are made in support of a set of tutorials I made on Python which will be linked to that playlist in the description if you're not aware of it I imagine most people watching this are in that palace because o intersperse for tutorials with V challenges because really is important to practice what you're learning at the end of each of these videos I have these tutorial videos I have got a like or try now exercise but they'll tend to be a little bit shorter than these challenge videos and also trying hours are for that video these sorts of these challenges are going to span a few videos at least so in this case there are five videos which cover the content needed for this so right now we're going to start by creating what I'm calling a simple chat bot so a chat bot is a program where you can interact as a user will for program in some capacity so this could just be like a parrot repeating stuff back at you they can be quite clever I mean nowadays we'll have things like a lexer and siri apparently this logo on the left is for Siri where we have a much more interactive experience you know you can ask for pretty much anything a make and reply with what seems like a customized message to you the very rely on loads of complicated things like natural language processing machine learning and may draw in data from loads of different sources right now we're just having an effective vehicle parrot is just ripping stuff back because I want to be able to create a simple trap or program where the user can have a basic conversation with a program the user is going to be asked questions and Peter's going to be able to respond using their answer making it slightly interactive so it's not quite interactive in the same way as a lexer or Siri would be but we can do something like this where in blue we have your computer's output and in black we have the input so first of all what is your name is being asked user types in Guido presses enter and Guido is used in the following output from a computer so the actual input from a user is being used along in the program so it does make it a little bit interactive and allows us to try out a few different skills like basic maths because we can also ask some math questions so it can't become a bit like a quiz if you want it to and of course you can expand this if you want to make it more impressive if you know more Python but you know that'll do for right now assuming you are just beginning so to help you to help guide you towards how we can solve this and really now the goal here is not to create a chatbot you can sell for loads of money to Apple or Amazon the goal is to practice four skills and so here are some success criteria which rule if you hit each of these bullet points will mean you've created a good program so I want to be at least eight lines of code we want to be able to use prim statements input statements use variables preferably more than one have some comments which explain the code that's really important so good habit to get into and try and use some non string data types so numbers and we can use those numbers and integers and floats in over to operations so doing the more advanced ones like modulo or exponentiation would be really good as well so I'd really recommend now you pause a video over on this slide or the previous slide to understand the tasks have a go at yourself it shouldn't take too long and then right now I'll show you a solution of course your solution doesn't need to match mine totally we want to have a bit variety but if you try and hit these criteria that would be perfect so I've copied and pasted them in here so I can keep track of what I'm doing but I don't want me to be part of my program so if I run out I'll get an error because visa this is not valid Python code I've got invalid syntax and so if I want to get rid of this and make sure we're not get rid of it but make sure it's not being run by the computer I can surround it in triple quotes I may not show this in a video actually yet but triple quote is like a multiline comment and so a single comment is just a line of code which doesn't ever get running by for computer allows us to explain our code allows us to draw stuff down maybe do a bit of debugging to get rid of a line if you want to keep it but not actually run it but it doesn't work over multiple lines so that is a nice trick okay so minimum eight lines of code we can sort of just do that eventually first of all let's do a print statement so if I start off by doing something similar to the example I showed I could just do print hello maybe we do hello how are you and so I'm doing print is a builtin function to Python I won't explain all of this stuff all over again I've hidden the tutorials we have print we have our brackets and we supply some data in these and the way print works is anything inside the brackets will get shown to the user on the screen I should say this program is going to be just over a command line so just text somewhat serious something like Alexa can be done either voice as well not only text okay so that's fine for us our program is not a very it's not interactive at all I'm running it it ends and that's it it's only one line so you want to be able to get some input from the user so what I can do is now use input print is for output input is for input and what we can just we can just have input like this and if I assign it to a variable so if I do because just took office what intro it's a good idea to try and give your variables names which aren't random but it's a little bit hotter to name that one so I want here just a reply so if I now run this we're still only hello how are you but now there's a prompt here for me to as a user type something in so I can type in I'm good thanks press ENTER now our program ends so we've sought some work to do here but what's happening is this value I'm typing in I'm good thanks is being saved under the name intro and so I can use intro 8 at my program to refer to that value so it's been temporarily saved once this program ends that value is lost maybe as an attempt to make this interactive we can print again and print something like or we could try and use for users answers so if I now set up in quotes because quotes make it a string so some text data you essentially I find out I could intro in Simon's brackets I can just repeat this back to the user bitola add something on to this so I can do is follow this reference of our variable with a comma and this allows me to then supply it some text data after it so if I do what can we do if I let's let's do it just before intro so if I say instead of saying I'm good thanks so we said hello how are you and I just said I'm well we could do we could get for computer to say I'm also and then repeat back whatever for user set so if I add back comma to separate it because we're dealing here because we it's just it's a way we can separate it because what will happen if I just do do I'm alright this time I'm also I'm alright a bit bit silly but it does the job of repeating back to the user so this comma is being replaced is in this line for commas being replaced by a space a space the space character is a character I could also do a plus instead for concatenation is one of our operators but I can I want to make sure I had a space because otherwise it's just going to be joined together so if I do okay or not I'm also I'm oh we've got the no gap between or so and I'm so comma in print is quite useful for that purpose let's now try and hit our use of nourishing datatypes and have a little practice with this by now maybe asking about age in Python we have two numerical data types we have integers and strings I integers and floats not string the strings of the text but it can also numbers as text just not treated as the same thing as integers or floats so you can see in the third line I've left the insides of these brackets empty what you can't do but also you can put text inside this in a form of a string inside for quotes and it is a bit like it's called wrapping a print statement inside in person because any phenotype in between the brackets will get shown to be using the same way the print wore so if I now do could do what is your age and then I can make this interactive by maybe we are wanting to upstage our user and we could just say because they're my ages 10 years plus your age maybe just a short practice so you could do my age is and then we could again reference this variable so we could do age and now use plus term so I've got this arithmetic operation simple one we're just adding a number to another number and that will be fine for now except it won't quite be fine I mean firstly I've added a space here we know this we know this comma is going to add a space for us like I did up in 94 but also we're gonna come across an issue here which you may well have come across as well if you've tried this I just do I'm eclairs well spent a property this time I'm also I'm okay what was your age and if I do I am 25 we're gonna get an error because it says type arrow can you concatenate string not integer to string concatenate is where we are trying to add two bits of words to get two words together two strings I'm for plus operator it can be both addition and also concatenation depending on the datatypes here we have an issue of later types and view is for all inputs from the user are strings by default all inputs are treated as text even if I have a number in so hopefully the users going to enter a number like 25 but 25 to a computer when its input is treating about like text and not a number so in line 7 is getting confused it can't add 10 as an integer 225 as a string so you need to make sure we cast this value into an integer cost it from a string into an integer this means converting it really and why we do this is by wrapping a function around our value so I can just add a reference to int into the builtin function to convert from another data type into an integer and I make sure I add these brackets either side of my own when I end up with two brackets on the entire fighter shift this along so it can get a little bit confusing but now we should let Aramis of our issues if I could just type in okay here was age 25 we should get 35 printed out to the user maybe I should delete these criteria as we go because we can also maybe add a comment on at this stage to be able to get rid of that one so a comment like I said before you can do this multiline comment with triple quotes but you can also just a single line comment with a hash tag symbol or just a hash symbol as it's probably properly called and so now it can maybe explain what's going on in line 7 this might be quite useful if you're showing your coach and someone is a bit confused but what's going on we could say by default or with inputs strings but we want age to be treated as an integer so we cast it and say that right quite long line but that what that will do as we get rid of that criteria two criterion I should say so let's try and just use we have used one over two operation bullets use one of the slightly more or slightly more tricky ones in there trickier to understand what's going on so we could do something like was in the example so we posed a question to you the user let's do this in a print statement why not could do what is let's do 27 mod 4 now we could have a variable could answer now let me just get the user don't need to put anything in here to answer this for us and again we want this to be treated as a number but actually here it doesn't matter so much because we're not gonna be able to actually see if it's correct yet we need to learn about if statements first but then we can sort of take this answer and compare it to the correct answer so we can get the computer to work out what the value is here so very something like but correct answer is I mean like in line eights full of us with a comma and get to work out what the answer is so here lindy 27 i'm a symbol the operator for modular division in python is 4 % and then it was my for like that whatever what operator does is fine for remainder in sunday the division here is 27/4 how many times has four guys 27 when it goes in six whole times because 6 times 4 is 24 7 times 4 is 28 which is above 27 and so it doesn't go in completely we have some remainder and so it's not going to be 0 here but here the remainders got the result from 37 mph or should be 3 because we have 4 going in 27 that goes in 6o times remainder 3 and that is what mod returns so we should get free printed out here if we try this maybe it's fingers crossed this works but do all of this again what's doing somewhat foolish to say vs. 5 go down to 3 so it's not really interactivity we could add in a bit further along something like a bit like in my example we could say you said what did they say what we can use the answer variable to compare it like I say if we want to actually make it more like a quiz and actually properly compare the proper answer to their answer we can read to you some of my if statements to actually do about comparison which will be covered in the next few tutorial videos ok so this is not a particularly lovely program in terms of well I mean it's a start right and the whole point is to practice for basic skills we can work our way up you'll see if you try this and play around with it will be certain issues so for example here hello how are you could say no I'm saying hi but that's fine I could do it here where we wanting it to be a whole number we're trying to cast it to a whole not if I don't type in a hi now if I type in hi again let's open a string it's now trying to convert a word into an integer and it can't do it so we get an error so in future videos quite a few videos time actually we'll figure out ways we can avoid this you can't avoid this with loops and also with for something called exception handling and so there are some issues with our code already also it's a bit inconsistent right I mean sometimes I'm going onto a new line when I'm doing my answers so to say okay and sometimes I'm being asked on the same line and this is because I've sometimes using print and sometimes using just input to sort of ask for stuff to the user print every time use print goes on to new line unless you add in and she changed that so it's a bit bit messy you might want to add in a space when we use input because otherwise our prompt goes right after our question and a loose but messy it's nice to add a space I I think personally so there's some work we can do and of course in future videos we can make this code a lot more complex so if you would like to see this code and have a look at it I'll be a link in the description please don't sell it I'm sure it's worth lots of money and also please ask any questions in the comment section as well