however going to begin looking at Python properly by starting with some arithmetic operations not the most exciting flamboyant topic to start with but they're really important as you move forwards so I recommend as you watch this over trying for different operations as I do it so copying what I'm doing maybe in a different tab you could split screen for video or there'll be some questions at the end which I'd really recommend you try to make sure you have understood what's going on no answer make sure you've watched the first video it shows you how to install it and also it talks about some of the basics I'm going to be working through this on replic if you are doing it in idle you just need to use your first show screen like this and type of code here press ENTER to run it or in this case not run it to make things that we clear out here we're going to ignore the lefthand side for time being and just drag this across over here if it will let me and now we've got what is effectively what we would call the interactive interactive show if it was in idle so you can see here I've got two faces white box is my cursor effectively if I press ENTER a few times for cursor follows down and we left hand side we have a prompt which is sort of an orange ooh rusty color and that's showing us where we can write our code you'll notice if you try and type above your cursor it won't let you because that line is effectively being run by the computer or reference computer already so we can't go back we've already run back code in this case we write any codes who didn't do much if anything so now and we're going to talk about some operations and first of all let's talk about some numeric operation so operations which work on numbers we've got the four basic ones so addition subtraction multiplication and division so let's start of addition which is exactly the same as it would be if you're doing it on paper that's called really Python is just a big calculator so 5 plus 6 is 11 works normally subtraction is the same at beef equivalent of a it's a 5 minus 4 is 1 it works normally also we can use in Python negative numbers so 3 something like 5 plus minus 6 I should get minus 1 which works in a similar sense Friday 10 minus minus 5 I should get 15 because my singing and number adds it so it works pretty much normally multiplication is different only in the sense of a symbol is different we can't use an X of an X like symbol because that's a letter so instead we use Asterix in Python so something like five asterisks or star ten it gives us 50 what's normally again same idea of negative numbers five as minus ten this time should be minus 50 it works as you'd expect if you type something a bit wrong if you knew something about ten other note times d by mistake press ENTER you'll get an error message now these you'll see a lot of you'll become very familiar with me if you don't become familiar with them that sir I worry because everyone does some people get a little bit concerned getting errors which but I guess because in other subjects if you get stuff wrong an error feels like getting something wrong but actually it's very very normal in programming you'll see it over time even if you are an experienced programmer really programming is all about fixing errors and because we're doing it in this mode in this interactive mode and we're doing it line by line so I type in line presenter it runs having an error here is fine we're just playing around at the moment if you were doing proper programs we'd do it inside the script mode which is over here we're just doing it we're just messing around here so if I go down and look at the next operation if actors talk about us we're missing division here actually it's do division so division is we have a forward slash so if I do something like 80 1/9 should be 9 you'll notice here we get nine point zero as our output the output comes below this prompt driveway and you notice we've got nine point zero here and if you look up at the top we are not getting one point zero 11.0 a 15 point zero it's only happening once we're doing division and that's just how hyphens developers decided to implement division we have different data types and so for too many Meredith types in Python are integers and floats integers are whole numbers so 11 is an integer whereas 9.0 is a float also called a real because we have that dot 0 if we got rid of 4.0 if we 9 that be an integer but 9.0 is a float and those are two types two examples of data types there are many more in Python and we have got to be a bit careful sometimes with data types for can cause some issues but thankfully python has builtin ways to convert between different data types if you are really concerned about that having a 0 after your division you could do something like a t1 two slashes to for slashes 9 this is floor division so it gets rid of any decimal point effectively show you a better example perhaps if I do maybe 25 for division wings to Division 2 should give us 22 12.5 even press ENTER I get 12 is getting rid of 4.5 at the end this is really really useful web apps more useful even is mod so mod in Python is 4 % so if I do here instead 25% or mod 2 which stands for modulus instead of 12 I'll get a remainder which was left over so if I do so 12 goes into 25 2 hot times 2 times 12 is 24 and we have one left over which is 4 why not returned from modulo division and modular division is really really valuable especially in computer science it crops up all the time especially dividing by 2 because we're doing in binary and that's just how usually various means work and say encryption or so in parallel programming mode is used already often lots of different algorithms modular division is used so we have the double for slashes is instant division or so called div and the percent sign is modular division also called mod after this for main operation I have forgotten about is where we want to have a power so something like 2 squared we could do what 2 squared is a bad example it's 2 to power 4 I could do 2 times 2 times 2 times 2 make sure giving me 16 if I ran that line by pressing enter that's fine but that's not great for doing massive powers again you're feeling some of the encryption or didn't have huge powers who don't want to do it like that it's much better to shorten it by we would demasters right to the little superscript of 4 so instead we use in Python to asterixis next to each other to power for do it like that press ENTER and I get 16 that way for a few different words for what four words you microphone about it as an indicee also an exponent you might said 2 to the power 4 it's how you pronounce it if you were saying it and this whole process of raising one number to a power is called exponentiation one of the final things to show for this is how normal mathematical rules also apply so you may have heard of odd masks or bid mass which is your operations which is the same in Python as it is in normal maps so you have your brackets evaluated first then your order or indicee you exponent whatever you want to call it your division then your multiplication addition and subtraction finally sohbat mass or big mass so similarly let's just do something like if I use all my free plus two plus one times two should give us 12 which it does because according to what mass we are evaluating our bracket before you're doing on timesing by 2 if I get rid of that bracket and do just free plus 2 plus 1 times 2 because we are now evaluating multiplication before we are doing addition we are effectively doing 3 plus 2 plus 2 because 1 times 2 is 2 so this time we should get 7 which we do so again the rules do track into Python you have got to be a bit careful you can't just only relax your mathematics because you're in it is it is the same thing even if the symbols are a bit different sometimes ok now I've shown you each of the operations and you may have tried it yourself I really recommend you pause it especially if you haven't tried it yet and think about 8 examples here first of all in your head or using some paper go for each one and try and figure out what Python based on what we've just looked at or evaluate fluency evaluate means carry them out so what would Python do if you typed in each one and press Enter what would be the output shown below and then also once you've decided for yourself actually go into Python and try them to see if you were correct not that important if you're not correct but trying to figure out why python is given the answer it is