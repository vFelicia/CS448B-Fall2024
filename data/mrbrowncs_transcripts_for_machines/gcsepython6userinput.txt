hi in our sixth tutorial let's start to look at how we can take data from users and start to do various things with it okay so we've talked about outputting there is more we could talk about but that would do for now to input data to a computer we use the input function in python this is also built in like sdr and print we'll look at how we can make our own functions in future videos a function is sort of containing some code and it performs a particular job in this case inputting is allowing us to type stuff in printing is showing stuff on a screen they're performing jobs which invocation builtin functions are difficult for us to do ourselves and so the events of python have been kind and have done certain things for us and we can use these functions in our code so input we have the identifier which is input and followed by our brackets inside brackets is where you put some data which the function can use in the same way that prints advert string inside of a number of a variable so we can run this code now with empty bracket so nothing is supplied to input and we just get a cursor on our shell and i can type stuff in here and press enter but nothing is happening because nothing is happening with our input so what i can do is set this input to be a variable so let's call this user input i can't call it input because input is used by the input function so if i now run this again and type in qwerty again and press enter again nothing's happening because all we're doing is just say saving this value qwerty to this variable so let's do this a third time but now print out use it and put down here and let's run again third time lucky qwerty and now we are saving our variable and then immediately printing out to the user of course in a prop program we do some processing after this step and you'll notice when i run this that initially nothing shows up which isn't very useful to the user if the user has no idea what to input or even if they're meant to input so we can do is have a print statement say above the input but also we can supply a message inside this input the message is going to be text and so will be a string so i can say enter your age or let's do we did price enter into the price like that and now we can stop this and run it again and it will now be clearer to the user what they're doing and you can see we can actually type in the price after this if i type in five and press enter i get five outputted like this and if i get rid of his first print statement let's replace it with the one we had before with my separator which is an empty string an empty string being just two quote marks back to back so if i run this we'll get what we had before except it now adapts to what we are inputting so if i do instead 10 press enter we get the price being 10 pounds so immediately it's much more useful to us all right let's do a tiny bit of manipulation to this value in the uk the sales tax is 20 for v80 20 of 10 is two and so in total we want the new price to be 12 pounds once you've added the tax in some countries like america you um they don't give a tax front until you actually buy the item which is quite annoying so we could do we could do user input times with the asterix 1.2 because 1.2 is increasing the value by 20 or we could shorten this using an augmented assignment and just go times equals 1.2 because we want to update user input with this latest value and then if i do something very similar and copy this and just change this to something like the post the post tax price is what i if i now run this let's see what happens so first of all i'm prompted again for for price i can put it in let's put in 10 press enter and we get an issue so actually it's printing out the price initially perfectly fine this is this line line four that's working fine but then it stops working in line 6 which is where we are doing this augmented assignment this type of error is a type error meaning we've got some issue with our data type it's because it's saying we can't sequence by noninteger of type float which is a little bit hard to understand but the issue here is for this value of user input if i previous by soon print and use another builtin function called type user input file just comment out these two lines commenting is really good because you can get rid of certain lines make them not run when we are trying it if i try this again we'll see that actually this input is going to be a string so class for class the type of the input user input is a string not a float or an integer which would be fine for this calculation so the issue is it's trying to multiply what it thinks is a some text with the value 1.2 and it can't do that and it can't do that because it's not the correct data type we need to do that casting which i talked about earlier let's get rid of this line that's me just showing something so we need to convert user input to be a float and because float is quite a short word for casting a function for this is just float it's not a shorthand version and we can apply this casting of a few different points it's going to be before user input here so just to make it quite readable let's just add in a line here where we are setting user inputs we're changing the assignments from a string into a float and so we can do this there are a few ways you can do this but i think this is fairly readable we're changing user input which is a string at this point into a float and then this code should work so i'll type in 10 press enter price is 10 pounds and the post tax price is 12 pounds it doesn't look particularly pretty but i would personally try and convert it at the earliest opportunity so do it right at the top when you are you want to wrap your input which is where the actual value 10 is coming from as a string wrap that in a float casting operation and then it will change straight away so actually this line 96 is no longer needed you'll see the difference is that it says here the price is 10 pounds with decimal point it's because already at this point that 10 is a float not a string because i've done it in the second line now pause the video on this slide and have a look at these questions two and three require you to do some programming if they are too easy if you can do them really quickly then try and expand and try and increase the challenge by changing the problem to extend it