hi the second challenge I'm posing is going to be surrounding palindromes the idea being to practice a few different techniques which are covered in video 789 in my playlist and of course videos before that it's been particularly I'm focusing on constructing basic conditions doing some string slicing using selection and using a couple of builtin functions as well so to do this challenging you to know of this these topics so in this task in this challenge I want you to be able to write a program which allows a user to enter some text and then this program is going to reverse that text and print it back to the screen so for instance Hello would become Olly because that is the reverse so that's the first stage of this program the second stage is where the palindromes come in so it should also check if the text is a palindrome and a palindrome is where we have the text which is the same forwards as it is backwards so race car and kayak are both palindrome so if we look at those two words if you flipped around if you reversed it it's the same word and so that's what a palindrome is hello isn't a palindrome because Hello is not the same as ollie so you can also have once you remove punctuation and spaces you know us to have phrases which are palindromes so for example do geese see God if you get rid of those spaces and punctuation and make it a lowercase this would also be a palindrome as well so that is my core task for you in sort of two stages for second stage does rely on the first stage to help you do this here are some success criteria so it should be some user input we should check to see if this input is longer than two characters we want to use variables with meaningful names we want to use operation to reverse the input use print and keep the user in communication with the program so they know what's going on use if statements with a condition use else as well and have two comments at least to explain what's happening and if you'd like a bit more challenge I've written some extension criteria as well the first two are not covered by any of my videos I haven't shown you how to do this so far which is quite cheeky me been asking you to try and do it but actually a lot programming is trying things and researching and you know going beyond what you know already so the first one is trying to work get get your code to work on phrases and not just words so like Dukey see God by removing spaces and also punctuation and secondly see if you can detect if as input is just numbers or letters and the news fatten your output so for example one two three two one is a palindrome it's the same for words as it is backwards but it's also a palindrome number to try and distinguish between it being a palindrome number and a palindrome string four are a few ways of doing the second one in particular the third one is about writing a function which sort of contains your key code here which I won't show you how to do that because it'd be covered by a future video but if you do know how to do it it's a good chance to practice that skill as well so now I'd recommend you pause on one of these slides and have a go at this yourself I'll now show you a solution if you want to just skip to the solution you can have a look in the description for a link but yours won't may well be different to mine okay right so I'm in Rhett plate which is how I'm going to code this solution and I've gotten a paste in my criterion just to make things a bit simpler so we could just do have a variable text set this to the input do you want some input from user we could just say enter assignment text it doesn't doesn't need to be complicated program here it's basically under this so you have that gap before the user enters it and now I say I want to have a check to see if this input is longer than two characters now this isn't well I suppose but when we do look a loop sin future videos is a slightly better way of doing it but here we can use an if statement switch if statement is for selection here we are doing some decisions some selection between whether this input is longer than two characters or shorter than two characters so we want to condition after our if keyword we want to see if this text is longer than two characters so we need to use a builtin function called Len to find the length of this text string and we want this to be greater than two like so then do our colon press ENTER and now we're going to put our main code here if it's not longer than two we could you know just tell the user the longer two characters I mean the program's going to end at that point now if we had a loop we wouldn't just end the program we could just get them to him input it again so we can now put our main code inside the main body of if because we want it's been augmented characters a voice is not really going to be a meaningful palindrome the program okay so that's the first couple of points out the way really easily my third point about using variables we have to use one variable already it will use more I'm sure and the second bit here about meaningful names this is to say you know your variable should be the name should give you a clue as to what it does because it's really hard as you may know from experience looking at someone else's code first of all trying to figure out what's going on but also that's made much worse if they have just use stupid variable names and giving it you know names of bear buddies and so on so it's good idea to try and keep it relevant I mean here a text doesn't tell you too much but I think it would help you figure out you could be more specific you could be text to check palindrome but it just gets a bit too long and it defeats the point a little bit so we'll kind of say word for deceptive app but we'll keep watch for making sure it's meaningful now we want to be able to use a string handling operation to reverse the input our best way of doing this is with string slicing so the string slicing is where we want to get substring out of one of our strings and we do this using so if we have text we'll do this using square brackets and we can put two different indexes if I want to get index 0 if when I start maybe index to go towards the end and we could just print miss to see what's gonna happen so if I am something like let's do race car as one word it's going to just get rid of off the first so I'm not going to show first two characters because we're starting at counting indexed to remember programming always starts counting at zero and so we've got 0 1 2 we start counting at sea so that's string slicing but we can also use string slicing to reverse it and we have a third parameter in this or indexing operation witches are steps is really if we put a negative step size at negative 1 here what it's going to do is reverse it so if I again type in racecar this time we're gonna have it reversed life I doesn't notice reversed because it's a palindrome if I do it different example if I do hello we should get oli as we'd expect let's just check our conditions work you know if I just do hi we should get to be it should June let us move forward okay so if reverse the input but I haven't really communicated to the user has my next one asked for so if I just edit this print statement I could say your text reverse is and then end off this string do a comma because it's separate it's a separate object to our been reversed text the common remember is going to add a space for us which is quite nice but also I had a coating on here maybe mix a little bit cleaner so it's a bit more community communicative to the user we have already used if and else so we can remove these criteria as well and now he's add a few comments we haven't done our second stage of our program haven't you done anything to the palindrome jet if I hadn't a comment no up here we are checking checking link or input Danny Amana say must be greater to program ends now these comments are not necessarily particularly useful to be honest but in proper programs a bit like how your variable should be meaningful without comments it becomes really really hard to understand what's going on some programs are so confusing they're actually you need a bit of help with our comment so here we could say we are using the step size value as minus 1 to reverse the string all right so let's extend our code to actually make it into a palindrome checking program now which we sort of have got the but you never mean what forth because really we're just checking to see if the original string is the same as for reverse string racecar was hello wasn't so again we're gonna have another if statement nested inside this off if statement need to make sure our indentation is kept consistent because this if is going to belong inside bischoff and you can see the indentation the little gap shows us that it is the case so if I do enough conditioner I want to see if or text is the same as our reversed version of the text so exactly the same string slicing operation again and this double equal sign is allowing us to compare the two sides as opposed to as seen if one is greater or lesser at the other and if they are the same it is a palindrome the alt text is a palindrome way so if it's not else covers all other cases we could do Elif and do text not equals to reverse text but actually we can just do else because it covers all other cases we could say let's hex is not eightpound one like that could drum is just a check this works so race car should be a palindrome which it says it is perfect whereas hello jingling so one thing which could throw a spanner into the works of our code is if I type in race pal with a capital R at the start we're gonna get told miss is not a palindrome and I realized now it says your nothing is not apparent during the text or not palindrome big issue here is I think the human would say well this is a palindrome because the capitalization doesn't really matter but to a computer capital R is totally different to lowercase R they have different codes inside the computer and so that comparison is failing because they're not the same but actually we want them to be treated the same I would suggest so what you can do here is make sure you are standardization standardizing your input if youif capitalization doesn't matter you can make sure all of your letters are going to be all lowercase or uppercase so what I would do right at the start here is after I've got the user input I can just convert whatever input this is to be all lowercase or uppercase so I'm setting text again to be the old version of text I'm now going to call a method on message string handling method which will do this function for us and this is called our lower or upper which makes a lowercase or uppercase respectively looking try us again and if I now type in race car it should get we are being told it's a palindrome because it's ignoring that capitalization however it looks a bit weird because we've got in some Tex race car events reversing it but it's making it all lowercase so it's not quite reversing it it's converting it for us so actually you may want to set this variable up here to be something called maybe standardised standardized again having meaningful names and then we can leave this version of text down here but let's just copy and paste for standardized version down in terms of our actual comparison because that's what we care about the standardized version behind the scenes if user can see the original bit of text so hopefully this works yep no bhavanti would be a good place to add another comment just saying a capital letters don't matter so all text is converted to lowercase okay so those are sort of basic core requirements done in a fairly short program here over a few potentially tricky bits right mostly dealing with the string handling and also using for selection and having nest in selection as well if you want to exclude all text or too many characters but now let's try and get us to work with phrases because that was one of my extension bits as well so do you see God is a example of a phrase palindrome so we're getting Tobias is not a palindrome because we have issues here right for what the capitalisation was sort of fixed but we always have the punctuation here which is going to cause some issues because for question mark is not this is not a poor start it is at the end so what I could do to address this is kind of assume my last character is always going to be punctuation like a question mark or a full stop and just remove that last character now I mean there are issues of this right because it not only there's no punctuation always at the end but also if you haven't got punctuation I'm going to remove your last character if you didn't want to go down this route you could use a slashing operation like this we're starting off of a zero index which we can leave off for include if we want to then our colon and then our last index is going to be the last one we don't serve a minus the minus one in debt is our last character so miss case for question mark the hawai slicing works is we're counting up until bat points we're not including that second index applied and so this should if I just print out standardized and also why don't we print out for a versed version of this as well just to see it we should get rid of it but also but there'll be some issues as well as we'll see so let's try this so even even when we're sort of typing in the case expected here we have punctuation at the end like question mark it is working because it is it has got writ has removed that question mark but you can see reversed version skating not the same as our original version because we haven't got the spaces also need to be removed but anyway it's come back to that because you know this is not really a good solution because if you typed in anything else if you typed in race let's run this again if we typed in a race car without punctuation at the end it's not it's not gonna work because it's removing that last character so let's remove these lines from this sort of slightly naive attempt which you know it's worth ago you won't you definitely programming won't get things first try it so let's instead find another way of removing punctuation now I haven't taught how to do this because it's kind of right there's not much point teaching everything all it's probably impossible to teach everything because there's so much hyphens been around for a long time now so really the solution is when you are programming is to look things up there's no harm in looking things up lots of exams nowadays at university level allow students to look things up during programming assessments because it's unrealistic to learn every single function it's just not how things work in real life so if I if I just googled here remove punctuation Python I'll get lots of responses and choosing for correct you know place to look can be a skill in of itself if you are quite knowledgeable you can just look straight at the documentation which Python develops but a lot of that isn't designed for you know newbies I suppose so this website Stack Overflow crops up a lot and again it's not necessarily designed for newbies either but people can ask questions and there'll be answers to solve the issue they are having and you know these are the answers here from 2008 so it's likely your question has been answered by someone else as it has here so you're gonna read a little bit carefully and you'll see you know as a probably a beginner at this point lots of code doesn't make much sense right now but we have got an answer to our question down here it says for higher versions of Python user following code this line above wouldn't work because this is for Python 2 we're trying to do Python 3 so this line here where we use the builtin function called translate will do the job for us so we can just copy and paste this if it'll be careful you know doing this it can become a bad habit certainly as a teacher I see so much copy and pasted code without any attempt to change or understand what's going on so you know someone will just puts it in and leave it of course you've got to change it right so we've got to incorporate this into our code so we've got standardized one and now with midler case in line 3 you want to now remove all punctuation and can lose your news first line of code this s is our variable we're doing on sweet standardized standardized and what translate does is you know as its as it suggests takes one string and puts it and convert into another string the actual arguments here but as we have STR our datatype string it's got another method called mekt ranzz and we have now three different bits of data going on two empty strings and then string type punctuation which is a lookup table so Amos works is really it's looking up all the punctuation and actually why don't we just print out print string to the punctuation and try that except we're gonna have an error but let's just see what the error says first of all because fact do this first so you get a name error says name string is not defined so in this line string to punctuation string is not defined in its expecting string to be a variable or an object but it's not yet and that's because we need to actually import a what we call a library or a module called string and actually you that's one of the issues with maybe using online sources doesn't actually say here you to import string so a newbie can get a bit confused which is why this is an extension task so we've imported ring and now it we can print this again I should have Reap it was before my into some texts bit but here we can see on this line ignore the other lines the punctuation in this lookup table and none of these we want in our actual palindrome so let's just remove line 7 or comment it out at least that's always quite useful and uncomment line 8 and let's see how this does now yeah let's have a look at what this does so far so in some text let's do a race car with an exclamation mark at the end it says it's a palindrome so now we have removed this issue with punctuation and it's working better there still if we have safety once again and do it with a phrase as opposed to a single word so geese sea god question mark question mark won't be an issue but the issue is going to be these spaces because the spaces are causing it to not be equal forwards and backwards both wait just before we move on to that if you do use a source from one line like I said can quickly become a bad habit if you do is too often personally I do it fairly often where I think most programmers do I didn't know how to do this start to look at myself but it's always important to reference we got it from so this was answered by Brian so it's not the most useful name but in terms of it you know lots of Brian's about to do so it's a source Brian from and we could give a link couldn't me to this article just to make sure we're not you know using someone else's work without credit if you do you know if you submit any assignments to say school to university without giving credit it can't give given lots of trouble for plagiarism so ok so actually I do know how to do removing spaces that's a little bit more calm and I haven't actually ever had to remove punctuation before I don't believe or not I can recall that spaces yes here we can use a method called replace so again I'm a similar sort of way standardized and we want this to be now replace following our dot and we have two arguments here the first one is what we want to get what we want to replace so here we want to replace the space and space is in a string of the two quotes it's just a space on your keyboard to have wine and space here and we want to replace this with nothing so we show you this with an empty string so here there's no there's nothing in between most quotes here we have got a space even if it's not incredibly obvious unless you look closely don't be now if we try this again for an how many times have done this now do please see good this should finally get what we want which is your text is a palindrome so we've done some preprocessing made it lowercase remove punctuation and removed those spaces so that was our first of three extension criteria well done if you manage to do that it requires some initiative and possibly some you know trial and error in doing that so well done if you did our second one was about printing out so instead of saying your text we're saying it's gonna be either a string or a number so your number is a palindrome so here if I well let's take me obviously if I do one two three four this isn't a palindrome is not and I say it's not a palindrome number so this will happen further down because we're doing our evaluation of it forwards versus backwards down here in this if statement so we want a third nested if statement within this second one because once we've checked if it is a palindrome we want to then check if it's over a number or a string for a few different ways we can do this what I'm going to show you is not the most perfect way of doing it it has issues because well actually it doesn't have issues for this purpose perhaps not always been more in a second so what we can do is use a another method which I'm taught again you'd have to look up called is digit and what was it doing is checking this what was currently a string so whatever we have in standardized so far is just a string because by default all input is a string even if it looks like a number and we haven't made any effort to cast force into an integer so check it's gonna here check it save as an integer and is digit returns true if all of the values in that is an integer it won't work with floats work with negative numbers so there are some limitations there maybe not for this purpose so if I compare this so whatever this is going to self going to be true or false we want this to be so if this is going to be true we're then going to print your number is a palindrome because we know it's a number one integer to be more specific we could say the number is a palindrome and else we're gonna say well it is a string instead we don't need to do enough condition because else covers all other cases here for only two cases because his digits gonna return either true or false so here your string is a palindrome so fingers crossed if we try this it should work so what was all when I give so one two three two one should be a palindrome except that I forgot that each digit should be all lowercase I will forget these things and so let's try this again one two three two one should now work once I correct my code so yeah your number is a palindrome if I try race car again which should beat your string is a palindrome see if this works and it does as well we did have a third optional extension which was to make it into a function I won't show you this because actually it's not too hard once you know how to do it though I'll be covered in a future video so that covers this challenge hopefully you tried it yourself and had a good go tip if you didn't manage to do everything that's absolutely fine because they artfully things up I made some mistakes doing this so that's ok definitely ok v2 so if you have any comments or questions please let me know otherwise thank you very much for watching