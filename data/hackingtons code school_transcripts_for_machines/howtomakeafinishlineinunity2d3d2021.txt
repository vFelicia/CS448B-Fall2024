let's make a finish line this will work in both 2d and 3d i'm going to show you in 2d and then i'll just show you the things that you need to adjust to make it work in 3d so i have a very very simple project here this is just a a copy of like color bump that you can find on the app store it's basically just a 2d game where i'm controlling the white dot the white other white dots don't hurt me but the red dots restart my level and i'm going to add a finish line to this so i'm going to go ahead and go into my game here and i am just going to right click and create a 2d sprite and let's create a 2d square that's this square right here and i want it to be a finish line so i'm going to make sure that it covers the entire length or width of where i want the character to finish now if you're doing this in 3d you would create a 3d cube and then stretch it so i'm going to grab the corner stretch here and go blue and then go blue and now it is stretched out to the entire length that i want the finish line to be and i'm going to go ahead and for now you don't have to do this but you can turn off the sprite render and then it's an invisible finish line you can use these for checkpoints or for something like that that you don't want the actual finish line to be physically visible for the tutorial let's go ahead and keep the spread sprite renderer on now i'm going to go ahead and add a box collider 2d if this is a 3d game object you're just going to add a box collider but because this is 2d box collider 2d and then the very first thing i'm going to do is mark it as trigger this is a trigger this is optional if you want your player to actually collide with the finish line and stop moving then you don't have to mark it as a trigger but i want my player to go into the finish line but not actually hit it that way the enemies that i bump and anything else that's moving on the scene doesn't hit the finish line and then stop they just pass right through all right so i have is trigger here i'm also going to double check my player and make sure it's tagged as player that makes way more sense than just leaving it as untagged that way when i go in my right and i'm writing my code it makes more sense okay so i have my finish line here box collider on it marked as a trigger now let's write a script so i'm gonna add a component i'm gonna choose to name it finish line so i just called my script finish line and create a new script it's going to be called finish line and create an ad you can't see that on my screen it's further down but we're going to create and add this script this script is going to sit on this finish line you can create it other places and add it to other game objects if you want but i know that my script is only going to be accessible from this finish line let's go ahead and open it up all right the first thing that we need to do is we need to be able to access the scene manager that manages our scene so we have seen level one and scene level two well the scene manager allows us to write code that ties those two together so we're gonna say using unity engine dot scene management semicolon awesome now we're not going to do anything in our start or anything in our update all we're going to do is we're going to add a new function you can actually delete those other two if you want actually let's do that we don't need start or update any of those let's go ahead and we're going to say on trigger enter 2d so void on trigger enter and we're going to choose 2d if you're doing 3d it's just going to be on trigger enter so on trigger enter 2d it takes a parameter that is of a collider 2d and it's called collision so collision is going to track everything that has entered in to this trigger so we only want it to trigger the next level if the player is the one that enters the finish line so we're going to say if collision dot tag equals equals player we tagged our player as player now we're saying if the thing that collided with this trigger find that tag if it happens to be player then do this stuff now we're going to go to the next level so we're going to call scene manager dot load scene and we could just pass in the build index of the scene that we want to go to so if this is the final level in your game you can pass in a spec just the build index of your u1 screen right here but that doesn't help us if we want to go from level one to level two and use the same script to go from level two to level three if we say go to level two then when we finish level two it will also just go to level two so we're gonna do something a little clever we're gonna grab that scene manager again and we're gonna do load active scene sorry get active scene that's going to get the active scene that we're in now this is a function so it's going to take those parentheses and then we're going to call the build index of the active scene that we're on and we're gonna increase it by one so what this does it says find out what scene we're on grab the build index for it and just increase it by one now let's save this the script here is done but we're not quite done we are referencing a build index but what is that well when we go to file build settings we get this menu right here where we have the scenes in build so what we can do is grab our scenes drag them in here and put them in the order in which we want them to happen and we can see these numbers on the right hand side that's the build index so when we're on level one and we collide with the finish line it says okay grab level one grab the build index related to level one or the scene that we're on add one to it which is now one now load that scene and that's this is the magic this is what helps you do your uh your level progression your finish line stuff is this build settings place right here if you do have them out of order if you have a random menu screen in here you will go to the menu instead of going to the next scene this code relies on that your levels are in the order in which you want the user or the player to progress through now that we have that done let's check it out so i'm going to go ahead and hit play here i'm going to go through my game the cheater way i'm going to hit the finish line and boom we've gone to level two you can see right here we are now on level two this script works and there's no finish line on level two so there's no place to go but if there was a level three it would also work for level three alright build this add this to your game it's super cool