all right let's add in our enemy it's a very similar process to adding in the player but we're gonna give the the enemy some autonomous functions some AI some ability to make decisions and kind of attack on its own and that's where the magic comes in so first things first right click insert new object and it is going to be a Sprite game object and then click where we want it I'm just going to put mine here sure why not now we're going to add in all of the animations for the um the the enemy the Cyclops in this case open up my RPG assets they're going to go into actor and then I'm going to go to monsters and for me I'm going to use the Cyclops 2 which is this green Cyclops here I think it's going to contrast well against the red ninja so what I'm going to do is going to grab the entire Sprite sheet this is a four by four Sprite sheet and we're just going to use a couple of the different animations um in our game here so I'm going to drag that in and then import from Sprite strip and it is four by four replace entire animation import okay so now we have all of the frames this first animation I'm going to rename to just be idle this is going to just be the very first frame of the entire animation so what I'm going to do is I'm going to hold down I'm going to click this first uh or the the second frame hold down shift grab the last frame and then hit backspace and that's going to delete every other frame of Animation out of this Sprite here cool create a second animation this is going to be the walking animation then I'm going to go in and grab that same Sprite sheet the exact same thing import from Sprite strip it's going to be a four by four just like before but now I'm going to grab just the frames of the animation where the Cyclops is facing me we're just going to use the generic facing you to do the entire animation whenever they're moving that way we don't have to keep track of which direction the player is and then play the animation based on where the player is in relation to the enemy that's not going to be worth it in my opinion so we're just going to use the front one so I'm going to delete every other frame of this animation besides where the Cyclops is facing directly towards me now if you're doing a different monster you're going to have to play with this and figure out what you like the best you might not have a 4x4 animation is there a Sprite sheet you might have a just the walking animation something like that but just so you know the idle animation is just the first frame of the walking animation and then we're only going to be using the walking frames that the the monster is facing us because that just makes the most sense in our game all right let's go ahead and close that up we have both animations in there I'm going to go ahead and rename this enemy from Sprite to be enemy all set up now we add in some behaviors so let's think about what we want our enemy to be able to do I want it to kind of just stay in a stationary spot and then when it sees the player it starts to move towards the player and then if we hit the enemy the enemy flashes to show that we've damaged the enemy so let's go into those behaviors and see if we can find something that'll do that so let's add a new Behavior I want that that looking at part first so if the if the enemy can see the player okay so if I just type in C okay that doesn't do anything um well we've got we've got site let's try site okay so line of sight if we read the read the description here line of sight test if an object has line of sight if it can see an object or position that's what we want we want line of sight because we want the enemy to attack if they can see the player and you can't see through solid objects it's like the walls in our game you can't see through those so it won't attack yet so line of sight and then we want the enemy to move to the player when it has line of sight so we want it to move oh move two perfect move an object to a position with an acceleration and deceleration that is exactly what we want so we want to add move to and then we want the enemy to flash when it gets hit so flash there we go so see how I thought through that I came up with an idea of what I wanted to happen I went into behaviors and it just started searching around for what construct already has inside of their behaviors and I was able to find everything that I needed so if you have a new idea of a new mechanic see if it's in behaviors before you code it from scratch all right so we're going to change a few things about some of these behaviors so the lineup site I'm going to leave empty the same as it was before nothing's going to change about that this move too though I do need to change it so my max speed of being 200 is just too fast for me so I'm going to change that back down to 50. and I'm going to go ahead and leave acceleration deceleration alone rotate speed is zero and then we're gonna go ahead and check stop on solids and then we're going to uncheck set angle it's not going to actually rotate it's just going to move to and it's going to keep that that same like front facing look this stop on solids is important because now it can't phase through walls it can't phase through objects if it runs into a solid it will stop so that will be super helpful let's go into the event sheet and start coding this all right let's add an event and this is when the enemy has line of sight to the player so what's going to happen when the enemy sees the player so let's go down to line of sight has line of sight between positions no to an object because the object is the player so when it can see the player we want it to do something all right so what do we want it to do when it sees the player well we want it to move towards the player and then play The Walking animation so let's code that so we're going to move to the enemy is going to move to an object that object is the player so if it has line of sight it will move to the player okay it's moving but we've left it in its idle animation so it's just going to Glide across the screen like it goes so let's go ahead and switch its animation to be the walking animation so set animation to exactly how we have it spelled in our Sprite walking done all right this is what we have so far but we do want to change it up so that if it can't see the player anymore it stops or by default if it doesn't have line of sight tell it what to do so we're going to copy this code here copy and then we're gonna paste it in and what we're going to do is right here I'm going to see see how this was this whole event was selected I just want to select the the conditional event I'm going to right click it and I'm going to choose invert which is going to say that the enemy does not have line of sight of the player so this is the opposite we inverted this event here and now instead of doing this move too we want to stop the move too so I'm going to go ahead and delete that and add an event where the enemy is going to move to and actually we want to stop move to so we're going to stop the move two awesome and we're also going to set the animation from walking to idle so we go ahead and freeze and then we set the animation for us just standing there so now if the enemy sees us it walks towards us and if it doesn't see us it stops if I play this game you can see that the enemy starts walking towards me because it has line of sight to me now we can't break that line of sight because well there are no solid objects in the scene so the enemy always can see us we're going to solve that in a little bit all right so the next thing that we want to do is if we throw a throwing star at the enemy and it collides with the Enemy we want the enemy to stop moving we want it to destroy the shooting star we want it to flash we want it to wait and then we want it to destroy the enemy so that we it's basically a onehit kill for the enemy so we're going to add an event the enemy collides with an object collision with another object and that object is the throwing star all right so now when the enemy collides with the star we're going to do some stuff well the first thing that we want to do is it's a one hit kill so the enemy is dead so we want to stop it from moving it can't move it's dead so we're gonna go ahead and add in a a little action here it's going to go to that move two that we have before and we want it to stop so stop the move to that's the very first thing we want it to do before it waits before it flashes before anything we want the enemy to freeze so that even though it's dead if it continues to move and it hits us it still damages the player even though we've killed it with our throwing star next we want to actually destroy the throwing star so we're going to grab the throwing star and destroy it this way the throwing star can't go through enemies and kill like two or three of them in a row as soon as it encounters one it gets embedded embedded in that enemy and it stops and gets destroyed now we're going to go ahead and Flash the enemy to give us an indication that we've actually hit the enemy so we're gonna grab the enemy and we're going to grab that flash I'm going to start the flash now this is a little bit important because what we want to do is we want to set up this flash so it takes as long as the weight before it gets destroyed so the on time is going to be 0.1 the off time is going to be 0.1 but I only want it to flash um a little bit so I'm going to say 0.2 so it'll turn on turn off and then that's it it'll just flash and then we'll wait and it'll get destroyed so we need to add in a weight here why are we adding in a weight well because if and we're going to make this weight the exact same amount of time as the duration of The Flash because we want the game object the enemy to flash before it gets destroyed if we fire this Flash and then immediately afterwards fire the destroy this Flash doesn't know to wait it doesn't have a builtin weight it will flash for as many seconds as you tell it and also run the next command it's a it's an async event so it will Flash and continue running the net less bit of code so we're going to wait 0.2 seconds before we destroy the enemy let's try this out so I'm going to go ahead and show my entire snippet of code here so line of sight it doesn't have line of sight and then what happens when we hit it with a throwing star let's play the game and see if it works all right so I can run away I hit the enemy it flashes a couple of times and then gets destroyed it's working exactly the way we want it to this is awesome we have a working enemy now that we have an enemy we can add in health to the player so the enemy actually is dangerous let's do that in the next video