With timestamps:

00:01 - [Music]
00:08 - hello guys welcome back to kids coding
00:10 - playground so today we are working on
00:12 - another algorithm
00:14 - uh project is called
00:16 - palindrome so basically it's basically
00:18 - it's like a
00:20 - a phrase a word
00:22 - or a number that you know a fun reading
00:25 - from the front and the back is the same
00:28 - so uh we're going gonna try to write a
00:30 - uh algorithm in scratch that will detect
00:33 - that
00:33 - if the word or phrase or number is a
00:36 - palindrome or not okay so let's begin
00:39 - all right so we're gonna create some
00:41 - variable
00:43 - so let's create a bunch of variables
00:45 - that we need for this
00:46 - project so let's call uh
00:49 - each character
00:52 - so this will help us to uh basically
00:54 - like if people write a phrase then we're
00:56 - gonna try to take out the space in
00:58 - between so we're gonna have to write a a
01:00 - custom block to uh remove spaces so
01:04 - that's why we need that
01:06 - next we're gonna create one more
01:07 - variable we're gonna create all the
01:08 - variables up front so it's easier for
01:10 - kids to follow so the next one is our
01:12 - index
01:14 - okay
01:16 - uh next is a linked
01:19 - so the link we're gonna be using to
01:21 - detect you know the the link of the uh
01:24 - the word or the phrase or number that's
01:26 - coming in from the player input
01:29 - and then we're gonna say player
01:32 - input
01:33 - without
01:37 - space
01:39 - okay without spaces so this is uh after
01:42 - we remove the space and we're gonna put
01:45 - the wood inside here without spaces
01:47 - all right next
01:49 - we're gonna go with um
01:52 - position
01:53 - one
01:55 - and
01:57 - another one called
01:58 - position two so this will use to
02:02 - check the uh
02:03 - the pa uh the what is the palindrome or
02:05 - not okay all right we'll save this
02:08 - so i'll open up all my variable for now
02:10 - so that is easier to see
02:15 - okay so what we're going to do is we're
02:17 - going to load in a backdrop
02:20 - so i created a backdrop that has some of
02:22 - the palletron word so
02:26 - all right so let me delete this so as
02:27 - you can see
02:28 - these are palindrome words so eve right
02:32 - backward you can read it as eve
02:35 - kayak same thing right
02:37 - race car same thing uh
02:40 - taco cat same thing right
02:42 - so uh you see how taco cat has space
02:45 - here these have some of the spaces so
02:46 - we're only taking care of spaces but not
02:48 - like special character like
02:51 - like uh you know like uh semicolon or
02:54 - or colon or
02:56 - or
02:58 - apostrophe or comma we're not taking
03:00 - care of those but you can write the code
03:02 - to do that as well but
03:04 - all right so we're only taking care of
03:06 - the spaces so we're going to try to
03:07 - remove the space so that we can compare
03:09 - each of the letters so let's say this s
03:12 - and s is the same right t and t is the
03:15 - same e and e is the same p and p is the
03:17 - same so you can see you can reverse this
03:19 - and they will still read the same way
03:22 - step nut on pads okay
03:24 - all right so
03:26 - let's get going to the code
03:28 - okay so we begin so we have the backdrop
03:31 - where you can see
03:32 - we have some of the palindrome words
03:34 - right here okay so let's go to make sure
03:38 - you're on the sprite cat okay so let's
03:40 - let's you can use any cat you want you
03:42 - can use the flying cat or whatever i
03:45 - think in the in the application i mean
03:47 - when i for my project earlier i have the
03:50 - flying cat actually
03:51 - so let's use the flying kit
03:56 - okay
03:57 - all right so we're going to use this
03:58 - flying kit so we're going to delete this
04:00 - scratch cap so we're going to use the
04:02 - flying cat and then we can rotate them
04:04 - around
04:05 - put them in the middle here so that can
04:07 - doesn't flip over
04:09 - okay so we have the flying cat
04:12 - we can change this costume we'll use
04:14 - this custom we'll make him 150.
04:17 - okay
04:18 - all right so this is our cat we're gonna
04:19 - use for the uh
04:21 - palindrome
04:22 - code okay so make sure you're on the cat
04:25 - and don't coat it in the backdrop so
04:27 - let's create a new block
04:29 - make a my block
04:30 - we're going to call it remove
04:32 - spaces
04:35 - okay and then we'll take one input
04:38 - okay so this is called input
04:40 - and say okay
04:42 - so right now i'm only concerned about
04:45 - removing spaces between the word like
04:48 - let's say
04:49 - uh
04:49 - ufo space tofu right so we need to
04:52 - remove the space when we're comparing
04:54 - the word so make sure that so they will
04:56 - compare correctly so let's say u and u
04:58 - is the same you see f and f is the same
05:00 - or knows seven t is in the middle so if
05:02 - you flip it over you can still read it
05:04 - as ufo tofu right
05:07 - all right so this will remove spaces so
05:09 - we're only in doing spaces but actually
05:12 - you can remove like commas or
05:15 - um the
05:18 - apostrophe or something like that you
05:20 - know they have something like that you
05:22 - can remove that too but right now i'm
05:24 - just removing spaces okay
05:27 - okay so let's go
05:29 - i'm gonna say set
05:31 - so
05:32 - now set the index to one so send scratch
05:35 - speaking the index one unlike uh you
05:38 - know java other language they begin at
05:40 - zero okay
05:41 - so next
05:43 - we are going to set the player input
05:46 - without spaces so that one you have to
05:48 - put the backspace to delete the zero so
05:50 - make sure you have nothing in there
05:53 - so next part we are going to control
05:55 - we're going to get a loop so we're going
05:57 - to repeat the number of times so here we
05:59 - are going to repeat the number of times
06:02 - the length of the input so basically if
06:04 - there's 10 letter we are going to repeat
06:06 - 10 times
06:08 - okay
06:09 - all right so next we're gonna what we're
06:11 - going to do is we're going to try to get
06:12 - each character out
06:14 - of the uh of the word or the phrase or
06:17 - number and we're going to try to
06:19 - see if it's a spaces or not okay
06:22 - so we're gonna go back to here when i
06:24 - get this
06:26 - so this is the letter of one as you can
06:28 - see letter one of apple is a right two
06:31 - is p right so what we're going to do is
06:33 - we're going to put the index here and
06:35 - then we're going to put the input here
06:38 - and we are going to put the index
06:41 - variable
06:42 - here
06:43 - okay so each time the loop will go
06:44 - through we're going to increase the
06:46 - index and then we'll add one to it
06:48 - so we can get the next letter so next
06:50 - we're gonna check
06:53 - so if
06:55 - so we're gonna check if it's not
06:58 - spaces
07:00 - so we're gonna say equal
07:03 - and then we're gonna say each character
07:07 - and then here make sure you put a space
07:08 - in your space keyboard so if you can see
07:10 - i have a little space here okay
07:13 - all right so next
07:15 - we are going to say
07:16 - set
07:19 - set player
07:20 - input without spaces so let me zoom back
07:23 - out a little bit
07:24 - all right
07:26 - here we're going to join
07:28 - use the join operator so we are going to
07:31 - join the input without spaces in the
07:33 - beginning the first time go around gonna
07:35 - be blank so blank and join with the
07:37 - first letter
07:38 - which is whatever letter the player
07:40 - types in
07:41 - right so
07:43 - after that every time we go through
07:44 - we're gonna check if it's not a space
07:46 - then it will add it to this uh word here
07:48 - and next we're gonna increase the
07:50 - counter so change the counter
07:53 - uh the index by one so it will pick up
07:56 - the next letter so i'll show you guys
07:57 - how that work later okay so so far we
07:59 - have this code here so if you miss
08:02 - anything just pause and
08:04 - write that down okay so next we're going
08:06 - to call the bottom here
08:08 - okay so we're in the scratch cat
08:10 - so we're going to make every time it
08:12 - clicks on it we're going to do the code
08:14 - okay so
08:15 - when when the key is pressed the space i
08:18 - mean the the sprite key is pressed we
08:20 - are going to ask a question okay
08:24 - and what we're going to do is we're
08:26 - going to say um
08:27 - enter
08:29 - a number
08:31 - or a
08:32 - phrase
08:35 - all right so it will check the panodrom
08:37 - for you so next we're going to call the
08:39 - remove spaces
08:41 - here
08:42 - so this will call the uh the custom
08:45 - block what we just created up front and
08:48 - we're going to put in the answer so
08:50 - whatever player type it will put the
08:52 - answer
08:53 - okay so now let's just test it out real
08:55 - quick so if i click on this little cat
08:57 - here and say enter phrase
08:59 - let me try to type in ufo
09:02 - toefl right i have a spaces here right
09:05 - here you can see
09:07 - all right i guess it doesn't show very
09:09 - well okay
09:11 - so you can see uh maybe i'll just zoom
09:13 - in so ufo toefl right so when i enter
09:15 - this
09:16 - you can see that it created the uh it
09:19 - took out the spaces of ufo tofu right so
09:22 - that's what we did so we go through each
09:25 - of the uh
09:27 - letter and then take out the spaces so
09:29 - we're going to try again let's say step
09:33 - not on
09:35 - pets right
09:37 - so you can see step
09:39 - not on pads they all remove all the
09:41 - spaces
09:44 - okay so so far you guys understand the
09:46 - remove space
09:48 - function so now we're gonna go check the
09:51 - uh the
09:52 - the phrase or the number or word is it
09:54 - the palindrome or not okay so next
09:58 - let's say set
10:00 - uh we're gonna set the length so
10:01 - basically how how big this uh word is
10:04 - okay i'm gonna say
10:06 - set the length
10:07 - um
10:10 - okay and we're gonna put in the uh
10:12 - player input without spaces so that one
10:15 - is without the spaces right
10:17 - so we can compare next we're going to
10:20 - say set the
10:22 - position one
10:24 - oh i spell position wrong oh okay let me
10:27 - fix that
10:29 - rename
10:32 - i here
10:33 - okay position one so position one we're
10:35 - gonna begin at one
10:37 - okay
10:39 - and then position two
10:41 - uh we are going to get the length
10:44 - of
10:46 - the you can use this actually because i
10:48 - already did that so let's use that so
10:50 - use the link okay so position two is the
10:53 - linked whatever the uh
10:55 - uh
10:56 - you know you have ten letters so it will
10:58 - be ten
10:59 - nine that will be nine okay
11:01 - all right so what we'll do next is
11:05 - i'm gonna say repeat
11:08 - okay so we are going to divide the uh
11:12 - uh divide the uh
11:14 - the word in the half and then we're
11:16 - gonna try to compare the left side and
11:18 - the right side all together at one time
11:21 - okay
11:22 - so now what we're going to do is
11:25 - um
11:28 - okay so what we're going to do is we're
11:30 - going to get this um
11:32 - divide
11:33 - operator here
11:35 - and we are going to put in the length
11:38 - and divide by two so we're going to
11:39 - compare half of it so from the left side
11:42 - comparing to the right side okay and we
11:45 - are going to put a if condition inside
11:49 - here so in this if condition we are
11:52 - going to compare if the letter are not
11:54 - the same so if it's not the same we're
11:56 - going to stop immediately okay
11:58 - even if one letter is not the same it's
12:00 - not a patent draw okay so what we're
12:02 - going to do is
12:04 - we're going to use this not
12:07 - here
12:08 - and then we are going to compare the
12:10 - equal
12:12 - okay
12:12 - so we're going to use the equal sign put
12:14 - that here
12:15 - and then we're going to use something
12:17 - called the letter right just like how we
12:19 - do earlier looking for the
12:21 - the words
12:22 - so we're going to put letter
12:24 - and then duplicate one more time into
12:26 - this one
12:27 - oops sorry
12:29 - okay so we're going to compare
12:31 - okay the position
12:34 - okay i'm going to put this here without
12:36 - space
12:37 - put
12:38 - put this one here
12:41 - okay
12:44 - okay so let's zoom back out a little bit
12:48 - okay so basically
12:50 - we are comparing the first letter and
12:52 - the last letter so first position we're
12:54 - gonna put this first position here
12:57 - and then the set position two which is
12:59 - the last position okay
13:01 - all right so this is how it looks like
13:04 - so we're gonna repeat
13:05 - uh divide by two so we're gonna compare
13:07 - half of it from the left side compared
13:10 - to the right side okay each of the
13:11 - ladder and then keep going
13:13 - okay if they're not the same
13:16 - now we're gonna say
13:18 - say so we're gonna put say here not with
13:22 - a timer so that can show up easily
13:24 - people can see
13:26 - and we're gonna use two join here
13:29 - let's use two joints so that we can put
13:30 - a hole in between okay
13:33 - so he's saying say
13:35 - and then we can put a quote
13:38 - oops put a quote here
13:40 - okay and then we're going to say
13:42 - answer
13:43 - so whatever user type in we don't want
13:45 - to take this one because this one
13:47 - doesn't have a spaces right we want to
13:48 - see what the tech player type in so
13:50 - we're going to use the answer and here
13:52 - we're going to put a quote here and then
13:54 - a space here say is not a
13:58 - parallel drone
14:00 - okay and then if it's not a palindrome
14:03 - we're gonna stop so we don't need to
14:04 - continue
14:06 - okay so i'm gonna say stop
14:09 - stop the script
14:11 - okay
14:12 - otherwise we are going to increase the
14:14 - counter so we're gonna say change
14:19 - here gonna say change the position one
14:22 - by one
14:24 - and then we're gonna change position two
14:26 - by
14:27 - minus one
14:29 - okay so because position two is coming
14:31 - from the back right position one is
14:33 - coming to the front so we're comparing
14:35 - the front let's say step on pads right
14:37 - so so position one is s position two is
14:40 - s so they're gonna compare this is the
14:42 - same uh yes they're the same so they'll
14:45 - move on to the next one so the position
14:47 - one will increase to t
14:49 - right and then now position two has to
14:51 - go back right so we're gonna minus one
14:53 - right so vt
14:55 - and then let's go forward again and this
14:57 - is going back again so that's why you
14:58 - have position one going forward position
15:00 - two going backward okay
15:02 - so next we're gonna say
15:07 - okay and we're gonna put it here
15:10 - okay
15:10 - so here we're gonna say is so if it's
15:13 - everything is correct all the way to the
15:15 - end
15:16 - then it is a palindrome okay so that's
15:19 - it
15:20 - so that is our code so let's try it out
15:22 - so let's take out some of these things
15:24 - here so that we can block some of the
15:26 - words so we can use it
15:28 - okay all right so let's zoom back out
15:32 - so this is the code for the
15:35 - cat on the palindrome check
15:38 - and then this is the code for the
15:40 - removing the spaces okay so let's try
15:43 - this cat
15:44 - okay so let's enter a number or letter
15:47 - okay let's say one two three
15:50 - three two one right
15:53 - so you see that one two three three two
15:54 - one is a palindrome it's a number right
15:57 - we can click on the cat again we're
15:59 - gonna say uh
16:00 - maybe nine one one nine right
16:04 - nine one one nine
16:06 - right that's a palindrome so if i say
16:08 - one two three
16:10 - four five six right that's not right
16:13 - so enter
16:14 - it's not a palindrome you see that
16:17 - okay so now that is working fine the
16:19 - number is working fine now let's check
16:21 - out the letters so let's say kayak okay
16:25 - so kayak palindrome right
16:28 - let's say taco cat
16:31 - okay
16:32 - so taco cat palindrome so this one what
16:35 - is good about this a check here even
16:38 - though we're checking out it actually
16:40 - ignore the spaces you i mean ignore the
16:42 - capital letter so you can see t and t it
16:44 - only checks uh checks it as the same so
16:47 - that's good so scratch does that but the
16:49 - other
16:50 - project i mean other language it might
16:52 - not do that so you might have to convert
16:54 - it to lowercase or something but scratch
16:57 - is fine they check it so they saying t
16:59 - capital t and lowercase t is the same
17:01 - thing
17:02 - so let's
17:03 - try one step
17:06 - not on pets
17:08 - all right step 9 pets is a palindrome
17:11 - right
17:12 - no lemon no melon right so those are
17:14 - palindrome so if i type in
17:17 - how
17:18 - how are you right
17:20 - so that is not a palindrome because you
17:22 - cannot read backwards right for how are
17:24 - you
17:25 - so that's it that is the algorithm
17:28 - for palindrome check
17:30 - using scratch i hope you guys liked the
17:32 - video if so please give us a thumbs up
17:35 - and subscribe to our channel
17:37 - and thank you bye
17:38 - [Music]

Cleaned transcript:

hello guys welcome back to kids coding playground so today we are working on another algorithm uh project is called palindrome so basically it's basically it's like a a phrase a word or a number that you know a fun reading from the front and the back is the same so uh we're going gonna try to write a uh algorithm in scratch that will detect that if the word or phrase or number is a palindrome or not okay so let's begin all right so we're gonna create some variable so let's create a bunch of variables that we need for this project so let's call uh each character so this will help us to uh basically like if people write a phrase then we're gonna try to take out the space in between so we're gonna have to write a a custom block to uh remove spaces so that's why we need that next we're gonna create one more variable we're gonna create all the variables up front so it's easier for kids to follow so the next one is our index okay uh next is a linked so the link we're gonna be using to detect you know the the link of the uh the word or the phrase or number that's coming in from the player input and then we're gonna say player input without space okay without spaces so this is uh after we remove the space and we're gonna put the wood inside here without spaces all right next we're gonna go with um position one and another one called position two so this will use to check the uh the pa uh the what is the palindrome or not okay all right we'll save this so i'll open up all my variable for now so that is easier to see okay so what we're going to do is we're going to load in a backdrop so i created a backdrop that has some of the palletron word so all right so let me delete this so as you can see these are palindrome words so eve right backward you can read it as eve kayak same thing right race car same thing uh taco cat same thing right so uh you see how taco cat has space here these have some of the spaces so we're only taking care of spaces but not like special character like like uh you know like uh semicolon or or colon or or apostrophe or comma we're not taking care of those but you can write the code to do that as well but all right so we're only taking care of the spaces so we're going to try to remove the space so that we can compare each of the letters so let's say this s and s is the same right t and t is the same e and e is the same p and p is the same so you can see you can reverse this and they will still read the same way step nut on pads okay all right so let's get going to the code okay so we begin so we have the backdrop where you can see we have some of the palindrome words right here okay so let's go to make sure you're on the sprite cat okay so let's let's you can use any cat you want you can use the flying cat or whatever i think in the in the application i mean when i for my project earlier i have the flying cat actually so let's use the flying kit okay all right so we're going to use this flying kit so we're going to delete this scratch cap so we're going to use the flying cat and then we can rotate them around put them in the middle here so that can doesn't flip over okay so we have the flying cat we can change this costume we'll use this custom we'll make him 150. okay all right so this is our cat we're gonna use for the uh palindrome code okay so make sure you're on the cat and don't coat it in the backdrop so let's create a new block make a my block we're going to call it remove spaces okay and then we'll take one input okay so this is called input and say okay so right now i'm only concerned about removing spaces between the word like let's say uh ufo space tofu right so we need to remove the space when we're comparing the word so make sure that so they will compare correctly so let's say u and u is the same you see f and f is the same or knows seven t is in the middle so if you flip it over you can still read it as ufo tofu right all right so this will remove spaces so we're only in doing spaces but actually you can remove like commas or um the apostrophe or something like that you know they have something like that you can remove that too but right now i'm just removing spaces okay okay so let's go i'm gonna say set so now set the index to one so send scratch speaking the index one unlike uh you know java other language they begin at zero okay so next we are going to set the player input without spaces so that one you have to put the backspace to delete the zero so make sure you have nothing in there so next part we are going to control we're going to get a loop so we're going to repeat the number of times so here we are going to repeat the number of times the length of the input so basically if there's 10 letter we are going to repeat 10 times okay all right so next we're gonna what we're going to do is we're going to try to get each character out of the uh of the word or the phrase or number and we're going to try to see if it's a spaces or not okay so we're gonna go back to here when i get this so this is the letter of one as you can see letter one of apple is a right two is p right so what we're going to do is we're going to put the index here and then we're going to put the input here and we are going to put the index variable here okay so each time the loop will go through we're going to increase the index and then we'll add one to it so we can get the next letter so next we're gonna check so if so we're gonna check if it's not spaces so we're gonna say equal and then we're gonna say each character and then here make sure you put a space in your space keyboard so if you can see i have a little space here okay all right so next we are going to say set set player input without spaces so let me zoom back out a little bit all right here we're going to join use the join operator so we are going to join the input without spaces in the beginning the first time go around gonna be blank so blank and join with the first letter which is whatever letter the player types in right so after that every time we go through we're gonna check if it's not a space then it will add it to this uh word here and next we're gonna increase the counter so change the counter uh the index by one so it will pick up the next letter so i'll show you guys how that work later okay so so far we have this code here so if you miss anything just pause and write that down okay so next we're going to call the bottom here okay so we're in the scratch cat so we're going to make every time it clicks on it we're going to do the code okay so when when the key is pressed the space i mean the the sprite key is pressed we are going to ask a question okay and what we're going to do is we're going to say um enter a number or a phrase all right so it will check the panodrom for you so next we're going to call the remove spaces here so this will call the uh the custom block what we just created up front and we're going to put in the answer so whatever player type it will put the answer okay so now let's just test it out real quick so if i click on this little cat here and say enter phrase let me try to type in ufo toefl right i have a spaces here right here you can see all right i guess it doesn't show very well okay so you can see uh maybe i'll just zoom in so ufo toefl right so when i enter this you can see that it created the uh it took out the spaces of ufo tofu right so that's what we did so we go through each of the uh letter and then take out the spaces so we're going to try again let's say step not on pets right so you can see step not on pads they all remove all the spaces okay so so far you guys understand the remove space function so now we're gonna go check the uh the the phrase or the number or word is it the palindrome or not okay so next let's say set uh we're gonna set the length so basically how how big this uh word is okay i'm gonna say set the length um okay and we're gonna put in the uh player input without spaces so that one is without the spaces right so we can compare next we're going to say set the position one oh i spell position wrong oh okay let me fix that rename i here okay position one so position one we're gonna begin at one okay and then position two uh we are going to get the length of the you can use this actually because i already did that so let's use that so use the link okay so position two is the linked whatever the uh uh you know you have ten letters so it will be ten nine that will be nine okay all right so what we'll do next is i'm gonna say repeat okay so we are going to divide the uh uh divide the uh the word in the half and then we're gonna try to compare the left side and the right side all together at one time okay so now what we're going to do is um okay so what we're going to do is we're going to get this um divide operator here and we are going to put in the length and divide by two so we're going to compare half of it so from the left side comparing to the right side okay and we are going to put a if condition inside here so in this if condition we are going to compare if the letter are not the same so if it's not the same we're going to stop immediately okay even if one letter is not the same it's not a patent draw okay so what we're going to do is we're going to use this not here and then we are going to compare the equal okay so we're going to use the equal sign put that here and then we're going to use something called the letter right just like how we do earlier looking for the the words so we're going to put letter and then duplicate one more time into this one oops sorry okay so we're going to compare okay the position okay i'm going to put this here without space put put this one here okay okay so let's zoom back out a little bit okay so basically we are comparing the first letter and the last letter so first position we're gonna put this first position here and then the set position two which is the last position okay all right so this is how it looks like so we're gonna repeat uh divide by two so we're gonna compare half of it from the left side compared to the right side okay each of the ladder and then keep going okay if they're not the same now we're gonna say say so we're gonna put say here not with a timer so that can show up easily people can see and we're gonna use two join here let's use two joints so that we can put a hole in between okay so he's saying say and then we can put a quote oops put a quote here okay and then we're going to say answer so whatever user type in we don't want to take this one because this one doesn't have a spaces right we want to see what the tech player type in so we're going to use the answer and here we're going to put a quote here and then a space here say is not a parallel drone okay and then if it's not a palindrome we're gonna stop so we don't need to continue okay so i'm gonna say stop stop the script okay otherwise we are going to increase the counter so we're gonna say change here gonna say change the position one by one and then we're gonna change position two by minus one okay so because position two is coming from the back right position one is coming to the front so we're comparing the front let's say step on pads right so so position one is s position two is s so they're gonna compare this is the same uh yes they're the same so they'll move on to the next one so the position one will increase to t right and then now position two has to go back right so we're gonna minus one right so vt and then let's go forward again and this is going back again so that's why you have position one going forward position two going backward okay so next we're gonna say okay and we're gonna put it here okay so here we're gonna say is so if it's everything is correct all the way to the end then it is a palindrome okay so that's it so that is our code so let's try it out so let's take out some of these things here so that we can block some of the words so we can use it okay all right so let's zoom back out so this is the code for the cat on the palindrome check and then this is the code for the removing the spaces okay so let's try this cat okay so let's enter a number or letter okay let's say one two three three two one right so you see that one two three three two one is a palindrome it's a number right we can click on the cat again we're gonna say uh maybe nine one one nine right nine one one nine right that's a palindrome so if i say one two three four five six right that's not right so enter it's not a palindrome you see that okay so now that is working fine the number is working fine now let's check out the letters so let's say kayak okay so kayak palindrome right let's say taco cat okay so taco cat palindrome so this one what is good about this a check here even though we're checking out it actually ignore the spaces you i mean ignore the capital letter so you can see t and t it only checks uh checks it as the same so that's good so scratch does that but the other project i mean other language it might not do that so you might have to convert it to lowercase or something but scratch is fine they check it so they saying t capital t and lowercase t is the same thing so let's try one step not on pets all right step 9 pets is a palindrome right no lemon no melon right so those are palindrome so if i type in how how are you right so that is not a palindrome because you cannot read backwards right for how are you so that's it that is the algorithm for palindrome check using scratch i hope you guys liked the video if so please give us a thumbs up and subscribe to our channel and thank you bye
