With timestamps:

00:00 - [Music]
00:07 - so welcome back guys to another tutorial
00:09 - on kids coding playground
00:11 - today we'll be working on a maze game so
00:13 - it's my friend
00:14 - teaching it this time he was also the
00:16 - person that taught the
00:17 - chin reaction game so if you if you have
00:20 - not uh watched that tutorial you should
00:21 - definitely watch that as well
00:25 - all right so today we'll be making
00:27 - something
00:28 - that is a 3d maze and our player will be
00:31 - able to
00:32 - interact with this maze um and move
00:35 - around
00:36 - so it'll be able to show kind of a depth
00:41 - and we'll be using pen lists
00:44 - we'll be learning the raycasting method
00:46 - and we'll be
00:47 - able to use to um control the movement
00:51 - with keys
00:53 - so now for a demo of the game
00:58 - all right so let's click the green flag
01:01 - and i can currently move around this
01:04 - maze
01:05 - with the arrow keys and if i press
01:08 - the space key there will be a map that
01:10 - it will be showing
01:13 - all right and as you can see there's
01:17 - kind of like this brightness effect that
01:19 - makes you think that it's more 3d
01:23 - so let's get started
01:33 - all right so let's make a new project
01:37 - and let's name it three
01:42 - d maze
01:46 - all right and let's name our first
01:49 - sprite
01:50 - person so before we
01:53 - start working on a 3d maze we need to
01:56 - have a 2d maze
01:57 - so let's get rid of this scratch cat
02:03 - and convert it to a bitmap editor
02:07 - and let's get the square tool and it
02:10 - doesn't matter what it
02:11 - color it is we're gonna be hiding this
02:14 - anyway
02:15 - so let's hold the space bar i mean
02:18 - the shift key and it'll make a perfect
02:22 - square so like this
02:25 - and let's just make it a little bit
02:27 - smaller
02:32 - all right perfect and let's make it
02:34 - centered so match up the crosshairs
02:39 - all right this is perfect and now we're
02:42 - going to be
02:43 - needing a maze so let's choose a paint
02:47 - and right here in my backpack i have
02:50 - already a maze prepared
02:53 - um you guys can look at this
02:56 - if you want to copy it so now let's
02:58 - switch back to the person
03:01 - and go to the code
03:05 - so let's code the controls first
03:09 - so let's get a when green flag clicked
03:14 - um we want the person
03:17 - to spawn at a certain point so
03:20 - i'll have it spawn right here and go to
03:24 - motion
03:25 - and i'll have it go to this place
03:29 - and i want it to be pointing
03:32 - this way so around
03:36 - negative 90.
03:43 - all right and then we'll be
03:47 - uh setting the ghost effect to
03:50 - 100 because um
03:54 - we don't actually want the person to
03:56 - show
03:58 - so 100
04:01 - and let's make a new variable we can
04:04 - delete this one
04:07 - and let's name it speed
04:11 - so then let's set our speed to two
04:16 - and basically this is just gonna be how
04:17 - fast the player is going to be able to
04:19 - walk
04:20 - around the maze
04:24 - and then let's get a forever loop so go
04:27 - to control and drag this but below this
04:30 - this is where we're going to put all our
04:31 - controls so let's get in
04:34 - if then
04:37 - and let's add some arrow controls so go
04:40 - to sensing
04:41 - and see if key blank is pressed
04:46 - and right arrow
04:49 - then we're going to have the player turn
04:54 - 4 degrees
04:57 - and now let's duplicate this so
05:00 - and then put this down here let's switch
05:03 - this now
05:04 - to left arrow
05:07 - okay so now let's go and make a new
05:10 - custom block
05:11 - and let's name it move and then let's
05:14 - get an
05:15 - input and name it
05:19 - speed
05:23 - okay
05:26 - so now let's define this custom block
05:30 - um so let's go to motion and we're going
05:33 - to have to
05:34 - move speed steps
05:38 - and let's go to control and get an if
05:41 - touching
05:48 - so if touching sprite 1 i'll rename
05:52 - this to map so it's easier to reference
05:55 - so if it's touching map then we want it
05:58 - to go
05:58 - back out of the map so then we'll get a
06:01 - move
06:03 - and then let's go to operators and get
06:06 - the times
06:09 - negative one speed
06:12 - now what this custom block is going to
06:14 - do is that when we use it
06:16 - down here there's going to be this input
06:19 - that we can put something in and
06:23 - let's say we put a one now this speed
06:27 - thing is going to be replaced with one
06:30 - so then
06:30 - it'll be moving forward one step so if
06:34 - we click this
06:35 - you can see right here it is moving
06:40 - all right so now we can use this move
06:44 - block in our code
06:46 - so now we can check if the up arrow is
06:49 - pressed
06:52 - up arrow is pressed then
06:55 - let's have it move speed
06:59 - and if the down arrow is pressed
07:06 - then let's have it move negative speed
07:11 - minus one
07:16 - all right so so far this is
07:19 - what we've got and
07:22 - let me just clear the graphics graphic
07:25 - effects for a moment
07:26 - so that you can see the player and you
07:28 - can see that we can actually
07:30 - navigate the maze for
07:33 - but it's not 3d yet
07:36 - so that's a problem and we're going to
07:39 - uh make that later
07:40 - but first um we need to learn about the
07:43 - raycasting method
07:45 - and basically what this is is that we're
07:47 - going to see
07:49 - um the distances from this person to the
07:51 - map
07:52 - and then we're going to draw lines based
07:54 - on how far those distances are
07:59 - so let's make a new broadcast
08:05 - and then let's call it
08:10 - sense
08:13 - and let's set it right here
08:16 - all right now let's make a new sprite
08:19 - and let's call it distance
08:24 - distance and let's convert to bitmap
08:28 - again
08:31 - and we're going to use this tool
08:36 - let's make it one so it should be just a
08:39 - tiny
08:40 - pixel let me just zoom in
08:46 - all right what this is going to do is
08:48 - that it's going to go to the person
08:50 - and it's just going to um
08:54 - see the angle um
08:58 - so that it will go right here and it
09:00 - will slowly go into 360 degrees
09:03 - and it will add a value to distances
09:08 - so we can use that in our raycaster
09:12 - so first we need this to um
09:15 - set the
09:18 - um ghost effect to 100. so let's do that
09:22 - right now
09:23 - 100
09:27 - and let's go to events and when i
09:30 - receive
09:31 - cents let's make a new custom block
09:34 - and name it sense and
09:37 - take the run without screen refresh
09:40 - check box
09:43 - so now that we have our sense custom
09:45 - block let's make
09:46 - a new list and let's name it distances
09:51 - oh
09:55 - all right i just renamed the list
09:56 - because i spelled it wrong
09:58 - so distances
10:01 - and let's add let's
10:04 - delete all of distances when we
10:08 - um use the sense block
10:11 - and let's make a new variable and name
10:13 - it distance
10:17 - and let's set the distance to zero this
10:19 - is going to be our counter
10:21 - and um the value that we're going to add
10:24 - to the list
10:25 - distances and let's also make a
10:28 - new variable let's name it angle
10:32 - offset
10:35 - and let's set the angle offset
10:38 - to negative 48.
10:42 - now let's get a repeat loop this is why
10:44 - we're going to make the sense block
10:46 - um run without screen refresh because
10:49 - we're going to need to do this extra
10:51 - fast
10:53 - so let's have it repeat 96
10:57 - and then we're going to set the distance
11:02 - to zero
11:07 - and then we're gonna have it go to the
11:08 - person
11:11 - so go to
11:14 - person all right and then we'll get
11:18 - point in direction
11:24 - direction of person so it should be
11:27 - right
11:28 - here and then click on this one
11:31 - click on this one and then select
11:34 - direction now go to operators and get
11:38 - the plus sign
11:39 - and drag this one in there all right
11:43 - now get the angle offset variable inside
11:46 - of the variable section
11:48 - angle offset and drag that in here
11:53 - now let's get a repeat until lock
11:57 - so repeat until
12:02 - let's get it touching so right here
12:07 - until touching map
12:13 - okay and now let's get a or operator and
12:17 - drag this one into the left slot
12:20 - and let's get an equals and put
12:23 - 200 so this one is basically
12:27 - render distance so how far is this going
12:30 - to
12:31 - render right and let's get
12:36 - distance
12:38 - and then we're gonna get motion
12:41 - let's drag this in there and put this
12:44 - inside the repeat until
12:47 - two steps and then we'll change
12:50 - distance by two
12:57 - um now this is kind of the part where if
13:00 - your maps
13:01 - walls are too thin then this won't work
13:04 - so make sure that your maps walls are
13:07 - thick enough
13:09 - all right so now let's ah after
13:12 - the loop let's add distance
13:16 - to distances and then we'll change angle
13:19 - offset by one
13:23 - now under when i receive cents
13:26 - go to my blocks and let's drag sense
13:29 - in so
13:32 - i'll just hide these variables
13:37 - and
13:41 - and now let me just
13:44 - show the person again so
13:50 - click graphic effects
13:53 - and now if we move around the list
13:57 - distances should be updating
14:05 - um so we have to add something one more
14:08 - thing right here into the person sprite
14:10 - my mistake
14:11 - let's go back to events and get a
14:13 - broadcast
14:14 - sense and under each of these controls
14:17 - we need it to broadcast
14:19 - sense so that this list should update
14:22 - whenever we move
14:28 - all right let's show it again
14:31 - and now you can see that the distances
14:34 - list is updating based on where the
14:37 - player is moving so let me just do this
14:41 - and this distances list is going to be
14:44 - very helpful
14:47 - when we're um making this
14:53 - all right
14:56 - oh sorry we also have to change this to
14:59 - a
15:02 - move to the left four
15:08 - so this is uh where we're going to end
15:10 - part one
15:12 - and like and subscribe
15:15 - if you want more of this type of content
15:18 - we'll be finishing up our 3d maze in
15:21 - part two
15:23 - so also we have a um
15:26 - scratch studio that you can join
15:29 - and we'll be um
15:34 - we'll be featuring some projects on that
15:36 - scratch studio
15:38 - and all right thank you
15:41 - thanks for watching and make sure to
15:43 - subscribe
15:47 - see you next time
15:55 - [Music]
15:58 - you

Cleaned transcript:

so welcome back guys to another tutorial on kids coding playground today we'll be working on a maze game so it's my friend teaching it this time he was also the person that taught the chin reaction game so if you if you have not uh watched that tutorial you should definitely watch that as well all right so today we'll be making something that is a 3d maze and our player will be able to interact with this maze um and move around so it'll be able to show kind of a depth and we'll be using pen lists we'll be learning the raycasting method and we'll be able to use to um control the movement with keys so now for a demo of the game all right so let's click the green flag and i can currently move around this maze with the arrow keys and if i press the space key there will be a map that it will be showing all right and as you can see there's kind of like this brightness effect that makes you think that it's more 3d so let's get started all right so let's make a new project and let's name it three d maze all right and let's name our first sprite person so before we start working on a 3d maze we need to have a 2d maze so let's get rid of this scratch cat and convert it to a bitmap editor and let's get the square tool and it doesn't matter what it color it is we're gonna be hiding this anyway so let's hold the space bar i mean the shift key and it'll make a perfect square so like this and let's just make it a little bit smaller all right perfect and let's make it centered so match up the crosshairs all right this is perfect and now we're going to be needing a maze so let's choose a paint and right here in my backpack i have already a maze prepared um you guys can look at this if you want to copy it so now let's switch back to the person and go to the code so let's code the controls first so let's get a when green flag clicked um we want the person to spawn at a certain point so i'll have it spawn right here and go to motion and i'll have it go to this place and i want it to be pointing this way so around negative 90. all right and then we'll be uh setting the ghost effect to 100 because um we don't actually want the person to show so 100 and let's make a new variable we can delete this one and let's name it speed so then let's set our speed to two and basically this is just gonna be how fast the player is going to be able to walk around the maze and then let's get a forever loop so go to control and drag this but below this this is where we're going to put all our controls so let's get in if then and let's add some arrow controls so go to sensing and see if key blank is pressed and right arrow then we're going to have the player turn 4 degrees and now let's duplicate this so and then put this down here let's switch this now to left arrow okay so now let's go and make a new custom block and let's name it move and then let's get an input and name it speed okay so now let's define this custom block um so let's go to motion and we're going to have to move speed steps and let's go to control and get an if touching so if touching sprite 1 i'll rename this to map so it's easier to reference so if it's touching map then we want it to go back out of the map so then we'll get a move and then let's go to operators and get the times negative one speed now what this custom block is going to do is that when we use it down here there's going to be this input that we can put something in and let's say we put a one now this speed thing is going to be replaced with one so then it'll be moving forward one step so if we click this you can see right here it is moving all right so now we can use this move block in our code so now we can check if the up arrow is pressed up arrow is pressed then let's have it move speed and if the down arrow is pressed then let's have it move negative speed minus one all right so so far this is what we've got and let me just clear the graphics graphic effects for a moment so that you can see the player and you can see that we can actually navigate the maze for but it's not 3d yet so that's a problem and we're going to uh make that later but first um we need to learn about the raycasting method and basically what this is is that we're going to see um the distances from this person to the map and then we're going to draw lines based on how far those distances are so let's make a new broadcast and then let's call it sense and let's set it right here all right now let's make a new sprite and let's call it distance distance and let's convert to bitmap again and we're going to use this tool let's make it one so it should be just a tiny pixel let me just zoom in all right what this is going to do is that it's going to go to the person and it's just going to um see the angle um so that it will go right here and it will slowly go into 360 degrees and it will add a value to distances so we can use that in our raycaster so first we need this to um set the um ghost effect to 100. so let's do that right now 100 and let's go to events and when i receive cents let's make a new custom block and name it sense and take the run without screen refresh check box so now that we have our sense custom block let's make a new list and let's name it distances oh all right i just renamed the list because i spelled it wrong so distances and let's add let's delete all of distances when we um use the sense block and let's make a new variable and name it distance and let's set the distance to zero this is going to be our counter and um the value that we're going to add to the list distances and let's also make a new variable let's name it angle offset and let's set the angle offset to negative 48. now let's get a repeat loop this is why we're going to make the sense block um run without screen refresh because we're going to need to do this extra fast so let's have it repeat 96 and then we're going to set the distance to zero and then we're gonna have it go to the person so go to person all right and then we'll get point in direction direction of person so it should be right here and then click on this one click on this one and then select direction now go to operators and get the plus sign and drag this one in there all right now get the angle offset variable inside of the variable section angle offset and drag that in here now let's get a repeat until lock so repeat until let's get it touching so right here until touching map okay and now let's get a or operator and drag this one into the left slot and let's get an equals and put 200 so this one is basically render distance so how far is this going to render right and let's get distance and then we're gonna get motion let's drag this in there and put this inside the repeat until two steps and then we'll change distance by two um now this is kind of the part where if your maps walls are too thin then this won't work so make sure that your maps walls are thick enough all right so now let's ah after the loop let's add distance to distances and then we'll change angle offset by one now under when i receive cents go to my blocks and let's drag sense in so i'll just hide these variables and and now let me just show the person again so click graphic effects and now if we move around the list distances should be updating um so we have to add something one more thing right here into the person sprite my mistake let's go back to events and get a broadcast sense and under each of these controls we need it to broadcast sense so that this list should update whenever we move all right let's show it again and now you can see that the distances list is updating based on where the player is moving so let me just do this and this distances list is going to be very helpful when we're um making this all right oh sorry we also have to change this to a move to the left four so this is uh where we're going to end part one and like and subscribe if you want more of this type of content we'll be finishing up our 3d maze in part two so also we have a um scratch studio that you can join and we'll be um we'll be featuring some projects on that scratch studio and all right thank you thanks for watching and make sure to subscribe see you next time you
