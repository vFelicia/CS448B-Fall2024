With timestamps:

00:03 - [Music]
00:09 - hello and welcome back to the
00:11 - kidscooling playground channel guys so
00:14 - today
00:14 - we will work on the second part of this
00:17 - uh hollywood matching game
00:19 - uh so far let's just go over the code
00:23 - on the first video we were just setting
00:25 - up the list
00:26 - for these number lists the game matching
00:30 - numberless
00:30 - and then we're setting the sprites and
00:33 - uh this is just a
00:35 - bunch of costume that we had in our uh
00:38 - you know on ours right here you know
00:40 - this different costume here
00:41 - you know those different custom name we
00:43 - just take that
00:45 - and we just plug it into this uh
00:48 - code here adding the sprite name then we
00:50 - have prepared game where we found the uh
00:53 - six uh six uh sprite that we were going
00:56 - to use as a pair to match
00:58 - and also the six pair number that we're
01:01 - gonna set up for the sprite
01:03 - so that's where we have left off so if
01:05 - you have missed anything just uh kind of
01:07 - pause the video and
01:08 - get the code okay so um
01:12 - we after that we have some in the bottom
01:14 - where we broadcast the instruction
01:16 - just to start the game and then we call
01:18 - the prepared game okay
01:20 - game is the here this block of code
01:22 - where we find in the pair
01:24 - now we're going to work on this one
01:26 - called setup again
01:29 - so let me run the game one time for you
01:31 - guys so that you can see
01:33 - what we have so far so let's save this
01:36 - let's run this again
01:38 - so what happened is the get tab the
01:40 - cat's gonna talk
01:42 - and then they will populate the list so
01:43 - let me show you the list here
01:45 - [Music]
01:48 - so once the cat runs you see this pair
01:51 - right so
01:52 - we are going to put this pair with the
01:54 - costume
01:55 - so these are the six pair under 12 and
01:58 - then these are the six different sprites
02:00 - okay all right got that so far
02:04 - [Music]
02:05 - all right what we're going to do is here
02:08 - what we call the uh setup game
02:13 - we have to grab a grab a block here
02:17 - we'll call it setup game let me zoom in
02:21 - a little bit
02:22 - you can see a little better okay we are
02:25 - going to use a loop again so before we
02:28 - can use the loop since we're using the
02:30 - index earlier whether we set it back
02:33 - uh scratch use indexes begins at one so
02:36 - that's why we are using one here we set
02:39 - one other programming tool index like
02:41 - java
02:42 - that was that zero so for scratch is one
02:46 - okay so we're resetting to one
02:50 - then we will use repeat until
02:54 - loop okay and then we're going to use
02:58 - the
02:58 - operator here greater than
03:03 - and then we are going to drag in this
03:05 - index here
03:07 - so what we want to do is we will want to
03:09 - loop through the list
03:10 - of the uh sprite uh that we had
03:13 - like this right name this list we are
03:17 - going to look to this
03:18 - list and get the first item okay
03:21 - uh what we're going to do is we're going
03:23 - to get this we are going to get the list
03:26 - [Music]
03:27 - so to get to the list you have to call
03:29 - the link
03:30 - so length of game uh spriteless
03:34 - cam names brightness so if you click on
03:36 - this you see six
03:38 - since you have six items here you get
03:40 - six so the loop will go
03:41 - six times um the seventh time it goes it
03:45 - will be bigger so every time you do make
03:47 - sure you increase the index if not it
03:49 - will
03:49 - go into an infinite loop so we'll have
03:52 - to increase the index later
03:55 - what we have to do is uh we can we are
03:57 - going to see
03:58 - called match sprite basically this is
04:00 - the sprite that is going to be
04:02 - used for match and where to pick the
04:05 - item from the list
04:07 - so to pick the item from the list
04:10 - uh we paint this game sprite list name
04:13 - which is this
04:14 - and instead one we are going to use the
04:16 - index so
04:17 - it will be also pick the first one
04:19 - second one third one
04:21 - and so on so if i let's say if i use
04:24 - this
04:25 - i can understand a little bit better so
04:28 - let's say i have this right so let's say
04:30 - i say smash
04:32 - name so what you guys can do right if
04:35 - you try to debug your code make sure you
04:36 - use like some kind of say
04:38 - something like that so that way you can
04:40 - debug your code better
04:42 - and also you can like make sure you open
04:45 - the
04:46 - variable you want right
04:50 - you can have the variable here so let's
04:52 - say if i run through this
04:54 - so you see is that it picks the first
04:57 - one
04:58 - and then it will say the second one and
05:00 - so on so since we don't have a uh we
05:03 - don't have the
05:04 - increase the index right you see it
05:06 - doesn't change
05:07 - so what you have to do is say change the
05:09 - index
05:11 - by one so now if i run this you'll see
05:14 - the cat
05:14 - it will talk quite fast we'll do one
05:18 - second so we'll
05:19 - name all the item here so you see
05:22 - back clown scarecrow the toe
05:27 - the halloween clothes and then the
05:30 - whatever the last one is okay
05:32 - all right so i hope you understand that
05:34 - so far so we have to take this back out
05:36 - we don't need that so now we have this
05:39 - what we also need to do is
05:42 - oops so we need to set the matching
05:45 - number
05:46 - so we have the matching sprite now
05:47 - whether you get a matching number
05:49 - so we're gonna use this one matching
05:52 - number this
05:52 - so this is the same thing you'll just
05:54 - pick the first one right
05:56 - how we're doing so we'll pick back and
05:58 - we'll pick this since the
05:59 - both are six so it's using those one
06:02 - loop will be okay
06:03 - so they will just use so we'll get the
06:05 - first one
06:06 - first one second one second one third
06:08 - one third one four
06:09 - four fifth fifth six six like that okay
06:13 - all right so what we're going to do
06:16 - now we have these we're gonna have to
06:18 - make a new block
06:20 - uh we are going to go call setup
06:24 - sprite so this will be a custom block or
06:27 - taking one input
06:30 - uh you can name it like uh whatever the
06:32 - input is we are going to send in the
06:34 - matching number
06:35 - to uh to find so we are going to
06:39 - call make this a matching number
06:43 - that we will be passing it
06:47 - that match number okay so don't use a
06:51 - uh so you can pass in boolean uh
06:54 - i mean use a number or text don't use
06:57 - the boolean one okay
07:00 - okay so we created this block here so
07:02 - this block will be somewhere here
07:04 - we'll just put it here for now we'll
07:07 - have to call this
07:08 - uh what we want to do is we can we are
07:10 - going to call this block
07:13 - so you can put it here and we want to
07:15 - send the matching number to it
07:18 - go to here send the matching number
07:20 - we'll take this out
07:21 - for now so what we're going to do is
07:23 - we're going to send in the matching
07:25 - number so one
07:27 - one type five okay this this key here
07:30 - this thing is called pipe
07:32 - okay or the straight line
07:35 - okay all right and then we have to
07:38 - change the index
07:39 - put that back in okay so this is how the
07:41 - setup code looks like
07:43 - and we got to move it over here
07:46 - okay now we will work on this one i
07:48 - think we need more space for this guy
07:51 - ah okay so how do we get the number
07:55 - right there's a couple of ways so let's
07:56 - say if you're doing if you're making a
07:58 - game that's only have
08:00 - let's say uh you know um
08:04 - only only not go up to 10 right so let's
08:07 - say you only have
08:08 - like this like only three letters then
08:10 - what you can do you exactly know
08:12 - what it is right so what you can do is
08:14 - you do this
08:15 - you can say um we are going to use this
08:17 - broadcast
08:20 - so we are going to use this broadcast
08:22 - one so this is the first pair
08:24 - and we're going to call this broadcast 2
08:27 - this will for the second pair
08:28 - so what you can do is this but this is
08:32 - not the right way
08:32 - i'm just showing you um this uh how we
08:35 - can pick it up but we're going to do it
08:37 - the other way
08:38 - to break it up since you have actually
08:40 - multiple um
08:41 - number here so the one way
08:44 - if you're not doing more than uh eight
08:46 - uh like
08:48 - more than eight boxes then this is fine
08:51 - right if you have more than eight bucks
08:52 - then you actually have to break it
08:54 - so oops sorry so let's do this
08:58 - so what you can do is you can pick the
09:00 - first letter and the third letter right
09:02 - since this is the first letter is one
09:04 - and third letter is five
09:05 - so you exactly know so what you can do
09:07 - is you can drag this here
09:09 - drag this here so what you can do let's
09:11 - let's say
09:12 - i am going to open my so
09:16 - again to to test right always you can
09:18 - use a say
09:20 - that way you can test your stuff okay
09:23 - every time you you do your code you can
09:25 - test it so it's kind of like debug or
09:28 - log right in
09:29 - real coding so you can join this thing
09:32 - so you can join let's say broadcast one
09:34 - we're trying to break this
09:35 - number that passing in okay and
09:37 - broadcast
09:38 - number two was it okay uh
09:41 - for now i mean you can put another
09:44 - operator here i guess
09:45 - make it look better when this is for
09:47 - just testing
09:48 - so we are going to put a space here okay
09:52 - a couple of space okay
09:53 - so what happened if i run this you'll
09:56 - see
09:57 - okay so you will see the cat will say
10:01 - one space base space 5 8 space space
10:04 - space 7
10:05 - so let's run this so i am going to run
10:08 - this
10:09 - right here just click on it to run so
10:11 - this will call this
10:12 - so you see you see it finds the number
10:15 - right but
10:16 - oh you see what happened here when it
10:17 - gets to 11 and 12
10:19 - that will not work right because the
10:21 - position the
10:22 - first and third letter are not the
10:24 - number the third letter here is actually
10:26 - a pipe so
10:27 - so this will work if you have only eight
10:30 - boxes for matching but if you have more
10:32 - than eight boxes
10:33 - this will not work correctly right you
10:35 - can see right one and five is fine eight
10:37 - and seven is fine
10:39 - but when you get to 11 and 12 you see
10:41 - that it messed it up
10:42 - right so that's why this will not work
10:45 - so what we have to do
10:46 - is we are going to have to break this
10:48 - matching number
10:50 - uh we are going to have to create
10:51 - another uh custom
10:54 - custom block that helps break this up
10:58 - okay all right so we'll go back to my
11:00 - block
11:02 - uh make a new block called uh break
11:04 - input
11:08 - so basically this will break the input
11:11 - whatever
11:12 - we are sending it in okay
11:16 - so let's put him right next to here so
11:20 - like this so what we're going to do
11:22 - we're not going to do it like this
11:24 - i'll show you later let's walk on this
11:26 - brick input first
11:30 - okay so we have to go to variable
11:34 - uh we are going to uh use the index
11:37 - so break index will set it to one right
11:40 - since
11:40 - uh scratch use one okay
11:43 - all right and then we are going to
11:47 - simply set some variable first we are
11:50 - going to say
11:51 - current character we'll delete this zero
11:54 - we'll make it blank
11:56 - and what we also going to do is
11:59 - instead of over here that we set we are
12:02 - going to do it over here
12:03 - so we will just reset this broadcast
12:07 - one to the blank one duplicate
12:10 - white cast two
12:14 - okay so we have two broadcasts we're
12:16 - resetting it
12:17 - now what we are going to do is we are
12:19 - going to repeat
12:22 - until
12:25 - okay where's my repeat repeat ah okay
12:29 - right here okay repeat until
12:32 - um so we will try to find the character
12:36 - okay repeat until a character which we
12:39 - are going to use to
12:40 - to to see what is the character when
12:42 - we're getting it
12:44 - uh when we do the loop inside this uh
12:46 - input
12:47 - just if you guys have problem here you
12:49 - can look at the other
12:50 - list video where we are finding the uh
12:53 - you know the custom
12:54 - uh duplicate item in the list and all
12:57 - that will show you how to break
12:58 - also but this is a different method this
13:00 - is actually breaking the
13:01 - word so what we can do is
13:06 - okay we are going to use this one so
13:08 - repeat until
13:10 - the current character
13:14 - is equal to the pi character so we will
13:17 - try to repeat until
13:18 - this point so we'll pick up like 11 so
13:21 - if
13:21 - it's 11 is next to each other right 11
13:24 - so it will not stop it will stop only
13:26 - when you get to the pipe
13:28 - character okay all right you so
13:31 - say set
13:34 - okay this one you say set the current
13:37 - character
13:39 - so what uh how do we get the current
13:41 - character so we have the index right
13:43 - so we have to use this
13:48 - the letter so of the
13:51 - input and then we got we are going to
13:55 - use this break uh
13:56 - break input index
14:00 - so what we can we cannot use this index
14:02 - because this index is used by
14:03 - the the other code here and then we
14:05 - don't want to mess it up
14:06 - okay that's why we're gonna create
14:08 - that's why i created another one i'll
14:10 - break input index just for this
14:12 - this custom block only all right
14:16 - okay now you you find the character so
14:19 - let's say
14:20 - let's say the break input index is one
14:23 - so let's say i set this to one i'll show
14:25 - you what i mean
14:28 - so let's say this is one
14:31 - um okay let me remove this for now we'll
14:36 - we'll do it like this i think it's a
14:38 - little bit better
14:39 - let me put another code i think i cannot
14:41 - show you yet let me put another set of
14:43 - code here
14:44 - that will be better so let's put this
14:48 - back in
14:50 - okay and then we'll say
14:53 - not we're gonna use this not operator
14:57 - we'll do a little bit more code before i
14:59 - demo it
15:00 - okay and then we have to use this
15:03 - so just like this on top i guess we'll
15:06 - duplicate this guy
15:08 - so if it's not this one what we want to
15:11 - do we want to join them together okay
15:14 - so you say set
15:18 - okay this is broadcast so this is the
15:20 - first one we'll just use broadcast
15:23 - and we are going to use the join since
15:25 - if they are not this so
15:27 - basically we run to 11 right 11 is not
15:30 - the pipe
15:30 - you're gonna try to join the one and the
15:32 - one together okay
15:34 - so what you have is you are going to
15:37 - join the broadcasting message
15:39 - uh one
15:42 - okay with the current character
15:45 - okay so whatever the current gear i'll
15:47 - run through this a couple of times
15:49 - you'll understand a little bit better
15:50 - and make sure you have to increase your
15:55 - index okay
15:58 - so change the break index by one okay
16:01 - so let's see what happened right now
16:04 - okay we are going to put in a
16:08 - a say here okay
16:11 - and we are going to say the variable
16:14 - of broadcast one for now okay
16:18 - let's do it for one second okay so
16:21 - let's save this let's go back up over
16:24 - here a little bit let me zoom out
16:26 - a little bit so what i'm going to do is
16:29 - i am going to call this gap so this
16:32 - setup
16:33 - so setup sprite we have this right so
16:35 - we're not going to use this anymore
16:36 - we'll
16:37 - trash this trash that this guy will
16:40 - actually call this
16:41 - break the input okay and we are calling
16:44 - this game so this function is calling
16:46 - this function we need to
16:47 - do more stuff here so so for now just
16:50 - saying this function called this
16:51 - function okay
16:52 - and this function is called by this one
16:54 - so this number 1
16:56 - 5 will be passed over here this 1 5
16:58 - again will be passed over here and then
17:00 - we'll try to break that one
17:02 - one now okay so when i run this game
17:05 - you will see one eight i mean one eight
17:08 - two three eleven four okay if it's right
17:12 - so to test it you don't have to run the
17:14 - whole game again
17:15 - just click on this so you see one
17:18 - eight two three
17:22 - one eleven right you see that you see
17:24 - that eleven
17:25 - so you see that because of the one
17:29 - one right it's not a um not a number
17:32 - i mean not another pound it's another
17:34 - pipe character so you'll join that it
17:36 - becomes
17:37 - 11. okay so at the end
17:41 - right at the end we'll have each number
17:44 - at once okay let's just try this
17:49 - okay i hope you guys understand if not
17:52 - uh just kind of watch the video again i
17:54 - guess um
17:55 - so i'll try to explain the next part so
17:58 - now we have picked up the first number
18:00 - we're trying to get the second one
18:02 - so what we have to do is since we are we
18:04 - were using this break input
18:06 - right input index we need to reset it
18:09 - okay
18:09 - before we call the loop again so what
18:12 - you have to do is call this set
18:16 - uh set it back to one right send scratch
18:19 - going by one
18:20 - we'll set it back to one and then we are
18:22 - going to repeat
18:23 - until again this time the conditions a
18:26 - little bit different
18:29 - so we are going to use the operator here
18:33 - which is the greater than let me zoom in
18:36 - a little bit more
18:37 - okay here we will have to find the
18:41 - length of the input so we'll undergo to
18:43 - the input
18:45 - uh sorry the length of the input will go
18:48 - to here
18:50 - [Music]
18:52 - so we'll get this guy here
18:56 - so what is the length of the input so
18:58 - length of input basically you know
19:00 - whatever the in input that's coming in
19:03 - right whatever it does pass in here
19:05 - we're trying to get that linked
19:07 - okay it could be like three or four
19:10 - like this case will be three right so
19:12 - this case there's a link
19:13 - or the input will be five right so
19:17 - whatever that is and we are going to
19:21 - compare this with the break input index
19:24 - we just reset it to one here
19:27 - and we are going to reuse this set
19:30 - current character again
19:32 - so we again we're trying to find the
19:34 - character okay
19:37 - so now we want to find the
19:40 - break uh index
19:44 - oh i made a mistake over here uh it's
19:47 - not set since actually
19:49 - what we're going to do is at this point
19:52 - we picked up the first a number what
19:54 - we're going to do
19:55 - when we hit this pipe character we stop
19:58 - what we need to do is we're going to
19:59 - move the index
20:00 - past this point so what you have to do
20:02 - is you say change
20:05 - so be sure to not get that corrected
20:08 - okay
20:09 - so you say change this by one so we are
20:11 - going to move the index by one
20:15 - now the position of the index is now at
20:17 - this this position
20:18 - so now we'll get whatever the n is it's
20:21 - gonna create that as the second
20:23 - broadcast
20:24 - okay all right so you can get the letter
20:32 - so letter of this
20:36 - of the input
20:37 - [Music]
20:39 - and then we are going to grab one more
20:41 - here set
20:44 - the second broadcast we are going to use
20:46 - the join
20:49 - so make sure you you reset that in the
20:52 - beginning so every time it
20:54 - goes it doesn't have anything so when
20:55 - you're joining something to itself
20:57 - nothing
20:58 - then it becomes that thing only right so
21:01 - that's why make sure you reset that if
21:02 - not your your number will go
21:04 - wrong okay so you're going to join this
21:08 - for the first time when you join will be
21:09 - blank and we are joining with the
21:12 - current character okay
21:16 - and then we are going to change this
21:18 - index
21:19 - the break index again by one so now when
21:22 - it picks up
21:23 - let's say you're over here we it finds
21:25 - the this uh
21:27 - this bar right the straight bar what it
21:29 - does is it will move this
21:31 - index one so past the straight bar
21:34 - then it will repeat until it gets to the
21:36 - end so we'll pick up this five
21:39 - but for this case this when you pick up
21:42 - one it's not the end yet what it's going
21:44 - to do
21:44 - is it's going to go all the way to the
21:47 - ends and this since it says
21:48 - greater than the length of the input
21:50 - right so let's say
21:52 - you're here and then you want to go all
21:53 - the way over here so
21:55 - go on next and we'll pick up two as well
21:57 - and then we'll join together so we'll
21:58 - make 12.
22:00 - so this is what it is right now
22:04 - so at the end of this right you actually
22:06 - have two number
22:07 - you have a broadcast so let's display
22:10 - this right now
22:12 - so to do to test right so what you guys
22:15 - can do
22:16 - you know grab two of this
22:19 - uh go get the variable you can say uh
22:22 - broadcast one
22:24 - and broadcast too so at the end of this
22:27 - what we want to achieve is we are going
22:29 - to get 1
22:30 - 5 8 7 2 9
22:34 - 3 10 11 12 4 6 right
22:37 - so maybe we can join them together i
22:39 - guess maybe faster
22:41 - right we don't want to see any messages
22:43 - we can join them
22:46 - right here i should have not deleted my
22:48 - old one so i can
22:49 - show it anyway i deleted so let's
22:52 - just use anything you want right to in
22:55 - between just to see it
22:56 - right what cast one and what just do
23:00 - okay so now when we run this you'll see
23:02 - one
23:03 - colon five i mean this is just the
23:07 - eliminator right doesn't matter i'm just
23:09 - showing you that you have the
23:10 - each of these podcasts will have a
23:12 - number itself
23:14 - okay all right so let's go back over
23:16 - here
23:17 - let's zoom out a little bit
23:21 - go back here i'm gonna click on this
23:23 - again
23:24 - this will call this and this one will
23:25 - call this and it will break the number
23:27 - for us
23:28 - all right so you click on it you see one
23:31 - five
23:32 - eight seven two nine
23:36 - 3 10 11 12
23:39 - 4 6 right cool so now we have all the
23:43 - number that we actually need
23:45 - so we start can broadcast this guy to
23:47 - set him up
23:49 - right okay okay for now
23:53 - i'm going to uh create some
23:57 - i'll put this guy over here so you can
23:59 - see a little bit better
24:00 - okay what i'm going to do is i am going
24:03 - to hide this guy
24:04 - for now let me go back to the cat i am
24:06 - going to duplicate this guy
24:09 - duplicate i'm going to put them over
24:11 - here
24:12 - second one just for showing purposes
24:15 - okay
24:16 - all right so what we are going to do is
24:21 - we are going to broadcast this guy and
24:23 - then set him
24:26 - so let's use some if statement here
24:29 - okay you say if
24:34 - and then we have to use this operator
24:36 - here okay let's zoom in again
24:40 - so you say if so we have the broadcast
24:43 - right
24:43 - so we'll use this variable say broadcast
24:47 - or calculus has one is equal to one
24:51 - so that's the first sprite what we're
24:52 - going to do is we'll
24:54 - since since in scratch is not easy to
24:57 - pass
24:58 - like variable from one sprite to another
25:01 - not like other programming language you
25:03 - can actually call different
25:05 - uh different method and different class
25:08 - right so this one doesn't have like that
25:10 - so you in order to communicate to this
25:13 - one you're gonna have to broadcast it
25:14 - over
25:15 - so what we're going to do is we're going
25:16 - to use whatever scratch you provide for
25:18 - us which is broadcast
25:20 - um don't use this broadcast you have to
25:22 - use the broadcast and wait
25:24 - because we want to set up this sprite
25:26 - every time before that and you don't
25:28 - then
25:29 - it will be having a problem you use
25:31 - broadcast what it does is gonna go
25:33 - through the loop real quick and then
25:34 - it's trying to fire off all this thing
25:36 - and before this guy is even
25:38 - able to turn the right sprite
25:41 - this one will already go into the next
25:43 - number and then it will have a problem
25:45 - it will
25:46 - all that they will go incorrectly so
25:48 - that's why you want to use this
25:50 - thing called broadcast and weight okay
25:52 - that's very important
25:54 - okay so what you can say is
25:58 - set up oops set up
26:03 - sprite one okay and wait
26:07 - and let's broadcast another one
26:09 - [Music]
26:11 - if the broadcast is two we are going to
26:15 - say
26:17 - setup sprite number two
26:22 - okay so the if the podcast is one we'll
26:25 - separate
26:25 - set up this guy if the broadcast is two
26:27 - we'll set up
26:28 - you know one is this one broadcast
26:32 - number two or broadcast to this one so
26:34 - whatever that number
26:36 - number one so whatever the
26:39 - uh number one you set up the number one
26:41 - number two set up the second one
26:43 - but similarly we have to do the same
26:45 - thing for the broadcast number two right
26:48 - so we'll duplicate this code i will just
26:50 - show uh
26:51 - one set and then we'll work on the next
26:53 - set next time
26:54 - okay so this one will change it to
26:56 - broadcast two
26:58 - broadcast two so because it could be the
27:01 - reverse
27:01 - also right so that's why you had to do
27:03 - it two different time one is for the
27:05 - broadcast one
27:06 - one is for the broadcast two okay but
27:09 - broadcast is the same thing if there's
27:10 - one we'll set up one
27:11 - two will set up two okay all right
27:14 - okay so what we're going to do next is
27:17 - we are going to
27:18 - go into this code and we'll do a little
27:20 - bit of code
27:21 - okay all right
27:24 - okay let's go in here and say when i
27:28 - receive
27:31 - let me zoom in
27:35 - when i receive
27:38 - um setup sprite one so this is the first
27:42 - one
27:43 - what i'm going to do is i say switch
27:46 - or switch switch custom so switch
27:49 - costume
27:50 - so since we remember we picked up the
27:52 - name right we took that and we put in
27:54 - the match sprite name
27:56 - so what you can do is get this match
27:59 - sprite name with it here so we'll put
28:01 - that in here
28:02 - so what it does is when it receives this
28:05 - message the setup whatever that is
28:07 - whatever variable that contain whatever
28:10 - value containing that variable
28:12 - will be set to this custom so let's copy
28:14 - this over here
28:16 - so here inside one right we're not going
28:19 - we have to use
28:20 - two right i will use
28:23 - two okay this is the second one
28:26 - and you can position your stuff you know
28:29 - in the position you like
28:31 - for me you know here let me put in like
28:35 - around here for number uh
28:38 - number two i'm going to
28:42 - say negative 60
28:46 - and 120 i think that's the one that's
28:49 - the location i have
28:50 - so that is on that and then this one
28:53 - will
28:55 - do the same thing
28:58 - okay and this one is uh we're going to
29:01 - use a negative
29:03 - 180 and 120 okay just in case it meant
29:06 - this we just put okay so what happened
29:09 - is if i run
29:10 - this and i'll run the cat the cat cove
29:14 - right let's zoom back out
29:16 - so when i run this the cat will go from
29:19 - here will set up the
29:20 - the the the two pair
29:24 - and then the the sprite name then you
29:26 - will call the setup set we'll call this
29:29 - code this code will call this to break
29:30 - the input
29:31 - the input will come back and let the uh
29:34 - let this guy know what the broadcast is
29:36 - and it will set up the sprite
29:38 - okay all right so let me run this so
29:41 - what after i run this you should see
29:42 - that these two
29:44 - guy will have something okay that match
29:46 - this list okay let's run this
29:48 - save it okay we are going to try to run
29:52 - this i'll show you how it works
29:54 - okay let's run it again and we run the
29:57 - stop button
29:58 - so this will change to whatever that
30:01 - number one and two is so number one is
30:03 - what number one is the
30:04 - lollipop so you see lollipop
30:08 - and number two is what number two is
30:12 - is the zombie something
30:15 - okay number eight which is this
30:23 - so as you can see right we see number
30:25 - one number one is the lollipop
30:27 - so which is correct so as you can see it
30:30 - should be 0 32 lollipop
30:33 - so we go here go to costume it switched
30:36 - it to
30:38 - 0 32 lollipop right and this one
30:41 - number two is what the zero zero a
30:43 - zombie right
30:45 - so you can see zero zero a zombie right
30:48 - so it
30:48 - actually picks up the right one so he
30:50 - knows that okay for the sprite
30:52 - number one we are going to set the
30:54 - lollipop for the sprite number two which
30:57 - is over here
30:58 - we're gonna set with the zombie so let
30:59 - me run the code again you'll see it
31:01 - again
31:02 - will change
31:05 - okay run again so clean up this list
31:09 - and then it started setting up the list
31:12 - after that
31:13 - it displayed this okay so what do we
31:16 - have here
31:17 - you see one and two are the what this
31:20 - monster here
31:21 - 14 so just so happen one and two other
31:24 - pair
31:25 - that's why you see that they have a
31:27 - magic pair right this
31:28 - 14 monster that's why you see one and
31:31 - two as the matching pair
31:33 - so it doesn't matter it doesn't mean
31:35 - that they're next to each other will
31:36 - have the matching pair it could be
31:38 - some other way around right just so
31:40 - happened that the match is for that
31:42 - so let me run again i hope you guys
31:44 - understand this
31:45 - so once we get the pair we broadcast the
31:47 - message we'll find a pair
31:49 - so now one should have this spider right
31:53 - and then the two what is it the other
31:56 - one is
31:57 - two it should be candy cane so you can
31:59 - see right one is the spider
32:01 - and number two here is the candy cane
32:04 - all right
32:05 - so i hope you guys understand uh what we
32:08 - did here we try to broke the uh
32:10 - break the number right break the input
32:13 - so
32:13 - from here once we get the game set up we
32:17 - get the sprite name we get the matching
32:19 - number we call this
32:21 - this one to set up this one calls this
32:23 - break so the brick will break the input
32:26 - that comes in find the pair once that
32:29 - that is done
32:30 - so what we can do is we can delete this
32:32 - because this is actually slowing it down
32:34 - so now if we run it again it should be
32:36 - very quick
32:38 - and then it will call the broadcast and
32:39 - it will set it correctly so now let me
32:42 - run this real quick it should be quick
32:44 - so you see this once this is populated
32:46 - it takes some time
32:48 - you see it change it immediately right
32:50 - we took the uh
32:52 - say out right okay so i hope you guys
32:54 - understand
32:57 - so we'll see you guys in the next video
33:00 - uh
33:00 - next video we will try to complete all
33:02 - of them and we will work on the covering
33:04 - the uh
33:05 - the each of these sprites okay thank you
33:08 - very much uh
33:09 - see you guys next time bye

Cleaned transcript:

hello and welcome back to the kidscooling playground channel guys so today we will work on the second part of this uh hollywood matching game uh so far let's just go over the code on the first video we were just setting up the list for these number lists the game matching numberless and then we're setting the sprites and uh this is just a bunch of costume that we had in our uh you know on ours right here you know this different costume here you know those different custom name we just take that and we just plug it into this uh code here adding the sprite name then we have prepared game where we found the uh six uh six uh sprite that we were going to use as a pair to match and also the six pair number that we're gonna set up for the sprite so that's where we have left off so if you have missed anything just uh kind of pause the video and get the code okay so um we after that we have some in the bottom where we broadcast the instruction just to start the game and then we call the prepared game okay game is the here this block of code where we find in the pair now we're going to work on this one called setup again so let me run the game one time for you guys so that you can see what we have so far so let's save this let's run this again so what happened is the get tab the cat's gonna talk and then they will populate the list so let me show you the list here so once the cat runs you see this pair right so we are going to put this pair with the costume so these are the six pair under 12 and then these are the six different sprites okay all right got that so far all right what we're going to do is here what we call the uh setup game we have to grab a grab a block here we'll call it setup game let me zoom in a little bit you can see a little better okay we are going to use a loop again so before we can use the loop since we're using the index earlier whether we set it back uh scratch use indexes begins at one so that's why we are using one here we set one other programming tool index like java that was that zero so for scratch is one okay so we're resetting to one then we will use repeat until loop okay and then we're going to use the operator here greater than and then we are going to drag in this index here so what we want to do is we will want to loop through the list of the uh sprite uh that we had like this right name this list we are going to look to this list and get the first item okay uh what we're going to do is we're going to get this we are going to get the list so to get to the list you have to call the link so length of game uh spriteless cam names brightness so if you click on this you see six since you have six items here you get six so the loop will go six times um the seventh time it goes it will be bigger so every time you do make sure you increase the index if not it will go into an infinite loop so we'll have to increase the index later what we have to do is uh we can we are going to see called match sprite basically this is the sprite that is going to be used for match and where to pick the item from the list so to pick the item from the list uh we paint this game sprite list name which is this and instead one we are going to use the index so it will be also pick the first one second one third one and so on so if i let's say if i use this i can understand a little bit better so let's say i have this right so let's say i say smash name so what you guys can do right if you try to debug your code make sure you use like some kind of say something like that so that way you can debug your code better and also you can like make sure you open the variable you want right you can have the variable here so let's say if i run through this so you see is that it picks the first one and then it will say the second one and so on so since we don't have a uh we don't have the increase the index right you see it doesn't change so what you have to do is say change the index by one so now if i run this you'll see the cat it will talk quite fast we'll do one second so we'll name all the item here so you see back clown scarecrow the toe the halloween clothes and then the whatever the last one is okay all right so i hope you understand that so far so we have to take this back out we don't need that so now we have this what we also need to do is oops so we need to set the matching number so we have the matching sprite now whether you get a matching number so we're gonna use this one matching number this so this is the same thing you'll just pick the first one right how we're doing so we'll pick back and we'll pick this since the both are six so it's using those one loop will be okay so they will just use so we'll get the first one first one second one second one third one third one four four fifth fifth six six like that okay all right so what we're going to do now we have these we're gonna have to make a new block uh we are going to go call setup sprite so this will be a custom block or taking one input uh you can name it like uh whatever the input is we are going to send in the matching number to uh to find so we are going to call make this a matching number that we will be passing it that match number okay so don't use a uh so you can pass in boolean uh i mean use a number or text don't use the boolean one okay okay so we created this block here so this block will be somewhere here we'll just put it here for now we'll have to call this uh what we want to do is we can we are going to call this block so you can put it here and we want to send the matching number to it go to here send the matching number we'll take this out for now so what we're going to do is we're going to send in the matching number so one one type five okay this this key here this thing is called pipe okay or the straight line okay all right and then we have to change the index put that back in okay so this is how the setup code looks like and we got to move it over here okay now we will work on this one i think we need more space for this guy ah okay so how do we get the number right there's a couple of ways so let's say if you're doing if you're making a game that's only have let's say uh you know um only only not go up to 10 right so let's say you only have like this like only three letters then what you can do you exactly know what it is right so what you can do is you do this you can say um we are going to use this broadcast so we are going to use this broadcast one so this is the first pair and we're going to call this broadcast 2 this will for the second pair so what you can do is this but this is not the right way i'm just showing you um this uh how we can pick it up but we're going to do it the other way to break it up since you have actually multiple um number here so the one way if you're not doing more than uh eight uh like more than eight boxes then this is fine right if you have more than eight bucks then you actually have to break it so oops sorry so let's do this so what you can do is you can pick the first letter and the third letter right since this is the first letter is one and third letter is five so you exactly know so what you can do is you can drag this here drag this here so what you can do let's let's say i am going to open my so again to to test right always you can use a say that way you can test your stuff okay every time you you do your code you can test it so it's kind of like debug or log right in real coding so you can join this thing so you can join let's say broadcast one we're trying to break this number that passing in okay and broadcast number two was it okay uh for now i mean you can put another operator here i guess make it look better when this is for just testing so we are going to put a space here okay a couple of space okay so what happened if i run this you'll see okay so you will see the cat will say one space base space 5 8 space space space 7 so let's run this so i am going to run this right here just click on it to run so this will call this so you see you see it finds the number right but oh you see what happened here when it gets to 11 and 12 that will not work right because the position the first and third letter are not the number the third letter here is actually a pipe so so this will work if you have only eight boxes for matching but if you have more than eight boxes this will not work correctly right you can see right one and five is fine eight and seven is fine but when you get to 11 and 12 you see that it messed it up right so that's why this will not work so what we have to do is we are going to have to break this matching number uh we are going to have to create another uh custom custom block that helps break this up okay all right so we'll go back to my block uh make a new block called uh break input so basically this will break the input whatever we are sending it in okay so let's put him right next to here so like this so what we're going to do we're not going to do it like this i'll show you later let's walk on this brick input first okay so we have to go to variable uh we are going to uh use the index so break index will set it to one right since uh scratch use one okay all right and then we are going to simply set some variable first we are going to say current character we'll delete this zero we'll make it blank and what we also going to do is instead of over here that we set we are going to do it over here so we will just reset this broadcast one to the blank one duplicate white cast two okay so we have two broadcasts we're resetting it now what we are going to do is we are going to repeat until okay where's my repeat repeat ah okay right here okay repeat until um so we will try to find the character okay repeat until a character which we are going to use to to to see what is the character when we're getting it uh when we do the loop inside this uh input just if you guys have problem here you can look at the other list video where we are finding the uh you know the custom uh duplicate item in the list and all that will show you how to break also but this is a different method this is actually breaking the word so what we can do is okay we are going to use this one so repeat until the current character is equal to the pi character so we will try to repeat until this point so we'll pick up like 11 so if it's 11 is next to each other right 11 so it will not stop it will stop only when you get to the pipe character okay all right you so say set okay this one you say set the current character so what uh how do we get the current character so we have the index right so we have to use this the letter so of the input and then we got we are going to use this break uh break input index so what we can we cannot use this index because this index is used by the the other code here and then we don't want to mess it up okay that's why we're gonna create that's why i created another one i'll break input index just for this this custom block only all right okay now you you find the character so let's say let's say the break input index is one so let's say i set this to one i'll show you what i mean so let's say this is one um okay let me remove this for now we'll we'll do it like this i think it's a little bit better let me put another code i think i cannot show you yet let me put another set of code here that will be better so let's put this back in okay and then we'll say not we're gonna use this not operator we'll do a little bit more code before i demo it okay and then we have to use this so just like this on top i guess we'll duplicate this guy so if it's not this one what we want to do we want to join them together okay so you say set okay this is broadcast so this is the first one we'll just use broadcast and we are going to use the join since if they are not this so basically we run to 11 right 11 is not the pipe you're gonna try to join the one and the one together okay so what you have is you are going to join the broadcasting message uh one okay with the current character okay so whatever the current gear i'll run through this a couple of times you'll understand a little bit better and make sure you have to increase your index okay so change the break index by one okay so let's see what happened right now okay we are going to put in a a say here okay and we are going to say the variable of broadcast one for now okay let's do it for one second okay so let's save this let's go back up over here a little bit let me zoom out a little bit so what i'm going to do is i am going to call this gap so this setup so setup sprite we have this right so we're not going to use this anymore we'll trash this trash that this guy will actually call this break the input okay and we are calling this game so this function is calling this function we need to do more stuff here so so for now just saying this function called this function okay and this function is called by this one so this number 1 5 will be passed over here this 1 5 again will be passed over here and then we'll try to break that one one now okay so when i run this game you will see one eight i mean one eight two three eleven four okay if it's right so to test it you don't have to run the whole game again just click on this so you see one eight two three one eleven right you see that you see that eleven so you see that because of the one one right it's not a um not a number i mean not another pound it's another pipe character so you'll join that it becomes 11. okay so at the end right at the end we'll have each number at once okay let's just try this okay i hope you guys understand if not uh just kind of watch the video again i guess um so i'll try to explain the next part so now we have picked up the first number we're trying to get the second one so what we have to do is since we are we were using this break input right input index we need to reset it okay before we call the loop again so what you have to do is call this set uh set it back to one right send scratch going by one we'll set it back to one and then we are going to repeat until again this time the conditions a little bit different so we are going to use the operator here which is the greater than let me zoom in a little bit more okay here we will have to find the length of the input so we'll undergo to the input uh sorry the length of the input will go to here so we'll get this guy here so what is the length of the input so length of input basically you know whatever the in input that's coming in right whatever it does pass in here we're trying to get that linked okay it could be like three or four like this case will be three right so this case there's a link or the input will be five right so whatever that is and we are going to compare this with the break input index we just reset it to one here and we are going to reuse this set current character again so we again we're trying to find the character okay so now we want to find the break uh index oh i made a mistake over here uh it's not set since actually what we're going to do is at this point we picked up the first a number what we're going to do when we hit this pipe character we stop what we need to do is we're going to move the index past this point so what you have to do is you say change so be sure to not get that corrected okay so you say change this by one so we are going to move the index by one now the position of the index is now at this this position so now we'll get whatever the n is it's gonna create that as the second broadcast okay all right so you can get the letter so letter of this of the input and then we are going to grab one more here set the second broadcast we are going to use the join so make sure you you reset that in the beginning so every time it goes it doesn't have anything so when you're joining something to itself nothing then it becomes that thing only right so that's why make sure you reset that if not your your number will go wrong okay so you're going to join this for the first time when you join will be blank and we are joining with the current character okay and then we are going to change this index the break index again by one so now when it picks up let's say you're over here we it finds the this uh this bar right the straight bar what it does is it will move this index one so past the straight bar then it will repeat until it gets to the end so we'll pick up this five but for this case this when you pick up one it's not the end yet what it's going to do is it's going to go all the way to the ends and this since it says greater than the length of the input right so let's say you're here and then you want to go all the way over here so go on next and we'll pick up two as well and then we'll join together so we'll make 12. so this is what it is right now so at the end of this right you actually have two number you have a broadcast so let's display this right now so to do to test right so what you guys can do you know grab two of this uh go get the variable you can say uh broadcast one and broadcast too so at the end of this what we want to achieve is we are going to get 1 5 8 7 2 9 3 10 11 12 4 6 right so maybe we can join them together i guess maybe faster right we don't want to see any messages we can join them right here i should have not deleted my old one so i can show it anyway i deleted so let's just use anything you want right to in between just to see it right what cast one and what just do okay so now when we run this you'll see one colon five i mean this is just the eliminator right doesn't matter i'm just showing you that you have the each of these podcasts will have a number itself okay all right so let's go back over here let's zoom out a little bit go back here i'm gonna click on this again this will call this and this one will call this and it will break the number for us all right so you click on it you see one five eight seven two nine 3 10 11 12 4 6 right cool so now we have all the number that we actually need so we start can broadcast this guy to set him up right okay okay for now i'm going to uh create some i'll put this guy over here so you can see a little bit better okay what i'm going to do is i am going to hide this guy for now let me go back to the cat i am going to duplicate this guy duplicate i'm going to put them over here second one just for showing purposes okay all right so what we are going to do is we are going to broadcast this guy and then set him so let's use some if statement here okay you say if and then we have to use this operator here okay let's zoom in again so you say if so we have the broadcast right so we'll use this variable say broadcast or calculus has one is equal to one so that's the first sprite what we're going to do is we'll since since in scratch is not easy to pass like variable from one sprite to another not like other programming language you can actually call different uh different method and different class right so this one doesn't have like that so you in order to communicate to this one you're gonna have to broadcast it over so what we're going to do is we're going to use whatever scratch you provide for us which is broadcast um don't use this broadcast you have to use the broadcast and wait because we want to set up this sprite every time before that and you don't then it will be having a problem you use broadcast what it does is gonna go through the loop real quick and then it's trying to fire off all this thing and before this guy is even able to turn the right sprite this one will already go into the next number and then it will have a problem it will all that they will go incorrectly so that's why you want to use this thing called broadcast and weight okay that's very important okay so what you can say is set up oops set up sprite one okay and wait and let's broadcast another one if the broadcast is two we are going to say setup sprite number two okay so the if the podcast is one we'll separate set up this guy if the broadcast is two we'll set up you know one is this one broadcast number two or broadcast to this one so whatever that number number one so whatever the uh number one you set up the number one number two set up the second one but similarly we have to do the same thing for the broadcast number two right so we'll duplicate this code i will just show uh one set and then we'll work on the next set next time okay so this one will change it to broadcast two broadcast two so because it could be the reverse also right so that's why you had to do it two different time one is for the broadcast one one is for the broadcast two okay but broadcast is the same thing if there's one we'll set up one two will set up two okay all right okay so what we're going to do next is we are going to go into this code and we'll do a little bit of code okay all right okay let's go in here and say when i receive let me zoom in when i receive um setup sprite one so this is the first one what i'm going to do is i say switch or switch switch custom so switch costume so since we remember we picked up the name right we took that and we put in the match sprite name so what you can do is get this match sprite name with it here so we'll put that in here so what it does is when it receives this message the setup whatever that is whatever variable that contain whatever value containing that variable will be set to this custom so let's copy this over here so here inside one right we're not going we have to use two right i will use two okay this is the second one and you can position your stuff you know in the position you like for me you know here let me put in like around here for number uh number two i'm going to say negative 60 and 120 i think that's the one that's the location i have so that is on that and then this one will do the same thing okay and this one is uh we're going to use a negative 180 and 120 okay just in case it meant this we just put okay so what happened is if i run this and i'll run the cat the cat cove right let's zoom back out so when i run this the cat will go from here will set up the the the the two pair and then the the sprite name then you will call the setup set we'll call this code this code will call this to break the input the input will come back and let the uh let this guy know what the broadcast is and it will set up the sprite okay all right so let me run this so what after i run this you should see that these two guy will have something okay that match this list okay let's run this save it okay we are going to try to run this i'll show you how it works okay let's run it again and we run the stop button so this will change to whatever that number one and two is so number one is what number one is the lollipop so you see lollipop and number two is what number two is is the zombie something okay number eight which is this so as you can see right we see number one number one is the lollipop so which is correct so as you can see it should be 0 32 lollipop so we go here go to costume it switched it to 0 32 lollipop right and this one number two is what the zero zero a zombie right so you can see zero zero a zombie right so it actually picks up the right one so he knows that okay for the sprite number one we are going to set the lollipop for the sprite number two which is over here we're gonna set with the zombie so let me run the code again you'll see it again will change okay run again so clean up this list and then it started setting up the list after that it displayed this okay so what do we have here you see one and two are the what this monster here 14 so just so happen one and two other pair that's why you see that they have a magic pair right this 14 monster that's why you see one and two as the matching pair so it doesn't matter it doesn't mean that they're next to each other will have the matching pair it could be some other way around right just so happened that the match is for that so let me run again i hope you guys understand this so once we get the pair we broadcast the message we'll find a pair so now one should have this spider right and then the two what is it the other one is two it should be candy cane so you can see right one is the spider and number two here is the candy cane all right so i hope you guys understand uh what we did here we try to broke the uh break the number right break the input so from here once we get the game set up we get the sprite name we get the matching number we call this this one to set up this one calls this break so the brick will break the input that comes in find the pair once that that is done so what we can do is we can delete this because this is actually slowing it down so now if we run it again it should be very quick and then it will call the broadcast and it will set it correctly so now let me run this real quick it should be quick so you see this once this is populated it takes some time you see it change it immediately right we took the uh say out right okay so i hope you guys understand so we'll see you guys in the next video uh next video we will try to complete all of them and we will work on the covering the uh the each of these sprites okay thank you very much uh see you guys next time bye
