00:04 - [Music]
00:06 - hello programmers
00:07 - my name is lynn and today i will teach
00:09 - you about lisps in python
00:12 - by the end of this video you will
00:14 - understand the meaning of a list
00:15 - and why it's considered very flexible
00:17 - you will understand the rules and the
00:19 - feature of a list
00:20 - you will understand many creative
00:23 - additional methods in python
00:25 - and understand what is a nested if and
00:27 - of course we will apply all of these
00:29 - methods into our jupiter notebook and
00:32 - i'll give you a mini quiz at the end of
00:34 - this video to
00:36 - test your knowledge so let's begin
00:39 - first of all what is a list
00:43 - a list is an ordered sequence that can
00:45 - hold a variety of object types
00:47 - and what i mean by an object type is
00:50 - like floating points
00:51 - integers strings these are all can be
00:54 - held in a list
00:56 - they use square brackets and commas to
00:59 - separate objects and list
01:01 - so here's in a little example
01:04 - and lisps support instancing
01:07 - and slicing so if you didn't watch our
01:10 - previous video and you don't know what
01:12 - our industry and slicing is
01:14 - make sure to check it out i will link it
01:16 - in the eye in the corner
01:18 - as well as in the description box
01:21 - then lists are nested and we're gonna
01:24 - learn more about that later
01:26 - on now lists are
01:30 - considered extremely flexible in python
01:32 - for two main reasons
01:34 - one is that they have no fixed size
01:37 - meaning you don't have to specify how
01:39 - big a list will be
01:40 - before you start coding it and they have
01:43 - no fixed type
01:44 - data meaning that you don't have to in a
01:47 - list
01:48 - not everything should be a string it can
01:50 - be a mix of strings and floating points
01:52 - and integers
01:54 - so let's hop into our jupyter notebook
01:56 - and explore
01:57 - some of these concepts and let's
02:01 - learn a bit about coding
02:05 - so our jupiter notebook is where we code
02:07 - on and it is
02:09 - very good for beginners as
02:13 - it shows you input and output and makes
02:15 - you understand about what is happening
02:17 - to your code
02:18 - so i'm going to launch it from my
02:21 - anaconda navigator
02:22 - and if you don't know how to download
02:24 - jupyter notebook or you don't have it
02:26 - already
02:27 - make sure to click the i in the corner
02:29 - or the description box
02:31 - and check out that video that we filmed
02:34 - some time ago
02:35 - anyway i'm on my anaconda navigator now
02:38 - and i'm going to press
02:39 - launch jupiter notebook i'll see you
02:42 - soon
02:44 - all right guys as you can see we are on
02:46 - our jupiter notebook right now
02:48 - and you can see that we have blocks for
02:50 - us to code on
02:51 - and let's start with assigning a list to
02:54 - the variable
02:55 - lin oh actually here my
02:59 - underscore list and we have to use
03:02 - equal and then we need square square
03:06 - brackets
03:08 - inside them i will put
03:11 - five six seven and eight
03:15 - all right and let's try running it let's
03:17 - see if python can now
03:20 - identify this
03:24 - it knows that um my list is equal to
03:27 - five six seven
03:28 - and eight and as you can see this is our
03:30 - input this is our
03:32 - output and we just created a list of
03:34 - integers
03:36 - but as we know lists can actually hold
03:39 - more than just integers they can hold
03:41 - strings and floating points
03:43 - and way more so
03:46 - um i'm going to teach you a function
03:48 - that you can use
03:50 - to count how many items are in a
03:52 - sequence of lists
03:53 - and it's called the len so
03:57 - what you have to do is
04:00 - open up the brackets and inside it put
04:03 - the name
04:04 - of your list so my list
04:07 - and let's run it for perfect
04:10 - if we add more items into our
04:14 - list and run it
04:18 - it changes so let's check out some
04:21 - other features from lists so i'm going
04:24 - to teach you
04:25 - another really cool method and
04:28 - as we know that lists are extremely
04:30 - flexible
04:31 - and you can actually use a plus sign to
04:34 - add
04:35 - an item to a list although this doesn't
04:38 - change the original list you can do that
04:41 - by reassigning or by an alternative
04:43 - method i'm going to teach you later on
04:46 - so what we're going to do right now is
04:49 - do
04:49 - uh i don't want to change my list
04:52 - permanently i just want to tap
04:53 - temporarily so i'm going to put lin list
04:58 - plus square brackets
05:02 - and inside it i'm going to add
05:08 - 10. again this is temporarily
05:15 - oh i didn't define that okay we'll use
05:18 - my list
05:19 - perfect my underscore list plus
05:22 - 10. and now if you want to run it again
05:25 - because you don't want it to change your
05:26 - original one
05:27 - perfect another thing that you can do is
05:30 - multiply
05:31 - so if you want to duplicate the items in
05:34 - a list
05:35 - and you can do that this way my
05:38 - underscore list times
05:42 - this one here is used as a
05:44 - multiplication sign
05:45 - in python and
05:49 - you can put times
05:53 - 2 for duplicating it and we have
05:55 - everything times
05:56 - 2 times 3
05:59 - you have a time 3. again if you want to
06:02 - run
06:04 - your list nothing changes
06:07 - it's temporarily so these are some of
06:10 - the
06:10 - um methods and we're going to
06:14 - learn a lot more but let's clear this
06:17 - out
06:18 - so that we have more space to do some of
06:20 - our
06:21 - other special methods that we can use
06:24 - for a list
06:24 - so let me clear this out and i'll see
06:26 - you in a second all right guys we are
06:28 - now
06:28 - enough on our fresh page on our jupiter
06:31 - notebook
06:32 - and we're going to take a look at some
06:34 - of the special methods
06:35 - that can be used in not just lists and
06:38 - anything in python
06:39 - so let's create a new list of my
06:41 - favorite animals
06:42 - and i'm going to call that new l for
06:46 - short
06:47 - and equal square brackets
06:51 - and my favorite animals i really like
06:53 - dogs
06:54 - they're super cute i also like oh
06:57 - make sure to add on your apostrophes and
06:59 - comments to separate
07:01 - all of your animals i really like cats
07:03 - as well they're so fluffy
07:06 - i think horses are pretty cool too i
07:09 - can't remember any for now but
07:12 - we can put these for now now i'm going
07:15 - to teach you
07:16 - one of my favorite methods or functions
07:19 - and it's called the append
07:21 - and this is the alternative way i was
07:23 - talking about earlier on
07:24 - it is used to permanently add an item to
07:27 - the end of the list
07:28 - so let before on this video we used
07:32 - a plus sign to add it but it was
07:34 - temporarily
07:35 - so append me is to add something or an
07:39 - item to a list
07:40 - for permanently so let's use it because
07:43 - i just remembered
07:45 - i absolutely love flamingos they're
07:47 - super
07:48 - cute and i love the pink color so let's
07:51 - use the pant function
07:52 - so i'm going to put the name of my list
07:54 - new l
07:56 - i'm going to put dot append and inside
07:59 - it
07:59 - i will put the name of my favorite
08:02 - animal
08:03 - so flamingos
08:07 - all right let's run it new owl look it
08:10 - is it is now one of my um
08:13 - lists it's in my list now and
08:16 - it is added at the end so that's perfect
08:20 - all right now i just remembered
08:23 - that one of my other favorites is fishes
08:27 - so let's put u l dot append
08:30 - open up the brackets and add fishes
08:35 - they're really good swimmers so i really
08:37 - like them so now let's try it out again
08:40 - perfect okay i just remembered that when
08:44 - i was younger
08:46 - my all of my fishes died so
08:49 - i don't think i would probably like
08:51 - fishes when i was younger because they
08:54 - also eat
08:55 - so i thought these i used to think that
08:57 - they eat me
08:58 - so maybe i don't like fishes anymore so
09:01 - we can use a new function called
09:03 - pop that is it is used to remove or pop
09:06 - off an item
09:08 - depending on the index so if you don't
09:10 - understand what is indexing and slicing
09:13 - you have to go check out our previous
09:15 - video we talked about them
09:17 - and we mentioned a lot of important
09:19 - stuff that will help you in your coding
09:20 - journey
09:21 - so make sure to check it out anyway
09:24 - let's use the pop function now to remove
09:28 - dishes off my list so what we're going
09:31 - to do is put the name of my list
09:34 - new l and
09:37 - dot pop and brackets inside the brackets
09:40 - i have to put the index
09:42 - of fishes so zero one two
09:45 - three four the index of fishes is four
09:49 - so here we go and let's check out my
09:52 - list now
09:53 - fish is no longer one of them perfect
09:57 - now um i want my list to be for
10:00 - to be in descending order
10:04 - i want it to be listed in a descending
10:06 - order and
10:07 - luckily we have another function which
10:09 - is called
10:10 - reverse so let's try it out
10:13 - so let's put the name of my list ul
10:17 - and let's put
10:20 - dot reverse
10:23 - and brackets empty brackets are fine and
10:26 - let's run
10:28 - mu l flamingos which is cats and dogs
10:32 - perfect
10:33 - a b c d e f g h
10:37 - cool all right now that that is done
10:42 - we're going to move on to nesting lists
10:44 - so i'll see you after i clean
10:46 - my notebook see you
10:49 - alright guys now what is a nested list
10:53 - i kept this for the end because now that
10:55 - you understand all of the other
10:57 - functions that we learned
10:59 - next a nested list is basically a
11:03 - it consists of a list inside list so
11:06 - it's basically a list inside the list
11:08 - and you just create as many normal lists
11:11 - as you want
11:12 - and just assign them to a variable and
11:14 - that's it and you can use
11:15 - all the other functions that we learned
11:17 - such as append and pop-off
11:19 - and all of them now i'd like to test
11:22 - your knowledge about today's topic
11:24 - i'm going to give you three multiple
11:26 - choice questions
11:28 - and the answers will also be displayed
11:30 - but you'll have to pause the video
11:32 - and write it in the comments section and
11:35 - i will correct it for you
11:38 - so question number one
11:41 - lisps can have multiple object types
11:45 - is that true or is that false
11:49 - pause the video think about it
11:52 - and unpause it when you're ready
11:57 - all right you got it yes the answer is
12:00 - true
12:01 - as i said before lisps can have multiple
12:04 - object types such as string
12:06 - integers and floating points and they
12:07 - can be all in the same
12:10 - list together question number two
12:14 - if the list dogs cats birds what is the
12:18 - result of
12:19 - list one this is a bit tricky so think
12:22 - about it carefully
12:23 - is it cats is it cats and birds
12:26 - is it birds is it dogs and cats
12:30 - pause the video think about it and
12:32 - unpause it when you're ready
12:36 - the answer is cats birds
12:39 - so this is a question link to our
12:42 - previous video which is about
12:43 - indexing and slicing and of course they
12:46 - are used in lists
12:47 - and i did a different one while
12:49 - explaining on the jupiter notebook
12:51 - but this is a bit trickier
12:56 - and question number three and the final
12:58 - answer
12:59 - if list is equal to cat's dog's birds
13:03 - what is the result of list dot pop
13:08 - is it birds is it dogs
13:11 - is it cats pause the video
13:14 - think about it and unpause it when
13:16 - you're ready
13:19 - all right the answer is birds because we
13:22 - said that
13:24 - um the indexing is for when they when we
13:27 - don't specify
13:28 - what which one birds will always be them
13:32 - the last one will always be the one that
13:33 - will get deleted or
13:35 - popped off all right guys i hope you
13:38 - enjoyed this video and i hope you
13:40 - learned a lot
13:41 - and i make sure to give this video a big
13:44 - thumbs up if you enjoyed it
13:45 - and subscribe in order to join our
13:47 - family in order to become a programmer
13:49 - one day
13:50 - and if you want to get notified every
13:52 - time we upload a new video so that you
13:54 - can be first
13:55 - turn the notification bell on to get
13:56 - notified
13:58 - alright guys thank you keep bro
14:00 - programming and i'll see you guys next
14:01 - time
14:02 - on programming kids bye for now