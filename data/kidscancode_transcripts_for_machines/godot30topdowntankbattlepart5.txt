welcome back to part five of the topdown tank battle tutorial in good√∂ 3.0 this time we're gonna make the enemy tanks shoot and we're also going to improve the enemy tank movement a little bit all right let's get started so to start we have a couple things to clean up on the enemy tanks one thing that I forgot about last time was you know say this tank here I have the detect radius set to 500 but when I run the scene it's still a very small circle and the reason for that is our enemy tank go over to enemy tank scene is usually using a circle collision shape for the detect radius and then the code is setting the radius but the problem is because we created that shape in the scene and then instanced multiple copies of that scene they're using the same shared collision shape so every enemy tank will have the same exact collision shape and if you change the radius on one it changes it on all of them so instead what we're gonna do here is I'm going to set this to bet to null I'm going to clear out the shape and leave the shape undefined and then in the script what we're going to do is in the ready we're going to make a new circle shape when we initialized the tank so then we set our detect radius collision shapes shape equal to the circle and then we set the shape radius like we did there and that way we will have what we want which is a big circle for that guy and a smaller circle for that guy whatever we set so now I've gone ahead and made an enemy bullet seen extending the base bullet seen just like we did with the player and I've chosen a sprite for it and gave in giving it a collision shape and we're gonna use that to make the enemy tanks fire so we need to add that to the enemy tanks bullet parameter and then we'll jump into the script so what we want is the enemy tank to fire but only when it is pointing at least in the general direction of the player I don't want the tank firing you know in the opposite direction from where the player is so we want to know if the angle between the enemy tanks turret and the player's position is less than a certain number of degrees and we can adjust that to give the tank more or less accuracy so in our process function we already have a unit vector pointing towards the target and we have a unit vector of our current direction of our turret and so to find the angle between them we can just use the dot product so if target Direction dot current direction and so that will give us a value and if you're not familiar with dot product what I recommend you do is go over to the Godot official documentation under the tutorials math section there's a document on vector math and if you go down to the dot product section it tells you a little bit about what the dot product is and for our purposes what we need to know is that when you have two vectors and you take their dot product if the dot product comes out to be zero then they are exactly 90 degrees apart if the number is less than zero then it's going to be greater than 90 degrees and if the number is greater than zero then it's less than 90 degrees and because their unit vectors then that value is going to be between zero or I'm sorry between one if they're pointing the exact same direction and negative one if they're pointing you know exactly in the opposite direction so we want a number that is close to one and that will mean what that we're nearly pointing in the same direction so I'm gonna try this and we're gonna we can experiment I'm going to try this with zero point nine and see how that works and then we can adjust it if we want to make it different and we'll make it probably make it a parameter but I always want to try it out then we're going to call our shoot function which we argue to defined in the tank script right and that's going to emit a signal with our bullet so just like we did with the player we just need to connect that signal of our enemy tank to the function in main to handle the bullet so we go to our enemy tank and we connect its shoot function and we're going to connect it and map to tank shoot is what we named it not enemy tanks shoot because we're using the same function for all of them and I'm going to do the same thing with the second enemy tank so let's try it out and see if our enemies are shooting at us go over here and get inside the radius yeah there we go and so see when the turret is pointing in the general direction of my player it fires but if I'm far away then it doesn't okay so that's pretty good now the next thing I wanted to do something about was that that you just saw there when we get in front of the enemy tank you know it kind of pushes the player out of the way which is a little bit ugly because if you're at an angle or something you get that snapping right so instead let's make our enemy tanks not quite so dumb and if they see something in front of them they are going to hit the brakes and you know shoot at it keep shooting at it but they're gonna hit the brakes and then if nothing's in front of them they'll resume movement so we're gonna do that by adding a ray cast to the enemy tank so I'm going to add a ray cast to D and I'm gonna call this look ahead and I want this to be pointing in front of the player out in front of it so I'm gonna enable the raycast very important a lot of people forget to do this when they first add a ray cast to denote enable is off by default so if you're wondering why your ray cast isn't working that's probably why the cast too we want to set it to look ahead of the player so I'm gonna try let's say 100 let's say 100 pixels so there we see I'll zoom in here and there there we see our ray casting ahead so if this contacts something that's how we're gonna know that we want to slam on the brakes now the thing is this also means I want to be able to adjust my speed I want it to slow down and speed up so instead of this constant value that we've set here for speed or it always moves the exact same speed in the tank source script I'm gonna change this too and call this max speed and then we will adjust that with a local speed variable that can change over time as we're accelerating or decelerating so now if you save that don't forget to go back over to your various tanks and set their properties again because we've changed the name of the property it no longer has the value in there now over on the player script we need to change this we're just gonna stick to max speed here we'll worry about player acceleration and deceleration maybe later but that should be all we need to do there now on the enemy tank we're gonna add a local variable here called speed and that's gonna be whatever a current speed is and in the process function we're sorry in the control function when we're this is where we're detecting and moving along the path we're going to check the look ahead so if lookahead is colliding then that means that something's in front of us so we need to take our speed and we want to adjust it down to zero but I don't want to just set it to zero because then it would look like it stopped instantly and starts instantly when it starts going again so instead we're gonna use a linear interpolation or lerp we're going to take whatever the current value of speed is we're gonna ramp it down to zero and we're gonna try zero point one and see how we like how that looks now if it's not colliding with something then we want to do the reverse and we want to take our speed and we want to ramp it back up to max speed and we can use the same factor so now the speed should adjust when something is in front of it so let's try it out get down here in front of the tank and it should stop when it sees the raycast hit and it doesn't why is that it's not detecting the player anyway tank let's see ah know what it is the collision mask on the raycast is only seeing the environment that means it doesn't detect the player or other enemies and that's actually what we want so we're going to set that and that should do it so let's go over here and try that one more time and now if I'm in front of the enemy tank it should stop moving right as I back up and free up some space it can move again if I get out of its way it starts going and that's pretty good but the problem is gonna be when we have a situation at a corner let me get ahead of the enemy tank here and you know it's going to see it doesn't ever see me because the raycast doesn't hit it so we can get a better result if we have instead to look ahead raycast and what i'm gonna do is i just duplicated it and then we're gonna take one of them and offset them i'll set it up and I'll set the other one down so we're gonna take the transform we're gonna give it about 30 pixels in the y direction and the other one we will move about minus 30 in the other direction so now those two both stick out ahead and they're gonna detect those things that are you know just right on the edge that it's going to run into on the corners and that just means we need to in our script adjust this so that it checks both so if lookahead 1 is colliding or look ahead to its colliding and that's just gonna make it look a little better especially if we're down for example over here where the curvy area is where the tanks about to make some turns then it rotates you see that first one is touching the player when if I was about right here the single ray cast wouldn't be seeing me right now she'd be going right past so this gives it a little bit more field of view you can do this with areas too you could have a triangular area out in front of the player or sorry in front of the tank that detects whether something's there but this is working pretty well I think one thing I might do is so it comes to a stop and it starts going again I might change the ramp up back to speed a little bit lower so it takes a little just a slightly longer time to get started again so it doesn't look like it has as much acceleration so it can slam on the brakes but it can't accelerate back up to speed as fast that looks better and then if I'm going backwards you know it's trying to keep pace with me yeah I like that all right I think that'll do it for this installment in the next video we're gonna need to make these bullets start doing some damage now that they are hitting things we will connect up the health of the player and the enemy and make them take damage thanks for watching please leave your comments and questions below and I'll see you in the next video you