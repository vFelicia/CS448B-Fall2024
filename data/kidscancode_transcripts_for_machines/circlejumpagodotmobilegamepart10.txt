welcome back to part 10 of the circle jump series in this video we're going to fix some things that we discovered last week when we started doing some Android testing and we're also going to add a high score function all right let's get started so first of all I want to thank everyone who tested the apk out on their phones from last video we got a lot of good testing done and so the first thing we're gonna do this time is we are going to switch to the GL ES 2 renderer it's a lot more compatible on more phones and has less less issues with it we had a feeling that that was going to be the case and it turned out to be true but what that means is we're going to have to remove this world environment because the thing we were using it for which was the glow effect doesn't work in GL ES 2 and so if we want the circles to glow we're gonna have to do that in a shader the other issue we found was that this animation for showing the message is really performing poorly so whenever you jump from one ring to another and you get up a level and that message pops up it's lagging the game like crazy and it just turns out that animating the labels dynamic font causes too much overhead so this is just not efficient so we are going to nuke that animation or sorry that track at least on the animation so it costs custom font size we're going to nuke that and now instead we're going to animate the scale so we're going to take the scale from 1 well create a key for that and at the end we will go to 2 and we'll key that now the problem the only problem with that is that it's going to grow kind of asymmetrically because it grows from the anchor point and we could would set the pivot offset here manually but since we are going to be having different sized screens and we have everything dynamic we'll set that in code so in the ready for our HUD we're going to set the pivot offsets a message rec pivot offset is going to equal and we want to just set it to the center whatever the center of the rectangle is so we just take the rec size up in size size and divide by 2 and that will put it in the right place where it needs to be when we run and now we should get a good centered go let's go ahead and jump a couple times so we see the level up message there we go so a big thanks to twiddle on YouTube before suggesting that solution which worked out really well so now on to the circle shader that we need to replicate that glow effect and while we're at it add a little bit more flair to it so we're gonna go to the material on the sprite and right now we're using this color shader you know that just lets us set B rings color and I'm going to make this unique because we're gonna make a new shader for the glow that I don't want to use on the jumper sprite so we're gonna need a couple more uniforms here first one is speed because we're gonna animate this and the nice thing about these uniforms is you can add a hint range for what you want the inspector setting to be able to vary between so we put that there effect for is not speeds not effect for our speed is a flip and that will let us over here range this from zero to 20 and we'll also do one called radius so that we can vary this based on the size of the circle for when our circles get smaller and then the last one for getting my types they're writing too much GD script and then the last one here we're going to do is width and is basically going to be the the size of the glow effect and that's going to go from zero to one as well now on to our fragment shader here where we're going to start with everything being centered so we want the center of our texture here which is a UV of 0.5 0.5 our time is going to be multiplied by our speed factor the radius of the effect is going to be it's going to need to be scaled I'm doing 0 0 5 times sine of time and then also the thickness of the effect is width also using cosine time and then the distance from the center load is the distance from the current location relative to the center that's how far away it is so now we still use our color that we're setting over in the shader parameters but now we're going to add on to the Alpha some additional value which is we need a smooth step the thickness divided by two point zero comma zero zero and then we want an the absolute value of disk fineness rad which is how far away and so now what that's going to do is right now nothing changed but if we go over here and set the radius you can see where the glow effect is gonna be so we'll set that to match the size of our circle and then the width is going to be how much the glow spreads out and now the one problem we have now that you'll notice is that we get this effect now the reason for that is because our shader is running on the sprite so it can only affect the pixels of the sprites texture so to solve that I've made a larger texture a larger image with some extra transparent pixels around the circle to give it some more room to draw the glow effect and so that looks like this gives us some more space and then the other one is so for now we're just going to stick to this giving it this glow effect but we also have this speed factor which lets us animate that glow if we want it to pulse and that's something we can possibly mess around with later maybe with certain types of circles haven't quite decided yet but if we leave that at zero we just get a static glow okay I've saved that shader if you want to grab it as circle glow got shader and the other thing we have to do now that the size of our texture changed so some of these are gonna be off I'm not going to go through them all the way but we're gonna start out with our default radius being a little bigger and we're going to adjust the orbit position and the drawing of the pie effect in the center just a little bit so that it matches the new size okay so now we're going to add one more feature so on the game over screen I've added two more labels for the score and the current high score so that when you lose see what your score was and what's current best score is and we're gonna display those there and then we're also going to need to save the high score so that between game sessions that persists so we're going to need to save some data so over in our screens when we call game over we're actually going to pass in the score and the high score and before we change to the game over screen we're going to set those values so the score box is going to be equal to the game over screen that scores container just to make it easier for us to read and type and then we're gonna set the I'm gonna say get node score we're gonna set the text of that to the word score with whatever score value we passed in and then the same thing with the best so now over in Maine when we call game over because the jumper died we need to pass in those variables so let's declare them we have a score and now we also have a high score which will default to zero as well and then when the jumper dies we pass in score and high score but also when the player died that's when we need to check if the score is greater than the high score then we just got a new high score right and we need to save that score which we'll talk about how to do in a second but that means that we also have to load that high score when we start a new session so in ready we're going to need to do that so let's define where we want to save our score and we would put that in the settings not Gd let's just declare the score file and that's going to be in user that's the location where you're supposed to save user data and we'll just call it high score save and so we save that in users now over in back to our main script we can define load in safe score so loading the score just means going and pulling that data out so we get a new file object and if if the file exists then we'll be able to read from it so we'll open it for reading and high score is just going to be get guitar and then we close the file and now saving the file is just the opposite we want to do pretty much the same thing which is we want to get a new file object so we can grab that and now we don't need to test if it exists but we do want to open it but this time we want to open it in write mode and then we're going to use F store var to stick it in there and then close so now if we try it out we'll see that if I died right away alright my score was 1 best is one but if I go and get a couple of points and then die now the best is 3 if I quit that should still be there again the best history could that'll do it for this time I think we're getting really close for making a lot of progress thanks for watching and I'll see you in the next video this tutorial is part of my nugudo recipes website the goal is to collect all the best tips and to help make you a better go developer if you like this video I hope you'll go and check out the site and make sure to hit subscribe so you'll be notified whenever I release new videos thanks for watching