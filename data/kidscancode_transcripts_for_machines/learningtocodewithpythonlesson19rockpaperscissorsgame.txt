welcome back to learning to code with Python lesson 9 today we're gonna walk through how we would make another simple game but one that's a bit more interesting than guessing numbers rockpaperscissors alright let's go to the blackboard and write down what we need to do well we have two players right we have the human and we have the computer so what are the steps of the game well first we can ask the player to choose a move okay and then what I'm gonna do is I'm going to define the moves to be rockpaperscissors so we'll just use our P and s that way the player doesn't have to type out the word scissors when they make their move okay next we can get the computers move and that should just be a random choice out of the moves list all right so that's pretty straightforward but now we need to compare the two moves to see what the result of the game is well let's think about the possibilities we can write out all the possible outcomes like this will write the player's moves across the top like this so this is player 1 and then along the side we'll write out the computers moves so what happens well if they're the same then we know that's a tie right paper versus rock means the player wins scissors vs. rock the player loses Rock vs paper scissors vs. paper Rock vs. scissors and paper vs. scissors so we have nine possible outcomes for the game three wins three losses and three ties so for the third step in our game where we compare the moves we have a similar situation to our number guessing game where we had three possible outcomes you guess too high you guess too low or you guessed right so let's tell the computer what it needs to do to compare well first let's do the easiest one tie was it a tie well we can just check and see did the player pick the same one as the computer for step two let's find out did we did the player win how are we gonna tell that well the player won if it was one of these combinations so we can say the player wins if it's one of these choices P versus R s versus P or R versus s right because we're just writing player 1 first and player 2 second if it wasn't one of those and it wasn't a tie then the only thing left is they lost so let's write some code ok so first let's go ahead and import random so we're gonna want the computer to be able to make a random move so we'll need that and then let's go ahead and define those moves that we talked about so the moves that you can make are either R P or s and while we're defining lists why don't we make a list out of these player wins and we'll just call it player wins the player wins is PR s P RS okay so that's good enough for setup what's the first step of our game remember here we had player move so we need to get the players move well we can use the input command for that player move equals input your move step two is to get the computer move and we want the computer to move to be a random choice out of the list the command for that random dot choice just like when we were doing random colors random choice of moves okay now we have a player move and a computer move and we can start on the compare part of the game if we look back over here in our sketch the first thing we wanted to try was to see if it was a tie well to compare the two moves we just want to say if player move equals computer move and don't forget we need to use these double equals because one equals means define a variable right take some bit of data and store it in the variable that's named on the left two equals means compare these two things and tell me true or false are they the same well if they are the same then let's go ahead and print tie this is probably a good time to try running our program just so we can make sure we haven't made any mistakes so far so I'm gonna run this program I'm gonna try choosing rock ah what happened well obviously we didn't get a tie because it didn't print out tie but we don't know what happened so we've kind of spotted a problem in our program we left out a step we should probably print out what the moves are before we tell the result let's add some print statements so we can see what's going on so we'll say the player move and we'll say the computer move and the computer can call itself me since it's the one that's doing the talking let's try that and see how that looks so I'll take her are okay so it wasn't a tie but at least we know the computer picked scissors this time want to check the second option did the player win so we want to know did we get one of these combinations so over here I'm just going to show you a little example remember if we picked our and the computer picked s then adding two strings together just gives you a string where they're stuck together so we should just add the player move to the computer move so that we get a single string and then we can check and see if it's one of these so let's say player move plus computer move now how do we tell if it's one of these well Python has a handy little command called in so if we say the player wins so if we say add these two together and tell me if it's in this list so in this example if we chose our and the computer chose s then our plus s is our s and is our s in this list well yes it is so it should print you win and last but not least if it wasn't a tie and it wasn't a win then we can just print out you lose or we could say I win but either way you can even if you want make the computer a little mean and have it say things like you lose sucker things like that I'll leave that up to you let's just go ahead and make sure that our program is working all right I'm gonna pick scissors for a change this time we tied now we're done the program ended all right so if we want to play again we actually have to run it again I keep getting ties let's try again Wow three ties in a row what are the odds there we go I picked paper he picked Rock Iowa okay just like our number guessing program we'd like to be able to play more than once in fact I'd like to be able to play until I decided I'm finished so I really want all of this stuff to be in a loop right I want this to go over and over again until I want it to stop well to start with let's just make it repeat then we'll worry about stopping it after that remember we have the while loop like we used in our number guessing game but I want this loop to go forever I just wanted to never stop just keep going so I can just say while true remember the while loop continues as long as whatever comes after the while is true and true will always be true so this is what's called an infinite loop I'm gonna indent this so that it's part of the loop remember we highlight everything in press tab so now while true do this forever we'll run it now we can play over and over again so if we have an infinite loop how do we stop it well let's give the player a way to quit let's add after player move here that if the player move if they choose queue for quit then that's when we want this while loop to stop but we can use a new command for that we can say break break is a special Python command that says whatever loop you're inside of and it no matter what else is going on just stop the loop so queue will let us play as long as we want until we type it and then it will stop the loop let's see how that looks all right I'm gonna pick rock a bunch of times and then when I decided I'm done I pick queue and the program ends are a few more things we could add to this program but I'm gonna leave that for you to figure out one is we could add a score just like we did in our number guessing game right but this time you need two variables because you need a score for the player and you need a score for the computer and make sure you start them out at zero and you're gonna give them a point at the appropriate spot so when the player wins you should write after you say you win you should add a point to the players score and when the computer wins you should add a point to the computer score and don't forget at the end after the loop has ended so down here somewhere you can print out what the final scores were so the players can see who did the best another thing that you could add is you could make the computer a little more challenging right now the computer is purely random it's just randomly picking one of these moves if you really wanted to be mean instead of making a random choice here you could say if player move equals our computer move equals P then whenever the player picks Rock the computer will always take paper now I might take the player a few times playing before they figure that out and then they'll be angry with you but until then your computer will somehow always win you can try that one out on your parents well that's about it for our rockpaperscissors game thanks for watching and I'll see you next time you