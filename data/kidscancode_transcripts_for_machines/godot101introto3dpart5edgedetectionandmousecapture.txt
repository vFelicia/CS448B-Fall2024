welcome back to part five of the intro to 3d series for Godot in the previous parts we've added objects to our scene we've created a character that can walk around and this time we're going to make a couple small improvements to that project one we're going to make it so that our character can't walk off edges so we can't fall to our doom and the other is we're going to improve the way that the mouse handling happens as we're using the mouse to control our character we're going to learn how to capture and release the mouse in our application alright let's get started so right now we turn when we move the mouse left and right but the problem with that is we keep moving the mouse to the right it eventually goes out of the window and hits the edge of the screen and we don't want that we want the mouse when you're using the mouse to control the character to be captured which means it belongs to the window and will stay inside the window so let's do that first so I'm gonna go to the main scene script and I'm going to add in the ready so we want this to happen when we run we're gonna call set mouse mode and then here you see what the modes are we want to set it to captured and that will do what we want to do the problem is that once the mouse is captured the mouse pointer disappears and you can't move out of the window which means you can't click the X you can't click on another window right you're trapped in that window so we need a way to also get it out and so we'll do that we'll prep we'll use the Escape key for that so we're gonna capture inputs here and if event use action pressed we're gonna use UI cancel that's the escape key if they press the US or the UI cancel then we can do the opposite and release the mouse set mouse mode and we're gonna set it to visible okay so that's a start alright let's try that out so now my mouse is trapped in the window I can't I can remove around like normal and if I want to get my mouse out I press escape and now I have the mouse back but we have two problems one is now that my mouse is no longer captured by the window I want to be able to move around in my in the rest of my computer screen without the character actually turning so I want to ignore Mouse movement when I'm not captured I also need a way to capture it again right so now I've hit escape I've gone off to do something else now I want to play some more I want to be able to click here on the window and capture the mouse again let's jump over to our character script and down here in the input is where we in the unhandled input is where we're detecting the mouse motion right and so we move we rotate whenever we detect Mouse motion so let's add that we only want to move if we're captured so we're gonna check get Mouse mode and if that's equal to Mouse captured Mouse mode captured and so you can see the whole line so if we detect Mouse motion and the mouse is captured then we'll turn now to get our mouse capture State back when we're not captured is we're gonna need to do something when we click on the window so we're going to do that back over in the main and now if we we already have an event for mouse click and that's shoot so we'll just keep using that one so if we click the mouse if the get mouse mode is equal to input Mouse mode visible so if we're not captured then we're gonna set mode to captured so let's just grab this and put that down there as well so now if we click will capture the mouse again so let's try that so now I'm captured I hit escape now I'm out and see now that I'm out nothing's happening when I move the mouse and then when I click to recap I should recapture and I do but notice that we're also it shot one bullet when I clicked so I want that click to not trigger shooting a bullet so to do that we just need to also put here that when we have detected that shoot action and we were not captured and we change to captured mode we're going to use set input as handled and that will tell the scene tree that this input is done don't pass it on and it won't reach the player that time so let's try this one more time so now I hit escape to get out I click to get back and now I'm in and any more clicks I do will shoot now the other thing I want to do is I want to prevent my character from running off the edge of a cliff alright so if I run off the edge he falls and that was that's bad if you're out here you know walking along a ledge that's over nothing and I want it to stop if I reach the edge so here we are at our player scene and we're going to add a ray cast node and a ray cast node projects downwards by default you can see it cast to 0 negative 1 y 0 Z that means that means it's pointing downwards and if we go over here we can sort of see it sort of hidden by the y axis actually let's just do the right view right now it's projecting down from the center of the player so I want to move it over so it's projecting down from the front of the player so now you can see it projecting down here right the right view is a good way to just look at it perpendicularly so it's projecting down from the front of the player so if I walk along as long as I'm standing on a block this Ray cast is going to be hitting something but as I walk along and I reach a Ledge then when I get near the edge the raycast is going to be projecting down and not hitting hitting anything so that's how I'm gonna know that I've reached an edge when the raycast stops colliding so we're gonna do that in the code but first an important tip if you look at the raycast when you first add a ray cast or a cast to D enabled is turned off by default so make sure you turn that on or you will be scratching your head and wondering why this Ray cast is not working and we're fine on collision masks by the way because since we set the first layer to environment that's the default one and that's the one we want the raycast checking with so we're good to go there so here's our character script and right now we have this we move forward as long as we're holding that forward input and now we want to do that now only as long as the raycast is colliding so let's add and raycast is colliding so let's see what happens when we run this so I'm gonna walk up to the edge oh and see I can't go any further I can't walk off the edge but there's a problem let's try jumping when we jump up in the air we can't jump forward because as soon as we're up in the air the raycast isn't touching anything anymore so our speed is getting set to zero so that is not optimal so we're part of the way there but we need to fix the jumping now okay so we need to do this a little differently so instead what we're gonna do is when we press the move forward if we're on the floor and the raycast is not colliding so if we're on the floor and the raycast is not colliding that's when we want to stop that's when we want to do nothing otherwise we want to do this now some of you might be wondering why I wrote it this way just hang on a second I'm going to change this around but I have a reason but let's think about this we're setting our velocity to zero and when we press move forward we're only adding to it when we're when this condition is not true so if we're on the floor and the raycast is not colliding we're going to stop which is that means we've walked up to an edge so let's try it so walking to an edge works like it did before but I can still jump forward which is what we want so let's talk about that if statement so looking at this if you're probably a little unsatisfied with it it feels weird to have a condition that does nothing and then every other condition you do something and so how can we simplify this we can simplify this with a little bit of boolean algebra so let's look at a quick example so this is essentially what our if statement is we have if a do nothing else do something well this is equivalent to saying if not a do something right so we want to just take our current condition and negate it so we could write that right we could put naught and then put all of this in parenthesis and get rid of the else and this is going to work but this is a little bit hard to read too because you have to you you kind of have to think about what's going on inside the parentheses and then negate it it'd be nice if we could simplify this some more too and we can using something called de Morgan's law now de Morgan's law says this if you have not and then two conditions and and condition in parentheses you can distribute that not like this it's not a or not B so you basically change the an to an or and distribute the not to both of them so we can do that with our condition as well we can change this we get rid of the parenthesis we make that it a not and we make this a nots but since it's already a not that means we're gonna change it to true and then this becomes an or so if not is on floor or raycast is colliding we want to move forward so hopefully that little example of boolean algebra helps you later on and figuring out how to construct your different conditions especially when you have a bunch of combinations of conditions that start to get complicated with parentheses and things like that look up de Morgan's law I'll put a link to it in the description below so you can look at there's some other rules as well that come in handy for simplifying conditions that'll do it for this video I'll see you next time when we talk about other ways that you can build your 3d environments using something called constructed solid geometry thanks for watching and I'll see you then you