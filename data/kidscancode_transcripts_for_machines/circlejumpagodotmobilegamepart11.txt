welcome to part 11 of circle jump I've gotten a lot of questions about monetization and mobile games especially when it comes to free games like circle gems gonna be so you basically have two options and that purchases or ads since this is gonna be an ultra casual game there's not really a place for inapp purchases we don't have currency or anything like that so we're gonna look at how to implement ads in your game and I want to stress this if you want them I know ads can be unpopular but this is a decision for you as the game developer to make when it comes to your individual game we'll also look at how to disable ads if you need to do that alright let's get started so the first thing you're going to need to do is go over to Google AdMob and create an account so just click sign up and set up your account and when you're signed in you can make an app which I made an app for circle jump and in this app you're going to make two ad units a banner ad and an interstitial ad so make one of each of these when you click select you can just choose the format give it a name just call it banner and it's gonna set up a ad ID for each of those that's what we'll be using in our code to tell our program which ad to show now Godot doesn't have any ad functionality built in so there's no way for it to talk to the AdMob API to display the ads so we're going to need to use a plugin and the plugin we're going to use is this one which I'll put a link for below and it contains the code we need and if you go down and look at the documentation you can see the API reference there are some new methods we'll get that will let us show and hide banners and so on now to use a module like this you're going to need a custom Android template the one you when you downloaded when you downloaded the export templates from the editor do not include this module so it won't work and if you want to compile your own custom export templates the instructions are here in the documentation it does require setting up a bill system in downloading some Android SDKs and Java and so on so it's not necessarily for the faint of heart but it is something good to know especially later when we get close to release where we can disable certain parts of Godot so that we can optimize the size of our apk but for now there is another github repo here which I'll also link below which has some precompiled templates including this plugin so you just go here to this repo which I'll link below and you click on the releases tab and you'll see here's some Android templates compiled for Godot 3 one one which is what you should be using and that's the thing if you're using a different version you've got to have Android templates that match the same version so if you're using a custom compiled version of Godot you're going to have to custom compile your Android templates so I'm going to download this zip file and we'll be good to go it's back over in Godot now we need to configure things to use this now the first thing we're going to do is we're going to go into our project settings in the Android section and in the Android section is where you are going to specify any custom Android modules that you're using that you want the engine to load when the app starts and back over on the documentation for this module you can see if you scroll down here this is the module name so if you copy that the directions tell you to edit the engine config which or project Godot but you got to close the project and open it again so instead you can just paste that right into the modules list here and then you would put a comma and separate other ones if you have more than one module to load so that's that and now over in our export settings for Android we want to tell it to use those templates that we downloaded and not the default ones so you can set that right here and there two of them the debug and the release so if I click the folder here I can go to my downloads folder which is where I downloaded this and an open that zip and in there you can see there's a debug and a release apk so select both of those and you're ready to go there so now our game when it starts on Android will load that module and what it does is it loads that module as a singleton and we can access that singleton to show and hide ads and retrieve information and so on so we're gonna go to our singleton that we made the settings singleton and we're going to add our add code here and the first thing we want to do is initialize the module so we're gonna start with a variable to hold the reference to the AdMob module we're going to add a boolean called real ads this is whether we want to show test ads or real ads and while you're testing you want to keep this false and once you're ready to release and actually put it up on the app store you can change this to true and then banner top is a value to set when the when the banner up here do we want appear at the top of the screen at the bottom so I'm gonna put false for that and then we have two variables here for our ad our ad banner ID which is a string equal there and our ad interstitial ID these are two strings that you're gonna get from your AdMob configuration and then one more I'm going to add an enable ads flag so that we can turn that on and off so you can go over to your AdMob account and copy hit the copy button and paste your ad unit IDs in here I'm not going to do that in here because that's something that you should keep private so if you're saving your source code on github in a private repo you shouldn't put your ad banner IDs in here so I'm gonna put some temporary ones right now just for this purpose is recording this demo and then I'm gonna delete them so the pastry is in there and then we're going to make a ready function here so that when the singleton loads it can do something and the first thing it needs to do is make sure that that module is there because the modules not present we want to ignore it so we want to check if the engine has the singleton which is named AdMob and if it does then we can load it into our variable reference so engine get get singleton AdMob I misspelled AdMob up there good start so now we have a reference to it right we can call AdMob in it and we're gonna in initialize it with our real ads boolean and we'll also pass the instance ID of our currently running game then we're going to call AdMob dot load banner okay sorry in in AdMob code they're using camelcase so load banner and we'll use our ad banner ID and we will use our boolean whether we want the banner be at the top at the bottom and then we'll also call AdMob load interstitial to load the interstitial ID as well so that'll load both of them so now we need a way to show and hide the banner so we're going to define a show ad banner method which is going to if the AdMob singleton is present and enable ads is on then we're going to call AdMob dot show banner and hide the banner to do that we want to say if AdMob AdMob hide banner and then for the interstitial we need a so ad interstitial that we can call and that's gonna say if AdMob is present and enable ads then we're going to say AdMob dot show interstitial and then we need a way to know when the interstitial ad is closed so if we define a callback for that it's on enter additional closed then we can say if AdMob and enable ads ad MA I'm sorry will call a show ad banner so we can put the banner back up after they get the interstitial at the end of the game now in our main GD we just need to tell it where we want to show these ads so for example when we start a new game we're gonna want to call settings dot hide ad banner and then when we die we want to show on jumper died we want to show the interstitial so settings show ad interstitial and that should be all we need to do is let's give it a try so here I'm streaming my phone screen to my desktop here and you can see the ad is showing up at the bottom of the screen when we play it goes away and when we die we get an interstitial ad which when we close it we're back to the menu and the banner ad is there again so the other thing I want to be able to do is I want to be able to enable and disable ads in the app just like you can in a enable and disable sound so I'm gonna make this variable here for the enable ads I'm going to make this into a set kit and then that way we can control what happens when you turn it on and off and so what we want to happen when you set this is we'll set the the variable and then if enable if you set it to true then I want to show ad banner right you might have your in the menu screen it's disabled right now and if you set it to false then it was probably a minute was on right so if you set it to false we're going to hide ad banner and then if you've changed it to false then interstitial won't clot show and everything like that so we just need a button now in our settings to turn that on and off so let's open up our settings screen all right I want to put that button here but I only have two rows of buttons so let's open up our base screen and I'm just gonna duplicate duplicate this and put another button row in the middle right name of it doesn't matter it's on my settings screen then let's save that now am I saying screen I've got a second row here and I'm going to add a regular old button and then do some quick configuring here you okay so I just made a button here with the text disable ads and I set all of its custom styles to style box empty I don't care about any of the button styling and then I also added a custom font to it size of 48 so I could have the words there and then so when I click that ads will go away and the button text will change to enable ads so that means we need to register this button in our screens scene where we register all of our buttons and we process which ever one is clicked so now we can match based on the button name I don't think I gave it a button name so let's give that button a name we'll call that adds back here so if we press the adds button what should happen well settings enable ads should toggle and then if we set it to true then we want the button text to change to disable ads otherwise we want the button text to change to enable X so just a quick test of that if I click it changes changes okay and a quick test on the phone there's my screen there's my ad on the screen but go into my settings and I disable ads it disappears so I should be able to play lose and not see an interstitial if I go back over here and enable ads they come back so that gives you a way to enable and disable ads whenever you want and I'm gonna leave that on there because the goal of this game is learning and not actual revenue generation so I'll allow people to just turn off the ads when they download this app this tutorial is part of my nugudo recipes website the goal is to collect all the best tips and lessons to help make you a better Godot developer if you like this video I hope you'll go and check out the site and make sure to hit subscribe so you'll be notified whenever I release new videos thanks for watching