welcome to part 5 of winning Godot we're in the homestretch in the previous parts we created the different components of the game and now we're gonna finish tying them together and completing the game we have our main scene we have our player we have our mob spawning the piece we need to tie it all together is a UI UI stands for user interface and it's the thing that's going to display what your score is it's gonna show a game over message when the game ends and it's gonna have a restart button so you can play again start by creating a new scene and its root node is going to be a canvas layer and we're going to name this the HUD HUD that stands for headsup display because this canvas layer is going to display on top of the rest of the game the UI isn't overlapped by the game elements it rests on top base node for all the UI elements in Godot is called control to create our UI we're gonna use two different types of control nodes the label and the button the label is for displaying information and a button is for clicking on so let's add some child nodes here we're going to add a label and we're going to name that the score label we're going to make another label and we're gonna name that one the message label and then we're gonna add a button and that button is going to be called the start button and then we're gonna add a timer and that's going to be called the message timer so the score label is going to display your score how many points you have the message label will show things like game over get ready the start button will appear when the game is over so that you can click it to play again and the message timer will let us show these messages like get ready and have them disappear again after a certain amount of time now we need to arrange these nodes on the screen and to do that we're going to use the layout menu starting with the score label we're gonna set the anchor to Center top and if you were to manually resize this by dragging it around you can go over here and hit Center top again and it'll make sure it stays centered we're gonna use the margin setting to do this so that we can control it exactly we're gonna set this to minus 100 left 100 right and 100 bottom and that's going to be the size for our score label we're gonna align it we want the text to be aligned Center in the horizontal and vertical and we can test it out in here by adding some text to it we'll make it zero now the default font is very small and not very goodlooking but we're gonna change that sin first let's finish the layout here let's take the message label and we're gonna put it centered on the screen so we want to fix Center and the margins we want to use our minus 200 and 200 for left and right top is gonna be minus 150 and bottom is gonna be 27 so that'll give us enough room to put various messages in there we also want the text to be aligned Center and we're going to put some sample text in here dodge the creeps so that we can see what it's going to look like and finally the start button we're going to put that one at the bottom Center and set its margins to minus 100 and 100 for the left and right and top is gonna be minus 200 bottom will be minus 100 so I have a nice large size button there the text we're just going to put start and we're gonna Center it make sure it stays Center and that's our basic layout now to fix the font we want to go and scroll down to where it says custom fonts and we're going to load a new dynamic thought click on that and under font you can load from the fonts folder our font that we want to use open that up and in the settings you can set the size 64 nice size on the message label I recommend you edit the text and make this on two lines because when you make the font really big it's gonna expand out past the size of the screen so do the same thing with the font on this one and then finally do it for the button as well and for the start button I made the font size 48 a little bit smaller now we're ready to add a script to the HUD and this is going to have a signal called start game that it's going to emit when we push the start button we're gonna have a show message function that will call whenever we want to show a different message on the screen so we take our message label and set its text equal to that value we take the message label and we show it because we might be hiding it sometimes after things go away and then we take the message timer and we start it the message timer itself we're going to set the wait time to two we're going to set one shot to on now we're going to add another function called game over that we're gonna call whenever the player dies and we're going to show the game over a message and then we're gonna wait for the message timer to end so we do that using a command called yield and in GT script what yield does is it let you let's you name a object the message timer and one of its signals the timeout is what we care about and it will stop execution of this function until this signal appears so we show the message game over the message timer starts and not until that two seconds has gone by will we do the next thing which is show the start button set the message labeled text to the game title this is how we do two lines the backslash n stands for newline and then we need to show the message label so this means whenever you die you'll see game over for two seconds and then it'll go away and the button will show up so you can play again we're going to add an update score function that's just going to it we're going to send the score over and tell it to update the score label text to whatever that is and then we need to connect the timeout of the message timer and when that times out we're going to hide the message label and then we're going to connect the pressed signal of the button so that whenever they press the button we're going to hide the start button and we're going to omit that start game signal we're almost there we just need to connect our HUD with our main scene so if we go to the main scene we can click on the main node and instance the HUD inside it now we can see our HUD showing up here in our main scene we're gonna take the HUD start game signal and we're going to connect it to mains new game function that we already made so we don't need to make the function it's now here in main new game is gonna run when the HUD sends that signal in new game will say dollar sign HUD show message get ready and since we've set the square root of zero we want to update the score to that value in the game over function we just need to call the same function in HUD so it does its code over there for the game over state and then in here where the score timer times out we need to make sure we update the score with that value so let's give it a try we're on our main scene we're gonna hit play and we're gonna see our start screen here we're gonna start and there's our player here come the baddies and if the one hits me the game is over and I go back to ready to start again and now that we have everything working when we hit the main play button it says that no main scene has been defined so we can select our main scene and make that our default scene that runs when the game plays so now anytime you hit this play button it's gonna play the main scene so congratulations you've finished your first game in goodell now I'm gonna make one more video in this series the final video we'll go over a few Editions you can make to spice up the game a little bit things like sound and a background and some other little effects that'll make the game look a little nicer these are purely optional and hopefully will give you some ideas of other things you could add to spice this game up or to use in your own game projects on Godot