alright last time we learned how to create a sprite and make it move across the screen and this is where we ended up we had a sprite moving across the screen and wrapping around the edges so that it never gets lost now if you're following along you can get the code for the last lesson in the link below ok so what we'd like to do is look at how we can replace that little green square with some nice graphics that look like a character that would be moving around on the screen these little rectangles are really useful to use as sprites when you're getting stuff working and I usually recommend you start that way and once you have everything working then you can replace it with the graphics that you want to use so the question is if you're not very artistically talented yourself in which case you could draw the characters you want to use is where do you get art to use in your projects it's very important to remember that you shouldn't use art that you don't have the rights to use you know you can go online and you can search up a picture of Mario and/or a Pokemon and you can use that in your game but because you don't own that picture you will get in trouble if you try and put your game online and let other people see it so to be safe it's a good idea to stick with art that you have permission to use fortunately there is a really cool website called open game art org if you go there it is full of all sorts of art and sound and music that artists have created for you to be able to use and you can use it however you like in your games I recommend you go over here to the search box and you type in Kenny ke and n ey Kenny is a very well known artist who has created all kinds of really great graphics packs to use for making different kinds of games and they're really goodlooking if you scroll down here you can see there's one called platformer art complete pack and this is what we're going to use today now you can go to open game art and download download this or you can just download the particular images we're going to use in the link below the video but this art pack looks really nice it has all sorts of stuff to make as you can see all kinds of different games it has characters enemies platforms items lots more than we'll ever be able to use to customize your game and make it look however you like okay so in order to use the graphics in our game we're going to need to have the graphics file and we're going to need to tell our game to load it so the first question is where do we put our files so I'm using a folder called tutorials and that's where I'm creating all of these programs that we're working on in this series and I've made a folder called IMG short for image and in that image folder I have placed this little graphic v1 jump again if you click on the link below in the video you can download this image or you can find it in that graphics pack if you download the whole pack from open game art okay but now we have this one grab it called p1 underscore jump dot PNG to load this graphic into our program we need to tell the program where that file actually is on the computer's hard drive and depending on what kind of computer you're using a Windows computer a Macintosh computer or even a Linux computer the WAV the files are organized might be different so we want to be careful that we do this the right way so that this program will run on any kind of computer and it'll know just to look in that IMG folder and find the file the first thing we need to do is we need to import OS up here this will give us some commands to help us set up the folder and point to the right place now since we're eventually going to load different graphics and maybe even sounds we want to set up some folders for this so let's just set up where folders are so the game knows where the folders are that needs to look okay so set up and I'm going to call these assets assets are the game development term for the art and sound that goes into your game so we're going to set up those folders the first one is going to be the game folder that's that's where is this file the sexual Python file that we're running where is it located well the command to find that out is OS dot path dot der name file ok so this this variable file with the double underscores under it is a special variable that python keeps track of where it knows the name of the file itself and see that pop up there that's the full location on my computer of where this file is that's going to look different on yours because yours might be in a different place for example if you are on a Windows computer it might look like this have a seat at the beginning or maybe a different letter back slash and then it could be you know some name like that but on so that's on Windows and on a Mac it might be more like this like that so these are two different ways that the two different computers list where folders are the Documents folder is inside the Cris folder which is inside the users folder okay and this Durr name will just give us that directory which is another name for folder so it tells us what folder that is now we also want to tell it that the images are going to be in a folder underneath that so the image folder is going to be OSF join which is a command to join two paths together so it's game folder comma IMG and what that will do is join those two together by putting either the backslash if you're on a Windows computer or the forward slash if you're on a Mac or Linux computer so they should look like that so that's just a little extra work we have to do to make sure that this will work on any computer we might be running the program on but now we have this image folder defined and we can use that to load the graphics so we're going to go down here to our player sprite and now we don't want to use just a plain green rectangle anymore so we're going to change this self dot image into something new and what we're going to do is we're going to say PI game image dot load and that says I want to load a graphics file off of the hard drive and it's going to be located right in this image folder but then it needs to be at the end so for example you know the actual p1 underscore jump dot PNG name needs to go at the end like that so we have to use that join command one more time OS path join and we just want to join our image folder and the name of the file we want which is p1 underscore jump dot PNG and then when you load an image in pygame it's very important that you put dot convert at the end of loading it what that will do is it we'll load the image and then convert it into a form that pygame can manipulate easily if you leave out this step your game will be slower okay now right here we don't want to fill that image with green anymore because we now have a coollooking image we don't need to change the rect here because the get rekt command will look at that image and find the right rectangle so now let's try running it and see what happens there we go now we have our sprite using that little graphic but we have one other small problem look what happens if we go down here to our draw part of our loop and we say instead we're going to fill the screen with blue instead of black yeah blue up here already so now I should have a blue background but let's see what it looks like there we go can you see that black rectangle around our sprite well that's the problem when a computer loads an image file that file is always a rectangle the computer can only store things in rectangles even though the shape might be drawn in some crazy curved shape it still has a rectangle around it and we want to tell the computer that the stuff around that rectangle that part we saw in black should be transparent or in other words it shouldn't be drawn so that way if the sprite is being drawn on top of a background or another image we should just see what's back there so we have to tell it to ignore that portion of the sprite and we can do that by adding right here selftaught image set color key and this command just says tell me what color you want me to ignore or make transparent so we're going to say make black transparent because that's what we saw on the image and now our sprite has no weird rectangle around it okay it's not about wraps it up for this lesson we took our sprite and we changed it into an image here and now it's moving across the screen but before we go let's just add one more fun little thing to our update section let's also make this bright move up and down so I'm going to add a Y speed of five and whenever the sprite moves its rectangle Y is going to get that Y speed added to it that means it's going downwards right because Y gets bigger as you go down so I don't want it to go off the screen so we're going to say if the rectangles bottom ever gets below getting bigger height minus 200 say so 200 pixels up from the bottom if we pass that line then we're going to reverse direction and start going upward so we need to change the Y speed to be negative five and we also need to do the opposite when it gets up towards the top so if the top of the rectangle is ever less than 200 then we'll change the Y speed back to five okay now our little guy looks like he's jumping across the screen all right try that out play with it see what else you can do in the update section anything you do in here remember happens every frame of the animation so the bigger numbers the speeds are that's how many pixels that character is going to move thanks for watching and I'll see you next time you