hi welcome to part 8 of circle jump the Godot mobile game development series in this installment we're going to talk about implementing a difficulty curve making the game get more and more challenging the farther you progress to begin we're going to use the level to determine what type of circles are spawned so in the main script here when we initialize the circle we're gonna pass the level and then on the circle script instead of passing in these things we're just gonna pass in level with a default value of 1 and that's going to determine what type of circles whether it's moving all that kind of stuff now to set the mode we're gonna want to randomly choose between static and limited or other ones when we add more but I want them to be weighted I want it to be much more likely to pick static early on in fact it should be a hundred percent chance of picking static at level one but then as you get to higher and higher levels limited becomes more often and so we want a weighted random number and to do a weighted random number we need a we need to define some weights so the mode the way we would define the weights would be something like this for example this is just an example but so I have a 10 to 1 chance of choosing static over limited so the total number of chances here is 11 so 10 out of those 11 will be static one of those 11 would be limited and to choose a weighted method like this we need a function I'm going to put that in settings we're just going to make a static function for this so you pass it an array of weights and it's going to return to you which one it picked so the first thing you do is you need to sum up the weights now we have a sum of weights we're gonna pick a random number between that range and then we go through each of the weights in the array and if our number we picked is less than that one we're on then we're gonna return that one but if it's not then we will subtract it from num and try again till either picked one or reach the last one this is a pretty common algorithm for choosing a weighted random number in case it's not clear you haven't run into this before let's consider our example one where our weights array was 10 comma 1 so we sum it up the total is 11 so we pick a random number between 0 and 10 let's say that we picked 7 it picked or 7.32 8 you know it's gonna be some number 7 we go through each of the index indices of the weights and it's 7 less than the first weight well the first weight was 10 so it is so we would return 0 and so 0 is the first item so we picked the first item but let's say our random number was ten point four well ten point four is not less than the first item which is ten so we instead subtract ten so ten point four becomes 0.4 and then we compared to the last next one is 0.4 less than one yes so we're going to return index number one so now we can go back over to the circle and here for our weights we'll call settings ran weighted and pass it this array of weights and I'm going to make the second 1v level 1 because that way at level 1 we'll have a 0% chance of a limited circle appearing okay so next we have the move range which I'm going to want to have progressive as well and the radius I want them as you get up in level 2 start shrinking as well so to set the move we're gonna have a chance move chance is going to be what the odds are that you will spawn a moving circle and I'm gonna make that level minus 10 I'm going to clamp it between 0 and 9 and divide by 10 so that's gonna give me a percentage chance but for the first 10 levels we'll have 0 so there won't be any moving circles the first 10 levels and then once we have that move chance we can just pick a random number and if that number is less than the move chance then we have a moving circle and then we need to randomize the move range and we also need to memorize the move speed because as you get higher and higher they get more difficult they might move faster and the Ranger should get larger so to figure this out there's a there's a few different ways you can do it in one way that I like to do it is to use a tool called desmos desmos is a graphing tool and so here's a little formula I put in here to take X is the level so I want it to be flat up to level 10 ramped up and then cap out somewhere close to 1 all right basically 0.95 once you get to Oh what is this at level 29 and so you can play around with these numbers and see how it's going to change your curve and obviously this is going to take a lot of play testing and and experimentation to figure out the best progression curve is but these give us some starting points where we can we have something to start with so I've done that for the move range I picked a couple of formulas I think will work okay so that gives us our move range just gonna get smaller as the I'm sorry get larger as the level goes up but has a minimum amount because we don't want too little vibration will look weird and then the move speed is also going to be based on the level this is the amount of time for the tween to execute so it's number of seconds so now we've set our move range and our move speed and the last one is going to be this size and this is also going to be a chance we have a chance that the circle will be smaller than average and then if we do have it then we will randomize the radius and now to give me a way to test this out without having to play a successful game a whole bunch of times I'm going to test it out by spawning a bunch of circles and I made a little test scene to do that with I'm not going to go too much through the script but what it does is spawns a hundred circles calling the same spawn circle code we use in Maine and then it just keeps track of some stuff so that I can scroll the camera up and down and see what level I'm on so let's try it out and see what it looks like so here is four sequence of circles getting to level to get to level three we get our first limited circle and hopefully as we go we should see more limited circle showing up they're becoming a little more common our at level 10 and then now we should soon we should start seeing some moving circles appear there's one with a little bit smaller radius there's some moving one there's a small one you can see as we're going up now we're getting more moving ones right so this way we can test our progression and see if it's going the way we want it to go and I'm not intending for this to be balanced yet just to be something that we can test out and adjust okay and another bug that I noticed that I missed last time was when we were setting the colors this is not doing anything because we have our line 2d using a gradient so default color isn't used so what we want to do with the player trail here is I'm going to stick it in a variable and then on the gradient we need to say set color and we want the end color to be that then I'm going to take the trail color and set the Alpha to zero for transparent to fade out and then and then trail gradient set color zero to that and that will do the trail correctly which you can see here since we're on a particular theme see the purple fading on okay will that'll do it for this part in the next installment we're gonna look at some visual effects and maybe some particles start making things look a little juicier and thanks for watching and I'll see you next time this tutorial is part of my nugudo recipes website the goal is to collect all the best tips and lessons to help make you a better at Godot developer if you like this video I hope you'll go and check out the site and make sure to hit subscribe so you'll be notified whenever I release new videos thanks for watching