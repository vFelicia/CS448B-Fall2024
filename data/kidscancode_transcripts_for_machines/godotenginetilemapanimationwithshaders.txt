hello and welcome to another Godot game engine tutorial in this video I'm going to show you how to use a shader to create animated tiles in a tile map if you're new to Godot be aware this isn't a beginner video I recommend you start with my Godot 101 tutorials first alright let's get started so our goal for this tutorial is to create an animated tile in our tile map kind of like this example right here now in a earlier video I showed how to do this using the animation player and you can click the link below if you want to see how that works but for this tutorial we're instead going to use a shader to accomplish the same effect now if you've never worked with shaders before they can be a little bit intimidating this video is not a shader tutorial but I will include some links below to some places you can go to learn about the basics of shaders and how they work so that you can get started and understand some of the background for this tutorial so we're going to start with our tile set I've just taken all of my art right here which you can get in the link below and I've just dragged all these p.m. G's into the scene so that I have all of my sprites and so that would be all you needed to do if you wanted to have a basic tile map but now we want to do some animation so I'm going to grab one of these and I'm going to drag it out here it doesn't matter which texture we use because we're going to replace this with animation but I just need one to two placeholder for it and I'm going to call this water shader so this tile will be named water shader and this is the one that we're going to have in our tile set that will be automatically animated to add a shader to this we need to scroll down to the material property and we're going to say new canvas item material press the forward arrow to go into canvas item material and make a new canvas item shader shading mode can remain normal and then when we click here we will open up our shader text editor where we can start typing our shader code we're going to start by defining our textures that we want to use now each of these animations there are 3 water tile animations has 5 frames so we're going to want to be able to specify those 5 textures in our shader code and we're going to start by defining our textures textures have to be uniformed and I'll explain what that is in a second we'll call this frame 1 and then we're going to do this we're going to do this 5 times because we have 5 frames to do so we'll just call them frame 1 Frame 2 3 & 3 3 & 4 & 5 & 5 & by calling these variables uniform what this does is over here in our sprite if we go to our canvas item material we can now see frame 1 through 5 exposed in the inspector and we can drop our tiled in there which is what I'm going to do I'm going to drop the 5 frames into the 5 slots for those textures and now back to the code if all we wanted was one of those textures so let's let's zoom in on this so we can see it as we add the code if we just said color equals we're going to get frame 1 every pixel of the image is being changed to every pixel of frame 1 all right change that to frame 2 you're going to see frame 2 and so that's what we want to do but we want to cycle this over time so we can use the built in time for that so we're going to make a float called time and set it equal to the time now the time that's returned every time the shader runs it's going to be in seconds so it might be three point eight one five or it might be zero point four eight all right it's going to have some sort of fractional and whole number part for the purposes of cycling around I only care about the fractional parts we're going to save tracked time and that's going to take the fractional portion of the time the time after the decimal the part after the decimal point and based on what time we're on we're going to set what pixel with the pixel we want so we're going to call this color and then we're going to set the color equal to at the end whatever color comes out to be okay right now to know so we have our time and so now we can say something like if time let's just say we were doing two frames for the moment if time is less than 0.5 then I want to set color equal to frame one all right there you can see we're doing that right so only so half of a second it's showing frame one the other half it's not now we have five frames so dividing up the second into five frames we're going to means we're going to do this in increments of 0.2 so we want each one to show for that fraction of the second so we need to have an else and we're also going and then we're going to basically chain these together and say if it's less than 0.4 we're gonna do frame two and so on so I went ahead and skip through the typing of that so if our time is less than point two or using frame one point four frame two point six frame three and point eight is frame four otherwise we frame five and now you can see we're getting a smooth transition transition from frame zero I'm sorry from frame 1 to frame 5 and then outputting it at the end and the one other thing that we could add here would be to be able to control the speed so we're going to make a uniform flow speed and we're going to make any uniform so that we can change it in the inspector if we want to change it and we're just going to make that we use that here to multiply by the time and that way we can go into our shader here and if I put point five I'm going to slow down and if I put two it's going to speed up and so it'll be easy for you to control what speed you want your tile to animate at and now all you have to do is save it as a tile set go over to your tile map choose the water shader and anywhere you put it you're going to see that animated tile I've also duplicated it and made the other two animations if you want to see the difference and so you can arrange those how you like and remember when you're doing the when you're doing the shader when you get to the material you can save by hitting the little Save button here save this material so that you can load it on to other tiles you don't have to recreate any of the code and everything like that you can reuse the canvas item material you can also save the actual shader code and load that whenever you want on any other object just make sure you remember to make unique if you're going to make it different for different tiles or else changes you make on one tile will take effect on other tiles as well all right please post your questions below if you have any comments I'd love to hear them in the description below I've put a link to the project so you can download this and look at the code yourself as well good luck in your shader experimentation and I'll see you in the next video you