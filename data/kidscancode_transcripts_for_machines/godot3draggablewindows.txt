welcome back this is a brief Godot 3 tutorial on making draggable windows using good O's UI notes so recently I was helping a student try and get something working and is very similar to this and I thought it might be useful to everyone out there so here's a quick video on how to make draggable windows that behave the way you would expect them to if you click on them and drag them around so to start here I've got a texture rect that's a control node that's that I'm using to simulate my window and I've just taken a screenshot of a go to a website to be the window and so when the game runs we want to be able to click and drag and move this window like you would do in the operating system so I'm calling this window it's gonna represent one window in my main scene which might have any number of windows in it and we're using a texture rect because it's a control node and control nodes are really designed for handling user input you could do this with a sprite instead to display the texture but handling the click and drag events is gonna be a little bit more cumbersome with a sprite so the texture rect we're gonna add a script to it and I've started out by just adding a tooltip to it so that when we hover over it when the game is running it'll display the name of the node and that way when we have multiple windows we'll be able to see their names so to detect the dragging we need to keep track of whether we're in the dragging state or not and we're going to do that with a variable so I'm going to call this drag position and it's going to represent the location where I clicked when I started dragging so if it's null I am NOT in the dragging state and we're gonna detect that click using the Windows GUI input signal which is a signal that all control nodes have and so we're going to connect that signal and what we want to do when this event comes in and I'm going to rename this to event so that we are clear on what that is is if it's a mouse button click then we want to say if the event is input event mouse button and I'm just going to leave it at that right now so we'll use whatever bounce button and you clicks you can use right mouse left Mouse so either it's pressed or it's released so if event DUP pressed then we want to start the dragging so this is start dragging and we're going to set the drag position equal to the relative position of the mouse in the window because we want that's what we want to we want the window to stick to the mouse where you clicked it so the relative position is the global Mouse position minus the rect global position which is the location of the top left corner of the control since that lines a little bit long I'm you go into distractionfree mode here so you can see the whole window so now our drag position is the point in the window where we clicked and then we're going to say if we didn't click the button we let go of it then we want to end we want to end the dragging and we're going to do that by setting the drag position back to null and then the other mouse event that we want to handle is when you move the mouse while you're dragging so this this time if we get a mouse motion event and drag position has a value it's not null then we are dragging so we want to update the position of the rectangle so we want to take the global position and set it equal to the reverse basically we're going to take the global mouse position and we're going to subtract the drag position and that's it so if we were to run this scene we would have a window that we can click and drag now there's just one other thing we need to do we go over to our main scene here and we're gonna instance the window in there I'm gonna call this window one and then I'm going to duplicate it and add two more and I'm gonna change the texture on these because I've captured a couple of different windows just so we have a little bit of variety and we have a terminal window and a foul you know Finder window and a and one for the browser so now when we run this each of the windows will drag when we click on it but now our problem is that we want whichever one we click on to rise to the front right we don't want to be dragging behind so I want to be able to change which one is on top so there's a couple different ways to do that if I want window one to be on top it needs to be drawn last so it needs to be at the bottom of the tree so so we want to be able to change this order whenever we click so if we go back over into our script we're gonna add a signal called move to top we're going to omit that signal whenever we click so right here when we clicked on the window and started dragging we're gonna omit the signal move to top along with a reference to the note itself because main needs to know which window to move to top I just want to have one function that's gonna handle this signal and it'll move whichever window tells it to to move it to the top so if we go back over to our main scene now get back out of the zoom window go back over to our main scene and we're gonna add a script and in here we want to do we just want to handle that sick and I want to kiss ani to connect the signals from each of these two main and I could do that in the Dewey but if you have a bunch of if you have a whole bunch of windows added here you don't want to have to click on each one one after another so in the ready we're going to connect them in code so we're going to say get children and for each of those windows we're going to connect so we're going to connect the move to top signal to a function and our self called move window to top okay and so when we take that I forgot my quote mark there so we take this and we're going to define this function takes a node right we're going to be passed a node to it and so I want that to move we just want to move the child that we clicked on to the bottom of the tree so get child count minus one and that's that means which position we want to put it in so get child count is three this is position zero one and two so we want to move if I click on window one I wanted to move to position two so let's see what that looks like so now this one's on top I click on this one it moves to top and if I click on the browser it moves to top you can see that happening if we look at the remote tree while we're moving things around as you can see the window order change there see this is window three that's window one over there I click on edit moves to the bottom so that's it I hope you found this tutorial useful hopefully it'll help you when you get to the point where you need to make draggable windows in your games UI if you found it useful please click Subscribe below and I'll see you in the next video you