in this recipe we're making what i'm calling a simplified airplane controller and by simplified what i mean is we're not simulating aerodynamics we're not calculating lift drag and so on and in fact we're not using physics at all what we're going for is the feel of flying a plane where you can just kind of jump in and start flying and there's not a complicated control scheme i'm just using a single stick to control the plane and this will be suitable for all kinds of flying type games where you don't need fullon realistic flight physics right so let's look at how we can make this since we're not using any physics we're going to stick with a kinematic body for our plane and then i've imported a mesh of this little cartoon plane which came with an animation for the propeller so that's why we have an animation player here that was part of the gltf that we imported and then i have had have a collision shape here and the collision shape i'm just using a cylinder just to match the fuselage of the airplane and that's just so that i can do landing so that the at the end we can you know land on the ground and we can see since this plane doesn't have landing gear or anything we're going to slide on the belly along the ground to count as having landed and that's really all we need nodewise all right let's look at our script and first we're going to add a bunch of variables that'll allow us to configure the behavior we're going to have a minimum and maximum flight speed right you can't fly below this speed that's the minimum and this will be our maximum our turn speed is going to be how quickly when we turn the stick left and right is the plane going to turn and pitch speed is how quickly we're going to climb or dive when we move the stick forward or back uh level speed is how quickly the wings are going to return to level when you let the stick go back to the center um throttle delta when we press throttle up and throttle down that's how much the throttle is going to change when we press it and then acceleration is how quickly the plane is going to accelerate um or decelerate to a given speed when you change the throttle and so we have our forward speed that's how fast we're going to be flying that's our air speed and then target speed is going to be what's set by the throttle right when you push the throttle up we're going to increase the target speed and the plane will accelerate up to the forward speed right being capped at the maximum and the same thing when we press throttle down our target speed will be lower the speed will decrease okay here's our velocity that's the plane's forward direction that it's moving in and then these two variables are to capture the input from the from the stick i'm using an analog controller on this demo you could also put inputs for keys if you wanted let's look at those inputs now actually so here we have throttle up and throttle down i'm using the a and b buttons for that pitch up pitch down left and right are all going to be the left analog stick and the four different directions that we move them in and again if you want to use different controls you can add in keyboard or gamepad or whatever else you have all right let's look at our code for getting the input so we have our throttle up and throttle down which are going to increase the target speed or decrease the target speed and i'm using min or max to clamp it to the minimum or maximum flight speed so we can't go above or below those values and then our turn input and pitch input are just going to be getting the action strength of that analog stick input okay now we can look at movement which we're going to do in physics process and so we're going to call our git input function that we made and we're going to take our forward speed and we're going to interpolate it based on our target speed so that we will accelerate or decelerate to whatever our new target speed is um our velocity is just going to be our forward direction times that forward speed right the airplane always moves forward and then we're going to use move and slide to actually move it and so if we were to try running it now i've added the plane to a test scene here just with some a ground and some obstacles that we can see and if we try running it now what we'll see is that if we press our throttle up button we will begin moving forward faster and faster until we get to our maximum speed and then decelerate if we press throttle down okay so now we can start doing some of the turning and pitching let's talk let's do pitch first so after we get our input we're going to rotate around the xaxis based on our pitch input and since the xaxis is side to side so that's going to pitch us up or down and then of course we will move in that direction so if we try it now we should be able to test out pitching up and down climbing diving good and then we can even do a loop if we want now for turning we're going to do something very similar we're going to rotate around the up vector based on our turn input and what that's going to look like when we try running this is that we can now climb and we can turn and so the turning however you notice is very flat right and while i'm able to turn and steer this isn't really how airplanes turn right they bank when they turn so what we're going to want to do is when we're turning add some roll to the plane and we're going to do this by rotating the mesh so we're rotating the mesh based on the turn input so this harder we turn the steeper the bank will be and now if we try this out it's going to look a lot better and feel a lot more like flying an airplane let's see if i do a shallow bank the wings tilt further or tilt less so do a hard bank it tilts farther when i let go of the stick the wings level out because of course the bank isn't actually what's causing our turn but it looks like it and that's what counts and really that's it that is our airplane controller so in just a few lines of code five or six lines in the in the physics process for our movement we've got a really fun to fly around little airplane and you could adapt this to all sorts of flying based games right one major thing that's missing though is our interaction with the ground landing and taking off because now right now if i go down and i hit the ground right we're just gonna slide along it because of move and slide and that's really not what we want so let's talk about how we could handle landing and taking off all right so we're going to do this again in a simplified manner so then it just gives us the basics of what we need and so we're going to add a variable called grounded to keep track of our state whether we're we've landed or are in the air and in our physics process there's a few things here first of all the rotation of the body right i don't want my wings digging into the ground when i'm taxiing on the on the on the ground so if we're grounded then we are not going to rotate this we're just going to make sure to set this rotation equal to zero and then if we're that way if we're not grounded if we're in the air then we can do the rotation okay and now before we do move movein slide okay we are going to want to check if we're on the floor so this is this is to handle if we're on the ground or not so if we're if is on floor then we're going to check if we're grounded or not already if we're not grounded then we must have just landed so let's set our rotation dot x equal to zero so that our plane will be flat on the ground and not nose in or nose up and then we're also going to set grounded equal true and then since we're on the ground we'll be moving along the ground we're going to add a little velocity in the y direction to sort of stick us to the ground we could do this with move and slide and snap move and slide with snap as well but since we're already doing this i'm just going to leave it this way the result will be the same okay if we're not on the on the floor then grounded equals false okay so now we have our grounded state okay and then there's a couple of things we want to change in the input as well here because when we are turning or pitching we're going to want to change these a little bit too okay so the turn input we're going to say let's set turn input equal to 0 and let's say if forward speed is greater than a really small number then we'll be allowed to turn that way if we land and come to a complete stop we're going to we're going to not be able to turn okay throttle down we also want to be able to go below the flight speed if we are on the ground so let's set our limit of what our minimum speed can be to zero if we're grounded else it's min flight speed and then we'll use that in this limit function so now we can throttle down to zero if we're grounded on if we're on the ground and then lastly with our pitch input oops with our pitch input we're going to want to change this around a little bit so here's what i'm going to do i'm going to say pitch input equals zero and then if we're not grounded meaning when we're in the air then we can pitch down so okay so we're going to subtract input pitch down if we're in the air so when we're on the ground we won't build a nose down into the ground that's just going to make it so that we're nice nicely driving around when we're taxiing okay and then here to pitch up if only if forward speed is greater than equal to min flight speed all right so when we're on the ground and taxiing really slow we can't take off yet okay and that's going to do it that's going to do our be our changes for being on the ground so let's try that out okay so here we are on the ground and if i start accelerating forward you see we're moving slowly and i can turn and i can taxi but i can't take off yet if i pull back on the stick nothing happens but if i keep the stick pulled back and i keep accelerating as soon as i reach that min flight speed now i'm up in the air and i can fly around as normal like we did before now if i throttle down i'm now going that min flight speed so if i get down here on the ground we're going to change to the grounded state when we land on the ground and now i'm in the grounded state right i'm not banking anymore i'm taxiing and if i throttle down i can go all the way down to zero so that gives us a way to land and take off that remains as remains simplified to go with the rest of our code all right i hope you enjoyed this one i enjoyed making this one and it's a lot of fun to fly around makes me want to make some uh little dogfight type of game or something like that um with this right add some shooting to the plane so on if you have some ideas post them in the in the comments below but hopefully this will inspire you to do some things with flying as well thanks for watching and i'll see you in a future video you can find this recipe and lots more on the godot recipes website at godotrecipes.com here you can find a wide variety of recipes for creating the game system you need some help on how to get started with godot in the basics section and lots more i recommend you go over there and explore and let me know if there's something you're looking for that you'd like me to add as i'm always adding more recipes over time thanks for watching and i'll see you in a future video