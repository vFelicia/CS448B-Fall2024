welcome back in this recipe we're going to look at how to make an arcade style car that's really fun to drive in a very simple way using a rigid body sphere this recipe is inspired by a tweet from kenny a little while back where he showed how to do this and several people have asked me if this is possible in godot and that's what we're going to find out today we start with a rigid body this is just a plain rigid body sphere that i'm controlling that's going around the track and to that we add our car mesh and we're just going to put our car mesh at the location of the rolling sphere and then we make the sphere invisible and it looks like the car is all that we're controlling going around the track and this is a great setup because it's relatively easy to make there's only a few nodes you need to configure it doesn't take a lot of code and most importantly it's fun and feels great to drive around before we start making the car here's a quick look at the input actions that we're adding in the project settings i have accelerate break steer left and steer right and i've set those up to work with keyboard keys wasd and arrows but i've also set them up to work with the analog stick on my game controller and i highly recommend if you've got a game controller use the analog stick it's a lot nicer to drive around with that than it is with keyboard keys all right let's start setting up the car so i have a spatial node here that's going to be the route and under that we're going to have two independent nodes the rigidbody which is going to move around based on physics and the car's mesh which we're going to position manually and is going to help us do the the turning as i said before so so i've added the rigid body and i've named it ball and we need a collision shape on here and we're going to use a sphere and i'm going to keep the radius to 1. you can adjust that and it's going to alter how the driving behaves so feel free to experiment around with that too but one works out for a good scale for the size of the mesh we have and everything else and we need to set some properties on the rigid body so we're going to increase the gravity scale you know the godot default physics uh has gravity in it and it feels a little floaty to me and so i want that to kick that number up a little bit if you if your track has jumps and things like that you can play around with how much you scale that to to make it feel good for your game okay we're also going to go down to the angular damp and we're going to bump that up to 5. angular damp is going to have a lot of impact on the driving feel because this is how quickly that ball is going to stop rolling when there's no forces applied to it right if you stop pressing on the accelerator how quickly does the car come to a stop and so you're going to want to experiment with that value 2 as you're setting it up depending on what you want your car to do and then i'm also going to add a physics material and give it a little bit of bounce this is kind of a fun one to play around with because it's going to control you know what do you want to happen when you run into a wall do you kind of bounce off of it when you run into other cars you can experiment with that you probably don't want to set it too high or it's going to be really crazy but if that's what you're going for have fun okay so so these are some values you can play around with to start having some impact on what the driving behavior is going to be okay so adjacent to this ball or as a sibling of this ball we're going to add our mesh which i'm using the kinney cars kit and i'm going to use the suv model here and so when you import this model you'll see we have a bunch of individual meshes which is kind of nice because these individual meshes can be moved independently and we'll be able to do things like take the front wheel and you know rotate it when you turn when you're turning so it looks like returning you could if you wanted to and i'm not going to do this but you could if you wanted to simulate suspension by moving the wheels up and down as the car moves and that's really all we have to do with this suv model is just import it but now if we look from the side here and let's switch to a side view you can see here's the here's the collision shape of the ball and that ball is going to be on the ground right so we're definitely going to want to position the mesh so that it is right down here so it looks like the wheels are also on the ground and if you notice what that transfer comes out to be it's exactly the radius of the sphere so keep that in mind if you're using a different sized or shaped mesh you might want to adjust you know how you how you align it relative to the sphere and finally as a child of this car mesh we're going to add a raycast and this raycast is going to help us for with ground detection because we want things like when you are up in the air maybe you went off a ramp turning the wheel shouldn't turn the car right because you're in the air you shouldn't be able to accelerate and decelerate while you're in the air so we can use that ground detection to detect that so we're just going to enable enable it and we're going to set the cast 2 to negative one that's good it's going to point downwards right you can kind of barely see it the raycast lines are a little hard to see but it's just pointing downward from the car and so we'll just be able to use that to tell whether we're in the air or not all right let's start looking at the script so i've added a script to the cart root node and started by adding some variables so we've got our references to some of the different child nodes the car mesh the ground ray and the ball and then i have some settings now these ones you might want to export if you want to be able to set them in the inspector but i've already tweaked the numbers around to the way i like them so i'm using those as my defaults here this is that offset that we just saw a minute ago for the mesh to place it at the bottom of the sphere rather than the center of it engine power is going to be you know how strongly you accelerate this is your this is your turn angle so when you turn the wheel all the way to the right how far would the wheels turn that's 21 degrees and then turn speed is kind of like your turn rate how quickly the car is going to rotate to match the the steering and you can adjust that as well to give you more or less of a feel when you turn and then below this speed the turn stop limit we don't turn otherwise when the car was sitting still we don't want the turning the wheel to make the car mesh rotate right you have to be moving forward to be able to turn the wheel or you at least have to be moving you could be moving backwards as well and then we've got a couple inputs here to capture our or a couple variables to capture our inputs and then in my ready i just want to make sure that that ground ray that's projected downward doesn't trigger when it hits the ball so we're going to add the ball as an exception to that raycast and then in the physics process we just have two lines here we're going to make sure we place the car place the car at the same location as the ball plus that offset that offset that we said here so that will be aligned properly and then we're going to accelerate we're going to apply a force to the ball that is the direction that the mesh is pointing so the direction the mesh is pointing times whatever our speed input is so if i have the if i have the accelerate pressed then we're going to go forward break is gonna accelerate us backwards and obviously if i'm not pressing anything this will be zero so our central force will be zero okay and we can try this out we haven't even added steering yet but we can try that out if we just do our inputs so in the process i'm going to capture my input state if the ground ray is not colliding we're going to return and not do any of the input but if we are then we can check here and we get the accelerate and break input to figure out what our what our total speed input should be and then we do the same thing using get action strength so that we can use our analog stick and do you know half strength or a quarter strength instead of with the keys these are always going to be values of one so you're either turning fully to the right or not turning at all you can't have anything in between okay and we can try that out if you run it and you've got some world to stick your car in right then pressing accelerate is going to move you forward right pressing the brake should move you backwards and that's all we want to be able to see now now for the turning we're going to add a little bit more code to our process function where if we're moving faster than that stop limit we're going to take the car mesh and calculate a new basis that's it's that's that's itself rotated around its yaxis right so the car is rotating to the left or the right based on which way you turned the wheels and we're going to rotate it by whatever that amount was and then we take the car's actual transform and we interpolate it with that new one using the turn speed that we entered in and that will cause our car to rotate to the left or rotate to the left or so the right and then it's always a good idea when you're rotating uh 3d objects around and transforming the basis that you orthonormalize periodically so easiest way to do that is just do that in the code where you're doing the rotation and then you don't have to ever have to worry about any of those floating point inaccuracies creeping in so if you go ahead and try it out now you should be able to not just move forward and back but you should be able to steer now and you can if you're using your analog stick you can steer gradually or take those really sharp turns to drift around the corners okay so now we have the basic driving working there's a few tweaks we need to add to get things to look a little bit better and one of those i'll show you an example here if we were to try and go up a ramp or a slope if your track has those in them then you'll see that the car doesn't actually tilt on the ramp right it remains horizontal and that doesn't look very good so we're going to fix that after we rotate the car mesh we're going to align with the ground using the the ground ray and if you want more details about this i have a separate tutorial where i talked about aligning 3d objects with ground normals and i'll link to that in the comments below but we're basically taking that ground ray and getting the normal of the ground and aligning the car's y axis with that normal so that it remains looking like the wheels are on the ground and when we do that it will look like this so we'll come up to the ramp i'll slow down a little bit so you can see that looks a lot better this next one is purely for visual effect we're going to take the right wheel and left wheel and i've made some references here to their meshes right the wheel front right and left which are the two meshes and we want to rotate them visually you can see here in the editor what i want them to do is rotate like this when we have turn input and so we'll do that in the script right down here after we get the input we're just going to rotate those wheels based on that same input and that's going to look a lot nicer when we're turning because the wheels will turn as i'm as i'm applying input all right this next one really adds a lot of visual appeal so i've added another reference here to the body mesh this time and what we're going to do is when the car is going around turns we're going to tilt the body a little bit to show some kind of physical effect on taking those sharp turns right and it's going to tilt more or less depending on how much you're you're turning okay so in our code we're going to add a a variable here for the amount that we want that body tilt to be and you can adjust that to make it stronger or more subtle and then down here when we rotate the car mesh now we're going to tilt the body and we're just going to do that by taking our rotate input and multiplying it by the our velocity length so the far faster we're going the more effect this is going to have and we're going to rotate our body by that much and lerping it to make it nice and smooth okay and that's really going to give you a lot of visual appeal when you go around those corners so you see as we get up to this turn i took that term sharply and the the body really tilts a lot to show that way it gives you a sense of weight that the car has some momentum that's making it that's what's making it slide around these turns you can find a link to the written version of this demo on my godot recipes website which is linked below and i've also linked you to a demo project with the source code so you can try it out for yourself thanks for watching