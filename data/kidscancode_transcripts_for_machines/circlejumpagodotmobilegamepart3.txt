welcome back to circle jump this is part three we're gonna start adding some behavior to these circles different modes that will increase the difficulty the first one we're going to do is a limited circle one that's going to run out and not let you orbit it over and over again you've got to jump off of it before the time runs out let's start by adding a label node to the circle that's going to show our remaining number of orbits on the circle so we'll go over here I'm going to put a little bit of text in there so we can see it we're going to set the font and we're gonna make a new dynamic font and the font we want is in the assets folder and the size we're gonna use 64 all right we'll set this to make sure everything is centered and we'll set the layout to Center okay in the script here we're going to add an enum for our modes and I'm gonna I like to do my enums and all caps they're constants essentially so to start with right now we have static and limited static is the ones we've already made where the ring just sits there but if the circle has a limited number of orbits that's what limited means and now the so that means we're gonna need some more variables we need a mode variable to track what this circles mode is and we can even make it start out being static by default and then we're going to need a num orbits that's how many orbits does the does this circle allow and then also current orbits is how many you've completed all right and when current orbits is equal to num orbits you are done and then we're also going to mark the orbit start position because we want to be able to count when we've gone a full circle so that's basically going to be where on the circle you started and every time we reach that point that's one orbit complete okay so let's add a function here for setting our mode we'll pass it the node we want to set our mode to and then depending on which mode that is we will do different things so if we have static I want to hide the label if we're on limited I want to show the label but I also want to set its text we're going to set its text to current orbits right which is we have started with three we have three remaining right that will tick down to two and then one and so on make sure we show the label it was hidden and that's all we need there right now and we should probably set that mode in the init now these modes are gonna get more and more difficult so these are things we're gonna want to show later in the game right when you first start you're probably gonna only have static rings and then when you get to higher levels some of these limited ones will start showing up so the circle doesn't need to know anything about what level it is or anything it just needs to be told you should be mode whatever so we'll DIF will default it to static but will let you set it to something else if you want and actually I'm gonna default it to limited for this test because we want to test out the limited ring if we have that then we will set mode will call set mode on there all right so we're gonna want to set that orbits start position when we're captured now right now that's getting set right here when the jumper gets captured it's setting the pivot rotation and I think I was doing this to avoid having the ring have a reference to the jumper but I think that it's probably going to be necessary anyway for some other stuff we're going to do so we're gonna take this line out of here it's gonna cut that and then in the circle we're gonna add a variable to track the jumper that's attached to this to the circle that way when we capture we can set that right so we can set the pivot change this to a dollar sign notation pivot rotation is gonna be our position all right same thing actually we wanted the opposite we're going in the opposite direction target position minus position dot angle but then we need to know what target is or jumper is I should say but that needs to be set when we capture it so when we capture it we're going to have to pass it a target and we'll assign jumper let's target so in the main when we say object capture we pass it the player and now the circle gets the jumpers position it can set the orbit start equal to that position that we just set so now we know where the orbit start rotation is or start position and we can start subtracting one from it ever time we complete a full circuit so we know how to do that in process if if we're in limited mode right we don't we only care if we're in limited mode do we want to subtract and there needs to be a jumper so if we have a jumper on the ring on the circle and it's in limited mode then we want to check check our orbit so I'm going to make a function for that what this one does is it's going to see if we've gone on a full circle and we could be going in clockwise or counterclockwise so let's just take the absolute value here pivot rotation orbit start if that's greater than 2 pi 2 pi is a full circle then we want to take current orbits and subtract by one update the label text and then we want to update that orbit position so let's do this again alright so let's try it out let's just go ahead and set num orbits equal to like 3 to start with and then current orbits should be set equal to that when we start in limited mode and let's just try that out and see how it looks all right we got three two one we jump over this one the start point was there to one it's gonna go to zero because we didn't tell it not to but yeah now it's it's counting down and it's counting a full rotation like we wanted okay so when the orbits run out so here when we got to zero then we're gonna say if current orbits then we want to tell the jumper to die which we haven't told it how to do that yet well remove our jumper reference and we will call the implode so that'll be fine except now we're going to get an error message on jumper dot die so jumper dot die is going to be pretty simple to start with right now all we want to do is Q free the it's a target equal null and Q free and then while we're at it since we're over here something we didn't do on the jumper yet was connected visibility notifier screen exited on the visibility notifier should also call die all right let's see what happens now when we run out of orbits yeah there we go the circle disappears so does the player something else I wanted to do with the limited mode was draw a visual indication that your that your orbits are running out that the circle is filling up let's say and so as a first pass at that what I thought I would do was used from the docks we can steal this draw circle arc poly method which draws a pie shape and we can animate that going around and filling up so I'm going to steal that and paste that right in here in the circle script so that we can use that the only thing we have to change is the example and the dots is written to work with degrees and we are using radians so we need to change this to not convert and 90 becomes PI over 2 okay so now our circle arc poly function is ready we need to write our draw method right which will be called to do the drawing now since draw will get called once in ready and then later whenever you call update we need to make sure there is a jumper or we don't try and draw anything and then we need to figure out our radius what radius we want to draw this circle PI piece at and I'm going to use the radius of the circle itself with some padding which we'll play around with I'm just gonna use 50 as a nice round number right now divided by the num orbits and then we're going to I want that to grow as the number of orbits decreases so we're also gonna just take note the difference in orbits minus current orbits and multiplied by that and that'll make it grow then we can call our draw circle arc Poly function and we want it centered so we're gonna do vector 2.0 the radius again we probably need to might need a little padding here to adjust it so that's what we're gonna use to tweak that we want the arc to start at the orbit start we want it to end I'll go to the next line here at the pivot rotation and we want it to be the color we want is for now I'm just gonna do red we're going to come back and be more intelligent about how we do colors in a later part so now this will draw that circle and we just need to call update in our process function to make it show so let's see what that looks like okay so there's my circle you can see it filling up and growing but you can also see that it's off right it's 90 degrees off and that's because we need to add let's apply over to to that and we need to add plus PI over 2 to that so that it'll match where our actual circle is and there you go you see it filling up jump up to this one filling up and then growing as it starts to fill up that's pretty good like how that looks we got a little bug there looks like our screen exited killed our player at the same time as we hit the circle so I think what we could do to fix that is go over here and if there's no target and you go off the screen then die because that way if you're on a circle that's near the edge you could sort of go off as you go around it I don't want that to kill you so that should fix that you