welcome back this is part 21 of our topdown zombie shooter game and in this video we're going to finish up with that shotgun item we added last time and we're going to create a new visual effect for when the player gets damaged so in the last video we added a shotgun item for the player to upgrade to but we need a way to pick it up so what we're gonna do is have gone over here and I've made the players start out with the pistol that's gonna be the lowest weapon that you start with and then in the settings I've added an item here to the item images for the shotgun we're gonna use this image and then in the effects sounds I'm going to have a gun pickup sound that'll play when we pick up that item and the last piece of that puzzle is over here in our map I've added an object here just like the health pickup that we added over here named health I've added a pickup here named or an object called shotgun that's going to be the shotgun pickup alright so now we just need to tell the game what to do with that item when it sees it so in the in the new when we load the map right now we're looking for health objects but we're also going to look for shotgun objects okay and it'll create an item of that type so that's all we need to do for that and so if we run the game we we will see the shotgun item they're bouncing on the screen where it's supposed to be right so now we need to just tell the game what we want to happen when we run over that object to pick it up and for that we're gonna go down here to our item pickup code and we have an if statement here saying if it was a health object what to do so we just need to say what to do if it's the shotgun so if the hit type is shotgun we're just going to we're still going to delete the item so we want the item to disappear for the effects sounds we're going to play the gun pick up sound right and we're going to just change the players weapon to shotgun and that should be all we need to do for it that so I'm shooting the pistol now and if I go over here and pick up the shotgun we hear that little click and now I'm firing the shotgun all good now the only other thing I wanted to do about the shotgun real quick was if you notice when we fire it the bullets go out in this little perfect arc because they're all traveling the exact same speed and to make it look a little bit more like a you know blast I want to randomize just a little bit the speed of the bullets so I'm just going to do that in class bullet here where we set the velocity of the bullet I'm going to just multiply it by a random number and that random number I'm going to make it between 0.9 and 1.1 so basically we're going to use the same speed we've been using and anywhere between 90 and 110 percent of that so some of them will be a little fast or someone will be a little slower and so you can see what that looks like if I'm firing the pistol it's not gonna be very noticeable although some of the bullets will travel a little bit different speed but if I go pick up the shotgun I'll get that other way so now you can see there's much more of a spread because some of the bullets move a little bit faster than others you can see that well you can see it on your screen when you try it it just makes it much look much more like a random spray of bullets flying out of the shotgun okay undo our new effect we want to do so I want it to be apparent when the player gets hit I just think we want the player sprite to flash read briefly to show you got hit and so that means what we're going to do is we're going to add a flag to the player and so that flag will change to true when you get hit and win the little flashing animation has stopped it will change back to false so that way the this is how the game will know whether to draw it damaged or not and so how we're gonna going to accomplish that effect is we're gonna take we're just going to define a quick method here called hit and being hit just changes damaged equal to true and it's going to do something else which I'll get to in a second but what we want to do now is in the update when we're drawing the image right we calculated what rotated image the player needs to use and then we're going to say if they're damaged right so if the if damaged is true then we're gonna make a copy I'm gonna make I'm gonna make a copy of the image with the players image and then what I want to do is I want to shade it red I want to paint it paint red on top of it but I don't want to just be solid red what I want is I want a pulsing effect so it's a little bit red at first gets a little bit red or gets a little bit redder and then gradually turns red and that means we need some sort of sequence of alpha amounts that we're gonna paint the red on top of it remember the Alpha is how transparent a color is so if I paint on top of the player with a red pixel or what I'm sorry with a red color that has an alpha value of zero you don't see it at all it's fully transparent if I paint it with an alpha color is 255 it'll be solid red and so I want it I want to sort of start at zero and ramp up to 255 right so it gets darker and darker and darker and and we can pick what the steps are for how quickly that happens but to do that we need some sort of sequence of numbers that the Alpha is going to change to and we could do that with a variable and we keep adding to the variable but I wanted to show you a new or another way to do it using using a really really handy Python library called itertools so I'll pop up a Python terminal here to show you so the itertools module is contains a lot of different functions for dealing with iterators and iterators are just anything that you want to iterate over iterate means do that do something one at a time so for example range 5 when we do for I and range 5 right range 5 is an iterator it produces the sequence of numbers from 0 to 4 and itertools has lots of cool things for for doing iterate for doing different kinds of iterators so for example I'm going to import itertools here and I'll show you one example which is the cycle so if we make a cycle and let's say I just wanted one two three four so I have a list and I want to cycle through it and what cycle does it creates an infinite it's going to infinite iterator that will cycle through that through that list so every time I say next C or the next item in the cycle I get the next one but when I get to four I go back to one so I can just sit there over and over and over again I could even do this you know a whole bunch of times it'll just say one two three four one two three four one two three four so that's all cool that's a that cycles a really useful one especially for animation and things like that but the one that I want to use for this is called chain okay and what chain does is it takes some sequence we'll just use that 1 2 3 for example again okay it takes some seek sequence and it makes it into an iterator just like that so I can do the same thing and hit next to see and it'll keep showing the next one in the sequence however when I get to the last one it gives me back a stop iteration exception just to let you know you've reached the end of the chain and the power of itertools chain is that you can chain multiple lists together so if I had that list and then I also had another list like you know like that then let's go like this then what it's going to do is it's just going to chain those those together all right the two lists became one big long chain until I reached the end okay and this is how we're going to do our sequence of alpha values to ramp up from 0 to 255 to give us that shading effect so we're just going to make a list and then the by making it a chain we'll be able to know when it ends and when we reach the end that's how we need that's how we know we're done and we can stop and we can stop showing that effect we can set damage back to false ok and so we're gonna create that by going over to our settings oops wrong window going over to our settings and threes I'm going to do it this way is so that we can easily change the effect and do a different effect when we want so in the effects where's my effects section here we're going to say what our damage alpha effected I'm gonna call it damage alpha and I just want this to be a sequence of values from 0 to 255 and so I could do a little loop here and say for I in range and append it to a list right we've done that before when we wanted to make a list we did something like just to give you an example you know I could do from zero to two five five and use a step of say 25 all right that would that would do this before and we've done things like that before I'm sure you've seen this before going through a list and appending it or going through a sequence and appending it to a list but this is kind of wordy and takes a lot of space there's a shorter way to do it a powerful thing that python has called a list comprehension and so I know I want to list at the end of this and what I want is I want to do for whatever I in range 0 to 5 5 to 25 and I just want the list to be X for each of those so I'm sorry X I for each of those so this will produce that list I'll show you in the example here so if I say I for I in range 10 I get back a list with each of those eyes from the loop right so it's just a shorthand way of saying the same thing okay and so this is gonna give me the values from 0 to 255 in steps of about 25 and we can adjust this to say how quickly or slowly we want the transition to happen okay so we have that damaged alpha and now on our sprite we want to go and use that turn that into a turn that into a chain so that we can measure actually as we go through it okay so what we're going to do is say when you're damaged our damaged alpha is going to equal a chain which we have to import of that sequence times two because I wanted to flash twice flash flash okay so we'll go up here and from itertools import chain okay so now I have the damaged alpha I want and I just need to fill the image with that color and actually take it back we don't need to do this this is an extra step we don't need so what we want to do is we want to try filling it with that color so we want to try a self dot image dot fill the color I want to use is red to 5500 and then the Alpha value is just going to be the next in the damage alpha all right now that might that will continue to be something until the cycle or sorry the chain runs out yeah skip that for a second so this will keep picking the next value but eventually this is going to return well I shouldn't say an error a it's going to return an exception right this stop iteration exception because the chain has run out so if that happens we know we're done so what we do if we get the exception is we just set damaged back to false okay and now we're no longer damaged we don't need to paint it anymore but the other thing I was going to add here is when you fill an image or you've lit an image high game has some special flags you can use and it's a way to adjust how the image is blended and you can see from the autosuggest here there's a lot of different ones RGB a multiply is the one that's going to produce the best effect that we want although I recommend you try the other ones you can see some of them will invert the colors and give you the you know the the reversed video and things like that but okay so this is our this is gonna be our damage effect if we're damaged then keep trying to fill with the greater and greater values of alpha which it's gonna go through twice so it's gonna get from light to dark and then from light to dark one more time right it's gonna do it twice and then if you when you finish that chain of things the damage effect is done so damage goes back to false okay so then we just need to go over here to our main and when the mob hits the player if there's a hit we're going to we're gonna tell the player to do its hit effect right parenthesis okay and let's see how that looks for us there you go so you can see see the red effect now another thing you can do is you can you can try different colors for example if you do two five five two five five white then you're gonna get the classic kind of just flashing effect all right where the player blinks in and out and just to make that a little bit more obvious if you're watching on the video let's let's have it cycle two more times okay we'll try a couple different ways of doing this you can see the effect difference alright so you see how it's blinking four is I think a little bit too many but maybe three would be good it's also gonna depend on how fast you do it right if we did steps of five then there's a lot more about alpha values to go through and it's not nearly gonna look as good because it's gonna be much more smooth right yeah it's pulsing through there obviously not what you want but for other things that can be a really cool effect if you increase that number up then you're going to have fewer steps along the way so you'll have a really quick blink which actually now that I see that I kind of like that too so we're blinking four times what we're doing it a lot faster all right I kind of like that now all right and now you know other than that if you wanted to get fancy you could go in here and use instead of a linear progression from zero to 255 you could use one of those tween functions we've talked about before to adjust how it ramps up from 0 to 255 in this particular case where we're flashing the image really fast you're not really gonna see any difference in the linear versus the sine or any of those because it happens so fast but if you were to do that fade in fade out effect we saw you could get a really nice and different looking effect by using a different a different tween function here when you generate your sequence of of alphas all right so that will do it for this video if you want you could go and add the same effect to the mobs when you shoot them and have them flash they could blink who they could flash white or you could even have them flash green since we're using this nice goopy green color for their blood as always please go ahead and like and subscribe so that you'll get the next video and I will see you next time thanks everyone you