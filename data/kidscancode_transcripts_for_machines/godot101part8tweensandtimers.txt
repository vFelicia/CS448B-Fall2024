welcome back to the no 101 this is part eight and in this installment we'll be talking about two of my favorite node types ended oh very simple but massively useful nodes between and the timer so let's get started so we have our player moving around and when we touch the gems they just vanish and now we'd like to add some visual effect to picking up to make it look a little nicer when we bump into the gem to do this we're going to use a new node type called a tween what is a tween tweening is also sometimes called easing and this webpage easing dotnet is a great one to see examples of all the different kind of easing functions you can use and so what we mean by is easing is how we're going to get from a start position to an end position over time and instead of using this you know playing linear function there's lots of different functions you can use and you can hover over here and you can see the animation of how the effect works when the little red arrow moves from the start to the end and when you're doing tweening or easing you basically have two choices to make one is which function you're going to use so for example this is the sine function this is the cubic function and there's also two different ones all right bounce is one of my favorites but then you also need to choose what direction you're going to apply it in in means you're going to apply it at the beginning out means you're going to apply it towards the end and then you can also do in out and have it apply at both ends of the curve and by choosing different functions the back function is really good one lets you go a little bit past the starting or the ending point and then come back you're going to choose which function you're going to use and you're going to choose in what directions you're going to apply it okay so we're going to take our tween here and I'm going to just call this the effect we're going to use that to apply several different effects to our gym when it gets picked up let's go over to our script here and we're going to we're going to get a handle to that to that node so that we can apply it and we're going to apply it to the start sprite so I'm going to go ahead and get a handle to the sprite that's what it'll be easy to reference and we can apply the effect of this tween to pretty much any property of the sprite you can apply it to not just to its location when you're moving things around you can apply it to scale you can apply it to opacity to color you name it you can if it has a if it has a numerical value you can apply a tween to it okay so what we want to do is we want to first tell between what property we want to apply it to and so to do that we're going to use the interpolate property method and that just says for some object so we'll say the sprite and then you name the property that you want to apply this to well we're going to go down here we want to apply this to the scale if you hover over scale you see the property name there is transform slash scale so that's the property we're going to say property transform scale and then the next two arguments you put in here and I'm just going to continue this on the next line it's going to sort of get kind of long is the start and end points so I want the scale to start at whatever scale it's at now right so it starts out the size it is and I want it to end up at a value of two so it's basically going to scale up to double size okay then the next one is you need to put what duration you want how long do you want to take it to get from one to the next I'm going to put 0.3 we don't want this to be very long and so the next two properties are which formula you want to use so we're going to use the trans quad one and then you want to put whether you want to do in or out or out right so you can you can do any of these we're going to use the ease out okay so we're going to transfer take the transform scale we start it at the size it currently is scale it up to 2.0 over 0.3 seconds using the quad function in the ease out Direction right now we are deleting the gem as soon as it's crap so we wouldn't have time to see this effect happen so we instead we want the Q free to happen in the pool complete so if we go to the node here these are the events for the tween and the one we want is when it's complete so we're going to connect that to script here and say on on between complete we're going to Q free so when the player grabs it you want to just say effect dot start so this is then defined when the player such as the gym the effects going to start and when the effect finishes the gym will be deleted so we run this there you go so see how it sort of scales up now our only problem is while that gym is scaling up it's still on the screen so if I move out of it and back into it really quick I can actually score it more than once and we don't want that so while it's after it's been touched and closed that after it's been touched and is playing the effect we don't want it to be collidable anymore so I'm just going to put clear shapes here that was let's remove the collision shapes from the object so it no longer will be able to detect any area interest okay but we can do better and add some more effectiveness so let's also make the sprite fade out so look over here we want to look at the opacity and that's property name is visibility / opacity so we want to add another effect interpolate property and on the sprite we're going to do it on visibility opacity and for this one we're going to start with 1 we're going to end at 0 we're also going to have it last point 3 and then we are going to use the same we use the same trans quad and we're going to use the same ease out and I recommend you and you can play around with these try the different settings and see what the effect looks like but I think this little look this one looks pretty good now when we grab our gems they sort of look like they are fading away when we grab them looks much much better tweens are fantastic you should use them pretty much everywhere you possibly can they always make things look better than just plain instantaneous effects so the other really actively useful node that we're going to demonstrate how to use in this tutorial is the timer nose when use that to make a game timer so that the player has a certain amount of time to cool to gem so our main theme we're going to add two new notes one is on the HUD we're going to add another label to display the time I'm just going to duplicate that score label node and I'm going to call it the time label and then we're also going to add as a childhood name a timer and timer is just a very simple node all it does is count down a certain amount of time so the timer node only have a few settings to worry about wait time is how long you want that timer to run for I'm going to put 30 for 30 seconds the oneshot checkbox is whether you want the timer to stop when it reaches zero if you leave this false then the time it will restart when it reaches zero so count down another 30 seconds so you can have a timer that will make things happen every 30 seconds or something like that but we want this to be a oneshot when the timer reaches countdown to zero the game is going to end binary star and then auto start is whether that timer should start when the node is created piping team starts and we're going to set that to on as well so now our timer is ready we just need to connect it up in our code through our main script here we're going to we're going to add another reference to our time label here so that we can update its stated value and then we're also going to add game timer is get node game okay so now we have our new nodes reference and we can set them up so we want the game timers going to start automatically when the scene starts because we set it to auto start so we don't need to start the timer but we do need to update its value here the in the label so that we can see a change so in our process here we can just update the time label and set its text and what we want is it has to be a string and we want to give you the value of the how much time is left on the timer which is going to be a floatingpoint number with a lot of numbers up at the decimal point so we're going to convert it to an integer and it's the game timer not yet time left that will show us how much time is left so let's run it and see what that looks like so there we go we see our time counting down now we just need to say what we want to do when the time runs out well to do that we can use the timeout event from the timer it's really the only event that timers send out we'll connect that to a function called on game timer timeout okay so for now what we're just going to do is when the game timer runs out we're just going to freeze the player I'm just going to say get node player and I'm going to set process the false alright process assault on the player then nothing will update now I've set my wait time to 5 on my game timer and just so we can see how that works because then the game will run out quickly when it reaches 0 of my player now is frozen and I cannot move so that's our game over conditions right you can't go collect any more gems so at this point it would be the perfect time to put you have another label here that says game over and really big letters step back to hidden at the beginning of the game and right here when the game timer runs out we set it to visible and then you would see the words game over on I'll leave that to you to do I also just using about other places that you could add a tween a perfect place would be maybe when you collect all of the gems instead of them appearing instantaneously make them you know animate moving on to the screen or growing from a dot into the full size anything like that you can make use the bounce function to make them drop onto the screen almost like they're appearing lots of different things you could do that'll do it for this video I hope you enjoyed it and I hope you start using tweens wherever you can to spice things up and make your games look a lot more appealing please do comment in the comment section below you have any requests or suggestions for thing you want to see in future videos and I will see you next time you