welcome to Gouda 101 a tutorial series where you learn how to use the Godot game engine in this set of tutorials we're gonna dive into the 3d side of things we'll look at how to navigate in a 3d editor how to create and manipulate 3d objects and how to work with some of godot's essential 3d nodes such as meshes and cameras ready let's get started when you first open a new project in Godot you'll see the 3d view and in the 3d viewport the first thing you'll notice is these three colored lines the red is the xaxis the blue is the zaxis and the Green is the yaxis so in Godot we're using in 3d the yaxis up some other 3d programs might use different orientations some use Z up but in Godot the X and z are the plane and the Y is the up and down axis and positive Y is up and this color scheme is going to continue throughout the interface the green for the Y the red for the X and the blue for the Z and you'll see that in the inspector later now navigating around in 3d is performed using the mouse and the keyboard together so here are the main controls the mouse wheel is going to zoom you in and out the middle button if you click the middle button and drag you will orbit the camera around whatever object you're looking at holding down shift while you drag with the middle button will pan the camera so we're moving the camera horizontally and vertically but not changing which way it's pointing and then right clicking and dragging will actually rotate the camera so the camera is not moving but it's rotating another navigation method you can use is if you press shift F you'll be taken into freelook mode which means now just moving all I'm doing is moving the mouse and then by using WASD you can fly around this is similar to the UI that's used in a lot or the control scheme that's used in a lot of 3d games and you press shift F again it'll toggle back out of that mode now you can also control the camera using the perspective button up in the top left this lets you snap the camera to a certain of view top down from the front from the left etc and so depending on where your objects are and how they're arranged that can let you snap to a particular position and view it from the angle that you want to view it from so let's add our first 3d node so if you go over here to create root node when you click on 3d scene it's going to add a spatial node and the spatial node in 3d is the equivalent of the node 2d when you're in 2d space all of the 3d nodes inherit from it and it has a set of properties that all 3d objects are going to need now first thing you'll notice once you add it is this well object appeared in the center these arrows and circles this is not the node this is called a gizmo gizmos are used to move and orient your 3d objects on the screen notice that they're colorcoded along with the axes and so to use the gizmo you can grab the arrows so grab the green arrow I'm moving it up and down along the yaxis if I grab the blue arrow I'm moving it along the Z and so on and the Rings are used to rotate the object so if I grab the red ring I'm going to rotate it around the xaxis and so by using the gizmo you can arrange and orient your objects where they need to be gizmos can operate in two different modes by default they're in global mode which means they're aligned with the global x y and zaxes so even if I move along Z over here and I move along X and let's say I rotate it the body rotates but the axes are still pointing parallel to the global axis if I pull up it's going to move up along the y axis move it back here and the other mode is called local mode and if you go over here you see the button here toggles between global and local space mode and you can press the letter the T key on your keyboard to toggle at when we're in local space mode now if I rotate around the xaxis so do the arrows so now these errors are representing the body's local x y&z so if I move it along the Z it's going to go off in this diagonal direction and now I'm up above the plane so depending on how you're moving your object toggling between local and global space will help you get it to where you want it to be now let's look at the inspector for the spatial node over here under transform you'll see you have three properties translation rotation and scale so unlike the 2d nodes which have position translation is the equivalent so you see if we start moving it along the Z the Z changes removable on Y the Y changes and so on and a quick note about units in 3d one unit is typically considered to be one meter you can really have it represent whatever you want if you're making a game where everything's microscopic and you're running around in a microscopic world each unit might be you know one millimeter but in general each unit that you move is one meter and so an object that's one meter cube would be the size of this grid that you see right now and now if I rotate you'll see the rotation numbers change and so on and so you can use those in the same way that you would use the properties in 2d and just like a node 2d a spatial has no size or appearance of its own in 2d you'd use a sprite to add a texture to your node so it would be visible in 3d you need to add a mesh a mesh is a mathematical description of a shape it consists of a collection of points called vertices and these vertices are connected by lines which are called edges and multiple edges together make a face so for example here's a picture of a cube and so the corners are the vertices and there are eight of those the edges are the connections between the vertices there's 12 of those and the faces are the square surfaces that are formed by the edges which are six in a cube so typically meshes are created using 3d modeling software such as blender you can also find collections of them online to download however sometimes you just need a basic shape such as a cube or a sphere in this case Godot provides a way to create simple mesh is called primitives so let's add a mesh instance to our spatial the mesh instance represents a mesh and over here you can see in the inspector it's mesh property is empty so if we click the down arrow you can see you could load a mesh that you have or you can create one of these primitives let's select the cube now let's save our seam and run it and see what our cube looks like ingame well it looks like nothing and that's because in 3d you won't see anything in the game window unless you have a camera to tell Godot what you want rendered in the game viewport so we need to add a camera to our scene so I've added the camera here's its gizmo let's move it out of the box so that we can see it so that is our camera this pink pinkish purple pyramid here is the cameras represent the camera's view so it's facing this way and the little triangle up here on top shows you the top of the camera you can always check what the camera sees by clicking the preview button here that's what the camera sees so if we wanted to we can move the camera up a bit rotate it to point down a bit and then it's gonna be looking at the cube like that now if we play the scene we will see what that camera sees now you might notice that this cube appears kind of a light bluish color and in reality this this mesh is white the blue color is coming from the ambient lighting so in the next part we're going to talk about how to light your scene and also how to change the appearance of your mesh using a material thanks for watching and I'll see you in the next video you