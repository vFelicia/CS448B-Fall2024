welcome to another goodo recipe this time we'll be making a dynamic multitarget camera that will work for multiplayer games or other games where you have multiple things that you want to be on camera at once let's take a look so we have here a two player game with two characters that can move around and you're probably used to using the 2d camera by attaching it to your player but when you have two players that's a problem because if the camera is attached to one you can no longer see the other character and so we need a dynamic camera that's going to track both of these players and make sure they're on the screen at the same time you know it needs to zoom out when they're far apart and it can zoom in when they're close together and it needs to change position so that if one goes you know up on the ledges up here we'll still see both of them so we want our camera to do two things we want to be able to add and remove targets so that we could have multiple players or enemies or however many we we want um entities that we want the camera to keep focus on we want to have the camera keep its position centered among those targets and then we want to have it adjust the zoom so that they'll all stay on the screen so we're going to make a new camera object for this so make a new scene with a camera 2d and this is where we're going to attach our script i'm just going to save this and attach a script to it okay here's the start of our script these are the variables we're gonna use we're gonna have a move speed and that's how quickly the camera will change position if there's a sudden change in where it needs to be we're gonna interpolate that move to make it smooth and this is how fast it'll move to get to that position and then zoom speed is the same thing but with the zoom factor so it gives us some control over how quickly the camera will zoom to new values then we have a minimum and maximum zoom amount and this is going to really depend on the resolution and scale of your of your game but you can set those to to not allow the camera to zoom in any closer than a certain amount or farther out than a certain amount and then margin is going to be a little bit of buffer space around the objects that you are zooming in and out of and you'll see what that looks like when we do it but it just makes it so that when the two players are far apart for example the camera doesn't zoom out and put them both on the opposite edges of the screen it'll include some area to the sides of them and then we have a we have an array where we're going to keep track of our targets that we are tracking and then lastly we have a screen size variable that we're going to set so that we can and we're going to use that to calculate our zoom the next thing we're going to add is two functions to let us add and remove targets from the camera and this lets you keep it dynamic so that for example if a you know third player joins the game you can add them to the camera and they'll get included if they leave the game you can remove them this also lets you and you know when bosses spawn in or anything like that you can you can control what targets the camera is tracking and which one it's not so most of the action is going to happen in the process function and first we'll talk about how we're going to do the movement portion keeping the camera centered so if we don't have any targets we don't need to do anything but if we do have targets what we're going to do is loop through each of the targets and basically find the average position that's going to be the center point between the positions of the various targets and then we just take our camera's position and we alert it to that new position we found using our move speed to lurp us at that speed and that's going to keep the camera centered where it needs to be okay and now our last part is here is to find the zoom so we're going to we need to find a rectangle that encloses all of the targets and then set our zoom to inclu you know to display that entire rectangle so we're gonna make ourselves a a starting rectangle here that's just centered at the position located at the position and it has a size of of one because it doesn't matter right now we're going to expand it we go through each each target and we expand that rectangle to include the target's position so that rectangle will keep growing and then we're gonna additionally once we've expanded it and it has all the targets inside of it we're gonna grow it a little bit more based on those margins that we set up above that gives us the extra buffer space around the different targets and then we're going to figure out which one is the maximum dimension the the x or the y is it a wide rectangle or a tall rectangle so if the x size is bigger right compared to the screen aspect ratio screen aspect ratio is what's going to determine how much we need to zoom then we're going to clamp our zoom the zoom we want is going to be the size of the rectangle divided by the screen the size of the screen and we're going to clamp that between the min and max otherwise if the if the y was bigger we just do that with y and then we learn blurp our zoom to that zoom value right it might be 1.5 it might be three whatever and use our zoom speed so let's take a look at how it works in practice okay so i've added my multitarget camera to my main scene which is happens to be my tile map for this example and in the timeout script i've added both of the two characters as targets to the camera so now it'll be tracking both of those i've also set the camera's limits so that it doesn't uh scroll past the left or right edges of the tile map that's of course totally optional and you could add the top and bottom depends on how you have your levels laid out okay but let's take a look at what it looks like so i have added a debug drawing here this is drawing the rectangle that we're calculating and so you can see the players are really close together but we're zoomed in the maximum amount at 1.5 but as they get farther away you see as that rectangle starts to reach the edge of the screen we're starting to zoom out right and that this is that buffer area to the right and left of the two characters that's that that's that margin that we added in the code so how big you want that margin to be is entirely up to you and i made it a little smaller in the vertical than i did in the horizontal but now you can see as we move away we're zooming farther and farther out right it doesn't matter whether we're above or below but we're moving farther and farther away until we reach the edge and this is the maximum zoom i set but you can see that as the two characters move around that rectangle is keeping track of how far apart they are and making sure that our zoom level never makes any either of them go off the screen right and that's it that's your multitarget dynamic camera and i'll show you one other example we can add one of these uh mobs in as another track to target and you can see how it works with three okay so now what we're doing is we have three targets that purple mob up there is also one of the targets so you can see as it's moving our center point is staying centered between the three of them and the zoom is making sure that no matter where they go everybody is staying on screen so you can do this really with any number of targets obviously depending on how your game is set up hopefully that helps if you have any questions please post them in the comments below and i'll include a link in the description where you can download this demo project as well and experiment with it yourself you can find this recipe and lots more on the godot recipes website at godotrecipes.com here you can find a wide variety of recipes for creating the game system you need some help on how to get started with godot in the basics section and lots more i recommend you go over there and explore and let me know if there's something you're looking for that you'd like me to add as i'm always adding more recipes over time thanks for watching and i'll see you in a future video