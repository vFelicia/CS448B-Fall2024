welcome back to our PI game tutorial series we're working on our up game and in this video we're going to learn how to add some enemy sprites please check the links below if you're missing any of the code samples where you need to catch up on previous videos okay the next thing we want to add to our game is the enemies or at least the things that we're shooting at we might eventually decide to make them alien spaceships or meteors floating around in space or you might even decide that your I don't know a unicorn shooting rainbows at squirrels I don't know what the enemies are going to look like yet but we so we want to name it something generic something that we won't have to be too specific about and the generic word for an object in a game that moves around is mob which you might have heard before and so we're going to set up a sprite for the mobs and then later on we can make them look like whatever we want them to look like and we're gonna start by creating a sprite just like we did forgot my underlines there just like we did when we set up the player we have to do the initial part of the required things that you need when you're making a sprite the init the image and for these I'm going to make these we're also you're just going to use rectangles for now just because we just need something specific or something generic to put in there till we decide what we want them to be and I'm going to fill those with red okay and then the rect will just be okay now how do we want to place these on the screen well there's going to be potentially a lot of these so every time they spawn we want them to appear and then start coming down the screen towards us well if we just make them pop into existence up here at the top of the screen that's going to look kind of weird like they just appeared so instead what we want them to do is we want them to spawn somewhere off the top of the screen above the window so that they will come moving onto it like they came from you know somewhere off screen so we want to pick a couple of random numbers for the location so the xcoordinate for where it's going to spawn is just going to be a random number between 0 and width minus however wide our sprite is right that way if our sprite is in this case right now it's 30 pixels wide so it'll be anywhere between 0 and with minus 30 so it'll pop up here and won't be sticking off the screen this just ensures that it will always appear somewhere between the left and the right and you can write 0 there number between 0 and width but if you leave that out I am just I mean a Python just assumes it's a zero okay self dot recta y we just want to make it spawn somewhere up above the screen and I'm gonna randomize that too so that we get them more spread out so that they don't all start at the exact same spot so we're just going to make that somewhere between oh say minus 100 and minus 40 say and then the last thing we need is we need to randomize their speed because we don't want them to all be moving the exact same speed they're gonna be they'd be all in a group and a clump just moving at the same speed so we're gonna randomize that so that we have some slow ones and we have some fast ones okay and then the update for this sprite will just be to move dot y + equals speed y okay so it's just gonna move downwards and that's fine but what do we do when it moves all the way down and it goes off the bottom of the screen well we could delete the sprites whenever they go off the bottom and then spawn new ones again up at the top or even simpler if it goes off the bottom we could just move it back somewhere up at the top but we don't want to just move it straight to the top because then if you don't then you'll know that if you miss one it's going to come right back in the same place again so we probably want to randomize that again so what I'm gonna do is I'm going to copy this stuff here and I'm going to say if the rect dot top is greater than height and I'm just gonna put plus ten here just a little bit so we make sure we leave some extra space and I'm gonna paste that stuff there so if it ever goes off the bottom we basically just reran demise its location up at the top okay and that's going to do it that's our mob sprite so all we have to do down here is now spawn a bunch of them but there's something else we want to do first the other thing we want to do is we want to create a group to hold all the mobs and the reason we're going to do this is you know we have the all sprites group and that's fine that's the thing that makes them all update and them all draw so being in the all sprites group will make our mob sprites work but we're gonna make a mobs group as well because later on in the next step or two we're gonna get to the point where we want to see if the player runs into any of the mobs and if the mobs are just in a group then it's very easy to just say did the player hit any of the mobs and you'll see that in a little bit when we start doing that part of the game but first let's spawn some mobs so we've got a group to put them in now and so we're just gonna say for I in range eight let's say so we'll start out with eight mobs and see if that's a good amount okay and I'm just gonna spawn a new one and I'm just going to call it M cuz this is just a temporary name just so that we can add it all sprites dad and mobs dad okay so we're gonna add that mob to the all sprites group and to the mobs group and now once they're in the all sprites they are gonna get updated and all that stuff so let's see what happens oops we have a typo that tends to happen a lot when you're talking while you're typing some of you probably saw this as we were going through it and fixed it yourself but I left off my underlines there which I tend to do sometimes when I'm typing and talking at the same time but there will fix that error and now we should have some mobs streaming down the screen and see some of them are fast some of them are slow and they come in and out of the screen that's something else we could do is we could randomize the movement a little bit more and make the mobs have a little bit of diagonal movement so if we have a random speed in the xdirection then they'll sometimes be moving sidetoside so they'll be diagonally going across the screen so we just need to tell the update to use that speed X Y our speed X as well and then let's see what that looks like so now we have some running diagonally across now the main problem here is that sometimes they're going to start up here and go diagonally this way which means they're going to go off here and then it's going to take them a long time before they get all the way down greater than height and respawn again so it's a little bit on predictable so we could respawn them when they go off as well so we could say for left is less than zero actually let's let them go off a little bit let's say just a little bit or selfdirect outright it's greater than with plus twenty and this line is getting kinda long so I probably gonna want to change that at some point to have to resize that a little so you can see the whole line and then we're gonna see them on the screen more often so we don't have to wait as long for them to show back up again if they are going sideways one really slow one right there okay