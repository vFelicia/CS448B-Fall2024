welcome to part 4 of the Godot 101 introduced 3 D series in the previous part we made a kinematic character that we could control using the mouse and the keyboard and in this installment we're going to make a few different objects that this character can interact with this time we're going to look at 3d area nodes areas are used for two main purposes detection meaning they detect when bodies or other areas overlap and influence which means they can alter the physics in a certain area change gravity change friction things like that so we're going to use area to create three different types of objects in our scene a coin that the character can pick up a bullet that the character can shoot and spikes that'll do damage if you run into them before we start making the objects go into the project settings and we're gonna set up some physics layers so in later names 3d physics let's name the first layer environment that's gonna contain our ground and the platforms and things like that layer two we're gonna call the player and layer three we're gonna call pickups what this will do is make it a lot easier for us to organize which objects can interact with other objects so a pickup for example should detect when the player touches it but it shouldn't care about the environment the ground isn't gonna pick up the coin so let's close that and let's open up our character scene and let's make sure that the layers for this are set too if we click the little dot dot here you can see let's make sure the player is in the player layer and for its mask environment because we want to make sure that it still keeps seeing the environment so let's start by making the coin gonna go into our assets and find the coin gold model and we're going to make a new inherited scene and I'm going to take the scene route and rightclick on it and choose change type so I can make this an area and while I'm there lets rename that to claim gold and in the collision we're gonna set it to the layer we wanted on is the pickup's layer and the mask that we want is player we don't want it to check the environment alright now we need to make a collision shape before we do that you'll notice that the way that this scene happens to be set up the way it was exported in the art pack the coin itself the coin mesh itself is offset so I'm going to change that to zero zero zero in the translation so now it's centered on the origin and we're gonna add a collision shape so just add collision shape and this the shape that we will probably want to use is cylinder so there's a cylinder and if we change that cylinder by rotating it 90 degrees it's going to the transform and rotate it if you see the orientation here we want to rotate around this axis which is the Z so we're going to rotate around Z by 90 degrees and then you can just scale it down so that it fits the shape of the coin about like that maybe a little wider there we go so now we have our coin ready to go save that now all we want this going to do is disappear if the player runs into it so it looks like they picked it up so if we add a script to the coin all we want to do is click on area and connect its body entered signal connect that body entered signal and we already know because we set the collision layers that the only body that it's going to detect is one that's on the player layer and that's all we care about so let's just add q4 there so if any body is detected entering the shape we're gonna delete the coin and that should do it so let's jump over to our to our scene and we can throw a couple of these coins in here or even one to start with so let's just grab a coin throw that in there and we'll put it right there on the platform and we'll run run up there and poof the coin is gone all right one other thing I want to do this coin is I clicked on the mesh and I made it a little bit bigger because I thought it was a little on the small side so I scaled it up by 20% 1.2 and then I made the collision shape just a little bit bigger too to match and the other thing is the coins are kind of boring just sitting there not moving so we're gonna add an animation player so that we can make them spin so I'm going to add a new animation call it spin it's one second long we're going to make sure we're at the start of the track here and we're gonna grab the coins rotation degrees create a track for that then go all the way to the end now we're going to set it to 180 rotating around Y and since since the going to symmetrical we don't have to rotate a full 360 you wrote rotate 180 keyframe that set it to loop and hit play now we have our coin spinning set this to auto play and we should be good to go go back over to our world where I've spawned a few more of them and there we go nice spinning coins for us to go and collect okay for this next part I've made another new area node and this is gonna be our bullet for the mesh instance this time I used a capsule shape and weight ahead and made it just set the radius to 0.1 and the height to 0.3 and then that'll give us a good size for what our character will be shooting and you can make a collision shape that's also a capsule shape that matches the exact same dimensions and I also went and just put a little material on there to make the bullet look like I'm firing a red laser beam or something and then I've also added a timer timer is gonna be for the bullets lifetime so that we can make the bullets disappear after a certain amount of time and I've set the oneshot and the auto start on alright we're going to add a script to this bullet and what this is gonna do is have a speed variable we're gonna set that to 15 and of course it's velocity is going to be some vector three and then we're gonna make a start function and the start function we're gonna pass it a transform usually this will probably be the transform of the player so transform set the transform of the bullet itself equal to that transform that got passed in and set the velocity equal to the forward vector which is transform basis Z times the speed and then process is just going to move this area so we take our origin of our transform and we add velocity times Delta and then finally we need to connect the timer's timeout signal and if that happens we're gonna delete the bullet and also we want to say if the bullet contacts something we're going to have it disappear like for example the only things we really have in our world right now are the platforms but if it it's one of those static bodies so we're gonna say body entered on the bullets we're going to connect to that and just for now let's just say if body is static body Q free so that's the code for our bullet itself now we need to make the player spawn these when we press shoot okay here we are at our player scene and I'm going to add a position 3d and what this does is allows us to mark the position where we want our bullets to spawn and I'm going to have them come out of the end of the triangle here and you can you could even orient it so that they go up or down or something like that but that's going to be the spot where the bullet is going to appear so save that and then in the code that's the that's how we're gonna find the transform4 what we pass to the bullet so first we need to load the bullet up here so so we're going to load the bullet scene which if you want a shortcut to typing paths you can always go over here and grab bullet scene and just drag it there and it will drop the path in there for you so we're going to use the left mouse button so let's go to project settings and in our input map we're going to add a shoot action and we're going to attach the mouse button left button then we can go down to our unhandled input here and we can add if the event is action pressed shoot so we press that shoot button then we're gonna spawn a new bullet an instance of the bullet we're going to call it start method like some black room here using the position 3d global transform so we want to use the transform of that so it will automatically be pointing in the same direction that the player is and then we're going to just add this to the parent scene and normally I would get a little bit more flexible with this but for this demo we can just add this to the parent so let's go over to our scene and run it again alright one more area object for us to make the spikes so i've instanced the spikes object turned it into an area and added a collision shape by using Create convex collision sibling so you can see it made a collision shape there so we can tell when our player touches this object and so this object is just going to detect whether something ran into it so let's create a script and we're going to connect the body entered signal and when the body entered signal is triggered we want to if body has method take damage then we're gonna asset tell the body to take damage and now we can go over to our character and define what that so I'm gonna add a you know we want a little bit of a response something to happen to the player when they step on the spikes I want them to bounce away from it and in order to do that if we're holding down the movement key we try and bounce away we're gonna move right back into it so we're gonna add a can move variable that will just be a flag for us to disable movement for a brief amount of time while actually just start with it true while the player is executing that hurt movement and then they can start moving again on their own so can move is true and our take damage function will add that down here at the end and what that means is I want the velocity to be reversed which means you're going to fly backwards but specifically I want the velocity dot Y to equal the jump speed so it's also going to so it's gonna push this backwards but also upwards and then we're gonna set can move equal to false so now we will no longer be able to process input we're going to do this for a short amount of time so we're gonna use the get tree create timer method to give us a one off timer that lasts for one second and when that's done we'll set can move it back to true again and then to have that can move take effect we just have to go up here to get input and at the beginning we're set we're just gonna say if can move is false we will return and we won't won't process any input so that is it we just need to stick one of those spikes onto our level and try it out so let's put this up here in the corner yeah about right there let's see what happens when we go and run into those spikes Oh see how I'm knocked backwards now go sideways into it right makes me fly away and we could adjust the amount that it kicks you out words you could adjust all that kind of stuff but now we get at least an effect of something happening when we run into those I hope this was helpful for you please leave your questions in the comment section below and I'll see you in the next video you