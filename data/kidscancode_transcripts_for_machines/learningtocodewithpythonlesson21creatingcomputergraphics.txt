welcome back to learning to code with Python this time we start on chapter 2 talking about computer graphics and animation so far the programs we've written have just used simple print statements to output words to the screen but what if we want to create something that has graphics remember the computer's display is made up of tiny little dots called pixels lots and lots of them for example the computer I'm using to make these videos has 1920 pixels across and 1050 pixels from top to bottom if we multiply these two numbers together that's over 2 million pixels imagine if we had to write our program and keep track of every single little pixel on the screen which ones are on which ones are off what color each one is and every time we wanted something on the screen to change we had to know exactly which pixels to change programming would be very very difficult fortunately we don't have to do that thanks to some other programmers that have created things called graphics libraries to help us out there are many different graphics libraries out there that you can use the one that we're going to use is built into Python you don't need to download anything extra it's called the TK interface so let's switch over to our idle window and start coding the first thing we're going to need if we want to draw on the screen is we need to make a window to draw in so first let's import TK TK enter stands for TK interface this import statement might look a little different from the ones we've used before that's because the TK interface library has many different commands and tools in it you can import the ones that you're going to use and leave out the ones that you're not going to use but for this example we're going to use this asterisk asterisk here which tells the computer to import everything from the TK alright now to create our window we're going to need four lines of code we need to start a TK object this actually initializes the TK system starts it up so that we can start using it and then we're going to make a canvas which is going to be the thing that we're going to draw on and the canvas is going to have a width of 500 pixels and a height of 400 pixels and then let's go ahead and set the title of the window we're going to say drawing this will be the title that goes up here at the top of the window and then we say canvas dot pack to actually tell it we're done with the settings actually create that window and show it up on the screen if we ran this program now we would see the window appear and then right away it would disappear again because we got to here and that's the end of the program we'd like to have the window stay up so for right now while we're not doing anything else we're going to put canvas main loop which gels tells the computer to just wait and show the screen and don't do anything else and don't end okay so let's try running it so I'm going to save this as TK example and then we can run it and what you should see is a window that looks something like that there's our canvas that's 500 pixels wide and 400 pixels tall and it has the title drawing well now we have the canvas window it may not seem very exciting yet but now we have a place where we can draw what can we draw well to start with there are some handy commands for drawing basic shapes before we do that though let's talk about coordinates the TK coordinate system is a little bit different from the one we used with turtles earlier in the series TK follows the same setup that just about all graphics libraries and programming use so if this is our canvas window then you'd expect this is the xaxis and this is the yaxis now in your math class you may be used to drawing your axes like this and this is the xaxis and it gets bigger as it goes this way and this is the yaxis and it gets bigger as you go up well in computer graphics we start things a little differently this is the this would be the origin right here so this is 0 comma 0 and X gets bigger as you go to the right but Y gets bigger as you go down from the top so this over here in our example window would be 500 X and 400 Y so its flipped from the way you're used to drawing it in math class but the nice part about this is that there's no negative numbers Y just goes from 0 to however tall our window is and X just goes from 0 to have our wide our window is so using those coordinates we can tell the computer where we want things to be in our canvas window so if we draw it want to draw a line we just have to tell it this point and this point and it will figure out all the pixels that need to be changed to connect those two points so let's try that out so let's try drawing a line so we'll put this before the main loop so the command is canvas create line and in order to create a line we need to tell it those two points that connect the line so first we'll tell it where to start so how about we say zero zero and where we want it to end so we'll put 500 400 all right so that should create a line all the way from this top left corner to the bottom right corner and if we run it that's what we should see like that a couple other commands to create simple shapes are we can say canvas create rectangle well this one works just like a line if we give it two points it'll just draw the rectangle that those two points make the diagonal of so for example if I said to draw from 100 comma 100 to 200 comma 250 then it should draw a rectangle between those two points like that we can also do something like this where we can say fill equals and give it a color and it will fill in that shape with whatever color we say like that so there's no command for create square if you want to create a square you just need to make sure you make a rectangle that's the same width and height so if I make the width from 100 to 250 and the height from 100 to 250 that would be a square the next command is create oval now create oval works a lot like create rectangle if you give the computer two points like this then if you imagine the rectangle that would connect those two points then the computer is going to draw the oval that fits inside that rectangle okay and again if you wanted it to be a circle you would just need to make sure that the width and height were the same so let's just draw one up in the corner so we'll start it up in the corner and we'll make it go to say 300 pixels wide but we'll only make it 50 pixels tall and we'll fill it with green so I'll give us a really wide oval like that but if we want to do to be more circular we would just change so the dimensions are the same like that and we can even more complicated shapes using the create polygon command and with that one we can give any number of points so any number of points on the screen and the computer will try and connect them up to make a polygon so for example if we wanted to draw a triangle we need three points so do one up towards the top we do one towards the bottom and another one to the right of that towards the bottom and let's say we fill it with purple then the computer will connect those three dots and make a triangle so it's not easy but if you wanted to draw a really complicated mini sided shape you could figure out which points you wanted to use we will do one more example before we wrap up this video and let's say we wanted to do a bunch of random rectangles all over the screen well we can import random so that we can use the random commands and then we can say for I in range 100 all right we need four random numbers right for the two opposite corners so we could say X 1 equals random R and range 500 because that's the width of our screen and we'll do y1 400 and then we can say X 2 and Y 2 and then we just want to create that rectangle x1y1 x2y2 and you'll see this will take no time at all as soon as you run the program it's going to draw all those random rectangles all over okay so that's where we'll stop for today go ahead and play around with this make it so that you could make it so that the rectangles are all filled with different colors go back and look at the turtle how we did random colors when we did those programs make them different sizes make them random circles if you want get used to how the coordinates work and how you locate things on the screen and in the next episode we will look at how we do animation thanks for watching and we'll see you next time you