hey everybody how's it going john here today we're going to write a very simple game in java a number guessing game so it's good um beginner's game to make if you're not super advanced coding in java you're just kind of getting started but you want to make a fun little game this will be a great thing to try out we'll walk through the entire coding process beginning to end and we'll end with a working little game so i think that'll be pretty fun all right so so how will work is the computer will randomly pick a number between 1 and a hundred and then it will just prompt you to take guesses that's what the number is and if you're right it says great you're right you're one and if you magically get it the first time that'll be it but if you don't get it it just tells you whether the real number is higher or lower than what the number that you entered was and then when you finally does end it says god great you found it so let's just get right into it so the first thing we need is a random number right and in java the easiest way to get one of those is using the random class not just any class it's a random class not a random class it's this random class sorry so we'll declare a new random called rand and set that equal to new random cool and then uh so we're going to need oh and we'll organize imports to get java.util.random if you're not using a suite ide like eclipse here um this is the import you need and then to um we're going to want to create um our variable to hold our random number so we'll just make it an into between 0 and 100 and int is fine so int random number we'll declare that and set that equal to uh here's where we're going to actually generate the random number it's rand dot next int uh is what you want here and it takes a parameter basically a range so if you say int 100 it begins with zero inclusively and goes up to the number that you specify exclusively so it starts with zero and ends with 99 in this case if we did uh 100 but what we want is actually a number between 1 and 100 that's just that's just the range i want you can do it between 0 and 99 or whatever range you want you can code this between to be between 0 and a million if you really want the user to have a terrible time anyway if we want to get a random and between 1 and 100 we will just take this random int that we have between 0 and 99 and all we have to do is add 1 and then we have a random int between 1 and 100 and we're in business okay so now that we have a random number we just need to prompt the user hey please uh enter your guess and so to do that let's uh go ahead and print out a print statement system.out.printline enter your guess and we'll save you know between one and a hundred um just to help them out why not enter your guess one two hundred okay and then we need to actually accept their input and to do that we'll use the scanner class if you want to check out a full video on how to use the scanner class more in depth and we're going to use it here go ahead and check out this video it's a full indepth tutorial on that so hit that up but anyway here we're going to create a new scanner we'll call it scanner a new scanner scanner equals new scanner and system dot in to be a keyboard input organize imports we want this java util scanner so now we have two imports up here so now we want to get an in from the user and we also want to store that end somewhere and in a variable so to do that let's create our int a player guess good name for it equals um scanner.nextint that's the method that gets an int as input from the user and so we'll this will get the user's input and put it here in player guess and actually so we can reuse this maybe later we can put this scanner here at the top just just kind of you know makes more sense to have it there so now we just need to check if the player guess is right or if it the real number is higher or lower than the guess all right so we'll just have a little if else statement here we can just say if player guess equals the random number then uh system.out.printline correct you win hooray and all the fanfare and huzzahs and accolades bring forth everybody's happy otherwise so else if if the the random number is larger than the player guess then that's what we're going to print out by the way if you want to be really cool and do your print statements with a little shortcut in eclipse you can type sis out and then hit control space and it'll print out that whole method name for you pretty cool right make it like a programming ninja so now we just tell them uh you know the the the random number is is greater than their guess so we just say nope the number is higher guess again something like that can be whatever kind of note you want and then otherwise so we can have an else uh we we can say else if uh you know the random number is less than player guess but we already know that that's the case in this case it's not the same as the random number you know the random number isn't the same as the guess and the random number also isn't greater so that must mean it's less than so we don't have to have another if condition we can just say else we can copy this system.out and say nope the number is lower so i know this right now only allows one guess and then completes but um let's go ahead and just test that that works so okay enter your guess so right now the program has actually made the random number already but it's not going to tell us what it is uh so let's say enter our guess we're gonna guess 50. nope the number is higher so here's the problem we're coding this we don't necessarily know that our code works because we don't know what the actual random number is so for debugging purposes right now let's print out the random number that actually gets created so we can um cheat so we're just going to go up here and do a sis out and say and just print out the random number random number is random number so we can cheat and just make sure it's giving us the right output right okay so the random number is 25 enter your guess so if we say 25 it should say hooray we win and it does run it again random number is 60 so let's say if we say 61 nope the number is lower guess again so that's right and now we're going to do uh so it's 78 we'll guess 77 it says numbers higher so sweet that all works all right now of course right now it's a kind of a crap game like you can only guess once and it just goes nope and then it ends the program ends and you can't guess anymore so what we need to do here is have a loop that keeps going and only uh escapes that loop if the correct answer happens right so we can do that with a just a while true loop and so what that is going to do so the way while loops work as you might know is it just keeps doing this loop while this condition in this parentheses is true and of course true the literal true is always true so we might think oh man it's always going to loop through here when's it ever going to escape well the only way to kick out of a while true loop is with an explicit break statement if you put in a break statement like this just break it'll pop out of that loop explicitly even if you have a while true so that's how we're going to do it and so that means we only want to break out and stop the program when the user guesses the correct answer so in the condition that the random number is higher than the player guess or that the the the random number is lower than the player's guess we want to keep looping loopings we don't want to kick it out but if the player has guessed the correct answer and the game is over that's when we want to put in our break statement right and as a brief point here it's important where you put where you put your while loop of course you don't want to have the while loop include the random number generation because then you would have a brand new random number each time you loop through there and you'll be pretty junky game like the real number is higher and then it gets a completely different number for the next round so if you'd like to make an incredibly frustrating and generally not a fun game at all you can do that but if you would like to make a decent game for humans to play you can do it this way so you want to start the loop where you're prompting the user to enter their guess and then you know taking their actually accepting their guess and doing the check because also if you move this while true too late then you're not getting the user's new guess each time you're just rechecking the same guess anyway this is the place where you want to do it so let's go ahead and run our program and test it out okay the real number is 16 we know because we're cheating so we can say 15 and it says nope it's higher we can say 17 it says nope it's lower but it's looping it's doing the right thing right every time we're entering something wrong it says no that's lower we can enter negative and actually that value gives an exception because the number i entered is too big for an int ins only go like positive or negative 2 billion and that's more than that so i busted it that's my bad let's go ahead and try that again so round real number is 84 type in you know 12 okay the real number is higher i type in 85 the real number is lower i can type in negative whatever oh that opens higher cool so that's all working the loop is working now it should stop the loop and then the program when i guess the right number so i can put in 84 and it goes correct you win and the program ends it doesn't loop again doesn't prompt me for another guess and so our game is working correctly awesome a couple of notes in order to disable cheating we want to get rid of this line that actually prints out what the random number is and you can just comment it out instead of removing it in case you want to put it back in later for debugging purposes or whatever and now let's go ahead and really play the game enter your guess let's see uh i'll do 50 again okay the real number is lower i'm going to do the most efficient algorithm i think i know which is basically just dividing it in half each time no number is higher and so what's about halfway between 25 and 50. i don't know what is it like uh 38 something like that okay the real number is lower so let's guess like 31 yes got it that's a lot more satisfying when you aren't cheating that's pretty cool i like this this is a neat little game you know it's not dark souls it's not gta 5 but it's a fun little game now some little exercises for you if you're if you're learning programming these will be a good thing to do you can um instead of always doing between like you know one and a hundred maybe you could have the user uh put in what how big they want the range to be and they can put in like you know a hundred thousand or something and you say okay well now the number will be to be between zero and a hundred thousand or you could also like you know limit the number of attempts they get you can only maybe give them like five attempts and then at the end of it they lose you can keep an account and do that um you can give them a score at the end like it took you this many tries to win uh actually let's do that right here in this video let's make that enhancement we'll tell the user it took you this many rounds to figure it out so it's kind of like a score like golf you want to get a really low score all right so let's go ahead and do that so we need to create an int um try count outside of this while loop and we're going to initialize it uh to zero right so we start out they haven't made any attempts at all and now after they make their attempt we want to increment that try count and all we have to do to increment that try count by one is do try count plus plus and then at the end when we say correct you win we can um we can put a statement that just says it took you try count tries okay not try country i just automatically typed country try count tries space there all right so that's a simple little addition right that's pretty cool and let's go ahead and run it let's guess let's go a little differently this time we'll do 40 okay the real number is higher 65 real numbers higher 90. i got it i didn't think that was going to work and it says it took me three tries and guess what it's exactly right this program is a genius that's pretty cool i kind of like this this little program it you know it didn't take long at all to make it was real simple but it's kind of satisfying when you get it right when you're not cheating now as i always say at the end of all my videos where we use scanner and we've got a resource leak since we haven't closed our scanner yet so we got to do it gotta be good boy scouts at the end of your program run scanner.close and you'll feel like a good citizen of the world you're not leaking any resources all around your program like some barbarian you know closing your scanners just makes you a good unique person not everybody does it but you do because you don't want to leak your resources good now i'm watching you closure scanners so that was a real fun little game i had a lot of fun making that so if you did too and if you learned something please give me a like and if you'd like to see more videos like this in the future be sure to subscribe i'll be turning these out all the time new and fun java programs to write thank you so much for watching i'll see you guys in the next video