the basic hello world program in Java hasn't changed at all since the language debuted almost 30 years ago but some awesome new changes are coming in a new Java version set to release later this year that will change Java's hello world forever in fact it'll change how you code virtually every single small Java program you write for the rest of your life you're going to want to give it a try immediately my name is John and I'm a lead Java software engineer I also have a full Java course available and a link down in the description there you'll find over 8 hours of exclusive Java video lessons covering dozens of topics go check it out if you've been coding in Java for more than about 14 seconds you know what a basic hello world program looks like you've probably seen it hundreds of times first you have to declare your class so public class hello world and then within that class you have to declare your main method and that main method has to be public static void Main and it has to take in a parameter of a string array that we call args and then finally after all of that you can add your print statement and of course that's system.out.printline hello world by now you probably know that all by Heart Right But do you remember what all that was like when you were First Learning Java someone's sitting down to learn Java or to learn programming at all who just wants to write some basic code they're going to think what the heck even is all this like why do I have to declare a class and what is this public static void Main and string args is this even English it's a whole lot of different concepts and terminology thrown at you all at once and it can easily overwhelm a beginner and make them want to quit before they even get started luckily someone over at javaland thought the same thing and they're finally going to do something about it Java 21 that will be releasing later this year will introduce some changes that'll get rid of a ton of unnecessary clutter here and make all of this way easier for beginner programmers or even experience programmers like me who don't want to have to bother writing this all out every time we make any small program let's go through exactly what those changes are you probably know that all of your Java code has to be enclosed in classes but when you're first learning to code most of the time all of your code is going to be in one single file anyway and in that case what the class is doesn't really matter at all and the folks putting Java together thought you know what you're right let's get rid of it Java will no longer require a class declaration when it's not needed that does mean that you can't refer to this class from any other classes but for small programs like this you never need to anyway and you can still declare other fields and methods inside of this file like you normally would but the next thing is the big one this whole public static void main string args that everyone loves to hate I'll just cut to the chase on this one it no longer needs to be public so you can get rid of that it also no longer has to be static so you can get rid of that too then maybe the best part you can now completely omit this string array parameter Java won't require it anymore so now your whole main method is just void main open close parentheses pretty awesome with this upcoming version of java what it will do is look for the right main method to start your program it'll start by checking for the whole you know traditional public static void main string array args and if you have that it will use it but if you don't have that it will look for a public static void main without the string args parameter and then so on and so forth all the way down to just void main until it identifies a main method that it can use after this change Java's hello world program or any other small program that you're going to write is much more focused on what the program actually does and removes all these other more complicated Concepts that are just not relevant to the thing that you're trying to code once I saw this myself I immediately wanted to install this new version of java and take it for a spin however Java 21 isn't coming out until September and even then in Java 21 these features are just preview features and that makes it a little bit tougher to try out so we're going to go over how you can do this yourself on your own computer right now now the first thing you're going to have to do is install this new version of java since Java 21 hasn't come out yet at the time of this recording you're going to have to download an early access build you can find the link to that down in the description but it's just jdk.java.net 21 and then down here in the builds section download the build that corresponds to your operating system I'm using Windows so I'll download the windows version after that finishes downloading you have to pick somewhere to extract the contents of that file now if you're a programmer I trust that you have the ability to do that on your own so I extracted Java 21 into just C program files Java so this is where I extracted that jdk21 now I'm running Windows so in my case after I have this extracted I need to tell windows that when I run Java commands that's where I want it to look so to do that I have to set an environment variable such a search for environment variables edit the system environment variables and then click environment variables here and then down here I want to edit my path variable click edit and what you want to do is add an entry here that goes to that jdk21 that you just extracted and technically it has to go to the bin directory underneath it so in my case it's just C program files Java jdk 21 bin and if you have another jdk in your path somewhere you'll either need to get rid of it or just change it to this one anyway then you just hit OK and OK again now since these new features are only available as a preview in An Early Access build of java The Ides haven't really caught up to this yet which you've probably noticed by all the Angry Red Lines here in IntelliJ even though I've installed Java 21 and I'm telling it to use pre preview features it still thinks there's all kinds of syntax errors here so for our own sanity we're going to do this old school with notepad and the command line so just go to a folder where you want to create your new Java file so here I've created a folder under my C drive just called test Java 21. so in this folder I can just right click and go to new and then text document so here's where you're going to create your Java source file so how about let's call this new hello world and instead of dot text we'll call it dot Java and then we'll go ahead and open this up in notepad and in here we'll write our new way more awesome more concise version of hello world so all we need is void main open close parenthesis open the curly brackets and system dot out dot print line hello world and then close the curly brackets hit Ctrl s to save and that should be it now we have to compile this file and run it to make sure that this actually works so so to do that let's go back to the folder where we created this Java file and we're going to right click and we want to open this folder in the command line so in Windows 11 here I'm going to go to open in terminal but there's probably you know an open and command line or open in Powershell or whatever the equivalent is on your computer so I'll just hit open in terminal now usually to compile Java files in the command line all you need to do is write Java c space and then the name of your Java file so in this case that would be new helloworld.java however in this case because it's an early access version and we want to use the preview features of this version of java there's a little bit more that we have to do in order to get that to work so right after Java C we have to say dash dash release 21 and then another dash dash enable Dash preview to enable the preview features and then go ahead and hit enter to compile and this is good we didn't get any errors or anything we did however get a note that says that new hello world that Java uses preview versions of java se21 once you run that command and you successfully compile the file back over in the directory where you have this file you should now have a new Hello World dot class file that's what it compiles into now the next step is to run that class file again normally to run your code all you have to do is type Java space the name of your class so new hello world but again in this case because we're using preview features there's just a little bit more to it after Java We'll add dash dash enable Dash preview and that should be it so now when we hit enter it should run our new Hello World program and tell us hello world let's give it a try and it does so that's pretty awesome right we now have a brand new version of hello world that gets rid of the class decoration and gets rid of the public static and the string array args parameter and we're left with this nice concise crisp program that doesn't have any extra bloat and is so much easier for a beginner to understand now remember I noted before that IntelliJ still shows all of these errors here right it doesn't think that this is valid syntax but I do have it configured to use Java 21 and to use the preview features of java 21. so oddly enough when I give it the command to actually compile and run this program it does so successfully just fine so because this is a preview feature it's still a little clumsy to use and the IDE is just haven't caught up to it yet but that's fine they will I'm really curious to see what all of you think about this change like for you experience programmers out there do you like like this or do you like having all of these ceremony and extra complexity around that whole structure and especially to you beginners out there I'm curious if seeing this makes you breathe a big sigh of relief that all that extra stuff is gone there's also some other really cool features coming up in Java that I hope to tell you about as well till then be sure to give this video a like if you enjoyed it or if you learned something and be sure to subscribe so you don't miss each new Java video as always thank you so much for being here with me especially to experience this historic Java change see you next time