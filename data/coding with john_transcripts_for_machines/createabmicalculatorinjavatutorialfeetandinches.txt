hey everybody it's john from coding with john today we're going to do a simple program in java for calculating bmi just something real quick it's easy calculation to do um so all i've got here is a class i've i've made called bmi calculator that just has a main method and that's all um and just some comments to explain what the calculation for bmi is so um it's what it really is is uh the your weight in kilograms divided by your height in meters squared um so but i'm in america and we use pounds and inches so that's what we're going to use here um so the so how you calculate that is just the weight in pounds over the height of inches squared times 703 that's approximate you can go and look that up uh but that's that's the conversion we're going to use it works it's right it's awesome and it's simple so what do we need to do we need to get input from the user do the calculation print the result out so okay let's get started with getting the input from the user so what do we need to do that we need a scanner uh input we'll call it input equals new scanner system.in this is just something you memorize after doing it for a while or you look it up online whenever you need to do it organizer imports all right so now we're going to need a variable to put our values in so and again we aren't going to use this one we're going to go ahead and use pounds and inches so let's get weight in pounds from the user by doing this we're going to need a variable to put it in and we'll use a double for it double weight equals error input dot next double so it's going to get a double from the user's uh input like from the from the console input we'll see that here in a second um but we have to prompt the user for that like we have to tell them what they're actually going to uh what they're actually going to have to put in so system you can write it out system.out.printline please or let's not say please enter weight in pounds cool so that will prompt them for the weight now what i like to do when i program is is test a lot and and make sure things work so let's go ahead and just run it enter weight in pounds cool five awesome the program ended that's it all right so um and we can test that we're getting that input if we want by printing out that weight and let's do it again and weight in pounds five and it prints out 5.0 because it stores it as a double so it does the 0.0 so cool it's doing what we want all right now we want to get the height in inches also so we're going to do that enter height in inches double we'll call it shocker height equals the next input and uh sure let's it's quick to do let's go ahead and test that out too enter weight in pounds five enter height in inches two i'm two inches tall a little more than that uh so yeah print out five and two so we're getting the input perfect so now we have a pretty simple calculation we want to make of that weight divided by the height in inches to the power of 2 squared so multiplied by 703 so let's go ahead and do that so let's get we'll store that bmi in a double also so double bmi equals just exactly that calculation so how do we do that weight divided by and we need to do that height and in inches to the power of two or in in parentheses so we don't mess something up or do something weird um we'll do that calculation kind of all and once so that's height so you could do height times height that would work great that's height squared um but if you want to be super awesome that might actually be even simpler but if you want to be super awesome you can use math.pal uh with that is height to the power of two that's what that does it takes the first number the first parameter there height to the power of the second parameter two this is a bit cooler and more extensible if you want to do it so if you had to do it to the power of like 100 you could do that instead of having to do height times height times high for 100 times so cool we'll do it the cool way uh we want this in let's do this in parentheses well no that's fine we don't need that in parentheses because this this whole math.pow uh thing is all in one we aren't doing height times height so anyway this whole thing is contained so that's fine how it is times 703 this divided by this times 703. that should be it so let's to be able to see that it's doing the calculation right let's just say your bmi is colon space plus the bmi we'll print it out so ctrl f11 here in eclipse i'm using eclipse to run this enter weight in pounds um let's do something real i'm going to enter my actual real bride and weight so no judgment here enter weight in pounds i am 220 give or take hide in inches i'm pretty tall i'm 6'5 so we got a height in inches of six feet times 12 inches is 72 if my math is right plus another five is uh 77 inches so we'll enter 77. your bmi is 26.085 and i think that's right i'm just over the 25 which is like the anything 25 or like down to 15 is normal and above 25 is overweight and above 30 is obese and below 15 you're a rail so i think that's correct so awesome it's working so let's do a little bit of uh cleanup here first you might have noticed this warning in here it wants us to close our opened input scanner and we can do that here at the end well actually we can do it it would be best practice to do it directly after we're done using that input so let's do it here input dot close it's just that easy no more warning and also you might see well we don't need these uh printing out the height and weight anymore that was just for debugging purposes for ourselves so we could make sure the code was working and this is kind of a silly thing to print out you might care about like the first decimal place but probably not anything beyond that we don't need like 15 decimal places or whatever this is so let's get rid of that let's format this bmi with just one decimal place and round so how do we do that so there's a class called decimal formatter logically enough that we can use decimal or matter and call it df equals new decimal formatter let's organize imports so we can i think it's called decimal formatter maybe i'm maybe i'm wrong i used it oh decimal formats let's try that you don't have to memorize yourself you can google it whenever you want to do this sort of thing decimal format and we give it a string of the format we want like literally you kind of put in just what you want like you can do 0.0 nope nope but you need to make it a string of course and then you take this df this decimal formatter and just do df dot format your double which in our case is bmi and that should do it it should format our bmi with just one decimal place go ahead and run that again 220 what was it 77 your bmi is 26.1 and you as you can see in our last run it was like 28.08 something it auto rounds that using a certain rounding uh methodology that does pretty much just what you want so uh it's doing that great 26.1 awesome we could do some other things like for example if you wanted to make this really robust you could so right now if you enter a weight and like you put in some garbage you get an exception input mismatch exception uh it looked for a double and you gave it a string it didn't work they couldn't make a double out of what i put in so it blows up program doesn't work so you could implement like a loop that tries to get their input and if it gets an exception like this it says hey you gotta try again and you gotta and you keep looping until you get something good until you get a something that can work as a double similarly for height you could keep looping until you get a good height and um some there's examples of that in another one of my videos um that is a gpa calculator which does all of that so i won't go over it again here but you could totally do that just use the same stuff you see in that gpa calculator video it'll work awesome and also what you could do here if you wanted you could and i like thinking of ways you could make a a program more user friendly and you could say um i wasn't planning on doing this but maybe let's go ahead and do it let's say we won't go into we won't bother with the meters and again this is america we don't need to do meters and uh kilograms but what we can do is nobody knows like when i had to come up with my height in inches i'd it's like okay i gotta do six so i'm six feet five so six times 12 inches no user wants to do that they know that they're five nine or six five in my case let's let them put in their feet and inches why not let's do it so instead of getting height in inches we're going to get um enter height beat i don't really know how to phrase that like enter the number of feet you are yeah oh well you get it you can come up with a better word if you want and let's do that so everybody knows six five they don't know they're like six point whatever so let's use in um just a good old int for the height and we'll call it height feet next int to get an int and then we also need to get enter height inches so this is the number of inches you are over that number of feet height inches so yeah we're let's remember what was it 26 point let's make sure our output is the same 26.1 i believe is what it was for um before when we were just doing inches and pounds but now that we're breaking it up i want to make sure that we're not messing things up right so now this height in inches so let's call that where we want to calculate like we want to let the user put in their feet in inches and we'll calculate the height and inches so they don't have to so height or let's call it total height um that'll be an into yeah because we have two ants we'll add them up but we'll figure that out later and um total height in inches equals well what does it equal we take our height in feet our height feet times 12 to get the number of inches for that number of feet so if i'm 6 feet 6 times 12 is 72 inches still i hope that's right so 72 inches and then we just add our height inches and that's it now we have our total height in inches but the user didn't have to think about trying to do that math themselves uh let's go ahead and try it see what happens weight in pounds 220 enter height feet i'm 6 feet five inches 26.1 awesome cool that's easy so yeah i think that's all about where we're going to end this and you could put in all kinds of those enhancements if you want here make it really robust so it can't blow up when you put in garbage data but i want to leave that to you to check out but if you are curious and want more hints on how to do that go check out my other video on a gba calculator where we do all that robust uh input validation until then if you like the video give me a like if you hated it give me a dislike and tell me what you actually want to see and so yeah this is john thanks for watching