hey guys how you doing it's john from coding with john do you need to learn how to get keyboard input from the user in java if that's you you're in the right place so to get you started quickly we're going to go over getting strings integers and floats from the user and after we get those basics out of the way i'm going to show you some of the strange intricacies of how some of these commands work so you don't get yourselves into trouble so to start all i've got here is an empty example class called scanner example scanner is what we're going to use to get the user input and all i've got is a public static void main method that you've probably seen many times before so just what i plan to do here is show an example of how you can get somebody's name their age and their shoe size and so to do that we're going to need to get a string for their name an integer an int for their age and a float for their shoe size so to do that we're going to use java's built in scanner class and to use the scanner class we first need to import it so import java.util.scanner and that's great right now it's complaining that we aren't using it yet so let's get to using it so to declare a scanner you want to declare a variable to put it in so we're going to declare a new variable scanner we'll call it scanner equals new scanner and it takes in the type of scanner we want there's many different kinds of things you can use on different kinds of inputs what you want for the keyboard input is system dot in that standard input user keyboard input in the console so this is what we're going to use every time we want to retrieve input from the user now first i'm just going to go ahead and declare the three variables i'm going to put the information in which are the name age and shoe size so let's say we're having a string name we're going to have an int age and we're going to have a float on a flat a float shoe size could have a flat shoe size too i guess now first we're going to print to prompt the user please enter your name so we're going to do that with just a basic system.out.printline please enter your name and now of course we want to allow the user enter their name to do that you're going to use that scanner class so the command to get a string using scanner is just next line scanner dot next line that retrieves the next line of input that the user enters so great but we don't just want to retrieve it we want to actually put it in our name variable and to do that we just say name equals scanner.nextline what that's going to do is take the next line input from the user and put it into that name variable so now our name variable will have whatever the user enters perfect now we need to get the age we're going to do a similar thing we're going to prompt we're just going to copy this and then we're going to prompt the user please enter your age and then to get an int from the scanner the command is scanner dot next int pretty simple right see a pattern so we're just going to take what's returned from nextint and assign it and assign our age variable to it now our age variable holds with the user entered for their age and then last but of course not least we'll do the shoe size thing for floats we'll just copy this again please enter your shoe size all right and let me allow you to take a wild guess what the command to get a float is you are scanner dot next float and then we just need to assign our shoe size variable to what is returned by the user there so shoe size equal scanner dot next float great now we've got all the input from the user let's just print it out to make sure that we retrieved it properly so to do that we're just going to do system.out.printline again and we're just going to print out everything that they entered your name is name using the name variable there and we'll copy that your age is age copy paste your shoe size is chew size so let's get this run see what happens please enter your name that's right john enter your age is my real age 32 enter your shoe size and uh to make it a float my real shoe size is 14 but to make it floatier we'll do 13.5 and there prints out everything that we input your name is john your age is 32. your shoe size is 13.5 so you can see all the information we retrieve from the user is stored in these variables and we can do whatever we want with them we can we can take the the name append it to something else we could take the age add it to some other number we could take the shoe size multiple we can do whatever we want with these but this is how you get the input from the user it's really just that easy there's not a lot to it so if you just want the basics that's it you're done there's not much more you need to know but for some of the more advanced usage and to keep you from running into some strangeness we're going to go over a little bit more stuff first of all if you're working in ide like i am i'm working in eclipse you may have noticed that when we declare this scanner it's upset about something it's got this yellow squiggly line it says hey your scanner is never closed and if you're working in a small little program like this you're probably not gonna run out any problems with that but in the real world if you're running this in a large application you want to be a good steward of stuff so if you want to be a good boy scout and get rid of this yellow wavy line just at the bottom when you're done using your scanner just call scanner dot close and that closes it and makes it happy now over some of the more specifics about what these commands are actually doing so for example in the next line command which i said gets a string what it actually does is gets all of the user input until it gets a new line basically until the user press enter it'll take in all that in that whole string so if i run this again and i uh enter my name as john jacob jingleheimer schmidt and i know that's your name too um and then i enter my age 32 or 23 because i mistyped shoe size 13. it takes in that whole line right great and that's what we want so that's how the next line works but all these other commands next in next float and everything else they work kind of in a different way so let's go clean this up just so we can work with just an int for right now so we'll get rid of all these other variables and all these other commands so now we just have the scanner and age please enter your age and that's what we're reporting back so if we just run this and i enter my name as 12 of course it says your age is 12. but if i run it again and i say my age is 12 space blah blah blah blah blah blah garbage it says your age is 12. well because what it actually does is this next int command takes the input that you put in and stops when it hits the first white space this space here and then it doesn't scan anymore but again what is interesting is the scanner the scanner object still waits right here for you to run your next scan command so what that means is i can say name equals scanner scanner.nextline and it will finish retrieving this line so let's call this string name equal scanner.nextline and your name is name now watch what happens when i put in the age i'm gonna run this please enter your age my name is 12 space blah blah blah blah blah blah blah hello hi how are you enter and notice it says your age is 12 your name is everything after that and that's because what happened is this next int just grabbed this 12 and stopped and then the next line retrieved this entire string ending when i pressed enter and so that's just something to keep an eye out for when you're coding this stuff just if you find your scanners are acting weird just know that that's how it's working now if you want to make it a little bit more userfriendly and take in the entire thing that the user enters before they hit the enter key what i recommend you do is just always use next line and get a string and just convert that string to whatever data type you actually need so for example let's say if we wanted to get the age as a string we're going to get rid of this int age and get a string age and we'll just get that with the next line right so let's just test that real fast should be simple please enter your age 763 it prints out your age of 763 but what if i need this as an int i don't want it as a string well i'll create a new int variable int uh int age we'll call it that um and we'll set it to integer dot parse int that string that the user entered page so what this will do is take the string that the user entered and parse it into an int and we can just print that test it out please enter your age 763 your age is 763 it works exactly how we expect and then similarly if we wanted to store what's passed in as a string as a float we could take for example a float age and to parse a float from a string we would use guess what float dot parse float and pass in page and we've got a float age and we can test that out too please enter your age whatever great your age is 43.34 it's exactly what we put in but it's parsed as a float so i can use it like that you may be thinking what if you pass in absolute garbage so it says what did you age and you say cheese sandwich what do you how do you deal with that so let's let's watch what happens first of all let's run it enter your age and we say cheese sandwich and it explodes with a number format exception on line 12 here and that's because it's trying to parse a float from cheese sandwich try as you might you can't make cheese sandwich into a float so what you can do here is have a try catch around this parsing so let's say so let's say we've got we declare our float float age and then we just have this assignment here float age equals flow.harshbot h great so what we can do is a try catch around that so we can catch the exception without blowing up the program and then have a loop for the user to enter a valid float so to do that let's just first get our try catch we'll try to do this parse float and we will catch if it happens a number format exception n f e and what we can do right now is just complain to the user if this exception happens hey you didn't enter a real float sad page let's just see if that works nope oh it's complaining because this float age might not have been initialized so we'll just set it to default to 0.0 for now that's fine 0.0 f for float run it enter your age now if i put in garbage like cheese sandwich hey you didn't enter a real float and so that properly caught the exception finished the program but it didn't do what we want what we want it to do is keep looping and trying to retrieve that value from the user until they enter a valid flow so what we can do is gather this user input in a loop what we're going to want to do is take all of this this prompting for your age gathering the age string that they enter we're going to want to do that inside of a loop so we can do it a couple ways but probably a good way is a do while loop and the reason a do while loop is good here not just a while loop a do while loop as you probably know always executes at least once and we do absolutely want to execute this at least once and think of what our exit condition is our exit condition is if this age is successfully parsed as a float so we can do is have a boolean that we're going to use that just stores whether the user entered a valid float so we'll call it boolean valid float age and we're going to start it as false we're going to assume that they put in garbage and if they didn't put in garbage we're going to set it to true and be happy right cool so now we write our do while loop we're going to do all of this getting printing out please uh enter your age getting the age from the user trying to parse it into a float and catch the exception if they enter garbage so we're going to do all of that while that valid flowed age is false so basically we're going to keep looping through this until the user enters a valid float but right now there's nothing that will change this valid float age to true to actually kick it out of this loop so we want to when the user enters a valid float is set this valid float age boolean to true and we want to do that right after we parse the float and the reason for that is that if there is a problem this is the line that will explode in and go to this catch so if it gets past that line we know we have a valid float so at that point we can say valid float age equals true cool so now to review what this is going to do is say we're going to assume we have a bad vowed float agent make the user prove that they can put in a good one we're going to start our loop print out please enter your age the user will enter that age we will try to parse it into a float if we do it successfully we're going to say great you did successfully and if there's an exception we're going to say hey you didn't enter a real float and if we reach the end of the loop and we don't have a valid flow rate we're going to do it all over again so let's give it a try please enter your age let's put in garbage cheese sandwiches are not garbage they're delicious but there's a garbage float hey you didn't enter a real float and you can and it prompts me again and i can keep putting in junk i can put in things that include numbers but it's still bad and then i can put in a real number your age is 34. and that works so that's a great way to do user input validation using the scanner class my recommendation would be to take it in as a string using scanner.nextline and then just parse it into whatever data type you need and just catch exceptions that may come from trying to parse those into those data types and just keep looping until the user enters something that's valid that's what you want and you can have all kinds of different validations about that so say you have an age and they enter 6000 or negative 10 or something weird like that you could have your own custom validations for that so for example if somebody puts in negative 10.0 that's a valid float but it's not a valid age so you might have a check here for so maybe if you made float ages less than 0.0 and it would keep looping through there until the user enters uh something valid so you can do whatever you like there so i think that's it for today guys that should be everything you need to know to get started using the scanner class to get user input in java from the keyboard if you got some value out of this video shoot me a like if not go ahead and give me a dislike and tell me what you'd like to see in an upcoming video so thanks a lot for watching see you guys next time