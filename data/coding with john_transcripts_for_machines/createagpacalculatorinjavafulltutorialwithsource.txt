hey guys john here from coding with john today we're going to be writing a simple gpa calculator in java we're going to be starting from scratch so let's get to it all right so we're going to start from scratch here um in eclipse which is the ide we're going to be using create a brand new java project called gpa calculator and we're just going to we're not going to make it too complicated we're just going to keep it one class um with one main method we won't um break it out too much it's a pretty simple little uh small project um named which is just a main class okay all right so the formula for calculating gpa is so so basically it's total points divided by total credits attempted and what that means is so you get the number of points for a class by taking so like so points or class equals the grade value times the credits so and the grade value comes from a is four b is three etcetera etcetera etcetera and that's why when you get all a's you get a 4.0 um so for example if you have a one class that's worth one credit um you would have uh so you have the the the total the points for that class would be the grade value which is four for if you got an a in that class your grade value would be four times the credits which is one or so credit switch was one divided by the total credits which was one and your gpa would be 4.0 and basically you get your your total gpa by taking all the total points you get from every class divided by all the total credits attempted for every class so um how we're going to do is we're going to work kind of iteratively and get a little bit to work test it and add a little bit more until we have a robust uh gpa calculator that we want so the first thing i think we need to do is we need to be able to get input from the user about um we need to get at least for one class the the total that we need to get their grade and the total number of credits so um we're going to just get input from the keyboard from the console i always forget how to do that so i'm going to take um the w3schools scanner class to get the input we're not going to call it my object let's call it scanner system.in and so let's see we're going to prompt them to enter their credits enter number of credits for the class and we're gonna get it here um our credits so the credits are gonna be the next line in the scanner and we yeah sure let's actually let's test it by outputting what they what they put in just going to print credits you don't need this these extra comments um and this is complaining that we need to uh close the scanner which we can just do that at the end okay so basically what this does is say we create a new scanner so we can get some some input from the user we're going to print out hey please enter the credits and then we're going to get them that from the input and just print it out so that's it um let's go ahead and run it enter number of credits one and it prints one and that's it cool working fine so now we can still use the same scanner and we're going to get the number of uh sorry the letter grade enter grade and the string grade is the next line let's go ahead and again i'll just print that out to make sure it works and our number of credits one grade uh b prints out one and b cool all right so now we need to so let's try and get the gpa for this one class before we start making a loop and getting the gpa for a whole bunch of classes um so let's do this calculation for the one class so we the number of credits is easy um we'll just take the number that they put in there's nothing we have to do with that that's the total credits we need to find these total points and as we said those total points for a class is the grade value which is four for a b for three etcetera times the number of credits so what we're going to do here let's see um we're going to take this grade that they enter and calculate the points so integer points we're going to assign it to this variable um just started at zero and then we're gonna look for all the inputs that the user could give so if grade equals a or sorry that's how you want to do it if grade dot equals ignore case a so if they type in an uppercase a or lowercase a this will work um let's see we want to do points is equal to this calculation which is the grade value times credits so we take the credits that we already have here and we're going to need to make it an integer we are going to have to do that because we can't do a multiplication but we'll figure it out in just a second so it'll be the number of credits times um 4 because 4 is the point value for uh for an a and actually we could even break this out so what i was going to say we could do uh actually first let's back up for a second we need to make the get this uh as an integer integer.parseint credit so now it's going to take the credits and parse an integer out of it so perfect now that works so what i was going to say is then we could take this and do else if you know it's a b dude times three but we have a little bit of duplicate code here we're doing this multiplication each time we really have to do that um so let's get an integer grade value uh i'll initialize that to zero also just so we initialize it to something and we're just going to get the grade value here grade value equals 4. and in here grade value equals 3. so now we're not doing that multiplication we're not duplicating that code but it makes it just a little bit cleaner so b c d f so for a c for a d or an f and so for a c it's going to be 2 for a d it's going to be one and for an f it's going to be zero and then um we'll deal with what happens if they don't send in one of those uh hey let's go ahead and do it else so they sent in something bad um please we're gonna we're just gonna for now print out oh you printed it you gave something bad um but we're going to also enforce that later on you didn't enter a valid grade we're just going to be sad about it or valid grad oh geez all right so we've got this grade value now we want to get the number of points based on that grade value so at this point we've got the grade value points equals grade value times credits so we didn't have to do that each time and we wanted integer parse int credits so okay now we're getting the number of points here by taking the grade value from the letter grade they entered multiplying by the number of credits that gives us the total number of points so let's print that out too okay and then okay that works i think let's um actually let's give it a try let's prove it make sure we have it right number of credits uh one credit enter grade let's say i got an a so open one credit uh grade a four points and that should be right yes so now let's let's calculate that gpa um just for this one class so let's make it a well for now it's just going to be an integer we'll have to fix that later too um integer gpa equals and what did we say the calculation was total points over total credits now we have all those values already points over the same parsing here credits so let's go ahead and print that out too oops there we go gpa and let's make this easier for ourselves when we view this credits there we go grade points gpa gpa run that i'm hitting ctrl f11 here to run that if you're looking for that shortcut in eclipse number of credits uh one credit i got an a and so yeah i got integrated a four points my gpa is four so that works for one class all the the math is really easy so let's but so one step at a time let's make sure we can verify that the user is entering something good so right now if we run it and i enter a number of credits and i say j it goes okay great now enter a grade d and it blows up because you get a number format exception here on this line because it's trying to parse an integer from the letter j which of course you again won't work so what we want to do here is after that when they enter that number of credits we want to verify that it's valid um so let's say we want to make an integer out of that um credits int actually let's make this one credits string we're going to alt shift r rename hit enter and it'll change that all around but we're going to have an integer for the actual credits equals credits or integer dot parseint from that credit string we're going to get the integer from that script now of course this will blow up too the way it is right now so what we want to do is do a try catch around it try to do this and then if we get this number format exception we're going to catch it and make them retry but we have a catch statement for a number format exception and fe just to give it a name and when that happens we're going to be sad and tell the user please enter a valid integer and okay so but now we need to be able to loop uh through here and if they don't enter valid injury we need to send them back here so um we can do it this way or a boolean valid credits um by default is true we're going to assume that they do it right and we'll start our loop here we'll use a while loop so while valid credits we're going to keep asking for it until we uh i'm sorry while let me think about this so yeah while valid credits or well let's see while let me think about this while valid credits so we're going to initialize it to false actually i think we're going to do a do while loop do this while valid credits is false okay so we're going to keep doing this until it's true right i think that'll work that'll work fine valid so if we we do this right and we don't get this number format exception uh that'll be fine valid credits equals true so once we get a good value um this will be set to true it'll check this while and be like oh nope it's it's true we can move on we've got a valid uh a valid number so let's go ahead and try that errors exist so no we don't want to oh we've got this credit string we're trying to parse in it now we don't have to anymore we can just use uh this credits which we actually need to declare up here otherwise it'll only apply inside of that inside of this scope we can't declare it in here otherwise outside of this block it won't be available and we need it to be available down here when we make this calculation but it's my credit stream yeah no that's not available anymore so we'll just use credits there too cool all right enter a number of credits let's put in some garbage r please enter a valid integer enter grid oh no it didn't it just it went to uh straight to the grade so let me think what's going wrong why is this complaining oh it's not used oh welp rookie mistake i'll tell you i've been programming for 15 years almost you will you will you keep finding yourself you make those mistakes less don't get me wrong but you still make them okay number of credits under a valid integer t and valencia garbage until i put in a valid integer good now it's happy and then asked me to enter grade perfect that's what we wanted all right so now it keeps doing this loop until you enter a valid integer and good now we're guaranteed to come out of this with a valid integer for credits now let's do the same thing for the grade here so we're going to prompt them to enter the grade and until they uh enter a valid grade um we're going to keep looping through it so we're going to do it a little different here so let's say um we had a boolean like invalid grade let's see let me think about this which kind of boolean we want let's say boolean valid grade equals true and then here boolean or sorry valid grade equals false we're going to set it to false so we want to do so we want a similar kind of loop here but let's see how which kind of direction we want to do it while valid uh i think we wanted the same kind of thing don't we we want to always do it at least once so we can do a do while loop while valid grade or while not valid grade and we could have done that up here too we could have um instead of valid credits equals false we could have just done uh not valid i realized this is kind of the opposite of the way we did it but we could do it either way let's be consistent valid credits equals true and we'll do while not valid credits and we'll put the condition down here we set to true and then we only set it to false and oh we actually have to put this in here let me think so when will this ever get set back to true again i think we have to so we have invalid credits equals true we're going to have to set it to true here at the top of this while loop because if we don't once it gets set to false here it will never get set to true um so at the beginning of each one we want to assume that it's going to be true uh and then make it prove itself wrong if it's not so if it'll get kicked over to false if they enter something bad and then again by default i assume it's going to be true if we don't didn't have this uh it would never once it got in and somebody put in something wrong it would just keep looping forever because it would never get set back to true um anyway so we want to do something similar here too uh we want to assume valid grade is true going in set to true and then if they put in something bad set it to false and then if it's false we'll try again now let's see grade value oh we need to since this is now set uh this is declared inside this scope it's only valid inside the scope notice it doesn't exist outside of that scope so we need to move this up here outside of that scope so it's accessible to these other things all right let's give that a try let's check both of our validations enter a number of credits put in some garbage it doesn't like the garbage once we enter a number it's happy now enter a grade let's enter some invalid grades whoa we've got some kind of an infinite loop here's the problem we didn't put the printing and scanner inside this loop we need to do that so what was happening was it was asking for it here and then just doing that do while loop forever this line is what actually stops the uh the program and waits for your input so you need to do that inside the loop let's see what did we miss grade what's up we need to declare this outside also string grade equals just an empty string just so it's never normal okay let's give that another try we know the credit stuff works oops we know the credit stuff works so let's just give whatever number of credits enter grade let's give some garbage you didn't enter a valid grade enter a grade you didn't enter valid grade you didn't evaluate you're not right now d that's valid so yeah you had two credits you got a d your gpa is one awesome so now we have a gpa calculator that works for one class now let's create a loop to do multiple classes all right so we're going to do something similar to what we've got here we want a another do while loop do all of this um let's see let me think you want to do all of this shift this over um what we want to do is get the total number of credits we need to do this inside of here so we're going to need a running total of the points and a total of the credits so let's see the points for one this is still correct for the number of points for this uh we're gonna have to put in a while or this is gonna be angry i'm just gonna shut it up well true for now um which is not what we want but don't worry this will give us the points for this for this particular class the grade value plus the credits equals the points and we're going to want total points and a total credits as we accumulate these so outside of these we're going to want to have an integer total points initialize that to zero integer total credits initialize that to zero and we're going to take these total points and here we know the points so for this class we're going to add it to the total points total points equals total points plus points and if we also want to be super fancy we can say total points plus equals points that does the same thing it takes total points and adds points to it and assigns it to that and we can do the same thing with credits credits or total credits plus equals credits so now we've got the total points racking up here the gpa is actually going to be the total points over the total credits so we don't have all the we won't have the grade as a total we don't know that there isn't such thing as a total grade we just have the total points total credits and the gpa unreachable go oh because i made this while true so now we want to do this um keep doing this loop while they we want to make the user add one thing uh at least one class and then if they say yes i want to add another uh then we when we put them through the loop again so boolean more classes equals uh i guess it doesn't matter boolean more classes we'll just declare it here so it's accessible uh let's just default it to uh false and at the end of entering one class what we want to do is prompt the user to tell us where they want to add another class so we're going to copy this we've added those credits now we want to ask would you like to enter another class we're going to say yes or no put in y or n and we're going to uh let's see more classes string equals the scanner.next line make that a string and then we if they made this a y we want to set this boolean to true um so that oh yes they want more classes we will start this loop over again okay so more classes equals we're going to set assign that to more classes string dot equals ignore case y so we're going to basically look for a y and if they send anything else in the world it won't go through it again we can do the same kind of validation we did here um i don't think we have to worry about that too much here you can fancy it up yourself we'll leave that as a project to you you can if they don't put in a wire and then you can complain to them and make them put in something good number of credits one enter grade a would you like to another class yes number of credits um let's see it's a two credit class and i got a b would you like to enter another class no it says okay so yeah we've had three total credits two and one total points was ten because it was one times four plus two times three so that's a total of ten and my gpa in this case it's technically rounding to three or well it's it's doing integer division to get three so this is something we're going to have to mess with next we're going to have to because right now what it's doing is it's taking 10 dividing it by 3 the gpa should be like 3.33 or something but it's doing integer division which means it takes 10 divided by 3 and then just gets rid of the remainder so it's just giving me 3. so what we actually need to do here now so i think everything's working fine for my getting all the information for all the classes but what we need to do is be able to do to to make these into like a float or a double and get uh get decimal versions of this basically so let's go ahead and just do that probably in a pretty simple way here so let's make um so let's call the gpa a double double gpa equals and now you can you can see it's going to get an inch from this result but it wants a double so we're just going to like basically make these a double double dot value of total points over same thing for total credits just uh just use the doubles and we're going to print out that double so let's do the exact same thing we did we had 1a to b okay let's go ahead and try that number of credits whoops one got an a yes two got a b would you like to add another class no and yeah look three point three three so now we're going to have to find a way well we don't have to this is the grade point average it's rounding to like what is that like a dozen decimals bases or something we could definitely leave it at that um because this is accurate but what are you used to seeing you're used to seeing in uh like on your transfer on your transcripts you're just seeing basically two decimal places um so that's i think that's what we're going to try and round it to now when here's something again you'd never remember how to unless you do in daytoday work and on a job in an enterprise application you'd never have to take a number and round it to two decimal place so here's my tip just know how to look it up so let's do it um java round double to two decimal places perfect well it looks like i've looked that up before um oh we got a decimal format nice we can use this decimal format uh class so let's see if that works default is rounding mode half even let's go ahead and try that we're going to use a decimal format just put it up here at the top oh we actually we only need it once so we're going to put it here let's put it right next to it decimal format df equals decimal format that format is 0.00 what's and then that was to get the format here we do df dot format that gpa see these are things you never have to remember if you get asked something like this in an interview how do you uh take a a decimal and make it only two uh only to two decimal places if they make you come up with that from memory in an interview just don't bother with that company that you need to know how to create something like this you don't need to memorize decimal format and oh that's java.txt.desmos no just know how to look it up everybody that you work with that is competent will know will understand it won't matter uh let's try that again it's one a two b number of credits one got an a yes two got a b no 3.33 awesome perfect um i think that's about it let's just test it one more time with just a whole barrage of stuff making sure we can do it let's just test every bit of it so number of credits let's put in some garbage yeah that's still working you know you can enter all kinds of junk and it doesn't work number of credits um let's say i had a three credit class got an a yeah let's send another and then i had a one credit class i got an f um yeah i want to add another class um i got a five credit class i got a b let's add one more i had a four credit class got a c would you like to add another class um no so great it's here's my total credits my total points and my gpa is 2.69 so yeah i think that's about it we could do some other cleaning i'm sure there's some refactoring we could do um if we want to make this very pretty and maybe we'll do that kind of thing in a future video but i don't think we have to right now this is fine it works um i'm sure there's some optimization we could do we could have made this a case statement maybe they made this a little bit cleaner we could of course get rid of comments if you like different ways of doing formatting i'm sure we could do that clean up some of the print statements we don't need but i think this is fine so um yeah i hope you guys found some value in this um if you have please shoot me a like and subscribe for more future videos like this if not shoot me a dislike and tell me what you want to see um so yeah thanks everybody for watching really appreciate it and hope see you next time