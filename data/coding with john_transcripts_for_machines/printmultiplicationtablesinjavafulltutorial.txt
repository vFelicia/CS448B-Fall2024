hey guys john here in this video we're going to go over how to print out multiplication tables in java so given some number we're going to print out all the multiples of it up to some limit so say if we start with the number seven we'll print out seven times zero seven times one seven times two up to whatever limit we set now before we get started here the full source code is available in a link down in the description so go grab it it's going to be a simple piece of code i think we're going to use a for loop to do it and at the end i'm also going to show you how you can get that initial number as input from the user via the keyboard so let's get to it so first we're going to need a number that we're going to print out the multiples of so let's just create that as a variable we're going to use an int we're going to call our number variable number so int number equals um let's just print out the multiples of seven to begin with so let's say we want to print out all the multiples of seven seven times zero seven times one sometimes two all the way up to seven times ten so we want to go from 0 to 10 multiplying all of those by 7 and print out the results now the easiest way to do that is probably with a for loop so we're going to create a for loop starting with int i equals 0 starting with zero and then we want to go while i is less than or equal to n so we're going to start with zero and end at ten if we just had i less than ten it would stop at nine i'm going to do i plus plus so we increment i each time so inside of this we're just going to print out the result of that multiplication so like seven times zero equals whatever the result is so let's just print that out where it's going to be a system.out.printline so first we want to print uh the number that we want to do the multiple of so just number and then we want to say number times whatever the current value of i is so here it'll be number times and then the next thing whatever the value of i is is in i so in the first run of this loop it's going to say 7 times 0 because 7 is our number that's not going to change and i in the first run of the loop is going to be 0. and then we're going to print out uh equals so seven times zero equals and now we want to print out the actual result of that multiplication of seven times i and to do that it's kind of as simple as it seems you can just literally print out number times i we put that in parentheses so there's no chance of any wonkiness of it doing some other order of operations that we don't expect it's going to calculate number times i and that's what it's going to print out in that spot so for the first round of this loop we expect seven times zero equals zero and then for the second run seven times one equals one and so on and then the last thing we should see is seven times ten equals 70 and we should see everything in between so let's go ahead and run it and see what happens so yeah all right we've got seven times zero equals zero seven times one equals seven all the way down to seven times ten equals seventy awesome we're putting out multiplication tables not so hard right of course we can mess around with this however we want instead of just going from zero to ten we can go from zero to ten thousand let's just run that see what happens and of course that works too um i'm not going to go in and check all 10 000 of these operations to make sure that's doing the math right i trust java to do a fine job with that and of course we're all we can also just change the number that we're writing the multiplication tables for so let's go ahead and change this back to 10 real quick and change this to just do um and change this to do something else i don't know multiples of um 12. so let's go ahead and print that out awesome 12 times 0 0 all the way up to 12 times 10 equals 120 perfect so i'll go ahead and make this code a little bit more robust so you can hard code this number but i think it's a little cool to be able to just take that number from the user so you ask the user hey what number do you want to print out a multiplication table for and then that's the number that you print out all these results for and so to be able to get input from the user we use the scanner class in java so i'm going to create a new scanner called scanner so scanner scanner equals new scanner and to get keyboard input from the user we use system dot in here as the parameter to create our scanner and since we're using eclipse we can automatically import uh java.util.scanner if you aren't using a fancy ide like this just this is the import you need for that java.util.scanner and then to get the input from the user first we want to print out a little message to them to prompt them hey we would like you to input something so that's just system.out.printline i don't know it could be something simple just like enter a number and this prompts them to guess what enter a number and then instead of assigning this int number to be something hard coded we can then get this as input from the user and to do that we use the scanner object that we created and we call a method on it called next int and calling this method allows the user to insert a number via the keyboard in the console let's go ahead and give that a run see how it happens so it's prompting me enter a number and let's do what we did at first seven and awesome it's taking that seven and printing out the multiplication tables for it sweet uh just for fun let's try another number uh i don't know um something ridiculous and again i trust java to get those calculations right but it looks like it's working great you could spot check a couple of them of course uh 586 156 times 10 is this with an extra zero at the end and then 586 156 times zero equals zero times one is itself great seems to be working like a dream so one thing to note here if you give it a run and it tells you to enter a number and you enter something that's totally not a number and java can't make a number out of you're going to see that it gives you an input mismatch exception it's trying to create a number from something you give it that isn't a number and it's not going to work so if you'd like to see a full tutorial about how to handle those kinds of exceptions when you're getting input from the user check out this other video i made on getting keyboard input from the user via the scanner class it goes through everything you need to know about how to handle those types of exceptions and then allows the user to enter another value until they enter something that java can deal with so that's it guys not so hard right pretty cool if you got some value from this video show me by giving it a like and you'd like to see more java tutorials like this in future go ahead and hit that subscribe button i think that's it thanks for watching i'll see you guys in the next video that way i forgot the more astute of you might have seen this yellow underline on the scanner and that's eclipse complaining to me that i didn't close my scanner probably it's not going to cause big problems in a small program like this but it is always good practice to be a good boy scout and close your scanners so to do that just call scanner dot close so then we've made eclipse happy we get that nice warm cozy fuzzy feeling about ourselves that we have nice clean coat and we close our scanners then we can feel good of ourselves we've done some good for the world you know it's like it's like feeding the homeless saving a puppy closing a scanner i think it's about the same all right that's it guys see you next time