With timestamps:

00:05 - Hi and welcome. In this video I'm going
to describe how computer modeling and
00:09 - simulation
00:10 - and computational thinking align with
the National Research Council's
00:14 - A framework for K-12 science education.
Called the NRC framework,
00:18 - and Achieve's Next Generation science
standards. I'll introduce the NRC
00:23 - framework
00:23 - and point out the alignment between the
practice of Computational Science
00:27 - and the scientific practice to mention,
specifically computational thinking.
00:31 - Computational science is a combination
of computer science,
00:35 - science and mathematics made possible
00:38 - with the advent of powerful computers. It
is seen as the third leg of science in
00:43 - addition to theoretical and lab science.
00:45 - Examples of new computational fields
include
00:49 - computational biology computational
physics and computational social science
00:53 - computer modeling and simulation
00:55 - is one of the many tools in the
computational scientist's tool kit.
00:58 - The tools include types of modeling
packages and techniques.
01:02 - Computational thinking is the key
thinking skill used when developing
01:06 - models and simulations.
01:08 - Computational thinking is the human
ability to harness the power of
01:12 - computers to address real-world problems.
01:14 - It is a human thought process involved
in formulating problems so that their
01:18 - solutions can be represented
01:20 - as computational steps or algorithms to
be carried out by a computer.
01:25 - There are three main pillars of
computational thinking:
01:29 - abstraction, automation and analysis.
01:32 - abstraction is stripping down a problem
to its bare essentials
01:36 - and/or capturing common characteristics
or actions into one set
01:40 - that can be used to represent all other
instances. Automation is achieved by
01:45 - using a computer as a labor-saving
device
01:48 - to execute repetitive tasks quickly and
efficiently.
01:51 - Analysis in the context of modeling and
simulation
01:55 - is the verification and validation
01:58 - of the model. Verification occurs when it
is determined that the model was
02:03 - implemented correctly.
02:04 - Validation occurs when it can be
determined that the abstractions were
02:08 - correct.
02:09 - Specific questions can help the
scientists verify and validate a model.
02:13 - Now, let's look at the NRC framework's
description of scientific practice.
02:18 - The NRC framework presented a new vision of what science education should look
02:22 - like in the twenty first century.
02:24 - Achieve's NGSS standards are based on
the NRC framework.
02:29 - The standards describe how to put the
vision into practice.
02:32 - So every standard has three dimensions.
02:36 - The first would be disciplinary core ideas
02:39 - or content. The second be science and
engineering practices
02:43 - or practice. And third would be
cross-cutting concepts
02:47 - or themes. The standards are performance
expectations for students.
02:52 - They are goals that reflect what students
should know. So what's new in the NRC
02:57 - framework?
02:58 - Well, content and application are
intertwined
03:02 - so there's now more learning by doing and
less memorization.
03:05 - Practice includes the use of computer
models and simulation
03:09 - and practice also includes computational
thinking.
03:12 - The overall message is that students
need act as scientists not simply learn
03:16 - science fact. Additionally,
03:19 - the NRC framework advocates students
develop and use models including computer
03:23 - models.
03:24 - Dimension number one in the NRC
framework
03:27 - is scientific and engineering practices.
These are practices that scientists
03:31 - employ as they investigate and build
models and theories of the world
03:35 - let's see how these compare with the
practice of Computational Science
03:39 - In Project GUTS we introduce students to
the computational science process
03:44 - starting in middle school
03:46 - and we often use this diagram. We start
with a real world phenomenon or
03:51 - problem
03:51 - and a question. We simplify the real
world into just the parts we think we
03:55 - need
03:56 - and note the assumptions we've made. We
come up with an idea for a model using
04:01 - abstraction
04:02 - it's not an attempt at exact duplication in
the real world.
04:06 - From this we develop a computational
model. Then we use the computational
04:10 - model as an experimental testbed
04:13 - complete with variables and parameters.
We run experiments
04:17 - changing these inputs, collect and
analyze data
04:20 - and interpret our results. Our primary goal
is to understand the model
04:25 - and see how it can help us understand
the real world.
04:28 - So here's an example of what a student
scientific practice might look like.
04:32 - I'm interested in the spread of a new
disease how an impact my community.
04:37 - Rather look at the whole world I'm only
going to model my school
04:40 - and my school community. I think it will
be important to have kids
04:44 - and teachers and movement from classroom
to classroom.
04:47 - I use what is currently known about how
contagious this disease is.
04:52 - I'll include all these components in my
computer model
04:55 - and I'll use algorithms to make the
people move and pass the disease from
04:59 - person to person.
05:00 - I'll use my computer model as an
experimental testbed
05:04 - and run experiments that show what might
happen based on how contagious the
05:08 - disease is.
05:09 - Then I'll compare model generated data
to real-world
05:13 - absentee data during an outbreak of the
disease at school.
05:18 - Now this cycle closely aligns with the
NRC framework scientific practices.
05:24 - After analyzing and interpreting data we
compare
05:28 - the model generated data to real-world
data to see if it makes sense.
05:32 - If it is comparable then this model may
be suitable to be used as a test bed for
05:36 - running predictive simulations.
05:39 - If it is not comparable, ask could there
be bugs in your code?
05:43 - and rethink your model. Did I choose the
right abstractions in the model?
05:48 - Throughout the cycle we engage in
constructing explanations or solutions,
05:53 - engaging in argument from evidence and
obtaining evaluating and communicating
05:57 - information.
05:59 - The key takeaway point is that the NRC
framework's description of
06:02 - 8 scientific practices is totally in
alignment with with what we call
06:07 - the computational science cycle.
Additionally
06:11 - growing the capacity in our students to
understand, create and use computer
06:15 - models
06:16 - is on the leading edge of the change in
science education that the NRC is
06:20 - advancing.

Cleaned transcript:

Hi and welcome. In this video I'm going to describe how computer modeling and simulation and computational thinking align with the National Research Council's A framework for K12 science education. Called the NRC framework, and Achieve's Next Generation science standards. I'll introduce the NRC framework and point out the alignment between the practice of Computational Science and the scientific practice to mention, specifically computational thinking. Computational science is a combination of computer science, science and mathematics made possible with the advent of powerful computers. It is seen as the third leg of science in addition to theoretical and lab science. Examples of new computational fields include computational biology computational physics and computational social science computer modeling and simulation is one of the many tools in the computational scientist's tool kit. The tools include types of modeling packages and techniques. Computational thinking is the key thinking skill used when developing models and simulations. Computational thinking is the human ability to harness the power of computers to address realworld problems. It is a human thought process involved in formulating problems so that their solutions can be represented as computational steps or algorithms to be carried out by a computer. There are three main pillars of computational thinking abstraction, automation and analysis. abstraction is stripping down a problem to its bare essentials and/or capturing common characteristics or actions into one set that can be used to represent all other instances. Automation is achieved by using a computer as a laborsaving device to execute repetitive tasks quickly and efficiently. Analysis in the context of modeling and simulation is the verification and validation of the model. Verification occurs when it is determined that the model was implemented correctly. Validation occurs when it can be determined that the abstractions were correct. Specific questions can help the scientists verify and validate a model. Now, let's look at the NRC framework's description of scientific practice. The NRC framework presented a new vision of what science education should look like in the twenty first century. Achieve's NGSS standards are based on the NRC framework. The standards describe how to put the vision into practice. So every standard has three dimensions. The first would be disciplinary core ideas or content. The second be science and engineering practices or practice. And third would be crosscutting concepts or themes. The standards are performance expectations for students. They are goals that reflect what students should know. So what's new in the NRC framework? Well, content and application are intertwined so there's now more learning by doing and less memorization. Practice includes the use of computer models and simulation and practice also includes computational thinking. The overall message is that students need act as scientists not simply learn science fact. Additionally, the NRC framework advocates students develop and use models including computer models. Dimension number one in the NRC framework is scientific and engineering practices. These are practices that scientists employ as they investigate and build models and theories of the world let's see how these compare with the practice of Computational Science In Project GUTS we introduce students to the computational science process starting in middle school and we often use this diagram. We start with a real world phenomenon or problem and a question. We simplify the real world into just the parts we think we need and note the assumptions we've made. We come up with an idea for a model using abstraction it's not an attempt at exact duplication in the real world. From this we develop a computational model. Then we use the computational model as an experimental testbed complete with variables and parameters. We run experiments changing these inputs, collect and analyze data and interpret our results. Our primary goal is to understand the model and see how it can help us understand the real world. So here's an example of what a student scientific practice might look like. I'm interested in the spread of a new disease how an impact my community. Rather look at the whole world I'm only going to model my school and my school community. I think it will be important to have kids and teachers and movement from classroom to classroom. I use what is currently known about how contagious this disease is. I'll include all these components in my computer model and I'll use algorithms to make the people move and pass the disease from person to person. I'll use my computer model as an experimental testbed and run experiments that show what might happen based on how contagious the disease is. Then I'll compare model generated data to realworld absentee data during an outbreak of the disease at school. Now this cycle closely aligns with the NRC framework scientific practices. After analyzing and interpreting data we compare the model generated data to realworld data to see if it makes sense. If it is comparable then this model may be suitable to be used as a test bed for running predictive simulations. If it is not comparable, ask could there be bugs in your code? and rethink your model. Did I choose the right abstractions in the model? Throughout the cycle we engage in constructing explanations or solutions, engaging in argument from evidence and obtaining evaluating and communicating information. The key takeaway point is that the NRC framework's description of 8 scientific practices is totally in alignment with with what we call the computational science cycle. Additionally growing the capacity in our students to understand, create and use computer models is on the leading edge of the change in science education that the NRC is advancing.
