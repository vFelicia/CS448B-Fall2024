With timestamps:

00:00 - [Music]
00:10 - hi everybody my name is gemma bissoni
00:11 - and i'm the ceo of discover labs i'm
00:13 - javon and i'm a cs student at uw seattle
00:17 - i'm levar and i'm a software engineering
00:19 - manager at airbnb my name is pan and i
00:22 - am a software engineer at xbox
00:27 - probably one of the most important steps
00:30 - in pushing code looking for ways to
00:32 - improve it or ways to debug any problems
00:35 - that already might be there you can go
00:37 - in and you leave comments and you have a
00:38 - conversation with the person who wrote
00:40 - the original code and so it's half in a
00:43 - second page of eyes code reviews are
00:44 - important because they ensure the
00:46 - success of your code and your product we
00:48 - don't always see our own errors as the
00:50 - weeks and months roll in i could see the
00:51 - evolution i was writing better code and
00:53 - how the overall code base was better
00:56 - every time i check in code on git i make
00:59 - a pull request and it mandatory must be
01:02 - approved by at least one person it's a
01:04 - very powerful teaching tool first run
01:06 - the code make sure that everything
01:07 - actually works and then we'll sit down
01:08 - and look into it i look for a lot of
01:11 - common errors depending on like the
01:13 - language how is it running is there
01:14 - anything there that could be potentially
01:16 - broken if something gets updated after
01:19 - that then i look mainly towards logic
01:22 - learning a little bit more about the
01:24 - algorithm the efficiency the concept the
01:27 - mental map any tests that could possibly
01:29 - break the program it's a great way to
01:31 - learn not the only way but a great way
01:34 - code reviews they they make the code
01:35 - better and they make the person writing
01:37 - the code better as well think of it as
01:40 - proofreading by writing code that's
01:42 - easily readable by commenting things if
01:44 - anyone else were to look over your code
01:47 - it makes it way faster to understand
01:49 - what's happening it's a way of telling
01:52 - the computer what it's going to do and
01:54 - you're going to want to be able to
01:55 - understand what you told the computer to
01:56 - do if you have someone on your team that
01:58 - is a really good code reviewer give them
02:00 - a chance to stick with them and listen
02:02 - but that code review helps bring in a
02:04 - lot of different perspectives i mean you
02:05 - have different engineers from different
02:07 - teams people who are in charge of
02:09 - different parts of the code you have to
02:10 - be able to write it in a scope where
02:12 - somebody else will be able to pick it up
02:14 - from you because you are not going to be
02:15 - working on this one thing forever that's
02:17 - what core review is about
02:20 - [Music]
02:28 - you

Cleaned transcript:

hi everybody my name is gemma bissoni and i'm the ceo of discover labs i'm javon and i'm a cs student at uw seattle i'm levar and i'm a software engineering manager at airbnb my name is pan and i am a software engineer at xbox probably one of the most important steps in pushing code looking for ways to improve it or ways to debug any problems that already might be there you can go in and you leave comments and you have a conversation with the person who wrote the original code and so it's half in a second page of eyes code reviews are important because they ensure the success of your code and your product we don't always see our own errors as the weeks and months roll in i could see the evolution i was writing better code and how the overall code base was better every time i check in code on git i make a pull request and it mandatory must be approved by at least one person it's a very powerful teaching tool first run the code make sure that everything actually works and then we'll sit down and look into it i look for a lot of common errors depending on like the language how is it running is there anything there that could be potentially broken if something gets updated after that then i look mainly towards logic learning a little bit more about the algorithm the efficiency the concept the mental map any tests that could possibly break the program it's a great way to learn not the only way but a great way code reviews they they make the code better and they make the person writing the code better as well think of it as proofreading by writing code that's easily readable by commenting things if anyone else were to look over your code it makes it way faster to understand what's happening it's a way of telling the computer what it's going to do and you're going to want to be able to understand what you told the computer to do if you have someone on your team that is a really good code reviewer give them a chance to stick with them and listen but that code review helps bring in a lot of different perspectives i mean you have different engineers from different teams people who are in charge of different parts of the code you have to be able to write it in a scope where somebody else will be able to pick it up from you because you are not going to be working on this one thing forever that's what core review is about you
