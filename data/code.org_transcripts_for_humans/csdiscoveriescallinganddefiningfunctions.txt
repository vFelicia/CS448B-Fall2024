With timestamps:

00:07 - There are two steps to using functions
in JavaScript.
00:10 - First we need to define our function.
00:14 - And then we need to call it.
00:17 - When you define a new function you're simply giving a name
00:20 - to a defined set of actions you want the computer to perform.
00:24 - To call a function you just type the
name of the function
00:27 - followed by parentheses.
00:29 - This is telling the computer to perform or execute the set of actions
00:34 - you gave a name to.
00:36 - You have already been calling functions when you use commands
00:39 - that end with parentheses.
00:41 - The only difference is someone else defined them for you.
00:45 - So let's walk through an example together.
00:49 - Notice that the toolbox now has a tab
called functions.
00:53 - There are two blocks in there,
00:54 - one for defining a new function
00:56 - and one for calling a function.
00:58 - Drag a new function block out
01:00 - and type in the name you want to give the function.
01:04 - Now add the code you want to run when the function is called.
01:07 - We'll add a fill command to set red...
01:10 - a no stroke to remove the outer line...
01:12 - and an ellipse command set to a random X and y position.
01:22 - Hey, we defined a function - but nothing
happened!
01:26 - The reason is we forgot step two.
01:28 - We need to call the function.
01:31 - To call the function we drag out the other block in the functions tab
01:35 - and add in the name of our function.
01:37 - Now that we have both defined and called our function
01:40 - the code will actually run and the dot will
appear.
01:44 - Defining a function simply gives a name to a block of code
01:48 - without actually running it.
01:50 - The definition can actually be written anywhere in your program.
01:53 - The rest of the code will run line by line just as before.
01:59 - Calling a function runs the lines of code inside the function.
02:02 - Afterwards the program returns to where it left off
02:04 - when the function call was made.
02:09 - The fact that function definitions can
be placed anywhere
02:12 - means that your code can get messy and hard to read.
02:16 - We typically put function definitions at the end of our programs
02:19 - to help keep things organized.
02:25 - You may have noticed that there's one function
02:28 - you've been defining but not calling
02:30 - in every program you've written so far.
02:33 - The draw function is a special function
02:35 - that you as the programmer get to define
02:38 - but that Game Lab actually takes care of calling for you.
02:42 - By calling wherever you've defined
as the draw function
02:45 - over and over thirty times a second
02:48 - Game Lab is able to string lots of still images into a smooth animation.
02:54 - Once you have written a procedure or function
02:56 - that you know works as intended
02:58 - you can call the function as often as you wish without worrying
03:01 - about the details or problems you had to solve to get it working.
03:11 - By referencing a large and complex block of code by a single name
03:15 - it makes it much easier to understand what a program is doing
03:18 - by reading the code.
03:20 - And also easier to locate and fix problems or errors.
03:27 - Let's go ahead and dive in!

Cleaned transcript:

There are two steps to using functions in JavaScript. First we need to define our function. And then we need to call it. When you define a new function you're simply giving a name to a defined set of actions you want the computer to perform. To call a function you just type the name of the function followed by parentheses. This is telling the computer to perform or execute the set of actions you gave a name to. You have already been calling functions when you use commands that end with parentheses. The only difference is someone else defined them for you. So let's walk through an example together. Notice that the toolbox now has a tab called functions. There are two blocks in there, one for defining a new function and one for calling a function. Drag a new function block out and type in the name you want to give the function. Now add the code you want to run when the function is called. We'll add a fill command to set red... a no stroke to remove the outer line... and an ellipse command set to a random X and y position. Hey, we defined a function but nothing happened! The reason is we forgot step two. We need to call the function. To call the function we drag out the other block in the functions tab and add in the name of our function. Now that we have both defined and called our function the code will actually run and the dot will appear. Defining a function simply gives a name to a block of code without actually running it. The definition can actually be written anywhere in your program. The rest of the code will run line by line just as before. Calling a function runs the lines of code inside the function. Afterwards the program returns to where it left off when the function call was made. The fact that function definitions can be placed anywhere means that your code can get messy and hard to read. We typically put function definitions at the end of our programs to help keep things organized. You may have noticed that there's one function you've been defining but not calling in every program you've written so far. The draw function is a special function that you as the programmer get to define but that Game Lab actually takes care of calling for you. By calling wherever you've defined as the draw function over and over thirty times a second Game Lab is able to string lots of still images into a smooth animation. Once you have written a procedure or function that you know works as intended you can call the function as often as you wish without worrying about the details or problems you had to solve to get it working. By referencing a large and complex block of code by a single name it makes it much easier to understand what a program is doing by reading the code. And also easier to locate and fix problems or errors. Let's go ahead and dive in!
