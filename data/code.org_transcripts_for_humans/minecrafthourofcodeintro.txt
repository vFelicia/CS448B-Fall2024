With timestamps:

00:00 - My name is Jens Bergensten, but I'm better
known as Jeb. I'm the lead developer on Minecraft
00:05 - here at mojang.com. I think I was 11 or maybe
12 and I started programming because I wanted
00:13 - to make games. One of my father's friends
told me that in order to make games you need
00:17 - to learn how to program. So that's how I got
started. I like designing and figuring out
00:26 - the architecture of things. That's what I
really like about Minecraft. Over the next
00:33 - hour you're going to learn the basics of computer
science by programming Alex or Steve to move
00:39 - through a simulated piece of a Minecraft world.
Traditional programming is usually in text,
00:45 - but today we'll use blockly: a system which
uses blocks that you can drag and drop to
00:51 - write programs. Under the hood, you're creating
JavaScript code. The concepts that you'll
00:57 - be learning are what computer programmers
use everyday and are the foundation to computer
01:02 - science. Here at Mojang we use these same
concepts to make Minecraft work. Before you
01:09 - start, you'll pick your character. I'm going
to choose Alex. Let's build code for a program
01:15 - that will help her move around the screen.
Your screen is split into three main parts.
01:22 - On the left is the Minecraft play space, where
your program will run. The instructions for
01:28 - each level are written below. This middle
area is the toolbox and each of these blocks
01:34 - is a command that directs Alex's actions.
The white space on the right is called the
01:40 - work space and this is where we'll build our
program. If we drag the moveForward(); block
01:46 - to our workspace and then click Run, what
happens? Alex moves forward one space on the
01:53 - grid. And what if we wanted to do something
after she moves forward one space? We can
01:59 - add another block to our program. I'm going
to choose the turnRight(); block, and I'll drag
02:05 - it underneath my moveForward(); block until
this orange line appears. Then, I'll drop
02:11 - it and the two blocks will snap together.
When we press Run again, Alex will perform
02:17 - the commands that are stacked from top to
bottom in our workspace. And if you ever want
02:22 - to delete a block, just drag it from the stack
back to the toolbox. To undo your changes
02:28 - and to get back to how the level started,
use the Start Over button in the top right
02:33 - corner of the workspace. One more thing, you
see the little triangle on the turn blocks?
02:41 - Anytime you see these triangles, it means
that you can pick a different option. Let's
02:46 - start coding!

Cleaned transcript:

My name is Jens Bergensten, but I'm better known as Jeb. I'm the lead developer on Minecraft here at mojang.com. I think I was 11 or maybe 12 and I started programming because I wanted to make games. One of my father's friends told me that in order to make games you need to learn how to program. So that's how I got started. I like designing and figuring out the architecture of things. That's what I really like about Minecraft. Over the next hour you're going to learn the basics of computer science by programming Alex or Steve to move through a simulated piece of a Minecraft world. Traditional programming is usually in text, but today we'll use blockly a system which uses blocks that you can drag and drop to write programs. Under the hood, you're creating JavaScript code. The concepts that you'll be learning are what computer programmers use everyday and are the foundation to computer science. Here at Mojang we use these same concepts to make Minecraft work. Before you start, you'll pick your character. I'm going to choose Alex. Let's build code for a program that will help her move around the screen. Your screen is split into three main parts. On the left is the Minecraft play space, where your program will run. The instructions for each level are written below. This middle area is the toolbox and each of these blocks is a command that directs Alex's actions. The white space on the right is called the work space and this is where we'll build our program. If we drag the moveForward(); block to our workspace and then click Run, what happens? Alex moves forward one space on the grid. And what if we wanted to do something after she moves forward one space? We can add another block to our program. I'm going to choose the turnRight(); block, and I'll drag it underneath my moveForward(); block until this orange line appears. Then, I'll drop it and the two blocks will snap together. When we press Run again, Alex will perform the commands that are stacked from top to bottom in our workspace. And if you ever want to delete a block, just drag it from the stack back to the toolbox. To undo your changes and to get back to how the level started, use the Start Over button in the top right corner of the workspace. One more thing, you see the little triangle on the turn blocks? Anytime you see these triangles, it means that you can pick a different option. Let's start coding!
