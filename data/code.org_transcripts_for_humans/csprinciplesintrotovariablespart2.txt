With timestamps:

00:05 - in the first variables video we learned
00:07 - how to create a variable
00:09 - assign it a value and then use it in a
00:11 - program
00:12 - now let's add some complexity one of the
00:15 - most powerful things that you can do in
00:17 - a programming language is use variables
00:19 - in expressions for example
00:22 - var new score
00:24 - new score equals score plus 100. with
00:27 - this code we're creating a new variable
00:30 - called new score
00:31 - but we're not just assigning it a number
00:33 - like we have in the past to calculate
00:36 - the value of our new variable the
00:38 - computer must first retrieve the value
00:40 - of the variable score from memory and
00:42 - then add 100 to it
00:44 - the resulting number is the value of new
00:47 - score
00:48 - what if we want to create a game where
00:50 - we increase the user's current score by
00:52 - one point every time a coin is acquired
00:55 - we could do this by updating the values
00:58 - stored inside the variable score based
01:00 - on its current value like this
01:04 - this line of code can be read as score
01:07 - gets the current value of score
01:09 - plus one
01:11 - so if the current score is seven and the
01:13 - user requires a coin
01:15 - the computer must retrieve the current
01:17 - value of the score which is seven add
01:19 - one to it making eight and then store
01:21 - the new value back into memory
01:23 - similarly in our game if the player does
01:25 - something bad
01:27 - we might want to reduce the number of
01:28 - lives by one so that code would look
01:30 - like this lives equals lives minus one
01:34 - or lives gets lives minus one
01:37 - this process of updating a variable is
01:40 - called variable reassignment
01:41 - understanding how variables are set and
01:43 - updated is a powerful key that unlocks
01:46 - many insights into programming
01:49 - all good programmers can look at a piece
01:51 - of code and use what they know to trace
01:53 - through it logically
01:55 - let's try with an example that's
01:57 - sometimes a little bit tricky to
01:58 - newcomers check out this bit of code
02:01 - in the first two lines you can see that
02:03 - we have created two new variables uh
02:06 - a and a b and assign them both initial
02:09 - values of two
02:11 - in the next two lines we've updated
02:13 - their values so that they each get the
02:15 - value of a plus b
02:17 - at first glance you might think that a
02:19 - and b are both going to end up the same
02:22 - but they won't the key is to recognize
02:24 - that the value of a is being updated on
02:26 - the line just before b is changed so
02:29 - what's being computed will change as
02:31 - well let's trace it out
02:33 - when a gets a plus b this will take the
02:36 - current values of a and b and add them
02:38 - together
02:39 - the result of the equation is stored in
02:41 - the value of a so as soon as this line
02:43 - of code is run the value of a has
02:45 - changed to 4.
02:47 - with the next line of code b gets a plus
02:50 - b the sum of a plus b is now 6.
02:54 - this new number gets stored in the value
02:55 - of b so the final outcome of the code
02:58 - looks like this
03:00 - variables are an extremely powerful tool
03:02 - in computer programming by using
03:04 - variables you can harness the power of
03:06 - your computer's memory to dynamically
03:08 - track important information while your
03:10 - program is running now let's get some
03:12 - practice
03:19 - you

Cleaned transcript:

in the first variables video we learned how to create a variable assign it a value and then use it in a program now let's add some complexity one of the most powerful things that you can do in a programming language is use variables in expressions for example var new score new score equals score plus 100. with this code we're creating a new variable called new score but we're not just assigning it a number like we have in the past to calculate the value of our new variable the computer must first retrieve the value of the variable score from memory and then add 100 to it the resulting number is the value of new score what if we want to create a game where we increase the user's current score by one point every time a coin is acquired we could do this by updating the values stored inside the variable score based on its current value like this this line of code can be read as score gets the current value of score plus one so if the current score is seven and the user requires a coin the computer must retrieve the current value of the score which is seven add one to it making eight and then store the new value back into memory similarly in our game if the player does something bad we might want to reduce the number of lives by one so that code would look like this lives equals lives minus one or lives gets lives minus one this process of updating a variable is called variable reassignment understanding how variables are set and updated is a powerful key that unlocks many insights into programming all good programmers can look at a piece of code and use what they know to trace through it logically let's try with an example that's sometimes a little bit tricky to newcomers check out this bit of code in the first two lines you can see that we have created two new variables uh a and a b and assign them both initial values of two in the next two lines we've updated their values so that they each get the value of a plus b at first glance you might think that a and b are both going to end up the same but they won't the key is to recognize that the value of a is being updated on the line just before b is changed so what's being computed will change as well let's trace it out when a gets a plus b this will take the current values of a and b and add them together the result of the equation is stored in the value of a so as soon as this line of code is run the value of a has changed to 4. with the next line of code b gets a plus b the sum of a plus b is now 6. this new number gets stored in the value of b so the final outcome of the code looks like this variables are an extremely powerful tool in computer programming by using variables you can harness the power of your computer's memory to dynamically track important information while your program is running now let's get some practice you
