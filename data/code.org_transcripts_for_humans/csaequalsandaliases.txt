With timestamps:

00:00 - [Music]
00:10 - sometimes we want to know if multiple
00:12 - reference variables are pointing to the
00:14 - same thing
00:16 - my sibling and i share a pair of shoes
00:19 - when i'm wearing them they're my shoes
00:21 - when my sibling is wearing them and
00:23 - their shoes
00:24 - were both referring to the same pair of
00:27 - shoes
00:28 - my shoes and their shoes are two aliases
00:31 - for one object
00:33 - an alias is when two reference variables
00:36 - point to the same object
00:39 - let's say we have a su class
00:44 - it has an instant variable for size
00:48 - let's create a shoe object called first
00:50 - shoe
00:51 - and another shoe object called second
00:54 - issue
00:55 - both are solid 10.
00:58 - when we use the equals operator with
01:00 - these two objects
01:04 - it checks if the first two and secondary
01:06 - variables point to the same memory
01:08 - location
01:10 - in this case the expression returns
01:12 - false because first sue and second issue
01:15 - are two different objects
01:18 - since these are objects we can try
01:20 - comparing them using a method
01:22 - remember the string method
01:24 - the object class also has something
01:26 - called the equals method
01:29 - the equals method can be used to compare
01:32 - two objects for equality
01:35 - the equals method in the object class
01:37 - returns true if two reference variables
01:40 - are aliases
01:41 - let's compare first two
01:44 - and seconds
01:46 - we'll call the equals method on first
01:48 - suit then we pass the objects we want to
01:51 - compare to as the argument in this case
01:54 - we will pass the second shift
01:56 - when we compare first suit and second
01:58 - suit using the equals method
02:02 - it will return false
02:05 - first sioux and second two are not
02:07 - aliases because they do not point to the
02:09 - same objects
02:11 - if we give first sue an alias called
02:14 - thirdsu then we can use the equals
02:16 - method to compare the two it will return
02:19 - true because they are two differently
02:21 - for a single object
02:25 - anything is helpful for when we want to
02:27 - know if multiple reference variables
02:29 - point to the same object
02:32 - however this is not helpful for when we
02:34 - want to know if one object's theta is
02:36 - the same as another's but just like the
02:39 - two string method we can override the
02:42 - equals method
02:44 - [Music]
02:52 - you

Cleaned transcript:

sometimes we want to know if multiple reference variables are pointing to the same thing my sibling and i share a pair of shoes when i'm wearing them they're my shoes when my sibling is wearing them and their shoes were both referring to the same pair of shoes my shoes and their shoes are two aliases for one object an alias is when two reference variables point to the same object let's say we have a su class it has an instant variable for size let's create a shoe object called first shoe and another shoe object called second issue both are solid 10. when we use the equals operator with these two objects it checks if the first two and secondary variables point to the same memory location in this case the expression returns false because first sue and second issue are two different objects since these are objects we can try comparing them using a method remember the string method the object class also has something called the equals method the equals method can be used to compare two objects for equality the equals method in the object class returns true if two reference variables are aliases let's compare first two and seconds we'll call the equals method on first suit then we pass the objects we want to compare to as the argument in this case we will pass the second shift when we compare first suit and second suit using the equals method it will return false first sioux and second two are not aliases because they do not point to the same objects if we give first sue an alias called thirdsu then we can use the equals method to compare the two it will return true because they are two differently for a single object anything is helpful for when we want to know if multiple reference variables point to the same object however this is not helpful for when we want to know if one object's theta is the same as another's but just like the two string method we can override the equals method you
