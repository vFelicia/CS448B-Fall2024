With timestamps:

00:00 - [Music]
00:10 - one advantage of having these wrapper
00:12 - classes is that they contain some useful
00:15 - built-in variables and methods
00:18 - the integer class for example has two
00:20 - useful constants
00:22 - integer dot min underscore value
00:25 - and integer.max underscore
00:29 - these represent the smallest and largest
00:32 - values that an integer can hold
00:36 - the integer and double classes also
00:38 - contain static methods used to convert
00:41 - strings into
00:42 - numbers these are called directly from
00:45 - the class
00:46 - the integer dot parse and method
00:50 - returns the primitive int value of its
00:53 - string parameter
00:55 - the double dot parse double method also
00:58 - takes in a string parameter
01:00 - and returns its value as a primitive
01:02 - double
01:04 - another interesting consideration when
01:06 - it comes to wrapper classes is auto
01:08 - boxing and unboxing
01:11 - autoboxing is the automatic conversion
01:14 - between the primitive types and their
01:16 - corresponding wrapper classes
01:19 - when we declare a variable of type
01:21 - integer and assign it the primitive
01:23 - value 13
01:25 - java does auto boxing to convert 13 to
01:28 - an integer object
01:29 - [Music]
01:31 - unboxing is the opposite
01:33 - it is when the conversion goes the other
01:35 - way and an integer object becomes a
01:38 - primitive type int
01:39 - [Music]
01:41 - these allow us to use each primitive
01:43 - type and its corresponding wrapper class
01:45 - interchangeably
01:46 - [Music]
01:48 - java performs auto boxing and unboxing
01:51 - only when the wrapper class constructor
01:53 - is not called
01:57 - wrapper classes are used to convert
01:59 - primitive data types to objects
02:02 - by using wrapper classes we get access
02:04 - to their constants and methods
02:08 - [Music]

Cleaned transcript:

one advantage of having these wrapper classes is that they contain some useful builtin variables and methods the integer class for example has two useful constants integer dot min underscore value and integer.max underscore these represent the smallest and largest values that an integer can hold the integer and double classes also contain static methods used to convert strings into numbers these are called directly from the class the integer dot parse and method returns the primitive int value of its string parameter the double dot parse double method also takes in a string parameter and returns its value as a primitive double another interesting consideration when it comes to wrapper classes is auto boxing and unboxing autoboxing is the automatic conversion between the primitive types and their corresponding wrapper classes when we declare a variable of type integer and assign it the primitive value 13 java does auto boxing to convert 13 to an integer object unboxing is the opposite it is when the conversion goes the other way and an integer object becomes a primitive type int these allow us to use each primitive type and its corresponding wrapper class interchangeably java performs auto boxing and unboxing only when the wrapper class constructor is not called wrapper classes are used to convert primitive data types to objects by using wrapper classes we get access to their constants and methods
