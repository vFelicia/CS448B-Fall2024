With timestamps:

00:08 - ﻿[Music]
Hi, my name is Mia Gil-Epner. I’m  
00:10 - majoring in computer science at UC Berkeley, 
and I work for the Department of Defense,  
00:15 - where I try to keep information safe. 
The internet is an open and public system.  
00:21 - We all send and receive information 
over shared wires and connections. 
 
00:26 - But even though it’s an open system we 
still exchange a lot of private data,  
00:30 - things like credit card numbers, bank 
information, passwords, and emails. 
 
00:35 - So how is all this private stuff kept secret? Data 
of any kind can be kept secret through a process  
00:41 - known as encryption, the scrambling or changing 
of the message to hide the original text. 
 
00:46 - Now decryption is the process of unscrambling 
that message to make it readable. 
 
00:51 - This is a simple idea, and people have been doing 
it for centuries. One of the first well-known  
00:56 - methods of encryption was Caesar’s Cipher, 
named after Julius Caesar, a Roman general  
01:02 - who encrypted his military commands to make sure 
that if a message was intercepted by enemies,  
01:07 - they wouldn’t be able to read it.
Caesar’s Cipher is an algorithm that substitutes  
01:12 - each letter in the original message with a letter 
a certain number of steps down the alphabet. 
 
01:17 - If the number is something only the sender and 
receiver know, then it’s called the key. It  
01:22 - allows the reader to unlock the secret message. 
For example, if your original message is “hello,”  
01:30 - then using the Caesar’s Cipher algorithm with a 
key of 5, the encrypted message would be this. 
 
01:39 - To decrypt the message, the recipient would 
simply use the key to reverse the process. 
 
01:45 - But there’s a big problem with Caesar’s Cipher. 
Anybody can easily break or crack the encrypted  
01:51 - message by trying every possible key. In the 
English alphabet, there are only 26 letters,  
01:56 - which means you’d only need to try at 
most 26 keys to decrypt the message.
 
02:02 - Now trying 26 possible keys isn’t very 
hard. It would take at most an hour to do.  
02:08 - So let’s make it harder. 
Instead of shifting every letter  
02:11 - by the same amount, let’s shift each letter by a 
different amount. In this example, a 10-digit key  
02:18 - shows how many positions each successive letter 
will be changed to encrypt a longer message. 
 
02:26 - Guessing this key would be really 
hard. Using 10-digit encryption,  
02:30 - there could be 10 billion possible key solutions.
 
02:34 - Obviously, that’s more than any human could 
ever solve. It would take many centuries. 
 
02:39 - But an average computer today would take just a 
few seconds to try all 10 billion possibilities. 
 
02:45 - So in a modern world where the bad guys are 
armed with computers instead of pencils,  
02:50 - how can you encrypt messages so securely 
that they’re too hard to crack? Now too hard  
02:57 - means that there are too many possibilities 
to compute in a reasonable amount of time. 
 
03:02 - Today’s secure communications are encrypted  
03:06 - using 256-bit keys. That means a bad guy’s 
computer that intercepts your message would  
03:11 - need to try this many possible options until they 
discover the key and crack the message. [Music] 
 
03:19 - Even if you had a hundred thousand supercomputers 
and each of them was able to try a million billion  
03:26 - keys every second, it would take trillions of 
trillions of trillions of years to try every  
03:31 - option, just to crack a single message 
protected with 256-bit encryption. 
 
03:37 - Of course, computer chips get twice as fast and 
half the size every year or so. If that pace of  
03:43 - exponential progress continues, today’s impossible 
problems will be solvable just a few hundred years  
03:49 - in the future, and 256 bits won’t 
be enough to be safe. In fact,  
03:54 - we’ve already had to increase the standard key 
length to keep up with the speed of computers. 
 
04:00 - The good news is, using a longer key doesn’t 
make encrypting messages much harder but it  
04:05 - exponentially increases the number of guesses 
that it would take to crack a cipher. 
 
04:11 - When the sender and the receiver share the 
same key to scramble and unscramble a message,  
04:16 - it’s called symmetric encryption. With 
symmetric encryption, like Caesar’s Cipher,  
04:22 - the secret key has to be agreed on ahead 
of time by two people in private. 
 
04:27 - That’s great for people, but the internet 
is open and public so it’s impossible  
04:32 - for two computers to “meet” in private to agree 
on a secret key. Instead, computers use asymmetric  
04:39 - keys: a public key that can be exchanged with 
anybody and a private key that is not shared. 
 
04:46 - The public key is used to encrypt data and 
anybody can use it to create a secret message,  
04:52 - but the secret can only be decrypted by a 
computer with access to the private key. 
 
04:59 - How this works is with some math that we won’t get 
into right now. Think of it this way. Imagine that  
05:04 - you have a personal mailbox where anybody can 
deposit mail, but they need a key to do it. 
 
05:10 - Now you can make many copies of the deposit key 
and send one to your friend or even just make it  
05:14 - publicly available. Your friend or even a stranger 
can use the public key to access your deposit slot  
05:20 - and drop a message in, but only you can open 
the mailbox with your private key to access all  
05:26 - of the secret messages you’ve received. 
And you can send a secure message back to  
05:30 - your friend by using the public deposit 
key to their mailbox. This way people  
05:35 - can exchange secure messages without 
ever needing to agree on a private key.  
05:41 - Public key cryptography is the foundation of all 
secure messaging on the open internet, including  
05:47 - the security protocols known as SSL and TLS, 
which protect us when we’re browsing the web. 
 
05:54 - Your computer uses this today 
anytime you see the little lock  
05:58 - or the letters https in your browser’s 
address bar. This means your computer  
06:03 - is using public key encryption to exchange 
data securely with the website you’re on. 
 
06:09 - As more and more people get on the internet, 
more and more private data will be transmitted  
06:14 - and the need to secure that data 
will be even more important.
 
06:18 - And as computers become faster and faster, we’ll 
have to develop new ways to make encryption too  
06:24 - hard for computers to break. This is what I do 
with my work and it’s always changing. [Music]

Cleaned transcript:

﻿ Hi, my name is Mia GilEpner. I’m majoring in computer science at UC Berkeley, and I work for the Department of Defense, where I try to keep information safe. The internet is an open and public system. We all send and receive information over shared wires and connections. But even though it’s an open system we still exchange a lot of private data, things like credit card numbers, bank information, passwords, and emails. So how is all this private stuff kept secret? Data of any kind can be kept secret through a process known as encryption, the scrambling or changing of the message to hide the original text. Now decryption is the process of unscrambling that message to make it readable. This is a simple idea, and people have been doing it for centuries. One of the first wellknown methods of encryption was Caesar’s Cipher, named after Julius Caesar, a Roman general who encrypted his military commands to make sure that if a message was intercepted by enemies, they wouldn’t be able to read it. Caesar’s Cipher is an algorithm that substitutes each letter in the original message with a letter a certain number of steps down the alphabet. If the number is something only the sender and receiver know, then it’s called the key. It allows the reader to unlock the secret message. For example, if your original message is “hello,” then using the Caesar’s Cipher algorithm with a key of 5, the encrypted message would be this. To decrypt the message, the recipient would simply use the key to reverse the process. But there’s a big problem with Caesar’s Cipher. Anybody can easily break or crack the encrypted message by trying every possible key. In the English alphabet, there are only 26 letters, which means you’d only need to try at most 26 keys to decrypt the message. Now trying 26 possible keys isn’t very hard. It would take at most an hour to do. So let’s make it harder. Instead of shifting every letter by the same amount, let’s shift each letter by a different amount. In this example, a 10digit key shows how many positions each successive letter will be changed to encrypt a longer message. Guessing this key would be really hard. Using 10digit encryption, there could be 10 billion possible key solutions. Obviously, that’s more than any human could ever solve. It would take many centuries. But an average computer today would take just a few seconds to try all 10 billion possibilities. So in a modern world where the bad guys are armed with computers instead of pencils, how can you encrypt messages so securely that they’re too hard to crack? Now too hard means that there are too many possibilities to compute in a reasonable amount of time. Today’s secure communications are encrypted using 256bit keys. That means a bad guy’s computer that intercepts your message would need to try this many possible options until they discover the key and crack the message. Even if you had a hundred thousand supercomputers and each of them was able to try a million billion keys every second, it would take trillions of trillions of trillions of years to try every option, just to crack a single message protected with 256bit encryption. Of course, computer chips get twice as fast and half the size every year or so. If that pace of exponential progress continues, today’s impossible problems will be solvable just a few hundred years in the future, and 256 bits won’t be enough to be safe. In fact, we’ve already had to increase the standard key length to keep up with the speed of computers. The good news is, using a longer key doesn’t make encrypting messages much harder but it exponentially increases the number of guesses that it would take to crack a cipher. When the sender and the receiver share the same key to scramble and unscramble a message, it’s called symmetric encryption. With symmetric encryption, like Caesar’s Cipher, the secret key has to be agreed on ahead of time by two people in private. That’s great for people, but the internet is open and public so it’s impossible for two computers to “meet” in private to agree on a secret key. Instead, computers use asymmetric keys a public key that can be exchanged with anybody and a private key that is not shared. The public key is used to encrypt data and anybody can use it to create a secret message, but the secret can only be decrypted by a computer with access to the private key. How this works is with some math that we won’t get into right now. Think of it this way. Imagine that you have a personal mailbox where anybody can deposit mail, but they need a key to do it. Now you can make many copies of the deposit key and send one to your friend or even just make it publicly available. Your friend or even a stranger can use the public key to access your deposit slot and drop a message in, but only you can open the mailbox with your private key to access all of the secret messages you’ve received. And you can send a secure message back to your friend by using the public deposit key to their mailbox. This way people can exchange secure messages without ever needing to agree on a private key. Public key cryptography is the foundation of all secure messaging on the open internet, including the security protocols known as SSL and TLS, which protect us when we’re browsing the web. Your computer uses this today anytime you see the little lock or the letters https in your browser’s address bar. This means your computer is using public key encryption to exchange data securely with the website you’re on. As more and more people get on the internet, more and more private data will be transmitted and the need to secure that data will be even more important. And as computers become faster and faster, we’ll have to develop new ways to make encryption too hard for computers to break. This is what I do with my work and it’s always changing.
