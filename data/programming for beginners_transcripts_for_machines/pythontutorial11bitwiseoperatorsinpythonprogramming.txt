hey what's up guys welcome to another video in which we are going to learn about bitwise operators in Python Programming so guys The bitwise Operators act on operands as if they were strings of binary digits so they operate a bit by bit hence this is the name that is the bitwise operator so first of all let us understand what are the binary numbers so over here for example as you can see the number one is being represented in the binary form as 0 and 1. now before this the number 0 it will be represented as 0 0 that means the binary form can only have two types of digits that is either 0 or 1 so 0 can be represented as all numbers being 0 then 1 can be represented as the rightmost number can become 1 and the left number is 0 over here now for the number 2 what will happen is this number that is 1 over here on the right hand side it will go on the left hand side so this 0 has become 1 over here and this one will become 0 and that is what we can see over here that is 1 0 it is the a binary form of the number that is 2 and then the next time this 0 will be converted to 1 so you can see 1 1 as the binary representation of the number 3 and so on the other numbers are also being displayed over here in the form of binary representation now guys as the name suggests the bitwise operators operate on these kinds of numbers over here so let's say x it is equal to 10 which is an integer over here it will be represented as this number in the binary form and why it is equal to 4 which is represented as this number in the binary form over here it is represented as 1 0 0 as you can see over here and on the left hand side we can prefix any number of zeros that we want so basically what are the different types of bitwise operator as you can see we have end over here so bitwise and what this will do is if we do x and y basically all these digits that is first 0 over here it will be kind of multiplied with the first digit of this number over here so it will be 0 in this case so for first four digits will be 0 because all the digits in both the numbers are 0. now over here this one it will be multiplied by 0 over here and that is why we will get 0 over here in this case and then this 0 will be multiplied by 1 over here so again we will get 0 and since the other two numbers are already 0 over here we will get 0. so this is how the bitwise and operator will work it will simply multiply the binary digits of the number now what happens in the bitwise or it will be the addition of those binary numbers over here so as you can see we have 1 0 1 0 so 1 plus 0 the result will be 1 over here and that is what is being displayed as you can see now 0 plus 1 will be again 1 over here then 1 plus 0 again it will be 1 over here and the next number that is 0 and 0 it will be 0 over here now guys what if 1 is encountered on the left hand side and on the right hand side as well so since binary numbers can only be represented by two digits that is 0 and 1 so 1 plus 1 will be 1 in this case and guys similarly we will say see what will be the result of the other bitwise operators so let us move to the vs code now over here let us say x it is equal to 10 and let's say y it is equal to 4 over here and now let us print all the results of the bitwise operations over here so we will simply have the print function and then we will say x and then bitwise and operator followed by y over here similarly we will have other operators that is bitwise or and then we have bitwise not bitwise xor bit wise right shift and then we have left shift so over here I'll simply copy and paste this line of code over here now one by one I will change the operator over here it will be bitwise or so we use this symbol over here and for bitwise not we have to use only one variable over here so we will be using X in this case and this is the bit Y is not over here for bitwise or we use the raise to symbol over here so X raised to Y and then for right shift and left shift we have to use the greater than symbol and then some particular number to Define how many times we want to shift the digit so let's say we want to shift two times over here and then the left shift as well we want to shift two times over here so Guys these are certain bitwise operators as you can see so let me just save this file and try running this code to see the results of all these bitwise operators people so as you can see we are getting the results over here so first of all it is displaying 0 that's because we have seen the result over here which was all zero numbers and that is why we are getting the numerical number as 0 over here in the next case that is bitwise or we are getting this number which is represented as 14 in the decimal form so that is what we are getting that is 14 over here now not of X so basically not of X it is minus 11 over here and that is what we are getting that is negative 11 and then X X or Y so over here the result is 14 and that is what we are getting that is 14 over here guys all these results are in decimal format if you try converting these decimal format numbers into binary numbers you will get all these results that are being displayed inside the parenthesis over here the bitwise right shift number so basically we are reducing the number so from 10 the number is being reduced to 2 over here as you can see this is the binary format and the same thing is being displayed as the result over here that is 2 and then when we shift on the left hand side side we are increasing the number so basically we are getting the result as 40 from 10 so as you can see This is 40 over here now guys in the right shift what happens is we are prefixing more zeros on the left hand side so basically this one zero will go to the right hand side and only this one zero will remain as you can see over here this 1 0 is remaining whereas when we do left shift after this one zero one zero two more zeros will be appended and that is what we can see over here that is 1 0 and then after this one zero and these two zeros were appended on the right and that is why the number has increased so Guys these bitwise operators are very important when you learn about mathematics and mathematical problems to be solved and as far as competitive programming is concerned many problems can be solved by using these bitwise operators so guys practice on your own so that on different inputs you get the different outputs please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is membership operators in Python Programming so stay tuned