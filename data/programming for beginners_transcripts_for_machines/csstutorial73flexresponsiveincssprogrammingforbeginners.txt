so now we will see Flex responsive in CSS so guys basically we are going to check the example of a responsive design over here with the help of the CSS flexbox model and we are going to use the flex Direction in this case so guys inside the flexbox model we are going to update the flex direction to column when the screen size reduces to 400 pixels or below so guys by default we are going to keep the flex direction of the flex box as row over here for the desktop computers and then when the screen size reduces to let's say the size of the tablet or the smartphone over here which can be below 400 pixels we are going to change the flex direction to column so guys let us move to the vs code over here and let me just remove the previous lines of code that we had written in the HTML and the CSS files over here now guys simply we are going to have the diff tag with the class container over here and then apart from this we are going to have two diff tags inside this class container the first diff tag is having the content that is one over here and the second diff tag is having the content that is two we are also going to have the ID that is one and two for both these div tags over here so guys this is the content that is div 1 and div two which are having the IDS one and two over here inside the class container now guys we are going to make this diff tag that is having the class container s the flx container over here which is one of the first important step as far as the flexbox model is concerned so simply we are going to copy this class name over here and inside the style. CSS file for this container class we are going to make the display it is equal to flag in this case and let us have the background color as yellow color over here so guys simply we have the yellow color as the background color in this case let me just save this file now and try reloading this page on the browser so as you can see we have the content that is one and two over here now guys let us provide certain CSS properties for this Flex items as well so simply we will be using the do container class over here and then inside this we are going to provide the diff tags in this case now guys let us provide the padding as 20 pixels for both these diff tags over here and then apart from this we are also going to provide the background color as black color let me just save this file now and try reloading this page as you can see we have the diff tags that are getting displayed over here but we cannot see the content that's because the color of the text is black color and the background color is also black so let me just set the color to white in this case which is the text color so as you can see we are getting one and two over here now guys let us provide the CSS property that is flex in such a way that both these Flex items takes the entire width of this Flex container over here so what we can do is simply we can provide the flex value it is equal to one in this case so both the diff tags are having Flex equal to 1 so the entire remaining space will be taken by both the diff tags so let me just reload this page as you can see we have one and two over over here let us change the background color of this first element that is the first diff tag to some other color over here so that we can identify both the diff tags separately so what we can do is simply we will use the ID of this diff tag that is one over here and we will use the hash character in this case and then we will be using the background color and we will provide the value as blue over here for the background color CSS property let me just save this file now and try reloading this page as you can see we have the blue color is the background color for the first diff tag and the black color as the second diff tag over here now guys if you notice both the diff tags are getting displayed in the horizontal direction that is by default the flex direction is Row in this case so let us open the console over here so that we can increase or decrease the width of the screen so as you can see the width is getting displayed over here on the top right hand side when we decrease and increase the width over here so guys basically this is width multiplied by height in pixels that is getting display play in this case now guys what we will do is we want the 400 pixels to be the threshold value and below this 400 pixels we want the second element to be displayed below this first element so that on smartphone or the tablet devices the HTML elements are displayed in the vertical Direction over here so guys what we have to do is we can use the media query over here by default the flex container is having the flex direction as row Direction but when the width of the screen is reduced to 400 pix pixels or below we want the flex direction to be the column Direction over here so simply we are going to use the media query in this case so we use at theate character followed by media screen over here and then apart from this we have the end keyword and then we provide the max with CSS property inside the parenthesis now guys the max with CSS property should have the value of 400 pixels because that is the threshold value that we are looking for and then when the width is below 400 pixels we want this Flex container to have the flex direction as column Direction over here so simply we are going to use this class name that is container in this case and then we will simply change the flex direction to column over here so guys this is the way that we can change the flex direction from row to column based on the max width of the screen device so let me just save this file now and try reloading this page once again on the browser notice that previously we were not getting this second item below the first item over here when we increased or decreased the width of the screen now guys when we decrease the width of the screen now after reloading the page currently it is 404 pixels when we reduce it to below 400 pixels as you can see the second element is now getting displayed below the first element over here and in this way you can easily create the responsive design for your web page based on your project requirements now guys when we increase the width of the screen to more than 400 pixels again the flex direction is now set to row Direction and the HTML elements are now getting displayed from left to right and then when we reduce the screen width now the second element is going below the first element over here so guys in this way you can easily create the responsive web design based on the flexbox model and also the media queries that you can use based on the different screen devices so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is creating navigation bar using flexbox in CSS so stay tuned